<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27043.c" pos:tabs="8"><function pos:start="1:1" pos:end="265:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">opt_output_file</name><parameter_list pos:start="1:28" pos:end="1:49">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:40"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:48">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="265:1">{<block_content pos:start="5:5" pos:end="263:33">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>, <decl pos:start="7:14" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:22">use_video</name></decl>, <decl pos:start="7:25" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:33">use_audio</name></decl>, <decl pos:start="7:36" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:36" pos:end="7:47">use_subtitle</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:23">input_has_video</name></decl>, <decl pos:start="9:26" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:40">input_has_audio</name></decl>, <decl pos:start="9:43" pos:end="9:60"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:43" pos:end="9:60">input_has_subtitle</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22">AVFormatParameters</name></type> <name pos:start="11:24" pos:end="11:29">params</name></decl>, <decl pos:start="11:32" pos:end="11:44"><type ref="prev" pos:start="11:5" pos:end="11:22"><modifier pos:start="11:32" pos:end="11:32">*</modifier></type><name pos:start="11:33" pos:end="11:34">ap</name> <init pos:start="11:36" pos:end="11:44">= <expr pos:start="11:38" pos:end="11:44"><operator pos:start="11:38" pos:end="11:38">&amp;</operator><name pos:start="11:39" pos:end="11:44">params</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">AVOutputFormat</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:32">file_oformat</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:27"><if pos:start="17:5" pos:end="19:27">if <condition pos:start="17:8" pos:end="17:31">(<expr pos:start="17:9" pos:end="17:30"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:30"><name pos:start="17:10" pos:end="17:15">strcmp</name><argument_list pos:start="17:16" pos:end="17:30">(<argument pos:start="17:17" pos:end="17:24"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:24">filename</name></expr></argument>, <argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><literal type="string" pos:start="17:27" pos:end="17:29">"-"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:27"><block_content pos:start="19:9" pos:end="19:27">

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:16">filename</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="string" pos:start="19:20" pos:end="19:26">"pipe:"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:6">oc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:33"><name pos:start="23:10" pos:end="23:31">avformat_alloc_context</name><argument_list pos:start="23:32" pos:end="23:33">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:11">oc</name></expr>)</condition> <block pos:start="25:14" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:23">

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><call pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:19">print_error</name><argument_list pos:start="27:20" pos:end="27:46">(<argument pos:start="27:21" pos:end="27:28"><expr pos:start="27:21" pos:end="27:28"><name pos:start="27:21" pos:end="27:28">filename</name></expr></argument>, <argument pos:start="27:31" pos:end="27:45"><expr pos:start="27:31" pos:end="27:45"><call pos:start="27:31" pos:end="27:45"><name pos:start="27:31" pos:end="27:37">AVERROR</name><argument_list pos:start="27:38" pos:end="27:45">(<argument pos:start="27:39" pos:end="27:44"><expr pos:start="27:39" pos:end="27:44"><name pos:start="27:39" pos:end="27:44">ENOMEM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><call pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:19">ffmpeg_exit</name><argument_list pos:start="29:20" pos:end="29:22">(<argument pos:start="29:21" pos:end="29:21"><expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="63:5"><if pos:start="35:5" pos:end="49:5">if <condition pos:start="35:8" pos:end="35:26">(<expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:25">last_asked_format</name></expr>)</condition> <block pos:start="35:28" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:33">

        <expr_stmt pos:start="37:9" pos:end="37:70"><expr pos:start="37:9" pos:end="37:69"><name pos:start="37:9" pos:end="37:20">file_oformat</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:69"><name pos:start="37:24" pos:end="37:38">av_guess_format</name><argument_list pos:start="37:39" pos:end="37:69">(<argument pos:start="37:40" pos:end="37:56"><expr pos:start="37:40" pos:end="37:56"><name pos:start="37:40" pos:end="37:56">last_asked_format</name></expr></argument>, <argument pos:start="37:59" pos:end="37:62"><expr pos:start="37:59" pos:end="37:62"><name pos:start="37:59" pos:end="37:62">NULL</name></expr></argument>, <argument pos:start="37:65" pos:end="37:68"><expr pos:start="37:65" pos:end="37:68"><name pos:start="37:65" pos:end="37:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:26">(<expr pos:start="39:13" pos:end="39:25"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:25">file_oformat</name></expr>)</condition> <block pos:start="39:28" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:27">

            <expr_stmt pos:start="41:13" pos:end="41:113"><expr pos:start="41:13" pos:end="41:112"><call pos:start="41:13" pos:end="41:112"><name pos:start="41:13" pos:end="41:19">fprintf</name><argument_list pos:start="41:20" pos:end="41:112">(<argument pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:26"><name pos:start="41:21" pos:end="41:26">stderr</name></expr></argument>, <argument pos:start="41:29" pos:end="41:92"><expr pos:start="41:29" pos:end="41:92"><literal type="string" pos:start="41:29" pos:end="41:92">"Requested output format '%s' is not a suitable output format\n"</literal></expr></argument>, <argument pos:start="41:95" pos:end="41:111"><expr pos:start="41:95" pos:end="41:111"><name pos:start="41:95" pos:end="41:111">last_asked_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:27"><expr pos:start="43:13" pos:end="43:26"><call pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:23">ffmpeg_exit</name><argument_list pos:start="43:24" pos:end="43:26">(<argument pos:start="43:25" pos:end="43:25"><expr pos:start="43:25" pos:end="43:25"><literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:25">last_asked_format</name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:32">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="63:5">else <block pos:start="49:12" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:9">

        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:20">file_oformat</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <call pos:start="51:24" pos:end="51:60"><name pos:start="51:24" pos:end="51:38">av_guess_format</name><argument_list pos:start="51:39" pos:end="51:60">(<argument pos:start="51:40" pos:end="51:43"><expr pos:start="51:40" pos:end="51:43"><name pos:start="51:40" pos:end="51:43">NULL</name></expr></argument>, <argument pos:start="51:46" pos:end="51:53"><expr pos:start="51:46" pos:end="51:53"><name pos:start="51:46" pos:end="51:53">filename</name></expr></argument>, <argument pos:start="51:56" pos:end="51:59"><expr pos:start="51:56" pos:end="51:59"><name pos:start="51:56" pos:end="51:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:26">(<expr pos:start="53:13" pos:end="53:25"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:25">file_oformat</name></expr>)</condition> <block pos:start="53:28" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:27">

            <expr_stmt pos:start="55:13" pos:end="57:30"><expr pos:start="55:13" pos:end="57:29"><call pos:start="55:13" pos:end="57:29"><name pos:start="55:13" pos:end="55:19">fprintf</name><argument_list pos:start="55:20" pos:end="57:29">(<argument pos:start="55:21" pos:end="55:26"><expr pos:start="55:21" pos:end="55:26"><name pos:start="55:21" pos:end="55:26">stderr</name></expr></argument>, <argument pos:start="55:29" pos:end="55:80"><expr pos:start="55:29" pos:end="55:80"><literal type="string" pos:start="55:29" pos:end="55:80">"Unable to find a suitable output format for '%s'\n"</literal></expr></argument>,

                    <argument pos:start="57:21" pos:end="57:28"><expr pos:start="57:21" pos:end="57:28"><name pos:start="57:21" pos:end="57:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><call pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:23">ffmpeg_exit</name><argument_list pos:start="59:24" pos:end="59:26">(<argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:6">oc</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:15">oformat</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:30">file_oformat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:61"><expr pos:start="69:5" pos:end="69:60"><call pos:start="69:5" pos:end="69:60"><name pos:start="69:5" pos:end="69:14">av_strlcpy</name><argument_list pos:start="69:15" pos:end="69:60">(<argument pos:start="69:16" pos:end="69:27"><expr pos:start="69:16" pos:end="69:27"><name pos:start="69:16" pos:end="69:27"><name pos:start="69:16" pos:end="69:17">oc</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:27">filename</name></name></expr></argument>, <argument pos:start="69:30" pos:end="69:37"><expr pos:start="69:30" pos:end="69:37"><name pos:start="69:30" pos:end="69:37">filename</name></expr></argument>, <argument pos:start="69:40" pos:end="69:59"><expr pos:start="69:40" pos:end="69:59"><sizeof pos:start="69:40" pos:end="69:59">sizeof<argument_list pos:start="69:46" pos:end="69:59">(<argument pos:start="69:47" pos:end="69:58"><expr pos:start="69:47" pos:end="69:58"><name pos:start="69:47" pos:end="69:58"><name pos:start="69:47" pos:end="69:48">oc</name><operator pos:start="69:49" pos:end="69:50">-&gt;</operator><name pos:start="69:51" pos:end="69:58">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="153:5"><if pos:start="73:5" pos:end="91:5">if <condition pos:start="73:8" pos:end="75:45">(<expr pos:start="73:9" pos:end="75:44"><operator pos:start="73:9" pos:end="73:9">!</operator><call pos:start="73:10" pos:end="73:42"><name pos:start="73:10" pos:end="73:15">strcmp</name><argument_list pos:start="73:16" pos:end="73:42">(<argument pos:start="73:17" pos:end="73:34"><expr pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:28">file_oformat</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:34">name</name></name></expr></argument>, <argument pos:start="73:37" pos:end="73:41"><expr pos:start="73:37" pos:end="73:41"><literal type="string" pos:start="73:37" pos:end="73:41">"ffm"</literal></expr></argument>)</argument_list></call> <operator pos:start="73:44" pos:end="73:45">&amp;&amp;</operator>

        <call pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:19">av_strstart</name><argument_list pos:start="75:20" pos:end="75:44">(<argument pos:start="75:21" pos:end="75:28"><expr pos:start="75:21" pos:end="75:28"><name pos:start="75:21" pos:end="75:28">filename</name></expr></argument>, <argument pos:start="75:31" pos:end="75:37"><expr pos:start="75:31" pos:end="75:37"><literal type="string" pos:start="75:31" pos:end="75:37">"http:"</literal></expr></argument>, <argument pos:start="75:40" pos:end="75:43"><expr pos:start="75:40" pos:end="75:43"><name pos:start="75:40" pos:end="75:43">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:47" pos:end="91:5">{<block_content pos:start="81:9" pos:end="89:9">

        <comment type="block" pos:start="77:9" pos:end="79:38">/* special case for files sent to ffserver: we get the stream

           parameters from ffserver */</comment>

        <decl_stmt pos:start="81:9" pos:end="81:54"><decl pos:start="81:9" pos:end="81:53"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:15">err</name> <init pos:start="81:17" pos:end="81:53">= <expr pos:start="81:19" pos:end="81:53"><call pos:start="81:19" pos:end="81:53"><name pos:start="81:19" pos:end="81:39">read_ffserver_streams</name><argument_list pos:start="81:40" pos:end="81:53">(<argument pos:start="81:41" pos:end="81:42"><expr pos:start="81:41" pos:end="81:42"><name pos:start="81:41" pos:end="81:42">oc</name></expr></argument>, <argument pos:start="81:45" pos:end="81:52"><expr pos:start="81:45" pos:end="81:52"><name pos:start="81:45" pos:end="81:52">filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:20">(<expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:15">err</name> <operator pos:start="83:17" pos:end="83:17">&lt;</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>)</condition> <block pos:start="83:22" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:27">

            <expr_stmt pos:start="85:13" pos:end="85:39"><expr pos:start="85:13" pos:end="85:38"><call pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:23">print_error</name><argument_list pos:start="85:24" pos:end="85:38">(<argument pos:start="85:25" pos:end="85:32"><expr pos:start="85:25" pos:end="85:32"><name pos:start="85:25" pos:end="85:32">filename</name></expr></argument>, <argument pos:start="85:35" pos:end="85:37"><expr pos:start="85:35" pos:end="85:37"><name pos:start="85:35" pos:end="85:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:27"><expr pos:start="87:13" pos:end="87:26"><call pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:23">ffmpeg_exit</name><argument_list pos:start="87:24" pos:end="87:26">(<argument pos:start="87:25" pos:end="87:25"><expr pos:start="87:25" pos:end="87:25"><literal type="number" pos:start="87:25" pos:end="87:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="153:5">else <block pos:start="91:12" pos:end="153:5">{<block_content pos:start="93:9" pos:end="151:36">

        <expr_stmt pos:start="93:9" pos:end="93:104"><expr pos:start="93:9" pos:end="93:103"><name pos:start="93:9" pos:end="93:17">use_video</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:45"><name pos:start="93:21" pos:end="93:32">file_oformat</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:45">video_codec</name></name> <operator pos:start="93:47" pos:end="93:48">!=</operator> <name pos:start="93:50" pos:end="93:62">CODEC_ID_NONE</name> <operator pos:start="93:64" pos:end="93:65">||</operator> <name pos:start="93:67" pos:end="93:83">video_stream_copy</name> <operator pos:start="93:85" pos:end="93:86">||</operator> <name pos:start="93:88" pos:end="93:103">video_codec_name</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:104"><expr pos:start="95:9" pos:end="95:103"><name pos:start="95:9" pos:end="95:17">use_audio</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:45"><name pos:start="95:21" pos:end="95:32">file_oformat</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:45">audio_codec</name></name> <operator pos:start="95:47" pos:end="95:48">!=</operator> <name pos:start="95:50" pos:end="95:62">CODEC_ID_NONE</name> <operator pos:start="95:64" pos:end="95:65">||</operator> <name pos:start="95:67" pos:end="95:83">audio_stream_copy</name> <operator pos:start="95:85" pos:end="95:86">||</operator> <name pos:start="95:88" pos:end="95:103">audio_codec_name</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:116"><expr pos:start="97:9" pos:end="97:115"><name pos:start="97:9" pos:end="97:20">use_subtitle</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:51"><name pos:start="97:24" pos:end="97:35">file_oformat</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:51">subtitle_codec</name></name> <operator pos:start="97:53" pos:end="97:54">!=</operator> <name pos:start="97:56" pos:end="97:68">CODEC_ID_NONE</name> <operator pos:start="97:70" pos:end="97:71">||</operator> <name pos:start="97:73" pos:end="97:92">subtitle_stream_copy</name> <operator pos:start="97:94" pos:end="97:95">||</operator> <name pos:start="97:97" pos:end="97:115">subtitle_codec_name</name></expr>;</expr_stmt>



        <comment type="block" pos:start="101:9" pos:end="103:24">/* disable if no corresponding type found and at least one

           input file */</comment>

        <if_stmt pos:start="105:9" pos:end="123:9"><if pos:start="105:9" pos:end="123:9">if <condition pos:start="105:12" pos:end="105:31">(<expr pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:26">nb_input_files</name> <operator pos:start="105:28" pos:end="105:28">&gt;</operator> <literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr>)</condition> <block pos:start="105:33" pos:end="123:9">{<block_content pos:start="107:13" pos:end="121:33">

            <expr_stmt pos:start="107:13" pos:end="109:62"><expr pos:start="107:13" pos:end="109:61"><call pos:start="107:13" pos:end="109:61"><name pos:start="107:13" pos:end="107:40">check_audio_video_sub_inputs</name><argument_list pos:start="107:41" pos:end="109:61">(<argument pos:start="107:42" pos:end="107:57"><expr pos:start="107:42" pos:end="107:57"><operator pos:start="107:42" pos:end="107:42">&amp;</operator><name pos:start="107:43" pos:end="107:57">input_has_video</name></expr></argument>, <argument pos:start="107:60" pos:end="107:75"><expr pos:start="107:60" pos:end="107:75"><operator pos:start="107:60" pos:end="107:60">&amp;</operator><name pos:start="107:61" pos:end="107:75">input_has_audio</name></expr></argument>,

                                         <argument pos:start="109:42" pos:end="109:60"><expr pos:start="109:42" pos:end="109:60"><operator pos:start="109:42" pos:end="109:42">&amp;</operator><name pos:start="109:43" pos:end="109:60">input_has_subtitle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="113:30"><if pos:start="111:13" pos:end="113:30">if <condition pos:start="111:16" pos:end="111:33">(<expr pos:start="111:17" pos:end="111:32"><operator pos:start="111:17" pos:end="111:17">!</operator><name pos:start="111:18" pos:end="111:32">input_has_video</name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:30"><block_content pos:start="113:17" pos:end="113:30">

                <expr_stmt pos:start="113:17" pos:end="113:30"><expr pos:start="113:17" pos:end="113:29"><name pos:start="113:17" pos:end="113:25">use_video</name> <operator pos:start="113:27" pos:end="113:27">=</operator> <literal type="number" pos:start="113:29" pos:end="113:29">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="115:13" pos:end="117:30"><if pos:start="115:13" pos:end="117:30">if <condition pos:start="115:16" pos:end="115:33">(<expr pos:start="115:17" pos:end="115:32"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:32">input_has_audio</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:30"><block_content pos:start="117:17" pos:end="117:30">

                <expr_stmt pos:start="117:17" pos:end="117:30"><expr pos:start="117:17" pos:end="117:29"><name pos:start="117:17" pos:end="117:25">use_audio</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="119:13" pos:end="121:33"><if pos:start="119:13" pos:end="121:33">if <condition pos:start="119:16" pos:end="119:36">(<expr pos:start="119:17" pos:end="119:35"><operator pos:start="119:17" pos:end="119:17">!</operator><name pos:start="119:18" pos:end="119:35">input_has_subtitle</name></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:33"><block_content pos:start="121:17" pos:end="121:33">

                <expr_stmt pos:start="121:17" pos:end="121:33"><expr pos:start="121:17" pos:end="121:32"><name pos:start="121:17" pos:end="121:28">use_subtitle</name> <operator pos:start="121:30" pos:end="121:30">=</operator> <literal type="number" pos:start="121:32" pos:end="121:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="127:9" pos:end="127:28">/* manual disable */</comment>

        <if_stmt pos:start="129:9" pos:end="129:47"><if pos:start="129:9" pos:end="129:47">if <condition pos:start="129:12" pos:end="129:26">(<expr pos:start="129:13" pos:end="129:25"><name pos:start="129:13" pos:end="129:25">audio_disable</name></expr>)</condition><block type="pseudo" pos:start="129:31" pos:end="129:47"><block_content pos:start="129:31" pos:end="129:47">    <expr_stmt pos:start="129:31" pos:end="129:47"><expr pos:start="129:31" pos:end="129:46"><name pos:start="129:31" pos:end="129:39">use_audio</name>    <operator pos:start="129:44" pos:end="129:44">=</operator> <literal type="number" pos:start="129:46" pos:end="129:46">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="131:9" pos:end="131:47"><if pos:start="131:9" pos:end="131:47">if <condition pos:start="131:12" pos:end="131:26">(<expr pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:25">video_disable</name></expr>)</condition><block type="pseudo" pos:start="131:31" pos:end="131:47"><block_content pos:start="131:31" pos:end="131:47">    <expr_stmt pos:start="131:31" pos:end="131:47"><expr pos:start="131:31" pos:end="131:46"><name pos:start="131:31" pos:end="131:39">use_video</name>    <operator pos:start="131:44" pos:end="131:44">=</operator> <literal type="number" pos:start="131:46" pos:end="131:46">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="133:9" pos:end="133:47"><if pos:start="133:9" pos:end="133:47">if <condition pos:start="133:12" pos:end="133:29">(<expr pos:start="133:13" pos:end="133:28"><name pos:start="133:13" pos:end="133:28">subtitle_disable</name></expr>)</condition><block type="pseudo" pos:start="133:31" pos:end="133:47"><block_content pos:start="133:31" pos:end="133:47"> <expr_stmt pos:start="133:31" pos:end="133:47"><expr pos:start="133:31" pos:end="133:46"><name pos:start="133:31" pos:end="133:42">use_subtitle</name> <operator pos:start="133:44" pos:end="133:44">=</operator> <literal type="number" pos:start="133:46" pos:end="133:46">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="137:9" pos:end="137:64"><if pos:start="137:9" pos:end="137:64">if <condition pos:start="137:12" pos:end="137:22">(<expr pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:21">use_video</name></expr>)</condition><block type="pseudo" pos:start="137:27" pos:end="137:64"><block_content pos:start="137:27" pos:end="137:64">    <expr_stmt pos:start="137:27" pos:end="137:64"><expr pos:start="137:27" pos:end="137:63"><call pos:start="137:27" pos:end="137:63"><name pos:start="137:27" pos:end="137:42">new_video_stream</name><argument_list pos:start="137:43" pos:end="137:63">(<argument pos:start="137:44" pos:end="137:45"><expr pos:start="137:44" pos:end="137:45"><name pos:start="137:44" pos:end="137:45">oc</name></expr></argument>, <argument pos:start="137:48" pos:end="137:62"><expr pos:start="137:48" pos:end="137:62"><name pos:start="137:48" pos:end="137:62">nb_output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="139:9" pos:end="139:64"><if pos:start="139:9" pos:end="139:64">if <condition pos:start="139:12" pos:end="139:22">(<expr pos:start="139:13" pos:end="139:21"><name pos:start="139:13" pos:end="139:21">use_audio</name></expr>)</condition><block type="pseudo" pos:start="139:27" pos:end="139:64"><block_content pos:start="139:27" pos:end="139:64">    <expr_stmt pos:start="139:27" pos:end="139:64"><expr pos:start="139:27" pos:end="139:63"><call pos:start="139:27" pos:end="139:63"><name pos:start="139:27" pos:end="139:42">new_audio_stream</name><argument_list pos:start="139:43" pos:end="139:63">(<argument pos:start="139:44" pos:end="139:45"><expr pos:start="139:44" pos:end="139:45"><name pos:start="139:44" pos:end="139:45">oc</name></expr></argument>, <argument pos:start="139:48" pos:end="139:62"><expr pos:start="139:48" pos:end="139:62"><name pos:start="139:48" pos:end="139:62">nb_output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="141:9" pos:end="141:67"><if pos:start="141:9" pos:end="141:67">if <condition pos:start="141:12" pos:end="141:25">(<expr pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:24">use_subtitle</name></expr>)</condition><block type="pseudo" pos:start="141:27" pos:end="141:67"><block_content pos:start="141:27" pos:end="141:67"> <expr_stmt pos:start="141:27" pos:end="141:67"><expr pos:start="141:27" pos:end="141:66"><call pos:start="141:27" pos:end="141:66"><name pos:start="141:27" pos:end="141:45">new_subtitle_stream</name><argument_list pos:start="141:46" pos:end="141:66">(<argument pos:start="141:47" pos:end="141:48"><expr pos:start="141:47" pos:end="141:48"><name pos:start="141:47" pos:end="141:48">oc</name></expr></argument>, <argument pos:start="141:51" pos:end="141:65"><expr pos:start="141:51" pos:end="141:65"><name pos:start="141:51" pos:end="141:65">nb_output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:44"><expr pos:start="145:9" pos:end="145:43"><name pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:10">oc</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:21">timestamp</name></name> <operator pos:start="145:23" pos:end="145:23">=</operator> <name pos:start="145:25" pos:end="145:43">recording_timestamp</name></expr>;</expr_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:53"><expr pos:start="149:9" pos:end="149:52"><call pos:start="149:9" pos:end="149:52"><name pos:start="149:9" pos:end="149:24">av_metadata_copy</name><argument_list pos:start="149:25" pos:end="149:52">(<argument pos:start="149:26" pos:end="149:38"><expr pos:start="149:26" pos:end="149:38"><operator pos:start="149:26" pos:end="149:26">&amp;</operator><name pos:start="149:27" pos:end="149:38"><name pos:start="149:27" pos:end="149:28">oc</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:38">metadata</name></name></expr></argument>, <argument pos:start="149:41" pos:end="149:48"><expr pos:start="149:41" pos:end="149:48"><name pos:start="149:41" pos:end="149:48">metadata</name></expr></argument>, <argument pos:start="149:51" pos:end="149:51"><expr pos:start="149:51" pos:end="149:51"><literal type="number" pos:start="149:51" pos:end="149:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:36"><expr pos:start="151:9" pos:end="151:35"><call pos:start="151:9" pos:end="151:35"><name pos:start="151:9" pos:end="151:24">av_metadata_free</name><argument_list pos:start="151:25" pos:end="151:35">(<argument pos:start="151:26" pos:end="151:34"><expr pos:start="151:26" pos:end="151:34"><operator pos:start="151:26" pos:end="151:26">&amp;</operator><name pos:start="151:27" pos:end="151:34">metadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:41"><expr pos:start="157:5" pos:end="157:40"><name pos:start="157:5" pos:end="157:35"><name pos:start="157:5" pos:end="157:16">output_files</name><index pos:start="157:17" pos:end="157:35">[<expr pos:start="157:18" pos:end="157:34"><name pos:start="157:18" pos:end="157:32">nb_output_files</name><operator pos:start="157:33" pos:end="157:34">++</operator></expr>]</index></name> <operator pos:start="157:37" pos:end="157:37">=</operator> <name pos:start="157:39" pos:end="157:40">oc</name></expr>;</expr_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:63">/* check filename in case of an image number is expected */</comment>

    <if_stmt pos:start="163:5" pos:end="173:5"><if pos:start="163:5" pos:end="173:5">if <condition pos:start="163:8" pos:end="163:46">(<expr pos:start="163:9" pos:end="163:45"><name pos:start="163:9" pos:end="163:26"><name pos:start="163:9" pos:end="163:10">oc</name><operator pos:start="163:11" pos:end="163:12">-&gt;</operator><name pos:start="163:13" pos:end="163:19">oformat</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:26">flags</name></name> <operator pos:start="163:28" pos:end="163:28">&amp;</operator> <name pos:start="163:30" pos:end="163:45">AVFMT_NEEDNUMBER</name></expr>)</condition> <block pos:start="163:48" pos:end="173:5">{<block_content pos:start="165:9" pos:end="171:9">

        <if_stmt pos:start="165:9" pos:end="171:9"><if pos:start="165:9" pos:end="171:9">if <condition pos:start="165:12" pos:end="165:51">(<expr pos:start="165:13" pos:end="165:50"><operator pos:start="165:13" pos:end="165:13">!</operator><call pos:start="165:14" pos:end="165:50"><name pos:start="165:14" pos:end="165:36">av_filename_number_test</name><argument_list pos:start="165:37" pos:end="165:50">(<argument pos:start="165:38" pos:end="165:49"><expr pos:start="165:38" pos:end="165:49"><name pos:start="165:38" pos:end="165:49"><name pos:start="165:38" pos:end="165:39">oc</name><operator pos:start="165:40" pos:end="165:41">-&gt;</operator><name pos:start="165:42" pos:end="165:49">filename</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:53" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:27">

            <expr_stmt pos:start="167:13" pos:end="167:59"><expr pos:start="167:13" pos:end="167:58"><call pos:start="167:13" pos:end="167:58"><name pos:start="167:13" pos:end="167:23">print_error</name><argument_list pos:start="167:24" pos:end="167:58">(<argument pos:start="167:25" pos:end="167:36"><expr pos:start="167:25" pos:end="167:36"><name pos:start="167:25" pos:end="167:36"><name pos:start="167:25" pos:end="167:26">oc</name><operator pos:start="167:27" pos:end="167:28">-&gt;</operator><name pos:start="167:29" pos:end="167:36">filename</name></name></expr></argument>, <argument pos:start="167:39" pos:end="167:57"><expr pos:start="167:39" pos:end="167:57"><name pos:start="167:39" pos:end="167:57">AVERROR_NUMEXPECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:27"><expr pos:start="169:13" pos:end="169:26"><call pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:23">ffmpeg_exit</name><argument_list pos:start="169:24" pos:end="169:26">(<argument pos:start="169:25" pos:end="169:25"><expr pos:start="169:25" pos:end="169:25"><literal type="number" pos:start="169:25" pos:end="169:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="177:5" pos:end="231:5"><if pos:start="177:5" pos:end="231:5">if <condition pos:start="177:8" pos:end="177:45">(<expr pos:start="177:9" pos:end="177:44"><operator pos:start="177:9" pos:end="177:9">!</operator><operator pos:start="177:10" pos:end="177:10">(</operator><name pos:start="177:11" pos:end="177:28"><name pos:start="177:11" pos:end="177:12">oc</name><operator pos:start="177:13" pos:end="177:14">-&gt;</operator><name pos:start="177:15" pos:end="177:21">oformat</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:28">flags</name></name> <operator pos:start="177:30" pos:end="177:30">&amp;</operator> <name pos:start="177:32" pos:end="177:43">AVFMT_NOFILE</name><operator pos:start="177:44" pos:end="177:44">)</operator></expr>)</condition> <block pos:start="177:47" pos:end="231:5">{<block_content pos:start="181:9" pos:end="229:9">

        <comment type="block" pos:start="179:9" pos:end="179:71">/* test if it already exists to avoid loosing precious files */</comment>

        <if_stmt pos:start="181:9" pos:end="217:9"><if pos:start="181:9" pos:end="217:9">if <condition pos:start="181:12" pos:end="187:51">(<expr pos:start="181:13" pos:end="187:50"><operator pos:start="181:13" pos:end="181:13">!</operator><name pos:start="181:14" pos:end="181:27">file_overwrite</name> <operator pos:start="181:29" pos:end="181:30">&amp;&amp;</operator>

            <operator pos:start="183:13" pos:end="183:13">(</operator><call pos:start="183:14" pos:end="183:34"><name pos:start="183:14" pos:end="183:19">strchr</name><argument_list pos:start="183:20" pos:end="183:34">(<argument pos:start="183:21" pos:end="183:28"><expr pos:start="183:21" pos:end="183:28"><name pos:start="183:21" pos:end="183:28">filename</name></expr></argument>, <argument pos:start="183:31" pos:end="183:33"><expr pos:start="183:31" pos:end="183:33"><literal type="char" pos:start="183:31" pos:end="183:33">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="183:36" pos:end="183:37">==</operator> <name pos:start="183:39" pos:end="183:42">NULL</name> <operator pos:start="183:44" pos:end="183:45">||</operator>

             <name pos:start="185:14" pos:end="185:24"><name pos:start="185:14" pos:end="185:21">filename</name><index pos:start="185:22" pos:end="185:24">[<expr pos:start="185:23" pos:end="185:23"><literal type="number" pos:start="185:23" pos:end="185:23">1</literal></expr>]</index></name> <operator pos:start="185:26" pos:end="185:27">==</operator> <literal type="char" pos:start="185:29" pos:end="185:31">':'</literal> <operator pos:start="185:33" pos:end="185:34">||</operator>

             <call pos:start="187:14" pos:end="187:49"><name pos:start="187:14" pos:end="187:24">av_strstart</name><argument_list pos:start="187:25" pos:end="187:49">(<argument pos:start="187:26" pos:end="187:33"><expr pos:start="187:26" pos:end="187:33"><name pos:start="187:26" pos:end="187:33">filename</name></expr></argument>, <argument pos:start="187:36" pos:end="187:42"><expr pos:start="187:36" pos:end="187:42"><literal type="string" pos:start="187:36" pos:end="187:42">"file:"</literal></expr></argument>, <argument pos:start="187:45" pos:end="187:48"><expr pos:start="187:45" pos:end="187:48"><name pos:start="187:45" pos:end="187:48">NULL</name></expr></argument>)</argument_list></call><operator pos:start="187:50" pos:end="187:50">)</operator></expr>)</condition> <block pos:start="187:53" pos:end="217:9">{<block_content pos:start="189:13" pos:end="215:13">

            <if_stmt pos:start="189:13" pos:end="215:13"><if pos:start="189:13" pos:end="215:13">if <condition pos:start="189:16" pos:end="189:36">(<expr pos:start="189:17" pos:end="189:35"><call pos:start="189:17" pos:end="189:35"><name pos:start="189:17" pos:end="189:25">url_exist</name><argument_list pos:start="189:26" pos:end="189:35">(<argument pos:start="189:27" pos:end="189:34"><expr pos:start="189:27" pos:end="189:34"><name pos:start="189:27" pos:end="189:34">filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:38" pos:end="215:13">{<block_content pos:start="191:17" pos:end="213:17">

                <if_stmt pos:start="191:17" pos:end="213:17"><if pos:start="191:17" pos:end="205:17">if <condition pos:start="191:20" pos:end="191:33">(<expr pos:start="191:21" pos:end="191:32"><operator pos:start="191:21" pos:end="191:21">!</operator><name pos:start="191:22" pos:end="191:32">using_stdin</name></expr>)</condition> <block pos:start="191:35" pos:end="205:17">{<block_content pos:start="193:21" pos:end="203:21">

                    <expr_stmt pos:start="193:21" pos:end="193:93"><expr pos:start="193:21" pos:end="193:92"><call pos:start="193:21" pos:end="193:92"><name pos:start="193:21" pos:end="193:27">fprintf</name><argument_list pos:start="193:28" pos:end="193:92">(<argument pos:start="193:29" pos:end="193:34"><expr pos:start="193:29" pos:end="193:34"><name pos:start="193:29" pos:end="193:34">stderr</name></expr></argument>,<argument pos:start="193:36" pos:end="193:81"><expr pos:start="193:36" pos:end="193:81"><literal type="string" pos:start="193:36" pos:end="193:81">"File '%s' already exists. Overwrite ? [y/N] "</literal></expr></argument>, <argument pos:start="193:84" pos:end="193:91"><expr pos:start="193:84" pos:end="193:91"><name pos:start="193:84" pos:end="193:91">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:35"><expr pos:start="195:21" pos:end="195:34"><call pos:start="195:21" pos:end="195:34"><name pos:start="195:21" pos:end="195:26">fflush</name><argument_list pos:start="195:27" pos:end="195:34">(<argument pos:start="195:28" pos:end="195:33"><expr pos:start="195:28" pos:end="195:33"><name pos:start="195:28" pos:end="195:33">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="197:21" pos:end="203:21"><if pos:start="197:21" pos:end="203:21">if <condition pos:start="197:24" pos:end="197:38">(<expr pos:start="197:25" pos:end="197:37"><operator pos:start="197:25" pos:end="197:25">!</operator><call pos:start="197:26" pos:end="197:37"><name pos:start="197:26" pos:end="197:35">read_yesno</name><argument_list pos:start="197:36" pos:end="197:37">()</argument_list></call></expr>)</condition> <block pos:start="197:40" pos:end="203:21">{<block_content pos:start="199:25" pos:end="201:39">

                        <expr_stmt pos:start="199:25" pos:end="199:71"><expr pos:start="199:25" pos:end="199:70"><call pos:start="199:25" pos:end="199:70"><name pos:start="199:25" pos:end="199:31">fprintf</name><argument_list pos:start="199:32" pos:end="199:70">(<argument pos:start="199:33" pos:end="199:38"><expr pos:start="199:33" pos:end="199:38"><name pos:start="199:33" pos:end="199:38">stderr</name></expr></argument>, <argument pos:start="199:41" pos:end="199:69"><expr pos:start="199:41" pos:end="199:69"><literal type="string" pos:start="199:41" pos:end="199:69">"Not overwriting - exiting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="201:25" pos:end="201:39"><expr pos:start="201:25" pos:end="201:38"><call pos:start="201:25" pos:end="201:38"><name pos:start="201:25" pos:end="201:35">ffmpeg_exit</name><argument_list pos:start="201:36" pos:end="201:38">(<argument pos:start="201:37" pos:end="201:37"><expr pos:start="201:37" pos:end="201:37"><literal type="number" pos:start="201:37" pos:end="201:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if>

                <else pos:start="207:17" pos:end="213:17">else <block pos:start="207:22" pos:end="213:17">{<block_content pos:start="209:21" pos:end="211:35">

                    <expr_stmt pos:start="209:21" pos:end="209:85"><expr pos:start="209:21" pos:end="209:84"><call pos:start="209:21" pos:end="209:84"><name pos:start="209:21" pos:end="209:27">fprintf</name><argument_list pos:start="209:28" pos:end="209:84">(<argument pos:start="209:29" pos:end="209:34"><expr pos:start="209:29" pos:end="209:34"><name pos:start="209:29" pos:end="209:34">stderr</name></expr></argument>,<argument pos:start="209:36" pos:end="209:73"><expr pos:start="209:36" pos:end="209:73"><literal type="string" pos:start="209:36" pos:end="209:73">"File '%s' already exists. Exiting.\n"</literal></expr></argument>, <argument pos:start="209:76" pos:end="209:83"><expr pos:start="209:76" pos:end="209:83"><name pos:start="209:76" pos:end="209:83">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:35"><expr pos:start="211:21" pos:end="211:34"><call pos:start="211:21" pos:end="211:34"><name pos:start="211:21" pos:end="211:31">ffmpeg_exit</name><argument_list pos:start="211:32" pos:end="211:34">(<argument pos:start="211:33" pos:end="211:33"><expr pos:start="211:33" pos:end="211:33"><literal type="number" pos:start="211:33" pos:end="211:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="221:9" pos:end="221:27">/* open the file */</comment>

        <if_stmt pos:start="223:9" pos:end="229:9"><if pos:start="223:9" pos:end="229:9">if <condition pos:start="223:12" pos:end="223:70">(<expr pos:start="223:13" pos:end="223:69"><operator pos:start="223:13" pos:end="223:13">(</operator><name pos:start="223:14" pos:end="223:16">err</name> <operator pos:start="223:18" pos:end="223:18">=</operator> <call pos:start="223:20" pos:end="223:64"><name pos:start="223:20" pos:end="223:28">avio_open</name><argument_list pos:start="223:29" pos:end="223:64">(<argument pos:start="223:30" pos:end="223:36"><expr pos:start="223:30" pos:end="223:36"><operator pos:start="223:30" pos:end="223:30">&amp;</operator><name pos:start="223:31" pos:end="223:36"><name pos:start="223:31" pos:end="223:32">oc</name><operator pos:start="223:33" pos:end="223:34">-&gt;</operator><name pos:start="223:35" pos:end="223:36">pb</name></name></expr></argument>, <argument pos:start="223:39" pos:end="223:46"><expr pos:start="223:39" pos:end="223:46"><name pos:start="223:39" pos:end="223:46">filename</name></expr></argument>, <argument pos:start="223:49" pos:end="223:63"><expr pos:start="223:49" pos:end="223:63"><name pos:start="223:49" pos:end="223:63">AVIO_FLAG_WRITE</name></expr></argument>)</argument_list></call><operator pos:start="223:65" pos:end="223:65">)</operator> <operator pos:start="223:67" pos:end="223:67">&lt;</operator> <literal type="number" pos:start="223:69" pos:end="223:69">0</literal></expr>)</condition> <block pos:start="223:72" pos:end="229:9">{<block_content pos:start="225:13" pos:end="227:27">

            <expr_stmt pos:start="225:13" pos:end="225:39"><expr pos:start="225:13" pos:end="225:38"><call pos:start="225:13" pos:end="225:38"><name pos:start="225:13" pos:end="225:23">print_error</name><argument_list pos:start="225:24" pos:end="225:38">(<argument pos:start="225:25" pos:end="225:32"><expr pos:start="225:25" pos:end="225:32"><name pos:start="225:25" pos:end="225:32">filename</name></expr></argument>, <argument pos:start="225:35" pos:end="225:37"><expr pos:start="225:35" pos:end="225:37"><name pos:start="225:35" pos:end="225:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:27"><expr pos:start="227:13" pos:end="227:26"><call pos:start="227:13" pos:end="227:26"><name pos:start="227:13" pos:end="227:23">ffmpeg_exit</name><argument_list pos:start="227:24" pos:end="227:26">(<argument pos:start="227:25" pos:end="227:25"><expr pos:start="227:25" pos:end="227:25"><literal type="number" pos:start="227:25" pos:end="227:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="235:5" pos:end="235:31"><expr pos:start="235:5" pos:end="235:30"><call pos:start="235:5" pos:end="235:30"><name pos:start="235:5" pos:end="235:10">memset</name><argument_list pos:start="235:11" pos:end="235:30">(<argument pos:start="235:12" pos:end="235:13"><expr pos:start="235:12" pos:end="235:13"><name pos:start="235:12" pos:end="235:13">ap</name></expr></argument>, <argument pos:start="235:16" pos:end="235:16"><expr pos:start="235:16" pos:end="235:16"><literal type="number" pos:start="235:16" pos:end="235:16">0</literal></expr></argument>, <argument pos:start="235:19" pos:end="235:29"><expr pos:start="235:19" pos:end="235:29"><sizeof pos:start="235:19" pos:end="235:29">sizeof<argument_list pos:start="235:25" pos:end="235:29">(<argument pos:start="235:26" pos:end="235:28"><expr pos:start="235:26" pos:end="235:28"><operator pos:start="235:26" pos:end="235:26">*</operator><name pos:start="235:27" pos:end="235:28">ap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="237:5" pos:end="245:5"><if pos:start="237:5" pos:end="245:5">if <condition pos:start="237:8" pos:end="237:38">(<expr pos:start="237:9" pos:end="237:37"><call pos:start="237:9" pos:end="237:33"><name pos:start="237:9" pos:end="237:25">av_set_parameters</name><argument_list pos:start="237:26" pos:end="237:33">(<argument pos:start="237:27" pos:end="237:28"><expr pos:start="237:27" pos:end="237:28"><name pos:start="237:27" pos:end="237:28">oc</name></expr></argument>, <argument pos:start="237:31" pos:end="237:32"><expr pos:start="237:31" pos:end="237:32"><name pos:start="237:31" pos:end="237:32">ap</name></expr></argument>)</argument_list></call> <operator pos:start="237:35" pos:end="237:35">&lt;</operator> <literal type="number" pos:start="237:37" pos:end="237:37">0</literal></expr>)</condition> <block pos:start="237:40" pos:end="245:5">{<block_content pos:start="239:9" pos:end="243:23">

        <expr_stmt pos:start="239:9" pos:end="241:30"><expr pos:start="239:9" pos:end="241:29"><call pos:start="239:9" pos:end="241:29"><name pos:start="239:9" pos:end="239:15">fprintf</name><argument_list pos:start="239:16" pos:end="241:29">(<argument pos:start="239:17" pos:end="239:22"><expr pos:start="239:17" pos:end="239:22"><name pos:start="239:17" pos:end="239:22">stderr</name></expr></argument>, <argument pos:start="239:25" pos:end="239:59"><expr pos:start="239:25" pos:end="239:59"><literal type="string" pos:start="239:25" pos:end="239:59">"%s: Invalid encoding parameters\n"</literal></expr></argument>,

                <argument pos:start="241:17" pos:end="241:28"><expr pos:start="241:17" pos:end="241:28"><name pos:start="241:17" pos:end="241:28"><name pos:start="241:17" pos:end="241:18">oc</name><operator pos:start="241:19" pos:end="241:20">-&gt;</operator><name pos:start="241:21" pos:end="241:28">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:23"><expr pos:start="243:9" pos:end="243:22"><call pos:start="243:9" pos:end="243:22"><name pos:start="243:9" pos:end="243:19">ffmpeg_exit</name><argument_list pos:start="243:20" pos:end="243:22">(<argument pos:start="243:21" pos:end="243:21"><expr pos:start="243:21" pos:end="243:21"><literal type="number" pos:start="243:21" pos:end="243:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:49"><expr pos:start="249:5" pos:end="249:48"><name pos:start="249:5" pos:end="249:15"><name pos:start="249:5" pos:end="249:6">oc</name><operator pos:start="249:7" pos:end="249:8">-&gt;</operator><name pos:start="249:9" pos:end="249:15">preload</name></name><operator pos:start="249:16" pos:end="249:16">=</operator> <operator pos:start="249:18" pos:end="249:18">(</operator><name pos:start="249:19" pos:end="249:21">int</name><operator pos:start="249:22" pos:end="249:22">)</operator><operator pos:start="249:23" pos:end="249:23">(</operator><name pos:start="249:24" pos:end="249:34">mux_preload</name><operator pos:start="249:35" pos:end="249:35">*</operator><name pos:start="249:36" pos:end="249:47">AV_TIME_BASE</name><operator pos:start="249:48" pos:end="249:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:53"><expr pos:start="251:5" pos:end="251:52"><name pos:start="251:5" pos:end="251:17"><name pos:start="251:5" pos:end="251:6">oc</name><operator pos:start="251:7" pos:end="251:8">-&gt;</operator><name pos:start="251:9" pos:end="251:17">max_delay</name></name><operator pos:start="251:18" pos:end="251:18">=</operator> <operator pos:start="251:20" pos:end="251:20">(</operator><name pos:start="251:21" pos:end="251:23">int</name><operator pos:start="251:24" pos:end="251:24">)</operator><operator pos:start="251:25" pos:end="251:25">(</operator><name pos:start="251:26" pos:end="251:38">mux_max_delay</name><operator pos:start="251:39" pos:end="251:39">*</operator><name pos:start="251:40" pos:end="251:51">AV_TIME_BASE</name><operator pos:start="251:52" pos:end="251:52">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:34"><expr pos:start="253:5" pos:end="253:33"><name pos:start="253:5" pos:end="253:19"><name pos:start="253:5" pos:end="253:6">oc</name><operator pos:start="253:7" pos:end="253:8">-&gt;</operator><name pos:start="253:9" pos:end="253:19">loop_output</name></name> <operator pos:start="253:21" pos:end="253:21">=</operator> <name pos:start="253:23" pos:end="253:33">loop_output</name></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:37"><expr pos:start="255:5" pos:end="255:36"><name pos:start="255:5" pos:end="255:13"><name pos:start="255:5" pos:end="255:6">oc</name><operator pos:start="255:7" pos:end="255:8">-&gt;</operator><name pos:start="255:9" pos:end="255:13">flags</name></name> <operator pos:start="255:15" pos:end="255:16">|=</operator> <name pos:start="255:18" pos:end="255:36">AVFMT_FLAG_NONBLOCK</name></expr>;</expr_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:74"><expr pos:start="259:5" pos:end="259:73"><call pos:start="259:5" pos:end="259:73"><name pos:start="259:5" pos:end="259:20">set_context_opts</name><argument_list pos:start="259:21" pos:end="259:73">(<argument pos:start="259:22" pos:end="259:23"><expr pos:start="259:22" pos:end="259:23"><name pos:start="259:22" pos:end="259:23">oc</name></expr></argument>, <argument pos:start="259:26" pos:end="259:38"><expr pos:start="259:26" pos:end="259:38"><name pos:start="259:26" pos:end="259:38">avformat_opts</name></expr></argument>, <argument pos:start="259:41" pos:end="259:66"><expr pos:start="259:41" pos:end="259:66"><name pos:start="259:41" pos:end="259:66">AV_OPT_FLAG_ENCODING_PARAM</name></expr></argument>, <argument pos:start="259:69" pos:end="259:72"><expr pos:start="259:69" pos:end="259:72"><name pos:start="259:69" pos:end="259:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="263:5" pos:end="263:33"><expr pos:start="263:5" pos:end="263:32"><call pos:start="263:5" pos:end="263:32"><name pos:start="263:5" pos:end="263:12">av_freep</name><argument_list pos:start="263:13" pos:end="263:32">(<argument pos:start="263:14" pos:end="263:31"><expr pos:start="263:14" pos:end="263:31"><operator pos:start="263:14" pos:end="263:14">&amp;</operator><name pos:start="263:15" pos:end="263:31">forced_key_frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
