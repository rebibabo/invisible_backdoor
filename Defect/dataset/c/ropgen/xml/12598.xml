<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12598.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">output_segment_list</name><parameter_list pos:start="1:32" pos:end="3:65">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:44">OutputStream</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">os</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><name pos:start="1:51" pos:end="1:61">AVIOContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">out</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:82"><decl pos:start="1:69" pos:end="1:82"><type pos:start="1:69" pos:end="1:82"><name pos:start="1:69" pos:end="1:79">DASHContext</name> <modifier pos:start="1:81" pos:end="1:81">*</modifier></type><name pos:start="1:82" pos:end="1:82">c</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:53"><decl pos:start="3:33" pos:end="3:53"><type pos:start="3:33" pos:end="3:53"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:53">representation_id</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:64"><decl pos:start="3:56" pos:end="3:64"><type pos:start="3:56" pos:end="3:64"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:64">final</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="229:1">{<block_content pos:start="7:5" pos:end="225:5">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:22">start_index</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>, <decl pos:start="7:29" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:40">start_number</name> <init pos:start="7:42" pos:end="7:44">= <expr pos:start="7:44" pos:end="7:44"><literal type="number" pos:start="7:44" pos:end="7:44">1</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:9">c</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:22">window_size</name></name></expr>)</condition> <block pos:start="9:25" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:68">

        <expr_stmt pos:start="11:9" pos:end="11:68"><expr pos:start="11:9" pos:end="11:67"><name pos:start="11:9" pos:end="11:19">start_index</name>  <operator pos:start="11:22" pos:end="11:22">=</operator> <call pos:start="11:24" pos:end="11:67"><name pos:start="11:24" pos:end="11:28">FFMAX</name><argument_list pos:start="11:29" pos:end="11:67">(<argument pos:start="11:30" pos:end="11:63"><expr pos:start="11:30" pos:end="11:63"><name pos:start="11:30" pos:end="11:44"><name pos:start="11:30" pos:end="11:31">os</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:44">nb_segments</name></name>   <operator pos:start="11:48" pos:end="11:48">-</operator> <name pos:start="11:50" pos:end="11:63"><name pos:start="11:50" pos:end="11:50">c</name><operator pos:start="11:51" pos:end="11:52">-&gt;</operator><name pos:start="11:53" pos:end="11:63">window_size</name></name></expr></argument>, <argument pos:start="11:66" pos:end="11:66"><expr pos:start="11:66" pos:end="11:66"><literal type="number" pos:start="11:66" pos:end="11:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:68"><expr pos:start="13:9" pos:end="13:67"><name pos:start="13:9" pos:end="13:20">start_number</name> <operator pos:start="13:22" pos:end="13:22">=</operator> <call pos:start="13:24" pos:end="13:67"><name pos:start="13:24" pos:end="13:28">FFMAX</name><argument_list pos:start="13:29" pos:end="13:67">(<argument pos:start="13:30" pos:end="13:63"><expr pos:start="13:30" pos:end="13:63"><name pos:start="13:30" pos:end="13:46"><name pos:start="13:30" pos:end="13:31">os</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:46">segment_index</name></name> <operator pos:start="13:48" pos:end="13:48">-</operator> <name pos:start="13:50" pos:end="13:63"><name pos:start="13:50" pos:end="13:50">c</name><operator pos:start="13:51" pos:end="13:52">-&gt;</operator><name pos:start="13:53" pos:end="13:63">window_size</name></name></expr></argument>, <argument pos:start="13:66" pos:end="13:66"><expr pos:start="13:66" pos:end="13:66"><literal type="number" pos:start="13:66" pos:end="13:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="121:5"><if pos:start="19:5" pos:end="81:5">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">use_template</name></name></expr>)</condition> <block pos:start="19:26" pos:end="81:5">{<block_content pos:start="21:9" pos:end="79:57">

        <decl_stmt pos:start="21:9" pos:end="21:92"><decl pos:start="21:9" pos:end="21:91"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:21">timescale</name> <init pos:start="21:23" pos:end="21:91">= <expr pos:start="21:25" pos:end="21:91"><ternary pos:start="21:25" pos:end="21:91"><condition pos:start="21:25" pos:end="21:41"><expr pos:start="21:25" pos:end="21:39"><name pos:start="21:25" pos:end="21:39"><name pos:start="21:25" pos:end="21:25">c</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:39">use_timeline</name></name></expr> ?</condition><then pos:start="21:43" pos:end="21:76"> <expr pos:start="21:43" pos:end="21:76"><name pos:start="21:43" pos:end="21:61"><name pos:start="21:43" pos:end="21:44">os</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:49">ctx</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:58">streams</name><index pos:start="21:59" pos:end="21:61">[<expr pos:start="21:60" pos:end="21:60"><literal type="number" pos:start="21:60" pos:end="21:60">0</literal></expr>]</index></name><operator pos:start="21:62" pos:end="21:63">-&gt;</operator><name pos:start="21:64" pos:end="21:76"><name pos:start="21:64" pos:end="21:72">time_base</name><operator pos:start="21:73" pos:end="21:73">.</operator><name pos:start="21:74" pos:end="21:76">den</name></name></expr> </then><else pos:start="21:78" pos:end="21:91">: <expr pos:start="21:80" pos:end="21:91"><name pos:start="21:80" pos:end="21:91">AV_TIME_BASE</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:82"><expr pos:start="23:9" pos:end="23:81"><call pos:start="23:9" pos:end="23:81"><name pos:start="23:9" pos:end="23:19">avio_printf</name><argument_list pos:start="23:20" pos:end="23:81">(<argument pos:start="23:21" pos:end="23:23"><expr pos:start="23:21" pos:end="23:23"><name pos:start="23:21" pos:end="23:23">out</name></expr></argument>, <argument pos:start="23:26" pos:end="23:69"><expr pos:start="23:26" pos:end="23:69"><literal type="string" pos:start="23:26" pos:end="23:69">"\t\t\t\t&lt;SegmentTemplate timescale=\"%d\" "</literal></expr></argument>, <argument pos:start="23:72" pos:end="23:80"><expr pos:start="23:72" pos:end="23:80"><name pos:start="23:72" pos:end="23:80">timescale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:74"><if pos:start="25:9" pos:end="27:74">if <condition pos:start="25:12" pos:end="25:29">(<expr pos:start="25:13" pos:end="25:28"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:28"><name pos:start="25:14" pos:end="25:14">c</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:28">use_timeline</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:74"><block_content pos:start="27:13" pos:end="27:74">

            <expr_stmt pos:start="27:13" pos:end="27:74"><expr pos:start="27:13" pos:end="27:73"><call pos:start="27:13" pos:end="27:73"><name pos:start="27:13" pos:end="27:23">avio_printf</name><argument_list pos:start="27:24" pos:end="27:73">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">out</name></expr></argument>, <argument pos:start="27:30" pos:end="27:54"><expr pos:start="27:30" pos:end="27:54"><literal type="string" pos:start="27:30" pos:end="27:43">"duration=\"%"</literal><name pos:start="27:44" pos:end="27:49">PRId64</name><literal type="string" pos:start="27:50" pos:end="27:54">"\" "</literal></expr></argument>, <argument pos:start="27:57" pos:end="27:72"><expr pos:start="27:57" pos:end="27:72"><name pos:start="27:57" pos:end="27:72"><name pos:start="27:57" pos:end="27:57">c</name><operator pos:start="27:58" pos:end="27:59">-&gt;</operator><name pos:start="27:60" pos:end="27:72">last_duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:158"><expr pos:start="29:9" pos:end="29:157"><call pos:start="29:9" pos:end="29:157"><name pos:start="29:9" pos:end="29:19">avio_printf</name><argument_list pos:start="29:20" pos:end="29:157">(<argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:23">out</name></expr></argument>, <argument pos:start="29:26" pos:end="29:83"><expr pos:start="29:26" pos:end="29:83"><literal type="string" pos:start="29:26" pos:end="29:83">"initialization=\"%s\" media=\"%s\" startNumber=\"%d\"&gt;\n"</literal></expr></argument>, <argument pos:start="29:86" pos:end="29:101"><expr pos:start="29:86" pos:end="29:101"><name pos:start="29:86" pos:end="29:101"><name pos:start="29:86" pos:end="29:86">c</name><operator pos:start="29:87" pos:end="29:88">-&gt;</operator><name pos:start="29:89" pos:end="29:101">init_seg_name</name></name></expr></argument>, <argument pos:start="29:104" pos:end="29:120"><expr pos:start="29:104" pos:end="29:120"><name pos:start="29:104" pos:end="29:120"><name pos:start="29:104" pos:end="29:104">c</name><operator pos:start="29:105" pos:end="29:106">-&gt;</operator><name pos:start="29:107" pos:end="29:120">media_seg_name</name></name></expr></argument>, <argument pos:start="29:123" pos:end="29:156"><expr pos:start="29:123" pos:end="29:156"><ternary pos:start="29:123" pos:end="29:156"><condition pos:start="29:123" pos:end="29:139"><expr pos:start="29:123" pos:end="29:137"><name pos:start="29:123" pos:end="29:137"><name pos:start="29:123" pos:end="29:123">c</name><operator pos:start="29:124" pos:end="29:125">-&gt;</operator><name pos:start="29:126" pos:end="29:137">use_timeline</name></name></expr> ?</condition><then pos:start="29:141" pos:end="29:152"> <expr pos:start="29:141" pos:end="29:152"><name pos:start="29:141" pos:end="29:152">start_number</name></expr> </then><else pos:start="29:154" pos:end="29:156">: <expr pos:start="29:156" pos:end="29:156"><literal type="number" pos:start="29:156" pos:end="29:156">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="77:9"><if pos:start="31:9" pos:end="77:9">if <condition pos:start="31:12" pos:end="31:28">(<expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:13">c</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:27">use_timeline</name></name></expr>)</condition> <block pos:start="31:30" pos:end="77:9">{<block_content pos:start="33:13" pos:end="75:63">

            <decl_stmt pos:start="33:13" pos:end="33:33"><decl pos:start="33:13" pos:end="33:32"><type pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:19">int64_t</name></type> <name pos:start="33:21" pos:end="33:28">cur_time</name> <init pos:start="33:30" pos:end="33:32">= <expr pos:start="33:32" pos:end="33:32"><literal type="number" pos:start="33:32" pos:end="33:32">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:62"><expr pos:start="35:13" pos:end="35:61"><call pos:start="35:13" pos:end="35:61"><name pos:start="35:13" pos:end="35:23">avio_printf</name><argument_list pos:start="35:24" pos:end="35:61">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">out</name></expr></argument>, <argument pos:start="35:30" pos:end="35:60"><expr pos:start="35:30" pos:end="35:60"><literal type="string" pos:start="35:30" pos:end="35:60">"\t\t\t\t\t&lt;SegmentTimeline&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="37:13" pos:end="73:13">for <control pos:start="37:17" pos:end="37:56">(<init pos:start="37:18" pos:end="37:33"><expr pos:start="37:18" pos:end="37:32"><name pos:start="37:18" pos:end="37:18">i</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:32">start_index</name></expr>;</init> <condition pos:start="37:35" pos:end="37:54"><expr pos:start="37:35" pos:end="37:53"><name pos:start="37:35" pos:end="37:35">i</name> <operator pos:start="37:37" pos:end="37:37">&lt;</operator> <name pos:start="37:39" pos:end="37:53"><name pos:start="37:39" pos:end="37:40">os</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:53">nb_segments</name></name></expr>;</condition> <incr/>)</control> <block pos:start="37:58" pos:end="73:13">{<block_content pos:start="39:17" pos:end="71:57">

                <decl_stmt pos:start="39:17" pos:end="39:47"><decl pos:start="39:17" pos:end="39:46"><type pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:23">Segment</name> <modifier pos:start="39:25" pos:end="39:25">*</modifier></type><name pos:start="39:26" pos:end="39:28">seg</name> <init pos:start="39:30" pos:end="39:46">= <expr pos:start="39:32" pos:end="39:46"><name pos:start="39:32" pos:end="39:46"><name pos:start="39:32" pos:end="39:33">os</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:43">segments</name><index pos:start="39:44" pos:end="39:46">[<expr pos:start="39:45" pos:end="39:45"><name pos:start="39:45" pos:end="39:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="41:17" pos:end="41:31"><decl pos:start="41:17" pos:end="41:30"><type pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">int</name></type> <name pos:start="41:21" pos:end="41:26">repeat</name> <init pos:start="41:28" pos:end="41:30">= <expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">0</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:52"><expr pos:start="43:17" pos:end="43:51"><call pos:start="43:17" pos:end="43:51"><name pos:start="43:17" pos:end="43:27">avio_printf</name><argument_list pos:start="43:28" pos:end="43:51">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">out</name></expr></argument>, <argument pos:start="43:34" pos:end="43:50"><expr pos:start="43:34" pos:end="43:50"><literal type="string" pos:start="43:34" pos:end="43:50">"\t\t\t\t\t\t&lt;S "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="45:17" pos:end="51:17"><if pos:start="45:17" pos:end="51:17">if <condition pos:start="45:20" pos:end="45:62">(<expr pos:start="45:21" pos:end="45:61"><name pos:start="45:21" pos:end="45:21">i</name> <operator pos:start="45:23" pos:end="45:24">==</operator> <name pos:start="45:26" pos:end="45:36">start_index</name> <operator pos:start="45:38" pos:end="45:39">||</operator> <name pos:start="45:41" pos:end="45:49"><name pos:start="45:41" pos:end="45:43">seg</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:49">time</name></name> <operator pos:start="45:51" pos:end="45:52">!=</operator> <name pos:start="45:54" pos:end="45:61">cur_time</name></expr>)</condition> <block pos:start="45:64" pos:end="51:17">{<block_content pos:start="47:21" pos:end="49:68">

                    <expr_stmt pos:start="47:21" pos:end="47:41"><expr pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:28">cur_time</name> <operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:40"><name pos:start="47:32" pos:end="47:34">seg</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:40">time</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:68"><expr pos:start="49:21" pos:end="49:67"><call pos:start="49:21" pos:end="49:67"><name pos:start="49:21" pos:end="49:31">avio_printf</name><argument_list pos:start="49:32" pos:end="49:67">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:35">out</name></expr></argument>, <argument pos:start="49:38" pos:end="49:55"><expr pos:start="49:38" pos:end="49:55"><literal type="string" pos:start="49:38" pos:end="49:44">"t=\"%"</literal><name pos:start="49:45" pos:end="49:50">PRId64</name><literal type="string" pos:start="49:51" pos:end="49:55">"\" "</literal></expr></argument>, <argument pos:start="49:58" pos:end="49:66"><expr pos:start="49:58" pos:end="49:66"><name pos:start="49:58" pos:end="49:66"><name pos:start="49:58" pos:end="49:60">seg</name><operator pos:start="49:61" pos:end="49:62">-&gt;</operator><name pos:start="49:63" pos:end="49:66">time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:61"><expr pos:start="53:17" pos:end="53:60"><call pos:start="53:17" pos:end="53:60"><name pos:start="53:17" pos:end="53:27">avio_printf</name><argument_list pos:start="53:28" pos:end="53:60">(<argument pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:31">out</name></expr></argument>, <argument pos:start="53:34" pos:end="53:44"><expr pos:start="53:34" pos:end="53:44"><literal type="string" pos:start="53:34" pos:end="53:44">"d=\"%d\" "</literal></expr></argument>, <argument pos:start="53:47" pos:end="53:59"><expr pos:start="53:47" pos:end="53:59"><name pos:start="53:47" pos:end="53:59"><name pos:start="53:47" pos:end="53:49">seg</name><operator pos:start="53:50" pos:end="53:51">-&gt;</operator><name pos:start="53:52" pos:end="53:59">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="55:17" pos:end="61:29">while <condition pos:start="55:23" pos:end="59:129">(<expr pos:start="55:24" pos:end="59:128"><name pos:start="55:24" pos:end="55:24">i</name> <operator pos:start="55:26" pos:end="55:26">+</operator> <name pos:start="55:28" pos:end="55:33">repeat</name> <operator pos:start="55:35" pos:end="55:35">+</operator> <literal type="number" pos:start="55:37" pos:end="55:37">1</literal> <operator pos:start="55:39" pos:end="55:39">&lt;</operator> <name pos:start="55:41" pos:end="55:55"><name pos:start="55:41" pos:end="55:42">os</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:55">nb_segments</name></name> <operator pos:start="55:57" pos:end="55:58">&amp;&amp;</operator>

                       <name pos:start="57:24" pos:end="57:51"><name pos:start="57:24" pos:end="57:25">os</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:35">segments</name><index pos:start="57:36" pos:end="57:51">[<expr pos:start="57:37" pos:end="57:50"><name pos:start="57:37" pos:end="57:37">i</name> <operator pos:start="57:39" pos:end="57:39">+</operator> <name pos:start="57:41" pos:end="57:46">repeat</name> <operator pos:start="57:48" pos:end="57:48">+</operator> <literal type="number" pos:start="57:50" pos:end="57:50">1</literal></expr>]</index></name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:61">duration</name> <operator pos:start="57:63" pos:end="57:64">==</operator> <name pos:start="57:66" pos:end="57:78"><name pos:start="57:66" pos:end="57:68">seg</name><operator pos:start="57:69" pos:end="57:70">-&gt;</operator><name pos:start="57:71" pos:end="57:78">duration</name></name> <operator pos:start="57:80" pos:end="57:81">&amp;&amp;</operator>

                       <name pos:start="59:24" pos:end="59:51"><name pos:start="59:24" pos:end="59:25">os</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:35">segments</name><index pos:start="59:36" pos:end="59:51">[<expr pos:start="59:37" pos:end="59:50"><name pos:start="59:37" pos:end="59:37">i</name> <operator pos:start="59:39" pos:end="59:39">+</operator> <name pos:start="59:41" pos:end="59:46">repeat</name> <operator pos:start="59:48" pos:end="59:48">+</operator> <literal type="number" pos:start="59:50" pos:end="59:50">1</literal></expr>]</index></name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:57">time</name> <operator pos:start="59:59" pos:end="59:60">==</operator> <name pos:start="59:62" pos:end="59:85"><name pos:start="59:62" pos:end="59:63">os</name><operator pos:start="59:64" pos:end="59:65">-&gt;</operator><name pos:start="59:66" pos:end="59:73">segments</name><index pos:start="59:74" pos:end="59:85">[<expr pos:start="59:75" pos:end="59:84"><name pos:start="59:75" pos:end="59:75">i</name> <operator pos:start="59:77" pos:end="59:77">+</operator> <name pos:start="59:79" pos:end="59:84">repeat</name></expr>]</index></name><operator pos:start="59:86" pos:end="59:87">-&gt;</operator><name pos:start="59:88" pos:end="59:91">time</name> <operator pos:start="59:93" pos:end="59:93">+</operator> <name pos:start="59:95" pos:end="59:118"><name pos:start="59:95" pos:end="59:96">os</name><operator pos:start="59:97" pos:end="59:98">-&gt;</operator><name pos:start="59:99" pos:end="59:106">segments</name><index pos:start="59:107" pos:end="59:118">[<expr pos:start="59:108" pos:end="59:117"><name pos:start="59:108" pos:end="59:108">i</name> <operator pos:start="59:110" pos:end="59:110">+</operator> <name pos:start="59:112" pos:end="59:117">repeat</name></expr>]</index></name><operator pos:start="59:119" pos:end="59:120">-&gt;</operator><name pos:start="59:121" pos:end="59:128">duration</name></expr>)</condition><block type="pseudo" pos:start="61:21" pos:end="61:29"><block_content pos:start="61:21" pos:end="61:29">

                    <expr_stmt pos:start="61:21" pos:end="61:29"><expr pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:26">repeat</name><operator pos:start="61:27" pos:end="61:28">++</operator></expr>;</expr_stmt></block_content></block></while>

                <if_stmt pos:start="63:17" pos:end="65:58"><if pos:start="63:17" pos:end="65:58">if <condition pos:start="63:20" pos:end="63:31">(<expr pos:start="63:21" pos:end="63:30"><name pos:start="63:21" pos:end="63:26">repeat</name> <operator pos:start="63:28" pos:end="63:28">&gt;</operator> <literal type="number" pos:start="63:30" pos:end="63:30">0</literal></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:58"><block_content pos:start="65:21" pos:end="65:58">

                    <expr_stmt pos:start="65:21" pos:end="65:58"><expr pos:start="65:21" pos:end="65:57"><call pos:start="65:21" pos:end="65:57"><name pos:start="65:21" pos:end="65:31">avio_printf</name><argument_list pos:start="65:32" pos:end="65:57">(<argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">out</name></expr></argument>, <argument pos:start="65:38" pos:end="65:48"><expr pos:start="65:38" pos:end="65:48"><literal type="string" pos:start="65:38" pos:end="65:48">"r=\"%d\" "</literal></expr></argument>, <argument pos:start="65:51" pos:end="65:56"><expr pos:start="65:51" pos:end="65:56"><name pos:start="65:51" pos:end="65:56">repeat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:41"><expr pos:start="67:17" pos:end="67:40"><call pos:start="67:17" pos:end="67:40"><name pos:start="67:17" pos:end="67:27">avio_printf</name><argument_list pos:start="67:28" pos:end="67:40">(<argument pos:start="67:29" pos:end="67:31"><expr pos:start="67:29" pos:end="67:31"><name pos:start="67:29" pos:end="67:31">out</name></expr></argument>, <argument pos:start="67:34" pos:end="67:39"><expr pos:start="67:34" pos:end="67:39"><literal type="string" pos:start="67:34" pos:end="67:39">"/&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:32"><expr pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:20">+=</operator> <literal type="number" pos:start="69:22" pos:end="69:24">1</literal> <operator pos:start="69:24" pos:end="69:24">+</operator> <name pos:start="69:26" pos:end="69:31">repeat</name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:57"><expr pos:start="71:17" pos:end="71:56"><name pos:start="71:17" pos:end="71:24">cur_time</name> <operator pos:start="71:26" pos:end="71:27">+=</operator> <operator pos:start="71:29" pos:end="71:29">(</operator><literal type="number" pos:start="71:30" pos:end="71:32">1</literal> <operator pos:start="71:32" pos:end="71:32">+</operator> <name pos:start="71:34" pos:end="71:39">repeat</name><operator pos:start="71:40" pos:end="71:40">)</operator> <operator pos:start="71:42" pos:end="71:42">*</operator> <name pos:start="71:44" pos:end="71:56"><name pos:start="71:44" pos:end="71:46">seg</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:56">duration</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="75:13" pos:end="75:63"><expr pos:start="75:13" pos:end="75:62"><call pos:start="75:13" pos:end="75:62"><name pos:start="75:13" pos:end="75:23">avio_printf</name><argument_list pos:start="75:24" pos:end="75:62">(<argument pos:start="75:25" pos:end="75:27"><expr pos:start="75:25" pos:end="75:27"><name pos:start="75:25" pos:end="75:27">out</name></expr></argument>, <argument pos:start="75:30" pos:end="75:61"><expr pos:start="75:30" pos:end="75:61"><literal type="string" pos:start="75:30" pos:end="75:61">"\t\t\t\t\t&lt;/SegmentTimeline&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:57"><expr pos:start="79:9" pos:end="79:56"><call pos:start="79:9" pos:end="79:56"><name pos:start="79:9" pos:end="79:19">avio_printf</name><argument_list pos:start="79:20" pos:end="79:56">(<argument pos:start="79:21" pos:end="79:23"><expr pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:23">out</name></expr></argument>, <argument pos:start="79:26" pos:end="79:55"><expr pos:start="79:26" pos:end="79:55"><literal type="string" pos:start="79:26" pos:end="79:55">"\t\t\t\t&lt;/SegmentTemplate&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="81:7" pos:end="105:5">else if <condition pos:start="81:15" pos:end="81:30">(<expr pos:start="81:16" pos:end="81:29"><name pos:start="81:16" pos:end="81:29"><name pos:start="81:16" pos:end="81:16">c</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:29">single_file</name></name></expr>)</condition> <block pos:start="81:32" pos:end="105:5">{<block_content pos:start="83:9" pos:end="103:53">

        <expr_stmt pos:start="83:9" pos:end="83:74"><expr pos:start="83:9" pos:end="83:73"><call pos:start="83:9" pos:end="83:73"><name pos:start="83:9" pos:end="83:19">avio_printf</name><argument_list pos:start="83:20" pos:end="83:73">(<argument pos:start="83:21" pos:end="83:23"><expr pos:start="83:21" pos:end="83:23"><name pos:start="83:21" pos:end="83:23">out</name></expr></argument>, <argument pos:start="83:26" pos:end="83:58"><expr pos:start="83:26" pos:end="83:58"><literal type="string" pos:start="83:26" pos:end="83:58">"\t\t\t\t&lt;BaseURL&gt;%s&lt;/BaseURL&gt;\n"</literal></expr></argument>, <argument pos:start="83:61" pos:end="83:72"><expr pos:start="83:61" pos:end="83:72"><name pos:start="83:61" pos:end="83:72"><name pos:start="83:61" pos:end="83:62">os</name><operator pos:start="83:63" pos:end="83:64">-&gt;</operator><name pos:start="83:65" pos:end="83:72">initfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:157"><expr pos:start="85:9" pos:end="85:156"><call pos:start="85:9" pos:end="85:156"><name pos:start="85:9" pos:end="85:19">avio_printf</name><argument_list pos:start="85:20" pos:end="85:156">(<argument pos:start="85:21" pos:end="85:23"><expr pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">out</name></expr></argument>, <argument pos:start="85:26" pos:end="85:109"><expr pos:start="85:26" pos:end="85:109"><literal type="string" pos:start="85:26" pos:end="85:77">"\t\t\t\t&lt;SegmentList timescale=\"%d\" duration=\"%"</literal><name pos:start="85:78" pos:end="85:83">PRId64</name><literal type="string" pos:start="85:84" pos:end="85:109">"\" startNumber=\"%d\"&gt;\n"</literal></expr></argument>, <argument pos:start="85:112" pos:end="85:123"><expr pos:start="85:112" pos:end="85:123"><name pos:start="85:112" pos:end="85:123">AV_TIME_BASE</name></expr></argument>, <argument pos:start="85:126" pos:end="85:141"><expr pos:start="85:126" pos:end="85:141"><name pos:start="85:126" pos:end="85:141"><name pos:start="85:126" pos:end="85:126">c</name><operator pos:start="85:127" pos:end="85:128">-&gt;</operator><name pos:start="85:129" pos:end="85:141">last_duration</name></name></expr></argument>, <argument pos:start="85:144" pos:end="85:155"><expr pos:start="85:144" pos:end="85:155"><name pos:start="85:144" pos:end="85:155">start_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:157"><expr pos:start="87:9" pos:end="87:156"><call pos:start="87:9" pos:end="87:156"><name pos:start="87:9" pos:end="87:19">avio_printf</name><argument_list pos:start="87:20" pos:end="87:156">(<argument pos:start="87:21" pos:end="87:23"><expr pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:23">out</name></expr></argument>, <argument pos:start="87:26" pos:end="87:87"><expr pos:start="87:26" pos:end="87:87"><literal type="string" pos:start="87:26" pos:end="87:62">"\t\t\t\t\t&lt;Initialization range=\"%"</literal><name pos:start="87:63" pos:end="87:68">PRId64</name><literal type="string" pos:start="87:69" pos:end="87:72">"-%"</literal><name pos:start="87:73" pos:end="87:78">PRId64</name><literal type="string" pos:start="87:79" pos:end="87:87">"\" /&gt;\n"</literal></expr></argument>, <argument pos:start="87:90" pos:end="87:107"><expr pos:start="87:90" pos:end="87:107"><name pos:start="87:90" pos:end="87:107"><name pos:start="87:90" pos:end="87:91">os</name><operator pos:start="87:92" pos:end="87:93">-&gt;</operator><name pos:start="87:94" pos:end="87:107">init_start_pos</name></name></expr></argument>, <argument pos:start="87:110" pos:end="87:155"><expr pos:start="87:110" pos:end="87:155"><name pos:start="87:110" pos:end="87:127"><name pos:start="87:110" pos:end="87:111">os</name><operator pos:start="87:112" pos:end="87:113">-&gt;</operator><name pos:start="87:114" pos:end="87:127">init_start_pos</name></name> <operator pos:start="87:129" pos:end="87:129">+</operator> <name pos:start="87:131" pos:end="87:151"><name pos:start="87:131" pos:end="87:132">os</name><operator pos:start="87:133" pos:end="87:134">-&gt;</operator><name pos:start="87:135" pos:end="87:151">init_range_length</name></name> <operator pos:start="87:153" pos:end="87:153">-</operator> <literal type="number" pos:start="87:155" pos:end="87:155">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="89:9" pos:end="101:9">for <control pos:start="89:13" pos:end="89:55">(<init pos:start="89:14" pos:end="89:29"><expr pos:start="89:14" pos:end="89:28"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:28">start_index</name></expr>;</init> <condition pos:start="89:31" pos:end="89:50"><expr pos:start="89:31" pos:end="89:49"><name pos:start="89:31" pos:end="89:31">i</name> <operator pos:start="89:33" pos:end="89:33">&lt;</operator> <name pos:start="89:35" pos:end="89:49"><name pos:start="89:35" pos:end="89:36">os</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:49">nb_segments</name></name></expr>;</condition> <incr pos:start="89:52" pos:end="89:54"><expr pos:start="89:52" pos:end="89:54"><name pos:start="89:52" pos:end="89:52">i</name><operator pos:start="89:53" pos:end="89:54">++</operator></expr></incr>)</control> <block pos:start="89:57" pos:end="101:9">{<block_content pos:start="91:13" pos:end="99:37">

            <decl_stmt pos:start="91:13" pos:end="91:43"><decl pos:start="91:13" pos:end="91:42"><type pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:19">Segment</name> <modifier pos:start="91:21" pos:end="91:21">*</modifier></type><name pos:start="91:22" pos:end="91:24">seg</name> <init pos:start="91:26" pos:end="91:42">= <expr pos:start="91:28" pos:end="91:42"><name pos:start="91:28" pos:end="91:42"><name pos:start="91:28" pos:end="91:29">os</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:39">segments</name><index pos:start="91:40" pos:end="91:42">[<expr pos:start="91:41" pos:end="91:41"><name pos:start="91:41" pos:end="91:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:146"><expr pos:start="93:13" pos:end="93:145"><call pos:start="93:13" pos:end="93:145"><name pos:start="93:13" pos:end="93:23">avio_printf</name><argument_list pos:start="93:24" pos:end="93:145">(<argument pos:start="93:25" pos:end="93:27"><expr pos:start="93:25" pos:end="93:27"><name pos:start="93:25" pos:end="93:27">out</name></expr></argument>, <argument pos:start="93:30" pos:end="93:88"><expr pos:start="93:30" pos:end="93:88"><literal type="string" pos:start="93:30" pos:end="93:67">"\t\t\t\t\t&lt;SegmentURL mediaRange=\"%"</literal><name pos:start="93:68" pos:end="93:73">PRId64</name><literal type="string" pos:start="93:74" pos:end="93:77">"-%"</literal><name pos:start="93:78" pos:end="93:83">PRId64</name><literal type="string" pos:start="93:84" pos:end="93:88">"\" "</literal></expr></argument>, <argument pos:start="93:91" pos:end="93:104"><expr pos:start="93:91" pos:end="93:104"><name pos:start="93:91" pos:end="93:104"><name pos:start="93:91" pos:end="93:93">seg</name><operator pos:start="93:94" pos:end="93:95">-&gt;</operator><name pos:start="93:96" pos:end="93:104">start_pos</name></name></expr></argument>, <argument pos:start="93:107" pos:end="93:144"><expr pos:start="93:107" pos:end="93:144"><name pos:start="93:107" pos:end="93:120"><name pos:start="93:107" pos:end="93:109">seg</name><operator pos:start="93:110" pos:end="93:111">-&gt;</operator><name pos:start="93:112" pos:end="93:120">start_pos</name></name> <operator pos:start="93:122" pos:end="93:122">+</operator> <name pos:start="93:124" pos:end="93:140"><name pos:start="93:124" pos:end="93:126">seg</name><operator pos:start="93:127" pos:end="93:128">-&gt;</operator><name pos:start="93:129" pos:end="93:140">range_length</name></name> <operator pos:start="93:142" pos:end="93:142">-</operator> <literal type="number" pos:start="93:144" pos:end="93:144">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="97:128"><if pos:start="95:13" pos:end="97:128">if <condition pos:start="95:16" pos:end="95:34">(<expr pos:start="95:17" pos:end="95:33"><name pos:start="95:17" pos:end="95:33"><name pos:start="95:17" pos:end="95:19">seg</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:33">index_length</name></name></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:128"><block_content pos:start="97:17" pos:end="97:128">

                <expr_stmt pos:start="97:17" pos:end="97:128"><expr pos:start="97:17" pos:end="97:127"><call pos:start="97:17" pos:end="97:127"><name pos:start="97:17" pos:end="97:27">avio_printf</name><argument_list pos:start="97:28" pos:end="97:127">(<argument pos:start="97:29" pos:end="97:31"><expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:31">out</name></expr></argument>, <argument pos:start="97:34" pos:end="97:70"><expr pos:start="97:34" pos:end="97:70"><literal type="string" pos:start="97:34" pos:end="97:49">"indexRange=\"%"</literal><name pos:start="97:50" pos:end="97:55">PRId64</name><literal type="string" pos:start="97:56" pos:end="97:59">"-%"</literal><name pos:start="97:60" pos:end="97:65">PRId64</name><literal type="string" pos:start="97:66" pos:end="97:70">"\" "</literal></expr></argument>, <argument pos:start="97:73" pos:end="97:86"><expr pos:start="97:73" pos:end="97:86"><name pos:start="97:73" pos:end="97:86"><name pos:start="97:73" pos:end="97:75">seg</name><operator pos:start="97:76" pos:end="97:77">-&gt;</operator><name pos:start="97:78" pos:end="97:86">start_pos</name></name></expr></argument>, <argument pos:start="97:89" pos:end="97:126"><expr pos:start="97:89" pos:end="97:126"><name pos:start="97:89" pos:end="97:102"><name pos:start="97:89" pos:end="97:91">seg</name><operator pos:start="97:92" pos:end="97:93">-&gt;</operator><name pos:start="97:94" pos:end="97:102">start_pos</name></name> <operator pos:start="97:104" pos:end="97:104">+</operator> <name pos:start="97:106" pos:end="97:122"><name pos:start="97:106" pos:end="97:108">seg</name><operator pos:start="97:109" pos:end="97:110">-&gt;</operator><name pos:start="97:111" pos:end="97:122">index_length</name></name> <operator pos:start="97:124" pos:end="97:124">-</operator> <literal type="number" pos:start="97:126" pos:end="97:126">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><call pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:23">avio_printf</name><argument_list pos:start="99:24" pos:end="99:36">(<argument pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:27">out</name></expr></argument>, <argument pos:start="99:30" pos:end="99:35"><expr pos:start="99:30" pos:end="99:35"><literal type="string" pos:start="99:30" pos:end="99:35">"/&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="103:9" pos:end="103:53"><expr pos:start="103:9" pos:end="103:52"><call pos:start="103:9" pos:end="103:52"><name pos:start="103:9" pos:end="103:19">avio_printf</name><argument_list pos:start="103:20" pos:end="103:52">(<argument pos:start="103:21" pos:end="103:23"><expr pos:start="103:21" pos:end="103:23"><name pos:start="103:21" pos:end="103:23">out</name></expr></argument>, <argument pos:start="103:26" pos:end="103:51"><expr pos:start="103:26" pos:end="103:51"><literal type="string" pos:start="103:26" pos:end="103:51">"\t\t\t\t&lt;/SegmentList&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="121:5">else <block pos:start="105:12" pos:end="121:5">{<block_content pos:start="107:9" pos:end="119:53">

        <expr_stmt pos:start="107:9" pos:end="107:157"><expr pos:start="107:9" pos:end="107:156"><call pos:start="107:9" pos:end="107:156"><name pos:start="107:9" pos:end="107:19">avio_printf</name><argument_list pos:start="107:20" pos:end="107:156">(<argument pos:start="107:21" pos:end="107:23"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">out</name></expr></argument>, <argument pos:start="107:26" pos:end="107:109"><expr pos:start="107:26" pos:end="107:109"><literal type="string" pos:start="107:26" pos:end="107:77">"\t\t\t\t&lt;SegmentList timescale=\"%d\" duration=\"%"</literal><name pos:start="107:78" pos:end="107:83">PRId64</name><literal type="string" pos:start="107:84" pos:end="107:109">"\" startNumber=\"%d\"&gt;\n"</literal></expr></argument>, <argument pos:start="107:112" pos:end="107:123"><expr pos:start="107:112" pos:end="107:123"><name pos:start="107:112" pos:end="107:123">AV_TIME_BASE</name></expr></argument>, <argument pos:start="107:126" pos:end="107:141"><expr pos:start="107:126" pos:end="107:141"><name pos:start="107:126" pos:end="107:141"><name pos:start="107:126" pos:end="107:126">c</name><operator pos:start="107:127" pos:end="107:128">-&gt;</operator><name pos:start="107:129" pos:end="107:141">last_duration</name></name></expr></argument>, <argument pos:start="107:144" pos:end="107:155"><expr pos:start="107:144" pos:end="107:155"><name pos:start="107:144" pos:end="107:155">start_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:90"><expr pos:start="109:9" pos:end="109:89"><call pos:start="109:9" pos:end="109:89"><name pos:start="109:9" pos:end="109:19">avio_printf</name><argument_list pos:start="109:20" pos:end="109:89">(<argument pos:start="109:21" pos:end="109:23"><expr pos:start="109:21" pos:end="109:23"><name pos:start="109:21" pos:end="109:23">out</name></expr></argument>, <argument pos:start="109:26" pos:end="109:74"><expr pos:start="109:26" pos:end="109:74"><literal type="string" pos:start="109:26" pos:end="109:74">"\t\t\t\t\t&lt;Initialization sourceURL=\"%s\" /&gt;\n"</literal></expr></argument>, <argument pos:start="109:77" pos:end="109:88"><expr pos:start="109:77" pos:end="109:88"><name pos:start="109:77" pos:end="109:88"><name pos:start="109:77" pos:end="109:78">os</name><operator pos:start="109:79" pos:end="109:80">-&gt;</operator><name pos:start="109:81" pos:end="109:88">initfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="111:9" pos:end="117:9">for <control pos:start="111:13" pos:end="111:55">(<init pos:start="111:14" pos:end="111:29"><expr pos:start="111:14" pos:end="111:28"><name pos:start="111:14" pos:end="111:14">i</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <name pos:start="111:18" pos:end="111:28">start_index</name></expr>;</init> <condition pos:start="111:31" pos:end="111:50"><expr pos:start="111:31" pos:end="111:49"><name pos:start="111:31" pos:end="111:31">i</name> <operator pos:start="111:33" pos:end="111:33">&lt;</operator> <name pos:start="111:35" pos:end="111:49"><name pos:start="111:35" pos:end="111:36">os</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:49">nb_segments</name></name></expr>;</condition> <incr pos:start="111:52" pos:end="111:54"><expr pos:start="111:52" pos:end="111:54"><name pos:start="111:52" pos:end="111:52">i</name><operator pos:start="111:53" pos:end="111:54">++</operator></expr></incr>)</control> <block pos:start="111:57" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:83">

            <decl_stmt pos:start="113:13" pos:end="113:43"><decl pos:start="113:13" pos:end="113:42"><type pos:start="113:13" pos:end="113:21"><name pos:start="113:13" pos:end="113:19">Segment</name> <modifier pos:start="113:21" pos:end="113:21">*</modifier></type><name pos:start="113:22" pos:end="113:24">seg</name> <init pos:start="113:26" pos:end="113:42">= <expr pos:start="113:28" pos:end="113:42"><name pos:start="113:28" pos:end="113:42"><name pos:start="113:28" pos:end="113:29">os</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:39">segments</name><index pos:start="113:40" pos:end="113:42">[<expr pos:start="113:41" pos:end="113:41"><name pos:start="113:41" pos:end="113:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:83"><expr pos:start="115:13" pos:end="115:82"><call pos:start="115:13" pos:end="115:82"><name pos:start="115:13" pos:end="115:23">avio_printf</name><argument_list pos:start="115:24" pos:end="115:82">(<argument pos:start="115:25" pos:end="115:27"><expr pos:start="115:25" pos:end="115:27"><name pos:start="115:25" pos:end="115:27">out</name></expr></argument>, <argument pos:start="115:30" pos:end="115:70"><expr pos:start="115:30" pos:end="115:70"><literal type="string" pos:start="115:30" pos:end="115:70">"\t\t\t\t\t&lt;SegmentURL media=\"%s\" /&gt;\n"</literal></expr></argument>, <argument pos:start="115:73" pos:end="115:81"><expr pos:start="115:73" pos:end="115:81"><name pos:start="115:73" pos:end="115:81"><name pos:start="115:73" pos:end="115:75">seg</name><operator pos:start="115:76" pos:end="115:77">-&gt;</operator><name pos:start="115:78" pos:end="115:81">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="119:9" pos:end="119:53"><expr pos:start="119:9" pos:end="119:52"><call pos:start="119:9" pos:end="119:52"><name pos:start="119:9" pos:end="119:19">avio_printf</name><argument_list pos:start="119:20" pos:end="119:52">(<argument pos:start="119:21" pos:end="119:23"><expr pos:start="119:21" pos:end="119:23"><name pos:start="119:21" pos:end="119:23">out</name></expr></argument>, <argument pos:start="119:26" pos:end="119:51"><expr pos:start="119:26" pos:end="119:51"><literal type="string" pos:start="119:26" pos:end="119:51">"\t\t\t\t&lt;/SegmentList&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="123:5" pos:end="225:5"><if pos:start="123:5" pos:end="225:5">if <condition pos:start="123:8" pos:end="123:57">(<expr pos:start="123:9" pos:end="123:56"><name pos:start="123:9" pos:end="123:23"><name pos:start="123:9" pos:end="123:9">c</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:23">hls_playlist</name></name> <operator pos:start="123:25" pos:end="123:26">&amp;&amp;</operator> <name pos:start="123:28" pos:end="123:38">start_index</name> <operator pos:start="123:40" pos:end="123:40">&lt;</operator> <name pos:start="123:42" pos:end="123:56"><name pos:start="123:42" pos:end="123:43">os</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:56">nb_segments</name></name></expr>)</condition>

    <block pos:start="125:5" pos:end="225:5">{<block_content pos:start="127:9" pos:end="223:60">

        <decl_stmt pos:start="127:9" pos:end="127:59"><decl pos:start="127:9" pos:end="127:58"><type pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:11">int</name></type> <name pos:start="127:13" pos:end="127:21">timescale</name> <init pos:start="127:23" pos:end="127:58">= <expr pos:start="127:25" pos:end="127:58"><name pos:start="127:25" pos:end="127:43"><name pos:start="127:25" pos:end="127:26">os</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:31">ctx</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:40">streams</name><index pos:start="127:41" pos:end="127:43">[<expr pos:start="127:42" pos:end="127:42"><literal type="number" pos:start="127:42" pos:end="127:42">0</literal></expr>]</index></name><operator pos:start="127:44" pos:end="127:45">-&gt;</operator><name pos:start="127:46" pos:end="127:58"><name pos:start="127:46" pos:end="127:54">time_base</name><operator pos:start="127:55" pos:end="127:55">.</operator><name pos:start="127:56" pos:end="127:58">den</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="129:9" pos:end="129:37"><decl pos:start="129:9" pos:end="129:36"><type pos:start="129:9" pos:end="129:12"><name pos:start="129:9" pos:end="129:12">char</name></type> <name pos:start="129:14" pos:end="129:36"><name pos:start="129:14" pos:end="129:30">temp_filename_hls</name><index pos:start="129:31" pos:end="129:36">[<expr pos:start="129:32" pos:end="129:35"><literal type="number" pos:start="129:32" pos:end="129:35">1024</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:32"><decl pos:start="131:9" pos:end="131:31"><type pos:start="131:9" pos:end="131:12"><name pos:start="131:9" pos:end="131:12">char</name></type> <name pos:start="131:14" pos:end="131:31"><name pos:start="131:14" pos:end="131:25">filename_hls</name><index pos:start="131:26" pos:end="131:31">[<expr pos:start="131:27" pos:end="131:30"><literal type="number" pos:start="131:27" pos:end="131:30">1024</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="133:9" pos:end="133:36"><decl pos:start="133:9" pos:end="133:35"><type pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:19">AVIOContext</name> <modifier pos:start="133:21" pos:end="133:21">*</modifier></type><name pos:start="133:22" pos:end="133:28">out_hls</name> <init pos:start="133:30" pos:end="133:35">= <expr pos:start="133:32" pos:end="133:35"><name pos:start="133:32" pos:end="133:35">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="135:9" pos:end="135:39"><decl pos:start="135:9" pos:end="135:38"><type pos:start="135:9" pos:end="135:22"><name pos:start="135:9" pos:end="135:20">AVDictionary</name> <modifier pos:start="135:22" pos:end="135:22">*</modifier></type><name pos:start="135:23" pos:end="135:31">http_opts</name> <init pos:start="135:33" pos:end="135:38">= <expr pos:start="135:35" pos:end="135:38"><name pos:start="135:35" pos:end="135:38">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="137:9" pos:end="137:32"><decl pos:start="137:9" pos:end="137:31"><type pos:start="137:9" pos:end="137:11"><name pos:start="137:9" pos:end="137:11">int</name></type> <name pos:start="137:13" pos:end="137:27">target_duration</name> <init pos:start="137:29" pos:end="137:31">= <expr pos:start="137:31" pos:end="137:31"><literal type="number" pos:start="137:31" pos:end="137:31">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="139:9" pos:end="139:20"><decl pos:start="139:9" pos:end="139:19"><type pos:start="139:9" pos:end="139:11"><name pos:start="139:9" pos:end="139:11">int</name></type> <name pos:start="139:13" pos:end="139:15">ret</name> <init pos:start="139:17" pos:end="139:19">= <expr pos:start="139:19" pos:end="139:19"><literal type="number" pos:start="139:19" pos:end="139:19">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="141:9" pos:end="141:64"><decl pos:start="141:9" pos:end="141:63"><type pos:start="141:9" pos:end="141:20"><specifier pos:start="141:9" pos:end="141:13">const</specifier> <name pos:start="141:15" pos:end="141:18">char</name> <modifier pos:start="141:20" pos:end="141:20">*</modifier></type><name pos:start="141:21" pos:end="141:25">proto</name> <init pos:start="141:27" pos:end="141:63">= <expr pos:start="141:29" pos:end="141:63"><call pos:start="141:29" pos:end="141:63"><name pos:start="141:29" pos:end="141:51">avio_find_protocol_name</name><argument_list pos:start="141:52" pos:end="141:63">(<argument pos:start="141:53" pos:end="141:62"><expr pos:start="141:53" pos:end="141:62"><name pos:start="141:53" pos:end="141:62"><name pos:start="141:53" pos:end="141:53">c</name><operator pos:start="141:54" pos:end="141:55">-&gt;</operator><name pos:start="141:56" pos:end="141:62">dirname</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="143:9" pos:end="143:57"><decl pos:start="143:9" pos:end="143:56"><type pos:start="143:9" pos:end="143:11"><name pos:start="143:9" pos:end="143:11">int</name></type> <name pos:start="143:13" pos:end="143:22">use_rename</name> <init pos:start="143:24" pos:end="143:56">= <expr pos:start="143:26" pos:end="143:56"><name pos:start="143:26" pos:end="143:30">proto</name> <operator pos:start="143:32" pos:end="143:33">&amp;&amp;</operator> <operator pos:start="143:35" pos:end="143:35">!</operator><call pos:start="143:36" pos:end="143:56"><name pos:start="143:36" pos:end="143:41">strcmp</name><argument_list pos:start="143:42" pos:end="143:56">(<argument pos:start="143:43" pos:end="143:47"><expr pos:start="143:43" pos:end="143:47"><name pos:start="143:43" pos:end="143:47">proto</name></expr></argument>, <argument pos:start="143:50" pos:end="143:55"><expr pos:start="143:50" pos:end="143:55"><literal type="string" pos:start="143:50" pos:end="143:55">"file"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="147:9" pos:end="149:61"><expr pos:start="147:9" pos:end="149:60"><call pos:start="147:9" pos:end="149:60"><name pos:start="147:9" pos:end="147:29">get_hls_playlist_name</name><argument_list pos:start="147:30" pos:end="149:60">(<argument pos:start="147:31" pos:end="147:42"><expr pos:start="147:31" pos:end="147:42"><name pos:start="147:31" pos:end="147:42">filename_hls</name></expr></argument>, <argument pos:start="147:45" pos:end="147:64"><expr pos:start="147:45" pos:end="147:64"><sizeof pos:start="147:45" pos:end="147:64">sizeof<argument_list pos:start="147:51" pos:end="147:64">(<argument pos:start="147:52" pos:end="147:63"><expr pos:start="147:52" pos:end="147:63"><name pos:start="147:52" pos:end="147:63">filename_hls</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                              <argument pos:start="149:31" pos:end="149:40"><expr pos:start="149:31" pos:end="149:40"><name pos:start="149:31" pos:end="149:40"><name pos:start="149:31" pos:end="149:31">c</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:40">dirname</name></name></expr></argument>, <argument pos:start="149:43" pos:end="149:59"><expr pos:start="149:43" pos:end="149:59"><name pos:start="149:43" pos:end="149:59">representation_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:107"><expr pos:start="153:9" pos:end="153:106"><call pos:start="153:9" pos:end="153:106"><name pos:start="153:9" pos:end="153:16">snprintf</name><argument_list pos:start="153:17" pos:end="153:106">(<argument pos:start="153:18" pos:end="153:34"><expr pos:start="153:18" pos:end="153:34"><name pos:start="153:18" pos:end="153:34">temp_filename_hls</name></expr></argument>, <argument pos:start="153:37" pos:end="153:61"><expr pos:start="153:37" pos:end="153:61"><sizeof pos:start="153:37" pos:end="153:61">sizeof<argument_list pos:start="153:43" pos:end="153:61">(<argument pos:start="153:44" pos:end="153:60"><expr pos:start="153:44" pos:end="153:60"><name pos:start="153:44" pos:end="153:60">temp_filename_hls</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="153:64" pos:end="153:91"><expr pos:start="153:64" pos:end="153:91"><ternary pos:start="153:64" pos:end="153:91"><condition pos:start="153:64" pos:end="153:75"><expr pos:start="153:64" pos:end="153:73"><name pos:start="153:64" pos:end="153:73">use_rename</name></expr> ?</condition><then pos:start="153:77" pos:end="153:84"> <expr pos:start="153:77" pos:end="153:84"><literal type="string" pos:start="153:77" pos:end="153:84">"%s.tmp"</literal></expr> </then><else pos:start="153:86" pos:end="153:91">: <expr pos:start="153:88" pos:end="153:91"><literal type="string" pos:start="153:88" pos:end="153:91">"%s"</literal></expr></else></ternary></expr></argument>, <argument pos:start="153:94" pos:end="153:105"><expr pos:start="153:94" pos:end="153:105"><name pos:start="153:94" pos:end="153:105">filename_hls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:40"><expr pos:start="157:9" pos:end="157:39"><call pos:start="157:9" pos:end="157:39"><name pos:start="157:9" pos:end="157:24">set_http_options</name><argument_list pos:start="157:25" pos:end="157:39">(<argument pos:start="157:26" pos:end="157:35"><expr pos:start="157:26" pos:end="157:35"><operator pos:start="157:26" pos:end="157:26">&amp;</operator><name pos:start="157:27" pos:end="157:35">http_opts</name></expr></argument>, <argument pos:start="157:38" pos:end="157:38"><expr pos:start="157:38" pos:end="157:38"><name pos:start="157:38" pos:end="157:38">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:83"><expr pos:start="159:9" pos:end="159:82"><call pos:start="159:9" pos:end="159:82"><name pos:start="159:9" pos:end="159:18">avio_open2</name><argument_list pos:start="159:19" pos:end="159:82">(<argument pos:start="159:20" pos:end="159:27"><expr pos:start="159:20" pos:end="159:27"><operator pos:start="159:20" pos:end="159:20">&amp;</operator><name pos:start="159:21" pos:end="159:27">out_hls</name></expr></argument>, <argument pos:start="159:30" pos:end="159:46"><expr pos:start="159:30" pos:end="159:46"><name pos:start="159:30" pos:end="159:46">temp_filename_hls</name></expr></argument>, <argument pos:start="159:49" pos:end="159:63"><expr pos:start="159:49" pos:end="159:63"><name pos:start="159:49" pos:end="159:63">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="159:66" pos:end="159:69"><expr pos:start="159:66" pos:end="159:69"><name pos:start="159:66" pos:end="159:69">NULL</name></expr></argument>, <argument pos:start="159:72" pos:end="159:81"><expr pos:start="159:72" pos:end="159:81"><operator pos:start="159:72" pos:end="159:72">&amp;</operator><name pos:start="159:73" pos:end="159:81">http_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:33"><expr pos:start="161:9" pos:end="161:32"><call pos:start="161:9" pos:end="161:32"><name pos:start="161:9" pos:end="161:20">av_dict_free</name><argument_list pos:start="161:21" pos:end="161:32">(<argument pos:start="161:22" pos:end="161:31"><expr pos:start="161:22" pos:end="161:31"><operator pos:start="161:22" pos:end="161:22">&amp;</operator><name pos:start="161:23" pos:end="161:31">http_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="163:9" pos:end="173:9">for <control pos:start="163:13" pos:end="163:55">(<init pos:start="163:14" pos:end="163:29"><expr pos:start="163:14" pos:end="163:28"><name pos:start="163:14" pos:end="163:14">i</name> <operator pos:start="163:16" pos:end="163:16">=</operator> <name pos:start="163:18" pos:end="163:28">start_index</name></expr>;</init> <condition pos:start="163:31" pos:end="163:50"><expr pos:start="163:31" pos:end="163:49"><name pos:start="163:31" pos:end="163:31">i</name> <operator pos:start="163:33" pos:end="163:33">&lt;</operator> <name pos:start="163:35" pos:end="163:49"><name pos:start="163:35" pos:end="163:36">os</name><operator pos:start="163:37" pos:end="163:38">-&gt;</operator><name pos:start="163:39" pos:end="163:49">nb_segments</name></name></expr>;</condition> <incr pos:start="163:52" pos:end="163:54"><expr pos:start="163:52" pos:end="163:54"><name pos:start="163:52" pos:end="163:52">i</name><operator pos:start="163:53" pos:end="163:54">++</operator></expr></incr>)</control> <block pos:start="163:57" pos:end="173:9">{<block_content pos:start="165:13" pos:end="171:68">

            <decl_stmt pos:start="165:13" pos:end="165:43"><decl pos:start="165:13" pos:end="165:42"><type pos:start="165:13" pos:end="165:21"><name pos:start="165:13" pos:end="165:19">Segment</name> <modifier pos:start="165:21" pos:end="165:21">*</modifier></type><name pos:start="165:22" pos:end="165:24">seg</name> <init pos:start="165:26" pos:end="165:42">= <expr pos:start="165:28" pos:end="165:42"><name pos:start="165:28" pos:end="165:42"><name pos:start="165:28" pos:end="165:29">os</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:39">segments</name><index pos:start="165:40" pos:end="165:42">[<expr pos:start="165:41" pos:end="165:41"><name pos:start="165:41" pos:end="165:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="167:13" pos:end="167:65"><decl pos:start="167:13" pos:end="167:64"><type pos:start="167:13" pos:end="167:18"><name pos:start="167:13" pos:end="167:18">double</name></type> <name pos:start="167:20" pos:end="167:27">duration</name> <init pos:start="167:29" pos:end="167:64">= <expr pos:start="167:31" pos:end="167:64"><operator pos:start="167:31" pos:end="167:31">(</operator><name pos:start="167:32" pos:end="167:37">double</name><operator pos:start="167:38" pos:end="167:38">)</operator> <name pos:start="167:40" pos:end="167:52"><name pos:start="167:40" pos:end="167:42">seg</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:52">duration</name></name> <operator pos:start="167:54" pos:end="167:54">/</operator> <name pos:start="167:56" pos:end="167:64">timescale</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="169:13" pos:end="171:68"><if pos:start="169:13" pos:end="171:68">if <condition pos:start="169:16" pos:end="169:44">(<expr pos:start="169:17" pos:end="169:43"><name pos:start="169:17" pos:end="169:31">target_duration</name> <operator pos:start="169:33" pos:end="169:34">&lt;=</operator> <name pos:start="169:36" pos:end="169:43">duration</name></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:68"><block_content pos:start="171:17" pos:end="171:68">

                <expr_stmt pos:start="171:17" pos:end="171:68"><expr pos:start="171:17" pos:end="171:67"><name pos:start="171:17" pos:end="171:31">target_duration</name> <operator pos:start="171:33" pos:end="171:33">=</operator> <call pos:start="171:35" pos:end="171:67"><name pos:start="171:35" pos:end="171:57">hls_get_int_from_double</name><argument_list pos:start="171:58" pos:end="171:67">(<argument pos:start="171:59" pos:end="171:66"><expr pos:start="171:59" pos:end="171:66"><name pos:start="171:59" pos:end="171:66">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="177:9" pos:end="179:71"><expr pos:start="177:9" pos:end="179:70"><call pos:start="177:9" pos:end="179:70"><name pos:start="177:9" pos:end="177:36">ff_hls_write_playlist_header</name><argument_list pos:start="177:37" pos:end="179:70">(<argument pos:start="177:38" pos:end="177:44"><expr pos:start="177:38" pos:end="177:44"><name pos:start="177:38" pos:end="177:44">out_hls</name></expr></argument>, <argument pos:start="177:47" pos:end="177:47"><expr pos:start="177:47" pos:end="177:47"><literal type="number" pos:start="177:47" pos:end="177:47">6</literal></expr></argument>, <argument pos:start="177:50" pos:end="177:51"><expr pos:start="177:50" pos:end="177:51"><operator pos:start="177:50" pos:end="177:50">-</operator><literal type="number" pos:start="177:51" pos:end="177:51">1</literal></expr></argument>, <argument pos:start="177:54" pos:end="177:68"><expr pos:start="177:54" pos:end="177:68"><name pos:start="177:54" pos:end="177:68">target_duration</name></expr></argument>,

                                     <argument pos:start="179:38" pos:end="179:49"><expr pos:start="179:38" pos:end="179:49"><name pos:start="179:38" pos:end="179:49">start_number</name></expr></argument>, <argument pos:start="179:52" pos:end="179:69"><expr pos:start="179:52" pos:end="179:69"><name pos:start="179:52" pos:end="179:69">PLAYLIST_TYPE_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="183:9" pos:end="185:74"><expr pos:start="183:9" pos:end="185:73"><call pos:start="183:9" pos:end="185:73"><name pos:start="183:9" pos:end="183:30">ff_hls_write_init_file</name><argument_list pos:start="183:31" pos:end="185:73">(<argument pos:start="183:32" pos:end="183:38"><expr pos:start="183:32" pos:end="183:38"><name pos:start="183:32" pos:end="183:38">out_hls</name></expr></argument>, <argument pos:start="183:41" pos:end="183:52"><expr pos:start="183:41" pos:end="183:52"><name pos:start="183:41" pos:end="183:52"><name pos:start="183:41" pos:end="183:42">os</name><operator pos:start="183:43" pos:end="183:44">-&gt;</operator><name pos:start="183:45" pos:end="183:52">initfile</name></name></expr></argument>, <argument pos:start="183:55" pos:end="183:68"><expr pos:start="183:55" pos:end="183:68"><name pos:start="183:55" pos:end="183:68"><name pos:start="183:55" pos:end="183:55">c</name><operator pos:start="183:56" pos:end="183:57">-&gt;</operator><name pos:start="183:58" pos:end="183:68">single_file</name></name></expr></argument>,

                               <argument pos:start="185:32" pos:end="185:52"><expr pos:start="185:32" pos:end="185:52"><name pos:start="185:32" pos:end="185:52"><name pos:start="185:32" pos:end="185:33">os</name><operator pos:start="185:34" pos:end="185:35">-&gt;</operator><name pos:start="185:36" pos:end="185:52">init_range_length</name></name></expr></argument>, <argument pos:start="185:55" pos:end="185:72"><expr pos:start="185:55" pos:end="185:72"><name pos:start="185:55" pos:end="185:72"><name pos:start="185:55" pos:end="185:56">os</name><operator pos:start="185:57" pos:end="185:58">-&gt;</operator><name pos:start="185:59" pos:end="185:72">init_start_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="189:9" pos:end="209:9">for <control pos:start="189:13" pos:end="189:55">(<init pos:start="189:14" pos:end="189:29"><expr pos:start="189:14" pos:end="189:28"><name pos:start="189:14" pos:end="189:14">i</name> <operator pos:start="189:16" pos:end="189:16">=</operator> <name pos:start="189:18" pos:end="189:28">start_index</name></expr>;</init> <condition pos:start="189:31" pos:end="189:50"><expr pos:start="189:31" pos:end="189:49"><name pos:start="189:31" pos:end="189:31">i</name> <operator pos:start="189:33" pos:end="189:33">&lt;</operator> <name pos:start="189:35" pos:end="189:49"><name pos:start="189:35" pos:end="189:36">os</name><operator pos:start="189:37" pos:end="189:38">-&gt;</operator><name pos:start="189:39" pos:end="189:49">nb_segments</name></name></expr>;</condition> <incr pos:start="189:52" pos:end="189:54"><expr pos:start="189:52" pos:end="189:54"><name pos:start="189:52" pos:end="189:52">i</name><operator pos:start="189:53" pos:end="189:54">++</operator></expr></incr>)</control> <block pos:start="189:57" pos:end="209:9">{<block_content pos:start="191:13" pos:end="207:13">

            <decl_stmt pos:start="191:13" pos:end="191:43"><decl pos:start="191:13" pos:end="191:42"><type pos:start="191:13" pos:end="191:21"><name pos:start="191:13" pos:end="191:19">Segment</name> <modifier pos:start="191:21" pos:end="191:21">*</modifier></type><name pos:start="191:22" pos:end="191:24">seg</name> <init pos:start="191:26" pos:end="191:42">= <expr pos:start="191:28" pos:end="191:42"><name pos:start="191:28" pos:end="191:42"><name pos:start="191:28" pos:end="191:29">os</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:39">segments</name><index pos:start="191:40" pos:end="191:42">[<expr pos:start="191:41" pos:end="191:41"><name pos:start="191:41" pos:end="191:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="193:13" pos:end="201:42"><expr pos:start="193:13" pos:end="201:41"><name pos:start="193:13" pos:end="193:15">ret</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <call pos:start="193:19" pos:end="201:41"><name pos:start="193:19" pos:end="193:41">ff_hls_write_file_entry</name><argument_list pos:start="193:42" pos:end="201:41">(<argument pos:start="193:43" pos:end="193:49"><expr pos:start="193:43" pos:end="193:49"><name pos:start="193:43" pos:end="193:49">out_hls</name></expr></argument>, <argument pos:start="193:52" pos:end="193:52"><expr pos:start="193:52" pos:end="193:52"><literal type="number" pos:start="193:52" pos:end="193:52">0</literal></expr></argument>, <argument pos:start="193:55" pos:end="193:68"><expr pos:start="193:55" pos:end="193:68"><name pos:start="193:55" pos:end="193:68"><name pos:start="193:55" pos:end="193:55">c</name><operator pos:start="193:56" pos:end="193:57">-&gt;</operator><name pos:start="193:58" pos:end="193:68">single_file</name></name></expr></argument>,

                                    <argument pos:start="195:37" pos:end="195:70"><expr pos:start="195:37" pos:end="195:70"><operator pos:start="195:37" pos:end="195:37">(</operator><name pos:start="195:38" pos:end="195:43">double</name><operator pos:start="195:44" pos:end="195:44">)</operator> <name pos:start="195:46" pos:end="195:58"><name pos:start="195:46" pos:end="195:48">seg</name><operator pos:start="195:49" pos:end="195:50">-&gt;</operator><name pos:start="195:51" pos:end="195:58">duration</name></name> <operator pos:start="195:60" pos:end="195:60">/</operator> <name pos:start="195:62" pos:end="195:70">timescale</name></expr></argument>, <argument pos:start="195:73" pos:end="195:73"><expr pos:start="195:73" pos:end="195:73"><literal type="number" pos:start="195:73" pos:end="195:73">0</literal></expr></argument>,

                                    <argument pos:start="197:37" pos:end="197:53"><expr pos:start="197:37" pos:end="197:53"><name pos:start="197:37" pos:end="197:53"><name pos:start="197:37" pos:end="197:39">seg</name><operator pos:start="197:40" pos:end="197:41">-&gt;</operator><name pos:start="197:42" pos:end="197:53">range_length</name></name></expr></argument>, <argument pos:start="197:56" pos:end="197:69"><expr pos:start="197:56" pos:end="197:69"><name pos:start="197:56" pos:end="197:69"><name pos:start="197:56" pos:end="197:58">seg</name><operator pos:start="197:59" pos:end="197:60">-&gt;</operator><name pos:start="197:61" pos:end="197:69">start_pos</name></name></expr></argument>, <argument pos:start="197:72" pos:end="197:75"><expr pos:start="197:72" pos:end="197:75"><name pos:start="197:72" pos:end="197:75">NULL</name></expr></argument>,

                                    <argument pos:start="199:37" pos:end="199:77"><expr pos:start="199:37" pos:end="199:77"><ternary pos:start="199:37" pos:end="199:77"><condition pos:start="199:37" pos:end="199:52"><expr pos:start="199:37" pos:end="199:50"><name pos:start="199:37" pos:end="199:50"><name pos:start="199:37" pos:end="199:37">c</name><operator pos:start="199:38" pos:end="199:39">-&gt;</operator><name pos:start="199:40" pos:end="199:50">single_file</name></name></expr> ?</condition><then pos:start="199:54" pos:end="199:65"> <expr pos:start="199:54" pos:end="199:65"><name pos:start="199:54" pos:end="199:65"><name pos:start="199:54" pos:end="199:55">os</name><operator pos:start="199:56" pos:end="199:57">-&gt;</operator><name pos:start="199:58" pos:end="199:65">initfile</name></name></expr> </then><else pos:start="199:67" pos:end="199:77">: <expr pos:start="199:69" pos:end="199:77"><name pos:start="199:69" pos:end="199:77"><name pos:start="199:69" pos:end="199:71">seg</name><operator pos:start="199:72" pos:end="199:73">-&gt;</operator><name pos:start="199:74" pos:end="199:77">file</name></name></expr></else></ternary></expr></argument>,

                                    <argument pos:start="201:37" pos:end="201:40"><expr pos:start="201:37" pos:end="201:40"><name pos:start="201:37" pos:end="201:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="207:13"><if pos:start="203:13" pos:end="207:13">if <condition pos:start="203:16" pos:end="203:24">(<expr pos:start="203:17" pos:end="203:23"><name pos:start="203:17" pos:end="203:19">ret</name> <operator pos:start="203:21" pos:end="203:21">&lt;</operator> <literal type="number" pos:start="203:23" pos:end="203:23">0</literal></expr>)</condition> <block pos:start="203:26" pos:end="207:13">{<block_content pos:start="205:17" pos:end="205:87">

                <expr_stmt pos:start="205:17" pos:end="205:87"><expr pos:start="205:17" pos:end="205:86"><call pos:start="205:17" pos:end="205:86"><name pos:start="205:17" pos:end="205:22">av_log</name><argument_list pos:start="205:23" pos:end="205:86">(<argument pos:start="205:24" pos:end="205:30"><expr pos:start="205:24" pos:end="205:30"><name pos:start="205:24" pos:end="205:30"><name pos:start="205:24" pos:end="205:25">os</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:30">ctx</name></name></expr></argument>, <argument pos:start="205:33" pos:end="205:46"><expr pos:start="205:33" pos:end="205:46"><name pos:start="205:33" pos:end="205:46">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="205:49" pos:end="205:85"><expr pos:start="205:49" pos:end="205:85"><literal type="string" pos:start="205:49" pos:end="205:85">"ff_hls_write_file_entry get error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="213:9" pos:end="215:43"><if pos:start="213:9" pos:end="215:43">if <condition pos:start="213:12" pos:end="213:18">(<expr pos:start="213:13" pos:end="213:17"><name pos:start="213:13" pos:end="213:17">final</name></expr>)</condition><block type="pseudo" pos:start="215:13" pos:end="215:43"><block_content pos:start="215:13" pos:end="215:43">

            <expr_stmt pos:start="215:13" pos:end="215:43"><expr pos:start="215:13" pos:end="215:42"><call pos:start="215:13" pos:end="215:42"><name pos:start="215:13" pos:end="215:33">ff_hls_write_end_list</name><argument_list pos:start="215:34" pos:end="215:42">(<argument pos:start="215:35" pos:end="215:41"><expr pos:start="215:35" pos:end="215:41"><name pos:start="215:35" pos:end="215:41">out_hls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="219:9" pos:end="219:28"><expr pos:start="219:9" pos:end="219:27"><call pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:18">avio_close</name><argument_list pos:start="219:19" pos:end="219:27">(<argument pos:start="219:20" pos:end="219:26"><expr pos:start="219:20" pos:end="219:26"><name pos:start="219:20" pos:end="219:26">out_hls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="223:60"><if pos:start="221:9" pos:end="223:60">if <condition pos:start="221:12" pos:end="221:23">(<expr pos:start="221:13" pos:end="221:22"><name pos:start="221:13" pos:end="221:22">use_rename</name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:60"><block_content pos:start="223:13" pos:end="223:60">

            <expr_stmt pos:start="223:13" pos:end="223:60"><expr pos:start="223:13" pos:end="223:59"><call pos:start="223:13" pos:end="223:59"><name pos:start="223:13" pos:end="223:26">avpriv_io_move</name><argument_list pos:start="223:27" pos:end="223:59">(<argument pos:start="223:28" pos:end="223:44"><expr pos:start="223:28" pos:end="223:44"><name pos:start="223:28" pos:end="223:44">temp_filename_hls</name></expr></argument>, <argument pos:start="223:47" pos:end="223:58"><expr pos:start="223:47" pos:end="223:58"><name pos:start="223:47" pos:end="223:58">filename_hls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



</block_content>}</block></function>
</unit>
