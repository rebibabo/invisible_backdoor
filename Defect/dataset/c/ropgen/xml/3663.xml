<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3663.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:30">pxa2xx_pm_read</name><parameter_list pos:start="1:31" pos:end="3:45">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:51">hwaddr</name></type> <name pos:start="1:53" pos:end="1:56">addr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:39">unsigned</name></type> <name pos:start="3:41" pos:end="3:44">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:13">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">PXA2xxState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:43">= <expr pos:start="7:22" pos:end="7:43"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:33">PXA2xxState</name> <operator pos:start="7:35" pos:end="7:35">*</operator><operator pos:start="7:36" pos:end="7:36">)</operator> <name pos:start="7:38" pos:end="7:43">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="31:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">addr</name></expr>)</condition> <block pos:start="11:19" pos:end="31:5">{<block_content pos:start="13:5" pos:end="29:14">

    <case pos:start="13:5" pos:end="13:25">case <expr pos:start="13:10" pos:end="13:24"><name pos:start="13:10" pos:end="13:13">PMCR</name> <operator pos:start="13:15" pos:end="13:17">...</operator> <name pos:start="13:19" pos:end="13:24">PCMD31</name></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="17:22"><if pos:start="15:9" pos:end="17:22">if <condition pos:start="15:12" pos:end="15:21">(<expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:16">addr</name> <operator pos:start="15:18" pos:end="15:18">&amp;</operator> <literal type="number" pos:start="15:20" pos:end="15:20">3</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:22"><block_content pos:start="17:13" pos:end="17:22">

            <goto pos:start="17:13" pos:end="17:22">goto <name pos:start="17:18" pos:end="17:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <return pos:start="21:9" pos:end="21:37">return <expr pos:start="21:16" pos:end="21:36"><name pos:start="21:16" pos:end="21:36"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:25">pm_regs</name><index pos:start="21:26" pos:end="21:36">[<expr pos:start="21:27" pos:end="21:35"><name pos:start="21:27" pos:end="21:30">addr</name> <operator pos:start="21:32" pos:end="21:33">&gt;&gt;</operator> <literal type="number" pos:start="21:35" pos:end="21:35">2</literal></expr>]</index></name></expr>;</return>

    <default pos:start="23:5" pos:end="23:12">default:</default>

    <label pos:start="25:5" pos:end="25:9"><name pos:start="25:5" pos:end="25:8">fail</name>:</label>

        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><call pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:14">printf</name><argument_list pos:start="27:15" pos:end="27:68">(<argument pos:start="27:16" pos:end="27:47"><expr pos:start="27:16" pos:end="27:47"><literal type="string" pos:start="27:16" pos:end="27:34">"%s: Bad register "</literal> <name pos:start="27:36" pos:end="27:42">REG_FMT</name> <literal type="string" pos:start="27:44" pos:end="27:47">"\n"</literal></expr></argument>, <argument pos:start="27:50" pos:end="27:61"><expr pos:start="27:50" pos:end="27:61"><name pos:start="27:50" pos:end="27:61">__FUNCTION__</name></expr></argument>, <argument pos:start="27:64" pos:end="27:67"><expr pos:start="27:64" pos:end="27:67"><name pos:start="27:64" pos:end="27:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
