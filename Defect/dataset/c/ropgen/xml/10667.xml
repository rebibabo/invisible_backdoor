<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10667.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">dirac_decode_frame</name><parameter_list pos:start="1:30" pos:end="1:95">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">data</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:79"><decl pos:start="1:66" pos:end="1:79"><type pos:start="1:66" pos:end="1:79"><name pos:start="1:66" pos:end="1:68">int</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:79">got_frame</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:94"><decl pos:start="1:82" pos:end="1:94"><type pos:start="1:82" pos:end="1:94"><name pos:start="1:82" pos:end="1:89">AVPacket</name> <modifier pos:start="1:91" pos:end="1:91">*</modifier></type><name pos:start="1:92" pos:end="1:94">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="187:1">{<block_content pos:start="5:5" pos:end="185:19">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">DiracContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name>     <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:20">picture</name>    <init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">buf</name>        <init pos:start="9:25" pos:end="9:35">= <expr pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:29">pkt</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:35">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>        <init pos:start="11:25" pos:end="11:35">= <expr pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:29">pkt</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:25">data_unit_size</name></decl>, <decl pos:start="13:28" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:34">buf_idx</name> <init pos:start="13:36" pos:end="13:38">= <expr pos:start="13:38" pos:end="13:38"><literal type="number" pos:start="13:38" pos:end="13:38">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:31">/* release unused frames */</comment>

    <for pos:start="21:5" pos:end="29:9">for <control pos:start="21:9" pos:end="21:36">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:31"><expr pos:start="21:17" pos:end="21:30"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:30">MAX_FRAMES</name></expr>;</condition> <incr pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:33">i</name><operator pos:start="21:34" pos:end="21:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="29:9"><block_content pos:start="23:9" pos:end="29:9">

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:86">(<expr pos:start="23:13" pos:end="23:85"><name pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">all_frames</name><index pos:start="23:26" pos:end="23:28">[<expr pos:start="23:27" pos:end="23:27"><name pos:start="23:27" pos:end="23:27">i</name></expr>]</index></name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:45"><name pos:start="23:30" pos:end="23:36">avframe</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:42">data</name><index pos:start="23:43" pos:end="23:45">[<expr pos:start="23:44" pos:end="23:44"><literal type="number" pos:start="23:44" pos:end="23:44">0</literal></expr>]</index></name> <operator pos:start="23:47" pos:end="23:48">&amp;&amp;</operator> <operator pos:start="23:50" pos:end="23:50">!</operator><name pos:start="23:51" pos:end="23:66"><name pos:start="23:51" pos:end="23:51">s</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:63">all_frames</name><index pos:start="23:64" pos:end="23:66">[<expr pos:start="23:65" pos:end="23:65"><name pos:start="23:65" pos:end="23:65">i</name></expr>]</index></name><operator pos:start="23:67" pos:end="23:67">.</operator><name pos:start="23:68" pos:end="23:85"><name pos:start="23:68" pos:end="23:74">avframe</name><operator pos:start="23:75" pos:end="23:76">-&gt;</operator><name pos:start="23:77" pos:end="23:85">reference</name></name></expr>)</condition> <block pos:start="23:88" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:92">

            <expr_stmt pos:start="25:13" pos:end="25:53"><expr pos:start="25:13" pos:end="25:52"><call pos:start="25:13" pos:end="25:52"><name pos:start="25:13" pos:end="25:26">av_frame_unref</name><argument_list pos:start="25:27" pos:end="25:52">(<argument pos:start="25:28" pos:end="25:51"><expr pos:start="25:28" pos:end="25:51"><name pos:start="25:28" pos:end="25:43"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:40">all_frames</name><index pos:start="25:41" pos:end="25:43">[<expr pos:start="25:42" pos:end="25:42"><name pos:start="25:42" pos:end="25:42">i</name></expr>]</index></name><operator pos:start="25:44" pos:end="25:44">.</operator><name pos:start="25:45" pos:end="25:51">avframe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:92"><expr pos:start="27:13" pos:end="27:91"><call pos:start="27:13" pos:end="27:91"><name pos:start="27:13" pos:end="27:18">memset</name><argument_list pos:start="27:19" pos:end="27:91">(<argument pos:start="27:20" pos:end="27:48"><expr pos:start="27:20" pos:end="27:48"><name pos:start="27:20" pos:end="27:35"><name pos:start="27:20" pos:end="27:20">s</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:32">all_frames</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">i</name></expr>]</index></name><operator pos:start="27:36" pos:end="27:36">.</operator><name pos:start="27:37" pos:end="27:48">interpolated</name></expr></argument>, <argument pos:start="27:51" pos:end="27:51"><expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">0</literal></expr></argument>, <argument pos:start="27:54" pos:end="27:90"><expr pos:start="27:54" pos:end="27:90"><sizeof pos:start="27:54" pos:end="27:90">sizeof<argument_list pos:start="27:60" pos:end="27:90">(<argument pos:start="27:61" pos:end="27:89"><expr pos:start="27:61" pos:end="27:89"><name pos:start="27:61" pos:end="27:76"><name pos:start="27:61" pos:end="27:61">s</name><operator pos:start="27:62" pos:end="27:63">-&gt;</operator><name pos:start="27:64" pos:end="27:73">all_frames</name><index pos:start="27:74" pos:end="27:76">[<expr pos:start="27:75" pos:end="27:75"><name pos:start="27:75" pos:end="27:75">i</name></expr>]</index></name><operator pos:start="27:77" pos:end="27:77">.</operator><name pos:start="27:78" pos:end="27:89">interpolated</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:22">current_picture</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:29">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:19"><expr pos:start="35:5" pos:end="35:18"><operator pos:start="35:5" pos:end="35:5">*</operator><name pos:start="35:6" pos:end="35:14">got_frame</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:46">/* end of stream, so flush delayed pics */</comment>

    <if_stmt pos:start="41:5" pos:end="43:62"><if pos:start="41:5" pos:end="43:62">if <condition pos:start="41:8" pos:end="41:22">(<expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:16">buf_size</name> <operator pos:start="41:18" pos:end="41:19">==</operator> <literal type="number" pos:start="41:21" pos:end="41:21">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:62"><block_content pos:start="43:9" pos:end="43:62">

        <return pos:start="43:9" pos:end="43:62">return <expr pos:start="43:16" pos:end="43:61"><call pos:start="43:16" pos:end="43:61"><name pos:start="43:16" pos:end="43:30">get_delayed_pic</name><argument_list pos:start="43:31" pos:end="43:61">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">s</name></expr></argument>, <argument pos:start="43:35" pos:end="43:49"><expr pos:start="43:35" pos:end="43:49"><operator pos:start="43:35" pos:end="43:35">(</operator><name pos:start="43:36" pos:end="43:42">AVFrame</name> <operator pos:start="43:44" pos:end="43:44">*</operator><operator pos:start="43:45" pos:end="43:45">)</operator><name pos:start="43:46" pos:end="43:49">data</name></expr></argument>, <argument pos:start="43:52" pos:end="43:60"><expr pos:start="43:52" pos:end="43:60"><name pos:start="43:52" pos:end="43:60">got_frame</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="47:5" pos:end="107:5">for <control pos:start="47:9" pos:end="47:12">(<init pos:start="47:10" pos:end="47:10">;</init><condition pos:start="47:11" pos:end="47:11">;</condition><incr/>)</control> <block pos:start="47:14" pos:end="107:5">{<block_content pos:start="55:9" pos:end="105:34">

        <comment type="block" pos:start="49:9" pos:end="53:35">/*[DIRAC_STD] Here starts the code from parse_info() defined in 9.6

          [DIRAC_STD] PARSE_INFO_PREFIX = "BBCD" as defined in ISO/IEC 646

          BBCD start code search */</comment>

        <for pos:start="55:9" pos:end="63:9">for <control pos:start="55:13" pos:end="55:69">(<init pos:start="55:14" pos:end="55:14">;</init> <condition pos:start="55:16" pos:end="55:58"><expr pos:start="55:16" pos:end="55:57"><name pos:start="55:16" pos:end="55:22">buf_idx</name> <operator pos:start="55:24" pos:end="55:24">+</operator> <name pos:start="55:26" pos:end="55:46">DATA_UNIT_HEADER_SIZE</name> <operator pos:start="55:48" pos:end="55:48">&lt;</operator> <name pos:start="55:50" pos:end="55:57">buf_size</name></expr>;</condition> <incr pos:start="55:60" pos:end="55:68"><expr pos:start="55:60" pos:end="55:68"><name pos:start="55:60" pos:end="55:66">buf_idx</name><operator pos:start="55:67" pos:end="55:68">++</operator></expr></incr>)</control> <block pos:start="55:71" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:22">

            <if_stmt pos:start="57:13" pos:end="61:22"><if pos:start="57:13" pos:end="61:22">if <condition pos:start="57:16" pos:end="59:63">(<expr pos:start="57:17" pos:end="59:62"><name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:19">buf</name><index pos:start="57:20" pos:end="57:30">[<expr pos:start="57:21" pos:end="57:27"><name pos:start="57:21" pos:end="57:27">buf_idx</name></expr>  ]</index></name> <operator pos:start="57:32" pos:end="57:33">==</operator> <literal type="char" pos:start="57:35" pos:end="57:37">'B'</literal> <operator pos:start="57:39" pos:end="57:40">&amp;&amp;</operator> <name pos:start="57:42" pos:end="57:55"><name pos:start="57:42" pos:end="57:44">buf</name><index pos:start="57:45" pos:end="57:55">[<expr pos:start="57:46" pos:end="57:54"><name pos:start="57:46" pos:end="57:52">buf_idx</name><operator pos:start="57:53" pos:end="57:53">+</operator><literal type="number" pos:start="57:54" pos:end="57:54">1</literal></expr>]</index></name> <operator pos:start="57:57" pos:end="57:58">==</operator> <literal type="char" pos:start="57:60" pos:end="57:62">'B'</literal> <operator pos:start="57:64" pos:end="57:65">&amp;&amp;</operator>

                <name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:19">buf</name><index pos:start="59:20" pos:end="59:30">[<expr pos:start="59:21" pos:end="59:29"><name pos:start="59:21" pos:end="59:27">buf_idx</name><operator pos:start="59:28" pos:end="59:28">+</operator><literal type="number" pos:start="59:29" pos:end="59:29">2</literal></expr>]</index></name> <operator pos:start="59:32" pos:end="59:33">==</operator> <literal type="char" pos:start="59:35" pos:end="59:37">'C'</literal> <operator pos:start="59:39" pos:end="59:40">&amp;&amp;</operator> <name pos:start="59:42" pos:end="59:55"><name pos:start="59:42" pos:end="59:44">buf</name><index pos:start="59:45" pos:end="59:55">[<expr pos:start="59:46" pos:end="59:54"><name pos:start="59:46" pos:end="59:52">buf_idx</name><operator pos:start="59:53" pos:end="59:53">+</operator><literal type="number" pos:start="59:54" pos:end="59:54">3</literal></expr>]</index></name> <operator pos:start="59:57" pos:end="59:58">==</operator> <literal type="char" pos:start="59:60" pos:end="59:62">'D'</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:22"><block_content pos:start="61:17" pos:end="61:22">

                <break pos:start="61:17" pos:end="61:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="65:9" pos:end="65:39">/* BBCD found or end of data */</comment>

        <if_stmt pos:start="67:9" pos:end="69:18"><if pos:start="67:9" pos:end="69:18">if <condition pos:start="67:12" pos:end="67:56">(<expr pos:start="67:13" pos:end="67:55"><name pos:start="67:13" pos:end="67:19">buf_idx</name> <operator pos:start="67:21" pos:end="67:21">+</operator> <name pos:start="67:23" pos:end="67:43">DATA_UNIT_HEADER_SIZE</name> <operator pos:start="67:45" pos:end="67:46">&gt;=</operator> <name pos:start="67:48" pos:end="67:55">buf_size</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:18"><block_content pos:start="69:13" pos:end="69:18">

            <break pos:start="69:13" pos:end="69:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:48"><expr pos:start="73:9" pos:end="73:47"><name pos:start="73:9" pos:end="73:22">data_unit_size</name> <operator pos:start="73:24" pos:end="73:24">=</operator> <call pos:start="73:26" pos:end="73:47"><name pos:start="73:26" pos:end="73:32">AV_RB32</name><argument_list pos:start="73:33" pos:end="73:47">(<argument pos:start="73:34" pos:end="73:46"><expr pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:36">buf</name><operator pos:start="73:37" pos:end="73:37">+</operator><name pos:start="73:38" pos:end="73:44">buf_idx</name><operator pos:start="73:45" pos:end="73:45">+</operator><literal type="number" pos:start="73:46" pos:end="73:46">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="89:9"><if pos:start="75:9" pos:end="89:9">if <condition pos:start="75:12" pos:end="75:67">(<expr pos:start="75:13" pos:end="75:66"><name pos:start="75:13" pos:end="75:26">data_unit_size</name> <operator pos:start="75:28" pos:end="75:28">&gt;</operator> <name pos:start="75:30" pos:end="75:37">buf_size</name> <operator pos:start="75:39" pos:end="75:39">-</operator> <name pos:start="75:41" pos:end="75:47">buf_idx</name> <operator pos:start="75:49" pos:end="75:50">||</operator> <operator pos:start="75:52" pos:end="75:52">!</operator><name pos:start="75:53" pos:end="75:66">data_unit_size</name></expr>)</condition> <block pos:start="75:69" pos:end="89:9">{<block_content pos:start="77:13" pos:end="87:21">

            <if_stmt pos:start="77:13" pos:end="83:35"><if pos:start="77:13" pos:end="83:35">if<condition pos:start="77:15" pos:end="77:51">(<expr pos:start="77:16" pos:end="77:50"><name pos:start="77:16" pos:end="77:29">data_unit_size</name> <operator pos:start="77:31" pos:end="77:31">&gt;</operator> <name pos:start="77:33" pos:end="77:40">buf_size</name> <operator pos:start="77:42" pos:end="77:42">-</operator> <name pos:start="77:44" pos:end="77:50">buf_idx</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="83:35"><block_content pos:start="79:13" pos:end="83:35">

            <expr_stmt pos:start="79:13" pos:end="83:35"><expr pos:start="79:13" pos:end="83:34"><call pos:start="79:13" pos:end="83:34"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="83:34">(<argument pos:start="79:20" pos:end="79:27"><expr pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:27">avctx</name></name></expr></argument>, <argument pos:start="79:30" pos:end="79:41"><expr pos:start="79:30" pos:end="79:41"><name pos:start="79:30" pos:end="79:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:85"><expr pos:start="81:20" pos:end="81:85"><literal type="string" pos:start="81:20" pos:end="81:85">"Data unit with size %d is larger than input buffer, discarding\n"</literal></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:33"><expr pos:start="83:20" pos:end="83:33"><name pos:start="83:20" pos:end="83:33">data_unit_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:25"><expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:19">buf_idx</name> <operator pos:start="85:21" pos:end="85:22">+=</operator> <literal type="number" pos:start="85:24" pos:end="85:24">4</literal></expr>;</expr_stmt>

            <continue pos:start="87:13" pos:end="87:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="91:9" pos:end="91:129">/* [DIRAC_STD] dirac_decode_data_unit makes reference to the while defined in 9.3 inside the function parse_sequence() */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:73"><expr pos:start="93:9" pos:end="93:72"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:72"><name pos:start="93:15" pos:end="93:36">dirac_decode_data_unit</name><argument_list pos:start="93:37" pos:end="93:72">(<argument pos:start="93:38" pos:end="93:42"><expr pos:start="93:38" pos:end="93:42"><name pos:start="93:38" pos:end="93:42">avctx</name></expr></argument>, <argument pos:start="93:45" pos:end="93:55"><expr pos:start="93:45" pos:end="93:55"><name pos:start="93:45" pos:end="93:47">buf</name><operator pos:start="93:48" pos:end="93:48">+</operator><name pos:start="93:49" pos:end="93:55">buf_idx</name></expr></argument>, <argument pos:start="93:58" pos:end="93:71"><expr pos:start="93:58" pos:end="93:71"><name pos:start="93:58" pos:end="93:71">data_unit_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="103:9"><if pos:start="95:9" pos:end="103:9">if <condition pos:start="95:12" pos:end="95:20">(<expr pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">&lt;</operator> <literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>)</condition>

        <block pos:start="97:9" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:23">

            <expr_stmt pos:start="99:13" pos:end="99:79"><expr pos:start="99:13" pos:end="99:78"><call pos:start="99:13" pos:end="99:78"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="99:78">(<argument pos:start="99:20" pos:end="99:27"><expr pos:start="99:20" pos:end="99:27"><name pos:start="99:20" pos:end="99:27"><name pos:start="99:20" pos:end="99:20">s</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:27">avctx</name></name></expr></argument>, <argument pos:start="99:30" pos:end="99:41"><expr pos:start="99:30" pos:end="99:41"><name pos:start="99:30" pos:end="99:41">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="99:43" pos:end="99:77"><expr pos:start="99:43" pos:end="99:77"><literal type="string" pos:start="99:43" pos:end="99:77">"Error in dirac_decode_data_unit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="101:13" pos:end="101:23">return <expr pos:start="101:20" pos:end="101:22"><name pos:start="101:20" pos:end="101:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:34"><expr pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:15">buf_idx</name> <operator pos:start="105:17" pos:end="105:18">+=</operator> <name pos:start="105:20" pos:end="105:33">data_unit_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="111:5" pos:end="113:24"><if pos:start="111:5" pos:end="113:24">if <condition pos:start="111:8" pos:end="111:28">(<expr pos:start="111:9" pos:end="111:27"><operator pos:start="111:9" pos:end="111:9">!</operator><name pos:start="111:10" pos:end="111:27"><name pos:start="111:10" pos:end="111:10">s</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:27">current_picture</name></name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:24"><block_content pos:start="113:9" pos:end="113:24">

        <return pos:start="113:9" pos:end="113:24">return <expr pos:start="113:16" pos:end="113:23"><name pos:start="113:16" pos:end="113:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="175:5"><if pos:start="117:5" pos:end="165:5">if <condition pos:start="117:8" pos:end="117:78">(<expr pos:start="117:9" pos:end="117:77"><name pos:start="117:9" pos:end="117:59"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:26">current_picture</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:35">avframe</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:59">display_picture_number</name></name> <operator pos:start="117:61" pos:end="117:61">&gt;</operator> <name pos:start="117:63" pos:end="117:77"><name pos:start="117:63" pos:end="117:63">s</name><operator pos:start="117:64" pos:end="117:65">-&gt;</operator><name pos:start="117:66" pos:end="117:77">frame_number</name></name></expr>)</condition> <block pos:start="117:80" pos:end="165:5">{<block_content pos:start="119:9" pos:end="163:9">

        <decl_stmt pos:start="119:9" pos:end="119:83"><decl pos:start="119:9" pos:end="119:82"><type pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:18">DiracFrame</name> <modifier pos:start="119:20" pos:end="119:20">*</modifier></type><name pos:start="119:21" pos:end="119:33">delayed_frame</name> <init pos:start="119:35" pos:end="119:82">= <expr pos:start="119:37" pos:end="119:82"><call pos:start="119:37" pos:end="119:82"><name pos:start="119:37" pos:end="119:48">remove_frame</name><argument_list pos:start="119:49" pos:end="119:82">(<argument pos:start="119:50" pos:end="119:64"><expr pos:start="119:50" pos:end="119:64"><name pos:start="119:50" pos:end="119:64"><name pos:start="119:50" pos:end="119:50">s</name><operator pos:start="119:51" pos:end="119:52">-&gt;</operator><name pos:start="119:53" pos:end="119:64">delay_frames</name></name></expr></argument>, <argument pos:start="119:67" pos:end="119:81"><expr pos:start="119:67" pos:end="119:81"><name pos:start="119:67" pos:end="119:81"><name pos:start="119:67" pos:end="119:67">s</name><operator pos:start="119:68" pos:end="119:69">-&gt;</operator><name pos:start="119:70" pos:end="119:81">frame_number</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:66"><expr pos:start="123:9" pos:end="123:65"><name pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:26">current_picture</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:35">avframe</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:46">reference</name></name> <operator pos:start="123:48" pos:end="123:49">|=</operator> <name pos:start="123:51" pos:end="123:65">DELAYED_PIC_REF</name></expr>;</expr_stmt>



        <if_stmt pos:start="127:9" pos:end="149:9"><if pos:start="127:9" pos:end="149:9">if <condition pos:start="127:12" pos:end="127:70">(<expr pos:start="127:13" pos:end="127:69"><call pos:start="127:13" pos:end="127:69"><name pos:start="127:13" pos:end="127:21">add_frame</name><argument_list pos:start="127:22" pos:end="127:69">(<argument pos:start="127:23" pos:end="127:37"><expr pos:start="127:23" pos:end="127:37"><name pos:start="127:23" pos:end="127:37"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:37">delay_frames</name></name></expr></argument>, <argument pos:start="127:40" pos:end="127:48"><expr pos:start="127:40" pos:end="127:48"><name pos:start="127:40" pos:end="127:48">MAX_DELAY</name></expr></argument>, <argument pos:start="127:51" pos:end="127:68"><expr pos:start="127:51" pos:end="127:68"><name pos:start="127:51" pos:end="127:68"><name pos:start="127:51" pos:end="127:51">s</name><operator pos:start="127:52" pos:end="127:53">-&gt;</operator><name pos:start="127:54" pos:end="127:68">current_picture</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:72" pos:end="149:9">{<block_content pos:start="129:13" pos:end="147:70">

            <decl_stmt pos:start="129:13" pos:end="129:78"><decl pos:start="129:13" pos:end="129:77"><type pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:15">int</name></type> <name pos:start="129:17" pos:end="129:23">min_num</name> <init pos:start="129:25" pos:end="129:77">= <expr pos:start="129:27" pos:end="129:77"><name pos:start="129:27" pos:end="129:44"><name pos:start="129:27" pos:end="129:27">s</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:41">delay_frames</name><index pos:start="129:42" pos:end="129:44">[<expr pos:start="129:43" pos:end="129:43"><literal type="number" pos:start="129:43" pos:end="129:43">0</literal></expr>]</index></name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:77"><name pos:start="129:47" pos:end="129:53">avframe</name><operator pos:start="129:54" pos:end="129:55">-&gt;</operator><name pos:start="129:56" pos:end="129:77">display_picture_number</name></name></expr></init></decl>;</decl_stmt>

            <comment type="block" pos:start="131:13" pos:end="131:86">/* Too many delayed frames, so we display the frame with the lowest pts */</comment>

            <expr_stmt pos:start="133:13" pos:end="133:66"><expr pos:start="133:13" pos:end="133:65"><call pos:start="133:13" pos:end="133:65"><name pos:start="133:13" pos:end="133:18">av_log</name><argument_list pos:start="133:19" pos:end="133:65">(<argument pos:start="133:20" pos:end="133:24"><expr pos:start="133:20" pos:end="133:24"><name pos:start="133:20" pos:end="133:24">avctx</name></expr></argument>, <argument pos:start="133:27" pos:end="133:38"><expr pos:start="133:27" pos:end="133:38"><name pos:start="133:27" pos:end="133:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:41" pos:end="133:64"><expr pos:start="133:41" pos:end="133:64"><literal type="string" pos:start="133:41" pos:end="133:64">"Delay frame overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="137:13" pos:end="141:82">for <control pos:start="137:17" pos:end="137:48">(<init pos:start="137:18" pos:end="137:23"><expr pos:start="137:18" pos:end="137:22"><name pos:start="137:18" pos:end="137:18">i</name> <operator pos:start="137:20" pos:end="137:20">=</operator> <literal type="number" pos:start="137:22" pos:end="137:22">1</literal></expr>;</init> <condition pos:start="137:25" pos:end="137:43"><expr pos:start="137:25" pos:end="137:42"><name pos:start="137:25" pos:end="137:42"><name pos:start="137:25" pos:end="137:25">s</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:39">delay_frames</name><index pos:start="137:40" pos:end="137:42">[<expr pos:start="137:41" pos:end="137:41"><name pos:start="137:41" pos:end="137:41">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="137:45" pos:end="137:47"><expr pos:start="137:45" pos:end="137:47"><name pos:start="137:45" pos:end="137:45">i</name><operator pos:start="137:46" pos:end="137:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="139:17" pos:end="141:82"><block_content pos:start="139:17" pos:end="141:82">

                <if_stmt pos:start="139:17" pos:end="141:82"><if pos:start="139:17" pos:end="141:82">if <condition pos:start="139:20" pos:end="139:82">(<expr pos:start="139:21" pos:end="139:81"><name pos:start="139:21" pos:end="139:38"><name pos:start="139:21" pos:end="139:21">s</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:35">delay_frames</name><index pos:start="139:36" pos:end="139:38">[<expr pos:start="139:37" pos:end="139:37"><name pos:start="139:37" pos:end="139:37">i</name></expr>]</index></name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:71"><name pos:start="139:41" pos:end="139:47">avframe</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:71">display_picture_number</name></name> <operator pos:start="139:73" pos:end="139:73">&lt;</operator> <name pos:start="139:75" pos:end="139:81">min_num</name></expr>)</condition><block type="pseudo" pos:start="141:21" pos:end="141:82"><block_content pos:start="141:21" pos:end="141:82">

                    <expr_stmt pos:start="141:21" pos:end="141:82"><expr pos:start="141:21" pos:end="141:81"><name pos:start="141:21" pos:end="141:27">min_num</name> <operator pos:start="141:29" pos:end="141:29">=</operator> <name pos:start="141:31" pos:end="141:48"><name pos:start="141:31" pos:end="141:31">s</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:45">delay_frames</name><index pos:start="141:46" pos:end="141:48">[<expr pos:start="141:47" pos:end="141:47"><name pos:start="141:47" pos:end="141:47">i</name></expr>]</index></name><operator pos:start="141:49" pos:end="141:50">-&gt;</operator><name pos:start="141:51" pos:end="141:81"><name pos:start="141:51" pos:end="141:57">avframe</name><operator pos:start="141:58" pos:end="141:59">-&gt;</operator><name pos:start="141:60" pos:end="141:81">display_picture_number</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



            <expr_stmt pos:start="145:13" pos:end="145:67"><expr pos:start="145:13" pos:end="145:66"><name pos:start="145:13" pos:end="145:25">delayed_frame</name> <operator pos:start="145:27" pos:end="145:27">=</operator> <call pos:start="145:29" pos:end="145:66"><name pos:start="145:29" pos:end="145:40">remove_frame</name><argument_list pos:start="145:41" pos:end="145:66">(<argument pos:start="145:42" pos:end="145:56"><expr pos:start="145:42" pos:end="145:56"><name pos:start="145:42" pos:end="145:56"><name pos:start="145:42" pos:end="145:42">s</name><operator pos:start="145:43" pos:end="145:44">-&gt;</operator><name pos:start="145:45" pos:end="145:56">delay_frames</name></name></expr></argument>, <argument pos:start="145:59" pos:end="145:65"><expr pos:start="145:59" pos:end="145:65"><name pos:start="145:59" pos:end="145:65">min_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:70"><expr pos:start="147:13" pos:end="147:69"><call pos:start="147:13" pos:end="147:69"><name pos:start="147:13" pos:end="147:21">add_frame</name><argument_list pos:start="147:22" pos:end="147:69">(<argument pos:start="147:23" pos:end="147:37"><expr pos:start="147:23" pos:end="147:37"><name pos:start="147:23" pos:end="147:37"><name pos:start="147:23" pos:end="147:23">s</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:37">delay_frames</name></name></expr></argument>, <argument pos:start="147:40" pos:end="147:48"><expr pos:start="147:40" pos:end="147:48"><name pos:start="147:40" pos:end="147:48">MAX_DELAY</name></expr></argument>, <argument pos:start="147:51" pos:end="147:68"><expr pos:start="147:51" pos:end="147:68"><name pos:start="147:51" pos:end="147:68"><name pos:start="147:51" pos:end="147:51">s</name><operator pos:start="147:52" pos:end="147:53">-&gt;</operator><name pos:start="147:54" pos:end="147:68">current_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="153:9" pos:end="163:9"><if pos:start="153:9" pos:end="163:9">if <condition pos:start="153:12" pos:end="153:26">(<expr pos:start="153:13" pos:end="153:25"><name pos:start="153:13" pos:end="153:25">delayed_frame</name></expr>)</condition> <block pos:start="153:28" pos:end="163:9">{<block_content pos:start="155:13" pos:end="161:27">

            <expr_stmt pos:start="155:13" pos:end="155:65"><expr pos:start="155:13" pos:end="155:64"><name pos:start="155:13" pos:end="155:45"><name pos:start="155:13" pos:end="155:25">delayed_frame</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:34">avframe</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:45">reference</name></name> <operator pos:start="155:47" pos:end="155:48">^=</operator> <name pos:start="155:50" pos:end="155:64">DELAYED_PIC_REF</name></expr>;</expr_stmt>

            <if_stmt pos:start="157:13" pos:end="159:27"><if pos:start="157:13" pos:end="159:27">if<condition pos:start="157:15" pos:end="157:68">(<expr pos:start="157:16" pos:end="157:67"><operator pos:start="157:16" pos:end="157:16">(</operator><name pos:start="157:17" pos:end="157:19">ret</name><operator pos:start="157:20" pos:end="157:20">=</operator><call pos:start="157:21" pos:end="157:62"><name pos:start="157:21" pos:end="157:32">av_frame_ref</name><argument_list pos:start="157:33" pos:end="157:62">(<argument pos:start="157:34" pos:end="157:37"><expr pos:start="157:34" pos:end="157:37"><name pos:start="157:34" pos:end="157:37">data</name></expr></argument>, <argument pos:start="157:40" pos:end="157:61"><expr pos:start="157:40" pos:end="157:61"><name pos:start="157:40" pos:end="157:61"><name pos:start="157:40" pos:end="157:52">delayed_frame</name><operator pos:start="157:53" pos:end="157:54">-&gt;</operator><name pos:start="157:55" pos:end="157:61">avframe</name></name></expr></argument>)</argument_list></call><operator pos:start="157:63" pos:end="157:63">)</operator> <operator pos:start="157:65" pos:end="157:65">&lt;</operator> <literal type="number" pos:start="157:67" pos:end="157:67">0</literal></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:27"><block_content pos:start="159:17" pos:end="159:27">

                <return pos:start="159:17" pos:end="159:27">return <expr pos:start="159:24" pos:end="159:26"><name pos:start="159:24" pos:end="159:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:27"><expr pos:start="161:13" pos:end="161:26"><operator pos:start="161:13" pos:end="161:13">*</operator><name pos:start="161:14" pos:end="161:22">got_frame</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="165:7" pos:end="175:5">else if <condition pos:start="165:15" pos:end="165:86">(<expr pos:start="165:16" pos:end="165:85"><name pos:start="165:16" pos:end="165:66"><name pos:start="165:16" pos:end="165:16">s</name><operator pos:start="165:17" pos:end="165:18">-&gt;</operator><name pos:start="165:19" pos:end="165:33">current_picture</name><operator pos:start="165:34" pos:end="165:35">-&gt;</operator><name pos:start="165:36" pos:end="165:42">avframe</name><operator pos:start="165:43" pos:end="165:44">-&gt;</operator><name pos:start="165:45" pos:end="165:66">display_picture_number</name></name> <operator pos:start="165:68" pos:end="165:69">==</operator> <name pos:start="165:71" pos:end="165:85"><name pos:start="165:71" pos:end="165:71">s</name><operator pos:start="165:72" pos:end="165:73">-&gt;</operator><name pos:start="165:74" pos:end="165:85">frame_number</name></name></expr>)</condition> <block pos:start="165:88" pos:end="175:5">{<block_content pos:start="169:9" pos:end="173:23">

        <comment type="block" pos:start="167:9" pos:end="167:51">/* The right frame at the right time :-) */</comment>

        <if_stmt pos:start="169:9" pos:end="171:23"><if pos:start="169:9" pos:end="171:23">if<condition pos:start="169:11" pos:end="169:69">(<expr pos:start="169:12" pos:end="169:68"><operator pos:start="169:12" pos:end="169:12">(</operator><name pos:start="169:13" pos:end="169:15">ret</name><operator pos:start="169:16" pos:end="169:16">=</operator><call pos:start="169:17" pos:end="169:63"><name pos:start="169:17" pos:end="169:28">av_frame_ref</name><argument_list pos:start="169:29" pos:end="169:63">(<argument pos:start="169:30" pos:end="169:33"><expr pos:start="169:30" pos:end="169:33"><name pos:start="169:30" pos:end="169:33">data</name></expr></argument>, <argument pos:start="169:36" pos:end="169:62"><expr pos:start="169:36" pos:end="169:62"><name pos:start="169:36" pos:end="169:62"><name pos:start="169:36" pos:end="169:36">s</name><operator pos:start="169:37" pos:end="169:38">-&gt;</operator><name pos:start="169:39" pos:end="169:53">current_picture</name><operator pos:start="169:54" pos:end="169:55">-&gt;</operator><name pos:start="169:56" pos:end="169:62">avframe</name></name></expr></argument>)</argument_list></call><operator pos:start="169:64" pos:end="169:64">)</operator> <operator pos:start="169:66" pos:end="169:66">&lt;</operator> <literal type="number" pos:start="169:68" pos:end="169:68">0</literal></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:23"><block_content pos:start="171:13" pos:end="171:23">

            <return pos:start="171:13" pos:end="171:23">return <expr pos:start="171:20" pos:end="171:22"><name pos:start="171:20" pos:end="171:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:23"><expr pos:start="173:9" pos:end="173:22"><operator pos:start="173:9" pos:end="173:9">*</operator><name pos:start="173:10" pos:end="173:18">got_frame</name> <operator pos:start="173:20" pos:end="173:20">=</operator> <literal type="number" pos:start="173:22" pos:end="173:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="179:5" pos:end="181:62"><if pos:start="179:5" pos:end="181:62">if <condition pos:start="179:8" pos:end="179:19">(<expr pos:start="179:9" pos:end="179:18"><operator pos:start="179:9" pos:end="179:9">*</operator><name pos:start="179:10" pos:end="179:18">got_frame</name></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="181:62"><block_content pos:start="181:9" pos:end="181:62">

        <expr_stmt pos:start="181:9" pos:end="181:62"><expr pos:start="181:9" pos:end="181:61"><name pos:start="181:9" pos:end="181:23"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:23">frame_number</name></name> <operator pos:start="181:25" pos:end="181:25">=</operator> <name pos:start="181:27" pos:end="181:57"><name pos:start="181:27" pos:end="181:33">picture</name><operator pos:start="181:34" pos:end="181:35">-&gt;</operator><name pos:start="181:36" pos:end="181:57">display_picture_number</name></name> <operator pos:start="181:59" pos:end="181:59">+</operator> <literal type="number" pos:start="181:61" pos:end="181:61">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="185:5" pos:end="185:19">return <expr pos:start="185:12" pos:end="185:18"><name pos:start="185:12" pos:end="185:18">buf_idx</name></expr>;</return>

</block_content>}</block></function>
</unit>
