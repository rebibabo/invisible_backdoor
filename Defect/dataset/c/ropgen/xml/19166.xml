<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19166.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:28">cmd_set_features</name><parameter_list pos:start="1:29" pos:end="1:54">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:37">IDEState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:49">uint8_t</name></type> <name pos:start="1:51" pos:end="1:53">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:16">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">uint16_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:27">identify_data</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:15">(<expr pos:start="9:9" pos:end="9:14"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:14">bs</name></name></expr>)</condition> <block pos:start="9:17" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:20">

        <expr_stmt pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:28"><call pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:25">ide_abort_command</name><argument_list pos:start="11:26" pos:end="11:28">(<argument pos:start="11:27" pos:end="11:27"><expr pos:start="11:27" pos:end="11:27"><name pos:start="11:27" pos:end="11:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">true</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:32">/* XXX: valid for CDROM ? */</comment>

    <switch pos:start="21:5" pos:end="135:5">switch <condition pos:start="21:12" pos:end="21:23">(<expr pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:22">feature</name></name></expr>)</condition> <block pos:start="21:25" pos:end="135:5">{<block_content pos:start="23:5" pos:end="133:9">

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x02</literal></expr>:</case> <comment type="block" pos:start="23:16" pos:end="23:39">/* write cache enable */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><call pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:35">bdrv_set_enable_write_cache</name><argument_list pos:start="25:36" pos:end="25:48">(<argument pos:start="25:37" pos:end="25:41"><expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:37">s</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:41">bs</name></name></expr></argument>, <argument pos:start="25:44" pos:end="25:47"><expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:21">identify_data</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <operator pos:start="27:25" pos:end="27:25">(</operator><name pos:start="27:26" pos:end="27:33">uint16_t</name> <operator pos:start="27:35" pos:end="27:35">*</operator><operator pos:start="27:36" pos:end="27:36">)</operator><name pos:start="27:37" pos:end="27:52"><name pos:start="27:37" pos:end="27:37">s</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:52">identify_data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:63"><expr pos:start="29:9" pos:end="29:62"><call pos:start="29:9" pos:end="29:62"><name pos:start="29:9" pos:end="29:16">put_le16</name><argument_list pos:start="29:17" pos:end="29:62">(<argument pos:start="29:18" pos:end="29:35"><expr pos:start="29:18" pos:end="29:35"><name pos:start="29:18" pos:end="29:30">identify_data</name> <operator pos:start="29:32" pos:end="29:32">+</operator> <literal type="number" pos:start="29:34" pos:end="29:35">85</literal></expr></argument>, <argument pos:start="29:38" pos:end="29:61"><expr pos:start="29:38" pos:end="29:61"><operator pos:start="29:38" pos:end="29:38">(</operator><literal type="number" pos:start="29:39" pos:end="29:39">1</literal> <operator pos:start="29:41" pos:end="29:42">&lt;&lt;</operator> <literal type="number" pos:start="29:44" pos:end="29:45">14</literal><operator pos:start="29:46" pos:end="29:46">)</operator> <operator pos:start="29:48" pos:end="29:48">|</operator> <operator pos:start="29:50" pos:end="29:50">(</operator><literal type="number" pos:start="29:51" pos:end="29:51">1</literal> <operator pos:start="29:53" pos:end="29:54">&lt;&lt;</operator> <literal type="number" pos:start="29:56" pos:end="29:56">5</literal><operator pos:start="29:57" pos:end="29:57">)</operator> <operator pos:start="29:59" pos:end="29:59">|</operator> <literal type="number" pos:start="29:61" pos:end="29:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">true</name></expr>;</return>

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x82</literal></expr>:</case> <comment type="block" pos:start="33:16" pos:end="33:40">/* write cache disable */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><call pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:35">bdrv_set_enable_write_cache</name><argument_list pos:start="35:36" pos:end="35:49">(<argument pos:start="35:37" pos:end="35:41"><expr pos:start="35:37" pos:end="35:41"><name pos:start="35:37" pos:end="35:41"><name pos:start="35:37" pos:end="35:37">s</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:41">bs</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:48"><expr pos:start="35:44" pos:end="35:48"><name pos:start="35:44" pos:end="35:48">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:53"><expr pos:start="37:9" pos:end="37:52"><name pos:start="37:9" pos:end="37:21">identify_data</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <operator pos:start="37:25" pos:end="37:25">(</operator><name pos:start="37:26" pos:end="37:33">uint16_t</name> <operator pos:start="37:35" pos:end="37:35">*</operator><operator pos:start="37:36" pos:end="37:36">)</operator><name pos:start="37:37" pos:end="37:52"><name pos:start="37:37" pos:end="37:37">s</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:52">identify_data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><call pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:16">put_le16</name><argument_list pos:start="39:17" pos:end="39:51">(<argument pos:start="39:18" pos:end="39:35"><expr pos:start="39:18" pos:end="39:35"><name pos:start="39:18" pos:end="39:30">identify_data</name> <operator pos:start="39:32" pos:end="39:32">+</operator> <literal type="number" pos:start="39:34" pos:end="39:35">85</literal></expr></argument>, <argument pos:start="39:38" pos:end="39:50"><expr pos:start="39:38" pos:end="39:50"><operator pos:start="39:38" pos:end="39:38">(</operator><literal type="number" pos:start="39:39" pos:end="39:39">1</literal> <operator pos:start="39:41" pos:end="39:42">&lt;&lt;</operator> <literal type="number" pos:start="39:44" pos:end="39:45">14</literal><operator pos:start="39:46" pos:end="39:46">)</operator> <operator pos:start="39:48" pos:end="39:48">|</operator> <literal type="number" pos:start="39:50" pos:end="39:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:27"><expr pos:start="41:9" pos:end="41:26"><call pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:23">ide_flush_cache</name><argument_list pos:start="41:24" pos:end="41:26">(<argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:21">return <expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">false</name></expr>;</return>

    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><literal type="number" pos:start="45:10" pos:end="45:13">0xcc</literal></expr>:</case> <comment type="block" pos:start="45:16" pos:end="45:58">/* reverting to power-on defaults enable */</comment>

    <case pos:start="47:5" pos:end="47:14">case <expr pos:start="47:10" pos:end="47:13"><literal type="number" pos:start="47:10" pos:end="47:13">0x66</literal></expr>:</case> <comment type="block" pos:start="47:16" pos:end="47:59">/* reverting to power-on defaults disable */</comment>

    <case pos:start="49:5" pos:end="49:14">case <expr pos:start="49:10" pos:end="49:13"><literal type="number" pos:start="49:10" pos:end="49:13">0xaa</literal></expr>:</case> <comment type="block" pos:start="49:16" pos:end="49:43">/* read look-ahead enable */</comment>

    <case pos:start="51:5" pos:end="51:14">case <expr pos:start="51:10" pos:end="51:13"><literal type="number" pos:start="51:10" pos:end="51:13">0x55</literal></expr>:</case> <comment type="block" pos:start="51:16" pos:end="51:44">/* read look-ahead disable */</comment>

    <case pos:start="53:5" pos:end="53:14">case <expr pos:start="53:10" pos:end="53:13"><literal type="number" pos:start="53:10" pos:end="53:13">0x05</literal></expr>:</case> <comment type="block" pos:start="53:16" pos:end="53:55">/* set advanced power management mode */</comment>

    <case pos:start="55:5" pos:end="55:14">case <expr pos:start="55:10" pos:end="55:13"><literal type="number" pos:start="55:10" pos:end="55:13">0x85</literal></expr>:</case> <comment type="block" pos:start="55:16" pos:end="55:59">/* disable advanced power management mode */</comment>

    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><literal type="number" pos:start="57:10" pos:end="57:13">0x69</literal></expr>:</case> <comment type="block" pos:start="57:16" pos:end="57:24">/* NOP */</comment>

    <case pos:start="59:5" pos:end="59:14">case <expr pos:start="59:10" pos:end="59:13"><literal type="number" pos:start="59:10" pos:end="59:13">0x67</literal></expr>:</case> <comment type="block" pos:start="59:16" pos:end="59:24">/* NOP */</comment>

    <case pos:start="61:5" pos:end="61:14">case <expr pos:start="61:10" pos:end="61:13"><literal type="number" pos:start="61:10" pos:end="61:13">0x96</literal></expr>:</case> <comment type="block" pos:start="61:16" pos:end="61:24">/* NOP */</comment>

    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><literal type="number" pos:start="63:10" pos:end="63:13">0x9a</literal></expr>:</case> <comment type="block" pos:start="63:16" pos:end="63:24">/* NOP */</comment>

    <case pos:start="65:5" pos:end="65:14">case <expr pos:start="65:10" pos:end="65:13"><literal type="number" pos:start="65:10" pos:end="65:13">0x42</literal></expr>:</case> <comment type="block" pos:start="65:16" pos:end="65:51">/* enable Automatic Acoustic Mode */</comment>

    <case pos:start="67:5" pos:end="67:14">case <expr pos:start="67:10" pos:end="67:13"><literal type="number" pos:start="67:10" pos:end="67:13">0xc2</literal></expr>:</case> <comment type="block" pos:start="67:16" pos:end="67:52">/* disable Automatic Acoustic Mode */</comment>

        <return pos:start="69:9" pos:end="69:20">return <expr pos:start="69:16" pos:end="69:19"><name pos:start="69:16" pos:end="69:19">true</name></expr>;</return>

    <case pos:start="71:5" pos:end="71:14">case <expr pos:start="71:10" pos:end="71:13"><literal type="number" pos:start="71:10" pos:end="71:13">0x03</literal></expr>:</case> <comment type="block" pos:start="71:16" pos:end="71:38">/* set transfer mode */</comment>

        <block pos:start="73:9" pos:end="133:9">{<block_content pos:start="75:13" pos:end="131:24">

            <decl_stmt pos:start="75:13" pos:end="75:44"><decl pos:start="75:13" pos:end="75:43"><type pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:19">uint8_t</name></type> <name pos:start="75:21" pos:end="75:23">val</name> <init pos:start="75:25" pos:end="75:43">= <expr pos:start="75:27" pos:end="75:43"><name pos:start="75:27" pos:end="75:36"><name pos:start="75:27" pos:end="75:27">s</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:36">nsector</name></name> <operator pos:start="75:38" pos:end="75:38">&amp;</operator> <literal type="number" pos:start="75:40" pos:end="75:43">0x07</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:57"><expr pos:start="77:13" pos:end="77:56"><name pos:start="77:13" pos:end="77:25">identify_data</name> <operator pos:start="77:27" pos:end="77:27">=</operator> <operator pos:start="77:29" pos:end="77:29">(</operator><name pos:start="77:30" pos:end="77:37">uint16_t</name> <operator pos:start="77:39" pos:end="77:39">*</operator><operator pos:start="77:40" pos:end="77:40">)</operator><name pos:start="77:41" pos:end="77:56"><name pos:start="77:41" pos:end="77:41">s</name><operator pos:start="77:42" pos:end="77:43">-&gt;</operator><name pos:start="77:44" pos:end="77:56">identify_data</name></name></expr>;</expr_stmt>



            <switch pos:start="81:13" pos:end="129:13">switch <condition pos:start="81:20" pos:end="81:36">(<expr pos:start="81:21" pos:end="81:35"><name pos:start="81:21" pos:end="81:30"><name pos:start="81:21" pos:end="81:21">s</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:30">nsector</name></name> <operator pos:start="81:32" pos:end="81:33">&gt;&gt;</operator> <literal type="number" pos:start="81:35" pos:end="81:35">3</literal></expr>)</condition> <block pos:start="81:38" pos:end="129:13">{<block_content pos:start="83:13" pos:end="127:31">

            <case pos:start="83:13" pos:end="83:22">case <expr pos:start="83:18" pos:end="83:21"><literal type="number" pos:start="83:18" pos:end="83:21">0x00</literal></expr>:</case> <comment type="block" pos:start="83:24" pos:end="83:40">/* pio default */</comment>

            <case pos:start="85:13" pos:end="85:22">case <expr pos:start="85:18" pos:end="85:21"><literal type="number" pos:start="85:18" pos:end="85:21">0x01</literal></expr>:</case> <comment type="block" pos:start="85:24" pos:end="85:37">/* pio mode */</comment>

                <expr_stmt pos:start="87:17" pos:end="87:51"><expr pos:start="87:17" pos:end="87:50"><call pos:start="87:17" pos:end="87:50"><name pos:start="87:17" pos:end="87:24">put_le16</name><argument_list pos:start="87:25" pos:end="87:50">(<argument pos:start="87:26" pos:end="87:43"><expr pos:start="87:26" pos:end="87:43"><name pos:start="87:26" pos:end="87:38">identify_data</name> <operator pos:start="87:40" pos:end="87:40">+</operator> <literal type="number" pos:start="87:42" pos:end="87:43">62</literal></expr></argument>, <argument pos:start="87:46" pos:end="87:49"><expr pos:start="87:46" pos:end="87:49"><literal type="number" pos:start="87:46" pos:end="87:49">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:51"><expr pos:start="89:17" pos:end="89:50"><call pos:start="89:17" pos:end="89:50"><name pos:start="89:17" pos:end="89:24">put_le16</name><argument_list pos:start="89:25" pos:end="89:50">(<argument pos:start="89:26" pos:end="89:43"><expr pos:start="89:26" pos:end="89:43"><name pos:start="89:26" pos:end="89:38">identify_data</name> <operator pos:start="89:40" pos:end="89:40">+</operator> <literal type="number" pos:start="89:42" pos:end="89:43">63</literal></expr></argument>, <argument pos:start="89:46" pos:end="89:49"><expr pos:start="89:46" pos:end="89:49"><literal type="number" pos:start="89:46" pos:end="89:49">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:51"><expr pos:start="91:17" pos:end="91:50"><call pos:start="91:17" pos:end="91:50"><name pos:start="91:17" pos:end="91:24">put_le16</name><argument_list pos:start="91:25" pos:end="91:50">(<argument pos:start="91:26" pos:end="91:43"><expr pos:start="91:26" pos:end="91:43"><name pos:start="91:26" pos:end="91:38">identify_data</name> <operator pos:start="91:40" pos:end="91:40">+</operator> <literal type="number" pos:start="91:42" pos:end="91:43">88</literal></expr></argument>, <argument pos:start="91:46" pos:end="91:49"><expr pos:start="91:46" pos:end="91:49"><literal type="number" pos:start="91:46" pos:end="91:49">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="93:17" pos:end="93:22">break;</break>

            <case pos:start="95:13" pos:end="95:22">case <expr pos:start="95:18" pos:end="95:21"><literal type="number" pos:start="95:18" pos:end="95:21">0x02</literal></expr>:</case> <comment type="block" pos:start="95:24" pos:end="95:47">/* sigle word dma mode*/</comment>

                <expr_stmt pos:start="97:17" pos:end="97:70"><expr pos:start="97:17" pos:end="97:69"><call pos:start="97:17" pos:end="97:69"><name pos:start="97:17" pos:end="97:24">put_le16</name><argument_list pos:start="97:25" pos:end="97:69">(<argument pos:start="97:26" pos:end="97:43"><expr pos:start="97:26" pos:end="97:43"><name pos:start="97:26" pos:end="97:38">identify_data</name> <operator pos:start="97:40" pos:end="97:40">+</operator> <literal type="number" pos:start="97:42" pos:end="97:43">62</literal></expr></argument>, <argument pos:start="97:46" pos:end="97:68"><expr pos:start="97:46" pos:end="97:68"><literal type="number" pos:start="97:46" pos:end="97:49">0x07</literal> <operator pos:start="97:51" pos:end="97:51">|</operator> <operator pos:start="97:53" pos:end="97:53">(</operator><literal type="number" pos:start="97:54" pos:end="97:54">1</literal> <operator pos:start="97:56" pos:end="97:57">&lt;&lt;</operator> <operator pos:start="97:59" pos:end="97:59">(</operator><name pos:start="97:60" pos:end="97:62">val</name> <operator pos:start="97:64" pos:end="97:64">+</operator> <literal type="number" pos:start="97:66" pos:end="97:66">8</literal><operator pos:start="97:67" pos:end="97:67">)</operator><operator pos:start="97:68" pos:end="97:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:51"><expr pos:start="99:17" pos:end="99:50"><call pos:start="99:17" pos:end="99:50"><name pos:start="99:17" pos:end="99:24">put_le16</name><argument_list pos:start="99:25" pos:end="99:50">(<argument pos:start="99:26" pos:end="99:43"><expr pos:start="99:26" pos:end="99:43"><name pos:start="99:26" pos:end="99:38">identify_data</name> <operator pos:start="99:40" pos:end="99:40">+</operator> <literal type="number" pos:start="99:42" pos:end="99:43">63</literal></expr></argument>, <argument pos:start="99:46" pos:end="99:49"><expr pos:start="99:46" pos:end="99:49"><literal type="number" pos:start="99:46" pos:end="99:49">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:51"><expr pos:start="101:17" pos:end="101:50"><call pos:start="101:17" pos:end="101:50"><name pos:start="101:17" pos:end="101:24">put_le16</name><argument_list pos:start="101:25" pos:end="101:50">(<argument pos:start="101:26" pos:end="101:43"><expr pos:start="101:26" pos:end="101:43"><name pos:start="101:26" pos:end="101:38">identify_data</name> <operator pos:start="101:40" pos:end="101:40">+</operator> <literal type="number" pos:start="101:42" pos:end="101:43">88</literal></expr></argument>, <argument pos:start="101:46" pos:end="101:49"><expr pos:start="101:46" pos:end="101:49"><literal type="number" pos:start="101:46" pos:end="101:49">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            <case pos:start="105:13" pos:end="105:22">case <expr pos:start="105:18" pos:end="105:21"><literal type="number" pos:start="105:18" pos:end="105:21">0x04</literal></expr>:</case> <comment type="block" pos:start="105:24" pos:end="105:38">/* mdma mode */</comment>

                <expr_stmt pos:start="107:17" pos:end="107:51"><expr pos:start="107:17" pos:end="107:50"><call pos:start="107:17" pos:end="107:50"><name pos:start="107:17" pos:end="107:24">put_le16</name><argument_list pos:start="107:25" pos:end="107:50">(<argument pos:start="107:26" pos:end="107:43"><expr pos:start="107:26" pos:end="107:43"><name pos:start="107:26" pos:end="107:38">identify_data</name> <operator pos:start="107:40" pos:end="107:40">+</operator> <literal type="number" pos:start="107:42" pos:end="107:43">62</literal></expr></argument>, <argument pos:start="107:46" pos:end="107:49"><expr pos:start="107:46" pos:end="107:49"><literal type="number" pos:start="107:46" pos:end="107:49">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:70"><expr pos:start="109:17" pos:end="109:69"><call pos:start="109:17" pos:end="109:69"><name pos:start="109:17" pos:end="109:24">put_le16</name><argument_list pos:start="109:25" pos:end="109:69">(<argument pos:start="109:26" pos:end="109:43"><expr pos:start="109:26" pos:end="109:43"><name pos:start="109:26" pos:end="109:38">identify_data</name> <operator pos:start="109:40" pos:end="109:40">+</operator> <literal type="number" pos:start="109:42" pos:end="109:43">63</literal></expr></argument>, <argument pos:start="109:46" pos:end="109:68"><expr pos:start="109:46" pos:end="109:68"><literal type="number" pos:start="109:46" pos:end="109:49">0x07</literal> <operator pos:start="109:51" pos:end="109:51">|</operator> <operator pos:start="109:53" pos:end="109:53">(</operator><literal type="number" pos:start="109:54" pos:end="109:54">1</literal> <operator pos:start="109:56" pos:end="109:57">&lt;&lt;</operator> <operator pos:start="109:59" pos:end="109:59">(</operator><name pos:start="109:60" pos:end="109:62">val</name> <operator pos:start="109:64" pos:end="109:64">+</operator> <literal type="number" pos:start="109:66" pos:end="109:66">8</literal><operator pos:start="109:67" pos:end="109:67">)</operator><operator pos:start="109:68" pos:end="109:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:51"><expr pos:start="111:17" pos:end="111:50"><call pos:start="111:17" pos:end="111:50"><name pos:start="111:17" pos:end="111:24">put_le16</name><argument_list pos:start="111:25" pos:end="111:50">(<argument pos:start="111:26" pos:end="111:43"><expr pos:start="111:26" pos:end="111:43"><name pos:start="111:26" pos:end="111:38">identify_data</name> <operator pos:start="111:40" pos:end="111:40">+</operator> <literal type="number" pos:start="111:42" pos:end="111:43">88</literal></expr></argument>, <argument pos:start="111:46" pos:end="111:49"><expr pos:start="111:46" pos:end="111:49"><literal type="number" pos:start="111:46" pos:end="111:49">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="113:17" pos:end="113:22">break;</break>

            <case pos:start="115:13" pos:end="115:22">case <expr pos:start="115:18" pos:end="115:21"><literal type="number" pos:start="115:18" pos:end="115:21">0x08</literal></expr>:</case> <comment type="block" pos:start="115:24" pos:end="115:38">/* udma mode */</comment>

                <expr_stmt pos:start="117:17" pos:end="117:51"><expr pos:start="117:17" pos:end="117:50"><call pos:start="117:17" pos:end="117:50"><name pos:start="117:17" pos:end="117:24">put_le16</name><argument_list pos:start="117:25" pos:end="117:50">(<argument pos:start="117:26" pos:end="117:43"><expr pos:start="117:26" pos:end="117:43"><name pos:start="117:26" pos:end="117:38">identify_data</name> <operator pos:start="117:40" pos:end="117:40">+</operator> <literal type="number" pos:start="117:42" pos:end="117:43">62</literal></expr></argument>, <argument pos:start="117:46" pos:end="117:49"><expr pos:start="117:46" pos:end="117:49"><literal type="number" pos:start="117:46" pos:end="117:49">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:51"><expr pos:start="119:17" pos:end="119:50"><call pos:start="119:17" pos:end="119:50"><name pos:start="119:17" pos:end="119:24">put_le16</name><argument_list pos:start="119:25" pos:end="119:50">(<argument pos:start="119:26" pos:end="119:43"><expr pos:start="119:26" pos:end="119:43"><name pos:start="119:26" pos:end="119:38">identify_data</name> <operator pos:start="119:40" pos:end="119:40">+</operator> <literal type="number" pos:start="119:42" pos:end="119:43">63</literal></expr></argument>, <argument pos:start="119:46" pos:end="119:49"><expr pos:start="119:46" pos:end="119:49"><literal type="number" pos:start="119:46" pos:end="119:49">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:70"><expr pos:start="121:17" pos:end="121:69"><call pos:start="121:17" pos:end="121:69"><name pos:start="121:17" pos:end="121:24">put_le16</name><argument_list pos:start="121:25" pos:end="121:69">(<argument pos:start="121:26" pos:end="121:43"><expr pos:start="121:26" pos:end="121:43"><name pos:start="121:26" pos:end="121:38">identify_data</name> <operator pos:start="121:40" pos:end="121:40">+</operator> <literal type="number" pos:start="121:42" pos:end="121:43">88</literal></expr></argument>, <argument pos:start="121:46" pos:end="121:68"><expr pos:start="121:46" pos:end="121:68"><literal type="number" pos:start="121:46" pos:end="121:49">0x3f</literal> <operator pos:start="121:51" pos:end="121:51">|</operator> <operator pos:start="121:53" pos:end="121:53">(</operator><literal type="number" pos:start="121:54" pos:end="121:54">1</literal> <operator pos:start="121:56" pos:end="121:57">&lt;&lt;</operator> <operator pos:start="121:59" pos:end="121:59">(</operator><name pos:start="121:60" pos:end="121:62">val</name> <operator pos:start="121:64" pos:end="121:64">+</operator> <literal type="number" pos:start="121:66" pos:end="121:66">8</literal><operator pos:start="121:67" pos:end="121:67">)</operator><operator pos:start="121:68" pos:end="121:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="123:17" pos:end="123:22">break;</break>

            <default pos:start="125:13" pos:end="125:20">default:</default>

                <goto pos:start="127:17" pos:end="127:31">goto <name pos:start="127:22" pos:end="127:30">abort_cmd</name>;</goto>

            </block_content>}</block></switch>

            <return pos:start="131:13" pos:end="131:24">return <expr pos:start="131:20" pos:end="131:23"><name pos:start="131:20" pos:end="131:23">true</name></expr>;</return>

        </block_content>}</block>

    </block_content>}</block></switch>



<label pos:start="139:1" pos:end="139:10"><name pos:start="139:1" pos:end="139:9">abort_cmd</name>:</label>

    <expr_stmt pos:start="141:5" pos:end="141:25"><expr pos:start="141:5" pos:end="141:24"><call pos:start="141:5" pos:end="141:24"><name pos:start="141:5" pos:end="141:21">ide_abort_command</name><argument_list pos:start="141:22" pos:end="141:24">(<argument pos:start="141:23" pos:end="141:23"><expr pos:start="141:23" pos:end="141:23"><name pos:start="141:23" pos:end="141:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="143:5" pos:end="143:16">return <expr pos:start="143:12" pos:end="143:15"><name pos:start="143:12" pos:end="143:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
