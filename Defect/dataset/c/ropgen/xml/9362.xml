<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9362.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mov_read_header</name><parameter_list pos:start="1:27" pos:end="1:70">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:69"><decl pos:start="1:48" pos:end="1:69"><type pos:start="1:48" pos:end="1:69"><name pos:start="1:48" pos:end="1:65">AVFormatParameters</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MOVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mov</name> <init pos:start="5:21" pos:end="5:49">= <expr pos:start="5:23" pos:end="5:49"><operator pos:start="5:23" pos:end="5:23">(</operator><name pos:start="5:24" pos:end="5:33">MOVContext</name> <operator pos:start="5:35" pos:end="5:35">*</operator><operator pos:start="5:36" pos:end="5:36">)</operator> <name pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:38">s</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">MOV_atom_t</name></type> <name pos:start="11:16" pos:end="11:19">atom</name> <init pos:start="11:21" pos:end="11:33">= <expr pos:start="11:23" pos:end="11:33"><block pos:start="11:23" pos:end="11:33">{ <expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr>, <expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr>, <expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:7">mov</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:11">fc</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:15">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:7">mov</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:20">parse_table</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <name pos:start="17:24" pos:end="17:46">mov_default_parse_table</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="27:41"><if pos:start="21:5" pos:end="23:34">if<condition pos:start="21:7" pos:end="21:28">(<expr pos:start="21:8" pos:end="21:27"><operator pos:start="21:8" pos:end="21:8">!</operator><call pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:23">url_is_streamed</name><argument_list pos:start="21:24" pos:end="21:27">(<argument pos:start="21:25" pos:end="21:26"><expr pos:start="21:25" pos:end="21:26"><name pos:start="21:25" pos:end="21:26">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:34"><block_content pos:start="23:9" pos:end="23:34"> <comment type="block" pos:start="21:30" pos:end="21:124">/* .mov and .mp4 aren't streamable anyway (only progressive download if moov is before mdat) */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:12">atom</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:17">size</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:33"><name pos:start="23:21" pos:end="23:29">url_fsize</name><argument_list pos:start="23:30" pos:end="23:33">(<argument pos:start="23:31" pos:end="23:32"><expr pos:start="23:31" pos:end="23:32"><name pos:start="23:31" pos:end="23:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="27:41">else<block type="pseudo" pos:start="27:9" pos:end="27:41"><block_content pos:start="27:9" pos:end="27:41">

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">atom</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:17">size</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:40">0x7FFFFFFFFFFFFFFFLL</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:26">/* check MOV header */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:7">err</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:41"><name pos:start="33:11" pos:end="33:26">mov_read_default</name><argument_list pos:start="33:27" pos:end="33:41">(<argument pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:30">mov</name></expr></argument>, <argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><name pos:start="33:33" pos:end="33:34">pb</name></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">atom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:56">(<expr pos:start="35:9" pos:end="35:55"><name pos:start="35:9" pos:end="35:11">err</name><operator pos:start="35:12" pos:end="35:12">&lt;</operator><literal type="number" pos:start="35:13" pos:end="35:13">0</literal> <operator pos:start="35:15" pos:end="35:16">||</operator> <operator pos:start="35:18" pos:end="35:18">(</operator><operator pos:start="35:19" pos:end="35:19">!</operator><name pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:22">mov</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:34">found_moov</name></name> <operator pos:start="35:36" pos:end="35:37">&amp;&amp;</operator> <operator pos:start="35:39" pos:end="35:39">!</operator><name pos:start="35:40" pos:end="35:54"><name pos:start="35:40" pos:end="35:42">mov</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:54">found_mdat</name></name><operator pos:start="35:55" pos:end="35:55">)</operator></expr>)</condition> <block pos:start="35:58" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:18">

        <expr_stmt pos:start="37:9" pos:end="39:70"><expr pos:start="37:9" pos:end="39:69"><call pos:start="37:9" pos:end="39:69"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="39:69">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">s</name></expr></argument>, <argument pos:start="37:19" pos:end="37:30"><expr pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:33" pos:end="37:102"><expr pos:start="37:33" pos:end="37:102"><literal type="string" pos:start="37:33" pos:end="37:92">"mov: header not found !!! (err:%d, moov:%d, mdat:%d) pos:%"</literal><name pos:start="37:93" pos:end="37:98">PRId64</name><literal type="string" pos:start="37:99" pos:end="37:102">"\n"</literal></expr></argument>,

                <argument pos:start="39:17" pos:end="39:19"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">err</name></expr></argument>, <argument pos:start="39:22" pos:end="39:36"><expr pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:24">mov</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:36">found_moov</name></name></expr></argument>, <argument pos:start="39:39" pos:end="39:53"><expr pos:start="39:39" pos:end="39:53"><name pos:start="39:39" pos:end="39:53"><name pos:start="39:39" pos:end="39:41">mov</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:53">found_mdat</name></name></expr></argument>, <argument pos:start="39:56" pos:end="39:68"><expr pos:start="39:56" pos:end="39:68"><call pos:start="39:56" pos:end="39:68"><name pos:start="39:56" pos:end="39:64">url_ftell</name><argument_list pos:start="39:65" pos:end="39:68">(<argument pos:start="39:66" pos:end="39:67"><expr pos:start="39:66" pos:end="39:67"><name pos:start="39:66" pos:end="39:67">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:62"><expr pos:start="45:5" pos:end="45:61"><call pos:start="45:5" pos:end="45:61"><name pos:start="45:5" pos:end="45:11">dprintf</name><argument_list pos:start="45:12" pos:end="45:61">(<argument pos:start="45:13" pos:end="45:39"><expr pos:start="45:13" pos:end="45:39"><literal type="string" pos:start="45:13" pos:end="45:39">"on_parse_exit_offset=%d\n"</literal></expr></argument>, <argument pos:start="45:42" pos:end="45:60"><expr pos:start="45:42" pos:end="45:60"><operator pos:start="45:42" pos:end="45:42">(</operator><name pos:start="45:43" pos:end="45:45">int</name><operator pos:start="45:46" pos:end="45:46">)</operator> <call pos:start="45:48" pos:end="45:60"><name pos:start="45:48" pos:end="45:56">url_ftell</name><argument_list pos:start="45:57" pos:end="45:60">(<argument pos:start="45:58" pos:end="45:59"><expr pos:start="45:58" pos:end="45:59"><name pos:start="45:58" pos:end="45:59">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:58">/* some cleanup : make sure we are on the mdat atom */</comment>

    <if_stmt pos:start="51:5" pos:end="53:50"><if pos:start="51:5" pos:end="53:50">if<condition pos:start="51:7" pos:end="51:67">(<expr pos:start="51:8" pos:end="51:66"><operator pos:start="51:8" pos:end="51:8">!</operator><call pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:23">url_is_streamed</name><argument_list pos:start="51:24" pos:end="51:27">(<argument pos:start="51:25" pos:end="51:26"><expr pos:start="51:25" pos:end="51:26"><name pos:start="51:25" pos:end="51:26">pb</name></expr></argument>)</argument_list></call> <operator pos:start="51:29" pos:end="51:30">&amp;&amp;</operator> <operator pos:start="51:32" pos:end="51:32">(</operator><call pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:41">url_ftell</name><argument_list pos:start="51:42" pos:end="51:45">(<argument pos:start="51:43" pos:end="51:44"><expr pos:start="51:43" pos:end="51:44"><name pos:start="51:43" pos:end="51:44">pb</name></expr></argument>)</argument_list></call> <operator pos:start="51:47" pos:end="51:48">!=</operator> <name pos:start="51:50" pos:end="51:65"><name pos:start="51:50" pos:end="51:52">mov</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:65">mdat_offset</name></name><operator pos:start="51:66" pos:end="51:66">)</operator></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:50"><block_content pos:start="53:9" pos:end="53:50">

        <expr_stmt pos:start="53:9" pos:end="53:50"><expr pos:start="53:9" pos:end="53:49"><call pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:17">url_fseek</name><argument_list pos:start="53:18" pos:end="53:49">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">pb</name></expr></argument>, <argument pos:start="53:23" pos:end="53:38"><expr pos:start="53:23" pos:end="53:38"><name pos:start="53:23" pos:end="53:38"><name pos:start="53:23" pos:end="53:25">mov</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:38">mdat_offset</name></name></expr></argument>, <argument pos:start="53:41" pos:end="53:48"><expr pos:start="53:41" pos:end="53:48"><name pos:start="53:41" pos:end="53:48">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:7">mov</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:22">total_streams</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:38"><name pos:start="57:26" pos:end="57:26">s</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:38">nb_streams</name></name></expr>;</expr_stmt>



    <for pos:start="61:5" pos:end="91:5">for<control pos:start="61:8" pos:end="61:39">(<init pos:start="61:9" pos:end="61:12"><expr pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:9">i</name><operator pos:start="61:10" pos:end="61:10">=</operator><literal type="number" pos:start="61:11" pos:end="61:11">0</literal></expr>;</init> <condition pos:start="61:14" pos:end="61:34"><expr pos:start="61:14" pos:end="61:33"><name pos:start="61:14" pos:end="61:14">i</name><operator pos:start="61:15" pos:end="61:15">&lt;</operator><name pos:start="61:16" pos:end="61:33"><name pos:start="61:16" pos:end="61:18">mov</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:33">total_streams</name></name></expr>;</condition> <incr pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:36">i</name><operator pos:start="61:37" pos:end="61:38">++</operator></expr></incr>)</control> <block pos:start="61:41" pos:end="91:5">{<block_content pos:start="63:9" pos:end="89:44">

        <decl_stmt pos:start="63:9" pos:end="63:47"><decl pos:start="63:9" pos:end="63:46"><type pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:24">MOVStreamContext</name> <modifier pos:start="63:26" pos:end="63:26">*</modifier></type><name pos:start="63:27" pos:end="63:28">sc</name> <init pos:start="63:30" pos:end="63:46">= <expr pos:start="63:32" pos:end="63:46"><name pos:start="63:32" pos:end="63:46"><name pos:start="63:32" pos:end="63:34">mov</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:43">streams</name><index pos:start="63:44" pos:end="63:46">[<expr pos:start="63:45" pos:end="63:45"><name pos:start="63:45" pos:end="63:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="67:9" pos:end="69:28"><if pos:start="67:9" pos:end="69:28">if<condition pos:start="67:11" pos:end="67:26">(<expr pos:start="67:12" pos:end="67:25"><operator pos:start="67:12" pos:end="67:12">!</operator><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:14">sc</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:25">time_rate</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:28"><block_content pos:start="69:13" pos:end="69:28">

            <expr_stmt pos:start="69:13" pos:end="69:28"><expr pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:14">sc</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:25">time_rate</name></name><operator pos:start="69:26" pos:end="69:26">=</operator><literal type="number" pos:start="69:27" pos:end="69:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="73:44"><if pos:start="71:9" pos:end="73:44">if<condition pos:start="71:11" pos:end="71:27">(<expr pos:start="71:12" pos:end="71:26"><operator pos:start="71:12" pos:end="71:12">!</operator><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:14">sc</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:26">time_scale</name></name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:44"><block_content pos:start="73:13" pos:end="73:44">

            <expr_stmt pos:start="73:13" pos:end="73:44"><expr pos:start="73:13" pos:end="73:43"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:14">sc</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:26">time_scale</name></name><operator pos:start="73:27" pos:end="73:27">=</operator> <name pos:start="73:29" pos:end="73:43"><name pos:start="73:29" pos:end="73:31">mov</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:43">time_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:74"><expr pos:start="75:9" pos:end="75:73"><call pos:start="75:9" pos:end="75:73"><name pos:start="75:9" pos:end="75:23">av_set_pts_info</name><argument_list pos:start="75:24" pos:end="75:73">(<argument pos:start="75:25" pos:end="75:37"><expr pos:start="75:25" pos:end="75:37"><name pos:start="75:25" pos:end="75:37"><name pos:start="75:25" pos:end="75:25">s</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:34">streams</name><index pos:start="75:35" pos:end="75:37">[<expr pos:start="75:36" pos:end="75:36"><name pos:start="75:36" pos:end="75:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="75:40" pos:end="75:41"><expr pos:start="75:40" pos:end="75:41"><literal type="number" pos:start="75:40" pos:end="75:41">64</literal></expr></argument>, <argument pos:start="75:44" pos:end="75:56"><expr pos:start="75:44" pos:end="75:56"><name pos:start="75:44" pos:end="75:56"><name pos:start="75:44" pos:end="75:45">sc</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:56">time_rate</name></name></expr></argument>, <argument pos:start="75:59" pos:end="75:72"><expr pos:start="75:59" pos:end="75:72"><name pos:start="75:59" pos:end="75:72"><name pos:start="75:59" pos:end="75:60">sc</name><operator pos:start="75:61" pos:end="75:62">-&gt;</operator><name pos:start="75:63" pos:end="75:72">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if<condition pos:start="79:11" pos:end="79:53">(<expr pos:start="79:12" pos:end="79:52"><name pos:start="79:12" pos:end="79:24"><name pos:start="79:12" pos:end="79:12">s</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:21">streams</name><index pos:start="79:22" pos:end="79:24">[<expr pos:start="79:23" pos:end="79:23"><name pos:start="79:23" pos:end="79:23">i</name></expr>]</index></name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:34">duration</name> <operator pos:start="79:36" pos:end="79:37">!=</operator> <name pos:start="79:39" pos:end="79:52">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="79:54" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:53">

            <expr_stmt pos:start="81:13" pos:end="81:65"><expr pos:start="81:13" pos:end="81:64"><call pos:start="81:13" pos:end="81:64"><name pos:start="81:13" pos:end="81:18">assert</name><argument_list pos:start="81:19" pos:end="81:64">(<argument pos:start="81:20" pos:end="81:63"><expr pos:start="81:20" pos:end="81:63"><name pos:start="81:20" pos:end="81:32"><name pos:start="81:20" pos:end="81:20">s</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:29">streams</name><index pos:start="81:30" pos:end="81:32">[<expr pos:start="81:31" pos:end="81:31"><name pos:start="81:31" pos:end="81:31">i</name></expr>]</index></name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:42">duration</name> <operator pos:start="81:44" pos:end="81:44">%</operator> <name pos:start="81:46" pos:end="81:58"><name pos:start="81:46" pos:end="81:47">sc</name><operator pos:start="81:48" pos:end="81:49">-&gt;</operator><name pos:start="81:50" pos:end="81:58">time_rate</name></name> <operator pos:start="81:60" pos:end="81:61">==</operator> <literal type="number" pos:start="81:63" pos:end="81:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:53"><expr pos:start="83:13" pos:end="83:52"><name pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:22">streams</name><index pos:start="83:23" pos:end="83:25">[<expr pos:start="83:24" pos:end="83:24"><name pos:start="83:24" pos:end="83:24">i</name></expr>]</index></name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:35">duration</name> <operator pos:start="83:37" pos:end="83:38">/=</operator> <name pos:start="83:40" pos:end="83:52"><name pos:start="83:40" pos:end="83:41">sc</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:52">time_rate</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:24"><expr pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:10">sc</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:19">ffindex</name></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:23">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><call pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:23">mov_build_index</name><argument_list pos:start="89:24" pos:end="89:43">(<argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">mov</name></expr></argument>, <argument pos:start="89:30" pos:end="89:42"><expr pos:start="89:30" pos:end="89:42"><name pos:start="89:30" pos:end="89:42"><name pos:start="89:30" pos:end="89:30">s</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:39">streams</name><index pos:start="89:40" pos:end="89:42">[<expr pos:start="89:41" pos:end="89:41"><name pos:start="89:41" pos:end="89:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="95:5" pos:end="109:5">for<control pos:start="95:8" pos:end="95:39">(<init pos:start="95:9" pos:end="95:12"><expr pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:9">i</name><operator pos:start="95:10" pos:end="95:10">=</operator><literal type="number" pos:start="95:11" pos:end="95:11">0</literal></expr>;</init> <condition pos:start="95:14" pos:end="95:34"><expr pos:start="95:14" pos:end="95:33"><name pos:start="95:14" pos:end="95:14">i</name><operator pos:start="95:15" pos:end="95:15">&lt;</operator><name pos:start="95:16" pos:end="95:33"><name pos:start="95:16" pos:end="95:18">mov</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:33">total_streams</name></name></expr>;</condition> <incr pos:start="95:36" pos:end="95:38"><expr pos:start="95:36" pos:end="95:38"><name pos:start="95:36" pos:end="95:36">i</name><operator pos:start="95:37" pos:end="95:38">++</operator></expr></incr>)</control> <block pos:start="95:41" pos:end="109:5">{<block_content pos:start="99:9" pos:end="107:46">

        <comment type="block" pos:start="97:9" pos:end="97:37">/* dont need those anymore */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:50"><expr pos:start="99:9" pos:end="99:49"><call pos:start="99:9" pos:end="99:49"><name pos:start="99:9" pos:end="99:16">av_freep</name><argument_list pos:start="99:17" pos:end="99:49">(<argument pos:start="99:18" pos:end="99:48"><expr pos:start="99:18" pos:end="99:48"><operator pos:start="99:18" pos:end="99:18">&amp;</operator><name pos:start="99:19" pos:end="99:33"><name pos:start="99:19" pos:end="99:21">mov</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:30">streams</name><index pos:start="99:31" pos:end="99:33">[<expr pos:start="99:32" pos:end="99:32"><name pos:start="99:32" pos:end="99:32">i</name></expr>]</index></name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:48">chunk_offsets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:52"><expr pos:start="101:9" pos:end="101:51"><call pos:start="101:9" pos:end="101:51"><name pos:start="101:9" pos:end="101:16">av_freep</name><argument_list pos:start="101:17" pos:end="101:51">(<argument pos:start="101:18" pos:end="101:50"><expr pos:start="101:18" pos:end="101:50"><operator pos:start="101:18" pos:end="101:18">&amp;</operator><name pos:start="101:19" pos:end="101:33"><name pos:start="101:19" pos:end="101:21">mov</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:30">streams</name><index pos:start="101:31" pos:end="101:33">[<expr pos:start="101:32" pos:end="101:32"><name pos:start="101:32" pos:end="101:32">i</name></expr>]</index></name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:50">sample_to_chunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:49"><expr pos:start="103:9" pos:end="103:48"><call pos:start="103:9" pos:end="103:48"><name pos:start="103:9" pos:end="103:16">av_freep</name><argument_list pos:start="103:17" pos:end="103:48">(<argument pos:start="103:18" pos:end="103:47"><expr pos:start="103:18" pos:end="103:47"><operator pos:start="103:18" pos:end="103:18">&amp;</operator><name pos:start="103:19" pos:end="103:33"><name pos:start="103:19" pos:end="103:21">mov</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:30">streams</name><index pos:start="103:31" pos:end="103:33">[<expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">i</name></expr>]</index></name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:47">sample_sizes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:46"><expr pos:start="105:9" pos:end="105:45"><call pos:start="105:9" pos:end="105:45"><name pos:start="105:9" pos:end="105:16">av_freep</name><argument_list pos:start="105:17" pos:end="105:45">(<argument pos:start="105:18" pos:end="105:44"><expr pos:start="105:18" pos:end="105:44"><operator pos:start="105:18" pos:end="105:18">&amp;</operator><name pos:start="105:19" pos:end="105:33"><name pos:start="105:19" pos:end="105:21">mov</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:30">streams</name><index pos:start="105:31" pos:end="105:33">[<expr pos:start="105:32" pos:end="105:32"><name pos:start="105:32" pos:end="105:32">i</name></expr>]</index></name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:44">keyframes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:46"><expr pos:start="107:9" pos:end="107:45"><call pos:start="107:9" pos:end="107:45"><name pos:start="107:9" pos:end="107:16">av_freep</name><argument_list pos:start="107:17" pos:end="107:45">(<argument pos:start="107:18" pos:end="107:44"><expr pos:start="107:18" pos:end="107:44"><operator pos:start="107:18" pos:end="107:18">&amp;</operator><name pos:start="107:19" pos:end="107:33"><name pos:start="107:19" pos:end="107:21">mov</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:30">streams</name><index pos:start="107:31" pos:end="107:33">[<expr pos:start="107:32" pos:end="107:32"><name pos:start="107:32" pos:end="107:32">i</name></expr>]</index></name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:44">stts_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="111:5" pos:end="111:30"><expr pos:start="111:5" pos:end="111:29"><call pos:start="111:5" pos:end="111:29"><name pos:start="111:5" pos:end="111:12">av_freep</name><argument_list pos:start="111:13" pos:end="111:29">(<argument pos:start="111:14" pos:end="111:28"><expr pos:start="111:14" pos:end="111:28"><operator pos:start="111:14" pos:end="111:14">&amp;</operator><name pos:start="111:15" pos:end="111:28"><name pos:start="111:15" pos:end="111:17">mov</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:28">mdat_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
