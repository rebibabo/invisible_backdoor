<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27286.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:42">kvm_virtio_pci_vq_vector_unmask</name><parameter_list pos:start="1:43" pos:end="7:55">(<parameter pos:start="1:44" pos:end="1:64"><decl pos:start="1:44" pos:end="1:64"><type pos:start="1:44" pos:end="1:64"><name pos:start="1:44" pos:end="1:57">VirtIOPCIProxy</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:64">proxy</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:61"><decl pos:start="3:41" pos:end="3:61"><type pos:start="3:41" pos:end="3:61"><name pos:start="3:41" pos:end="3:48">unsigned</name> <name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:61">queue_no</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:59"><decl pos:start="5:41" pos:end="5:59"><type pos:start="5:41" pos:end="5:59"><name pos:start="5:41" pos:end="5:48">unsigned</name> <name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:59">vector</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:54"><decl pos:start="7:41" pos:end="7:54"><type pos:start="7:41" pos:end="7:54"><name pos:start="7:41" pos:end="7:50">MSIMessage</name></type> <name pos:start="7:52" pos:end="7:54">msg</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="63:1">{<block_content pos:start="11:5" pos:end="61:15">

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">VirtQueue</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:17">vq</name> <init pos:start="11:19" pos:end="11:59">= <expr pos:start="11:21" pos:end="11:59"><call pos:start="11:21" pos:end="11:59"><name pos:start="11:21" pos:end="11:36">virtio_get_queue</name><argument_list pos:start="11:37" pos:end="11:59">(<argument pos:start="11:38" pos:end="11:48"><expr pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:42">proxy</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:48">vdev</name></name></expr></argument>, <argument pos:start="11:51" pos:end="11:58"><expr pos:start="11:51" pos:end="11:58"><name pos:start="11:51" pos:end="11:58">queue_no</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:58"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">EventNotifier</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">n</name> <init pos:start="13:22" pos:end="13:58">= <expr pos:start="13:24" pos:end="13:58"><call pos:start="13:24" pos:end="13:58"><name pos:start="13:24" pos:end="13:54">virtio_queue_get_guest_notifier</name><argument_list pos:start="13:55" pos:end="13:58">(<argument pos:start="13:56" pos:end="13:57"><expr pos:start="13:56" pos:end="13:57"><name pos:start="13:56" pos:end="13:57">vq</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:53"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">VirtIOIRQFD</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:22">irqfd</name> <init pos:start="15:24" pos:end="15:53">= <expr pos:start="15:26" pos:end="15:53"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:53"><name pos:start="15:27" pos:end="15:31">proxy</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:45">vector_irqfd</name><index pos:start="15:46" pos:end="15:53">[<expr pos:start="15:47" pos:end="15:52"><name pos:start="15:47" pos:end="15:52">vector</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:73">(<expr pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:13">irqfd</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:18">msg</name><operator pos:start="21:19" pos:end="21:19">.</operator><name pos:start="21:20" pos:end="21:23">data</name></name> <operator pos:start="21:25" pos:end="21:26">!=</operator> <name pos:start="21:28" pos:end="21:35"><name pos:start="21:28" pos:end="21:30">msg</name><operator pos:start="21:31" pos:end="21:31">.</operator><name pos:start="21:32" pos:end="21:35">data</name></name> <operator pos:start="21:37" pos:end="21:38">||</operator> <name pos:start="21:40" pos:end="21:57"><name pos:start="21:40" pos:end="21:44">irqfd</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:49">msg</name><operator pos:start="21:50" pos:end="21:50">.</operator><name pos:start="21:51" pos:end="21:57">address</name></name> <operator pos:start="21:59" pos:end="21:60">!=</operator> <name pos:start="21:62" pos:end="21:72"><name pos:start="21:62" pos:end="21:64">msg</name><operator pos:start="21:65" pos:end="21:65">.</operator><name pos:start="21:66" pos:end="21:72">address</name></name></expr>)</condition> <block pos:start="21:75" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <expr_stmt pos:start="23:9" pos:end="23:72"><expr pos:start="23:9" pos:end="23:71"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:71"><name pos:start="23:15" pos:end="23:42">kvm_irqchip_update_msi_route</name><argument_list pos:start="23:43" pos:end="23:71">(<argument pos:start="23:44" pos:end="23:52"><expr pos:start="23:44" pos:end="23:52"><name pos:start="23:44" pos:end="23:52">kvm_state</name></expr></argument>, <argument pos:start="23:55" pos:end="23:65"><expr pos:start="23:55" pos:end="23:65"><name pos:start="23:55" pos:end="23:65"><name pos:start="23:55" pos:end="23:59">irqfd</name><operator pos:start="23:60" pos:end="23:61">-&gt;</operator><name pos:start="23:62" pos:end="23:65">virq</name></name></expr></argument>, <argument pos:start="23:68" pos:end="23:70"><expr pos:start="23:68" pos:end="23:70"><name pos:start="23:68" pos:end="23:70">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>)</condition> <block pos:start="25:22" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:23">

            <return pos:start="27:13" pos:end="27:23">return <expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="39:7">/* If guest supports masking, irqfd is already setup, unmask it.

     * Otherwise, set it up now.

     */</comment>

    <if_stmt pos:start="41:5" pos:end="59:5"><if pos:start="41:5" pos:end="55:5">if <condition pos:start="41:8" pos:end="41:41">(<expr pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:13">proxy</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:19">vdev</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:40">guest_notifier_mask</name></name></expr>)</condition> <block pos:start="41:43" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:9">

        <expr_stmt pos:start="43:9" pos:end="43:71"><expr pos:start="43:9" pos:end="43:70"><call pos:start="43:9" pos:end="43:70"><name pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:13">proxy</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:19">vdev</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:40">guest_notifier_mask</name></name><argument_list pos:start="43:41" pos:end="43:70">(<argument pos:start="43:42" pos:end="43:52"><expr pos:start="43:42" pos:end="43:52"><name pos:start="43:42" pos:end="43:52"><name pos:start="43:42" pos:end="43:46">proxy</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:52">vdev</name></name></expr></argument>, <argument pos:start="43:55" pos:end="43:62"><expr pos:start="43:55" pos:end="43:62"><name pos:start="43:55" pos:end="43:62">queue_no</name></expr></argument>, <argument pos:start="43:65" pos:end="43:69"><expr pos:start="43:65" pos:end="43:69"><name pos:start="43:65" pos:end="43:69">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="45:9" pos:end="45:58">/* Test after unmasking to avoid losing events. */</comment>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="49:71">(<expr pos:start="47:13" pos:end="49:70"><name pos:start="47:13" pos:end="47:47"><name pos:start="47:13" pos:end="47:17">proxy</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:23">vdev</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:47">guest_notifier_pending</name></name> <operator pos:start="47:49" pos:end="47:50">&amp;&amp;</operator>

            <call pos:start="49:13" pos:end="49:70"><name pos:start="49:13" pos:end="49:47"><name pos:start="49:13" pos:end="49:17">proxy</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:23">vdev</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:47">guest_notifier_pending</name></name><argument_list pos:start="49:48" pos:end="49:70">(<argument pos:start="49:49" pos:end="49:59"><expr pos:start="49:49" pos:end="49:59"><name pos:start="49:49" pos:end="49:59"><name pos:start="49:49" pos:end="49:53">proxy</name><operator pos:start="49:54" pos:end="49:55">-&gt;</operator><name pos:start="49:56" pos:end="49:59">vdev</name></name></expr></argument>, <argument pos:start="49:62" pos:end="49:69"><expr pos:start="49:62" pos:end="49:69"><name pos:start="49:62" pos:end="49:69">queue_no</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:73" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:34">

            <expr_stmt pos:start="51:13" pos:end="51:34"><expr pos:start="51:13" pos:end="51:33"><call pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:30">event_notifier_set</name><argument_list pos:start="51:31" pos:end="51:33">(<argument pos:start="51:32" pos:end="51:32"><expr pos:start="51:32" pos:end="51:32"><name pos:start="51:32" pos:end="51:32">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:64">

        <expr_stmt pos:start="57:9" pos:end="57:64"><expr pos:start="57:9" pos:end="57:63"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:63"><name pos:start="57:15" pos:end="57:38">kvm_virtio_pci_irqfd_use</name><argument_list pos:start="57:39" pos:end="57:63">(<argument pos:start="57:40" pos:end="57:44"><expr pos:start="57:40" pos:end="57:44"><name pos:start="57:40" pos:end="57:44">proxy</name></expr></argument>, <argument pos:start="57:47" pos:end="57:54"><expr pos:start="57:47" pos:end="57:54"><name pos:start="57:47" pos:end="57:54">queue_no</name></expr></argument>, <argument pos:start="57:57" pos:end="57:62"><expr pos:start="57:57" pos:end="57:62"><name pos:start="57:57" pos:end="57:62">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="61:5" pos:end="61:15">return <expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
