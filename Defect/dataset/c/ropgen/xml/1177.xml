<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1177.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">arm_gic_common_reset</name><parameter_list pos:start="1:33" pos:end="1:50">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:44">DeviceState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:16">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">GICState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:37">= <expr pos:start="5:19" pos:end="5:37"><call pos:start="5:19" pos:end="5:37"><name pos:start="5:19" pos:end="5:32">ARM_GIC_COMMON</name><argument_list pos:start="5:33" pos:end="5:37">(<argument pos:start="5:34" pos:end="5:36"><expr pos:start="5:34" pos:end="5:36"><name pos:start="5:34" pos:end="5:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:64"><expr pos:start="9:5" pos:end="9:63"><call pos:start="9:5" pos:end="9:63"><name pos:start="9:5" pos:end="9:10">memset</name><argument_list pos:start="9:11" pos:end="9:63">(<argument pos:start="9:12" pos:end="9:23"><expr pos:start="9:12" pos:end="9:23"><name pos:start="9:12" pos:end="9:23"><name pos:start="9:12" pos:end="9:12">s</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:23">irq_state</name></name></expr></argument>, <argument pos:start="9:26" pos:end="9:26"><expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr></argument>, <argument pos:start="9:29" pos:end="9:62"><expr pos:start="9:29" pos:end="9:62"><name pos:start="9:29" pos:end="9:38">GIC_MAXIRQ</name> <operator pos:start="9:40" pos:end="9:40">*</operator> <sizeof pos:start="9:42" pos:end="9:62">sizeof<argument_list pos:start="9:48" pos:end="9:62">(<argument pos:start="9:49" pos:end="9:61"><expr pos:start="9:49" pos:end="9:61"><name pos:start="9:49" pos:end="9:61">gic_irq_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="11:5" pos:end="31:5">for <control pos:start="11:9" pos:end="11:37">(<init pos:start="11:10" pos:end="11:16"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr> ;</init> <condition pos:start="11:18" pos:end="11:32"><expr pos:start="11:18" pos:end="11:31"><name pos:start="11:18" pos:end="11:18">i</name> <operator pos:start="11:20" pos:end="11:20">&lt;</operator> <name pos:start="11:22" pos:end="11:31"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:31">num_cpu</name></name></expr>;</condition> <incr pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:34">i</name><operator pos:start="11:35" pos:end="11:36">++</operator></expr></incr>)</control> <block pos:start="11:39" pos:end="31:5">{<block_content pos:start="13:9" pos:end="29:34">

        <if_stmt pos:start="13:9" pos:end="21:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:40">(<expr pos:start="13:13" pos:end="13:39"><name pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:23">revision</name></name> <operator pos:start="13:25" pos:end="13:26">==</operator> <name pos:start="13:28" pos:end="13:39">REV_11MPCORE</name></expr>)</condition> <block pos:start="13:42" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:39">

            <expr_stmt pos:start="15:13" pos:end="15:39"><expr pos:start="15:13" pos:end="15:38"><name pos:start="15:13" pos:end="15:31"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:28">priority_mask</name><index pos:start="15:29" pos:end="15:31">[<expr pos:start="15:30" pos:end="15:30"><name pos:start="15:30" pos:end="15:30">i</name></expr>]</index></name> <operator pos:start="15:33" pos:end="15:33">=</operator> <literal type="number" pos:start="15:35" pos:end="15:38">0xf0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="17:11" pos:end="21:9">else <block pos:start="17:16" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:36">

            <expr_stmt pos:start="19:13" pos:end="19:36"><expr pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:28">priority_mask</name><index pos:start="19:29" pos:end="19:31">[<expr pos:start="19:30" pos:end="19:30"><name pos:start="19:30" pos:end="19:30">i</name></expr>]</index></name> <operator pos:start="19:33" pos:end="19:33">=</operator> <literal type="number" pos:start="19:35" pos:end="19:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:37"><expr pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:26">current_pending</name><index pos:start="23:27" pos:end="23:29">[<expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">i</name></expr>]</index></name> <operator pos:start="23:31" pos:end="23:31">=</operator> <literal type="number" pos:start="23:33" pos:end="23:36">1023</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">running_irq</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">i</name></expr>]</index></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <literal type="number" pos:start="25:29" pos:end="25:32">1023</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:27">running_priority</name><index pos:start="27:28" pos:end="27:30">[<expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">i</name></expr>]</index></name> <operator pos:start="27:32" pos:end="27:32">=</operator> <literal type="number" pos:start="27:34" pos:end="27:38">0x100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:22">cpu_enabled</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">i</name></expr>]</index></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:33">false</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="33:5" pos:end="39:5">for <control pos:start="33:9" pos:end="33:37">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:32"><expr pos:start="33:17" pos:end="33:31"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:31">GIC_NR_SGIS</name></expr>;</condition> <incr pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:34">i</name><operator pos:start="33:35" pos:end="33:36">++</operator></expr></incr>)</control> <block pos:start="33:39" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:32">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:23">GIC_SET_ENABLED</name><argument_list pos:start="35:24" pos:end="35:40">(<argument pos:start="35:25" pos:end="35:25"><expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">i</name></expr></argument>, <argument pos:start="35:28" pos:end="35:39"><expr pos:start="35:28" pos:end="35:39"><name pos:start="35:28" pos:end="35:39">ALL_CPU_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:28">GIC_SET_EDGE_TRIGGER</name><argument_list pos:start="37:29" pos:end="37:31">(<argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><name pos:start="37:30" pos:end="37:30">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:24">(<expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:18">num_cpu</name></name> <operator pos:start="41:20" pos:end="41:21">==</operator> <literal type="number" pos:start="41:23" pos:end="41:23">1</literal></expr>)</condition> <block pos:start="41:26" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:9">

        <comment type="block" pos:start="43:9" pos:end="43:77">/* For uniprocessor GICs all interrupts always target the sole CPU */</comment>

        <for pos:start="45:9" pos:end="49:9">for <control pos:start="45:13" pos:end="45:40">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:35"><expr pos:start="45:21" pos:end="45:34"><name pos:start="45:21" pos:end="45:21">i</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <name pos:start="45:25" pos:end="45:34">GIC_MAXIRQ</name></expr>;</condition> <incr pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:37">i</name><operator pos:start="45:38" pos:end="45:39">++</operator></expr></incr>)</control> <block pos:start="45:42" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:33">

            <expr_stmt pos:start="47:13" pos:end="47:33"><expr pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:28"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:25">irq_target</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">i</name></expr>]</index></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <literal type="number" pos:start="47:32" pos:end="47:32">1</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:16"><expr pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:11"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:11">ctlr</name></name> <operator pos:start="53:13" pos:end="53:13">=</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
