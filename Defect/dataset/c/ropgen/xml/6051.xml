<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6051.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_wave</name><parameter_list pos:start="1:25" pos:end="1:72">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">MOVAtom</name></type> <name pos:start="1:68" pos:end="1:71">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if<condition pos:start="9:7" pos:end="9:37">(<expr pos:start="9:8" pos:end="9:36"><operator pos:start="9:8" pos:end="9:8">(</operator><name pos:start="9:9" pos:end="9:16">uint64_t</name><operator pos:start="9:17" pos:end="9:17">)</operator><name pos:start="9:18" pos:end="9:26"><name pos:start="9:18" pos:end="9:21">atom</name><operator pos:start="9:22" pos:end="9:22">.</operator><name pos:start="9:23" pos:end="9:26">size</name></name> <operator pos:start="9:28" pos:end="9:28">&gt;</operator> <operator pos:start="9:30" pos:end="9:30">(</operator><literal type="number" pos:start="9:31" pos:end="9:31">1</literal><operator pos:start="9:32" pos:end="9:33">&lt;&lt;</operator><literal type="number" pos:start="9:34" pos:end="9:35">30</literal><operator pos:start="9:36" pos:end="9:36">)</operator></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="39:33"><if pos:start="15:5" pos:end="31:5">if <condition pos:start="15:8" pos:end="15:45">(<expr pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:10">st</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">codec</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:27">codec_id</name></name> <operator pos:start="15:29" pos:end="15:30">==</operator> <name pos:start="15:32" pos:end="15:44">CODEC_ID_QDM2</name></expr>)</condition> <block pos:start="15:47" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:56">

        <comment type="line" pos:start="17:9" pos:end="17:64">// pass all frma atom to codec, needed at least for QDM2</comment>

        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><call pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:15">av_free</name><argument_list pos:start="19:16" pos:end="19:37">(<argument pos:start="19:17" pos:end="19:36"><expr pos:start="19:17" pos:end="19:36"><name pos:start="19:17" pos:end="19:36"><name pos:start="19:17" pos:end="19:18">st</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:25">codec</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:36">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:84"><expr pos:start="21:9" pos:end="21:83"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:10">st</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:17">codec</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:28">extradata</name></name> <operator pos:start="21:30" pos:end="21:30">=</operator> <call pos:start="21:32" pos:end="21:83"><name pos:start="21:32" pos:end="21:41">av_mallocz</name><argument_list pos:start="21:42" pos:end="21:83">(<argument pos:start="21:43" pos:end="21:82"><expr pos:start="21:43" pos:end="21:82"><name pos:start="21:43" pos:end="21:51"><name pos:start="21:43" pos:end="21:46">atom</name><operator pos:start="21:47" pos:end="21:47">.</operator><name pos:start="21:48" pos:end="21:51">size</name></name> <operator pos:start="21:53" pos:end="21:53">+</operator> <name pos:start="21:55" pos:end="21:82">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:35"><if pos:start="23:9" pos:end="25:35">if <condition pos:start="23:12" pos:end="23:34">(<expr pos:start="23:13" pos:end="23:33"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:33"><name pos:start="23:14" pos:end="23:15">st</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:22">codec</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:33">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:35"><block_content pos:start="25:13" pos:end="25:35">

            <return pos:start="25:13" pos:end="25:35">return <expr pos:start="25:20" pos:end="25:34"><call pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:26">AVERROR</name><argument_list pos:start="25:27" pos:end="25:34">(<argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:10">st</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">codec</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:33">extradata_size</name></name> <operator pos:start="27:35" pos:end="27:35">=</operator> <name pos:start="27:37" pos:end="27:45"><name pos:start="27:37" pos:end="27:40">atom</name><operator pos:start="27:41" pos:end="27:41">.</operator><name pos:start="27:42" pos:end="27:45">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:56"><expr pos:start="29:9" pos:end="29:55"><call pos:start="29:9" pos:end="29:55"><name pos:start="29:9" pos:end="29:18">get_buffer</name><argument_list pos:start="29:19" pos:end="29:55">(<argument pos:start="29:20" pos:end="29:21"><expr pos:start="29:20" pos:end="29:21"><name pos:start="29:20" pos:end="29:21">pb</name></expr></argument>, <argument pos:start="29:24" pos:end="29:43"><expr pos:start="29:24" pos:end="29:43"><name pos:start="29:24" pos:end="29:43"><name pos:start="29:24" pos:end="29:25">st</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:32">codec</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:43">extradata</name></name></expr></argument>, <argument pos:start="29:46" pos:end="29:54"><expr pos:start="29:46" pos:end="29:54"><name pos:start="29:46" pos:end="29:54"><name pos:start="29:46" pos:end="29:49">atom</name><operator pos:start="29:50" pos:end="29:50">.</operator><name pos:start="29:51" pos:end="29:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="37:5">else if <condition pos:start="31:15" pos:end="31:29">(<expr pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:19">atom</name><operator pos:start="31:20" pos:end="31:20">.</operator><name pos:start="31:21" pos:end="31:24">size</name></name> <operator pos:start="31:26" pos:end="31:26">&gt;</operator> <literal type="number" pos:start="31:28" pos:end="31:28">8</literal></expr>)</condition> <block pos:start="31:31" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:22"> <comment type="block" pos:start="31:33" pos:end="31:62">/* to read frma, esds atoms */</comment>

        <if_stmt pos:start="33:9" pos:end="35:22"><if pos:start="33:9" pos:end="35:22">if <condition pos:start="33:12" pos:end="33:46">(<expr pos:start="33:13" pos:end="33:45"><call pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:28">mov_read_default</name><argument_list pos:start="33:29" pos:end="33:41">(<argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><name pos:start="33:30" pos:end="33:30">c</name></expr></argument>, <argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><name pos:start="33:33" pos:end="33:34">pb</name></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">atom</name></expr></argument>)</argument_list></call> <operator pos:start="33:43" pos:end="33:43">&lt;</operator> <literal type="number" pos:start="33:45" pos:end="33:45">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:22"><block_content pos:start="35:13" pos:end="35:22">

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="39:33">else<block type="pseudo" pos:start="39:9" pos:end="39:33"><block_content pos:start="39:9" pos:end="39:33">

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><call pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:17">url_fskip</name><argument_list pos:start="39:18" pos:end="39:32">(<argument pos:start="39:19" pos:end="39:20"><expr pos:start="39:19" pos:end="39:20"><name pos:start="39:19" pos:end="39:20">pb</name></expr></argument>, <argument pos:start="39:23" pos:end="39:31"><expr pos:start="39:23" pos:end="39:31"><name pos:start="39:23" pos:end="39:31"><name pos:start="39:23" pos:end="39:26">atom</name><operator pos:start="39:27" pos:end="39:27">.</operator><name pos:start="39:28" pos:end="39:31">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
