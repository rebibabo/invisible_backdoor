<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25896.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">openrisc_pic_cpu_handler</name><parameter_list pos:start="1:37" pos:end="1:70">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">opaque</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">irq</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:69"><decl pos:start="1:61" pos:end="1:69"><type pos:start="1:61" pos:end="1:69"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:69">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">OpenRISCCPU</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">cpu</name> <init pos:start="5:22" pos:end="5:44">= <expr pos:start="5:24" pos:end="5:44"><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:35">OpenRISCCPU</name> <operator pos:start="5:37" pos:end="5:37">*</operator><operator pos:start="5:38" pos:end="5:38">)</operator><name pos:start="5:39" pos:end="5:44">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">irq_bit</name> <init pos:start="9:22" pos:end="9:31">= <expr pos:start="9:24" pos:end="9:31"><literal type="number" pos:start="9:24" pos:end="9:24">1</literal> <operator pos:start="9:26" pos:end="9:27">&lt;&lt;</operator> <name pos:start="9:29" pos:end="9:31">irq</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:28">(<expr pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:11">irq</name> <operator pos:start="13:13" pos:end="13:13">&gt;</operator> <literal type="number" pos:start="13:15" pos:end="13:16">31</literal> <operator pos:start="13:18" pos:end="13:19">||</operator> <name pos:start="13:21" pos:end="13:23">irq</name> <operator pos:start="13:25" pos:end="13:25">&lt;</operator> <literal type="number" pos:start="13:27" pos:end="13:27">0</literal></expr>)</condition> <block pos:start="13:30" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:14">(<expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:13">level</name></expr>)</condition> <block pos:start="21:16" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:34">

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">cpu</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:16">env</name><operator pos:start="23:17" pos:end="23:17">.</operator><name pos:start="23:18" pos:end="23:22">picsr</name></name> <operator pos:start="23:24" pos:end="23:25">|=</operator> <name pos:start="23:27" pos:end="23:33">irq_bit</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:35">

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:11">cpu</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:16">env</name><operator pos:start="27:17" pos:end="27:17">.</operator><name pos:start="27:18" pos:end="27:22">picsr</name></name> <operator pos:start="27:24" pos:end="27:25">&amp;=</operator> <operator pos:start="27:27" pos:end="27:27">~</operator><name pos:start="27:28" pos:end="27:34">irq_bit</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:40">(<expr pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:11">cpu</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:16">env</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:22">picsr</name></name> <operator pos:start="33:24" pos:end="33:24">&amp;</operator> <name pos:start="33:26" pos:end="33:39"><name pos:start="33:26" pos:end="33:28">cpu</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:33">env</name><operator pos:start="33:34" pos:end="33:34">.</operator><name pos:start="33:35" pos:end="33:39">picmr</name></name></expr>)</condition> <block pos:start="33:42" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:46">

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><call pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:21">cpu_interrupt</name><argument_list pos:start="35:22" pos:end="35:45">(<argument pos:start="35:23" pos:end="35:24"><expr pos:start="35:23" pos:end="35:24"><name pos:start="35:23" pos:end="35:24">cs</name></expr></argument>, <argument pos:start="35:27" pos:end="35:44"><expr pos:start="35:27" pos:end="35:44"><name pos:start="35:27" pos:end="35:44">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="43:5">else <block pos:start="37:12" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:27">

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><call pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:27">cpu_reset_interrupt</name><argument_list pos:start="39:28" pos:end="39:51">(<argument pos:start="39:29" pos:end="39:30"><expr pos:start="39:29" pos:end="39:30"><name pos:start="39:29" pos:end="39:30">cs</name></expr></argument>, <argument pos:start="39:33" pos:end="39:50"><expr pos:start="39:33" pos:end="39:50"><name pos:start="39:33" pos:end="39:50">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:27"><expr pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:11">cpu</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">env</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:22">picsr</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
