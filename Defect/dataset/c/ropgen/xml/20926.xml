<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20926.c" pos:tabs="8"><function pos:start="1:1" pos:end="257:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_mb_info</name><parameter_list pos:start="1:26" pos:end="3:63">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:41">IVI45DecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:65"><decl pos:start="1:49" pos:end="1:65"><type pos:start="1:49" pos:end="1:65"><name pos:start="1:49" pos:end="1:59">IVIBandDesc</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">band</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:33">IVITile</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">tile</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:62"><decl pos:start="3:42" pos:end="3:62"><type pos:start="3:42" pos:end="3:62"><name pos:start="3:42" pos:end="3:55">AVCodecContext</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="257:1">{<block_content pos:start="7:5" pos:end="255:13">

    <decl_stmt pos:start="7:5" pos:end="9:38"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>         <name pos:start="7:17" pos:end="7:17">x</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:20">y</name></decl>, <decl pos:start="7:23" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:26">mv_x</name></decl>, <decl pos:start="7:29" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:32">mv_y</name></decl>, <decl pos:start="7:35" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:42">mv_delta</name></decl>, <decl pos:start="7:45" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:48">offs</name></decl>, <decl pos:start="7:51" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:51" pos:end="7:59">mb_offset</name></decl>,

                <decl pos:start="9:17" pos:end="9:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="9:17" pos:end="9:24">mv_scale</name></decl>, <decl pos:start="9:27" pos:end="9:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="9:27" pos:end="9:37">blks_per_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:13">IVIMbInfo</name>   <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">mb</name></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:28">ref_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:56"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>         <name pos:start="13:17" pos:end="13:26">row_offset</name> <init pos:start="13:28" pos:end="13:56">= <expr pos:start="13:30" pos:end="13:56"><name pos:start="13:30" pos:end="13:42"><name pos:start="13:30" pos:end="13:33">band</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:42">mb_size</name></name> <operator pos:start="13:44" pos:end="13:44">*</operator> <name pos:start="13:46" pos:end="13:56"><name pos:start="13:46" pos:end="13:49">band</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:56">pitch</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:6">mb</name>     <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:22"><name pos:start="17:14" pos:end="17:17">tile</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:10">ref_mb</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:26"><name pos:start="19:14" pos:end="19:17">tile</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">ref_mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:8">offs</name>   <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:23"><name pos:start="21:14" pos:end="21:17">tile</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:23">ypos</name></name> <operator pos:start="21:25" pos:end="21:25">*</operator> <name pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:30">band</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:37">pitch</name></name> <operator pos:start="21:39" pos:end="21:39">+</operator> <name pos:start="21:41" pos:end="21:50"><name pos:start="21:41" pos:end="21:44">tile</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:50">xpos</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:35"><if pos:start="25:5" pos:end="29:35">if <condition pos:start="25:8" pos:end="27:77">(<expr pos:start="25:9" pos:end="27:76"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:15">ref_mb</name> <operator pos:start="25:17" pos:end="25:18">&amp;&amp;</operator>

        <operator pos:start="27:9" pos:end="27:9">(</operator><operator pos:start="27:10" pos:end="27:10">(</operator><name pos:start="27:11" pos:end="27:30"><name pos:start="27:11" pos:end="27:14">band</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:30">qdelta_present</name></name> <operator pos:start="27:32" pos:end="27:33">&amp;&amp;</operator> <name pos:start="27:35" pos:end="27:54"><name pos:start="27:35" pos:end="27:38">band</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:54">inherit_qdelta</name></name><operator pos:start="27:55" pos:end="27:55">)</operator> <operator pos:start="27:57" pos:end="27:58">||</operator> <name pos:start="27:60" pos:end="27:75"><name pos:start="27:60" pos:end="27:63">band</name><operator pos:start="27:64" pos:end="27:65">-&gt;</operator><name pos:start="27:66" pos:end="27:75">inherit_mv</name></name><operator pos:start="27:76" pos:end="27:76">)</operator></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:35"><block_content pos:start="29:9" pos:end="29:35">

        <return pos:start="29:9" pos:end="29:35">return <expr pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:84">(<expr pos:start="33:9" pos:end="33:83"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:12">tile</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:21">num_MBs</name></name> <operator pos:start="33:23" pos:end="33:24">!=</operator> <call pos:start="33:26" pos:end="33:83"><name pos:start="33:26" pos:end="33:41">IVI_MBs_PER_TILE</name><argument_list pos:start="33:42" pos:end="33:83">(<argument pos:start="33:43" pos:end="33:53"><expr pos:start="33:43" pos:end="33:53"><name pos:start="33:43" pos:end="33:53"><name pos:start="33:43" pos:end="33:46">tile</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:53">width</name></name></expr></argument>, <argument pos:start="33:56" pos:end="33:67"><expr pos:start="33:56" pos:end="33:67"><name pos:start="33:56" pos:end="33:67"><name pos:start="33:56" pos:end="33:59">tile</name><operator pos:start="33:60" pos:end="33:61">-&gt;</operator><name pos:start="33:62" pos:end="33:67">height</name></name></expr></argument>, <argument pos:start="33:70" pos:end="33:82"><expr pos:start="33:70" pos:end="33:82"><name pos:start="33:70" pos:end="33:82"><name pos:start="33:70" pos:end="33:73">band</name><operator pos:start="33:74" pos:end="33:75">-&gt;</operator><name pos:start="33:76" pos:end="33:82">mb_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:86" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:35">

        <expr_stmt pos:start="35:9" pos:end="37:90"><expr pos:start="35:9" pos:end="37:89"><call pos:start="35:9" pos:end="37:89"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="37:89">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:87"><expr pos:start="35:37" pos:end="35:87"><literal type="string" pos:start="35:37" pos:end="35:87">"Allocated tile size %d mismatches parameters %d\n"</literal></expr></argument>,

               <argument pos:start="37:16" pos:end="37:28"><expr pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:19">tile</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:28">num_MBs</name></name></expr></argument>, <argument pos:start="37:31" pos:end="37:88"><expr pos:start="37:31" pos:end="37:88"><call pos:start="37:31" pos:end="37:88"><name pos:start="37:31" pos:end="37:46">IVI_MBs_PER_TILE</name><argument_list pos:start="37:47" pos:end="37:88">(<argument pos:start="37:48" pos:end="37:58"><expr pos:start="37:48" pos:end="37:58"><name pos:start="37:48" pos:end="37:58"><name pos:start="37:48" pos:end="37:51">tile</name><operator pos:start="37:52" pos:end="37:53">-&gt;</operator><name pos:start="37:54" pos:end="37:58">width</name></name></expr></argument>, <argument pos:start="37:61" pos:end="37:72"><expr pos:start="37:61" pos:end="37:72"><name pos:start="37:61" pos:end="37:72"><name pos:start="37:61" pos:end="37:64">tile</name><operator pos:start="37:65" pos:end="37:66">-&gt;</operator><name pos:start="37:67" pos:end="37:72">height</name></name></expr></argument>, <argument pos:start="37:75" pos:end="37:87"><expr pos:start="37:75" pos:end="37:87"><name pos:start="37:75" pos:end="37:87"><name pos:start="37:75" pos:end="37:78">band</name><operator pos:start="37:79" pos:end="37:80">-&gt;</operator><name pos:start="37:81" pos:end="37:87">mb_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:41">/* scale factor for motion vectors */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:77"><expr pos:start="47:5" pos:end="47:76"><name pos:start="47:5" pos:end="47:12">mv_scale</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:19">ctx</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:27">planes</name><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><literal type="number" pos:start="47:29" pos:end="47:29">0</literal></expr>]</index></name><operator pos:start="47:31" pos:end="47:31">.</operator><name pos:start="47:32" pos:end="47:39"><name pos:start="47:32" pos:end="47:36">bands</name><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">0</literal></expr>]</index></name><operator pos:start="47:40" pos:end="47:40">.</operator><name pos:start="47:41" pos:end="47:47">mb_size</name> <operator pos:start="47:49" pos:end="47:50">&gt;&gt;</operator> <literal type="number" pos:start="47:52" pos:end="47:52">3</literal><operator pos:start="47:53" pos:end="47:53">)</operator> <operator pos:start="47:55" pos:end="47:55">-</operator> <operator pos:start="47:57" pos:end="47:57">(</operator><name pos:start="47:58" pos:end="47:70"><name pos:start="47:58" pos:end="47:61">band</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:70">mb_size</name></name> <operator pos:start="47:72" pos:end="47:73">&gt;&gt;</operator> <literal type="number" pos:start="47:75" pos:end="47:75">3</literal><operator pos:start="47:76" pos:end="47:76">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:8">mv_x</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <name pos:start="49:12" pos:end="49:15">mv_y</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</expr_stmt>



    <for pos:start="53:5" pos:end="247:5">for <control pos:start="53:9" pos:end="53:77">(<init pos:start="53:10" pos:end="53:24"><expr pos:start="53:10" pos:end="53:23"><name pos:start="53:10" pos:end="53:10">y</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:23"><name pos:start="53:14" pos:end="53:17">tile</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:23">ypos</name></name></expr>;</init> <condition pos:start="53:26" pos:end="53:57"><expr pos:start="53:26" pos:end="53:56"><name pos:start="53:26" pos:end="53:26">y</name> <operator pos:start="53:28" pos:end="53:28">&lt;</operator> <operator pos:start="53:30" pos:end="53:30">(</operator><name pos:start="53:31" pos:end="53:40"><name pos:start="53:31" pos:end="53:34">tile</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:40">ypos</name></name> <operator pos:start="53:42" pos:end="53:42">+</operator> <name pos:start="53:44" pos:end="53:55"><name pos:start="53:44" pos:end="53:47">tile</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:55">height</name></name><operator pos:start="53:56" pos:end="53:56">)</operator></expr>;</condition> <incr pos:start="53:59" pos:end="53:76"><expr pos:start="53:59" pos:end="53:76"><name pos:start="53:59" pos:end="53:59">y</name> <operator pos:start="53:61" pos:end="53:62">+=</operator> <name pos:start="53:64" pos:end="53:76"><name pos:start="53:64" pos:end="53:67">band</name><operator pos:start="53:68" pos:end="53:69">-&gt;</operator><name pos:start="53:70" pos:end="53:76">mb_size</name></name></expr></incr>)</control> <block pos:start="53:79" pos:end="247:5">{<block_content pos:start="55:9" pos:end="245:27">

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:17">mb_offset</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:24">offs</name></expr>;</expr_stmt>



        <for pos:start="59:9" pos:end="241:9">for <control pos:start="59:13" pos:end="59:80">(<init pos:start="59:14" pos:end="59:28"><expr pos:start="59:14" pos:end="59:27"><name pos:start="59:14" pos:end="59:14">x</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:27"><name pos:start="59:18" pos:end="59:21">tile</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:27">xpos</name></name></expr>;</init> <condition pos:start="59:30" pos:end="59:60"><expr pos:start="59:30" pos:end="59:59"><name pos:start="59:30" pos:end="59:30">x</name> <operator pos:start="59:32" pos:end="59:32">&lt;</operator> <operator pos:start="59:34" pos:end="59:34">(</operator><name pos:start="59:35" pos:end="59:44"><name pos:start="59:35" pos:end="59:38">tile</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:44">xpos</name></name> <operator pos:start="59:46" pos:end="59:46">+</operator> <name pos:start="59:48" pos:end="59:58"><name pos:start="59:48" pos:end="59:51">tile</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:58">width</name></name><operator pos:start="59:59" pos:end="59:59">)</operator></expr>;</condition> <incr pos:start="59:62" pos:end="59:79"><expr pos:start="59:62" pos:end="59:79"><name pos:start="59:62" pos:end="59:62">x</name> <operator pos:start="59:64" pos:end="59:65">+=</operator> <name pos:start="59:67" pos:end="59:79"><name pos:start="59:67" pos:end="59:70">band</name><operator pos:start="59:71" pos:end="59:72">-&gt;</operator><name pos:start="59:73" pos:end="59:79">mb_size</name></name></expr></incr>)</control> <block pos:start="59:82" pos:end="241:9">{<block_content pos:start="61:13" pos:end="239:39">

            <expr_stmt pos:start="61:13" pos:end="61:29"><expr pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:14">mb</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:20">xpos</name></name>     <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:28">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:29"><expr pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:14">mb</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:20">ypos</name></name>     <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:28">y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:37"><expr pos:start="65:13" pos:end="65:36"><name pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:14">mb</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:24">buf_offs</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:36">mb_offset</name></expr>;</expr_stmt>



            <if_stmt pos:start="69:13" pos:end="229:13"><if pos:start="69:13" pos:end="121:13">if <condition pos:start="69:16" pos:end="69:36">(<expr pos:start="69:17" pos:end="69:35"><call pos:start="69:17" pos:end="69:35"><name pos:start="69:17" pos:end="69:25">get_bits1</name><argument_list pos:start="69:26" pos:end="69:35">(<argument pos:start="69:27" pos:end="69:34"><expr pos:start="69:27" pos:end="69:34"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:34"><name pos:start="69:28" pos:end="69:30">ctx</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:34">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:38" pos:end="121:13">{<block_content pos:start="71:17" pos:end="119:17">

                <if_stmt pos:start="71:17" pos:end="77:17"><if pos:start="71:17" pos:end="77:17">if <condition pos:start="71:20" pos:end="71:55">(<expr pos:start="71:21" pos:end="71:54"><name pos:start="71:21" pos:end="71:35"><name pos:start="71:21" pos:end="71:23">ctx</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:35">frame_type</name></name> <operator pos:start="71:37" pos:end="71:38">==</operator> <name pos:start="71:40" pos:end="71:54">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="71:57" pos:end="77:17">{<block_content pos:start="73:21" pos:end="75:30">

                    <expr_stmt pos:start="73:21" pos:end="73:91"><expr pos:start="73:21" pos:end="73:90"><call pos:start="73:21" pos:end="73:90"><name pos:start="73:21" pos:end="73:26">av_log</name><argument_list pos:start="73:27" pos:end="73:90">(<argument pos:start="73:28" pos:end="73:32"><expr pos:start="73:28" pos:end="73:32"><name pos:start="73:28" pos:end="73:32">avctx</name></expr></argument>, <argument pos:start="73:35" pos:end="73:46"><expr pos:start="73:35" pos:end="73:46"><name pos:start="73:35" pos:end="73:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:49" pos:end="73:89"><expr pos:start="73:49" pos:end="73:89"><literal type="string" pos:start="73:49" pos:end="73:89">"Empty macroblock in an INTRA picture!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="75:21" pos:end="75:30">return <expr pos:start="75:28" pos:end="75:29"><operator pos:start="75:28" pos:end="75:28">-</operator><literal type="number" pos:start="75:29" pos:end="75:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:29"><expr pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:18">mb</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:24">type</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <literal type="number" pos:start="79:28" pos:end="79:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="79:31" pos:end="79:70">/* empty macroblocks are always INTER */</comment>

                <expr_stmt pos:start="81:17" pos:end="81:29"><expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:23"><name pos:start="81:17" pos:end="81:18">mb</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:23">cbp</name></name>  <operator pos:start="81:26" pos:end="81:26">=</operator> <literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="81:31" pos:end="81:56">/* all blocks are empty */</comment>



                <expr_stmt pos:start="85:17" pos:end="85:32"><expr pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:27"><name pos:start="85:17" pos:end="85:18">mb</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:27">q_delta</name></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <literal type="number" pos:start="85:31" pos:end="85:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="87:17" pos:end="95:17"><if pos:start="87:17" pos:end="95:17">if <condition pos:start="87:20" pos:end="87:78">(<expr pos:start="87:21" pos:end="87:77"><operator pos:start="87:21" pos:end="87:21">!</operator><name pos:start="87:22" pos:end="87:32"><name pos:start="87:22" pos:end="87:25">band</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:32">plane</name></name> <operator pos:start="87:34" pos:end="87:35">&amp;&amp;</operator> <operator pos:start="87:37" pos:end="87:37">!</operator><name pos:start="87:38" pos:end="87:51"><name pos:start="87:38" pos:end="87:41">band</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:51">band_num</name></name> <operator pos:start="87:53" pos:end="87:54">&amp;&amp;</operator> <operator pos:start="87:56" pos:end="87:56">(</operator><name pos:start="87:57" pos:end="87:72"><name pos:start="87:57" pos:end="87:59">ctx</name><operator pos:start="87:60" pos:end="87:61">-&gt;</operator><name pos:start="87:62" pos:end="87:72">frame_flags</name></name> <operator pos:start="87:74" pos:end="87:74">&amp;</operator> <literal type="number" pos:start="87:76" pos:end="87:76">8</literal><operator pos:start="87:77" pos:end="87:77">)</operator></expr>)</condition> <block pos:start="87:80" pos:end="95:17">{<block_content pos:start="89:21" pos:end="93:60">

                    <expr_stmt pos:start="89:21" pos:end="91:60"><expr pos:start="89:21" pos:end="91:59"><name pos:start="89:21" pos:end="89:31"><name pos:start="89:21" pos:end="89:22">mb</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:31">q_delta</name></name> <operator pos:start="89:33" pos:end="89:33">=</operator> <call pos:start="89:35" pos:end="91:59"><name pos:start="89:35" pos:end="89:42">get_vlc2</name><argument_list pos:start="89:43" pos:end="91:59">(<argument pos:start="89:44" pos:end="89:51"><expr pos:start="89:44" pos:end="89:51"><operator pos:start="89:44" pos:end="89:44">&amp;</operator><name pos:start="89:45" pos:end="89:51"><name pos:start="89:45" pos:end="89:47">ctx</name><operator pos:start="89:48" pos:end="89:49">-&gt;</operator><name pos:start="89:50" pos:end="89:51">gb</name></name></expr></argument>, <argument pos:start="89:54" pos:end="89:75"><expr pos:start="89:54" pos:end="89:75"><name pos:start="89:54" pos:end="89:75"><name pos:start="89:54" pos:end="89:56">ctx</name><operator pos:start="89:57" pos:end="89:58">-&gt;</operator><name pos:start="89:59" pos:end="89:64">mb_vlc</name><operator pos:start="89:65" pos:end="89:65">.</operator><name pos:start="89:66" pos:end="89:68">tab</name><operator pos:start="89:69" pos:end="89:70">-&gt;</operator><name pos:start="89:71" pos:end="89:75">table</name></name></expr></argument>,

                                           <argument pos:start="91:44" pos:end="91:55"><expr pos:start="91:44" pos:end="91:55"><name pos:start="91:44" pos:end="91:55">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="91:58" pos:end="91:58"><expr pos:start="91:58" pos:end="91:58"><literal type="number" pos:start="91:58" pos:end="91:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:60"><expr pos:start="93:21" pos:end="93:59"><name pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:22">mb</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:31">q_delta</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <call pos:start="93:35" pos:end="93:59"><name pos:start="93:35" pos:end="93:46">IVI_TOSIGNED</name><argument_list pos:start="93:47" pos:end="93:59">(<argument pos:start="93:48" pos:end="93:58"><expr pos:start="93:48" pos:end="93:58"><name pos:start="93:48" pos:end="93:58"><name pos:start="93:48" pos:end="93:49">mb</name><operator pos:start="93:50" pos:end="93:51">-&gt;</operator><name pos:start="93:52" pos:end="93:58">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="99:17" pos:end="99:40"><expr pos:start="99:17" pos:end="99:39"><name pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:18">mb</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:24">mv_x</name></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <name pos:start="99:28" pos:end="99:35"><name pos:start="99:28" pos:end="99:29">mb</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:35">mv_y</name></name> <operator pos:start="99:37" pos:end="99:37">=</operator> <literal type="number" pos:start="99:39" pos:end="99:39">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="99:42" pos:end="99:69">/* no motion vector coded */</comment>

                <if_stmt pos:start="101:17" pos:end="119:17"><if pos:start="101:17" pos:end="119:17">if <condition pos:start="101:20" pos:end="101:37">(<expr pos:start="101:21" pos:end="101:36"><name pos:start="101:21" pos:end="101:36"><name pos:start="101:21" pos:end="101:24">band</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:36">inherit_mv</name></name></expr>)</condition><block pos:start="101:38" pos:end="119:17">{<block_content pos:start="105:21" pos:end="117:21">

                    <comment type="block" pos:start="103:21" pos:end="103:51">/* motion vector inheritance */</comment>

                    <if_stmt pos:start="105:21" pos:end="117:21"><if pos:start="105:21" pos:end="111:21">if <condition pos:start="105:24" pos:end="105:33">(<expr pos:start="105:25" pos:end="105:32"><name pos:start="105:25" pos:end="105:32">mv_scale</name></expr>)</condition> <block pos:start="105:35" pos:end="111:21">{<block_content pos:start="107:25" pos:end="109:72">

                        <expr_stmt pos:start="107:25" pos:end="107:72"><expr pos:start="107:25" pos:end="107:71"><name pos:start="107:25" pos:end="107:32"><name pos:start="107:25" pos:end="107:26">mb</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:32">mv_x</name></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <call pos:start="107:36" pos:end="107:71"><name pos:start="107:36" pos:end="107:47">ivi_scale_mv</name><argument_list pos:start="107:48" pos:end="107:71">(<argument pos:start="107:49" pos:end="107:60"><expr pos:start="107:49" pos:end="107:60"><name pos:start="107:49" pos:end="107:60"><name pos:start="107:49" pos:end="107:54">ref_mb</name><operator pos:start="107:55" pos:end="107:56">-&gt;</operator><name pos:start="107:57" pos:end="107:60">mv_x</name></name></expr></argument>, <argument pos:start="107:63" pos:end="107:70"><expr pos:start="107:63" pos:end="107:70"><name pos:start="107:63" pos:end="107:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="109:25" pos:end="109:72"><expr pos:start="109:25" pos:end="109:71"><name pos:start="109:25" pos:end="109:32"><name pos:start="109:25" pos:end="109:26">mb</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:32">mv_y</name></name> <operator pos:start="109:34" pos:end="109:34">=</operator> <call pos:start="109:36" pos:end="109:71"><name pos:start="109:36" pos:end="109:47">ivi_scale_mv</name><argument_list pos:start="109:48" pos:end="109:71">(<argument pos:start="109:49" pos:end="109:60"><expr pos:start="109:49" pos:end="109:60"><name pos:start="109:49" pos:end="109:60"><name pos:start="109:49" pos:end="109:54">ref_mb</name><operator pos:start="109:55" pos:end="109:56">-&gt;</operator><name pos:start="109:57" pos:end="109:60">mv_y</name></name></expr></argument>, <argument pos:start="109:63" pos:end="109:70"><expr pos:start="109:63" pos:end="109:70"><name pos:start="109:63" pos:end="109:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="111:23" pos:end="117:21">else <block pos:start="111:28" pos:end="117:21">{<block_content pos:start="113:25" pos:end="115:48">

                        <expr_stmt pos:start="113:25" pos:end="113:48"><expr pos:start="113:25" pos:end="113:47"><name pos:start="113:25" pos:end="113:32"><name pos:start="113:25" pos:end="113:26">mb</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:32">mv_x</name></name> <operator pos:start="113:34" pos:end="113:34">=</operator> <name pos:start="113:36" pos:end="113:47"><name pos:start="113:36" pos:end="113:41">ref_mb</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:47">mv_x</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="115:25" pos:end="115:48"><expr pos:start="115:25" pos:end="115:47"><name pos:start="115:25" pos:end="115:32"><name pos:start="115:25" pos:end="115:26">mb</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:32">mv_y</name></name> <operator pos:start="115:34" pos:end="115:34">=</operator> <name pos:start="115:36" pos:end="115:47"><name pos:start="115:36" pos:end="115:41">ref_mb</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:47">mv_y</name></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="121:15" pos:end="229:13">else <block pos:start="121:20" pos:end="229:13">{<block_content pos:start="123:17" pos:end="227:17">

                <if_stmt pos:start="123:17" pos:end="135:17"><if pos:start="123:17" pos:end="127:17">if <condition pos:start="123:20" pos:end="123:37">(<expr pos:start="123:21" pos:end="123:36"><name pos:start="123:21" pos:end="123:36"><name pos:start="123:21" pos:end="123:24">band</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:36">inherit_mv</name></name></expr>)</condition> <block pos:start="123:39" pos:end="127:17">{<block_content pos:start="125:21" pos:end="125:44">

                    <expr_stmt pos:start="125:21" pos:end="125:44"><expr pos:start="125:21" pos:end="125:43"><name pos:start="125:21" pos:end="125:28"><name pos:start="125:21" pos:end="125:22">mb</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:28">type</name></name> <operator pos:start="125:30" pos:end="125:30">=</operator> <name pos:start="125:32" pos:end="125:43"><name pos:start="125:32" pos:end="125:37">ref_mb</name><operator pos:start="125:38" pos:end="125:39">-&gt;</operator><name pos:start="125:40" pos:end="125:43">type</name></name></expr>;</expr_stmt> <comment type="block" pos:start="125:46" pos:end="125:95">/* copy mb_type from corresponding reference mb */</comment>

                </block_content>}</block></if> <if type="elseif" pos:start="127:19" pos:end="131:17">else if <condition pos:start="127:27" pos:end="127:62">(<expr pos:start="127:28" pos:end="127:61"><name pos:start="127:28" pos:end="127:42"><name pos:start="127:28" pos:end="127:30">ctx</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:42">frame_type</name></name> <operator pos:start="127:44" pos:end="127:45">==</operator> <name pos:start="127:47" pos:end="127:61">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="127:64" pos:end="131:17">{<block_content pos:start="129:21" pos:end="129:33">

                    <expr_stmt pos:start="129:21" pos:end="129:33"><expr pos:start="129:21" pos:end="129:32"><name pos:start="129:21" pos:end="129:28"><name pos:start="129:21" pos:end="129:22">mb</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:28">type</name></name> <operator pos:start="129:30" pos:end="129:30">=</operator> <literal type="number" pos:start="129:32" pos:end="129:32">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="129:35" pos:end="129:80">/* mb_type is always INTRA for intra-frames */</comment>

                </block_content>}</block></if> <else pos:start="131:19" pos:end="135:17">else <block pos:start="131:24" pos:end="135:17">{<block_content pos:start="133:21" pos:end="133:51">

                    <expr_stmt pos:start="133:21" pos:end="133:51"><expr pos:start="133:21" pos:end="133:50"><name pos:start="133:21" pos:end="133:28"><name pos:start="133:21" pos:end="133:22">mb</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:28">type</name></name> <operator pos:start="133:30" pos:end="133:30">=</operator> <call pos:start="133:32" pos:end="133:50"><name pos:start="133:32" pos:end="133:40">get_bits1</name><argument_list pos:start="133:41" pos:end="133:50">(<argument pos:start="133:42" pos:end="133:49"><expr pos:start="133:42" pos:end="133:49"><operator pos:start="133:42" pos:end="133:42">&amp;</operator><name pos:start="133:43" pos:end="133:49"><name pos:start="133:43" pos:end="133:45">ctx</name><operator pos:start="133:46" pos:end="133:47">-&gt;</operator><name pos:start="133:48" pos:end="133:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="139:17" pos:end="139:70"><expr pos:start="139:17" pos:end="139:69"><name pos:start="139:17" pos:end="139:27">blks_per_mb</name> <operator pos:start="139:29" pos:end="139:29">=</operator> <ternary pos:start="139:31" pos:end="139:69"><condition pos:start="139:31" pos:end="139:63"><expr pos:start="139:31" pos:end="139:61"><name pos:start="139:31" pos:end="139:43"><name pos:start="139:31" pos:end="139:34">band</name><operator pos:start="139:35" pos:end="139:36">-&gt;</operator><name pos:start="139:37" pos:end="139:43">mb_size</name></name> <operator pos:start="139:45" pos:end="139:46">!=</operator> <name pos:start="139:48" pos:end="139:61"><name pos:start="139:48" pos:end="139:51">band</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:61">blk_size</name></name></expr> ?</condition><then pos:start="139:65" pos:end="139:65"> <expr pos:start="139:65" pos:end="139:65"><literal type="number" pos:start="139:65" pos:end="139:65">4</literal></expr> </then><else pos:start="139:67" pos:end="139:69">: <expr pos:start="139:69" pos:end="139:69"><literal type="number" pos:start="139:69" pos:end="139:69">1</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:58"><expr pos:start="141:17" pos:end="141:57"><name pos:start="141:17" pos:end="141:23"><name pos:start="141:17" pos:end="141:18">mb</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:23">cbp</name></name> <operator pos:start="141:25" pos:end="141:25">=</operator> <call pos:start="141:27" pos:end="141:57"><name pos:start="141:27" pos:end="141:34">get_bits</name><argument_list pos:start="141:35" pos:end="141:57">(<argument pos:start="141:36" pos:end="141:43"><expr pos:start="141:36" pos:end="141:43"><operator pos:start="141:36" pos:end="141:36">&amp;</operator><name pos:start="141:37" pos:end="141:43"><name pos:start="141:37" pos:end="141:39">ctx</name><operator pos:start="141:40" pos:end="141:41">-&gt;</operator><name pos:start="141:42" pos:end="141:43">gb</name></name></expr></argument>, <argument pos:start="141:46" pos:end="141:56"><expr pos:start="141:46" pos:end="141:56"><name pos:start="141:46" pos:end="141:56">blks_per_mb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="145:17" pos:end="145:32"><expr pos:start="145:17" pos:end="145:31"><name pos:start="145:17" pos:end="145:27"><name pos:start="145:17" pos:end="145:18">mb</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:27">q_delta</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <literal type="number" pos:start="145:31" pos:end="145:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="147:17" pos:end="165:17"><if pos:start="147:17" pos:end="165:17">if <condition pos:start="147:20" pos:end="147:41">(<expr pos:start="147:21" pos:end="147:40"><name pos:start="147:21" pos:end="147:40"><name pos:start="147:21" pos:end="147:24">band</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:40">qdelta_present</name></name></expr>)</condition> <block pos:start="147:43" pos:end="165:17">{<block_content pos:start="149:21" pos:end="163:21">

                    <if_stmt pos:start="149:21" pos:end="163:21"><if pos:start="149:21" pos:end="153:21">if <condition pos:start="149:24" pos:end="149:45">(<expr pos:start="149:25" pos:end="149:44"><name pos:start="149:25" pos:end="149:44"><name pos:start="149:25" pos:end="149:28">band</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:44">inherit_qdelta</name></name></expr>)</condition> <block pos:start="149:47" pos:end="153:21">{<block_content pos:start="151:25" pos:end="151:66">

                        <if_stmt pos:start="151:25" pos:end="151:66"><if pos:start="151:25" pos:end="151:66">if <condition pos:start="151:28" pos:end="151:35">(<expr pos:start="151:29" pos:end="151:34"><name pos:start="151:29" pos:end="151:34">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="151:37" pos:end="151:66"><block_content pos:start="151:37" pos:end="151:66"> <expr_stmt pos:start="151:37" pos:end="151:66"><expr pos:start="151:37" pos:end="151:65"><name pos:start="151:37" pos:end="151:47"><name pos:start="151:37" pos:end="151:38">mb</name><operator pos:start="151:39" pos:end="151:40">-&gt;</operator><name pos:start="151:41" pos:end="151:47">q_delta</name></name> <operator pos:start="151:49" pos:end="151:49">=</operator> <name pos:start="151:51" pos:end="151:65"><name pos:start="151:51" pos:end="151:56">ref_mb</name><operator pos:start="151:57" pos:end="151:58">-&gt;</operator><name pos:start="151:59" pos:end="151:65">q_delta</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="153:23" pos:end="163:21">else if <condition pos:start="153:31" pos:end="155:67">(<expr pos:start="153:32" pos:end="155:66"><name pos:start="153:32" pos:end="153:38"><name pos:start="153:32" pos:end="153:33">mb</name><operator pos:start="153:34" pos:end="153:35">-&gt;</operator><name pos:start="153:36" pos:end="153:38">cbp</name></name> <operator pos:start="153:40" pos:end="153:41">||</operator> <operator pos:start="153:43" pos:end="153:43">(</operator><operator pos:start="153:44" pos:end="153:44">!</operator><name pos:start="153:45" pos:end="153:55"><name pos:start="153:45" pos:end="153:48">band</name><operator pos:start="153:49" pos:end="153:50">-&gt;</operator><name pos:start="153:51" pos:end="153:55">plane</name></name> <operator pos:start="153:57" pos:end="153:58">&amp;&amp;</operator> <operator pos:start="153:60" pos:end="153:60">!</operator><name pos:start="153:61" pos:end="153:74"><name pos:start="153:61" pos:end="153:64">band</name><operator pos:start="153:65" pos:end="153:66">-&gt;</operator><name pos:start="153:67" pos:end="153:74">band_num</name></name> <operator pos:start="153:76" pos:end="153:77">&amp;&amp;</operator>

                                           <operator pos:start="155:44" pos:end="155:44">(</operator><name pos:start="155:45" pos:end="155:60"><name pos:start="155:45" pos:end="155:47">ctx</name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:60">frame_flags</name></name> <operator pos:start="155:62" pos:end="155:62">&amp;</operator> <literal type="number" pos:start="155:64" pos:end="155:64">8</literal><operator pos:start="155:65" pos:end="155:65">)</operator><operator pos:start="155:66" pos:end="155:66">)</operator></expr>)</condition> <block pos:start="155:69" pos:end="163:21">{<block_content pos:start="157:25" pos:end="161:64">

                        <expr_stmt pos:start="157:25" pos:end="159:64"><expr pos:start="157:25" pos:end="159:63"><name pos:start="157:25" pos:end="157:35"><name pos:start="157:25" pos:end="157:26">mb</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:35">q_delta</name></name> <operator pos:start="157:37" pos:end="157:37">=</operator> <call pos:start="157:39" pos:end="159:63"><name pos:start="157:39" pos:end="157:46">get_vlc2</name><argument_list pos:start="157:47" pos:end="159:63">(<argument pos:start="157:48" pos:end="157:55"><expr pos:start="157:48" pos:end="157:55"><operator pos:start="157:48" pos:end="157:48">&amp;</operator><name pos:start="157:49" pos:end="157:55"><name pos:start="157:49" pos:end="157:51">ctx</name><operator pos:start="157:52" pos:end="157:53">-&gt;</operator><name pos:start="157:54" pos:end="157:55">gb</name></name></expr></argument>, <argument pos:start="157:58" pos:end="157:79"><expr pos:start="157:58" pos:end="157:79"><name pos:start="157:58" pos:end="157:79"><name pos:start="157:58" pos:end="157:60">ctx</name><operator pos:start="157:61" pos:end="157:62">-&gt;</operator><name pos:start="157:63" pos:end="157:68">mb_vlc</name><operator pos:start="157:69" pos:end="157:69">.</operator><name pos:start="157:70" pos:end="157:72">tab</name><operator pos:start="157:73" pos:end="157:74">-&gt;</operator><name pos:start="157:75" pos:end="157:79">table</name></name></expr></argument>,

                                               <argument pos:start="159:48" pos:end="159:59"><expr pos:start="159:48" pos:end="159:59"><name pos:start="159:48" pos:end="159:59">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="159:62" pos:end="159:62"><expr pos:start="159:62" pos:end="159:62"><literal type="number" pos:start="159:62" pos:end="159:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="161:25" pos:end="161:64"><expr pos:start="161:25" pos:end="161:63"><name pos:start="161:25" pos:end="161:35"><name pos:start="161:25" pos:end="161:26">mb</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:35">q_delta</name></name> <operator pos:start="161:37" pos:end="161:37">=</operator> <call pos:start="161:39" pos:end="161:63"><name pos:start="161:39" pos:end="161:50">IVI_TOSIGNED</name><argument_list pos:start="161:51" pos:end="161:63">(<argument pos:start="161:52" pos:end="161:62"><expr pos:start="161:52" pos:end="161:62"><name pos:start="161:52" pos:end="161:62"><name pos:start="161:52" pos:end="161:53">mb</name><operator pos:start="161:54" pos:end="161:55">-&gt;</operator><name pos:start="161:56" pos:end="161:62">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="169:17" pos:end="227:17"><if pos:start="169:17" pos:end="173:17">if <condition pos:start="169:20" pos:end="169:30">(<expr pos:start="169:21" pos:end="169:29"><operator pos:start="169:21" pos:end="169:21">!</operator><name pos:start="169:22" pos:end="169:29"><name pos:start="169:22" pos:end="169:23">mb</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:29">type</name></name></expr>)</condition> <block pos:start="169:32" pos:end="173:17">{<block_content pos:start="171:21" pos:end="171:44">

                    <expr_stmt pos:start="171:21" pos:end="171:44"><expr pos:start="171:21" pos:end="171:43"><name pos:start="171:21" pos:end="171:28"><name pos:start="171:21" pos:end="171:22">mb</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:28">mv_x</name></name> <operator pos:start="171:30" pos:end="171:30">=</operator> <name pos:start="171:32" pos:end="171:39"><name pos:start="171:32" pos:end="171:33">mb</name><operator pos:start="171:34" pos:end="171:35">-&gt;</operator><name pos:start="171:36" pos:end="171:39">mv_y</name></name> <operator pos:start="171:41" pos:end="171:41">=</operator> <literal type="number" pos:start="171:43" pos:end="171:43">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="171:46" pos:end="171:97">/* there is no motion vector in intra-macroblocks */</comment>

                </block_content>}</block></if> <else pos:start="173:19" pos:end="227:17">else <block pos:start="173:24" pos:end="227:17">{<block_content pos:start="175:21" pos:end="225:21">

                    <if_stmt pos:start="175:21" pos:end="225:21"><if pos:start="175:21" pos:end="193:21">if <condition pos:start="175:24" pos:end="175:41">(<expr pos:start="175:25" pos:end="175:40"><name pos:start="175:25" pos:end="175:40"><name pos:start="175:25" pos:end="175:28">band</name><operator pos:start="175:29" pos:end="175:30">-&gt;</operator><name pos:start="175:31" pos:end="175:40">inherit_mv</name></name></expr>)</condition><block pos:start="175:42" pos:end="193:21">{<block_content pos:start="179:25" pos:end="191:25">

                        <comment type="block" pos:start="177:25" pos:end="177:55">/* motion vector inheritance */</comment>

                        <if_stmt pos:start="179:25" pos:end="191:25"><if pos:start="179:25" pos:end="185:25">if <condition pos:start="179:28" pos:end="179:37">(<expr pos:start="179:29" pos:end="179:36"><name pos:start="179:29" pos:end="179:36">mv_scale</name></expr>)</condition> <block pos:start="179:39" pos:end="185:25">{<block_content pos:start="181:29" pos:end="183:76">

                            <expr_stmt pos:start="181:29" pos:end="181:76"><expr pos:start="181:29" pos:end="181:75"><name pos:start="181:29" pos:end="181:36"><name pos:start="181:29" pos:end="181:30">mb</name><operator pos:start="181:31" pos:end="181:32">-&gt;</operator><name pos:start="181:33" pos:end="181:36">mv_x</name></name> <operator pos:start="181:38" pos:end="181:38">=</operator> <call pos:start="181:40" pos:end="181:75"><name pos:start="181:40" pos:end="181:51">ivi_scale_mv</name><argument_list pos:start="181:52" pos:end="181:75">(<argument pos:start="181:53" pos:end="181:64"><expr pos:start="181:53" pos:end="181:64"><name pos:start="181:53" pos:end="181:64"><name pos:start="181:53" pos:end="181:58">ref_mb</name><operator pos:start="181:59" pos:end="181:60">-&gt;</operator><name pos:start="181:61" pos:end="181:64">mv_x</name></name></expr></argument>, <argument pos:start="181:67" pos:end="181:74"><expr pos:start="181:67" pos:end="181:74"><name pos:start="181:67" pos:end="181:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="183:29" pos:end="183:76"><expr pos:start="183:29" pos:end="183:75"><name pos:start="183:29" pos:end="183:36"><name pos:start="183:29" pos:end="183:30">mb</name><operator pos:start="183:31" pos:end="183:32">-&gt;</operator><name pos:start="183:33" pos:end="183:36">mv_y</name></name> <operator pos:start="183:38" pos:end="183:38">=</operator> <call pos:start="183:40" pos:end="183:75"><name pos:start="183:40" pos:end="183:51">ivi_scale_mv</name><argument_list pos:start="183:52" pos:end="183:75">(<argument pos:start="183:53" pos:end="183:64"><expr pos:start="183:53" pos:end="183:64"><name pos:start="183:53" pos:end="183:64"><name pos:start="183:53" pos:end="183:58">ref_mb</name><operator pos:start="183:59" pos:end="183:60">-&gt;</operator><name pos:start="183:61" pos:end="183:64">mv_y</name></name></expr></argument>, <argument pos:start="183:67" pos:end="183:74"><expr pos:start="183:67" pos:end="183:74"><name pos:start="183:67" pos:end="183:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="185:27" pos:end="191:25">else <block pos:start="185:32" pos:end="191:25">{<block_content pos:start="187:29" pos:end="189:52">

                            <expr_stmt pos:start="187:29" pos:end="187:52"><expr pos:start="187:29" pos:end="187:51"><name pos:start="187:29" pos:end="187:36"><name pos:start="187:29" pos:end="187:30">mb</name><operator pos:start="187:31" pos:end="187:32">-&gt;</operator><name pos:start="187:33" pos:end="187:36">mv_x</name></name> <operator pos:start="187:38" pos:end="187:38">=</operator> <name pos:start="187:40" pos:end="187:51"><name pos:start="187:40" pos:end="187:45">ref_mb</name><operator pos:start="187:46" pos:end="187:47">-&gt;</operator><name pos:start="187:48" pos:end="187:51">mv_x</name></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="189:29" pos:end="189:52"><expr pos:start="189:29" pos:end="189:51"><name pos:start="189:29" pos:end="189:36"><name pos:start="189:29" pos:end="189:30">mb</name><operator pos:start="189:31" pos:end="189:32">-&gt;</operator><name pos:start="189:33" pos:end="189:36">mv_y</name></name> <operator pos:start="189:38" pos:end="189:38">=</operator> <name pos:start="189:40" pos:end="189:51"><name pos:start="189:40" pos:end="189:45">ref_mb</name><operator pos:start="189:46" pos:end="189:47">-&gt;</operator><name pos:start="189:48" pos:end="189:51">mv_y</name></name></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="193:23" pos:end="225:21">else <block pos:start="193:28" pos:end="225:21">{<block_content pos:start="197:25" pos:end="223:25">

                        <comment type="block" pos:start="195:25" pos:end="195:57">/* decode motion vector deltas */</comment>

                        <expr_stmt pos:start="197:25" pos:end="199:61"><expr pos:start="197:25" pos:end="199:60"><name pos:start="197:25" pos:end="197:32">mv_delta</name> <operator pos:start="197:34" pos:end="197:34">=</operator> <call pos:start="197:36" pos:end="199:60"><name pos:start="197:36" pos:end="197:43">get_vlc2</name><argument_list pos:start="197:44" pos:end="199:60">(<argument pos:start="197:45" pos:end="197:52"><expr pos:start="197:45" pos:end="197:52"><operator pos:start="197:45" pos:end="197:45">&amp;</operator><name pos:start="197:46" pos:end="197:52"><name pos:start="197:46" pos:end="197:48">ctx</name><operator pos:start="197:49" pos:end="197:50">-&gt;</operator><name pos:start="197:51" pos:end="197:52">gb</name></name></expr></argument>, <argument pos:start="197:55" pos:end="197:76"><expr pos:start="197:55" pos:end="197:76"><name pos:start="197:55" pos:end="197:76"><name pos:start="197:55" pos:end="197:57">ctx</name><operator pos:start="197:58" pos:end="197:59">-&gt;</operator><name pos:start="197:60" pos:end="197:65">mb_vlc</name><operator pos:start="197:66" pos:end="197:66">.</operator><name pos:start="197:67" pos:end="197:69">tab</name><operator pos:start="197:70" pos:end="197:71">-&gt;</operator><name pos:start="197:72" pos:end="197:76">table</name></name></expr></argument>,

                                            <argument pos:start="199:45" pos:end="199:56"><expr pos:start="199:45" pos:end="199:56"><name pos:start="199:45" pos:end="199:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="199:59" pos:end="199:59"><expr pos:start="199:59" pos:end="199:59"><literal type="number" pos:start="199:59" pos:end="199:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="201:25" pos:end="201:55"><expr pos:start="201:25" pos:end="201:54"><name pos:start="201:25" pos:end="201:28">mv_y</name> <operator pos:start="201:30" pos:end="201:31">+=</operator> <call pos:start="201:33" pos:end="201:54"><name pos:start="201:33" pos:end="201:44">IVI_TOSIGNED</name><argument_list pos:start="201:45" pos:end="201:54">(<argument pos:start="201:46" pos:end="201:53"><expr pos:start="201:46" pos:end="201:53"><name pos:start="201:46" pos:end="201:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="203:25" pos:end="205:61"><expr pos:start="203:25" pos:end="205:60"><name pos:start="203:25" pos:end="203:32">mv_delta</name> <operator pos:start="203:34" pos:end="203:34">=</operator> <call pos:start="203:36" pos:end="205:60"><name pos:start="203:36" pos:end="203:43">get_vlc2</name><argument_list pos:start="203:44" pos:end="205:60">(<argument pos:start="203:45" pos:end="203:52"><expr pos:start="203:45" pos:end="203:52"><operator pos:start="203:45" pos:end="203:45">&amp;</operator><name pos:start="203:46" pos:end="203:52"><name pos:start="203:46" pos:end="203:48">ctx</name><operator pos:start="203:49" pos:end="203:50">-&gt;</operator><name pos:start="203:51" pos:end="203:52">gb</name></name></expr></argument>, <argument pos:start="203:55" pos:end="203:76"><expr pos:start="203:55" pos:end="203:76"><name pos:start="203:55" pos:end="203:76"><name pos:start="203:55" pos:end="203:57">ctx</name><operator pos:start="203:58" pos:end="203:59">-&gt;</operator><name pos:start="203:60" pos:end="203:65">mb_vlc</name><operator pos:start="203:66" pos:end="203:66">.</operator><name pos:start="203:67" pos:end="203:69">tab</name><operator pos:start="203:70" pos:end="203:71">-&gt;</operator><name pos:start="203:72" pos:end="203:76">table</name></name></expr></argument>,

                                            <argument pos:start="205:45" pos:end="205:56"><expr pos:start="205:45" pos:end="205:56"><name pos:start="205:45" pos:end="205:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="205:59" pos:end="205:59"><expr pos:start="205:59" pos:end="205:59"><literal type="number" pos:start="205:59" pos:end="205:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="207:25" pos:end="207:55"><expr pos:start="207:25" pos:end="207:54"><name pos:start="207:25" pos:end="207:28">mv_x</name> <operator pos:start="207:30" pos:end="207:31">+=</operator> <call pos:start="207:33" pos:end="207:54"><name pos:start="207:33" pos:end="207:44">IVI_TOSIGNED</name><argument_list pos:start="207:45" pos:end="207:54">(<argument pos:start="207:46" pos:end="207:53"><expr pos:start="207:46" pos:end="207:53"><name pos:start="207:46" pos:end="207:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="209:25" pos:end="209:40"><expr pos:start="209:25" pos:end="209:39"><name pos:start="209:25" pos:end="209:32"><name pos:start="209:25" pos:end="209:26">mb</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:32">mv_x</name></name> <operator pos:start="209:34" pos:end="209:34">=</operator> <name pos:start="209:36" pos:end="209:39">mv_x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="211:25" pos:end="211:40"><expr pos:start="211:25" pos:end="211:39"><name pos:start="211:25" pos:end="211:32"><name pos:start="211:25" pos:end="211:26">mb</name><operator pos:start="211:27" pos:end="211:28">-&gt;</operator><name pos:start="211:29" pos:end="211:32">mv_y</name></name> <operator pos:start="211:34" pos:end="211:34">=</operator> <name pos:start="211:36" pos:end="211:39">mv_y</name></expr>;</expr_stmt>

                        <if_stmt pos:start="213:25" pos:end="223:25"><if pos:start="213:25" pos:end="223:25">if <condition pos:start="213:28" pos:end="213:49">(<expr pos:start="213:29" pos:end="213:48"><name pos:start="213:29" pos:end="213:32">mv_x</name> <operator pos:start="213:34" pos:end="213:34">&lt;</operator> <literal type="number" pos:start="213:36" pos:end="213:36">0</literal> <operator pos:start="213:38" pos:end="213:39">||</operator> <name pos:start="213:41" pos:end="213:44">mv_y</name> <operator pos:start="213:46" pos:end="213:46">&lt;</operator> <literal type="number" pos:start="213:48" pos:end="213:48">0</literal></expr>)</condition> <block pos:start="213:51" pos:end="223:25">{<block_content pos:start="215:29" pos:end="221:55">

                            <expr_stmt pos:start="215:29" pos:end="217:47"><expr pos:start="215:29" pos:end="217:46"><call pos:start="215:29" pos:end="217:46"><name pos:start="215:29" pos:end="215:34">av_log</name><argument_list pos:start="215:35" pos:end="217:46">(<argument pos:start="215:36" pos:end="215:40"><expr pos:start="215:36" pos:end="215:40"><name pos:start="215:36" pos:end="215:40">avctx</name></expr></argument>, <argument pos:start="215:43" pos:end="215:54"><expr pos:start="215:43" pos:end="215:54"><name pos:start="215:43" pos:end="215:54">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="215:57" pos:end="215:76"><expr pos:start="215:57" pos:end="215:76"><literal type="string" pos:start="215:57" pos:end="215:76">"Invalid MV %d %d\n"</literal></expr></argument>,

                                   <argument pos:start="217:36" pos:end="217:39"><expr pos:start="217:36" pos:end="217:39"><name pos:start="217:36" pos:end="217:39">mv_x</name></expr></argument>, <argument pos:start="217:42" pos:end="217:45"><expr pos:start="217:42" pos:end="217:45"><name pos:start="217:42" pos:end="217:45">mv_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="219:29" pos:end="219:52"><expr pos:start="219:29" pos:end="219:51"><name pos:start="219:29" pos:end="219:36"><name pos:start="219:29" pos:end="219:30">mb</name><operator pos:start="219:31" pos:end="219:32">-&gt;</operator><name pos:start="219:33" pos:end="219:36">mv_x</name></name> <operator pos:start="219:38" pos:end="219:38">=</operator> <name pos:start="219:40" pos:end="219:47"><name pos:start="219:40" pos:end="219:41">mb</name><operator pos:start="219:42" pos:end="219:43">-&gt;</operator><name pos:start="219:44" pos:end="219:47">mv_y</name></name> <operator pos:start="219:49" pos:end="219:49">=</operator> <literal type="number" pos:start="219:51" pos:end="219:51">0</literal></expr>;</expr_stmt>

                            <return pos:start="221:29" pos:end="221:55">return <expr pos:start="221:36" pos:end="221:54"><name pos:start="221:36" pos:end="221:54">AVERROR_INVALIDDATA</name></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="233:13" pos:end="233:17"><expr pos:start="233:13" pos:end="233:16"><name pos:start="233:13" pos:end="233:14">mb</name><operator pos:start="233:15" pos:end="233:16">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="235:13" pos:end="237:25"><if pos:start="235:13" pos:end="237:25">if <condition pos:start="235:16" pos:end="235:23">(<expr pos:start="235:17" pos:end="235:22"><name pos:start="235:17" pos:end="235:22">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="237:17" pos:end="237:25"><block_content pos:start="237:17" pos:end="237:25">

                <expr_stmt pos:start="237:17" pos:end="237:25"><expr pos:start="237:17" pos:end="237:24"><name pos:start="237:17" pos:end="237:22">ref_mb</name><operator pos:start="237:23" pos:end="237:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:39"><expr pos:start="239:13" pos:end="239:38"><name pos:start="239:13" pos:end="239:21">mb_offset</name> <operator pos:start="239:23" pos:end="239:24">+=</operator> <name pos:start="239:26" pos:end="239:38"><name pos:start="239:26" pos:end="239:29">band</name><operator pos:start="239:30" pos:end="239:31">-&gt;</operator><name pos:start="239:32" pos:end="239:38">mb_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="245:9" pos:end="245:27"><expr pos:start="245:9" pos:end="245:26"><name pos:start="245:9" pos:end="245:12">offs</name> <operator pos:start="245:14" pos:end="245:15">+=</operator> <name pos:start="245:17" pos:end="245:26">row_offset</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="251:5" pos:end="251:29"><expr pos:start="251:5" pos:end="251:28"><call pos:start="251:5" pos:end="251:28"><name pos:start="251:5" pos:end="251:18">align_get_bits</name><argument_list pos:start="251:19" pos:end="251:28">(<argument pos:start="251:20" pos:end="251:27"><expr pos:start="251:20" pos:end="251:27"><operator pos:start="251:20" pos:end="251:20">&amp;</operator><name pos:start="251:21" pos:end="251:27"><name pos:start="251:21" pos:end="251:23">ctx</name><operator pos:start="251:24" pos:end="251:25">-&gt;</operator><name pos:start="251:26" pos:end="251:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="255:5" pos:end="255:13">return <expr pos:start="255:12" pos:end="255:12"><literal type="number" pos:start="255:12" pos:end="255:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
