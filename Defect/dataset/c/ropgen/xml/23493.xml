<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23493.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">get_physical_addr_mmu</name><parameter_list pos:start="1:33" pos:end="7:27">(<parameter pos:start="1:34" pos:end="1:52"><decl pos:start="1:34" pos:end="1:52"><type pos:start="1:34" pos:end="1:52"><name pos:start="1:34" pos:end="1:47">CPUXtensaState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">env</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:58">bool</name></type> <name pos:start="1:60" pos:end="1:69">update_tlb</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:22"><decl pos:start="3:9" pos:end="3:22"><type pos:start="3:9" pos:end="3:22"><name pos:start="3:9" pos:end="3:16">uint32_t</name></type> <name pos:start="3:18" pos:end="3:22">vaddr</name></decl></parameter>, <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:36">is_write</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:49"><decl pos:start="3:39" pos:end="3:49"><type pos:start="3:39" pos:end="3:49"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:49">mmu_idx</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:23"><decl pos:start="5:9" pos:end="5:23"><type pos:start="5:9" pos:end="5:23"><name pos:start="5:9" pos:end="5:16">uint32_t</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">paddr</name></decl></parameter>, <parameter pos:start="5:26" pos:end="5:44"><decl pos:start="5:26" pos:end="5:44"><type pos:start="5:26" pos:end="5:44"><name pos:start="5:26" pos:end="5:33">uint32_t</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:44">page_size</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:62"><decl pos:start="5:47" pos:end="5:62"><type pos:start="5:47" pos:end="5:62"><name pos:start="5:47" pos:end="5:54">unsigned</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:62">access</name></decl></parameter>,

        <parameter pos:start="7:9" pos:end="7:26"><decl pos:start="7:9" pos:end="7:26"><type pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:12">bool</name></type> <name pos:start="7:14" pos:end="7:26">may_lookup_pt</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="121:1">{<block_content pos:start="11:5" pos:end="119:13">

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:13">dtlb</name> <init pos:start="11:15" pos:end="11:29">= <expr pos:start="11:17" pos:end="11:29"><name pos:start="11:17" pos:end="11:24">is_write</name> <operator pos:start="11:26" pos:end="11:27">!=</operator> <literal type="number" pos:start="11:29" pos:end="11:29">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:15">wi</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:15">ei</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:16">ring</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:16">vpn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:16">pte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:41"><decl pos:start="23:5" pos:end="23:40"><type pos:start="23:5" pos:end="23:28"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:26">xtensa_tlb_entry</name> <modifier pos:start="23:28" pos:end="23:28">*</modifier></type><name pos:start="23:29" pos:end="23:33">entry</name> <init pos:start="23:35" pos:end="23:40">= <expr pos:start="23:37" pos:end="23:40"><name pos:start="23:37" pos:end="23:40">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:31"><decl pos:start="25:5" pos:end="25:30"><type pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:20">xtensa_tlb_entry</name></type> <name pos:start="25:22" pos:end="25:30">tmp_entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:67"><decl pos:start="27:5" pos:end="27:66"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name> <init pos:start="27:13" pos:end="27:66">= <expr pos:start="27:15" pos:end="27:66"><call pos:start="27:15" pos:end="27:66"><name pos:start="27:15" pos:end="27:31">xtensa_tlb_lookup</name><argument_list pos:start="27:32" pos:end="27:66">(<argument pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:35">env</name></expr></argument>, <argument pos:start="27:38" pos:end="27:42"><expr pos:start="27:38" pos:end="27:42"><name pos:start="27:38" pos:end="27:42">vaddr</name></expr></argument>, <argument pos:start="27:45" pos:end="27:48"><expr pos:start="27:45" pos:end="27:48"><name pos:start="27:45" pos:end="27:48">dtlb</name></expr></argument>, <argument pos:start="27:51" pos:end="27:53"><expr pos:start="27:51" pos:end="27:53"><operator pos:start="27:51" pos:end="27:51">&amp;</operator><name pos:start="27:52" pos:end="27:53">wi</name></expr></argument>, <argument pos:start="27:56" pos:end="27:58"><expr pos:start="27:56" pos:end="27:58"><operator pos:start="27:56" pos:end="27:56">&amp;</operator><name pos:start="27:57" pos:end="27:58">ei</name></expr></argument>, <argument pos:start="27:61" pos:end="27:65"><expr pos:start="27:61" pos:end="27:65"><operator pos:start="27:61" pos:end="27:61">&amp;</operator><name pos:start="27:62" pos:end="27:65">ring</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="65:5"><if pos:start="31:5" pos:end="65:5">if <condition pos:start="31:8" pos:end="33:60">(<expr pos:start="31:9" pos:end="33:59"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:12">ret</name> <operator pos:start="31:14" pos:end="31:15">==</operator> <name pos:start="31:17" pos:end="31:35">INST_TLB_MISS_CAUSE</name> <operator pos:start="31:37" pos:end="31:38">||</operator> <name pos:start="31:40" pos:end="31:42">ret</name> <operator pos:start="31:44" pos:end="31:45">==</operator> <name pos:start="31:47" pos:end="31:71">LOAD_STORE_TLB_MISS_CAUSE</name><operator pos:start="31:72" pos:end="31:72">)</operator> <operator pos:start="31:74" pos:end="31:75">&amp;&amp;</operator>

            <name pos:start="33:13" pos:end="33:25">may_lookup_pt</name> <operator pos:start="33:27" pos:end="33:28">&amp;&amp;</operator> <call pos:start="33:30" pos:end="33:54"><name pos:start="33:30" pos:end="33:36">get_pte</name><argument_list pos:start="33:37" pos:end="33:54">(<argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">env</name></expr></argument>, <argument pos:start="33:43" pos:end="33:47"><expr pos:start="33:43" pos:end="33:47"><name pos:start="33:43" pos:end="33:47">vaddr</name></expr></argument>, <argument pos:start="33:50" pos:end="33:53"><expr pos:start="33:50" pos:end="33:53"><operator pos:start="33:50" pos:end="33:50">&amp;</operator><name pos:start="33:51" pos:end="33:53">pte</name></expr></argument>)</argument_list></call> <operator pos:start="33:56" pos:end="33:57">==</operator> <literal type="number" pos:start="33:59" pos:end="33:59">0</literal></expr>)</condition> <block pos:start="33:62" pos:end="65:5">{<block_content pos:start="35:9" pos:end="63:16">

        <expr_stmt pos:start="35:9" pos:end="35:32"><expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:12">ring</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:19">pte</name> <operator pos:start="35:21" pos:end="35:22">&gt;&gt;</operator> <literal type="number" pos:start="35:24" pos:end="35:24">4</literal><operator pos:start="35:25" pos:end="35:25">)</operator> <operator pos:start="35:27" pos:end="35:27">&amp;</operator> <literal type="number" pos:start="35:29" pos:end="35:31">0x3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:15"><expr pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:10">wi</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:66"><expr pos:start="39:9" pos:end="39:65"><call pos:start="39:9" pos:end="39:65"><name pos:start="39:9" pos:end="39:32">split_tlb_entry_spec_way</name><argument_list pos:start="39:33" pos:end="39:65">(<argument pos:start="39:34" pos:end="39:36"><expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:36">env</name></expr></argument>, <argument pos:start="39:39" pos:end="39:43"><expr pos:start="39:39" pos:end="39:43"><name pos:start="39:39" pos:end="39:43">vaddr</name></expr></argument>, <argument pos:start="39:46" pos:end="39:49"><expr pos:start="39:46" pos:end="39:49"><name pos:start="39:46" pos:end="39:49">dtlb</name></expr></argument>, <argument pos:start="39:52" pos:end="39:55"><expr pos:start="39:52" pos:end="39:55"><operator pos:start="39:52" pos:end="39:52">&amp;</operator><name pos:start="39:53" pos:end="39:55">vpn</name></expr></argument>, <argument pos:start="39:58" pos:end="39:59"><expr pos:start="39:58" pos:end="39:59"><name pos:start="39:58" pos:end="39:59">wi</name></expr></argument>, <argument pos:start="39:62" pos:end="39:64"><expr pos:start="39:62" pos:end="39:64"><operator pos:start="39:62" pos:end="39:62">&amp;</operator><name pos:start="39:63" pos:end="39:64">ei</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="61:9"><if pos:start="43:9" pos:end="55:9">if <condition pos:start="43:12" pos:end="43:23">(<expr pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:22">update_tlb</name></expr>)</condition> <block pos:start="43:25" pos:end="55:9">{<block_content pos:start="45:13" pos:end="53:47">

            <expr_stmt pos:start="45:13" pos:end="45:45"><expr pos:start="45:13" pos:end="45:44"><name pos:start="45:13" pos:end="45:14">wi</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <operator pos:start="45:18" pos:end="45:19">++</operator><name pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:22">env</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:38">autorefill_idx</name></name> <operator pos:start="45:40" pos:end="45:40">&amp;</operator> <literal type="number" pos:start="45:42" pos:end="45:44">0x3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:62"><expr pos:start="47:13" pos:end="47:61"><call pos:start="47:13" pos:end="47:61"><name pos:start="47:13" pos:end="47:32">xtensa_tlb_set_entry</name><argument_list pos:start="47:33" pos:end="47:61">(<argument pos:start="47:34" pos:end="47:36"><expr pos:start="47:34" pos:end="47:36"><name pos:start="47:34" pos:end="47:36">env</name></expr></argument>, <argument pos:start="47:39" pos:end="47:42"><expr pos:start="47:39" pos:end="47:42"><name pos:start="47:39" pos:end="47:42">dtlb</name></expr></argument>, <argument pos:start="47:45" pos:end="47:46"><expr pos:start="47:45" pos:end="47:46"><name pos:start="47:45" pos:end="47:46">wi</name></expr></argument>, <argument pos:start="47:49" pos:end="47:50"><expr pos:start="47:49" pos:end="47:50"><name pos:start="47:49" pos:end="47:50">ei</name></expr></argument>, <argument pos:start="47:53" pos:end="47:55"><expr pos:start="47:53" pos:end="47:55"><name pos:start="47:53" pos:end="47:55">vpn</name></expr></argument>, <argument pos:start="47:58" pos:end="47:60"><expr pos:start="47:58" pos:end="47:60"><name pos:start="47:58" pos:end="47:60">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:41"><expr pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:15">env</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:22">sregs</name><index pos:start="49:23" pos:end="49:32">[<expr pos:start="49:24" pos:end="49:31"><name pos:start="49:24" pos:end="49:31">EXCVADDR</name></expr>]</index></name> <operator pos:start="49:34" pos:end="49:34">=</operator> <name pos:start="49:36" pos:end="49:40">vaddr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="53:47"><expr pos:start="51:13" pos:end="53:46"><call pos:start="51:13" pos:end="53:46"><name pos:start="51:13" pos:end="51:20">qemu_log</name><argument_list pos:start="51:21" pos:end="53:46">(<argument pos:start="51:22" pos:end="51:59"><expr pos:start="51:22" pos:end="51:59"><literal type="string" pos:start="51:22" pos:end="51:59">"%s: autorefill(%08x): %08x -&gt; %08x\n"</literal></expr></argument>,

                    <argument pos:start="53:21" pos:end="53:28"><expr pos:start="53:21" pos:end="53:28"><name pos:start="53:21" pos:end="53:28">__func__</name></expr></argument>, <argument pos:start="53:31" pos:end="53:35"><expr pos:start="53:31" pos:end="53:35"><name pos:start="53:31" pos:end="53:35">vaddr</name></expr></argument>, <argument pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:40">vpn</name></expr></argument>, <argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><name pos:start="53:43" pos:end="53:45">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="61:9">else <block pos:start="55:16" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:31">

            <expr_stmt pos:start="57:13" pos:end="57:78"><expr pos:start="57:13" pos:end="57:77"><call pos:start="57:13" pos:end="57:77"><name pos:start="57:13" pos:end="57:36">xtensa_tlb_set_entry_mmu</name><argument_list pos:start="57:37" pos:end="57:77">(<argument pos:start="57:38" pos:end="57:40"><expr pos:start="57:38" pos:end="57:40"><name pos:start="57:38" pos:end="57:40">env</name></expr></argument>, <argument pos:start="57:43" pos:end="57:52"><expr pos:start="57:43" pos:end="57:52"><operator pos:start="57:43" pos:end="57:43">&amp;</operator><name pos:start="57:44" pos:end="57:52">tmp_entry</name></expr></argument>, <argument pos:start="57:55" pos:end="57:58"><expr pos:start="57:55" pos:end="57:58"><name pos:start="57:55" pos:end="57:58">dtlb</name></expr></argument>, <argument pos:start="57:61" pos:end="57:62"><expr pos:start="57:61" pos:end="57:62"><name pos:start="57:61" pos:end="57:62">wi</name></expr></argument>, <argument pos:start="57:65" pos:end="57:66"><expr pos:start="57:65" pos:end="57:66"><name pos:start="57:65" pos:end="57:66">ei</name></expr></argument>, <argument pos:start="57:69" pos:end="57:71"><expr pos:start="57:69" pos:end="57:71"><name pos:start="57:69" pos:end="57:71">vpn</name></expr></argument>, <argument pos:start="57:74" pos:end="57:76"><expr pos:start="57:74" pos:end="57:76"><name pos:start="57:74" pos:end="57:76">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:31"><expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:17">entry</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <operator pos:start="59:21" pos:end="59:21">&amp;</operator><name pos:start="59:22" pos:end="59:30">tmp_entry</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:16"><expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:17">(<expr pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:14">!=</operator> <literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>)</condition> <block pos:start="67:19" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:19">

        <return pos:start="69:9" pos:end="69:19">return <expr pos:start="69:16" pos:end="69:18"><name pos:start="69:16" pos:end="69:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:22">(<expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:13">entry</name> <operator pos:start="75:15" pos:end="75:16">==</operator> <name pos:start="75:18" pos:end="75:21">NULL</name></expr>)</condition> <block pos:start="75:24" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:56">

        <expr_stmt pos:start="77:9" pos:end="77:56"><expr pos:start="77:9" pos:end="77:55"><name pos:start="77:9" pos:end="77:13">entry</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <call pos:start="77:17" pos:end="77:55"><name pos:start="77:17" pos:end="77:36">xtensa_tlb_get_entry</name><argument_list pos:start="77:37" pos:end="77:55">(<argument pos:start="77:38" pos:end="77:40"><expr pos:start="77:38" pos:end="77:40"><name pos:start="77:38" pos:end="77:40">env</name></expr></argument>, <argument pos:start="77:43" pos:end="77:46"><expr pos:start="77:43" pos:end="77:46"><name pos:start="77:43" pos:end="77:46">dtlb</name></expr></argument>, <argument pos:start="77:49" pos:end="77:50"><expr pos:start="77:49" pos:end="77:50"><name pos:start="77:49" pos:end="77:50">wi</name></expr></argument>, <argument pos:start="77:53" pos:end="77:54"><expr pos:start="77:53" pos:end="77:54"><name pos:start="77:53" pos:end="77:54">ei</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="91:5"><if pos:start="83:5" pos:end="91:5">if <condition pos:start="83:8" pos:end="83:23">(<expr pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:12">ring</name> <operator pos:start="83:14" pos:end="83:14">&lt;</operator> <name pos:start="83:16" pos:end="83:22">mmu_idx</name></expr>)</condition> <block pos:start="83:25" pos:end="91:5">{<block_content pos:start="85:9" pos:end="89:39">

        <return pos:start="85:9" pos:end="89:39">return <expr pos:start="85:16" pos:end="89:38"><ternary pos:start="85:16" pos:end="89:38"><condition pos:start="85:16" pos:end="85:21"><expr pos:start="85:16" pos:end="85:19"><name pos:start="85:16" pos:end="85:19">dtlb</name></expr> ?</condition><then pos:start="87:13" pos:end="87:38">

            <expr pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:38">LOAD_STORE_PRIVILEGE_CAUSE</name></expr> </then><else pos:start="87:40" pos:end="89:38">:

            <expr pos:start="89:13" pos:end="89:38"><name pos:start="89:13" pos:end="89:38">INST_FETCH_PRIVILEGE_CAUSE</name></expr></else></ternary></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:46"><expr pos:start="95:5" pos:end="95:45"><operator pos:start="95:5" pos:end="95:5">*</operator><name pos:start="95:6" pos:end="95:11">access</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:45"><name pos:start="95:15" pos:end="95:32">mmu_attr_to_access</name><argument_list pos:start="95:33" pos:end="95:45">(<argument pos:start="95:34" pos:end="95:44"><expr pos:start="95:34" pos:end="95:44"><name pos:start="95:34" pos:end="95:44"><name pos:start="95:34" pos:end="95:38">entry</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:44">attr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="109:5"><if pos:start="97:5" pos:end="109:5">if <condition pos:start="97:8" pos:end="97:46">(<expr pos:start="97:9" pos:end="97:45"><operator pos:start="97:9" pos:end="97:9">!</operator><call pos:start="97:10" pos:end="97:45"><name pos:start="97:10" pos:end="97:26">is_access_granted</name><argument_list pos:start="97:27" pos:end="97:45">(<argument pos:start="97:28" pos:end="97:34"><expr pos:start="97:28" pos:end="97:34"><operator pos:start="97:28" pos:end="97:28">*</operator><name pos:start="97:29" pos:end="97:34">access</name></expr></argument>, <argument pos:start="97:37" pos:end="97:44"><expr pos:start="97:37" pos:end="97:44"><name pos:start="97:37" pos:end="97:44">is_write</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:48" pos:end="109:5">{<block_content pos:start="99:9" pos:end="107:40">

        <return pos:start="99:9" pos:end="107:40">return <expr pos:start="99:16" pos:end="107:39"><ternary pos:start="99:16" pos:end="107:39"><condition pos:start="99:16" pos:end="99:21"><expr pos:start="99:16" pos:end="99:19"><name pos:start="99:16" pos:end="99:19">dtlb</name></expr> ?</condition><then pos:start="101:13" pos:end="105:35">

            <expr pos:start="101:13" pos:end="105:35"><operator pos:start="101:13" pos:end="101:13">(</operator><ternary pos:start="101:14" pos:end="105:34"><condition pos:start="101:14" pos:end="101:23"><expr pos:start="101:14" pos:end="101:21"><name pos:start="101:14" pos:end="101:21">is_write</name></expr> ?</condition><then pos:start="103:14" pos:end="103:35">

             <expr pos:start="103:14" pos:end="103:35"><name pos:start="103:14" pos:end="103:35">STORE_PROHIBITED_CAUSE</name></expr> </then><else pos:start="103:37" pos:end="105:34">:

             <expr pos:start="105:14" pos:end="105:34"><name pos:start="105:14" pos:end="105:34">LOAD_PROHIBITED_CAUSE</name></expr></else></ternary><operator pos:start="105:35" pos:end="105:35">)</operator></expr> </then><else pos:start="105:37" pos:end="107:39">:

            <expr pos:start="107:13" pos:end="107:39"><name pos:start="107:13" pos:end="107:39">INST_FETCH_PROHIBITED_CAUSE</name></expr></else></ternary></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:79"><expr pos:start="113:5" pos:end="113:78"><operator pos:start="113:5" pos:end="113:5">*</operator><name pos:start="113:6" pos:end="113:10">paddr</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <name pos:start="113:14" pos:end="113:25"><name pos:start="113:14" pos:end="113:18">entry</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:25">paddr</name></name> <operator pos:start="113:27" pos:end="113:27">|</operator> <operator pos:start="113:29" pos:end="113:29">(</operator><name pos:start="113:30" pos:end="113:34">vaddr</name> <operator pos:start="113:36" pos:end="113:36">&amp;</operator> <operator pos:start="113:38" pos:end="113:38">~</operator><call pos:start="113:39" pos:end="113:77"><name pos:start="113:39" pos:end="113:62">xtensa_tlb_get_addr_mask</name><argument_list pos:start="113:63" pos:end="113:77">(<argument pos:start="113:64" pos:end="113:66"><expr pos:start="113:64" pos:end="113:66"><name pos:start="113:64" pos:end="113:66">env</name></expr></argument>, <argument pos:start="113:69" pos:end="113:72"><expr pos:start="113:69" pos:end="113:72"><name pos:start="113:69" pos:end="113:72">dtlb</name></expr></argument>, <argument pos:start="113:75" pos:end="113:76"><expr pos:start="113:75" pos:end="113:76"><name pos:start="113:75" pos:end="113:76">wi</name></expr></argument>)</argument_list></call><operator pos:start="113:78" pos:end="113:78">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:62"><expr pos:start="115:5" pos:end="115:61"><operator pos:start="115:5" pos:end="115:5">*</operator><name pos:start="115:6" pos:end="115:14">page_size</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <operator pos:start="115:18" pos:end="115:18">~</operator><call pos:start="115:19" pos:end="115:57"><name pos:start="115:19" pos:end="115:42">xtensa_tlb_get_addr_mask</name><argument_list pos:start="115:43" pos:end="115:57">(<argument pos:start="115:44" pos:end="115:46"><expr pos:start="115:44" pos:end="115:46"><name pos:start="115:44" pos:end="115:46">env</name></expr></argument>, <argument pos:start="115:49" pos:end="115:52"><expr pos:start="115:49" pos:end="115:52"><name pos:start="115:49" pos:end="115:52">dtlb</name></expr></argument>, <argument pos:start="115:55" pos:end="115:56"><expr pos:start="115:55" pos:end="115:56"><name pos:start="115:55" pos:end="115:56">wi</name></expr></argument>)</argument_list></call> <operator pos:start="115:59" pos:end="115:59">+</operator> <literal type="number" pos:start="115:61" pos:end="115:61">1</literal></expr>;</expr_stmt>



    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
