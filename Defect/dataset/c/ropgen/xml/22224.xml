<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22224.c" pos:tabs="8"><function pos:start="1:1" pos:end="2251:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">disas_thumb2_insn</name><parameter_list pos:start="1:29" pos:end="1:82">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUARMState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:59">DisasContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:62">s</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:81"><decl pos:start="1:65" pos:end="1:81"><type pos:start="1:65" pos:end="1:81"><name pos:start="1:65" pos:end="1:72">uint16_t</name></type> <name pos:start="1:74" pos:end="1:81">insn_hw1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2251:1">{<block_content pos:start="5:5" pos:end="2249:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">insn</name></decl>, <decl pos:start="5:20" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:20" pos:end="5:22">imm</name></decl>, <decl pos:start="5:25" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:25" pos:end="5:29">shift</name></decl>, <decl pos:start="5:32" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:32" pos:end="5:37">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">rd</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:19">rn</name></decl>, <decl pos:start="7:22" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:22" pos:end="7:23">rm</name></decl>, <decl pos:start="7:26" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:26" pos:end="7:27">rs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">TCGv_i32</name></type> <name pos:start="9:14" pos:end="9:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">TCGv_i32</name></type> <name pos:start="11:14" pos:end="11:17">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">TCGv_i32</name></type> <name pos:start="13:14" pos:end="13:17">tmp3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">TCGv_i32</name></type> <name pos:start="15:14" pos:end="15:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">TCGv_i64</name></type> <name pos:start="17:14" pos:end="17:18">tmp64</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:11"><decl pos:start="19:5" pos:end="19:10"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:10">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">shiftop</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:14"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">conds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:16">logic_cc</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="109:5"><if pos:start="29:5" pos:end="109:5">if <condition pos:start="29:8" pos:end="31:47">(<expr pos:start="29:9" pos:end="31:46"><operator pos:start="29:9" pos:end="29:9">!</operator><operator pos:start="29:10" pos:end="29:10">(</operator><call pos:start="29:11" pos:end="29:46"><name pos:start="29:11" pos:end="29:21">arm_feature</name><argument_list pos:start="29:22" pos:end="29:46">(<argument pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">env</name></expr></argument>, <argument pos:start="29:28" pos:end="29:45"><expr pos:start="29:28" pos:end="29:45"><name pos:start="29:28" pos:end="29:45">ARM_FEATURE_THUMB2</name></expr></argument>)</argument_list></call>

          <operator pos:start="31:11" pos:end="31:12">||</operator> <call pos:start="31:14" pos:end="31:45"><name pos:start="31:14" pos:end="31:24">arm_feature</name> <argument_list pos:start="31:26" pos:end="31:45">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">env</name></expr></argument>, <argument pos:start="31:32" pos:end="31:44"><expr pos:start="31:32" pos:end="31:44"><name pos:start="31:32" pos:end="31:44">ARM_FEATURE_M</name></expr></argument>)</argument_list></call><operator pos:start="31:46" pos:end="31:46">)</operator></expr>)</condition> <block pos:start="31:49" pos:end="109:5">{<block_content pos:start="37:9" pos:end="105:9">

        <comment type="block" pos:start="33:9" pos:end="35:74">/* Thumb-1 cores may need to treat bl and blx as a pair of

           16-bit instructions to get correct prefetch abort behavior.  */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:12">insn</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:23">insn_hw1</name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="65:9"><if pos:start="39:9" pos:end="65:9">if <condition pos:start="39:12" pos:end="39:36">(<expr pos:start="39:13" pos:end="39:35"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:17">insn</name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <operator pos:start="39:21" pos:end="39:21">(</operator><literal type="number" pos:start="39:22" pos:end="39:22">1</literal> <operator pos:start="39:24" pos:end="39:25">&lt;&lt;</operator> <literal type="number" pos:start="39:27" pos:end="39:28">12</literal><operator pos:start="39:29" pos:end="39:29">)</operator><operator pos:start="39:30" pos:end="39:30">)</operator> <operator pos:start="39:32" pos:end="39:33">==</operator> <literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr>)</condition> <block pos:start="39:38" pos:end="65:9">{<block_content pos:start="41:13" pos:end="63:21">

            <expr_stmt pos:start="41:13" pos:end="41:20"><expr pos:start="41:13" pos:end="41:19"><call pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:16">ARCH</name><argument_list pos:start="41:17" pos:end="41:19">(<argument pos:start="41:18" pos:end="41:18"><expr pos:start="41:18" pos:end="41:18"><literal type="number" pos:start="41:18" pos:end="41:18">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="43:13" pos:end="43:38">/* Second half of blx.  */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:43"><expr pos:start="45:13" pos:end="45:42"><name pos:start="45:13" pos:end="45:18">offset</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <operator pos:start="45:22" pos:end="45:22">(</operator><operator pos:start="45:23" pos:end="45:23">(</operator><name pos:start="45:24" pos:end="45:27">insn</name> <operator pos:start="45:29" pos:end="45:29">&amp;</operator> <literal type="number" pos:start="45:31" pos:end="45:35">0x7ff</literal><operator pos:start="45:36" pos:end="45:36">)</operator> <operator pos:start="45:38" pos:end="45:39">&lt;&lt;</operator> <literal type="number" pos:start="45:41" pos:end="45:41">1</literal><operator pos:start="45:42" pos:end="45:42">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:15">tmp</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:33"><name pos:start="47:19" pos:end="47:26">load_reg</name><argument_list pos:start="47:27" pos:end="47:33">(<argument pos:start="47:28" pos:end="47:28"><expr pos:start="47:28" pos:end="47:28"><name pos:start="47:28" pos:end="47:28">s</name></expr></argument>, <argument pos:start="47:31" pos:end="47:32"><expr pos:start="47:31" pos:end="47:32"><literal type="number" pos:start="47:31" pos:end="47:32">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:47"><expr pos:start="49:13" pos:end="49:46"><call pos:start="49:13" pos:end="49:46"><name pos:start="49:13" pos:end="49:28">tcg_gen_addi_i32</name><argument_list pos:start="49:29" pos:end="49:46">(<argument pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:32">tmp</name></expr></argument>, <argument pos:start="49:35" pos:end="49:37"><expr pos:start="49:35" pos:end="49:37"><name pos:start="49:35" pos:end="49:37">tmp</name></expr></argument>, <argument pos:start="49:40" pos:end="49:45"><expr pos:start="49:40" pos:end="49:45"><name pos:start="49:40" pos:end="49:45">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:51"><expr pos:start="51:13" pos:end="51:50"><call pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:28">tcg_gen_andi_i32</name><argument_list pos:start="51:29" pos:end="51:50">(<argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">tmp</name></expr></argument>, <argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><name pos:start="51:35" pos:end="51:37">tmp</name></expr></argument>, <argument pos:start="51:40" pos:end="51:49"><expr pos:start="51:40" pos:end="51:49"><literal type="number" pos:start="51:40" pos:end="51:49">0xfffffffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:38"><expr pos:start="55:13" pos:end="55:37"><name pos:start="55:13" pos:end="55:16">tmp2</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:37"><name pos:start="55:20" pos:end="55:35">tcg_temp_new_i32</name><argument_list pos:start="55:36" pos:end="55:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:46"><expr pos:start="57:13" pos:end="57:45"><call pos:start="57:13" pos:end="57:45"><name pos:start="57:13" pos:end="57:28">tcg_gen_movi_i32</name><argument_list pos:start="57:29" pos:end="57:45">(<argument pos:start="57:30" pos:end="57:33"><expr pos:start="57:30" pos:end="57:33"><name pos:start="57:30" pos:end="57:33">tmp2</name></expr></argument>, <argument pos:start="57:36" pos:end="57:44"><expr pos:start="57:36" pos:end="57:44"><name pos:start="57:36" pos:end="57:40"><name pos:start="57:36" pos:end="57:36">s</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:40">pc</name></name> <operator pos:start="57:42" pos:end="57:42">|</operator> <literal type="number" pos:start="57:44" pos:end="57:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:35"><expr pos:start="59:13" pos:end="59:34"><call pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:21">store_reg</name><argument_list pos:start="59:22" pos:end="59:34">(<argument pos:start="59:23" pos:end="59:23"><expr pos:start="59:23" pos:end="59:23"><name pos:start="59:23" pos:end="59:23">s</name></expr></argument>, <argument pos:start="59:26" pos:end="59:27"><expr pos:start="59:26" pos:end="59:27"><literal type="number" pos:start="59:26" pos:end="59:27">14</literal></expr></argument>, <argument pos:start="59:30" pos:end="59:33"><expr pos:start="59:30" pos:end="59:33"><name pos:start="59:30" pos:end="59:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:27"><expr pos:start="61:13" pos:end="61:26"><call pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:18">gen_bx</name><argument_list pos:start="61:19" pos:end="61:26">(<argument pos:start="61:20" pos:end="61:20"><expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">s</name></expr></argument>, <argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><name pos:start="61:23" pos:end="61:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:21">return <expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="89:9"><if pos:start="67:9" pos:end="89:9">if <condition pos:start="67:12" pos:end="67:29">(<expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:16">insn</name> <operator pos:start="67:18" pos:end="67:18">&amp;</operator> <operator pos:start="67:20" pos:end="67:20">(</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal> <operator pos:start="67:23" pos:end="67:24">&lt;&lt;</operator> <literal type="number" pos:start="67:26" pos:end="67:27">11</literal><operator pos:start="67:28" pos:end="67:28">)</operator></expr>)</condition> <block pos:start="67:31" pos:end="89:9">{<block_content pos:start="71:13" pos:end="87:21">

            <comment type="block" pos:start="69:13" pos:end="69:37">/* Second half of bl.  */</comment>

            <expr_stmt pos:start="71:13" pos:end="71:47"><expr pos:start="71:13" pos:end="71:46"><name pos:start="71:13" pos:end="71:18">offset</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <operator pos:start="71:22" pos:end="71:22">(</operator><operator pos:start="71:23" pos:end="71:23">(</operator><name pos:start="71:24" pos:end="71:27">insn</name> <operator pos:start="71:29" pos:end="71:29">&amp;</operator> <literal type="number" pos:start="71:31" pos:end="71:35">0x7ff</literal><operator pos:start="71:36" pos:end="71:36">)</operator> <operator pos:start="71:38" pos:end="71:39">&lt;&lt;</operator> <literal type="number" pos:start="71:41" pos:end="71:41">1</literal><operator pos:start="71:42" pos:end="71:42">)</operator> <operator pos:start="71:44" pos:end="71:44">|</operator> <literal type="number" pos:start="71:46" pos:end="71:46">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:34"><expr pos:start="73:13" pos:end="73:33"><name pos:start="73:13" pos:end="73:15">tmp</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:33"><name pos:start="73:19" pos:end="73:26">load_reg</name><argument_list pos:start="73:27" pos:end="73:33">(<argument pos:start="73:28" pos:end="73:28"><expr pos:start="73:28" pos:end="73:28"><name pos:start="73:28" pos:end="73:28">s</name></expr></argument>, <argument pos:start="73:31" pos:end="73:32"><expr pos:start="73:31" pos:end="73:32"><literal type="number" pos:start="73:31" pos:end="73:32">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:47"><expr pos:start="75:13" pos:end="75:46"><call pos:start="75:13" pos:end="75:46"><name pos:start="75:13" pos:end="75:28">tcg_gen_addi_i32</name><argument_list pos:start="75:29" pos:end="75:46">(<argument pos:start="75:30" pos:end="75:32"><expr pos:start="75:30" pos:end="75:32"><name pos:start="75:30" pos:end="75:32">tmp</name></expr></argument>, <argument pos:start="75:35" pos:end="75:37"><expr pos:start="75:35" pos:end="75:37"><name pos:start="75:35" pos:end="75:37">tmp</name></expr></argument>, <argument pos:start="75:40" pos:end="75:45"><expr pos:start="75:40" pos:end="75:45"><name pos:start="75:40" pos:end="75:45">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:38"><expr pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:16">tmp2</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <call pos:start="79:20" pos:end="79:37"><name pos:start="79:20" pos:end="79:35">tcg_temp_new_i32</name><argument_list pos:start="79:36" pos:end="79:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:46"><expr pos:start="81:13" pos:end="81:45"><call pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:28">tcg_gen_movi_i32</name><argument_list pos:start="81:29" pos:end="81:45">(<argument pos:start="81:30" pos:end="81:33"><expr pos:start="81:30" pos:end="81:33"><name pos:start="81:30" pos:end="81:33">tmp2</name></expr></argument>, <argument pos:start="81:36" pos:end="81:44"><expr pos:start="81:36" pos:end="81:44"><name pos:start="81:36" pos:end="81:40"><name pos:start="81:36" pos:end="81:36">s</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:40">pc</name></name> <operator pos:start="81:42" pos:end="81:42">|</operator> <literal type="number" pos:start="81:44" pos:end="81:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:35"><expr pos:start="83:13" pos:end="83:34"><call pos:start="83:13" pos:end="83:34"><name pos:start="83:13" pos:end="83:21">store_reg</name><argument_list pos:start="83:22" pos:end="83:34">(<argument pos:start="83:23" pos:end="83:23"><expr pos:start="83:23" pos:end="83:23"><name pos:start="83:23" pos:end="83:23">s</name></expr></argument>, <argument pos:start="83:26" pos:end="83:27"><expr pos:start="83:26" pos:end="83:27"><literal type="number" pos:start="83:26" pos:end="83:27">14</literal></expr></argument>, <argument pos:start="83:30" pos:end="83:33"><expr pos:start="83:30" pos:end="83:33"><name pos:start="83:30" pos:end="83:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:27"><expr pos:start="85:13" pos:end="85:26"><call pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:18">gen_bx</name><argument_list pos:start="85:19" pos:end="85:26">(<argument pos:start="85:20" pos:end="85:20"><expr pos:start="85:20" pos:end="85:20"><name pos:start="85:20" pos:end="85:20">s</name></expr></argument>, <argument pos:start="85:23" pos:end="85:25"><expr pos:start="85:23" pos:end="85:25"><name pos:start="85:23" pos:end="85:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:21">return <expr pos:start="87:20" pos:end="87:20"><literal type="number" pos:start="87:20" pos:end="87:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="105:9"><if pos:start="91:9" pos:end="105:9">if <condition pos:start="91:12" pos:end="91:45">(<expr pos:start="91:13" pos:end="91:44"><operator pos:start="91:13" pos:end="91:13">(</operator><name pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">s</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:18">pc</name></name> <operator pos:start="91:20" pos:end="91:20">&amp;</operator> <operator pos:start="91:22" pos:end="91:22">~</operator><name pos:start="91:23" pos:end="91:38">TARGET_PAGE_MASK</name><operator pos:start="91:39" pos:end="91:39">)</operator> <operator pos:start="91:41" pos:end="91:42">==</operator> <literal type="number" pos:start="91:44" pos:end="91:44">0</literal></expr>)</condition> <block pos:start="91:47" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:21">

            <comment type="block" pos:start="93:13" pos:end="97:34">/* Instruction spans a page boundary.  Implement it as two

               16-bit instructions in case the second half causes an

               prefetch abort.  */</comment>

            <expr_stmt pos:start="99:13" pos:end="99:48"><expr pos:start="99:13" pos:end="99:47"><name pos:start="99:13" pos:end="99:18">offset</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <operator pos:start="99:22" pos:end="99:22">(</operator><operator pos:start="99:23" pos:end="99:23">(</operator><name pos:start="99:24" pos:end="99:30">int32_t</name><operator pos:start="99:31" pos:end="99:31">)</operator><name pos:start="99:32" pos:end="99:35">insn</name> <operator pos:start="99:37" pos:end="99:38">&lt;&lt;</operator> <literal type="number" pos:start="99:40" pos:end="99:41">21</literal><operator pos:start="99:42" pos:end="99:42">)</operator> <operator pos:start="99:44" pos:end="99:45">&gt;&gt;</operator> <literal type="number" pos:start="99:47" pos:end="99:47">9</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:60"><expr pos:start="101:13" pos:end="101:59"><call pos:start="101:13" pos:end="101:59"><name pos:start="101:13" pos:end="101:28">tcg_gen_movi_i32</name><argument_list pos:start="101:29" pos:end="101:59">(<argument pos:start="101:30" pos:end="101:38"><expr pos:start="101:30" pos:end="101:38"><name pos:start="101:30" pos:end="101:38"><name pos:start="101:30" pos:end="101:34">cpu_R</name><index pos:start="101:35" pos:end="101:38">[<expr pos:start="101:36" pos:end="101:37"><literal type="number" pos:start="101:36" pos:end="101:37">14</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:41" pos:end="101:58"><expr pos:start="101:41" pos:end="101:58"><name pos:start="101:41" pos:end="101:45"><name pos:start="101:41" pos:end="101:41">s</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:45">pc</name></name> <operator pos:start="101:47" pos:end="101:47">+</operator> <literal type="number" pos:start="101:49" pos:end="101:51">2</literal> <operator pos:start="101:51" pos:end="101:51">+</operator> <name pos:start="101:53" pos:end="101:58">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:21">return <expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="107:9" pos:end="107:45">/* Fall through to 32-bit decode.  */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:52"><expr pos:start="113:5" pos:end="113:51"><name pos:start="113:5" pos:end="113:8">insn</name> <operator pos:start="113:10" pos:end="113:10">=</operator> <call pos:start="113:12" pos:end="113:51"><name pos:start="113:12" pos:end="113:24">arm_lduw_code</name><argument_list pos:start="113:25" pos:end="113:51">(<argument pos:start="113:26" pos:end="113:28"><expr pos:start="113:26" pos:end="113:28"><name pos:start="113:26" pos:end="113:28">env</name></expr></argument>, <argument pos:start="113:31" pos:end="113:35"><expr pos:start="113:31" pos:end="113:35"><name pos:start="113:31" pos:end="113:35"><name pos:start="113:31" pos:end="113:31">s</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:35">pc</name></name></expr></argument>, <argument pos:start="113:38" pos:end="113:50"><expr pos:start="113:38" pos:end="113:50"><name pos:start="113:38" pos:end="113:50"><name pos:start="113:38" pos:end="113:38">s</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:50">bswap_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:15"><expr pos:start="115:5" pos:end="115:14"><name pos:start="115:5" pos:end="115:9"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:9">pc</name></name> <operator pos:start="115:11" pos:end="115:12">+=</operator> <literal type="number" pos:start="115:14" pos:end="115:14">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:37"><expr pos:start="117:5" pos:end="117:36"><name pos:start="117:5" pos:end="117:8">insn</name> <operator pos:start="117:10" pos:end="117:11">|=</operator> <operator pos:start="117:13" pos:end="117:13">(</operator><name pos:start="117:14" pos:end="117:21">uint32_t</name><operator pos:start="117:22" pos:end="117:22">)</operator><name pos:start="117:23" pos:end="117:30">insn_hw1</name> <operator pos:start="117:32" pos:end="117:33">&lt;&lt;</operator> <literal type="number" pos:start="117:35" pos:end="117:36">16</literal></expr>;</expr_stmt>



    <if_stmt pos:start="121:5" pos:end="125:5"><if pos:start="121:5" pos:end="125:5">if <condition pos:start="121:8" pos:end="121:42">(<expr pos:start="121:9" pos:end="121:41"><operator pos:start="121:9" pos:end="121:9">(</operator><name pos:start="121:10" pos:end="121:13">insn</name> <operator pos:start="121:15" pos:end="121:15">&amp;</operator> <literal type="number" pos:start="121:17" pos:end="121:26">0xf800e800</literal><operator pos:start="121:27" pos:end="121:27">)</operator> <operator pos:start="121:29" pos:end="121:30">!=</operator> <literal type="number" pos:start="121:32" pos:end="121:41">0xf000e800</literal></expr>)</condition> <block pos:start="121:44" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:18">

        <expr_stmt pos:start="123:9" pos:end="123:18"><expr pos:start="123:9" pos:end="123:17"><call pos:start="123:9" pos:end="123:17"><name pos:start="123:9" pos:end="123:12">ARCH</name><argument_list pos:start="123:13" pos:end="123:17">(<argument pos:start="123:14" pos:end="123:16"><expr pos:start="123:14" pos:end="123:16"><literal type="number" pos:start="123:14" pos:end="123:16">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:28"><expr pos:start="129:5" pos:end="129:27"><name pos:start="129:5" pos:end="129:6">rn</name> <operator pos:start="129:8" pos:end="129:8">=</operator> <operator pos:start="129:10" pos:end="129:10">(</operator><name pos:start="129:11" pos:end="129:14">insn</name> <operator pos:start="129:16" pos:end="129:17">&gt;&gt;</operator> <literal type="number" pos:start="129:19" pos:end="129:20">16</literal><operator pos:start="129:21" pos:end="129:21">)</operator> <operator pos:start="129:23" pos:end="129:23">&amp;</operator> <literal type="number" pos:start="129:25" pos:end="129:27">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:28"><expr pos:start="131:5" pos:end="131:27"><name pos:start="131:5" pos:end="131:6">rs</name> <operator pos:start="131:8" pos:end="131:8">=</operator> <operator pos:start="131:10" pos:end="131:10">(</operator><name pos:start="131:11" pos:end="131:14">insn</name> <operator pos:start="131:16" pos:end="131:17">&gt;&gt;</operator> <literal type="number" pos:start="131:19" pos:end="131:20">12</literal><operator pos:start="131:21" pos:end="131:21">)</operator> <operator pos:start="131:23" pos:end="131:23">&amp;</operator> <literal type="number" pos:start="131:25" pos:end="131:27">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:27"><expr pos:start="133:5" pos:end="133:26"><name pos:start="133:5" pos:end="133:6">rd</name> <operator pos:start="133:8" pos:end="133:8">=</operator> <operator pos:start="133:10" pos:end="133:10">(</operator><name pos:start="133:11" pos:end="133:14">insn</name> <operator pos:start="133:16" pos:end="133:17">&gt;&gt;</operator> <literal type="number" pos:start="133:19" pos:end="133:19">8</literal><operator pos:start="133:20" pos:end="133:20">)</operator> <operator pos:start="133:22" pos:end="133:22">&amp;</operator> <literal type="number" pos:start="133:24" pos:end="133:26">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:20"><expr pos:start="135:5" pos:end="135:19"><name pos:start="135:5" pos:end="135:6">rm</name> <operator pos:start="135:8" pos:end="135:8">=</operator> <name pos:start="135:10" pos:end="135:13">insn</name> <operator pos:start="135:15" pos:end="135:15">&amp;</operator> <literal type="number" pos:start="135:17" pos:end="135:19">0xf</literal></expr>;</expr_stmt>

    <switch pos:start="137:5" pos:end="2243:5">switch <condition pos:start="137:12" pos:end="137:31">(<expr pos:start="137:13" pos:end="137:30"><operator pos:start="137:13" pos:end="137:13">(</operator><name pos:start="137:14" pos:end="137:17">insn</name> <operator pos:start="137:19" pos:end="137:20">&gt;&gt;</operator> <literal type="number" pos:start="137:22" pos:end="137:23">25</literal><operator pos:start="137:24" pos:end="137:24">)</operator> <operator pos:start="137:26" pos:end="137:26">&amp;</operator> <literal type="number" pos:start="137:28" pos:end="137:30">0xf</literal></expr>)</condition> <block pos:start="137:33" pos:end="2243:5">{<block_content pos:start="139:5" pos:end="2241:24">

    <case pos:start="139:5" pos:end="139:11">case <expr pos:start="139:10" pos:end="139:10"><literal type="number" pos:start="139:10" pos:end="139:10">0</literal></expr>:</case> <case pos:start="139:13" pos:end="139:19">case <expr pos:start="139:18" pos:end="139:18"><literal type="number" pos:start="139:18" pos:end="139:18">1</literal></expr>:</case> <case pos:start="139:21" pos:end="139:27">case <expr pos:start="139:26" pos:end="139:26"><literal type="number" pos:start="139:26" pos:end="139:26">2</literal></expr>:</case> <case pos:start="139:29" pos:end="139:35">case <expr pos:start="139:34" pos:end="139:34"><literal type="number" pos:start="139:34" pos:end="139:34">3</literal></expr>:</case>

        <comment type="block" pos:start="141:9" pos:end="141:57">/* 16-bit instructions.  Should never happen.  */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:16"><expr pos:start="143:9" pos:end="143:15"><call pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:13">abort</name><argument_list pos:start="143:14" pos:end="143:15">()</argument_list></call></expr>;</expr_stmt>

    <case pos:start="145:5" pos:end="145:11">case <expr pos:start="145:10" pos:end="145:10"><literal type="number" pos:start="145:10" pos:end="145:10">4</literal></expr>:</case>

        <if_stmt pos:start="147:9" pos:end="621:9"><if pos:start="147:9" pos:end="443:9">if <condition pos:start="147:12" pos:end="147:29">(<expr pos:start="147:13" pos:end="147:28"><name pos:start="147:13" pos:end="147:16">insn</name> <operator pos:start="147:18" pos:end="147:18">&amp;</operator> <operator pos:start="147:20" pos:end="147:20">(</operator><literal type="number" pos:start="147:21" pos:end="147:21">1</literal> <operator pos:start="147:23" pos:end="147:24">&lt;&lt;</operator> <literal type="number" pos:start="147:26" pos:end="147:27">22</literal><operator pos:start="147:28" pos:end="147:28">)</operator></expr>)</condition> <block pos:start="147:31" pos:end="443:9">{<block_content pos:start="151:13" pos:end="441:13">

            <comment type="block" pos:start="149:13" pos:end="149:50">/* Other load/store, table branch.  */</comment>

            <if_stmt pos:start="151:13" pos:end="441:13"><if pos:start="151:13" pos:end="237:13">if <condition pos:start="151:16" pos:end="151:34">(<expr pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:20">insn</name> <operator pos:start="151:22" pos:end="151:22">&amp;</operator> <literal type="number" pos:start="151:24" pos:end="151:33">0x01200000</literal></expr>)</condition> <block pos:start="151:36" pos:end="237:13">{<block_content pos:start="155:17" pos:end="235:17">

                <comment type="block" pos:start="153:17" pos:end="153:45">/* Load/store doubleword.  */</comment>

                <if_stmt pos:start="155:17" pos:end="165:17"><if pos:start="155:17" pos:end="161:17">if <condition pos:start="155:20" pos:end="155:29">(<expr pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:22">rn</name> <operator pos:start="155:24" pos:end="155:25">==</operator> <literal type="number" pos:start="155:27" pos:end="155:28">15</literal></expr>)</condition> <block pos:start="155:31" pos:end="161:17">{<block_content pos:start="157:21" pos:end="159:55">

                    <expr_stmt pos:start="157:21" pos:end="157:46"><expr pos:start="157:21" pos:end="157:45"><name pos:start="157:21" pos:end="157:24">addr</name> <operator pos:start="157:26" pos:end="157:26">=</operator> <call pos:start="157:28" pos:end="157:45"><name pos:start="157:28" pos:end="157:43">tcg_temp_new_i32</name><argument_list pos:start="157:44" pos:end="157:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="159:21" pos:end="159:55"><expr pos:start="159:21" pos:end="159:54"><call pos:start="159:21" pos:end="159:54"><name pos:start="159:21" pos:end="159:36">tcg_gen_movi_i32</name><argument_list pos:start="159:37" pos:end="159:54">(<argument pos:start="159:38" pos:end="159:41"><expr pos:start="159:38" pos:end="159:41"><name pos:start="159:38" pos:end="159:41">addr</name></expr></argument>, <argument pos:start="159:44" pos:end="159:53"><expr pos:start="159:44" pos:end="159:53"><name pos:start="159:44" pos:end="159:48"><name pos:start="159:44" pos:end="159:44">s</name><operator pos:start="159:45" pos:end="159:46">-&gt;</operator><name pos:start="159:47" pos:end="159:48">pc</name></name> <operator pos:start="159:50" pos:end="159:50">&amp;</operator> <operator pos:start="159:52" pos:end="159:52">~</operator><literal type="number" pos:start="159:53" pos:end="159:53">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="161:19" pos:end="165:17">else <block pos:start="161:24" pos:end="165:17">{<block_content pos:start="163:21" pos:end="163:43">

                    <expr_stmt pos:start="163:21" pos:end="163:43"><expr pos:start="163:21" pos:end="163:42"><name pos:start="163:21" pos:end="163:24">addr</name> <operator pos:start="163:26" pos:end="163:26">=</operator> <call pos:start="163:28" pos:end="163:42"><name pos:start="163:28" pos:end="163:35">load_reg</name><argument_list pos:start="163:36" pos:end="163:42">(<argument pos:start="163:37" pos:end="163:37"><expr pos:start="163:37" pos:end="163:37"><name pos:start="163:37" pos:end="163:37">s</name></expr></argument>, <argument pos:start="163:40" pos:end="163:41"><expr pos:start="163:40" pos:end="163:41"><name pos:start="163:40" pos:end="163:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:43"><expr pos:start="167:17" pos:end="167:42"><name pos:start="167:17" pos:end="167:22">offset</name> <operator pos:start="167:24" pos:end="167:24">=</operator> <operator pos:start="167:26" pos:end="167:26">(</operator><name pos:start="167:27" pos:end="167:30">insn</name> <operator pos:start="167:32" pos:end="167:32">&amp;</operator> <literal type="number" pos:start="167:34" pos:end="167:37">0xff</literal><operator pos:start="167:38" pos:end="167:38">)</operator> <operator pos:start="167:40" pos:end="167:40">*</operator> <literal type="number" pos:start="167:42" pos:end="167:42">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="169:17" pos:end="171:37"><if pos:start="169:17" pos:end="171:37">if <condition pos:start="169:20" pos:end="169:44">(<expr pos:start="169:21" pos:end="169:43"><operator pos:start="169:21" pos:end="169:21">(</operator><name pos:start="169:22" pos:end="169:25">insn</name> <operator pos:start="169:27" pos:end="169:27">&amp;</operator> <operator pos:start="169:29" pos:end="169:29">(</operator><literal type="number" pos:start="169:30" pos:end="169:30">1</literal> <operator pos:start="169:32" pos:end="169:33">&lt;&lt;</operator> <literal type="number" pos:start="169:35" pos:end="169:36">23</literal><operator pos:start="169:37" pos:end="169:37">)</operator><operator pos:start="169:38" pos:end="169:38">)</operator> <operator pos:start="169:40" pos:end="169:41">==</operator> <literal type="number" pos:start="169:43" pos:end="169:43">0</literal></expr>)</condition><block type="pseudo" pos:start="171:21" pos:end="171:37"><block_content pos:start="171:21" pos:end="171:37">

                    <expr_stmt pos:start="171:21" pos:end="171:37"><expr pos:start="171:21" pos:end="171:36"><name pos:start="171:21" pos:end="171:26">offset</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <operator pos:start="171:30" pos:end="171:30">-</operator><name pos:start="171:31" pos:end="171:36">offset</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="173:17" pos:end="179:17"><if pos:start="173:17" pos:end="179:17">if <condition pos:start="173:20" pos:end="173:37">(<expr pos:start="173:21" pos:end="173:36"><name pos:start="173:21" pos:end="173:24">insn</name> <operator pos:start="173:26" pos:end="173:26">&amp;</operator> <operator pos:start="173:28" pos:end="173:28">(</operator><literal type="number" pos:start="173:29" pos:end="173:29">1</literal> <operator pos:start="173:31" pos:end="173:32">&lt;&lt;</operator> <literal type="number" pos:start="173:34" pos:end="173:35">24</literal><operator pos:start="173:36" pos:end="173:36">)</operator></expr>)</condition> <block pos:start="173:39" pos:end="179:17">{<block_content pos:start="175:21" pos:end="177:31">

                    <expr_stmt pos:start="175:21" pos:end="175:57"><expr pos:start="175:21" pos:end="175:56"><call pos:start="175:21" pos:end="175:56"><name pos:start="175:21" pos:end="175:36">tcg_gen_addi_i32</name><argument_list pos:start="175:37" pos:end="175:56">(<argument pos:start="175:38" pos:end="175:41"><expr pos:start="175:38" pos:end="175:41"><name pos:start="175:38" pos:end="175:41">addr</name></expr></argument>, <argument pos:start="175:44" pos:end="175:47"><expr pos:start="175:44" pos:end="175:47"><name pos:start="175:44" pos:end="175:47">addr</name></expr></argument>, <argument pos:start="175:50" pos:end="175:55"><expr pos:start="175:50" pos:end="175:55"><name pos:start="175:50" pos:end="175:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:31"><expr pos:start="177:21" pos:end="177:30"><name pos:start="177:21" pos:end="177:26">offset</name> <operator pos:start="177:28" pos:end="177:28">=</operator> <literal type="number" pos:start="177:30" pos:end="177:30">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="181:17" pos:end="217:17"><if pos:start="181:17" pos:end="199:17">if <condition pos:start="181:20" pos:end="181:37">(<expr pos:start="181:21" pos:end="181:36"><name pos:start="181:21" pos:end="181:24">insn</name> <operator pos:start="181:26" pos:end="181:26">&amp;</operator> <operator pos:start="181:28" pos:end="181:28">(</operator><literal type="number" pos:start="181:29" pos:end="181:29">1</literal> <operator pos:start="181:31" pos:end="181:32">&lt;&lt;</operator> <literal type="number" pos:start="181:34" pos:end="181:35">20</literal><operator pos:start="181:36" pos:end="181:36">)</operator></expr>)</condition> <block pos:start="181:39" pos:end="199:17">{<block_content pos:start="185:21" pos:end="197:42">

                    <comment type="block" pos:start="183:21" pos:end="183:30">/* ldrd */</comment>

                    <expr_stmt pos:start="185:21" pos:end="185:45"><expr pos:start="185:21" pos:end="185:44"><name pos:start="185:21" pos:end="185:23">tmp</name> <operator pos:start="185:25" pos:end="185:25">=</operator> <call pos:start="185:27" pos:end="185:44"><name pos:start="185:27" pos:end="185:42">tcg_temp_new_i32</name><argument_list pos:start="185:43" pos:end="185:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:62"><expr pos:start="187:21" pos:end="187:61"><call pos:start="187:21" pos:end="187:61"><name pos:start="187:21" pos:end="187:38">tcg_gen_qemu_ld32u</name><argument_list pos:start="187:39" pos:end="187:61">(<argument pos:start="187:40" pos:end="187:42"><expr pos:start="187:40" pos:end="187:42"><name pos:start="187:40" pos:end="187:42">tmp</name></expr></argument>, <argument pos:start="187:45" pos:end="187:48"><expr pos:start="187:45" pos:end="187:48"><name pos:start="187:45" pos:end="187:48">addr</name></expr></argument>, <argument pos:start="187:51" pos:end="187:60"><expr pos:start="187:51" pos:end="187:60"><call pos:start="187:51" pos:end="187:60"><name pos:start="187:51" pos:end="187:57">IS_USER</name><argument_list pos:start="187:58" pos:end="187:60">(<argument pos:start="187:59" pos:end="187:59"><expr pos:start="187:59" pos:end="187:59"><name pos:start="187:59" pos:end="187:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:42"><expr pos:start="189:21" pos:end="189:41"><call pos:start="189:21" pos:end="189:41"><name pos:start="189:21" pos:end="189:29">store_reg</name><argument_list pos:start="189:30" pos:end="189:41">(<argument pos:start="189:31" pos:end="189:31"><expr pos:start="189:31" pos:end="189:31"><name pos:start="189:31" pos:end="189:31">s</name></expr></argument>, <argument pos:start="189:34" pos:end="189:35"><expr pos:start="189:34" pos:end="189:35"><name pos:start="189:34" pos:end="189:35">rs</name></expr></argument>, <argument pos:start="189:38" pos:end="189:40"><expr pos:start="189:38" pos:end="189:40"><name pos:start="189:38" pos:end="189:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:52"><expr pos:start="191:21" pos:end="191:51"><call pos:start="191:21" pos:end="191:51"><name pos:start="191:21" pos:end="191:36">tcg_gen_addi_i32</name><argument_list pos:start="191:37" pos:end="191:51">(<argument pos:start="191:38" pos:end="191:41"><expr pos:start="191:38" pos:end="191:41"><name pos:start="191:38" pos:end="191:41">addr</name></expr></argument>, <argument pos:start="191:44" pos:end="191:47"><expr pos:start="191:44" pos:end="191:47"><name pos:start="191:44" pos:end="191:47">addr</name></expr></argument>, <argument pos:start="191:50" pos:end="191:50"><expr pos:start="191:50" pos:end="191:50"><literal type="number" pos:start="191:50" pos:end="191:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:45"><expr pos:start="193:21" pos:end="193:44"><name pos:start="193:21" pos:end="193:23">tmp</name> <operator pos:start="193:25" pos:end="193:25">=</operator> <call pos:start="193:27" pos:end="193:44"><name pos:start="193:27" pos:end="193:42">tcg_temp_new_i32</name><argument_list pos:start="193:43" pos:end="193:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:62"><expr pos:start="195:21" pos:end="195:61"><call pos:start="195:21" pos:end="195:61"><name pos:start="195:21" pos:end="195:38">tcg_gen_qemu_ld32u</name><argument_list pos:start="195:39" pos:end="195:61">(<argument pos:start="195:40" pos:end="195:42"><expr pos:start="195:40" pos:end="195:42"><name pos:start="195:40" pos:end="195:42">tmp</name></expr></argument>, <argument pos:start="195:45" pos:end="195:48"><expr pos:start="195:45" pos:end="195:48"><name pos:start="195:45" pos:end="195:48">addr</name></expr></argument>, <argument pos:start="195:51" pos:end="195:60"><expr pos:start="195:51" pos:end="195:60"><call pos:start="195:51" pos:end="195:60"><name pos:start="195:51" pos:end="195:57">IS_USER</name><argument_list pos:start="195:58" pos:end="195:60">(<argument pos:start="195:59" pos:end="195:59"><expr pos:start="195:59" pos:end="195:59"><name pos:start="195:59" pos:end="195:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:42"><expr pos:start="197:21" pos:end="197:41"><call pos:start="197:21" pos:end="197:41"><name pos:start="197:21" pos:end="197:29">store_reg</name><argument_list pos:start="197:30" pos:end="197:41">(<argument pos:start="197:31" pos:end="197:31"><expr pos:start="197:31" pos:end="197:31"><name pos:start="197:31" pos:end="197:31">s</name></expr></argument>, <argument pos:start="197:34" pos:end="197:35"><expr pos:start="197:34" pos:end="197:35"><name pos:start="197:34" pos:end="197:35">rd</name></expr></argument>, <argument pos:start="197:38" pos:end="197:40"><expr pos:start="197:38" pos:end="197:40"><name pos:start="197:38" pos:end="197:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="199:19" pos:end="217:17">else <block pos:start="199:24" pos:end="217:17">{<block_content pos:start="203:21" pos:end="215:43">

                    <comment type="block" pos:start="201:21" pos:end="201:30">/* strd */</comment>

                    <expr_stmt pos:start="203:21" pos:end="203:42"><expr pos:start="203:21" pos:end="203:41"><name pos:start="203:21" pos:end="203:23">tmp</name> <operator pos:start="203:25" pos:end="203:25">=</operator> <call pos:start="203:27" pos:end="203:41"><name pos:start="203:27" pos:end="203:34">load_reg</name><argument_list pos:start="203:35" pos:end="203:41">(<argument pos:start="203:36" pos:end="203:36"><expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">s</name></expr></argument>, <argument pos:start="203:39" pos:end="203:40"><expr pos:start="203:39" pos:end="203:40"><name pos:start="203:39" pos:end="203:40">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="205:21" pos:end="205:61"><expr pos:start="205:21" pos:end="205:60"><call pos:start="205:21" pos:end="205:60"><name pos:start="205:21" pos:end="205:37">tcg_gen_qemu_st32</name><argument_list pos:start="205:38" pos:end="205:60">(<argument pos:start="205:39" pos:end="205:41"><expr pos:start="205:39" pos:end="205:41"><name pos:start="205:39" pos:end="205:41">tmp</name></expr></argument>, <argument pos:start="205:44" pos:end="205:47"><expr pos:start="205:44" pos:end="205:47"><name pos:start="205:44" pos:end="205:47">addr</name></expr></argument>, <argument pos:start="205:50" pos:end="205:59"><expr pos:start="205:50" pos:end="205:59"><call pos:start="205:50" pos:end="205:59"><name pos:start="205:50" pos:end="205:56">IS_USER</name><argument_list pos:start="205:57" pos:end="205:59">(<argument pos:start="205:58" pos:end="205:58"><expr pos:start="205:58" pos:end="205:58"><name pos:start="205:58" pos:end="205:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="207:21" pos:end="207:43"><expr pos:start="207:21" pos:end="207:42"><call pos:start="207:21" pos:end="207:42"><name pos:start="207:21" pos:end="207:37">tcg_temp_free_i32</name><argument_list pos:start="207:38" pos:end="207:42">(<argument pos:start="207:39" pos:end="207:41"><expr pos:start="207:39" pos:end="207:41"><name pos:start="207:39" pos:end="207:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:52"><expr pos:start="209:21" pos:end="209:51"><call pos:start="209:21" pos:end="209:51"><name pos:start="209:21" pos:end="209:36">tcg_gen_addi_i32</name><argument_list pos:start="209:37" pos:end="209:51">(<argument pos:start="209:38" pos:end="209:41"><expr pos:start="209:38" pos:end="209:41"><name pos:start="209:38" pos:end="209:41">addr</name></expr></argument>, <argument pos:start="209:44" pos:end="209:47"><expr pos:start="209:44" pos:end="209:47"><name pos:start="209:44" pos:end="209:47">addr</name></expr></argument>, <argument pos:start="209:50" pos:end="209:50"><expr pos:start="209:50" pos:end="209:50"><literal type="number" pos:start="209:50" pos:end="209:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:42"><expr pos:start="211:21" pos:end="211:41"><name pos:start="211:21" pos:end="211:23">tmp</name> <operator pos:start="211:25" pos:end="211:25">=</operator> <call pos:start="211:27" pos:end="211:41"><name pos:start="211:27" pos:end="211:34">load_reg</name><argument_list pos:start="211:35" pos:end="211:41">(<argument pos:start="211:36" pos:end="211:36"><expr pos:start="211:36" pos:end="211:36"><name pos:start="211:36" pos:end="211:36">s</name></expr></argument>, <argument pos:start="211:39" pos:end="211:40"><expr pos:start="211:39" pos:end="211:40"><name pos:start="211:39" pos:end="211:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="213:21" pos:end="213:61"><expr pos:start="213:21" pos:end="213:60"><call pos:start="213:21" pos:end="213:60"><name pos:start="213:21" pos:end="213:37">tcg_gen_qemu_st32</name><argument_list pos:start="213:38" pos:end="213:60">(<argument pos:start="213:39" pos:end="213:41"><expr pos:start="213:39" pos:end="213:41"><name pos:start="213:39" pos:end="213:41">tmp</name></expr></argument>, <argument pos:start="213:44" pos:end="213:47"><expr pos:start="213:44" pos:end="213:47"><name pos:start="213:44" pos:end="213:47">addr</name></expr></argument>, <argument pos:start="213:50" pos:end="213:59"><expr pos:start="213:50" pos:end="213:59"><call pos:start="213:50" pos:end="213:59"><name pos:start="213:50" pos:end="213:56">IS_USER</name><argument_list pos:start="213:57" pos:end="213:59">(<argument pos:start="213:58" pos:end="213:58"><expr pos:start="213:58" pos:end="213:58"><name pos:start="213:58" pos:end="213:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="215:43"><expr pos:start="215:21" pos:end="215:42"><call pos:start="215:21" pos:end="215:42"><name pos:start="215:21" pos:end="215:37">tcg_temp_free_i32</name><argument_list pos:start="215:38" pos:end="215:42">(<argument pos:start="215:39" pos:end="215:41"><expr pos:start="215:39" pos:end="215:41"><name pos:start="215:39" pos:end="215:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="219:17" pos:end="235:17"><if pos:start="219:17" pos:end="231:17">if <condition pos:start="219:20" pos:end="219:37">(<expr pos:start="219:21" pos:end="219:36"><name pos:start="219:21" pos:end="219:24">insn</name> <operator pos:start="219:26" pos:end="219:26">&amp;</operator> <operator pos:start="219:28" pos:end="219:28">(</operator><literal type="number" pos:start="219:29" pos:end="219:29">1</literal> <operator pos:start="219:31" pos:end="219:32">&lt;&lt;</operator> <literal type="number" pos:start="219:34" pos:end="219:35">21</literal><operator pos:start="219:36" pos:end="219:36">)</operator></expr>)</condition> <block pos:start="219:39" pos:end="231:17">{<block_content pos:start="223:21" pos:end="229:43">

                    <comment type="block" pos:start="221:21" pos:end="221:42">/* Base writeback.  */</comment>

                    <if_stmt pos:start="223:21" pos:end="225:40"><if pos:start="223:21" pos:end="225:40">if <condition pos:start="223:24" pos:end="223:33">(<expr pos:start="223:25" pos:end="223:32"><name pos:start="223:25" pos:end="223:26">rn</name> <operator pos:start="223:28" pos:end="223:29">==</operator> <literal type="number" pos:start="223:31" pos:end="223:32">15</literal></expr>)</condition><block type="pseudo" pos:start="225:25" pos:end="225:40"><block_content pos:start="225:25" pos:end="225:40">

                        <goto pos:start="225:25" pos:end="225:40">goto <name pos:start="225:30" pos:end="225:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:61"><expr pos:start="227:21" pos:end="227:60"><call pos:start="227:21" pos:end="227:60"><name pos:start="227:21" pos:end="227:36">tcg_gen_addi_i32</name><argument_list pos:start="227:37" pos:end="227:60">(<argument pos:start="227:38" pos:end="227:41"><expr pos:start="227:38" pos:end="227:41"><name pos:start="227:38" pos:end="227:41">addr</name></expr></argument>, <argument pos:start="227:44" pos:end="227:47"><expr pos:start="227:44" pos:end="227:47"><name pos:start="227:44" pos:end="227:47">addr</name></expr></argument>, <argument pos:start="227:50" pos:end="227:59"><expr pos:start="227:50" pos:end="227:59"><name pos:start="227:50" pos:end="227:55">offset</name> <operator pos:start="227:57" pos:end="227:57">-</operator> <literal type="number" pos:start="227:59" pos:end="227:59">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:43"><expr pos:start="229:21" pos:end="229:42"><call pos:start="229:21" pos:end="229:42"><name pos:start="229:21" pos:end="229:29">store_reg</name><argument_list pos:start="229:30" pos:end="229:42">(<argument pos:start="229:31" pos:end="229:31"><expr pos:start="229:31" pos:end="229:31"><name pos:start="229:31" pos:end="229:31">s</name></expr></argument>, <argument pos:start="229:34" pos:end="229:35"><expr pos:start="229:34" pos:end="229:35"><name pos:start="229:34" pos:end="229:35">rn</name></expr></argument>, <argument pos:start="229:38" pos:end="229:41"><expr pos:start="229:38" pos:end="229:41"><name pos:start="229:38" pos:end="229:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="231:19" pos:end="235:17">else <block pos:start="231:24" pos:end="235:17">{<block_content pos:start="233:21" pos:end="233:44">

                    <expr_stmt pos:start="233:21" pos:end="233:44"><expr pos:start="233:21" pos:end="233:43"><call pos:start="233:21" pos:end="233:43"><name pos:start="233:21" pos:end="233:37">tcg_temp_free_i32</name><argument_list pos:start="233:38" pos:end="233:43">(<argument pos:start="233:39" pos:end="233:42"><expr pos:start="233:39" pos:end="233:42"><name pos:start="233:39" pos:end="233:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="237:15" pos:end="259:13">else if <condition pos:start="237:23" pos:end="237:47">(<expr pos:start="237:24" pos:end="237:46"><operator pos:start="237:24" pos:end="237:24">(</operator><name pos:start="237:25" pos:end="237:28">insn</name> <operator pos:start="237:30" pos:end="237:30">&amp;</operator> <operator pos:start="237:32" pos:end="237:32">(</operator><literal type="number" pos:start="237:33" pos:end="237:33">1</literal> <operator pos:start="237:35" pos:end="237:36">&lt;&lt;</operator> <literal type="number" pos:start="237:38" pos:end="237:39">23</literal><operator pos:start="237:40" pos:end="237:40">)</operator><operator pos:start="237:41" pos:end="237:41">)</operator> <operator pos:start="237:43" pos:end="237:44">==</operator> <literal type="number" pos:start="237:46" pos:end="237:46">0</literal></expr>)</condition> <block pos:start="237:49" pos:end="259:13">{<block_content pos:start="241:17" pos:end="257:40">

                <comment type="block" pos:start="239:17" pos:end="239:49">/* Load/store exclusive word.  */</comment>

                <expr_stmt pos:start="241:17" pos:end="241:48"><expr pos:start="241:17" pos:end="241:47"><name pos:start="241:17" pos:end="241:20">addr</name> <operator pos:start="241:22" pos:end="241:22">=</operator> <call pos:start="241:24" pos:end="241:47"><name pos:start="241:24" pos:end="241:45">tcg_temp_local_new_i32</name><argument_list pos:start="241:46" pos:end="241:47">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:42"><expr pos:start="243:17" pos:end="243:41"><call pos:start="243:17" pos:end="243:41"><name pos:start="243:17" pos:end="243:28">load_reg_var</name><argument_list pos:start="243:29" pos:end="243:41">(<argument pos:start="243:30" pos:end="243:30"><expr pos:start="243:30" pos:end="243:30"><name pos:start="243:30" pos:end="243:30">s</name></expr></argument>, <argument pos:start="243:33" pos:end="243:36"><expr pos:start="243:33" pos:end="243:36"><name pos:start="243:33" pos:end="243:36">addr</name></expr></argument>, <argument pos:start="243:39" pos:end="243:40"><expr pos:start="243:39" pos:end="243:40"><name pos:start="243:39" pos:end="243:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:65"><expr pos:start="245:17" pos:end="245:64"><call pos:start="245:17" pos:end="245:64"><name pos:start="245:17" pos:end="245:32">tcg_gen_addi_i32</name><argument_list pos:start="245:33" pos:end="245:64">(<argument pos:start="245:34" pos:end="245:37"><expr pos:start="245:34" pos:end="245:37"><name pos:start="245:34" pos:end="245:37">addr</name></expr></argument>, <argument pos:start="245:40" pos:end="245:43"><expr pos:start="245:40" pos:end="245:43"><name pos:start="245:40" pos:end="245:43">addr</name></expr></argument>, <argument pos:start="245:46" pos:end="245:63"><expr pos:start="245:46" pos:end="245:63"><operator pos:start="245:46" pos:end="245:46">(</operator><name pos:start="245:47" pos:end="245:50">insn</name> <operator pos:start="245:52" pos:end="245:52">&amp;</operator> <literal type="number" pos:start="245:54" pos:end="245:57">0xff</literal><operator pos:start="245:58" pos:end="245:58">)</operator> <operator pos:start="245:60" pos:end="245:61">&lt;&lt;</operator> <literal type="number" pos:start="245:63" pos:end="245:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="247:17" pos:end="255:17"><if pos:start="247:17" pos:end="251:17">if <condition pos:start="247:20" pos:end="247:37">(<expr pos:start="247:21" pos:end="247:36"><name pos:start="247:21" pos:end="247:24">insn</name> <operator pos:start="247:26" pos:end="247:26">&amp;</operator> <operator pos:start="247:28" pos:end="247:28">(</operator><literal type="number" pos:start="247:29" pos:end="247:29">1</literal> <operator pos:start="247:31" pos:end="247:32">&lt;&lt;</operator> <literal type="number" pos:start="247:34" pos:end="247:35">20</literal><operator pos:start="247:36" pos:end="247:36">)</operator></expr>)</condition> <block pos:start="247:39" pos:end="251:17">{<block_content pos:start="249:21" pos:end="249:59">

                    <expr_stmt pos:start="249:21" pos:end="249:59"><expr pos:start="249:21" pos:end="249:58"><call pos:start="249:21" pos:end="249:58"><name pos:start="249:21" pos:end="249:38">gen_load_exclusive</name><argument_list pos:start="249:39" pos:end="249:58">(<argument pos:start="249:40" pos:end="249:40"><expr pos:start="249:40" pos:end="249:40"><name pos:start="249:40" pos:end="249:40">s</name></expr></argument>, <argument pos:start="249:43" pos:end="249:44"><expr pos:start="249:43" pos:end="249:44"><name pos:start="249:43" pos:end="249:44">rs</name></expr></argument>, <argument pos:start="249:47" pos:end="249:48"><expr pos:start="249:47" pos:end="249:48"><literal type="number" pos:start="249:47" pos:end="249:48">15</literal></expr></argument>, <argument pos:start="249:51" pos:end="249:54"><expr pos:start="249:51" pos:end="249:54"><name pos:start="249:51" pos:end="249:54">addr</name></expr></argument>, <argument pos:start="249:57" pos:end="249:57"><expr pos:start="249:57" pos:end="249:57"><literal type="number" pos:start="249:57" pos:end="249:57">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="251:19" pos:end="255:17">else <block pos:start="251:24" pos:end="255:17">{<block_content pos:start="253:21" pos:end="253:64">

                    <expr_stmt pos:start="253:21" pos:end="253:64"><expr pos:start="253:21" pos:end="253:63"><call pos:start="253:21" pos:end="253:63"><name pos:start="253:21" pos:end="253:39">gen_store_exclusive</name><argument_list pos:start="253:40" pos:end="253:63">(<argument pos:start="253:41" pos:end="253:41"><expr pos:start="253:41" pos:end="253:41"><name pos:start="253:41" pos:end="253:41">s</name></expr></argument>, <argument pos:start="253:44" pos:end="253:45"><expr pos:start="253:44" pos:end="253:45"><name pos:start="253:44" pos:end="253:45">rd</name></expr></argument>, <argument pos:start="253:48" pos:end="253:49"><expr pos:start="253:48" pos:end="253:49"><name pos:start="253:48" pos:end="253:49">rs</name></expr></argument>, <argument pos:start="253:52" pos:end="253:53"><expr pos:start="253:52" pos:end="253:53"><literal type="number" pos:start="253:52" pos:end="253:53">15</literal></expr></argument>, <argument pos:start="253:56" pos:end="253:59"><expr pos:start="253:56" pos:end="253:59"><name pos:start="253:56" pos:end="253:59">addr</name></expr></argument>, <argument pos:start="253:62" pos:end="253:62"><expr pos:start="253:62" pos:end="253:62"><literal type="number" pos:start="253:62" pos:end="253:62">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:40"><expr pos:start="257:17" pos:end="257:39"><call pos:start="257:17" pos:end="257:39"><name pos:start="257:17" pos:end="257:33">tcg_temp_free_i32</name><argument_list pos:start="257:34" pos:end="257:39">(<argument pos:start="257:35" pos:end="257:38"><expr pos:start="257:35" pos:end="257:38"><name pos:start="257:35" pos:end="257:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="259:15" pos:end="309:13">else if <condition pos:start="259:23" pos:end="259:46">(<expr pos:start="259:24" pos:end="259:45"><operator pos:start="259:24" pos:end="259:24">(</operator><name pos:start="259:25" pos:end="259:28">insn</name> <operator pos:start="259:30" pos:end="259:30">&amp;</operator> <operator pos:start="259:32" pos:end="259:32">(</operator><literal type="number" pos:start="259:33" pos:end="259:33">7</literal> <operator pos:start="259:35" pos:end="259:36">&lt;&lt;</operator> <literal type="number" pos:start="259:38" pos:end="259:38">5</literal><operator pos:start="259:39" pos:end="259:39">)</operator><operator pos:start="259:40" pos:end="259:40">)</operator> <operator pos:start="259:42" pos:end="259:43">==</operator> <literal type="number" pos:start="259:45" pos:end="259:45">0</literal></expr>)</condition> <block pos:start="259:48" pos:end="309:13">{<block_content pos:start="263:17" pos:end="307:38">

                <comment type="block" pos:start="261:17" pos:end="261:36">/* Table Branch.  */</comment>

                <if_stmt pos:start="263:17" pos:end="273:17"><if pos:start="263:17" pos:end="269:17">if <condition pos:start="263:20" pos:end="263:29">(<expr pos:start="263:21" pos:end="263:28"><name pos:start="263:21" pos:end="263:22">rn</name> <operator pos:start="263:24" pos:end="263:25">==</operator> <literal type="number" pos:start="263:27" pos:end="263:28">15</literal></expr>)</condition> <block pos:start="263:31" pos:end="269:17">{<block_content pos:start="265:21" pos:end="267:50">

                    <expr_stmt pos:start="265:21" pos:end="265:46"><expr pos:start="265:21" pos:end="265:45"><name pos:start="265:21" pos:end="265:24">addr</name> <operator pos:start="265:26" pos:end="265:26">=</operator> <call pos:start="265:28" pos:end="265:45"><name pos:start="265:28" pos:end="265:43">tcg_temp_new_i32</name><argument_list pos:start="265:44" pos:end="265:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:50"><expr pos:start="267:21" pos:end="267:49"><call pos:start="267:21" pos:end="267:49"><name pos:start="267:21" pos:end="267:36">tcg_gen_movi_i32</name><argument_list pos:start="267:37" pos:end="267:49">(<argument pos:start="267:38" pos:end="267:41"><expr pos:start="267:38" pos:end="267:41"><name pos:start="267:38" pos:end="267:41">addr</name></expr></argument>, <argument pos:start="267:44" pos:end="267:48"><expr pos:start="267:44" pos:end="267:48"><name pos:start="267:44" pos:end="267:48"><name pos:start="267:44" pos:end="267:44">s</name><operator pos:start="267:45" pos:end="267:46">-&gt;</operator><name pos:start="267:47" pos:end="267:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="269:19" pos:end="273:17">else <block pos:start="269:24" pos:end="273:17">{<block_content pos:start="271:21" pos:end="271:43">

                    <expr_stmt pos:start="271:21" pos:end="271:43"><expr pos:start="271:21" pos:end="271:42"><name pos:start="271:21" pos:end="271:24">addr</name> <operator pos:start="271:26" pos:end="271:26">=</operator> <call pos:start="271:28" pos:end="271:42"><name pos:start="271:28" pos:end="271:35">load_reg</name><argument_list pos:start="271:36" pos:end="271:42">(<argument pos:start="271:37" pos:end="271:37"><expr pos:start="271:37" pos:end="271:37"><name pos:start="271:37" pos:end="271:37">s</name></expr></argument>, <argument pos:start="271:40" pos:end="271:41"><expr pos:start="271:40" pos:end="271:41"><name pos:start="271:40" pos:end="271:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:38"><expr pos:start="275:17" pos:end="275:37"><name pos:start="275:17" pos:end="275:19">tmp</name> <operator pos:start="275:21" pos:end="275:21">=</operator> <call pos:start="275:23" pos:end="275:37"><name pos:start="275:23" pos:end="275:30">load_reg</name><argument_list pos:start="275:31" pos:end="275:37">(<argument pos:start="275:32" pos:end="275:32"><expr pos:start="275:32" pos:end="275:32"><name pos:start="275:32" pos:end="275:32">s</name></expr></argument>, <argument pos:start="275:35" pos:end="275:36"><expr pos:start="275:35" pos:end="275:36"><name pos:start="275:35" pos:end="275:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:49"><expr pos:start="277:17" pos:end="277:48"><call pos:start="277:17" pos:end="277:48"><name pos:start="277:17" pos:end="277:31">tcg_gen_add_i32</name><argument_list pos:start="277:32" pos:end="277:48">(<argument pos:start="277:33" pos:end="277:36"><expr pos:start="277:33" pos:end="277:36"><name pos:start="277:33" pos:end="277:36">addr</name></expr></argument>, <argument pos:start="277:39" pos:end="277:42"><expr pos:start="277:39" pos:end="277:42"><name pos:start="277:39" pos:end="277:42">addr</name></expr></argument>, <argument pos:start="277:45" pos:end="277:47"><expr pos:start="277:45" pos:end="277:47"><name pos:start="277:45" pos:end="277:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="279:17" pos:end="299:17"><if pos:start="279:17" pos:end="291:17">if <condition pos:start="279:20" pos:end="279:36">(<expr pos:start="279:21" pos:end="279:35"><name pos:start="279:21" pos:end="279:24">insn</name> <operator pos:start="279:26" pos:end="279:26">&amp;</operator> <operator pos:start="279:28" pos:end="279:28">(</operator><literal type="number" pos:start="279:29" pos:end="279:29">1</literal> <operator pos:start="279:31" pos:end="279:32">&lt;&lt;</operator> <literal type="number" pos:start="279:34" pos:end="279:34">4</literal><operator pos:start="279:35" pos:end="279:35">)</operator></expr>)</condition> <block pos:start="279:38" pos:end="291:17">{<block_content pos:start="283:21" pos:end="289:62">

                    <comment type="block" pos:start="281:21" pos:end="281:29">/* tbh */</comment>

                    <expr_stmt pos:start="283:21" pos:end="283:53"><expr pos:start="283:21" pos:end="283:52"><call pos:start="283:21" pos:end="283:52"><name pos:start="283:21" pos:end="283:35">tcg_gen_add_i32</name><argument_list pos:start="283:36" pos:end="283:52">(<argument pos:start="283:37" pos:end="283:40"><expr pos:start="283:37" pos:end="283:40"><name pos:start="283:37" pos:end="283:40">addr</name></expr></argument>, <argument pos:start="283:43" pos:end="283:46"><expr pos:start="283:43" pos:end="283:46"><name pos:start="283:43" pos:end="283:46">addr</name></expr></argument>, <argument pos:start="283:49" pos:end="283:51"><expr pos:start="283:49" pos:end="283:51"><name pos:start="283:49" pos:end="283:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="285:21" pos:end="285:43"><expr pos:start="285:21" pos:end="285:42"><call pos:start="285:21" pos:end="285:42"><name pos:start="285:21" pos:end="285:37">tcg_temp_free_i32</name><argument_list pos:start="285:38" pos:end="285:42">(<argument pos:start="285:39" pos:end="285:41"><expr pos:start="285:39" pos:end="285:41"><name pos:start="285:39" pos:end="285:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="287:21" pos:end="287:45"><expr pos:start="287:21" pos:end="287:44"><name pos:start="287:21" pos:end="287:23">tmp</name> <operator pos:start="287:25" pos:end="287:25">=</operator> <call pos:start="287:27" pos:end="287:44"><name pos:start="287:27" pos:end="287:42">tcg_temp_new_i32</name><argument_list pos:start="287:43" pos:end="287:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="289:21" pos:end="289:62"><expr pos:start="289:21" pos:end="289:61"><call pos:start="289:21" pos:end="289:61"><name pos:start="289:21" pos:end="289:38">tcg_gen_qemu_ld16u</name><argument_list pos:start="289:39" pos:end="289:61">(<argument pos:start="289:40" pos:end="289:42"><expr pos:start="289:40" pos:end="289:42"><name pos:start="289:40" pos:end="289:42">tmp</name></expr></argument>, <argument pos:start="289:45" pos:end="289:48"><expr pos:start="289:45" pos:end="289:48"><name pos:start="289:45" pos:end="289:48">addr</name></expr></argument>, <argument pos:start="289:51" pos:end="289:60"><expr pos:start="289:51" pos:end="289:60"><call pos:start="289:51" pos:end="289:60"><name pos:start="289:51" pos:end="289:57">IS_USER</name><argument_list pos:start="289:58" pos:end="289:60">(<argument pos:start="289:59" pos:end="289:59"><expr pos:start="289:59" pos:end="289:59"><name pos:start="289:59" pos:end="289:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="291:19" pos:end="299:17">else <block pos:start="291:24" pos:end="299:17">{<block_content pos:start="293:21" pos:end="297:61"> <comment type="block" pos:start="291:26" pos:end="291:34">/* tbb */</comment>

                    <expr_stmt pos:start="293:21" pos:end="293:43"><expr pos:start="293:21" pos:end="293:42"><call pos:start="293:21" pos:end="293:42"><name pos:start="293:21" pos:end="293:37">tcg_temp_free_i32</name><argument_list pos:start="293:38" pos:end="293:42">(<argument pos:start="293:39" pos:end="293:41"><expr pos:start="293:39" pos:end="293:41"><name pos:start="293:39" pos:end="293:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="295:21" pos:end="295:45"><expr pos:start="295:21" pos:end="295:44"><name pos:start="295:21" pos:end="295:23">tmp</name> <operator pos:start="295:25" pos:end="295:25">=</operator> <call pos:start="295:27" pos:end="295:44"><name pos:start="295:27" pos:end="295:42">tcg_temp_new_i32</name><argument_list pos:start="295:43" pos:end="295:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="297:21" pos:end="297:61"><expr pos:start="297:21" pos:end="297:60"><call pos:start="297:21" pos:end="297:60"><name pos:start="297:21" pos:end="297:37">tcg_gen_qemu_ld8u</name><argument_list pos:start="297:38" pos:end="297:60">(<argument pos:start="297:39" pos:end="297:41"><expr pos:start="297:39" pos:end="297:41"><name pos:start="297:39" pos:end="297:41">tmp</name></expr></argument>, <argument pos:start="297:44" pos:end="297:47"><expr pos:start="297:44" pos:end="297:47"><name pos:start="297:44" pos:end="297:47">addr</name></expr></argument>, <argument pos:start="297:50" pos:end="297:59"><expr pos:start="297:50" pos:end="297:59"><call pos:start="297:50" pos:end="297:59"><name pos:start="297:50" pos:end="297:56">IS_USER</name><argument_list pos:start="297:57" pos:end="297:59">(<argument pos:start="297:58" pos:end="297:58"><expr pos:start="297:58" pos:end="297:58"><name pos:start="297:58" pos:end="297:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:40"><expr pos:start="301:17" pos:end="301:39"><call pos:start="301:17" pos:end="301:39"><name pos:start="301:17" pos:end="301:33">tcg_temp_free_i32</name><argument_list pos:start="301:34" pos:end="301:39">(<argument pos:start="301:35" pos:end="301:38"><expr pos:start="301:35" pos:end="301:38"><name pos:start="301:35" pos:end="301:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:46"><expr pos:start="303:17" pos:end="303:45"><call pos:start="303:17" pos:end="303:45"><name pos:start="303:17" pos:end="303:32">tcg_gen_shli_i32</name><argument_list pos:start="303:33" pos:end="303:45">(<argument pos:start="303:34" pos:end="303:36"><expr pos:start="303:34" pos:end="303:36"><name pos:start="303:34" pos:end="303:36">tmp</name></expr></argument>, <argument pos:start="303:39" pos:end="303:41"><expr pos:start="303:39" pos:end="303:41"><name pos:start="303:39" pos:end="303:41">tmp</name></expr></argument>, <argument pos:start="303:44" pos:end="303:44"><expr pos:start="303:44" pos:end="303:44"><literal type="number" pos:start="303:44" pos:end="303:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:50"><expr pos:start="305:17" pos:end="305:49"><call pos:start="305:17" pos:end="305:49"><name pos:start="305:17" pos:end="305:32">tcg_gen_addi_i32</name><argument_list pos:start="305:33" pos:end="305:49">(<argument pos:start="305:34" pos:end="305:36"><expr pos:start="305:34" pos:end="305:36"><name pos:start="305:34" pos:end="305:36">tmp</name></expr></argument>, <argument pos:start="305:39" pos:end="305:41"><expr pos:start="305:39" pos:end="305:41"><name pos:start="305:39" pos:end="305:41">tmp</name></expr></argument>, <argument pos:start="305:44" pos:end="305:48"><expr pos:start="305:44" pos:end="305:48"><name pos:start="305:44" pos:end="305:48"><name pos:start="305:44" pos:end="305:44">s</name><operator pos:start="305:45" pos:end="305:46">-&gt;</operator><name pos:start="305:47" pos:end="305:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:38"><expr pos:start="307:17" pos:end="307:37"><call pos:start="307:17" pos:end="307:37"><name pos:start="307:17" pos:end="307:25">store_reg</name><argument_list pos:start="307:26" pos:end="307:37">(<argument pos:start="307:27" pos:end="307:27"><expr pos:start="307:27" pos:end="307:27"><name pos:start="307:27" pos:end="307:27">s</name></expr></argument>, <argument pos:start="307:30" pos:end="307:31"><expr pos:start="307:30" pos:end="307:31"><literal type="number" pos:start="307:30" pos:end="307:31">15</literal></expr></argument>, <argument pos:start="307:34" pos:end="307:36"><expr pos:start="307:34" pos:end="307:36"><name pos:start="307:34" pos:end="307:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="309:15" pos:end="441:13">else <block pos:start="309:20" pos:end="441:13">{<block_content pos:start="311:17" pos:end="439:40">

                <decl_stmt pos:start="311:17" pos:end="311:44"><decl pos:start="311:17" pos:end="311:43"><type pos:start="311:17" pos:end="311:19"><name pos:start="311:17" pos:end="311:19">int</name></type> <name pos:start="311:21" pos:end="311:23">op2</name> <init pos:start="311:25" pos:end="311:43">= <expr pos:start="311:27" pos:end="311:43"><operator pos:start="311:27" pos:end="311:27">(</operator><name pos:start="311:28" pos:end="311:31">insn</name> <operator pos:start="311:33" pos:end="311:34">&gt;&gt;</operator> <literal type="number" pos:start="311:36" pos:end="311:36">6</literal><operator pos:start="311:37" pos:end="311:37">)</operator> <operator pos:start="311:39" pos:end="311:39">&amp;</operator> <literal type="number" pos:start="311:41" pos:end="311:43">0x3</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:39"><expr pos:start="313:17" pos:end="313:38"><name pos:start="313:17" pos:end="313:18">op</name> <operator pos:start="313:20" pos:end="313:20">=</operator> <operator pos:start="313:22" pos:end="313:22">(</operator><name pos:start="313:23" pos:end="313:26">insn</name> <operator pos:start="313:28" pos:end="313:29">&gt;&gt;</operator> <literal type="number" pos:start="313:31" pos:end="313:31">4</literal><operator pos:start="313:32" pos:end="313:32">)</operator> <operator pos:start="313:34" pos:end="313:34">&amp;</operator> <literal type="number" pos:start="313:36" pos:end="313:38">0x3</literal></expr>;</expr_stmt>

                <switch pos:start="315:17" pos:end="355:17">switch <condition pos:start="315:24" pos:end="315:28">(<expr pos:start="315:25" pos:end="315:27"><name pos:start="315:25" pos:end="315:27">op2</name></expr>)</condition> <block pos:start="315:30" pos:end="355:17">{<block_content pos:start="317:17" pos:end="353:26">

                <case pos:start="317:17" pos:end="317:23">case <expr pos:start="317:22" pos:end="317:22"><literal type="number" pos:start="317:22" pos:end="317:22">0</literal></expr>:</case>

                    <goto pos:start="319:21" pos:end="319:36">goto <name pos:start="319:26" pos:end="319:35">illegal_op</name>;</goto>

                <case pos:start="321:17" pos:end="321:23">case <expr pos:start="321:22" pos:end="321:22"><literal type="number" pos:start="321:22" pos:end="321:22">1</literal></expr>:</case>

                    <comment type="block" pos:start="323:21" pos:end="323:71">/* Load/store exclusive byte/halfword/doubleword */</comment>

                    <if_stmt pos:start="325:21" pos:end="329:21"><if pos:start="325:21" pos:end="329:21">if <condition pos:start="325:24" pos:end="325:32">(<expr pos:start="325:25" pos:end="325:31"><name pos:start="325:25" pos:end="325:26">op</name> <operator pos:start="325:28" pos:end="325:29">==</operator> <literal type="number" pos:start="325:31" pos:end="325:31">2</literal></expr>)</condition> <block pos:start="325:34" pos:end="329:21">{<block_content pos:start="327:25" pos:end="327:40">

                        <goto pos:start="327:25" pos:end="327:40">goto <name pos:start="327:30" pos:end="327:39">illegal_op</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="331:21" pos:end="331:28"><expr pos:start="331:21" pos:end="331:27"><call pos:start="331:21" pos:end="331:27"><name pos:start="331:21" pos:end="331:24">ARCH</name><argument_list pos:start="331:25" pos:end="331:27">(<argument pos:start="331:26" pos:end="331:26"><expr pos:start="331:26" pos:end="331:26"><literal type="number" pos:start="331:26" pos:end="331:26">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="333:21" pos:end="333:26">break;</break>

                <case pos:start="335:17" pos:end="335:23">case <expr pos:start="335:22" pos:end="335:22"><literal type="number" pos:start="335:22" pos:end="335:22">2</literal></expr>:</case>

                    <comment type="block" pos:start="337:21" pos:end="337:52">/* Load-acquire/store-release */</comment>

                    <if_stmt pos:start="339:21" pos:end="343:21"><if pos:start="339:21" pos:end="343:21">if <condition pos:start="339:24" pos:end="339:32">(<expr pos:start="339:25" pos:end="339:31"><name pos:start="339:25" pos:end="339:26">op</name> <operator pos:start="339:28" pos:end="339:29">==</operator> <literal type="number" pos:start="339:31" pos:end="339:31">3</literal></expr>)</condition> <block pos:start="339:34" pos:end="343:21">{<block_content pos:start="341:25" pos:end="341:40">

                        <goto pos:start="341:25" pos:end="341:40">goto <name pos:start="341:30" pos:end="341:39">illegal_op</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="345:21" pos:end="345:38">/* Fall through */</comment>

                <case pos:start="347:17" pos:end="347:23">case <expr pos:start="347:22" pos:end="347:22"><literal type="number" pos:start="347:22" pos:end="347:22">3</literal></expr>:</case>

                    <comment type="block" pos:start="349:21" pos:end="349:62">/* Load-acquire/store-release exclusive */</comment>

                    <expr_stmt pos:start="351:21" pos:end="351:28"><expr pos:start="351:21" pos:end="351:27"><call pos:start="351:21" pos:end="351:27"><name pos:start="351:21" pos:end="351:24">ARCH</name><argument_list pos:start="351:25" pos:end="351:27">(<argument pos:start="351:26" pos:end="351:26"><expr pos:start="351:26" pos:end="351:26"><literal type="number" pos:start="351:26" pos:end="351:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="353:21" pos:end="353:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="357:17" pos:end="357:48"><expr pos:start="357:17" pos:end="357:47"><name pos:start="357:17" pos:end="357:20">addr</name> <operator pos:start="357:22" pos:end="357:22">=</operator> <call pos:start="357:24" pos:end="357:47"><name pos:start="357:24" pos:end="357:45">tcg_temp_local_new_i32</name><argument_list pos:start="357:46" pos:end="357:47">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:42"><expr pos:start="359:17" pos:end="359:41"><call pos:start="359:17" pos:end="359:41"><name pos:start="359:17" pos:end="359:28">load_reg_var</name><argument_list pos:start="359:29" pos:end="359:41">(<argument pos:start="359:30" pos:end="359:30"><expr pos:start="359:30" pos:end="359:30"><name pos:start="359:30" pos:end="359:30">s</name></expr></argument>, <argument pos:start="359:33" pos:end="359:36"><expr pos:start="359:33" pos:end="359:36"><name pos:start="359:33" pos:end="359:36">addr</name></expr></argument>, <argument pos:start="359:39" pos:end="359:40"><expr pos:start="359:39" pos:end="359:40"><name pos:start="359:39" pos:end="359:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="361:17" pos:end="437:17"><if pos:start="361:17" pos:end="429:17">if <condition pos:start="361:20" pos:end="361:31">(<expr pos:start="361:21" pos:end="361:30"><operator pos:start="361:21" pos:end="361:21">!</operator><operator pos:start="361:22" pos:end="361:22">(</operator><name pos:start="361:23" pos:end="361:25">op2</name> <operator pos:start="361:27" pos:end="361:27">&amp;</operator> <literal type="number" pos:start="361:29" pos:end="361:29">1</literal><operator pos:start="361:30" pos:end="361:30">)</operator></expr>)</condition> <block pos:start="361:33" pos:end="429:17">{<block_content pos:start="363:21" pos:end="427:21">

                    <if_stmt pos:start="363:21" pos:end="427:21"><if pos:start="363:21" pos:end="395:21">if <condition pos:start="363:24" pos:end="363:41">(<expr pos:start="363:25" pos:end="363:40"><name pos:start="363:25" pos:end="363:28">insn</name> <operator pos:start="363:30" pos:end="363:30">&amp;</operator> <operator pos:start="363:32" pos:end="363:32">(</operator><literal type="number" pos:start="363:33" pos:end="363:33">1</literal> <operator pos:start="363:35" pos:end="363:36">&lt;&lt;</operator> <literal type="number" pos:start="363:38" pos:end="363:39">20</literal><operator pos:start="363:40" pos:end="363:40">)</operator></expr>)</condition> <block pos:start="363:43" pos:end="395:21">{<block_content pos:start="365:25" pos:end="393:46">

                        <expr_stmt pos:start="365:25" pos:end="365:49"><expr pos:start="365:25" pos:end="365:48"><name pos:start="365:25" pos:end="365:27">tmp</name> <operator pos:start="365:29" pos:end="365:29">=</operator> <call pos:start="365:31" pos:end="365:48"><name pos:start="365:31" pos:end="365:46">tcg_temp_new_i32</name><argument_list pos:start="365:47" pos:end="365:48">()</argument_list></call></expr>;</expr_stmt>

                        <switch pos:start="367:25" pos:end="391:25">switch <condition pos:start="367:32" pos:end="367:35">(<expr pos:start="367:33" pos:end="367:34"><name pos:start="367:33" pos:end="367:34">op</name></expr>)</condition> <block pos:start="367:37" pos:end="391:25">{<block_content pos:start="369:25" pos:end="389:36">

                        <case pos:start="369:25" pos:end="369:31">case <expr pos:start="369:30" pos:end="369:30"><literal type="number" pos:start="369:30" pos:end="369:30">0</literal></expr>:</case> <comment type="block" pos:start="369:33" pos:end="369:42">/* ldab */</comment>

                            <expr_stmt pos:start="371:29" pos:end="371:69"><expr pos:start="371:29" pos:end="371:68"><call pos:start="371:29" pos:end="371:68"><name pos:start="371:29" pos:end="371:45">tcg_gen_qemu_ld8u</name><argument_list pos:start="371:46" pos:end="371:68">(<argument pos:start="371:47" pos:end="371:49"><expr pos:start="371:47" pos:end="371:49"><name pos:start="371:47" pos:end="371:49">tmp</name></expr></argument>, <argument pos:start="371:52" pos:end="371:55"><expr pos:start="371:52" pos:end="371:55"><name pos:start="371:52" pos:end="371:55">addr</name></expr></argument>, <argument pos:start="371:58" pos:end="371:67"><expr pos:start="371:58" pos:end="371:67"><call pos:start="371:58" pos:end="371:67"><name pos:start="371:58" pos:end="371:64">IS_USER</name><argument_list pos:start="371:65" pos:end="371:67">(<argument pos:start="371:66" pos:end="371:66"><expr pos:start="371:66" pos:end="371:66"><name pos:start="371:66" pos:end="371:66">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="373:29" pos:end="373:34">break;</break>

                        <case pos:start="375:25" pos:end="375:31">case <expr pos:start="375:30" pos:end="375:30"><literal type="number" pos:start="375:30" pos:end="375:30">1</literal></expr>:</case> <comment type="block" pos:start="375:33" pos:end="375:42">/* ldah */</comment>

                            <expr_stmt pos:start="377:29" pos:end="377:70"><expr pos:start="377:29" pos:end="377:69"><call pos:start="377:29" pos:end="377:69"><name pos:start="377:29" pos:end="377:46">tcg_gen_qemu_ld16u</name><argument_list pos:start="377:47" pos:end="377:69">(<argument pos:start="377:48" pos:end="377:50"><expr pos:start="377:48" pos:end="377:50"><name pos:start="377:48" pos:end="377:50">tmp</name></expr></argument>, <argument pos:start="377:53" pos:end="377:56"><expr pos:start="377:53" pos:end="377:56"><name pos:start="377:53" pos:end="377:56">addr</name></expr></argument>, <argument pos:start="377:59" pos:end="377:68"><expr pos:start="377:59" pos:end="377:68"><call pos:start="377:59" pos:end="377:68"><name pos:start="377:59" pos:end="377:65">IS_USER</name><argument_list pos:start="377:66" pos:end="377:68">(<argument pos:start="377:67" pos:end="377:67"><expr pos:start="377:67" pos:end="377:67"><name pos:start="377:67" pos:end="377:67">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="379:29" pos:end="379:34">break;</break>

                        <case pos:start="381:25" pos:end="381:31">case <expr pos:start="381:30" pos:end="381:30"><literal type="number" pos:start="381:30" pos:end="381:30">2</literal></expr>:</case> <comment type="block" pos:start="381:33" pos:end="381:41">/* lda */</comment>

                            <expr_stmt pos:start="383:29" pos:end="383:70"><expr pos:start="383:29" pos:end="383:69"><call pos:start="383:29" pos:end="383:69"><name pos:start="383:29" pos:end="383:46">tcg_gen_qemu_ld32u</name><argument_list pos:start="383:47" pos:end="383:69">(<argument pos:start="383:48" pos:end="383:50"><expr pos:start="383:48" pos:end="383:50"><name pos:start="383:48" pos:end="383:50">tmp</name></expr></argument>, <argument pos:start="383:53" pos:end="383:56"><expr pos:start="383:53" pos:end="383:56"><name pos:start="383:53" pos:end="383:56">addr</name></expr></argument>, <argument pos:start="383:59" pos:end="383:68"><expr pos:start="383:59" pos:end="383:68"><call pos:start="383:59" pos:end="383:68"><name pos:start="383:59" pos:end="383:65">IS_USER</name><argument_list pos:start="383:66" pos:end="383:68">(<argument pos:start="383:67" pos:end="383:67"><expr pos:start="383:67" pos:end="383:67"><name pos:start="383:67" pos:end="383:67">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="385:29" pos:end="385:34">break;</break>

                        <default pos:start="387:25" pos:end="387:32">default:</default>

                            <expr_stmt pos:start="389:29" pos:end="389:36"><expr pos:start="389:29" pos:end="389:35"><call pos:start="389:29" pos:end="389:35"><name pos:start="389:29" pos:end="389:33">abort</name><argument_list pos:start="389:34" pos:end="389:35">()</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></switch>

                        <expr_stmt pos:start="393:25" pos:end="393:46"><expr pos:start="393:25" pos:end="393:45"><call pos:start="393:25" pos:end="393:45"><name pos:start="393:25" pos:end="393:33">store_reg</name><argument_list pos:start="393:34" pos:end="393:45">(<argument pos:start="393:35" pos:end="393:35"><expr pos:start="393:35" pos:end="393:35"><name pos:start="393:35" pos:end="393:35">s</name></expr></argument>, <argument pos:start="393:38" pos:end="393:39"><expr pos:start="393:38" pos:end="393:39"><name pos:start="393:38" pos:end="393:39">rs</name></expr></argument>, <argument pos:start="393:42" pos:end="393:44"><expr pos:start="393:42" pos:end="393:44"><name pos:start="393:42" pos:end="393:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="395:23" pos:end="427:21">else <block pos:start="395:28" pos:end="427:21">{<block_content pos:start="397:25" pos:end="425:47">

                        <expr_stmt pos:start="397:25" pos:end="397:46"><expr pos:start="397:25" pos:end="397:45"><name pos:start="397:25" pos:end="397:27">tmp</name> <operator pos:start="397:29" pos:end="397:29">=</operator> <call pos:start="397:31" pos:end="397:45"><name pos:start="397:31" pos:end="397:38">load_reg</name><argument_list pos:start="397:39" pos:end="397:45">(<argument pos:start="397:40" pos:end="397:40"><expr pos:start="397:40" pos:end="397:40"><name pos:start="397:40" pos:end="397:40">s</name></expr></argument>, <argument pos:start="397:43" pos:end="397:44"><expr pos:start="397:43" pos:end="397:44"><name pos:start="397:43" pos:end="397:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <switch pos:start="399:25" pos:end="423:25">switch <condition pos:start="399:32" pos:end="399:35">(<expr pos:start="399:33" pos:end="399:34"><name pos:start="399:33" pos:end="399:34">op</name></expr>)</condition> <block pos:start="399:37" pos:end="423:25">{<block_content pos:start="401:25" pos:end="421:36">

                        <case pos:start="401:25" pos:end="401:31">case <expr pos:start="401:30" pos:end="401:30"><literal type="number" pos:start="401:30" pos:end="401:30">0</literal></expr>:</case> <comment type="block" pos:start="401:33" pos:end="401:42">/* stlb */</comment>

                            <expr_stmt pos:start="403:29" pos:end="403:68"><expr pos:start="403:29" pos:end="403:67"><call pos:start="403:29" pos:end="403:67"><name pos:start="403:29" pos:end="403:44">tcg_gen_qemu_st8</name><argument_list pos:start="403:45" pos:end="403:67">(<argument pos:start="403:46" pos:end="403:48"><expr pos:start="403:46" pos:end="403:48"><name pos:start="403:46" pos:end="403:48">tmp</name></expr></argument>, <argument pos:start="403:51" pos:end="403:54"><expr pos:start="403:51" pos:end="403:54"><name pos:start="403:51" pos:end="403:54">addr</name></expr></argument>, <argument pos:start="403:57" pos:end="403:66"><expr pos:start="403:57" pos:end="403:66"><call pos:start="403:57" pos:end="403:66"><name pos:start="403:57" pos:end="403:63">IS_USER</name><argument_list pos:start="403:64" pos:end="403:66">(<argument pos:start="403:65" pos:end="403:65"><expr pos:start="403:65" pos:end="403:65"><name pos:start="403:65" pos:end="403:65">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="405:29" pos:end="405:34">break;</break>

                        <case pos:start="407:25" pos:end="407:31">case <expr pos:start="407:30" pos:end="407:30"><literal type="number" pos:start="407:30" pos:end="407:30">1</literal></expr>:</case> <comment type="block" pos:start="407:33" pos:end="407:42">/* stlh */</comment>

                            <expr_stmt pos:start="409:29" pos:end="409:69"><expr pos:start="409:29" pos:end="409:68"><call pos:start="409:29" pos:end="409:68"><name pos:start="409:29" pos:end="409:45">tcg_gen_qemu_st16</name><argument_list pos:start="409:46" pos:end="409:68">(<argument pos:start="409:47" pos:end="409:49"><expr pos:start="409:47" pos:end="409:49"><name pos:start="409:47" pos:end="409:49">tmp</name></expr></argument>, <argument pos:start="409:52" pos:end="409:55"><expr pos:start="409:52" pos:end="409:55"><name pos:start="409:52" pos:end="409:55">addr</name></expr></argument>, <argument pos:start="409:58" pos:end="409:67"><expr pos:start="409:58" pos:end="409:67"><call pos:start="409:58" pos:end="409:67"><name pos:start="409:58" pos:end="409:64">IS_USER</name><argument_list pos:start="409:65" pos:end="409:67">(<argument pos:start="409:66" pos:end="409:66"><expr pos:start="409:66" pos:end="409:66"><name pos:start="409:66" pos:end="409:66">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="411:29" pos:end="411:34">break;</break>

                        <case pos:start="413:25" pos:end="413:31">case <expr pos:start="413:30" pos:end="413:30"><literal type="number" pos:start="413:30" pos:end="413:30">2</literal></expr>:</case> <comment type="block" pos:start="413:33" pos:end="413:41">/* stl */</comment>

                            <expr_stmt pos:start="415:29" pos:end="415:69"><expr pos:start="415:29" pos:end="415:68"><call pos:start="415:29" pos:end="415:68"><name pos:start="415:29" pos:end="415:45">tcg_gen_qemu_st32</name><argument_list pos:start="415:46" pos:end="415:68">(<argument pos:start="415:47" pos:end="415:49"><expr pos:start="415:47" pos:end="415:49"><name pos:start="415:47" pos:end="415:49">tmp</name></expr></argument>, <argument pos:start="415:52" pos:end="415:55"><expr pos:start="415:52" pos:end="415:55"><name pos:start="415:52" pos:end="415:55">addr</name></expr></argument>, <argument pos:start="415:58" pos:end="415:67"><expr pos:start="415:58" pos:end="415:67"><call pos:start="415:58" pos:end="415:67"><name pos:start="415:58" pos:end="415:64">IS_USER</name><argument_list pos:start="415:65" pos:end="415:67">(<argument pos:start="415:66" pos:end="415:66"><expr pos:start="415:66" pos:end="415:66"><name pos:start="415:66" pos:end="415:66">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="417:29" pos:end="417:34">break;</break>

                        <default pos:start="419:25" pos:end="419:32">default:</default>

                            <expr_stmt pos:start="421:29" pos:end="421:36"><expr pos:start="421:29" pos:end="421:35"><call pos:start="421:29" pos:end="421:35"><name pos:start="421:29" pos:end="421:33">abort</name><argument_list pos:start="421:34" pos:end="421:35">()</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></switch>

                        <expr_stmt pos:start="425:25" pos:end="425:47"><expr pos:start="425:25" pos:end="425:46"><call pos:start="425:25" pos:end="425:46"><name pos:start="425:25" pos:end="425:41">tcg_temp_free_i32</name><argument_list pos:start="425:42" pos:end="425:46">(<argument pos:start="425:43" pos:end="425:45"><expr pos:start="425:43" pos:end="425:45"><name pos:start="425:43" pos:end="425:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="429:19" pos:end="433:17">else if <condition pos:start="429:27" pos:end="429:44">(<expr pos:start="429:28" pos:end="429:43"><name pos:start="429:28" pos:end="429:31">insn</name> <operator pos:start="429:33" pos:end="429:33">&amp;</operator> <operator pos:start="429:35" pos:end="429:35">(</operator><literal type="number" pos:start="429:36" pos:end="429:36">1</literal> <operator pos:start="429:38" pos:end="429:39">&lt;&lt;</operator> <literal type="number" pos:start="429:41" pos:end="429:42">20</literal><operator pos:start="429:43" pos:end="429:43">)</operator></expr>)</condition> <block pos:start="429:46" pos:end="433:17">{<block_content pos:start="431:21" pos:end="431:60">

                    <expr_stmt pos:start="431:21" pos:end="431:60"><expr pos:start="431:21" pos:end="431:59"><call pos:start="431:21" pos:end="431:59"><name pos:start="431:21" pos:end="431:38">gen_load_exclusive</name><argument_list pos:start="431:39" pos:end="431:59">(<argument pos:start="431:40" pos:end="431:40"><expr pos:start="431:40" pos:end="431:40"><name pos:start="431:40" pos:end="431:40">s</name></expr></argument>, <argument pos:start="431:43" pos:end="431:44"><expr pos:start="431:43" pos:end="431:44"><name pos:start="431:43" pos:end="431:44">rs</name></expr></argument>, <argument pos:start="431:47" pos:end="431:48"><expr pos:start="431:47" pos:end="431:48"><name pos:start="431:47" pos:end="431:48">rd</name></expr></argument>, <argument pos:start="431:51" pos:end="431:54"><expr pos:start="431:51" pos:end="431:54"><name pos:start="431:51" pos:end="431:54">addr</name></expr></argument>, <argument pos:start="431:57" pos:end="431:58"><expr pos:start="431:57" pos:end="431:58"><name pos:start="431:57" pos:end="431:58">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="433:19" pos:end="437:17">else <block pos:start="433:24" pos:end="437:17">{<block_content pos:start="435:21" pos:end="435:65">

                    <expr_stmt pos:start="435:21" pos:end="435:65"><expr pos:start="435:21" pos:end="435:64"><call pos:start="435:21" pos:end="435:64"><name pos:start="435:21" pos:end="435:39">gen_store_exclusive</name><argument_list pos:start="435:40" pos:end="435:64">(<argument pos:start="435:41" pos:end="435:41"><expr pos:start="435:41" pos:end="435:41"><name pos:start="435:41" pos:end="435:41">s</name></expr></argument>, <argument pos:start="435:44" pos:end="435:45"><expr pos:start="435:44" pos:end="435:45"><name pos:start="435:44" pos:end="435:45">rm</name></expr></argument>, <argument pos:start="435:48" pos:end="435:49"><expr pos:start="435:48" pos:end="435:49"><name pos:start="435:48" pos:end="435:49">rs</name></expr></argument>, <argument pos:start="435:52" pos:end="435:53"><expr pos:start="435:52" pos:end="435:53"><name pos:start="435:52" pos:end="435:53">rd</name></expr></argument>, <argument pos:start="435:56" pos:end="435:59"><expr pos:start="435:56" pos:end="435:59"><name pos:start="435:56" pos:end="435:59">addr</name></expr></argument>, <argument pos:start="435:62" pos:end="435:63"><expr pos:start="435:62" pos:end="435:63"><name pos:start="435:62" pos:end="435:63">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="439:17" pos:end="439:40"><expr pos:start="439:17" pos:end="439:39"><call pos:start="439:17" pos:end="439:39"><name pos:start="439:17" pos:end="439:33">tcg_temp_free_i32</name><argument_list pos:start="439:34" pos:end="439:39">(<argument pos:start="439:35" pos:end="439:38"><expr pos:start="439:35" pos:end="439:38"><name pos:start="439:35" pos:end="439:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="443:11" pos:end="621:9">else <block pos:start="443:16" pos:end="621:9">{<block_content pos:start="447:13" pos:end="619:13">

            <comment type="block" pos:start="445:13" pos:end="445:49">/* Load/store multiple, RFE, SRS.  */</comment>

            <if_stmt pos:start="447:13" pos:end="619:13"><if pos:start="447:13" pos:end="513:13">if <condition pos:start="447:16" pos:end="447:57">(<expr pos:start="447:17" pos:end="447:56"><operator pos:start="447:17" pos:end="447:17">(</operator><operator pos:start="447:18" pos:end="447:18">(</operator><name pos:start="447:19" pos:end="447:22">insn</name> <operator pos:start="447:24" pos:end="447:25">&gt;&gt;</operator> <literal type="number" pos:start="447:27" pos:end="447:28">23</literal><operator pos:start="447:29" pos:end="447:29">)</operator> <operator pos:start="447:31" pos:end="447:31">&amp;</operator> <literal type="number" pos:start="447:33" pos:end="447:33">1</literal><operator pos:start="447:34" pos:end="447:34">)</operator> <operator pos:start="447:36" pos:end="447:37">==</operator> <operator pos:start="447:39" pos:end="447:39">(</operator><operator pos:start="447:40" pos:end="447:40">(</operator><name pos:start="447:41" pos:end="447:44">insn</name> <operator pos:start="447:46" pos:end="447:47">&gt;&gt;</operator> <literal type="number" pos:start="447:49" pos:end="447:50">24</literal><operator pos:start="447:51" pos:end="447:51">)</operator> <operator pos:start="447:53" pos:end="447:53">&amp;</operator> <literal type="number" pos:start="447:55" pos:end="447:55">1</literal><operator pos:start="447:56" pos:end="447:56">)</operator></expr>)</condition> <block pos:start="447:59" pos:end="513:13">{<block_content pos:start="451:17" pos:end="511:17">

                <comment type="block" pos:start="449:17" pos:end="449:74">/* RFE, SRS: not available in user mode or on M profile */</comment>

                <if_stmt pos:start="451:17" pos:end="455:17"><if pos:start="451:17" pos:end="455:17">if <condition pos:start="451:20" pos:end="451:44">(<expr pos:start="451:21" pos:end="451:43"><call pos:start="451:21" pos:end="451:30"><name pos:start="451:21" pos:end="451:27">IS_USER</name><argument_list pos:start="451:28" pos:end="451:30">(<argument pos:start="451:29" pos:end="451:29"><expr pos:start="451:29" pos:end="451:29"><name pos:start="451:29" pos:end="451:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="451:32" pos:end="451:33">||</operator> <call pos:start="451:35" pos:end="451:43"><name pos:start="451:35" pos:end="451:38">IS_M</name><argument_list pos:start="451:39" pos:end="451:43">(<argument pos:start="451:40" pos:end="451:42"><expr pos:start="451:40" pos:end="451:42"><name pos:start="451:40" pos:end="451:42">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="451:46" pos:end="455:17">{<block_content pos:start="453:21" pos:end="453:36">

                    <goto pos:start="453:21" pos:end="453:36">goto <name pos:start="453:26" pos:end="453:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="457:17" pos:end="511:17"><if pos:start="457:17" pos:end="503:17">if <condition pos:start="457:20" pos:end="457:37">(<expr pos:start="457:21" pos:end="457:36"><name pos:start="457:21" pos:end="457:24">insn</name> <operator pos:start="457:26" pos:end="457:26">&amp;</operator> <operator pos:start="457:28" pos:end="457:28">(</operator><literal type="number" pos:start="457:29" pos:end="457:29">1</literal> <operator pos:start="457:31" pos:end="457:32">&lt;&lt;</operator> <literal type="number" pos:start="457:34" pos:end="457:35">20</literal><operator pos:start="457:36" pos:end="457:36">)</operator></expr>)</condition> <block pos:start="457:39" pos:end="503:17">{<block_content pos:start="461:21" pos:end="501:42">

                    <comment type="block" pos:start="459:21" pos:end="459:29">/* rfe */</comment>

                    <expr_stmt pos:start="461:21" pos:end="461:43"><expr pos:start="461:21" pos:end="461:42"><name pos:start="461:21" pos:end="461:24">addr</name> <operator pos:start="461:26" pos:end="461:26">=</operator> <call pos:start="461:28" pos:end="461:42"><name pos:start="461:28" pos:end="461:35">load_reg</name><argument_list pos:start="461:36" pos:end="461:42">(<argument pos:start="461:37" pos:end="461:37"><expr pos:start="461:37" pos:end="461:37"><name pos:start="461:37" pos:end="461:37">s</name></expr></argument>, <argument pos:start="461:40" pos:end="461:41"><expr pos:start="461:40" pos:end="461:41"><name pos:start="461:40" pos:end="461:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="463:21" pos:end="465:57"><if pos:start="463:21" pos:end="465:57">if <condition pos:start="463:24" pos:end="463:48">(<expr pos:start="463:25" pos:end="463:47"><operator pos:start="463:25" pos:end="463:25">(</operator><name pos:start="463:26" pos:end="463:29">insn</name> <operator pos:start="463:31" pos:end="463:31">&amp;</operator> <operator pos:start="463:33" pos:end="463:33">(</operator><literal type="number" pos:start="463:34" pos:end="463:34">1</literal> <operator pos:start="463:36" pos:end="463:37">&lt;&lt;</operator> <literal type="number" pos:start="463:39" pos:end="463:40">24</literal><operator pos:start="463:41" pos:end="463:41">)</operator><operator pos:start="463:42" pos:end="463:42">)</operator> <operator pos:start="463:44" pos:end="463:45">==</operator> <literal type="number" pos:start="463:47" pos:end="463:47">0</literal></expr>)</condition><block type="pseudo" pos:start="465:25" pos:end="465:57"><block_content pos:start="465:25" pos:end="465:57">

                        <expr_stmt pos:start="465:25" pos:end="465:57"><expr pos:start="465:25" pos:end="465:56"><call pos:start="465:25" pos:end="465:56"><name pos:start="465:25" pos:end="465:40">tcg_gen_addi_i32</name><argument_list pos:start="465:41" pos:end="465:56">(<argument pos:start="465:42" pos:end="465:45"><expr pos:start="465:42" pos:end="465:45"><name pos:start="465:42" pos:end="465:45">addr</name></expr></argument>, <argument pos:start="465:48" pos:end="465:51"><expr pos:start="465:48" pos:end="465:51"><name pos:start="465:48" pos:end="465:51">addr</name></expr></argument>, <argument pos:start="465:54" pos:end="465:55"><expr pos:start="465:54" pos:end="465:55"><operator pos:start="465:54" pos:end="465:54">-</operator><literal type="number" pos:start="465:55" pos:end="465:55">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="467:21" pos:end="467:63">/* Load PC into tmp and CPSR into tmp2.  */</comment>

                    <expr_stmt pos:start="469:21" pos:end="469:45"><expr pos:start="469:21" pos:end="469:44"><name pos:start="469:21" pos:end="469:23">tmp</name> <operator pos:start="469:25" pos:end="469:25">=</operator> <call pos:start="469:27" pos:end="469:44"><name pos:start="469:27" pos:end="469:42">tcg_temp_new_i32</name><argument_list pos:start="469:43" pos:end="469:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="471:21" pos:end="471:53"><expr pos:start="471:21" pos:end="471:52"><call pos:start="471:21" pos:end="471:52"><name pos:start="471:21" pos:end="471:38">tcg_gen_qemu_ld32u</name><argument_list pos:start="471:39" pos:end="471:52">(<argument pos:start="471:40" pos:end="471:42"><expr pos:start="471:40" pos:end="471:42"><name pos:start="471:40" pos:end="471:42">tmp</name></expr></argument>, <argument pos:start="471:45" pos:end="471:48"><expr pos:start="471:45" pos:end="471:48"><name pos:start="471:45" pos:end="471:48">addr</name></expr></argument>, <argument pos:start="471:51" pos:end="471:51"><expr pos:start="471:51" pos:end="471:51"><literal type="number" pos:start="471:51" pos:end="471:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="473:21" pos:end="473:52"><expr pos:start="473:21" pos:end="473:51"><call pos:start="473:21" pos:end="473:51"><name pos:start="473:21" pos:end="473:36">tcg_gen_addi_i32</name><argument_list pos:start="473:37" pos:end="473:51">(<argument pos:start="473:38" pos:end="473:41"><expr pos:start="473:38" pos:end="473:41"><name pos:start="473:38" pos:end="473:41">addr</name></expr></argument>, <argument pos:start="473:44" pos:end="473:47"><expr pos:start="473:44" pos:end="473:47"><name pos:start="473:44" pos:end="473:47">addr</name></expr></argument>, <argument pos:start="473:50" pos:end="473:50"><expr pos:start="473:50" pos:end="473:50"><literal type="number" pos:start="473:50" pos:end="473:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="475:21" pos:end="475:46"><expr pos:start="475:21" pos:end="475:45"><name pos:start="475:21" pos:end="475:24">tmp2</name> <operator pos:start="475:26" pos:end="475:26">=</operator> <call pos:start="475:28" pos:end="475:45"><name pos:start="475:28" pos:end="475:43">tcg_temp_new_i32</name><argument_list pos:start="475:44" pos:end="475:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="477:21" pos:end="477:54"><expr pos:start="477:21" pos:end="477:53"><call pos:start="477:21" pos:end="477:53"><name pos:start="477:21" pos:end="477:38">tcg_gen_qemu_ld32u</name><argument_list pos:start="477:39" pos:end="477:53">(<argument pos:start="477:40" pos:end="477:43"><expr pos:start="477:40" pos:end="477:43"><name pos:start="477:40" pos:end="477:43">tmp2</name></expr></argument>, <argument pos:start="477:46" pos:end="477:49"><expr pos:start="477:46" pos:end="477:49"><name pos:start="477:46" pos:end="477:49">addr</name></expr></argument>, <argument pos:start="477:52" pos:end="477:52"><expr pos:start="477:52" pos:end="477:52"><literal type="number" pos:start="477:52" pos:end="477:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="479:21" pos:end="499:21"><if pos:start="479:21" pos:end="495:21">if <condition pos:start="479:24" pos:end="479:41">(<expr pos:start="479:25" pos:end="479:40"><name pos:start="479:25" pos:end="479:28">insn</name> <operator pos:start="479:30" pos:end="479:30">&amp;</operator> <operator pos:start="479:32" pos:end="479:32">(</operator><literal type="number" pos:start="479:33" pos:end="479:33">1</literal> <operator pos:start="479:35" pos:end="479:36">&lt;&lt;</operator> <literal type="number" pos:start="479:38" pos:end="479:39">21</literal><operator pos:start="479:40" pos:end="479:40">)</operator></expr>)</condition> <block pos:start="479:43" pos:end="495:21">{<block_content pos:start="483:25" pos:end="493:47">

                        <comment type="block" pos:start="481:25" pos:end="481:46">/* Base writeback.  */</comment>

                        <if_stmt pos:start="483:25" pos:end="491:25"><if pos:start="483:25" pos:end="487:25">if <condition pos:start="483:28" pos:end="483:45">(<expr pos:start="483:29" pos:end="483:44"><name pos:start="483:29" pos:end="483:32">insn</name> <operator pos:start="483:34" pos:end="483:34">&amp;</operator> <operator pos:start="483:36" pos:end="483:36">(</operator><literal type="number" pos:start="483:37" pos:end="483:37">1</literal> <operator pos:start="483:39" pos:end="483:40">&lt;&lt;</operator> <literal type="number" pos:start="483:42" pos:end="483:43">24</literal><operator pos:start="483:44" pos:end="483:44">)</operator></expr>)</condition> <block pos:start="483:47" pos:end="487:25">{<block_content pos:start="485:29" pos:end="485:60">

                            <expr_stmt pos:start="485:29" pos:end="485:60"><expr pos:start="485:29" pos:end="485:59"><call pos:start="485:29" pos:end="485:59"><name pos:start="485:29" pos:end="485:44">tcg_gen_addi_i32</name><argument_list pos:start="485:45" pos:end="485:59">(<argument pos:start="485:46" pos:end="485:49"><expr pos:start="485:46" pos:end="485:49"><name pos:start="485:46" pos:end="485:49">addr</name></expr></argument>, <argument pos:start="485:52" pos:end="485:55"><expr pos:start="485:52" pos:end="485:55"><name pos:start="485:52" pos:end="485:55">addr</name></expr></argument>, <argument pos:start="485:58" pos:end="485:58"><expr pos:start="485:58" pos:end="485:58"><literal type="number" pos:start="485:58" pos:end="485:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="487:27" pos:end="491:25">else <block pos:start="487:32" pos:end="491:25">{<block_content pos:start="489:29" pos:end="489:61">

                            <expr_stmt pos:start="489:29" pos:end="489:61"><expr pos:start="489:29" pos:end="489:60"><call pos:start="489:29" pos:end="489:60"><name pos:start="489:29" pos:end="489:44">tcg_gen_addi_i32</name><argument_list pos:start="489:45" pos:end="489:60">(<argument pos:start="489:46" pos:end="489:49"><expr pos:start="489:46" pos:end="489:49"><name pos:start="489:46" pos:end="489:49">addr</name></expr></argument>, <argument pos:start="489:52" pos:end="489:55"><expr pos:start="489:52" pos:end="489:55"><name pos:start="489:52" pos:end="489:55">addr</name></expr></argument>, <argument pos:start="489:58" pos:end="489:59"><expr pos:start="489:58" pos:end="489:59"><operator pos:start="489:58" pos:end="489:58">-</operator><literal type="number" pos:start="489:59" pos:end="489:59">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="493:25" pos:end="493:47"><expr pos:start="493:25" pos:end="493:46"><call pos:start="493:25" pos:end="493:46"><name pos:start="493:25" pos:end="493:33">store_reg</name><argument_list pos:start="493:34" pos:end="493:46">(<argument pos:start="493:35" pos:end="493:35"><expr pos:start="493:35" pos:end="493:35"><name pos:start="493:35" pos:end="493:35">s</name></expr></argument>, <argument pos:start="493:38" pos:end="493:39"><expr pos:start="493:38" pos:end="493:39"><name pos:start="493:38" pos:end="493:39">rn</name></expr></argument>, <argument pos:start="493:42" pos:end="493:45"><expr pos:start="493:42" pos:end="493:45"><name pos:start="493:42" pos:end="493:45">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="495:23" pos:end="499:21">else <block pos:start="495:28" pos:end="499:21">{<block_content pos:start="497:25" pos:end="497:48">

                        <expr_stmt pos:start="497:25" pos:end="497:48"><expr pos:start="497:25" pos:end="497:47"><call pos:start="497:25" pos:end="497:47"><name pos:start="497:25" pos:end="497:41">tcg_temp_free_i32</name><argument_list pos:start="497:42" pos:end="497:47">(<argument pos:start="497:43" pos:end="497:46"><expr pos:start="497:43" pos:end="497:46"><name pos:start="497:43" pos:end="497:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="501:21" pos:end="501:42"><expr pos:start="501:21" pos:end="501:41"><call pos:start="501:21" pos:end="501:41"><name pos:start="501:21" pos:end="501:27">gen_rfe</name><argument_list pos:start="501:28" pos:end="501:41">(<argument pos:start="501:29" pos:end="501:29"><expr pos:start="501:29" pos:end="501:29"><name pos:start="501:29" pos:end="501:29">s</name></expr></argument>, <argument pos:start="501:32" pos:end="501:34"><expr pos:start="501:32" pos:end="501:34"><name pos:start="501:32" pos:end="501:34">tmp</name></expr></argument>, <argument pos:start="501:37" pos:end="501:40"><expr pos:start="501:37" pos:end="501:40"><name pos:start="501:37" pos:end="501:40">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="503:19" pos:end="511:17">else <block pos:start="503:24" pos:end="511:17">{<block_content pos:start="507:21" pos:end="509:46">

                    <comment type="block" pos:start="505:21" pos:end="505:29">/* srs */</comment>

                    <expr_stmt pos:start="507:21" pos:end="509:46"><expr pos:start="507:21" pos:end="509:45"><call pos:start="507:21" pos:end="509:45"><name pos:start="507:21" pos:end="507:27">gen_srs</name><argument_list pos:start="507:28" pos:end="509:45">(<argument pos:start="507:29" pos:end="507:29"><expr pos:start="507:29" pos:end="507:29"><name pos:start="507:29" pos:end="507:29">s</name></expr></argument>, <argument pos:start="507:32" pos:end="507:44"><expr pos:start="507:32" pos:end="507:44"><operator pos:start="507:32" pos:end="507:32">(</operator><name pos:start="507:33" pos:end="507:36">insn</name> <operator pos:start="507:38" pos:end="507:38">&amp;</operator> <literal type="number" pos:start="507:40" pos:end="507:43">0x1f</literal><operator pos:start="507:44" pos:end="507:44">)</operator></expr></argument>, <argument pos:start="507:47" pos:end="507:72"><expr pos:start="507:47" pos:end="507:72"><ternary pos:start="507:47" pos:end="507:72"><condition pos:start="507:47" pos:end="507:66"><expr pos:start="507:47" pos:end="507:64"><operator pos:start="507:47" pos:end="507:47">(</operator><name pos:start="507:48" pos:end="507:51">insn</name> <operator pos:start="507:53" pos:end="507:53">&amp;</operator> <operator pos:start="507:55" pos:end="507:55">(</operator><literal type="number" pos:start="507:56" pos:end="507:56">1</literal> <operator pos:start="507:58" pos:end="507:59">&lt;&lt;</operator> <literal type="number" pos:start="507:61" pos:end="507:62">24</literal><operator pos:start="507:63" pos:end="507:63">)</operator><operator pos:start="507:64" pos:end="507:64">)</operator></expr> ?</condition><then pos:start="507:68" pos:end="507:68"> <expr pos:start="507:68" pos:end="507:68"><literal type="number" pos:start="507:68" pos:end="507:68">1</literal></expr> </then><else pos:start="507:70" pos:end="507:72">: <expr pos:start="507:72" pos:end="507:72"><literal type="number" pos:start="507:72" pos:end="507:72">2</literal></expr></else></ternary></expr></argument>,

                            <argument pos:start="509:29" pos:end="509:44"><expr pos:start="509:29" pos:end="509:44"><name pos:start="509:29" pos:end="509:32">insn</name> <operator pos:start="509:34" pos:end="509:34">&amp;</operator> <operator pos:start="509:36" pos:end="509:36">(</operator><literal type="number" pos:start="509:37" pos:end="509:37">1</literal> <operator pos:start="509:39" pos:end="509:40">&lt;&lt;</operator> <literal type="number" pos:start="509:42" pos:end="509:43">21</literal><operator pos:start="509:44" pos:end="509:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="513:15" pos:end="619:13">else <block pos:start="513:20" pos:end="619:13">{<block_content pos:start="515:17" pos:end="617:17">

                <decl_stmt pos:start="515:17" pos:end="515:39"><decl pos:start="515:17" pos:end="515:21"><type pos:start="515:17" pos:end="515:19"><name pos:start="515:17" pos:end="515:19">int</name></type> <name pos:start="515:21" pos:end="515:21">i</name></decl>, <decl pos:start="515:24" pos:end="515:38"><type ref="prev" pos:start="515:17" pos:end="515:19"/><name pos:start="515:24" pos:end="515:34">loaded_base</name> <init pos:start="515:36" pos:end="515:38">= <expr pos:start="515:38" pos:end="515:38"><literal type="number" pos:start="515:38" pos:end="515:38">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="517:17" pos:end="517:36"><decl pos:start="517:17" pos:end="517:35"><type pos:start="517:17" pos:end="517:24"><name pos:start="517:17" pos:end="517:24">TCGv_i32</name></type> <name pos:start="517:26" pos:end="517:35">loaded_var</name></decl>;</decl_stmt>

                <comment type="block" pos:start="519:17" pos:end="519:43">/* Load/store multiple.  */</comment>

                <expr_stmt pos:start="521:17" pos:end="521:39"><expr pos:start="521:17" pos:end="521:38"><name pos:start="521:17" pos:end="521:20">addr</name> <operator pos:start="521:22" pos:end="521:22">=</operator> <call pos:start="521:24" pos:end="521:38"><name pos:start="521:24" pos:end="521:31">load_reg</name><argument_list pos:start="521:32" pos:end="521:38">(<argument pos:start="521:33" pos:end="521:33"><expr pos:start="521:33" pos:end="521:33"><name pos:start="521:33" pos:end="521:33">s</name></expr></argument>, <argument pos:start="521:36" pos:end="521:37"><expr pos:start="521:36" pos:end="521:37"><name pos:start="521:36" pos:end="521:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="523:17" pos:end="523:27"><expr pos:start="523:17" pos:end="523:26"><name pos:start="523:17" pos:end="523:22">offset</name> <operator pos:start="523:24" pos:end="523:24">=</operator> <literal type="number" pos:start="523:26" pos:end="523:26">0</literal></expr>;</expr_stmt>

                <for pos:start="525:17" pos:end="531:17">for <control pos:start="525:21" pos:end="525:40">(<init pos:start="525:22" pos:end="525:27"><expr pos:start="525:22" pos:end="525:26"><name pos:start="525:22" pos:end="525:22">i</name> <operator pos:start="525:24" pos:end="525:24">=</operator> <literal type="number" pos:start="525:26" pos:end="525:26">0</literal></expr>;</init> <condition pos:start="525:29" pos:end="525:35"><expr pos:start="525:29" pos:end="525:34"><name pos:start="525:29" pos:end="525:29">i</name> <operator pos:start="525:31" pos:end="525:31">&lt;</operator> <literal type="number" pos:start="525:33" pos:end="525:34">16</literal></expr>;</condition> <incr pos:start="525:37" pos:end="525:39"><expr pos:start="525:37" pos:end="525:39"><name pos:start="525:37" pos:end="525:37">i</name><operator pos:start="525:38" pos:end="525:39">++</operator></expr></incr>)</control> <block pos:start="525:42" pos:end="531:17">{<block_content pos:start="527:21" pos:end="529:36">

                    <if_stmt pos:start="527:21" pos:end="529:36"><if pos:start="527:21" pos:end="529:36">if <condition pos:start="527:24" pos:end="527:40">(<expr pos:start="527:25" pos:end="527:39"><name pos:start="527:25" pos:end="527:28">insn</name> <operator pos:start="527:30" pos:end="527:30">&amp;</operator> <operator pos:start="527:32" pos:end="527:32">(</operator><literal type="number" pos:start="527:33" pos:end="527:33">1</literal> <operator pos:start="527:35" pos:end="527:36">&lt;&lt;</operator> <name pos:start="527:38" pos:end="527:38">i</name><operator pos:start="527:39" pos:end="527:39">)</operator></expr>)</condition><block type="pseudo" pos:start="529:25" pos:end="529:36"><block_content pos:start="529:25" pos:end="529:36">

                        <expr_stmt pos:start="529:25" pos:end="529:36"><expr pos:start="529:25" pos:end="529:35"><name pos:start="529:25" pos:end="529:30">offset</name> <operator pos:start="529:32" pos:end="529:33">+=</operator> <literal type="number" pos:start="529:35" pos:end="529:35">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="533:17" pos:end="537:17"><if pos:start="533:17" pos:end="537:17">if <condition pos:start="533:20" pos:end="533:37">(<expr pos:start="533:21" pos:end="533:36"><name pos:start="533:21" pos:end="533:24">insn</name> <operator pos:start="533:26" pos:end="533:26">&amp;</operator> <operator pos:start="533:28" pos:end="533:28">(</operator><literal type="number" pos:start="533:29" pos:end="533:29">1</literal> <operator pos:start="533:31" pos:end="533:32">&lt;&lt;</operator> <literal type="number" pos:start="533:34" pos:end="533:35">24</literal><operator pos:start="533:36" pos:end="533:36">)</operator></expr>)</condition> <block pos:start="533:39" pos:end="537:17">{<block_content pos:start="535:21" pos:end="535:58">

                    <expr_stmt pos:start="535:21" pos:end="535:58"><expr pos:start="535:21" pos:end="535:57"><call pos:start="535:21" pos:end="535:57"><name pos:start="535:21" pos:end="535:36">tcg_gen_addi_i32</name><argument_list pos:start="535:37" pos:end="535:57">(<argument pos:start="535:38" pos:end="535:41"><expr pos:start="535:38" pos:end="535:41"><name pos:start="535:38" pos:end="535:41">addr</name></expr></argument>, <argument pos:start="535:44" pos:end="535:47"><expr pos:start="535:44" pos:end="535:47"><name pos:start="535:44" pos:end="535:47">addr</name></expr></argument>, <argument pos:start="535:50" pos:end="535:56"><expr pos:start="535:50" pos:end="535:56"><operator pos:start="535:50" pos:end="535:50">-</operator><name pos:start="535:51" pos:end="535:56">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="541:17" pos:end="541:44"><expr pos:start="541:17" pos:end="541:43"><call pos:start="541:17" pos:end="541:43"><name pos:start="541:17" pos:end="541:31">TCGV_UNUSED_I32</name><argument_list pos:start="541:32" pos:end="541:43">(<argument pos:start="541:33" pos:end="541:42"><expr pos:start="541:33" pos:end="541:42"><name pos:start="541:33" pos:end="541:42">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="543:17" pos:end="587:17">for <control pos:start="543:21" pos:end="543:40">(<init pos:start="543:22" pos:end="543:27"><expr pos:start="543:22" pos:end="543:26"><name pos:start="543:22" pos:end="543:22">i</name> <operator pos:start="543:24" pos:end="543:24">=</operator> <literal type="number" pos:start="543:26" pos:end="543:26">0</literal></expr>;</init> <condition pos:start="543:29" pos:end="543:35"><expr pos:start="543:29" pos:end="543:34"><name pos:start="543:29" pos:end="543:29">i</name> <operator pos:start="543:31" pos:end="543:31">&lt;</operator> <literal type="number" pos:start="543:33" pos:end="543:34">16</literal></expr>;</condition> <incr pos:start="543:37" pos:end="543:39"><expr pos:start="543:37" pos:end="543:39"><name pos:start="543:37" pos:end="543:37">i</name><operator pos:start="543:38" pos:end="543:39">++</operator></expr></incr>)</control> <block pos:start="543:42" pos:end="587:17">{<block_content pos:start="545:21" pos:end="585:52">

                    <if_stmt pos:start="545:21" pos:end="547:33"><if pos:start="545:21" pos:end="547:33">if <condition pos:start="545:24" pos:end="545:47">(<expr pos:start="545:25" pos:end="545:46"><operator pos:start="545:25" pos:end="545:25">(</operator><name pos:start="545:26" pos:end="545:29">insn</name> <operator pos:start="545:31" pos:end="545:31">&amp;</operator> <operator pos:start="545:33" pos:end="545:33">(</operator><literal type="number" pos:start="545:34" pos:end="545:34">1</literal> <operator pos:start="545:36" pos:end="545:37">&lt;&lt;</operator> <name pos:start="545:39" pos:end="545:39">i</name><operator pos:start="545:40" pos:end="545:40">)</operator><operator pos:start="545:41" pos:end="545:41">)</operator> <operator pos:start="545:43" pos:end="545:44">==</operator> <literal type="number" pos:start="545:46" pos:end="545:46">0</literal></expr>)</condition><block type="pseudo" pos:start="547:25" pos:end="547:33"><block_content pos:start="547:25" pos:end="547:33">

                        <continue pos:start="547:25" pos:end="547:33">continue;</continue></block_content></block></if></if_stmt>

                    <if_stmt pos:start="549:21" pos:end="583:21"><if pos:start="549:21" pos:end="573:21">if <condition pos:start="549:24" pos:end="549:41">(<expr pos:start="549:25" pos:end="549:40"><name pos:start="549:25" pos:end="549:28">insn</name> <operator pos:start="549:30" pos:end="549:30">&amp;</operator> <operator pos:start="549:32" pos:end="549:32">(</operator><literal type="number" pos:start="549:33" pos:end="549:33">1</literal> <operator pos:start="549:35" pos:end="549:36">&lt;&lt;</operator> <literal type="number" pos:start="549:38" pos:end="549:39">20</literal><operator pos:start="549:40" pos:end="549:40">)</operator></expr>)</condition> <block pos:start="549:43" pos:end="573:21">{<block_content pos:start="553:25" pos:end="571:25">

                        <comment type="block" pos:start="551:25" pos:end="551:36">/* Load.  */</comment>

                        <expr_stmt pos:start="553:25" pos:end="553:49"><expr pos:start="553:25" pos:end="553:48"><name pos:start="553:25" pos:end="553:27">tmp</name> <operator pos:start="553:29" pos:end="553:29">=</operator> <call pos:start="553:31" pos:end="553:48"><name pos:start="553:31" pos:end="553:46">tcg_temp_new_i32</name><argument_list pos:start="553:47" pos:end="553:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="555:25" pos:end="555:66"><expr pos:start="555:25" pos:end="555:65"><call pos:start="555:25" pos:end="555:65"><name pos:start="555:25" pos:end="555:42">tcg_gen_qemu_ld32u</name><argument_list pos:start="555:43" pos:end="555:65">(<argument pos:start="555:44" pos:end="555:46"><expr pos:start="555:44" pos:end="555:46"><name pos:start="555:44" pos:end="555:46">tmp</name></expr></argument>, <argument pos:start="555:49" pos:end="555:52"><expr pos:start="555:49" pos:end="555:52"><name pos:start="555:49" pos:end="555:52">addr</name></expr></argument>, <argument pos:start="555:55" pos:end="555:64"><expr pos:start="555:55" pos:end="555:64"><call pos:start="555:55" pos:end="555:64"><name pos:start="555:55" pos:end="555:61">IS_USER</name><argument_list pos:start="555:62" pos:end="555:64">(<argument pos:start="555:63" pos:end="555:63"><expr pos:start="555:63" pos:end="555:63"><name pos:start="555:63" pos:end="555:63">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="557:25" pos:end="571:25"><if pos:start="557:25" pos:end="561:25">if <condition pos:start="557:28" pos:end="557:36">(<expr pos:start="557:29" pos:end="557:35"><name pos:start="557:29" pos:end="557:29">i</name> <operator pos:start="557:31" pos:end="557:32">==</operator> <literal type="number" pos:start="557:34" pos:end="557:35">15</literal></expr>)</condition> <block pos:start="557:38" pos:end="561:25">{<block_content pos:start="559:29" pos:end="559:43">

                            <expr_stmt pos:start="559:29" pos:end="559:43"><expr pos:start="559:29" pos:end="559:42"><call pos:start="559:29" pos:end="559:42"><name pos:start="559:29" pos:end="559:34">gen_bx</name><argument_list pos:start="559:35" pos:end="559:42">(<argument pos:start="559:36" pos:end="559:36"><expr pos:start="559:36" pos:end="559:36"><name pos:start="559:36" pos:end="559:36">s</name></expr></argument>, <argument pos:start="559:39" pos:end="559:41"><expr pos:start="559:39" pos:end="559:41"><name pos:start="559:39" pos:end="559:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="561:27" pos:end="567:25">else if <condition pos:start="561:35" pos:end="561:43">(<expr pos:start="561:36" pos:end="561:42"><name pos:start="561:36" pos:end="561:36">i</name> <operator pos:start="561:38" pos:end="561:39">==</operator> <name pos:start="561:41" pos:end="561:42">rn</name></expr>)</condition> <block pos:start="561:45" pos:end="567:25">{<block_content pos:start="563:29" pos:end="565:44">

                            <expr_stmt pos:start="563:29" pos:end="563:45"><expr pos:start="563:29" pos:end="563:44"><name pos:start="563:29" pos:end="563:38">loaded_var</name> <operator pos:start="563:40" pos:end="563:40">=</operator> <name pos:start="563:42" pos:end="563:44">tmp</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="565:29" pos:end="565:44"><expr pos:start="565:29" pos:end="565:43"><name pos:start="565:29" pos:end="565:39">loaded_base</name> <operator pos:start="565:41" pos:end="565:41">=</operator> <literal type="number" pos:start="565:43" pos:end="565:43">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="567:27" pos:end="571:25">else <block pos:start="567:32" pos:end="571:25">{<block_content pos:start="569:29" pos:end="569:49">

                            <expr_stmt pos:start="569:29" pos:end="569:49"><expr pos:start="569:29" pos:end="569:48"><call pos:start="569:29" pos:end="569:48"><name pos:start="569:29" pos:end="569:37">store_reg</name><argument_list pos:start="569:38" pos:end="569:48">(<argument pos:start="569:39" pos:end="569:39"><expr pos:start="569:39" pos:end="569:39"><name pos:start="569:39" pos:end="569:39">s</name></expr></argument>, <argument pos:start="569:42" pos:end="569:42"><expr pos:start="569:42" pos:end="569:42"><name pos:start="569:42" pos:end="569:42">i</name></expr></argument>, <argument pos:start="569:45" pos:end="569:47"><expr pos:start="569:45" pos:end="569:47"><name pos:start="569:45" pos:end="569:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="573:23" pos:end="583:21">else <block pos:start="573:28" pos:end="583:21">{<block_content pos:start="577:25" pos:end="581:47">

                        <comment type="block" pos:start="575:25" pos:end="575:37">/* Store.  */</comment>

                        <expr_stmt pos:start="577:25" pos:end="577:45"><expr pos:start="577:25" pos:end="577:44"><name pos:start="577:25" pos:end="577:27">tmp</name> <operator pos:start="577:29" pos:end="577:29">=</operator> <call pos:start="577:31" pos:end="577:44"><name pos:start="577:31" pos:end="577:38">load_reg</name><argument_list pos:start="577:39" pos:end="577:44">(<argument pos:start="577:40" pos:end="577:40"><expr pos:start="577:40" pos:end="577:40"><name pos:start="577:40" pos:end="577:40">s</name></expr></argument>, <argument pos:start="577:43" pos:end="577:43"><expr pos:start="577:43" pos:end="577:43"><name pos:start="577:43" pos:end="577:43">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="579:25" pos:end="579:65"><expr pos:start="579:25" pos:end="579:64"><call pos:start="579:25" pos:end="579:64"><name pos:start="579:25" pos:end="579:41">tcg_gen_qemu_st32</name><argument_list pos:start="579:42" pos:end="579:64">(<argument pos:start="579:43" pos:end="579:45"><expr pos:start="579:43" pos:end="579:45"><name pos:start="579:43" pos:end="579:45">tmp</name></expr></argument>, <argument pos:start="579:48" pos:end="579:51"><expr pos:start="579:48" pos:end="579:51"><name pos:start="579:48" pos:end="579:51">addr</name></expr></argument>, <argument pos:start="579:54" pos:end="579:63"><expr pos:start="579:54" pos:end="579:63"><call pos:start="579:54" pos:end="579:63"><name pos:start="579:54" pos:end="579:60">IS_USER</name><argument_list pos:start="579:61" pos:end="579:63">(<argument pos:start="579:62" pos:end="579:62"><expr pos:start="579:62" pos:end="579:62"><name pos:start="579:62" pos:end="579:62">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="581:25" pos:end="581:47"><expr pos:start="581:25" pos:end="581:46"><call pos:start="581:25" pos:end="581:46"><name pos:start="581:25" pos:end="581:41">tcg_temp_free_i32</name><argument_list pos:start="581:42" pos:end="581:46">(<argument pos:start="581:43" pos:end="581:45"><expr pos:start="581:43" pos:end="581:45"><name pos:start="581:43" pos:end="581:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="585:21" pos:end="585:52"><expr pos:start="585:21" pos:end="585:51"><call pos:start="585:21" pos:end="585:51"><name pos:start="585:21" pos:end="585:36">tcg_gen_addi_i32</name><argument_list pos:start="585:37" pos:end="585:51">(<argument pos:start="585:38" pos:end="585:41"><expr pos:start="585:38" pos:end="585:41"><name pos:start="585:38" pos:end="585:41">addr</name></expr></argument>, <argument pos:start="585:44" pos:end="585:47"><expr pos:start="585:44" pos:end="585:47"><name pos:start="585:44" pos:end="585:47">addr</name></expr></argument>, <argument pos:start="585:50" pos:end="585:50"><expr pos:start="585:50" pos:end="585:50"><literal type="number" pos:start="585:50" pos:end="585:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="589:17" pos:end="593:17"><if pos:start="589:17" pos:end="593:17">if <condition pos:start="589:20" pos:end="589:32">(<expr pos:start="589:21" pos:end="589:31"><name pos:start="589:21" pos:end="589:31">loaded_base</name></expr>)</condition> <block pos:start="589:34" pos:end="593:17">{<block_content pos:start="591:21" pos:end="591:49">

                    <expr_stmt pos:start="591:21" pos:end="591:49"><expr pos:start="591:21" pos:end="591:48"><call pos:start="591:21" pos:end="591:48"><name pos:start="591:21" pos:end="591:29">store_reg</name><argument_list pos:start="591:30" pos:end="591:48">(<argument pos:start="591:31" pos:end="591:31"><expr pos:start="591:31" pos:end="591:31"><name pos:start="591:31" pos:end="591:31">s</name></expr></argument>, <argument pos:start="591:34" pos:end="591:35"><expr pos:start="591:34" pos:end="591:35"><name pos:start="591:34" pos:end="591:35">rn</name></expr></argument>, <argument pos:start="591:38" pos:end="591:47"><expr pos:start="591:38" pos:end="591:47"><name pos:start="591:38" pos:end="591:47">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="595:17" pos:end="617:17"><if pos:start="595:17" pos:end="613:17">if <condition pos:start="595:20" pos:end="595:37">(<expr pos:start="595:21" pos:end="595:36"><name pos:start="595:21" pos:end="595:24">insn</name> <operator pos:start="595:26" pos:end="595:26">&amp;</operator> <operator pos:start="595:28" pos:end="595:28">(</operator><literal type="number" pos:start="595:29" pos:end="595:29">1</literal> <operator pos:start="595:31" pos:end="595:32">&lt;&lt;</operator> <literal type="number" pos:start="595:34" pos:end="595:35">21</literal><operator pos:start="595:36" pos:end="595:36">)</operator></expr>)</condition> <block pos:start="595:39" pos:end="613:17">{<block_content pos:start="599:21" pos:end="611:43">

                    <comment type="block" pos:start="597:21" pos:end="597:51">/* Base register writeback.  */</comment>

                    <if_stmt pos:start="599:21" pos:end="603:21"><if pos:start="599:21" pos:end="603:21">if <condition pos:start="599:24" pos:end="599:41">(<expr pos:start="599:25" pos:end="599:40"><name pos:start="599:25" pos:end="599:28">insn</name> <operator pos:start="599:30" pos:end="599:30">&amp;</operator> <operator pos:start="599:32" pos:end="599:32">(</operator><literal type="number" pos:start="599:33" pos:end="599:33">1</literal> <operator pos:start="599:35" pos:end="599:36">&lt;&lt;</operator> <literal type="number" pos:start="599:38" pos:end="599:39">24</literal><operator pos:start="599:40" pos:end="599:40">)</operator></expr>)</condition> <block pos:start="599:43" pos:end="603:21">{<block_content pos:start="601:25" pos:end="601:62">

                        <expr_stmt pos:start="601:25" pos:end="601:62"><expr pos:start="601:25" pos:end="601:61"><call pos:start="601:25" pos:end="601:61"><name pos:start="601:25" pos:end="601:40">tcg_gen_addi_i32</name><argument_list pos:start="601:41" pos:end="601:61">(<argument pos:start="601:42" pos:end="601:45"><expr pos:start="601:42" pos:end="601:45"><name pos:start="601:42" pos:end="601:45">addr</name></expr></argument>, <argument pos:start="601:48" pos:end="601:51"><expr pos:start="601:48" pos:end="601:51"><name pos:start="601:48" pos:end="601:51">addr</name></expr></argument>, <argument pos:start="601:54" pos:end="601:60"><expr pos:start="601:54" pos:end="601:60"><operator pos:start="601:54" pos:end="601:54">-</operator><name pos:start="601:55" pos:end="601:60">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="605:21" pos:end="605:75">/* Fault if writeback register is in register list.  */</comment>

                    <if_stmt pos:start="607:21" pos:end="609:40"><if pos:start="607:21" pos:end="609:40">if <condition pos:start="607:24" pos:end="607:41">(<expr pos:start="607:25" pos:end="607:40"><name pos:start="607:25" pos:end="607:28">insn</name> <operator pos:start="607:30" pos:end="607:30">&amp;</operator> <operator pos:start="607:32" pos:end="607:32">(</operator><literal type="number" pos:start="607:33" pos:end="607:33">1</literal> <operator pos:start="607:35" pos:end="607:36">&lt;&lt;</operator> <name pos:start="607:38" pos:end="607:39">rn</name><operator pos:start="607:40" pos:end="607:40">)</operator></expr>)</condition><block type="pseudo" pos:start="609:25" pos:end="609:40"><block_content pos:start="609:25" pos:end="609:40">

                        <goto pos:start="609:25" pos:end="609:40">goto <name pos:start="609:30" pos:end="609:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="611:21" pos:end="611:43"><expr pos:start="611:21" pos:end="611:42"><call pos:start="611:21" pos:end="611:42"><name pos:start="611:21" pos:end="611:29">store_reg</name><argument_list pos:start="611:30" pos:end="611:42">(<argument pos:start="611:31" pos:end="611:31"><expr pos:start="611:31" pos:end="611:31"><name pos:start="611:31" pos:end="611:31">s</name></expr></argument>, <argument pos:start="611:34" pos:end="611:35"><expr pos:start="611:34" pos:end="611:35"><name pos:start="611:34" pos:end="611:35">rn</name></expr></argument>, <argument pos:start="611:38" pos:end="611:41"><expr pos:start="611:38" pos:end="611:41"><name pos:start="611:38" pos:end="611:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="613:19" pos:end="617:17">else <block pos:start="613:24" pos:end="617:17">{<block_content pos:start="615:21" pos:end="615:44">

                    <expr_stmt pos:start="615:21" pos:end="615:44"><expr pos:start="615:21" pos:end="615:43"><call pos:start="615:21" pos:end="615:43"><name pos:start="615:21" pos:end="615:37">tcg_temp_free_i32</name><argument_list pos:start="615:38" pos:end="615:43">(<argument pos:start="615:39" pos:end="615:42"><expr pos:start="615:39" pos:end="615:42"><name pos:start="615:39" pos:end="615:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="623:9" pos:end="623:14">break;</break>

    <case pos:start="625:5" pos:end="625:11">case <expr pos:start="625:10" pos:end="625:10"><literal type="number" pos:start="625:10" pos:end="625:10">5</literal></expr>:</case>



        <expr_stmt pos:start="629:9" pos:end="629:32"><expr pos:start="629:9" pos:end="629:31"><name pos:start="629:9" pos:end="629:10">op</name> <operator pos:start="629:12" pos:end="629:12">=</operator> <operator pos:start="629:14" pos:end="629:14">(</operator><name pos:start="629:15" pos:end="629:18">insn</name> <operator pos:start="629:20" pos:end="629:21">&gt;&gt;</operator> <literal type="number" pos:start="629:23" pos:end="629:24">21</literal><operator pos:start="629:25" pos:end="629:25">)</operator> <operator pos:start="629:27" pos:end="629:27">&amp;</operator> <literal type="number" pos:start="629:29" pos:end="629:31">0xf</literal></expr>;</expr_stmt>

        <if_stmt pos:start="631:9" pos:end="721:9"><if pos:start="631:9" pos:end="675:9">if <condition pos:start="631:12" pos:end="631:20">(<expr pos:start="631:13" pos:end="631:19"><name pos:start="631:13" pos:end="631:14">op</name> <operator pos:start="631:16" pos:end="631:17">==</operator> <literal type="number" pos:start="631:19" pos:end="631:19">6</literal></expr>)</condition> <block pos:start="631:22" pos:end="675:9">{<block_content pos:start="635:13" pos:end="673:34">

            <comment type="block" pos:start="633:13" pos:end="633:33">/* Halfword pack.  */</comment>

            <expr_stmt pos:start="635:13" pos:end="635:34"><expr pos:start="635:13" pos:end="635:33"><name pos:start="635:13" pos:end="635:15">tmp</name> <operator pos:start="635:17" pos:end="635:17">=</operator> <call pos:start="635:19" pos:end="635:33"><name pos:start="635:19" pos:end="635:26">load_reg</name><argument_list pos:start="635:27" pos:end="635:33">(<argument pos:start="635:28" pos:end="635:28"><expr pos:start="635:28" pos:end="635:28"><name pos:start="635:28" pos:end="635:28">s</name></expr></argument>, <argument pos:start="635:31" pos:end="635:32"><expr pos:start="635:31" pos:end="635:32"><name pos:start="635:31" pos:end="635:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:35"><expr pos:start="637:13" pos:end="637:34"><name pos:start="637:13" pos:end="637:16">tmp2</name> <operator pos:start="637:18" pos:end="637:18">=</operator> <call pos:start="637:20" pos:end="637:34"><name pos:start="637:20" pos:end="637:27">load_reg</name><argument_list pos:start="637:28" pos:end="637:34">(<argument pos:start="637:29" pos:end="637:29"><expr pos:start="637:29" pos:end="637:29"><name pos:start="637:29" pos:end="637:29">s</name></expr></argument>, <argument pos:start="637:32" pos:end="637:33"><expr pos:start="637:32" pos:end="637:33"><name pos:start="637:32" pos:end="637:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:64"><expr pos:start="639:13" pos:end="639:63"><name pos:start="639:13" pos:end="639:17">shift</name> <operator pos:start="639:19" pos:end="639:19">=</operator> <operator pos:start="639:21" pos:end="639:21">(</operator><operator pos:start="639:22" pos:end="639:22">(</operator><name pos:start="639:23" pos:end="639:26">insn</name> <operator pos:start="639:28" pos:end="639:29">&gt;&gt;</operator> <literal type="number" pos:start="639:31" pos:end="639:32">10</literal><operator pos:start="639:33" pos:end="639:33">)</operator> <operator pos:start="639:35" pos:end="639:35">&amp;</operator> <literal type="number" pos:start="639:37" pos:end="639:40">0x1c</literal><operator pos:start="639:41" pos:end="639:41">)</operator> <operator pos:start="639:43" pos:end="639:43">|</operator> <operator pos:start="639:45" pos:end="639:45">(</operator><operator pos:start="639:46" pos:end="639:46">(</operator><name pos:start="639:47" pos:end="639:50">insn</name> <operator pos:start="639:52" pos:end="639:53">&gt;&gt;</operator> <literal type="number" pos:start="639:55" pos:end="639:55">6</literal><operator pos:start="639:56" pos:end="639:56">)</operator> <operator pos:start="639:58" pos:end="639:58">&amp;</operator> <literal type="number" pos:start="639:60" pos:end="639:62">0x3</literal><operator pos:start="639:63" pos:end="639:63">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="641:13" pos:end="667:13"><if pos:start="641:13" pos:end="655:13">if <condition pos:start="641:16" pos:end="641:32">(<expr pos:start="641:17" pos:end="641:31"><name pos:start="641:17" pos:end="641:20">insn</name> <operator pos:start="641:22" pos:end="641:22">&amp;</operator> <operator pos:start="641:24" pos:end="641:24">(</operator><literal type="number" pos:start="641:25" pos:end="641:25">1</literal> <operator pos:start="641:27" pos:end="641:28">&lt;&lt;</operator> <literal type="number" pos:start="641:30" pos:end="641:30">5</literal><operator pos:start="641:31" pos:end="641:31">)</operator></expr>)</condition> <block pos:start="641:34" pos:end="655:13">{<block_content pos:start="645:17" pos:end="653:47">

                <comment type="block" pos:start="643:17" pos:end="643:27">/* pkhtb */</comment>

                <if_stmt pos:start="645:17" pos:end="647:31"><if pos:start="645:17" pos:end="647:31">if <condition pos:start="645:20" pos:end="645:31">(<expr pos:start="645:21" pos:end="645:30"><name pos:start="645:21" pos:end="645:25">shift</name> <operator pos:start="645:27" pos:end="645:28">==</operator> <literal type="number" pos:start="645:30" pos:end="645:30">0</literal></expr>)</condition><block type="pseudo" pos:start="647:21" pos:end="647:31"><block_content pos:start="647:21" pos:end="647:31">

                    <expr_stmt pos:start="647:21" pos:end="647:31"><expr pos:start="647:21" pos:end="647:30"><name pos:start="647:21" pos:end="647:25">shift</name> <operator pos:start="647:27" pos:end="647:27">=</operator> <literal type="number" pos:start="647:29" pos:end="647:30">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="649:17" pos:end="649:52"><expr pos:start="649:17" pos:end="649:51"><call pos:start="649:17" pos:end="649:51"><name pos:start="649:17" pos:end="649:32">tcg_gen_sari_i32</name><argument_list pos:start="649:33" pos:end="649:51">(<argument pos:start="649:34" pos:end="649:37"><expr pos:start="649:34" pos:end="649:37"><name pos:start="649:34" pos:end="649:37">tmp2</name></expr></argument>, <argument pos:start="649:40" pos:end="649:43"><expr pos:start="649:40" pos:end="649:43"><name pos:start="649:40" pos:end="649:43">tmp2</name></expr></argument>, <argument pos:start="649:46" pos:end="649:50"><expr pos:start="649:46" pos:end="649:50"><name pos:start="649:46" pos:end="649:50">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="651:17" pos:end="651:55"><expr pos:start="651:17" pos:end="651:54"><call pos:start="651:17" pos:end="651:54"><name pos:start="651:17" pos:end="651:32">tcg_gen_andi_i32</name><argument_list pos:start="651:33" pos:end="651:54">(<argument pos:start="651:34" pos:end="651:36"><expr pos:start="651:34" pos:end="651:36"><name pos:start="651:34" pos:end="651:36">tmp</name></expr></argument>, <argument pos:start="651:39" pos:end="651:41"><expr pos:start="651:39" pos:end="651:41"><name pos:start="651:39" pos:end="651:41">tmp</name></expr></argument>, <argument pos:start="651:44" pos:end="651:53"><expr pos:start="651:44" pos:end="651:53"><literal type="number" pos:start="651:44" pos:end="651:53">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="653:17" pos:end="653:47"><expr pos:start="653:17" pos:end="653:46"><call pos:start="653:17" pos:end="653:46"><name pos:start="653:17" pos:end="653:34">tcg_gen_ext16u_i32</name><argument_list pos:start="653:35" pos:end="653:46">(<argument pos:start="653:36" pos:end="653:39"><expr pos:start="653:36" pos:end="653:39"><name pos:start="653:36" pos:end="653:39">tmp2</name></expr></argument>, <argument pos:start="653:42" pos:end="653:45"><expr pos:start="653:42" pos:end="653:45"><name pos:start="653:42" pos:end="653:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="655:15" pos:end="667:13">else <block pos:start="655:20" pos:end="667:13">{<block_content pos:start="659:17" pos:end="665:57">

                <comment type="block" pos:start="657:17" pos:end="657:27">/* pkhbt */</comment>

                <if_stmt pos:start="659:17" pos:end="661:56"><if pos:start="659:17" pos:end="661:56">if <condition pos:start="659:20" pos:end="659:26">(<expr pos:start="659:21" pos:end="659:25"><name pos:start="659:21" pos:end="659:25">shift</name></expr>)</condition><block type="pseudo" pos:start="661:21" pos:end="661:56"><block_content pos:start="661:21" pos:end="661:56">

                    <expr_stmt pos:start="661:21" pos:end="661:56"><expr pos:start="661:21" pos:end="661:55"><call pos:start="661:21" pos:end="661:55"><name pos:start="661:21" pos:end="661:36">tcg_gen_shli_i32</name><argument_list pos:start="661:37" pos:end="661:55">(<argument pos:start="661:38" pos:end="661:41"><expr pos:start="661:38" pos:end="661:41"><name pos:start="661:38" pos:end="661:41">tmp2</name></expr></argument>, <argument pos:start="661:44" pos:end="661:47"><expr pos:start="661:44" pos:end="661:47"><name pos:start="661:44" pos:end="661:47">tmp2</name></expr></argument>, <argument pos:start="661:50" pos:end="661:54"><expr pos:start="661:50" pos:end="661:54"><name pos:start="661:50" pos:end="661:54">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="663:17" pos:end="663:45"><expr pos:start="663:17" pos:end="663:44"><call pos:start="663:17" pos:end="663:44"><name pos:start="663:17" pos:end="663:34">tcg_gen_ext16u_i32</name><argument_list pos:start="663:35" pos:end="663:44">(<argument pos:start="663:36" pos:end="663:38"><expr pos:start="663:36" pos:end="663:38"><name pos:start="663:36" pos:end="663:38">tmp</name></expr></argument>, <argument pos:start="663:41" pos:end="663:43"><expr pos:start="663:41" pos:end="663:43"><name pos:start="663:41" pos:end="663:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="665:17" pos:end="665:57"><expr pos:start="665:17" pos:end="665:56"><call pos:start="665:17" pos:end="665:56"><name pos:start="665:17" pos:end="665:32">tcg_gen_andi_i32</name><argument_list pos:start="665:33" pos:end="665:56">(<argument pos:start="665:34" pos:end="665:37"><expr pos:start="665:34" pos:end="665:37"><name pos:start="665:34" pos:end="665:37">tmp2</name></expr></argument>, <argument pos:start="665:40" pos:end="665:43"><expr pos:start="665:40" pos:end="665:43"><name pos:start="665:40" pos:end="665:43">tmp2</name></expr></argument>, <argument pos:start="665:46" pos:end="665:55"><expr pos:start="665:46" pos:end="665:55"><literal type="number" pos:start="665:46" pos:end="665:55">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="669:13" pos:end="669:43"><expr pos:start="669:13" pos:end="669:42"><call pos:start="669:13" pos:end="669:42"><name pos:start="669:13" pos:end="669:26">tcg_gen_or_i32</name><argument_list pos:start="669:27" pos:end="669:42">(<argument pos:start="669:28" pos:end="669:30"><expr pos:start="669:28" pos:end="669:30"><name pos:start="669:28" pos:end="669:30">tmp</name></expr></argument>, <argument pos:start="669:33" pos:end="669:35"><expr pos:start="669:33" pos:end="669:35"><name pos:start="669:33" pos:end="669:35">tmp</name></expr></argument>, <argument pos:start="669:38" pos:end="669:41"><expr pos:start="669:38" pos:end="669:41"><name pos:start="669:38" pos:end="669:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="671:13" pos:end="671:36"><expr pos:start="671:13" pos:end="671:35"><call pos:start="671:13" pos:end="671:35"><name pos:start="671:13" pos:end="671:29">tcg_temp_free_i32</name><argument_list pos:start="671:30" pos:end="671:35">(<argument pos:start="671:31" pos:end="671:34"><expr pos:start="671:31" pos:end="671:34"><name pos:start="671:31" pos:end="671:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="673:13" pos:end="673:34"><expr pos:start="673:13" pos:end="673:33"><call pos:start="673:13" pos:end="673:33"><name pos:start="673:13" pos:end="673:21">store_reg</name><argument_list pos:start="673:22" pos:end="673:33">(<argument pos:start="673:23" pos:end="673:23"><expr pos:start="673:23" pos:end="673:23"><name pos:start="673:23" pos:end="673:23">s</name></expr></argument>, <argument pos:start="673:26" pos:end="673:27"><expr pos:start="673:26" pos:end="673:27"><name pos:start="673:26" pos:end="673:27">rd</name></expr></argument>, <argument pos:start="673:30" pos:end="673:32"><expr pos:start="673:30" pos:end="673:32"><name pos:start="673:30" pos:end="673:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="675:11" pos:end="721:9">else <block pos:start="675:16" pos:end="721:9">{<block_content pos:start="679:13" pos:end="719:13">

            <comment type="block" pos:start="677:13" pos:end="677:59">/* Data processing register constant shift.  */</comment>

            <if_stmt pos:start="679:13" pos:end="689:13"><if pos:start="679:13" pos:end="685:13">if <condition pos:start="679:16" pos:end="679:25">(<expr pos:start="679:17" pos:end="679:24"><name pos:start="679:17" pos:end="679:18">rn</name> <operator pos:start="679:20" pos:end="679:21">==</operator> <literal type="number" pos:start="679:23" pos:end="679:24">15</literal></expr>)</condition> <block pos:start="679:27" pos:end="685:13">{<block_content pos:start="681:17" pos:end="683:41">

                <expr_stmt pos:start="681:17" pos:end="681:41"><expr pos:start="681:17" pos:end="681:40"><name pos:start="681:17" pos:end="681:19">tmp</name> <operator pos:start="681:21" pos:end="681:21">=</operator> <call pos:start="681:23" pos:end="681:40"><name pos:start="681:23" pos:end="681:38">tcg_temp_new_i32</name><argument_list pos:start="681:39" pos:end="681:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="683:17" pos:end="683:41"><expr pos:start="683:17" pos:end="683:40"><call pos:start="683:17" pos:end="683:40"><name pos:start="683:17" pos:end="683:32">tcg_gen_movi_i32</name><argument_list pos:start="683:33" pos:end="683:40">(<argument pos:start="683:34" pos:end="683:36"><expr pos:start="683:34" pos:end="683:36"><name pos:start="683:34" pos:end="683:36">tmp</name></expr></argument>, <argument pos:start="683:39" pos:end="683:39"><expr pos:start="683:39" pos:end="683:39"><literal type="number" pos:start="683:39" pos:end="683:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="685:15" pos:end="689:13">else <block pos:start="685:20" pos:end="689:13">{<block_content pos:start="687:17" pos:end="687:38">

                <expr_stmt pos:start="687:17" pos:end="687:38"><expr pos:start="687:17" pos:end="687:37"><name pos:start="687:17" pos:end="687:19">tmp</name> <operator pos:start="687:21" pos:end="687:21">=</operator> <call pos:start="687:23" pos:end="687:37"><name pos:start="687:23" pos:end="687:30">load_reg</name><argument_list pos:start="687:31" pos:end="687:37">(<argument pos:start="687:32" pos:end="687:32"><expr pos:start="687:32" pos:end="687:32"><name pos:start="687:32" pos:end="687:32">s</name></expr></argument>, <argument pos:start="687:35" pos:end="687:36"><expr pos:start="687:35" pos:end="687:36"><name pos:start="687:35" pos:end="687:36">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:35"><expr pos:start="691:13" pos:end="691:34"><name pos:start="691:13" pos:end="691:16">tmp2</name> <operator pos:start="691:18" pos:end="691:18">=</operator> <call pos:start="691:20" pos:end="691:34"><name pos:start="691:20" pos:end="691:27">load_reg</name><argument_list pos:start="691:28" pos:end="691:34">(<argument pos:start="691:29" pos:end="691:29"><expr pos:start="691:29" pos:end="691:29"><name pos:start="691:29" pos:end="691:29">s</name></expr></argument>, <argument pos:start="691:32" pos:end="691:33"><expr pos:start="691:32" pos:end="691:33"><name pos:start="691:32" pos:end="691:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="695:13" pos:end="695:38"><expr pos:start="695:13" pos:end="695:37"><name pos:start="695:13" pos:end="695:19">shiftop</name> <operator pos:start="695:21" pos:end="695:21">=</operator> <operator pos:start="695:23" pos:end="695:23">(</operator><name pos:start="695:24" pos:end="695:27">insn</name> <operator pos:start="695:29" pos:end="695:30">&gt;&gt;</operator> <literal type="number" pos:start="695:32" pos:end="695:32">4</literal><operator pos:start="695:33" pos:end="695:33">)</operator> <operator pos:start="695:35" pos:end="695:35">&amp;</operator> <literal type="number" pos:start="695:37" pos:end="695:37">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:62"><expr pos:start="697:13" pos:end="697:61"><name pos:start="697:13" pos:end="697:17">shift</name> <operator pos:start="697:19" pos:end="697:19">=</operator> <operator pos:start="697:21" pos:end="697:21">(</operator><operator pos:start="697:22" pos:end="697:22">(</operator><name pos:start="697:23" pos:end="697:26">insn</name> <operator pos:start="697:28" pos:end="697:29">&gt;&gt;</operator> <literal type="number" pos:start="697:31" pos:end="697:31">6</literal><operator pos:start="697:32" pos:end="697:32">)</operator> <operator pos:start="697:34" pos:end="697:34">&amp;</operator> <literal type="number" pos:start="697:36" pos:end="697:36">3</literal><operator pos:start="697:37" pos:end="697:37">)</operator> <operator pos:start="697:39" pos:end="697:39">|</operator> <operator pos:start="697:41" pos:end="697:41">(</operator><operator pos:start="697:42" pos:end="697:42">(</operator><name pos:start="697:43" pos:end="697:46">insn</name> <operator pos:start="697:48" pos:end="697:49">&gt;&gt;</operator> <literal type="number" pos:start="697:51" pos:end="697:52">10</literal><operator pos:start="697:53" pos:end="697:53">)</operator> <operator pos:start="697:55" pos:end="697:55">&amp;</operator> <literal type="number" pos:start="697:57" pos:end="697:60">0x1c</literal><operator pos:start="697:61" pos:end="697:61">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="699:13" pos:end="699:44"><expr pos:start="699:13" pos:end="699:43"><name pos:start="699:13" pos:end="699:17">conds</name> <operator pos:start="699:19" pos:end="699:19">=</operator> <operator pos:start="699:21" pos:end="699:21">(</operator><name pos:start="699:22" pos:end="699:25">insn</name> <operator pos:start="699:27" pos:end="699:27">&amp;</operator> <operator pos:start="699:29" pos:end="699:29">(</operator><literal type="number" pos:start="699:30" pos:end="699:30">1</literal> <operator pos:start="699:32" pos:end="699:33">&lt;&lt;</operator> <literal type="number" pos:start="699:35" pos:end="699:36">20</literal><operator pos:start="699:37" pos:end="699:37">)</operator><operator pos:start="699:38" pos:end="699:38">)</operator> <operator pos:start="699:40" pos:end="699:41">!=</operator> <literal type="number" pos:start="699:43" pos:end="699:43">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="701:13" pos:end="701:54"><expr pos:start="701:13" pos:end="701:53"><name pos:start="701:13" pos:end="701:20">logic_cc</name> <operator pos:start="701:22" pos:end="701:22">=</operator> <operator pos:start="701:24" pos:end="701:24">(</operator><name pos:start="701:25" pos:end="701:29">conds</name> <operator pos:start="701:31" pos:end="701:32">&amp;&amp;</operator> <call pos:start="701:34" pos:end="701:52"><name pos:start="701:34" pos:end="701:48">thumb2_logic_op</name><argument_list pos:start="701:49" pos:end="701:52">(<argument pos:start="701:50" pos:end="701:51"><expr pos:start="701:50" pos:end="701:51"><name pos:start="701:50" pos:end="701:51">op</name></expr></argument>)</argument_list></call><operator pos:start="701:53" pos:end="701:53">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="703:13" pos:end="703:61"><expr pos:start="703:13" pos:end="703:60"><call pos:start="703:13" pos:end="703:60"><name pos:start="703:13" pos:end="703:28">gen_arm_shift_im</name><argument_list pos:start="703:29" pos:end="703:60">(<argument pos:start="703:30" pos:end="703:33"><expr pos:start="703:30" pos:end="703:33"><name pos:start="703:30" pos:end="703:33">tmp2</name></expr></argument>, <argument pos:start="703:36" pos:end="703:42"><expr pos:start="703:36" pos:end="703:42"><name pos:start="703:36" pos:end="703:42">shiftop</name></expr></argument>, <argument pos:start="703:45" pos:end="703:49"><expr pos:start="703:45" pos:end="703:49"><name pos:start="703:45" pos:end="703:49">shift</name></expr></argument>, <argument pos:start="703:52" pos:end="703:59"><expr pos:start="703:52" pos:end="703:59"><name pos:start="703:52" pos:end="703:59">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="705:13" pos:end="707:32"><if pos:start="705:13" pos:end="707:32">if <condition pos:start="705:16" pos:end="705:63">(<expr pos:start="705:17" pos:end="705:62"><call pos:start="705:17" pos:end="705:62"><name pos:start="705:17" pos:end="705:34">gen_thumb2_data_op</name><argument_list pos:start="705:35" pos:end="705:62">(<argument pos:start="705:36" pos:end="705:36"><expr pos:start="705:36" pos:end="705:36"><name pos:start="705:36" pos:end="705:36">s</name></expr></argument>, <argument pos:start="705:39" pos:end="705:40"><expr pos:start="705:39" pos:end="705:40"><name pos:start="705:39" pos:end="705:40">op</name></expr></argument>, <argument pos:start="705:43" pos:end="705:47"><expr pos:start="705:43" pos:end="705:47"><name pos:start="705:43" pos:end="705:47">conds</name></expr></argument>, <argument pos:start="705:50" pos:end="705:50"><expr pos:start="705:50" pos:end="705:50"><literal type="number" pos:start="705:50" pos:end="705:50">0</literal></expr></argument>, <argument pos:start="705:53" pos:end="705:55"><expr pos:start="705:53" pos:end="705:55"><name pos:start="705:53" pos:end="705:55">tmp</name></expr></argument>, <argument pos:start="705:58" pos:end="705:61"><expr pos:start="705:58" pos:end="705:61"><name pos:start="705:58" pos:end="705:61">tmp2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="707:17" pos:end="707:32"><block_content pos:start="707:17" pos:end="707:32">

                <goto pos:start="707:17" pos:end="707:32">goto <name pos:start="707:22" pos:end="707:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="709:13" pos:end="709:36"><expr pos:start="709:13" pos:end="709:35"><call pos:start="709:13" pos:end="709:35"><name pos:start="709:13" pos:end="709:29">tcg_temp_free_i32</name><argument_list pos:start="709:30" pos:end="709:35">(<argument pos:start="709:31" pos:end="709:34"><expr pos:start="709:31" pos:end="709:34"><name pos:start="709:31" pos:end="709:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="711:13" pos:end="719:13"><if pos:start="711:13" pos:end="715:13">if <condition pos:start="711:16" pos:end="711:25">(<expr pos:start="711:17" pos:end="711:24"><name pos:start="711:17" pos:end="711:18">rd</name> <operator pos:start="711:20" pos:end="711:21">!=</operator> <literal type="number" pos:start="711:23" pos:end="711:24">15</literal></expr>)</condition> <block pos:start="711:27" pos:end="715:13">{<block_content pos:start="713:17" pos:end="713:38">

                <expr_stmt pos:start="713:17" pos:end="713:38"><expr pos:start="713:17" pos:end="713:37"><call pos:start="713:17" pos:end="713:37"><name pos:start="713:17" pos:end="713:25">store_reg</name><argument_list pos:start="713:26" pos:end="713:37">(<argument pos:start="713:27" pos:end="713:27"><expr pos:start="713:27" pos:end="713:27"><name pos:start="713:27" pos:end="713:27">s</name></expr></argument>, <argument pos:start="713:30" pos:end="713:31"><expr pos:start="713:30" pos:end="713:31"><name pos:start="713:30" pos:end="713:31">rd</name></expr></argument>, <argument pos:start="713:34" pos:end="713:36"><expr pos:start="713:34" pos:end="713:36"><name pos:start="713:34" pos:end="713:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="715:15" pos:end="719:13">else <block pos:start="715:20" pos:end="719:13">{<block_content pos:start="717:17" pos:end="717:39">

                <expr_stmt pos:start="717:17" pos:end="717:39"><expr pos:start="717:17" pos:end="717:38"><call pos:start="717:17" pos:end="717:38"><name pos:start="717:17" pos:end="717:33">tcg_temp_free_i32</name><argument_list pos:start="717:34" pos:end="717:38">(<argument pos:start="717:35" pos:end="717:37"><expr pos:start="717:35" pos:end="717:37"><name pos:start="717:35" pos:end="717:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="723:9" pos:end="723:14">break;</break>

    <case pos:start="725:5" pos:end="725:12">case <expr pos:start="725:10" pos:end="725:11"><literal type="number" pos:start="725:10" pos:end="725:11">13</literal></expr>:</case> <comment type="block" pos:start="725:14" pos:end="725:41">/* Misc data processing.  */</comment>

        <expr_stmt pos:start="727:9" pos:end="727:52"><expr pos:start="727:9" pos:end="727:51"><name pos:start="727:9" pos:end="727:10">op</name> <operator pos:start="727:12" pos:end="727:12">=</operator> <operator pos:start="727:14" pos:end="727:14">(</operator><operator pos:start="727:15" pos:end="727:15">(</operator><name pos:start="727:16" pos:end="727:19">insn</name> <operator pos:start="727:21" pos:end="727:22">&gt;&gt;</operator> <literal type="number" pos:start="727:24" pos:end="727:25">22</literal><operator pos:start="727:26" pos:end="727:26">)</operator> <operator pos:start="727:28" pos:end="727:28">&amp;</operator> <literal type="number" pos:start="727:30" pos:end="727:30">6</literal><operator pos:start="727:31" pos:end="727:31">)</operator> <operator pos:start="727:33" pos:end="727:33">|</operator> <operator pos:start="727:35" pos:end="727:35">(</operator><operator pos:start="727:36" pos:end="727:36">(</operator><name pos:start="727:37" pos:end="727:40">insn</name> <operator pos:start="727:42" pos:end="727:43">&gt;&gt;</operator> <literal type="number" pos:start="727:45" pos:end="727:45">7</literal><operator pos:start="727:46" pos:end="727:46">)</operator> <operator pos:start="727:48" pos:end="727:48">&amp;</operator> <literal type="number" pos:start="727:50" pos:end="727:50">1</literal><operator pos:start="727:51" pos:end="727:51">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="729:9" pos:end="731:28"><if pos:start="729:9" pos:end="731:28">if <condition pos:start="729:12" pos:end="729:48">(<expr pos:start="729:13" pos:end="729:47"><name pos:start="729:13" pos:end="729:14">op</name> <operator pos:start="729:16" pos:end="729:16">&lt;</operator> <literal type="number" pos:start="729:18" pos:end="729:18">4</literal> <operator pos:start="729:20" pos:end="729:21">&amp;&amp;</operator> <operator pos:start="729:23" pos:end="729:23">(</operator><name pos:start="729:24" pos:end="729:27">insn</name> <operator pos:start="729:29" pos:end="729:29">&amp;</operator> <literal type="number" pos:start="729:31" pos:end="729:36">0xf000</literal><operator pos:start="729:37" pos:end="729:37">)</operator> <operator pos:start="729:39" pos:end="729:40">!=</operator> <literal type="number" pos:start="729:42" pos:end="729:47">0xf000</literal></expr>)</condition><block type="pseudo" pos:start="731:13" pos:end="731:28"><block_content pos:start="731:13" pos:end="731:28">

            <goto pos:start="731:13" pos:end="731:28">goto <name pos:start="731:18" pos:end="731:27">illegal_op</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="733:9" pos:end="1243:9">switch <condition pos:start="733:16" pos:end="733:19">(<expr pos:start="733:17" pos:end="733:18"><name pos:start="733:17" pos:end="733:18">op</name></expr>)</condition> <block pos:start="733:21" pos:end="1243:9">{<block_content pos:start="735:9" pos:end="1241:18">

        <case pos:start="735:9" pos:end="735:15">case <expr pos:start="735:14" pos:end="735:14"><literal type="number" pos:start="735:14" pos:end="735:14">0</literal></expr>:</case> <comment type="block" pos:start="735:17" pos:end="735:49">/* Register controlled shift.  */</comment>

            <expr_stmt pos:start="737:13" pos:end="737:34"><expr pos:start="737:13" pos:end="737:33"><name pos:start="737:13" pos:end="737:15">tmp</name> <operator pos:start="737:17" pos:end="737:17">=</operator> <call pos:start="737:19" pos:end="737:33"><name pos:start="737:19" pos:end="737:26">load_reg</name><argument_list pos:start="737:27" pos:end="737:33">(<argument pos:start="737:28" pos:end="737:28"><expr pos:start="737:28" pos:end="737:28"><name pos:start="737:28" pos:end="737:28">s</name></expr></argument>, <argument pos:start="737:31" pos:end="737:32"><expr pos:start="737:31" pos:end="737:32"><name pos:start="737:31" pos:end="737:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="739:13" pos:end="739:35"><expr pos:start="739:13" pos:end="739:34"><name pos:start="739:13" pos:end="739:16">tmp2</name> <operator pos:start="739:18" pos:end="739:18">=</operator> <call pos:start="739:20" pos:end="739:34"><name pos:start="739:20" pos:end="739:27">load_reg</name><argument_list pos:start="739:28" pos:end="739:34">(<argument pos:start="739:29" pos:end="739:29"><expr pos:start="739:29" pos:end="739:29"><name pos:start="739:29" pos:end="739:29">s</name></expr></argument>, <argument pos:start="739:32" pos:end="739:33"><expr pos:start="739:32" pos:end="739:33"><name pos:start="739:32" pos:end="739:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="741:13" pos:end="743:32"><if pos:start="741:13" pos:end="743:32">if <condition pos:start="741:16" pos:end="741:35">(<expr pos:start="741:17" pos:end="741:34"><operator pos:start="741:17" pos:end="741:17">(</operator><name pos:start="741:18" pos:end="741:21">insn</name> <operator pos:start="741:23" pos:end="741:23">&amp;</operator> <literal type="number" pos:start="741:25" pos:end="741:28">0x70</literal><operator pos:start="741:29" pos:end="741:29">)</operator> <operator pos:start="741:31" pos:end="741:32">!=</operator> <literal type="number" pos:start="741:34" pos:end="741:34">0</literal></expr>)</condition><block type="pseudo" pos:start="743:17" pos:end="743:32"><block_content pos:start="743:17" pos:end="743:32">

                <goto pos:start="743:17" pos:end="743:32">goto <name pos:start="743:22" pos:end="743:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="745:13" pos:end="745:34"><expr pos:start="745:13" pos:end="745:33"><name pos:start="745:13" pos:end="745:14">op</name> <operator pos:start="745:16" pos:end="745:16">=</operator> <operator pos:start="745:18" pos:end="745:18">(</operator><name pos:start="745:19" pos:end="745:22">insn</name> <operator pos:start="745:24" pos:end="745:25">&gt;&gt;</operator> <literal type="number" pos:start="745:27" pos:end="745:28">21</literal><operator pos:start="745:29" pos:end="745:29">)</operator> <operator pos:start="745:31" pos:end="745:31">&amp;</operator> <literal type="number" pos:start="745:33" pos:end="745:33">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="747:13" pos:end="747:47"><expr pos:start="747:13" pos:end="747:46"><name pos:start="747:13" pos:end="747:20">logic_cc</name> <operator pos:start="747:22" pos:end="747:22">=</operator> <operator pos:start="747:24" pos:end="747:24">(</operator><name pos:start="747:25" pos:end="747:28">insn</name> <operator pos:start="747:30" pos:end="747:30">&amp;</operator> <operator pos:start="747:32" pos:end="747:32">(</operator><literal type="number" pos:start="747:33" pos:end="747:33">1</literal> <operator pos:start="747:35" pos:end="747:36">&lt;&lt;</operator> <literal type="number" pos:start="747:38" pos:end="747:39">20</literal><operator pos:start="747:40" pos:end="747:40">)</operator><operator pos:start="747:41" pos:end="747:41">)</operator> <operator pos:start="747:43" pos:end="747:44">!=</operator> <literal type="number" pos:start="747:46" pos:end="747:46">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="749:13" pos:end="749:55"><expr pos:start="749:13" pos:end="749:54"><call pos:start="749:13" pos:end="749:54"><name pos:start="749:13" pos:end="749:29">gen_arm_shift_reg</name><argument_list pos:start="749:30" pos:end="749:54">(<argument pos:start="749:31" pos:end="749:33"><expr pos:start="749:31" pos:end="749:33"><name pos:start="749:31" pos:end="749:33">tmp</name></expr></argument>, <argument pos:start="749:36" pos:end="749:37"><expr pos:start="749:36" pos:end="749:37"><name pos:start="749:36" pos:end="749:37">op</name></expr></argument>, <argument pos:start="749:40" pos:end="749:43"><expr pos:start="749:40" pos:end="749:43"><name pos:start="749:40" pos:end="749:43">tmp2</name></expr></argument>, <argument pos:start="749:46" pos:end="749:53"><expr pos:start="749:46" pos:end="749:53"><name pos:start="749:46" pos:end="749:53">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="751:13" pos:end="753:34"><if pos:start="751:13" pos:end="753:34">if <condition pos:start="751:16" pos:end="751:25">(<expr pos:start="751:17" pos:end="751:24"><name pos:start="751:17" pos:end="751:24">logic_cc</name></expr>)</condition><block type="pseudo" pos:start="753:17" pos:end="753:34"><block_content pos:start="753:17" pos:end="753:34">

                <expr_stmt pos:start="753:17" pos:end="753:34"><expr pos:start="753:17" pos:end="753:33"><call pos:start="753:17" pos:end="753:33"><name pos:start="753:17" pos:end="753:28">gen_logic_CC</name><argument_list pos:start="753:29" pos:end="753:33">(<argument pos:start="753:30" pos:end="753:32"><expr pos:start="753:30" pos:end="753:32"><name pos:start="753:30" pos:end="753:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="755:13" pos:end="755:42"><expr pos:start="755:13" pos:end="755:41"><call pos:start="755:13" pos:end="755:41"><name pos:start="755:13" pos:end="755:24">store_reg_bx</name><argument_list pos:start="755:25" pos:end="755:41">(<argument pos:start="755:26" pos:end="755:28"><expr pos:start="755:26" pos:end="755:28"><name pos:start="755:26" pos:end="755:28">env</name></expr></argument>, <argument pos:start="755:31" pos:end="755:31"><expr pos:start="755:31" pos:end="755:31"><name pos:start="755:31" pos:end="755:31">s</name></expr></argument>, <argument pos:start="755:34" pos:end="755:35"><expr pos:start="755:34" pos:end="755:35"><name pos:start="755:34" pos:end="755:35">rd</name></expr></argument>, <argument pos:start="755:38" pos:end="755:40"><expr pos:start="755:38" pos:end="755:40"><name pos:start="755:38" pos:end="755:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="757:13" pos:end="757:18">break;</break>

        <case pos:start="759:9" pos:end="759:15">case <expr pos:start="759:14" pos:end="759:14"><literal type="number" pos:start="759:14" pos:end="759:14">1</literal></expr>:</case> <comment type="block" pos:start="759:17" pos:end="759:40">/* Sign/zero extend.  */</comment>

            <expr_stmt pos:start="761:13" pos:end="761:34"><expr pos:start="761:13" pos:end="761:33"><name pos:start="761:13" pos:end="761:15">tmp</name> <operator pos:start="761:17" pos:end="761:17">=</operator> <call pos:start="761:19" pos:end="761:33"><name pos:start="761:19" pos:end="761:26">load_reg</name><argument_list pos:start="761:27" pos:end="761:33">(<argument pos:start="761:28" pos:end="761:28"><expr pos:start="761:28" pos:end="761:28"><name pos:start="761:28" pos:end="761:28">s</name></expr></argument>, <argument pos:start="761:31" pos:end="761:32"><expr pos:start="761:31" pos:end="761:32"><name pos:start="761:31" pos:end="761:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="763:13" pos:end="763:36"><expr pos:start="763:13" pos:end="763:35"><name pos:start="763:13" pos:end="763:17">shift</name> <operator pos:start="763:19" pos:end="763:19">=</operator> <operator pos:start="763:21" pos:end="763:21">(</operator><name pos:start="763:22" pos:end="763:25">insn</name> <operator pos:start="763:27" pos:end="763:28">&gt;&gt;</operator> <literal type="number" pos:start="763:30" pos:end="763:30">4</literal><operator pos:start="763:31" pos:end="763:31">)</operator> <operator pos:start="763:33" pos:end="763:33">&amp;</operator> <literal type="number" pos:start="763:35" pos:end="763:35">3</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="765:13" pos:end="767:49">/* ??? In many cases it's not necessary to do a

               rotate, a shift is sufficient.  */</comment>

            <if_stmt pos:start="769:13" pos:end="771:55"><if pos:start="769:13" pos:end="771:55">if <condition pos:start="769:16" pos:end="769:27">(<expr pos:start="769:17" pos:end="769:26"><name pos:start="769:17" pos:end="769:21">shift</name> <operator pos:start="769:23" pos:end="769:24">!=</operator> <literal type="number" pos:start="769:26" pos:end="769:26">0</literal></expr>)</condition><block type="pseudo" pos:start="771:17" pos:end="771:55"><block_content pos:start="771:17" pos:end="771:55">

                <expr_stmt pos:start="771:17" pos:end="771:55"><expr pos:start="771:17" pos:end="771:54"><call pos:start="771:17" pos:end="771:54"><name pos:start="771:17" pos:end="771:33">tcg_gen_rotri_i32</name><argument_list pos:start="771:34" pos:end="771:54">(<argument pos:start="771:35" pos:end="771:37"><expr pos:start="771:35" pos:end="771:37"><name pos:start="771:35" pos:end="771:37">tmp</name></expr></argument>, <argument pos:start="771:40" pos:end="771:42"><expr pos:start="771:40" pos:end="771:42"><name pos:start="771:40" pos:end="771:42">tmp</name></expr></argument>, <argument pos:start="771:45" pos:end="771:53"><expr pos:start="771:45" pos:end="771:53"><name pos:start="771:45" pos:end="771:49">shift</name> <operator pos:start="771:51" pos:end="771:51">*</operator> <literal type="number" pos:start="771:53" pos:end="771:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="773:13" pos:end="773:34"><expr pos:start="773:13" pos:end="773:33"><name pos:start="773:13" pos:end="773:14">op</name> <operator pos:start="773:16" pos:end="773:16">=</operator> <operator pos:start="773:18" pos:end="773:18">(</operator><name pos:start="773:19" pos:end="773:22">insn</name> <operator pos:start="773:24" pos:end="773:25">&gt;&gt;</operator> <literal type="number" pos:start="773:27" pos:end="773:28">20</literal><operator pos:start="773:29" pos:end="773:29">)</operator> <operator pos:start="773:31" pos:end="773:31">&amp;</operator> <literal type="number" pos:start="773:33" pos:end="773:33">7</literal></expr>;</expr_stmt>

            <switch pos:start="775:13" pos:end="791:13">switch <condition pos:start="775:20" pos:end="775:23">(<expr pos:start="775:21" pos:end="775:22"><name pos:start="775:21" pos:end="775:22">op</name></expr>)</condition> <block pos:start="775:25" pos:end="791:13">{<block_content pos:start="777:13" pos:end="789:37">

            <case pos:start="777:13" pos:end="777:19">case <expr pos:start="777:18" pos:end="777:18"><literal type="number" pos:start="777:18" pos:end="777:18">0</literal></expr>:</case> <expr_stmt pos:start="777:21" pos:end="777:34"><expr pos:start="777:21" pos:end="777:33"><call pos:start="777:21" pos:end="777:33"><name pos:start="777:21" pos:end="777:28">gen_sxth</name><argument_list pos:start="777:29" pos:end="777:33">(<argument pos:start="777:30" pos:end="777:32"><expr pos:start="777:30" pos:end="777:32"><name pos:start="777:30" pos:end="777:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <break pos:start="777:38" pos:end="777:43">break;</break>

            <case pos:start="779:13" pos:end="779:19">case <expr pos:start="779:18" pos:end="779:18"><literal type="number" pos:start="779:18" pos:end="779:18">1</literal></expr>:</case> <expr_stmt pos:start="779:21" pos:end="779:34"><expr pos:start="779:21" pos:end="779:33"><call pos:start="779:21" pos:end="779:33"><name pos:start="779:21" pos:end="779:28">gen_uxth</name><argument_list pos:start="779:29" pos:end="779:33">(<argument pos:start="779:30" pos:end="779:32"><expr pos:start="779:30" pos:end="779:32"><name pos:start="779:30" pos:end="779:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <break pos:start="779:38" pos:end="779:43">break;</break>

            <case pos:start="781:13" pos:end="781:19">case <expr pos:start="781:18" pos:end="781:18"><literal type="number" pos:start="781:18" pos:end="781:18">2</literal></expr>:</case> <expr_stmt pos:start="781:21" pos:end="781:36"><expr pos:start="781:21" pos:end="781:35"><call pos:start="781:21" pos:end="781:35"><name pos:start="781:21" pos:end="781:30">gen_sxtb16</name><argument_list pos:start="781:31" pos:end="781:35">(<argument pos:start="781:32" pos:end="781:34"><expr pos:start="781:32" pos:end="781:34"><name pos:start="781:32" pos:end="781:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="781:38" pos:end="781:43">break;</break>

            <case pos:start="783:13" pos:end="783:19">case <expr pos:start="783:18" pos:end="783:18"><literal type="number" pos:start="783:18" pos:end="783:18">3</literal></expr>:</case> <expr_stmt pos:start="783:21" pos:end="783:36"><expr pos:start="783:21" pos:end="783:35"><call pos:start="783:21" pos:end="783:35"><name pos:start="783:21" pos:end="783:30">gen_uxtb16</name><argument_list pos:start="783:31" pos:end="783:35">(<argument pos:start="783:32" pos:end="783:34"><expr pos:start="783:32" pos:end="783:34"><name pos:start="783:32" pos:end="783:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="783:38" pos:end="783:43">break;</break>

            <case pos:start="785:13" pos:end="785:19">case <expr pos:start="785:18" pos:end="785:18"><literal type="number" pos:start="785:18" pos:end="785:18">4</literal></expr>:</case> <expr_stmt pos:start="785:21" pos:end="785:34"><expr pos:start="785:21" pos:end="785:33"><call pos:start="785:21" pos:end="785:33"><name pos:start="785:21" pos:end="785:28">gen_sxtb</name><argument_list pos:start="785:29" pos:end="785:33">(<argument pos:start="785:30" pos:end="785:32"><expr pos:start="785:30" pos:end="785:32"><name pos:start="785:30" pos:end="785:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <break pos:start="785:38" pos:end="785:43">break;</break>

            <case pos:start="787:13" pos:end="787:19">case <expr pos:start="787:18" pos:end="787:18"><literal type="number" pos:start="787:18" pos:end="787:18">5</literal></expr>:</case> <expr_stmt pos:start="787:21" pos:end="787:34"><expr pos:start="787:21" pos:end="787:33"><call pos:start="787:21" pos:end="787:33"><name pos:start="787:21" pos:end="787:28">gen_uxtb</name><argument_list pos:start="787:29" pos:end="787:33">(<argument pos:start="787:30" pos:end="787:32"><expr pos:start="787:30" pos:end="787:32"><name pos:start="787:30" pos:end="787:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <break pos:start="787:38" pos:end="787:43">break;</break>

            <default pos:start="789:13" pos:end="789:20">default:</default> <goto pos:start="789:22" pos:end="789:37">goto <name pos:start="789:27" pos:end="789:36">illegal_op</name>;</goto>

            </block_content>}</block></switch>

            <if_stmt pos:start="793:13" pos:end="809:13"><if pos:start="793:13" pos:end="809:13">if <condition pos:start="793:16" pos:end="793:25">(<expr pos:start="793:17" pos:end="793:24"><name pos:start="793:17" pos:end="793:18">rn</name> <operator pos:start="793:20" pos:end="793:21">!=</operator> <literal type="number" pos:start="793:23" pos:end="793:24">15</literal></expr>)</condition> <block pos:start="793:27" pos:end="809:13">{<block_content pos:start="795:17" pos:end="807:17">

                <expr_stmt pos:start="795:17" pos:end="795:39"><expr pos:start="795:17" pos:end="795:38"><name pos:start="795:17" pos:end="795:20">tmp2</name> <operator pos:start="795:22" pos:end="795:22">=</operator> <call pos:start="795:24" pos:end="795:38"><name pos:start="795:24" pos:end="795:31">load_reg</name><argument_list pos:start="795:32" pos:end="795:38">(<argument pos:start="795:33" pos:end="795:33"><expr pos:start="795:33" pos:end="795:33"><name pos:start="795:33" pos:end="795:33">s</name></expr></argument>, <argument pos:start="795:36" pos:end="795:37"><expr pos:start="795:36" pos:end="795:37"><name pos:start="795:36" pos:end="795:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="797:17" pos:end="807:17"><if pos:start="797:17" pos:end="801:17">if <condition pos:start="797:20" pos:end="797:35">(<expr pos:start="797:21" pos:end="797:34"><operator pos:start="797:21" pos:end="797:21">(</operator><name pos:start="797:22" pos:end="797:23">op</name> <operator pos:start="797:25" pos:end="797:26">&gt;&gt;</operator> <literal type="number" pos:start="797:28" pos:end="797:28">1</literal><operator pos:start="797:29" pos:end="797:29">)</operator> <operator pos:start="797:31" pos:end="797:32">==</operator> <literal type="number" pos:start="797:34" pos:end="797:34">1</literal></expr>)</condition> <block pos:start="797:37" pos:end="801:17">{<block_content pos:start="799:21" pos:end="799:41">

                    <expr_stmt pos:start="799:21" pos:end="799:41"><expr pos:start="799:21" pos:end="799:40"><call pos:start="799:21" pos:end="799:40"><name pos:start="799:21" pos:end="799:29">gen_add16</name><argument_list pos:start="799:30" pos:end="799:40">(<argument pos:start="799:31" pos:end="799:33"><expr pos:start="799:31" pos:end="799:33"><name pos:start="799:31" pos:end="799:33">tmp</name></expr></argument>, <argument pos:start="799:36" pos:end="799:39"><expr pos:start="799:36" pos:end="799:39"><name pos:start="799:36" pos:end="799:39">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="801:19" pos:end="807:17">else <block pos:start="801:24" pos:end="807:17">{<block_content pos:start="803:21" pos:end="805:44">

                    <expr_stmt pos:start="803:21" pos:end="803:52"><expr pos:start="803:21" pos:end="803:51"><call pos:start="803:21" pos:end="803:51"><name pos:start="803:21" pos:end="803:35">tcg_gen_add_i32</name><argument_list pos:start="803:36" pos:end="803:51">(<argument pos:start="803:37" pos:end="803:39"><expr pos:start="803:37" pos:end="803:39"><name pos:start="803:37" pos:end="803:39">tmp</name></expr></argument>, <argument pos:start="803:42" pos:end="803:44"><expr pos:start="803:42" pos:end="803:44"><name pos:start="803:42" pos:end="803:44">tmp</name></expr></argument>, <argument pos:start="803:47" pos:end="803:50"><expr pos:start="803:47" pos:end="803:50"><name pos:start="803:47" pos:end="803:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="805:21" pos:end="805:44"><expr pos:start="805:21" pos:end="805:43"><call pos:start="805:21" pos:end="805:43"><name pos:start="805:21" pos:end="805:37">tcg_temp_free_i32</name><argument_list pos:start="805:38" pos:end="805:43">(<argument pos:start="805:39" pos:end="805:42"><expr pos:start="805:39" pos:end="805:42"><name pos:start="805:39" pos:end="805:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="811:13" pos:end="811:34"><expr pos:start="811:13" pos:end="811:33"><call pos:start="811:13" pos:end="811:33"><name pos:start="811:13" pos:end="811:21">store_reg</name><argument_list pos:start="811:22" pos:end="811:33">(<argument pos:start="811:23" pos:end="811:23"><expr pos:start="811:23" pos:end="811:23"><name pos:start="811:23" pos:end="811:23">s</name></expr></argument>, <argument pos:start="811:26" pos:end="811:27"><expr pos:start="811:26" pos:end="811:27"><name pos:start="811:26" pos:end="811:27">rd</name></expr></argument>, <argument pos:start="811:30" pos:end="811:32"><expr pos:start="811:30" pos:end="811:32"><name pos:start="811:30" pos:end="811:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="813:13" pos:end="813:18">break;</break>

        <case pos:start="815:9" pos:end="815:15">case <expr pos:start="815:14" pos:end="815:14"><literal type="number" pos:start="815:14" pos:end="815:14">2</literal></expr>:</case> <comment type="block" pos:start="815:17" pos:end="815:41">/* SIMD add/subtract.  */</comment>

            <expr_stmt pos:start="817:13" pos:end="817:34"><expr pos:start="817:13" pos:end="817:33"><name pos:start="817:13" pos:end="817:14">op</name> <operator pos:start="817:16" pos:end="817:16">=</operator> <operator pos:start="817:18" pos:end="817:18">(</operator><name pos:start="817:19" pos:end="817:22">insn</name> <operator pos:start="817:24" pos:end="817:25">&gt;&gt;</operator> <literal type="number" pos:start="817:27" pos:end="817:28">20</literal><operator pos:start="817:29" pos:end="817:29">)</operator> <operator pos:start="817:31" pos:end="817:31">&amp;</operator> <literal type="number" pos:start="817:33" pos:end="817:33">7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="819:13" pos:end="819:36"><expr pos:start="819:13" pos:end="819:35"><name pos:start="819:13" pos:end="819:17">shift</name> <operator pos:start="819:19" pos:end="819:19">=</operator> <operator pos:start="819:21" pos:end="819:21">(</operator><name pos:start="819:22" pos:end="819:25">insn</name> <operator pos:start="819:27" pos:end="819:28">&gt;&gt;</operator> <literal type="number" pos:start="819:30" pos:end="819:30">4</literal><operator pos:start="819:31" pos:end="819:31">)</operator> <operator pos:start="819:33" pos:end="819:33">&amp;</operator> <literal type="number" pos:start="819:35" pos:end="819:35">7</literal></expr>;</expr_stmt>

            <if_stmt pos:start="821:13" pos:end="823:32"><if pos:start="821:13" pos:end="823:32">if <condition pos:start="821:16" pos:end="821:50">(<expr pos:start="821:17" pos:end="821:49"><operator pos:start="821:17" pos:end="821:17">(</operator><name pos:start="821:18" pos:end="821:19">op</name> <operator pos:start="821:21" pos:end="821:21">&amp;</operator> <literal type="number" pos:start="821:23" pos:end="821:23">3</literal><operator pos:start="821:24" pos:end="821:24">)</operator> <operator pos:start="821:26" pos:end="821:27">==</operator> <literal type="number" pos:start="821:29" pos:end="821:29">3</literal> <operator pos:start="821:31" pos:end="821:32">||</operator> <operator pos:start="821:34" pos:end="821:34">(</operator><name pos:start="821:35" pos:end="821:39">shift</name> <operator pos:start="821:41" pos:end="821:41">&amp;</operator> <literal type="number" pos:start="821:43" pos:end="821:43">3</literal><operator pos:start="821:44" pos:end="821:44">)</operator> <operator pos:start="821:46" pos:end="821:47">==</operator> <literal type="number" pos:start="821:49" pos:end="821:49">3</literal></expr>)</condition><block type="pseudo" pos:start="823:17" pos:end="823:32"><block_content pos:start="823:17" pos:end="823:32">

                <goto pos:start="823:17" pos:end="823:32">goto <name pos:start="823:22" pos:end="823:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="825:13" pos:end="825:34"><expr pos:start="825:13" pos:end="825:33"><name pos:start="825:13" pos:end="825:15">tmp</name> <operator pos:start="825:17" pos:end="825:17">=</operator> <call pos:start="825:19" pos:end="825:33"><name pos:start="825:19" pos:end="825:26">load_reg</name><argument_list pos:start="825:27" pos:end="825:33">(<argument pos:start="825:28" pos:end="825:28"><expr pos:start="825:28" pos:end="825:28"><name pos:start="825:28" pos:end="825:28">s</name></expr></argument>, <argument pos:start="825:31" pos:end="825:32"><expr pos:start="825:31" pos:end="825:32"><name pos:start="825:31" pos:end="825:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="827:13" pos:end="827:35"><expr pos:start="827:13" pos:end="827:34"><name pos:start="827:13" pos:end="827:16">tmp2</name> <operator pos:start="827:18" pos:end="827:18">=</operator> <call pos:start="827:20" pos:end="827:34"><name pos:start="827:20" pos:end="827:27">load_reg</name><argument_list pos:start="827:28" pos:end="827:34">(<argument pos:start="827:29" pos:end="827:29"><expr pos:start="827:29" pos:end="827:29"><name pos:start="827:29" pos:end="827:29">s</name></expr></argument>, <argument pos:start="827:32" pos:end="827:33"><expr pos:start="827:32" pos:end="827:33"><name pos:start="827:32" pos:end="827:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="829:13" pos:end="829:61"><expr pos:start="829:13" pos:end="829:60"><call pos:start="829:13" pos:end="829:60"><name pos:start="829:13" pos:end="829:38">gen_thumb2_parallel_addsub</name><argument_list pos:start="829:39" pos:end="829:60">(<argument pos:start="829:40" pos:end="829:41"><expr pos:start="829:40" pos:end="829:41"><name pos:start="829:40" pos:end="829:41">op</name></expr></argument>, <argument pos:start="829:44" pos:end="829:48"><expr pos:start="829:44" pos:end="829:48"><name pos:start="829:44" pos:end="829:48">shift</name></expr></argument>, <argument pos:start="829:51" pos:end="829:53"><expr pos:start="829:51" pos:end="829:53"><name pos:start="829:51" pos:end="829:53">tmp</name></expr></argument>, <argument pos:start="829:56" pos:end="829:59"><expr pos:start="829:56" pos:end="829:59"><name pos:start="829:56" pos:end="829:59">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="831:13" pos:end="831:36"><expr pos:start="831:13" pos:end="831:35"><call pos:start="831:13" pos:end="831:35"><name pos:start="831:13" pos:end="831:29">tcg_temp_free_i32</name><argument_list pos:start="831:30" pos:end="831:35">(<argument pos:start="831:31" pos:end="831:34"><expr pos:start="831:31" pos:end="831:34"><name pos:start="831:31" pos:end="831:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="833:13" pos:end="833:34"><expr pos:start="833:13" pos:end="833:33"><call pos:start="833:13" pos:end="833:33"><name pos:start="833:13" pos:end="833:21">store_reg</name><argument_list pos:start="833:22" pos:end="833:33">(<argument pos:start="833:23" pos:end="833:23"><expr pos:start="833:23" pos:end="833:23"><name pos:start="833:23" pos:end="833:23">s</name></expr></argument>, <argument pos:start="833:26" pos:end="833:27"><expr pos:start="833:26" pos:end="833:27"><name pos:start="833:26" pos:end="833:27">rd</name></expr></argument>, <argument pos:start="833:30" pos:end="833:32"><expr pos:start="833:30" pos:end="833:32"><name pos:start="833:30" pos:end="833:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="835:13" pos:end="835:18">break;</break>

        <case pos:start="837:9" pos:end="837:15">case <expr pos:start="837:14" pos:end="837:14"><literal type="number" pos:start="837:14" pos:end="837:14">3</literal></expr>:</case> <comment type="block" pos:start="837:17" pos:end="837:45">/* Other data processing.  */</comment>

            <expr_stmt pos:start="839:13" pos:end="839:59"><expr pos:start="839:13" pos:end="839:58"><name pos:start="839:13" pos:end="839:14">op</name> <operator pos:start="839:16" pos:end="839:16">=</operator> <operator pos:start="839:18" pos:end="839:18">(</operator><operator pos:start="839:19" pos:end="839:19">(</operator><name pos:start="839:20" pos:end="839:23">insn</name> <operator pos:start="839:25" pos:end="839:26">&gt;&gt;</operator> <literal type="number" pos:start="839:28" pos:end="839:29">17</literal><operator pos:start="839:30" pos:end="839:30">)</operator> <operator pos:start="839:32" pos:end="839:32">&amp;</operator> <literal type="number" pos:start="839:34" pos:end="839:37">0x38</literal><operator pos:start="839:38" pos:end="839:38">)</operator> <operator pos:start="839:40" pos:end="839:40">|</operator> <operator pos:start="839:42" pos:end="839:42">(</operator><operator pos:start="839:43" pos:end="839:43">(</operator><name pos:start="839:44" pos:end="839:47">insn</name> <operator pos:start="839:49" pos:end="839:50">&gt;&gt;</operator> <literal type="number" pos:start="839:52" pos:end="839:52">4</literal><operator pos:start="839:53" pos:end="839:53">)</operator> <operator pos:start="839:55" pos:end="839:55">&amp;</operator> <literal type="number" pos:start="839:57" pos:end="839:57">7</literal><operator pos:start="839:58" pos:end="839:58">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="841:13" pos:end="921:13"><if pos:start="841:13" pos:end="863:13">if <condition pos:start="841:16" pos:end="841:23">(<expr pos:start="841:17" pos:end="841:22"><name pos:start="841:17" pos:end="841:18">op</name> <operator pos:start="841:20" pos:end="841:20">&lt;</operator> <literal type="number" pos:start="841:22" pos:end="841:22">4</literal></expr>)</condition> <block pos:start="841:25" pos:end="863:13">{<block_content pos:start="845:17" pos:end="861:40">

                <comment type="block" pos:start="843:17" pos:end="843:47">/* Saturating add/subtract.  */</comment>

                <expr_stmt pos:start="845:17" pos:end="845:38"><expr pos:start="845:17" pos:end="845:37"><name pos:start="845:17" pos:end="845:19">tmp</name> <operator pos:start="845:21" pos:end="845:21">=</operator> <call pos:start="845:23" pos:end="845:37"><name pos:start="845:23" pos:end="845:30">load_reg</name><argument_list pos:start="845:31" pos:end="845:37">(<argument pos:start="845:32" pos:end="845:32"><expr pos:start="845:32" pos:end="845:32"><name pos:start="845:32" pos:end="845:32">s</name></expr></argument>, <argument pos:start="845:35" pos:end="845:36"><expr pos:start="845:35" pos:end="845:36"><name pos:start="845:35" pos:end="845:36">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="847:17" pos:end="847:39"><expr pos:start="847:17" pos:end="847:38"><name pos:start="847:17" pos:end="847:20">tmp2</name> <operator pos:start="847:22" pos:end="847:22">=</operator> <call pos:start="847:24" pos:end="847:38"><name pos:start="847:24" pos:end="847:31">load_reg</name><argument_list pos:start="847:32" pos:end="847:38">(<argument pos:start="847:33" pos:end="847:33"><expr pos:start="847:33" pos:end="847:33"><name pos:start="847:33" pos:end="847:33">s</name></expr></argument>, <argument pos:start="847:36" pos:end="847:37"><expr pos:start="847:36" pos:end="847:37"><name pos:start="847:36" pos:end="847:37">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="849:17" pos:end="851:66"><if pos:start="849:17" pos:end="851:66">if <condition pos:start="849:20" pos:end="849:27">(<expr pos:start="849:21" pos:end="849:26"><name pos:start="849:21" pos:end="849:22">op</name> <operator pos:start="849:24" pos:end="849:24">&amp;</operator> <literal type="number" pos:start="849:26" pos:end="849:26">1</literal></expr>)</condition><block type="pseudo" pos:start="851:21" pos:end="851:66"><block_content pos:start="851:21" pos:end="851:66">

                    <expr_stmt pos:start="851:21" pos:end="851:66"><expr pos:start="851:21" pos:end="851:65"><call pos:start="851:21" pos:end="851:65"><name pos:start="851:21" pos:end="851:46">gen_helper_double_saturate</name><argument_list pos:start="851:47" pos:end="851:65">(<argument pos:start="851:48" pos:end="851:50"><expr pos:start="851:48" pos:end="851:50"><name pos:start="851:48" pos:end="851:50">tmp</name></expr></argument>, <argument pos:start="851:53" pos:end="851:59"><expr pos:start="851:53" pos:end="851:59"><name pos:start="851:53" pos:end="851:59">cpu_env</name></expr></argument>, <argument pos:start="851:62" pos:end="851:64"><expr pos:start="851:62" pos:end="851:64"><name pos:start="851:62" pos:end="851:64">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="853:17" pos:end="859:69"><if pos:start="853:17" pos:end="855:69">if <condition pos:start="853:20" pos:end="853:27">(<expr pos:start="853:21" pos:end="853:26"><name pos:start="853:21" pos:end="853:22">op</name> <operator pos:start="853:24" pos:end="853:24">&amp;</operator> <literal type="number" pos:start="853:26" pos:end="853:26">2</literal></expr>)</condition><block type="pseudo" pos:start="855:21" pos:end="855:69"><block_content pos:start="855:21" pos:end="855:69">

                    <expr_stmt pos:start="855:21" pos:end="855:69"><expr pos:start="855:21" pos:end="855:68"><call pos:start="855:21" pos:end="855:68"><name pos:start="855:21" pos:end="855:43">gen_helper_sub_saturate</name><argument_list pos:start="855:44" pos:end="855:68">(<argument pos:start="855:45" pos:end="855:47"><expr pos:start="855:45" pos:end="855:47"><name pos:start="855:45" pos:end="855:47">tmp</name></expr></argument>, <argument pos:start="855:50" pos:end="855:56"><expr pos:start="855:50" pos:end="855:56"><name pos:start="855:50" pos:end="855:56">cpu_env</name></expr></argument>, <argument pos:start="855:59" pos:end="855:62"><expr pos:start="855:59" pos:end="855:62"><name pos:start="855:59" pos:end="855:62">tmp2</name></expr></argument>, <argument pos:start="855:65" pos:end="855:67"><expr pos:start="855:65" pos:end="855:67"><name pos:start="855:65" pos:end="855:67">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="857:17" pos:end="859:69">else<block type="pseudo" pos:start="859:21" pos:end="859:69"><block_content pos:start="859:21" pos:end="859:69">

                    <expr_stmt pos:start="859:21" pos:end="859:69"><expr pos:start="859:21" pos:end="859:68"><call pos:start="859:21" pos:end="859:68"><name pos:start="859:21" pos:end="859:43">gen_helper_add_saturate</name><argument_list pos:start="859:44" pos:end="859:68">(<argument pos:start="859:45" pos:end="859:47"><expr pos:start="859:45" pos:end="859:47"><name pos:start="859:45" pos:end="859:47">tmp</name></expr></argument>, <argument pos:start="859:50" pos:end="859:56"><expr pos:start="859:50" pos:end="859:56"><name pos:start="859:50" pos:end="859:56">cpu_env</name></expr></argument>, <argument pos:start="859:59" pos:end="859:61"><expr pos:start="859:59" pos:end="859:61"><name pos:start="859:59" pos:end="859:61">tmp</name></expr></argument>, <argument pos:start="859:64" pos:end="859:67"><expr pos:start="859:64" pos:end="859:67"><name pos:start="859:64" pos:end="859:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="861:17" pos:end="861:40"><expr pos:start="861:17" pos:end="861:39"><call pos:start="861:17" pos:end="861:39"><name pos:start="861:17" pos:end="861:33">tcg_temp_free_i32</name><argument_list pos:start="861:34" pos:end="861:39">(<argument pos:start="861:35" pos:end="861:38"><expr pos:start="861:35" pos:end="861:38"><name pos:start="861:35" pos:end="861:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="863:15" pos:end="921:13">else <block pos:start="863:20" pos:end="921:13">{<block_content pos:start="865:17" pos:end="919:17">

                <expr_stmt pos:start="865:17" pos:end="865:38"><expr pos:start="865:17" pos:end="865:37"><name pos:start="865:17" pos:end="865:19">tmp</name> <operator pos:start="865:21" pos:end="865:21">=</operator> <call pos:start="865:23" pos:end="865:37"><name pos:start="865:23" pos:end="865:30">load_reg</name><argument_list pos:start="865:31" pos:end="865:37">(<argument pos:start="865:32" pos:end="865:32"><expr pos:start="865:32" pos:end="865:32"><name pos:start="865:32" pos:end="865:32">s</name></expr></argument>, <argument pos:start="865:35" pos:end="865:36"><expr pos:start="865:35" pos:end="865:36"><name pos:start="865:35" pos:end="865:36">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="867:17" pos:end="919:17">switch <condition pos:start="867:24" pos:end="867:27">(<expr pos:start="867:25" pos:end="867:26"><name pos:start="867:25" pos:end="867:26">op</name></expr>)</condition> <block pos:start="867:29" pos:end="919:17">{<block_content pos:start="869:17" pos:end="917:36">

                <case pos:start="869:17" pos:end="869:26">case <expr pos:start="869:22" pos:end="869:25"><literal type="number" pos:start="869:22" pos:end="869:25">0x0a</literal></expr>:</case> <comment type="block" pos:start="869:28" pos:end="869:37">/* rbit */</comment>

                    <expr_stmt pos:start="871:21" pos:end="871:46"><expr pos:start="871:21" pos:end="871:45"><call pos:start="871:21" pos:end="871:45"><name pos:start="871:21" pos:end="871:35">gen_helper_rbit</name><argument_list pos:start="871:36" pos:end="871:45">(<argument pos:start="871:37" pos:end="871:39"><expr pos:start="871:37" pos:end="871:39"><name pos:start="871:37" pos:end="871:39">tmp</name></expr></argument>, <argument pos:start="871:42" pos:end="871:44"><expr pos:start="871:42" pos:end="871:44"><name pos:start="871:42" pos:end="871:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="873:21" pos:end="873:26">break;</break>

                <case pos:start="875:17" pos:end="875:26">case <expr pos:start="875:22" pos:end="875:25"><literal type="number" pos:start="875:22" pos:end="875:25">0x08</literal></expr>:</case> <comment type="block" pos:start="875:28" pos:end="875:36">/* rev */</comment>

                    <expr_stmt pos:start="877:21" pos:end="877:50"><expr pos:start="877:21" pos:end="877:49"><call pos:start="877:21" pos:end="877:49"><name pos:start="877:21" pos:end="877:39">tcg_gen_bswap32_i32</name><argument_list pos:start="877:40" pos:end="877:49">(<argument pos:start="877:41" pos:end="877:43"><expr pos:start="877:41" pos:end="877:43"><name pos:start="877:41" pos:end="877:43">tmp</name></expr></argument>, <argument pos:start="877:46" pos:end="877:48"><expr pos:start="877:46" pos:end="877:48"><name pos:start="877:46" pos:end="877:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="879:21" pos:end="879:26">break;</break>

                <case pos:start="881:17" pos:end="881:26">case <expr pos:start="881:22" pos:end="881:25"><literal type="number" pos:start="881:22" pos:end="881:25">0x09</literal></expr>:</case> <comment type="block" pos:start="881:28" pos:end="881:38">/* rev16 */</comment>

                    <expr_stmt pos:start="883:21" pos:end="883:35"><expr pos:start="883:21" pos:end="883:34"><call pos:start="883:21" pos:end="883:34"><name pos:start="883:21" pos:end="883:29">gen_rev16</name><argument_list pos:start="883:30" pos:end="883:34">(<argument pos:start="883:31" pos:end="883:33"><expr pos:start="883:31" pos:end="883:33"><name pos:start="883:31" pos:end="883:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="885:21" pos:end="885:26">break;</break>

                <case pos:start="887:17" pos:end="887:26">case <expr pos:start="887:22" pos:end="887:25"><literal type="number" pos:start="887:22" pos:end="887:25">0x0b</literal></expr>:</case> <comment type="block" pos:start="887:28" pos:end="887:38">/* revsh */</comment>

                    <expr_stmt pos:start="889:21" pos:end="889:35"><expr pos:start="889:21" pos:end="889:34"><call pos:start="889:21" pos:end="889:34"><name pos:start="889:21" pos:end="889:29">gen_revsh</name><argument_list pos:start="889:30" pos:end="889:34">(<argument pos:start="889:31" pos:end="889:33"><expr pos:start="889:31" pos:end="889:33"><name pos:start="889:31" pos:end="889:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="891:21" pos:end="891:26">break;</break>

                <case pos:start="893:17" pos:end="893:26">case <expr pos:start="893:22" pos:end="893:25"><literal type="number" pos:start="893:22" pos:end="893:25">0x10</literal></expr>:</case> <comment type="block" pos:start="893:28" pos:end="893:36">/* sel */</comment>

                    <expr_stmt pos:start="895:21" pos:end="895:43"><expr pos:start="895:21" pos:end="895:42"><name pos:start="895:21" pos:end="895:24">tmp2</name> <operator pos:start="895:26" pos:end="895:26">=</operator> <call pos:start="895:28" pos:end="895:42"><name pos:start="895:28" pos:end="895:35">load_reg</name><argument_list pos:start="895:36" pos:end="895:42">(<argument pos:start="895:37" pos:end="895:37"><expr pos:start="895:37" pos:end="895:37"><name pos:start="895:37" pos:end="895:37">s</name></expr></argument>, <argument pos:start="895:40" pos:end="895:41"><expr pos:start="895:40" pos:end="895:41"><name pos:start="895:40" pos:end="895:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="897:21" pos:end="897:46"><expr pos:start="897:21" pos:end="897:45"><name pos:start="897:21" pos:end="897:24">tmp3</name> <operator pos:start="897:26" pos:end="897:26">=</operator> <call pos:start="897:28" pos:end="897:45"><name pos:start="897:28" pos:end="897:43">tcg_temp_new_i32</name><argument_list pos:start="897:44" pos:end="897:45">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="899:21" pos:end="899:77"><expr pos:start="899:21" pos:end="899:76"><call pos:start="899:21" pos:end="899:76"><name pos:start="899:21" pos:end="899:34">tcg_gen_ld_i32</name><argument_list pos:start="899:35" pos:end="899:76">(<argument pos:start="899:36" pos:end="899:39"><expr pos:start="899:36" pos:end="899:39"><name pos:start="899:36" pos:end="899:39">tmp3</name></expr></argument>, <argument pos:start="899:42" pos:end="899:48"><expr pos:start="899:42" pos:end="899:48"><name pos:start="899:42" pos:end="899:48">cpu_env</name></expr></argument>, <argument pos:start="899:51" pos:end="899:75"><expr pos:start="899:51" pos:end="899:75"><call pos:start="899:51" pos:end="899:75"><name pos:start="899:51" pos:end="899:58">offsetof</name><argument_list pos:start="899:59" pos:end="899:75">(<argument pos:start="899:60" pos:end="899:70"><expr pos:start="899:60" pos:end="899:70"><name pos:start="899:60" pos:end="899:70">CPUARMState</name></expr></argument>, <argument pos:start="899:73" pos:end="899:74"><expr pos:start="899:73" pos:end="899:74"><name pos:start="899:73" pos:end="899:74">GE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="901:21" pos:end="901:63"><expr pos:start="901:21" pos:end="901:62"><call pos:start="901:21" pos:end="901:62"><name pos:start="901:21" pos:end="901:40">gen_helper_sel_flags</name><argument_list pos:start="901:41" pos:end="901:62">(<argument pos:start="901:42" pos:end="901:44"><expr pos:start="901:42" pos:end="901:44"><name pos:start="901:42" pos:end="901:44">tmp</name></expr></argument>, <argument pos:start="901:47" pos:end="901:50"><expr pos:start="901:47" pos:end="901:50"><name pos:start="901:47" pos:end="901:50">tmp3</name></expr></argument>, <argument pos:start="901:53" pos:end="901:55"><expr pos:start="901:53" pos:end="901:55"><name pos:start="901:53" pos:end="901:55">tmp</name></expr></argument>, <argument pos:start="901:58" pos:end="901:61"><expr pos:start="901:58" pos:end="901:61"><name pos:start="901:58" pos:end="901:61">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="903:21" pos:end="903:44"><expr pos:start="903:21" pos:end="903:43"><call pos:start="903:21" pos:end="903:43"><name pos:start="903:21" pos:end="903:37">tcg_temp_free_i32</name><argument_list pos:start="903:38" pos:end="903:43">(<argument pos:start="903:39" pos:end="903:42"><expr pos:start="903:39" pos:end="903:42"><name pos:start="903:39" pos:end="903:42">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="905:21" pos:end="905:44"><expr pos:start="905:21" pos:end="905:43"><call pos:start="905:21" pos:end="905:43"><name pos:start="905:21" pos:end="905:37">tcg_temp_free_i32</name><argument_list pos:start="905:38" pos:end="905:43">(<argument pos:start="905:39" pos:end="905:42"><expr pos:start="905:39" pos:end="905:42"><name pos:start="905:39" pos:end="905:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="907:21" pos:end="907:26">break;</break>

                <case pos:start="909:17" pos:end="909:26">case <expr pos:start="909:22" pos:end="909:25"><literal type="number" pos:start="909:22" pos:end="909:25">0x18</literal></expr>:</case> <comment type="block" pos:start="909:28" pos:end="909:36">/* clz */</comment>

                    <expr_stmt pos:start="911:21" pos:end="911:45"><expr pos:start="911:21" pos:end="911:44"><call pos:start="911:21" pos:end="911:44"><name pos:start="911:21" pos:end="911:34">gen_helper_clz</name><argument_list pos:start="911:35" pos:end="911:44">(<argument pos:start="911:36" pos:end="911:38"><expr pos:start="911:36" pos:end="911:38"><name pos:start="911:36" pos:end="911:38">tmp</name></expr></argument>, <argument pos:start="911:41" pos:end="911:43"><expr pos:start="911:41" pos:end="911:43"><name pos:start="911:41" pos:end="911:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="913:21" pos:end="913:26">break;</break>

                <default pos:start="915:17" pos:end="915:24">default:</default>

                    <goto pos:start="917:21" pos:end="917:36">goto <name pos:start="917:26" pos:end="917:35">illegal_op</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="923:13" pos:end="923:34"><expr pos:start="923:13" pos:end="923:33"><call pos:start="923:13" pos:end="923:33"><name pos:start="923:13" pos:end="923:21">store_reg</name><argument_list pos:start="923:22" pos:end="923:33">(<argument pos:start="923:23" pos:end="923:23"><expr pos:start="923:23" pos:end="923:23"><name pos:start="923:23" pos:end="923:23">s</name></expr></argument>, <argument pos:start="923:26" pos:end="923:27"><expr pos:start="923:26" pos:end="923:27"><name pos:start="923:26" pos:end="923:27">rd</name></expr></argument>, <argument pos:start="923:30" pos:end="923:32"><expr pos:start="923:30" pos:end="923:32"><name pos:start="923:30" pos:end="923:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="925:13" pos:end="925:18">break;</break>

        <case pos:start="927:9" pos:end="927:15">case <expr pos:start="927:14" pos:end="927:14"><literal type="number" pos:start="927:14" pos:end="927:14">4</literal></expr>:</case> <case pos:start="927:17" pos:end="927:23">case <expr pos:start="927:22" pos:end="927:22"><literal type="number" pos:start="927:22" pos:end="927:22">5</literal></expr>:</case> <comment type="block" pos:start="927:25" pos:end="927:77">/* 32-bit multiply.  Sum of absolute differences.  */</comment>

            <expr_stmt pos:start="929:13" pos:end="929:35"><expr pos:start="929:13" pos:end="929:34"><name pos:start="929:13" pos:end="929:14">op</name> <operator pos:start="929:16" pos:end="929:16">=</operator> <operator pos:start="929:18" pos:end="929:18">(</operator><name pos:start="929:19" pos:end="929:22">insn</name> <operator pos:start="929:24" pos:end="929:25">&gt;&gt;</operator> <literal type="number" pos:start="929:27" pos:end="929:27">4</literal><operator pos:start="929:28" pos:end="929:28">)</operator> <operator pos:start="929:30" pos:end="929:30">&amp;</operator> <literal type="number" pos:start="929:32" pos:end="929:34">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="931:13" pos:end="931:34"><expr pos:start="931:13" pos:end="931:33"><name pos:start="931:13" pos:end="931:15">tmp</name> <operator pos:start="931:17" pos:end="931:17">=</operator> <call pos:start="931:19" pos:end="931:33"><name pos:start="931:19" pos:end="931:26">load_reg</name><argument_list pos:start="931:27" pos:end="931:33">(<argument pos:start="931:28" pos:end="931:28"><expr pos:start="931:28" pos:end="931:28"><name pos:start="931:28" pos:end="931:28">s</name></expr></argument>, <argument pos:start="931:31" pos:end="931:32"><expr pos:start="931:31" pos:end="931:32"><name pos:start="931:31" pos:end="931:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="933:13" pos:end="933:35"><expr pos:start="933:13" pos:end="933:34"><name pos:start="933:13" pos:end="933:16">tmp2</name> <operator pos:start="933:18" pos:end="933:18">=</operator> <call pos:start="933:20" pos:end="933:34"><name pos:start="933:20" pos:end="933:27">load_reg</name><argument_list pos:start="933:28" pos:end="933:34">(<argument pos:start="933:29" pos:end="933:29"><expr pos:start="933:29" pos:end="933:29"><name pos:start="933:29" pos:end="933:29">s</name></expr></argument>, <argument pos:start="933:32" pos:end="933:33"><expr pos:start="933:32" pos:end="933:33"><name pos:start="933:32" pos:end="933:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="935:13" pos:end="1113:13">switch <condition pos:start="935:20" pos:end="935:37">(<expr pos:start="935:21" pos:end="935:36"><operator pos:start="935:21" pos:end="935:21">(</operator><name pos:start="935:22" pos:end="935:25">insn</name> <operator pos:start="935:27" pos:end="935:28">&gt;&gt;</operator> <literal type="number" pos:start="935:30" pos:end="935:31">20</literal><operator pos:start="935:32" pos:end="935:32">)</operator> <operator pos:start="935:34" pos:end="935:34">&amp;</operator> <literal type="number" pos:start="935:36" pos:end="935:36">7</literal></expr>)</condition> <block pos:start="935:39" pos:end="1113:13">{<block_content pos:start="937:13" pos:end="1111:22">

            <case pos:start="937:13" pos:end="937:19">case <expr pos:start="937:18" pos:end="937:18"><literal type="number" pos:start="937:18" pos:end="937:18">0</literal></expr>:</case> <comment type="block" pos:start="937:21" pos:end="937:39">/* 32 x 32 -&gt; 32 */</comment>

                <expr_stmt pos:start="939:17" pos:end="939:48"><expr pos:start="939:17" pos:end="939:47"><call pos:start="939:17" pos:end="939:47"><name pos:start="939:17" pos:end="939:31">tcg_gen_mul_i32</name><argument_list pos:start="939:32" pos:end="939:47">(<argument pos:start="939:33" pos:end="939:35"><expr pos:start="939:33" pos:end="939:35"><name pos:start="939:33" pos:end="939:35">tmp</name></expr></argument>, <argument pos:start="939:38" pos:end="939:40"><expr pos:start="939:38" pos:end="939:40"><name pos:start="939:38" pos:end="939:40">tmp</name></expr></argument>, <argument pos:start="939:43" pos:end="939:46"><expr pos:start="939:43" pos:end="939:46"><name pos:start="939:43" pos:end="939:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="941:17" pos:end="941:40"><expr pos:start="941:17" pos:end="941:39"><call pos:start="941:17" pos:end="941:39"><name pos:start="941:17" pos:end="941:33">tcg_temp_free_i32</name><argument_list pos:start="941:34" pos:end="941:39">(<argument pos:start="941:35" pos:end="941:38"><expr pos:start="941:35" pos:end="941:38"><name pos:start="941:35" pos:end="941:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="943:17" pos:end="957:17"><if pos:start="943:17" pos:end="957:17">if <condition pos:start="943:20" pos:end="943:29">(<expr pos:start="943:21" pos:end="943:28"><name pos:start="943:21" pos:end="943:22">rs</name> <operator pos:start="943:24" pos:end="943:25">!=</operator> <literal type="number" pos:start="943:27" pos:end="943:28">15</literal></expr>)</condition> <block pos:start="943:31" pos:end="957:17">{<block_content pos:start="945:21" pos:end="955:44">

                    <expr_stmt pos:start="945:21" pos:end="945:43"><expr pos:start="945:21" pos:end="945:42"><name pos:start="945:21" pos:end="945:24">tmp2</name> <operator pos:start="945:26" pos:end="945:26">=</operator> <call pos:start="945:28" pos:end="945:42"><name pos:start="945:28" pos:end="945:35">load_reg</name><argument_list pos:start="945:36" pos:end="945:42">(<argument pos:start="945:37" pos:end="945:37"><expr pos:start="945:37" pos:end="945:37"><name pos:start="945:37" pos:end="945:37">s</name></expr></argument>, <argument pos:start="945:40" pos:end="945:41"><expr pos:start="945:40" pos:end="945:41"><name pos:start="945:40" pos:end="945:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="947:21" pos:end="953:56"><if pos:start="947:21" pos:end="949:56">if <condition pos:start="947:24" pos:end="947:27">(<expr pos:start="947:25" pos:end="947:26"><name pos:start="947:25" pos:end="947:26">op</name></expr>)</condition><block type="pseudo" pos:start="949:25" pos:end="949:56"><block_content pos:start="949:25" pos:end="949:56">

                        <expr_stmt pos:start="949:25" pos:end="949:56"><expr pos:start="949:25" pos:end="949:55"><call pos:start="949:25" pos:end="949:55"><name pos:start="949:25" pos:end="949:39">tcg_gen_sub_i32</name><argument_list pos:start="949:40" pos:end="949:55">(<argument pos:start="949:41" pos:end="949:43"><expr pos:start="949:41" pos:end="949:43"><name pos:start="949:41" pos:end="949:43">tmp</name></expr></argument>, <argument pos:start="949:46" pos:end="949:49"><expr pos:start="949:46" pos:end="949:49"><name pos:start="949:46" pos:end="949:49">tmp2</name></expr></argument>, <argument pos:start="949:52" pos:end="949:54"><expr pos:start="949:52" pos:end="949:54"><name pos:start="949:52" pos:end="949:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="951:21" pos:end="953:56">else<block type="pseudo" pos:start="953:25" pos:end="953:56"><block_content pos:start="953:25" pos:end="953:56">

                        <expr_stmt pos:start="953:25" pos:end="953:56"><expr pos:start="953:25" pos:end="953:55"><call pos:start="953:25" pos:end="953:55"><name pos:start="953:25" pos:end="953:39">tcg_gen_add_i32</name><argument_list pos:start="953:40" pos:end="953:55">(<argument pos:start="953:41" pos:end="953:43"><expr pos:start="953:41" pos:end="953:43"><name pos:start="953:41" pos:end="953:43">tmp</name></expr></argument>, <argument pos:start="953:46" pos:end="953:48"><expr pos:start="953:46" pos:end="953:48"><name pos:start="953:46" pos:end="953:48">tmp</name></expr></argument>, <argument pos:start="953:51" pos:end="953:54"><expr pos:start="953:51" pos:end="953:54"><name pos:start="953:51" pos:end="953:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="955:21" pos:end="955:44"><expr pos:start="955:21" pos:end="955:43"><call pos:start="955:21" pos:end="955:43"><name pos:start="955:21" pos:end="955:37">tcg_temp_free_i32</name><argument_list pos:start="955:38" pos:end="955:43">(<argument pos:start="955:39" pos:end="955:42"><expr pos:start="955:39" pos:end="955:42"><name pos:start="955:39" pos:end="955:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="959:17" pos:end="959:22">break;</break>

            <case pos:start="961:13" pos:end="961:19">case <expr pos:start="961:18" pos:end="961:18"><literal type="number" pos:start="961:18" pos:end="961:18">1</literal></expr>:</case> <comment type="block" pos:start="961:21" pos:end="961:39">/* 16 x 16 -&gt; 32 */</comment>

                <expr_stmt pos:start="963:17" pos:end="963:53"><expr pos:start="963:17" pos:end="963:52"><call pos:start="963:17" pos:end="963:52"><name pos:start="963:17" pos:end="963:25">gen_mulxy</name><argument_list pos:start="963:26" pos:end="963:52">(<argument pos:start="963:27" pos:end="963:29"><expr pos:start="963:27" pos:end="963:29"><name pos:start="963:27" pos:end="963:29">tmp</name></expr></argument>, <argument pos:start="963:32" pos:end="963:35"><expr pos:start="963:32" pos:end="963:35"><name pos:start="963:32" pos:end="963:35">tmp2</name></expr></argument>, <argument pos:start="963:38" pos:end="963:43"><expr pos:start="963:38" pos:end="963:43"><name pos:start="963:38" pos:end="963:39">op</name> <operator pos:start="963:41" pos:end="963:41">&amp;</operator> <literal type="number" pos:start="963:43" pos:end="963:43">2</literal></expr></argument>, <argument pos:start="963:46" pos:end="963:51"><expr pos:start="963:46" pos:end="963:51"><name pos:start="963:46" pos:end="963:47">op</name> <operator pos:start="963:49" pos:end="963:49">&amp;</operator> <literal type="number" pos:start="963:51" pos:end="963:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="965:17" pos:end="965:40"><expr pos:start="965:17" pos:end="965:39"><call pos:start="965:17" pos:end="965:39"><name pos:start="965:17" pos:end="965:33">tcg_temp_free_i32</name><argument_list pos:start="965:34" pos:end="965:39">(<argument pos:start="965:35" pos:end="965:38"><expr pos:start="965:35" pos:end="965:38"><name pos:start="965:35" pos:end="965:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="967:17" pos:end="975:17"><if pos:start="967:17" pos:end="975:17">if <condition pos:start="967:20" pos:end="967:29">(<expr pos:start="967:21" pos:end="967:28"><name pos:start="967:21" pos:end="967:22">rs</name> <operator pos:start="967:24" pos:end="967:25">!=</operator> <literal type="number" pos:start="967:27" pos:end="967:28">15</literal></expr>)</condition> <block pos:start="967:31" pos:end="975:17">{<block_content pos:start="969:21" pos:end="973:44">

                    <expr_stmt pos:start="969:21" pos:end="969:43"><expr pos:start="969:21" pos:end="969:42"><name pos:start="969:21" pos:end="969:24">tmp2</name> <operator pos:start="969:26" pos:end="969:26">=</operator> <call pos:start="969:28" pos:end="969:42"><name pos:start="969:28" pos:end="969:35">load_reg</name><argument_list pos:start="969:36" pos:end="969:42">(<argument pos:start="969:37" pos:end="969:37"><expr pos:start="969:37" pos:end="969:37"><name pos:start="969:37" pos:end="969:37">s</name></expr></argument>, <argument pos:start="969:40" pos:end="969:41"><expr pos:start="969:40" pos:end="969:41"><name pos:start="969:40" pos:end="969:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="971:21" pos:end="971:65"><expr pos:start="971:21" pos:end="971:64"><call pos:start="971:21" pos:end="971:64"><name pos:start="971:21" pos:end="971:39">gen_helper_add_setq</name><argument_list pos:start="971:40" pos:end="971:64">(<argument pos:start="971:41" pos:end="971:43"><expr pos:start="971:41" pos:end="971:43"><name pos:start="971:41" pos:end="971:43">tmp</name></expr></argument>, <argument pos:start="971:46" pos:end="971:52"><expr pos:start="971:46" pos:end="971:52"><name pos:start="971:46" pos:end="971:52">cpu_env</name></expr></argument>, <argument pos:start="971:55" pos:end="971:57"><expr pos:start="971:55" pos:end="971:57"><name pos:start="971:55" pos:end="971:57">tmp</name></expr></argument>, <argument pos:start="971:60" pos:end="971:63"><expr pos:start="971:60" pos:end="971:63"><name pos:start="971:60" pos:end="971:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="973:21" pos:end="973:44"><expr pos:start="973:21" pos:end="973:43"><call pos:start="973:21" pos:end="973:43"><name pos:start="973:21" pos:end="973:37">tcg_temp_free_i32</name><argument_list pos:start="973:38" pos:end="973:43">(<argument pos:start="973:39" pos:end="973:42"><expr pos:start="973:39" pos:end="973:42"><name pos:start="973:39" pos:end="973:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="977:17" pos:end="977:22">break;</break>

            <case pos:start="979:13" pos:end="979:19">case <expr pos:start="979:18" pos:end="979:18"><literal type="number" pos:start="979:18" pos:end="979:18">2</literal></expr>:</case> <comment type="block" pos:start="979:21" pos:end="979:45">/* Dual multiply add.  */</comment>

            <case pos:start="981:13" pos:end="981:19">case <expr pos:start="981:18" pos:end="981:18"><literal type="number" pos:start="981:18" pos:end="981:18">4</literal></expr>:</case> <comment type="block" pos:start="981:21" pos:end="981:50">/* Dual multiply subtract.  */</comment>

                <if_stmt pos:start="983:17" pos:end="985:40"><if pos:start="983:17" pos:end="985:40">if <condition pos:start="983:20" pos:end="983:23">(<expr pos:start="983:21" pos:end="983:22"><name pos:start="983:21" pos:end="983:22">op</name></expr>)</condition><block type="pseudo" pos:start="985:21" pos:end="985:40"><block_content pos:start="985:21" pos:end="985:40">

                    <expr_stmt pos:start="985:21" pos:end="985:40"><expr pos:start="985:21" pos:end="985:39"><call pos:start="985:21" pos:end="985:39"><name pos:start="985:21" pos:end="985:33">gen_swap_half</name><argument_list pos:start="985:34" pos:end="985:39">(<argument pos:start="985:35" pos:end="985:38"><expr pos:start="985:35" pos:end="985:38"><name pos:start="985:35" pos:end="985:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="987:17" pos:end="987:41"><expr pos:start="987:17" pos:end="987:40"><call pos:start="987:17" pos:end="987:40"><name pos:start="987:17" pos:end="987:29">gen_smul_dual</name><argument_list pos:start="987:30" pos:end="987:40">(<argument pos:start="987:31" pos:end="987:33"><expr pos:start="987:31" pos:end="987:33"><name pos:start="987:31" pos:end="987:33">tmp</name></expr></argument>, <argument pos:start="987:36" pos:end="987:39"><expr pos:start="987:36" pos:end="987:39"><name pos:start="987:36" pos:end="987:39">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="989:17" pos:end="1007:17"><if pos:start="989:17" pos:end="995:17">if <condition pos:start="989:20" pos:end="989:37">(<expr pos:start="989:21" pos:end="989:36"><name pos:start="989:21" pos:end="989:24">insn</name> <operator pos:start="989:26" pos:end="989:26">&amp;</operator> <operator pos:start="989:28" pos:end="989:28">(</operator><literal type="number" pos:start="989:29" pos:end="989:29">1</literal> <operator pos:start="989:31" pos:end="989:32">&lt;&lt;</operator> <literal type="number" pos:start="989:34" pos:end="989:35">22</literal><operator pos:start="989:36" pos:end="989:36">)</operator></expr>)</condition> <block pos:start="989:39" pos:end="995:17">{<block_content pos:start="993:21" pos:end="993:52">

                    <comment type="block" pos:start="991:21" pos:end="991:59">/* This subtraction cannot overflow. */</comment>

                    <expr_stmt pos:start="993:21" pos:end="993:52"><expr pos:start="993:21" pos:end="993:51"><call pos:start="993:21" pos:end="993:51"><name pos:start="993:21" pos:end="993:35">tcg_gen_sub_i32</name><argument_list pos:start="993:36" pos:end="993:51">(<argument pos:start="993:37" pos:end="993:39"><expr pos:start="993:37" pos:end="993:39"><name pos:start="993:37" pos:end="993:39">tmp</name></expr></argument>, <argument pos:start="993:42" pos:end="993:44"><expr pos:start="993:42" pos:end="993:44"><name pos:start="993:42" pos:end="993:44">tmp</name></expr></argument>, <argument pos:start="993:47" pos:end="993:50"><expr pos:start="993:47" pos:end="993:50"><name pos:start="993:47" pos:end="993:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="995:19" pos:end="1007:17">else <block pos:start="995:24" pos:end="1007:17">{<block_content pos:start="1005:21" pos:end="1005:65">

                    <comment type="block" pos:start="997:21" pos:end="1003:23">/* This addition cannot overflow 32 bits;

                     * however it may overflow considered as a signed

                     * operation, in which case we must set the Q flag.

                     */</comment>

                    <expr_stmt pos:start="1005:21" pos:end="1005:65"><expr pos:start="1005:21" pos:end="1005:64"><call pos:start="1005:21" pos:end="1005:64"><name pos:start="1005:21" pos:end="1005:39">gen_helper_add_setq</name><argument_list pos:start="1005:40" pos:end="1005:64">(<argument pos:start="1005:41" pos:end="1005:43"><expr pos:start="1005:41" pos:end="1005:43"><name pos:start="1005:41" pos:end="1005:43">tmp</name></expr></argument>, <argument pos:start="1005:46" pos:end="1005:52"><expr pos:start="1005:46" pos:end="1005:52"><name pos:start="1005:46" pos:end="1005:52">cpu_env</name></expr></argument>, <argument pos:start="1005:55" pos:end="1005:57"><expr pos:start="1005:55" pos:end="1005:57"><name pos:start="1005:55" pos:end="1005:57">tmp</name></expr></argument>, <argument pos:start="1005:60" pos:end="1005:63"><expr pos:start="1005:60" pos:end="1005:63"><name pos:start="1005:60" pos:end="1005:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1009:17" pos:end="1009:40"><expr pos:start="1009:17" pos:end="1009:39"><call pos:start="1009:17" pos:end="1009:39"><name pos:start="1009:17" pos:end="1009:33">tcg_temp_free_i32</name><argument_list pos:start="1009:34" pos:end="1009:39">(<argument pos:start="1009:35" pos:end="1009:38"><expr pos:start="1009:35" pos:end="1009:38"><name pos:start="1009:35" pos:end="1009:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1011:17" pos:end="1021:19"><if pos:start="1011:17" pos:end="1021:19">if <condition pos:start="1011:20" pos:end="1011:29">(<expr pos:start="1011:21" pos:end="1011:28"><name pos:start="1011:21" pos:end="1011:22">rs</name> <operator pos:start="1011:24" pos:end="1011:25">!=</operator> <literal type="number" pos:start="1011:27" pos:end="1011:28">15</literal></expr>)</condition>

                  <block pos:start="1013:19" pos:end="1021:19">{<block_content pos:start="1015:21" pos:end="1019:44">

                    <expr_stmt pos:start="1015:21" pos:end="1015:43"><expr pos:start="1015:21" pos:end="1015:42"><name pos:start="1015:21" pos:end="1015:24">tmp2</name> <operator pos:start="1015:26" pos:end="1015:26">=</operator> <call pos:start="1015:28" pos:end="1015:42"><name pos:start="1015:28" pos:end="1015:35">load_reg</name><argument_list pos:start="1015:36" pos:end="1015:42">(<argument pos:start="1015:37" pos:end="1015:37"><expr pos:start="1015:37" pos:end="1015:37"><name pos:start="1015:37" pos:end="1015:37">s</name></expr></argument>, <argument pos:start="1015:40" pos:end="1015:41"><expr pos:start="1015:40" pos:end="1015:41"><name pos:start="1015:40" pos:end="1015:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1017:21" pos:end="1017:65"><expr pos:start="1017:21" pos:end="1017:64"><call pos:start="1017:21" pos:end="1017:64"><name pos:start="1017:21" pos:end="1017:39">gen_helper_add_setq</name><argument_list pos:start="1017:40" pos:end="1017:64">(<argument pos:start="1017:41" pos:end="1017:43"><expr pos:start="1017:41" pos:end="1017:43"><name pos:start="1017:41" pos:end="1017:43">tmp</name></expr></argument>, <argument pos:start="1017:46" pos:end="1017:52"><expr pos:start="1017:46" pos:end="1017:52"><name pos:start="1017:46" pos:end="1017:52">cpu_env</name></expr></argument>, <argument pos:start="1017:55" pos:end="1017:57"><expr pos:start="1017:55" pos:end="1017:57"><name pos:start="1017:55" pos:end="1017:57">tmp</name></expr></argument>, <argument pos:start="1017:60" pos:end="1017:63"><expr pos:start="1017:60" pos:end="1017:63"><name pos:start="1017:60" pos:end="1017:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1019:21" pos:end="1019:44"><expr pos:start="1019:21" pos:end="1019:43"><call pos:start="1019:21" pos:end="1019:43"><name pos:start="1019:21" pos:end="1019:37">tcg_temp_free_i32</name><argument_list pos:start="1019:38" pos:end="1019:43">(<argument pos:start="1019:39" pos:end="1019:42"><expr pos:start="1019:39" pos:end="1019:42"><name pos:start="1019:39" pos:end="1019:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

                <break pos:start="1023:17" pos:end="1023:22">break;</break>

            <case pos:start="1025:13" pos:end="1025:19">case <expr pos:start="1025:18" pos:end="1025:18"><literal type="number" pos:start="1025:18" pos:end="1025:18">3</literal></expr>:</case> <comment type="block" pos:start="1025:21" pos:end="1025:42">/* 32 * 16 -&gt; 32msb */</comment>

                <if_stmt pos:start="1027:17" pos:end="1033:35"><if pos:start="1027:17" pos:end="1029:53">if <condition pos:start="1027:20" pos:end="1027:23">(<expr pos:start="1027:21" pos:end="1027:22"><name pos:start="1027:21" pos:end="1027:22">op</name></expr>)</condition><block type="pseudo" pos:start="1029:21" pos:end="1029:53"><block_content pos:start="1029:21" pos:end="1029:53">

                    <expr_stmt pos:start="1029:21" pos:end="1029:53"><expr pos:start="1029:21" pos:end="1029:52"><call pos:start="1029:21" pos:end="1029:52"><name pos:start="1029:21" pos:end="1029:36">tcg_gen_sari_i32</name><argument_list pos:start="1029:37" pos:end="1029:52">(<argument pos:start="1029:38" pos:end="1029:41"><expr pos:start="1029:38" pos:end="1029:41"><name pos:start="1029:38" pos:end="1029:41">tmp2</name></expr></argument>, <argument pos:start="1029:44" pos:end="1029:47"><expr pos:start="1029:44" pos:end="1029:47"><name pos:start="1029:44" pos:end="1029:47">tmp2</name></expr></argument>, <argument pos:start="1029:50" pos:end="1029:51"><expr pos:start="1029:50" pos:end="1029:51"><literal type="number" pos:start="1029:50" pos:end="1029:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1031:17" pos:end="1033:35">else<block type="pseudo" pos:start="1033:21" pos:end="1033:35"><block_content pos:start="1033:21" pos:end="1033:35">

                    <expr_stmt pos:start="1033:21" pos:end="1033:35"><expr pos:start="1033:21" pos:end="1033:34"><call pos:start="1033:21" pos:end="1033:34"><name pos:start="1033:21" pos:end="1033:28">gen_sxth</name><argument_list pos:start="1033:29" pos:end="1033:34">(<argument pos:start="1033:30" pos:end="1033:33"><expr pos:start="1033:30" pos:end="1033:33"><name pos:start="1033:30" pos:end="1033:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="1035:17" pos:end="1035:52"><expr pos:start="1035:17" pos:end="1035:51"><name pos:start="1035:17" pos:end="1035:21">tmp64</name> <operator pos:start="1035:23" pos:end="1035:23">=</operator> <call pos:start="1035:25" pos:end="1035:51"><name pos:start="1035:25" pos:end="1035:40">gen_muls_i64_i32</name><argument_list pos:start="1035:41" pos:end="1035:51">(<argument pos:start="1035:42" pos:end="1035:44"><expr pos:start="1035:42" pos:end="1035:44"><name pos:start="1035:42" pos:end="1035:44">tmp</name></expr></argument>, <argument pos:start="1035:47" pos:end="1035:50"><expr pos:start="1035:47" pos:end="1035:50"><name pos:start="1035:47" pos:end="1035:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1037:17" pos:end="1037:51"><expr pos:start="1037:17" pos:end="1037:50"><call pos:start="1037:17" pos:end="1037:50"><name pos:start="1037:17" pos:end="1037:32">tcg_gen_shri_i64</name><argument_list pos:start="1037:33" pos:end="1037:50">(<argument pos:start="1037:34" pos:end="1037:38"><expr pos:start="1037:34" pos:end="1037:38"><name pos:start="1037:34" pos:end="1037:38">tmp64</name></expr></argument>, <argument pos:start="1037:41" pos:end="1037:45"><expr pos:start="1037:41" pos:end="1037:45"><name pos:start="1037:41" pos:end="1037:45">tmp64</name></expr></argument>, <argument pos:start="1037:48" pos:end="1037:49"><expr pos:start="1037:48" pos:end="1037:49"><literal type="number" pos:start="1037:48" pos:end="1037:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1039:17" pos:end="1039:41"><expr pos:start="1039:17" pos:end="1039:40"><name pos:start="1039:17" pos:end="1039:19">tmp</name> <operator pos:start="1039:21" pos:end="1039:21">=</operator> <call pos:start="1039:23" pos:end="1039:40"><name pos:start="1039:23" pos:end="1039:38">tcg_temp_new_i32</name><argument_list pos:start="1039:39" pos:end="1039:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1041:17" pos:end="1041:50"><expr pos:start="1041:17" pos:end="1041:49"><call pos:start="1041:17" pos:end="1041:49"><name pos:start="1041:17" pos:end="1041:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1041:38" pos:end="1041:49">(<argument pos:start="1041:39" pos:end="1041:41"><expr pos:start="1041:39" pos:end="1041:41"><name pos:start="1041:39" pos:end="1041:41">tmp</name></expr></argument>, <argument pos:start="1041:44" pos:end="1041:48"><expr pos:start="1041:44" pos:end="1041:48"><name pos:start="1041:44" pos:end="1041:48">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1043:17" pos:end="1043:41"><expr pos:start="1043:17" pos:end="1043:40"><call pos:start="1043:17" pos:end="1043:40"><name pos:start="1043:17" pos:end="1043:33">tcg_temp_free_i64</name><argument_list pos:start="1043:34" pos:end="1043:40">(<argument pos:start="1043:35" pos:end="1043:39"><expr pos:start="1043:35" pos:end="1043:39"><name pos:start="1043:35" pos:end="1043:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1045:17" pos:end="1055:19"><if pos:start="1045:17" pos:end="1055:19">if <condition pos:start="1045:20" pos:end="1045:29">(<expr pos:start="1045:21" pos:end="1045:28"><name pos:start="1045:21" pos:end="1045:22">rs</name> <operator pos:start="1045:24" pos:end="1045:25">!=</operator> <literal type="number" pos:start="1045:27" pos:end="1045:28">15</literal></expr>)</condition>

                  <block pos:start="1047:19" pos:end="1055:19">{<block_content pos:start="1049:21" pos:end="1053:44">

                    <expr_stmt pos:start="1049:21" pos:end="1049:43"><expr pos:start="1049:21" pos:end="1049:42"><name pos:start="1049:21" pos:end="1049:24">tmp2</name> <operator pos:start="1049:26" pos:end="1049:26">=</operator> <call pos:start="1049:28" pos:end="1049:42"><name pos:start="1049:28" pos:end="1049:35">load_reg</name><argument_list pos:start="1049:36" pos:end="1049:42">(<argument pos:start="1049:37" pos:end="1049:37"><expr pos:start="1049:37" pos:end="1049:37"><name pos:start="1049:37" pos:end="1049:37">s</name></expr></argument>, <argument pos:start="1049:40" pos:end="1049:41"><expr pos:start="1049:40" pos:end="1049:41"><name pos:start="1049:40" pos:end="1049:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1051:21" pos:end="1051:65"><expr pos:start="1051:21" pos:end="1051:64"><call pos:start="1051:21" pos:end="1051:64"><name pos:start="1051:21" pos:end="1051:39">gen_helper_add_setq</name><argument_list pos:start="1051:40" pos:end="1051:64">(<argument pos:start="1051:41" pos:end="1051:43"><expr pos:start="1051:41" pos:end="1051:43"><name pos:start="1051:41" pos:end="1051:43">tmp</name></expr></argument>, <argument pos:start="1051:46" pos:end="1051:52"><expr pos:start="1051:46" pos:end="1051:52"><name pos:start="1051:46" pos:end="1051:52">cpu_env</name></expr></argument>, <argument pos:start="1051:55" pos:end="1051:57"><expr pos:start="1051:55" pos:end="1051:57"><name pos:start="1051:55" pos:end="1051:57">tmp</name></expr></argument>, <argument pos:start="1051:60" pos:end="1051:63"><expr pos:start="1051:60" pos:end="1051:63"><name pos:start="1051:60" pos:end="1051:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1053:21" pos:end="1053:44"><expr pos:start="1053:21" pos:end="1053:43"><call pos:start="1053:21" pos:end="1053:43"><name pos:start="1053:21" pos:end="1053:37">tcg_temp_free_i32</name><argument_list pos:start="1053:38" pos:end="1053:43">(<argument pos:start="1053:39" pos:end="1053:42"><expr pos:start="1053:39" pos:end="1053:42"><name pos:start="1053:39" pos:end="1053:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

                <break pos:start="1057:17" pos:end="1057:22">break;</break>

            <case pos:start="1059:13" pos:end="1059:19">case <expr pos:start="1059:18" pos:end="1059:18"><literal type="number" pos:start="1059:18" pos:end="1059:18">5</literal></expr>:</case> <case pos:start="1059:21" pos:end="1059:27">case <expr pos:start="1059:26" pos:end="1059:26"><literal type="number" pos:start="1059:26" pos:end="1059:26">6</literal></expr>:</case> <comment type="block" pos:start="1059:29" pos:end="1059:72">/* 32 * 32 -&gt; 32msb (SMMUL, SMMLA, SMMLS) */</comment>

                <expr_stmt pos:start="1061:17" pos:end="1061:52"><expr pos:start="1061:17" pos:end="1061:51"><name pos:start="1061:17" pos:end="1061:21">tmp64</name> <operator pos:start="1061:23" pos:end="1061:23">=</operator> <call pos:start="1061:25" pos:end="1061:51"><name pos:start="1061:25" pos:end="1061:40">gen_muls_i64_i32</name><argument_list pos:start="1061:41" pos:end="1061:51">(<argument pos:start="1061:42" pos:end="1061:44"><expr pos:start="1061:42" pos:end="1061:44"><name pos:start="1061:42" pos:end="1061:44">tmp</name></expr></argument>, <argument pos:start="1061:47" pos:end="1061:50"><expr pos:start="1061:47" pos:end="1061:50"><name pos:start="1061:47" pos:end="1061:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1063:17" pos:end="1077:17"><if pos:start="1063:17" pos:end="1077:17">if <condition pos:start="1063:20" pos:end="1063:29">(<expr pos:start="1063:21" pos:end="1063:28"><name pos:start="1063:21" pos:end="1063:22">rs</name> <operator pos:start="1063:24" pos:end="1063:25">!=</operator> <literal type="number" pos:start="1063:27" pos:end="1063:28">15</literal></expr>)</condition> <block pos:start="1063:31" pos:end="1077:17">{<block_content pos:start="1065:21" pos:end="1075:21">

                    <expr_stmt pos:start="1065:21" pos:end="1065:42"><expr pos:start="1065:21" pos:end="1065:41"><name pos:start="1065:21" pos:end="1065:23">tmp</name> <operator pos:start="1065:25" pos:end="1065:25">=</operator> <call pos:start="1065:27" pos:end="1065:41"><name pos:start="1065:27" pos:end="1065:34">load_reg</name><argument_list pos:start="1065:35" pos:end="1065:41">(<argument pos:start="1065:36" pos:end="1065:36"><expr pos:start="1065:36" pos:end="1065:36"><name pos:start="1065:36" pos:end="1065:36">s</name></expr></argument>, <argument pos:start="1065:39" pos:end="1065:40"><expr pos:start="1065:39" pos:end="1065:40"><name pos:start="1065:39" pos:end="1065:40">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="1067:21" pos:end="1075:21"><if pos:start="1067:21" pos:end="1071:21">if <condition pos:start="1067:24" pos:end="1067:41">(<expr pos:start="1067:25" pos:end="1067:40"><name pos:start="1067:25" pos:end="1067:28">insn</name> <operator pos:start="1067:30" pos:end="1067:30">&amp;</operator> <operator pos:start="1067:32" pos:end="1067:32">(</operator><literal type="number" pos:start="1067:33" pos:end="1067:33">1</literal> <operator pos:start="1067:35" pos:end="1067:36">&lt;&lt;</operator> <literal type="number" pos:start="1067:38" pos:end="1067:39">20</literal><operator pos:start="1067:40" pos:end="1067:40">)</operator></expr>)</condition> <block pos:start="1067:43" pos:end="1071:21">{<block_content pos:start="1069:25" pos:end="1069:57">

                        <expr_stmt pos:start="1069:25" pos:end="1069:57"><expr pos:start="1069:25" pos:end="1069:56"><name pos:start="1069:25" pos:end="1069:29">tmp64</name> <operator pos:start="1069:31" pos:end="1069:31">=</operator> <call pos:start="1069:33" pos:end="1069:56"><name pos:start="1069:33" pos:end="1069:44">gen_addq_msw</name><argument_list pos:start="1069:45" pos:end="1069:56">(<argument pos:start="1069:46" pos:end="1069:50"><expr pos:start="1069:46" pos:end="1069:50"><name pos:start="1069:46" pos:end="1069:50">tmp64</name></expr></argument>, <argument pos:start="1069:53" pos:end="1069:55"><expr pos:start="1069:53" pos:end="1069:55"><name pos:start="1069:53" pos:end="1069:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1071:23" pos:end="1075:21">else <block pos:start="1071:28" pos:end="1075:21">{<block_content pos:start="1073:25" pos:end="1073:57">

                        <expr_stmt pos:start="1073:25" pos:end="1073:57"><expr pos:start="1073:25" pos:end="1073:56"><name pos:start="1073:25" pos:end="1073:29">tmp64</name> <operator pos:start="1073:31" pos:end="1073:31">=</operator> <call pos:start="1073:33" pos:end="1073:56"><name pos:start="1073:33" pos:end="1073:44">gen_subq_msw</name><argument_list pos:start="1073:45" pos:end="1073:56">(<argument pos:start="1073:46" pos:end="1073:50"><expr pos:start="1073:46" pos:end="1073:50"><name pos:start="1073:46" pos:end="1073:50">tmp64</name></expr></argument>, <argument pos:start="1073:53" pos:end="1073:55"><expr pos:start="1073:53" pos:end="1073:55"><name pos:start="1073:53" pos:end="1073:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1079:17" pos:end="1083:17"><if pos:start="1079:17" pos:end="1083:17">if <condition pos:start="1079:20" pos:end="1079:36">(<expr pos:start="1079:21" pos:end="1079:35"><name pos:start="1079:21" pos:end="1079:24">insn</name> <operator pos:start="1079:26" pos:end="1079:26">&amp;</operator> <operator pos:start="1079:28" pos:end="1079:28">(</operator><literal type="number" pos:start="1079:29" pos:end="1079:29">1</literal> <operator pos:start="1079:31" pos:end="1079:32">&lt;&lt;</operator> <literal type="number" pos:start="1079:34" pos:end="1079:34">4</literal><operator pos:start="1079:35" pos:end="1079:35">)</operator></expr>)</condition> <block pos:start="1079:38" pos:end="1083:17">{<block_content pos:start="1081:21" pos:end="1081:64">

                    <expr_stmt pos:start="1081:21" pos:end="1081:64"><expr pos:start="1081:21" pos:end="1081:63"><call pos:start="1081:21" pos:end="1081:63"><name pos:start="1081:21" pos:end="1081:36">tcg_gen_addi_i64</name><argument_list pos:start="1081:37" pos:end="1081:63">(<argument pos:start="1081:38" pos:end="1081:42"><expr pos:start="1081:38" pos:end="1081:42"><name pos:start="1081:38" pos:end="1081:42">tmp64</name></expr></argument>, <argument pos:start="1081:45" pos:end="1081:49"><expr pos:start="1081:45" pos:end="1081:49"><name pos:start="1081:45" pos:end="1081:49">tmp64</name></expr></argument>, <argument pos:start="1081:52" pos:end="1081:62"><expr pos:start="1081:52" pos:end="1081:62"><literal type="number" pos:start="1081:52" pos:end="1081:62">0x80000000u</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1085:17" pos:end="1085:51"><expr pos:start="1085:17" pos:end="1085:50"><call pos:start="1085:17" pos:end="1085:50"><name pos:start="1085:17" pos:end="1085:32">tcg_gen_shri_i64</name><argument_list pos:start="1085:33" pos:end="1085:50">(<argument pos:start="1085:34" pos:end="1085:38"><expr pos:start="1085:34" pos:end="1085:38"><name pos:start="1085:34" pos:end="1085:38">tmp64</name></expr></argument>, <argument pos:start="1085:41" pos:end="1085:45"><expr pos:start="1085:41" pos:end="1085:45"><name pos:start="1085:41" pos:end="1085:45">tmp64</name></expr></argument>, <argument pos:start="1085:48" pos:end="1085:49"><expr pos:start="1085:48" pos:end="1085:49"><literal type="number" pos:start="1085:48" pos:end="1085:49">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1087:17" pos:end="1087:41"><expr pos:start="1087:17" pos:end="1087:40"><name pos:start="1087:17" pos:end="1087:19">tmp</name> <operator pos:start="1087:21" pos:end="1087:21">=</operator> <call pos:start="1087:23" pos:end="1087:40"><name pos:start="1087:23" pos:end="1087:38">tcg_temp_new_i32</name><argument_list pos:start="1087:39" pos:end="1087:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1089:17" pos:end="1089:50"><expr pos:start="1089:17" pos:end="1089:49"><call pos:start="1089:17" pos:end="1089:49"><name pos:start="1089:17" pos:end="1089:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1089:38" pos:end="1089:49">(<argument pos:start="1089:39" pos:end="1089:41"><expr pos:start="1089:39" pos:end="1089:41"><name pos:start="1089:39" pos:end="1089:41">tmp</name></expr></argument>, <argument pos:start="1089:44" pos:end="1089:48"><expr pos:start="1089:44" pos:end="1089:48"><name pos:start="1089:44" pos:end="1089:48">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1091:17" pos:end="1091:41"><expr pos:start="1091:17" pos:end="1091:40"><call pos:start="1091:17" pos:end="1091:40"><name pos:start="1091:17" pos:end="1091:33">tcg_temp_free_i64</name><argument_list pos:start="1091:34" pos:end="1091:40">(<argument pos:start="1091:35" pos:end="1091:39"><expr pos:start="1091:35" pos:end="1091:39"><name pos:start="1091:35" pos:end="1091:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1093:17" pos:end="1093:22">break;</break>

            <case pos:start="1095:13" pos:end="1095:19">case <expr pos:start="1095:18" pos:end="1095:18"><literal type="number" pos:start="1095:18" pos:end="1095:18">7</literal></expr>:</case> <comment type="block" pos:start="1095:21" pos:end="1095:64">/* Unsigned sum of absolute differences.  */</comment>

                <expr_stmt pos:start="1097:17" pos:end="1097:49"><expr pos:start="1097:17" pos:end="1097:48"><call pos:start="1097:17" pos:end="1097:48"><name pos:start="1097:17" pos:end="1097:32">gen_helper_usad8</name><argument_list pos:start="1097:33" pos:end="1097:48">(<argument pos:start="1097:34" pos:end="1097:36"><expr pos:start="1097:34" pos:end="1097:36"><name pos:start="1097:34" pos:end="1097:36">tmp</name></expr></argument>, <argument pos:start="1097:39" pos:end="1097:41"><expr pos:start="1097:39" pos:end="1097:41"><name pos:start="1097:39" pos:end="1097:41">tmp</name></expr></argument>, <argument pos:start="1097:44" pos:end="1097:47"><expr pos:start="1097:44" pos:end="1097:47"><name pos:start="1097:44" pos:end="1097:47">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1099:17" pos:end="1099:40"><expr pos:start="1099:17" pos:end="1099:39"><call pos:start="1099:17" pos:end="1099:39"><name pos:start="1099:17" pos:end="1099:33">tcg_temp_free_i32</name><argument_list pos:start="1099:34" pos:end="1099:39">(<argument pos:start="1099:35" pos:end="1099:38"><expr pos:start="1099:35" pos:end="1099:38"><name pos:start="1099:35" pos:end="1099:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1101:17" pos:end="1109:17"><if pos:start="1101:17" pos:end="1109:17">if <condition pos:start="1101:20" pos:end="1101:29">(<expr pos:start="1101:21" pos:end="1101:28"><name pos:start="1101:21" pos:end="1101:22">rs</name> <operator pos:start="1101:24" pos:end="1101:25">!=</operator> <literal type="number" pos:start="1101:27" pos:end="1101:28">15</literal></expr>)</condition> <block pos:start="1101:31" pos:end="1109:17">{<block_content pos:start="1103:21" pos:end="1107:44">

                    <expr_stmt pos:start="1103:21" pos:end="1103:43"><expr pos:start="1103:21" pos:end="1103:42"><name pos:start="1103:21" pos:end="1103:24">tmp2</name> <operator pos:start="1103:26" pos:end="1103:26">=</operator> <call pos:start="1103:28" pos:end="1103:42"><name pos:start="1103:28" pos:end="1103:35">load_reg</name><argument_list pos:start="1103:36" pos:end="1103:42">(<argument pos:start="1103:37" pos:end="1103:37"><expr pos:start="1103:37" pos:end="1103:37"><name pos:start="1103:37" pos:end="1103:37">s</name></expr></argument>, <argument pos:start="1103:40" pos:end="1103:41"><expr pos:start="1103:40" pos:end="1103:41"><name pos:start="1103:40" pos:end="1103:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1105:21" pos:end="1105:52"><expr pos:start="1105:21" pos:end="1105:51"><call pos:start="1105:21" pos:end="1105:51"><name pos:start="1105:21" pos:end="1105:35">tcg_gen_add_i32</name><argument_list pos:start="1105:36" pos:end="1105:51">(<argument pos:start="1105:37" pos:end="1105:39"><expr pos:start="1105:37" pos:end="1105:39"><name pos:start="1105:37" pos:end="1105:39">tmp</name></expr></argument>, <argument pos:start="1105:42" pos:end="1105:44"><expr pos:start="1105:42" pos:end="1105:44"><name pos:start="1105:42" pos:end="1105:44">tmp</name></expr></argument>, <argument pos:start="1105:47" pos:end="1105:50"><expr pos:start="1105:47" pos:end="1105:50"><name pos:start="1105:47" pos:end="1105:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1107:21" pos:end="1107:44"><expr pos:start="1107:21" pos:end="1107:43"><call pos:start="1107:21" pos:end="1107:43"><name pos:start="1107:21" pos:end="1107:37">tcg_temp_free_i32</name><argument_list pos:start="1107:38" pos:end="1107:43">(<argument pos:start="1107:39" pos:end="1107:42"><expr pos:start="1107:39" pos:end="1107:42"><name pos:start="1107:39" pos:end="1107:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="1111:17" pos:end="1111:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="1115:13" pos:end="1115:34"><expr pos:start="1115:13" pos:end="1115:33"><call pos:start="1115:13" pos:end="1115:33"><name pos:start="1115:13" pos:end="1115:21">store_reg</name><argument_list pos:start="1115:22" pos:end="1115:33">(<argument pos:start="1115:23" pos:end="1115:23"><expr pos:start="1115:23" pos:end="1115:23"><name pos:start="1115:23" pos:end="1115:23">s</name></expr></argument>, <argument pos:start="1115:26" pos:end="1115:27"><expr pos:start="1115:26" pos:end="1115:27"><name pos:start="1115:26" pos:end="1115:27">rd</name></expr></argument>, <argument pos:start="1115:30" pos:end="1115:32"><expr pos:start="1115:30" pos:end="1115:32"><name pos:start="1115:30" pos:end="1115:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1117:13" pos:end="1117:18">break;</break>

        <case pos:start="1119:9" pos:end="1119:15">case <expr pos:start="1119:14" pos:end="1119:14"><literal type="number" pos:start="1119:14" pos:end="1119:14">6</literal></expr>:</case> <case pos:start="1119:17" pos:end="1119:23">case <expr pos:start="1119:22" pos:end="1119:22"><literal type="number" pos:start="1119:22" pos:end="1119:22">7</literal></expr>:</case> <comment type="block" pos:start="1119:25" pos:end="1119:55">/* 64-bit multiply, Divide.  */</comment>

            <expr_stmt pos:start="1121:13" pos:end="1121:61"><expr pos:start="1121:13" pos:end="1121:60"><name pos:start="1121:13" pos:end="1121:14">op</name> <operator pos:start="1121:16" pos:end="1121:16">=</operator> <operator pos:start="1121:18" pos:end="1121:18">(</operator><operator pos:start="1121:19" pos:end="1121:19">(</operator><name pos:start="1121:20" pos:end="1121:23">insn</name> <operator pos:start="1121:25" pos:end="1121:26">&gt;&gt;</operator> <literal type="number" pos:start="1121:28" pos:end="1121:28">4</literal><operator pos:start="1121:29" pos:end="1121:29">)</operator> <operator pos:start="1121:31" pos:end="1121:31">&amp;</operator> <literal type="number" pos:start="1121:33" pos:end="1121:35">0xf</literal><operator pos:start="1121:36" pos:end="1121:36">)</operator> <operator pos:start="1121:38" pos:end="1121:38">|</operator> <operator pos:start="1121:40" pos:end="1121:40">(</operator><operator pos:start="1121:41" pos:end="1121:41">(</operator><name pos:start="1121:42" pos:end="1121:45">insn</name> <operator pos:start="1121:47" pos:end="1121:48">&gt;&gt;</operator> <literal type="number" pos:start="1121:50" pos:end="1121:51">16</literal><operator pos:start="1121:52" pos:end="1121:52">)</operator> <operator pos:start="1121:54" pos:end="1121:54">&amp;</operator> <literal type="number" pos:start="1121:56" pos:end="1121:59">0x70</literal><operator pos:start="1121:60" pos:end="1121:60">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1123:13" pos:end="1123:34"><expr pos:start="1123:13" pos:end="1123:33"><name pos:start="1123:13" pos:end="1123:15">tmp</name> <operator pos:start="1123:17" pos:end="1123:17">=</operator> <call pos:start="1123:19" pos:end="1123:33"><name pos:start="1123:19" pos:end="1123:26">load_reg</name><argument_list pos:start="1123:27" pos:end="1123:33">(<argument pos:start="1123:28" pos:end="1123:28"><expr pos:start="1123:28" pos:end="1123:28"><name pos:start="1123:28" pos:end="1123:28">s</name></expr></argument>, <argument pos:start="1123:31" pos:end="1123:32"><expr pos:start="1123:31" pos:end="1123:32"><name pos:start="1123:31" pos:end="1123:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1125:13" pos:end="1125:35"><expr pos:start="1125:13" pos:end="1125:34"><name pos:start="1125:13" pos:end="1125:16">tmp2</name> <operator pos:start="1125:18" pos:end="1125:18">=</operator> <call pos:start="1125:20" pos:end="1125:34"><name pos:start="1125:20" pos:end="1125:27">load_reg</name><argument_list pos:start="1125:28" pos:end="1125:34">(<argument pos:start="1125:29" pos:end="1125:29"><expr pos:start="1125:29" pos:end="1125:29"><name pos:start="1125:29" pos:end="1125:29">s</name></expr></argument>, <argument pos:start="1125:32" pos:end="1125:33"><expr pos:start="1125:32" pos:end="1125:33"><name pos:start="1125:32" pos:end="1125:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1127:13" pos:end="1239:13"><if pos:start="1127:13" pos:end="1149:13">if <condition pos:start="1127:16" pos:end="1127:36">(<expr pos:start="1127:17" pos:end="1127:35"><operator pos:start="1127:17" pos:end="1127:17">(</operator><name pos:start="1127:18" pos:end="1127:19">op</name> <operator pos:start="1127:21" pos:end="1127:21">&amp;</operator> <literal type="number" pos:start="1127:23" pos:end="1127:26">0x50</literal><operator pos:start="1127:27" pos:end="1127:27">)</operator> <operator pos:start="1127:29" pos:end="1127:30">==</operator> <literal type="number" pos:start="1127:32" pos:end="1127:35">0x10</literal></expr>)</condition> <block pos:start="1127:38" pos:end="1149:13">{<block_content pos:start="1131:17" pos:end="1147:38">

                <comment type="block" pos:start="1129:17" pos:end="1129:32">/* sdiv, udiv */</comment>

                <if_stmt pos:start="1131:17" pos:end="1135:17"><if pos:start="1131:17" pos:end="1135:17">if <condition pos:start="1131:20" pos:end="1131:61">(<expr pos:start="1131:21" pos:end="1131:60"><operator pos:start="1131:21" pos:end="1131:21">!</operator><call pos:start="1131:22" pos:end="1131:60"><name pos:start="1131:22" pos:end="1131:32">arm_feature</name><argument_list pos:start="1131:33" pos:end="1131:60">(<argument pos:start="1131:34" pos:end="1131:36"><expr pos:start="1131:34" pos:end="1131:36"><name pos:start="1131:34" pos:end="1131:36">env</name></expr></argument>, <argument pos:start="1131:39" pos:end="1131:59"><expr pos:start="1131:39" pos:end="1131:59"><name pos:start="1131:39" pos:end="1131:59">ARM_FEATURE_THUMB_DIV</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1131:63" pos:end="1135:17">{<block_content pos:start="1133:21" pos:end="1133:36">

                    <goto pos:start="1133:21" pos:end="1133:36">goto <name pos:start="1133:26" pos:end="1133:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1137:17" pos:end="1143:52"><if pos:start="1137:17" pos:end="1139:52">if <condition pos:start="1137:20" pos:end="1137:30">(<expr pos:start="1137:21" pos:end="1137:29"><name pos:start="1137:21" pos:end="1137:22">op</name> <operator pos:start="1137:24" pos:end="1137:24">&amp;</operator> <literal type="number" pos:start="1137:26" pos:end="1137:29">0x20</literal></expr>)</condition><block type="pseudo" pos:start="1139:21" pos:end="1139:52"><block_content pos:start="1139:21" pos:end="1139:52">

                    <expr_stmt pos:start="1139:21" pos:end="1139:52"><expr pos:start="1139:21" pos:end="1139:51"><call pos:start="1139:21" pos:end="1139:51"><name pos:start="1139:21" pos:end="1139:35">gen_helper_udiv</name><argument_list pos:start="1139:36" pos:end="1139:51">(<argument pos:start="1139:37" pos:end="1139:39"><expr pos:start="1139:37" pos:end="1139:39"><name pos:start="1139:37" pos:end="1139:39">tmp</name></expr></argument>, <argument pos:start="1139:42" pos:end="1139:44"><expr pos:start="1139:42" pos:end="1139:44"><name pos:start="1139:42" pos:end="1139:44">tmp</name></expr></argument>, <argument pos:start="1139:47" pos:end="1139:50"><expr pos:start="1139:47" pos:end="1139:50"><name pos:start="1139:47" pos:end="1139:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1141:17" pos:end="1143:52">else<block type="pseudo" pos:start="1143:21" pos:end="1143:52"><block_content pos:start="1143:21" pos:end="1143:52">

                    <expr_stmt pos:start="1143:21" pos:end="1143:52"><expr pos:start="1143:21" pos:end="1143:51"><call pos:start="1143:21" pos:end="1143:51"><name pos:start="1143:21" pos:end="1143:35">gen_helper_sdiv</name><argument_list pos:start="1143:36" pos:end="1143:51">(<argument pos:start="1143:37" pos:end="1143:39"><expr pos:start="1143:37" pos:end="1143:39"><name pos:start="1143:37" pos:end="1143:39">tmp</name></expr></argument>, <argument pos:start="1143:42" pos:end="1143:44"><expr pos:start="1143:42" pos:end="1143:44"><name pos:start="1143:42" pos:end="1143:44">tmp</name></expr></argument>, <argument pos:start="1143:47" pos:end="1143:50"><expr pos:start="1143:47" pos:end="1143:50"><name pos:start="1143:47" pos:end="1143:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="1145:17" pos:end="1145:40"><expr pos:start="1145:17" pos:end="1145:39"><call pos:start="1145:17" pos:end="1145:39"><name pos:start="1145:17" pos:end="1145:33">tcg_temp_free_i32</name><argument_list pos:start="1145:34" pos:end="1145:39">(<argument pos:start="1145:35" pos:end="1145:38"><expr pos:start="1145:35" pos:end="1145:38"><name pos:start="1145:35" pos:end="1145:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1147:17" pos:end="1147:38"><expr pos:start="1147:17" pos:end="1147:37"><call pos:start="1147:17" pos:end="1147:37"><name pos:start="1147:17" pos:end="1147:25">store_reg</name><argument_list pos:start="1147:26" pos:end="1147:37">(<argument pos:start="1147:27" pos:end="1147:27"><expr pos:start="1147:27" pos:end="1147:27"><name pos:start="1147:27" pos:end="1147:27">s</name></expr></argument>, <argument pos:start="1147:30" pos:end="1147:31"><expr pos:start="1147:30" pos:end="1147:31"><name pos:start="1147:30" pos:end="1147:31">rd</name></expr></argument>, <argument pos:start="1147:34" pos:end="1147:36"><expr pos:start="1147:34" pos:end="1147:36"><name pos:start="1147:34" pos:end="1147:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1149:15" pos:end="1185:13">else if <condition pos:start="1149:23" pos:end="1149:41">(<expr pos:start="1149:24" pos:end="1149:40"><operator pos:start="1149:24" pos:end="1149:24">(</operator><name pos:start="1149:25" pos:end="1149:26">op</name> <operator pos:start="1149:28" pos:end="1149:28">&amp;</operator> <literal type="number" pos:start="1149:30" pos:end="1149:32">0xe</literal><operator pos:start="1149:33" pos:end="1149:33">)</operator> <operator pos:start="1149:35" pos:end="1149:36">==</operator> <literal type="number" pos:start="1149:38" pos:end="1149:40">0xc</literal></expr>)</condition> <block pos:start="1149:43" pos:end="1185:13">{<block_content pos:start="1153:17" pos:end="1183:41">

                <comment type="block" pos:start="1151:17" pos:end="1151:53">/* Dual multiply accumulate long.  */</comment>

                <if_stmt pos:start="1153:17" pos:end="1155:40"><if pos:start="1153:17" pos:end="1155:40">if <condition pos:start="1153:20" pos:end="1153:27">(<expr pos:start="1153:21" pos:end="1153:26"><name pos:start="1153:21" pos:end="1153:22">op</name> <operator pos:start="1153:24" pos:end="1153:24">&amp;</operator> <literal type="number" pos:start="1153:26" pos:end="1153:26">1</literal></expr>)</condition><block type="pseudo" pos:start="1155:21" pos:end="1155:40"><block_content pos:start="1155:21" pos:end="1155:40">

                    <expr_stmt pos:start="1155:21" pos:end="1155:40"><expr pos:start="1155:21" pos:end="1155:39"><call pos:start="1155:21" pos:end="1155:39"><name pos:start="1155:21" pos:end="1155:33">gen_swap_half</name><argument_list pos:start="1155:34" pos:end="1155:39">(<argument pos:start="1155:35" pos:end="1155:38"><expr pos:start="1155:35" pos:end="1155:38"><name pos:start="1155:35" pos:end="1155:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1157:17" pos:end="1157:41"><expr pos:start="1157:17" pos:end="1157:40"><call pos:start="1157:17" pos:end="1157:40"><name pos:start="1157:17" pos:end="1157:29">gen_smul_dual</name><argument_list pos:start="1157:30" pos:end="1157:40">(<argument pos:start="1157:31" pos:end="1157:33"><expr pos:start="1157:31" pos:end="1157:33"><name pos:start="1157:31" pos:end="1157:33">tmp</name></expr></argument>, <argument pos:start="1157:36" pos:end="1157:39"><expr pos:start="1157:36" pos:end="1157:39"><name pos:start="1157:36" pos:end="1157:39">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1159:17" pos:end="1167:17"><if pos:start="1159:17" pos:end="1163:17">if <condition pos:start="1159:20" pos:end="1159:30">(<expr pos:start="1159:21" pos:end="1159:29"><name pos:start="1159:21" pos:end="1159:22">op</name> <operator pos:start="1159:24" pos:end="1159:24">&amp;</operator> <literal type="number" pos:start="1159:26" pos:end="1159:29">0x10</literal></expr>)</condition> <block pos:start="1159:32" pos:end="1163:17">{<block_content pos:start="1161:21" pos:end="1161:52">

                    <expr_stmt pos:start="1161:21" pos:end="1161:52"><expr pos:start="1161:21" pos:end="1161:51"><call pos:start="1161:21" pos:end="1161:51"><name pos:start="1161:21" pos:end="1161:35">tcg_gen_sub_i32</name><argument_list pos:start="1161:36" pos:end="1161:51">(<argument pos:start="1161:37" pos:end="1161:39"><expr pos:start="1161:37" pos:end="1161:39"><name pos:start="1161:37" pos:end="1161:39">tmp</name></expr></argument>, <argument pos:start="1161:42" pos:end="1161:44"><expr pos:start="1161:42" pos:end="1161:44"><name pos:start="1161:42" pos:end="1161:44">tmp</name></expr></argument>, <argument pos:start="1161:47" pos:end="1161:50"><expr pos:start="1161:47" pos:end="1161:50"><name pos:start="1161:47" pos:end="1161:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1163:19" pos:end="1167:17">else <block pos:start="1163:24" pos:end="1167:17">{<block_content pos:start="1165:21" pos:end="1165:52">

                    <expr_stmt pos:start="1165:21" pos:end="1165:52"><expr pos:start="1165:21" pos:end="1165:51"><call pos:start="1165:21" pos:end="1165:51"><name pos:start="1165:21" pos:end="1165:35">tcg_gen_add_i32</name><argument_list pos:start="1165:36" pos:end="1165:51">(<argument pos:start="1165:37" pos:end="1165:39"><expr pos:start="1165:37" pos:end="1165:39"><name pos:start="1165:37" pos:end="1165:39">tmp</name></expr></argument>, <argument pos:start="1165:42" pos:end="1165:44"><expr pos:start="1165:42" pos:end="1165:44"><name pos:start="1165:42" pos:end="1165:44">tmp</name></expr></argument>, <argument pos:start="1165:47" pos:end="1165:50"><expr pos:start="1165:47" pos:end="1165:50"><name pos:start="1165:47" pos:end="1165:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1169:17" pos:end="1169:40"><expr pos:start="1169:17" pos:end="1169:39"><call pos:start="1169:17" pos:end="1169:39"><name pos:start="1169:17" pos:end="1169:33">tcg_temp_free_i32</name><argument_list pos:start="1169:34" pos:end="1169:39">(<argument pos:start="1169:35" pos:end="1169:38"><expr pos:start="1169:35" pos:end="1169:38"><name pos:start="1169:35" pos:end="1169:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="1171:17" pos:end="1171:28">/* BUGFIX */</comment>

                <expr_stmt pos:start="1173:17" pos:end="1173:43"><expr pos:start="1173:17" pos:end="1173:42"><name pos:start="1173:17" pos:end="1173:21">tmp64</name> <operator pos:start="1173:23" pos:end="1173:23">=</operator> <call pos:start="1173:25" pos:end="1173:42"><name pos:start="1173:25" pos:end="1173:40">tcg_temp_new_i64</name><argument_list pos:start="1173:41" pos:end="1173:42">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1175:17" pos:end="1175:48"><expr pos:start="1175:17" pos:end="1175:47"><call pos:start="1175:17" pos:end="1175:47"><name pos:start="1175:17" pos:end="1175:35">tcg_gen_ext_i32_i64</name><argument_list pos:start="1175:36" pos:end="1175:47">(<argument pos:start="1175:37" pos:end="1175:41"><expr pos:start="1175:37" pos:end="1175:41"><name pos:start="1175:37" pos:end="1175:41">tmp64</name></expr></argument>, <argument pos:start="1175:44" pos:end="1175:46"><expr pos:start="1175:44" pos:end="1175:46"><name pos:start="1175:44" pos:end="1175:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1177:17" pos:end="1177:39"><expr pos:start="1177:17" pos:end="1177:38"><call pos:start="1177:17" pos:end="1177:38"><name pos:start="1177:17" pos:end="1177:33">tcg_temp_free_i32</name><argument_list pos:start="1177:34" pos:end="1177:38">(<argument pos:start="1177:35" pos:end="1177:37"><expr pos:start="1177:35" pos:end="1177:37"><name pos:start="1177:35" pos:end="1177:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1179:17" pos:end="1179:43"><expr pos:start="1179:17" pos:end="1179:42"><call pos:start="1179:17" pos:end="1179:42"><name pos:start="1179:17" pos:end="1179:24">gen_addq</name><argument_list pos:start="1179:25" pos:end="1179:42">(<argument pos:start="1179:26" pos:end="1179:26"><expr pos:start="1179:26" pos:end="1179:26"><name pos:start="1179:26" pos:end="1179:26">s</name></expr></argument>, <argument pos:start="1179:29" pos:end="1179:33"><expr pos:start="1179:29" pos:end="1179:33"><name pos:start="1179:29" pos:end="1179:33">tmp64</name></expr></argument>, <argument pos:start="1179:36" pos:end="1179:37"><expr pos:start="1179:36" pos:end="1179:37"><name pos:start="1179:36" pos:end="1179:37">rs</name></expr></argument>, <argument pos:start="1179:40" pos:end="1179:41"><expr pos:start="1179:40" pos:end="1179:41"><name pos:start="1179:40" pos:end="1179:41">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1181:17" pos:end="1181:49"><expr pos:start="1181:17" pos:end="1181:48"><call pos:start="1181:17" pos:end="1181:48"><name pos:start="1181:17" pos:end="1181:30">gen_storeq_reg</name><argument_list pos:start="1181:31" pos:end="1181:48">(<argument pos:start="1181:32" pos:end="1181:32"><expr pos:start="1181:32" pos:end="1181:32"><name pos:start="1181:32" pos:end="1181:32">s</name></expr></argument>, <argument pos:start="1181:35" pos:end="1181:36"><expr pos:start="1181:35" pos:end="1181:36"><name pos:start="1181:35" pos:end="1181:36">rs</name></expr></argument>, <argument pos:start="1181:39" pos:end="1181:40"><expr pos:start="1181:39" pos:end="1181:40"><name pos:start="1181:39" pos:end="1181:40">rd</name></expr></argument>, <argument pos:start="1181:43" pos:end="1181:47"><expr pos:start="1181:43" pos:end="1181:47"><name pos:start="1181:43" pos:end="1181:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1183:17" pos:end="1183:41"><expr pos:start="1183:17" pos:end="1183:40"><call pos:start="1183:17" pos:end="1183:40"><name pos:start="1183:17" pos:end="1183:33">tcg_temp_free_i64</name><argument_list pos:start="1183:34" pos:end="1183:40">(<argument pos:start="1183:35" pos:end="1183:39"><expr pos:start="1183:35" pos:end="1183:39"><name pos:start="1183:35" pos:end="1183:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1185:15" pos:end="1239:13">else <block pos:start="1185:20" pos:end="1239:13">{<block_content pos:start="1187:17" pos:end="1237:41">

                <if_stmt pos:start="1187:17" pos:end="1217:17"><if pos:start="1187:17" pos:end="1193:17">if <condition pos:start="1187:20" pos:end="1187:30">(<expr pos:start="1187:21" pos:end="1187:29"><name pos:start="1187:21" pos:end="1187:22">op</name> <operator pos:start="1187:24" pos:end="1187:24">&amp;</operator> <literal type="number" pos:start="1187:26" pos:end="1187:29">0x20</literal></expr>)</condition> <block pos:start="1187:32" pos:end="1193:17">{<block_content pos:start="1191:21" pos:end="1191:56">

                    <comment type="block" pos:start="1189:21" pos:end="1189:51">/* Unsigned 64-bit multiply  */</comment>

                    <expr_stmt pos:start="1191:21" pos:end="1191:56"><expr pos:start="1191:21" pos:end="1191:55"><name pos:start="1191:21" pos:end="1191:25">tmp64</name> <operator pos:start="1191:27" pos:end="1191:27">=</operator> <call pos:start="1191:29" pos:end="1191:55"><name pos:start="1191:29" pos:end="1191:44">gen_mulu_i64_i32</name><argument_list pos:start="1191:45" pos:end="1191:55">(<argument pos:start="1191:46" pos:end="1191:48"><expr pos:start="1191:46" pos:end="1191:48"><name pos:start="1191:46" pos:end="1191:48">tmp</name></expr></argument>, <argument pos:start="1191:51" pos:end="1191:54"><expr pos:start="1191:51" pos:end="1191:54"><name pos:start="1191:51" pos:end="1191:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1193:19" pos:end="1217:17">else <block pos:start="1193:24" pos:end="1217:17">{<block_content pos:start="1195:21" pos:end="1215:21">

                    <if_stmt pos:start="1195:21" pos:end="1215:21"><if pos:start="1195:21" pos:end="1209:21">if <condition pos:start="1195:24" pos:end="1195:31">(<expr pos:start="1195:25" pos:end="1195:30"><name pos:start="1195:25" pos:end="1195:26">op</name> <operator pos:start="1195:28" pos:end="1195:28">&amp;</operator> <literal type="number" pos:start="1195:30" pos:end="1195:30">8</literal></expr>)</condition> <block pos:start="1195:33" pos:end="1209:21">{<block_content pos:start="1199:25" pos:end="1207:47">

                        <comment type="block" pos:start="1197:25" pos:end="1197:37">/* smlalxy */</comment>

                        <expr_stmt pos:start="1199:25" pos:end="1199:61"><expr pos:start="1199:25" pos:end="1199:60"><call pos:start="1199:25" pos:end="1199:60"><name pos:start="1199:25" pos:end="1199:33">gen_mulxy</name><argument_list pos:start="1199:34" pos:end="1199:60">(<argument pos:start="1199:35" pos:end="1199:37"><expr pos:start="1199:35" pos:end="1199:37"><name pos:start="1199:35" pos:end="1199:37">tmp</name></expr></argument>, <argument pos:start="1199:40" pos:end="1199:43"><expr pos:start="1199:40" pos:end="1199:43"><name pos:start="1199:40" pos:end="1199:43">tmp2</name></expr></argument>, <argument pos:start="1199:46" pos:end="1199:51"><expr pos:start="1199:46" pos:end="1199:51"><name pos:start="1199:46" pos:end="1199:47">op</name> <operator pos:start="1199:49" pos:end="1199:49">&amp;</operator> <literal type="number" pos:start="1199:51" pos:end="1199:51">2</literal></expr></argument>, <argument pos:start="1199:54" pos:end="1199:59"><expr pos:start="1199:54" pos:end="1199:59"><name pos:start="1199:54" pos:end="1199:55">op</name> <operator pos:start="1199:57" pos:end="1199:57">&amp;</operator> <literal type="number" pos:start="1199:59" pos:end="1199:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1201:25" pos:end="1201:48"><expr pos:start="1201:25" pos:end="1201:47"><call pos:start="1201:25" pos:end="1201:47"><name pos:start="1201:25" pos:end="1201:41">tcg_temp_free_i32</name><argument_list pos:start="1201:42" pos:end="1201:47">(<argument pos:start="1201:43" pos:end="1201:46"><expr pos:start="1201:43" pos:end="1201:46"><name pos:start="1201:43" pos:end="1201:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1203:25" pos:end="1203:51"><expr pos:start="1203:25" pos:end="1203:50"><name pos:start="1203:25" pos:end="1203:29">tmp64</name> <operator pos:start="1203:31" pos:end="1203:31">=</operator> <call pos:start="1203:33" pos:end="1203:50"><name pos:start="1203:33" pos:end="1203:48">tcg_temp_new_i64</name><argument_list pos:start="1203:49" pos:end="1203:50">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1205:25" pos:end="1205:56"><expr pos:start="1205:25" pos:end="1205:55"><call pos:start="1205:25" pos:end="1205:55"><name pos:start="1205:25" pos:end="1205:43">tcg_gen_ext_i32_i64</name><argument_list pos:start="1205:44" pos:end="1205:55">(<argument pos:start="1205:45" pos:end="1205:49"><expr pos:start="1205:45" pos:end="1205:49"><name pos:start="1205:45" pos:end="1205:49">tmp64</name></expr></argument>, <argument pos:start="1205:52" pos:end="1205:54"><expr pos:start="1205:52" pos:end="1205:54"><name pos:start="1205:52" pos:end="1205:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1207:25" pos:end="1207:47"><expr pos:start="1207:25" pos:end="1207:46"><call pos:start="1207:25" pos:end="1207:46"><name pos:start="1207:25" pos:end="1207:41">tcg_temp_free_i32</name><argument_list pos:start="1207:42" pos:end="1207:46">(<argument pos:start="1207:43" pos:end="1207:45"><expr pos:start="1207:43" pos:end="1207:45"><name pos:start="1207:43" pos:end="1207:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1209:23" pos:end="1215:21">else <block pos:start="1209:28" pos:end="1215:21">{<block_content pos:start="1213:25" pos:end="1213:60">

                        <comment type="block" pos:start="1211:25" pos:end="1211:53">/* Signed 64-bit multiply  */</comment>

                        <expr_stmt pos:start="1213:25" pos:end="1213:60"><expr pos:start="1213:25" pos:end="1213:59"><name pos:start="1213:25" pos:end="1213:29">tmp64</name> <operator pos:start="1213:31" pos:end="1213:31">=</operator> <call pos:start="1213:33" pos:end="1213:59"><name pos:start="1213:33" pos:end="1213:48">gen_muls_i64_i32</name><argument_list pos:start="1213:49" pos:end="1213:59">(<argument pos:start="1213:50" pos:end="1213:52"><expr pos:start="1213:50" pos:end="1213:52"><name pos:start="1213:50" pos:end="1213:52">tmp</name></expr></argument>, <argument pos:start="1213:55" pos:end="1213:58"><expr pos:start="1213:55" pos:end="1213:58"><name pos:start="1213:55" pos:end="1213:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1219:17" pos:end="1233:17"><if pos:start="1219:17" pos:end="1227:17">if <condition pos:start="1219:20" pos:end="1219:27">(<expr pos:start="1219:21" pos:end="1219:26"><name pos:start="1219:21" pos:end="1219:22">op</name> <operator pos:start="1219:24" pos:end="1219:24">&amp;</operator> <literal type="number" pos:start="1219:26" pos:end="1219:26">4</literal></expr>)</condition> <block pos:start="1219:29" pos:end="1227:17">{<block_content pos:start="1223:21" pos:end="1225:46">

                    <comment type="block" pos:start="1221:21" pos:end="1221:31">/* umaal */</comment>

                    <expr_stmt pos:start="1223:21" pos:end="1223:46"><expr pos:start="1223:21" pos:end="1223:45"><call pos:start="1223:21" pos:end="1223:45"><name pos:start="1223:21" pos:end="1223:31">gen_addq_lo</name><argument_list pos:start="1223:32" pos:end="1223:45">(<argument pos:start="1223:33" pos:end="1223:33"><expr pos:start="1223:33" pos:end="1223:33"><name pos:start="1223:33" pos:end="1223:33">s</name></expr></argument>, <argument pos:start="1223:36" pos:end="1223:40"><expr pos:start="1223:36" pos:end="1223:40"><name pos:start="1223:36" pos:end="1223:40">tmp64</name></expr></argument>, <argument pos:start="1223:43" pos:end="1223:44"><expr pos:start="1223:43" pos:end="1223:44"><name pos:start="1223:43" pos:end="1223:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1225:21" pos:end="1225:46"><expr pos:start="1225:21" pos:end="1225:45"><call pos:start="1225:21" pos:end="1225:45"><name pos:start="1225:21" pos:end="1225:31">gen_addq_lo</name><argument_list pos:start="1225:32" pos:end="1225:45">(<argument pos:start="1225:33" pos:end="1225:33"><expr pos:start="1225:33" pos:end="1225:33"><name pos:start="1225:33" pos:end="1225:33">s</name></expr></argument>, <argument pos:start="1225:36" pos:end="1225:40"><expr pos:start="1225:36" pos:end="1225:40"><name pos:start="1225:36" pos:end="1225:40">tmp64</name></expr></argument>, <argument pos:start="1225:43" pos:end="1225:44"><expr pos:start="1225:43" pos:end="1225:44"><name pos:start="1225:43" pos:end="1225:44">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1227:19" pos:end="1233:17">else if <condition pos:start="1227:27" pos:end="1227:37">(<expr pos:start="1227:28" pos:end="1227:36"><name pos:start="1227:28" pos:end="1227:29">op</name> <operator pos:start="1227:31" pos:end="1227:31">&amp;</operator> <literal type="number" pos:start="1227:33" pos:end="1227:36">0x40</literal></expr>)</condition> <block pos:start="1227:39" pos:end="1233:17">{<block_content pos:start="1231:21" pos:end="1231:47">

                    <comment type="block" pos:start="1229:21" pos:end="1229:45">/* 64-bit accumulate.  */</comment>

                    <expr_stmt pos:start="1231:21" pos:end="1231:47"><expr pos:start="1231:21" pos:end="1231:46"><call pos:start="1231:21" pos:end="1231:46"><name pos:start="1231:21" pos:end="1231:28">gen_addq</name><argument_list pos:start="1231:29" pos:end="1231:46">(<argument pos:start="1231:30" pos:end="1231:30"><expr pos:start="1231:30" pos:end="1231:30"><name pos:start="1231:30" pos:end="1231:30">s</name></expr></argument>, <argument pos:start="1231:33" pos:end="1231:37"><expr pos:start="1231:33" pos:end="1231:37"><name pos:start="1231:33" pos:end="1231:37">tmp64</name></expr></argument>, <argument pos:start="1231:40" pos:end="1231:41"><expr pos:start="1231:40" pos:end="1231:41"><name pos:start="1231:40" pos:end="1231:41">rs</name></expr></argument>, <argument pos:start="1231:44" pos:end="1231:45"><expr pos:start="1231:44" pos:end="1231:45"><name pos:start="1231:44" pos:end="1231:45">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1235:17" pos:end="1235:49"><expr pos:start="1235:17" pos:end="1235:48"><call pos:start="1235:17" pos:end="1235:48"><name pos:start="1235:17" pos:end="1235:30">gen_storeq_reg</name><argument_list pos:start="1235:31" pos:end="1235:48">(<argument pos:start="1235:32" pos:end="1235:32"><expr pos:start="1235:32" pos:end="1235:32"><name pos:start="1235:32" pos:end="1235:32">s</name></expr></argument>, <argument pos:start="1235:35" pos:end="1235:36"><expr pos:start="1235:35" pos:end="1235:36"><name pos:start="1235:35" pos:end="1235:36">rs</name></expr></argument>, <argument pos:start="1235:39" pos:end="1235:40"><expr pos:start="1235:39" pos:end="1235:40"><name pos:start="1235:39" pos:end="1235:40">rd</name></expr></argument>, <argument pos:start="1235:43" pos:end="1235:47"><expr pos:start="1235:43" pos:end="1235:47"><name pos:start="1235:43" pos:end="1235:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1237:17" pos:end="1237:41"><expr pos:start="1237:17" pos:end="1237:40"><call pos:start="1237:17" pos:end="1237:40"><name pos:start="1237:17" pos:end="1237:33">tcg_temp_free_i64</name><argument_list pos:start="1237:34" pos:end="1237:40">(<argument pos:start="1237:35" pos:end="1237:39"><expr pos:start="1237:35" pos:end="1237:39"><name pos:start="1237:35" pos:end="1237:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1241:13" pos:end="1241:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="1245:9" pos:end="1245:14">break;</break>

    <case pos:start="1247:5" pos:end="1247:11">case <expr pos:start="1247:10" pos:end="1247:10"><literal type="number" pos:start="1247:10" pos:end="1247:10">6</literal></expr>:</case> <case pos:start="1247:13" pos:end="1247:19">case <expr pos:start="1247:18" pos:end="1247:18"><literal type="number" pos:start="1247:18" pos:end="1247:18">7</literal></expr>:</case> <case pos:start="1247:21" pos:end="1247:28">case <expr pos:start="1247:26" pos:end="1247:27"><literal type="number" pos:start="1247:26" pos:end="1247:27">14</literal></expr>:</case> <case pos:start="1247:30" pos:end="1247:37">case <expr pos:start="1247:35" pos:end="1247:36"><literal type="number" pos:start="1247:35" pos:end="1247:36">15</literal></expr>:</case>

        <comment type="block" pos:start="1249:9" pos:end="1249:27">/* Coprocessor.  */</comment>

        <if_stmt pos:start="1251:9" pos:end="1271:9"><if pos:start="1251:9" pos:end="1261:9">if <condition pos:start="1251:12" pos:end="1251:36">(<expr pos:start="1251:13" pos:end="1251:35"><operator pos:start="1251:13" pos:end="1251:13">(</operator><operator pos:start="1251:14" pos:end="1251:14">(</operator><name pos:start="1251:15" pos:end="1251:18">insn</name> <operator pos:start="1251:20" pos:end="1251:21">&gt;&gt;</operator> <literal type="number" pos:start="1251:23" pos:end="1251:24">24</literal><operator pos:start="1251:25" pos:end="1251:25">)</operator> <operator pos:start="1251:27" pos:end="1251:27">&amp;</operator> <literal type="number" pos:start="1251:29" pos:end="1251:29">3</literal><operator pos:start="1251:30" pos:end="1251:30">)</operator> <operator pos:start="1251:32" pos:end="1251:33">==</operator> <literal type="number" pos:start="1251:35" pos:end="1251:35">3</literal></expr>)</condition> <block pos:start="1251:38" pos:end="1261:9">{<block_content pos:start="1255:13" pos:end="1259:32">

            <comment type="block" pos:start="1253:13" pos:end="1253:62">/* Translate into the equivalent ARM encoding.  */</comment>

            <expr_stmt pos:start="1255:13" pos:end="1255:79"><expr pos:start="1255:13" pos:end="1255:78"><name pos:start="1255:13" pos:end="1255:16">insn</name> <operator pos:start="1255:18" pos:end="1255:18">=</operator> <operator pos:start="1255:20" pos:end="1255:20">(</operator><name pos:start="1255:21" pos:end="1255:24">insn</name> <operator pos:start="1255:26" pos:end="1255:26">&amp;</operator> <literal type="number" pos:start="1255:28" pos:end="1255:37">0xe2ffffff</literal><operator pos:start="1255:38" pos:end="1255:38">)</operator> <operator pos:start="1255:40" pos:end="1255:40">|</operator> <operator pos:start="1255:42" pos:end="1255:42">(</operator><operator pos:start="1255:43" pos:end="1255:43">(</operator><name pos:start="1255:44" pos:end="1255:47">insn</name> <operator pos:start="1255:49" pos:end="1255:49">&amp;</operator> <operator pos:start="1255:51" pos:end="1255:51">(</operator><literal type="number" pos:start="1255:52" pos:end="1255:52">1</literal> <operator pos:start="1255:54" pos:end="1255:55">&lt;&lt;</operator> <literal type="number" pos:start="1255:57" pos:end="1255:58">28</literal><operator pos:start="1255:59" pos:end="1255:59">)</operator><operator pos:start="1255:60" pos:end="1255:60">)</operator> <operator pos:start="1255:62" pos:end="1255:63">&gt;&gt;</operator> <literal type="number" pos:start="1255:65" pos:end="1255:65">4</literal><operator pos:start="1255:66" pos:end="1255:66">)</operator> <operator pos:start="1255:68" pos:end="1255:68">|</operator> <operator pos:start="1255:70" pos:end="1255:70">(</operator><literal type="number" pos:start="1255:71" pos:end="1255:71">1</literal> <operator pos:start="1255:73" pos:end="1255:74">&lt;&lt;</operator> <literal type="number" pos:start="1255:76" pos:end="1255:77">28</literal><operator pos:start="1255:78" pos:end="1255:78">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="1257:13" pos:end="1259:32"><if pos:start="1257:13" pos:end="1259:32">if <condition pos:start="1257:16" pos:end="1257:51">(<expr pos:start="1257:17" pos:end="1257:50"><call pos:start="1257:17" pos:end="1257:50"><name pos:start="1257:17" pos:end="1257:36">disas_neon_data_insn</name><argument_list pos:start="1257:37" pos:end="1257:50">(<argument pos:start="1257:38" pos:end="1257:40"><expr pos:start="1257:38" pos:end="1257:40"><name pos:start="1257:38" pos:end="1257:40">env</name></expr></argument>, <argument pos:start="1257:43" pos:end="1257:43"><expr pos:start="1257:43" pos:end="1257:43"><name pos:start="1257:43" pos:end="1257:43">s</name></expr></argument>, <argument pos:start="1257:46" pos:end="1257:49"><expr pos:start="1257:46" pos:end="1257:49"><name pos:start="1257:46" pos:end="1257:49">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1259:17" pos:end="1259:32"><block_content pos:start="1259:17" pos:end="1259:32">

                <goto pos:start="1259:17" pos:end="1259:32">goto <name pos:start="1259:22" pos:end="1259:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="1261:11" pos:end="1271:9">else <block pos:start="1261:16" pos:end="1271:9">{<block_content pos:start="1263:13" pos:end="1269:32">

            <if_stmt pos:start="1263:13" pos:end="1265:32"><if pos:start="1263:13" pos:end="1265:32">if <condition pos:start="1263:16" pos:end="1263:33">(<expr pos:start="1263:17" pos:end="1263:32"><name pos:start="1263:17" pos:end="1263:20">insn</name> <operator pos:start="1263:22" pos:end="1263:22">&amp;</operator> <operator pos:start="1263:24" pos:end="1263:24">(</operator><literal type="number" pos:start="1263:25" pos:end="1263:25">1</literal> <operator pos:start="1263:27" pos:end="1263:28">&lt;&lt;</operator> <literal type="number" pos:start="1263:30" pos:end="1263:31">28</literal><operator pos:start="1263:32" pos:end="1263:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1265:17" pos:end="1265:32"><block_content pos:start="1265:17" pos:end="1265:32">

                <goto pos:start="1265:17" pos:end="1265:32">goto <name pos:start="1265:22" pos:end="1265:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="1267:13" pos:end="1269:32"><if pos:start="1267:13" pos:end="1269:32">if <condition pos:start="1267:16" pos:end="1267:49">(<expr pos:start="1267:17" pos:end="1267:48"><call pos:start="1267:17" pos:end="1267:48"><name pos:start="1267:17" pos:end="1267:33">disas_coproc_insn</name> <argument_list pos:start="1267:35" pos:end="1267:48">(<argument pos:start="1267:36" pos:end="1267:38"><expr pos:start="1267:36" pos:end="1267:38"><name pos:start="1267:36" pos:end="1267:38">env</name></expr></argument>, <argument pos:start="1267:41" pos:end="1267:41"><expr pos:start="1267:41" pos:end="1267:41"><name pos:start="1267:41" pos:end="1267:41">s</name></expr></argument>, <argument pos:start="1267:44" pos:end="1267:47"><expr pos:start="1267:44" pos:end="1267:47"><name pos:start="1267:44" pos:end="1267:47">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1269:17" pos:end="1269:32"><block_content pos:start="1269:17" pos:end="1269:32">

                <goto pos:start="1269:17" pos:end="1269:32">goto <name pos:start="1269:22" pos:end="1269:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1273:9" pos:end="1273:14">break;</break>

    <case pos:start="1275:5" pos:end="1275:11">case <expr pos:start="1275:10" pos:end="1275:10"><literal type="number" pos:start="1275:10" pos:end="1275:10">8</literal></expr>:</case> <case pos:start="1275:13" pos:end="1275:19">case <expr pos:start="1275:18" pos:end="1275:18"><literal type="number" pos:start="1275:18" pos:end="1275:18">9</literal></expr>:</case> <case pos:start="1275:21" pos:end="1275:28">case <expr pos:start="1275:26" pos:end="1275:27"><literal type="number" pos:start="1275:26" pos:end="1275:27">10</literal></expr>:</case> <case pos:start="1275:30" pos:end="1275:37">case <expr pos:start="1275:35" pos:end="1275:36"><literal type="number" pos:start="1275:35" pos:end="1275:36">11</literal></expr>:</case>

        <if_stmt pos:start="1277:9" pos:end="1905:9"><if pos:start="1277:9" pos:end="1601:9">if <condition pos:start="1277:12" pos:end="1277:29">(<expr pos:start="1277:13" pos:end="1277:28"><name pos:start="1277:13" pos:end="1277:16">insn</name> <operator pos:start="1277:18" pos:end="1277:18">&amp;</operator> <operator pos:start="1277:20" pos:end="1277:20">(</operator><literal type="number" pos:start="1277:21" pos:end="1277:21">1</literal> <operator pos:start="1277:23" pos:end="1277:24">&lt;&lt;</operator> <literal type="number" pos:start="1277:26" pos:end="1277:27">15</literal><operator pos:start="1277:28" pos:end="1277:28">)</operator></expr>)</condition> <block pos:start="1277:31" pos:end="1601:9">{<block_content pos:start="1281:13" pos:end="1599:13">

            <comment type="block" pos:start="1279:13" pos:end="1279:42">/* Branches, misc control.  */</comment>

            <if_stmt pos:start="1281:13" pos:end="1599:13"><if pos:start="1281:13" pos:end="1335:13">if <condition pos:start="1281:16" pos:end="1281:30">(<expr pos:start="1281:17" pos:end="1281:29"><name pos:start="1281:17" pos:end="1281:20">insn</name> <operator pos:start="1281:22" pos:end="1281:22">&amp;</operator> <literal type="number" pos:start="1281:24" pos:end="1281:29">0x5000</literal></expr>)</condition> <block pos:start="1281:32" pos:end="1335:13">{<block_content pos:start="1287:17" pos:end="1333:17">

                <comment type="block" pos:start="1283:17" pos:end="1283:44">/* Unconditional branch.  */</comment>

                <comment type="block" pos:start="1285:17" pos:end="1285:60">/* signextend(hw1[10:0]) -&gt; offset[:12].  */</comment>

                <expr_stmt pos:start="1287:17" pos:end="1287:69"><expr pos:start="1287:17" pos:end="1287:68"><name pos:start="1287:17" pos:end="1287:22">offset</name> <operator pos:start="1287:24" pos:end="1287:24">=</operator> <operator pos:start="1287:26" pos:end="1287:26">(</operator><operator pos:start="1287:27" pos:end="1287:27">(</operator><name pos:start="1287:28" pos:end="1287:34">int32_t</name><operator pos:start="1287:35" pos:end="1287:35">)</operator><name pos:start="1287:36" pos:end="1287:39">insn</name> <operator pos:start="1287:41" pos:end="1287:42">&lt;&lt;</operator> <literal type="number" pos:start="1287:44" pos:end="1287:44">5</literal><operator pos:start="1287:45" pos:end="1287:45">)</operator> <operator pos:start="1287:47" pos:end="1287:48">&gt;&gt;</operator> <literal type="number" pos:start="1287:50" pos:end="1287:50">9</literal> <operator pos:start="1287:52" pos:end="1287:52">&amp;</operator> <operator pos:start="1287:54" pos:end="1287:54">~</operator><operator pos:start="1287:55" pos:end="1287:55">(</operator><name pos:start="1287:56" pos:end="1287:62">int32_t</name><operator pos:start="1287:63" pos:end="1287:63">)</operator><literal type="number" pos:start="1287:64" pos:end="1287:68">0xfff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1289:17" pos:end="1289:49">/* hw1[10:0] -&gt; offset[11:1].  */</comment>

                <expr_stmt pos:start="1291:17" pos:end="1291:46"><expr pos:start="1291:17" pos:end="1291:45"><name pos:start="1291:17" pos:end="1291:22">offset</name> <operator pos:start="1291:24" pos:end="1291:25">|=</operator> <operator pos:start="1291:27" pos:end="1291:27">(</operator><name pos:start="1291:28" pos:end="1291:31">insn</name> <operator pos:start="1291:33" pos:end="1291:33">&amp;</operator> <literal type="number" pos:start="1291:35" pos:end="1291:39">0x7ff</literal><operator pos:start="1291:40" pos:end="1291:40">)</operator> <operator pos:start="1291:42" pos:end="1291:43">&lt;&lt;</operator> <literal type="number" pos:start="1291:45" pos:end="1291:45">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1293:17" pos:end="1297:44">/* (~hw2[13, 11] ^ offset[24]) -&gt; offset[23,22]

                   offset[24:22] already have the same value because of the

                   sign extension above.  */</comment>

                <expr_stmt pos:start="1299:17" pos:end="1299:54"><expr pos:start="1299:17" pos:end="1299:53"><name pos:start="1299:17" pos:end="1299:22">offset</name> <operator pos:start="1299:24" pos:end="1299:25">^=</operator> <operator pos:start="1299:27" pos:end="1299:27">(</operator><operator pos:start="1299:28" pos:end="1299:28">(</operator><operator pos:start="1299:29" pos:end="1299:29">~</operator><name pos:start="1299:30" pos:end="1299:33">insn</name><operator pos:start="1299:34" pos:end="1299:34">)</operator> <operator pos:start="1299:36" pos:end="1299:36">&amp;</operator> <operator pos:start="1299:38" pos:end="1299:38">(</operator><literal type="number" pos:start="1299:39" pos:end="1299:39">1</literal> <operator pos:start="1299:41" pos:end="1299:42">&lt;&lt;</operator> <literal type="number" pos:start="1299:44" pos:end="1299:45">13</literal><operator pos:start="1299:46" pos:end="1299:46">)</operator><operator pos:start="1299:47" pos:end="1299:47">)</operator> <operator pos:start="1299:49" pos:end="1299:50">&lt;&lt;</operator> <literal type="number" pos:start="1299:52" pos:end="1299:53">10</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1301:17" pos:end="1301:54"><expr pos:start="1301:17" pos:end="1301:53"><name pos:start="1301:17" pos:end="1301:22">offset</name> <operator pos:start="1301:24" pos:end="1301:25">^=</operator> <operator pos:start="1301:27" pos:end="1301:27">(</operator><operator pos:start="1301:28" pos:end="1301:28">(</operator><operator pos:start="1301:29" pos:end="1301:29">~</operator><name pos:start="1301:30" pos:end="1301:33">insn</name><operator pos:start="1301:34" pos:end="1301:34">)</operator> <operator pos:start="1301:36" pos:end="1301:36">&amp;</operator> <operator pos:start="1301:38" pos:end="1301:38">(</operator><literal type="number" pos:start="1301:39" pos:end="1301:39">1</literal> <operator pos:start="1301:41" pos:end="1301:42">&lt;&lt;</operator> <literal type="number" pos:start="1301:44" pos:end="1301:45">11</literal><operator pos:start="1301:46" pos:end="1301:46">)</operator><operator pos:start="1301:47" pos:end="1301:47">)</operator> <operator pos:start="1301:49" pos:end="1301:50">&lt;&lt;</operator> <literal type="number" pos:start="1301:52" pos:end="1301:53">11</literal></expr>;</expr_stmt>



                <if_stmt pos:start="1305:17" pos:end="1311:17"><if pos:start="1305:17" pos:end="1311:17">if <condition pos:start="1305:20" pos:end="1305:37">(<expr pos:start="1305:21" pos:end="1305:36"><name pos:start="1305:21" pos:end="1305:24">insn</name> <operator pos:start="1305:26" pos:end="1305:26">&amp;</operator> <operator pos:start="1305:28" pos:end="1305:28">(</operator><literal type="number" pos:start="1305:29" pos:end="1305:29">1</literal> <operator pos:start="1305:31" pos:end="1305:32">&lt;&lt;</operator> <literal type="number" pos:start="1305:34" pos:end="1305:35">14</literal><operator pos:start="1305:36" pos:end="1305:36">)</operator></expr>)</condition> <block pos:start="1305:39" pos:end="1311:17">{<block_content pos:start="1309:21" pos:end="1309:59">

                    <comment type="block" pos:start="1307:21" pos:end="1307:43">/* Branch and link.  */</comment>

                    <expr_stmt pos:start="1309:21" pos:end="1309:59"><expr pos:start="1309:21" pos:end="1309:58"><call pos:start="1309:21" pos:end="1309:58"><name pos:start="1309:21" pos:end="1309:36">tcg_gen_movi_i32</name><argument_list pos:start="1309:37" pos:end="1309:58">(<argument pos:start="1309:38" pos:end="1309:46"><expr pos:start="1309:38" pos:end="1309:46"><name pos:start="1309:38" pos:end="1309:46"><name pos:start="1309:38" pos:end="1309:42">cpu_R</name><index pos:start="1309:43" pos:end="1309:46">[<expr pos:start="1309:44" pos:end="1309:45"><literal type="number" pos:start="1309:44" pos:end="1309:45">14</literal></expr>]</index></name></expr></argument>, <argument pos:start="1309:49" pos:end="1309:57"><expr pos:start="1309:49" pos:end="1309:57"><name pos:start="1309:49" pos:end="1309:53"><name pos:start="1309:49" pos:end="1309:49">s</name><operator pos:start="1309:50" pos:end="1309:51">-&gt;</operator><name pos:start="1309:52" pos:end="1309:53">pc</name></name> <operator pos:start="1309:55" pos:end="1309:55">|</operator> <literal type="number" pos:start="1309:57" pos:end="1309:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="1315:17" pos:end="1315:32"><expr pos:start="1315:17" pos:end="1315:31"><name pos:start="1315:17" pos:end="1315:22">offset</name> <operator pos:start="1315:24" pos:end="1315:25">+=</operator> <name pos:start="1315:27" pos:end="1315:31"><name pos:start="1315:27" pos:end="1315:27">s</name><operator pos:start="1315:28" pos:end="1315:29">-&gt;</operator><name pos:start="1315:30" pos:end="1315:31">pc</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="1317:17" pos:end="1333:17"><if pos:start="1317:17" pos:end="1323:17">if <condition pos:start="1317:20" pos:end="1317:37">(<expr pos:start="1317:21" pos:end="1317:36"><name pos:start="1317:21" pos:end="1317:24">insn</name> <operator pos:start="1317:26" pos:end="1317:26">&amp;</operator> <operator pos:start="1317:28" pos:end="1317:28">(</operator><literal type="number" pos:start="1317:29" pos:end="1317:29">1</literal> <operator pos:start="1317:31" pos:end="1317:32">&lt;&lt;</operator> <literal type="number" pos:start="1317:34" pos:end="1317:35">12</literal><operator pos:start="1317:36" pos:end="1317:36">)</operator></expr>)</condition> <block pos:start="1317:39" pos:end="1323:17">{<block_content pos:start="1321:21" pos:end="1321:39">

                    <comment type="block" pos:start="1319:21" pos:end="1319:30">/* b/bl */</comment>

                    <expr_stmt pos:start="1321:21" pos:end="1321:39"><expr pos:start="1321:21" pos:end="1321:38"><call pos:start="1321:21" pos:end="1321:38"><name pos:start="1321:21" pos:end="1321:27">gen_jmp</name><argument_list pos:start="1321:28" pos:end="1321:38">(<argument pos:start="1321:29" pos:end="1321:29"><expr pos:start="1321:29" pos:end="1321:29"><name pos:start="1321:29" pos:end="1321:29">s</name></expr></argument>, <argument pos:start="1321:32" pos:end="1321:37"><expr pos:start="1321:32" pos:end="1321:37"><name pos:start="1321:32" pos:end="1321:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1323:19" pos:end="1333:17">else <block pos:start="1323:24" pos:end="1333:17">{<block_content pos:start="1327:21" pos:end="1331:41">

                    <comment type="block" pos:start="1325:21" pos:end="1325:29">/* blx */</comment>

                    <expr_stmt pos:start="1327:21" pos:end="1327:43"><expr pos:start="1327:21" pos:end="1327:42"><name pos:start="1327:21" pos:end="1327:26">offset</name> <operator pos:start="1327:28" pos:end="1327:29">&amp;=</operator> <operator pos:start="1327:31" pos:end="1327:31">~</operator><operator pos:start="1327:32" pos:end="1327:32">(</operator><name pos:start="1327:33" pos:end="1327:40">uint32_t</name><operator pos:start="1327:41" pos:end="1327:41">)</operator><literal type="number" pos:start="1327:42" pos:end="1327:42">2</literal></expr>;</expr_stmt>

                    <comment type="block" pos:start="1329:21" pos:end="1329:53">/* thumb2 bx, no need to check */</comment>

                    <expr_stmt pos:start="1331:21" pos:end="1331:41"><expr pos:start="1331:21" pos:end="1331:40"><call pos:start="1331:21" pos:end="1331:40"><name pos:start="1331:21" pos:end="1331:29">gen_bx_im</name><argument_list pos:start="1331:30" pos:end="1331:40">(<argument pos:start="1331:31" pos:end="1331:31"><expr pos:start="1331:31" pos:end="1331:31"><name pos:start="1331:31" pos:end="1331:31">s</name></expr></argument>, <argument pos:start="1331:34" pos:end="1331:39"><expr pos:start="1331:34" pos:end="1331:39"><name pos:start="1331:34" pos:end="1331:39">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1335:15" pos:end="1557:13">else if <condition pos:start="1335:23" pos:end="1335:47">(<expr pos:start="1335:24" pos:end="1335:46"><operator pos:start="1335:24" pos:end="1335:24">(</operator><operator pos:start="1335:25" pos:end="1335:25">(</operator><name pos:start="1335:26" pos:end="1335:29">insn</name> <operator pos:start="1335:31" pos:end="1335:32">&gt;&gt;</operator> <literal type="number" pos:start="1335:34" pos:end="1335:35">23</literal><operator pos:start="1335:36" pos:end="1335:36">)</operator> <operator pos:start="1335:38" pos:end="1335:38">&amp;</operator> <literal type="number" pos:start="1335:40" pos:end="1335:40">7</literal><operator pos:start="1335:41" pos:end="1335:41">)</operator> <operator pos:start="1335:43" pos:end="1335:44">==</operator> <literal type="number" pos:start="1335:46" pos:end="1335:46">7</literal></expr>)</condition> <block pos:start="1335:49" pos:end="1557:13">{<block_content pos:start="1339:17" pos:end="1555:17">

                <comment type="block" pos:start="1337:17" pos:end="1337:34">/* Misc control */</comment>

                <if_stmt pos:start="1339:17" pos:end="1341:36"><if pos:start="1339:17" pos:end="1341:36">if <condition pos:start="1339:20" pos:end="1339:37">(<expr pos:start="1339:21" pos:end="1339:36"><name pos:start="1339:21" pos:end="1339:24">insn</name> <operator pos:start="1339:26" pos:end="1339:26">&amp;</operator> <operator pos:start="1339:28" pos:end="1339:28">(</operator><literal type="number" pos:start="1339:29" pos:end="1339:29">1</literal> <operator pos:start="1339:31" pos:end="1339:32">&lt;&lt;</operator> <literal type="number" pos:start="1339:34" pos:end="1339:35">13</literal><operator pos:start="1339:36" pos:end="1339:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1341:21" pos:end="1341:36"><block_content pos:start="1341:21" pos:end="1341:36">

                    <goto pos:start="1341:21" pos:end="1341:36">goto <name pos:start="1341:26" pos:end="1341:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>



                <if_stmt pos:start="1345:17" pos:end="1555:17"><if pos:start="1345:17" pos:end="1353:17">if <condition pos:start="1345:20" pos:end="1345:37">(<expr pos:start="1345:21" pos:end="1345:36"><name pos:start="1345:21" pos:end="1345:24">insn</name> <operator pos:start="1345:26" pos:end="1345:26">&amp;</operator> <operator pos:start="1345:28" pos:end="1345:28">(</operator><literal type="number" pos:start="1345:29" pos:end="1345:29">1</literal> <operator pos:start="1345:31" pos:end="1345:32">&lt;&lt;</operator> <literal type="number" pos:start="1345:34" pos:end="1345:35">26</literal><operator pos:start="1345:36" pos:end="1345:36">)</operator></expr>)</condition> <block pos:start="1345:39" pos:end="1353:17">{<block_content pos:start="1351:21" pos:end="1351:36">

                    <comment type="block" pos:start="1347:21" pos:end="1347:51">/* Secure monitor call (v6Z) */</comment>



                    <goto pos:start="1351:21" pos:end="1351:36">goto <name pos:start="1351:26" pos:end="1351:35">illegal_op</name>;</goto> <comment type="block" pos:start="1351:38" pos:end="1351:60">/* not implemented.  */</comment>

                </block_content>}</block></if> <else pos:start="1353:19" pos:end="1555:17">else <block pos:start="1353:24" pos:end="1555:17">{<block_content pos:start="1355:21" pos:end="1553:21">

                    <expr_stmt pos:start="1355:21" pos:end="1355:42"><expr pos:start="1355:21" pos:end="1355:41"><name pos:start="1355:21" pos:end="1355:22">op</name> <operator pos:start="1355:24" pos:end="1355:24">=</operator> <operator pos:start="1355:26" pos:end="1355:26">(</operator><name pos:start="1355:27" pos:end="1355:30">insn</name> <operator pos:start="1355:32" pos:end="1355:33">&gt;&gt;</operator> <literal type="number" pos:start="1355:35" pos:end="1355:36">20</literal><operator pos:start="1355:37" pos:end="1355:37">)</operator> <operator pos:start="1355:39" pos:end="1355:39">&amp;</operator> <literal type="number" pos:start="1355:41" pos:end="1355:41">7</literal></expr>;</expr_stmt>

                    <switch pos:start="1357:21" pos:end="1553:21">switch <condition pos:start="1357:28" pos:end="1357:31">(<expr pos:start="1357:29" pos:end="1357:30"><name pos:start="1357:29" pos:end="1357:30">op</name></expr>)</condition> <block pos:start="1357:33" pos:end="1553:21">{<block_content pos:start="1359:21" pos:end="1551:30">

                    <case pos:start="1359:21" pos:end="1359:27">case <expr pos:start="1359:26" pos:end="1359:26"><literal type="number" pos:start="1359:26" pos:end="1359:26">0</literal></expr>:</case> <comment type="block" pos:start="1359:29" pos:end="1359:44">/* msr cpsr.  */</comment>

                        <if_stmt pos:start="1361:25" pos:end="1377:25"><if pos:start="1361:25" pos:end="1377:25">if <condition pos:start="1361:28" pos:end="1361:38">(<expr pos:start="1361:29" pos:end="1361:37"><call pos:start="1361:29" pos:end="1361:37"><name pos:start="1361:29" pos:end="1361:32">IS_M</name><argument_list pos:start="1361:33" pos:end="1361:37">(<argument pos:start="1361:34" pos:end="1361:36"><expr pos:start="1361:34" pos:end="1361:36"><name pos:start="1361:34" pos:end="1361:36">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1361:40" pos:end="1377:25">{<block_content pos:start="1363:29" pos:end="1375:34">

                            <expr_stmt pos:start="1363:29" pos:end="1363:50"><expr pos:start="1363:29" pos:end="1363:49"><name pos:start="1363:29" pos:end="1363:31">tmp</name> <operator pos:start="1363:33" pos:end="1363:33">=</operator> <call pos:start="1363:35" pos:end="1363:49"><name pos:start="1363:35" pos:end="1363:42">load_reg</name><argument_list pos:start="1363:43" pos:end="1363:49">(<argument pos:start="1363:44" pos:end="1363:44"><expr pos:start="1363:44" pos:end="1363:44"><name pos:start="1363:44" pos:end="1363:44">s</name></expr></argument>, <argument pos:start="1363:47" pos:end="1363:48"><expr pos:start="1363:47" pos:end="1363:48"><name pos:start="1363:47" pos:end="1363:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1365:29" pos:end="1365:62"><expr pos:start="1365:29" pos:end="1365:61"><name pos:start="1365:29" pos:end="1365:32">addr</name> <operator pos:start="1365:34" pos:end="1365:34">=</operator> <call pos:start="1365:36" pos:end="1365:61"><name pos:start="1365:36" pos:end="1365:48">tcg_const_i32</name><argument_list pos:start="1365:49" pos:end="1365:61">(<argument pos:start="1365:50" pos:end="1365:60"><expr pos:start="1365:50" pos:end="1365:60"><name pos:start="1365:50" pos:end="1365:53">insn</name> <operator pos:start="1365:55" pos:end="1365:55">&amp;</operator> <literal type="number" pos:start="1365:57" pos:end="1365:60">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1367:29" pos:end="1367:67"><expr pos:start="1367:29" pos:end="1367:66"><call pos:start="1367:29" pos:end="1367:66"><name pos:start="1367:29" pos:end="1367:46">gen_helper_v7m_msr</name><argument_list pos:start="1367:47" pos:end="1367:66">(<argument pos:start="1367:48" pos:end="1367:54"><expr pos:start="1367:48" pos:end="1367:54"><name pos:start="1367:48" pos:end="1367:54">cpu_env</name></expr></argument>, <argument pos:start="1367:57" pos:end="1367:60"><expr pos:start="1367:57" pos:end="1367:60"><name pos:start="1367:57" pos:end="1367:60">addr</name></expr></argument>, <argument pos:start="1367:63" pos:end="1367:65"><expr pos:start="1367:63" pos:end="1367:65"><name pos:start="1367:63" pos:end="1367:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1369:29" pos:end="1369:52"><expr pos:start="1369:29" pos:end="1369:51"><call pos:start="1369:29" pos:end="1369:51"><name pos:start="1369:29" pos:end="1369:45">tcg_temp_free_i32</name><argument_list pos:start="1369:46" pos:end="1369:51">(<argument pos:start="1369:47" pos:end="1369:50"><expr pos:start="1369:47" pos:end="1369:50"><name pos:start="1369:47" pos:end="1369:50">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1371:29" pos:end="1371:51"><expr pos:start="1371:29" pos:end="1371:50"><call pos:start="1371:29" pos:end="1371:50"><name pos:start="1371:29" pos:end="1371:45">tcg_temp_free_i32</name><argument_list pos:start="1371:46" pos:end="1371:50">(<argument pos:start="1371:47" pos:end="1371:49"><expr pos:start="1371:47" pos:end="1371:49"><name pos:start="1371:47" pos:end="1371:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1373:29" pos:end="1373:45"><expr pos:start="1373:29" pos:end="1373:44"><call pos:start="1373:29" pos:end="1373:44"><name pos:start="1373:29" pos:end="1373:41">gen_lookup_tb</name><argument_list pos:start="1373:42" pos:end="1373:44">(<argument pos:start="1373:43" pos:end="1373:43"><expr pos:start="1373:43" pos:end="1373:43"><name pos:start="1373:43" pos:end="1373:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="1375:29" pos:end="1375:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                        <comment type="block" pos:start="1379:25" pos:end="1379:42">/* fall through */</comment>

                    <case pos:start="1381:21" pos:end="1381:27">case <expr pos:start="1381:26" pos:end="1381:26"><literal type="number" pos:start="1381:26" pos:end="1381:26">1</literal></expr>:</case> <comment type="block" pos:start="1381:29" pos:end="1381:44">/* msr spsr.  */</comment>

                        <if_stmt pos:start="1383:25" pos:end="1385:44"><if pos:start="1383:25" pos:end="1385:44">if <condition pos:start="1383:28" pos:end="1383:38">(<expr pos:start="1383:29" pos:end="1383:37"><call pos:start="1383:29" pos:end="1383:37"><name pos:start="1383:29" pos:end="1383:32">IS_M</name><argument_list pos:start="1383:33" pos:end="1383:37">(<argument pos:start="1383:34" pos:end="1383:36"><expr pos:start="1383:34" pos:end="1383:36"><name pos:start="1383:34" pos:end="1383:36">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1385:29" pos:end="1385:44"><block_content pos:start="1385:29" pos:end="1385:44">

                            <goto pos:start="1385:29" pos:end="1385:44">goto <name pos:start="1385:34" pos:end="1385:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1387:25" pos:end="1387:46"><expr pos:start="1387:25" pos:end="1387:45"><name pos:start="1387:25" pos:end="1387:27">tmp</name> <operator pos:start="1387:29" pos:end="1387:29">=</operator> <call pos:start="1387:31" pos:end="1387:45"><name pos:start="1387:31" pos:end="1387:38">load_reg</name><argument_list pos:start="1387:39" pos:end="1387:45">(<argument pos:start="1387:40" pos:end="1387:40"><expr pos:start="1387:40" pos:end="1387:40"><name pos:start="1387:40" pos:end="1387:40">s</name></expr></argument>, <argument pos:start="1387:43" pos:end="1387:44"><expr pos:start="1387:43" pos:end="1387:44"><name pos:start="1387:43" pos:end="1387:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1389:25" pos:end="1395:44"><if pos:start="1389:25" pos:end="1395:44">if <condition pos:start="1389:28" pos:end="1393:44">(<expr pos:start="1389:29" pos:end="1393:43"><call pos:start="1389:29" pos:end="1393:43"><name pos:start="1389:29" pos:end="1389:39">gen_set_psr</name><argument_list pos:start="1389:40" pos:end="1393:43">(<argument pos:start="1389:41" pos:end="1389:41"><expr pos:start="1389:41" pos:end="1389:41"><name pos:start="1389:41" pos:end="1389:41">s</name></expr></argument>,

                              <argument pos:start="1391:31" pos:end="1391:74"><expr pos:start="1391:31" pos:end="1391:74"><call pos:start="1391:31" pos:end="1391:74"><name pos:start="1391:31" pos:end="1391:38">msr_mask</name><argument_list pos:start="1391:39" pos:end="1391:74">(<argument pos:start="1391:40" pos:end="1391:42"><expr pos:start="1391:40" pos:end="1391:42"><name pos:start="1391:40" pos:end="1391:42">env</name></expr></argument>, <argument pos:start="1391:45" pos:end="1391:45"><expr pos:start="1391:45" pos:end="1391:45"><name pos:start="1391:45" pos:end="1391:45">s</name></expr></argument>, <argument pos:start="1391:48" pos:end="1391:64"><expr pos:start="1391:48" pos:end="1391:64"><operator pos:start="1391:48" pos:end="1391:48">(</operator><name pos:start="1391:49" pos:end="1391:52">insn</name> <operator pos:start="1391:54" pos:end="1391:55">&gt;&gt;</operator> <literal type="number" pos:start="1391:57" pos:end="1391:57">8</literal><operator pos:start="1391:58" pos:end="1391:58">)</operator> <operator pos:start="1391:60" pos:end="1391:60">&amp;</operator> <literal type="number" pos:start="1391:62" pos:end="1391:64">0xf</literal></expr></argument>, <argument pos:start="1391:67" pos:end="1391:73"><expr pos:start="1391:67" pos:end="1391:73"><name pos:start="1391:67" pos:end="1391:68">op</name> <operator pos:start="1391:70" pos:end="1391:71">==</operator> <literal type="number" pos:start="1391:73" pos:end="1391:73">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="1393:31" pos:end="1393:37"><expr pos:start="1393:31" pos:end="1393:37"><name pos:start="1393:31" pos:end="1393:32">op</name> <operator pos:start="1393:34" pos:end="1393:35">==</operator> <literal type="number" pos:start="1393:37" pos:end="1393:37">1</literal></expr></argument>, <argument pos:start="1393:40" pos:end="1393:42"><expr pos:start="1393:40" pos:end="1393:42"><name pos:start="1393:40" pos:end="1393:42">tmp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1395:29" pos:end="1395:44"><block_content pos:start="1395:29" pos:end="1395:44">

                            <goto pos:start="1395:29" pos:end="1395:44">goto <name pos:start="1395:34" pos:end="1395:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <break pos:start="1397:25" pos:end="1397:30">break;</break>

                    <case pos:start="1399:21" pos:end="1399:27">case <expr pos:start="1399:26" pos:end="1399:26"><literal type="number" pos:start="1399:26" pos:end="1399:26">2</literal></expr>:</case> <comment type="block" pos:start="1399:29" pos:end="1399:49">/* cps, nop-hint.  */</comment>

                        <if_stmt pos:start="1401:25" pos:end="1405:25"><if pos:start="1401:25" pos:end="1405:25">if <condition pos:start="1401:28" pos:end="1401:51">(<expr pos:start="1401:29" pos:end="1401:50"><operator pos:start="1401:29" pos:end="1401:29">(</operator><operator pos:start="1401:30" pos:end="1401:30">(</operator><name pos:start="1401:31" pos:end="1401:34">insn</name> <operator pos:start="1401:36" pos:end="1401:37">&gt;&gt;</operator> <literal type="number" pos:start="1401:39" pos:end="1401:39">8</literal><operator pos:start="1401:40" pos:end="1401:40">)</operator> <operator pos:start="1401:42" pos:end="1401:42">&amp;</operator> <literal type="number" pos:start="1401:44" pos:end="1401:44">7</literal><operator pos:start="1401:45" pos:end="1401:45">)</operator> <operator pos:start="1401:47" pos:end="1401:48">==</operator> <literal type="number" pos:start="1401:50" pos:end="1401:50">0</literal></expr>)</condition> <block pos:start="1401:53" pos:end="1405:25">{<block_content pos:start="1403:29" pos:end="1403:57">

                            <expr_stmt pos:start="1403:29" pos:end="1403:57"><expr pos:start="1403:29" pos:end="1403:56"><call pos:start="1403:29" pos:end="1403:56"><name pos:start="1403:29" pos:end="1403:40">gen_nop_hint</name><argument_list pos:start="1403:41" pos:end="1403:56">(<argument pos:start="1403:42" pos:end="1403:42"><expr pos:start="1403:42" pos:end="1403:42"><name pos:start="1403:42" pos:end="1403:42">s</name></expr></argument>, <argument pos:start="1403:45" pos:end="1403:55"><expr pos:start="1403:45" pos:end="1403:55"><name pos:start="1403:45" pos:end="1403:48">insn</name> <operator pos:start="1403:50" pos:end="1403:50">&amp;</operator> <literal type="number" pos:start="1403:52" pos:end="1403:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <comment type="block" pos:start="1407:25" pos:end="1407:63">/* Implemented as NOP in user mode.  */</comment>

                        <if_stmt pos:start="1409:25" pos:end="1411:34"><if pos:start="1409:25" pos:end="1411:34">if <condition pos:start="1409:28" pos:end="1409:39">(<expr pos:start="1409:29" pos:end="1409:38"><call pos:start="1409:29" pos:end="1409:38"><name pos:start="1409:29" pos:end="1409:35">IS_USER</name><argument_list pos:start="1409:36" pos:end="1409:38">(<argument pos:start="1409:37" pos:end="1409:37"><expr pos:start="1409:37" pos:end="1409:37"><name pos:start="1409:37" pos:end="1409:37">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1411:29" pos:end="1411:34"><block_content pos:start="1411:29" pos:end="1411:34">

                            <break pos:start="1411:29" pos:end="1411:34">break;</break></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1413:25" pos:end="1413:35"><expr pos:start="1413:25" pos:end="1413:34"><name pos:start="1413:25" pos:end="1413:30">offset</name> <operator pos:start="1413:32" pos:end="1413:32">=</operator> <literal type="number" pos:start="1413:34" pos:end="1413:34">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1415:25" pos:end="1415:32"><expr pos:start="1415:25" pos:end="1415:31"><name pos:start="1415:25" pos:end="1415:27">imm</name> <operator pos:start="1415:29" pos:end="1415:29">=</operator> <literal type="number" pos:start="1415:31" pos:end="1415:31">0</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1417:25" pos:end="1435:25"><if pos:start="1417:25" pos:end="1435:25">if <condition pos:start="1417:28" pos:end="1417:45">(<expr pos:start="1417:29" pos:end="1417:44"><name pos:start="1417:29" pos:end="1417:32">insn</name> <operator pos:start="1417:34" pos:end="1417:34">&amp;</operator> <operator pos:start="1417:36" pos:end="1417:36">(</operator><literal type="number" pos:start="1417:37" pos:end="1417:37">1</literal> <operator pos:start="1417:39" pos:end="1417:40">&lt;&lt;</operator> <literal type="number" pos:start="1417:42" pos:end="1417:43">10</literal><operator pos:start="1417:44" pos:end="1417:44">)</operator></expr>)</condition> <block pos:start="1417:47" pos:end="1435:25">{<block_content pos:start="1419:29" pos:end="1433:63">

                            <if_stmt pos:start="1419:29" pos:end="1421:49"><if pos:start="1419:29" pos:end="1421:49">if <condition pos:start="1419:32" pos:end="1419:48">(<expr pos:start="1419:33" pos:end="1419:47"><name pos:start="1419:33" pos:end="1419:36">insn</name> <operator pos:start="1419:38" pos:end="1419:38">&amp;</operator> <operator pos:start="1419:40" pos:end="1419:40">(</operator><literal type="number" pos:start="1419:41" pos:end="1419:41">1</literal> <operator pos:start="1419:43" pos:end="1419:44">&lt;&lt;</operator> <literal type="number" pos:start="1419:46" pos:end="1419:46">7</literal><operator pos:start="1419:47" pos:end="1419:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1421:33" pos:end="1421:49"><block_content pos:start="1421:33" pos:end="1421:49">

                                <expr_stmt pos:start="1421:33" pos:end="1421:49"><expr pos:start="1421:33" pos:end="1421:48"><name pos:start="1421:33" pos:end="1421:38">offset</name> <operator pos:start="1421:40" pos:end="1421:41">|=</operator> <name pos:start="1421:43" pos:end="1421:48">CPSR_A</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <if_stmt pos:start="1423:29" pos:end="1425:49"><if pos:start="1423:29" pos:end="1425:49">if <condition pos:start="1423:32" pos:end="1423:48">(<expr pos:start="1423:33" pos:end="1423:47"><name pos:start="1423:33" pos:end="1423:36">insn</name> <operator pos:start="1423:38" pos:end="1423:38">&amp;</operator> <operator pos:start="1423:40" pos:end="1423:40">(</operator><literal type="number" pos:start="1423:41" pos:end="1423:41">1</literal> <operator pos:start="1423:43" pos:end="1423:44">&lt;&lt;</operator> <literal type="number" pos:start="1423:46" pos:end="1423:46">6</literal><operator pos:start="1423:47" pos:end="1423:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1425:33" pos:end="1425:49"><block_content pos:start="1425:33" pos:end="1425:49">

                                <expr_stmt pos:start="1425:33" pos:end="1425:49"><expr pos:start="1425:33" pos:end="1425:48"><name pos:start="1425:33" pos:end="1425:38">offset</name> <operator pos:start="1425:40" pos:end="1425:41">|=</operator> <name pos:start="1425:43" pos:end="1425:48">CPSR_I</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <if_stmt pos:start="1427:29" pos:end="1429:49"><if pos:start="1427:29" pos:end="1429:49">if <condition pos:start="1427:32" pos:end="1427:48">(<expr pos:start="1427:33" pos:end="1427:47"><name pos:start="1427:33" pos:end="1427:36">insn</name> <operator pos:start="1427:38" pos:end="1427:38">&amp;</operator> <operator pos:start="1427:40" pos:end="1427:40">(</operator><literal type="number" pos:start="1427:41" pos:end="1427:41">1</literal> <operator pos:start="1427:43" pos:end="1427:44">&lt;&lt;</operator> <literal type="number" pos:start="1427:46" pos:end="1427:46">5</literal><operator pos:start="1427:47" pos:end="1427:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1429:33" pos:end="1429:49"><block_content pos:start="1429:33" pos:end="1429:49">

                                <expr_stmt pos:start="1429:33" pos:end="1429:49"><expr pos:start="1429:33" pos:end="1429:48"><name pos:start="1429:33" pos:end="1429:38">offset</name> <operator pos:start="1429:40" pos:end="1429:41">|=</operator> <name pos:start="1429:43" pos:end="1429:48">CPSR_F</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <if_stmt pos:start="1431:29" pos:end="1433:63"><if pos:start="1431:29" pos:end="1433:63">if <condition pos:start="1431:32" pos:end="1431:48">(<expr pos:start="1431:33" pos:end="1431:47"><name pos:start="1431:33" pos:end="1431:36">insn</name> <operator pos:start="1431:38" pos:end="1431:38">&amp;</operator> <operator pos:start="1431:40" pos:end="1431:40">(</operator><literal type="number" pos:start="1431:41" pos:end="1431:41">1</literal> <operator pos:start="1431:43" pos:end="1431:44">&lt;&lt;</operator> <literal type="number" pos:start="1431:46" pos:end="1431:46">9</literal><operator pos:start="1431:47" pos:end="1431:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1433:33" pos:end="1433:63"><block_content pos:start="1433:33" pos:end="1433:63">

                                <expr_stmt pos:start="1433:33" pos:end="1433:63"><expr pos:start="1433:33" pos:end="1433:62"><name pos:start="1433:33" pos:end="1433:35">imm</name> <operator pos:start="1433:37" pos:end="1433:37">=</operator> <name pos:start="1433:39" pos:end="1433:44">CPSR_A</name> <operator pos:start="1433:46" pos:end="1433:46">|</operator> <name pos:start="1433:48" pos:end="1433:53">CPSR_I</name> <operator pos:start="1433:55" pos:end="1433:55">|</operator> <name pos:start="1433:57" pos:end="1433:62">CPSR_F</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1437:25" pos:end="1443:25"><if pos:start="1437:25" pos:end="1443:25">if <condition pos:start="1437:28" pos:end="1437:44">(<expr pos:start="1437:29" pos:end="1437:43"><name pos:start="1437:29" pos:end="1437:32">insn</name> <operator pos:start="1437:34" pos:end="1437:34">&amp;</operator> <operator pos:start="1437:36" pos:end="1437:36">(</operator><literal type="number" pos:start="1437:37" pos:end="1437:37">1</literal> <operator pos:start="1437:39" pos:end="1437:40">&lt;&lt;</operator> <literal type="number" pos:start="1437:42" pos:end="1437:42">8</literal><operator pos:start="1437:43" pos:end="1437:43">)</operator></expr>)</condition> <block pos:start="1437:46" pos:end="1443:25">{<block_content pos:start="1439:29" pos:end="1441:49">

                            <expr_stmt pos:start="1439:29" pos:end="1439:43"><expr pos:start="1439:29" pos:end="1439:42"><name pos:start="1439:29" pos:end="1439:34">offset</name> <operator pos:start="1439:36" pos:end="1439:37">|=</operator> <literal type="number" pos:start="1439:39" pos:end="1439:42">0x1f</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="1441:29" pos:end="1441:49"><expr pos:start="1441:29" pos:end="1441:48"><name pos:start="1441:29" pos:end="1441:31">imm</name> <operator pos:start="1441:33" pos:end="1441:34">|=</operator> <operator pos:start="1441:36" pos:end="1441:36">(</operator><name pos:start="1441:37" pos:end="1441:40">insn</name> <operator pos:start="1441:42" pos:end="1441:42">&amp;</operator> <literal type="number" pos:start="1441:44" pos:end="1441:47">0x1f</literal><operator pos:start="1441:48" pos:end="1441:48">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1445:25" pos:end="1449:25"><if pos:start="1445:25" pos:end="1449:25">if <condition pos:start="1445:28" pos:end="1445:35">(<expr pos:start="1445:29" pos:end="1445:34"><name pos:start="1445:29" pos:end="1445:34">offset</name></expr>)</condition> <block pos:start="1445:37" pos:end="1449:25">{<block_content pos:start="1447:29" pos:end="1447:62">

                            <expr_stmt pos:start="1447:29" pos:end="1447:62"><expr pos:start="1447:29" pos:end="1447:61"><call pos:start="1447:29" pos:end="1447:61"><name pos:start="1447:29" pos:end="1447:42">gen_set_psr_im</name><argument_list pos:start="1447:43" pos:end="1447:61">(<argument pos:start="1447:44" pos:end="1447:44"><expr pos:start="1447:44" pos:end="1447:44"><name pos:start="1447:44" pos:end="1447:44">s</name></expr></argument>, <argument pos:start="1447:47" pos:end="1447:52"><expr pos:start="1447:47" pos:end="1447:52"><name pos:start="1447:47" pos:end="1447:52">offset</name></expr></argument>, <argument pos:start="1447:55" pos:end="1447:55"><expr pos:start="1447:55" pos:end="1447:55"><literal type="number" pos:start="1447:55" pos:end="1447:55">0</literal></expr></argument>, <argument pos:start="1447:58" pos:end="1447:60"><expr pos:start="1447:58" pos:end="1447:60"><name pos:start="1447:58" pos:end="1447:60">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <break pos:start="1451:25" pos:end="1451:30">break;</break>

                    <case pos:start="1453:21" pos:end="1453:27">case <expr pos:start="1453:26" pos:end="1453:26"><literal type="number" pos:start="1453:26" pos:end="1453:26">3</literal></expr>:</case> <comment type="block" pos:start="1453:29" pos:end="1453:62">/* Special control operations.  */</comment>

                        <expr_stmt pos:start="1455:25" pos:end="1455:32"><expr pos:start="1455:25" pos:end="1455:31"><call pos:start="1455:25" pos:end="1455:31"><name pos:start="1455:25" pos:end="1455:28">ARCH</name><argument_list pos:start="1455:29" pos:end="1455:31">(<argument pos:start="1455:30" pos:end="1455:30"><expr pos:start="1455:30" pos:end="1455:30"><literal type="number" pos:start="1455:30" pos:end="1455:30">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1457:25" pos:end="1457:47"><expr pos:start="1457:25" pos:end="1457:46"><name pos:start="1457:25" pos:end="1457:26">op</name> <operator pos:start="1457:28" pos:end="1457:28">=</operator> <operator pos:start="1457:30" pos:end="1457:30">(</operator><name pos:start="1457:31" pos:end="1457:34">insn</name> <operator pos:start="1457:36" pos:end="1457:37">&gt;&gt;</operator> <literal type="number" pos:start="1457:39" pos:end="1457:39">4</literal><operator pos:start="1457:40" pos:end="1457:40">)</operator> <operator pos:start="1457:42" pos:end="1457:42">&amp;</operator> <literal type="number" pos:start="1457:44" pos:end="1457:46">0xf</literal></expr>;</expr_stmt>

                        <switch pos:start="1459:25" pos:end="1481:25">switch <condition pos:start="1459:32" pos:end="1459:35">(<expr pos:start="1459:33" pos:end="1459:34"><name pos:start="1459:33" pos:end="1459:34">op</name></expr>)</condition> <block pos:start="1459:37" pos:end="1481:25">{<block_content pos:start="1461:25" pos:end="1479:44">

                        <case pos:start="1461:25" pos:end="1461:31">case <expr pos:start="1461:30" pos:end="1461:30"><literal type="number" pos:start="1461:30" pos:end="1461:30">2</literal></expr>:</case> <comment type="block" pos:start="1461:33" pos:end="1461:43">/* clrex */</comment>

                            <expr_stmt pos:start="1463:29" pos:end="1463:41"><expr pos:start="1463:29" pos:end="1463:40"><call pos:start="1463:29" pos:end="1463:40"><name pos:start="1463:29" pos:end="1463:37">gen_clrex</name><argument_list pos:start="1463:38" pos:end="1463:40">(<argument pos:start="1463:39" pos:end="1463:39"><expr pos:start="1463:39" pos:end="1463:39"><name pos:start="1463:39" pos:end="1463:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="1465:29" pos:end="1465:34">break;</break>

                        <case pos:start="1467:25" pos:end="1467:31">case <expr pos:start="1467:30" pos:end="1467:30"><literal type="number" pos:start="1467:30" pos:end="1467:30">4</literal></expr>:</case> <comment type="block" pos:start="1467:33" pos:end="1467:41">/* dsb */</comment>

                        <case pos:start="1469:25" pos:end="1469:31">case <expr pos:start="1469:30" pos:end="1469:30"><literal type="number" pos:start="1469:30" pos:end="1469:30">5</literal></expr>:</case> <comment type="block" pos:start="1469:33" pos:end="1469:41">/* dmb */</comment>

                        <case pos:start="1471:25" pos:end="1471:31">case <expr pos:start="1471:30" pos:end="1471:30"><literal type="number" pos:start="1471:30" pos:end="1471:30">6</literal></expr>:</case> <comment type="block" pos:start="1471:33" pos:end="1471:41">/* isb */</comment>

                            <comment type="block" pos:start="1473:29" pos:end="1473:57">/* These execute as NOPs.  */</comment>

                            <break pos:start="1475:29" pos:end="1475:34">break;</break>

                        <default pos:start="1477:25" pos:end="1477:32">default:</default>

                            <goto pos:start="1479:29" pos:end="1479:44">goto <name pos:start="1479:34" pos:end="1479:43">illegal_op</name>;</goto>

                        </block_content>}</block></switch>

                        <break pos:start="1483:25" pos:end="1483:30">break;</break>

                    <case pos:start="1485:21" pos:end="1485:27">case <expr pos:start="1485:26" pos:end="1485:26"><literal type="number" pos:start="1485:26" pos:end="1485:26">4</literal></expr>:</case> <comment type="block" pos:start="1485:29" pos:end="1485:37">/* bxj */</comment>

                        <comment type="block" pos:start="1487:25" pos:end="1487:71">/* Trivial implementation equivalent to bx.  */</comment>

                        <expr_stmt pos:start="1489:25" pos:end="1489:46"><expr pos:start="1489:25" pos:end="1489:45"><name pos:start="1489:25" pos:end="1489:27">tmp</name> <operator pos:start="1489:29" pos:end="1489:29">=</operator> <call pos:start="1489:31" pos:end="1489:45"><name pos:start="1489:31" pos:end="1489:38">load_reg</name><argument_list pos:start="1489:39" pos:end="1489:45">(<argument pos:start="1489:40" pos:end="1489:40"><expr pos:start="1489:40" pos:end="1489:40"><name pos:start="1489:40" pos:end="1489:40">s</name></expr></argument>, <argument pos:start="1489:43" pos:end="1489:44"><expr pos:start="1489:43" pos:end="1489:44"><name pos:start="1489:43" pos:end="1489:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1491:25" pos:end="1491:39"><expr pos:start="1491:25" pos:end="1491:38"><call pos:start="1491:25" pos:end="1491:38"><name pos:start="1491:25" pos:end="1491:30">gen_bx</name><argument_list pos:start="1491:31" pos:end="1491:38">(<argument pos:start="1491:32" pos:end="1491:32"><expr pos:start="1491:32" pos:end="1491:32"><name pos:start="1491:32" pos:end="1491:32">s</name></expr></argument>, <argument pos:start="1491:35" pos:end="1491:37"><expr pos:start="1491:35" pos:end="1491:37"><name pos:start="1491:35" pos:end="1491:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1493:25" pos:end="1493:30">break;</break>

                    <case pos:start="1495:21" pos:end="1495:27">case <expr pos:start="1495:26" pos:end="1495:26"><literal type="number" pos:start="1495:26" pos:end="1495:26">5</literal></expr>:</case> <comment type="block" pos:start="1495:29" pos:end="1495:52">/* Exception return.  */</comment>

                        <if_stmt pos:start="1497:25" pos:end="1501:25"><if pos:start="1497:25" pos:end="1501:25">if <condition pos:start="1497:28" pos:end="1497:39">(<expr pos:start="1497:29" pos:end="1497:38"><call pos:start="1497:29" pos:end="1497:38"><name pos:start="1497:29" pos:end="1497:35">IS_USER</name><argument_list pos:start="1497:36" pos:end="1497:38">(<argument pos:start="1497:37" pos:end="1497:37"><expr pos:start="1497:37" pos:end="1497:37"><name pos:start="1497:37" pos:end="1497:37">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1497:41" pos:end="1501:25">{<block_content pos:start="1499:29" pos:end="1499:44">

                            <goto pos:start="1499:29" pos:end="1499:44">goto <name pos:start="1499:34" pos:end="1499:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1503:25" pos:end="1507:25"><if pos:start="1503:25" pos:end="1507:25">if <condition pos:start="1503:28" pos:end="1503:49">(<expr pos:start="1503:29" pos:end="1503:48"><name pos:start="1503:29" pos:end="1503:30">rn</name> <operator pos:start="1503:32" pos:end="1503:33">!=</operator> <literal type="number" pos:start="1503:35" pos:end="1503:36">14</literal> <operator pos:start="1503:38" pos:end="1503:39">||</operator> <name pos:start="1503:41" pos:end="1503:42">rd</name> <operator pos:start="1503:44" pos:end="1503:45">!=</operator> <literal type="number" pos:start="1503:47" pos:end="1503:48">15</literal></expr>)</condition> <block pos:start="1503:51" pos:end="1507:25">{<block_content pos:start="1505:29" pos:end="1505:44">

                            <goto pos:start="1505:29" pos:end="1505:44">goto <name pos:start="1505:34" pos:end="1505:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1509:25" pos:end="1509:46"><expr pos:start="1509:25" pos:end="1509:45"><name pos:start="1509:25" pos:end="1509:27">tmp</name> <operator pos:start="1509:29" pos:end="1509:29">=</operator> <call pos:start="1509:31" pos:end="1509:45"><name pos:start="1509:31" pos:end="1509:38">load_reg</name><argument_list pos:start="1509:39" pos:end="1509:45">(<argument pos:start="1509:40" pos:end="1509:40"><expr pos:start="1509:40" pos:end="1509:40"><name pos:start="1509:40" pos:end="1509:40">s</name></expr></argument>, <argument pos:start="1509:43" pos:end="1509:44"><expr pos:start="1509:43" pos:end="1509:44"><name pos:start="1509:43" pos:end="1509:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1511:25" pos:end="1511:64"><expr pos:start="1511:25" pos:end="1511:63"><call pos:start="1511:25" pos:end="1511:63"><name pos:start="1511:25" pos:end="1511:40">tcg_gen_subi_i32</name><argument_list pos:start="1511:41" pos:end="1511:63">(<argument pos:start="1511:42" pos:end="1511:44"><expr pos:start="1511:42" pos:end="1511:44"><name pos:start="1511:42" pos:end="1511:44">tmp</name></expr></argument>, <argument pos:start="1511:47" pos:end="1511:49"><expr pos:start="1511:47" pos:end="1511:49"><name pos:start="1511:47" pos:end="1511:49">tmp</name></expr></argument>, <argument pos:start="1511:52" pos:end="1511:62"><expr pos:start="1511:52" pos:end="1511:62"><name pos:start="1511:52" pos:end="1511:55">insn</name> <operator pos:start="1511:57" pos:end="1511:57">&amp;</operator> <literal type="number" pos:start="1511:59" pos:end="1511:62">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1513:25" pos:end="1513:53"><expr pos:start="1513:25" pos:end="1513:52"><call pos:start="1513:25" pos:end="1513:52"><name pos:start="1513:25" pos:end="1513:44">gen_exception_return</name><argument_list pos:start="1513:45" pos:end="1513:52">(<argument pos:start="1513:46" pos:end="1513:46"><expr pos:start="1513:46" pos:end="1513:46"><name pos:start="1513:46" pos:end="1513:46">s</name></expr></argument>, <argument pos:start="1513:49" pos:end="1513:51"><expr pos:start="1513:49" pos:end="1513:51"><name pos:start="1513:49" pos:end="1513:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1515:25" pos:end="1515:30">break;</break>

                    <case pos:start="1517:21" pos:end="1517:27">case <expr pos:start="1517:26" pos:end="1517:26"><literal type="number" pos:start="1517:26" pos:end="1517:26">6</literal></expr>:</case> <comment type="block" pos:start="1517:29" pos:end="1517:44">/* mrs cpsr.  */</comment>

                        <expr_stmt pos:start="1519:25" pos:end="1519:49"><expr pos:start="1519:25" pos:end="1519:48"><name pos:start="1519:25" pos:end="1519:27">tmp</name> <operator pos:start="1519:29" pos:end="1519:29">=</operator> <call pos:start="1519:31" pos:end="1519:48"><name pos:start="1519:31" pos:end="1519:46">tcg_temp_new_i32</name><argument_list pos:start="1519:47" pos:end="1519:48">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1521:25" pos:end="1533:25"><if pos:start="1521:25" pos:end="1529:25">if <condition pos:start="1521:28" pos:end="1521:38">(<expr pos:start="1521:29" pos:end="1521:37"><call pos:start="1521:29" pos:end="1521:37"><name pos:start="1521:29" pos:end="1521:32">IS_M</name><argument_list pos:start="1521:33" pos:end="1521:37">(<argument pos:start="1521:34" pos:end="1521:36"><expr pos:start="1521:34" pos:end="1521:36"><name pos:start="1521:34" pos:end="1521:36">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1521:40" pos:end="1529:25">{<block_content pos:start="1523:29" pos:end="1527:52">

                            <expr_stmt pos:start="1523:29" pos:end="1523:62"><expr pos:start="1523:29" pos:end="1523:61"><name pos:start="1523:29" pos:end="1523:32">addr</name> <operator pos:start="1523:34" pos:end="1523:34">=</operator> <call pos:start="1523:36" pos:end="1523:61"><name pos:start="1523:36" pos:end="1523:48">tcg_const_i32</name><argument_list pos:start="1523:49" pos:end="1523:61">(<argument pos:start="1523:50" pos:end="1523:60"><expr pos:start="1523:50" pos:end="1523:60"><name pos:start="1523:50" pos:end="1523:53">insn</name> <operator pos:start="1523:55" pos:end="1523:55">&amp;</operator> <literal type="number" pos:start="1523:57" pos:end="1523:60">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1525:29" pos:end="1525:67"><expr pos:start="1525:29" pos:end="1525:66"><call pos:start="1525:29" pos:end="1525:66"><name pos:start="1525:29" pos:end="1525:46">gen_helper_v7m_mrs</name><argument_list pos:start="1525:47" pos:end="1525:66">(<argument pos:start="1525:48" pos:end="1525:50"><expr pos:start="1525:48" pos:end="1525:50"><name pos:start="1525:48" pos:end="1525:50">tmp</name></expr></argument>, <argument pos:start="1525:53" pos:end="1525:59"><expr pos:start="1525:53" pos:end="1525:59"><name pos:start="1525:53" pos:end="1525:59">cpu_env</name></expr></argument>, <argument pos:start="1525:62" pos:end="1525:65"><expr pos:start="1525:62" pos:end="1525:65"><name pos:start="1525:62" pos:end="1525:65">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1527:29" pos:end="1527:52"><expr pos:start="1527:29" pos:end="1527:51"><call pos:start="1527:29" pos:end="1527:51"><name pos:start="1527:29" pos:end="1527:45">tcg_temp_free_i32</name><argument_list pos:start="1527:46" pos:end="1527:51">(<argument pos:start="1527:47" pos:end="1527:50"><expr pos:start="1527:47" pos:end="1527:50"><name pos:start="1527:47" pos:end="1527:50">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1529:27" pos:end="1533:25">else <block pos:start="1529:32" pos:end="1533:25">{<block_content pos:start="1531:29" pos:end="1531:63">

                            <expr_stmt pos:start="1531:29" pos:end="1531:63"><expr pos:start="1531:29" pos:end="1531:62"><call pos:start="1531:29" pos:end="1531:62"><name pos:start="1531:29" pos:end="1531:48">gen_helper_cpsr_read</name><argument_list pos:start="1531:49" pos:end="1531:62">(<argument pos:start="1531:50" pos:end="1531:52"><expr pos:start="1531:50" pos:end="1531:52"><name pos:start="1531:50" pos:end="1531:52">tmp</name></expr></argument>, <argument pos:start="1531:55" pos:end="1531:61"><expr pos:start="1531:55" pos:end="1531:61"><name pos:start="1531:55" pos:end="1531:61">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1535:25" pos:end="1535:46"><expr pos:start="1535:25" pos:end="1535:45"><call pos:start="1535:25" pos:end="1535:45"><name pos:start="1535:25" pos:end="1535:33">store_reg</name><argument_list pos:start="1535:34" pos:end="1535:45">(<argument pos:start="1535:35" pos:end="1535:35"><expr pos:start="1535:35" pos:end="1535:35"><name pos:start="1535:35" pos:end="1535:35">s</name></expr></argument>, <argument pos:start="1535:38" pos:end="1535:39"><expr pos:start="1535:38" pos:end="1535:39"><name pos:start="1535:38" pos:end="1535:39">rd</name></expr></argument>, <argument pos:start="1535:42" pos:end="1535:44"><expr pos:start="1535:42" pos:end="1535:44"><name pos:start="1535:42" pos:end="1535:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1537:25" pos:end="1537:30">break;</break>

                    <case pos:start="1539:21" pos:end="1539:27">case <expr pos:start="1539:26" pos:end="1539:26"><literal type="number" pos:start="1539:26" pos:end="1539:26">7</literal></expr>:</case> <comment type="block" pos:start="1539:29" pos:end="1539:44">/* mrs spsr.  */</comment>

                        <comment type="block" pos:start="1541:25" pos:end="1541:59">/* Not accessible in user mode.  */</comment>

                        <if_stmt pos:start="1543:25" pos:end="1545:44"><if pos:start="1543:25" pos:end="1545:44">if <condition pos:start="1543:28" pos:end="1543:52">(<expr pos:start="1543:29" pos:end="1543:51"><call pos:start="1543:29" pos:end="1543:38"><name pos:start="1543:29" pos:end="1543:35">IS_USER</name><argument_list pos:start="1543:36" pos:end="1543:38">(<argument pos:start="1543:37" pos:end="1543:37"><expr pos:start="1543:37" pos:end="1543:37"><name pos:start="1543:37" pos:end="1543:37">s</name></expr></argument>)</argument_list></call> <operator pos:start="1543:40" pos:end="1543:41">||</operator> <call pos:start="1543:43" pos:end="1543:51"><name pos:start="1543:43" pos:end="1543:46">IS_M</name><argument_list pos:start="1543:47" pos:end="1543:51">(<argument pos:start="1543:48" pos:end="1543:50"><expr pos:start="1543:48" pos:end="1543:50"><name pos:start="1543:48" pos:end="1543:50">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1545:29" pos:end="1545:44"><block_content pos:start="1545:29" pos:end="1545:44">

                            <goto pos:start="1545:29" pos:end="1545:44">goto <name pos:start="1545:34" pos:end="1545:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1547:25" pos:end="1547:51"><expr pos:start="1547:25" pos:end="1547:50"><name pos:start="1547:25" pos:end="1547:27">tmp</name> <operator pos:start="1547:29" pos:end="1547:29">=</operator> <call pos:start="1547:31" pos:end="1547:50"><name pos:start="1547:31" pos:end="1547:44">load_cpu_field</name><argument_list pos:start="1547:45" pos:end="1547:50">(<argument pos:start="1547:46" pos:end="1547:49"><expr pos:start="1547:46" pos:end="1547:49"><name pos:start="1547:46" pos:end="1547:49">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1549:25" pos:end="1549:46"><expr pos:start="1549:25" pos:end="1549:45"><call pos:start="1549:25" pos:end="1549:45"><name pos:start="1549:25" pos:end="1549:33">store_reg</name><argument_list pos:start="1549:34" pos:end="1549:45">(<argument pos:start="1549:35" pos:end="1549:35"><expr pos:start="1549:35" pos:end="1549:35"><name pos:start="1549:35" pos:end="1549:35">s</name></expr></argument>, <argument pos:start="1549:38" pos:end="1549:39"><expr pos:start="1549:38" pos:end="1549:39"><name pos:start="1549:38" pos:end="1549:39">rd</name></expr></argument>, <argument pos:start="1549:42" pos:end="1549:44"><expr pos:start="1549:42" pos:end="1549:44"><name pos:start="1549:42" pos:end="1549:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1551:25" pos:end="1551:30">break;</break>

                    </block_content>}</block></switch>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1557:15" pos:end="1599:13">else <block pos:start="1557:20" pos:end="1599:13">{<block_content pos:start="1561:17" pos:end="1597:43">

                <comment type="block" pos:start="1559:17" pos:end="1559:42">/* Conditional branch.  */</comment>

                <expr_stmt pos:start="1561:17" pos:end="1561:40"><expr pos:start="1561:17" pos:end="1561:39"><name pos:start="1561:17" pos:end="1561:18">op</name> <operator pos:start="1561:20" pos:end="1561:20">=</operator> <operator pos:start="1561:22" pos:end="1561:22">(</operator><name pos:start="1561:23" pos:end="1561:26">insn</name> <operator pos:start="1561:28" pos:end="1561:29">&gt;&gt;</operator> <literal type="number" pos:start="1561:31" pos:end="1561:32">22</literal><operator pos:start="1561:33" pos:end="1561:33">)</operator> <operator pos:start="1561:35" pos:end="1561:35">&amp;</operator> <literal type="number" pos:start="1561:37" pos:end="1561:39">0xf</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1563:17" pos:end="1563:71">/* Generate a conditional jump to next instruction.  */</comment>

                <expr_stmt pos:start="1565:17" pos:end="1565:47"><expr pos:start="1565:17" pos:end="1565:46"><name pos:start="1565:17" pos:end="1565:28"><name pos:start="1565:17" pos:end="1565:17">s</name><operator pos:start="1565:18" pos:end="1565:19">-&gt;</operator><name pos:start="1565:20" pos:end="1565:28">condlabel</name></name> <operator pos:start="1565:30" pos:end="1565:30">=</operator> <call pos:start="1565:32" pos:end="1565:46"><name pos:start="1565:32" pos:end="1565:44">gen_new_label</name><argument_list pos:start="1565:45" pos:end="1565:46">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1567:17" pos:end="1567:50"><expr pos:start="1567:17" pos:end="1567:49"><call pos:start="1567:17" pos:end="1567:49"><name pos:start="1567:17" pos:end="1567:27">gen_test_cc</name><argument_list pos:start="1567:28" pos:end="1567:49">(<argument pos:start="1567:29" pos:end="1567:34"><expr pos:start="1567:29" pos:end="1567:34"><name pos:start="1567:29" pos:end="1567:30">op</name> <operator pos:start="1567:32" pos:end="1567:32">^</operator> <literal type="number" pos:start="1567:34" pos:end="1567:34">1</literal></expr></argument>, <argument pos:start="1567:37" pos:end="1567:48"><expr pos:start="1567:37" pos:end="1567:48"><name pos:start="1567:37" pos:end="1567:48"><name pos:start="1567:37" pos:end="1567:37">s</name><operator pos:start="1567:38" pos:end="1567:39">-&gt;</operator><name pos:start="1567:40" pos:end="1567:48">condlabel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1569:17" pos:end="1569:31"><expr pos:start="1569:17" pos:end="1569:30"><name pos:start="1569:17" pos:end="1569:26"><name pos:start="1569:17" pos:end="1569:17">s</name><operator pos:start="1569:18" pos:end="1569:19">-&gt;</operator><name pos:start="1569:20" pos:end="1569:26">condjmp</name></name> <operator pos:start="1569:28" pos:end="1569:28">=</operator> <literal type="number" pos:start="1569:30" pos:end="1569:30">1</literal></expr>;</expr_stmt>



                <comment type="block" pos:start="1573:17" pos:end="1573:47">/* offset[11:1] = insn[10:0] */</comment>

                <expr_stmt pos:start="1575:17" pos:end="1575:45"><expr pos:start="1575:17" pos:end="1575:44"><name pos:start="1575:17" pos:end="1575:22">offset</name> <operator pos:start="1575:24" pos:end="1575:24">=</operator> <operator pos:start="1575:26" pos:end="1575:26">(</operator><name pos:start="1575:27" pos:end="1575:30">insn</name> <operator pos:start="1575:32" pos:end="1575:32">&amp;</operator> <literal type="number" pos:start="1575:34" pos:end="1575:38">0x7ff</literal><operator pos:start="1575:39" pos:end="1575:39">)</operator> <operator pos:start="1575:41" pos:end="1575:42">&lt;&lt;</operator> <literal type="number" pos:start="1575:44" pos:end="1575:44">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1577:17" pos:end="1577:51">/* offset[17:12] = insn[21:16].  */</comment>

                <expr_stmt pos:start="1579:17" pos:end="1579:51"><expr pos:start="1579:17" pos:end="1579:50"><name pos:start="1579:17" pos:end="1579:22">offset</name> <operator pos:start="1579:24" pos:end="1579:25">|=</operator> <operator pos:start="1579:27" pos:end="1579:27">(</operator><name pos:start="1579:28" pos:end="1579:31">insn</name> <operator pos:start="1579:33" pos:end="1579:33">&amp;</operator> <literal type="number" pos:start="1579:35" pos:end="1579:44">0x003f0000</literal><operator pos:start="1579:45" pos:end="1579:45">)</operator> <operator pos:start="1579:47" pos:end="1579:48">&gt;&gt;</operator> <literal type="number" pos:start="1579:50" pos:end="1579:50">4</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1581:17" pos:end="1581:48">/* offset[31:20] = insn[26].  */</comment>

                <expr_stmt pos:start="1583:17" pos:end="1583:70"><expr pos:start="1583:17" pos:end="1583:69"><name pos:start="1583:17" pos:end="1583:22">offset</name> <operator pos:start="1583:24" pos:end="1583:25">|=</operator> <operator pos:start="1583:27" pos:end="1583:27">(</operator><operator pos:start="1583:28" pos:end="1583:28">(</operator><name pos:start="1583:29" pos:end="1583:35">int32_t</name><operator pos:start="1583:36" pos:end="1583:36">)</operator><operator pos:start="1583:37" pos:end="1583:37">(</operator><operator pos:start="1583:38" pos:end="1583:38">(</operator><name pos:start="1583:39" pos:end="1583:42">insn</name> <operator pos:start="1583:44" pos:end="1583:45">&lt;&lt;</operator> <literal type="number" pos:start="1583:47" pos:end="1583:47">5</literal><operator pos:start="1583:48" pos:end="1583:48">)</operator> <operator pos:start="1583:50" pos:end="1583:50">&amp;</operator> <literal type="number" pos:start="1583:52" pos:end="1583:61">0x80000000</literal><operator pos:start="1583:62" pos:end="1583:62">)</operator><operator pos:start="1583:63" pos:end="1583:63">)</operator> <operator pos:start="1583:65" pos:end="1583:66">&gt;&gt;</operator> <literal type="number" pos:start="1583:68" pos:end="1583:69">11</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1585:17" pos:end="1585:45">/* offset[18] = insn[13].  */</comment>

                <expr_stmt pos:start="1587:17" pos:end="1587:50"><expr pos:start="1587:17" pos:end="1587:49"><name pos:start="1587:17" pos:end="1587:22">offset</name> <operator pos:start="1587:24" pos:end="1587:25">|=</operator> <operator pos:start="1587:27" pos:end="1587:27">(</operator><name pos:start="1587:28" pos:end="1587:31">insn</name> <operator pos:start="1587:33" pos:end="1587:33">&amp;</operator> <operator pos:start="1587:35" pos:end="1587:35">(</operator><literal type="number" pos:start="1587:36" pos:end="1587:36">1</literal> <operator pos:start="1587:38" pos:end="1587:39">&lt;&lt;</operator> <literal type="number" pos:start="1587:41" pos:end="1587:42">13</literal><operator pos:start="1587:43" pos:end="1587:43">)</operator><operator pos:start="1587:44" pos:end="1587:44">)</operator> <operator pos:start="1587:46" pos:end="1587:47">&lt;&lt;</operator> <literal type="number" pos:start="1587:49" pos:end="1587:49">5</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1589:17" pos:end="1589:45">/* offset[19] = insn[11].  */</comment>

                <expr_stmt pos:start="1591:17" pos:end="1591:50"><expr pos:start="1591:17" pos:end="1591:49"><name pos:start="1591:17" pos:end="1591:22">offset</name> <operator pos:start="1591:24" pos:end="1591:25">|=</operator> <operator pos:start="1591:27" pos:end="1591:27">(</operator><name pos:start="1591:28" pos:end="1591:31">insn</name> <operator pos:start="1591:33" pos:end="1591:33">&amp;</operator> <operator pos:start="1591:35" pos:end="1591:35">(</operator><literal type="number" pos:start="1591:36" pos:end="1591:36">1</literal> <operator pos:start="1591:38" pos:end="1591:39">&lt;&lt;</operator> <literal type="number" pos:start="1591:41" pos:end="1591:42">11</literal><operator pos:start="1591:43" pos:end="1591:43">)</operator><operator pos:start="1591:44" pos:end="1591:44">)</operator> <operator pos:start="1591:46" pos:end="1591:47">&lt;&lt;</operator> <literal type="number" pos:start="1591:49" pos:end="1591:49">8</literal></expr>;</expr_stmt>



                <comment type="block" pos:start="1595:17" pos:end="1595:40">/* jump to the offset */</comment>

                <expr_stmt pos:start="1597:17" pos:end="1597:43"><expr pos:start="1597:17" pos:end="1597:42"><call pos:start="1597:17" pos:end="1597:42"><name pos:start="1597:17" pos:end="1597:23">gen_jmp</name><argument_list pos:start="1597:24" pos:end="1597:42">(<argument pos:start="1597:25" pos:end="1597:25"><expr pos:start="1597:25" pos:end="1597:25"><name pos:start="1597:25" pos:end="1597:25">s</name></expr></argument>, <argument pos:start="1597:28" pos:end="1597:41"><expr pos:start="1597:28" pos:end="1597:41"><name pos:start="1597:28" pos:end="1597:32"><name pos:start="1597:28" pos:end="1597:28">s</name><operator pos:start="1597:29" pos:end="1597:30">-&gt;</operator><name pos:start="1597:31" pos:end="1597:32">pc</name></name> <operator pos:start="1597:34" pos:end="1597:34">+</operator> <name pos:start="1597:36" pos:end="1597:41">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="1601:11" pos:end="1905:9">else <block pos:start="1601:16" pos:end="1905:9">{<block_content pos:start="1605:13" pos:end="1903:13">

            <comment type="block" pos:start="1603:13" pos:end="1603:45">/* Data processing immediate.  */</comment>

            <if_stmt pos:start="1605:13" pos:end="1903:13"><if pos:start="1605:13" pos:end="1809:13">if <condition pos:start="1605:16" pos:end="1605:33">(<expr pos:start="1605:17" pos:end="1605:32"><name pos:start="1605:17" pos:end="1605:20">insn</name> <operator pos:start="1605:22" pos:end="1605:22">&amp;</operator> <operator pos:start="1605:24" pos:end="1605:24">(</operator><literal type="number" pos:start="1605:25" pos:end="1605:25">1</literal> <operator pos:start="1605:27" pos:end="1605:28">&lt;&lt;</operator> <literal type="number" pos:start="1605:30" pos:end="1605:31">25</literal><operator pos:start="1605:32" pos:end="1605:32">)</operator></expr>)</condition> <block pos:start="1605:35" pos:end="1809:13">{<block_content pos:start="1607:17" pos:end="1807:17">

                <if_stmt pos:start="1607:17" pos:end="1807:17"><if pos:start="1607:17" pos:end="1737:17">if <condition pos:start="1607:20" pos:end="1607:37">(<expr pos:start="1607:21" pos:end="1607:36"><name pos:start="1607:21" pos:end="1607:24">insn</name> <operator pos:start="1607:26" pos:end="1607:26">&amp;</operator> <operator pos:start="1607:28" pos:end="1607:28">(</operator><literal type="number" pos:start="1607:29" pos:end="1607:29">1</literal> <operator pos:start="1607:31" pos:end="1607:32">&lt;&lt;</operator> <literal type="number" pos:start="1607:34" pos:end="1607:35">24</literal><operator pos:start="1607:36" pos:end="1607:36">)</operator></expr>)</condition> <block pos:start="1607:39" pos:end="1737:17">{<block_content pos:start="1609:21" pos:end="1735:42">

                    <if_stmt pos:start="1609:21" pos:end="1611:40"><if pos:start="1609:21" pos:end="1611:40">if <condition pos:start="1609:24" pos:end="1609:41">(<expr pos:start="1609:25" pos:end="1609:40"><name pos:start="1609:25" pos:end="1609:28">insn</name> <operator pos:start="1609:30" pos:end="1609:30">&amp;</operator> <operator pos:start="1609:32" pos:end="1609:32">(</operator><literal type="number" pos:start="1609:33" pos:end="1609:33">1</literal> <operator pos:start="1609:35" pos:end="1609:36">&lt;&lt;</operator> <literal type="number" pos:start="1609:38" pos:end="1609:39">20</literal><operator pos:start="1609:40" pos:end="1609:40">)</operator></expr>)</condition><block type="pseudo" pos:start="1611:25" pos:end="1611:40"><block_content pos:start="1611:25" pos:end="1611:40">

                        <goto pos:start="1611:25" pos:end="1611:40">goto <name pos:start="1611:30" pos:end="1611:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="1613:21" pos:end="1613:45">/* Bitfield/Saturate.  */</comment>

                    <expr_stmt pos:start="1615:21" pos:end="1615:42"><expr pos:start="1615:21" pos:end="1615:41"><name pos:start="1615:21" pos:end="1615:22">op</name> <operator pos:start="1615:24" pos:end="1615:24">=</operator> <operator pos:start="1615:26" pos:end="1615:26">(</operator><name pos:start="1615:27" pos:end="1615:30">insn</name> <operator pos:start="1615:32" pos:end="1615:33">&gt;&gt;</operator> <literal type="number" pos:start="1615:35" pos:end="1615:36">21</literal><operator pos:start="1615:37" pos:end="1615:37">)</operator> <operator pos:start="1615:39" pos:end="1615:39">&amp;</operator> <literal type="number" pos:start="1615:41" pos:end="1615:41">7</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1617:21" pos:end="1617:38"><expr pos:start="1617:21" pos:end="1617:37"><name pos:start="1617:21" pos:end="1617:23">imm</name> <operator pos:start="1617:25" pos:end="1617:25">=</operator> <name pos:start="1617:27" pos:end="1617:30">insn</name> <operator pos:start="1617:32" pos:end="1617:32">&amp;</operator> <literal type="number" pos:start="1617:34" pos:end="1617:37">0x1f</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1619:21" pos:end="1619:70"><expr pos:start="1619:21" pos:end="1619:69"><name pos:start="1619:21" pos:end="1619:25">shift</name> <operator pos:start="1619:27" pos:end="1619:27">=</operator> <operator pos:start="1619:29" pos:end="1619:29">(</operator><operator pos:start="1619:30" pos:end="1619:30">(</operator><name pos:start="1619:31" pos:end="1619:34">insn</name> <operator pos:start="1619:36" pos:end="1619:37">&gt;&gt;</operator> <literal type="number" pos:start="1619:39" pos:end="1619:39">6</literal><operator pos:start="1619:40" pos:end="1619:40">)</operator> <operator pos:start="1619:42" pos:end="1619:42">&amp;</operator> <literal type="number" pos:start="1619:44" pos:end="1619:44">3</literal><operator pos:start="1619:45" pos:end="1619:45">)</operator> <operator pos:start="1619:47" pos:end="1619:47">|</operator> <operator pos:start="1619:49" pos:end="1619:49">(</operator><operator pos:start="1619:50" pos:end="1619:50">(</operator><name pos:start="1619:51" pos:end="1619:54">insn</name> <operator pos:start="1619:56" pos:end="1619:57">&gt;&gt;</operator> <literal type="number" pos:start="1619:59" pos:end="1619:60">10</literal><operator pos:start="1619:61" pos:end="1619:61">)</operator> <operator pos:start="1619:63" pos:end="1619:63">&amp;</operator> <literal type="number" pos:start="1619:65" pos:end="1619:68">0x1c</literal><operator pos:start="1619:69" pos:end="1619:69">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="1621:21" pos:end="1631:21"><if pos:start="1621:21" pos:end="1627:21">if <condition pos:start="1621:24" pos:end="1621:33">(<expr pos:start="1621:25" pos:end="1621:32"><name pos:start="1621:25" pos:end="1621:26">rn</name> <operator pos:start="1621:28" pos:end="1621:29">==</operator> <literal type="number" pos:start="1621:31" pos:end="1621:32">15</literal></expr>)</condition> <block pos:start="1621:35" pos:end="1627:21">{<block_content pos:start="1623:25" pos:end="1625:49">

                        <expr_stmt pos:start="1623:25" pos:end="1623:49"><expr pos:start="1623:25" pos:end="1623:48"><name pos:start="1623:25" pos:end="1623:27">tmp</name> <operator pos:start="1623:29" pos:end="1623:29">=</operator> <call pos:start="1623:31" pos:end="1623:48"><name pos:start="1623:31" pos:end="1623:46">tcg_temp_new_i32</name><argument_list pos:start="1623:47" pos:end="1623:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1625:25" pos:end="1625:49"><expr pos:start="1625:25" pos:end="1625:48"><call pos:start="1625:25" pos:end="1625:48"><name pos:start="1625:25" pos:end="1625:40">tcg_gen_movi_i32</name><argument_list pos:start="1625:41" pos:end="1625:48">(<argument pos:start="1625:42" pos:end="1625:44"><expr pos:start="1625:42" pos:end="1625:44"><name pos:start="1625:42" pos:end="1625:44">tmp</name></expr></argument>, <argument pos:start="1625:47" pos:end="1625:47"><expr pos:start="1625:47" pos:end="1625:47"><literal type="number" pos:start="1625:47" pos:end="1625:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1627:23" pos:end="1631:21">else <block pos:start="1627:28" pos:end="1631:21">{<block_content pos:start="1629:25" pos:end="1629:46">

                        <expr_stmt pos:start="1629:25" pos:end="1629:46"><expr pos:start="1629:25" pos:end="1629:45"><name pos:start="1629:25" pos:end="1629:27">tmp</name> <operator pos:start="1629:29" pos:end="1629:29">=</operator> <call pos:start="1629:31" pos:end="1629:45"><name pos:start="1629:31" pos:end="1629:38">load_reg</name><argument_list pos:start="1629:39" pos:end="1629:45">(<argument pos:start="1629:40" pos:end="1629:40"><expr pos:start="1629:40" pos:end="1629:40"><name pos:start="1629:40" pos:end="1629:40">s</name></expr></argument>, <argument pos:start="1629:43" pos:end="1629:44"><expr pos:start="1629:43" pos:end="1629:44"><name pos:start="1629:43" pos:end="1629:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <switch pos:start="1633:21" pos:end="1733:21">switch <condition pos:start="1633:28" pos:end="1633:31">(<expr pos:start="1633:29" pos:end="1633:30"><name pos:start="1633:29" pos:end="1633:30">op</name></expr>)</condition> <block pos:start="1633:33" pos:end="1733:21">{<block_content pos:start="1635:21" pos:end="1731:30">

                    <case pos:start="1635:21" pos:end="1635:27">case <expr pos:start="1635:26" pos:end="1635:26"><literal type="number" pos:start="1635:26" pos:end="1635:26">2</literal></expr>:</case> <comment type="block" pos:start="1635:29" pos:end="1635:59">/* Signed bitfield extract.  */</comment>

                        <expr_stmt pos:start="1637:25" pos:end="1637:30"><expr pos:start="1637:25" pos:end="1637:29"><name pos:start="1637:25" pos:end="1637:27">imm</name><operator pos:start="1637:28" pos:end="1637:29">++</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="1639:25" pos:end="1641:44"><if pos:start="1639:25" pos:end="1641:44">if <condition pos:start="1639:28" pos:end="1639:45">(<expr pos:start="1639:29" pos:end="1639:44"><name pos:start="1639:29" pos:end="1639:33">shift</name> <operator pos:start="1639:35" pos:end="1639:35">+</operator> <name pos:start="1639:37" pos:end="1639:39">imm</name> <operator pos:start="1639:41" pos:end="1639:41">&gt;</operator> <literal type="number" pos:start="1639:43" pos:end="1639:44">32</literal></expr>)</condition><block type="pseudo" pos:start="1641:29" pos:end="1641:44"><block_content pos:start="1641:29" pos:end="1641:44">

                            <goto pos:start="1641:29" pos:end="1641:44">goto <name pos:start="1641:34" pos:end="1641:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="1643:25" pos:end="1645:54"><if pos:start="1643:25" pos:end="1645:54">if <condition pos:start="1643:28" pos:end="1643:37">(<expr pos:start="1643:29" pos:end="1643:36"><name pos:start="1643:29" pos:end="1643:31">imm</name> <operator pos:start="1643:33" pos:end="1643:33">&lt;</operator> <literal type="number" pos:start="1643:35" pos:end="1643:36">32</literal></expr>)</condition><block type="pseudo" pos:start="1645:29" pos:end="1645:54"><block_content pos:start="1645:29" pos:end="1645:54">

                            <expr_stmt pos:start="1645:29" pos:end="1645:54"><expr pos:start="1645:29" pos:end="1645:53"><call pos:start="1645:29" pos:end="1645:53"><name pos:start="1645:29" pos:end="1645:36">gen_sbfx</name><argument_list pos:start="1645:37" pos:end="1645:53">(<argument pos:start="1645:38" pos:end="1645:40"><expr pos:start="1645:38" pos:end="1645:40"><name pos:start="1645:38" pos:end="1645:40">tmp</name></expr></argument>, <argument pos:start="1645:43" pos:end="1645:47"><expr pos:start="1645:43" pos:end="1645:47"><name pos:start="1645:43" pos:end="1645:47">shift</name></expr></argument>, <argument pos:start="1645:50" pos:end="1645:52"><expr pos:start="1645:50" pos:end="1645:52"><name pos:start="1645:50" pos:end="1645:52">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1647:25" pos:end="1647:30">break;</break>

                    <case pos:start="1649:21" pos:end="1649:27">case <expr pos:start="1649:26" pos:end="1649:26"><literal type="number" pos:start="1649:26" pos:end="1649:26">6</literal></expr>:</case> <comment type="block" pos:start="1649:29" pos:end="1649:61">/* Unsigned bitfield extract.  */</comment>

                        <expr_stmt pos:start="1651:25" pos:end="1651:30"><expr pos:start="1651:25" pos:end="1651:29"><name pos:start="1651:25" pos:end="1651:27">imm</name><operator pos:start="1651:28" pos:end="1651:29">++</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="1653:25" pos:end="1655:44"><if pos:start="1653:25" pos:end="1655:44">if <condition pos:start="1653:28" pos:end="1653:45">(<expr pos:start="1653:29" pos:end="1653:44"><name pos:start="1653:29" pos:end="1653:33">shift</name> <operator pos:start="1653:35" pos:end="1653:35">+</operator> <name pos:start="1653:37" pos:end="1653:39">imm</name> <operator pos:start="1653:41" pos:end="1653:41">&gt;</operator> <literal type="number" pos:start="1653:43" pos:end="1653:44">32</literal></expr>)</condition><block type="pseudo" pos:start="1655:29" pos:end="1655:44"><block_content pos:start="1655:29" pos:end="1655:44">

                            <goto pos:start="1655:29" pos:end="1655:44">goto <name pos:start="1655:34" pos:end="1655:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="1657:25" pos:end="1659:66"><if pos:start="1657:25" pos:end="1659:66">if <condition pos:start="1657:28" pos:end="1657:37">(<expr pos:start="1657:29" pos:end="1657:36"><name pos:start="1657:29" pos:end="1657:31">imm</name> <operator pos:start="1657:33" pos:end="1657:33">&lt;</operator> <literal type="number" pos:start="1657:35" pos:end="1657:36">32</literal></expr>)</condition><block type="pseudo" pos:start="1659:29" pos:end="1659:66"><block_content pos:start="1659:29" pos:end="1659:66">

                            <expr_stmt pos:start="1659:29" pos:end="1659:66"><expr pos:start="1659:29" pos:end="1659:65"><call pos:start="1659:29" pos:end="1659:65"><name pos:start="1659:29" pos:end="1659:36">gen_ubfx</name><argument_list pos:start="1659:37" pos:end="1659:65">(<argument pos:start="1659:38" pos:end="1659:40"><expr pos:start="1659:38" pos:end="1659:40"><name pos:start="1659:38" pos:end="1659:40">tmp</name></expr></argument>, <argument pos:start="1659:43" pos:end="1659:47"><expr pos:start="1659:43" pos:end="1659:47"><name pos:start="1659:43" pos:end="1659:47">shift</name></expr></argument>, <argument pos:start="1659:50" pos:end="1659:64"><expr pos:start="1659:50" pos:end="1659:64"><operator pos:start="1659:50" pos:end="1659:50">(</operator><literal type="number" pos:start="1659:51" pos:end="1659:52">1u</literal> <operator pos:start="1659:54" pos:end="1659:55">&lt;&lt;</operator> <name pos:start="1659:57" pos:end="1659:59">imm</name><operator pos:start="1659:60" pos:end="1659:60">)</operator> <operator pos:start="1659:62" pos:end="1659:62">-</operator> <literal type="number" pos:start="1659:64" pos:end="1659:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1661:25" pos:end="1661:30">break;</break>

                    <case pos:start="1663:21" pos:end="1663:27">case <expr pos:start="1663:26" pos:end="1663:26"><literal type="number" pos:start="1663:26" pos:end="1663:26">3</literal></expr>:</case> <comment type="block" pos:start="1663:29" pos:end="1663:57">/* Bitfield insert/clear.  */</comment>

                        <if_stmt pos:start="1665:25" pos:end="1667:44"><if pos:start="1665:25" pos:end="1667:44">if <condition pos:start="1665:28" pos:end="1665:40">(<expr pos:start="1665:29" pos:end="1665:39"><name pos:start="1665:29" pos:end="1665:31">imm</name> <operator pos:start="1665:33" pos:end="1665:33">&lt;</operator> <name pos:start="1665:35" pos:end="1665:39">shift</name></expr>)</condition><block type="pseudo" pos:start="1667:29" pos:end="1667:44"><block_content pos:start="1667:29" pos:end="1667:44">

                            <goto pos:start="1667:29" pos:end="1667:44">goto <name pos:start="1667:34" pos:end="1667:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1669:25" pos:end="1669:46"><expr pos:start="1669:25" pos:end="1669:45"><name pos:start="1669:25" pos:end="1669:27">imm</name> <operator pos:start="1669:29" pos:end="1669:29">=</operator> <name pos:start="1669:31" pos:end="1669:33">imm</name> <operator pos:start="1669:35" pos:end="1669:35">+</operator> <literal type="number" pos:start="1669:37" pos:end="1669:39">1</literal> <operator pos:start="1669:39" pos:end="1669:39">-</operator> <name pos:start="1669:41" pos:end="1669:45">shift</name></expr>;</expr_stmt>

                        <if_stmt pos:start="1671:25" pos:end="1679:25"><if pos:start="1671:25" pos:end="1679:25">if <condition pos:start="1671:28" pos:end="1671:38">(<expr pos:start="1671:29" pos:end="1671:37"><name pos:start="1671:29" pos:end="1671:31">imm</name> <operator pos:start="1671:33" pos:end="1671:34">!=</operator> <literal type="number" pos:start="1671:36" pos:end="1671:37">32</literal></expr>)</condition> <block pos:start="1671:40" pos:end="1679:25">{<block_content pos:start="1673:29" pos:end="1677:52">

                            <expr_stmt pos:start="1673:29" pos:end="1673:51"><expr pos:start="1673:29" pos:end="1673:50"><name pos:start="1673:29" pos:end="1673:32">tmp2</name> <operator pos:start="1673:34" pos:end="1673:34">=</operator> <call pos:start="1673:36" pos:end="1673:50"><name pos:start="1673:36" pos:end="1673:43">load_reg</name><argument_list pos:start="1673:44" pos:end="1673:50">(<argument pos:start="1673:45" pos:end="1673:45"><expr pos:start="1673:45" pos:end="1673:45"><name pos:start="1673:45" pos:end="1673:45">s</name></expr></argument>, <argument pos:start="1673:48" pos:end="1673:49"><expr pos:start="1673:48" pos:end="1673:49"><name pos:start="1673:48" pos:end="1673:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1675:29" pos:end="1675:76"><expr pos:start="1675:29" pos:end="1675:75"><call pos:start="1675:29" pos:end="1675:75"><name pos:start="1675:29" pos:end="1675:47">tcg_gen_deposit_i32</name><argument_list pos:start="1675:48" pos:end="1675:75">(<argument pos:start="1675:49" pos:end="1675:51"><expr pos:start="1675:49" pos:end="1675:51"><name pos:start="1675:49" pos:end="1675:51">tmp</name></expr></argument>, <argument pos:start="1675:54" pos:end="1675:57"><expr pos:start="1675:54" pos:end="1675:57"><name pos:start="1675:54" pos:end="1675:57">tmp2</name></expr></argument>, <argument pos:start="1675:60" pos:end="1675:62"><expr pos:start="1675:60" pos:end="1675:62"><name pos:start="1675:60" pos:end="1675:62">tmp</name></expr></argument>, <argument pos:start="1675:65" pos:end="1675:69"><expr pos:start="1675:65" pos:end="1675:69"><name pos:start="1675:65" pos:end="1675:69">shift</name></expr></argument>, <argument pos:start="1675:72" pos:end="1675:74"><expr pos:start="1675:72" pos:end="1675:74"><name pos:start="1675:72" pos:end="1675:74">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1677:29" pos:end="1677:52"><expr pos:start="1677:29" pos:end="1677:51"><call pos:start="1677:29" pos:end="1677:51"><name pos:start="1677:29" pos:end="1677:45">tcg_temp_free_i32</name><argument_list pos:start="1677:46" pos:end="1677:51">(<argument pos:start="1677:47" pos:end="1677:50"><expr pos:start="1677:47" pos:end="1677:50"><name pos:start="1677:47" pos:end="1677:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <break pos:start="1681:25" pos:end="1681:30">break;</break>

                    <case pos:start="1683:21" pos:end="1683:27">case <expr pos:start="1683:26" pos:end="1683:26"><literal type="number" pos:start="1683:26" pos:end="1683:26">7</literal></expr>:</case>

                        <goto pos:start="1685:25" pos:end="1685:40">goto <name pos:start="1685:30" pos:end="1685:39">illegal_op</name>;</goto>

                    <default pos:start="1687:21" pos:end="1687:28">default:</default> <comment type="block" pos:start="1687:30" pos:end="1687:45">/* Saturate.  */</comment>

                        <if_stmt pos:start="1689:25" pos:end="1699:25"><if pos:start="1689:25" pos:end="1699:25">if <condition pos:start="1689:28" pos:end="1689:34">(<expr pos:start="1689:29" pos:end="1689:33"><name pos:start="1689:29" pos:end="1689:33">shift</name></expr>)</condition> <block pos:start="1689:36" pos:end="1699:25">{<block_content pos:start="1691:29" pos:end="1697:66">

                            <if_stmt pos:start="1691:29" pos:end="1697:66"><if pos:start="1691:29" pos:end="1693:66">if <condition pos:start="1691:32" pos:end="1691:39">(<expr pos:start="1691:33" pos:end="1691:38"><name pos:start="1691:33" pos:end="1691:34">op</name> <operator pos:start="1691:36" pos:end="1691:36">&amp;</operator> <literal type="number" pos:start="1691:38" pos:end="1691:38">1</literal></expr>)</condition><block type="pseudo" pos:start="1693:33" pos:end="1693:66"><block_content pos:start="1693:33" pos:end="1693:66">

                                <expr_stmt pos:start="1693:33" pos:end="1693:66"><expr pos:start="1693:33" pos:end="1693:65"><call pos:start="1693:33" pos:end="1693:65"><name pos:start="1693:33" pos:end="1693:48">tcg_gen_sari_i32</name><argument_list pos:start="1693:49" pos:end="1693:65">(<argument pos:start="1693:50" pos:end="1693:52"><expr pos:start="1693:50" pos:end="1693:52"><name pos:start="1693:50" pos:end="1693:52">tmp</name></expr></argument>, <argument pos:start="1693:55" pos:end="1693:57"><expr pos:start="1693:55" pos:end="1693:57"><name pos:start="1693:55" pos:end="1693:57">tmp</name></expr></argument>, <argument pos:start="1693:60" pos:end="1693:64"><expr pos:start="1693:60" pos:end="1693:64"><name pos:start="1693:60" pos:end="1693:64">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1695:29" pos:end="1697:66">else<block type="pseudo" pos:start="1697:33" pos:end="1697:66"><block_content pos:start="1697:33" pos:end="1697:66">

                                <expr_stmt pos:start="1697:33" pos:end="1697:66"><expr pos:start="1697:33" pos:end="1697:65"><call pos:start="1697:33" pos:end="1697:65"><name pos:start="1697:33" pos:end="1697:48">tcg_gen_shli_i32</name><argument_list pos:start="1697:49" pos:end="1697:65">(<argument pos:start="1697:50" pos:end="1697:52"><expr pos:start="1697:50" pos:end="1697:52"><name pos:start="1697:50" pos:end="1697:52">tmp</name></expr></argument>, <argument pos:start="1697:55" pos:end="1697:57"><expr pos:start="1697:55" pos:end="1697:57"><name pos:start="1697:55" pos:end="1697:57">tmp</name></expr></argument>, <argument pos:start="1697:60" pos:end="1697:64"><expr pos:start="1697:60" pos:end="1697:64"><name pos:start="1697:60" pos:end="1697:64">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1701:25" pos:end="1701:50"><expr pos:start="1701:25" pos:end="1701:49"><name pos:start="1701:25" pos:end="1701:28">tmp2</name> <operator pos:start="1701:30" pos:end="1701:30">=</operator> <call pos:start="1701:32" pos:end="1701:49"><name pos:start="1701:32" pos:end="1701:44">tcg_const_i32</name><argument_list pos:start="1701:45" pos:end="1701:49">(<argument pos:start="1701:46" pos:end="1701:48"><expr pos:start="1701:46" pos:end="1701:48"><name pos:start="1701:46" pos:end="1701:48">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1703:25" pos:end="1727:25"><if pos:start="1703:25" pos:end="1715:25">if <condition pos:start="1703:28" pos:end="1703:35">(<expr pos:start="1703:29" pos:end="1703:34"><name pos:start="1703:29" pos:end="1703:30">op</name> <operator pos:start="1703:32" pos:end="1703:32">&amp;</operator> <literal type="number" pos:start="1703:34" pos:end="1703:34">4</literal></expr>)</condition> <block pos:start="1703:37" pos:end="1715:25">{<block_content pos:start="1707:29" pos:end="1713:73">

                            <comment type="block" pos:start="1705:29" pos:end="1705:44">/* Unsigned.  */</comment>

                            <if_stmt pos:start="1707:29" pos:end="1713:73"><if pos:start="1707:29" pos:end="1709:75">if <condition pos:start="1707:32" pos:end="1707:55">(<expr pos:start="1707:33" pos:end="1707:54"><operator pos:start="1707:33" pos:end="1707:33">(</operator><name pos:start="1707:34" pos:end="1707:35">op</name> <operator pos:start="1707:37" pos:end="1707:37">&amp;</operator> <literal type="number" pos:start="1707:39" pos:end="1707:39">1</literal><operator pos:start="1707:40" pos:end="1707:40">)</operator> <operator pos:start="1707:42" pos:end="1707:43">&amp;&amp;</operator> <name pos:start="1707:45" pos:end="1707:49">shift</name> <operator pos:start="1707:51" pos:end="1707:52">==</operator> <literal type="number" pos:start="1707:54" pos:end="1707:54">0</literal></expr>)</condition><block type="pseudo" pos:start="1709:33" pos:end="1709:75"><block_content pos:start="1709:33" pos:end="1709:75">

                                <expr_stmt pos:start="1709:33" pos:end="1709:75"><expr pos:start="1709:33" pos:end="1709:74"><call pos:start="1709:33" pos:end="1709:74"><name pos:start="1709:33" pos:end="1709:49">gen_helper_usat16</name><argument_list pos:start="1709:50" pos:end="1709:74">(<argument pos:start="1709:51" pos:end="1709:53"><expr pos:start="1709:51" pos:end="1709:53"><name pos:start="1709:51" pos:end="1709:53">tmp</name></expr></argument>, <argument pos:start="1709:56" pos:end="1709:62"><expr pos:start="1709:56" pos:end="1709:62"><name pos:start="1709:56" pos:end="1709:62">cpu_env</name></expr></argument>, <argument pos:start="1709:65" pos:end="1709:67"><expr pos:start="1709:65" pos:end="1709:67"><name pos:start="1709:65" pos:end="1709:67">tmp</name></expr></argument>, <argument pos:start="1709:70" pos:end="1709:73"><expr pos:start="1709:70" pos:end="1709:73"><name pos:start="1709:70" pos:end="1709:73">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1711:29" pos:end="1713:73">else<block type="pseudo" pos:start="1713:33" pos:end="1713:73"><block_content pos:start="1713:33" pos:end="1713:73">

                                <expr_stmt pos:start="1713:33" pos:end="1713:73"><expr pos:start="1713:33" pos:end="1713:72"><call pos:start="1713:33" pos:end="1713:72"><name pos:start="1713:33" pos:end="1713:47">gen_helper_usat</name><argument_list pos:start="1713:48" pos:end="1713:72">(<argument pos:start="1713:49" pos:end="1713:51"><expr pos:start="1713:49" pos:end="1713:51"><name pos:start="1713:49" pos:end="1713:51">tmp</name></expr></argument>, <argument pos:start="1713:54" pos:end="1713:60"><expr pos:start="1713:54" pos:end="1713:60"><name pos:start="1713:54" pos:end="1713:60">cpu_env</name></expr></argument>, <argument pos:start="1713:63" pos:end="1713:65"><expr pos:start="1713:63" pos:end="1713:65"><name pos:start="1713:63" pos:end="1713:65">tmp</name></expr></argument>, <argument pos:start="1713:68" pos:end="1713:71"><expr pos:start="1713:68" pos:end="1713:71"><name pos:start="1713:68" pos:end="1713:71">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="1715:27" pos:end="1727:25">else <block pos:start="1715:32" pos:end="1727:25">{<block_content pos:start="1719:29" pos:end="1725:73">

                            <comment type="block" pos:start="1717:29" pos:end="1717:42">/* Signed.  */</comment>

                            <if_stmt pos:start="1719:29" pos:end="1725:73"><if pos:start="1719:29" pos:end="1721:75">if <condition pos:start="1719:32" pos:end="1719:55">(<expr pos:start="1719:33" pos:end="1719:54"><operator pos:start="1719:33" pos:end="1719:33">(</operator><name pos:start="1719:34" pos:end="1719:35">op</name> <operator pos:start="1719:37" pos:end="1719:37">&amp;</operator> <literal type="number" pos:start="1719:39" pos:end="1719:39">1</literal><operator pos:start="1719:40" pos:end="1719:40">)</operator> <operator pos:start="1719:42" pos:end="1719:43">&amp;&amp;</operator> <name pos:start="1719:45" pos:end="1719:49">shift</name> <operator pos:start="1719:51" pos:end="1719:52">==</operator> <literal type="number" pos:start="1719:54" pos:end="1719:54">0</literal></expr>)</condition><block type="pseudo" pos:start="1721:33" pos:end="1721:75"><block_content pos:start="1721:33" pos:end="1721:75">

                                <expr_stmt pos:start="1721:33" pos:end="1721:75"><expr pos:start="1721:33" pos:end="1721:74"><call pos:start="1721:33" pos:end="1721:74"><name pos:start="1721:33" pos:end="1721:49">gen_helper_ssat16</name><argument_list pos:start="1721:50" pos:end="1721:74">(<argument pos:start="1721:51" pos:end="1721:53"><expr pos:start="1721:51" pos:end="1721:53"><name pos:start="1721:51" pos:end="1721:53">tmp</name></expr></argument>, <argument pos:start="1721:56" pos:end="1721:62"><expr pos:start="1721:56" pos:end="1721:62"><name pos:start="1721:56" pos:end="1721:62">cpu_env</name></expr></argument>, <argument pos:start="1721:65" pos:end="1721:67"><expr pos:start="1721:65" pos:end="1721:67"><name pos:start="1721:65" pos:end="1721:67">tmp</name></expr></argument>, <argument pos:start="1721:70" pos:end="1721:73"><expr pos:start="1721:70" pos:end="1721:73"><name pos:start="1721:70" pos:end="1721:73">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1723:29" pos:end="1725:73">else<block type="pseudo" pos:start="1725:33" pos:end="1725:73"><block_content pos:start="1725:33" pos:end="1725:73">

                                <expr_stmt pos:start="1725:33" pos:end="1725:73"><expr pos:start="1725:33" pos:end="1725:72"><call pos:start="1725:33" pos:end="1725:72"><name pos:start="1725:33" pos:end="1725:47">gen_helper_ssat</name><argument_list pos:start="1725:48" pos:end="1725:72">(<argument pos:start="1725:49" pos:end="1725:51"><expr pos:start="1725:49" pos:end="1725:51"><name pos:start="1725:49" pos:end="1725:51">tmp</name></expr></argument>, <argument pos:start="1725:54" pos:end="1725:60"><expr pos:start="1725:54" pos:end="1725:60"><name pos:start="1725:54" pos:end="1725:60">cpu_env</name></expr></argument>, <argument pos:start="1725:63" pos:end="1725:65"><expr pos:start="1725:63" pos:end="1725:65"><name pos:start="1725:63" pos:end="1725:65">tmp</name></expr></argument>, <argument pos:start="1725:68" pos:end="1725:71"><expr pos:start="1725:68" pos:end="1725:71"><name pos:start="1725:68" pos:end="1725:71">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1729:25" pos:end="1729:48"><expr pos:start="1729:25" pos:end="1729:47"><call pos:start="1729:25" pos:end="1729:47"><name pos:start="1729:25" pos:end="1729:41">tcg_temp_free_i32</name><argument_list pos:start="1729:42" pos:end="1729:47">(<argument pos:start="1729:43" pos:end="1729:46"><expr pos:start="1729:43" pos:end="1729:46"><name pos:start="1729:43" pos:end="1729:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1731:25" pos:end="1731:30">break;</break>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="1735:21" pos:end="1735:42"><expr pos:start="1735:21" pos:end="1735:41"><call pos:start="1735:21" pos:end="1735:41"><name pos:start="1735:21" pos:end="1735:29">store_reg</name><argument_list pos:start="1735:30" pos:end="1735:41">(<argument pos:start="1735:31" pos:end="1735:31"><expr pos:start="1735:31" pos:end="1735:31"><name pos:start="1735:31" pos:end="1735:31">s</name></expr></argument>, <argument pos:start="1735:34" pos:end="1735:35"><expr pos:start="1735:34" pos:end="1735:35"><name pos:start="1735:34" pos:end="1735:35">rd</name></expr></argument>, <argument pos:start="1735:38" pos:end="1735:40"><expr pos:start="1735:38" pos:end="1735:40"><name pos:start="1735:38" pos:end="1735:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1737:19" pos:end="1807:17">else <block pos:start="1737:24" pos:end="1807:17">{<block_content pos:start="1739:21" pos:end="1805:42">

                    <expr_stmt pos:start="1739:21" pos:end="1741:67"><expr pos:start="1739:21" pos:end="1741:66"><name pos:start="1739:21" pos:end="1739:23">imm</name> <operator pos:start="1739:25" pos:end="1739:25">=</operator> <operator pos:start="1739:27" pos:end="1739:27">(</operator><operator pos:start="1739:28" pos:end="1739:28">(</operator><name pos:start="1739:29" pos:end="1739:32">insn</name> <operator pos:start="1739:34" pos:end="1739:34">&amp;</operator> <literal type="number" pos:start="1739:36" pos:end="1739:45">0x04000000</literal><operator pos:start="1739:46" pos:end="1739:46">)</operator> <operator pos:start="1739:48" pos:end="1739:49">&gt;&gt;</operator> <literal type="number" pos:start="1739:51" pos:end="1739:52">15</literal><operator pos:start="1739:53" pos:end="1739:53">)</operator>

                          <operator pos:start="1741:27" pos:end="1741:27">|</operator> <operator pos:start="1741:29" pos:end="1741:29">(</operator><operator pos:start="1741:30" pos:end="1741:30">(</operator><name pos:start="1741:31" pos:end="1741:34">insn</name> <operator pos:start="1741:36" pos:end="1741:36">&amp;</operator> <literal type="number" pos:start="1741:38" pos:end="1741:43">0x7000</literal><operator pos:start="1741:44" pos:end="1741:44">)</operator> <operator pos:start="1741:46" pos:end="1741:47">&gt;&gt;</operator> <literal type="number" pos:start="1741:49" pos:end="1741:49">4</literal><operator pos:start="1741:50" pos:end="1741:50">)</operator> <operator pos:start="1741:52" pos:end="1741:52">|</operator> <operator pos:start="1741:54" pos:end="1741:54">(</operator><name pos:start="1741:55" pos:end="1741:58">insn</name> <operator pos:start="1741:60" pos:end="1741:60">&amp;</operator> <literal type="number" pos:start="1741:62" pos:end="1741:65">0xff</literal><operator pos:start="1741:66" pos:end="1741:66">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="1743:21" pos:end="1803:21"><if pos:start="1743:21" pos:end="1769:21">if <condition pos:start="1743:24" pos:end="1743:41">(<expr pos:start="1743:25" pos:end="1743:40"><name pos:start="1743:25" pos:end="1743:28">insn</name> <operator pos:start="1743:30" pos:end="1743:30">&amp;</operator> <operator pos:start="1743:32" pos:end="1743:32">(</operator><literal type="number" pos:start="1743:33" pos:end="1743:33">1</literal> <operator pos:start="1743:35" pos:end="1743:36">&lt;&lt;</operator> <literal type="number" pos:start="1743:38" pos:end="1743:39">22</literal><operator pos:start="1743:40" pos:end="1743:40">)</operator></expr>)</condition> <block pos:start="1743:43" pos:end="1769:21">{<block_content pos:start="1747:25" pos:end="1767:25">

                        <comment type="block" pos:start="1745:25" pos:end="1745:48">/* 16-bit immediate.  */</comment>

                        <expr_stmt pos:start="1747:25" pos:end="1747:52"><expr pos:start="1747:25" pos:end="1747:51"><name pos:start="1747:25" pos:end="1747:27">imm</name> <operator pos:start="1747:29" pos:end="1747:30">|=</operator> <operator pos:start="1747:32" pos:end="1747:32">(</operator><name pos:start="1747:33" pos:end="1747:36">insn</name> <operator pos:start="1747:38" pos:end="1747:39">&gt;&gt;</operator> <literal type="number" pos:start="1747:41" pos:end="1747:41">4</literal><operator pos:start="1747:42" pos:end="1747:42">)</operator> <operator pos:start="1747:44" pos:end="1747:44">&amp;</operator> <literal type="number" pos:start="1747:46" pos:end="1747:51">0xf000</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1749:25" pos:end="1767:25"><if pos:start="1749:25" pos:end="1759:25">if <condition pos:start="1749:28" pos:end="1749:45">(<expr pos:start="1749:29" pos:end="1749:44"><name pos:start="1749:29" pos:end="1749:32">insn</name> <operator pos:start="1749:34" pos:end="1749:34">&amp;</operator> <operator pos:start="1749:36" pos:end="1749:36">(</operator><literal type="number" pos:start="1749:37" pos:end="1749:37">1</literal> <operator pos:start="1749:39" pos:end="1749:40">&lt;&lt;</operator> <literal type="number" pos:start="1749:42" pos:end="1749:43">23</literal><operator pos:start="1749:44" pos:end="1749:44">)</operator></expr>)</condition> <block pos:start="1749:47" pos:end="1759:25">{<block_content pos:start="1753:29" pos:end="1757:65">

                            <comment type="block" pos:start="1751:29" pos:end="1751:38">/* movt */</comment>

                            <expr_stmt pos:start="1753:29" pos:end="1753:50"><expr pos:start="1753:29" pos:end="1753:49"><name pos:start="1753:29" pos:end="1753:31">tmp</name> <operator pos:start="1753:33" pos:end="1753:33">=</operator> <call pos:start="1753:35" pos:end="1753:49"><name pos:start="1753:35" pos:end="1753:42">load_reg</name><argument_list pos:start="1753:43" pos:end="1753:49">(<argument pos:start="1753:44" pos:end="1753:44"><expr pos:start="1753:44" pos:end="1753:44"><name pos:start="1753:44" pos:end="1753:44">s</name></expr></argument>, <argument pos:start="1753:47" pos:end="1753:48"><expr pos:start="1753:47" pos:end="1753:48"><name pos:start="1753:47" pos:end="1753:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1755:29" pos:end="1755:57"><expr pos:start="1755:29" pos:end="1755:56"><call pos:start="1755:29" pos:end="1755:56"><name pos:start="1755:29" pos:end="1755:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1755:47" pos:end="1755:56">(<argument pos:start="1755:48" pos:end="1755:50"><expr pos:start="1755:48" pos:end="1755:50"><name pos:start="1755:48" pos:end="1755:50">tmp</name></expr></argument>, <argument pos:start="1755:53" pos:end="1755:55"><expr pos:start="1755:53" pos:end="1755:55"><name pos:start="1755:53" pos:end="1755:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1757:29" pos:end="1757:65"><expr pos:start="1757:29" pos:end="1757:64"><call pos:start="1757:29" pos:end="1757:64"><name pos:start="1757:29" pos:end="1757:43">tcg_gen_ori_i32</name><argument_list pos:start="1757:44" pos:end="1757:64">(<argument pos:start="1757:45" pos:end="1757:47"><expr pos:start="1757:45" pos:end="1757:47"><name pos:start="1757:45" pos:end="1757:47">tmp</name></expr></argument>, <argument pos:start="1757:50" pos:end="1757:52"><expr pos:start="1757:50" pos:end="1757:52"><name pos:start="1757:50" pos:end="1757:52">tmp</name></expr></argument>, <argument pos:start="1757:55" pos:end="1757:63"><expr pos:start="1757:55" pos:end="1757:63"><name pos:start="1757:55" pos:end="1757:57">imm</name> <operator pos:start="1757:59" pos:end="1757:60">&lt;&lt;</operator> <literal type="number" pos:start="1757:62" pos:end="1757:63">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1759:27" pos:end="1767:25">else <block pos:start="1759:32" pos:end="1767:25">{<block_content pos:start="1763:29" pos:end="1765:55">

                            <comment type="block" pos:start="1761:29" pos:end="1761:38">/* movw */</comment>

                            <expr_stmt pos:start="1763:29" pos:end="1763:53"><expr pos:start="1763:29" pos:end="1763:52"><name pos:start="1763:29" pos:end="1763:31">tmp</name> <operator pos:start="1763:33" pos:end="1763:33">=</operator> <call pos:start="1763:35" pos:end="1763:52"><name pos:start="1763:35" pos:end="1763:50">tcg_temp_new_i32</name><argument_list pos:start="1763:51" pos:end="1763:52">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1765:29" pos:end="1765:55"><expr pos:start="1765:29" pos:end="1765:54"><call pos:start="1765:29" pos:end="1765:54"><name pos:start="1765:29" pos:end="1765:44">tcg_gen_movi_i32</name><argument_list pos:start="1765:45" pos:end="1765:54">(<argument pos:start="1765:46" pos:end="1765:48"><expr pos:start="1765:46" pos:end="1765:48"><name pos:start="1765:46" pos:end="1765:48">tmp</name></expr></argument>, <argument pos:start="1765:51" pos:end="1765:53"><expr pos:start="1765:51" pos:end="1765:53"><name pos:start="1765:51" pos:end="1765:53">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="1769:23" pos:end="1803:21">else <block pos:start="1769:28" pos:end="1803:21">{<block_content pos:start="1773:25" pos:end="1801:25">

                        <comment type="block" pos:start="1771:25" pos:end="1771:56">/* Add/sub 12-bit immediate.  */</comment>

                        <if_stmt pos:start="1773:25" pos:end="1801:25"><if pos:start="1773:25" pos:end="1789:25">if <condition pos:start="1773:28" pos:end="1773:37">(<expr pos:start="1773:29" pos:end="1773:36"><name pos:start="1773:29" pos:end="1773:30">rn</name> <operator pos:start="1773:32" pos:end="1773:33">==</operator> <literal type="number" pos:start="1773:35" pos:end="1773:36">15</literal></expr>)</condition> <block pos:start="1773:39" pos:end="1789:25">{<block_content pos:start="1775:29" pos:end="1787:58">

                            <expr_stmt pos:start="1775:29" pos:end="1775:58"><expr pos:start="1775:29" pos:end="1775:57"><name pos:start="1775:29" pos:end="1775:34">offset</name> <operator pos:start="1775:36" pos:end="1775:36">=</operator> <name pos:start="1775:38" pos:end="1775:42"><name pos:start="1775:38" pos:end="1775:38">s</name><operator pos:start="1775:39" pos:end="1775:40">-&gt;</operator><name pos:start="1775:41" pos:end="1775:42">pc</name></name> <operator pos:start="1775:44" pos:end="1775:44">&amp;</operator> <operator pos:start="1775:46" pos:end="1775:46">~</operator><operator pos:start="1775:47" pos:end="1775:47">(</operator><name pos:start="1775:48" pos:end="1775:55">uint32_t</name><operator pos:start="1775:56" pos:end="1775:56">)</operator><literal type="number" pos:start="1775:57" pos:end="1775:57">3</literal></expr>;</expr_stmt>

                            <if_stmt pos:start="1777:29" pos:end="1783:46"><if pos:start="1777:29" pos:end="1779:46">if <condition pos:start="1777:32" pos:end="1777:49">(<expr pos:start="1777:33" pos:end="1777:48"><name pos:start="1777:33" pos:end="1777:36">insn</name> <operator pos:start="1777:38" pos:end="1777:38">&amp;</operator> <operator pos:start="1777:40" pos:end="1777:40">(</operator><literal type="number" pos:start="1777:41" pos:end="1777:41">1</literal> <operator pos:start="1777:43" pos:end="1777:44">&lt;&lt;</operator> <literal type="number" pos:start="1777:46" pos:end="1777:47">23</literal><operator pos:start="1777:48" pos:end="1777:48">)</operator></expr>)</condition><block type="pseudo" pos:start="1779:33" pos:end="1779:46"><block_content pos:start="1779:33" pos:end="1779:46">

                                <expr_stmt pos:start="1779:33" pos:end="1779:46"><expr pos:start="1779:33" pos:end="1779:45"><name pos:start="1779:33" pos:end="1779:38">offset</name> <operator pos:start="1779:40" pos:end="1779:41">-=</operator> <name pos:start="1779:43" pos:end="1779:45">imm</name></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1781:29" pos:end="1783:46">else<block type="pseudo" pos:start="1783:33" pos:end="1783:46"><block_content pos:start="1783:33" pos:end="1783:46">

                                <expr_stmt pos:start="1783:33" pos:end="1783:46"><expr pos:start="1783:33" pos:end="1783:45"><name pos:start="1783:33" pos:end="1783:38">offset</name> <operator pos:start="1783:40" pos:end="1783:41">+=</operator> <name pos:start="1783:43" pos:end="1783:45">imm</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            <expr_stmt pos:start="1785:29" pos:end="1785:53"><expr pos:start="1785:29" pos:end="1785:52"><name pos:start="1785:29" pos:end="1785:31">tmp</name> <operator pos:start="1785:33" pos:end="1785:33">=</operator> <call pos:start="1785:35" pos:end="1785:52"><name pos:start="1785:35" pos:end="1785:50">tcg_temp_new_i32</name><argument_list pos:start="1785:51" pos:end="1785:52">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1787:29" pos:end="1787:58"><expr pos:start="1787:29" pos:end="1787:57"><call pos:start="1787:29" pos:end="1787:57"><name pos:start="1787:29" pos:end="1787:44">tcg_gen_movi_i32</name><argument_list pos:start="1787:45" pos:end="1787:57">(<argument pos:start="1787:46" pos:end="1787:48"><expr pos:start="1787:46" pos:end="1787:48"><name pos:start="1787:46" pos:end="1787:48">tmp</name></expr></argument>, <argument pos:start="1787:51" pos:end="1787:56"><expr pos:start="1787:51" pos:end="1787:56"><name pos:start="1787:51" pos:end="1787:56">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1789:27" pos:end="1801:25">else <block pos:start="1789:32" pos:end="1801:25">{<block_content pos:start="1791:29" pos:end="1799:64">

                            <expr_stmt pos:start="1791:29" pos:end="1791:50"><expr pos:start="1791:29" pos:end="1791:49"><name pos:start="1791:29" pos:end="1791:31">tmp</name> <operator pos:start="1791:33" pos:end="1791:33">=</operator> <call pos:start="1791:35" pos:end="1791:49"><name pos:start="1791:35" pos:end="1791:42">load_reg</name><argument_list pos:start="1791:43" pos:end="1791:49">(<argument pos:start="1791:44" pos:end="1791:44"><expr pos:start="1791:44" pos:end="1791:44"><name pos:start="1791:44" pos:end="1791:44">s</name></expr></argument>, <argument pos:start="1791:47" pos:end="1791:48"><expr pos:start="1791:47" pos:end="1791:48"><name pos:start="1791:47" pos:end="1791:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="1793:29" pos:end="1799:64"><if pos:start="1793:29" pos:end="1795:64">if <condition pos:start="1793:32" pos:end="1793:49">(<expr pos:start="1793:33" pos:end="1793:48"><name pos:start="1793:33" pos:end="1793:36">insn</name> <operator pos:start="1793:38" pos:end="1793:38">&amp;</operator> <operator pos:start="1793:40" pos:end="1793:40">(</operator><literal type="number" pos:start="1793:41" pos:end="1793:41">1</literal> <operator pos:start="1793:43" pos:end="1793:44">&lt;&lt;</operator> <literal type="number" pos:start="1793:46" pos:end="1793:47">23</literal><operator pos:start="1793:48" pos:end="1793:48">)</operator></expr>)</condition><block type="pseudo" pos:start="1795:33" pos:end="1795:64"><block_content pos:start="1795:33" pos:end="1795:64">

                                <expr_stmt pos:start="1795:33" pos:end="1795:64"><expr pos:start="1795:33" pos:end="1795:63"><call pos:start="1795:33" pos:end="1795:63"><name pos:start="1795:33" pos:end="1795:48">tcg_gen_subi_i32</name><argument_list pos:start="1795:49" pos:end="1795:63">(<argument pos:start="1795:50" pos:end="1795:52"><expr pos:start="1795:50" pos:end="1795:52"><name pos:start="1795:50" pos:end="1795:52">tmp</name></expr></argument>, <argument pos:start="1795:55" pos:end="1795:57"><expr pos:start="1795:55" pos:end="1795:57"><name pos:start="1795:55" pos:end="1795:57">tmp</name></expr></argument>, <argument pos:start="1795:60" pos:end="1795:62"><expr pos:start="1795:60" pos:end="1795:62"><name pos:start="1795:60" pos:end="1795:62">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1797:29" pos:end="1799:64">else<block type="pseudo" pos:start="1799:33" pos:end="1799:64"><block_content pos:start="1799:33" pos:end="1799:64">

                                <expr_stmt pos:start="1799:33" pos:end="1799:64"><expr pos:start="1799:33" pos:end="1799:63"><call pos:start="1799:33" pos:end="1799:63"><name pos:start="1799:33" pos:end="1799:48">tcg_gen_addi_i32</name><argument_list pos:start="1799:49" pos:end="1799:63">(<argument pos:start="1799:50" pos:end="1799:52"><expr pos:start="1799:50" pos:end="1799:52"><name pos:start="1799:50" pos:end="1799:52">tmp</name></expr></argument>, <argument pos:start="1799:55" pos:end="1799:57"><expr pos:start="1799:55" pos:end="1799:57"><name pos:start="1799:55" pos:end="1799:57">tmp</name></expr></argument>, <argument pos:start="1799:60" pos:end="1799:62"><expr pos:start="1799:60" pos:end="1799:62"><name pos:start="1799:60" pos:end="1799:62">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1805:21" pos:end="1805:42"><expr pos:start="1805:21" pos:end="1805:41"><call pos:start="1805:21" pos:end="1805:41"><name pos:start="1805:21" pos:end="1805:29">store_reg</name><argument_list pos:start="1805:30" pos:end="1805:41">(<argument pos:start="1805:31" pos:end="1805:31"><expr pos:start="1805:31" pos:end="1805:31"><name pos:start="1805:31" pos:end="1805:31">s</name></expr></argument>, <argument pos:start="1805:34" pos:end="1805:35"><expr pos:start="1805:34" pos:end="1805:35"><name pos:start="1805:34" pos:end="1805:35">rd</name></expr></argument>, <argument pos:start="1805:38" pos:end="1805:40"><expr pos:start="1805:38" pos:end="1805:40"><name pos:start="1805:38" pos:end="1805:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1809:15" pos:end="1903:13">else <block pos:start="1809:20" pos:end="1903:13">{<block_content pos:start="1811:17" pos:end="1901:17">

                <decl_stmt pos:start="1811:17" pos:end="1811:36"><decl pos:start="1811:17" pos:end="1811:35"><type pos:start="1811:17" pos:end="1811:19"><name pos:start="1811:17" pos:end="1811:19">int</name></type> <name pos:start="1811:21" pos:end="1811:31">shifter_out</name> <init pos:start="1811:33" pos:end="1811:35">= <expr pos:start="1811:35" pos:end="1811:35"><literal type="number" pos:start="1811:35" pos:end="1811:35">0</literal></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="1813:17" pos:end="1813:49">/* modified 12-bit immediate.  */</comment>

                <expr_stmt pos:start="1815:17" pos:end="1815:78"><expr pos:start="1815:17" pos:end="1815:77"><name pos:start="1815:17" pos:end="1815:21">shift</name> <operator pos:start="1815:23" pos:end="1815:23">=</operator> <operator pos:start="1815:25" pos:end="1815:25">(</operator><operator pos:start="1815:26" pos:end="1815:26">(</operator><name pos:start="1815:27" pos:end="1815:30">insn</name> <operator pos:start="1815:32" pos:end="1815:32">&amp;</operator> <literal type="number" pos:start="1815:34" pos:end="1815:43">0x04000000</literal><operator pos:start="1815:44" pos:end="1815:44">)</operator> <operator pos:start="1815:46" pos:end="1815:47">&gt;&gt;</operator> <literal type="number" pos:start="1815:49" pos:end="1815:50">23</literal><operator pos:start="1815:51" pos:end="1815:51">)</operator> <operator pos:start="1815:53" pos:end="1815:53">|</operator> <operator pos:start="1815:55" pos:end="1815:55">(</operator><operator pos:start="1815:56" pos:end="1815:56">(</operator><name pos:start="1815:57" pos:end="1815:60">insn</name> <operator pos:start="1815:62" pos:end="1815:62">&amp;</operator> <literal type="number" pos:start="1815:64" pos:end="1815:69">0x7000</literal><operator pos:start="1815:70" pos:end="1815:70">)</operator> <operator pos:start="1815:72" pos:end="1815:73">&gt;&gt;</operator> <literal type="number" pos:start="1815:75" pos:end="1815:76">12</literal><operator pos:start="1815:77" pos:end="1815:77">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="1817:17" pos:end="1817:36"><expr pos:start="1817:17" pos:end="1817:35"><name pos:start="1817:17" pos:end="1817:19">imm</name> <operator pos:start="1817:21" pos:end="1817:21">=</operator> <operator pos:start="1817:23" pos:end="1817:23">(</operator><name pos:start="1817:24" pos:end="1817:27">insn</name> <operator pos:start="1817:29" pos:end="1817:29">&amp;</operator> <literal type="number" pos:start="1817:31" pos:end="1817:34">0xff</literal><operator pos:start="1817:35" pos:end="1817:35">)</operator></expr>;</expr_stmt>

                <switch pos:start="1819:17" pos:end="1861:17">switch <condition pos:start="1819:24" pos:end="1819:30">(<expr pos:start="1819:25" pos:end="1819:29"><name pos:start="1819:25" pos:end="1819:29">shift</name></expr>)</condition> <block pos:start="1819:32" pos:end="1861:17">{<block_content pos:start="1821:17" pos:end="1859:26">

                <case pos:start="1821:17" pos:end="1821:23">case <expr pos:start="1821:22" pos:end="1821:22"><literal type="number" pos:start="1821:22" pos:end="1821:22">0</literal></expr>:</case> <comment type="block" pos:start="1821:25" pos:end="1821:32">/* XY */</comment>

                    <comment type="block" pos:start="1823:21" pos:end="1823:41">/* Nothing to do.  */</comment>

                    <break pos:start="1825:21" pos:end="1825:26">break;</break>

                <case pos:start="1827:17" pos:end="1827:23">case <expr pos:start="1827:22" pos:end="1827:22"><literal type="number" pos:start="1827:22" pos:end="1827:22">1</literal></expr>:</case> <comment type="block" pos:start="1827:25" pos:end="1827:38">/* 00XY00XY */</comment>

                    <expr_stmt pos:start="1829:21" pos:end="1829:37"><expr pos:start="1829:21" pos:end="1829:36"><name pos:start="1829:21" pos:end="1829:23">imm</name> <operator pos:start="1829:25" pos:end="1829:26">|=</operator> <name pos:start="1829:28" pos:end="1829:30">imm</name> <operator pos:start="1829:32" pos:end="1829:33">&lt;&lt;</operator> <literal type="number" pos:start="1829:35" pos:end="1829:36">16</literal></expr>;</expr_stmt>

                    <break pos:start="1831:21" pos:end="1831:26">break;</break>

                <case pos:start="1833:17" pos:end="1833:23">case <expr pos:start="1833:22" pos:end="1833:22"><literal type="number" pos:start="1833:22" pos:end="1833:22">2</literal></expr>:</case> <comment type="block" pos:start="1833:25" pos:end="1833:38">/* XY00XY00 */</comment>

                    <expr_stmt pos:start="1835:21" pos:end="1835:37"><expr pos:start="1835:21" pos:end="1835:36"><name pos:start="1835:21" pos:end="1835:23">imm</name> <operator pos:start="1835:25" pos:end="1835:26">|=</operator> <name pos:start="1835:28" pos:end="1835:30">imm</name> <operator pos:start="1835:32" pos:end="1835:33">&lt;&lt;</operator> <literal type="number" pos:start="1835:35" pos:end="1835:36">16</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1837:21" pos:end="1837:30"><expr pos:start="1837:21" pos:end="1837:29"><name pos:start="1837:21" pos:end="1837:23">imm</name> <operator pos:start="1837:25" pos:end="1837:27">&lt;&lt;=</operator> <literal type="number" pos:start="1837:29" pos:end="1837:29">8</literal></expr>;</expr_stmt>

                    <break pos:start="1839:21" pos:end="1839:26">break;</break>

                <case pos:start="1841:17" pos:end="1841:23">case <expr pos:start="1841:22" pos:end="1841:22"><literal type="number" pos:start="1841:22" pos:end="1841:22">3</literal></expr>:</case> <comment type="block" pos:start="1841:25" pos:end="1841:38">/* XYXYXYXY */</comment>

                    <expr_stmt pos:start="1843:21" pos:end="1843:37"><expr pos:start="1843:21" pos:end="1843:36"><name pos:start="1843:21" pos:end="1843:23">imm</name> <operator pos:start="1843:25" pos:end="1843:26">|=</operator> <name pos:start="1843:28" pos:end="1843:30">imm</name> <operator pos:start="1843:32" pos:end="1843:33">&lt;&lt;</operator> <literal type="number" pos:start="1843:35" pos:end="1843:36">16</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1845:21" pos:end="1845:36"><expr pos:start="1845:21" pos:end="1845:35"><name pos:start="1845:21" pos:end="1845:23">imm</name> <operator pos:start="1845:25" pos:end="1845:26">|=</operator> <name pos:start="1845:28" pos:end="1845:30">imm</name> <operator pos:start="1845:32" pos:end="1845:33">&lt;&lt;</operator> <literal type="number" pos:start="1845:35" pos:end="1845:35">8</literal></expr>;</expr_stmt>

                    <break pos:start="1847:21" pos:end="1847:26">break;</break>

                <default pos:start="1849:17" pos:end="1849:24">default:</default> <comment type="block" pos:start="1849:26" pos:end="1849:49">/* Rotated constant.  */</comment>

                    <expr_stmt pos:start="1851:21" pos:end="1851:54"><expr pos:start="1851:21" pos:end="1851:53"><name pos:start="1851:21" pos:end="1851:25">shift</name> <operator pos:start="1851:27" pos:end="1851:27">=</operator> <operator pos:start="1851:29" pos:end="1851:29">(</operator><name pos:start="1851:30" pos:end="1851:34">shift</name> <operator pos:start="1851:36" pos:end="1851:37">&lt;&lt;</operator> <literal type="number" pos:start="1851:39" pos:end="1851:39">1</literal><operator pos:start="1851:40" pos:end="1851:40">)</operator> <operator pos:start="1851:42" pos:end="1851:42">|</operator> <operator pos:start="1851:44" pos:end="1851:44">(</operator><name pos:start="1851:45" pos:end="1851:47">imm</name> <operator pos:start="1851:49" pos:end="1851:50">&gt;&gt;</operator> <literal type="number" pos:start="1851:52" pos:end="1851:52">7</literal><operator pos:start="1851:53" pos:end="1851:53">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="1853:21" pos:end="1853:32"><expr pos:start="1853:21" pos:end="1853:31"><name pos:start="1853:21" pos:end="1853:23">imm</name> <operator pos:start="1853:25" pos:end="1853:26">|=</operator> <literal type="number" pos:start="1853:28" pos:end="1853:31">0x80</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1855:21" pos:end="1855:46"><expr pos:start="1855:21" pos:end="1855:45"><name pos:start="1855:21" pos:end="1855:23">imm</name> <operator pos:start="1855:25" pos:end="1855:25">=</operator> <name pos:start="1855:27" pos:end="1855:29">imm</name> <operator pos:start="1855:31" pos:end="1855:32">&lt;&lt;</operator> <operator pos:start="1855:34" pos:end="1855:34">(</operator><literal type="number" pos:start="1855:35" pos:end="1855:38">32</literal> <operator pos:start="1855:38" pos:end="1855:38">-</operator> <name pos:start="1855:40" pos:end="1855:44">shift</name><operator pos:start="1855:45" pos:end="1855:45">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="1857:21" pos:end="1857:36"><expr pos:start="1857:21" pos:end="1857:35"><name pos:start="1857:21" pos:end="1857:31">shifter_out</name> <operator pos:start="1857:33" pos:end="1857:33">=</operator> <literal type="number" pos:start="1857:35" pos:end="1857:35">1</literal></expr>;</expr_stmt>

                    <break pos:start="1859:21" pos:end="1859:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="1863:17" pos:end="1863:42"><expr pos:start="1863:17" pos:end="1863:41"><name pos:start="1863:17" pos:end="1863:20">tmp2</name> <operator pos:start="1863:22" pos:end="1863:22">=</operator> <call pos:start="1863:24" pos:end="1863:41"><name pos:start="1863:24" pos:end="1863:39">tcg_temp_new_i32</name><argument_list pos:start="1863:40" pos:end="1863:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1865:17" pos:end="1865:44"><expr pos:start="1865:17" pos:end="1865:43"><call pos:start="1865:17" pos:end="1865:43"><name pos:start="1865:17" pos:end="1865:32">tcg_gen_movi_i32</name><argument_list pos:start="1865:33" pos:end="1865:43">(<argument pos:start="1865:34" pos:end="1865:37"><expr pos:start="1865:34" pos:end="1865:37"><name pos:start="1865:34" pos:end="1865:37">tmp2</name></expr></argument>, <argument pos:start="1865:40" pos:end="1865:42"><expr pos:start="1865:40" pos:end="1865:42"><name pos:start="1865:40" pos:end="1865:42">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1867:17" pos:end="1867:40"><expr pos:start="1867:17" pos:end="1867:39"><name pos:start="1867:17" pos:end="1867:18">rn</name> <operator pos:start="1867:20" pos:end="1867:20">=</operator> <operator pos:start="1867:22" pos:end="1867:22">(</operator><name pos:start="1867:23" pos:end="1867:26">insn</name> <operator pos:start="1867:28" pos:end="1867:29">&gt;&gt;</operator> <literal type="number" pos:start="1867:31" pos:end="1867:32">16</literal><operator pos:start="1867:33" pos:end="1867:33">)</operator> <operator pos:start="1867:35" pos:end="1867:35">&amp;</operator> <literal type="number" pos:start="1867:37" pos:end="1867:39">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1869:17" pos:end="1879:17"><if pos:start="1869:17" pos:end="1875:17">if <condition pos:start="1869:20" pos:end="1869:29">(<expr pos:start="1869:21" pos:end="1869:28"><name pos:start="1869:21" pos:end="1869:22">rn</name> <operator pos:start="1869:24" pos:end="1869:25">==</operator> <literal type="number" pos:start="1869:27" pos:end="1869:28">15</literal></expr>)</condition> <block pos:start="1869:31" pos:end="1875:17">{<block_content pos:start="1871:21" pos:end="1873:45">

                    <expr_stmt pos:start="1871:21" pos:end="1871:45"><expr pos:start="1871:21" pos:end="1871:44"><name pos:start="1871:21" pos:end="1871:23">tmp</name> <operator pos:start="1871:25" pos:end="1871:25">=</operator> <call pos:start="1871:27" pos:end="1871:44"><name pos:start="1871:27" pos:end="1871:42">tcg_temp_new_i32</name><argument_list pos:start="1871:43" pos:end="1871:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1873:21" pos:end="1873:45"><expr pos:start="1873:21" pos:end="1873:44"><call pos:start="1873:21" pos:end="1873:44"><name pos:start="1873:21" pos:end="1873:36">tcg_gen_movi_i32</name><argument_list pos:start="1873:37" pos:end="1873:44">(<argument pos:start="1873:38" pos:end="1873:40"><expr pos:start="1873:38" pos:end="1873:40"><name pos:start="1873:38" pos:end="1873:40">tmp</name></expr></argument>, <argument pos:start="1873:43" pos:end="1873:43"><expr pos:start="1873:43" pos:end="1873:43"><literal type="number" pos:start="1873:43" pos:end="1873:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1875:19" pos:end="1879:17">else <block pos:start="1875:24" pos:end="1879:17">{<block_content pos:start="1877:21" pos:end="1877:42">

                    <expr_stmt pos:start="1877:21" pos:end="1877:42"><expr pos:start="1877:21" pos:end="1877:41"><name pos:start="1877:21" pos:end="1877:23">tmp</name> <operator pos:start="1877:25" pos:end="1877:25">=</operator> <call pos:start="1877:27" pos:end="1877:41"><name pos:start="1877:27" pos:end="1877:34">load_reg</name><argument_list pos:start="1877:35" pos:end="1877:41">(<argument pos:start="1877:36" pos:end="1877:36"><expr pos:start="1877:36" pos:end="1877:36"><name pos:start="1877:36" pos:end="1877:36">s</name></expr></argument>, <argument pos:start="1877:39" pos:end="1877:40"><expr pos:start="1877:39" pos:end="1877:40"><name pos:start="1877:39" pos:end="1877:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1881:17" pos:end="1881:40"><expr pos:start="1881:17" pos:end="1881:39"><name pos:start="1881:17" pos:end="1881:18">op</name> <operator pos:start="1881:20" pos:end="1881:20">=</operator> <operator pos:start="1881:22" pos:end="1881:22">(</operator><name pos:start="1881:23" pos:end="1881:26">insn</name> <operator pos:start="1881:28" pos:end="1881:29">&gt;&gt;</operator> <literal type="number" pos:start="1881:31" pos:end="1881:32">21</literal><operator pos:start="1881:33" pos:end="1881:33">)</operator> <operator pos:start="1881:35" pos:end="1881:35">&amp;</operator> <literal type="number" pos:start="1881:37" pos:end="1881:39">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1883:17" pos:end="1887:36"><if pos:start="1883:17" pos:end="1887:36">if <condition pos:start="1883:20" pos:end="1885:63">(<expr pos:start="1883:21" pos:end="1885:62"><call pos:start="1883:21" pos:end="1885:62"><name pos:start="1883:21" pos:end="1883:38">gen_thumb2_data_op</name><argument_list pos:start="1883:39" pos:end="1885:62">(<argument pos:start="1883:40" pos:end="1883:40"><expr pos:start="1883:40" pos:end="1883:40"><name pos:start="1883:40" pos:end="1883:40">s</name></expr></argument>, <argument pos:start="1883:43" pos:end="1883:44"><expr pos:start="1883:43" pos:end="1883:44"><name pos:start="1883:43" pos:end="1883:44">op</name></expr></argument>, <argument pos:start="1883:47" pos:end="1883:69"><expr pos:start="1883:47" pos:end="1883:69"><operator pos:start="1883:47" pos:end="1883:47">(</operator><name pos:start="1883:48" pos:end="1883:51">insn</name> <operator pos:start="1883:53" pos:end="1883:53">&amp;</operator> <operator pos:start="1883:55" pos:end="1883:55">(</operator><literal type="number" pos:start="1883:56" pos:end="1883:56">1</literal> <operator pos:start="1883:58" pos:end="1883:59">&lt;&lt;</operator> <literal type="number" pos:start="1883:61" pos:end="1883:62">20</literal><operator pos:start="1883:63" pos:end="1883:63">)</operator><operator pos:start="1883:64" pos:end="1883:64">)</operator> <operator pos:start="1883:66" pos:end="1883:67">!=</operator> <literal type="number" pos:start="1883:69" pos:end="1883:69">0</literal></expr></argument>,

                                       <argument pos:start="1885:40" pos:end="1885:50"><expr pos:start="1885:40" pos:end="1885:50"><name pos:start="1885:40" pos:end="1885:50">shifter_out</name></expr></argument>, <argument pos:start="1885:53" pos:end="1885:55"><expr pos:start="1885:53" pos:end="1885:55"><name pos:start="1885:53" pos:end="1885:55">tmp</name></expr></argument>, <argument pos:start="1885:58" pos:end="1885:61"><expr pos:start="1885:58" pos:end="1885:61"><name pos:start="1885:58" pos:end="1885:61">tmp2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1887:21" pos:end="1887:36"><block_content pos:start="1887:21" pos:end="1887:36">

                    <goto pos:start="1887:21" pos:end="1887:36">goto <name pos:start="1887:26" pos:end="1887:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1889:17" pos:end="1889:40"><expr pos:start="1889:17" pos:end="1889:39"><call pos:start="1889:17" pos:end="1889:39"><name pos:start="1889:17" pos:end="1889:33">tcg_temp_free_i32</name><argument_list pos:start="1889:34" pos:end="1889:39">(<argument pos:start="1889:35" pos:end="1889:38"><expr pos:start="1889:35" pos:end="1889:38"><name pos:start="1889:35" pos:end="1889:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1891:17" pos:end="1891:39"><expr pos:start="1891:17" pos:end="1891:38"><name pos:start="1891:17" pos:end="1891:18">rd</name> <operator pos:start="1891:20" pos:end="1891:20">=</operator> <operator pos:start="1891:22" pos:end="1891:22">(</operator><name pos:start="1891:23" pos:end="1891:26">insn</name> <operator pos:start="1891:28" pos:end="1891:29">&gt;&gt;</operator> <literal type="number" pos:start="1891:31" pos:end="1891:31">8</literal><operator pos:start="1891:32" pos:end="1891:32">)</operator> <operator pos:start="1891:34" pos:end="1891:34">&amp;</operator> <literal type="number" pos:start="1891:36" pos:end="1891:38">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1893:17" pos:end="1901:17"><if pos:start="1893:17" pos:end="1897:17">if <condition pos:start="1893:20" pos:end="1893:29">(<expr pos:start="1893:21" pos:end="1893:28"><name pos:start="1893:21" pos:end="1893:22">rd</name> <operator pos:start="1893:24" pos:end="1893:25">!=</operator> <literal type="number" pos:start="1893:27" pos:end="1893:28">15</literal></expr>)</condition> <block pos:start="1893:31" pos:end="1897:17">{<block_content pos:start="1895:21" pos:end="1895:42">

                    <expr_stmt pos:start="1895:21" pos:end="1895:42"><expr pos:start="1895:21" pos:end="1895:41"><call pos:start="1895:21" pos:end="1895:41"><name pos:start="1895:21" pos:end="1895:29">store_reg</name><argument_list pos:start="1895:30" pos:end="1895:41">(<argument pos:start="1895:31" pos:end="1895:31"><expr pos:start="1895:31" pos:end="1895:31"><name pos:start="1895:31" pos:end="1895:31">s</name></expr></argument>, <argument pos:start="1895:34" pos:end="1895:35"><expr pos:start="1895:34" pos:end="1895:35"><name pos:start="1895:34" pos:end="1895:35">rd</name></expr></argument>, <argument pos:start="1895:38" pos:end="1895:40"><expr pos:start="1895:38" pos:end="1895:40"><name pos:start="1895:38" pos:end="1895:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1897:19" pos:end="1901:17">else <block pos:start="1897:24" pos:end="1901:17">{<block_content pos:start="1899:21" pos:end="1899:43">

                    <expr_stmt pos:start="1899:21" pos:end="1899:43"><expr pos:start="1899:21" pos:end="1899:42"><call pos:start="1899:21" pos:end="1899:42"><name pos:start="1899:21" pos:end="1899:37">tcg_temp_free_i32</name><argument_list pos:start="1899:38" pos:end="1899:42">(<argument pos:start="1899:39" pos:end="1899:41"><expr pos:start="1899:39" pos:end="1899:41"><name pos:start="1899:39" pos:end="1899:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1907:9" pos:end="1907:14">break;</break>

    <case pos:start="1909:5" pos:end="1909:12">case <expr pos:start="1909:10" pos:end="1909:11"><literal type="number" pos:start="1909:10" pos:end="1909:11">12</literal></expr>:</case> <comment type="block" pos:start="1909:14" pos:end="1909:48">/* Load/store single data item.  */</comment>

        <block pos:start="1911:9" pos:end="2235:9">{<block_content pos:start="1913:9" pos:end="2233:9">

        <decl_stmt pos:start="1913:9" pos:end="1913:24"><decl pos:start="1913:9" pos:end="1913:23"><type pos:start="1913:9" pos:end="1913:11"><name pos:start="1913:9" pos:end="1913:11">int</name></type> <name pos:start="1913:13" pos:end="1913:19">postinc</name> <init pos:start="1913:21" pos:end="1913:23">= <expr pos:start="1913:23" pos:end="1913:23"><literal type="number" pos:start="1913:23" pos:end="1913:23">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="1915:9" pos:end="1915:26"><decl pos:start="1915:9" pos:end="1915:25"><type pos:start="1915:9" pos:end="1915:11"><name pos:start="1915:9" pos:end="1915:11">int</name></type> <name pos:start="1915:13" pos:end="1915:21">writeback</name> <init pos:start="1915:23" pos:end="1915:25">= <expr pos:start="1915:25" pos:end="1915:25"><literal type="number" pos:start="1915:25" pos:end="1915:25">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="1917:9" pos:end="1917:17"><decl pos:start="1917:9" pos:end="1917:16"><type pos:start="1917:9" pos:end="1917:11"><name pos:start="1917:9" pos:end="1917:11">int</name></type> <name pos:start="1917:13" pos:end="1917:16">user</name></decl>;</decl_stmt>

        <if_stmt pos:start="1919:9" pos:end="1927:9"><if pos:start="1919:9" pos:end="1927:9">if <condition pos:start="1919:12" pos:end="1919:46">(<expr pos:start="1919:13" pos:end="1919:45"><operator pos:start="1919:13" pos:end="1919:13">(</operator><name pos:start="1919:14" pos:end="1919:17">insn</name> <operator pos:start="1919:19" pos:end="1919:19">&amp;</operator> <literal type="number" pos:start="1919:21" pos:end="1919:30">0x01100000</literal><operator pos:start="1919:31" pos:end="1919:31">)</operator> <operator pos:start="1919:33" pos:end="1919:34">==</operator> <literal type="number" pos:start="1919:36" pos:end="1919:45">0x01000000</literal></expr>)</condition> <block pos:start="1919:48" pos:end="1927:9">{<block_content pos:start="1921:13" pos:end="1925:18">

            <if_stmt pos:start="1921:13" pos:end="1923:32"><if pos:start="1921:13" pos:end="1923:32">if <condition pos:start="1921:16" pos:end="1921:49">(<expr pos:start="1921:17" pos:end="1921:48"><call pos:start="1921:17" pos:end="1921:48"><name pos:start="1921:17" pos:end="1921:34">disas_neon_ls_insn</name><argument_list pos:start="1921:35" pos:end="1921:48">(<argument pos:start="1921:36" pos:end="1921:38"><expr pos:start="1921:36" pos:end="1921:38"><name pos:start="1921:36" pos:end="1921:38">env</name></expr></argument>, <argument pos:start="1921:41" pos:end="1921:41"><expr pos:start="1921:41" pos:end="1921:41"><name pos:start="1921:41" pos:end="1921:41">s</name></expr></argument>, <argument pos:start="1921:44" pos:end="1921:47"><expr pos:start="1921:44" pos:end="1921:47"><name pos:start="1921:44" pos:end="1921:47">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1923:17" pos:end="1923:32"><block_content pos:start="1923:17" pos:end="1923:32">

                <goto pos:start="1923:17" pos:end="1923:32">goto <name pos:start="1923:22" pos:end="1923:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="1925:13" pos:end="1925:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1929:9" pos:end="1929:53"><expr pos:start="1929:9" pos:end="1929:52"><name pos:start="1929:9" pos:end="1929:10">op</name> <operator pos:start="1929:12" pos:end="1929:12">=</operator> <operator pos:start="1929:14" pos:end="1929:14">(</operator><operator pos:start="1929:15" pos:end="1929:15">(</operator><name pos:start="1929:16" pos:end="1929:19">insn</name> <operator pos:start="1929:21" pos:end="1929:22">&gt;&gt;</operator> <literal type="number" pos:start="1929:24" pos:end="1929:25">21</literal><operator pos:start="1929:26" pos:end="1929:26">)</operator> <operator pos:start="1929:28" pos:end="1929:28">&amp;</operator> <literal type="number" pos:start="1929:30" pos:end="1929:30">3</literal><operator pos:start="1929:31" pos:end="1929:31">)</operator> <operator pos:start="1929:33" pos:end="1929:33">|</operator> <operator pos:start="1929:35" pos:end="1929:35">(</operator><operator pos:start="1929:36" pos:end="1929:36">(</operator><name pos:start="1929:37" pos:end="1929:40">insn</name> <operator pos:start="1929:42" pos:end="1929:43">&gt;&gt;</operator> <literal type="number" pos:start="1929:45" pos:end="1929:46">22</literal><operator pos:start="1929:47" pos:end="1929:47">)</operator> <operator pos:start="1929:49" pos:end="1929:49">&amp;</operator> <literal type="number" pos:start="1929:51" pos:end="1929:51">4</literal><operator pos:start="1929:52" pos:end="1929:52">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="1931:9" pos:end="2003:9"><if pos:start="1931:9" pos:end="2003:9">if <condition pos:start="1931:12" pos:end="1931:21">(<expr pos:start="1931:13" pos:end="1931:20"><name pos:start="1931:13" pos:end="1931:14">rs</name> <operator pos:start="1931:16" pos:end="1931:17">==</operator> <literal type="number" pos:start="1931:19" pos:end="1931:20">15</literal></expr>)</condition> <block pos:start="1931:23" pos:end="2003:9">{<block_content pos:start="1933:13" pos:end="2001:13">

            <if_stmt pos:start="1933:13" pos:end="1937:13"><if pos:start="1933:13" pos:end="1937:13">if <condition pos:start="1933:16" pos:end="1933:36">(<expr pos:start="1933:17" pos:end="1933:35"><operator pos:start="1933:17" pos:end="1933:17">!</operator><operator pos:start="1933:18" pos:end="1933:18">(</operator><name pos:start="1933:19" pos:end="1933:22">insn</name> <operator pos:start="1933:24" pos:end="1933:24">&amp;</operator> <operator pos:start="1933:26" pos:end="1933:26">(</operator><literal type="number" pos:start="1933:27" pos:end="1933:27">1</literal> <operator pos:start="1933:29" pos:end="1933:30">&lt;&lt;</operator> <literal type="number" pos:start="1933:32" pos:end="1933:33">20</literal><operator pos:start="1933:34" pos:end="1933:34">)</operator><operator pos:start="1933:35" pos:end="1933:35">)</operator></expr>)</condition> <block pos:start="1933:38" pos:end="1937:13">{<block_content pos:start="1935:17" pos:end="1935:32">

                <goto pos:start="1935:17" pos:end="1935:32">goto <name pos:start="1935:22" pos:end="1935:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1939:13" pos:end="2001:13"><if pos:start="1939:13" pos:end="2001:13">if <condition pos:start="1939:16" pos:end="1939:24">(<expr pos:start="1939:17" pos:end="1939:23"><name pos:start="1939:17" pos:end="1939:18">op</name> <operator pos:start="1939:20" pos:end="1939:21">!=</operator> <literal type="number" pos:start="1939:23" pos:end="1939:23">2</literal></expr>)</condition> <block pos:start="1939:26" pos:end="2001:13">{<block_content pos:start="1963:17" pos:end="1999:25">

                <comment type="block" pos:start="1941:17" pos:end="1961:19">/* Byte or halfword load space with dest == r15 : memory hints.

                 * Catch them early so we don't emit pointless addressing code.

                 * This space is a mix of:

                 *  PLD/PLDW/PLI,  which we implement as NOPs (note that unlike

                 *     the ARM encodings, PLDW space doesn't UNDEF for non-v7MP

                 *     cores)

                 *  unallocated hints, which must be treated as NOPs

                 *  UNPREDICTABLE space, which we NOP or UNDEF depending on

                 *     which is easiest for the decoding logic

                 *  Some space which must UNDEF

                 */</comment>

                <decl_stmt pos:start="1963:17" pos:end="1963:43"><decl pos:start="1963:17" pos:end="1963:42"><type pos:start="1963:17" pos:end="1963:19"><name pos:start="1963:17" pos:end="1963:19">int</name></type> <name pos:start="1963:21" pos:end="1963:23">op1</name> <init pos:start="1963:25" pos:end="1963:42">= <expr pos:start="1963:27" pos:end="1963:42"><operator pos:start="1963:27" pos:end="1963:27">(</operator><name pos:start="1963:28" pos:end="1963:31">insn</name> <operator pos:start="1963:33" pos:end="1963:34">&gt;&gt;</operator> <literal type="number" pos:start="1963:36" pos:end="1963:37">23</literal><operator pos:start="1963:38" pos:end="1963:38">)</operator> <operator pos:start="1963:40" pos:end="1963:40">&amp;</operator> <literal type="number" pos:start="1963:42" pos:end="1963:42">3</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1965:17" pos:end="1965:45"><decl pos:start="1965:17" pos:end="1965:44"><type pos:start="1965:17" pos:end="1965:19"><name pos:start="1965:17" pos:end="1965:19">int</name></type> <name pos:start="1965:21" pos:end="1965:23">op2</name> <init pos:start="1965:25" pos:end="1965:44">= <expr pos:start="1965:27" pos:end="1965:44"><operator pos:start="1965:27" pos:end="1965:27">(</operator><name pos:start="1965:28" pos:end="1965:31">insn</name> <operator pos:start="1965:33" pos:end="1965:34">&gt;&gt;</operator> <literal type="number" pos:start="1965:36" pos:end="1965:36">6</literal><operator pos:start="1965:37" pos:end="1965:37">)</operator> <operator pos:start="1965:39" pos:end="1965:39">&amp;</operator> <literal type="number" pos:start="1965:41" pos:end="1965:44">0x3f</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="1967:17" pos:end="1971:17"><if pos:start="1967:17" pos:end="1971:17">if <condition pos:start="1967:20" pos:end="1967:27">(<expr pos:start="1967:21" pos:end="1967:26"><name pos:start="1967:21" pos:end="1967:22">op</name> <operator pos:start="1967:24" pos:end="1967:24">&amp;</operator> <literal type="number" pos:start="1967:26" pos:end="1967:26">2</literal></expr>)</condition> <block pos:start="1967:29" pos:end="1971:17">{<block_content pos:start="1969:21" pos:end="1969:36">

                    <goto pos:start="1969:21" pos:end="1969:36">goto <name pos:start="1969:26" pos:end="1969:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1973:17" pos:end="1983:17"><if pos:start="1973:17" pos:end="1983:17">if <condition pos:start="1973:20" pos:end="1973:29">(<expr pos:start="1973:21" pos:end="1973:28"><name pos:start="1973:21" pos:end="1973:22">rn</name> <operator pos:start="1973:24" pos:end="1973:25">==</operator> <literal type="number" pos:start="1973:27" pos:end="1973:28">15</literal></expr>)</condition> <block pos:start="1973:31" pos:end="1983:17">{<block_content pos:start="1981:21" pos:end="1981:29">

                    <comment type="block" pos:start="1975:21" pos:end="1979:23">/* UNPREDICTABLE, unallocated hint or

                     * PLD/PLDW/PLI (literal)

                     */</comment>

                    <return pos:start="1981:21" pos:end="1981:29">return <expr pos:start="1981:28" pos:end="1981:28"><literal type="number" pos:start="1981:28" pos:end="1981:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1985:17" pos:end="1989:17"><if pos:start="1985:17" pos:end="1989:17">if <condition pos:start="1985:20" pos:end="1985:28">(<expr pos:start="1985:21" pos:end="1985:27"><name pos:start="1985:21" pos:end="1985:23">op1</name> <operator pos:start="1985:25" pos:end="1985:25">&amp;</operator> <literal type="number" pos:start="1985:27" pos:end="1985:27">1</literal></expr>)</condition> <block pos:start="1985:30" pos:end="1989:17">{<block_content pos:start="1987:21" pos:end="1987:29">

                    <return pos:start="1987:21" pos:end="1987:29">return <expr pos:start="1987:28" pos:end="1987:28"><literal type="number" pos:start="1987:28" pos:end="1987:28">0</literal></expr>;</return> <comment type="block" pos:start="1987:31" pos:end="1987:68">/* PLD/PLDW/PLI or unallocated hint */</comment>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1991:17" pos:end="1995:17"><if pos:start="1991:17" pos:end="1995:17">if <condition pos:start="1991:20" pos:end="1991:57">(<expr pos:start="1991:21" pos:end="1991:56"><operator pos:start="1991:21" pos:end="1991:21">(</operator><name pos:start="1991:22" pos:end="1991:24">op2</name> <operator pos:start="1991:26" pos:end="1991:27">==</operator> <literal type="number" pos:start="1991:29" pos:end="1991:29">0</literal><operator pos:start="1991:30" pos:end="1991:30">)</operator> <operator pos:start="1991:32" pos:end="1991:33">||</operator> <operator pos:start="1991:35" pos:end="1991:35">(</operator><operator pos:start="1991:36" pos:end="1991:36">(</operator><name pos:start="1991:37" pos:end="1991:39">op2</name> <operator pos:start="1991:41" pos:end="1991:41">&amp;</operator> <literal type="number" pos:start="1991:43" pos:end="1991:46">0x3c</literal><operator pos:start="1991:47" pos:end="1991:47">)</operator> <operator pos:start="1991:49" pos:end="1991:50">==</operator> <literal type="number" pos:start="1991:52" pos:end="1991:55">0x30</literal><operator pos:start="1991:56" pos:end="1991:56">)</operator></expr>)</condition> <block pos:start="1991:59" pos:end="1995:17">{<block_content pos:start="1993:21" pos:end="1993:29">

                    <return pos:start="1993:21" pos:end="1993:29">return <expr pos:start="1993:28" pos:end="1993:28"><literal type="number" pos:start="1993:28" pos:end="1993:28">0</literal></expr>;</return> <comment type="block" pos:start="1993:31" pos:end="1993:68">/* PLD/PLDW/PLI or unallocated hint */</comment>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="1997:17" pos:end="1997:54">/* UNDEF space, or an UNPREDICTABLE */</comment>

                <return pos:start="1999:17" pos:end="1999:25">return <expr pos:start="1999:24" pos:end="1999:24"><literal type="number" pos:start="1999:24" pos:end="1999:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="2005:9" pos:end="2005:26"><expr pos:start="2005:9" pos:end="2005:25"><name pos:start="2005:9" pos:end="2005:12">user</name> <operator pos:start="2005:14" pos:end="2005:14">=</operator> <call pos:start="2005:16" pos:end="2005:25"><name pos:start="2005:16" pos:end="2005:22">IS_USER</name><argument_list pos:start="2005:23" pos:end="2005:25">(<argument pos:start="2005:24" pos:end="2005:24"><expr pos:start="2005:24" pos:end="2005:24"><name pos:start="2005:24" pos:end="2005:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="2007:9" pos:end="2121:9"><if pos:start="2007:9" pos:end="2027:9">if <condition pos:start="2007:12" pos:end="2007:21">(<expr pos:start="2007:13" pos:end="2007:20"><name pos:start="2007:13" pos:end="2007:14">rn</name> <operator pos:start="2007:16" pos:end="2007:17">==</operator> <literal type="number" pos:start="2007:19" pos:end="2007:20">15</literal></expr>)</condition> <block pos:start="2007:23" pos:end="2027:9">{<block_content pos:start="2009:13" pos:end="2025:40">

            <expr_stmt pos:start="2009:13" pos:end="2009:38"><expr pos:start="2009:13" pos:end="2009:37"><name pos:start="2009:13" pos:end="2009:16">addr</name> <operator pos:start="2009:18" pos:end="2009:18">=</operator> <call pos:start="2009:20" pos:end="2009:37"><name pos:start="2009:20" pos:end="2009:35">tcg_temp_new_i32</name><argument_list pos:start="2009:36" pos:end="2009:37">()</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="2011:13" pos:end="2011:31">/* PC relative.  */</comment>

            <comment type="block" pos:start="2013:13" pos:end="2013:59">/* s-&gt;pc has already been incremented by 4.  */</comment>

            <expr_stmt pos:start="2015:13" pos:end="2015:37"><expr pos:start="2015:13" pos:end="2015:36"><name pos:start="2015:13" pos:end="2015:15">imm</name> <operator pos:start="2015:17" pos:end="2015:17">=</operator> <name pos:start="2015:19" pos:end="2015:23"><name pos:start="2015:19" pos:end="2015:19">s</name><operator pos:start="2015:20" pos:end="2015:21">-&gt;</operator><name pos:start="2015:22" pos:end="2015:23">pc</name></name> <operator pos:start="2015:25" pos:end="2015:25">&amp;</operator> <literal type="number" pos:start="2015:27" pos:end="2015:36">0xfffffffc</literal></expr>;</expr_stmt>

            <if_stmt pos:start="2017:13" pos:end="2023:36"><if pos:start="2017:13" pos:end="2019:36">if <condition pos:start="2017:16" pos:end="2017:33">(<expr pos:start="2017:17" pos:end="2017:32"><name pos:start="2017:17" pos:end="2017:20">insn</name> <operator pos:start="2017:22" pos:end="2017:22">&amp;</operator> <operator pos:start="2017:24" pos:end="2017:24">(</operator><literal type="number" pos:start="2017:25" pos:end="2017:25">1</literal> <operator pos:start="2017:27" pos:end="2017:28">&lt;&lt;</operator> <literal type="number" pos:start="2017:30" pos:end="2017:31">23</literal><operator pos:start="2017:32" pos:end="2017:32">)</operator></expr>)</condition><block type="pseudo" pos:start="2019:17" pos:end="2019:36"><block_content pos:start="2019:17" pos:end="2019:36">

                <expr_stmt pos:start="2019:17" pos:end="2019:36"><expr pos:start="2019:17" pos:end="2019:35"><name pos:start="2019:17" pos:end="2019:19">imm</name> <operator pos:start="2019:21" pos:end="2019:22">+=</operator> <name pos:start="2019:24" pos:end="2019:27">insn</name> <operator pos:start="2019:29" pos:end="2019:29">&amp;</operator> <literal type="number" pos:start="2019:31" pos:end="2019:35">0xfff</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2021:13" pos:end="2023:36">else<block type="pseudo" pos:start="2023:17" pos:end="2023:36"><block_content pos:start="2023:17" pos:end="2023:36">

                <expr_stmt pos:start="2023:17" pos:end="2023:36"><expr pos:start="2023:17" pos:end="2023:35"><name pos:start="2023:17" pos:end="2023:19">imm</name> <operator pos:start="2023:21" pos:end="2023:22">-=</operator> <name pos:start="2023:24" pos:end="2023:27">insn</name> <operator pos:start="2023:29" pos:end="2023:29">&amp;</operator> <literal type="number" pos:start="2023:31" pos:end="2023:35">0xfff</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="2025:13" pos:end="2025:40"><expr pos:start="2025:13" pos:end="2025:39"><call pos:start="2025:13" pos:end="2025:39"><name pos:start="2025:13" pos:end="2025:28">tcg_gen_movi_i32</name><argument_list pos:start="2025:29" pos:end="2025:39">(<argument pos:start="2025:30" pos:end="2025:33"><expr pos:start="2025:30" pos:end="2025:33"><name pos:start="2025:30" pos:end="2025:33">addr</name></expr></argument>, <argument pos:start="2025:36" pos:end="2025:38"><expr pos:start="2025:36" pos:end="2025:38"><name pos:start="2025:36" pos:end="2025:38">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="2027:11" pos:end="2121:9">else <block pos:start="2027:16" pos:end="2121:9">{<block_content pos:start="2029:13" pos:end="2119:13">

            <expr_stmt pos:start="2029:13" pos:end="2029:35"><expr pos:start="2029:13" pos:end="2029:34"><name pos:start="2029:13" pos:end="2029:16">addr</name> <operator pos:start="2029:18" pos:end="2029:18">=</operator> <call pos:start="2029:20" pos:end="2029:34"><name pos:start="2029:20" pos:end="2029:27">load_reg</name><argument_list pos:start="2029:28" pos:end="2029:34">(<argument pos:start="2029:29" pos:end="2029:29"><expr pos:start="2029:29" pos:end="2029:29"><name pos:start="2029:29" pos:end="2029:29">s</name></expr></argument>, <argument pos:start="2029:32" pos:end="2029:33"><expr pos:start="2029:32" pos:end="2029:33"><name pos:start="2029:32" pos:end="2029:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2031:13" pos:end="2119:13"><if pos:start="2031:13" pos:end="2039:13">if <condition pos:start="2031:16" pos:end="2031:33">(<expr pos:start="2031:17" pos:end="2031:32"><name pos:start="2031:17" pos:end="2031:20">insn</name> <operator pos:start="2031:22" pos:end="2031:22">&amp;</operator> <operator pos:start="2031:24" pos:end="2031:24">(</operator><literal type="number" pos:start="2031:25" pos:end="2031:25">1</literal> <operator pos:start="2031:27" pos:end="2031:28">&lt;&lt;</operator> <literal type="number" pos:start="2031:30" pos:end="2031:31">23</literal><operator pos:start="2031:32" pos:end="2031:32">)</operator></expr>)</condition> <block pos:start="2031:35" pos:end="2039:13">{<block_content pos:start="2035:17" pos:end="2037:50">

                <comment type="block" pos:start="2033:17" pos:end="2033:39">/* Positive offset.  */</comment>

                <expr_stmt pos:start="2035:17" pos:end="2035:35"><expr pos:start="2035:17" pos:end="2035:34"><name pos:start="2035:17" pos:end="2035:19">imm</name> <operator pos:start="2035:21" pos:end="2035:21">=</operator> <name pos:start="2035:23" pos:end="2035:26">insn</name> <operator pos:start="2035:28" pos:end="2035:28">&amp;</operator> <literal type="number" pos:start="2035:30" pos:end="2035:34">0xfff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2037:17" pos:end="2037:50"><expr pos:start="2037:17" pos:end="2037:49"><call pos:start="2037:17" pos:end="2037:49"><name pos:start="2037:17" pos:end="2037:32">tcg_gen_addi_i32</name><argument_list pos:start="2037:33" pos:end="2037:49">(<argument pos:start="2037:34" pos:end="2037:37"><expr pos:start="2037:34" pos:end="2037:37"><name pos:start="2037:34" pos:end="2037:37">addr</name></expr></argument>, <argument pos:start="2037:40" pos:end="2037:43"><expr pos:start="2037:40" pos:end="2037:43"><name pos:start="2037:40" pos:end="2037:43">addr</name></expr></argument>, <argument pos:start="2037:46" pos:end="2037:48"><expr pos:start="2037:46" pos:end="2037:48"><name pos:start="2037:46" pos:end="2037:48">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2039:15" pos:end="2119:13">else <block pos:start="2039:20" pos:end="2119:13">{<block_content pos:start="2041:17" pos:end="2117:17">

                <expr_stmt pos:start="2041:17" pos:end="2041:34"><expr pos:start="2041:17" pos:end="2041:33"><name pos:start="2041:17" pos:end="2041:19">imm</name> <operator pos:start="2041:21" pos:end="2041:21">=</operator> <name pos:start="2041:23" pos:end="2041:26">insn</name> <operator pos:start="2041:28" pos:end="2041:28">&amp;</operator> <literal type="number" pos:start="2041:30" pos:end="2041:33">0xff</literal></expr>;</expr_stmt>

                <switch pos:start="2043:17" pos:end="2117:17">switch <condition pos:start="2043:24" pos:end="2043:42">(<expr pos:start="2043:25" pos:end="2043:41"><operator pos:start="2043:25" pos:end="2043:25">(</operator><name pos:start="2043:26" pos:end="2043:29">insn</name> <operator pos:start="2043:31" pos:end="2043:32">&gt;&gt;</operator> <literal type="number" pos:start="2043:34" pos:end="2043:34">8</literal><operator pos:start="2043:35" pos:end="2043:35">)</operator> <operator pos:start="2043:37" pos:end="2043:37">&amp;</operator> <literal type="number" pos:start="2043:39" pos:end="2043:41">0xf</literal></expr>)</condition> <block pos:start="2043:44" pos:end="2117:17">{<block_content pos:start="2045:17" pos:end="2115:36">

                <case pos:start="2045:17" pos:end="2045:25">case <expr pos:start="2045:22" pos:end="2045:24"><literal type="number" pos:start="2045:22" pos:end="2045:24">0x0</literal></expr>:</case> <comment type="block" pos:start="2045:27" pos:end="2045:50">/* Shifted Register.  */</comment>

                    <expr_stmt pos:start="2047:21" pos:end="2047:46"><expr pos:start="2047:21" pos:end="2047:45"><name pos:start="2047:21" pos:end="2047:25">shift</name> <operator pos:start="2047:27" pos:end="2047:27">=</operator> <operator pos:start="2047:29" pos:end="2047:29">(</operator><name pos:start="2047:30" pos:end="2047:33">insn</name> <operator pos:start="2047:35" pos:end="2047:36">&gt;&gt;</operator> <literal type="number" pos:start="2047:38" pos:end="2047:38">4</literal><operator pos:start="2047:39" pos:end="2047:39">)</operator> <operator pos:start="2047:41" pos:end="2047:41">&amp;</operator> <literal type="number" pos:start="2047:43" pos:end="2047:45">0xf</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="2049:21" pos:end="2055:21"><if pos:start="2049:21" pos:end="2055:21">if <condition pos:start="2049:24" pos:end="2049:34">(<expr pos:start="2049:25" pos:end="2049:33"><name pos:start="2049:25" pos:end="2049:29">shift</name> <operator pos:start="2049:31" pos:end="2049:31">&gt;</operator> <literal type="number" pos:start="2049:33" pos:end="2049:33">3</literal></expr>)</condition> <block pos:start="2049:36" pos:end="2055:21">{<block_content pos:start="2051:25" pos:end="2053:40">

                        <expr_stmt pos:start="2051:25" pos:end="2051:48"><expr pos:start="2051:25" pos:end="2051:47"><call pos:start="2051:25" pos:end="2051:47"><name pos:start="2051:25" pos:end="2051:41">tcg_temp_free_i32</name><argument_list pos:start="2051:42" pos:end="2051:47">(<argument pos:start="2051:43" pos:end="2051:46"><expr pos:start="2051:43" pos:end="2051:46"><name pos:start="2051:43" pos:end="2051:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="2053:25" pos:end="2053:40">goto <name pos:start="2053:30" pos:end="2053:39">illegal_op</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="2057:21" pos:end="2057:42"><expr pos:start="2057:21" pos:end="2057:41"><name pos:start="2057:21" pos:end="2057:23">tmp</name> <operator pos:start="2057:25" pos:end="2057:25">=</operator> <call pos:start="2057:27" pos:end="2057:41"><name pos:start="2057:27" pos:end="2057:34">load_reg</name><argument_list pos:start="2057:35" pos:end="2057:41">(<argument pos:start="2057:36" pos:end="2057:36"><expr pos:start="2057:36" pos:end="2057:36"><name pos:start="2057:36" pos:end="2057:36">s</name></expr></argument>, <argument pos:start="2057:39" pos:end="2057:40"><expr pos:start="2057:39" pos:end="2057:40"><name pos:start="2057:39" pos:end="2057:40">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="2059:21" pos:end="2061:58"><if pos:start="2059:21" pos:end="2061:58">if <condition pos:start="2059:24" pos:end="2059:30">(<expr pos:start="2059:25" pos:end="2059:29"><name pos:start="2059:25" pos:end="2059:29">shift</name></expr>)</condition><block type="pseudo" pos:start="2061:25" pos:end="2061:58"><block_content pos:start="2061:25" pos:end="2061:58">

                        <expr_stmt pos:start="2061:25" pos:end="2061:58"><expr pos:start="2061:25" pos:end="2061:57"><call pos:start="2061:25" pos:end="2061:57"><name pos:start="2061:25" pos:end="2061:40">tcg_gen_shli_i32</name><argument_list pos:start="2061:41" pos:end="2061:57">(<argument pos:start="2061:42" pos:end="2061:44"><expr pos:start="2061:42" pos:end="2061:44"><name pos:start="2061:42" pos:end="2061:44">tmp</name></expr></argument>, <argument pos:start="2061:47" pos:end="2061:49"><expr pos:start="2061:47" pos:end="2061:49"><name pos:start="2061:47" pos:end="2061:49">tmp</name></expr></argument>, <argument pos:start="2061:52" pos:end="2061:56"><expr pos:start="2061:52" pos:end="2061:56"><name pos:start="2061:52" pos:end="2061:56">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="2063:21" pos:end="2063:53"><expr pos:start="2063:21" pos:end="2063:52"><call pos:start="2063:21" pos:end="2063:52"><name pos:start="2063:21" pos:end="2063:35">tcg_gen_add_i32</name><argument_list pos:start="2063:36" pos:end="2063:52">(<argument pos:start="2063:37" pos:end="2063:40"><expr pos:start="2063:37" pos:end="2063:40"><name pos:start="2063:37" pos:end="2063:40">addr</name></expr></argument>, <argument pos:start="2063:43" pos:end="2063:46"><expr pos:start="2063:43" pos:end="2063:46"><name pos:start="2063:43" pos:end="2063:46">addr</name></expr></argument>, <argument pos:start="2063:49" pos:end="2063:51"><expr pos:start="2063:49" pos:end="2063:51"><name pos:start="2063:49" pos:end="2063:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2065:21" pos:end="2065:43"><expr pos:start="2065:21" pos:end="2065:42"><call pos:start="2065:21" pos:end="2065:42"><name pos:start="2065:21" pos:end="2065:37">tcg_temp_free_i32</name><argument_list pos:start="2065:38" pos:end="2065:42">(<argument pos:start="2065:39" pos:end="2065:41"><expr pos:start="2065:39" pos:end="2065:41"><name pos:start="2065:39" pos:end="2065:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2067:21" pos:end="2067:26">break;</break>

                <case pos:start="2069:17" pos:end="2069:25">case <expr pos:start="2069:22" pos:end="2069:24"><literal type="number" pos:start="2069:22" pos:end="2069:24">0xc</literal></expr>:</case> <comment type="block" pos:start="2069:27" pos:end="2069:49">/* Negative offset.  */</comment>

                    <expr_stmt pos:start="2071:21" pos:end="2071:55"><expr pos:start="2071:21" pos:end="2071:54"><call pos:start="2071:21" pos:end="2071:54"><name pos:start="2071:21" pos:end="2071:36">tcg_gen_addi_i32</name><argument_list pos:start="2071:37" pos:end="2071:54">(<argument pos:start="2071:38" pos:end="2071:41"><expr pos:start="2071:38" pos:end="2071:41"><name pos:start="2071:38" pos:end="2071:41">addr</name></expr></argument>, <argument pos:start="2071:44" pos:end="2071:47"><expr pos:start="2071:44" pos:end="2071:47"><name pos:start="2071:44" pos:end="2071:47">addr</name></expr></argument>, <argument pos:start="2071:50" pos:end="2071:53"><expr pos:start="2071:50" pos:end="2071:53"><operator pos:start="2071:50" pos:end="2071:50">-</operator><name pos:start="2071:51" pos:end="2071:53">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="2073:21" pos:end="2073:26">break;</break>

                <case pos:start="2075:17" pos:end="2075:25">case <expr pos:start="2075:22" pos:end="2075:24"><literal type="number" pos:start="2075:22" pos:end="2075:24">0xe</literal></expr>:</case> <comment type="block" pos:start="2075:27" pos:end="2075:48">/* User privilege.  */</comment>

                    <expr_stmt pos:start="2077:21" pos:end="2077:54"><expr pos:start="2077:21" pos:end="2077:53"><call pos:start="2077:21" pos:end="2077:53"><name pos:start="2077:21" pos:end="2077:36">tcg_gen_addi_i32</name><argument_list pos:start="2077:37" pos:end="2077:53">(<argument pos:start="2077:38" pos:end="2077:41"><expr pos:start="2077:38" pos:end="2077:41"><name pos:start="2077:38" pos:end="2077:41">addr</name></expr></argument>, <argument pos:start="2077:44" pos:end="2077:47"><expr pos:start="2077:44" pos:end="2077:47"><name pos:start="2077:44" pos:end="2077:47">addr</name></expr></argument>, <argument pos:start="2077:50" pos:end="2077:52"><expr pos:start="2077:50" pos:end="2077:52"><name pos:start="2077:50" pos:end="2077:52">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2079:21" pos:end="2079:29"><expr pos:start="2079:21" pos:end="2079:28"><name pos:start="2079:21" pos:end="2079:24">user</name> <operator pos:start="2079:26" pos:end="2079:26">=</operator> <literal type="number" pos:start="2079:28" pos:end="2079:28">1</literal></expr>;</expr_stmt>

                    <break pos:start="2081:21" pos:end="2081:26">break;</break>

                <case pos:start="2083:17" pos:end="2083:25">case <expr pos:start="2083:22" pos:end="2083:24"><literal type="number" pos:start="2083:22" pos:end="2083:24">0x9</literal></expr>:</case> <comment type="block" pos:start="2083:27" pos:end="2083:48">/* Post-decrement.  */</comment>

                    <expr_stmt pos:start="2085:21" pos:end="2085:31"><expr pos:start="2085:21" pos:end="2085:30"><name pos:start="2085:21" pos:end="2085:23">imm</name> <operator pos:start="2085:25" pos:end="2085:25">=</operator> <operator pos:start="2085:27" pos:end="2085:27">-</operator><name pos:start="2085:28" pos:end="2085:30">imm</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="2087:21" pos:end="2087:40">/* Fall through.  */</comment>

                <case pos:start="2089:17" pos:end="2089:25">case <expr pos:start="2089:22" pos:end="2089:24"><literal type="number" pos:start="2089:22" pos:end="2089:24">0xb</literal></expr>:</case> <comment type="block" pos:start="2089:27" pos:end="2089:48">/* Post-increment.  */</comment>

                    <expr_stmt pos:start="2091:21" pos:end="2091:32"><expr pos:start="2091:21" pos:end="2091:31"><name pos:start="2091:21" pos:end="2091:27">postinc</name> <operator pos:start="2091:29" pos:end="2091:29">=</operator> <literal type="number" pos:start="2091:31" pos:end="2091:31">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="2093:21" pos:end="2093:34"><expr pos:start="2093:21" pos:end="2093:33"><name pos:start="2093:21" pos:end="2093:29">writeback</name> <operator pos:start="2093:31" pos:end="2093:31">=</operator> <literal type="number" pos:start="2093:33" pos:end="2093:33">1</literal></expr>;</expr_stmt>

                    <break pos:start="2095:21" pos:end="2095:26">break;</break>

                <case pos:start="2097:17" pos:end="2097:25">case <expr pos:start="2097:22" pos:end="2097:24"><literal type="number" pos:start="2097:22" pos:end="2097:24">0xd</literal></expr>:</case> <comment type="block" pos:start="2097:27" pos:end="2097:47">/* Pre-decrement.  */</comment>

                    <expr_stmt pos:start="2099:21" pos:end="2099:31"><expr pos:start="2099:21" pos:end="2099:30"><name pos:start="2099:21" pos:end="2099:23">imm</name> <operator pos:start="2099:25" pos:end="2099:25">=</operator> <operator pos:start="2099:27" pos:end="2099:27">-</operator><name pos:start="2099:28" pos:end="2099:30">imm</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="2101:21" pos:end="2101:40">/* Fall through.  */</comment>

                <case pos:start="2103:17" pos:end="2103:25">case <expr pos:start="2103:22" pos:end="2103:24"><literal type="number" pos:start="2103:22" pos:end="2103:24">0xf</literal></expr>:</case> <comment type="block" pos:start="2103:27" pos:end="2103:47">/* Pre-increment.  */</comment>

                    <expr_stmt pos:start="2105:21" pos:end="2105:54"><expr pos:start="2105:21" pos:end="2105:53"><call pos:start="2105:21" pos:end="2105:53"><name pos:start="2105:21" pos:end="2105:36">tcg_gen_addi_i32</name><argument_list pos:start="2105:37" pos:end="2105:53">(<argument pos:start="2105:38" pos:end="2105:41"><expr pos:start="2105:38" pos:end="2105:41"><name pos:start="2105:38" pos:end="2105:41">addr</name></expr></argument>, <argument pos:start="2105:44" pos:end="2105:47"><expr pos:start="2105:44" pos:end="2105:47"><name pos:start="2105:44" pos:end="2105:47">addr</name></expr></argument>, <argument pos:start="2105:50" pos:end="2105:52"><expr pos:start="2105:50" pos:end="2105:52"><name pos:start="2105:50" pos:end="2105:52">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2107:21" pos:end="2107:34"><expr pos:start="2107:21" pos:end="2107:33"><name pos:start="2107:21" pos:end="2107:29">writeback</name> <operator pos:start="2107:31" pos:end="2107:31">=</operator> <literal type="number" pos:start="2107:33" pos:end="2107:33">1</literal></expr>;</expr_stmt>

                    <break pos:start="2109:21" pos:end="2109:26">break;</break>

                <default pos:start="2111:17" pos:end="2111:24">default:</default>

                    <expr_stmt pos:start="2113:21" pos:end="2113:44"><expr pos:start="2113:21" pos:end="2113:43"><call pos:start="2113:21" pos:end="2113:43"><name pos:start="2113:21" pos:end="2113:37">tcg_temp_free_i32</name><argument_list pos:start="2113:38" pos:end="2113:43">(<argument pos:start="2113:39" pos:end="2113:42"><expr pos:start="2113:39" pos:end="2113:42"><name pos:start="2113:39" pos:end="2113:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="2115:21" pos:end="2115:36">goto <name pos:start="2115:26" pos:end="2115:35">illegal_op</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="2123:9" pos:end="2219:9"><if pos:start="2123:9" pos:end="2181:9">if <condition pos:start="2123:12" pos:end="2123:29">(<expr pos:start="2123:13" pos:end="2123:28"><name pos:start="2123:13" pos:end="2123:16">insn</name> <operator pos:start="2123:18" pos:end="2123:18">&amp;</operator> <operator pos:start="2123:20" pos:end="2123:20">(</operator><literal type="number" pos:start="2123:21" pos:end="2123:21">1</literal> <operator pos:start="2123:23" pos:end="2123:24">&lt;&lt;</operator> <literal type="number" pos:start="2123:26" pos:end="2123:27">20</literal><operator pos:start="2123:28" pos:end="2123:28">)</operator></expr>)</condition> <block pos:start="2123:31" pos:end="2181:9">{<block_content pos:start="2127:13" pos:end="2179:13">

            <comment type="block" pos:start="2125:13" pos:end="2125:24">/* Load.  */</comment>

            <expr_stmt pos:start="2127:13" pos:end="2127:37"><expr pos:start="2127:13" pos:end="2127:36"><name pos:start="2127:13" pos:end="2127:15">tmp</name> <operator pos:start="2127:17" pos:end="2127:17">=</operator> <call pos:start="2127:19" pos:end="2127:36"><name pos:start="2127:19" pos:end="2127:34">tcg_temp_new_i32</name><argument_list pos:start="2127:35" pos:end="2127:36">()</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2129:13" pos:end="2169:13">switch <condition pos:start="2129:20" pos:end="2129:23">(<expr pos:start="2129:21" pos:end="2129:22"><name pos:start="2129:21" pos:end="2129:22">op</name></expr>)</condition> <block pos:start="2129:25" pos:end="2169:13">{<block_content pos:start="2131:13" pos:end="2167:32">

            <case pos:start="2131:13" pos:end="2131:19">case <expr pos:start="2131:18" pos:end="2131:18"><literal type="number" pos:start="2131:18" pos:end="2131:18">0</literal></expr>:</case>

                <expr_stmt pos:start="2133:17" pos:end="2133:51"><expr pos:start="2133:17" pos:end="2133:50"><call pos:start="2133:17" pos:end="2133:50"><name pos:start="2133:17" pos:end="2133:33">tcg_gen_qemu_ld8u</name><argument_list pos:start="2133:34" pos:end="2133:50">(<argument pos:start="2133:35" pos:end="2133:37"><expr pos:start="2133:35" pos:end="2133:37"><name pos:start="2133:35" pos:end="2133:37">tmp</name></expr></argument>, <argument pos:start="2133:40" pos:end="2133:43"><expr pos:start="2133:40" pos:end="2133:43"><name pos:start="2133:40" pos:end="2133:43">addr</name></expr></argument>, <argument pos:start="2133:46" pos:end="2133:49"><expr pos:start="2133:46" pos:end="2133:49"><name pos:start="2133:46" pos:end="2133:49">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2135:17" pos:end="2135:22">break;</break>

            <case pos:start="2137:13" pos:end="2137:19">case <expr pos:start="2137:18" pos:end="2137:18"><literal type="number" pos:start="2137:18" pos:end="2137:18">4</literal></expr>:</case>

                <expr_stmt pos:start="2139:17" pos:end="2139:51"><expr pos:start="2139:17" pos:end="2139:50"><call pos:start="2139:17" pos:end="2139:50"><name pos:start="2139:17" pos:end="2139:33">tcg_gen_qemu_ld8s</name><argument_list pos:start="2139:34" pos:end="2139:50">(<argument pos:start="2139:35" pos:end="2139:37"><expr pos:start="2139:35" pos:end="2139:37"><name pos:start="2139:35" pos:end="2139:37">tmp</name></expr></argument>, <argument pos:start="2139:40" pos:end="2139:43"><expr pos:start="2139:40" pos:end="2139:43"><name pos:start="2139:40" pos:end="2139:43">addr</name></expr></argument>, <argument pos:start="2139:46" pos:end="2139:49"><expr pos:start="2139:46" pos:end="2139:49"><name pos:start="2139:46" pos:end="2139:49">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2141:17" pos:end="2141:22">break;</break>

            <case pos:start="2143:13" pos:end="2143:19">case <expr pos:start="2143:18" pos:end="2143:18"><literal type="number" pos:start="2143:18" pos:end="2143:18">1</literal></expr>:</case>

                <expr_stmt pos:start="2145:17" pos:end="2145:52"><expr pos:start="2145:17" pos:end="2145:51"><call pos:start="2145:17" pos:end="2145:51"><name pos:start="2145:17" pos:end="2145:34">tcg_gen_qemu_ld16u</name><argument_list pos:start="2145:35" pos:end="2145:51">(<argument pos:start="2145:36" pos:end="2145:38"><expr pos:start="2145:36" pos:end="2145:38"><name pos:start="2145:36" pos:end="2145:38">tmp</name></expr></argument>, <argument pos:start="2145:41" pos:end="2145:44"><expr pos:start="2145:41" pos:end="2145:44"><name pos:start="2145:41" pos:end="2145:44">addr</name></expr></argument>, <argument pos:start="2145:47" pos:end="2145:50"><expr pos:start="2145:47" pos:end="2145:50"><name pos:start="2145:47" pos:end="2145:50">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2147:17" pos:end="2147:22">break;</break>

            <case pos:start="2149:13" pos:end="2149:19">case <expr pos:start="2149:18" pos:end="2149:18"><literal type="number" pos:start="2149:18" pos:end="2149:18">5</literal></expr>:</case>

                <expr_stmt pos:start="2151:17" pos:end="2151:52"><expr pos:start="2151:17" pos:end="2151:51"><call pos:start="2151:17" pos:end="2151:51"><name pos:start="2151:17" pos:end="2151:34">tcg_gen_qemu_ld16s</name><argument_list pos:start="2151:35" pos:end="2151:51">(<argument pos:start="2151:36" pos:end="2151:38"><expr pos:start="2151:36" pos:end="2151:38"><name pos:start="2151:36" pos:end="2151:38">tmp</name></expr></argument>, <argument pos:start="2151:41" pos:end="2151:44"><expr pos:start="2151:41" pos:end="2151:44"><name pos:start="2151:41" pos:end="2151:44">addr</name></expr></argument>, <argument pos:start="2151:47" pos:end="2151:50"><expr pos:start="2151:47" pos:end="2151:50"><name pos:start="2151:47" pos:end="2151:50">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2153:17" pos:end="2153:22">break;</break>

            <case pos:start="2155:13" pos:end="2155:19">case <expr pos:start="2155:18" pos:end="2155:18"><literal type="number" pos:start="2155:18" pos:end="2155:18">2</literal></expr>:</case>

                <expr_stmt pos:start="2157:17" pos:end="2157:52"><expr pos:start="2157:17" pos:end="2157:51"><call pos:start="2157:17" pos:end="2157:51"><name pos:start="2157:17" pos:end="2157:34">tcg_gen_qemu_ld32u</name><argument_list pos:start="2157:35" pos:end="2157:51">(<argument pos:start="2157:36" pos:end="2157:38"><expr pos:start="2157:36" pos:end="2157:38"><name pos:start="2157:36" pos:end="2157:38">tmp</name></expr></argument>, <argument pos:start="2157:41" pos:end="2157:44"><expr pos:start="2157:41" pos:end="2157:44"><name pos:start="2157:41" pos:end="2157:44">addr</name></expr></argument>, <argument pos:start="2157:47" pos:end="2157:50"><expr pos:start="2157:47" pos:end="2157:50"><name pos:start="2157:47" pos:end="2157:50">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2159:17" pos:end="2159:22">break;</break>

            <default pos:start="2161:13" pos:end="2161:20">default:</default>

                <expr_stmt pos:start="2163:17" pos:end="2163:39"><expr pos:start="2163:17" pos:end="2163:38"><call pos:start="2163:17" pos:end="2163:38"><name pos:start="2163:17" pos:end="2163:33">tcg_temp_free_i32</name><argument_list pos:start="2163:34" pos:end="2163:38">(<argument pos:start="2163:35" pos:end="2163:37"><expr pos:start="2163:35" pos:end="2163:37"><name pos:start="2163:35" pos:end="2163:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2165:17" pos:end="2165:40"><expr pos:start="2165:17" pos:end="2165:39"><call pos:start="2165:17" pos:end="2165:39"><name pos:start="2165:17" pos:end="2165:33">tcg_temp_free_i32</name><argument_list pos:start="2165:34" pos:end="2165:39">(<argument pos:start="2165:35" pos:end="2165:38"><expr pos:start="2165:35" pos:end="2165:38"><name pos:start="2165:35" pos:end="2165:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="2167:17" pos:end="2167:32">goto <name pos:start="2167:22" pos:end="2167:31">illegal_op</name>;</goto>

            </block_content>}</block></switch>

            <if_stmt pos:start="2171:13" pos:end="2179:13"><if pos:start="2171:13" pos:end="2175:13">if <condition pos:start="2171:16" pos:end="2171:25">(<expr pos:start="2171:17" pos:end="2171:24"><name pos:start="2171:17" pos:end="2171:18">rs</name> <operator pos:start="2171:20" pos:end="2171:21">==</operator> <literal type="number" pos:start="2171:23" pos:end="2171:24">15</literal></expr>)</condition> <block pos:start="2171:27" pos:end="2175:13">{<block_content pos:start="2173:17" pos:end="2173:31">

                <expr_stmt pos:start="2173:17" pos:end="2173:31"><expr pos:start="2173:17" pos:end="2173:30"><call pos:start="2173:17" pos:end="2173:30"><name pos:start="2173:17" pos:end="2173:22">gen_bx</name><argument_list pos:start="2173:23" pos:end="2173:30">(<argument pos:start="2173:24" pos:end="2173:24"><expr pos:start="2173:24" pos:end="2173:24"><name pos:start="2173:24" pos:end="2173:24">s</name></expr></argument>, <argument pos:start="2173:27" pos:end="2173:29"><expr pos:start="2173:27" pos:end="2173:29"><name pos:start="2173:27" pos:end="2173:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2175:15" pos:end="2179:13">else <block pos:start="2175:20" pos:end="2179:13">{<block_content pos:start="2177:17" pos:end="2177:38">

                <expr_stmt pos:start="2177:17" pos:end="2177:38"><expr pos:start="2177:17" pos:end="2177:37"><call pos:start="2177:17" pos:end="2177:37"><name pos:start="2177:17" pos:end="2177:25">store_reg</name><argument_list pos:start="2177:26" pos:end="2177:37">(<argument pos:start="2177:27" pos:end="2177:27"><expr pos:start="2177:27" pos:end="2177:27"><name pos:start="2177:27" pos:end="2177:27">s</name></expr></argument>, <argument pos:start="2177:30" pos:end="2177:31"><expr pos:start="2177:30" pos:end="2177:31"><name pos:start="2177:30" pos:end="2177:31">rs</name></expr></argument>, <argument pos:start="2177:34" pos:end="2177:36"><expr pos:start="2177:34" pos:end="2177:36"><name pos:start="2177:34" pos:end="2177:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="2181:11" pos:end="2219:9">else <block pos:start="2181:16" pos:end="2219:9">{<block_content pos:start="2185:13" pos:end="2217:35">

            <comment type="block" pos:start="2183:13" pos:end="2183:25">/* Store.  */</comment>

            <expr_stmt pos:start="2185:13" pos:end="2185:34"><expr pos:start="2185:13" pos:end="2185:33"><name pos:start="2185:13" pos:end="2185:15">tmp</name> <operator pos:start="2185:17" pos:end="2185:17">=</operator> <call pos:start="2185:19" pos:end="2185:33"><name pos:start="2185:19" pos:end="2185:26">load_reg</name><argument_list pos:start="2185:27" pos:end="2185:33">(<argument pos:start="2185:28" pos:end="2185:28"><expr pos:start="2185:28" pos:end="2185:28"><name pos:start="2185:28" pos:end="2185:28">s</name></expr></argument>, <argument pos:start="2185:31" pos:end="2185:32"><expr pos:start="2185:31" pos:end="2185:32"><name pos:start="2185:31" pos:end="2185:32">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2187:13" pos:end="2215:13">switch <condition pos:start="2187:20" pos:end="2187:23">(<expr pos:start="2187:21" pos:end="2187:22"><name pos:start="2187:21" pos:end="2187:22">op</name></expr>)</condition> <block pos:start="2187:25" pos:end="2215:13">{<block_content pos:start="2189:13" pos:end="2213:32">

            <case pos:start="2189:13" pos:end="2189:19">case <expr pos:start="2189:18" pos:end="2189:18"><literal type="number" pos:start="2189:18" pos:end="2189:18">0</literal></expr>:</case>

                <expr_stmt pos:start="2191:17" pos:end="2191:50"><expr pos:start="2191:17" pos:end="2191:49"><call pos:start="2191:17" pos:end="2191:49"><name pos:start="2191:17" pos:end="2191:32">tcg_gen_qemu_st8</name><argument_list pos:start="2191:33" pos:end="2191:49">(<argument pos:start="2191:34" pos:end="2191:36"><expr pos:start="2191:34" pos:end="2191:36"><name pos:start="2191:34" pos:end="2191:36">tmp</name></expr></argument>, <argument pos:start="2191:39" pos:end="2191:42"><expr pos:start="2191:39" pos:end="2191:42"><name pos:start="2191:39" pos:end="2191:42">addr</name></expr></argument>, <argument pos:start="2191:45" pos:end="2191:48"><expr pos:start="2191:45" pos:end="2191:48"><name pos:start="2191:45" pos:end="2191:48">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2193:17" pos:end="2193:22">break;</break>

            <case pos:start="2195:13" pos:end="2195:19">case <expr pos:start="2195:18" pos:end="2195:18"><literal type="number" pos:start="2195:18" pos:end="2195:18">1</literal></expr>:</case>

                <expr_stmt pos:start="2197:17" pos:end="2197:51"><expr pos:start="2197:17" pos:end="2197:50"><call pos:start="2197:17" pos:end="2197:50"><name pos:start="2197:17" pos:end="2197:33">tcg_gen_qemu_st16</name><argument_list pos:start="2197:34" pos:end="2197:50">(<argument pos:start="2197:35" pos:end="2197:37"><expr pos:start="2197:35" pos:end="2197:37"><name pos:start="2197:35" pos:end="2197:37">tmp</name></expr></argument>, <argument pos:start="2197:40" pos:end="2197:43"><expr pos:start="2197:40" pos:end="2197:43"><name pos:start="2197:40" pos:end="2197:43">addr</name></expr></argument>, <argument pos:start="2197:46" pos:end="2197:49"><expr pos:start="2197:46" pos:end="2197:49"><name pos:start="2197:46" pos:end="2197:49">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2199:17" pos:end="2199:22">break;</break>

            <case pos:start="2201:13" pos:end="2201:19">case <expr pos:start="2201:18" pos:end="2201:18"><literal type="number" pos:start="2201:18" pos:end="2201:18">2</literal></expr>:</case>

                <expr_stmt pos:start="2203:17" pos:end="2203:51"><expr pos:start="2203:17" pos:end="2203:50"><call pos:start="2203:17" pos:end="2203:50"><name pos:start="2203:17" pos:end="2203:33">tcg_gen_qemu_st32</name><argument_list pos:start="2203:34" pos:end="2203:50">(<argument pos:start="2203:35" pos:end="2203:37"><expr pos:start="2203:35" pos:end="2203:37"><name pos:start="2203:35" pos:end="2203:37">tmp</name></expr></argument>, <argument pos:start="2203:40" pos:end="2203:43"><expr pos:start="2203:40" pos:end="2203:43"><name pos:start="2203:40" pos:end="2203:43">addr</name></expr></argument>, <argument pos:start="2203:46" pos:end="2203:49"><expr pos:start="2203:46" pos:end="2203:49"><name pos:start="2203:46" pos:end="2203:49">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2205:17" pos:end="2205:22">break;</break>

            <default pos:start="2207:13" pos:end="2207:20">default:</default>

                <expr_stmt pos:start="2209:17" pos:end="2209:39"><expr pos:start="2209:17" pos:end="2209:38"><call pos:start="2209:17" pos:end="2209:38"><name pos:start="2209:17" pos:end="2209:33">tcg_temp_free_i32</name><argument_list pos:start="2209:34" pos:end="2209:38">(<argument pos:start="2209:35" pos:end="2209:37"><expr pos:start="2209:35" pos:end="2209:37"><name pos:start="2209:35" pos:end="2209:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2211:17" pos:end="2211:40"><expr pos:start="2211:17" pos:end="2211:39"><call pos:start="2211:17" pos:end="2211:39"><name pos:start="2211:17" pos:end="2211:33">tcg_temp_free_i32</name><argument_list pos:start="2211:34" pos:end="2211:39">(<argument pos:start="2211:35" pos:end="2211:38"><expr pos:start="2211:35" pos:end="2211:38"><name pos:start="2211:35" pos:end="2211:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="2213:17" pos:end="2213:32">goto <name pos:start="2213:22" pos:end="2213:31">illegal_op</name>;</goto>

            </block_content>}</block></switch>

            <expr_stmt pos:start="2217:13" pos:end="2217:35"><expr pos:start="2217:13" pos:end="2217:34"><call pos:start="2217:13" pos:end="2217:34"><name pos:start="2217:13" pos:end="2217:29">tcg_temp_free_i32</name><argument_list pos:start="2217:30" pos:end="2217:34">(<argument pos:start="2217:31" pos:end="2217:33"><expr pos:start="2217:31" pos:end="2217:33"><name pos:start="2217:31" pos:end="2217:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="2221:9" pos:end="2223:46"><if pos:start="2221:9" pos:end="2223:46">if <condition pos:start="2221:12" pos:end="2221:20">(<expr pos:start="2221:13" pos:end="2221:19"><name pos:start="2221:13" pos:end="2221:19">postinc</name></expr>)</condition><block type="pseudo" pos:start="2223:13" pos:end="2223:46"><block_content pos:start="2223:13" pos:end="2223:46">

            <expr_stmt pos:start="2223:13" pos:end="2223:46"><expr pos:start="2223:13" pos:end="2223:45"><call pos:start="2223:13" pos:end="2223:45"><name pos:start="2223:13" pos:end="2223:28">tcg_gen_addi_i32</name><argument_list pos:start="2223:29" pos:end="2223:45">(<argument pos:start="2223:30" pos:end="2223:33"><expr pos:start="2223:30" pos:end="2223:33"><name pos:start="2223:30" pos:end="2223:33">addr</name></expr></argument>, <argument pos:start="2223:36" pos:end="2223:39"><expr pos:start="2223:36" pos:end="2223:39"><name pos:start="2223:36" pos:end="2223:39">addr</name></expr></argument>, <argument pos:start="2223:42" pos:end="2223:44"><expr pos:start="2223:42" pos:end="2223:44"><name pos:start="2223:42" pos:end="2223:44">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="2225:9" pos:end="2233:9"><if pos:start="2225:9" pos:end="2229:9">if <condition pos:start="2225:12" pos:end="2225:22">(<expr pos:start="2225:13" pos:end="2225:21"><name pos:start="2225:13" pos:end="2225:21">writeback</name></expr>)</condition> <block pos:start="2225:24" pos:end="2229:9">{<block_content pos:start="2227:13" pos:end="2227:35">

            <expr_stmt pos:start="2227:13" pos:end="2227:35"><expr pos:start="2227:13" pos:end="2227:34"><call pos:start="2227:13" pos:end="2227:34"><name pos:start="2227:13" pos:end="2227:21">store_reg</name><argument_list pos:start="2227:22" pos:end="2227:34">(<argument pos:start="2227:23" pos:end="2227:23"><expr pos:start="2227:23" pos:end="2227:23"><name pos:start="2227:23" pos:end="2227:23">s</name></expr></argument>, <argument pos:start="2227:26" pos:end="2227:27"><expr pos:start="2227:26" pos:end="2227:27"><name pos:start="2227:26" pos:end="2227:27">rn</name></expr></argument>, <argument pos:start="2227:30" pos:end="2227:33"><expr pos:start="2227:30" pos:end="2227:33"><name pos:start="2227:30" pos:end="2227:33">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="2229:11" pos:end="2233:9">else <block pos:start="2229:16" pos:end="2233:9">{<block_content pos:start="2231:13" pos:end="2231:36">

            <expr_stmt pos:start="2231:13" pos:end="2231:36"><expr pos:start="2231:13" pos:end="2231:35"><call pos:start="2231:13" pos:end="2231:35"><name pos:start="2231:13" pos:end="2231:29">tcg_temp_free_i32</name><argument_list pos:start="2231:30" pos:end="2231:35">(<argument pos:start="2231:31" pos:end="2231:34"><expr pos:start="2231:31" pos:end="2231:34"><name pos:start="2231:31" pos:end="2231:34">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        </block_content>}</block>

        <break pos:start="2237:9" pos:end="2237:14">break;</break>

    <default pos:start="2239:5" pos:end="2239:12">default:</default>

        <goto pos:start="2241:9" pos:end="2241:24">goto <name pos:start="2241:14" pos:end="2241:23">illegal_op</name>;</goto>

    </block_content>}</block></switch>

    <return pos:start="2245:5" pos:end="2245:13">return <expr pos:start="2245:12" pos:end="2245:12"><literal type="number" pos:start="2245:12" pos:end="2245:12">0</literal></expr>;</return>

<label pos:start="2247:1" pos:end="2247:11"><name pos:start="2247:1" pos:end="2247:10">illegal_op</name>:</label>

    <return pos:start="2249:5" pos:end="2249:13">return <expr pos:start="2249:12" pos:end="2249:12"><literal type="number" pos:start="2249:12" pos:end="2249:12">1</literal></expr>;</return>

</block_content>}</block></function></unit>
