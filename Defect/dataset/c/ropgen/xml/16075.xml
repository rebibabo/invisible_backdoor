<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16075.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:46">vfio_probe_nvidia_bar0_88000_quirk</name><parameter_list pos:start="1:47" pos:end="1:72">(<parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:57">VFIODevice</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">vdev</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:71"><decl pos:start="1:66" pos:end="1:71"><type pos:start="1:66" pos:end="1:71"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:71">nr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:33">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">pdev</name> <init pos:start="5:21" pos:end="5:33">= <expr pos:start="5:23" pos:end="5:33"><operator pos:start="5:23" pos:end="5:23">&amp;</operator><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:27">vdev</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:33">pdev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VFIOQuirk</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">quirk</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="13:75">(<expr pos:start="11:9" pos:end="13:74"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:22"><name pos:start="11:10" pos:end="11:13">vdev</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:22">has_vga</name></name> <operator pos:start="11:24" pos:end="11:25">||</operator> <name pos:start="11:27" pos:end="11:28">nr</name> <operator pos:start="11:30" pos:end="11:31">!=</operator> <literal type="number" pos:start="11:33" pos:end="11:33">0</literal> <operator pos:start="11:35" pos:end="11:36">||</operator>

        <call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:20">pci_get_word</name><argument_list pos:start="13:21" pos:end="13:50">(<argument pos:start="13:22" pos:end="13:49"><expr pos:start="13:22" pos:end="13:49"><name pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:25">pdev</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:33">config</name></name> <operator pos:start="13:35" pos:end="13:35">+</operator> <name pos:start="13:37" pos:end="13:49">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call> <operator pos:start="13:52" pos:end="13:53">!=</operator> <name pos:start="13:55" pos:end="13:74">PCI_VENDOR_ID_NVIDIA</name></expr>)</condition> <block pos:start="13:77" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:9">quirk</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:21">g_malloc0</name><argument_list pos:start="21:22" pos:end="21:37">(<argument pos:start="21:23" pos:end="21:36"><expr pos:start="21:23" pos:end="21:36"><sizeof pos:start="21:23" pos:end="21:36">sizeof<argument_list pos:start="21:29" pos:end="21:36">(<argument pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:35"><operator pos:start="21:30" pos:end="21:30">*</operator><name pos:start="21:31" pos:end="21:35">quirk</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:9">quirk</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">vdev</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:22">vdev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:77"><expr pos:start="25:5" pos:end="25:76"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:9">quirk</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:15">data</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:21">flags</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:46"><name pos:start="25:25" pos:end="25:29">quirk</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:35">data</name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:46">read_flags</name></name> <operator pos:start="25:48" pos:end="25:48">=</operator> <name pos:start="25:50" pos:end="25:72"><name pos:start="25:50" pos:end="25:54">quirk</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:60">data</name><operator pos:start="25:61" pos:end="25:61">.</operator><name pos:start="25:62" pos:end="25:72">write_flags</name></name> <operator pos:start="25:74" pos:end="25:74">=</operator> <literal type="number" pos:start="25:76" pos:end="25:76">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:9">quirk</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:15">data</name><operator pos:start="27:16" pos:end="27:16">.</operator><name pos:start="27:17" pos:end="27:29">address_match</name></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <literal type="number" pos:start="27:33" pos:end="27:39">0x88000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:9">quirk</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">data</name><operator pos:start="29:16" pos:end="29:16">.</operator><name pos:start="29:17" pos:end="29:28">address_mask</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <name pos:start="29:32" pos:end="29:53">PCIE_CONFIG_SPACE_SIZE</name> <operator pos:start="29:55" pos:end="29:55">-</operator> <literal type="number" pos:start="29:57" pos:end="29:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:9">quirk</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">data</name><operator pos:start="31:16" pos:end="31:16">.</operator><name pos:start="31:17" pos:end="31:19">bar</name></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:24">nr</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="39:75"><expr pos:start="35:5" pos:end="39:74"><call pos:start="35:5" pos:end="39:74"><name pos:start="35:5" pos:end="35:25">memory_region_init_io</name><argument_list pos:start="35:26" pos:end="39:74">(<argument pos:start="35:27" pos:end="35:37"><expr pos:start="35:27" pos:end="35:37"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:37"><name pos:start="35:28" pos:end="35:32">quirk</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:37">mem</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:51"><expr pos:start="35:40" pos:end="35:51"><call pos:start="35:40" pos:end="35:51"><name pos:start="35:40" pos:end="35:45">OBJECT</name><argument_list pos:start="35:46" pos:end="35:51">(<argument pos:start="35:47" pos:end="35:50"><expr pos:start="35:47" pos:end="35:50"><name pos:start="35:47" pos:end="35:50">vdev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:54" pos:end="35:72"><expr pos:start="35:54" pos:end="35:72"><operator pos:start="35:54" pos:end="35:54">&amp;</operator><name pos:start="35:55" pos:end="35:72">vfio_generic_quirk</name></expr></argument>,

                          <argument pos:start="37:27" pos:end="37:31"><expr pos:start="37:27" pos:end="37:31"><name pos:start="37:27" pos:end="37:31">quirk</name></expr></argument>, <argument pos:start="37:34" pos:end="37:63"><expr pos:start="37:34" pos:end="37:63"><literal type="string" pos:start="37:34" pos:end="37:63">"vfio-nvidia-bar0-88000-quirk"</literal></expr></argument>,

                          <argument pos:start="39:27" pos:end="39:73"><expr pos:start="39:27" pos:end="39:73"><call pos:start="39:27" pos:end="39:73"><name pos:start="39:27" pos:end="39:43">TARGET_PAGE_ALIGN</name><argument_list pos:start="39:44" pos:end="39:73">(<argument pos:start="39:45" pos:end="39:72"><expr pos:start="39:45" pos:end="39:72"><name pos:start="39:45" pos:end="39:68"><name pos:start="39:45" pos:end="39:49">quirk</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:55">data</name><operator pos:start="39:56" pos:end="39:56">.</operator><name pos:start="39:57" pos:end="39:68">address_mask</name></name> <operator pos:start="39:70" pos:end="39:70">+</operator> <literal type="number" pos:start="39:72" pos:end="39:72">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="45:42"><expr pos:start="41:5" pos:end="45:41"><call pos:start="41:5" pos:end="45:41"><name pos:start="41:5" pos:end="41:39">memory_region_add_subregion_overlap</name><argument_list pos:start="41:40" pos:end="45:41">(<argument pos:start="41:41" pos:end="41:59"><expr pos:start="41:41" pos:end="41:59"><operator pos:start="41:41" pos:end="41:41">&amp;</operator><name pos:start="41:42" pos:end="41:55"><name pos:start="41:42" pos:end="41:45">vdev</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:51">bars</name><index pos:start="41:52" pos:end="41:55">[<expr pos:start="41:53" pos:end="41:54"><name pos:start="41:53" pos:end="41:54">nr</name></expr>]</index></name><operator pos:start="41:56" pos:end="41:56">.</operator><name pos:start="41:57" pos:end="41:59">mem</name></expr></argument>,

                          <argument pos:start="43:27" pos:end="43:70"><expr pos:start="43:27" pos:end="43:70"><name pos:start="43:27" pos:end="43:51"><name pos:start="43:27" pos:end="43:31">quirk</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:37">data</name><operator pos:start="43:38" pos:end="43:38">.</operator><name pos:start="43:39" pos:end="43:51">address_match</name></name> <operator pos:start="43:53" pos:end="43:53">&amp;</operator> <name pos:start="43:55" pos:end="43:70">TARGET_PAGE_MASK</name></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:37"><expr pos:start="45:27" pos:end="45:37"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:37"><name pos:start="45:28" pos:end="45:32">quirk</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:37">mem</name></name></expr></argument>, <argument pos:start="45:40" pos:end="45:40"><expr pos:start="45:40" pos:end="45:40"><literal type="number" pos:start="45:40" pos:end="45:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:59"><expr pos:start="49:5" pos:end="49:58"><call pos:start="49:5" pos:end="49:58"><name pos:start="49:5" pos:end="49:21">QLIST_INSERT_HEAD</name><argument_list pos:start="49:22" pos:end="49:58">(<argument pos:start="49:23" pos:end="49:44"><expr pos:start="49:23" pos:end="49:44"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:37"><name pos:start="49:24" pos:end="49:27">vdev</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:33">bars</name><index pos:start="49:34" pos:end="49:37">[<expr pos:start="49:35" pos:end="49:36"><name pos:start="49:35" pos:end="49:36">nr</name></expr>]</index></name><operator pos:start="49:38" pos:end="49:38">.</operator><name pos:start="49:39" pos:end="49:44">quirks</name></expr></argument>, <argument pos:start="49:47" pos:end="49:51"><expr pos:start="49:47" pos:end="49:51"><name pos:start="49:47" pos:end="49:51">quirk</name></expr></argument>, <argument pos:start="49:54" pos:end="49:57"><expr pos:start="49:54" pos:end="49:57"><name pos:start="49:54" pos:end="49:57">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="57:33"><expr pos:start="53:5" pos:end="57:32"><call pos:start="53:5" pos:end="57:32"><name pos:start="53:5" pos:end="53:11">DPRINTF</name><argument_list pos:start="53:12" pos:end="57:32">(<argument pos:start="53:13" pos:end="53:78"><expr pos:start="53:13" pos:end="53:78"><literal type="string" pos:start="53:13" pos:end="53:78">"Enabled NVIDIA BAR0 0x88000 quirk for device %04x:%02x:%02x.%x\n"</literal></expr></argument>,

            <argument pos:start="55:13" pos:end="55:29"><expr pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:16">vdev</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:22">host</name><operator pos:start="55:23" pos:end="55:23">.</operator><name pos:start="55:24" pos:end="55:29">domain</name></name></expr></argument>, <argument pos:start="55:32" pos:end="55:45"><expr pos:start="55:32" pos:end="55:45"><name pos:start="55:32" pos:end="55:45"><name pos:start="55:32" pos:end="55:35">vdev</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:41">host</name><operator pos:start="55:42" pos:end="55:42">.</operator><name pos:start="55:43" pos:end="55:45">bus</name></name></expr></argument>, <argument pos:start="55:48" pos:end="55:62"><expr pos:start="55:48" pos:end="55:62"><name pos:start="55:48" pos:end="55:62"><name pos:start="55:48" pos:end="55:51">vdev</name><operator pos:start="55:52" pos:end="55:53">-&gt;</operator><name pos:start="55:54" pos:end="55:57">host</name><operator pos:start="55:58" pos:end="55:58">.</operator><name pos:start="55:59" pos:end="55:62">slot</name></name></expr></argument>,

            <argument pos:start="57:13" pos:end="57:31"><expr pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:16">vdev</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:22">host</name><operator pos:start="57:23" pos:end="57:23">.</operator><name pos:start="57:24" pos:end="57:31">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
