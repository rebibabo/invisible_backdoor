<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25020.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">uart_read_rx_fifo</name><parameter_list pos:start="1:30" pos:end="1:56">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:39">UartState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:52">uint32_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:26">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:71">(<expr pos:start="5:9" pos:end="5:70"><operator pos:start="5:9" pos:end="5:9">(</operator><name pos:start="5:10" pos:end="5:19"><name pos:start="5:10" pos:end="5:10">s</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:13">r</name><index pos:start="5:14" pos:end="5:19">[<expr pos:start="5:15" pos:end="5:18"><name pos:start="5:15" pos:end="5:18">R_CR</name></expr>]</index></name> <operator pos:start="5:21" pos:end="5:21">&amp;</operator> <name pos:start="5:23" pos:end="5:36">UART_CR_RX_DIS</name><operator pos:start="5:37" pos:end="5:37">)</operator> <operator pos:start="5:39" pos:end="5:40">||</operator> <operator pos:start="5:42" pos:end="5:42">!</operator><operator pos:start="5:43" pos:end="5:43">(</operator><name pos:start="5:44" pos:end="5:53"><name pos:start="5:44" pos:end="5:44">s</name><operator pos:start="5:45" pos:end="5:46">-&gt;</operator><name pos:start="5:47" pos:end="5:47">r</name><index pos:start="5:48" pos:end="5:53">[<expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">R_CR</name></expr>]</index></name> <operator pos:start="5:55" pos:end="5:55">&amp;</operator> <name pos:start="5:57" pos:end="5:69">UART_CR_RX_EN</name><operator pos:start="5:70" pos:end="5:70">)</operator></expr>)</condition> <block pos:start="5:73" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:15">

        <return pos:start="7:9" pos:end="7:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="13:5" pos:end="31:5"><if pos:start="13:5" pos:end="27:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:19">rx_count</name></name></expr>)</condition> <block pos:start="13:22" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:38">

        <decl_stmt pos:start="15:9" pos:end="17:73"><decl pos:start="15:9" pos:end="17:72"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint32_t</name></type> <name pos:start="15:18" pos:end="15:24">rx_rpos</name> <init pos:start="15:26" pos:end="17:72">=

                <expr pos:start="17:17" pos:end="17:72"><operator pos:start="17:17" pos:end="17:17">(</operator><name pos:start="17:18" pos:end="17:29">RX_FIFO_SIZE</name> <operator pos:start="17:31" pos:end="17:31">+</operator> <name pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:42">rx_wpos</name></name> <operator pos:start="17:44" pos:end="17:44">-</operator> <name pos:start="17:46" pos:end="17:56"><name pos:start="17:46" pos:end="17:46">s</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:56">rx_count</name></name><operator pos:start="17:57" pos:end="17:57">)</operator> <operator pos:start="17:59" pos:end="17:59">%</operator> <name pos:start="17:61" pos:end="17:72">RX_FIFO_SIZE</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:10">c</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:32"><name pos:start="19:14" pos:end="19:14">s</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:23">rx_fifo</name><index pos:start="19:24" pos:end="19:32">[<expr pos:start="19:25" pos:end="19:31"><name pos:start="19:25" pos:end="19:31">rx_rpos</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:22"><expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:19">rx_count</name></name><operator pos:start="21:20" pos:end="21:21">--</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><call pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:29">qemu_chr_accept_input</name><argument_list pos:start="25:30" pos:end="25:37">(<argument pos:start="25:31" pos:end="25:36"><expr pos:start="25:31" pos:end="25:36"><name pos:start="25:31" pos:end="25:36"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:36">chr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:15">

        <expr_stmt pos:start="29:9" pos:end="29:15"><expr pos:start="29:9" pos:end="29:14"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:10">c</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><call pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:22">uart_update_status</name><argument_list pos:start="35:23" pos:end="35:25">(<argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><name pos:start="35:24" pos:end="35:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
