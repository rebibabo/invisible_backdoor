<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4793.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">USBDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:39">usb_try_create_simple</name><parameter_list pos:start="1:40" pos:end="3:53">(<parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:46">USBBus</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">bus</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:63">char</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">name</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:52"><decl pos:start="3:41" pos:end="3:52"><type pos:start="3:41" pos:end="3:52"><name pos:start="3:41" pos:end="3:45">Error</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier><modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">USBDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">dev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:56"><expr pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:7">dev</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:55"><name pos:start="13:11" pos:end="13:20">USB_DEVICE</name><argument_list pos:start="13:21" pos:end="13:55">(<argument pos:start="13:22" pos:end="13:54"><expr pos:start="13:22" pos:end="13:54"><call pos:start="13:22" pos:end="13:54"><name pos:start="13:22" pos:end="13:36">qdev_try_create</name><argument_list pos:start="13:37" pos:end="13:54">(<argument pos:start="13:38" pos:end="13:47"><expr pos:start="13:38" pos:end="13:47"><operator pos:start="13:38" pos:end="13:38">&amp;</operator><name pos:start="13:39" pos:end="13:47"><name pos:start="13:39" pos:end="13:41">bus</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:47">qbus</name></name></expr></argument>, <argument pos:start="13:50" pos:end="13:53"><expr pos:start="13:50" pos:end="13:53"><name pos:start="13:50" pos:end="13:53">name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">dev</name></expr>)</condition> <block pos:start="15:15" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:20">

        <expr_stmt pos:start="17:9" pos:end="17:67"><expr pos:start="17:9" pos:end="17:66"><call pos:start="17:9" pos:end="17:66"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:66">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:59"><expr pos:start="17:26" pos:end="17:59"><literal type="string" pos:start="17:26" pos:end="17:59">"Failed to create USB device '%s'"</literal></expr></argument>, <argument pos:start="17:62" pos:end="17:65"><expr pos:start="17:62" pos:end="17:65"><name pos:start="17:62" pos:end="17:65">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:66"><expr pos:start="23:5" pos:end="23:65"><call pos:start="23:5" pos:end="23:65"><name pos:start="23:5" pos:end="23:28">object_property_set_bool</name><argument_list pos:start="23:29" pos:end="23:65">(<argument pos:start="23:30" pos:end="23:40"><expr pos:start="23:30" pos:end="23:40"><call pos:start="23:30" pos:end="23:40"><name pos:start="23:30" pos:end="23:35">OBJECT</name><argument_list pos:start="23:36" pos:end="23:40">(<argument pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:39">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:43" pos:end="23:46"><expr pos:start="23:43" pos:end="23:46"><name pos:start="23:43" pos:end="23:46">true</name></expr></argument>, <argument pos:start="23:49" pos:end="23:58"><expr pos:start="23:49" pos:end="23:58"><literal type="string" pos:start="23:49" pos:end="23:58">"realized"</literal></expr></argument>, <argument pos:start="23:61" pos:end="23:64"><expr pos:start="23:61" pos:end="23:64"><operator pos:start="23:61" pos:end="23:61">&amp;</operator><name pos:start="23:62" pos:end="23:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">err</name></expr>)</condition> <block pos:start="25:14" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:20">

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><call pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:23">error_propagate</name><argument_list pos:start="27:24" pos:end="27:34">(<argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">errp</name></expr></argument>, <argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:28"><expr pos:start="29:9" pos:end="31:27"><call pos:start="29:9" pos:end="31:27"><name pos:start="29:9" pos:end="29:21">error_prepend</name><argument_list pos:start="29:22" pos:end="31:27">(<argument pos:start="29:23" pos:end="29:26"><expr pos:start="29:23" pos:end="29:26"><name pos:start="29:23" pos:end="29:26">errp</name></expr></argument>, <argument pos:start="29:29" pos:end="29:68"><expr pos:start="29:29" pos:end="29:68"><literal type="string" pos:start="29:29" pos:end="29:68">"Failed to initialize USB device '%s': "</literal></expr></argument>,

                      <argument pos:start="31:23" pos:end="31:26"><expr pos:start="31:23" pos:end="31:26"><name pos:start="31:23" pos:end="31:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><call pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:23">object_unparent</name><argument_list pos:start="33:24" pos:end="33:36">(<argument pos:start="33:25" pos:end="33:35"><expr pos:start="33:25" pos:end="33:35"><call pos:start="33:25" pos:end="33:35"><name pos:start="33:25" pos:end="33:30">OBJECT</name><argument_list pos:start="33:31" pos:end="33:35">(<argument pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:34">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="39:5" pos:end="39:15">return <expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
