<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19072.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">imc_decode_init</name><parameter_list pos:start="1:35" pos:end="1:58">(<parameter pos:start="1:36" pos:end="1:57"><decl pos:start="1:36" pos:end="1:57"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type> <name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">IMCContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">q</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:13">r1</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:10"/><name pos:start="9:16" pos:end="9:17">r2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:5">q</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:20">decoder_reset</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <literal type="number" pos:start="13:24" pos:end="13:24">1</literal></expr>;</expr_stmt>



    <for pos:start="17:5" pos:end="19:30">for<control pos:start="17:8" pos:end="17:30">(<init pos:start="17:9" pos:end="17:14"><expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:9">i</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <literal type="number" pos:start="17:13" pos:end="17:13">0</literal></expr>;</init> <condition pos:start="17:16" pos:end="17:25"><expr pos:start="17:16" pos:end="17:24"><name pos:start="17:16" pos:end="17:16">i</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <name pos:start="17:20" pos:end="17:24">BANDS</name></expr>;</condition> <incr pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:27">i</name><operator pos:start="17:28" pos:end="17:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="19:30"><block_content pos:start="19:9" pos:end="19:30">

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">q</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">old_floor</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">i</name></expr>]</index></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <literal type="number" pos:start="19:27" pos:end="19:29">1.0</literal></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="23:5" pos:end="23:73">/* Build mdct window, a simple sine window normalized with sqrt(2) */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><call pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:23">ff_sine_window_init</name><argument_list pos:start="25:24" pos:end="25:52">(<argument pos:start="25:25" pos:end="25:43"><expr pos:start="25:25" pos:end="25:43"><name pos:start="25:25" pos:end="25:43"><name pos:start="25:25" pos:end="25:25">q</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:43">mdct_sine_window</name></name></expr></argument>, <argument pos:start="25:46" pos:end="25:51"><expr pos:start="25:46" pos:end="25:51"><name pos:start="25:46" pos:end="25:51">COEFFS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="29:44">for<control pos:start="27:8" pos:end="27:31">(<init pos:start="27:9" pos:end="27:14"><expr pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:9">i</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr>;</init> <condition pos:start="27:16" pos:end="27:26"><expr pos:start="27:16" pos:end="27:25"><name pos:start="27:16" pos:end="27:16">i</name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <name pos:start="27:20" pos:end="27:25">COEFFS</name></expr>;</condition> <incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:28">i</name><operator pos:start="27:29" pos:end="27:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:9" pos:end="29:44"><block_content pos:start="29:9" pos:end="29:44">

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:9">q</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:27">mdct_sine_window</name><index pos:start="29:28" pos:end="29:30">[<expr pos:start="29:29" pos:end="29:29"><name pos:start="29:29" pos:end="29:29">i</name></expr>]</index></name> <operator pos:start="29:32" pos:end="29:33">*=</operator> <call pos:start="29:35" pos:end="29:43"><name pos:start="29:35" pos:end="29:38">sqrt</name><argument_list pos:start="29:39" pos:end="29:43">(<argument pos:start="29:40" pos:end="29:42"><expr pos:start="29:40" pos:end="29:42"><literal type="number" pos:start="29:40" pos:end="29:42">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="31:5" pos:end="69:5">for<control pos:start="31:8" pos:end="31:33">(<init pos:start="31:9" pos:end="31:14"><expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">i</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>;</init> <condition pos:start="31:16" pos:end="31:28"><expr pos:start="31:16" pos:end="31:27"><name pos:start="31:16" pos:end="31:16">i</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <name pos:start="31:20" pos:end="31:25">COEFFS</name><operator pos:start="31:26" pos:end="31:26">/</operator><literal type="number" pos:start="31:27" pos:end="31:27">2</literal></expr>;</condition> <incr pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:30">i</name><operator pos:start="31:31" pos:end="31:32">++</operator></expr></incr>)</control><block pos:start="31:34" pos:end="69:5">{<block_content pos:start="33:9" pos:end="67:30">

        <expr_stmt pos:start="33:9" pos:end="33:64"><expr pos:start="33:9" pos:end="33:63"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:9">q</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">post_cos</name><index pos:start="33:20" pos:end="33:22">[<expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">i</name></expr>]</index></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <operator pos:start="33:26" pos:end="33:26">(</operator><literal type="number" pos:start="33:27" pos:end="33:30">1.0f</literal> <operator pos:start="33:32" pos:end="33:32">/</operator> <literal type="number" pos:start="33:34" pos:end="33:38">32768</literal><operator pos:start="33:39" pos:end="33:39">)</operator> <operator pos:start="33:41" pos:end="33:41">*</operator> <call pos:start="33:43" pos:end="33:63"><name pos:start="33:43" pos:end="33:45">cos</name><argument_list pos:start="33:46" pos:end="33:63">(<argument pos:start="33:47" pos:end="33:62"><expr pos:start="33:47" pos:end="33:62"><name pos:start="33:47" pos:end="33:47">i</name> <operator pos:start="33:49" pos:end="33:49">/</operator> <literal type="number" pos:start="33:51" pos:end="33:55">256.0</literal> <operator pos:start="33:57" pos:end="33:57">*</operator> <name pos:start="33:59" pos:end="33:62">M_PI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:64"><expr pos:start="35:9" pos:end="35:63"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:9">q</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:19">post_sin</name><index pos:start="35:20" pos:end="35:22">[<expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">i</name></expr>]</index></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <operator pos:start="35:26" pos:end="35:26">(</operator><literal type="number" pos:start="35:27" pos:end="35:30">1.0f</literal> <operator pos:start="35:32" pos:end="35:32">/</operator> <literal type="number" pos:start="35:34" pos:end="35:38">32768</literal><operator pos:start="35:39" pos:end="35:39">)</operator> <operator pos:start="35:41" pos:end="35:41">*</operator> <call pos:start="35:43" pos:end="35:63"><name pos:start="35:43" pos:end="35:45">sin</name><argument_list pos:start="35:46" pos:end="35:63">(<argument pos:start="35:47" pos:end="35:62"><expr pos:start="35:47" pos:end="35:62"><name pos:start="35:47" pos:end="35:47">i</name> <operator pos:start="35:49" pos:end="35:49">/</operator> <literal type="number" pos:start="35:51" pos:end="35:55">256.0</literal> <operator pos:start="35:57" pos:end="35:57">*</operator> <name pos:start="35:59" pos:end="35:62">M_PI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:50"><expr pos:start="39:9" pos:end="39:49"><name pos:start="39:9" pos:end="39:10">r1</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:49"><name pos:start="39:14" pos:end="39:16">sin</name><argument_list pos:start="39:17" pos:end="39:49">(<argument pos:start="39:18" pos:end="39:48"><expr pos:start="39:18" pos:end="39:48"><operator pos:start="39:18" pos:end="39:18">(</operator><name pos:start="39:19" pos:end="39:19">i</name> <operator pos:start="39:21" pos:end="39:21">*</operator> <literal type="number" pos:start="39:23" pos:end="39:27">4.0</literal> <operator pos:start="39:27" pos:end="39:27">+</operator> <literal type="number" pos:start="39:29" pos:end="39:31">1.0</literal><operator pos:start="39:32" pos:end="39:32">)</operator> <operator pos:start="39:34" pos:end="39:34">/</operator> <literal type="number" pos:start="39:36" pos:end="39:41">1024.0</literal> <operator pos:start="39:43" pos:end="39:43">*</operator> <name pos:start="39:45" pos:end="39:48">M_PI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:50"><expr pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:10">r2</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:49"><name pos:start="41:14" pos:end="41:16">cos</name><argument_list pos:start="41:17" pos:end="41:49">(<argument pos:start="41:18" pos:end="41:48"><expr pos:start="41:18" pos:end="41:48"><operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:19">i</name> <operator pos:start="41:21" pos:end="41:21">*</operator> <literal type="number" pos:start="41:23" pos:end="41:27">4.0</literal> <operator pos:start="41:27" pos:end="41:27">+</operator> <literal type="number" pos:start="41:29" pos:end="41:31">1.0</literal><operator pos:start="41:32" pos:end="41:32">)</operator> <operator pos:start="41:34" pos:end="41:34">/</operator> <literal type="number" pos:start="41:36" pos:end="41:41">1024.0</literal> <operator pos:start="41:43" pos:end="41:43">*</operator> <name pos:start="41:45" pos:end="41:48">M_PI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="63:9"><if pos:start="45:9" pos:end="53:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:13">i</name> <operator pos:start="45:15" pos:end="45:15">&amp;</operator> <literal type="number" pos:start="45:17" pos:end="45:19">0x1</literal></expr>)</condition>

        <block pos:start="47:9" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:53">

            <expr_stmt pos:start="49:13" pos:end="49:53"><expr pos:start="49:13" pos:end="49:52"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:13">q</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:24">pre_coef1</name><index pos:start="49:25" pos:end="49:27">[<expr pos:start="49:26" pos:end="49:26"><name pos:start="49:26" pos:end="49:26">i</name></expr>]</index></name> <operator pos:start="49:29" pos:end="49:29">=</operator>  <operator pos:start="49:32" pos:end="49:32">(</operator><name pos:start="49:33" pos:end="49:34">r1</name> <operator pos:start="49:36" pos:end="49:36">+</operator> <name pos:start="49:38" pos:end="49:39">r2</name><operator pos:start="49:40" pos:end="49:40">)</operator> <operator pos:start="49:42" pos:end="49:42">*</operator> <call pos:start="49:44" pos:end="49:52"><name pos:start="49:44" pos:end="49:47">sqrt</name><argument_list pos:start="49:48" pos:end="49:52">(<argument pos:start="49:49" pos:end="49:51"><expr pos:start="49:49" pos:end="49:51"><literal type="number" pos:start="49:49" pos:end="49:51">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:53"><expr pos:start="51:13" pos:end="51:52"><name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:13">q</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:24">pre_coef2</name><index pos:start="51:25" pos:end="51:27">[<expr pos:start="51:26" pos:end="51:26"><name pos:start="51:26" pos:end="51:26">i</name></expr>]</index></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <operator pos:start="51:31" pos:end="51:31">-</operator><operator pos:start="51:32" pos:end="51:32">(</operator><name pos:start="51:33" pos:end="51:34">r1</name> <operator pos:start="51:36" pos:end="51:36">-</operator> <name pos:start="51:38" pos:end="51:39">r2</name><operator pos:start="51:40" pos:end="51:40">)</operator> <operator pos:start="51:42" pos:end="51:42">*</operator> <call pos:start="51:44" pos:end="51:52"><name pos:start="51:44" pos:end="51:47">sqrt</name><argument_list pos:start="51:48" pos:end="51:52">(<argument pos:start="51:49" pos:end="51:51"><expr pos:start="51:49" pos:end="51:51"><literal type="number" pos:start="51:49" pos:end="51:51">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="55:9" pos:end="63:9">else

        <block pos:start="57:9" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:53">

            <expr_stmt pos:start="59:13" pos:end="59:53"><expr pos:start="59:13" pos:end="59:52"><name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:13">q</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:24">pre_coef1</name><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">i</name></expr>]</index></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <operator pos:start="59:31" pos:end="59:31">-</operator><operator pos:start="59:32" pos:end="59:32">(</operator><name pos:start="59:33" pos:end="59:34">r1</name> <operator pos:start="59:36" pos:end="59:36">+</operator> <name pos:start="59:38" pos:end="59:39">r2</name><operator pos:start="59:40" pos:end="59:40">)</operator> <operator pos:start="59:42" pos:end="59:42">*</operator> <call pos:start="59:44" pos:end="59:52"><name pos:start="59:44" pos:end="59:47">sqrt</name><argument_list pos:start="59:48" pos:end="59:52">(<argument pos:start="59:49" pos:end="59:51"><expr pos:start="59:49" pos:end="59:51"><literal type="number" pos:start="59:49" pos:end="59:51">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:53"><expr pos:start="61:13" pos:end="61:52"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:13">q</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:24">pre_coef2</name><index pos:start="61:25" pos:end="61:27">[<expr pos:start="61:26" pos:end="61:26"><name pos:start="61:26" pos:end="61:26">i</name></expr>]</index></name> <operator pos:start="61:29" pos:end="61:29">=</operator>  <operator pos:start="61:32" pos:end="61:32">(</operator><name pos:start="61:33" pos:end="61:34">r1</name> <operator pos:start="61:36" pos:end="61:36">-</operator> <name pos:start="61:38" pos:end="61:39">r2</name><operator pos:start="61:40" pos:end="61:40">)</operator> <operator pos:start="61:42" pos:end="61:42">*</operator> <call pos:start="61:44" pos:end="61:52"><name pos:start="61:44" pos:end="61:47">sqrt</name><argument_list pos:start="61:48" pos:end="61:52">(<argument pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><literal type="number" pos:start="61:49" pos:end="61:51">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:9">q</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:22">last_fft_im</name><index pos:start="67:23" pos:end="67:25">[<expr pos:start="67:24" pos:end="67:24"><name pos:start="67:24" pos:end="67:24">i</name></expr>]</index></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <literal type="number" pos:start="67:29" pos:end="67:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="73:5" pos:end="73:38">/* Generate a square root table */</comment>



    <for pos:start="77:5" pos:end="81:5">for<control pos:start="77:8" pos:end="77:27">(<init pos:start="77:9" pos:end="77:14"><expr pos:start="77:9" pos:end="77:13"><name pos:start="77:9" pos:end="77:9">i</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <literal type="number" pos:start="77:13" pos:end="77:13">0</literal></expr>;</init> <condition pos:start="77:16" pos:end="77:22"><expr pos:start="77:16" pos:end="77:21"><name pos:start="77:16" pos:end="77:16">i</name> <operator pos:start="77:18" pos:end="77:18">&lt;</operator> <literal type="number" pos:start="77:20" pos:end="77:21">30</literal></expr>;</condition> <incr pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:24">i</name><operator pos:start="77:25" pos:end="77:26">++</operator></expr></incr>)</control> <block pos:start="77:29" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:33">

        <expr_stmt pos:start="79:9" pos:end="79:33"><expr pos:start="79:9" pos:end="79:32"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:9">q</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:19">sqrt_tab</name><index pos:start="79:20" pos:end="79:22">[<expr pos:start="79:21" pos:end="79:21"><name pos:start="79:21" pos:end="79:21">i</name></expr>]</index></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:32"><name pos:start="79:26" pos:end="79:29">sqrt</name><argument_list pos:start="79:30" pos:end="79:32">(<argument pos:start="79:31" pos:end="79:31"><expr pos:start="79:31" pos:end="79:31"><name pos:start="79:31" pos:end="79:31">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="85:5" pos:end="85:35">/* initialize the VLC tables */</comment>

    <for pos:start="87:5" pos:end="103:5">for<control pos:start="87:8" pos:end="87:27">(<init pos:start="87:9" pos:end="87:14"><expr pos:start="87:9" pos:end="87:13"><name pos:start="87:9" pos:end="87:9">i</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <literal type="number" pos:start="87:13" pos:end="87:13">0</literal></expr>;</init> <condition pos:start="87:16" pos:end="87:22"><expr pos:start="87:16" pos:end="87:20"><name pos:start="87:16" pos:end="87:16">i</name> <operator pos:start="87:18" pos:end="87:18">&lt;</operator> <literal type="number" pos:start="87:20" pos:end="87:20">4</literal></expr> ;</condition> <incr pos:start="87:24" pos:end="87:26"><expr pos:start="87:24" pos:end="87:26"><name pos:start="87:24" pos:end="87:24">i</name><operator pos:start="87:25" pos:end="87:26">++</operator></expr></incr>)</control> <block pos:start="87:29" pos:end="103:5">{<block_content pos:start="89:9" pos:end="101:9">

        <for pos:start="89:9" pos:end="101:9">for<control pos:start="89:12" pos:end="89:30">(<init pos:start="89:13" pos:end="89:18"><expr pos:start="89:13" pos:end="89:17"><name pos:start="89:13" pos:end="89:13">j</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <literal type="number" pos:start="89:17" pos:end="89:17">0</literal></expr>;</init> <condition pos:start="89:20" pos:end="89:25"><expr pos:start="89:20" pos:end="89:24"><name pos:start="89:20" pos:end="89:20">j</name> <operator pos:start="89:22" pos:end="89:22">&lt;</operator> <literal type="number" pos:start="89:24" pos:end="89:24">4</literal></expr>;</condition> <incr pos:start="89:27" pos:end="89:29"><expr pos:start="89:27" pos:end="89:29"><name pos:start="89:27" pos:end="89:27">j</name><operator pos:start="89:28" pos:end="89:29">++</operator></expr></incr>)</control> <block pos:start="89:32" pos:end="101:9">{<block_content pos:start="91:13" pos:end="99:76">

            <expr_stmt pos:start="91:13" pos:end="91:74"><expr pos:start="91:13" pos:end="91:73"><name pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:23">huffman_vlc</name><index pos:start="91:24" pos:end="91:26">[<expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">i</name></expr>]</index><index pos:start="91:27" pos:end="91:29">[<expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">j</name></expr>]</index></name><operator pos:start="91:30" pos:end="91:30">.</operator><name pos:start="91:31" pos:end="91:35">table</name> <operator pos:start="91:37" pos:end="91:37">=</operator> <operator pos:start="91:39" pos:end="91:39">&amp;</operator><name pos:start="91:40" pos:end="91:73"><name pos:start="91:40" pos:end="91:49">vlc_tables</name><index pos:start="91:50" pos:end="91:73">[<expr pos:start="91:51" pos:end="91:72"><name pos:start="91:51" pos:end="91:72"><name pos:start="91:51" pos:end="91:61">vlc_offsets</name><index pos:start="91:62" pos:end="91:72">[<expr pos:start="91:63" pos:end="91:71"><name pos:start="91:63" pos:end="91:63">i</name> <operator pos:start="91:65" pos:end="91:65">*</operator> <literal type="number" pos:start="91:67" pos:end="91:69">4</literal> <operator pos:start="91:69" pos:end="91:69">+</operator> <name pos:start="91:71" pos:end="91:71">j</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:100"><expr pos:start="93:13" pos:end="93:99"><name pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:23">huffman_vlc</name><index pos:start="93:24" pos:end="93:26">[<expr pos:start="93:25" pos:end="93:25"><name pos:start="93:25" pos:end="93:25">i</name></expr>]</index><index pos:start="93:27" pos:end="93:29">[<expr pos:start="93:28" pos:end="93:28"><name pos:start="93:28" pos:end="93:28">j</name></expr>]</index></name><operator pos:start="93:30" pos:end="93:30">.</operator><name pos:start="93:31" pos:end="93:45">table_allocated</name> <operator pos:start="93:47" pos:end="93:47">=</operator> <name pos:start="93:49" pos:end="93:74"><name pos:start="93:49" pos:end="93:59">vlc_offsets</name><index pos:start="93:60" pos:end="93:74">[<expr pos:start="93:61" pos:end="93:73"><name pos:start="93:61" pos:end="93:61">i</name> <operator pos:start="93:63" pos:end="93:63">*</operator> <literal type="number" pos:start="93:65" pos:end="93:67">4</literal> <operator pos:start="93:67" pos:end="93:67">+</operator> <name pos:start="93:69" pos:end="93:69">j</name> <operator pos:start="93:71" pos:end="93:71">+</operator> <literal type="number" pos:start="93:73" pos:end="93:73">1</literal></expr>]</index></name> <operator pos:start="93:76" pos:end="93:76">-</operator> <name pos:start="93:78" pos:end="93:99"><name pos:start="93:78" pos:end="93:88">vlc_offsets</name><index pos:start="93:89" pos:end="93:99">[<expr pos:start="93:90" pos:end="93:98"><name pos:start="93:90" pos:end="93:90">i</name> <operator pos:start="93:92" pos:end="93:92">*</operator> <literal type="number" pos:start="93:94" pos:end="93:96">4</literal> <operator pos:start="93:96" pos:end="93:96">+</operator> <name pos:start="93:98" pos:end="93:98">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="99:76"><expr pos:start="95:13" pos:end="99:75"><call pos:start="95:13" pos:end="99:75"><name pos:start="95:13" pos:end="95:20">init_vlc</name><argument_list pos:start="95:21" pos:end="99:75">(<argument pos:start="95:22" pos:end="95:39"><expr pos:start="95:22" pos:end="95:39"><operator pos:start="95:22" pos:end="95:22">&amp;</operator><name pos:start="95:23" pos:end="95:39"><name pos:start="95:23" pos:end="95:33">huffman_vlc</name><index pos:start="95:34" pos:end="95:36">[<expr pos:start="95:35" pos:end="95:35"><name pos:start="95:35" pos:end="95:35">i</name></expr>]</index><index pos:start="95:37" pos:end="95:39">[<expr pos:start="95:38" pos:end="95:38"><name pos:start="95:38" pos:end="95:38">j</name></expr>]</index></name></expr></argument>, <argument pos:start="95:42" pos:end="95:42"><expr pos:start="95:42" pos:end="95:42"><literal type="number" pos:start="95:42" pos:end="95:42">9</literal></expr></argument>, <argument pos:start="95:45" pos:end="95:64"><expr pos:start="95:45" pos:end="95:64"><name pos:start="95:45" pos:end="95:64"><name pos:start="95:45" pos:end="95:61">imc_huffman_sizes</name><index pos:start="95:62" pos:end="95:64">[<expr pos:start="95:63" pos:end="95:63"><name pos:start="95:63" pos:end="95:63">i</name></expr>]</index></name></expr></argument>,

                     <argument pos:start="97:22" pos:end="97:43"><expr pos:start="97:22" pos:end="97:43"><name pos:start="97:22" pos:end="97:43"><name pos:start="97:22" pos:end="97:37">imc_huffman_lens</name><index pos:start="97:38" pos:end="97:40">[<expr pos:start="97:39" pos:end="97:39"><name pos:start="97:39" pos:end="97:39">i</name></expr>]</index><index pos:start="97:41" pos:end="97:43">[<expr pos:start="97:42" pos:end="97:42"><name pos:start="97:42" pos:end="97:42">j</name></expr>]</index></name></expr></argument>, <argument pos:start="97:46" pos:end="97:46"><expr pos:start="97:46" pos:end="97:46"><literal type="number" pos:start="97:46" pos:end="97:46">1</literal></expr></argument>, <argument pos:start="97:49" pos:end="97:49"><expr pos:start="97:49" pos:end="97:49"><literal type="number" pos:start="97:49" pos:end="97:49">1</literal></expr></argument>,

                     <argument pos:start="99:22" pos:end="99:43"><expr pos:start="99:22" pos:end="99:43"><name pos:start="99:22" pos:end="99:43"><name pos:start="99:22" pos:end="99:37">imc_huffman_bits</name><index pos:start="99:38" pos:end="99:40">[<expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">i</name></expr>]</index><index pos:start="99:41" pos:end="99:43">[<expr pos:start="99:42" pos:end="99:42"><name pos:start="99:42" pos:end="99:42">j</name></expr>]</index></name></expr></argument>, <argument pos:start="99:46" pos:end="99:46"><expr pos:start="99:46" pos:end="99:46"><literal type="number" pos:start="99:46" pos:end="99:46">2</literal></expr></argument>, <argument pos:start="99:49" pos:end="99:49"><expr pos:start="99:49" pos:end="99:49"><literal type="number" pos:start="99:49" pos:end="99:49">2</literal></expr></argument>, <argument pos:start="99:52" pos:end="99:74"><expr pos:start="99:52" pos:end="99:74"><name pos:start="99:52" pos:end="99:74">INIT_VLC_USE_NEW_STATIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="105:5" pos:end="105:31"><expr pos:start="105:5" pos:end="105:30"><name pos:start="105:5" pos:end="105:19"><name pos:start="105:5" pos:end="105:5">q</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:19">one_div_log2</name></name> <operator pos:start="105:21" pos:end="105:21">=</operator> <literal type="number" pos:start="105:23" pos:end="105:23">1</literal><operator pos:start="105:24" pos:end="105:24">/</operator><call pos:start="105:25" pos:end="105:30"><name pos:start="105:25" pos:end="105:27">log</name><argument_list pos:start="105:28" pos:end="105:30">(<argument pos:start="105:29" pos:end="105:29"><expr pos:start="105:29" pos:end="105:29"><literal type="number" pos:start="105:29" pos:end="105:29">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:31"><expr pos:start="109:5" pos:end="109:30"><call pos:start="109:5" pos:end="109:30"><name pos:start="109:5" pos:end="109:15">ff_fft_init</name><argument_list pos:start="109:16" pos:end="109:30">(<argument pos:start="109:17" pos:end="109:23"><expr pos:start="109:17" pos:end="109:23"><operator pos:start="109:17" pos:end="109:17">&amp;</operator><name pos:start="109:18" pos:end="109:23"><name pos:start="109:18" pos:end="109:18">q</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:23">fft</name></name></expr></argument>, <argument pos:start="109:26" pos:end="109:26"><expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">7</literal></expr></argument>, <argument pos:start="109:29" pos:end="109:29"><expr pos:start="109:29" pos:end="109:29"><literal type="number" pos:start="109:29" pos:end="109:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:33"><expr pos:start="111:5" pos:end="111:32"><call pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:16">dsputil_init</name><argument_list pos:start="111:17" pos:end="111:32">(<argument pos:start="111:18" pos:end="111:24"><expr pos:start="111:18" pos:end="111:24"><operator pos:start="111:18" pos:end="111:18">&amp;</operator><name pos:start="111:19" pos:end="111:24"><name pos:start="111:19" pos:end="111:19">q</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:24">dsp</name></name></expr></argument>, <argument pos:start="111:27" pos:end="111:31"><expr pos:start="111:27" pos:end="111:31"><name pos:start="111:27" pos:end="111:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:42"><expr pos:start="113:5" pos:end="113:41"><name pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:9">avctx</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:21">sample_fmt</name></name> <operator pos:start="113:23" pos:end="113:23">=</operator> <name pos:start="113:25" pos:end="113:41">AV_SAMPLE_FMT_FLT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:91"><expr pos:start="115:5" pos:end="115:90"><name pos:start="115:5" pos:end="115:25"><name pos:start="115:5" pos:end="115:9">avctx</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:25">channel_layout</name></name> <operator pos:start="115:27" pos:end="115:27">=</operator> <ternary pos:start="115:29" pos:end="115:90"><condition pos:start="115:29" pos:end="115:50"><expr pos:start="115:29" pos:end="115:48"><operator pos:start="115:29" pos:end="115:29">(</operator><name pos:start="115:30" pos:end="115:44"><name pos:start="115:30" pos:end="115:34">avctx</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:44">channels</name></name><operator pos:start="115:45" pos:end="115:46">==</operator><literal type="number" pos:start="115:47" pos:end="115:47">2</literal><operator pos:start="115:48" pos:end="115:48">)</operator></expr> ?</condition><then pos:start="115:52" pos:end="115:70"> <expr pos:start="115:52" pos:end="115:70"><name pos:start="115:52" pos:end="115:70">AV_CH_LAYOUT_STEREO</name></expr> </then><else pos:start="115:72" pos:end="115:90">: <expr pos:start="115:74" pos:end="115:90"><name pos:start="115:74" pos:end="115:90">AV_CH_LAYOUT_MONO</name></expr></else></ternary></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
