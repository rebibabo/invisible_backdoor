<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3501.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:42">h_register_logical_lan</name><parameter_list pos:start="1:43" pos:end="7:62">(<parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:54">CPUPPCState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">env</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:66"><decl pos:start="3:44" pos:end="3:66"><type pos:start="3:44" pos:end="3:66"><name pos:start="3:44" pos:end="3:59">sPAPREnvironment</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:66">spapr</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:62"><decl pos:start="5:44" pos:end="5:62"><type pos:start="5:44" pos:end="5:62"><name pos:start="5:44" pos:end="5:55">target_ulong</name></type> <name pos:start="5:57" pos:end="5:62">opcode</name></decl></parameter>,

                                           <parameter pos:start="7:44" pos:end="7:61"><decl pos:start="7:44" pos:end="7:61"><type pos:start="7:44" pos:end="7:61"><name pos:start="7:44" pos:end="7:55">target_ulong</name> <modifier pos:start="7:57" pos:end="7:57">*</modifier></type><name pos:start="7:58" pos:end="7:61">args</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="123:1">{<block_content pos:start="11:5" pos:end="121:21">

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:20">reg</name> <init pos:start="11:22" pos:end="11:30">= <expr pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:27">args</name><index pos:start="11:28" pos:end="11:30">[<expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:25">buf_list</name> <init pos:start="13:27" pos:end="13:35">= <expr pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:32">args</name><index pos:start="13:33" pos:end="13:35">[<expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:26">rec_queue</name> <init pos:start="15:28" pos:end="15:36">= <expr pos:start="15:30" pos:end="15:36"><name pos:start="15:30" pos:end="15:36"><name pos:start="15:30" pos:end="15:33">args</name><index pos:start="15:34" pos:end="15:36">[<expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:39"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">target_ulong</name></type> <name pos:start="17:18" pos:end="17:28">filter_list</name> <init pos:start="17:30" pos:end="17:38">= <expr pos:start="17:32" pos:end="17:38"><name pos:start="17:32" pos:end="17:38"><name pos:start="17:32" pos:end="17:35">args</name><index pos:start="17:36" pos:end="17:38">[<expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:70"><decl pos:start="19:5" pos:end="19:69"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">VIOsPAPRDevice</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:24">sdev</name> <init pos:start="19:26" pos:end="19:69">= <expr pos:start="19:28" pos:end="19:69"><call pos:start="19:28" pos:end="19:69"><name pos:start="19:28" pos:end="19:48">spapr_vio_find_by_reg</name><argument_list pos:start="19:49" pos:end="19:69">(<argument pos:start="19:50" pos:end="19:63"><expr pos:start="19:50" pos:end="19:63"><name pos:start="19:50" pos:end="19:63"><name pos:start="19:50" pos:end="19:54">spapr</name><operator pos:start="19:55" pos:end="19:56">-&gt;</operator><name pos:start="19:57" pos:end="19:63">vio_bus</name></name></expr></argument>, <argument pos:start="19:66" pos:end="19:68"><expr pos:start="19:66" pos:end="19:68"><name pos:start="19:66" pos:end="19:68">reg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:57"><decl pos:start="21:5" pos:end="21:56"><type pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:22">VIOsPAPRVLANDevice</name> <modifier pos:start="21:24" pos:end="21:24">*</modifier></type><name pos:start="21:25" pos:end="21:27">dev</name> <init pos:start="21:29" pos:end="21:56">= <expr pos:start="21:31" pos:end="21:56"><operator pos:start="21:31" pos:end="21:31">(</operator><name pos:start="21:32" pos:end="21:49">VIOsPAPRVLANDevice</name> <operator pos:start="21:51" pos:end="21:51">*</operator><operator pos:start="21:52" pos:end="21:52">)</operator><name pos:start="21:53" pos:end="21:56">sdev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:29"><decl pos:start="23:5" pos:end="23:28"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:13">vlan_bd_t</name></type> <name pos:start="23:15" pos:end="23:28">filter_list_bd</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">dev</name></expr>)</condition> <block pos:start="27:15" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:27">

        <return pos:start="29:9" pos:end="29:27">return <expr pos:start="29:16" pos:end="29:26"><name pos:start="29:16" pos:end="29:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:20">(<expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:11">dev</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:19">isopen</name></name></expr>)</condition> <block pos:start="35:22" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:26">

        <expr_stmt pos:start="37:9" pos:end="39:46"><expr pos:start="37:9" pos:end="39:45"><call pos:start="37:9" pos:end="39:45"><name pos:start="37:9" pos:end="37:21">hcall_dprintf</name><argument_list pos:start="37:22" pos:end="39:45">(<argument pos:start="37:23" pos:end="39:44"><expr pos:start="37:23" pos:end="39:44"><literal type="string" pos:start="37:23" pos:end="37:68">"H_REGISTER_LOGICAL_LAN called twice without "</literal>

                      <literal type="string" pos:start="39:23" pos:end="39:44">"H_FREE_LOGICAL_LAN\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:26">return <expr pos:start="41:16" pos:end="41:25"><name pos:start="41:16" pos:end="41:25">H_RESOURCE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="49:46">(<expr pos:start="47:9" pos:end="49:45"><call pos:start="47:9" pos:end="49:41"><name pos:start="47:9" pos:end="47:16">check_bd</name><argument_list pos:start="47:17" pos:end="49:41">(<argument pos:start="47:18" pos:end="47:20"><expr pos:start="47:18" pos:end="47:20"><name pos:start="47:18" pos:end="47:20">dev</name></expr></argument>, <argument pos:start="47:23" pos:end="47:70"><expr pos:start="47:23" pos:end="47:70"><call pos:start="47:23" pos:end="47:70"><name pos:start="47:23" pos:end="47:35">VLAN_VALID_BD</name><argument_list pos:start="47:36" pos:end="47:70">(<argument pos:start="47:37" pos:end="47:44"><expr pos:start="47:37" pos:end="47:44"><name pos:start="47:37" pos:end="47:44">buf_list</name></expr></argument>, <argument pos:start="47:47" pos:end="47:69"><expr pos:start="47:47" pos:end="47:69"><name pos:start="47:47" pos:end="47:69">SPAPR_VIO_TCE_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="49:18" pos:end="49:40"><expr pos:start="49:18" pos:end="49:40"><name pos:start="49:18" pos:end="49:40">SPAPR_VIO_TCE_PAGE_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="49:43" pos:end="49:43">&lt;</operator> <literal type="number" pos:start="49:45" pos:end="49:45">0</literal></expr>)</condition> <block pos:start="49:48" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:27">

        <expr_stmt pos:start="51:9" pos:end="51:70"><expr pos:start="51:9" pos:end="51:69"><call pos:start="51:9" pos:end="51:69"><name pos:start="51:9" pos:end="51:21">hcall_dprintf</name><argument_list pos:start="51:22" pos:end="51:69">(<argument pos:start="51:23" pos:end="51:58"><expr pos:start="51:23" pos:end="51:58"><literal type="string" pos:start="51:23" pos:end="51:39">"Bad buf_list 0x"</literal> <name pos:start="51:41" pos:end="51:53">TARGET_FMT_lx</name> <literal type="string" pos:start="51:55" pos:end="51:58">"\n"</literal></expr></argument>, <argument pos:start="51:61" pos:end="51:68"><expr pos:start="51:61" pos:end="51:68"><name pos:start="51:61" pos:end="51:68">buf_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:27">return <expr pos:start="53:16" pos:end="53:26"><name pos:start="53:16" pos:end="53:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:73"><expr pos:start="59:5" pos:end="59:72"><name pos:start="59:5" pos:end="59:18">filter_list_bd</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:72"><name pos:start="59:22" pos:end="59:34">VLAN_VALID_BD</name><argument_list pos:start="59:35" pos:end="59:72">(<argument pos:start="59:36" pos:end="59:46"><expr pos:start="59:36" pos:end="59:46"><name pos:start="59:36" pos:end="59:46">filter_list</name></expr></argument>, <argument pos:start="59:49" pos:end="59:71"><expr pos:start="59:49" pos:end="59:71"><name pos:start="59:49" pos:end="59:71">SPAPR_VIO_TCE_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:67">(<expr pos:start="61:9" pos:end="61:66"><call pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:16">check_bd</name><argument_list pos:start="61:17" pos:end="61:62">(<argument pos:start="61:18" pos:end="61:20"><expr pos:start="61:18" pos:end="61:20"><name pos:start="61:18" pos:end="61:20">dev</name></expr></argument>, <argument pos:start="61:23" pos:end="61:36"><expr pos:start="61:23" pos:end="61:36"><name pos:start="61:23" pos:end="61:36">filter_list_bd</name></expr></argument>, <argument pos:start="61:39" pos:end="61:61"><expr pos:start="61:39" pos:end="61:61"><name pos:start="61:39" pos:end="61:61">SPAPR_VIO_TCE_PAGE_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="61:64" pos:end="61:64">&lt;</operator> <literal type="number" pos:start="61:66" pos:end="61:66">0</literal></expr>)</condition> <block pos:start="61:69" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:27">

        <expr_stmt pos:start="63:9" pos:end="63:76"><expr pos:start="63:9" pos:end="63:75"><call pos:start="63:9" pos:end="63:75"><name pos:start="63:9" pos:end="63:21">hcall_dprintf</name><argument_list pos:start="63:22" pos:end="63:75">(<argument pos:start="63:23" pos:end="63:61"><expr pos:start="63:23" pos:end="63:61"><literal type="string" pos:start="63:23" pos:end="63:42">"Bad filter_list 0x"</literal> <name pos:start="63:44" pos:end="63:56">TARGET_FMT_lx</name> <literal type="string" pos:start="63:58" pos:end="63:61">"\n"</literal></expr></argument>, <argument pos:start="63:64" pos:end="63:74"><expr pos:start="63:64" pos:end="63:74"><name pos:start="63:64" pos:end="63:74">filter_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:27">return <expr pos:start="65:16" pos:end="65:26"><name pos:start="65:16" pos:end="65:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="73:61">(<expr pos:start="71:9" pos:end="73:60"><operator pos:start="71:9" pos:end="71:9">!</operator><operator pos:start="71:10" pos:end="71:10">(</operator><name pos:start="71:11" pos:end="71:19">rec_queue</name> <operator pos:start="71:21" pos:end="71:21">&amp;</operator> <name pos:start="71:23" pos:end="71:35">VLAN_BD_VALID</name><operator pos:start="71:36" pos:end="71:36">)</operator>

        <operator pos:start="73:9" pos:end="73:10">||</operator> <operator pos:start="73:12" pos:end="73:12">(</operator><call pos:start="73:13" pos:end="73:55"><name pos:start="73:13" pos:end="73:20">check_bd</name><argument_list pos:start="73:21" pos:end="73:55">(<argument pos:start="73:22" pos:end="73:24"><expr pos:start="73:22" pos:end="73:24"><name pos:start="73:22" pos:end="73:24">dev</name></expr></argument>, <argument pos:start="73:27" pos:end="73:35"><expr pos:start="73:27" pos:end="73:35"><name pos:start="73:27" pos:end="73:35">rec_queue</name></expr></argument>, <argument pos:start="73:38" pos:end="73:54"><expr pos:start="73:38" pos:end="73:54"><name pos:start="73:38" pos:end="73:54">VLAN_RQ_ALIGNMENT</name></expr></argument>)</argument_list></call> <operator pos:start="73:57" pos:end="73:57">&lt;</operator> <literal type="number" pos:start="73:59" pos:end="73:59">0</literal><operator pos:start="73:60" pos:end="73:60">)</operator></expr>)</condition> <block pos:start="73:63" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:27">

        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><call pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:21">hcall_dprintf</name><argument_list pos:start="75:22" pos:end="75:44">(<argument pos:start="75:23" pos:end="75:43"><expr pos:start="75:23" pos:end="75:43"><literal type="string" pos:start="75:23" pos:end="75:43">"Bad receive queue\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:27">return <expr pos:start="77:16" pos:end="77:26"><name pos:start="77:16" pos:end="77:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:29"><expr pos:start="83:5" pos:end="83:28"><name pos:start="83:5" pos:end="83:17"><name pos:start="83:5" pos:end="83:7">dev</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:17">buf_list</name></name> <operator pos:start="83:19" pos:end="83:19">=</operator> <name pos:start="83:21" pos:end="83:28">buf_list</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:27"><expr pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:8">sdev</name><operator pos:start="85:9" pos:end="85:10">-&gt;</operator><name pos:start="85:11" pos:end="85:22">signal_state</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:33"><expr pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:13">rec_queue</name> <operator pos:start="89:15" pos:end="89:16">&amp;=</operator> <operator pos:start="89:18" pos:end="89:18">~</operator><name pos:start="89:19" pos:end="89:32">VLAN_BD_TOGGLE</name></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:36">/* Initialize the buffer list */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:39"><expr pos:start="95:5" pos:end="95:38"><call pos:start="95:5" pos:end="95:38"><name pos:start="95:5" pos:end="95:11">stq_tce</name><argument_list pos:start="95:12" pos:end="95:38">(<argument pos:start="95:13" pos:end="95:16"><expr pos:start="95:13" pos:end="95:16"><name pos:start="95:13" pos:end="95:16">sdev</name></expr></argument>, <argument pos:start="95:19" pos:end="95:26"><expr pos:start="95:19" pos:end="95:26"><name pos:start="95:19" pos:end="95:26">buf_list</name></expr></argument>, <argument pos:start="95:29" pos:end="95:37"><expr pos:start="95:29" pos:end="95:37"><name pos:start="95:29" pos:end="95:37">rec_queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:48"><expr pos:start="97:5" pos:end="97:47"><call pos:start="97:5" pos:end="97:47"><name pos:start="97:5" pos:end="97:11">stq_tce</name><argument_list pos:start="97:12" pos:end="97:47">(<argument pos:start="97:13" pos:end="97:16"><expr pos:start="97:13" pos:end="97:16"><name pos:start="97:13" pos:end="97:16">sdev</name></expr></argument>, <argument pos:start="97:19" pos:end="97:30"><expr pos:start="97:19" pos:end="97:30"><name pos:start="97:19" pos:end="97:26">buf_list</name> <operator pos:start="97:28" pos:end="97:28">+</operator> <literal type="number" pos:start="97:30" pos:end="97:30">8</literal></expr></argument>, <argument pos:start="97:33" pos:end="97:46"><expr pos:start="97:33" pos:end="97:46"><name pos:start="97:33" pos:end="97:46">filter_list_bd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="101:66"><expr pos:start="99:5" pos:end="101:65"><call pos:start="99:5" pos:end="101:65"><name pos:start="99:5" pos:end="99:22">spapr_tce_dma_zero</name><argument_list pos:start="99:23" pos:end="101:65">(<argument pos:start="99:24" pos:end="99:27"><expr pos:start="99:24" pos:end="99:27"><name pos:start="99:24" pos:end="99:27">sdev</name></expr></argument>, <argument pos:start="99:30" pos:end="99:55"><expr pos:start="99:30" pos:end="99:55"><name pos:start="99:30" pos:end="99:37">buf_list</name> <operator pos:start="99:39" pos:end="99:39">+</operator> <name pos:start="99:41" pos:end="99:55">VLAN_RX_BDS_OFF</name></expr></argument>,

                       <argument pos:start="101:24" pos:end="101:64"><expr pos:start="101:24" pos:end="101:64"><name pos:start="101:24" pos:end="101:46">SPAPR_VIO_TCE_PAGE_SIZE</name> <operator pos:start="101:48" pos:end="101:48">-</operator> <name pos:start="101:50" pos:end="101:64">VLAN_RX_BDS_OFF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:43"><expr pos:start="103:5" pos:end="103:42"><name pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:7">dev</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:20">add_buf_ptr</name></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <name pos:start="103:24" pos:end="103:38">VLAN_RX_BDS_OFF</name> <operator pos:start="103:40" pos:end="103:40">-</operator> <literal type="number" pos:start="103:42" pos:end="103:42">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:43"><expr pos:start="105:5" pos:end="105:42"><name pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:7">dev</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:20">use_buf_ptr</name></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:38">VLAN_RX_BDS_OFF</name> <operator pos:start="105:40" pos:end="105:40">-</operator> <literal type="number" pos:start="105:42" pos:end="105:42">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:21"><expr pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:16"><name pos:start="107:5" pos:end="107:7">dev</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:16">rx_bufs</name></name> <operator pos:start="107:18" pos:end="107:18">=</operator> <literal type="number" pos:start="107:20" pos:end="107:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:21"><expr pos:start="109:5" pos:end="109:20"><name pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:7">dev</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:16">rxq_ptr</name></name> <operator pos:start="109:18" pos:end="109:18">=</operator> <literal type="number" pos:start="109:20" pos:end="109:20">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:38">/* Initialize the receive queue */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:78"><expr pos:start="115:5" pos:end="115:77"><call pos:start="115:5" pos:end="115:77"><name pos:start="115:5" pos:end="115:22">spapr_tce_dma_zero</name><argument_list pos:start="115:23" pos:end="115:77">(<argument pos:start="115:24" pos:end="115:27"><expr pos:start="115:24" pos:end="115:27"><name pos:start="115:24" pos:end="115:27">sdev</name></expr></argument>, <argument pos:start="115:30" pos:end="115:52"><expr pos:start="115:30" pos:end="115:52"><call pos:start="115:30" pos:end="115:52"><name pos:start="115:30" pos:end="115:41">VLAN_BD_ADDR</name><argument_list pos:start="115:42" pos:end="115:52">(<argument pos:start="115:43" pos:end="115:51"><expr pos:start="115:43" pos:end="115:51"><name pos:start="115:43" pos:end="115:51">rec_queue</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:55" pos:end="115:76"><expr pos:start="115:55" pos:end="115:76"><call pos:start="115:55" pos:end="115:76"><name pos:start="115:55" pos:end="115:65">VLAN_BD_LEN</name><argument_list pos:start="115:66" pos:end="115:76">(<argument pos:start="115:67" pos:end="115:75"><expr pos:start="115:67" pos:end="115:75"><name pos:start="115:67" pos:end="115:75">rec_queue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:20"><expr pos:start="119:5" pos:end="119:19"><name pos:start="119:5" pos:end="119:15"><name pos:start="119:5" pos:end="119:7">dev</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:15">isopen</name></name> <operator pos:start="119:17" pos:end="119:17">=</operator> <literal type="number" pos:start="119:19" pos:end="119:19">1</literal></expr>;</expr_stmt>

    <return pos:start="121:5" pos:end="121:21">return <expr pos:start="121:12" pos:end="121:20"><name pos:start="121:12" pos:end="121:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
