<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5696.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">omap_uwire_write</name><parameter_list pos:start="1:29" pos:end="3:59">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:66">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:43">value</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">unsigned</name></type> <name pos:start="3:55" pos:end="3:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:5">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">omap_uwire_s</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:59">= <expr pos:start="7:30" pos:end="7:59"><operator pos:start="7:30" pos:end="7:30">(</operator>struct <name pos:start="7:38" pos:end="7:49">omap_uwire_s</name> <operator pos:start="7:51" pos:end="7:51">*</operator><operator pos:start="7:52" pos:end="7:52">)</operator> <name pos:start="7:54" pos:end="7:59">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:42">= <expr pos:start="9:18" pos:end="9:42"><name pos:start="9:18" pos:end="9:21">addr</name> <operator pos:start="9:23" pos:end="9:23">&amp;</operator> <name pos:start="9:25" pos:end="9:42">OMAP_MPUI_REG_MASK</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:15">!=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">2</literal></expr>)</condition> <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:58">

        <return pos:start="15:9" pos:end="15:58">return <expr pos:start="15:16" pos:end="15:57"><call pos:start="15:16" pos:end="15:57"><name pos:start="15:16" pos:end="15:36">omap_badwidth_write16</name><argument_list pos:start="15:37" pos:end="15:57">(<argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43">opaque</name></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">addr</name></expr></argument>, <argument pos:start="15:52" pos:end="15:56"><expr pos:start="15:52" pos:end="15:56"><name pos:start="15:52" pos:end="15:56">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="101:5">switch <condition pos:start="21:12" pos:end="21:19">(<expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18">offset</name></expr>)</condition> <block pos:start="21:21" pos:end="101:5">{<block_content pos:start="23:5" pos:end="99:15">

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="23:17" pos:end="23:25">/* TDR */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:25"><expr pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">txbuf</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:24">value</name></expr>;</expr_stmt>				<comment type="block" pos:start="25:57" pos:end="25:64">/* TD */</comment>

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="31:51">(<expr pos:start="27:13" pos:end="31:50"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:24"><name pos:start="27:14" pos:end="27:14">s</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">setup</name><index pos:start="27:22" pos:end="27:24">[<expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">4</literal></expr>]</index></name> <operator pos:start="27:26" pos:end="27:26">&amp;</operator> <operator pos:start="27:28" pos:end="27:28">(</operator><literal type="number" pos:start="27:29" pos:end="27:29">1</literal> <operator pos:start="27:31" pos:end="27:32">&lt;&lt;</operator> <literal type="number" pos:start="27:34" pos:end="27:34">2</literal><operator pos:start="27:35" pos:end="27:35">)</operator><operator pos:start="27:36" pos:end="27:36">)</operator> <operator pos:start="27:38" pos:end="27:39">&amp;&amp;</operator>			<comment type="block" pos:start="27:57" pos:end="27:72">/* AUTO_TX_EN */</comment>

                        <operator pos:start="29:25" pos:end="29:25">(</operator><operator pos:start="29:26" pos:end="29:26">(</operator><name pos:start="29:27" pos:end="29:37"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:34">setup</name><index pos:start="29:35" pos:end="29:37">[<expr pos:start="29:36" pos:end="29:36"><literal type="number" pos:start="29:36" pos:end="29:36">4</literal></expr>]</index></name> <operator pos:start="29:39" pos:end="29:39">&amp;</operator> <operator pos:start="29:41" pos:end="29:41">(</operator><literal type="number" pos:start="29:42" pos:end="29:42">1</literal> <operator pos:start="29:44" pos:end="29:45">&lt;&lt;</operator> <literal type="number" pos:start="29:47" pos:end="29:47">3</literal><operator pos:start="29:48" pos:end="29:48">)</operator><operator pos:start="29:49" pos:end="29:49">)</operator> <operator pos:start="29:51" pos:end="29:52">||</operator>	<comment type="block" pos:start="29:57" pos:end="29:77">/* CS_TOGGLE_TX_EN */</comment>

                         <operator pos:start="31:26" pos:end="31:26">(</operator><name pos:start="31:27" pos:end="31:36"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:36">control</name></name> <operator pos:start="31:38" pos:end="31:38">&amp;</operator> <operator pos:start="31:40" pos:end="31:40">(</operator><literal type="number" pos:start="31:41" pos:end="31:41">1</literal> <operator pos:start="31:43" pos:end="31:44">&lt;&lt;</operator> <literal type="number" pos:start="31:46" pos:end="31:47">12</literal><operator pos:start="31:48" pos:end="31:48">)</operator><operator pos:start="31:49" pos:end="31:49">)</operator><operator pos:start="31:50" pos:end="31:50">)</operator></expr>)</condition> <block pos:start="31:53" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:41">	<comment type="block" pos:start="31:57" pos:end="31:68">/* CS_CMD */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:22">control</name></name> <operator pos:start="33:24" pos:end="33:25">|=</operator> <literal type="number" pos:start="33:27" pos:end="33:27">1</literal> <operator pos:start="33:29" pos:end="33:30">&lt;&lt;</operator> <literal type="number" pos:start="33:32" pos:end="33:33">14</literal></expr>;</expr_stmt>			<comment type="block" pos:start="33:57" pos:end="33:66">/* CSRB */</comment>

            <expr_stmt pos:start="35:13" pos:end="35:41"><expr pos:start="35:13" pos:end="35:40"><call pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:37">omap_uwire_transfer_start</name><argument_list pos:start="35:38" pos:end="35:40">(<argument pos:start="35:39" pos:end="35:39"><expr pos:start="35:39" pos:end="35:39"><name pos:start="35:39" pos:end="35:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>



    <case pos:start="43:5" pos:end="43:14">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="43:17" pos:end="43:25">/* CSR */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:18">control</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:26">value</name> <operator pos:start="45:28" pos:end="45:28">&amp;</operator> <literal type="number" pos:start="45:30" pos:end="45:35">0x1fff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:41"><if pos:start="47:9" pos:end="49:41">if <condition pos:start="47:12" pos:end="47:30">(<expr pos:start="47:13" pos:end="47:29"><name pos:start="47:13" pos:end="47:17">value</name> <operator pos:start="47:19" pos:end="47:19">&amp;</operator> <operator pos:start="47:21" pos:end="47:21">(</operator><literal type="number" pos:start="47:22" pos:end="47:22">1</literal> <operator pos:start="47:24" pos:end="47:25">&lt;&lt;</operator> <literal type="number" pos:start="47:27" pos:end="47:28">13</literal><operator pos:start="47:29" pos:end="47:29">)</operator></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:41"><block_content pos:start="49:13" pos:end="49:41">				<comment type="block" pos:start="47:57" pos:end="47:67">/* START */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:41"><expr pos:start="49:13" pos:end="49:40"><call pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:37">omap_uwire_transfer_start</name><argument_list pos:start="49:38" pos:end="49:40">(<argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><name pos:start="49:39" pos:end="49:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>



    <case pos:start="55:5" pos:end="55:14">case <expr pos:start="55:10" pos:end="55:13"><literal type="number" pos:start="55:10" pos:end="55:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="55:17" pos:end="55:25">/* SR1 */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:16">setup</name><index pos:start="57:17" pos:end="57:19">[<expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>]</index></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:27">value</name> <operator pos:start="57:29" pos:end="57:29">&amp;</operator> <literal type="number" pos:start="57:31" pos:end="57:36">0x003f</literal></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>



    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><literal type="number" pos:start="63:10" pos:end="63:13">0x0c</literal></expr>:</case>	<comment type="block" pos:start="63:17" pos:end="63:25">/* SR2 */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:16">setup</name><index pos:start="65:17" pos:end="65:19">[<expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">1</literal></expr>]</index></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:27">value</name> <operator pos:start="65:29" pos:end="65:29">&amp;</operator> <literal type="number" pos:start="65:31" pos:end="65:36">0x0fc0</literal></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>



    <case pos:start="71:5" pos:end="71:14">case <expr pos:start="71:10" pos:end="71:13"><literal type="number" pos:start="71:10" pos:end="71:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="71:17" pos:end="71:25">/* SR3 */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:37"><expr pos:start="73:9" pos:end="73:36"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:16">setup</name><index pos:start="73:17" pos:end="73:19">[<expr pos:start="73:18" pos:end="73:18"><literal type="number" pos:start="73:18" pos:end="73:18">2</literal></expr>]</index></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:27">value</name> <operator pos:start="73:29" pos:end="73:29">&amp;</operator> <literal type="number" pos:start="73:31" pos:end="73:36">0x0003</literal></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>



    <case pos:start="79:5" pos:end="79:14">case <expr pos:start="79:10" pos:end="79:13"><literal type="number" pos:start="79:10" pos:end="79:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="79:17" pos:end="79:25">/* SR4 */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:37"><expr pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:16">setup</name><index pos:start="81:17" pos:end="81:19">[<expr pos:start="81:18" pos:end="81:18"><literal type="number" pos:start="81:18" pos:end="81:18">3</literal></expr>]</index></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:27">value</name> <operator pos:start="81:29" pos:end="81:29">&amp;</operator> <literal type="number" pos:start="81:31" pos:end="81:36">0x0001</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="87:17" pos:end="87:25">/* SR5 */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:37"><expr pos:start="89:9" pos:end="89:36"><name pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:16">setup</name><index pos:start="89:17" pos:end="89:19">[<expr pos:start="89:18" pos:end="89:18"><literal type="number" pos:start="89:18" pos:end="89:18">4</literal></expr>]</index></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:27">value</name> <operator pos:start="89:29" pos:end="89:29">&amp;</operator> <literal type="number" pos:start="89:31" pos:end="89:36">0x000f</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>



    <default pos:start="95:5" pos:end="95:12">default:</default>

        <expr_stmt pos:start="97:9" pos:end="97:27"><expr pos:start="97:9" pos:end="97:26"><call pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:20">OMAP_BAD_REG</name><argument_list pos:start="97:21" pos:end="97:26">(<argument pos:start="97:22" pos:end="97:25"><expr pos:start="97:22" pos:end="97:25"><name pos:start="97:22" pos:end="97:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:15">return;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
