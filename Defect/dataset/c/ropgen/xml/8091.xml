<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8091.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">mkv_write_packet_internal</name><parameter_list pos:start="1:37" pos:end="1:71">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:52">AVFormatContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:65">AVPacket</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MatroskaMuxContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">mkv</name> <init pos:start="5:29" pos:end="5:42">= <expr pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:31">s</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">codec</name> <init pos:start="9:27" pos:end="9:64">= <expr pos:start="9:29" pos:end="9:64"><name pos:start="9:29" pos:end="9:57"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:38">streams</name><index pos:start="9:39" pos:end="9:57">[<expr pos:start="9:40" pos:end="9:56"><name pos:start="9:40" pos:end="9:56"><name pos:start="9:40" pos:end="9:42">pkt</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:56">stream_index</name></name></expr>]</index></name><operator pos:start="9:58" pos:end="9:59">-&gt;</operator><name pos:start="9:60" pos:end="9:64">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">keyframe</name> <init pos:start="11:18" pos:end="11:51">= <expr pos:start="11:20" pos:end="11:51"><operator pos:start="11:20" pos:end="11:20">!</operator><operator pos:start="11:21" pos:end="11:21">!</operator><operator pos:start="11:22" pos:end="11:22">(</operator><name pos:start="11:23" pos:end="11:32"><name pos:start="11:23" pos:end="11:25">pkt</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:32">flags</name></name> <operator pos:start="11:34" pos:end="11:34">&amp;</operator> <name pos:start="11:36" pos:end="11:50">AV_PKT_FLAG_KEY</name><operator pos:start="11:51" pos:end="11:51">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">duration</name> <init pos:start="13:18" pos:end="13:32">= <expr pos:start="13:20" pos:end="13:32"><name pos:start="13:20" pos:end="13:32"><name pos:start="13:20" pos:end="13:22">pkt</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:32">duration</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:80"><decl pos:start="17:5" pos:end="17:79"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:14">ts</name> <init pos:start="17:16" pos:end="17:79">= <expr pos:start="17:18" pos:end="17:79"><ternary pos:start="17:18" pos:end="17:79"><condition pos:start="17:18" pos:end="17:59"><expr pos:start="17:18" pos:end="17:57"><name pos:start="17:18" pos:end="17:47"><name pos:start="17:18" pos:end="17:20">mkv</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:28">tracks</name><index pos:start="17:29" pos:end="17:47">[<expr pos:start="17:30" pos:end="17:46"><name pos:start="17:30" pos:end="17:46"><name pos:start="17:30" pos:end="17:32">pkt</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:46">stream_index</name></name></expr>]</index></name><operator pos:start="17:48" pos:end="17:48">.</operator><name pos:start="17:49" pos:end="17:57">write_dts</name></expr> ?</condition><then pos:start="17:61" pos:end="17:68"> <expr pos:start="17:61" pos:end="17:68"><name pos:start="17:61" pos:end="17:68"><name pos:start="17:61" pos:end="17:63">pkt</name><operator pos:start="17:64" pos:end="17:65">-&gt;</operator><name pos:start="17:66" pos:end="17:68">dts</name></name></expr> </then><else pos:start="17:70" pos:end="17:79">: <expr pos:start="17:72" pos:end="17:79"><name pos:start="17:72" pos:end="17:79"><name pos:start="17:72" pos:end="17:74">pkt</name><operator pos:start="17:75" pos:end="17:76">-&gt;</operator><name pos:start="17:77" pos:end="17:79">pts</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:29">(<expr pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:10">ts</name> <operator pos:start="21:12" pos:end="21:13">==</operator> <name pos:start="21:15" pos:end="21:28">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="21:31" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:31">

        <expr_stmt pos:start="23:9" pos:end="23:79"><expr pos:start="23:9" pos:end="23:78"><call pos:start="23:9" pos:end="23:78"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:78">(<argument pos:start="23:16" pos:end="23:16"><expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">s</name></expr></argument>, <argument pos:start="23:19" pos:end="23:30"><expr pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:33" pos:end="23:77"><expr pos:start="23:33" pos:end="23:77"><literal type="string" pos:start="23:33" pos:end="23:77">"Can't write packet with unknown timestamp\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:25">(<expr pos:start="31:9" pos:end="31:24"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:10">s</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:14">pb</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:24">seekable</name></name></expr>)</condition> <block pos:start="31:27" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:25">

        <if_stmt pos:start="33:9" pos:end="35:44"><if pos:start="33:9" pos:end="35:44">if <condition pos:start="33:12" pos:end="33:25">(<expr pos:start="33:13" pos:end="33:24"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:24"><name pos:start="33:14" pos:end="33:16">mkv</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:24">dyn_bc</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:44"><block_content pos:start="35:13" pos:end="35:44">

            <expr_stmt pos:start="35:13" pos:end="35:44"><expr pos:start="35:13" pos:end="35:43"><call pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:29">avio_open_dyn_buf</name><argument_list pos:start="35:30" pos:end="35:43">(<argument pos:start="35:31" pos:end="35:42"><expr pos:start="35:31" pos:end="35:42"><operator pos:start="35:31" pos:end="35:31">&amp;</operator><name pos:start="35:32" pos:end="35:42"><name pos:start="35:32" pos:end="35:34">mkv</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:42">dyn_bc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:10">pb</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:24"><name pos:start="37:14" pos:end="37:16">mkv</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:24">dyn_bc</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:31">(<expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:11">mkv</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:24">cluster_pos</name></name> <operator pos:start="43:26" pos:end="43:27">==</operator> <operator pos:start="43:29" pos:end="43:29">-</operator><literal type="number" pos:start="43:30" pos:end="43:30">1</literal></expr>)</condition> <block pos:start="43:33" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:40">

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:11">mkv</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:24">cluster_pos</name></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <call pos:start="45:28" pos:end="45:43"><name pos:start="45:28" pos:end="45:36">avio_tell</name><argument_list pos:start="45:37" pos:end="45:43">(<argument pos:start="45:38" pos:end="45:42"><expr pos:start="45:38" pos:end="45:42"><name pos:start="45:38" pos:end="45:42"><name pos:start="45:38" pos:end="45:38">s</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:42">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:69"><expr pos:start="47:9" pos:end="47:68"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:11">mkv</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:20">cluster</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:68"><name pos:start="47:24" pos:end="47:40">start_ebml_master</name><argument_list pos:start="47:41" pos:end="47:68">(<argument pos:start="47:42" pos:end="47:43"><expr pos:start="47:42" pos:end="47:43"><name pos:start="47:42" pos:end="47:43">pb</name></expr></argument>, <argument pos:start="47:46" pos:end="47:64"><expr pos:start="47:46" pos:end="47:64"><name pos:start="47:46" pos:end="47:64">MATROSKA_ID_CLUSTER</name></expr></argument>, <argument pos:start="47:67" pos:end="47:67"><expr pos:start="47:67" pos:end="47:67"><literal type="number" pos:start="47:67" pos:end="47:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:69"><expr pos:start="49:9" pos:end="49:68"><call pos:start="49:9" pos:end="49:68"><name pos:start="49:9" pos:end="49:21">put_ebml_uint</name><argument_list pos:start="49:22" pos:end="49:68">(<argument pos:start="49:23" pos:end="49:24"><expr pos:start="49:23" pos:end="49:24"><name pos:start="49:23" pos:end="49:24">pb</name></expr></argument>, <argument pos:start="49:27" pos:end="49:53"><expr pos:start="49:27" pos:end="49:53"><name pos:start="49:27" pos:end="49:53">MATROSKA_ID_CLUSTERTIMECODE</name></expr></argument>, <argument pos:start="49:56" pos:end="49:67"><expr pos:start="49:56" pos:end="49:67"><call pos:start="49:56" pos:end="49:67"><name pos:start="49:56" pos:end="49:60">FFMAX</name><argument_list pos:start="49:61" pos:end="49:67">(<argument pos:start="49:62" pos:end="49:62"><expr pos:start="49:62" pos:end="49:62"><literal type="number" pos:start="49:62" pos:end="49:62">0</literal></expr></argument>, <argument pos:start="49:65" pos:end="49:66"><expr pos:start="49:65" pos:end="49:66"><name pos:start="49:65" pos:end="49:66">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:11">mkv</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:24">cluster_pts</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="51:39"><name pos:start="51:28" pos:end="51:32">FFMAX</name><argument_list pos:start="51:33" pos:end="51:39">(<argument pos:start="51:34" pos:end="51:34"><expr pos:start="51:34" pos:end="51:34"><literal type="number" pos:start="51:34" pos:end="51:34">0</literal></expr></argument>, <argument pos:start="51:37" pos:end="51:38"><expr pos:start="51:37" pos:end="51:38"><name pos:start="51:37" pos:end="51:38">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="87:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:51">(<expr pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:13">codec</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:25">codec_type</name></name> <operator pos:start="57:27" pos:end="57:28">!=</operator> <name pos:start="57:30" pos:end="57:50">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="57:53" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:76">

        <expr_stmt pos:start="59:9" pos:end="59:76"><expr pos:start="59:9" pos:end="59:75"><call pos:start="59:9" pos:end="59:75"><name pos:start="59:9" pos:end="59:23">mkv_write_block</name><argument_list pos:start="59:24" pos:end="59:75">(<argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><name pos:start="59:25" pos:end="59:25">s</name></expr></argument>, <argument pos:start="59:28" pos:end="59:29"><expr pos:start="59:28" pos:end="59:29"><name pos:start="59:28" pos:end="59:29">pb</name></expr></argument>, <argument pos:start="59:32" pos:end="59:54"><expr pos:start="59:32" pos:end="59:54"><name pos:start="59:32" pos:end="59:54">MATROSKA_ID_SIMPLEBLOCK</name></expr></argument>, <argument pos:start="59:57" pos:end="59:59"><expr pos:start="59:57" pos:end="59:59"><name pos:start="59:57" pos:end="59:59">pkt</name></expr></argument>, <argument pos:start="59:62" pos:end="59:74"><expr pos:start="59:62" pos:end="59:74"><name pos:start="59:62" pos:end="59:69">keyframe</name> <operator pos:start="59:71" pos:end="59:72">&lt;&lt;</operator> <literal type="number" pos:start="59:74" pos:end="59:74">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="61:7" pos:end="65:5">else if <condition pos:start="61:15" pos:end="61:50">(<expr pos:start="61:16" pos:end="61:49"><name pos:start="61:16" pos:end="61:30"><name pos:start="61:16" pos:end="61:20">codec</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:30">codec_id</name></name> <operator pos:start="61:32" pos:end="61:33">==</operator> <name pos:start="61:35" pos:end="61:49">AV_CODEC_ID_SSA</name></expr>)</condition> <block pos:start="61:52" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:52">

        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:16">duration</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:51"><name pos:start="63:20" pos:end="63:39">mkv_write_ass_blocks</name><argument_list pos:start="63:40" pos:end="63:51">(<argument pos:start="63:41" pos:end="63:41"><expr pos:start="63:41" pos:end="63:41"><name pos:start="63:41" pos:end="63:41">s</name></expr></argument>, <argument pos:start="63:44" pos:end="63:45"><expr pos:start="63:44" pos:end="63:45"><name pos:start="63:44" pos:end="63:45">pb</name></expr></argument>, <argument pos:start="63:48" pos:end="63:50"><expr pos:start="63:48" pos:end="63:50"><name pos:start="63:48" pos:end="63:50">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="69:5">else if <condition pos:start="65:15" pos:end="65:50">(<expr pos:start="65:16" pos:end="65:49"><name pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:20">codec</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:30">codec_id</name></name> <operator pos:start="65:32" pos:end="65:33">==</operator> <name pos:start="65:35" pos:end="65:49">AV_CODEC_ID_SRT</name></expr>)</condition> <block pos:start="65:52" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:52">

        <expr_stmt pos:start="67:9" pos:end="67:52"><expr pos:start="67:9" pos:end="67:51"><name pos:start="67:9" pos:end="67:16">duration</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:51"><name pos:start="67:20" pos:end="67:39">mkv_write_srt_blocks</name><argument_list pos:start="67:40" pos:end="67:51">(<argument pos:start="67:41" pos:end="67:41"><expr pos:start="67:41" pos:end="67:41"><name pos:start="67:41" pos:end="67:41">s</name></expr></argument>, <argument pos:start="67:44" pos:end="67:45"><expr pos:start="67:44" pos:end="67:45"><name pos:start="67:44" pos:end="67:45">pb</name></expr></argument>, <argument pos:start="67:48" pos:end="67:50"><expr pos:start="67:48" pos:end="67:50"><name pos:start="67:48" pos:end="67:50">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="87:5">else <block pos:start="69:12" pos:end="87:5">{<block_content pos:start="71:9" pos:end="85:40">

        <decl_stmt pos:start="71:9" pos:end="71:111"><decl pos:start="71:9" pos:end="71:110"><type pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:19">ebml_master</name></type> <name pos:start="71:21" pos:end="71:30">blockgroup</name> <init pos:start="71:32" pos:end="71:110">= <expr pos:start="71:34" pos:end="71:110"><call pos:start="71:34" pos:end="71:110"><name pos:start="71:34" pos:end="71:50">start_ebml_master</name><argument_list pos:start="71:51" pos:end="71:110">(<argument pos:start="71:52" pos:end="71:53"><expr pos:start="71:52" pos:end="71:53"><name pos:start="71:52" pos:end="71:53">pb</name></expr></argument>, <argument pos:start="71:56" pos:end="71:77"><expr pos:start="71:56" pos:end="71:77"><name pos:start="71:56" pos:end="71:77">MATROSKA_ID_BLOCKGROUP</name></expr></argument>, <argument pos:start="71:80" pos:end="71:109"><expr pos:start="71:80" pos:end="71:109"><call pos:start="71:80" pos:end="71:109"><name pos:start="71:80" pos:end="71:98">mkv_blockgroup_size</name><argument_list pos:start="71:99" pos:end="71:109">(<argument pos:start="71:100" pos:end="71:108"><expr pos:start="71:100" pos:end="71:108"><name pos:start="71:100" pos:end="71:108"><name pos:start="71:100" pos:end="71:102">pkt</name><operator pos:start="71:103" pos:end="71:104">-&gt;</operator><name pos:start="71:105" pos:end="71:108">size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="73:9" pos:end="73:70">/* For backward compatibility, prefer convergence_duration. */</comment>

        <if_stmt pos:start="75:9" pos:end="79:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:42">(<expr pos:start="75:13" pos:end="75:41"><name pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:15">pkt</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:37">convergence_duration</name></name> <operator pos:start="75:39" pos:end="75:39">&gt;</operator> <literal type="number" pos:start="75:41" pos:end="75:41">0</literal></expr>)</condition> <block pos:start="75:44" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:49">

            <expr_stmt pos:start="77:13" pos:end="77:49"><expr pos:start="77:13" pos:end="77:48"><name pos:start="77:13" pos:end="77:20">duration</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:48"><name pos:start="77:24" pos:end="77:26">pkt</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:48">convergence_duration</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:58"><expr pos:start="81:9" pos:end="81:57"><call pos:start="81:9" pos:end="81:57"><name pos:start="81:9" pos:end="81:23">mkv_write_block</name><argument_list pos:start="81:24" pos:end="81:57">(<argument pos:start="81:25" pos:end="81:25"><expr pos:start="81:25" pos:end="81:25"><name pos:start="81:25" pos:end="81:25">s</name></expr></argument>, <argument pos:start="81:28" pos:end="81:29"><expr pos:start="81:28" pos:end="81:29"><name pos:start="81:28" pos:end="81:29">pb</name></expr></argument>, <argument pos:start="81:32" pos:end="81:48"><expr pos:start="81:32" pos:end="81:48"><name pos:start="81:32" pos:end="81:48">MATROSKA_ID_BLOCK</name></expr></argument>, <argument pos:start="81:51" pos:end="81:53"><expr pos:start="81:51" pos:end="81:53"><name pos:start="81:51" pos:end="81:53">pkt</name></expr></argument>, <argument pos:start="81:56" pos:end="81:56"><expr pos:start="81:56" pos:end="81:56"><literal type="number" pos:start="81:56" pos:end="81:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:63"><expr pos:start="83:9" pos:end="83:62"><call pos:start="83:9" pos:end="83:62"><name pos:start="83:9" pos:end="83:21">put_ebml_uint</name><argument_list pos:start="83:22" pos:end="83:62">(<argument pos:start="83:23" pos:end="83:24"><expr pos:start="83:23" pos:end="83:24"><name pos:start="83:23" pos:end="83:24">pb</name></expr></argument>, <argument pos:start="83:27" pos:end="83:51"><expr pos:start="83:27" pos:end="83:51"><name pos:start="83:27" pos:end="83:51">MATROSKA_ID_BLOCKDURATION</name></expr></argument>, <argument pos:start="83:54" pos:end="83:61"><expr pos:start="83:54" pos:end="83:61"><name pos:start="83:54" pos:end="83:61">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:40"><expr pos:start="85:9" pos:end="85:39"><call pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:23">end_ebml_master</name><argument_list pos:start="85:24" pos:end="85:39">(<argument pos:start="85:25" pos:end="85:26"><expr pos:start="85:25" pos:end="85:26"><name pos:start="85:25" pos:end="85:26">pb</name></expr></argument>, <argument pos:start="85:29" pos:end="85:38"><expr pos:start="85:29" pos:end="85:38"><name pos:start="85:29" pos:end="85:38">blockgroup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:60">(<expr pos:start="91:9" pos:end="91:59"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:13">codec</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:25">codec_type</name></name> <operator pos:start="91:27" pos:end="91:28">==</operator> <name pos:start="91:30" pos:end="91:47">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="91:49" pos:end="91:50">&amp;&amp;</operator> <name pos:start="91:52" pos:end="91:59">keyframe</name></expr>)</condition> <block pos:start="91:62" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:32">

        <expr_stmt pos:start="93:9" pos:end="93:83"><expr pos:start="93:9" pos:end="93:82"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:82"><name pos:start="93:15" pos:end="93:30">mkv_add_cuepoint</name><argument_list pos:start="93:31" pos:end="93:82">(<argument pos:start="93:32" pos:end="93:40"><expr pos:start="93:32" pos:end="93:40"><name pos:start="93:32" pos:end="93:40"><name pos:start="93:32" pos:end="93:34">mkv</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:40">cues</name></name></expr></argument>, <argument pos:start="93:43" pos:end="93:59"><expr pos:start="93:43" pos:end="93:59"><name pos:start="93:43" pos:end="93:59"><name pos:start="93:43" pos:end="93:45">pkt</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:59">stream_index</name></name></expr></argument>, <argument pos:start="93:62" pos:end="93:63"><expr pos:start="93:62" pos:end="93:63"><name pos:start="93:62" pos:end="93:63">ts</name></expr></argument>, <argument pos:start="93:66" pos:end="93:81"><expr pos:start="93:66" pos:end="93:81"><name pos:start="93:66" pos:end="93:81"><name pos:start="93:66" pos:end="93:68">mkv</name><operator pos:start="93:69" pos:end="93:70">-&gt;</operator><name pos:start="93:71" pos:end="93:81">cluster_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="95:32"><if pos:start="95:9" pos:end="95:32">if <condition pos:start="95:12" pos:end="95:20">(<expr pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">&lt;</operator> <literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>)</condition><block type="pseudo" pos:start="95:22" pos:end="95:32"><block_content pos:start="95:22" pos:end="95:32"> <return pos:start="95:22" pos:end="95:32">return <expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:31">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:56"><expr pos:start="101:5" pos:end="101:55"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:7">mkv</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:17">duration</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <call pos:start="101:21" pos:end="101:55"><name pos:start="101:21" pos:end="101:25">FFMAX</name><argument_list pos:start="101:26" pos:end="101:55">(<argument pos:start="101:27" pos:end="101:39"><expr pos:start="101:27" pos:end="101:39"><name pos:start="101:27" pos:end="101:39"><name pos:start="101:27" pos:end="101:29">mkv</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:39">duration</name></name></expr></argument>, <argument pos:start="101:42" pos:end="101:54"><expr pos:start="101:42" pos:end="101:54"><name pos:start="101:42" pos:end="101:43">ts</name> <operator pos:start="101:45" pos:end="101:45">+</operator> <name pos:start="101:47" pos:end="101:54">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
