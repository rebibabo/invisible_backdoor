<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12726.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">do_sendkey</name><parameter_list pos:start="1:23" pos:end="1:56">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:30">Monitor</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">mon</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:67">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:24"><name pos:start="5:10" pos:end="5:20">keyname_buf</name><index pos:start="5:21" pos:end="5:24">[<expr pos:start="5:22" pos:end="5:23"><literal type="number" pos:start="5:22" pos:end="5:23">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:19">separator</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">keyname_len</name></decl>, <decl pos:start="9:22" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:28">keycode</name></decl>, <decl pos:start="9:31" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:31" pos:end="9:31">i</name></decl>, <decl pos:start="9:34" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:36">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">keys</name> <init pos:start="11:22" pos:end="11:51">= <expr pos:start="11:24" pos:end="11:51"><call pos:start="11:24" pos:end="11:51"><name pos:start="11:24" pos:end="11:36">qdict_get_str</name><argument_list pos:start="11:37" pos:end="11:51">(<argument pos:start="11:38" pos:end="11:42"><expr pos:start="11:38" pos:end="11:42"><name pos:start="11:38" pos:end="11:42">qdict</name></expr></argument>, <argument pos:start="11:45" pos:end="11:50"><expr pos:start="11:45" pos:end="11:50"><literal type="string" pos:start="11:45" pos:end="11:50">"keys"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:56"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:21">has_hold_time</name> <init pos:start="13:23" pos:end="13:56">= <expr pos:start="13:25" pos:end="13:56"><call pos:start="13:25" pos:end="13:56"><name pos:start="13:25" pos:end="13:36">qdict_haskey</name><argument_list pos:start="13:37" pos:end="13:56">(<argument pos:start="13:38" pos:end="13:42"><expr pos:start="13:38" pos:end="13:42"><name pos:start="13:38" pos:end="13:42">qdict</name></expr></argument>, <argument pos:start="13:45" pos:end="13:55"><expr pos:start="13:45" pos:end="13:55"><literal type="string" pos:start="13:45" pos:end="13:55">"hold-time"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:62"><decl pos:start="15:5" pos:end="15:61"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">hold_time</name> <init pos:start="15:19" pos:end="15:61">= <expr pos:start="15:21" pos:end="15:61"><call pos:start="15:21" pos:end="15:61"><name pos:start="15:21" pos:end="15:37">qdict_get_try_int</name><argument_list pos:start="15:38" pos:end="15:61">(<argument pos:start="15:39" pos:end="15:43"><expr pos:start="15:39" pos:end="15:43"><name pos:start="15:39" pos:end="15:43">qdict</name></expr></argument>, <argument pos:start="15:46" pos:end="15:56"><expr pos:start="15:46" pos:end="15:56"><literal type="string" pos:start="15:46" pos:end="15:56">"hold-time"</literal></expr></argument>, <argument pos:start="15:59" pos:end="15:60"><expr pos:start="15:59" pos:end="15:60"><operator pos:start="15:59" pos:end="15:59">-</operator><literal type="number" pos:start="15:60" pos:end="15:60">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:27">nb_pending_keycodes</name> <operator pos:start="19:29" pos:end="19:29">&gt;</operator> <literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr>)</condition> <block pos:start="19:34" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:27">

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:22">qemu_del_timer</name><argument_list pos:start="21:23" pos:end="21:33">(<argument pos:start="21:24" pos:end="21:32"><expr pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:32">key_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><call pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:20">release_keys</name><argument_list pos:start="23:21" pos:end="23:26">(<argument pos:start="23:22" pos:end="23:25"><expr pos:start="23:22" pos:end="23:25"><name pos:start="23:22" pos:end="23:25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:24"><if pos:start="27:5" pos:end="29:24">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:22">has_hold_time</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:24"><block_content pos:start="29:9" pos:end="29:24">

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:17">hold_time</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <literal type="number" pos:start="29:21" pos:end="29:23">100</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:10"><expr pos:start="31:5" pos:end="31:9"><name pos:start="31:5" pos:end="31:5">i</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <literal type="number" pos:start="31:9" pos:end="31:9">0</literal></expr>;</expr_stmt>

    <while pos:start="33:5" pos:end="109:5">while <condition pos:start="33:11" pos:end="33:13">(<expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">1</literal></expr>)</condition> <block pos:start="33:15" pos:end="109:5">{<block_content pos:start="35:9" pos:end="107:29">

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:17">separator</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:37"><name pos:start="35:21" pos:end="35:26">strchr</name><argument_list pos:start="35:27" pos:end="35:37">(<argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">keys</name></expr></argument>, <argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><literal type="char" pos:start="35:34" pos:end="35:36">'-'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:66"><expr pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:19">keyname_len</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <ternary pos:start="37:23" pos:end="37:65"><condition pos:start="37:23" pos:end="37:33"><expr pos:start="37:23" pos:end="37:31"><name pos:start="37:23" pos:end="37:31">separator</name></expr> ?</condition><then pos:start="37:35" pos:end="37:50"> <expr pos:start="37:35" pos:end="37:50"><name pos:start="37:35" pos:end="37:43">separator</name> <operator pos:start="37:45" pos:end="37:45">-</operator> <name pos:start="37:47" pos:end="37:50">keys</name></expr> </then><else pos:start="37:52" pos:end="37:65">: <expr pos:start="37:54" pos:end="37:65"><call pos:start="37:54" pos:end="37:65"><name pos:start="37:54" pos:end="37:59">strlen</name><argument_list pos:start="37:60" pos:end="37:65">(<argument pos:start="37:61" pos:end="37:64"><expr pos:start="37:61" pos:end="37:64"><name pos:start="37:61" pos:end="37:64">keys</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="101:9"><if pos:start="39:9" pos:end="101:9">if <condition pos:start="39:12" pos:end="39:28">(<expr pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:23">keyname_len</name> <operator pos:start="39:25" pos:end="39:25">&gt;</operator> <literal type="number" pos:start="39:27" pos:end="39:27">0</literal></expr>)</condition> <block pos:start="39:30" pos:end="101:9">{<block_content pos:start="41:13" pos:end="99:36">

            <expr_stmt pos:start="41:13" pos:end="41:60"><expr pos:start="41:13" pos:end="41:59"><call pos:start="41:13" pos:end="41:59"><name pos:start="41:13" pos:end="41:19">pstrcpy</name><argument_list pos:start="41:20" pos:end="41:59">(<argument pos:start="41:21" pos:end="41:31"><expr pos:start="41:21" pos:end="41:31"><name pos:start="41:21" pos:end="41:31">keyname_buf</name></expr></argument>, <argument pos:start="41:34" pos:end="41:52"><expr pos:start="41:34" pos:end="41:52"><sizeof pos:start="41:34" pos:end="41:52">sizeof<argument_list pos:start="41:40" pos:end="41:52">(<argument pos:start="41:41" pos:end="41:51"><expr pos:start="41:41" pos:end="41:51"><name pos:start="41:41" pos:end="41:51">keyname_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:55" pos:end="41:58"><expr pos:start="41:55" pos:end="41:58"><name pos:start="41:55" pos:end="41:58">keys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="49:13"><if pos:start="43:13" pos:end="49:13">if <condition pos:start="43:16" pos:end="43:54">(<expr pos:start="43:17" pos:end="43:53"><name pos:start="43:17" pos:end="43:27">keyname_len</name> <operator pos:start="43:29" pos:end="43:29">&gt;</operator> <sizeof pos:start="43:31" pos:end="43:49">sizeof<argument_list pos:start="43:37" pos:end="43:49">(<argument pos:start="43:38" pos:end="43:48"><expr pos:start="43:38" pos:end="43:48"><name pos:start="43:38" pos:end="43:48">keyname_buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="43:51" pos:end="43:51">-</operator> <literal type="number" pos:start="43:53" pos:end="43:53">1</literal></expr>)</condition> <block pos:start="43:56" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:23">

                <expr_stmt pos:start="45:17" pos:end="45:75"><expr pos:start="45:17" pos:end="45:74"><call pos:start="45:17" pos:end="45:74"><name pos:start="45:17" pos:end="45:30">monitor_printf</name><argument_list pos:start="45:31" pos:end="45:74">(<argument pos:start="45:32" pos:end="45:34"><expr pos:start="45:32" pos:end="45:34"><name pos:start="45:32" pos:end="45:34">mon</name></expr></argument>, <argument pos:start="45:37" pos:end="45:60"><expr pos:start="45:37" pos:end="45:60"><literal type="string" pos:start="45:37" pos:end="45:60">"invalid key: '%s...'\n"</literal></expr></argument>, <argument pos:start="45:63" pos:end="45:73"><expr pos:start="45:63" pos:end="45:73"><name pos:start="45:63" pos:end="45:73">keyname_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="47:17" pos:end="47:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="51:34">(<expr pos:start="51:17" pos:end="51:33"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:20">==</operator> <name pos:start="51:22" pos:end="51:33">MAX_KEYCODES</name></expr>)</condition> <block pos:start="51:36" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:23">

                <expr_stmt pos:start="53:17" pos:end="53:55"><expr pos:start="53:17" pos:end="53:54"><call pos:start="53:17" pos:end="53:54"><name pos:start="53:17" pos:end="53:30">monitor_printf</name><argument_list pos:start="53:31" pos:end="53:54">(<argument pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:34">mon</name></expr></argument>, <argument pos:start="53:37" pos:end="53:53"><expr pos:start="53:37" pos:end="53:53"><literal type="string" pos:start="53:37" pos:end="53:53">"too many keys\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="55:17" pos:end="55:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="61:13" pos:end="61:77">/* Be compatible with old interface, convert user inputted "&lt;" */</comment>

            <if_stmt pos:start="63:13" pos:end="69:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:66">(<expr pos:start="63:17" pos:end="63:65"><operator pos:start="63:17" pos:end="63:17">!</operator><call pos:start="63:18" pos:end="63:45"><name pos:start="63:18" pos:end="63:24">strncmp</name><argument_list pos:start="63:25" pos:end="63:45">(<argument pos:start="63:26" pos:end="63:36"><expr pos:start="63:26" pos:end="63:36"><name pos:start="63:26" pos:end="63:36">keyname_buf</name></expr></argument>, <argument pos:start="63:39" pos:end="63:41"><expr pos:start="63:39" pos:end="63:41"><literal type="string" pos:start="63:39" pos:end="63:41">"&lt;"</literal></expr></argument>, <argument pos:start="63:44" pos:end="63:44"><expr pos:start="63:44" pos:end="63:44"><literal type="number" pos:start="63:44" pos:end="63:44">1</literal></expr></argument>)</argument_list></call> <operator pos:start="63:47" pos:end="63:48">&amp;&amp;</operator> <name pos:start="63:50" pos:end="63:60">keyname_len</name> <operator pos:start="63:62" pos:end="63:63">==</operator> <literal type="number" pos:start="63:65" pos:end="63:65">1</literal></expr>)</condition> <block pos:start="63:68" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:32">

                <expr_stmt pos:start="65:17" pos:end="65:66"><expr pos:start="65:17" pos:end="65:65"><call pos:start="65:17" pos:end="65:65"><name pos:start="65:17" pos:end="65:23">pstrcpy</name><argument_list pos:start="65:24" pos:end="65:65">(<argument pos:start="65:25" pos:end="65:35"><expr pos:start="65:25" pos:end="65:35"><name pos:start="65:25" pos:end="65:35">keyname_buf</name></expr></argument>, <argument pos:start="65:38" pos:end="65:56"><expr pos:start="65:38" pos:end="65:56"><sizeof pos:start="65:38" pos:end="65:56">sizeof<argument_list pos:start="65:44" pos:end="65:56">(<argument pos:start="65:45" pos:end="65:55"><expr pos:start="65:45" pos:end="65:55"><name pos:start="65:45" pos:end="65:55">keyname_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="65:59" pos:end="65:64"><expr pos:start="65:59" pos:end="65:64"><literal type="string" pos:start="65:59" pos:end="65:64">"less"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:32"><expr pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:27">keyname_len</name> <operator pos:start="67:29" pos:end="67:29">=</operator> <literal type="number" pos:start="67:31" pos:end="67:31">4</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="73:13" pos:end="73:41"><expr pos:start="73:13" pos:end="73:40"><name pos:start="73:13" pos:end="73:36"><name pos:start="73:13" pos:end="73:23">keyname_buf</name><index pos:start="73:24" pos:end="73:36">[<expr pos:start="73:25" pos:end="73:35"><name pos:start="73:25" pos:end="73:35">keyname_len</name></expr>]</index></name> <operator pos:start="73:38" pos:end="73:38">=</operator> <literal type="number" pos:start="73:40" pos:end="73:40">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="77:13" pos:end="77:46"><expr pos:start="77:13" pos:end="77:45"><name pos:start="77:13" pos:end="77:15">idx</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:45"><name pos:start="77:19" pos:end="77:32">index_from_key</name><argument_list pos:start="77:33" pos:end="77:45">(<argument pos:start="77:34" pos:end="77:44"><expr pos:start="77:34" pos:end="77:44"><name pos:start="77:34" pos:end="77:44">keyname_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:38">(<expr pos:start="79:17" pos:end="79:37"><name pos:start="79:17" pos:end="79:19">idx</name> <operator pos:start="79:21" pos:end="79:22">==</operator> <name pos:start="79:24" pos:end="79:37">Q_KEY_CODE_MAX</name></expr>)</condition> <block pos:start="79:40" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:23">

                <expr_stmt pos:start="81:17" pos:end="81:76"><expr pos:start="81:17" pos:end="81:75"><call pos:start="81:17" pos:end="81:75"><name pos:start="81:17" pos:end="81:30">monitor_printf</name><argument_list pos:start="81:31" pos:end="81:75">(<argument pos:start="81:32" pos:end="81:34"><expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:34">mon</name></expr></argument>, <argument pos:start="81:37" pos:end="81:61"><expr pos:start="81:37" pos:end="81:61"><literal type="string" pos:start="81:37" pos:end="81:61">"invalid parameter: %s\n"</literal></expr></argument>, <argument pos:start="81:64" pos:end="81:74"><expr pos:start="81:64" pos:end="81:74"><name pos:start="81:64" pos:end="81:74">keyname_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="83:17" pos:end="83:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:36"><expr pos:start="89:13" pos:end="89:35"><name pos:start="89:13" pos:end="89:19">keycode</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:35"><name pos:start="89:23" pos:end="89:30">key_defs</name><index pos:start="89:31" pos:end="89:35">[<expr pos:start="89:32" pos:end="89:34"><name pos:start="89:32" pos:end="89:34">idx</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="97:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:28">(<expr pos:start="91:17" pos:end="91:27"><name pos:start="91:17" pos:end="91:23">keycode</name> <operator pos:start="91:25" pos:end="91:25">&lt;</operator> <literal type="number" pos:start="91:27" pos:end="91:27">0</literal></expr>)</condition> <block pos:start="91:30" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:23">

                <expr_stmt pos:start="93:17" pos:end="93:72"><expr pos:start="93:17" pos:end="93:71"><call pos:start="93:17" pos:end="93:71"><name pos:start="93:17" pos:end="93:30">monitor_printf</name><argument_list pos:start="93:31" pos:end="93:71">(<argument pos:start="93:32" pos:end="93:34"><expr pos:start="93:32" pos:end="93:34"><name pos:start="93:32" pos:end="93:34">mon</name></expr></argument>, <argument pos:start="93:37" pos:end="93:57"><expr pos:start="93:37" pos:end="93:57"><literal type="string" pos:start="93:37" pos:end="93:57">"unknown key: '%s'\n"</literal></expr></argument>, <argument pos:start="93:60" pos:end="93:70"><expr pos:start="93:60" pos:end="93:70"><name pos:start="93:60" pos:end="93:70">keyname_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="95:17" pos:end="95:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:36"><expr pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:20">keycodes</name><index pos:start="99:21" pos:end="99:25">[<expr pos:start="99:22" pos:end="99:24"><name pos:start="99:22" pos:end="99:22">i</name><operator pos:start="99:23" pos:end="99:24">++</operator></expr>]</index></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:35">keycode</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="105:18"><if pos:start="103:9" pos:end="105:18">if <condition pos:start="103:12" pos:end="103:23">(<expr pos:start="103:13" pos:end="103:22"><operator pos:start="103:13" pos:end="103:13">!</operator><name pos:start="103:14" pos:end="103:22">separator</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:18"><block_content pos:start="105:13" pos:end="105:18">

            <break pos:start="105:13" pos:end="105:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:12">keys</name> <operator pos:start="107:14" pos:end="107:14">=</operator> <name pos:start="107:16" pos:end="107:24">separator</name> <operator pos:start="107:26" pos:end="107:26">+</operator> <literal type="number" pos:start="107:28" pos:end="107:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="111:5" pos:end="111:28"><expr pos:start="111:5" pos:end="111:27"><name pos:start="111:5" pos:end="111:23">nb_pending_keycodes</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:27">i</name></expr>;</expr_stmt>

    <comment type="block" pos:start="113:5" pos:end="113:25">/* key down events */</comment>

    <for pos:start="115:5" pos:end="125:5">for <control pos:start="115:9" pos:end="115:45">(<init pos:start="115:10" pos:end="115:15"><expr pos:start="115:10" pos:end="115:14"><name pos:start="115:10" pos:end="115:10">i</name> <operator pos:start="115:12" pos:end="115:12">=</operator> <literal type="number" pos:start="115:14" pos:end="115:14">0</literal></expr>;</init> <condition pos:start="115:17" pos:end="115:40"><expr pos:start="115:17" pos:end="115:39"><name pos:start="115:17" pos:end="115:17">i</name> <operator pos:start="115:19" pos:end="115:19">&lt;</operator> <name pos:start="115:21" pos:end="115:39">nb_pending_keycodes</name></expr>;</condition> <incr pos:start="115:42" pos:end="115:44"><expr pos:start="115:42" pos:end="115:44"><name pos:start="115:42" pos:end="115:42">i</name><operator pos:start="115:43" pos:end="115:44">++</operator></expr></incr>)</control> <block pos:start="115:47" pos:end="125:5">{<block_content pos:start="117:9" pos:end="123:40">

        <expr_stmt pos:start="117:9" pos:end="117:30"><expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:15">keycode</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <name pos:start="117:19" pos:end="117:29"><name pos:start="117:19" pos:end="117:26">keycodes</name><index pos:start="117:27" pos:end="117:29">[<expr pos:start="117:28" pos:end="117:28"><name pos:start="117:28" pos:end="117:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="121:34"><if pos:start="119:9" pos:end="121:34">if <condition pos:start="119:12" pos:end="119:27">(<expr pos:start="119:13" pos:end="119:26"><name pos:start="119:13" pos:end="119:19">keycode</name> <operator pos:start="119:21" pos:end="119:21">&amp;</operator> <literal type="number" pos:start="119:23" pos:end="119:26">0x80</literal></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:34"><block_content pos:start="121:13" pos:end="121:34">

            <expr_stmt pos:start="121:13" pos:end="121:34"><expr pos:start="121:13" pos:end="121:33"><call pos:start="121:13" pos:end="121:33"><name pos:start="121:13" pos:end="121:27">kbd_put_keycode</name><argument_list pos:start="121:28" pos:end="121:33">(<argument pos:start="121:29" pos:end="121:32"><expr pos:start="121:29" pos:end="121:32"><literal type="number" pos:start="121:29" pos:end="121:32">0xe0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:40"><expr pos:start="123:9" pos:end="123:39"><call pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:23">kbd_put_keycode</name><argument_list pos:start="123:24" pos:end="123:39">(<argument pos:start="123:25" pos:end="123:38"><expr pos:start="123:25" pos:end="123:38"><name pos:start="123:25" pos:end="123:31">keycode</name> <operator pos:start="123:33" pos:end="123:33">&amp;</operator> <literal type="number" pos:start="123:35" pos:end="123:38">0x7f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="127:5" pos:end="127:31">/* delayed key up events */</comment>

    <expr_stmt pos:start="129:5" pos:end="131:67"><expr pos:start="129:5" pos:end="131:66"><call pos:start="129:5" pos:end="131:66"><name pos:start="129:5" pos:end="129:18">qemu_mod_timer</name><argument_list pos:start="129:19" pos:end="131:66">(<argument pos:start="129:20" pos:end="129:28"><expr pos:start="129:20" pos:end="129:28"><name pos:start="129:20" pos:end="129:28">key_timer</name></expr></argument>, <argument pos:start="129:31" pos:end="131:65"><expr pos:start="129:31" pos:end="131:65"><call pos:start="129:31" pos:end="129:57"><name pos:start="129:31" pos:end="129:47">qemu_get_clock_ns</name><argument_list pos:start="129:48" pos:end="129:57">(<argument pos:start="129:49" pos:end="129:56"><expr pos:start="129:49" pos:end="129:56"><name pos:start="129:49" pos:end="129:56">vm_clock</name></expr></argument>)</argument_list></call> <operator pos:start="129:59" pos:end="129:59">+</operator>

                   <call pos:start="131:20" pos:end="131:65"><name pos:start="131:20" pos:end="131:27">muldiv64</name><argument_list pos:start="131:28" pos:end="131:65">(<argument pos:start="131:29" pos:end="131:47"><expr pos:start="131:29" pos:end="131:47"><call pos:start="131:29" pos:end="131:47"><name pos:start="131:29" pos:end="131:45">get_ticks_per_sec</name><argument_list pos:start="131:46" pos:end="131:47">()</argument_list></call></expr></argument>, <argument pos:start="131:50" pos:end="131:58"><expr pos:start="131:50" pos:end="131:58"><name pos:start="131:50" pos:end="131:58">hold_time</name></expr></argument>, <argument pos:start="131:61" pos:end="131:64"><expr pos:start="131:61" pos:end="131:64"><literal type="number" pos:start="131:61" pos:end="131:64">1000</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
