<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20511.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:45"><name pos:start="1:1" pos:end="1:20">matroska_read_header</name> <argument_list pos:start="1:22" pos:end="3:45">(<argument pos:start="1:23" pos:end="1:43">AVFormatContext    *s</argument>,

                      <argument pos:start="3:23" pos:end="3:44">AVFormatParameters *ap</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="621:1">{<block_content pos:start="7:5" pos:end="619:15">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">MatroskaDemuxContext</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:34">matroska</name> <init pos:start="7:36" pos:end="7:49">= <expr pos:start="7:38" pos:end="7:49"><name pos:start="7:38" pos:end="7:49"><name pos:start="7:38" pos:end="7:38">s</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:17">doctype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">version</name></decl>, <decl pos:start="11:18" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:27">last_level</name></decl>, <decl pos:start="11:30" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:32">res</name> <init pos:start="11:34" pos:end="11:36">= <expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:15">id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12">matroska</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:17">ctx</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:21">s</name></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:37">/* First read the EBML header. */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:11">doctype</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:18">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:67">(<expr pos:start="25:9" pos:end="25:66"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">res</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:61"><name pos:start="25:16" pos:end="25:31">ebml_read_header</name><argument_list pos:start="25:32" pos:end="25:61">(<argument pos:start="25:33" pos:end="25:40"><expr pos:start="25:33" pos:end="25:40"><name pos:start="25:33" pos:end="25:40">matroska</name></expr></argument>, <argument pos:start="25:43" pos:end="25:50"><expr pos:start="25:43" pos:end="25:50"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:50">doctype</name></expr></argument>, <argument pos:start="25:53" pos:end="25:60"><expr pos:start="25:53" pos:end="25:60"><operator pos:start="25:53" pos:end="25:53">&amp;</operator><name pos:start="25:54" pos:end="25:60">version</name></expr></argument>)</argument_list></call><operator pos:start="25:62" pos:end="25:62">)</operator> <operator pos:start="25:64" pos:end="25:64">&lt;</operator> <literal type="number" pos:start="25:66" pos:end="25:66">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">res</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="43:5"><if pos:start="29:5" pos:end="43:5">if <condition pos:start="29:8" pos:end="29:57">(<expr pos:start="29:9" pos:end="29:56"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:16">doctype</name> <operator pos:start="29:18" pos:end="29:19">==</operator> <name pos:start="29:21" pos:end="29:24">NULL</name><operator pos:start="29:25" pos:end="29:25">)</operator> <operator pos:start="29:27" pos:end="29:28">||</operator> <call pos:start="29:30" pos:end="29:56"><name pos:start="29:30" pos:end="29:35">strcmp</name><argument_list pos:start="29:36" pos:end="29:56">(<argument pos:start="29:37" pos:end="29:43"><expr pos:start="29:37" pos:end="29:43"><name pos:start="29:37" pos:end="29:43">doctype</name></expr></argument>, <argument pos:start="29:46" pos:end="29:55"><expr pos:start="29:46" pos:end="29:55"><literal type="string" pos:start="29:46" pos:end="29:55">"matroska"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:59" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:29">

        <expr_stmt pos:start="31:9" pos:end="35:45"><expr pos:start="31:9" pos:end="35:44"><call pos:start="31:9" pos:end="35:44"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="35:44">(<argument pos:start="31:16" pos:end="31:28"><expr pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:23">matroska</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:28">ctx</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:42">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="33:16" pos:end="33:59"><expr pos:start="33:16" pos:end="33:59"><literal type="string" pos:start="33:16" pos:end="33:59">"Wrong EBML doctype ('%s' != 'matroska').\n"</literal></expr></argument>,

               <argument pos:start="35:16" pos:end="35:43"><expr pos:start="35:16" pos:end="35:43"><ternary pos:start="35:16" pos:end="35:43"><condition pos:start="35:16" pos:end="35:24"><expr pos:start="35:16" pos:end="35:22"><name pos:start="35:16" pos:end="35:22">doctype</name></expr> ?</condition><then pos:start="35:26" pos:end="35:32"> <expr pos:start="35:26" pos:end="35:32"><name pos:start="35:26" pos:end="35:32">doctype</name></expr> </then><else pos:start="35:34" pos:end="35:43">: <expr pos:start="35:36" pos:end="35:43"><literal type="string" pos:start="35:36" pos:end="35:43">"(none)"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:29"><if pos:start="37:9" pos:end="39:29">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:19">doctype</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:29"><block_content pos:start="39:13" pos:end="39:29">

            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><call pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:19">av_free</name><argument_list pos:start="39:20" pos:end="39:28">(<argument pos:start="39:21" pos:end="39:27"><expr pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:27">doctype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="41:9" pos:end="41:29">return <expr pos:start="41:16" pos:end="41:28"><name pos:start="41:16" pos:end="41:28">AVERROR_NOFMT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><call pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:11">av_free</name><argument_list pos:start="45:12" pos:end="45:20">(<argument pos:start="45:13" pos:end="45:19"><expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:19">doctype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:20">(<expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:15">version</name> <operator pos:start="47:17" pos:end="47:17">&gt;</operator> <literal type="number" pos:start="47:19" pos:end="47:19">2</literal></expr>)</condition> <block pos:start="47:22" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:29">

        <expr_stmt pos:start="49:9" pos:end="53:24"><expr pos:start="49:9" pos:end="53:23"><call pos:start="49:9" pos:end="53:23"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="53:23">(<argument pos:start="49:16" pos:end="49:28"><expr pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:23">matroska</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:28">ctx</name></name></expr></argument>, <argument pos:start="49:31" pos:end="49:42"><expr pos:start="49:31" pos:end="49:42"><name pos:start="49:31" pos:end="49:42">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="51:16" pos:end="51:73"><expr pos:start="51:16" pos:end="51:73"><literal type="string" pos:start="51:16" pos:end="51:73">"Matroska demuxer version 2 too old for file version %d\n"</literal></expr></argument>,

               <argument pos:start="53:16" pos:end="53:22"><expr pos:start="53:16" pos:end="53:22"><name pos:start="53:16" pos:end="53:22">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:29">return <expr pos:start="55:16" pos:end="55:28"><name pos:start="55:16" pos:end="55:28">AVERROR_NOFMT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:38">/* The next thing is a segment. */</comment>

    <while pos:start="63:5" pos:end="87:5">while <condition pos:start="63:11" pos:end="63:13">(<expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">1</literal></expr>)</condition> <block pos:start="63:15" pos:end="87:5">{<block_content pos:start="65:9" pos:end="85:23">

        <if_stmt pos:start="65:9" pos:end="67:30"><if pos:start="65:9" pos:end="67:30">if <condition pos:start="65:12" pos:end="65:56">(<expr pos:start="65:13" pos:end="65:55"><operator pos:start="65:13" pos:end="65:13">!</operator><operator pos:start="65:14" pos:end="65:14">(</operator><name pos:start="65:15" pos:end="65:16">id</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:54"><name pos:start="65:20" pos:end="65:31">ebml_peek_id</name><argument_list pos:start="65:32" pos:end="65:54">(<argument pos:start="65:33" pos:end="65:40"><expr pos:start="65:33" pos:end="65:40"><name pos:start="65:33" pos:end="65:40">matroska</name></expr></argument>, <argument pos:start="65:43" pos:end="65:53"><expr pos:start="65:43" pos:end="65:53"><operator pos:start="65:43" pos:end="65:43">&amp;</operator><name pos:start="65:44" pos:end="65:53">last_level</name></expr></argument>)</argument_list></call><operator pos:start="65:55" pos:end="65:55">)</operator></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:30"><block_content pos:start="67:13" pos:end="67:30">

            <return pos:start="67:13" pos:end="67:30">return <expr pos:start="67:20" pos:end="67:29"><name pos:start="67:20" pos:end="67:29">AVERROR_IO</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="71:18"><if pos:start="69:9" pos:end="71:18">if <condition pos:start="69:12" pos:end="69:38">(<expr pos:start="69:13" pos:end="69:37"><name pos:start="69:13" pos:end="69:14">id</name> <operator pos:start="69:16" pos:end="69:17">==</operator> <name pos:start="69:19" pos:end="69:37">MATROSKA_ID_SEGMENT</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:18"><block_content pos:start="71:13" pos:end="71:18">

            <break pos:start="71:13" pos:end="71:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:17">/* oi! */</comment>

        <expr_stmt pos:start="77:9" pos:end="81:40"><expr pos:start="77:9" pos:end="81:39"><call pos:start="77:9" pos:end="81:39"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="81:39">(<argument pos:start="77:16" pos:end="77:28"><expr pos:start="77:16" pos:end="77:28"><name pos:start="77:16" pos:end="77:28"><name pos:start="77:16" pos:end="77:23">matroska</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:28">ctx</name></name></expr></argument>, <argument pos:start="77:31" pos:end="77:41"><expr pos:start="77:31" pos:end="77:41"><name pos:start="77:31" pos:end="77:41">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="79:16" pos:end="79:67"><expr pos:start="79:16" pos:end="79:67"><literal type="string" pos:start="79:16" pos:end="79:67">"Expected a Segment ID (0x%x), but received 0x%x!\n"</literal></expr></argument>,

               <argument pos:start="81:16" pos:end="81:34"><expr pos:start="81:16" pos:end="81:34"><name pos:start="81:16" pos:end="81:34">MATROSKA_ID_SEGMENT</name></expr></argument>, <argument pos:start="81:37" pos:end="81:38"><expr pos:start="81:37" pos:end="81:38"><name pos:start="81:37" pos:end="81:38">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:23"><if pos:start="83:9" pos:end="85:23">if <condition pos:start="83:12" pos:end="83:49">(<expr pos:start="83:13" pos:end="83:48"><operator pos:start="83:13" pos:end="83:13">(</operator><name pos:start="83:14" pos:end="83:16">res</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:43"><name pos:start="83:20" pos:end="83:33">ebml_read_skip</name><argument_list pos:start="83:34" pos:end="83:43">(<argument pos:start="83:35" pos:end="83:42"><expr pos:start="83:35" pos:end="83:42"><name pos:start="83:35" pos:end="83:42">matroska</name></expr></argument>)</argument_list></call><operator pos:start="83:44" pos:end="83:44">)</operator> <operator pos:start="83:46" pos:end="83:46">&lt;</operator> <literal type="number" pos:start="83:48" pos:end="83:48">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:23"><block_content pos:start="85:13" pos:end="85:23">

            <return pos:start="85:13" pos:end="85:23">return <expr pos:start="85:20" pos:end="85:22"><name pos:start="85:20" pos:end="85:22">res</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="91:5" pos:end="95:38">/* We now have a Matroska segment.

     * Seeks are from the beginning of the segment,

     * after the segment ID/length. */</comment>

    <if_stmt pos:start="97:5" pos:end="99:19"><if pos:start="97:5" pos:end="99:19">if <condition pos:start="97:8" pos:end="97:52">(<expr pos:start="97:9" pos:end="97:51"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:12">res</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <call pos:start="97:16" pos:end="97:46"><name pos:start="97:16" pos:end="97:31">ebml_read_master</name><argument_list pos:start="97:32" pos:end="97:46">(<argument pos:start="97:33" pos:end="97:40"><expr pos:start="97:33" pos:end="97:40"><name pos:start="97:33" pos:end="97:40">matroska</name></expr></argument>, <argument pos:start="97:43" pos:end="97:45"><expr pos:start="97:43" pos:end="97:45"><operator pos:start="97:43" pos:end="97:43">&amp;</operator><name pos:start="97:44" pos:end="97:45">id</name></expr></argument>)</argument_list></call><operator pos:start="97:47" pos:end="97:47">)</operator> <operator pos:start="97:49" pos:end="97:49">&lt;</operator> <literal type="number" pos:start="97:51" pos:end="97:51">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:19"><block_content pos:start="99:9" pos:end="99:19">

        <return pos:start="99:9" pos:end="99:19">return <expr pos:start="99:16" pos:end="99:18"><name pos:start="99:16" pos:end="99:18">res</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:48"><expr pos:start="101:5" pos:end="101:47"><name pos:start="101:5" pos:end="101:27"><name pos:start="101:5" pos:end="101:12">matroska</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:27">segment_start</name></name> <operator pos:start="101:29" pos:end="101:29">=</operator> <call pos:start="101:31" pos:end="101:47"><name pos:start="101:31" pos:end="101:39">url_ftell</name><argument_list pos:start="101:40" pos:end="101:47">(<argument pos:start="101:41" pos:end="101:46"><expr pos:start="101:41" pos:end="101:46"><operator pos:start="101:41" pos:end="101:41">&amp;</operator><name pos:start="101:42" pos:end="101:46"><name pos:start="101:42" pos:end="101:42">s</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:46">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:12">matroska</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:24">time_scale</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <literal type="number" pos:start="105:28" pos:end="105:34">1000000</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="107:5" pos:end="107:79">/* we've found our segment, start reading the different contents in here */</comment>

    <while pos:start="109:5" pos:end="263:5">while <condition pos:start="109:11" pos:end="109:20">(<expr pos:start="109:12" pos:end="109:19"><name pos:start="109:12" pos:end="109:14">res</name> <operator pos:start="109:16" pos:end="109:17">==</operator> <literal type="number" pos:start="109:19" pos:end="109:19">0</literal></expr>)</condition> <block pos:start="109:22" pos:end="263:5">{<block_content pos:start="111:9" pos:end="261:9">

        <if_stmt pos:start="111:9" pos:end="123:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:64">(<expr pos:start="111:13" pos:end="111:63"><operator pos:start="111:13" pos:end="111:13">!</operator><operator pos:start="111:14" pos:end="111:14">(</operator><name pos:start="111:15" pos:end="111:16">id</name> <operator pos:start="111:18" pos:end="111:18">=</operator> <call pos:start="111:20" pos:end="111:62"><name pos:start="111:20" pos:end="111:31">ebml_peek_id</name><argument_list pos:start="111:32" pos:end="111:62">(<argument pos:start="111:33" pos:end="111:40"><expr pos:start="111:33" pos:end="111:40"><name pos:start="111:33" pos:end="111:40">matroska</name></expr></argument>, <argument pos:start="111:43" pos:end="111:61"><expr pos:start="111:43" pos:end="111:61"><operator pos:start="111:43" pos:end="111:43">&amp;</operator><name pos:start="111:44" pos:end="111:61"><name pos:start="111:44" pos:end="111:51">matroska</name><operator pos:start="111:52" pos:end="111:53">-&gt;</operator><name pos:start="111:54" pos:end="111:61">level_up</name></name></expr></argument>)</argument_list></call><operator pos:start="111:63" pos:end="111:63">)</operator></expr>)</condition> <block pos:start="111:66" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:18">

            <expr_stmt pos:start="113:13" pos:end="113:29"><expr pos:start="113:13" pos:end="113:28"><name pos:start="113:13" pos:end="113:15">res</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:28">AVERROR_IO</name></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="117:11" pos:end="123:9">else if <condition pos:start="117:19" pos:end="117:38">(<expr pos:start="117:20" pos:end="117:37"><name pos:start="117:20" pos:end="117:37"><name pos:start="117:20" pos:end="117:27">matroska</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:37">level_up</name></name></expr>)</condition> <block pos:start="117:40" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:18">

            <expr_stmt pos:start="119:13" pos:end="119:33"><expr pos:start="119:13" pos:end="119:32"><name pos:start="119:13" pos:end="119:30"><name pos:start="119:13" pos:end="119:20">matroska</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:30">level_up</name></name><operator pos:start="119:31" pos:end="119:32">--</operator></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="127:9" pos:end="251:9">switch <condition pos:start="127:16" pos:end="127:19">(<expr pos:start="127:17" pos:end="127:18"><name pos:start="127:17" pos:end="127:18">id</name></expr>)</condition> <block pos:start="127:21" pos:end="251:9">{<block_content pos:start="131:13" pos:end="249:22">

            <comment type="block" pos:start="129:13" pos:end="129:29">/* stream info */</comment>

            <case pos:start="131:13" pos:end="131:34">case <expr pos:start="131:18" pos:end="131:33"><name pos:start="131:18" pos:end="131:33">MATROSKA_ID_INFO</name></expr>:</case> <block pos:start="131:36" pos:end="141:13">{<block_content pos:start="133:17" pos:end="139:22">

                <if_stmt pos:start="133:17" pos:end="135:26"><if pos:start="133:17" pos:end="135:26">if <condition pos:start="133:20" pos:end="133:64">(<expr pos:start="133:21" pos:end="133:63"><operator pos:start="133:21" pos:end="133:21">(</operator><name pos:start="133:22" pos:end="133:24">res</name> <operator pos:start="133:26" pos:end="133:26">=</operator> <call pos:start="133:28" pos:end="133:58"><name pos:start="133:28" pos:end="133:43">ebml_read_master</name><argument_list pos:start="133:44" pos:end="133:58">(<argument pos:start="133:45" pos:end="133:52"><expr pos:start="133:45" pos:end="133:52"><name pos:start="133:45" pos:end="133:52">matroska</name></expr></argument>, <argument pos:start="133:55" pos:end="133:57"><expr pos:start="133:55" pos:end="133:57"><operator pos:start="133:55" pos:end="133:55">&amp;</operator><name pos:start="133:56" pos:end="133:57">id</name></expr></argument>)</argument_list></call><operator pos:start="133:59" pos:end="133:59">)</operator> <operator pos:start="133:61" pos:end="133:61">&lt;</operator> <literal type="number" pos:start="133:63" pos:end="133:63">0</literal></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:26"><block_content pos:start="135:21" pos:end="135:26">

                    <break pos:start="135:21" pos:end="135:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:52"><expr pos:start="137:17" pos:end="137:51"><name pos:start="137:17" pos:end="137:19">res</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:51"><name pos:start="137:23" pos:end="137:41">matroska_parse_info</name><argument_list pos:start="137:42" pos:end="137:51">(<argument pos:start="137:43" pos:end="137:50"><expr pos:start="137:43" pos:end="137:50"><name pos:start="137:43" pos:end="137:50">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="139:17" pos:end="139:22">break;</break>

            </block_content>}</block>



            <comment type="block" pos:start="145:13" pos:end="145:36">/* track info headers */</comment>

            <case pos:start="147:13" pos:end="147:36">case <expr pos:start="147:18" pos:end="147:35"><name pos:start="147:18" pos:end="147:35">MATROSKA_ID_TRACKS</name></expr>:</case> <block pos:start="147:38" pos:end="157:13">{<block_content pos:start="149:17" pos:end="155:22">

                <if_stmt pos:start="149:17" pos:end="151:26"><if pos:start="149:17" pos:end="151:26">if <condition pos:start="149:20" pos:end="149:64">(<expr pos:start="149:21" pos:end="149:63"><operator pos:start="149:21" pos:end="149:21">(</operator><name pos:start="149:22" pos:end="149:24">res</name> <operator pos:start="149:26" pos:end="149:26">=</operator> <call pos:start="149:28" pos:end="149:58"><name pos:start="149:28" pos:end="149:43">ebml_read_master</name><argument_list pos:start="149:44" pos:end="149:58">(<argument pos:start="149:45" pos:end="149:52"><expr pos:start="149:45" pos:end="149:52"><name pos:start="149:45" pos:end="149:52">matroska</name></expr></argument>, <argument pos:start="149:55" pos:end="149:57"><expr pos:start="149:55" pos:end="149:57"><operator pos:start="149:55" pos:end="149:55">&amp;</operator><name pos:start="149:56" pos:end="149:57">id</name></expr></argument>)</argument_list></call><operator pos:start="149:59" pos:end="149:59">)</operator> <operator pos:start="149:61" pos:end="149:61">&lt;</operator> <literal type="number" pos:start="149:63" pos:end="149:63">0</literal></expr>)</condition><block type="pseudo" pos:start="151:21" pos:end="151:26"><block_content pos:start="151:21" pos:end="151:26">

                    <break pos:start="151:21" pos:end="151:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:54"><expr pos:start="153:17" pos:end="153:53"><name pos:start="153:17" pos:end="153:19">res</name> <operator pos:start="153:21" pos:end="153:21">=</operator> <call pos:start="153:23" pos:end="153:53"><name pos:start="153:23" pos:end="153:43">matroska_parse_tracks</name><argument_list pos:start="153:44" pos:end="153:53">(<argument pos:start="153:45" pos:end="153:52"><expr pos:start="153:45" pos:end="153:52"><name pos:start="153:45" pos:end="153:52">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            </block_content>}</block>



            <comment type="block" pos:start="161:13" pos:end="161:30">/* stream index */</comment>

            <case pos:start="163:13" pos:end="163:34">case <expr pos:start="163:18" pos:end="163:33"><name pos:start="163:18" pos:end="163:33">MATROSKA_ID_CUES</name></expr>:</case> <block pos:start="163:36" pos:end="179:13">{<block_content pos:start="165:17" pos:end="177:22">

                <if_stmt pos:start="165:17" pos:end="175:51"><if pos:start="165:17" pos:end="173:17">if <condition pos:start="165:20" pos:end="165:44">(<expr pos:start="165:21" pos:end="165:43"><operator pos:start="165:21" pos:end="165:21">!</operator><name pos:start="165:22" pos:end="165:43"><name pos:start="165:22" pos:end="165:29">matroska</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:43">index_parsed</name></name></expr>)</condition> <block pos:start="165:46" pos:end="173:17">{<block_content pos:start="167:21" pos:end="171:57">

                    <if_stmt pos:start="167:21" pos:end="169:30"><if pos:start="167:21" pos:end="169:30">if <condition pos:start="167:24" pos:end="167:68">(<expr pos:start="167:25" pos:end="167:67"><operator pos:start="167:25" pos:end="167:25">(</operator><name pos:start="167:26" pos:end="167:28">res</name> <operator pos:start="167:30" pos:end="167:30">=</operator> <call pos:start="167:32" pos:end="167:62"><name pos:start="167:32" pos:end="167:47">ebml_read_master</name><argument_list pos:start="167:48" pos:end="167:62">(<argument pos:start="167:49" pos:end="167:56"><expr pos:start="167:49" pos:end="167:56"><name pos:start="167:49" pos:end="167:56">matroska</name></expr></argument>, <argument pos:start="167:59" pos:end="167:61"><expr pos:start="167:59" pos:end="167:61"><operator pos:start="167:59" pos:end="167:59">&amp;</operator><name pos:start="167:60" pos:end="167:61">id</name></expr></argument>)</argument_list></call><operator pos:start="167:63" pos:end="167:63">)</operator> <operator pos:start="167:65" pos:end="167:65">&lt;</operator> <literal type="number" pos:start="167:67" pos:end="167:67">0</literal></expr>)</condition><block type="pseudo" pos:start="169:25" pos:end="169:30"><block_content pos:start="169:25" pos:end="169:30">

                        <break pos:start="169:25" pos:end="169:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:57"><expr pos:start="171:21" pos:end="171:56"><name pos:start="171:21" pos:end="171:23">res</name> <operator pos:start="171:25" pos:end="171:25">=</operator> <call pos:start="171:27" pos:end="171:56"><name pos:start="171:27" pos:end="171:46">matroska_parse_index</name><argument_list pos:start="171:47" pos:end="171:56">(<argument pos:start="171:48" pos:end="171:55"><expr pos:start="171:48" pos:end="171:55"><name pos:start="171:48" pos:end="171:55">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="173:19" pos:end="175:51">else<block type="pseudo" pos:start="175:21" pos:end="175:51"><block_content pos:start="175:21" pos:end="175:51">

                    <expr_stmt pos:start="175:21" pos:end="175:51"><expr pos:start="175:21" pos:end="175:50"><name pos:start="175:21" pos:end="175:23">res</name> <operator pos:start="175:25" pos:end="175:25">=</operator> <call pos:start="175:27" pos:end="175:50"><name pos:start="175:27" pos:end="175:40">ebml_read_skip</name><argument_list pos:start="175:41" pos:end="175:50">(<argument pos:start="175:42" pos:end="175:49"><expr pos:start="175:42" pos:end="175:49"><name pos:start="175:42" pos:end="175:49">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="177:17" pos:end="177:22">break;</break>

            </block_content>}</block>



            <comment type="block" pos:start="183:13" pos:end="183:26">/* metadata */</comment>

            <case pos:start="185:13" pos:end="185:34">case <expr pos:start="185:18" pos:end="185:33"><name pos:start="185:18" pos:end="185:33">MATROSKA_ID_TAGS</name></expr>:</case> <block pos:start="185:36" pos:end="201:13">{<block_content pos:start="187:17" pos:end="199:22">

                <if_stmt pos:start="187:17" pos:end="197:51"><if pos:start="187:17" pos:end="195:17">if <condition pos:start="187:20" pos:end="187:47">(<expr pos:start="187:21" pos:end="187:46"><operator pos:start="187:21" pos:end="187:21">!</operator><name pos:start="187:22" pos:end="187:46"><name pos:start="187:22" pos:end="187:29">matroska</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:46">metadata_parsed</name></name></expr>)</condition> <block pos:start="187:49" pos:end="195:17">{<block_content pos:start="189:21" pos:end="193:60">

                    <if_stmt pos:start="189:21" pos:end="191:30"><if pos:start="189:21" pos:end="191:30">if <condition pos:start="189:24" pos:end="189:68">(<expr pos:start="189:25" pos:end="189:67"><operator pos:start="189:25" pos:end="189:25">(</operator><name pos:start="189:26" pos:end="189:28">res</name> <operator pos:start="189:30" pos:end="189:30">=</operator> <call pos:start="189:32" pos:end="189:62"><name pos:start="189:32" pos:end="189:47">ebml_read_master</name><argument_list pos:start="189:48" pos:end="189:62">(<argument pos:start="189:49" pos:end="189:56"><expr pos:start="189:49" pos:end="189:56"><name pos:start="189:49" pos:end="189:56">matroska</name></expr></argument>, <argument pos:start="189:59" pos:end="189:61"><expr pos:start="189:59" pos:end="189:61"><operator pos:start="189:59" pos:end="189:59">&amp;</operator><name pos:start="189:60" pos:end="189:61">id</name></expr></argument>)</argument_list></call><operator pos:start="189:63" pos:end="189:63">)</operator> <operator pos:start="189:65" pos:end="189:65">&lt;</operator> <literal type="number" pos:start="189:67" pos:end="189:67">0</literal></expr>)</condition><block type="pseudo" pos:start="191:25" pos:end="191:30"><block_content pos:start="191:25" pos:end="191:30">

                        <break pos:start="191:25" pos:end="191:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:60"><expr pos:start="193:21" pos:end="193:59"><name pos:start="193:21" pos:end="193:23">res</name> <operator pos:start="193:25" pos:end="193:25">=</operator> <call pos:start="193:27" pos:end="193:59"><name pos:start="193:27" pos:end="193:49">matroska_parse_metadata</name><argument_list pos:start="193:50" pos:end="193:59">(<argument pos:start="193:51" pos:end="193:58"><expr pos:start="193:51" pos:end="193:58"><name pos:start="193:51" pos:end="193:58">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="195:19" pos:end="197:51">else<block type="pseudo" pos:start="197:21" pos:end="197:51"><block_content pos:start="197:21" pos:end="197:51">

                    <expr_stmt pos:start="197:21" pos:end="197:51"><expr pos:start="197:21" pos:end="197:50"><name pos:start="197:21" pos:end="197:23">res</name> <operator pos:start="197:25" pos:end="197:25">=</operator> <call pos:start="197:27" pos:end="197:50"><name pos:start="197:27" pos:end="197:40">ebml_read_skip</name><argument_list pos:start="197:41" pos:end="197:50">(<argument pos:start="197:42" pos:end="197:49"><expr pos:start="197:42" pos:end="197:49"><name pos:start="197:42" pos:end="197:49">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="199:17" pos:end="199:22">break;</break>

            </block_content>}</block>



            <comment type="block" pos:start="205:13" pos:end="205:73">/* file index (if seekable, seek to Cues/Tags to parse it) */</comment>

            <case pos:start="207:13" pos:end="207:38">case <expr pos:start="207:18" pos:end="207:37"><name pos:start="207:18" pos:end="207:37">MATROSKA_ID_SEEKHEAD</name></expr>:</case> <block pos:start="207:40" pos:end="217:13">{<block_content pos:start="209:17" pos:end="215:22">

                <if_stmt pos:start="209:17" pos:end="211:26"><if pos:start="209:17" pos:end="211:26">if <condition pos:start="209:20" pos:end="209:64">(<expr pos:start="209:21" pos:end="209:63"><operator pos:start="209:21" pos:end="209:21">(</operator><name pos:start="209:22" pos:end="209:24">res</name> <operator pos:start="209:26" pos:end="209:26">=</operator> <call pos:start="209:28" pos:end="209:58"><name pos:start="209:28" pos:end="209:43">ebml_read_master</name><argument_list pos:start="209:44" pos:end="209:58">(<argument pos:start="209:45" pos:end="209:52"><expr pos:start="209:45" pos:end="209:52"><name pos:start="209:45" pos:end="209:52">matroska</name></expr></argument>, <argument pos:start="209:55" pos:end="209:57"><expr pos:start="209:55" pos:end="209:57"><operator pos:start="209:55" pos:end="209:55">&amp;</operator><name pos:start="209:56" pos:end="209:57">id</name></expr></argument>)</argument_list></call><operator pos:start="209:59" pos:end="209:59">)</operator> <operator pos:start="209:61" pos:end="209:61">&lt;</operator> <literal type="number" pos:start="209:63" pos:end="209:63">0</literal></expr>)</condition><block type="pseudo" pos:start="211:21" pos:end="211:26"><block_content pos:start="211:21" pos:end="211:26">

                    <break pos:start="211:21" pos:end="211:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:56"><expr pos:start="213:17" pos:end="213:55"><name pos:start="213:17" pos:end="213:19">res</name> <operator pos:start="213:21" pos:end="213:21">=</operator> <call pos:start="213:23" pos:end="213:55"><name pos:start="213:23" pos:end="213:45">matroska_parse_seekhead</name><argument_list pos:start="213:46" pos:end="213:55">(<argument pos:start="213:47" pos:end="213:54"><expr pos:start="213:47" pos:end="213:54"><name pos:start="213:47" pos:end="213:54">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="215:17" pos:end="215:22">break;</break>

            </block_content>}</block>



            <case pos:start="221:13" pos:end="221:37">case <expr pos:start="221:18" pos:end="221:36"><name pos:start="221:18" pos:end="221:36">MATROSKA_ID_CLUSTER</name></expr>:</case> <block pos:start="221:39" pos:end="231:13">{<block_content pos:start="227:17" pos:end="229:22">

                <comment type="block" pos:start="223:17" pos:end="225:51">/* Do not read the master - this will be done in the next

                 * call to matroska_read_packet. */</comment>

                <expr_stmt pos:start="227:17" pos:end="227:24"><expr pos:start="227:17" pos:end="227:23"><name pos:start="227:17" pos:end="227:19">res</name> <operator pos:start="227:21" pos:end="227:21">=</operator> <literal type="number" pos:start="227:23" pos:end="227:23">1</literal></expr>;</expr_stmt>

                <break pos:start="229:17" pos:end="229:22">break;</break>

            </block_content>}</block>



            <default pos:start="235:13" pos:end="235:20">default:</default>

                <expr_stmt pos:start="237:17" pos:end="239:69"><expr pos:start="237:17" pos:end="239:68"><call pos:start="237:17" pos:end="239:68"><name pos:start="237:17" pos:end="237:22">av_log</name><argument_list pos:start="237:23" pos:end="239:68">(<argument pos:start="237:24" pos:end="237:36"><expr pos:start="237:24" pos:end="237:36"><name pos:start="237:24" pos:end="237:36"><name pos:start="237:24" pos:end="237:31">matroska</name><operator pos:start="237:32" pos:end="237:33">-&gt;</operator><name pos:start="237:34" pos:end="237:36">ctx</name></name></expr></argument>, <argument pos:start="237:39" pos:end="237:49"><expr pos:start="237:39" pos:end="237:49"><name pos:start="237:39" pos:end="237:49">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="239:24" pos:end="239:63"><expr pos:start="239:24" pos:end="239:63"><literal type="string" pos:start="239:24" pos:end="239:63">"Unknown matroska file header ID 0x%x\n"</literal></expr></argument>, <argument pos:start="239:66" pos:end="239:67"><expr pos:start="239:66" pos:end="239:67"><name pos:start="239:66" pos:end="239:67">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="241:13" pos:end="241:30">/* fall-through */</comment>



            <case pos:start="245:13" pos:end="245:30">case <expr pos:start="245:18" pos:end="245:29"><name pos:start="245:18" pos:end="245:29">EBML_ID_VOID</name></expr>:</case>

                <expr_stmt pos:start="247:17" pos:end="247:47"><expr pos:start="247:17" pos:end="247:46"><name pos:start="247:17" pos:end="247:19">res</name> <operator pos:start="247:21" pos:end="247:21">=</operator> <call pos:start="247:23" pos:end="247:46"><name pos:start="247:23" pos:end="247:36">ebml_read_skip</name><argument_list pos:start="247:37" pos:end="247:46">(<argument pos:start="247:38" pos:end="247:45"><expr pos:start="247:38" pos:end="247:45"><name pos:start="247:38" pos:end="247:45">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="249:17" pos:end="249:22">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="255:9" pos:end="261:9"><if pos:start="255:9" pos:end="261:9">if <condition pos:start="255:12" pos:end="255:31">(<expr pos:start="255:13" pos:end="255:30"><name pos:start="255:13" pos:end="255:30"><name pos:start="255:13" pos:end="255:20">matroska</name><operator pos:start="255:21" pos:end="255:22">-&gt;</operator><name pos:start="255:23" pos:end="255:30">level_up</name></name></expr>)</condition> <block pos:start="255:33" pos:end="261:9">{<block_content pos:start="257:13" pos:end="259:18">

            <expr_stmt pos:start="257:13" pos:end="257:33"><expr pos:start="257:13" pos:end="257:32"><name pos:start="257:13" pos:end="257:30"><name pos:start="257:13" pos:end="257:20">matroska</name><operator pos:start="257:21" pos:end="257:22">-&gt;</operator><name pos:start="257:23" pos:end="257:30">level_up</name></name><operator pos:start="257:31" pos:end="257:32">--</operator></expr>;</expr_stmt>

            <break pos:start="259:13" pos:end="259:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="267:5" pos:end="267:34">/* Have we found a cluster? */</comment>

    <if_stmt pos:start="269:5" pos:end="615:5"><if pos:start="269:5" pos:end="615:5">if <condition pos:start="269:8" pos:end="269:60">(<expr pos:start="269:9" pos:end="269:59"><call pos:start="269:9" pos:end="269:36"><name pos:start="269:9" pos:end="269:20">ebml_peek_id</name><argument_list pos:start="269:21" pos:end="269:36">(<argument pos:start="269:22" pos:end="269:29"><expr pos:start="269:22" pos:end="269:29"><name pos:start="269:22" pos:end="269:29">matroska</name></expr></argument>, <argument pos:start="269:32" pos:end="269:35"><expr pos:start="269:32" pos:end="269:35"><name pos:start="269:32" pos:end="269:35">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="269:38" pos:end="269:39">==</operator> <name pos:start="269:41" pos:end="269:59">MATROSKA_ID_CLUSTER</name></expr>)</condition> <block pos:start="269:62" pos:end="615:5">{<block_content pos:start="271:9" pos:end="613:16">

        <decl_stmt pos:start="271:9" pos:end="271:17"><decl pos:start="271:9" pos:end="271:13"><type pos:start="271:9" pos:end="271:11"><name pos:start="271:9" pos:end="271:11">int</name></type> <name pos:start="271:13" pos:end="271:13">i</name></decl>, <decl pos:start="271:16" pos:end="271:16"><type ref="prev" pos:start="271:9" pos:end="271:11"/><name pos:start="271:16" pos:end="271:16">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="273:9" pos:end="273:29"><decl pos:start="273:9" pos:end="273:28"><type pos:start="273:9" pos:end="273:23"><name pos:start="273:9" pos:end="273:21">MatroskaTrack</name> <modifier pos:start="273:23" pos:end="273:23">*</modifier></type><name pos:start="273:24" pos:end="273:28">track</name></decl>;</decl_stmt>

        <decl_stmt pos:start="275:9" pos:end="275:21"><decl pos:start="275:9" pos:end="275:20"><type pos:start="275:9" pos:end="275:18"><name pos:start="275:9" pos:end="275:16">AVStream</name> <modifier pos:start="275:18" pos:end="275:18">*</modifier></type><name pos:start="275:19" pos:end="275:20">st</name></decl>;</decl_stmt>



        <for pos:start="279:9" pos:end="611:9">for <control pos:start="279:13" pos:end="279:50">(<init pos:start="279:14" pos:end="279:19"><expr pos:start="279:14" pos:end="279:18"><name pos:start="279:14" pos:end="279:14">i</name> <operator pos:start="279:16" pos:end="279:16">=</operator> <literal type="number" pos:start="279:18" pos:end="279:18">0</literal></expr>;</init> <condition pos:start="279:21" pos:end="279:45"><expr pos:start="279:21" pos:end="279:44"><name pos:start="279:21" pos:end="279:21">i</name> <operator pos:start="279:23" pos:end="279:23">&lt;</operator> <name pos:start="279:25" pos:end="279:44"><name pos:start="279:25" pos:end="279:32">matroska</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:44">num_tracks</name></name></expr>;</condition> <incr pos:start="279:47" pos:end="279:49"><expr pos:start="279:47" pos:end="279:49"><name pos:start="279:47" pos:end="279:47">i</name><operator pos:start="279:48" pos:end="279:49">++</operator></expr></incr>)</control> <block pos:start="279:52" pos:end="611:9">{<block_content pos:start="281:13" pos:end="605:13">

            <decl_stmt pos:start="281:13" pos:end="281:50"><decl pos:start="281:13" pos:end="281:49"><type pos:start="281:13" pos:end="281:24"><name pos:start="281:13" pos:end="281:24"><name pos:start="281:13" pos:end="281:16">enum</name> <name pos:start="281:18" pos:end="281:24">CodecID</name></name></type> <name pos:start="281:26" pos:end="281:33">codec_id</name> <init pos:start="281:35" pos:end="281:49">= <expr pos:start="281:37" pos:end="281:49"><name pos:start="281:37" pos:end="281:49">CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="283:13" pos:end="283:38"><decl pos:start="283:13" pos:end="283:37"><type pos:start="283:13" pos:end="283:21"><name pos:start="283:13" pos:end="283:19">uint8_t</name> <modifier pos:start="283:21" pos:end="283:21">*</modifier></type><name pos:start="283:22" pos:end="283:30">extradata</name> <init pos:start="283:32" pos:end="283:37">= <expr pos:start="283:34" pos:end="283:37"><name pos:start="283:34" pos:end="283:37">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="285:13" pos:end="285:35"><decl pos:start="285:13" pos:end="285:34"><type pos:start="285:13" pos:end="285:15"><name pos:start="285:13" pos:end="285:15">int</name></type> <name pos:start="285:17" pos:end="285:30">extradata_size</name> <init pos:start="285:32" pos:end="285:34">= <expr pos:start="285:34" pos:end="285:34"><literal type="number" pos:start="285:34" pos:end="285:34">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="287:13" pos:end="287:37"><decl pos:start="287:13" pos:end="287:36"><type pos:start="287:13" pos:end="287:15"><name pos:start="287:13" pos:end="287:15">int</name></type> <name pos:start="287:17" pos:end="287:32">extradata_offset</name> <init pos:start="287:34" pos:end="287:36">= <expr pos:start="287:36" pos:end="287:36"><literal type="number" pos:start="287:36" pos:end="287:36">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:40"><expr pos:start="289:13" pos:end="289:39"><name pos:start="289:13" pos:end="289:17">track</name> <operator pos:start="289:19" pos:end="289:19">=</operator> <name pos:start="289:21" pos:end="289:39"><name pos:start="289:21" pos:end="289:28">matroska</name><operator pos:start="289:29" pos:end="289:30">-&gt;</operator><name pos:start="289:31" pos:end="289:36">tracks</name><index pos:start="289:37" pos:end="289:39">[<expr pos:start="289:38" pos:end="289:38"><name pos:start="289:38" pos:end="289:38">i</name></expr>]</index></name></expr>;</expr_stmt>



            <comment type="block" pos:start="293:13" pos:end="295:48">/* libavformat does not really support subtitles.

             * Also apply some sanity checks. */</comment>

            <if_stmt pos:start="297:13" pos:end="301:25"><if pos:start="297:13" pos:end="301:25">if <condition pos:start="297:16" pos:end="299:42">(<expr pos:start="297:17" pos:end="299:41"><operator pos:start="297:17" pos:end="297:17">(</operator><name pos:start="297:18" pos:end="297:28"><name pos:start="297:18" pos:end="297:22">track</name><operator pos:start="297:23" pos:end="297:24">-&gt;</operator><name pos:start="297:25" pos:end="297:28">type</name></name> <operator pos:start="297:30" pos:end="297:31">==</operator> <name pos:start="297:33" pos:end="297:60">MATROSKA_TRACK_TYPE_SUBTITLE</name><operator pos:start="297:61" pos:end="297:61">)</operator> <operator pos:start="297:63" pos:end="297:64">||</operator>

                <operator pos:start="299:17" pos:end="299:17">(</operator><name pos:start="299:18" pos:end="299:32"><name pos:start="299:18" pos:end="299:22">track</name><operator pos:start="299:23" pos:end="299:24">-&gt;</operator><name pos:start="299:25" pos:end="299:32">codec_id</name></name> <operator pos:start="299:34" pos:end="299:35">==</operator> <name pos:start="299:37" pos:end="299:40">NULL</name><operator pos:start="299:41" pos:end="299:41">)</operator></expr>)</condition><block type="pseudo" pos:start="301:17" pos:end="301:25"><block_content pos:start="301:17" pos:end="301:25">

                <continue pos:start="301:17" pos:end="301:25">continue;</continue></block_content></block></if></if_stmt>



            <for pos:start="305:13" pos:end="317:13">for<control pos:start="305:16" pos:end="305:44">(<init pos:start="305:17" pos:end="305:20"><expr pos:start="305:17" pos:end="305:19"><name pos:start="305:17" pos:end="305:17">j</name><operator pos:start="305:18" pos:end="305:18">=</operator><literal type="number" pos:start="305:19" pos:end="305:19">0</literal></expr>;</init> <condition pos:start="305:22" pos:end="305:39"><expr pos:start="305:22" pos:end="305:38"><name pos:start="305:22" pos:end="305:34"><name pos:start="305:22" pos:end="305:31">codec_tags</name><index pos:start="305:32" pos:end="305:34">[<expr pos:start="305:33" pos:end="305:33"><name pos:start="305:33" pos:end="305:33">j</name></expr>]</index></name><operator pos:start="305:35" pos:end="305:35">.</operator><name pos:start="305:36" pos:end="305:38">str</name></expr>;</condition> <incr pos:start="305:41" pos:end="305:43"><expr pos:start="305:41" pos:end="305:43"><name pos:start="305:41" pos:end="305:41">j</name><operator pos:start="305:42" pos:end="305:43">++</operator></expr></incr>)</control><block pos:start="305:45" pos:end="317:13">{<block_content pos:start="307:17" pos:end="315:17">

                <if_stmt pos:start="307:17" pos:end="315:17"><if pos:start="307:17" pos:end="315:17">if<condition pos:start="307:19" pos:end="309:55">(<expr pos:start="307:20" pos:end="309:54"><operator pos:start="307:20" pos:end="307:20">!</operator><call pos:start="307:21" pos:end="309:54"><name pos:start="307:21" pos:end="307:27">strncmp</name><argument_list pos:start="307:28" pos:end="309:54">(<argument pos:start="307:29" pos:end="307:45"><expr pos:start="307:29" pos:end="307:45"><name pos:start="307:29" pos:end="307:41"><name pos:start="307:29" pos:end="307:38">codec_tags</name><index pos:start="307:39" pos:end="307:41">[<expr pos:start="307:40" pos:end="307:40"><name pos:start="307:40" pos:end="307:40">j</name></expr>]</index></name><operator pos:start="307:42" pos:end="307:42">.</operator><name pos:start="307:43" pos:end="307:45">str</name></expr></argument>, <argument pos:start="307:48" pos:end="307:62"><expr pos:start="307:48" pos:end="307:62"><name pos:start="307:48" pos:end="307:62"><name pos:start="307:48" pos:end="307:52">track</name><operator pos:start="307:53" pos:end="307:54">-&gt;</operator><name pos:start="307:55" pos:end="307:62">codec_id</name></name></expr></argument>,

                            <argument pos:start="309:29" pos:end="309:53"><expr pos:start="309:29" pos:end="309:53"><call pos:start="309:29" pos:end="309:53"><name pos:start="309:29" pos:end="309:34">strlen</name><argument_list pos:start="309:35" pos:end="309:53">(<argument pos:start="309:36" pos:end="309:52"><expr pos:start="309:36" pos:end="309:52"><name pos:start="309:36" pos:end="309:48"><name pos:start="309:36" pos:end="309:45">codec_tags</name><index pos:start="309:46" pos:end="309:48">[<expr pos:start="309:47" pos:end="309:47"><name pos:start="309:47" pos:end="309:47">j</name></expr>]</index></name><operator pos:start="309:49" pos:end="309:49">.</operator><name pos:start="309:50" pos:end="309:52">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="309:56" pos:end="315:17">{<block_content pos:start="311:21" pos:end="313:26">

                    <expr_stmt pos:start="311:21" pos:end="311:47"><expr pos:start="311:21" pos:end="311:46"><name pos:start="311:21" pos:end="311:28">codec_id</name><operator pos:start="311:29" pos:end="311:29">=</operator> <name pos:start="311:31" pos:end="311:43"><name pos:start="311:31" pos:end="311:40">codec_tags</name><index pos:start="311:41" pos:end="311:43">[<expr pos:start="311:42" pos:end="311:42"><name pos:start="311:42" pos:end="311:42">j</name></expr>]</index></name><operator pos:start="311:44" pos:end="311:44">.</operator><name pos:start="311:45" pos:end="311:46">id</name></expr>;</expr_stmt>

                    <break pos:start="313:21" pos:end="313:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <comment type="block" pos:start="321:13" pos:end="321:50">/* Set the FourCC from the CodecID. */</comment>

            <comment type="block" pos:start="323:13" pos:end="325:55">/* This is the MS compatibility mode which stores a

             * BITMAPINFOHEADER in the CodecPrivate. */</comment>

            <if_stmt pos:start="327:13" pos:end="489:13"><if pos:start="327:13" pos:end="351:13">if <condition pos:start="327:16" pos:end="333:44">(<expr pos:start="327:17" pos:end="333:43"><operator pos:start="327:17" pos:end="327:17">!</operator><call pos:start="327:18" pos:end="329:59"><name pos:start="327:18" pos:end="327:23">strcmp</name><argument_list pos:start="327:24" pos:end="329:59">(<argument pos:start="327:25" pos:end="327:39"><expr pos:start="327:25" pos:end="327:39"><name pos:start="327:25" pos:end="327:39"><name pos:start="327:25" pos:end="327:29">track</name><operator pos:start="327:30" pos:end="327:31">-&gt;</operator><name pos:start="327:32" pos:end="327:39">codec_id</name></name></expr></argument>,

                        <argument pos:start="329:25" pos:end="329:58"><expr pos:start="329:25" pos:end="329:58"><name pos:start="329:25" pos:end="329:58">MATROSKA_CODEC_ID_VIDEO_VFW_FOURCC</name></expr></argument>)</argument_list></call> <operator pos:start="329:61" pos:end="329:62">&amp;&amp;</operator>

                <operator pos:start="331:17" pos:end="331:17">(</operator><name pos:start="331:18" pos:end="331:39"><name pos:start="331:18" pos:end="331:22">track</name><operator pos:start="331:23" pos:end="331:24">-&gt;</operator><name pos:start="331:25" pos:end="331:39">codec_priv_size</name></name> <operator pos:start="331:41" pos:end="331:42">&gt;=</operator> <literal type="number" pos:start="331:44" pos:end="331:45">40</literal><operator pos:start="331:46" pos:end="331:46">)</operator> <operator pos:start="331:48" pos:end="331:49">&amp;&amp;</operator>

                <operator pos:start="333:17" pos:end="333:17">(</operator><name pos:start="333:18" pos:end="333:34"><name pos:start="333:18" pos:end="333:22">track</name><operator pos:start="333:23" pos:end="333:24">-&gt;</operator><name pos:start="333:25" pos:end="333:34">codec_priv</name></name> <operator pos:start="333:36" pos:end="333:37">!=</operator> <name pos:start="333:39" pos:end="333:42">NULL</name><operator pos:start="333:43" pos:end="333:43">)</operator></expr>)</condition> <block pos:start="333:46" pos:end="351:13">{<block_content pos:start="335:17" pos:end="347:95">

                <decl_stmt pos:start="335:17" pos:end="335:33"><decl pos:start="335:17" pos:end="335:32"><type pos:start="335:17" pos:end="335:31"><name pos:start="335:17" pos:end="335:24">unsigned</name> <name pos:start="335:26" pos:end="335:29">char</name> <modifier pos:start="335:31" pos:end="335:31">*</modifier></type><name pos:start="335:32" pos:end="335:32">p</name></decl>;</decl_stmt>



                <comment type="block" pos:start="339:17" pos:end="339:60">/* Offset of biCompression. Stored in LE. */</comment>

                <expr_stmt pos:start="341:17" pos:end="341:60"><expr pos:start="341:17" pos:end="341:59"><name pos:start="341:17" pos:end="341:17">p</name> <operator pos:start="341:19" pos:end="341:19">=</operator> <operator pos:start="341:21" pos:end="341:21">(</operator><name pos:start="341:22" pos:end="341:29">unsigned</name> <name pos:start="341:31" pos:end="341:34">char</name> <operator pos:start="341:36" pos:end="341:36">*</operator><operator pos:start="341:37" pos:end="341:37">)</operator><name pos:start="341:38" pos:end="341:54"><name pos:start="341:38" pos:end="341:42">track</name><operator pos:start="341:43" pos:end="341:44">-&gt;</operator><name pos:start="341:45" pos:end="341:54">codec_priv</name></name> <operator pos:start="341:56" pos:end="341:56">+</operator> <literal type="number" pos:start="341:58" pos:end="341:59">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="343:17" pos:end="345:67"><expr pos:start="343:17" pos:end="345:66"><operator pos:start="343:17" pos:end="343:17">(</operator><operator pos:start="343:18" pos:end="343:18">(</operator><name pos:start="343:19" pos:end="343:36">MatroskaVideoTrack</name> <operator pos:start="343:38" pos:end="343:38">*</operator><operator pos:start="343:39" pos:end="343:39">)</operator><name pos:start="343:40" pos:end="343:44">track</name><operator pos:start="343:45" pos:end="343:45">)</operator><operator pos:start="343:46" pos:end="343:47">-&gt;</operator><name pos:start="343:48" pos:end="343:53">fourcc</name> <operator pos:start="343:55" pos:end="343:55">=</operator> <operator pos:start="343:57" pos:end="343:57">(</operator><name pos:start="343:58" pos:end="343:61"><name pos:start="343:58" pos:end="343:58">p</name><index pos:start="343:59" pos:end="343:61">[<expr pos:start="343:60" pos:end="343:60"><literal type="number" pos:start="343:60" pos:end="343:60">3</literal></expr>]</index></name> <operator pos:start="343:63" pos:end="343:64">&lt;&lt;</operator> <literal type="number" pos:start="343:66" pos:end="343:67">24</literal><operator pos:start="343:68" pos:end="343:68">)</operator> <operator pos:start="343:70" pos:end="343:70">|</operator>

                                 <operator pos:start="345:34" pos:end="345:34">(</operator><name pos:start="345:35" pos:end="345:38"><name pos:start="345:35" pos:end="345:35">p</name><index pos:start="345:36" pos:end="345:38">[<expr pos:start="345:37" pos:end="345:37"><literal type="number" pos:start="345:37" pos:end="345:37">2</literal></expr>]</index></name> <operator pos:start="345:40" pos:end="345:41">&lt;&lt;</operator> <literal type="number" pos:start="345:43" pos:end="345:44">16</literal><operator pos:start="345:45" pos:end="345:45">)</operator> <operator pos:start="345:47" pos:end="345:47">|</operator> <operator pos:start="345:49" pos:end="345:49">(</operator><name pos:start="345:50" pos:end="345:53"><name pos:start="345:50" pos:end="345:50">p</name><index pos:start="345:51" pos:end="345:53">[<expr pos:start="345:52" pos:end="345:52"><literal type="number" pos:start="345:52" pos:end="345:52">1</literal></expr>]</index></name> <operator pos:start="345:55" pos:end="345:56">&lt;&lt;</operator> <literal type="number" pos:start="345:58" pos:end="345:58">8</literal><operator pos:start="345:59" pos:end="345:59">)</operator> <operator pos:start="345:61" pos:end="345:61">|</operator> <name pos:start="345:63" pos:end="345:66"><name pos:start="345:63" pos:end="345:63">p</name><index pos:start="345:64" pos:end="345:66">[<expr pos:start="345:65" pos:end="345:65"><literal type="number" pos:start="345:65" pos:end="345:65">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:95"><expr pos:start="347:17" pos:end="347:94"><name pos:start="347:17" pos:end="347:24">codec_id</name> <operator pos:start="347:26" pos:end="347:26">=</operator> <call pos:start="347:28" pos:end="347:94"><name pos:start="347:28" pos:end="347:39">codec_get_id</name><argument_list pos:start="347:40" pos:end="347:94">(<argument pos:start="347:41" pos:end="347:54"><expr pos:start="347:41" pos:end="347:54"><name pos:start="347:41" pos:end="347:54">codec_bmp_tags</name></expr></argument>, <argument pos:start="347:57" pos:end="347:93"><expr pos:start="347:57" pos:end="347:93"><operator pos:start="347:57" pos:end="347:57">(</operator><operator pos:start="347:58" pos:end="347:58">(</operator><name pos:start="347:59" pos:end="347:76">MatroskaVideoTrack</name> <operator pos:start="347:78" pos:end="347:78">*</operator><operator pos:start="347:79" pos:end="347:79">)</operator><name pos:start="347:80" pos:end="347:84">track</name><operator pos:start="347:85" pos:end="347:85">)</operator><operator pos:start="347:86" pos:end="347:87">-&gt;</operator><name pos:start="347:88" pos:end="347:93">fourcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            </block_content>}</block></if>



            <comment type="block" pos:start="355:13" pos:end="357:51">/* This is the MS compatibility mode which stores a

             * WAVEFORMATEX in the CodecPrivate. */</comment>

            <if type="elseif" pos:start="359:13" pos:end="383:13">else if <condition pos:start="359:21" pos:end="365:44">(<expr pos:start="359:22" pos:end="365:43"><operator pos:start="359:22" pos:end="359:22">!</operator><call pos:start="359:23" pos:end="361:57"><name pos:start="359:23" pos:end="359:28">strcmp</name><argument_list pos:start="359:29" pos:end="361:57">(<argument pos:start="359:30" pos:end="359:44"><expr pos:start="359:30" pos:end="359:44"><name pos:start="359:30" pos:end="359:44"><name pos:start="359:30" pos:end="359:34">track</name><operator pos:start="359:35" pos:end="359:36">-&gt;</operator><name pos:start="359:37" pos:end="359:44">codec_id</name></name></expr></argument>,

                             <argument pos:start="361:30" pos:end="361:56"><expr pos:start="361:30" pos:end="361:56"><name pos:start="361:30" pos:end="361:56">MATROSKA_CODEC_ID_AUDIO_ACM</name></expr></argument>)</argument_list></call> <operator pos:start="361:59" pos:end="361:60">&amp;&amp;</operator>

                <operator pos:start="363:17" pos:end="363:17">(</operator><name pos:start="363:18" pos:end="363:39"><name pos:start="363:18" pos:end="363:22">track</name><operator pos:start="363:23" pos:end="363:24">-&gt;</operator><name pos:start="363:25" pos:end="363:39">codec_priv_size</name></name> <operator pos:start="363:41" pos:end="363:42">&gt;=</operator> <literal type="number" pos:start="363:44" pos:end="363:45">18</literal><operator pos:start="363:46" pos:end="363:46">)</operator> <operator pos:start="363:48" pos:end="363:49">&amp;&amp;</operator>

                <operator pos:start="365:17" pos:end="365:17">(</operator><name pos:start="365:18" pos:end="365:34"><name pos:start="365:18" pos:end="365:22">track</name><operator pos:start="365:23" pos:end="365:24">-&gt;</operator><name pos:start="365:25" pos:end="365:34">codec_priv</name></name> <operator pos:start="365:36" pos:end="365:37">!=</operator> <name pos:start="365:39" pos:end="365:42">NULL</name><operator pos:start="365:43" pos:end="365:43">)</operator></expr>)</condition> <block pos:start="365:46" pos:end="383:13">{<block_content pos:start="367:17" pos:end="379:61">

                <decl_stmt pos:start="367:17" pos:end="367:33"><decl pos:start="367:17" pos:end="367:32"><type pos:start="367:17" pos:end="367:31"><name pos:start="367:17" pos:end="367:24">unsigned</name> <name pos:start="367:26" pos:end="367:29">char</name> <modifier pos:start="367:31" pos:end="367:31">*</modifier></type><name pos:start="367:32" pos:end="367:32">p</name></decl>;</decl_stmt>

                <decl_stmt pos:start="369:17" pos:end="369:29"><decl pos:start="369:17" pos:end="369:28"><type pos:start="369:17" pos:end="369:24"><name pos:start="369:17" pos:end="369:24">uint16_t</name></type> <name pos:start="369:26" pos:end="369:28">tag</name></decl>;</decl_stmt>



                <comment type="block" pos:start="373:17" pos:end="373:57">/* Offset of wFormatTag. Stored in LE. */</comment>

                <expr_stmt pos:start="375:17" pos:end="375:55"><expr pos:start="375:17" pos:end="375:54"><name pos:start="375:17" pos:end="375:17">p</name> <operator pos:start="375:19" pos:end="375:19">=</operator> <operator pos:start="375:21" pos:end="375:21">(</operator><name pos:start="375:22" pos:end="375:29">unsigned</name> <name pos:start="375:31" pos:end="375:34">char</name> <operator pos:start="375:36" pos:end="375:36">*</operator><operator pos:start="375:37" pos:end="375:37">)</operator><name pos:start="375:38" pos:end="375:54"><name pos:start="375:38" pos:end="375:42">track</name><operator pos:start="375:43" pos:end="375:44">-&gt;</operator><name pos:start="375:45" pos:end="375:54">codec_priv</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="377:17" pos:end="377:41"><expr pos:start="377:17" pos:end="377:40"><name pos:start="377:17" pos:end="377:19">tag</name> <operator pos:start="377:21" pos:end="377:21">=</operator> <operator pos:start="377:23" pos:end="377:23">(</operator><name pos:start="377:24" pos:end="377:27"><name pos:start="377:24" pos:end="377:24">p</name><index pos:start="377:25" pos:end="377:27">[<expr pos:start="377:26" pos:end="377:26"><literal type="number" pos:start="377:26" pos:end="377:26">1</literal></expr>]</index></name> <operator pos:start="377:29" pos:end="377:30">&lt;&lt;</operator> <literal type="number" pos:start="377:32" pos:end="377:32">8</literal><operator pos:start="377:33" pos:end="377:33">)</operator> <operator pos:start="377:35" pos:end="377:35">|</operator> <name pos:start="377:37" pos:end="377:40"><name pos:start="377:37" pos:end="377:37">p</name><index pos:start="377:38" pos:end="377:40">[<expr pos:start="377:39" pos:end="377:39"><literal type="number" pos:start="377:39" pos:end="377:39">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:61"><expr pos:start="379:17" pos:end="379:60"><name pos:start="379:17" pos:end="379:24">codec_id</name> <operator pos:start="379:26" pos:end="379:26">=</operator> <call pos:start="379:28" pos:end="379:60"><name pos:start="379:28" pos:end="379:39">codec_get_id</name><argument_list pos:start="379:40" pos:end="379:60">(<argument pos:start="379:41" pos:end="379:54"><expr pos:start="379:41" pos:end="379:54"><name pos:start="379:41" pos:end="379:54">codec_wav_tags</name></expr></argument>, <argument pos:start="379:57" pos:end="379:59"><expr pos:start="379:57" pos:end="379:59"><name pos:start="379:57" pos:end="379:59">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            </block_content>}</block></if>



            <if type="elseif" pos:start="387:13" pos:end="399:13">else if <condition pos:start="387:21" pos:end="395:47">(<expr pos:start="387:22" pos:end="395:46"><name pos:start="387:22" pos:end="387:29">codec_id</name> <operator pos:start="387:31" pos:end="387:32">==</operator> <name pos:start="387:34" pos:end="387:52">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="387:54" pos:end="387:55">||</operator>

                     <name pos:start="389:22" pos:end="389:29">codec_id</name> <operator pos:start="389:31" pos:end="389:32">==</operator> <name pos:start="389:34" pos:end="389:52">CODEC_ID_MPEG2VIDEO</name> <operator pos:start="389:54" pos:end="389:55">||</operator>

                     <name pos:start="391:22" pos:end="391:29">codec_id</name> <operator pos:start="391:31" pos:end="391:32">==</operator> <name pos:start="391:34" pos:end="391:47">CODEC_ID_MPEG4</name>      <operator pos:start="391:54" pos:end="391:55">||</operator>

                     <name pos:start="393:22" pos:end="393:29">codec_id</name> <operator pos:start="393:31" pos:end="393:32">==</operator> <name pos:start="393:34" pos:end="393:51">CODEC_ID_MSMPEG4V3</name>  <operator pos:start="393:54" pos:end="393:55">||</operator>

                     <name pos:start="395:22" pos:end="395:29">codec_id</name> <operator pos:start="395:31" pos:end="395:32">==</operator> <name pos:start="395:34" pos:end="395:46">CODEC_ID_H264</name></expr>)</condition> <block pos:start="395:49" pos:end="399:13">{<block_content pos:start="397:17" pos:end="397:55">

                <expr_stmt pos:start="397:17" pos:end="397:55"><expr pos:start="397:17" pos:end="397:54"><name pos:start="397:17" pos:end="397:28"><name pos:start="397:17" pos:end="397:21">track</name><operator pos:start="397:22" pos:end="397:23">-&gt;</operator><name pos:start="397:24" pos:end="397:28">flags</name></name> <operator pos:start="397:30" pos:end="397:31">|=</operator> <name pos:start="397:33" pos:end="397:54">MATROSKA_TRACK_REORDER</name></expr>;</expr_stmt>

            </block_content>}</block></if>



            <if type="elseif" pos:start="403:13" pos:end="441:13">else if <condition pos:start="403:21" pos:end="403:73">(<expr pos:start="403:22" pos:end="403:72"><name pos:start="403:22" pos:end="403:29">codec_id</name> <operator pos:start="403:31" pos:end="403:32">==</operator> <name pos:start="403:34" pos:end="403:45">CODEC_ID_AAC</name> <operator pos:start="403:47" pos:end="403:48">&amp;&amp;</operator> <operator pos:start="403:50" pos:end="403:50">!</operator><name pos:start="403:51" pos:end="403:72"><name pos:start="403:51" pos:end="403:55">track</name><operator pos:start="403:56" pos:end="403:57">-&gt;</operator><name pos:start="403:58" pos:end="403:72">codec_priv_size</name></name></expr>)</condition> <block pos:start="403:75" pos:end="441:13">{<block_content pos:start="405:17" pos:end="439:86">

                <decl_stmt pos:start="405:17" pos:end="405:78"><decl pos:start="405:17" pos:end="405:77"><type pos:start="405:17" pos:end="405:36"><name pos:start="405:17" pos:end="405:34">MatroskaAudioTrack</name> <modifier pos:start="405:36" pos:end="405:36">*</modifier></type><name pos:start="405:37" pos:end="405:46">audiotrack</name> <init pos:start="405:48" pos:end="405:77">= <expr pos:start="405:50" pos:end="405:77"><operator pos:start="405:50" pos:end="405:50">(</operator><name pos:start="405:51" pos:end="405:68">MatroskaAudioTrack</name> <operator pos:start="405:70" pos:end="405:70">*</operator><operator pos:start="405:71" pos:end="405:71">)</operator> <name pos:start="405:73" pos:end="405:77">track</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="407:17" pos:end="407:68"><decl pos:start="407:17" pos:end="407:67"><type pos:start="407:17" pos:end="407:19"><name pos:start="407:17" pos:end="407:19">int</name></type> <name pos:start="407:21" pos:end="407:27">profile</name> <init pos:start="407:29" pos:end="407:67">= <expr pos:start="407:31" pos:end="407:67"><call pos:start="407:31" pos:end="407:67"><name pos:start="407:31" pos:end="407:50">matroska_aac_profile</name><argument_list pos:start="407:51" pos:end="407:67">(<argument pos:start="407:52" pos:end="407:66"><expr pos:start="407:52" pos:end="407:66"><name pos:start="407:52" pos:end="407:66"><name pos:start="407:52" pos:end="407:56">track</name><operator pos:start="407:57" pos:end="407:58">-&gt;</operator><name pos:start="407:59" pos:end="407:66">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="409:17" pos:end="409:76"><decl pos:start="409:17" pos:end="409:75"><type pos:start="409:17" pos:end="409:19"><name pos:start="409:17" pos:end="409:19">int</name></type> <name pos:start="409:21" pos:end="409:23">sri</name> <init pos:start="409:25" pos:end="409:75">= <expr pos:start="409:27" pos:end="409:75"><call pos:start="409:27" pos:end="409:75"><name pos:start="409:27" pos:end="409:42">matroska_aac_sri</name><argument_list pos:start="409:43" pos:end="409:75">(<argument pos:start="409:44" pos:end="409:74"><expr pos:start="409:44" pos:end="409:74"><name pos:start="409:44" pos:end="409:74"><name pos:start="409:44" pos:end="409:53">audiotrack</name><operator pos:start="409:54" pos:end="409:55">-&gt;</operator><name pos:start="409:56" pos:end="409:74">internal_samplerate</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:41"><expr pos:start="411:17" pos:end="411:40"><name pos:start="411:17" pos:end="411:25">extradata</name> <operator pos:start="411:27" pos:end="411:27">=</operator> <call pos:start="411:29" pos:end="411:40"><name pos:start="411:29" pos:end="411:37">av_malloc</name><argument_list pos:start="411:38" pos:end="411:40">(<argument pos:start="411:39" pos:end="411:39"><expr pos:start="411:39" pos:end="411:39"><literal type="number" pos:start="411:39" pos:end="411:39">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="413:17" pos:end="415:41"><if pos:start="413:17" pos:end="415:41">if <condition pos:start="413:20" pos:end="413:38">(<expr pos:start="413:21" pos:end="413:37"><name pos:start="413:21" pos:end="413:29">extradata</name> <operator pos:start="413:31" pos:end="413:32">==</operator> <name pos:start="413:34" pos:end="413:37">NULL</name></expr>)</condition><block type="pseudo" pos:start="415:21" pos:end="415:41"><block_content pos:start="415:21" pos:end="415:41">

                    <return pos:start="415:21" pos:end="415:41">return <expr pos:start="415:28" pos:end="415:40"><name pos:start="415:28" pos:end="415:40">AVERROR_NOMEM</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:66"><expr pos:start="417:17" pos:end="417:65"><name pos:start="417:17" pos:end="417:28"><name pos:start="417:17" pos:end="417:25">extradata</name><index pos:start="417:26" pos:end="417:28">[<expr pos:start="417:27" pos:end="417:27"><literal type="number" pos:start="417:27" pos:end="417:27">0</literal></expr>]</index></name> <operator pos:start="417:30" pos:end="417:30">=</operator> <operator pos:start="417:32" pos:end="417:32">(</operator><name pos:start="417:33" pos:end="417:39">profile</name> <operator pos:start="417:41" pos:end="417:42">&lt;&lt;</operator> <literal type="number" pos:start="417:44" pos:end="417:44">3</literal><operator pos:start="417:45" pos:end="417:45">)</operator> <operator pos:start="417:47" pos:end="417:47">|</operator> <operator pos:start="417:49" pos:end="417:49">(</operator><operator pos:start="417:50" pos:end="417:50">(</operator><name pos:start="417:51" pos:end="417:53">sri</name><operator pos:start="417:54" pos:end="417:54">&amp;</operator><literal type="number" pos:start="417:55" pos:end="417:58">0x0E</literal><operator pos:start="417:59" pos:end="417:59">)</operator> <operator pos:start="417:61" pos:end="417:62">&gt;&gt;</operator> <literal type="number" pos:start="417:64" pos:end="417:64">1</literal><operator pos:start="417:65" pos:end="417:65">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:77"><expr pos:start="419:17" pos:end="419:76"><name pos:start="419:17" pos:end="419:28"><name pos:start="419:17" pos:end="419:25">extradata</name><index pos:start="419:26" pos:end="419:28">[<expr pos:start="419:27" pos:end="419:27"><literal type="number" pos:start="419:27" pos:end="419:27">1</literal></expr>]</index></name> <operator pos:start="419:30" pos:end="419:30">=</operator> <operator pos:start="419:32" pos:end="419:32">(</operator><operator pos:start="419:33" pos:end="419:33">(</operator><name pos:start="419:34" pos:end="419:36">sri</name><operator pos:start="419:37" pos:end="419:37">&amp;</operator><literal type="number" pos:start="419:38" pos:end="419:41">0x01</literal><operator pos:start="419:42" pos:end="419:42">)</operator> <operator pos:start="419:44" pos:end="419:45">&lt;&lt;</operator> <literal type="number" pos:start="419:47" pos:end="419:47">7</literal><operator pos:start="419:48" pos:end="419:48">)</operator> <operator pos:start="419:50" pos:end="419:50">|</operator> <operator pos:start="419:52" pos:end="419:52">(</operator><name pos:start="419:53" pos:end="419:72"><name pos:start="419:53" pos:end="419:62">audiotrack</name><operator pos:start="419:63" pos:end="419:64">-&gt;</operator><name pos:start="419:65" pos:end="419:72">channels</name></name><operator pos:start="419:73" pos:end="419:74">&lt;&lt;</operator><literal type="number" pos:start="419:75" pos:end="419:75">3</literal><operator pos:start="419:76" pos:end="419:76">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="421:17" pos:end="437:17"><if pos:start="421:17" pos:end="433:17">if <condition pos:start="421:20" pos:end="421:51">(<expr pos:start="421:21" pos:end="421:50"><call pos:start="421:21" pos:end="421:50"><name pos:start="421:21" pos:end="421:26">strstr</name><argument_list pos:start="421:27" pos:end="421:50">(<argument pos:start="421:28" pos:end="421:42"><expr pos:start="421:28" pos:end="421:42"><name pos:start="421:28" pos:end="421:42"><name pos:start="421:28" pos:end="421:32">track</name><operator pos:start="421:33" pos:end="421:34">-&gt;</operator><name pos:start="421:35" pos:end="421:42">codec_id</name></name></expr></argument>, <argument pos:start="421:45" pos:end="421:49"><expr pos:start="421:45" pos:end="421:49"><literal type="string" pos:start="421:45" pos:end="421:49">"SBR"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="421:53" pos:end="433:17">{<block_content pos:start="423:21" pos:end="431:39">

                    <expr_stmt pos:start="423:21" pos:end="423:67"><expr pos:start="423:21" pos:end="423:66"><name pos:start="423:21" pos:end="423:23">sri</name> <operator pos:start="423:25" pos:end="423:25">=</operator> <call pos:start="423:27" pos:end="423:66"><name pos:start="423:27" pos:end="423:42">matroska_aac_sri</name><argument_list pos:start="423:43" pos:end="423:66">(<argument pos:start="423:44" pos:end="423:65"><expr pos:start="423:44" pos:end="423:65"><name pos:start="423:44" pos:end="423:65"><name pos:start="423:44" pos:end="423:53">audiotrack</name><operator pos:start="423:54" pos:end="423:55">-&gt;</operator><name pos:start="423:56" pos:end="423:65">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="425:21" pos:end="425:40"><expr pos:start="425:21" pos:end="425:39"><name pos:start="425:21" pos:end="425:32"><name pos:start="425:21" pos:end="425:29">extradata</name><index pos:start="425:30" pos:end="425:32">[<expr pos:start="425:31" pos:end="425:31"><literal type="number" pos:start="425:31" pos:end="425:31">2</literal></expr>]</index></name> <operator pos:start="425:34" pos:end="425:34">=</operator> <literal type="number" pos:start="425:36" pos:end="425:39">0x56</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="427:21" pos:end="427:40"><expr pos:start="427:21" pos:end="427:39"><name pos:start="427:21" pos:end="427:32"><name pos:start="427:21" pos:end="427:29">extradata</name><index pos:start="427:30" pos:end="427:32">[<expr pos:start="427:31" pos:end="427:31"><literal type="number" pos:start="427:31" pos:end="427:31">3</literal></expr>]</index></name> <operator pos:start="427:34" pos:end="427:34">=</operator> <literal type="number" pos:start="427:36" pos:end="427:39">0xE5</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="429:21" pos:end="429:51"><expr pos:start="429:21" pos:end="429:50"><name pos:start="429:21" pos:end="429:32"><name pos:start="429:21" pos:end="429:29">extradata</name><index pos:start="429:30" pos:end="429:32">[<expr pos:start="429:31" pos:end="429:31"><literal type="number" pos:start="429:31" pos:end="429:31">4</literal></expr>]</index></name> <operator pos:start="429:34" pos:end="429:34">=</operator> <literal type="number" pos:start="429:36" pos:end="429:39">0x80</literal> <operator pos:start="429:41" pos:end="429:41">|</operator> <operator pos:start="429:43" pos:end="429:43">(</operator><name pos:start="429:44" pos:end="429:46">sri</name><operator pos:start="429:47" pos:end="429:48">&lt;&lt;</operator><literal type="number" pos:start="429:49" pos:end="429:49">3</literal><operator pos:start="429:50" pos:end="429:50">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="431:21" pos:end="431:39"><expr pos:start="431:21" pos:end="431:38"><name pos:start="431:21" pos:end="431:34">extradata_size</name> <operator pos:start="431:36" pos:end="431:36">=</operator> <literal type="number" pos:start="431:38" pos:end="431:38">5</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="433:19" pos:end="437:17">else <block pos:start="433:24" pos:end="437:17">{<block_content pos:start="435:21" pos:end="435:39">

                    <expr_stmt pos:start="435:21" pos:end="435:39"><expr pos:start="435:21" pos:end="435:38"><name pos:start="435:21" pos:end="435:34">extradata_size</name> <operator pos:start="435:36" pos:end="435:36">=</operator> <literal type="number" pos:start="435:38" pos:end="435:38">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="439:17" pos:end="439:86"><expr pos:start="439:17" pos:end="439:85"><name pos:start="439:17" pos:end="439:39"><name pos:start="439:17" pos:end="439:21">track</name><operator pos:start="439:22" pos:end="439:23">-&gt;</operator><name pos:start="439:24" pos:end="439:39">default_duration</name></name> <operator pos:start="439:41" pos:end="439:41">=</operator> <literal type="number" pos:start="439:43" pos:end="439:46">1024</literal><operator pos:start="439:47" pos:end="439:47">*</operator><literal type="number" pos:start="439:48" pos:end="439:51">1000</literal> <operator pos:start="439:53" pos:end="439:53">/</operator> <name pos:start="439:55" pos:end="439:85"><name pos:start="439:55" pos:end="439:64">audiotrack</name><operator pos:start="439:65" pos:end="439:66">-&gt;</operator><name pos:start="439:67" pos:end="439:85">internal_samplerate</name></name></expr>;</expr_stmt>

            </block_content>}</block></if>



            <if type="elseif" pos:start="445:13" pos:end="475:13">else if <condition pos:start="445:21" pos:end="445:46">(<expr pos:start="445:22" pos:end="445:45"><name pos:start="445:22" pos:end="445:29">codec_id</name> <operator pos:start="445:31" pos:end="445:32">==</operator> <name pos:start="445:34" pos:end="445:45">CODEC_ID_TTA</name></expr>)</condition> <block pos:start="445:48" pos:end="475:13">{<block_content pos:start="447:17" pos:end="473:79">

                <decl_stmt pos:start="447:17" pos:end="447:78"><decl pos:start="447:17" pos:end="447:77"><type pos:start="447:17" pos:end="447:36"><name pos:start="447:17" pos:end="447:34">MatroskaAudioTrack</name> <modifier pos:start="447:36" pos:end="447:36">*</modifier></type><name pos:start="447:37" pos:end="447:46">audiotrack</name> <init pos:start="447:48" pos:end="447:77">= <expr pos:start="447:50" pos:end="447:77"><operator pos:start="447:50" pos:end="447:50">(</operator><name pos:start="447:51" pos:end="447:68">MatroskaAudioTrack</name> <operator pos:start="447:70" pos:end="447:70">*</operator><operator pos:start="447:71" pos:end="447:71">)</operator> <name pos:start="447:73" pos:end="447:77">track</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="449:17" pos:end="449:32"><decl pos:start="449:17" pos:end="449:31"><type pos:start="449:17" pos:end="449:29"><name pos:start="449:17" pos:end="449:29">ByteIOContext</name></type> <name pos:start="449:31" pos:end="449:31">b</name></decl>;</decl_stmt>

                <expr_stmt pos:start="451:17" pos:end="451:36"><expr pos:start="451:17" pos:end="451:35"><name pos:start="451:17" pos:end="451:30">extradata_size</name> <operator pos:start="451:32" pos:end="451:32">=</operator> <literal type="number" pos:start="451:34" pos:end="451:35">30</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="453:17" pos:end="453:55"><expr pos:start="453:17" pos:end="453:54"><name pos:start="453:17" pos:end="453:25">extradata</name> <operator pos:start="453:27" pos:end="453:27">=</operator> <call pos:start="453:29" pos:end="453:54"><name pos:start="453:29" pos:end="453:38">av_mallocz</name><argument_list pos:start="453:39" pos:end="453:54">(<argument pos:start="453:40" pos:end="453:53"><expr pos:start="453:40" pos:end="453:53"><name pos:start="453:40" pos:end="453:53">extradata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="455:17" pos:end="457:41"><if pos:start="455:17" pos:end="457:41">if <condition pos:start="455:20" pos:end="455:38">(<expr pos:start="455:21" pos:end="455:37"><name pos:start="455:21" pos:end="455:29">extradata</name> <operator pos:start="455:31" pos:end="455:32">==</operator> <name pos:start="455:34" pos:end="455:37">NULL</name></expr>)</condition><block type="pseudo" pos:start="457:21" pos:end="457:41"><block_content pos:start="457:21" pos:end="457:41">

                    <return pos:start="457:21" pos:end="457:41">return <expr pos:start="457:28" pos:end="457:40"><name pos:start="457:28" pos:end="457:40">AVERROR_NOMEM</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="459:17" pos:end="461:54"><expr pos:start="459:17" pos:end="461:53"><call pos:start="459:17" pos:end="461:53"><name pos:start="459:17" pos:end="459:29">init_put_byte</name><argument_list pos:start="459:30" pos:end="461:53">(<argument pos:start="459:31" pos:end="459:32"><expr pos:start="459:31" pos:end="459:32"><operator pos:start="459:31" pos:end="459:31">&amp;</operator><name pos:start="459:32" pos:end="459:32">b</name></expr></argument>, <argument pos:start="459:35" pos:end="459:43"><expr pos:start="459:35" pos:end="459:43"><name pos:start="459:35" pos:end="459:43">extradata</name></expr></argument>, <argument pos:start="459:46" pos:end="459:59"><expr pos:start="459:46" pos:end="459:59"><name pos:start="459:46" pos:end="459:59">extradata_size</name></expr></argument>, <argument pos:start="459:62" pos:end="459:62"><expr pos:start="459:62" pos:end="459:62"><literal type="number" pos:start="459:62" pos:end="459:62">1</literal></expr></argument>,

                              <argument pos:start="461:31" pos:end="461:34"><expr pos:start="461:31" pos:end="461:34"><name pos:start="461:31" pos:end="461:34">NULL</name></expr></argument>, <argument pos:start="461:37" pos:end="461:40"><expr pos:start="461:37" pos:end="461:40"><name pos:start="461:37" pos:end="461:40">NULL</name></expr></argument>, <argument pos:start="461:43" pos:end="461:46"><expr pos:start="461:43" pos:end="461:46"><name pos:start="461:43" pos:end="461:46">NULL</name></expr></argument>, <argument pos:start="461:49" pos:end="461:52"><expr pos:start="461:49" pos:end="461:52"><name pos:start="461:49" pos:end="461:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="463:17" pos:end="463:54"><expr pos:start="463:17" pos:end="463:53"><call pos:start="463:17" pos:end="463:53"><name pos:start="463:17" pos:end="463:26">put_buffer</name><argument_list pos:start="463:27" pos:end="463:53">(<argument pos:start="463:28" pos:end="463:29"><expr pos:start="463:28" pos:end="463:29"><operator pos:start="463:28" pos:end="463:28">&amp;</operator><name pos:start="463:29" pos:end="463:29">b</name></expr></argument>, <argument pos:start="463:32" pos:end="463:49"><expr pos:start="463:32" pos:end="463:49"><operator pos:start="463:32" pos:end="463:32">(</operator><name pos:start="463:33" pos:end="463:39">uint8_t</name> <operator pos:start="463:41" pos:end="463:41">*</operator><operator pos:start="463:42" pos:end="463:42">)</operator> <literal type="string" pos:start="463:44" pos:end="463:49">"TTA1"</literal></expr></argument>, <argument pos:start="463:52" pos:end="463:52"><expr pos:start="463:52" pos:end="463:52"><literal type="number" pos:start="463:52" pos:end="463:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="465:17" pos:end="465:32"><expr pos:start="465:17" pos:end="465:31"><call pos:start="465:17" pos:end="465:31"><name pos:start="465:17" pos:end="465:24">put_le16</name><argument_list pos:start="465:25" pos:end="465:31">(<argument pos:start="465:26" pos:end="465:27"><expr pos:start="465:26" pos:end="465:27"><operator pos:start="465:26" pos:end="465:26">&amp;</operator><name pos:start="465:27" pos:end="465:27">b</name></expr></argument>, <argument pos:start="465:30" pos:end="465:30"><expr pos:start="465:30" pos:end="465:30"><literal type="number" pos:start="465:30" pos:end="465:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="467:17" pos:end="467:51"><expr pos:start="467:17" pos:end="467:50"><call pos:start="467:17" pos:end="467:50"><name pos:start="467:17" pos:end="467:24">put_le16</name><argument_list pos:start="467:25" pos:end="467:50">(<argument pos:start="467:26" pos:end="467:27"><expr pos:start="467:26" pos:end="467:27"><operator pos:start="467:26" pos:end="467:26">&amp;</operator><name pos:start="467:27" pos:end="467:27">b</name></expr></argument>, <argument pos:start="467:30" pos:end="467:49"><expr pos:start="467:30" pos:end="467:49"><name pos:start="467:30" pos:end="467:49"><name pos:start="467:30" pos:end="467:39">audiotrack</name><operator pos:start="467:40" pos:end="467:41">-&gt;</operator><name pos:start="467:42" pos:end="467:49">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="469:17" pos:end="469:51"><expr pos:start="469:17" pos:end="469:50"><call pos:start="469:17" pos:end="469:50"><name pos:start="469:17" pos:end="469:24">put_le16</name><argument_list pos:start="469:25" pos:end="469:50">(<argument pos:start="469:26" pos:end="469:27"><expr pos:start="469:26" pos:end="469:27"><operator pos:start="469:26" pos:end="469:26">&amp;</operator><name pos:start="469:27" pos:end="469:27">b</name></expr></argument>, <argument pos:start="469:30" pos:end="469:49"><expr pos:start="469:30" pos:end="469:49"><name pos:start="469:30" pos:end="469:49"><name pos:start="469:30" pos:end="469:39">audiotrack</name><operator pos:start="469:40" pos:end="469:41">-&gt;</operator><name pos:start="469:42" pos:end="469:49">bitdepth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:53"><expr pos:start="471:17" pos:end="471:52"><call pos:start="471:17" pos:end="471:52"><name pos:start="471:17" pos:end="471:24">put_le32</name><argument_list pos:start="471:25" pos:end="471:52">(<argument pos:start="471:26" pos:end="471:27"><expr pos:start="471:26" pos:end="471:27"><operator pos:start="471:26" pos:end="471:26">&amp;</operator><name pos:start="471:27" pos:end="471:27">b</name></expr></argument>, <argument pos:start="471:30" pos:end="471:51"><expr pos:start="471:30" pos:end="471:51"><name pos:start="471:30" pos:end="471:51"><name pos:start="471:30" pos:end="471:39">audiotrack</name><operator pos:start="471:40" pos:end="471:41">-&gt;</operator><name pos:start="471:42" pos:end="471:51">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="473:17" pos:end="473:79"><expr pos:start="473:17" pos:end="473:78"><call pos:start="473:17" pos:end="473:78"><name pos:start="473:17" pos:end="473:24">put_le32</name><argument_list pos:start="473:25" pos:end="473:78">(<argument pos:start="473:26" pos:end="473:27"><expr pos:start="473:26" pos:end="473:27"><operator pos:start="473:26" pos:end="473:26">&amp;</operator><name pos:start="473:27" pos:end="473:27">b</name></expr></argument>, <argument pos:start="473:30" pos:end="473:77"><expr pos:start="473:30" pos:end="473:77"><name pos:start="473:30" pos:end="473:52"><name pos:start="473:30" pos:end="473:37">matroska</name><operator pos:start="473:38" pos:end="473:39">-&gt;</operator><name pos:start="473:40" pos:end="473:42">ctx</name><operator pos:start="473:43" pos:end="473:44">-&gt;</operator><name pos:start="473:45" pos:end="473:52">duration</name></name> <operator pos:start="473:54" pos:end="473:54">*</operator> <name pos:start="473:56" pos:end="473:77"><name pos:start="473:56" pos:end="473:65">audiotrack</name><operator pos:start="473:66" pos:end="473:67">-&gt;</operator><name pos:start="473:68" pos:end="473:77">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>



            <if type="elseif" pos:start="479:13" pos:end="489:13">else if <condition pos:start="479:21" pos:end="481:76">(<expr pos:start="479:22" pos:end="481:75"><name pos:start="479:22" pos:end="479:29">codec_id</name> <operator pos:start="479:31" pos:end="479:32">==</operator> <name pos:start="479:34" pos:end="479:46">CODEC_ID_RV10</name> <operator pos:start="479:48" pos:end="479:49">||</operator> <name pos:start="479:51" pos:end="479:58">codec_id</name> <operator pos:start="479:60" pos:end="479:61">==</operator> <name pos:start="479:63" pos:end="479:75">CODEC_ID_RV20</name> <operator pos:start="479:77" pos:end="479:78">||</operator>

                     <name pos:start="481:22" pos:end="481:29">codec_id</name> <operator pos:start="481:31" pos:end="481:32">==</operator> <name pos:start="481:34" pos:end="481:46">CODEC_ID_RV30</name> <operator pos:start="481:48" pos:end="481:49">||</operator> <name pos:start="481:51" pos:end="481:58">codec_id</name> <operator pos:start="481:60" pos:end="481:61">==</operator> <name pos:start="481:63" pos:end="481:75">CODEC_ID_RV40</name></expr>)</condition> <block pos:start="481:78" pos:end="489:13">{<block_content pos:start="483:17" pos:end="487:54">

                <expr_stmt pos:start="483:17" pos:end="483:38"><expr pos:start="483:17" pos:end="483:37"><name pos:start="483:17" pos:end="483:32">extradata_offset</name> <operator pos:start="483:34" pos:end="483:34">=</operator> <literal type="number" pos:start="483:36" pos:end="483:37">26</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="485:17" pos:end="485:59"><expr pos:start="485:17" pos:end="485:58"><name pos:start="485:17" pos:end="485:38"><name pos:start="485:17" pos:end="485:21">track</name><operator pos:start="485:22" pos:end="485:23">-&gt;</operator><name pos:start="485:24" pos:end="485:38">codec_priv_size</name></name> <operator pos:start="485:40" pos:end="485:41">-=</operator> <name pos:start="485:43" pos:end="485:58">extradata_offset</name></expr>;</expr_stmt>

                <expr_stmt pos:start="487:17" pos:end="487:54"><expr pos:start="487:17" pos:end="487:53"><name pos:start="487:17" pos:end="487:28"><name pos:start="487:17" pos:end="487:21">track</name><operator pos:start="487:22" pos:end="487:23">-&gt;</operator><name pos:start="487:24" pos:end="487:28">flags</name></name> <operator pos:start="487:30" pos:end="487:31">|=</operator> <name pos:start="487:33" pos:end="487:53">MATROSKA_TRACK_REAL_V</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="493:13" pos:end="501:13"><if pos:start="493:13" pos:end="501:13">if <condition pos:start="493:16" pos:end="493:42">(<expr pos:start="493:17" pos:end="493:41"><name pos:start="493:17" pos:end="493:24">codec_id</name> <operator pos:start="493:26" pos:end="493:27">==</operator> <name pos:start="493:29" pos:end="493:41">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="493:44" pos:end="501:13">{<block_content pos:start="495:17" pos:end="499:40">

                <expr_stmt pos:start="495:17" pos:end="499:40"><expr pos:start="495:17" pos:end="499:39"><call pos:start="495:17" pos:end="499:39"><name pos:start="495:17" pos:end="495:22">av_log</name><argument_list pos:start="495:23" pos:end="499:39">(<argument pos:start="495:24" pos:end="495:36"><expr pos:start="495:24" pos:end="495:36"><name pos:start="495:24" pos:end="495:36"><name pos:start="495:24" pos:end="495:31">matroska</name><operator pos:start="495:32" pos:end="495:33">-&gt;</operator><name pos:start="495:34" pos:end="495:36">ctx</name></name></expr></argument>, <argument pos:start="495:39" pos:end="495:49"><expr pos:start="495:39" pos:end="495:49"><name pos:start="495:39" pos:end="495:49">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="497:24" pos:end="497:58"><expr pos:start="497:24" pos:end="497:58"><literal type="string" pos:start="497:24" pos:end="497:58">"Unknown/unsupported CodecID %s.\n"</literal></expr></argument>,

                       <argument pos:start="499:24" pos:end="499:38"><expr pos:start="499:24" pos:end="499:38"><name pos:start="499:24" pos:end="499:38"><name pos:start="499:24" pos:end="499:28">track</name><operator pos:start="499:29" pos:end="499:30">-&gt;</operator><name pos:start="499:31" pos:end="499:38">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="505:13" pos:end="505:56"><expr pos:start="505:13" pos:end="505:55"><name pos:start="505:13" pos:end="505:31"><name pos:start="505:13" pos:end="505:17">track</name><operator pos:start="505:18" pos:end="505:19">-&gt;</operator><name pos:start="505:20" pos:end="505:31">stream_index</name></name> <operator pos:start="505:33" pos:end="505:33">=</operator> <name pos:start="505:35" pos:end="505:55"><name pos:start="505:35" pos:end="505:42">matroska</name><operator pos:start="505:43" pos:end="505:44">-&gt;</operator><name pos:start="505:45" pos:end="505:55">num_streams</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="509:13" pos:end="509:36"><expr pos:start="509:13" pos:end="509:35"><name pos:start="509:13" pos:end="509:33"><name pos:start="509:13" pos:end="509:20">matroska</name><operator pos:start="509:21" pos:end="509:22">-&gt;</operator><name pos:start="509:23" pos:end="509:33">num_streams</name></name><operator pos:start="509:34" pos:end="509:35">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="511:13" pos:end="511:55"><expr pos:start="511:13" pos:end="511:54"><name pos:start="511:13" pos:end="511:14">st</name> <operator pos:start="511:16" pos:end="511:16">=</operator> <call pos:start="511:18" pos:end="511:54"><name pos:start="511:18" pos:end="511:30">av_new_stream</name><argument_list pos:start="511:31" pos:end="511:54">(<argument pos:start="511:32" pos:end="511:32"><expr pos:start="511:32" pos:end="511:32"><name pos:start="511:32" pos:end="511:32">s</name></expr></argument>, <argument pos:start="511:35" pos:end="511:53"><expr pos:start="511:35" pos:end="511:53"><name pos:start="511:35" pos:end="511:53"><name pos:start="511:35" pos:end="511:39">track</name><operator pos:start="511:40" pos:end="511:41">-&gt;</operator><name pos:start="511:42" pos:end="511:53">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="513:13" pos:end="515:37"><if pos:start="513:13" pos:end="515:37">if <condition pos:start="513:16" pos:end="513:27">(<expr pos:start="513:17" pos:end="513:26"><name pos:start="513:17" pos:end="513:18">st</name> <operator pos:start="513:20" pos:end="513:21">==</operator> <name pos:start="513:23" pos:end="513:26">NULL</name></expr>)</condition><block type="pseudo" pos:start="515:17" pos:end="515:37"><block_content pos:start="515:17" pos:end="515:37">

                <return pos:start="515:17" pos:end="515:37">return <expr pos:start="515:24" pos:end="515:36"><name pos:start="515:24" pos:end="515:36">AVERROR_NOMEM</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="517:13" pos:end="517:74"><expr pos:start="517:13" pos:end="517:73"><call pos:start="517:13" pos:end="517:73"><name pos:start="517:13" pos:end="517:27">av_set_pts_info</name><argument_list pos:start="517:28" pos:end="517:73">(<argument pos:start="517:29" pos:end="517:30"><expr pos:start="517:29" pos:end="517:30"><name pos:start="517:29" pos:end="517:30">st</name></expr></argument>, <argument pos:start="517:33" pos:end="517:34"><expr pos:start="517:33" pos:end="517:34"><literal type="number" pos:start="517:33" pos:end="517:34">64</literal></expr></argument>, <argument pos:start="517:37" pos:end="517:56"><expr pos:start="517:37" pos:end="517:56"><name pos:start="517:37" pos:end="517:56"><name pos:start="517:37" pos:end="517:44">matroska</name><operator pos:start="517:45" pos:end="517:46">-&gt;</operator><name pos:start="517:47" pos:end="517:56">time_scale</name></name></expr></argument>, <argument pos:start="517:59" pos:end="517:72"><expr pos:start="517:59" pos:end="517:72"><literal type="number" pos:start="517:59" pos:end="517:62">1000</literal><operator pos:start="517:63" pos:end="517:63">*</operator><literal type="number" pos:start="517:64" pos:end="517:67">1000</literal><operator pos:start="517:68" pos:end="517:68">*</operator><literal type="number" pos:start="517:69" pos:end="517:72">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="517:76" pos:end="517:97">/* 64 bit pts in ns */</comment>



            <expr_stmt pos:start="521:13" pos:end="521:43"><expr pos:start="521:13" pos:end="521:42"><name pos:start="521:13" pos:end="521:31"><name pos:start="521:13" pos:end="521:14">st</name><operator pos:start="521:15" pos:end="521:16">-&gt;</operator><name pos:start="521:17" pos:end="521:21">codec</name><operator pos:start="521:22" pos:end="521:23">-&gt;</operator><name pos:start="521:24" pos:end="521:31">codec_id</name></name> <operator pos:start="521:33" pos:end="521:33">=</operator> <name pos:start="521:35" pos:end="521:42">codec_id</name></expr>;</expr_stmt>



            <if_stmt pos:start="525:13" pos:end="529:64"><if pos:start="525:13" pos:end="529:64">if <condition pos:start="525:16" pos:end="525:40">(<expr pos:start="525:17" pos:end="525:39"><name pos:start="525:17" pos:end="525:39"><name pos:start="525:17" pos:end="525:21">track</name><operator pos:start="525:22" pos:end="525:23">-&gt;</operator><name pos:start="525:24" pos:end="525:39">default_duration</name></name></expr>)</condition><block type="pseudo" pos:start="527:17" pos:end="529:64"><block_content pos:start="527:17" pos:end="529:64">

                <expr_stmt pos:start="527:17" pos:end="529:64"><expr pos:start="527:17" pos:end="529:63"><call pos:start="527:17" pos:end="529:63"><name pos:start="527:17" pos:end="527:25">av_reduce</name><argument_list pos:start="527:26" pos:end="529:63">(<argument pos:start="527:27" pos:end="527:51"><expr pos:start="527:27" pos:end="527:51"><operator pos:start="527:27" pos:end="527:27">&amp;</operator><name pos:start="527:28" pos:end="527:51"><name pos:start="527:28" pos:end="527:29">st</name><operator pos:start="527:30" pos:end="527:31">-&gt;</operator><name pos:start="527:32" pos:end="527:36">codec</name><operator pos:start="527:37" pos:end="527:38">-&gt;</operator><name pos:start="527:39" pos:end="527:47">time_base</name><operator pos:start="527:48" pos:end="527:48">.</operator><name pos:start="527:49" pos:end="527:51">num</name></name></expr></argument>, <argument pos:start="527:54" pos:end="527:78"><expr pos:start="527:54" pos:end="527:78"><operator pos:start="527:54" pos:end="527:54">&amp;</operator><name pos:start="527:55" pos:end="527:78"><name pos:start="527:55" pos:end="527:56">st</name><operator pos:start="527:57" pos:end="527:58">-&gt;</operator><name pos:start="527:59" pos:end="527:63">codec</name><operator pos:start="527:64" pos:end="527:65">-&gt;</operator><name pos:start="527:66" pos:end="527:74">time_base</name><operator pos:start="527:75" pos:end="527:75">.</operator><name pos:start="527:76" pos:end="527:78">den</name></name></expr></argument>,

                          <argument pos:start="529:27" pos:end="529:49"><expr pos:start="529:27" pos:end="529:49"><name pos:start="529:27" pos:end="529:49"><name pos:start="529:27" pos:end="529:31">track</name><operator pos:start="529:32" pos:end="529:33">-&gt;</operator><name pos:start="529:34" pos:end="529:49">default_duration</name></name></expr></argument>, <argument pos:start="529:52" pos:end="529:55"><expr pos:start="529:52" pos:end="529:55"><literal type="number" pos:start="529:52" pos:end="529:55">1000</literal></expr></argument>, <argument pos:start="529:58" pos:end="529:62"><expr pos:start="529:58" pos:end="529:62"><literal type="number" pos:start="529:58" pos:end="529:62">30000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="533:13" pos:end="553:13"><if pos:start="533:13" pos:end="539:13">if<condition pos:start="533:15" pos:end="533:25">(<expr pos:start="533:16" pos:end="533:24"><name pos:start="533:16" pos:end="533:24">extradata</name></expr>)</condition><block pos:start="533:26" pos:end="539:13">{<block_content pos:start="535:17" pos:end="537:59">

                <expr_stmt pos:start="535:17" pos:end="535:49"><expr pos:start="535:17" pos:end="535:48"><name pos:start="535:17" pos:end="535:36"><name pos:start="535:17" pos:end="535:18">st</name><operator pos:start="535:19" pos:end="535:20">-&gt;</operator><name pos:start="535:21" pos:end="535:25">codec</name><operator pos:start="535:26" pos:end="535:27">-&gt;</operator><name pos:start="535:28" pos:end="535:36">extradata</name></name> <operator pos:start="535:38" pos:end="535:38">=</operator> <name pos:start="535:40" pos:end="535:48">extradata</name></expr>;</expr_stmt>

                <expr_stmt pos:start="537:17" pos:end="537:59"><expr pos:start="537:17" pos:end="537:58"><name pos:start="537:17" pos:end="537:41"><name pos:start="537:17" pos:end="537:18">st</name><operator pos:start="537:19" pos:end="537:20">-&gt;</operator><name pos:start="537:21" pos:end="537:25">codec</name><operator pos:start="537:26" pos:end="537:27">-&gt;</operator><name pos:start="537:28" pos:end="537:41">extradata_size</name></name> <operator pos:start="537:43" pos:end="537:43">=</operator> <name pos:start="537:45" pos:end="537:58">extradata_size</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="539:15" pos:end="553:13">else if<condition pos:start="539:22" pos:end="539:70">(<expr pos:start="539:23" pos:end="539:69"><name pos:start="539:23" pos:end="539:39"><name pos:start="539:23" pos:end="539:27">track</name><operator pos:start="539:28" pos:end="539:29">-&gt;</operator><name pos:start="539:30" pos:end="539:39">codec_priv</name></name> <operator pos:start="539:41" pos:end="539:42">&amp;&amp;</operator> <name pos:start="539:44" pos:end="539:65"><name pos:start="539:44" pos:end="539:48">track</name><operator pos:start="539:49" pos:end="539:50">-&gt;</operator><name pos:start="539:51" pos:end="539:65">codec_priv_size</name></name> <operator pos:start="539:67" pos:end="539:67">&gt;</operator> <literal type="number" pos:start="539:69" pos:end="539:69">0</literal></expr>)</condition><block pos:start="539:71" pos:end="553:13">{<block_content pos:start="541:17" pos:end="551:47">

                <expr_stmt pos:start="541:17" pos:end="541:73"><expr pos:start="541:17" pos:end="541:72"><name pos:start="541:17" pos:end="541:36"><name pos:start="541:17" pos:end="541:18">st</name><operator pos:start="541:19" pos:end="541:20">-&gt;</operator><name pos:start="541:21" pos:end="541:25">codec</name><operator pos:start="541:26" pos:end="541:27">-&gt;</operator><name pos:start="541:28" pos:end="541:36">extradata</name></name> <operator pos:start="541:38" pos:end="541:38">=</operator> <call pos:start="541:40" pos:end="541:72"><name pos:start="541:40" pos:end="541:48">av_malloc</name><argument_list pos:start="541:49" pos:end="541:72">(<argument pos:start="541:50" pos:end="541:71"><expr pos:start="541:50" pos:end="541:71"><name pos:start="541:50" pos:end="541:71"><name pos:start="541:50" pos:end="541:54">track</name><operator pos:start="541:55" pos:end="541:56">-&gt;</operator><name pos:start="541:57" pos:end="541:71">codec_priv_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="543:17" pos:end="545:41"><if pos:start="543:17" pos:end="545:41">if<condition pos:start="543:19" pos:end="543:48">(<expr pos:start="543:20" pos:end="543:47"><name pos:start="543:20" pos:end="543:39"><name pos:start="543:20" pos:end="543:21">st</name><operator pos:start="543:22" pos:end="543:23">-&gt;</operator><name pos:start="543:24" pos:end="543:28">codec</name><operator pos:start="543:29" pos:end="543:30">-&gt;</operator><name pos:start="543:31" pos:end="543:39">extradata</name></name> <operator pos:start="543:41" pos:end="543:42">==</operator> <name pos:start="543:44" pos:end="543:47">NULL</name></expr>)</condition><block type="pseudo" pos:start="545:21" pos:end="545:41"><block_content pos:start="545:21" pos:end="545:41">

                    <return pos:start="545:21" pos:end="545:41">return <expr pos:start="545:28" pos:end="545:40"><name pos:start="545:28" pos:end="545:40">AVERROR_NOMEM</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="547:17" pos:end="547:67"><expr pos:start="547:17" pos:end="547:66"><name pos:start="547:17" pos:end="547:41"><name pos:start="547:17" pos:end="547:18">st</name><operator pos:start="547:19" pos:end="547:20">-&gt;</operator><name pos:start="547:21" pos:end="547:25">codec</name><operator pos:start="547:26" pos:end="547:27">-&gt;</operator><name pos:start="547:28" pos:end="547:41">extradata_size</name></name> <operator pos:start="547:43" pos:end="547:43">=</operator> <name pos:start="547:45" pos:end="547:66"><name pos:start="547:45" pos:end="547:49">track</name><operator pos:start="547:50" pos:end="547:51">-&gt;</operator><name pos:start="547:52" pos:end="547:66">codec_priv_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="551:47"><expr pos:start="549:17" pos:end="551:46"><call pos:start="549:17" pos:end="551:46"><name pos:start="549:17" pos:end="549:22">memcpy</name><argument_list pos:start="549:23" pos:end="551:46">(<argument pos:start="549:24" pos:end="549:43"><expr pos:start="549:24" pos:end="549:43"><name pos:start="549:24" pos:end="549:43"><name pos:start="549:24" pos:end="549:25">st</name><operator pos:start="549:26" pos:end="549:27">-&gt;</operator><name pos:start="549:28" pos:end="549:32">codec</name><operator pos:start="549:33" pos:end="549:34">-&gt;</operator><name pos:start="549:35" pos:end="549:43">extradata</name></name></expr></argument>,<argument pos:start="549:45" pos:end="549:78"><expr pos:start="549:45" pos:end="549:78"><name pos:start="549:45" pos:end="549:61"><name pos:start="549:45" pos:end="549:49">track</name><operator pos:start="549:50" pos:end="549:51">-&gt;</operator><name pos:start="549:52" pos:end="549:61">codec_priv</name></name><operator pos:start="549:62" pos:end="549:62">+</operator><name pos:start="549:63" pos:end="549:78">extradata_offset</name></expr></argument>,

                       <argument pos:start="551:24" pos:end="551:45"><expr pos:start="551:24" pos:end="551:45"><name pos:start="551:24" pos:end="551:45"><name pos:start="551:24" pos:end="551:28">track</name><operator pos:start="551:29" pos:end="551:30">-&gt;</operator><name pos:start="551:31" pos:end="551:45">codec_priv_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="557:13" pos:end="605:13"><if pos:start="557:13" pos:end="589:13">if <condition pos:start="557:16" pos:end="557:57">(<expr pos:start="557:17" pos:end="557:56"><name pos:start="557:17" pos:end="557:27"><name pos:start="557:17" pos:end="557:21">track</name><operator pos:start="557:22" pos:end="557:23">-&gt;</operator><name pos:start="557:24" pos:end="557:27">type</name></name> <operator pos:start="557:29" pos:end="557:30">==</operator> <name pos:start="557:32" pos:end="557:56">MATROSKA_TRACK_TYPE_VIDEO</name></expr>)</condition> <block pos:start="557:59" pos:end="589:13">{<block_content pos:start="559:17" pos:end="587:31">

                <decl_stmt pos:start="559:17" pos:end="559:77"><decl pos:start="559:17" pos:end="559:76"><type pos:start="559:17" pos:end="559:36"><name pos:start="559:17" pos:end="559:34">MatroskaVideoTrack</name> <modifier pos:start="559:36" pos:end="559:36">*</modifier></type><name pos:start="559:37" pos:end="559:46">videotrack</name> <init pos:start="559:48" pos:end="559:76">= <expr pos:start="559:50" pos:end="559:76"><operator pos:start="559:50" pos:end="559:50">(</operator><name pos:start="559:51" pos:end="559:68">MatroskaVideoTrack</name> <operator pos:start="559:70" pos:end="559:70">*</operator><operator pos:start="559:71" pos:end="559:71">)</operator><name pos:start="559:72" pos:end="559:76">track</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="563:17" pos:end="563:57"><expr pos:start="563:17" pos:end="563:56"><name pos:start="563:17" pos:end="563:37"><name pos:start="563:17" pos:end="563:18">st</name><operator pos:start="563:19" pos:end="563:20">-&gt;</operator><name pos:start="563:21" pos:end="563:25">codec</name><operator pos:start="563:26" pos:end="563:27">-&gt;</operator><name pos:start="563:28" pos:end="563:37">codec_type</name></name> <operator pos:start="563:39" pos:end="563:39">=</operator> <name pos:start="563:41" pos:end="563:56">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="565:17" pos:end="565:58"><expr pos:start="565:17" pos:end="565:57"><name pos:start="565:17" pos:end="565:36"><name pos:start="565:17" pos:end="565:18">st</name><operator pos:start="565:19" pos:end="565:20">-&gt;</operator><name pos:start="565:21" pos:end="565:25">codec</name><operator pos:start="565:26" pos:end="565:27">-&gt;</operator><name pos:start="565:28" pos:end="565:36">codec_tag</name></name> <operator pos:start="565:38" pos:end="565:38">=</operator> <name pos:start="565:40" pos:end="565:57"><name pos:start="565:40" pos:end="565:49">videotrack</name><operator pos:start="565:50" pos:end="565:51">-&gt;</operator><name pos:start="565:52" pos:end="565:57">fourcc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="567:17" pos:end="567:59"><expr pos:start="567:17" pos:end="567:58"><name pos:start="567:17" pos:end="567:32"><name pos:start="567:17" pos:end="567:18">st</name><operator pos:start="567:19" pos:end="567:20">-&gt;</operator><name pos:start="567:21" pos:end="567:25">codec</name><operator pos:start="567:26" pos:end="567:27">-&gt;</operator><name pos:start="567:28" pos:end="567:32">width</name></name> <operator pos:start="567:34" pos:end="567:34">=</operator> <name pos:start="567:36" pos:end="567:58"><name pos:start="567:36" pos:end="567:45">videotrack</name><operator pos:start="567:46" pos:end="567:47">-&gt;</operator><name pos:start="567:48" pos:end="567:58">pixel_width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="569:17" pos:end="569:61"><expr pos:start="569:17" pos:end="569:60"><name pos:start="569:17" pos:end="569:33"><name pos:start="569:17" pos:end="569:18">st</name><operator pos:start="569:19" pos:end="569:20">-&gt;</operator><name pos:start="569:21" pos:end="569:25">codec</name><operator pos:start="569:26" pos:end="569:27">-&gt;</operator><name pos:start="569:28" pos:end="569:33">height</name></name> <operator pos:start="569:35" pos:end="569:35">=</operator> <name pos:start="569:37" pos:end="569:60"><name pos:start="569:37" pos:end="569:46">videotrack</name><operator pos:start="569:47" pos:end="569:48">-&gt;</operator><name pos:start="569:49" pos:end="569:60">pixel_height</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="571:17" pos:end="573:71"><if pos:start="571:17" pos:end="573:71">if <condition pos:start="571:20" pos:end="571:51">(<expr pos:start="571:21" pos:end="571:50"><name pos:start="571:21" pos:end="571:45"><name pos:start="571:21" pos:end="571:30">videotrack</name><operator pos:start="571:31" pos:end="571:32">-&gt;</operator><name pos:start="571:33" pos:end="571:45">display_width</name></name> <operator pos:start="571:47" pos:end="571:48">==</operator> <literal type="number" pos:start="571:50" pos:end="571:50">0</literal></expr>)</condition><block type="pseudo" pos:start="573:21" pos:end="573:71"><block_content pos:start="573:21" pos:end="573:71">

                    <expr_stmt pos:start="573:21" pos:end="573:71"><expr pos:start="573:21" pos:end="573:70"><name pos:start="573:21" pos:end="573:45"><name pos:start="573:21" pos:end="573:30">videotrack</name><operator pos:start="573:31" pos:end="573:32">-&gt;</operator><name pos:start="573:33" pos:end="573:45">display_width</name></name><operator pos:start="573:46" pos:end="573:46">=</operator> <name pos:start="573:48" pos:end="573:70"><name pos:start="573:48" pos:end="573:57">videotrack</name><operator pos:start="573:58" pos:end="573:59">-&gt;</operator><name pos:start="573:60" pos:end="573:70">pixel_width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="575:17" pos:end="577:73"><if pos:start="575:17" pos:end="577:73">if <condition pos:start="575:20" pos:end="575:52">(<expr pos:start="575:21" pos:end="575:51"><name pos:start="575:21" pos:end="575:46"><name pos:start="575:21" pos:end="575:30">videotrack</name><operator pos:start="575:31" pos:end="575:32">-&gt;</operator><name pos:start="575:33" pos:end="575:46">display_height</name></name> <operator pos:start="575:48" pos:end="575:49">==</operator> <literal type="number" pos:start="575:51" pos:end="575:51">0</literal></expr>)</condition><block type="pseudo" pos:start="577:21" pos:end="577:73"><block_content pos:start="577:21" pos:end="577:73">

                    <expr_stmt pos:start="577:21" pos:end="577:73"><expr pos:start="577:21" pos:end="577:72"><name pos:start="577:21" pos:end="577:46"><name pos:start="577:21" pos:end="577:30">videotrack</name><operator pos:start="577:31" pos:end="577:32">-&gt;</operator><name pos:start="577:33" pos:end="577:46">display_height</name></name><operator pos:start="577:47" pos:end="577:47">=</operator> <name pos:start="577:49" pos:end="577:72"><name pos:start="577:49" pos:end="577:58">videotrack</name><operator pos:start="577:59" pos:end="577:60">-&gt;</operator><name pos:start="577:61" pos:end="577:72">pixel_height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="579:17" pos:end="587:31"><expr pos:start="579:17" pos:end="587:30"><call pos:start="579:17" pos:end="587:30"><name pos:start="579:17" pos:end="579:25">av_reduce</name><argument_list pos:start="579:26" pos:end="587:30">(<argument pos:start="579:27" pos:end="579:61"><expr pos:start="579:27" pos:end="579:61"><operator pos:start="579:27" pos:end="579:27">&amp;</operator><name pos:start="579:28" pos:end="579:61"><name pos:start="579:28" pos:end="579:29">st</name><operator pos:start="579:30" pos:end="579:31">-&gt;</operator><name pos:start="579:32" pos:end="579:36">codec</name><operator pos:start="579:37" pos:end="579:38">-&gt;</operator><name pos:start="579:39" pos:end="579:57">sample_aspect_ratio</name><operator pos:start="579:58" pos:end="579:58">.</operator><name pos:start="579:59" pos:end="579:61">num</name></name></expr></argument>,

                          <argument pos:start="581:27" pos:end="581:61"><expr pos:start="581:27" pos:end="581:61"><operator pos:start="581:27" pos:end="581:27">&amp;</operator><name pos:start="581:28" pos:end="581:61"><name pos:start="581:28" pos:end="581:29">st</name><operator pos:start="581:30" pos:end="581:31">-&gt;</operator><name pos:start="581:32" pos:end="581:36">codec</name><operator pos:start="581:37" pos:end="581:38">-&gt;</operator><name pos:start="581:39" pos:end="581:57">sample_aspect_ratio</name><operator pos:start="581:58" pos:end="581:58">.</operator><name pos:start="581:59" pos:end="581:61">den</name></name></expr></argument>,

                          <argument pos:start="583:27" pos:end="583:71"><expr pos:start="583:27" pos:end="583:71"><name pos:start="583:27" pos:end="583:43"><name pos:start="583:27" pos:end="583:28">st</name><operator pos:start="583:29" pos:end="583:30">-&gt;</operator><name pos:start="583:31" pos:end="583:35">codec</name><operator pos:start="583:36" pos:end="583:37">-&gt;</operator><name pos:start="583:38" pos:end="583:43">height</name></name> <operator pos:start="583:45" pos:end="583:45">*</operator> <name pos:start="583:47" pos:end="583:71"><name pos:start="583:47" pos:end="583:56">videotrack</name><operator pos:start="583:57" pos:end="583:58">-&gt;</operator><name pos:start="583:59" pos:end="583:71">display_width</name></name></expr></argument>,

                          <argument pos:start="585:27" pos:end="585:72"><expr pos:start="585:27" pos:end="585:72"><name pos:start="585:27" pos:end="585:43"><name pos:start="585:27" pos:end="585:28">st</name><operator pos:start="585:29" pos:end="585:30">-&gt;</operator><name pos:start="585:31" pos:end="585:35">codec</name><operator pos:start="585:36" pos:end="585:37">-&gt;</operator> <name pos:start="585:39" pos:end="585:43">width</name></name> <operator pos:start="585:45" pos:end="585:45">*</operator> <name pos:start="585:47" pos:end="585:72"><name pos:start="585:47" pos:end="585:56">videotrack</name><operator pos:start="585:57" pos:end="585:58">-&gt;</operator><name pos:start="585:59" pos:end="585:72">display_height</name></name></expr></argument>,

                          <argument pos:start="587:27" pos:end="587:29"><expr pos:start="587:27" pos:end="587:29"><literal type="number" pos:start="587:27" pos:end="587:29">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="589:15" pos:end="601:13">else if <condition pos:start="589:23" pos:end="589:64">(<expr pos:start="589:24" pos:end="589:63"><name pos:start="589:24" pos:end="589:34"><name pos:start="589:24" pos:end="589:28">track</name><operator pos:start="589:29" pos:end="589:30">-&gt;</operator><name pos:start="589:31" pos:end="589:34">type</name></name> <operator pos:start="589:36" pos:end="589:37">==</operator> <name pos:start="589:39" pos:end="589:63">MATROSKA_TRACK_TYPE_AUDIO</name></expr>)</condition> <block pos:start="589:66" pos:end="601:13">{<block_content pos:start="591:17" pos:end="599:59">

                <decl_stmt pos:start="591:17" pos:end="591:77"><decl pos:start="591:17" pos:end="591:76"><type pos:start="591:17" pos:end="591:36"><name pos:start="591:17" pos:end="591:34">MatroskaAudioTrack</name> <modifier pos:start="591:36" pos:end="591:36">*</modifier></type><name pos:start="591:37" pos:end="591:46">audiotrack</name> <init pos:start="591:48" pos:end="591:76">= <expr pos:start="591:50" pos:end="591:76"><operator pos:start="591:50" pos:end="591:50">(</operator><name pos:start="591:51" pos:end="591:68">MatroskaAudioTrack</name> <operator pos:start="591:70" pos:end="591:70">*</operator><operator pos:start="591:71" pos:end="591:71">)</operator><name pos:start="591:72" pos:end="591:76">track</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="595:17" pos:end="595:57"><expr pos:start="595:17" pos:end="595:56"><name pos:start="595:17" pos:end="595:37"><name pos:start="595:17" pos:end="595:18">st</name><operator pos:start="595:19" pos:end="595:20">-&gt;</operator><name pos:start="595:21" pos:end="595:25">codec</name><operator pos:start="595:26" pos:end="595:27">-&gt;</operator><name pos:start="595:28" pos:end="595:37">codec_type</name></name> <operator pos:start="595:39" pos:end="595:39">=</operator> <name pos:start="595:41" pos:end="595:56">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="597:17" pos:end="597:64"><expr pos:start="597:17" pos:end="597:63"><name pos:start="597:17" pos:end="597:38"><name pos:start="597:17" pos:end="597:18">st</name><operator pos:start="597:19" pos:end="597:20">-&gt;</operator><name pos:start="597:21" pos:end="597:25">codec</name><operator pos:start="597:26" pos:end="597:27">-&gt;</operator><name pos:start="597:28" pos:end="597:38">sample_rate</name></name> <operator pos:start="597:40" pos:end="597:40">=</operator> <name pos:start="597:42" pos:end="597:63"><name pos:start="597:42" pos:end="597:51">audiotrack</name><operator pos:start="597:52" pos:end="597:53">-&gt;</operator><name pos:start="597:54" pos:end="597:63">samplerate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="599:17" pos:end="599:59"><expr pos:start="599:17" pos:end="599:58"><name pos:start="599:17" pos:end="599:35"><name pos:start="599:17" pos:end="599:18">st</name><operator pos:start="599:19" pos:end="599:20">-&gt;</operator><name pos:start="599:21" pos:end="599:25">codec</name><operator pos:start="599:26" pos:end="599:27">-&gt;</operator><name pos:start="599:28" pos:end="599:35">channels</name></name> <operator pos:start="599:37" pos:end="599:37">=</operator> <name pos:start="599:39" pos:end="599:58"><name pos:start="599:39" pos:end="599:48">audiotrack</name><operator pos:start="599:49" pos:end="599:50">-&gt;</operator><name pos:start="599:51" pos:end="599:58">channels</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="601:15" pos:end="605:13">else if <condition pos:start="601:23" pos:end="601:67">(<expr pos:start="601:24" pos:end="601:66"><name pos:start="601:24" pos:end="601:34"><name pos:start="601:24" pos:end="601:28">track</name><operator pos:start="601:29" pos:end="601:30">-&gt;</operator><name pos:start="601:31" pos:end="601:34">type</name></name> <operator pos:start="601:36" pos:end="601:37">==</operator> <name pos:start="601:39" pos:end="601:66">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="601:69" pos:end="605:13">{<block_content pos:start="603:17" pos:end="603:60">

                <expr_stmt pos:start="603:17" pos:end="603:60"><expr pos:start="603:17" pos:end="603:59"><name pos:start="603:17" pos:end="603:37"><name pos:start="603:17" pos:end="603:18">st</name><operator pos:start="603:19" pos:end="603:20">-&gt;</operator><name pos:start="603:21" pos:end="603:25">codec</name><operator pos:start="603:26" pos:end="603:27">-&gt;</operator><name pos:start="603:28" pos:end="603:37">codec_type</name></name> <operator pos:start="603:39" pos:end="603:39">=</operator> <name pos:start="603:41" pos:end="603:59">CODEC_TYPE_SUBTITLE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="609:13" pos:end="609:67">/* What do we do with private data? E.g. for Vorbis. */</comment>

        </block_content>}</block></for>

        <expr_stmt pos:start="613:9" pos:end="613:16"><expr pos:start="613:9" pos:end="613:15"><name pos:start="613:9" pos:end="613:11">res</name> <operator pos:start="613:13" pos:end="613:13">=</operator> <literal type="number" pos:start="613:15" pos:end="613:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="619:5" pos:end="619:15">return <expr pos:start="619:12" pos:end="619:14"><name pos:start="619:12" pos:end="619:14">res</name></expr>;</return>

</block_content>}</block>
</unit>
