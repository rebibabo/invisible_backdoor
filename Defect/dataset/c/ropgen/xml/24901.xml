<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24901.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">get_packet_payload_size</name><parameter_list pos:start="1:35" pos:end="3:60">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">ctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:73"><decl pos:start="1:58" pos:end="1:73"><type pos:start="1:58" pos:end="1:73"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:73">stream_index</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:46"><decl pos:start="3:36" pos:end="3:46"><type pos:start="3:36" pos:end="3:46"><name pos:start="3:36" pos:end="3:42">int64_t</name></type> <name pos:start="3:44" pos:end="3:46">pts</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:59"><decl pos:start="3:49" pos:end="3:59"><type pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:55">int64_t</name></type> <name pos:start="3:57" pos:end="3:59">dts</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="7:5" pos:end="147:38">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegMuxContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:38">= <expr pos:start="7:25" pos:end="7:38"><name pos:start="7:25" pos:end="7:38"><name pos:start="7:25" pos:end="7:27">ctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">buf_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">StreamInfo</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:22">stream</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:10">stream</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:39"><name pos:start="15:14" pos:end="15:16">ctx</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:25">streams</name><index pos:start="15:26" pos:end="15:39">[<expr pos:start="15:27" pos:end="15:38"><name pos:start="15:27" pos:end="15:38">stream_index</name></expr>]</index></name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:50">priv_data</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:13">buf_index</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="63:5"><if pos:start="21:5" pos:end="63:5">if <condition pos:start="21:8" pos:end="21:56">(<expr pos:start="21:9" pos:end="21:55"><operator pos:start="21:9" pos:end="21:9">(</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:26"><name pos:start="21:11" pos:end="21:11">s</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:26">packet_number</name></name> <operator pos:start="21:28" pos:end="21:28">%</operator> <name pos:start="21:30" pos:end="21:48"><name pos:start="21:30" pos:end="21:30">s</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:48">pack_header_freq</name></name><operator pos:start="21:49" pos:end="21:49">)</operator> <operator pos:start="21:51" pos:end="21:52">==</operator> <literal type="number" pos:start="21:54" pos:end="21:54">0</literal><operator pos:start="21:55" pos:end="21:55">)</operator></expr>)</condition> <block pos:start="21:58" pos:end="63:5">{<block_content pos:start="25:9" pos:end="61:9">

        <comment type="block" pos:start="23:9" pos:end="23:30">/* pack header size */</comment>

        <if_stmt pos:start="25:9" pos:end="31:28"><if pos:start="25:9" pos:end="27:28">if <condition pos:start="25:12" pos:end="25:24">(<expr pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:23">is_mpeg2</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:28"><block_content pos:start="27:13" pos:end="27:28"> 

            <expr_stmt pos:start="27:13" pos:end="27:28"><expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:21">buf_index</name> <operator pos:start="27:23" pos:end="27:24">+=</operator> <literal type="number" pos:start="27:26" pos:end="27:27">14</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="29:9" pos:end="31:28">else<block type="pseudo" pos:start="31:13" pos:end="31:28"><block_content pos:start="31:13" pos:end="31:28">

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:21">buf_index</name> <operator pos:start="31:23" pos:end="31:24">+=</operator> <literal type="number" pos:start="31:26" pos:end="31:27">12</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        

        <if_stmt pos:start="35:9" pos:end="61:9"><if pos:start="35:9" pos:end="55:9">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:21">is_vcd</name></name></expr>)</condition> <block pos:start="35:24" pos:end="55:9">{<block_content pos:start="45:13" pos:end="51:32">

            <comment type="block" pos:start="37:13" pos:end="41:66">/* there is exactly one system header for each stream in a VCD MPEG,

               One in the very first video packet and one in the very first

               audio packet (see VCD standard p. IV-7 and IV-8).*/</comment>

            

            <if_stmt pos:start="45:13" pos:end="51:32"><if pos:start="45:13" pos:end="51:32">if <condition pos:start="45:16" pos:end="45:41">(<expr pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:22">stream</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:37">packet_number</name></name><operator pos:start="45:38" pos:end="45:39">==</operator><literal type="number" pos:start="45:40" pos:end="45:40">0</literal></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:32"><block_content pos:start="51:17" pos:end="51:32">

                <comment type="block" pos:start="47:17" pos:end="49:50">/* The system headers refer only to the stream they occur in,

                   so they have a constant size.*/</comment>

                <expr_stmt pos:start="51:17" pos:end="51:32"><expr pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:25">buf_index</name> <operator pos:start="51:27" pos:end="51:28">+=</operator> <literal type="number" pos:start="51:30" pos:end="51:31">15</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        </block_content>}</block></if> <else pos:start="55:11" pos:end="61:9">else <block pos:start="55:16" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:51">            

            <if_stmt pos:start="57:13" pos:end="59:51"><if pos:start="57:13" pos:end="59:51">if <condition pos:start="57:16" pos:end="57:64">(<expr pos:start="57:17" pos:end="57:63"><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:33"><name pos:start="57:18" pos:end="57:18">s</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:33">packet_number</name></name> <operator pos:start="57:35" pos:end="57:35">%</operator> <name pos:start="57:37" pos:end="57:57"><name pos:start="57:37" pos:end="57:37">s</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:57">system_header_freq</name></name><operator pos:start="57:58" pos:end="57:58">)</operator> <operator pos:start="57:60" pos:end="57:61">==</operator> <literal type="number" pos:start="57:63" pos:end="57:63">0</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:51"><block_content pos:start="59:17" pos:end="59:51">

                <expr_stmt pos:start="59:17" pos:end="59:51"><expr pos:start="59:17" pos:end="59:50"><name pos:start="59:17" pos:end="59:25">buf_index</name> <operator pos:start="59:27" pos:end="59:28">+=</operator> <name pos:start="59:30" pos:end="59:50"><name pos:start="59:30" pos:end="59:30">s</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:50">system_header_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="145:5"><if pos:start="67:5" pos:end="75:48">if <condition pos:start="67:8" pos:end="67:46">(<expr pos:start="67:9" pos:end="67:45"><name pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:17">is_vcd</name></name> <operator pos:start="67:19" pos:end="67:20">&amp;&amp;</operator> <name pos:start="67:22" pos:end="67:42"><name pos:start="67:22" pos:end="67:27">stream</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:42">packet_number</name></name><operator pos:start="67:43" pos:end="67:44">==</operator><literal type="number" pos:start="67:45" pos:end="67:45">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:48"><block_content pos:start="75:9" pos:end="75:48">

        <comment type="block" pos:start="69:9" pos:end="73:72">/* the first pack of each stream contains only the pack header,

           the system header and some padding (see VCD standard p. IV-6) 

           Add the padding size, so that the actual payload becomes 0.*/</comment>

        <expr_stmt pos:start="75:9" pos:end="75:48"><expr pos:start="75:9" pos:end="75:47"><name pos:start="75:9" pos:end="75:17">buf_index</name> <operator pos:start="75:19" pos:end="75:20">+=</operator> <name pos:start="75:22" pos:end="75:35"><name pos:start="75:22" pos:end="75:22">s</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:35">packet_size</name></name> <operator pos:start="75:37" pos:end="75:37">-</operator> <name pos:start="75:39" pos:end="75:47">buf_index</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="77:5" pos:end="145:5">else <block pos:start="77:10" pos:end="145:5">{<block_content pos:start="81:9" pos:end="143:26">

        <comment type="block" pos:start="79:9" pos:end="79:32">/* packet header size */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:17">buf_index</name> <operator pos:start="81:19" pos:end="81:20">+=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">6</literal></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:27"><if pos:start="83:9" pos:end="85:27">if <condition pos:start="83:12" pos:end="83:24">(<expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:23">is_mpeg2</name></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:27"><block_content pos:start="85:13" pos:end="85:27">

            <expr_stmt pos:start="85:13" pos:end="85:27"><expr pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:21">buf_index</name> <operator pos:start="85:23" pos:end="85:24">+=</operator> <literal type="number" pos:start="85:26" pos:end="85:26">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="87:9" pos:end="105:9"><if pos:start="87:9" pos:end="99:9">if <condition pos:start="87:12" pos:end="87:34">(<expr pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:15">pts</name> <operator pos:start="87:17" pos:end="87:18">!=</operator> <name pos:start="87:20" pos:end="87:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="87:36" pos:end="99:9">{<block_content pos:start="89:13" pos:end="95:31">

            <if_stmt pos:start="89:13" pos:end="95:31"><if pos:start="89:13" pos:end="91:35">if <condition pos:start="89:16" pos:end="89:27">(<expr pos:start="89:17" pos:end="89:26"><name pos:start="89:17" pos:end="89:19">dts</name> <operator pos:start="89:21" pos:end="89:22">!=</operator> <name pos:start="89:24" pos:end="89:26">pts</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:35"><block_content pos:start="91:17" pos:end="91:35">

                <expr_stmt pos:start="91:17" pos:end="91:35"><expr pos:start="91:17" pos:end="91:34"><name pos:start="91:17" pos:end="91:25">buf_index</name> <operator pos:start="91:27" pos:end="91:28">+=</operator> <literal type="number" pos:start="91:30" pos:end="91:32">5</literal> <operator pos:start="91:32" pos:end="91:32">+</operator> <literal type="number" pos:start="91:34" pos:end="91:34">5</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="93:13" pos:end="95:31">else<block type="pseudo" pos:start="95:17" pos:end="95:31"><block_content pos:start="95:17" pos:end="95:31">

                <expr_stmt pos:start="95:17" pos:end="95:31"><expr pos:start="95:17" pos:end="95:30"><name pos:start="95:17" pos:end="95:25">buf_index</name> <operator pos:start="95:27" pos:end="95:28">+=</operator> <literal type="number" pos:start="95:30" pos:end="95:30">5</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        </block_content>}</block></if> <else pos:start="99:11" pos:end="105:9">else <block pos:start="99:16" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:28">

            <if_stmt pos:start="101:13" pos:end="103:28"><if pos:start="101:13" pos:end="103:28">if <condition pos:start="101:16" pos:end="101:29">(<expr pos:start="101:17" pos:end="101:28"><operator pos:start="101:17" pos:end="101:17">!</operator><name pos:start="101:18" pos:end="101:28"><name pos:start="101:18" pos:end="101:18">s</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:28">is_mpeg2</name></name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:28"><block_content pos:start="103:17" pos:end="103:28">

                <expr_stmt pos:start="103:17" pos:end="103:28"><expr pos:start="103:17" pos:end="103:27"><name pos:start="103:17" pos:end="103:25">buf_index</name><operator pos:start="103:26" pos:end="103:27">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    

        <if_stmt pos:start="109:9" pos:end="133:9"><if pos:start="109:9" pos:end="133:9">if <condition pos:start="109:12" pos:end="109:30">(<expr pos:start="109:13" pos:end="109:29"><name pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:18">stream</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:22">id</name></name> <operator pos:start="109:24" pos:end="109:24">&lt;</operator> <literal type="number" pos:start="109:26" pos:end="109:29">0xc0</literal></expr>)</condition> <block pos:start="109:32" pos:end="133:9">{<block_content pos:start="113:13" pos:end="131:13">

            <comment type="block" pos:start="111:13" pos:end="111:46">/* AC3/LPCM private data header */</comment>

            <expr_stmt pos:start="113:13" pos:end="113:27"><expr pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:21">buf_index</name> <operator pos:start="113:23" pos:end="113:24">+=</operator> <literal type="number" pos:start="113:26" pos:end="113:26">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="131:13"><if pos:start="115:13" pos:end="131:13">if <condition pos:start="115:16" pos:end="115:35">(<expr pos:start="115:17" pos:end="115:34"><name pos:start="115:17" pos:end="115:26"><name pos:start="115:17" pos:end="115:22">stream</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:26">id</name></name> <operator pos:start="115:28" pos:end="115:29">&gt;=</operator> <literal type="number" pos:start="115:31" pos:end="115:34">0xa0</literal></expr>)</condition> <block pos:start="115:37" pos:end="131:13">{<block_content pos:start="117:17" pos:end="129:58">

                <decl_stmt pos:start="117:17" pos:end="117:22"><decl pos:start="117:17" pos:end="117:21"><type pos:start="117:17" pos:end="117:19"><name pos:start="117:17" pos:end="117:19">int</name></type> <name pos:start="117:21" pos:end="117:21">n</name></decl>;</decl_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:31"><expr pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:25">buf_index</name> <operator pos:start="119:27" pos:end="119:28">+=</operator> <literal type="number" pos:start="119:30" pos:end="119:30">3</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="121:17" pos:end="123:34">/* NOTE: we round the payload size to an integer number of

                   LPCM samples */</comment>

                <expr_stmt pos:start="125:17" pos:end="125:70"><expr pos:start="125:17" pos:end="125:69"><name pos:start="125:17" pos:end="125:17">n</name> <operator pos:start="125:19" pos:end="125:19">=</operator> <operator pos:start="125:21" pos:end="125:21">(</operator><name pos:start="125:22" pos:end="125:35"><name pos:start="125:22" pos:end="125:22">s</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:35">packet_size</name></name> <operator pos:start="125:37" pos:end="125:37">-</operator> <name pos:start="125:39" pos:end="125:47">buf_index</name><operator pos:start="125:48" pos:end="125:48">)</operator> <operator pos:start="125:50" pos:end="125:50">%</operator> <name pos:start="125:52" pos:end="125:69"><name pos:start="125:52" pos:end="125:57">stream</name><operator pos:start="125:58" pos:end="125:59">-&gt;</operator><name pos:start="125:60" pos:end="125:69">lpcm_align</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="129:58"><if pos:start="127:17" pos:end="129:58">if <condition pos:start="127:20" pos:end="127:22">(<expr pos:start="127:21" pos:end="127:21"><name pos:start="127:21" pos:end="127:21">n</name></expr>)</condition><block type="pseudo" pos:start="129:21" pos:end="129:58"><block_content pos:start="129:21" pos:end="129:58">

                    <expr_stmt pos:start="129:21" pos:end="129:58"><expr pos:start="129:21" pos:end="129:57"><name pos:start="129:21" pos:end="129:29">buf_index</name> <operator pos:start="129:31" pos:end="129:32">+=</operator> <operator pos:start="129:34" pos:end="129:34">(</operator><name pos:start="129:35" pos:end="129:52"><name pos:start="129:35" pos:end="129:40">stream</name><operator pos:start="129:41" pos:end="129:42">-&gt;</operator><name pos:start="129:43" pos:end="129:52">lpcm_align</name></name> <operator pos:start="129:54" pos:end="129:54">-</operator> <name pos:start="129:56" pos:end="129:56">n</name><operator pos:start="129:57" pos:end="129:57">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="137:9" pos:end="143:26"><if pos:start="137:9" pos:end="143:26">if <condition pos:start="137:12" pos:end="137:48">(<expr pos:start="137:13" pos:end="137:47"><name pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:21">is_vcd</name></name> <operator pos:start="137:23" pos:end="137:24">&amp;&amp;</operator> <name pos:start="137:26" pos:end="137:35"><name pos:start="137:26" pos:end="137:31">stream</name><operator pos:start="137:32" pos:end="137:33">-&gt;</operator><name pos:start="137:34" pos:end="137:35">id</name></name> <operator pos:start="137:37" pos:end="137:38">==</operator> <name pos:start="137:40" pos:end="137:47">AUDIO_ID</name></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:26"><block_content pos:start="143:13" pos:end="143:26">

            <comment type="block" pos:start="139:13" pos:end="141:58">/* The VCD standard demands that 20 zero bytes follow

               each audio packet (see standard p. IV-8).*/</comment>

            <expr_stmt pos:start="143:13" pos:end="143:26"><expr pos:start="143:13" pos:end="143:25"><name pos:start="143:13" pos:end="143:21">buf_index</name><operator pos:start="143:22" pos:end="143:23">+=</operator><literal type="number" pos:start="143:24" pos:end="143:25">20</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="147:5" pos:end="147:38">return <expr pos:start="147:12" pos:end="147:37"><name pos:start="147:12" pos:end="147:25"><name pos:start="147:12" pos:end="147:12">s</name><operator pos:start="147:13" pos:end="147:14">-&gt;</operator><name pos:start="147:15" pos:end="147:25">packet_size</name></name> <operator pos:start="147:27" pos:end="147:27">-</operator> <name pos:start="147:29" pos:end="147:37">buf_index</name></expr>;</return> 

</block_content>}</block></function>
</unit>
