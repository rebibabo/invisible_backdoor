<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19043.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">do_divdo</name> <parameter_list pos:start="1:15" pos:end="1:20">(<parameter pos:start="1:16" pos:end="1:19"><decl pos:start="1:16" pos:end="1:19"><type pos:start="1:16" pos:end="1:19"><name pos:start="1:16" pos:end="1:19">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:5">

    <if_stmt pos:start="5:5" pos:end="21:5"><if pos:start="5:5" pos:end="13:5">if <condition pos:start="5:8" pos:end="7:36">(<expr pos:start="5:9" pos:end="7:35"><call pos:start="5:9" pos:end="7:35"><name pos:start="5:9" pos:end="5:14">likely</name><argument_list pos:start="5:15" pos:end="7:35">(<argument pos:start="5:16" pos:end="7:34"><expr pos:start="5:16" pos:end="7:34"><operator pos:start="5:16" pos:end="5:16">!</operator><operator pos:start="5:17" pos:end="5:17">(</operator><operator pos:start="5:18" pos:end="5:18">(</operator><operator pos:start="5:19" pos:end="5:19">(</operator><name pos:start="5:20" pos:end="5:26">int64_t</name><operator pos:start="5:27" pos:end="5:27">)</operator><name pos:start="5:28" pos:end="5:29">T0</name> <operator pos:start="5:31" pos:end="5:32">==</operator> <name pos:start="5:34" pos:end="5:42">INT64_MIN</name> <operator pos:start="5:44" pos:end="5:45">&amp;&amp;</operator> <operator pos:start="5:47" pos:end="5:47">(</operator><name pos:start="5:48" pos:end="5:54">int64_t</name><operator pos:start="5:55" pos:end="5:55">)</operator><name pos:start="5:56" pos:end="5:57">T1</name> <operator pos:start="5:59" pos:end="5:60">==</operator> <operator pos:start="5:62" pos:end="5:62">-</operator><literal type="number" pos:start="5:63" pos:end="5:66">1ULL</literal><operator pos:start="5:67" pos:end="5:67">)</operator> <operator pos:start="5:69" pos:end="5:70">||</operator>

                 <operator pos:start="7:18" pos:end="7:18">(</operator><name pos:start="7:19" pos:end="7:25">int64_t</name><operator pos:start="7:26" pos:end="7:26">)</operator><name pos:start="7:27" pos:end="7:28">T1</name> <operator pos:start="7:30" pos:end="7:31">==</operator> <literal type="number" pos:start="7:33" pos:end="7:33">0</literal><operator pos:start="7:34" pos:end="7:34">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:38" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:39">

        <expr_stmt pos:start="9:9" pos:end="9:19"><expr pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:14">xer_ov</name> <operator pos:start="9:16" pos:end="9:16">=</operator> <literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:39"><expr pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:10">T0</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <operator pos:start="11:14" pos:end="11:14">(</operator><name pos:start="11:15" pos:end="11:21">int64_t</name><operator pos:start="11:22" pos:end="11:22">)</operator><name pos:start="11:23" pos:end="11:24">T0</name> <operator pos:start="11:26" pos:end="11:26">/</operator> <operator pos:start="11:28" pos:end="11:28">(</operator><name pos:start="11:29" pos:end="11:35">int64_t</name><operator pos:start="11:36" pos:end="11:36">)</operator><name pos:start="11:37" pos:end="11:38">T1</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="21:5">else <block pos:start="13:12" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:44">

        <expr_stmt pos:start="15:9" pos:end="15:19"><expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:14">xer_so</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:14">xer_ov</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:10">T0</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <operator pos:start="19:14" pos:end="19:14">(</operator><operator pos:start="19:15" pos:end="19:15">-</operator><literal type="number" pos:start="19:16" pos:end="19:19">1ULL</literal><operator pos:start="19:20" pos:end="19:20">)</operator> <operator pos:start="19:22" pos:end="19:22">*</operator> <operator pos:start="19:24" pos:end="19:24">(</operator><operator pos:start="19:25" pos:end="19:25">(</operator><name pos:start="19:26" pos:end="19:33">uint64_t</name><operator pos:start="19:34" pos:end="19:34">)</operator><name pos:start="19:35" pos:end="19:36">T0</name> <operator pos:start="19:38" pos:end="19:39">&gt;&gt;</operator> <literal type="number" pos:start="19:41" pos:end="19:42">63</literal><operator pos:start="19:43" pos:end="19:43">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
