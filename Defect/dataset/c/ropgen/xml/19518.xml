<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19518.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">qdev_prop_cpy</name><parameter_list pos:start="1:26" pos:end="1:71">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:37">DeviceState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><name pos:start="1:45" pos:end="1:52">Property</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">props</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:70"><decl pos:start="1:62" pos:end="1:70"><type pos:start="1:62" pos:end="1:70"><name pos:start="1:62" pos:end="1:65">void</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">src</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:5">

    <if_stmt pos:start="5:5" pos:end="17:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:43">(<expr pos:start="5:9" pos:end="5:42"><name pos:start="5:9" pos:end="5:25"><name pos:start="5:9" pos:end="5:13">props</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:19">info</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:25">type</name></name> <operator pos:start="5:27" pos:end="5:28">==</operator> <name pos:start="5:30" pos:end="5:42">PROP_TYPE_BIT</name></expr>)</condition> <block pos:start="5:45" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:42">

        <decl_stmt pos:start="7:9" pos:end="7:27"><decl pos:start="7:9" pos:end="7:26"><type pos:start="7:9" pos:end="7:14"><name pos:start="7:9" pos:end="7:12">bool</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:20">defval</name> <init pos:start="7:22" pos:end="7:26">= <expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">src</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:42"><expr pos:start="9:9" pos:end="9:41"><call pos:start="9:9" pos:end="9:41"><name pos:start="9:9" pos:end="9:20">bit_prop_set</name><argument_list pos:start="9:21" pos:end="9:41">(<argument pos:start="9:22" pos:end="9:24"><expr pos:start="9:22" pos:end="9:24"><name pos:start="9:22" pos:end="9:24">dev</name></expr></argument>, <argument pos:start="9:27" pos:end="9:31"><expr pos:start="9:27" pos:end="9:31"><name pos:start="9:27" pos:end="9:31">props</name></expr></argument>, <argument pos:start="9:34" pos:end="9:40"><expr pos:start="9:34" pos:end="9:40"><operator pos:start="9:34" pos:end="9:34">*</operator><name pos:start="9:35" pos:end="9:40">defval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="11:7" pos:end="17:5">else <block pos:start="11:12" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:44">

        <decl_stmt pos:start="13:9" pos:end="13:50"><decl pos:start="13:9" pos:end="13:49"><type pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:12">char</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">dst</name> <init pos:start="13:19" pos:end="13:49">= <expr pos:start="13:21" pos:end="13:49"><call pos:start="13:21" pos:end="13:49"><name pos:start="13:21" pos:end="13:37">qdev_get_prop_ptr</name><argument_list pos:start="13:38" pos:end="13:49">(<argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">dev</name></expr></argument>, <argument pos:start="13:44" pos:end="13:48"><expr pos:start="13:44" pos:end="13:48"><name pos:start="13:44" pos:end="13:48">props</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:44"><expr pos:start="15:9" pos:end="15:43"><call pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:14">memcpy</name><argument_list pos:start="15:15" pos:end="15:43">(<argument pos:start="15:16" pos:end="15:18"><expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">dst</name></expr></argument>, <argument pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:23">src</name></expr></argument>, <argument pos:start="15:26" pos:end="15:42"><expr pos:start="15:26" pos:end="15:42"><name pos:start="15:26" pos:end="15:42"><name pos:start="15:26" pos:end="15:30">props</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:36">info</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:42">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
