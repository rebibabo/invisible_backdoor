<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26356.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">vfio_msix_enable</name><parameter_list pos:start="1:29" pos:end="1:49">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:42">VFIOPCIDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:48">

    <expr_stmt pos:start="5:5" pos:end="5:34"><expr pos:start="5:5" pos:end="5:33"><call pos:start="5:5" pos:end="5:33"><name pos:start="5:5" pos:end="5:27">vfio_disable_interrupts</name><argument_list pos:start="5:28" pos:end="5:33">(<argument pos:start="5:29" pos:end="5:32"><expr pos:start="5:29" pos:end="5:32"><name pos:start="5:29" pos:end="5:32">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:79"><expr pos:start="9:5" pos:end="9:78"><name pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:8">vdev</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:21">msi_vectors</name></name> <operator pos:start="9:23" pos:end="9:23">=</operator> <call pos:start="9:25" pos:end="9:78"><name pos:start="9:25" pos:end="9:33">g_malloc0</name><argument_list pos:start="9:34" pos:end="9:78">(<argument pos:start="9:35" pos:end="9:77"><expr pos:start="9:35" pos:end="9:77"><name pos:start="9:35" pos:end="9:53"><name pos:start="9:35" pos:end="9:38">vdev</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:44">msix</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:53">entries</name></name> <operator pos:start="9:55" pos:end="9:55">*</operator> <sizeof pos:start="9:57" pos:end="9:77">sizeof<argument_list pos:start="9:63" pos:end="9:77">(<argument pos:start="9:64" pos:end="9:76"><expr pos:start="9:64" pos:end="9:76"><name pos:start="9:64" pos:end="9:76">VFIOMSIVector</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:8">vdev</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:19">interrupt</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:35">VFIO_INT_MSIX</name></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="41:7">/*

     * Some communication channels between VF &amp; PF or PF &amp; fw rely on the

     * physical state of the device and expect that enabling MSI-X from the

     * guest enables the same on the host.  When our guest is Linux, the

     * guest driver call to pci_enable_msix() sets the enabling bit in the

     * MSI-X capability, but leaves the vector table masked.  We therefore

     * can't rely on a vector_use callback (from request_irq() in the guest)

     * to switch the physical device into MSI-X mode because that may come a

     * long time after pci_enable_msix().  This code enables vector 0 with

     * triggering to userspace, then immediately release the vector, leaving

     * the physical device with no vectors enabled, but MSI-X enabled, just

     * like the guest view.

     */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:56"><expr pos:start="43:5" pos:end="43:55"><call pos:start="43:5" pos:end="43:55"><name pos:start="43:5" pos:end="43:27">vfio_msix_vector_do_use</name><argument_list pos:start="43:28" pos:end="43:55">(<argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><operator pos:start="43:29" pos:end="43:29">&amp;</operator><name pos:start="43:30" pos:end="43:39"><name pos:start="43:30" pos:end="43:33">vdev</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:39">pdev</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:42"><expr pos:start="43:42" pos:end="43:42"><literal type="number" pos:start="43:42" pos:end="43:42">0</literal></expr></argument>, <argument pos:start="43:45" pos:end="43:48"><expr pos:start="43:45" pos:end="43:48"><name pos:start="43:45" pos:end="43:48">NULL</name></expr></argument>, <argument pos:start="43:51" pos:end="43:54"><expr pos:start="43:51" pos:end="43:54"><name pos:start="43:51" pos:end="43:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><call pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:28">vfio_msix_vector_release</name><argument_list pos:start="45:29" pos:end="45:44">(<argument pos:start="45:30" pos:end="45:40"><expr pos:start="45:30" pos:end="45:40"><operator pos:start="45:30" pos:end="45:30">&amp;</operator><name pos:start="45:31" pos:end="45:40"><name pos:start="45:31" pos:end="45:34">vdev</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:40">pdev</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="51:66">(<expr pos:start="49:9" pos:end="51:65"><call pos:start="49:9" pos:end="51:65"><name pos:start="49:9" pos:end="49:33">msix_set_vector_notifiers</name><argument_list pos:start="49:34" pos:end="51:65">(<argument pos:start="49:35" pos:end="49:45"><expr pos:start="49:35" pos:end="49:45"><operator pos:start="49:35" pos:end="49:35">&amp;</operator><name pos:start="49:36" pos:end="49:45"><name pos:start="49:36" pos:end="49:39">vdev</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:45">pdev</name></name></expr></argument>, <argument pos:start="49:48" pos:end="49:67"><expr pos:start="49:48" pos:end="49:67"><name pos:start="49:48" pos:end="49:67">vfio_msix_vector_use</name></expr></argument>,

                                  <argument pos:start="51:35" pos:end="51:58"><expr pos:start="51:35" pos:end="51:58"><name pos:start="51:35" pos:end="51:58">vfio_msix_vector_release</name></expr></argument>, <argument pos:start="51:61" pos:end="51:64"><expr pos:start="51:61" pos:end="51:64"><name pos:start="51:61" pos:end="51:64">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:68" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:63">

        <expr_stmt pos:start="53:9" pos:end="53:63"><expr pos:start="53:9" pos:end="53:62"><call pos:start="53:9" pos:end="53:62"><name pos:start="53:9" pos:end="53:20">error_report</name><argument_list pos:start="53:21" pos:end="53:62">(<argument pos:start="53:22" pos:end="53:61"><expr pos:start="53:22" pos:end="53:61"><literal type="string" pos:start="53:22" pos:end="53:61">"vfio: msix_set_vector_notifiers failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:48"><expr pos:start="59:5" pos:end="59:47"><call pos:start="59:5" pos:end="59:47"><name pos:start="59:5" pos:end="59:26">trace_vfio_msix_enable</name><argument_list pos:start="59:27" pos:end="59:47">(<argument pos:start="59:28" pos:end="59:46"><expr pos:start="59:28" pos:end="59:46"><name pos:start="59:28" pos:end="59:46"><name pos:start="59:28" pos:end="59:31">vdev</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:41">vbasedev</name><operator pos:start="59:42" pos:end="59:42">.</operator><name pos:start="59:43" pos:end="59:46">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
