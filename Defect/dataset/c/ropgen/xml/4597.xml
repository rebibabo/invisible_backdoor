<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4597.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">enable_write_target</name><parameter_list pos:start="1:31" pos:end="1:66">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BDRVVVFATState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:26">bs</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">BlockDriver</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:26">bdrv_qcow</name> <init pos:start="7:28" pos:end="7:33">= <expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:29">backing</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">QemuOpts</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">opts</name> <init pos:start="11:20" pos:end="11:25">= <expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:49"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">size</name> <init pos:start="15:14" pos:end="15:49">= <expr pos:start="15:16" pos:end="15:49"><call pos:start="15:16" pos:end="15:49"><name pos:start="15:16" pos:end="15:29">sector2cluster</name><argument_list pos:start="15:30" pos:end="15:49">(<argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">s</name></expr></argument>, <argument pos:start="15:34" pos:end="15:48"><expr pos:start="15:34" pos:end="15:48"><name pos:start="15:34" pos:end="15:48"><name pos:start="15:34" pos:end="15:34">s</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:48">sector_count</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">QDict</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:18">options</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:20">used_clusters</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <call pos:start="21:24" pos:end="21:38"><name pos:start="21:24" pos:end="21:29">calloc</name><argument_list pos:start="21:30" pos:end="21:38">(<argument pos:start="21:31" pos:end="21:34"><expr pos:start="21:31" pos:end="21:34"><name pos:start="21:31" pos:end="21:34">size</name></expr></argument>, <argument pos:start="21:37" pos:end="21:37"><expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><call pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:14">array_init</name><argument_list pos:start="25:15" pos:end="25:47">(<argument pos:start="25:16" pos:end="25:28"><expr pos:start="25:16" pos:end="25:28"><operator pos:start="25:16" pos:end="25:16">&amp;</operator><operator pos:start="25:17" pos:end="25:17">(</operator><name pos:start="25:18" pos:end="25:27"><name pos:start="25:18" pos:end="25:18">s</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:27">commits</name></name><operator pos:start="25:28" pos:end="25:28">)</operator></expr></argument>, <argument pos:start="25:31" pos:end="25:46"><expr pos:start="25:31" pos:end="25:46"><sizeof pos:start="25:31" pos:end="25:46">sizeof<argument_list pos:start="25:37" pos:end="25:46">(<argument pos:start="25:38" pos:end="25:45"><expr pos:start="25:38" pos:end="25:45"><name pos:start="25:38" pos:end="25:45">commit_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:20">qcow_filename</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:41"><name pos:start="29:24" pos:end="29:31">g_malloc</name><argument_list pos:start="29:32" pos:end="29:41">(<argument pos:start="29:33" pos:end="29:40"><expr pos:start="29:33" pos:end="29:40"><name pos:start="29:33" pos:end="29:40">PATH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:55"><expr pos:start="31:5" pos:end="31:54"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:54"><name pos:start="31:11" pos:end="31:26">get_tmp_filename</name><argument_list pos:start="31:27" pos:end="31:54">(<argument pos:start="31:28" pos:end="31:43"><expr pos:start="31:28" pos:end="31:43"><name pos:start="31:28" pos:end="31:43"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:43">qcow_filename</name></name></expr></argument>, <argument pos:start="31:46" pos:end="31:53"><expr pos:start="31:46" pos:end="31:53"><name pos:start="31:46" pos:end="31:53">PATH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:68"><expr pos:start="35:9" pos:end="35:67"><call pos:start="35:9" pos:end="35:67"><name pos:start="35:9" pos:end="35:24">error_setg_errno</name><argument_list pos:start="35:25" pos:end="35:67">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><name pos:start="35:26" pos:end="35:29">errp</name></expr></argument>, <argument pos:start="35:32" pos:end="35:35"><expr pos:start="35:32" pos:end="35:35"><operator pos:start="35:32" pos:end="35:32">-</operator><name pos:start="35:33" pos:end="35:35">ret</name></expr></argument>, <argument pos:start="35:38" pos:end="35:66"><expr pos:start="35:38" pos:end="35:66"><literal type="string" pos:start="35:38" pos:end="35:66">"can't create temporary file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:17">goto <name pos:start="37:14" pos:end="37:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:13">bdrv_qcow</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <call pos:start="43:17" pos:end="43:40"><name pos:start="43:17" pos:end="43:32">bdrv_find_format</name><argument_list pos:start="43:33" pos:end="43:40">(<argument pos:start="43:34" pos:end="43:39"><expr pos:start="43:34" pos:end="43:39"><literal type="string" pos:start="43:34" pos:end="43:39">"qcow"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:18">bdrv_qcow</name></expr>)</condition> <block pos:start="45:21" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:17">

        <expr_stmt pos:start="47:9" pos:end="47:57"><expr pos:start="47:9" pos:end="47:56"><call pos:start="47:9" pos:end="47:56"><name pos:start="47:9" pos:end="47:18">error_setg</name><argument_list pos:start="47:19" pos:end="47:56">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">errp</name></expr></argument>, <argument pos:start="47:26" pos:end="47:55"><expr pos:start="47:26" pos:end="47:55"><literal type="string" pos:start="47:26" pos:end="47:55">"Failed to locate qcow driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:22"><expr pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <operator pos:start="49:15" pos:end="49:15">-</operator><name pos:start="49:16" pos:end="49:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:17">goto <name pos:start="51:14" pos:end="51:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:75"><expr pos:start="57:5" pos:end="57:74"><name pos:start="57:5" pos:end="57:8">opts</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <call pos:start="57:12" pos:end="57:74"><name pos:start="57:12" pos:end="57:27">qemu_opts_create</name><argument_list pos:start="57:28" pos:end="57:74">(<argument pos:start="57:29" pos:end="57:50"><expr pos:start="57:29" pos:end="57:50"><name pos:start="57:29" pos:end="57:50"><name pos:start="57:29" pos:end="57:37">bdrv_qcow</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:50">create_opts</name></name></expr></argument>, <argument pos:start="57:53" pos:end="57:56"><expr pos:start="57:53" pos:end="57:56"><name pos:start="57:53" pos:end="57:56">NULL</name></expr></argument>, <argument pos:start="57:59" pos:end="57:59"><expr pos:start="57:59" pos:end="57:59"><literal type="number" pos:start="57:59" pos:end="57:59">0</literal></expr></argument>, <argument pos:start="57:62" pos:end="57:73"><expr pos:start="57:62" pos:end="57:73"><operator pos:start="57:62" pos:end="57:62">&amp;</operator><name pos:start="57:63" pos:end="57:73">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:38"><expr pos:start="59:5" pos:end="61:37"><call pos:start="59:5" pos:end="61:37"><name pos:start="59:5" pos:end="59:23">qemu_opt_set_number</name><argument_list pos:start="59:24" pos:end="61:37">(<argument pos:start="59:25" pos:end="59:28"><expr pos:start="59:25" pos:end="59:28"><name pos:start="59:25" pos:end="59:28">opts</name></expr></argument>, <argument pos:start="59:31" pos:end="59:44"><expr pos:start="59:31" pos:end="59:44"><name pos:start="59:31" pos:end="59:44">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="59:47" pos:end="59:67"><expr pos:start="59:47" pos:end="59:67"><name pos:start="59:47" pos:end="59:61"><name pos:start="59:47" pos:end="59:47">s</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:61">sector_count</name></name> <operator pos:start="59:63" pos:end="59:63">*</operator> <literal type="number" pos:start="59:65" pos:end="59:67">512</literal></expr></argument>,

                        <argument pos:start="61:25" pos:end="61:36"><expr pos:start="61:25" pos:end="61:36"><operator pos:start="61:25" pos:end="61:25">&amp;</operator><name pos:start="61:26" pos:end="61:36">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:69"><expr pos:start="63:5" pos:end="63:68"><call pos:start="63:5" pos:end="63:68"><name pos:start="63:5" pos:end="63:16">qemu_opt_set</name><argument_list pos:start="63:17" pos:end="63:68">(<argument pos:start="63:18" pos:end="63:21"><expr pos:start="63:18" pos:end="63:21"><name pos:start="63:18" pos:end="63:21">opts</name></expr></argument>, <argument pos:start="63:24" pos:end="63:45"><expr pos:start="63:24" pos:end="63:45"><name pos:start="63:24" pos:end="63:45">BLOCK_OPT_BACKING_FILE</name></expr></argument>, <argument pos:start="63:48" pos:end="63:53"><expr pos:start="63:48" pos:end="63:53"><literal type="string" pos:start="63:48" pos:end="63:53">"fat:"</literal></expr></argument>, <argument pos:start="63:56" pos:end="63:67"><expr pos:start="63:56" pos:end="63:67"><operator pos:start="63:56" pos:end="63:56">&amp;</operator><name pos:start="63:57" pos:end="63:67">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:63"><expr pos:start="67:5" pos:end="67:62"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:62"><name pos:start="67:11" pos:end="67:21">bdrv_create</name><argument_list pos:start="67:22" pos:end="67:62">(<argument pos:start="67:23" pos:end="67:31"><expr pos:start="67:23" pos:end="67:31"><name pos:start="67:23" pos:end="67:31">bdrv_qcow</name></expr></argument>, <argument pos:start="67:34" pos:end="67:49"><expr pos:start="67:34" pos:end="67:49"><name pos:start="67:34" pos:end="67:49"><name pos:start="67:34" pos:end="67:34">s</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:49">qcow_filename</name></name></expr></argument>, <argument pos:start="67:52" pos:end="67:55"><expr pos:start="67:52" pos:end="67:55"><name pos:start="67:52" pos:end="67:55">opts</name></expr></argument>, <argument pos:start="67:58" pos:end="67:61"><expr pos:start="67:58" pos:end="67:61"><name pos:start="67:58" pos:end="67:61">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><call pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:17">qemu_opts_del</name><argument_list pos:start="69:18" pos:end="69:23">(<argument pos:start="69:19" pos:end="69:22"><expr pos:start="69:19" pos:end="69:22"><name pos:start="69:19" pos:end="69:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:16">(<expr pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">&lt;</operator> <literal type="number" pos:start="71:15" pos:end="71:15">0</literal></expr>)</condition> <block pos:start="71:18" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:17">

        <goto pos:start="73:9" pos:end="73:17">goto <name pos:start="73:14" pos:end="73:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:26"><expr pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:11">options</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:25"><name pos:start="79:15" pos:end="79:23">qdict_new</name><argument_list pos:start="79:24" pos:end="79:25">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:72"><expr pos:start="81:5" pos:end="81:71"><call pos:start="81:5" pos:end="81:71"><name pos:start="81:5" pos:end="81:13">qdict_put</name><argument_list pos:start="81:14" pos:end="81:71">(<argument pos:start="81:15" pos:end="81:21"><expr pos:start="81:15" pos:end="81:21"><name pos:start="81:15" pos:end="81:21">options</name></expr></argument>, <argument pos:start="81:24" pos:end="81:44"><expr pos:start="81:24" pos:end="81:44"><literal type="string" pos:start="81:24" pos:end="81:44">"write-target.driver"</literal></expr></argument>, <argument pos:start="81:47" pos:end="81:70"><expr pos:start="81:47" pos:end="81:70"><call pos:start="81:47" pos:end="81:70"><name pos:start="81:47" pos:end="81:62">qstring_from_str</name><argument_list pos:start="81:63" pos:end="81:70">(<argument pos:start="81:64" pos:end="81:69"><expr pos:start="81:64" pos:end="81:69"><literal type="string" pos:start="81:64" pos:end="81:69">"qcow"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="85:62"><expr pos:start="83:5" pos:end="85:61"><name pos:start="83:5" pos:end="83:11"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:11">qcow</name></name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="85:61"><name pos:start="83:15" pos:end="83:29">bdrv_open_child</name><argument_list pos:start="83:30" pos:end="85:61">(<argument pos:start="83:31" pos:end="83:46"><expr pos:start="83:31" pos:end="83:46"><name pos:start="83:31" pos:end="83:46"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:46">qcow_filename</name></name></expr></argument>, <argument pos:start="83:49" pos:end="83:55"><expr pos:start="83:49" pos:end="83:55"><name pos:start="83:49" pos:end="83:55">options</name></expr></argument>, <argument pos:start="83:58" pos:end="83:71"><expr pos:start="83:58" pos:end="83:71"><literal type="string" pos:start="83:58" pos:end="83:71">"write-target"</literal></expr></argument>, <argument pos:start="83:74" pos:end="83:75"><expr pos:start="83:74" pos:end="83:75"><name pos:start="83:74" pos:end="83:75">bs</name></expr></argument>,

                              <argument pos:start="85:31" pos:end="85:47"><expr pos:start="85:31" pos:end="85:47"><operator pos:start="85:31" pos:end="85:31">&amp;</operator><name pos:start="85:32" pos:end="85:47">child_vvfat_qcow</name></expr></argument>, <argument pos:start="85:50" pos:end="85:54"><expr pos:start="85:50" pos:end="85:54"><name pos:start="85:50" pos:end="85:54">false</name></expr></argument>, <argument pos:start="85:57" pos:end="85:60"><expr pos:start="85:57" pos:end="85:60"><name pos:start="85:57" pos:end="85:60">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:21"><expr pos:start="87:5" pos:end="87:20"><call pos:start="87:5" pos:end="87:20"><name pos:start="87:5" pos:end="87:11">QDECREF</name><argument_list pos:start="87:12" pos:end="87:20">(<argument pos:start="87:13" pos:end="87:19"><expr pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="100:0"><if pos:start="89:5" pos:end="100:0">if <condition pos:start="89:8" pos:end="89:17">(<expr pos:start="89:9" pos:end="89:16"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:16"><name pos:start="89:10" pos:end="89:10">s</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:16">qcow</name></name></expr>)</condition> <block pos:start="89:19" pos:end="100:0">{<block_content pos:start="91:9" pos:end="93:17">

        <expr_stmt pos:start="91:9" pos:end="91:22"><expr pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <operator pos:start="91:15" pos:end="91:15">-</operator><name pos:start="91:16" pos:end="91:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:17">goto <name pos:start="93:14" pos:end="93:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="99:1" pos:end="99:14">#<cpp:directive pos:start="99:2" pos:end="99:7">ifndef</cpp:directive> <name pos:start="99:9" pos:end="99:14">_WIN32</name></cpp:ifndef>

    <expr_stmt pos:start="101:5" pos:end="104:0"><expr pos:start="101:5" pos:end="101:28"><call pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:10">unlink</name><argument_list pos:start="101:11" pos:end="101:28">(<argument pos:start="101:12" pos:end="101:27"><expr pos:start="101:12" pos:end="101:27"><name pos:start="101:12" pos:end="101:27"><name pos:start="101:12" pos:end="101:12">s</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:27">qcow_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="107:5" pos:end="107:25"><expr pos:start="107:5" pos:end="107:24"><name pos:start="107:5" pos:end="107:11">backing</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:24"><name pos:start="107:15" pos:end="107:22">bdrv_new</name><argument_list pos:start="107:23" pos:end="107:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:40"><expr pos:start="109:5" pos:end="109:39"><call pos:start="109:5" pos:end="109:39"><name pos:start="109:5" pos:end="109:23">bdrv_set_backing_hd</name><argument_list pos:start="109:24" pos:end="109:39">(<argument pos:start="109:25" pos:end="109:29"><expr pos:start="109:25" pos:end="109:29"><name pos:start="109:25" pos:end="109:29"><name pos:start="109:25" pos:end="109:25">s</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:29">bs</name></name></expr></argument>, <argument pos:start="109:32" pos:end="109:38"><expr pos:start="109:32" pos:end="109:38"><name pos:start="109:32" pos:end="109:38">backing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:24"><expr pos:start="111:5" pos:end="111:23"><call pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:14">bdrv_unref</name><argument_list pos:start="111:15" pos:end="111:23">(<argument pos:start="111:16" pos:end="111:22"><expr pos:start="111:16" pos:end="111:22"><name pos:start="111:16" pos:end="111:22">backing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:50"><expr pos:start="115:5" pos:end="115:49"><name pos:start="115:5" pos:end="115:27"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:9">bs</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:18">backing</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:22">bs</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:27">drv</name></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <operator pos:start="115:31" pos:end="115:31">&amp;</operator><name pos:start="115:32" pos:end="115:49">vvfat_write_target</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:50"><expr pos:start="117:5" pos:end="117:49"><name pos:start="117:5" pos:end="117:30"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:9">bs</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:18">backing</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:22">bs</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:30">opaque</name></name> <operator pos:start="117:32" pos:end="117:32">=</operator> <call pos:start="117:34" pos:end="117:49"><name pos:start="117:34" pos:end="117:38">g_new</name><argument_list pos:start="117:39" pos:end="117:49">(<argument pos:start="117:40" pos:end="117:45"><expr pos:start="117:40" pos:end="117:45"><name pos:start="117:40" pos:end="117:43">void</name> <operator pos:start="117:45" pos:end="117:45">*</operator></expr></argument>, <argument pos:start="117:48" pos:end="117:48"><expr pos:start="117:48" pos:end="117:48"><literal type="number" pos:start="117:48" pos:end="117:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:44"><expr pos:start="119:5" pos:end="119:43"><operator pos:start="119:5" pos:end="119:5">*</operator><operator pos:start="119:6" pos:end="119:6">(</operator><name pos:start="119:7" pos:end="119:10">void</name><operator pos:start="119:11" pos:end="119:11">*</operator><operator pos:start="119:12" pos:end="119:12">*</operator><operator pos:start="119:13" pos:end="119:13">)</operator><name pos:start="119:14" pos:end="119:39"><name pos:start="119:14" pos:end="119:14">s</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:18">bs</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:27">backing</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:31">bs</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:39">opaque</name></name> <operator pos:start="119:41" pos:end="119:41">=</operator> <name pos:start="119:43" pos:end="119:43">s</name></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>



<label pos:start="127:1" pos:end="127:4"><name pos:start="127:1" pos:end="127:3">err</name>:</label>

    <expr_stmt pos:start="129:5" pos:end="129:29"><expr pos:start="129:5" pos:end="129:28"><call pos:start="129:5" pos:end="129:28"><name pos:start="129:5" pos:end="129:10">g_free</name><argument_list pos:start="129:11" pos:end="129:28">(<argument pos:start="129:12" pos:end="129:27"><expr pos:start="129:12" pos:end="129:27"><name pos:start="129:12" pos:end="129:27"><name pos:start="129:12" pos:end="129:12">s</name><operator pos:start="129:13" pos:end="129:14">-&gt;</operator><name pos:start="129:15" pos:end="129:27">qcow_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:28"><expr pos:start="131:5" pos:end="131:27"><name pos:start="131:5" pos:end="131:20"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:20">qcow_filename</name></name> <operator pos:start="131:22" pos:end="131:22">=</operator> <name pos:start="131:24" pos:end="131:27">NULL</name></expr>;</expr_stmt>

    <return pos:start="133:5" pos:end="133:15">return <expr pos:start="133:12" pos:end="133:14"><name pos:start="133:12" pos:end="133:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
