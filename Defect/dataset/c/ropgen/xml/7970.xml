<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7970.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ppc_hash64_unmap_hptes</name><parameter_list pos:start="1:28" pos:end="3:47">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">PowerPCCPU</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">cpu</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:74"><decl pos:start="1:46" pos:end="1:74"><type pos:start="1:46" pos:end="1:74"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:67">ppc_hash_pte64_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:74">hptes</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:39"><decl pos:start="3:29" pos:end="3:39"><type pos:start="3:29" pos:end="3:39"><name pos:start="3:29" pos:end="3:34">hwaddr</name></type> <name pos:start="3:36" pos:end="3:39">ptex</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:46"><decl pos:start="3:42" pos:end="3:46"><type pos:start="3:42" pos:end="3:46"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:46">n</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="19:1">{<block_content pos:start="7:5" pos:end="17:5">

    <if_stmt pos:start="7:5" pos:end="17:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:61">(<expr pos:start="7:9" pos:end="7:60"><name pos:start="7:9" pos:end="7:30"><name pos:start="7:9" pos:end="7:11">cpu</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:16">env</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:30">external_htab</name></name> <operator pos:start="7:32" pos:end="7:33">==</operator> <name pos:start="7:35" pos:end="7:60">MMU_HASH64_KVM_MANAGED_HPT</name></expr>)</condition> <block pos:start="7:63" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:30">

        <expr_stmt pos:start="9:9" pos:end="9:30"><expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:14">g_free</name><argument_list pos:start="9:15" pos:end="9:29">(<argument pos:start="9:16" pos:end="9:28"><expr pos:start="9:16" pos:end="9:28"><operator pos:start="9:16" pos:end="9:16">(</operator><name pos:start="9:17" pos:end="9:20">void</name> <operator pos:start="9:22" pos:end="9:22">*</operator><operator pos:start="9:23" pos:end="9:23">)</operator><name pos:start="9:24" pos:end="9:28">hptes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="11:7" pos:end="17:5">else if <condition pos:start="11:15" pos:end="11:39">(<expr pos:start="11:16" pos:end="11:38"><operator pos:start="11:16" pos:end="11:16">!</operator><name pos:start="11:17" pos:end="11:38"><name pos:start="11:17" pos:end="11:19">cpu</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:24">env</name><operator pos:start="11:25" pos:end="11:25">.</operator><name pos:start="11:26" pos:end="11:38">external_htab</name></name></expr>)</condition> <block pos:start="11:41" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:57">

        <expr_stmt pos:start="13:9" pos:end="15:57"><expr pos:start="13:9" pos:end="15:56"><call pos:start="13:9" pos:end="15:56"><name pos:start="13:9" pos:end="13:27">address_space_unmap</name><argument_list pos:start="13:28" pos:end="15:56">(<argument pos:start="13:29" pos:end="13:40"><expr pos:start="13:29" pos:end="13:40"><call pos:start="13:29" pos:end="13:36"><name pos:start="13:29" pos:end="13:31">CPU</name><argument_list pos:start="13:32" pos:end="13:36">(<argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:35">cpu</name></expr></argument>)</argument_list></call><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:40">as</name></expr></argument>, <argument pos:start="13:43" pos:end="13:55"><expr pos:start="13:43" pos:end="13:55"><operator pos:start="13:43" pos:end="13:43">(</operator><name pos:start="13:44" pos:end="13:47">void</name> <operator pos:start="13:49" pos:end="13:49">*</operator><operator pos:start="13:50" pos:end="13:50">)</operator><name pos:start="13:51" pos:end="13:55">hptes</name></expr></argument>, <argument pos:start="13:58" pos:end="13:77"><expr pos:start="13:58" pos:end="13:77"><name pos:start="13:58" pos:end="13:58">n</name> <operator pos:start="13:60" pos:end="13:60">*</operator> <name pos:start="13:62" pos:end="13:77">HASH_PTE_SIZE_64</name></expr></argument>,

                            <argument pos:start="15:29" pos:end="15:33"><expr pos:start="15:29" pos:end="15:33"><name pos:start="15:29" pos:end="15:33">false</name></expr></argument>, <argument pos:start="15:36" pos:end="15:55"><expr pos:start="15:36" pos:end="15:55"><name pos:start="15:36" pos:end="15:36">n</name> <operator pos:start="15:38" pos:end="15:38">*</operator> <name pos:start="15:40" pos:end="15:55">HASH_PTE_SIZE_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
