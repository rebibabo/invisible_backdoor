<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11661.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">xenfb_map_fb</name><parameter_list pos:start="1:24" pos:end="1:44">(<parameter pos:start="1:25" pos:end="1:43"><decl pos:start="1:25" pos:end="1:43"><type pos:start="1:25" pos:end="1:43"><name pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:30">struct</name> <name pos:start="1:32" pos:end="1:36">XenFB</name></name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">xenfb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="173:1">{<block_content pos:start="5:5" pos:end="171:15">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">xenfb_page</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:27">page</name> <init pos:start="5:29" pos:end="5:43">= <expr pos:start="5:31" pos:end="5:43"><name pos:start="5:31" pos:end="5:43"><name pos:start="5:31" pos:end="5:35">xenfb</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:38">c</name><operator pos:start="5:39" pos:end="5:39">.</operator><name pos:start="5:40" pos:end="5:43">page</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:18">protocol</name> <init pos:start="7:20" pos:end="7:45">= <expr pos:start="7:22" pos:end="7:45"><name pos:start="7:22" pos:end="7:45"><name pos:start="7:22" pos:end="7:26">xenfb</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">c</name><operator pos:start="7:30" pos:end="7:30">.</operator><name pos:start="7:31" pos:end="7:36">xendev</name><operator pos:start="7:37" pos:end="7:37">.</operator><name pos:start="7:38" pos:end="7:45">protocol</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">n_fbdirs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">xen_pfn_t</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:21">pgmfns</name> <init pos:start="11:23" pos:end="11:28">= <expr pos:start="11:25" pos:end="11:28"><name pos:start="11:25" pos:end="11:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">xen_pfn_t</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:21">fbmfns</name> <init pos:start="13:23" pos:end="13:28">= <expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">void</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:13">map</name></decl>, <decl pos:start="15:16" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:10"><modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:18">pd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">mode</name></decl>, <decl pos:start="17:15" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:17">ret</name> <init pos:start="17:19" pos:end="17:22">= <expr pos:start="17:21" pos:end="17:22"><operator pos:start="17:21" pos:end="17:21">-</operator><literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:27">/* default to native */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:6">pd</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:13">page</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:17">pd</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:8">mode</name> <operator pos:start="25:10" pos:end="25:10">=</operator> sizeof<operator pos:start="25:18" pos:end="25:18">(</operator><name pos:start="25:19" pos:end="25:26">unsigned</name> <name pos:start="25:28" pos:end="25:31">long</name><operator pos:start="25:32" pos:end="25:32">)</operator> <operator pos:start="25:34" pos:end="25:34">*</operator> <literal type="number" pos:start="25:36" pos:end="25:36">8</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="107:5"><if pos:start="29:5" pos:end="87:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:17">protocol</name></expr>)</condition> <block pos:start="29:20" pos:end="87:5">{<block_content pos:start="49:9" pos:end="86:0">

	<comment type="block" pos:start="31:9" pos:end="47:11">/*

	 * Undefined protocol, some guesswork needed.

	 *

	 * Old frontends which don't set the protocol use

	 * one page directory only, thus pd[1] must be zero.

	 * pd[1] of the 32bit struct layout and the lower

	 * 32 bits of pd[0] of the 64bit struct layout have

	 * the same location, so we can check that ...

	 */</comment>

	<decl_stmt pos:start="49:9" pos:end="49:31"><decl pos:start="49:9" pos:end="49:30"><type pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:16">uint32_t</name> <modifier pos:start="49:18" pos:end="49:18">*</modifier></type><name pos:start="49:19" pos:end="49:23">ptr32</name> <init pos:start="49:25" pos:end="49:30">= <expr pos:start="49:27" pos:end="49:30"><name pos:start="49:27" pos:end="49:30">NULL</name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="51:9" pos:end="54:0"><decl pos:start="51:9" pos:end="51:30"><type pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:16">uint32_t</name> <modifier pos:start="51:18" pos:end="51:18">*</modifier></type><name pos:start="51:19" pos:end="51:23">ptr64</name> <init pos:start="51:25" pos:end="51:30">= <expr pos:start="51:27" pos:end="51:30"><name pos:start="51:27" pos:end="51:30">NULL</name></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="53:1" pos:end="53:21">#<cpp:directive pos:start="53:2" pos:end="53:3">if</cpp:directive> <expr pos:start="53:5" pos:end="53:21"><call pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:11">defined</name><argument_list pos:start="53:12" pos:end="53:21">(<argument pos:start="53:13" pos:end="53:20"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:20">__i386__</name></expr></argument>)</argument_list></call></expr></cpp:if>

	<expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:13">ptr32</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <operator pos:start="55:17" pos:end="55:17">(</operator><name pos:start="55:18" pos:end="55:21">void</name><operator pos:start="55:22" pos:end="55:22">*</operator><operator pos:start="55:23" pos:end="55:23">)</operator><name pos:start="55:24" pos:end="55:31"><name pos:start="55:24" pos:end="55:27">page</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:31">pd</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="57:9" pos:end="60:0"><expr pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:13">ptr64</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <operator pos:start="57:17" pos:end="57:17">(</operator><operator pos:start="57:18" pos:end="57:18">(</operator><name pos:start="57:19" pos:end="57:22">void</name><operator pos:start="57:23" pos:end="57:23">*</operator><operator pos:start="57:24" pos:end="57:24">)</operator><name pos:start="57:25" pos:end="57:32"><name pos:start="57:25" pos:end="57:28">page</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:32">pd</name></name><operator pos:start="57:33" pos:end="57:33">)</operator> <operator pos:start="57:35" pos:end="57:35">+</operator> <literal type="number" pos:start="57:37" pos:end="57:37">4</literal></expr>;</expr_stmt>

<cpp:elif pos:start="59:1" pos:end="59:25">#<cpp:directive pos:start="59:2" pos:end="59:5">elif</cpp:directive> <expr pos:start="59:7" pos:end="59:25"><call pos:start="59:7" pos:end="59:25"><name pos:start="59:7" pos:end="59:13">defined</name><argument_list pos:start="59:14" pos:end="59:25">(<argument pos:start="59:15" pos:end="59:24"><expr pos:start="59:15" pos:end="59:24"><name pos:start="59:15" pos:end="59:24">__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:elif>

	<expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:13">ptr32</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <operator pos:start="61:17" pos:end="61:17">(</operator><operator pos:start="61:18" pos:end="61:18">(</operator><name pos:start="61:19" pos:end="61:22">void</name><operator pos:start="61:23" pos:end="61:23">*</operator><operator pos:start="61:24" pos:end="61:24">)</operator><name pos:start="61:25" pos:end="61:32"><name pos:start="61:25" pos:end="61:28">page</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:32">pd</name></name><operator pos:start="61:33" pos:end="61:33">)</operator> <operator pos:start="61:35" pos:end="61:35">-</operator> <literal type="number" pos:start="61:37" pos:end="61:37">4</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="63:9" pos:end="66:0"><expr pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:13">ptr64</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <operator pos:start="63:17" pos:end="63:17">(</operator><name pos:start="63:18" pos:end="63:21">void</name><operator pos:start="63:22" pos:end="63:22">*</operator><operator pos:start="63:23" pos:end="63:23">)</operator><name pos:start="63:24" pos:end="63:31"><name pos:start="63:24" pos:end="63:27">page</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:31">pd</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

	<if_stmt pos:start="67:9" pos:end="86:0"><if pos:start="67:9" pos:end="86:0">if <condition pos:start="67:12" pos:end="67:18">(<expr pos:start="67:13" pos:end="67:17"><name pos:start="67:13" pos:end="67:17">ptr32</name></expr>)</condition> <block pos:start="67:20" pos:end="86:0">{<block_content pos:start="69:13" pos:end="81:13">

	    <if_stmt pos:start="69:13" pos:end="81:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:30">(<expr pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:21">ptr32</name><index pos:start="69:22" pos:end="69:24">[<expr pos:start="69:23" pos:end="69:23"><literal type="number" pos:start="69:23" pos:end="69:23">1</literal></expr>]</index></name> <operator pos:start="69:26" pos:end="69:27">==</operator> <literal type="number" pos:start="69:29" pos:end="69:29">0</literal></expr>)</condition> <block pos:start="69:32" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:29">

		<expr_stmt pos:start="71:17" pos:end="71:26"><expr pos:start="71:17" pos:end="71:25"><name pos:start="71:17" pos:end="71:20">mode</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <literal type="number" pos:start="71:24" pos:end="71:25">32</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:18">pd</name>   <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:28">ptr32</name></expr>;</expr_stmt>

	    </block_content>}</block></if> <else pos:start="75:15" pos:end="81:13">else <block pos:start="75:20" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:29">

		<expr_stmt pos:start="77:17" pos:end="77:26"><expr pos:start="77:17" pos:end="77:25"><name pos:start="77:17" pos:end="77:20">mode</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <literal type="number" pos:start="77:24" pos:end="77:25">64</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="79:17" pos:end="79:29"><expr pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:18">pd</name>   <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:28">ptr64</name></expr>;</expr_stmt>

	    </block_content>}</block></else></if_stmt>

	</block_content>}</block></if></if_stmt>

<cpp:if pos:start="85:1" pos:end="85:23">#<cpp:directive pos:start="85:2" pos:end="85:3">if</cpp:directive> <expr pos:start="85:5" pos:end="85:23"><call pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:11">defined</name><argument_list pos:start="85:12" pos:end="85:23">(<argument pos:start="85:13" pos:end="85:22"><expr pos:start="85:13" pos:end="85:22"><name pos:start="85:13" pos:end="85:22">__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>

    </block_content>}</block></if> <if type="elseif" pos:start="87:7" pos:end="97:5">else if <condition pos:start="87:15" pos:end="87:62">(<expr pos:start="87:16" pos:end="87:61"><call pos:start="87:16" pos:end="87:56"><name pos:start="87:16" pos:end="87:21">strcmp</name><argument_list pos:start="87:22" pos:end="87:56">(<argument pos:start="87:23" pos:end="87:30"><expr pos:start="87:23" pos:end="87:30"><name pos:start="87:23" pos:end="87:30">protocol</name></expr></argument>, <argument pos:start="87:33" pos:end="87:55"><expr pos:start="87:33" pos:end="87:55"><name pos:start="87:33" pos:end="87:55">XEN_IO_PROTO_ABI_X86_32</name></expr></argument>)</argument_list></call> <operator pos:start="87:58" pos:end="87:59">==</operator> <literal type="number" pos:start="87:61" pos:end="87:61">0</literal></expr>)</condition> <block pos:start="87:64" pos:end="97:5">{<block_content pos:start="91:9" pos:end="96:0">

	<comment type="block" pos:start="89:9" pos:end="89:36">/* 64bit dom0, 32bit domU */</comment>

	<expr_stmt pos:start="91:9" pos:end="91:18"><expr pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:12">mode</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <literal type="number" pos:start="91:16" pos:end="91:17">32</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="93:9" pos:end="96:0"><expr pos:start="93:9" pos:end="93:36"><name pos:start="93:9" pos:end="93:10">pd</name>   <operator pos:start="93:14" pos:end="93:14">=</operator> <operator pos:start="93:16" pos:end="93:16">(</operator><operator pos:start="93:17" pos:end="93:17">(</operator><name pos:start="93:18" pos:end="93:21">void</name><operator pos:start="93:22" pos:end="93:22">*</operator><operator pos:start="93:23" pos:end="93:23">)</operator><name pos:start="93:24" pos:end="93:31"><name pos:start="93:24" pos:end="93:27">page</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:31">pd</name></name><operator pos:start="93:32" pos:end="93:32">)</operator> <operator pos:start="93:34" pos:end="93:34">-</operator> <literal type="number" pos:start="93:36" pos:end="93:36">4</literal></expr>;</expr_stmt>

<cpp:elif pos:start="95:1" pos:end="95:23">#<cpp:directive pos:start="95:2" pos:end="95:5">elif</cpp:directive> <expr pos:start="95:7" pos:end="95:23"><call pos:start="95:7" pos:end="95:23"><name pos:start="95:7" pos:end="95:13">defined</name><argument_list pos:start="95:14" pos:end="95:23">(<argument pos:start="95:15" pos:end="95:22"><expr pos:start="95:15" pos:end="95:22"><name pos:start="95:15" pos:end="95:22">__i386__</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    </block_content>}</block></if> <if type="elseif" pos:start="97:7" pos:end="107:5">else if <condition pos:start="97:15" pos:end="97:62">(<expr pos:start="97:16" pos:end="97:61"><call pos:start="97:16" pos:end="97:56"><name pos:start="97:16" pos:end="97:21">strcmp</name><argument_list pos:start="97:22" pos:end="97:56">(<argument pos:start="97:23" pos:end="97:30"><expr pos:start="97:23" pos:end="97:30"><name pos:start="97:23" pos:end="97:30">protocol</name></expr></argument>, <argument pos:start="97:33" pos:end="97:55"><expr pos:start="97:33" pos:end="97:55"><name pos:start="97:33" pos:end="97:55">XEN_IO_PROTO_ABI_X86_64</name></expr></argument>)</argument_list></call> <operator pos:start="97:58" pos:end="97:59">==</operator> <literal type="number" pos:start="97:61" pos:end="97:61">0</literal></expr>)</condition> <block pos:start="97:64" pos:end="107:5">{<block_content pos:start="101:9" pos:end="106:0">

	<comment type="block" pos:start="99:9" pos:end="99:36">/* 32bit dom0, 64bit domU */</comment>

	<expr_stmt pos:start="101:9" pos:end="101:18"><expr pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:12">mode</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <literal type="number" pos:start="101:16" pos:end="101:17">64</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="103:9" pos:end="106:0"><expr pos:start="103:9" pos:end="103:36"><name pos:start="103:9" pos:end="103:10">pd</name>   <operator pos:start="103:14" pos:end="103:14">=</operator> <operator pos:start="103:16" pos:end="103:16">(</operator><operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:21">void</name><operator pos:start="103:22" pos:end="103:22">*</operator><operator pos:start="103:23" pos:end="103:23">)</operator><name pos:start="103:24" pos:end="103:31"><name pos:start="103:24" pos:end="103:27">page</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:31">pd</name></name><operator pos:start="103:32" pos:end="103:32">)</operator> <operator pos:start="103:34" pos:end="103:34">+</operator> <literal type="number" pos:start="103:36" pos:end="103:36">4</literal></expr>;</expr_stmt>

<cpp:endif pos:start="105:1" pos:end="105:6">#<cpp:directive pos:start="105:2" pos:end="105:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="117:5"><if pos:start="111:5" pos:end="117:5">if <condition pos:start="111:8" pos:end="111:22">(<expr pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:13">xenfb</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:21">pixels</name></name></expr>)</condition> <block pos:start="111:24" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:29">

        <expr_stmt pos:start="113:9" pos:end="113:61"><expr pos:start="113:9" pos:end="113:60"><call pos:start="113:9" pos:end="113:60"><name pos:start="113:9" pos:end="113:14">munmap</name><argument_list pos:start="113:15" pos:end="113:60">(<argument pos:start="113:16" pos:end="113:28"><expr pos:start="113:16" pos:end="113:28"><name pos:start="113:16" pos:end="113:28"><name pos:start="113:16" pos:end="113:20">xenfb</name><operator pos:start="113:21" pos:end="113:22">-&gt;</operator><name pos:start="113:23" pos:end="113:28">pixels</name></name></expr></argument>, <argument pos:start="113:31" pos:end="113:59"><expr pos:start="113:31" pos:end="113:59"><name pos:start="113:31" pos:end="113:44"><name pos:start="113:31" pos:end="113:35">xenfb</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:44">fbpages</name></name> <operator pos:start="113:46" pos:end="113:46">*</operator> <name pos:start="113:48" pos:end="113:59">XC_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:29"><expr pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:13">xenfb</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:21">pixels</name></name> <operator pos:start="115:23" pos:end="115:23">=</operator> <name pos:start="115:25" pos:end="115:28">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:73"><expr pos:start="121:5" pos:end="121:72"><name pos:start="121:5" pos:end="121:18"><name pos:start="121:5" pos:end="121:9">xenfb</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:18">fbpages</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <operator pos:start="121:22" pos:end="121:22">(</operator><name pos:start="121:23" pos:end="121:35"><name pos:start="121:23" pos:end="121:27">xenfb</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:35">fb_len</name></name> <operator pos:start="121:37" pos:end="121:37">+</operator> <operator pos:start="121:39" pos:end="121:39">(</operator><name pos:start="121:40" pos:end="121:51">XC_PAGE_SIZE</name> <operator pos:start="121:53" pos:end="121:53">-</operator> <literal type="number" pos:start="121:55" pos:end="121:55">1</literal><operator pos:start="121:56" pos:end="121:56">)</operator><operator pos:start="121:57" pos:end="121:57">)</operator> <operator pos:start="121:59" pos:end="121:59">/</operator> <name pos:start="121:61" pos:end="121:72">XC_PAGE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:41"><expr pos:start="123:5" pos:end="123:40"><name pos:start="123:5" pos:end="123:12">n_fbdirs</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <name pos:start="123:16" pos:end="123:29"><name pos:start="123:16" pos:end="123:20">xenfb</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:29">fbpages</name></name> <operator pos:start="123:31" pos:end="123:31">*</operator> <name pos:start="123:33" pos:end="123:36">mode</name> <operator pos:start="123:38" pos:end="123:38">/</operator> <literal type="number" pos:start="123:40" pos:end="123:40">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:62"><expr pos:start="125:5" pos:end="125:61"><name pos:start="125:5" pos:end="125:12">n_fbdirs</name> <operator pos:start="125:14" pos:end="125:14">=</operator> <operator pos:start="125:16" pos:end="125:16">(</operator><name pos:start="125:17" pos:end="125:24">n_fbdirs</name> <operator pos:start="125:26" pos:end="125:26">+</operator> <operator pos:start="125:28" pos:end="125:28">(</operator><name pos:start="125:29" pos:end="125:40">XC_PAGE_SIZE</name> <operator pos:start="125:42" pos:end="125:42">-</operator> <literal type="number" pos:start="125:44" pos:end="125:44">1</literal><operator pos:start="125:45" pos:end="125:45">)</operator><operator pos:start="125:46" pos:end="125:46">)</operator> <operator pos:start="125:48" pos:end="125:48">/</operator> <name pos:start="125:50" pos:end="125:61">XC_PAGE_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:53"><expr pos:start="129:5" pos:end="129:52"><name pos:start="129:5" pos:end="129:10">pgmfns</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <call pos:start="129:14" pos:end="129:52"><name pos:start="129:14" pos:end="129:22">g_malloc0</name><argument_list pos:start="129:23" pos:end="129:52">(<argument pos:start="129:24" pos:end="129:51"><expr pos:start="129:24" pos:end="129:51"><sizeof pos:start="129:24" pos:end="129:40">sizeof<argument_list pos:start="129:30" pos:end="129:40">(<argument pos:start="129:31" pos:end="129:39"><expr pos:start="129:31" pos:end="129:39"><name pos:start="129:31" pos:end="129:39">xen_pfn_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="129:42" pos:end="129:42">*</operator> <name pos:start="129:44" pos:end="129:51">n_fbdirs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:59"><expr pos:start="131:5" pos:end="131:58"><name pos:start="131:5" pos:end="131:10">fbmfns</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <call pos:start="131:14" pos:end="131:58"><name pos:start="131:14" pos:end="131:22">g_malloc0</name><argument_list pos:start="131:23" pos:end="131:58">(<argument pos:start="131:24" pos:end="131:57"><expr pos:start="131:24" pos:end="131:57"><sizeof pos:start="131:24" pos:end="131:40">sizeof<argument_list pos:start="131:30" pos:end="131:40">(<argument pos:start="131:31" pos:end="131:39"><expr pos:start="131:31" pos:end="131:39"><name pos:start="131:31" pos:end="131:39">xen_pfn_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="131:42" pos:end="131:42">*</operator> <name pos:start="131:44" pos:end="131:57"><name pos:start="131:44" pos:end="131:48">xenfb</name><operator pos:start="131:49" pos:end="131:50">-&gt;</operator><name pos:start="131:51" pos:end="131:57">fbpages</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:48"><expr pos:start="135:5" pos:end="135:47"><call pos:start="135:5" pos:end="135:47"><name pos:start="135:5" pos:end="135:19">xenfb_copy_mfns</name><argument_list pos:start="135:20" pos:end="135:47">(<argument pos:start="135:21" pos:end="135:24"><expr pos:start="135:21" pos:end="135:24"><name pos:start="135:21" pos:end="135:24">mode</name></expr></argument>, <argument pos:start="135:27" pos:end="135:34"><expr pos:start="135:27" pos:end="135:34"><name pos:start="135:27" pos:end="135:34">n_fbdirs</name></expr></argument>, <argument pos:start="135:37" pos:end="135:42"><expr pos:start="135:37" pos:end="135:42"><name pos:start="135:37" pos:end="135:42">pgmfns</name></expr></argument>, <argument pos:start="135:45" pos:end="135:46"><expr pos:start="135:45" pos:end="135:46"><name pos:start="135:45" pos:end="135:46">pd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="139:60"><expr pos:start="137:5" pos:end="139:59"><name pos:start="137:5" pos:end="137:7">map</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <call pos:start="137:11" pos:end="139:59"><name pos:start="137:11" pos:end="137:30">xc_map_foreign_pages</name><argument_list pos:start="137:31" pos:end="139:59">(<argument pos:start="137:32" pos:end="137:37"><expr pos:start="137:32" pos:end="137:37"><name pos:start="137:32" pos:end="137:37">xen_xc</name></expr></argument>, <argument pos:start="137:40" pos:end="137:58"><expr pos:start="137:40" pos:end="137:58"><name pos:start="137:40" pos:end="137:58"><name pos:start="137:40" pos:end="137:44">xenfb</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:47">c</name><operator pos:start="137:48" pos:end="137:48">.</operator><name pos:start="137:49" pos:end="137:54">xendev</name><operator pos:start="137:55" pos:end="137:55">.</operator><name pos:start="137:56" pos:end="137:58">dom</name></name></expr></argument>,

			       <argument pos:start="139:32" pos:end="139:40"><expr pos:start="139:32" pos:end="139:40"><name pos:start="139:32" pos:end="139:40">PROT_READ</name></expr></argument>, <argument pos:start="139:43" pos:end="139:48"><expr pos:start="139:43" pos:end="139:48"><name pos:start="139:43" pos:end="139:48">pgmfns</name></expr></argument>, <argument pos:start="139:51" pos:end="139:58"><expr pos:start="139:51" pos:end="139:58"><name pos:start="139:51" pos:end="139:58">n_fbdirs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="143:17"><if pos:start="141:5" pos:end="143:17">if <condition pos:start="141:8" pos:end="141:20">(<expr pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:11">map</name> <operator pos:start="141:13" pos:end="141:14">==</operator> <name pos:start="141:16" pos:end="141:19">NULL</name></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:17"><block_content pos:start="143:9" pos:end="143:17">

	<goto pos:start="143:9" pos:end="143:17">goto <name pos:start="143:14" pos:end="143:16">out</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:55"><expr pos:start="145:5" pos:end="145:54"><call pos:start="145:5" pos:end="145:54"><name pos:start="145:5" pos:end="145:19">xenfb_copy_mfns</name><argument_list pos:start="145:20" pos:end="145:54">(<argument pos:start="145:21" pos:end="145:24"><expr pos:start="145:21" pos:end="145:24"><name pos:start="145:21" pos:end="145:24">mode</name></expr></argument>, <argument pos:start="145:27" pos:end="145:40"><expr pos:start="145:27" pos:end="145:40"><name pos:start="145:27" pos:end="145:40"><name pos:start="145:27" pos:end="145:31">xenfb</name><operator pos:start="145:32" pos:end="145:33">-&gt;</operator><name pos:start="145:34" pos:end="145:40">fbpages</name></name></expr></argument>, <argument pos:start="145:43" pos:end="145:48"><expr pos:start="145:43" pos:end="145:48"><name pos:start="145:43" pos:end="145:48">fbmfns</name></expr></argument>, <argument pos:start="145:51" pos:end="145:53"><expr pos:start="145:51" pos:end="145:53"><name pos:start="145:51" pos:end="145:53">map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:41"><expr pos:start="147:5" pos:end="147:40"><call pos:start="147:5" pos:end="147:40"><name pos:start="147:5" pos:end="147:10">munmap</name><argument_list pos:start="147:11" pos:end="147:40">(<argument pos:start="147:12" pos:end="147:14"><expr pos:start="147:12" pos:end="147:14"><name pos:start="147:12" pos:end="147:14">map</name></expr></argument>, <argument pos:start="147:17" pos:end="147:39"><expr pos:start="147:17" pos:end="147:39"><name pos:start="147:17" pos:end="147:24">n_fbdirs</name> <operator pos:start="147:26" pos:end="147:26">*</operator> <name pos:start="147:28" pos:end="147:39">XC_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="153:47"><expr pos:start="151:5" pos:end="153:46"><name pos:start="151:5" pos:end="151:17"><name pos:start="151:5" pos:end="151:9">xenfb</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:17">pixels</name></name> <operator pos:start="151:19" pos:end="151:19">=</operator> <call pos:start="151:21" pos:end="153:46"><name pos:start="151:21" pos:end="151:40">xc_map_foreign_pages</name><argument_list pos:start="151:41" pos:end="153:46">(<argument pos:start="151:42" pos:end="151:47"><expr pos:start="151:42" pos:end="151:47"><name pos:start="151:42" pos:end="151:47">xen_xc</name></expr></argument>, <argument pos:start="151:50" pos:end="151:68"><expr pos:start="151:50" pos:end="151:68"><name pos:start="151:50" pos:end="151:68"><name pos:start="151:50" pos:end="151:54">xenfb</name><operator pos:start="151:55" pos:end="151:56">-&gt;</operator><name pos:start="151:57" pos:end="151:57">c</name><operator pos:start="151:58" pos:end="151:58">.</operator><name pos:start="151:59" pos:end="151:64">xendev</name><operator pos:start="151:65" pos:end="151:65">.</operator><name pos:start="151:66" pos:end="151:68">dom</name></name></expr></argument>,

            <argument pos:start="153:13" pos:end="153:21"><expr pos:start="153:13" pos:end="153:21"><name pos:start="153:13" pos:end="153:21">PROT_READ</name></expr></argument>, <argument pos:start="153:24" pos:end="153:29"><expr pos:start="153:24" pos:end="153:29"><name pos:start="153:24" pos:end="153:29">fbmfns</name></expr></argument>, <argument pos:start="153:32" pos:end="153:45"><expr pos:start="153:32" pos:end="153:45"><name pos:start="153:32" pos:end="153:45"><name pos:start="153:32" pos:end="153:36">xenfb</name><operator pos:start="153:37" pos:end="153:38">-&gt;</operator><name pos:start="153:39" pos:end="153:45">fbpages</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="157:17"><if pos:start="155:5" pos:end="157:17">if <condition pos:start="155:8" pos:end="155:30">(<expr pos:start="155:9" pos:end="155:29"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:13">xenfb</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:21">pixels</name></name> <operator pos:start="155:23" pos:end="155:24">==</operator> <name pos:start="155:26" pos:end="155:29">NULL</name></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:17"><block_content pos:start="157:9" pos:end="157:17">

	<goto pos:start="157:9" pos:end="157:17">goto <name pos:start="157:14" pos:end="157:16">out</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:12"><expr pos:start="161:5" pos:end="161:11"><name pos:start="161:5" pos:end="161:7">ret</name> <operator pos:start="161:9" pos:end="161:9">=</operator> <literal type="number" pos:start="161:11" pos:end="161:11">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="161:14" pos:end="161:30">/* all is fine */</comment>



<label pos:start="165:1" pos:end="165:4"><name pos:start="165:1" pos:end="165:3">out</name>:</label>

    <expr_stmt pos:start="167:5" pos:end="167:19"><expr pos:start="167:5" pos:end="167:18"><call pos:start="167:5" pos:end="167:18"><name pos:start="167:5" pos:end="167:10">g_free</name><argument_list pos:start="167:11" pos:end="167:18">(<argument pos:start="167:12" pos:end="167:17"><expr pos:start="167:12" pos:end="167:17"><name pos:start="167:12" pos:end="167:17">pgmfns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:19"><expr pos:start="169:5" pos:end="169:18"><call pos:start="169:5" pos:end="169:18"><name pos:start="169:5" pos:end="169:10">g_free</name><argument_list pos:start="169:11" pos:end="169:18">(<argument pos:start="169:12" pos:end="169:17"><expr pos:start="169:12" pos:end="169:17"><name pos:start="169:12" pos:end="169:17">fbmfns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="171:5" pos:end="171:15">return <expr pos:start="171:12" pos:end="171:14"><name pos:start="171:12" pos:end="171:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
