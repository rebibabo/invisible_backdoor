<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6310.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">do_info_snapshots</name><parameter_list pos:start="1:23" pos:end="1:36">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:32"><name pos:start="1:24" pos:end="1:30">Monitor</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">mon</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:22">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">DriveInfo</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>, <decl pos:start="7:27" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:22"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">bs1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">QEMUSnapshotInfo</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:28">sn_tab</name></decl>, <decl pos:start="9:31" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:22"><modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:33">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">nb_sns</name></decl>, <decl pos:start="11:17" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:17">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:12">buf</name><index pos:start="13:13" pos:end="13:17">[<expr pos:start="13:14" pos:end="13:16"><literal type="number" pos:start="13:14" pos:end="13:16">256</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:6">bs</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:27"><name pos:start="17:10" pos:end="17:25">get_bs_snapshots</name><argument_list pos:start="17:26" pos:end="17:27">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">bs</name></expr>)</condition> <block pos:start="19:14" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:78"><expr pos:start="21:9" pos:end="21:77"><call pos:start="21:9" pos:end="21:77"><name pos:start="21:9" pos:end="21:22">monitor_printf</name><argument_list pos:start="21:23" pos:end="21:77">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">mon</name></expr></argument>, <argument pos:start="21:29" pos:end="21:76"><expr pos:start="21:29" pos:end="21:76"><literal type="string" pos:start="21:29" pos:end="21:76">"No available block device supports snapshots\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><call pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:18">monitor_printf</name><argument_list pos:start="27:19" pos:end="27:44">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">mon</name></expr></argument>, <argument pos:start="27:25" pos:end="27:43"><expr pos:start="27:25" pos:end="27:43"><literal type="string" pos:start="27:25" pos:end="27:43">"Snapshot devices:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:18">QTAILQ_FOREACH</name><argument_list pos:start="29:19" pos:end="29:40">(<argument pos:start="29:20" pos:end="29:24">dinfo</argument>, <argument pos:start="29:27" pos:end="29:33">&amp;drives</argument>, <argument pos:start="29:36" pos:end="29:39">next</argument>)</argument_list></macro> <block pos:start="29:42" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:9">

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:11">bs1</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:25"><name pos:start="31:15" pos:end="31:19">dinfo</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:25">bdrv</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:35">(<expr pos:start="33:13" pos:end="33:34"><call pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:29">bdrv_has_snapshot</name><argument_list pos:start="33:30" pos:end="33:34">(<argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">bs1</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:37" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:70">

            <if_stmt pos:start="35:13" pos:end="37:70"><if pos:start="35:13" pos:end="37:70">if <condition pos:start="35:16" pos:end="35:26">(<expr pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:18">bs</name> <operator pos:start="35:20" pos:end="35:21">==</operator> <name pos:start="35:23" pos:end="35:25">bs1</name></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:70"><block_content pos:start="37:17" pos:end="37:70">

                <expr_stmt pos:start="37:17" pos:end="37:70"><expr pos:start="37:17" pos:end="37:69"><call pos:start="37:17" pos:end="37:69"><name pos:start="37:17" pos:end="37:30">monitor_printf</name><argument_list pos:start="37:31" pos:end="37:69">(<argument pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:34">mon</name></expr></argument>, <argument pos:start="37:37" pos:end="37:41"><expr pos:start="37:37" pos:end="37:41"><literal type="string" pos:start="37:37" pos:end="37:41">" %s"</literal></expr></argument>, <argument pos:start="37:44" pos:end="37:68"><expr pos:start="37:44" pos:end="37:68"><call pos:start="37:44" pos:end="37:68"><name pos:start="37:44" pos:end="37:63">bdrv_get_device_name</name><argument_list pos:start="37:64" pos:end="37:68">(<argument pos:start="37:65" pos:end="37:67"><expr pos:start="37:65" pos:end="37:67"><name pos:start="37:65" pos:end="37:67">bs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><call pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:18">monitor_printf</name><argument_list pos:start="43:19" pos:end="43:29">(<argument pos:start="43:20" pos:end="43:22"><expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">mon</name></expr></argument>, <argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><literal type="string" pos:start="43:25" pos:end="43:28">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:10">nb_sns</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:44"><name pos:start="47:14" pos:end="47:31">bdrv_snapshot_list</name><argument_list pos:start="47:32" pos:end="47:44">(<argument pos:start="47:33" pos:end="47:34"><expr pos:start="47:33" pos:end="47:34"><name pos:start="47:33" pos:end="47:34">bs</name></expr></argument>, <argument pos:start="47:37" pos:end="47:43"><expr pos:start="47:37" pos:end="47:43"><operator pos:start="47:37" pos:end="47:37">&amp;</operator><name pos:start="47:38" pos:end="47:43">sn_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:19">(<expr pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:14">nb_sns</name> <operator pos:start="49:16" pos:end="49:16">&lt;</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>)</condition> <block pos:start="49:21" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:15">

        <expr_stmt pos:start="51:9" pos:end="51:70"><expr pos:start="51:9" pos:end="51:69"><call pos:start="51:9" pos:end="51:69"><name pos:start="51:9" pos:end="51:22">monitor_printf</name><argument_list pos:start="51:23" pos:end="51:69">(<argument pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">mon</name></expr></argument>, <argument pos:start="51:29" pos:end="51:60"><expr pos:start="51:29" pos:end="51:60"><literal type="string" pos:start="51:29" pos:end="51:60">"bdrv_snapshot_list: error %d\n"</literal></expr></argument>, <argument pos:start="51:63" pos:end="51:68"><expr pos:start="51:63" pos:end="51:68"><name pos:start="51:63" pos:end="51:68">nb_sns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:45"><expr pos:start="57:5" pos:end="59:44"><call pos:start="57:5" pos:end="59:44"><name pos:start="57:5" pos:end="57:18">monitor_printf</name><argument_list pos:start="57:19" pos:end="59:44">(<argument pos:start="57:20" pos:end="57:22"><expr pos:start="57:20" pos:end="57:22"><name pos:start="57:20" pos:end="57:22">mon</name></expr></argument>, <argument pos:start="57:25" pos:end="57:52"><expr pos:start="57:25" pos:end="57:52"><literal type="string" pos:start="57:25" pos:end="57:52">"Snapshot list (from %s):\n"</literal></expr></argument>,

                   <argument pos:start="59:20" pos:end="59:43"><expr pos:start="59:20" pos:end="59:43"><call pos:start="59:20" pos:end="59:43"><name pos:start="59:20" pos:end="59:39">bdrv_get_device_name</name><argument_list pos:start="59:40" pos:end="59:43">(<argument pos:start="59:41" pos:end="59:42"><expr pos:start="59:41" pos:end="59:42"><name pos:start="59:41" pos:end="59:42">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:76"><expr pos:start="61:5" pos:end="61:75"><call pos:start="61:5" pos:end="61:75"><name pos:start="61:5" pos:end="61:18">monitor_printf</name><argument_list pos:start="61:19" pos:end="61:75">(<argument pos:start="61:20" pos:end="61:22"><expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">mon</name></expr></argument>, <argument pos:start="61:25" pos:end="61:30"><expr pos:start="61:25" pos:end="61:30"><literal type="string" pos:start="61:25" pos:end="61:30">"%s\n"</literal></expr></argument>, <argument pos:start="61:33" pos:end="61:74"><expr pos:start="61:33" pos:end="61:74"><call pos:start="61:33" pos:end="61:74"><name pos:start="61:33" pos:end="61:50">bdrv_snapshot_dump</name><argument_list pos:start="61:51" pos:end="61:74">(<argument pos:start="61:52" pos:end="61:54"><expr pos:start="61:52" pos:end="61:54"><name pos:start="61:52" pos:end="61:54">buf</name></expr></argument>, <argument pos:start="61:57" pos:end="61:67"><expr pos:start="61:57" pos:end="61:67"><sizeof pos:start="61:57" pos:end="61:67">sizeof<argument_list pos:start="61:63" pos:end="61:67">(<argument pos:start="61:64" pos:end="61:66"><expr pos:start="61:64" pos:end="61:66"><name pos:start="61:64" pos:end="61:66">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="61:70" pos:end="61:73"><expr pos:start="61:70" pos:end="61:73"><name pos:start="61:70" pos:end="61:73">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="69:5">for<control pos:start="63:8" pos:end="63:31">(<init pos:start="63:9" pos:end="63:14"><expr pos:start="63:9" pos:end="63:13"><name pos:start="63:9" pos:end="63:9">i</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <literal type="number" pos:start="63:13" pos:end="63:13">0</literal></expr>;</init> <condition pos:start="63:16" pos:end="63:26"><expr pos:start="63:16" pos:end="63:25"><name pos:start="63:16" pos:end="63:16">i</name> <operator pos:start="63:18" pos:end="63:18">&lt;</operator> <name pos:start="63:20" pos:end="63:25">nb_sns</name></expr>;</condition> <incr pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:28">i</name><operator pos:start="63:29" pos:end="63:30">++</operator></expr></incr>)</control> <block pos:start="63:33" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:78">

        <expr_stmt pos:start="65:9" pos:end="65:24"><expr pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:10">sn</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:23"><name pos:start="65:15" pos:end="65:20">sn_tab</name><index pos:start="65:21" pos:end="65:23">[<expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:78"><expr pos:start="67:9" pos:end="67:77"><call pos:start="67:9" pos:end="67:77"><name pos:start="67:9" pos:end="67:22">monitor_printf</name><argument_list pos:start="67:23" pos:end="67:77">(<argument pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:26">mon</name></expr></argument>, <argument pos:start="67:29" pos:end="67:34"><expr pos:start="67:29" pos:end="67:34"><literal type="string" pos:start="67:29" pos:end="67:34">"%s\n"</literal></expr></argument>, <argument pos:start="67:37" pos:end="67:76"><expr pos:start="67:37" pos:end="67:76"><call pos:start="67:37" pos:end="67:76"><name pos:start="67:37" pos:end="67:54">bdrv_snapshot_dump</name><argument_list pos:start="67:55" pos:end="67:76">(<argument pos:start="67:56" pos:end="67:58"><expr pos:start="67:56" pos:end="67:58"><name pos:start="67:56" pos:end="67:58">buf</name></expr></argument>, <argument pos:start="67:61" pos:end="67:71"><expr pos:start="67:61" pos:end="67:71"><sizeof pos:start="67:61" pos:end="67:71">sizeof<argument_list pos:start="67:67" pos:end="67:71">(<argument pos:start="67:68" pos:end="67:70"><expr pos:start="67:68" pos:end="67:70"><name pos:start="67:68" pos:end="67:70">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:74" pos:end="67:75"><expr pos:start="67:74" pos:end="67:75"><name pos:start="67:74" pos:end="67:75">sn</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="71:5" pos:end="71:22"><expr pos:start="71:5" pos:end="71:21"><call pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:13">qemu_free</name><argument_list pos:start="71:14" pos:end="71:21">(<argument pos:start="71:15" pos:end="71:20"><expr pos:start="71:15" pos:end="71:20"><name pos:start="71:15" pos:end="71:20">sn_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
