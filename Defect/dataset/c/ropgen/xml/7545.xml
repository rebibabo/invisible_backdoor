<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7545.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:20">qsb_write_at</name><parameter_list pos:start="1:21" pos:end="3:45">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:36">QEMUSizedBuffer</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">qsb</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:64"><decl pos:start="1:44" pos:end="1:64"><type pos:start="1:44" pos:end="1:64"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:64">source</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:30"><decl pos:start="3:22" pos:end="3:30"><type pos:start="3:22" pos:end="3:30"><name pos:start="3:22" pos:end="3:26">off_t</name></type> <name pos:start="3:28" pos:end="3:30">pos</name></decl></parameter>, <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:38">size_t</name></type> <name pos:start="3:40" pos:end="3:44">count</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:17">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:14">rc</name> <init pos:start="7:16" pos:end="7:43">= <expr pos:start="7:18" pos:end="7:43"><call pos:start="7:18" pos:end="7:43"><name pos:start="7:18" pos:end="7:25">qsb_grow</name><argument_list pos:start="7:26" pos:end="7:43">(<argument pos:start="7:27" pos:end="7:29"><expr pos:start="7:27" pos:end="7:29"><name pos:start="7:27" pos:end="7:29">qsb</name></expr></argument>, <argument pos:start="7:32" pos:end="7:42"><expr pos:start="7:32" pos:end="7:42"><name pos:start="7:32" pos:end="7:34">pos</name> <operator pos:start="7:36" pos:end="7:36">+</operator> <name pos:start="7:38" pos:end="7:42">count</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:18">to_copy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:19">all_copy</name> <init pos:start="11:21" pos:end="11:27">= <expr pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:27">count</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:24"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:22"><name pos:start="13:11" pos:end="13:16">struct</name> <name pos:start="13:18" pos:end="13:22">iovec</name></name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:27">iov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">ssize_t</name></type> <name pos:start="15:13" pos:end="15:17">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:14">dest</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">off_t</name></type> <name pos:start="19:11" pos:end="19:15">d_off</name></decl>, <decl pos:start="19:18" pos:end="19:26"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:18" pos:end="19:22">s_off</name> <init pos:start="19:24" pos:end="19:26">= <expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:10">rc</name> <operator pos:start="23:12" pos:end="23:12">&lt;</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>)</condition> <block pos:start="23:17" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><name pos:start="25:16" pos:end="25:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:11">pos</name> <operator pos:start="31:13" pos:end="31:13">+</operator> <name pos:start="31:15" pos:end="31:19">count</name> <operator pos:start="31:21" pos:end="31:21">&gt;</operator> <name pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:25">qsb</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:31">used</name></name></expr>)</condition> <block pos:start="31:34" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:32">

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:11">qsb</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:17">used</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:23">pos</name> <operator pos:start="33:25" pos:end="33:25">+</operator> <name pos:start="33:27" pos:end="33:31">count</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:44"><expr pos:start="39:5" pos:end="39:43"><name pos:start="39:5" pos:end="39:9">index</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:25">qsb_get_iovec</name><argument_list pos:start="39:26" pos:end="39:43">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">qsb</name></expr></argument>, <argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">pos</name></expr></argument>, <argument pos:start="39:37" pos:end="39:42"><expr pos:start="39:37" pos:end="39:42"><operator pos:start="39:37" pos:end="39:37">&amp;</operator><name pos:start="39:38" pos:end="39:42">d_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:13">index</name> <operator pos:start="41:15" pos:end="41:15">&lt;</operator> <literal type="number" pos:start="41:17" pos:end="41:17">0</literal></expr>)</condition> <block pos:start="41:20" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:23">

        <return pos:start="43:9" pos:end="43:23">return <expr pos:start="43:16" pos:end="43:22"><operator pos:start="43:16" pos:end="43:16">-</operator><name pos:start="43:17" pos:end="43:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="49:5" pos:end="83:5">while <condition pos:start="49:11" pos:end="49:24">(<expr pos:start="49:12" pos:end="49:23"><name pos:start="49:12" pos:end="49:19">all_copy</name> <operator pos:start="49:21" pos:end="49:21">&gt;</operator> <literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>)</condition> <block pos:start="49:26" pos:end="83:5">{<block_content pos:start="51:9" pos:end="81:16">

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:11">iov</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">&amp;</operator><name pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:18">qsb</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:23">iov</name><index pos:start="51:24" pos:end="51:30">[<expr pos:start="51:25" pos:end="51:29"><name pos:start="51:25" pos:end="51:29">index</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:12">dest</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:28"><name pos:start="55:16" pos:end="55:18">iov</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:28">iov_base</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:39"><expr pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:15">to_copy</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:30"><name pos:start="59:19" pos:end="59:21">iov</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:30">iov_len</name></name> <operator pos:start="59:32" pos:end="59:32">-</operator> <name pos:start="59:34" pos:end="59:38">d_off</name></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:31">(<expr pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:19">to_copy</name> <operator pos:start="61:21" pos:end="61:21">&gt;</operator> <name pos:start="61:23" pos:end="61:30">all_copy</name></expr>)</condition> <block pos:start="61:33" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:31">

            <expr_stmt pos:start="63:13" pos:end="63:31"><expr pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:19">to_copy</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:30">all_copy</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:54"><expr pos:start="69:9" pos:end="69:53"><call pos:start="69:9" pos:end="69:53"><name pos:start="69:9" pos:end="69:14">memcpy</name><argument_list pos:start="69:15" pos:end="69:53">(<argument pos:start="69:16" pos:end="69:27"><expr pos:start="69:16" pos:end="69:27"><operator pos:start="69:16" pos:end="69:16">&amp;</operator><name pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:20">dest</name><index pos:start="69:21" pos:end="69:27">[<expr pos:start="69:22" pos:end="69:26"><name pos:start="69:22" pos:end="69:26">d_off</name></expr>]</index></name></expr></argument>, <argument pos:start="69:30" pos:end="69:43"><expr pos:start="69:30" pos:end="69:43"><operator pos:start="69:30" pos:end="69:30">&amp;</operator><name pos:start="69:31" pos:end="69:43"><name pos:start="69:31" pos:end="69:36">source</name><index pos:start="69:37" pos:end="69:43">[<expr pos:start="69:38" pos:end="69:42"><name pos:start="69:38" pos:end="69:42">s_off</name></expr>]</index></name></expr></argument>, <argument pos:start="69:46" pos:end="69:52"><expr pos:start="69:46" pos:end="69:52"><name pos:start="69:46" pos:end="69:52">to_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:25"><expr pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:13">s_off</name> <operator pos:start="73:15" pos:end="73:16">+=</operator> <name pos:start="73:18" pos:end="73:24">to_copy</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:28"><expr pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:16">all_copy</name> <operator pos:start="75:18" pos:end="75:19">-=</operator> <name pos:start="75:21" pos:end="75:27">to_copy</name></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:18"><expr pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:13">d_off</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <literal type="number" pos:start="79:17" pos:end="79:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:16"><expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:13">index</name><operator pos:start="81:14" pos:end="81:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="87:5" pos:end="87:17">return <expr pos:start="87:12" pos:end="87:16"><name pos:start="87:12" pos:end="87:16">count</name></expr>;</return>

</block_content>}</block></function>
</unit>
