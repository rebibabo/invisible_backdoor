<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10072.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">audio_decode_frame</name><parameter_list pos:start="1:30" pos:end="1:82">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:40">VideoState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">is</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:64">audio_buf</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:81"><decl pos:start="1:67" pos:end="1:81"><type pos:start="1:67" pos:end="1:81"><name pos:start="1:67" pos:end="1:72">double</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:81">pts_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVPacket</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">pkt</name> <init pos:start="5:19" pos:end="5:34">= <expr pos:start="5:21" pos:end="5:34"><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:23">is</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">audio_pkt</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>, <decl pos:start="7:12" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:15">len1</name></decl>, <decl pos:start="7:18" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:26">data_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:14">pts</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="119:5">for<control pos:start="13:8" pos:end="13:11">(<init pos:start="13:9" pos:end="13:9">;</init><condition pos:start="13:10" pos:end="13:10">;</condition><incr/>)</control> <block pos:start="13:13" pos:end="119:5">{<block_content pos:start="17:9" pos:end="117:9">

        <comment type="block" pos:start="15:9" pos:end="15:63">/* NOTE: the audio packet can contain several frames */</comment>

        <while pos:start="17:9" pos:end="79:9">while <condition pos:start="17:15" pos:end="17:38">(<expr pos:start="17:16" pos:end="17:37"><name pos:start="17:16" pos:end="17:33"><name pos:start="17:16" pos:end="17:17">is</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:33">audio_pkt_size</name></name> <operator pos:start="17:35" pos:end="17:35">&gt;</operator> <literal type="number" pos:start="17:37" pos:end="17:37">0</literal></expr>)</condition> <block pos:start="17:40" pos:end="79:9">{<block_content pos:start="19:13" pos:end="77:29">

            <expr_stmt pos:start="19:13" pos:end="23:80"><expr pos:start="19:13" pos:end="23:79"><name pos:start="19:13" pos:end="19:16">len1</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="23:79"><name pos:start="19:20" pos:end="19:39">avcodec_decode_audio</name><argument_list pos:start="19:40" pos:end="23:79">(<argument pos:start="19:41" pos:end="19:60"><expr pos:start="19:41" pos:end="19:60"><operator pos:start="19:41" pos:end="19:41">&amp;</operator><name pos:start="19:42" pos:end="19:60"><name pos:start="19:42" pos:end="19:43">is</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:53">audio_st</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:60">codec</name></name></expr></argument>, 

                                        <argument pos:start="21:41" pos:end="21:60"><expr pos:start="21:41" pos:end="21:60"><operator pos:start="21:41" pos:end="21:41">(</operator><name pos:start="21:42" pos:end="21:48">int16_t</name> <operator pos:start="21:50" pos:end="21:50">*</operator><operator pos:start="21:51" pos:end="21:51">)</operator><name pos:start="21:52" pos:end="21:60">audio_buf</name></expr></argument>, <argument pos:start="21:63" pos:end="21:72"><expr pos:start="21:63" pos:end="21:72"><operator pos:start="21:63" pos:end="21:63">&amp;</operator><name pos:start="21:64" pos:end="21:72">data_size</name></expr></argument>, 

                                        <argument pos:start="23:41" pos:end="23:58"><expr pos:start="23:41" pos:end="23:58"><name pos:start="23:41" pos:end="23:58"><name pos:start="23:41" pos:end="23:42">is</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:58">audio_pkt_data</name></name></expr></argument>, <argument pos:start="23:61" pos:end="23:78"><expr pos:start="23:61" pos:end="23:78"><name pos:start="23:61" pos:end="23:78"><name pos:start="23:61" pos:end="23:62">is</name><operator pos:start="23:63" pos:end="23:64">-&gt;</operator><name pos:start="23:65" pos:end="23:78">audio_pkt_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="33:13"><if pos:start="25:13" pos:end="33:13">if <condition pos:start="25:16" pos:end="25:25">(<expr pos:start="25:17" pos:end="25:24"><name pos:start="25:17" pos:end="25:20">len1</name> <operator pos:start="25:22" pos:end="25:22">&lt;</operator> <literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr>)</condition> <block pos:start="25:27" pos:end="33:13">{<block_content pos:start="29:17" pos:end="31:22">

                <comment type="block" pos:start="27:17" pos:end="27:49">/* if error, we skip the frame */</comment>

                <expr_stmt pos:start="29:17" pos:end="29:39"><expr pos:start="29:17" pos:end="29:38"><name pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:18">is</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:34">audio_pkt_size</name></name> <operator pos:start="29:36" pos:end="29:36">=</operator> <literal type="number" pos:start="29:38" pos:end="29:38">0</literal></expr>;</expr_stmt>

                <break pos:start="31:17" pos:end="31:22">break;</break>

            </block_content>}</block></if></if_stmt>

            

            <expr_stmt pos:start="37:13" pos:end="37:39"><expr pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:14">is</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:30">audio_pkt_data</name></name> <operator pos:start="37:32" pos:end="37:33">+=</operator> <name pos:start="37:35" pos:end="37:38">len1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:39"><expr pos:start="39:13" pos:end="39:38"><name pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:14">is</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:30">audio_pkt_size</name></name> <operator pos:start="39:32" pos:end="39:33">-=</operator> <name pos:start="39:35" pos:end="39:38">len1</name></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="43:25"><if pos:start="41:13" pos:end="43:25">if <condition pos:start="41:16" pos:end="41:31">(<expr pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:25">data_size</name> <operator pos:start="41:27" pos:end="41:28">&lt;=</operator> <literal type="number" pos:start="41:30" pos:end="41:30">0</literal></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:25"><block_content pos:start="43:17" pos:end="43:25">

                <continue pos:start="43:17" pos:end="43:25">continue;</continue></block_content></block></if></if_stmt>

            <comment type="block" pos:start="45:13" pos:end="45:44">/* if no pts, then compute it */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:15">pts</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:33"><name pos:start="47:19" pos:end="47:20">is</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:33">audio_clock</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:27"><expr pos:start="49:13" pos:end="49:26"><operator pos:start="49:13" pos:end="49:13">*</operator><name pos:start="49:14" pos:end="49:20">pts_ptr</name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:26">pts</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:49"><expr pos:start="51:13" pos:end="51:48"><name pos:start="51:13" pos:end="51:13">n</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">2</literal> <operator pos:start="51:19" pos:end="51:19">*</operator> <name pos:start="51:21" pos:end="51:48"><name pos:start="51:21" pos:end="51:22">is</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:32">audio_st</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:39">codec</name><operator pos:start="51:40" pos:end="51:40">.</operator><name pos:start="51:41" pos:end="51:48">channels</name></name></expr>;</expr_stmt>

<expr_stmt pos:start="53:1" pos:end="53:115"><expr pos:start="53:1" pos:end="53:114"><call pos:start="53:1" pos:end="53:114"><name pos:start="53:1" pos:end="53:6">printf</name><argument_list pos:start="53:7" pos:end="53:114">(<argument pos:start="53:8" pos:end="53:22"><expr pos:start="53:8" pos:end="53:22"><literal type="string" pos:start="53:8" pos:end="53:22">"%f %d %d %d\n"</literal></expr></argument>, <argument pos:start="53:25" pos:end="53:39"><expr pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:26">is</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:39">audio_clock</name></name></expr></argument>, <argument pos:start="53:42" pos:end="53:69"><expr pos:start="53:42" pos:end="53:69"><name pos:start="53:42" pos:end="53:69"><name pos:start="53:42" pos:end="53:43">is</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:53">audio_st</name><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:60">codec</name><operator pos:start="53:61" pos:end="53:61">.</operator><name pos:start="53:62" pos:end="53:69">channels</name></name></expr></argument>, <argument pos:start="53:72" pos:end="53:80"><expr pos:start="53:72" pos:end="53:80"><name pos:start="53:72" pos:end="53:80">data_size</name></expr></argument>, <argument pos:start="53:83" pos:end="53:113"><expr pos:start="53:83" pos:end="53:113"><name pos:start="53:83" pos:end="53:113"><name pos:start="53:83" pos:end="53:84">is</name><operator pos:start="53:85" pos:end="53:86">-&gt;</operator><name pos:start="53:87" pos:end="53:94">audio_st</name><operator pos:start="53:95" pos:end="53:96">-&gt;</operator><name pos:start="53:97" pos:end="53:101">codec</name><operator pos:start="53:102" pos:end="53:102">.</operator><name pos:start="53:103" pos:end="53:113">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="60:0"><expr pos:start="55:13" pos:end="57:61"><name pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:14">is</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:27">audio_clock</name></name> <operator pos:start="55:29" pos:end="55:30">+=</operator> <operator pos:start="55:32" pos:end="55:32">(</operator><name pos:start="55:33" pos:end="55:38">double</name><operator pos:start="55:39" pos:end="55:39">)</operator><name pos:start="55:40" pos:end="55:48">data_size</name> <operator pos:start="55:50" pos:end="55:50">/</operator> 

                <operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:23">double</name><operator pos:start="57:24" pos:end="57:24">)</operator><operator pos:start="57:25" pos:end="57:25">(</operator><name pos:start="57:26" pos:end="57:26">n</name> <operator pos:start="57:28" pos:end="57:28">*</operator> <name pos:start="57:30" pos:end="57:60"><name pos:start="57:30" pos:end="57:31">is</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:41">audio_st</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:48">codec</name><operator pos:start="57:49" pos:end="57:49">.</operator><name pos:start="57:50" pos:end="57:60">sample_rate</name></name><operator pos:start="57:61" pos:end="57:61">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="59:1" pos:end="59:23">#<cpp:directive pos:start="59:2" pos:end="59:3">if</cpp:directive> <expr pos:start="59:5" pos:end="59:23"><call pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:11">defined</name><argument_list pos:start="59:12" pos:end="59:23">(<argument pos:start="59:13" pos:end="59:22"><expr pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:22">DEBUG_SYNC</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <block pos:start="61:13" pos:end="76:0">{<block_content pos:start="63:17" pos:end="71:45">

                <decl_stmt pos:start="63:17" pos:end="63:41"><decl pos:start="63:17" pos:end="63:40"><type pos:start="63:17" pos:end="63:29"><specifier pos:start="63:17" pos:end="63:22">static</specifier> <name pos:start="63:24" pos:end="63:29">double</name></type> <name pos:start="63:31" pos:end="63:40">last_clock</name></decl>;</decl_stmt>

                <expr_stmt pos:start="65:17" pos:end="69:45"><expr pos:start="65:17" pos:end="69:44"><call pos:start="65:17" pos:end="69:44"><name pos:start="65:17" pos:end="65:22">printf</name><argument_list pos:start="65:23" pos:end="69:44">(<argument pos:start="65:24" pos:end="65:67"><expr pos:start="65:24" pos:end="65:67"><literal type="string" pos:start="65:24" pos:end="65:67">"audio: delay=%0.3f clock=%0.3f pts=%0.3f\n"</literal></expr></argument>,

                       <argument pos:start="67:24" pos:end="67:51"><expr pos:start="67:24" pos:end="67:51"><name pos:start="67:24" pos:end="67:38"><name pos:start="67:24" pos:end="67:25">is</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:38">audio_clock</name></name> <operator pos:start="67:40" pos:end="67:40">-</operator> <name pos:start="67:42" pos:end="67:51">last_clock</name></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:38"><expr pos:start="69:24" pos:end="69:38"><name pos:start="69:24" pos:end="69:38"><name pos:start="69:24" pos:end="69:25">is</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:38">audio_clock</name></name></expr></argument>, <argument pos:start="69:41" pos:end="69:43"><expr pos:start="69:41" pos:end="69:43"><name pos:start="69:41" pos:end="69:43">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:45"><expr pos:start="71:17" pos:end="71:44"><name pos:start="71:17" pos:end="71:26">last_clock</name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:44"><name pos:start="71:30" pos:end="71:31">is</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:44">audio_clock</name></name></expr>;</expr_stmt>

            </block_content>}</block>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

            <return pos:start="77:13" pos:end="77:29">return <expr pos:start="77:20" pos:end="77:28"><name pos:start="77:20" pos:end="77:28">data_size</name></expr>;</return>

        </block_content>}</block></while>



        <comment type="block" pos:start="83:9" pos:end="83:37">/* free the current packet */</comment>

        <if_stmt pos:start="85:9" pos:end="87:32"><if pos:start="85:9" pos:end="87:32">if <condition pos:start="85:12" pos:end="85:22">(<expr pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:15">pkt</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:21">data</name></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:32"><block_content pos:start="87:13" pos:end="87:32">

            <expr_stmt pos:start="87:13" pos:end="87:32"><expr pos:start="87:13" pos:end="87:31"><call pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:26">av_free_packet</name><argument_list pos:start="87:27" pos:end="87:31">(<argument pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        

        <if_stmt pos:start="91:9" pos:end="95:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:51">(<expr pos:start="91:13" pos:end="91:50"><name pos:start="91:13" pos:end="91:22"><name pos:start="91:13" pos:end="91:14">is</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:22">paused</name></name> <operator pos:start="91:24" pos:end="91:25">||</operator> <name pos:start="91:27" pos:end="91:50"><name pos:start="91:27" pos:end="91:28">is</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:36">audioq</name><operator pos:start="91:37" pos:end="91:37">.</operator><name pos:start="91:38" pos:end="91:50">abort_request</name></name></expr>)</condition> <block pos:start="91:53" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:22">

            <return pos:start="93:13" pos:end="93:22">return <expr pos:start="93:20" pos:end="93:21"><operator pos:start="93:20" pos:end="93:20">-</operator><literal type="number" pos:start="93:21" pos:end="93:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        

        <comment type="block" pos:start="99:9" pos:end="99:30">/* read next packet */</comment>

        <if_stmt pos:start="101:9" pos:end="103:22"><if pos:start="101:9" pos:end="103:22">if <condition pos:start="101:12" pos:end="101:54">(<expr pos:start="101:13" pos:end="101:53"><call pos:start="101:13" pos:end="101:49"><name pos:start="101:13" pos:end="101:28">packet_queue_get</name><argument_list pos:start="101:29" pos:end="101:49">(<argument pos:start="101:30" pos:end="101:40"><expr pos:start="101:30" pos:end="101:40"><operator pos:start="101:30" pos:end="101:30">&amp;</operator><name pos:start="101:31" pos:end="101:40"><name pos:start="101:31" pos:end="101:32">is</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:40">audioq</name></name></expr></argument>, <argument pos:start="101:43" pos:end="101:45"><expr pos:start="101:43" pos:end="101:45"><name pos:start="101:43" pos:end="101:45">pkt</name></expr></argument>, <argument pos:start="101:48" pos:end="101:48"><expr pos:start="101:48" pos:end="101:48"><literal type="number" pos:start="101:48" pos:end="101:48">1</literal></expr></argument>)</argument_list></call> <operator pos:start="101:51" pos:end="101:51">&lt;</operator> <literal type="number" pos:start="101:53" pos:end="101:53">0</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:22"><block_content pos:start="103:13" pos:end="103:22">

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:39"><expr pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:26"><name pos:start="105:9" pos:end="105:10">is</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:26">audio_pkt_data</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:38"><name pos:start="105:30" pos:end="105:32">pkt</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:38">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:39"><expr pos:start="107:9" pos:end="107:38"><name pos:start="107:9" pos:end="107:26"><name pos:start="107:9" pos:end="107:10">is</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:26">audio_pkt_size</name></name> <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:38"><name pos:start="107:30" pos:end="107:32">pkt</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:38">size</name></name></expr>;</expr_stmt>

        

        <comment type="block" pos:start="111:9" pos:end="111:52">/* if update the audio clock with the pts */</comment>

        <if_stmt pos:start="113:9" pos:end="117:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:39">(<expr pos:start="113:13" pos:end="113:38"><name pos:start="113:13" pos:end="113:20"><name pos:start="113:13" pos:end="113:15">pkt</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:20">pts</name></name> <operator pos:start="113:22" pos:end="113:23">!=</operator> <name pos:start="113:25" pos:end="113:38">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="113:41" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:62">

            <expr_stmt pos:start="115:13" pos:end="115:62"><expr pos:start="115:13" pos:end="115:61"><name pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:14">is</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:27">audio_clock</name></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <operator pos:start="115:31" pos:end="115:31">(</operator><name pos:start="115:32" pos:end="115:37">double</name><operator pos:start="115:38" pos:end="115:38">)</operator><name pos:start="115:39" pos:end="115:46"><name pos:start="115:39" pos:end="115:41">pkt</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:46">pts</name></name> <operator pos:start="115:48" pos:end="115:48">/</operator> <name pos:start="115:50" pos:end="115:61">AV_TIME_BASE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
