<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6255.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">virtio_input_send</name><parameter_list pos:start="1:23" pos:end="1:70">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:34">VirtIOInput</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">vinput</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:69"><decl pos:start="1:45" pos:end="1:69"><type pos:start="1:45" pos:end="1:69"><name pos:start="1:45" pos:end="1:62">virtio_input_event</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">event</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:23">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">VirtQueueElement</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:26">elem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:17">have</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:20" pos:end="7:23">need</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">len</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:23"><name pos:start="13:10" pos:end="13:15">vinput</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:23">active</name></name></expr>)</condition> <block pos:start="13:26" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:29">/* queue up events ... */</comment>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:40">(<expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:14">vinput</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:22">qindex</name></name> <operator pos:start="23:24" pos:end="23:25">==</operator> <name pos:start="23:27" pos:end="23:39"><name pos:start="23:27" pos:end="23:32">vinput</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:39">qsize</name></name></expr>)</condition> <block pos:start="23:42" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:62">

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:14">vinput</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:21">qsize</name></name><operator pos:start="25:22" pos:end="25:23">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="29:62"><expr pos:start="27:9" pos:end="29:61"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:14">vinput</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">queue</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <call pos:start="27:25" pos:end="29:61"><name pos:start="27:25" pos:end="27:33">g_realloc</name><argument_list pos:start="27:34" pos:end="29:61">(<argument pos:start="27:35" pos:end="27:47"><expr pos:start="27:35" pos:end="27:47"><name pos:start="27:35" pos:end="27:47"><name pos:start="27:35" pos:end="27:40">vinput</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:47">queue</name></name></expr></argument>, <argument pos:start="27:50" pos:end="29:60"><expr pos:start="27:50" pos:end="29:60"><name pos:start="27:50" pos:end="27:62"><name pos:start="27:50" pos:end="27:55">vinput</name><operator pos:start="27:56" pos:end="27:57">-&gt;</operator><name pos:start="27:58" pos:end="27:62">qsize</name></name> <operator pos:start="27:64" pos:end="27:64">*</operator>

                                  <sizeof pos:start="29:35" pos:end="29:60">sizeof<argument_list pos:start="29:41" pos:end="29:60">(<argument pos:start="29:42" pos:end="29:59"><expr pos:start="29:42" pos:end="29:59"><name pos:start="29:42" pos:end="29:59">virtio_input_event</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:10">vinput</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:17">queue</name><index pos:start="33:18" pos:end="33:35">[<expr pos:start="33:19" pos:end="33:34"><name pos:start="33:19" pos:end="33:32"><name pos:start="33:19" pos:end="33:24">vinput</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:32">qindex</name></name><operator pos:start="33:33" pos:end="33:34">++</operator></expr>]</index></name> <operator pos:start="33:37" pos:end="33:37">=</operator> <operator pos:start="33:39" pos:end="33:39">*</operator><name pos:start="33:40" pos:end="33:44">event</name></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:44">/* ... until we see a report sync ... */</comment>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="41:47">(<expr pos:start="39:9" pos:end="41:46"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:13">event</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:19">type</name></name> <operator pos:start="39:21" pos:end="39:22">!=</operator> <call pos:start="39:24" pos:end="39:42"><name pos:start="39:24" pos:end="39:34">cpu_to_le16</name><argument_list pos:start="39:35" pos:end="39:42">(<argument pos:start="39:36" pos:end="39:41"><expr pos:start="39:36" pos:end="39:41"><name pos:start="39:36" pos:end="39:41">EV_SYN</name></expr></argument>)</argument_list></call> <operator pos:start="39:44" pos:end="39:45">||</operator>

        <name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:13">event</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:19">code</name></name> <operator pos:start="41:21" pos:end="41:22">!=</operator> <call pos:start="41:24" pos:end="41:46"><name pos:start="41:24" pos:end="41:34">cpu_to_le16</name><argument_list pos:start="41:35" pos:end="41:46">(<argument pos:start="41:36" pos:end="41:45"><expr pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:45">SYN_REPORT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:49" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:15">

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:44">/* ... then check available space ... */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:55"><expr pos:start="51:5" pos:end="51:54"><name pos:start="51:5" pos:end="51:8">need</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <sizeof pos:start="51:12" pos:end="51:37">sizeof<argument_list pos:start="51:18" pos:end="51:37">(<argument pos:start="51:19" pos:end="51:36"><expr pos:start="51:19" pos:end="51:36"><name pos:start="51:19" pos:end="51:36">virtio_input_event</name></expr></argument>)</argument_list></sizeof> <operator pos:start="51:39" pos:end="51:39">*</operator> <name pos:start="51:41" pos:end="51:54"><name pos:start="51:41" pos:end="51:46">vinput</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:54">qindex</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:65"><expr pos:start="53:5" pos:end="53:64"><call pos:start="53:5" pos:end="53:64"><name pos:start="53:5" pos:end="53:29">virtqueue_get_avail_bytes</name><argument_list pos:start="53:30" pos:end="53:64">(<argument pos:start="53:31" pos:end="53:41"><expr pos:start="53:31" pos:end="53:41"><name pos:start="53:31" pos:end="53:41"><name pos:start="53:31" pos:end="53:36">vinput</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:41">evt</name></name></expr></argument>, <argument pos:start="53:44" pos:end="53:48"><expr pos:start="53:44" pos:end="53:48"><operator pos:start="53:44" pos:end="53:44">&amp;</operator><name pos:start="53:45" pos:end="53:48">have</name></expr></argument>, <argument pos:start="53:51" pos:end="53:54"><expr pos:start="53:51" pos:end="53:54"><name pos:start="53:51" pos:end="53:54">NULL</name></expr></argument>, <argument pos:start="53:57" pos:end="53:60"><expr pos:start="53:57" pos:end="53:60"><name pos:start="53:57" pos:end="53:60">need</name></expr></argument>, <argument pos:start="53:63" pos:end="53:63"><expr pos:start="53:63" pos:end="53:63"><literal type="number" pos:start="53:63" pos:end="53:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:20">(<expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:12">have</name> <operator pos:start="55:14" pos:end="55:14">&lt;</operator> <name pos:start="55:16" pos:end="55:19">need</name></expr>)</condition> <block pos:start="55:22" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:15">

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:14">vinput</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:22">qindex</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <literal type="number" pos:start="57:26" pos:end="57:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><call pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:37">trace_virtio_input_queue_full</name><argument_list pos:start="59:38" pos:end="59:39">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:48">/* ... and finally pass them to the guest */</comment>

    <for pos:start="69:5" pos:end="91:5">for <control pos:start="69:9" pos:end="69:40">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:35"><expr pos:start="69:17" pos:end="69:34"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:26">vinput</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:34">qindex</name></name></expr>;</condition> <incr pos:start="69:37" pos:end="69:39"><expr pos:start="69:37" pos:end="69:39"><name pos:start="69:37" pos:end="69:37">i</name><operator pos:start="69:38" pos:end="69:39">++</operator></expr></incr>)</control> <block pos:start="69:42" pos:end="91:5">{<block_content pos:start="71:9" pos:end="89:21">

        <expr_stmt pos:start="71:9" pos:end="71:68"><expr pos:start="71:9" pos:end="71:67"><name pos:start="71:9" pos:end="71:12">elem</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="71:67"><name pos:start="71:16" pos:end="71:28">virtqueue_pop</name><argument_list pos:start="71:29" pos:end="71:67">(<argument pos:start="71:30" pos:end="71:40"><expr pos:start="71:30" pos:end="71:40"><name pos:start="71:30" pos:end="71:40"><name pos:start="71:30" pos:end="71:35">vinput</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:40">evt</name></name></expr></argument>, <argument pos:start="71:43" pos:end="71:66"><expr pos:start="71:43" pos:end="71:66"><sizeof pos:start="71:43" pos:end="71:66">sizeof<argument_list pos:start="71:49" pos:end="71:66">(<argument pos:start="71:50" pos:end="71:65"><expr pos:start="71:50" pos:end="71:65"><name pos:start="71:50" pos:end="71:65">VirtQueueElement</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:18">(<expr pos:start="73:13" pos:end="73:17"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:17">elem</name></expr>)</condition> <block pos:start="73:20" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:19">

            <comment type="block" pos:start="75:13" pos:end="75:71">/* should not happen, we've checked for space beforehand */</comment>

            <expr_stmt pos:start="77:13" pos:end="77:78"><expr pos:start="77:13" pos:end="77:77"><call pos:start="77:13" pos:end="77:77"><name pos:start="77:13" pos:end="77:19">fprintf</name><argument_list pos:start="77:20" pos:end="77:77">(<argument pos:start="77:21" pos:end="77:26"><expr pos:start="77:21" pos:end="77:26"><name pos:start="77:21" pos:end="77:26">stderr</name></expr></argument>, <argument pos:start="77:29" pos:end="77:66"><expr pos:start="77:29" pos:end="77:66"><literal type="string" pos:start="77:29" pos:end="77:66">"%s: Huh?  No vq elem available ...\n"</literal></expr></argument>, <argument pos:start="77:69" pos:end="77:76"><expr pos:start="77:69" pos:end="77:76"><name pos:start="77:69" pos:end="77:76">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="85:75"><expr pos:start="83:9" pos:end="85:74"><name pos:start="83:9" pos:end="83:11">len</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="85:74"><name pos:start="83:15" pos:end="83:26">iov_from_buf</name><argument_list pos:start="83:27" pos:end="85:74">(<argument pos:start="83:28" pos:end="83:38"><expr pos:start="83:28" pos:end="83:38"><name pos:start="83:28" pos:end="83:38"><name pos:start="83:28" pos:end="83:31">elem</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:38">in_sg</name></name></expr></argument>, <argument pos:start="83:41" pos:end="83:52"><expr pos:start="83:41" pos:end="83:52"><name pos:start="83:41" pos:end="83:52"><name pos:start="83:41" pos:end="83:44">elem</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:52">in_num</name></name></expr></argument>,

                           <argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><literal type="number" pos:start="85:28" pos:end="85:28">0</literal></expr></argument>, <argument pos:start="85:31" pos:end="85:45"><expr pos:start="85:31" pos:end="85:45"><name pos:start="85:31" pos:end="85:43"><name pos:start="85:31" pos:end="85:36">vinput</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:43">queue</name></name><operator pos:start="85:44" pos:end="85:44">+</operator><name pos:start="85:45" pos:end="85:45">i</name></expr></argument>, <argument pos:start="85:48" pos:end="85:73"><expr pos:start="85:48" pos:end="85:73"><sizeof pos:start="85:48" pos:end="85:73">sizeof<argument_list pos:start="85:54" pos:end="85:73">(<argument pos:start="85:55" pos:end="85:72"><expr pos:start="85:55" pos:end="85:72"><name pos:start="85:55" pos:end="85:72">virtio_input_event</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:47"><expr pos:start="87:9" pos:end="87:46"><call pos:start="87:9" pos:end="87:46"><name pos:start="87:9" pos:end="87:22">virtqueue_push</name><argument_list pos:start="87:23" pos:end="87:46">(<argument pos:start="87:24" pos:end="87:34"><expr pos:start="87:24" pos:end="87:34"><name pos:start="87:24" pos:end="87:34"><name pos:start="87:24" pos:end="87:29">vinput</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:34">evt</name></name></expr></argument>, <argument pos:start="87:37" pos:end="87:40"><expr pos:start="87:37" pos:end="87:40"><name pos:start="87:37" pos:end="87:40">elem</name></expr></argument>, <argument pos:start="87:43" pos:end="87:45"><expr pos:start="87:43" pos:end="87:45"><name pos:start="87:43" pos:end="87:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:21"><expr pos:start="89:9" pos:end="89:20"><call pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:14">g_free</name><argument_list pos:start="89:15" pos:end="89:20">(<argument pos:start="89:16" pos:end="89:19"><expr pos:start="89:16" pos:end="89:19"><name pos:start="89:16" pos:end="89:19">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="93:5" pos:end="93:54"><expr pos:start="93:5" pos:end="93:53"><call pos:start="93:5" pos:end="93:53"><name pos:start="93:5" pos:end="93:17">virtio_notify</name><argument_list pos:start="93:18" pos:end="93:53">(<argument pos:start="93:19" pos:end="93:39"><expr pos:start="93:19" pos:end="93:39"><call pos:start="93:19" pos:end="93:39"><name pos:start="93:19" pos:end="93:31">VIRTIO_DEVICE</name><argument_list pos:start="93:32" pos:end="93:39">(<argument pos:start="93:33" pos:end="93:38"><expr pos:start="93:33" pos:end="93:38"><name pos:start="93:33" pos:end="93:38">vinput</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:42" pos:end="93:52"><expr pos:start="93:42" pos:end="93:52"><name pos:start="93:42" pos:end="93:52"><name pos:start="93:42" pos:end="93:47">vinput</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:52">evt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:18"><name pos:start="95:5" pos:end="95:10">vinput</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:18">qindex</name></name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
