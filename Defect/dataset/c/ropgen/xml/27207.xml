<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27207.c" pos:tabs="8"><function pos:start="1:1" pos:end="306:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_pic_hdr</name><parameter_list pos:start="1:26" pos:end="1:70">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:41">IVI45DecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><name pos:start="1:49" pos:end="1:62">AVCodecContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="306:1">{<block_content pos:start="5:5" pos:end="304:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type>             <name pos:start="5:21" pos:end="5:33">pic_size_indx</name></decl>, <decl pos:start="5:36" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:36" pos:end="5:36">i</name></decl>, <decl pos:start="5:39" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:39" pos:end="5:39">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">IVIPicConfig</name></type>    <name pos:start="7:21" pos:end="7:28">pic_conf</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:42">(<expr pos:start="11:9" pos:end="11:41"><call pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:16">get_bits</name><argument_list pos:start="11:17" pos:end="11:30">(<argument pos:start="11:18" pos:end="11:25"><expr pos:start="11:18" pos:end="11:25"><operator pos:start="11:18" pos:end="11:18">&amp;</operator><name pos:start="11:19" pos:end="11:25"><name pos:start="11:19" pos:end="11:21">ctx</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:25">gb</name></name></expr></argument>, <argument pos:start="11:28" pos:end="11:29"><expr pos:start="11:28" pos:end="11:29"><literal type="number" pos:start="11:28" pos:end="11:29">18</literal></expr></argument>)</argument_list></call> <operator pos:start="11:32" pos:end="11:33">!=</operator> <literal type="number" pos:start="11:35" pos:end="11:41">0x3FFF8</literal></expr>)</condition> <block pos:start="11:44" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:35">

        <expr_stmt pos:start="13:9" pos:end="13:69"><expr pos:start="13:9" pos:end="13:68"><call pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:68">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:34"><expr pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:37" pos:end="13:67"><expr pos:start="13:37" pos:end="13:67"><literal type="string" pos:start="13:37" pos:end="13:67">"Invalid picture start code!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:35">return <expr pos:start="15:16" pos:end="15:34"><name pos:start="15:16" pos:end="15:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:7">ctx</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:24">prev_frame_type</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <name pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:30">ctx</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:42">frame_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:7">ctx</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:19">frame_type</name></name>      <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="23:48"><name pos:start="23:28" pos:end="23:35">get_bits</name><argument_list pos:start="23:36" pos:end="23:48">(<argument pos:start="23:37" pos:end="23:44"><expr pos:start="23:37" pos:end="23:44"><operator pos:start="23:37" pos:end="23:37">&amp;</operator><name pos:start="23:38" pos:end="23:44"><name pos:start="23:38" pos:end="23:40">ctx</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:44">gb</name></name></expr></argument>, <argument pos:start="23:47" pos:end="23:47"><expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="36:0"><if pos:start="25:5" pos:end="36:0">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:11">ctx</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:23">frame_type</name></name> <operator pos:start="25:25" pos:end="25:26">==</operator> <literal type="number" pos:start="25:28" pos:end="25:28">7</literal></expr>)</condition> <block pos:start="25:31" pos:end="36:0">{<block_content pos:start="27:9" pos:end="29:35">

        <expr_stmt pos:start="27:9" pos:end="27:81"><expr pos:start="27:9" pos:end="27:80"><call pos:start="27:9" pos:end="27:80"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:80">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:62"><expr pos:start="27:37" pos:end="27:62"><literal type="string" pos:start="27:37" pos:end="27:62">"Invalid frame type: %d\n"</literal></expr></argument>, <argument pos:start="27:65" pos:end="27:79"><expr pos:start="27:65" pos:end="27:79"><name pos:start="27:65" pos:end="27:79"><name pos:start="27:65" pos:end="27:67">ctx</name><operator pos:start="27:68" pos:end="27:69">-&gt;</operator><name pos:start="27:70" pos:end="27:79">frame_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:35">return <expr pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="35:1" pos:end="35:24">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:24">IVI4_STREAM_ANALYSER</name></expr></cpp:if>

    <if_stmt pos:start="37:5" pos:end="42:0"><if pos:start="37:5" pos:end="42:0">if <condition pos:start="37:8" pos:end="37:43">(<expr pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:11">ctx</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:23">frame_type</name></name> <operator pos:start="37:25" pos:end="37:26">==</operator> <name pos:start="37:28" pos:end="37:42">FRAMETYPE_BIDIR</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="42:0"><block_content pos:start="39:9" pos:end="42:0">

        <expr_stmt pos:start="39:9" pos:end="42:0"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:11">ctx</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:25">has_b_frames</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <literal type="number" pos:start="39:29" pos:end="39:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="45:5" pos:end="48:0"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:7">ctx</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:22">transp_status</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:44"><name pos:start="45:26" pos:end="45:34">get_bits1</name><argument_list pos:start="45:35" pos:end="45:44">(<argument pos:start="45:36" pos:end="45:43"><expr pos:start="45:36" pos:end="45:43"><operator pos:start="45:36" pos:end="45:36">&amp;</operator><name pos:start="45:37" pos:end="45:43"><name pos:start="45:37" pos:end="45:39">ctx</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="47:1" pos:end="47:24">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:24">IVI4_STREAM_ANALYSER</name></expr></cpp:if>

    <if_stmt pos:start="49:5" pos:end="56:0"><if pos:start="49:5" pos:end="56:0">if <condition pos:start="49:8" pos:end="49:27">(<expr pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:11">ctx</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:26">transp_status</name></name></expr>)</condition> <block pos:start="49:29" pos:end="56:0">{<block_content pos:start="51:9" pos:end="51:28">

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:11">ctx</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:23">has_transp</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <literal type="number" pos:start="51:27" pos:end="51:27">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="59:5" pos:end="59:72">/* unknown bit: Mac decoder ignores this bit, XANIM returns error */</comment>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:28">(<expr pos:start="61:9" pos:end="61:27"><call pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:17">get_bits1</name><argument_list pos:start="61:18" pos:end="61:27">(<argument pos:start="61:19" pos:end="61:26"><expr pos:start="61:19" pos:end="61:26"><operator pos:start="61:19" pos:end="61:19">&amp;</operator><name pos:start="61:20" pos:end="61:26"><name pos:start="61:20" pos:end="61:22">ctx</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:30" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:35">

        <expr_stmt pos:start="63:9" pos:end="63:58"><expr pos:start="63:9" pos:end="63:57"><call pos:start="63:9" pos:end="63:57"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:57">(<argument pos:start="63:16" pos:end="63:20"><expr pos:start="63:16" pos:end="63:20"><name pos:start="63:16" pos:end="63:20">avctx</name></expr></argument>, <argument pos:start="63:23" pos:end="63:34"><expr pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:37" pos:end="63:56"><expr pos:start="63:37" pos:end="63:56"><literal type="string" pos:start="63:37" pos:end="63:56">"Sync bit is set!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:35">return <expr pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:70"><expr pos:start="71:5" pos:end="71:69"><name pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:7">ctx</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:18">data_size</name></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <ternary pos:start="71:22" pos:end="71:69"><condition pos:start="71:22" pos:end="71:42"><expr pos:start="71:22" pos:end="71:40"><call pos:start="71:22" pos:end="71:40"><name pos:start="71:22" pos:end="71:30">get_bits1</name><argument_list pos:start="71:31" pos:end="71:40">(<argument pos:start="71:32" pos:end="71:39"><expr pos:start="71:32" pos:end="71:39"><operator pos:start="71:32" pos:end="71:32">&amp;</operator><name pos:start="71:33" pos:end="71:39"><name pos:start="71:33" pos:end="71:35">ctx</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:39">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="71:44" pos:end="71:65"> <expr pos:start="71:44" pos:end="71:65"><call pos:start="71:44" pos:end="71:65"><name pos:start="71:44" pos:end="71:51">get_bits</name><argument_list pos:start="71:52" pos:end="71:65">(<argument pos:start="71:53" pos:end="71:60"><expr pos:start="71:53" pos:end="71:60"><operator pos:start="71:53" pos:end="71:53">&amp;</operator><name pos:start="71:54" pos:end="71:60"><name pos:start="71:54" pos:end="71:56">ctx</name><operator pos:start="71:57" pos:end="71:58">-&gt;</operator><name pos:start="71:59" pos:end="71:60">gb</name></name></expr></argument>, <argument pos:start="71:63" pos:end="71:64"><expr pos:start="71:63" pos:end="71:64"><literal type="number" pos:start="71:63" pos:end="71:64">24</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="71:67" pos:end="71:69">: <expr pos:start="71:69" pos:end="71:69"><literal type="number" pos:start="71:69" pos:end="71:69">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:67">/* null frames don't contain anything else so we just return */</comment>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:48">(<expr pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:11">ctx</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:23">frame_type</name></name> <operator pos:start="77:25" pos:end="77:26">&gt;=</operator> <name pos:start="77:28" pos:end="77:47">FRAMETYPE_NULL_FIRST</name></expr>)</condition> <block pos:start="77:50" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:17">

        <expr_stmt pos:start="79:9" pos:end="79:52"><expr pos:start="79:9" pos:end="79:51"><call pos:start="79:9" pos:end="79:51"><name pos:start="79:9" pos:end="79:15">av_dlog</name><argument_list pos:start="79:16" pos:end="79:51">(<argument pos:start="79:17" pos:end="79:21"><expr pos:start="79:17" pos:end="79:21"><name pos:start="79:17" pos:end="79:21">avctx</name></expr></argument>, <argument pos:start="79:24" pos:end="79:50"><expr pos:start="79:24" pos:end="79:50"><literal type="string" pos:start="79:24" pos:end="79:50">"Null frame encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:17">return <expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:71">/* Check key lock status. If enabled - ignore lock word.         */</comment>

    <comment type="block" pos:start="89:5" pos:end="89:71">/* Usually we have to prompt the user for the password, but      */</comment>

    <comment type="block" pos:start="91:5" pos:end="91:71">/* we don't do that because Indeo 4 videos can be decoded anyway */</comment>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:28">(<expr pos:start="93:9" pos:end="93:27"><call pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:17">get_bits1</name><argument_list pos:start="93:18" pos:end="93:27">(<argument pos:start="93:19" pos:end="93:26"><expr pos:start="93:19" pos:end="93:26"><operator pos:start="93:19" pos:end="93:19">&amp;</operator><name pos:start="93:20" pos:end="93:26"><name pos:start="93:20" pos:end="93:22">ctx</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:30" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:53">

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><call pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:22">skip_bits_long</name><argument_list pos:start="95:23" pos:end="95:36">(<argument pos:start="95:24" pos:end="95:31"><expr pos:start="95:24" pos:end="95:31"><operator pos:start="95:24" pos:end="95:24">&amp;</operator><name pos:start="95:25" pos:end="95:31"><name pos:start="95:25" pos:end="95:27">ctx</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:31">gb</name></name></expr></argument>, <argument pos:start="95:34" pos:end="95:35"><expr pos:start="95:34" pos:end="95:35"><literal type="number" pos:start="95:34" pos:end="95:35">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:53"><expr pos:start="97:9" pos:end="97:52"><call pos:start="97:9" pos:end="97:52"><name pos:start="97:9" pos:end="97:15">av_dlog</name><argument_list pos:start="97:16" pos:end="97:52">(<argument pos:start="97:17" pos:end="97:21"><expr pos:start="97:17" pos:end="97:21"><name pos:start="97:17" pos:end="97:21">avctx</name></expr></argument>, <argument pos:start="97:24" pos:end="97:51"><expr pos:start="97:24" pos:end="97:51"><literal type="string" pos:start="97:24" pos:end="97:51">"Password-protected clip!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:42"><expr pos:start="103:5" pos:end="103:41"><name pos:start="103:5" pos:end="103:17">pic_size_indx</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <call pos:start="103:21" pos:end="103:41"><name pos:start="103:21" pos:end="103:28">get_bits</name><argument_list pos:start="103:29" pos:end="103:41">(<argument pos:start="103:30" pos:end="103:37"><expr pos:start="103:30" pos:end="103:37"><operator pos:start="103:30" pos:end="103:30">&amp;</operator><name pos:start="103:31" pos:end="103:37"><name pos:start="103:31" pos:end="103:33">ctx</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:37">gb</name></name></expr></argument>, <argument pos:start="103:40" pos:end="103:40"><expr pos:start="103:40" pos:end="103:40"><literal type="number" pos:start="103:40" pos:end="103:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="117:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:43">(<expr pos:start="105:9" pos:end="105:42"><name pos:start="105:9" pos:end="105:21">pic_size_indx</name> <operator pos:start="105:23" pos:end="105:24">==</operator> <name pos:start="105:26" pos:end="105:42">IVI4_PIC_SIZE_ESC</name></expr>)</condition> <block pos:start="105:45" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:53">

        <expr_stmt pos:start="107:9" pos:end="107:53"><expr pos:start="107:9" pos:end="107:52"><name pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:16">pic_conf</name><operator pos:start="107:17" pos:end="107:17">.</operator><name pos:start="107:18" pos:end="107:27">pic_height</name></name> <operator pos:start="107:29" pos:end="107:29">=</operator> <call pos:start="107:31" pos:end="107:52"><name pos:start="107:31" pos:end="107:38">get_bits</name><argument_list pos:start="107:39" pos:end="107:52">(<argument pos:start="107:40" pos:end="107:47"><expr pos:start="107:40" pos:end="107:47"><operator pos:start="107:40" pos:end="107:40">&amp;</operator><name pos:start="107:41" pos:end="107:47"><name pos:start="107:41" pos:end="107:43">ctx</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:47">gb</name></name></expr></argument>, <argument pos:start="107:50" pos:end="107:51"><expr pos:start="107:50" pos:end="107:51"><literal type="number" pos:start="107:50" pos:end="107:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:53"><expr pos:start="109:9" pos:end="109:52"><name pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:16">pic_conf</name><operator pos:start="109:17" pos:end="109:17">.</operator><name pos:start="109:18" pos:end="109:26">pic_width</name></name>  <operator pos:start="109:29" pos:end="109:29">=</operator> <call pos:start="109:31" pos:end="109:52"><name pos:start="109:31" pos:end="109:38">get_bits</name><argument_list pos:start="109:39" pos:end="109:52">(<argument pos:start="109:40" pos:end="109:47"><expr pos:start="109:40" pos:end="109:47"><operator pos:start="109:40" pos:end="109:40">&amp;</operator><name pos:start="109:41" pos:end="109:47"><name pos:start="109:41" pos:end="109:43">ctx</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:47">gb</name></name></expr></argument>, <argument pos:start="109:50" pos:end="109:51"><expr pos:start="109:50" pos:end="109:51"><literal type="number" pos:start="109:50" pos:end="109:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="117:5">else <block pos:start="111:12" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:75">

        <expr_stmt pos:start="113:9" pos:end="113:75"><expr pos:start="113:9" pos:end="113:74"><name pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:16">pic_conf</name><operator pos:start="113:17" pos:end="113:17">.</operator><name pos:start="113:18" pos:end="113:27">pic_height</name></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <name pos:start="113:31" pos:end="113:74"><name pos:start="113:31" pos:end="113:51">ivi4_common_pic_sizes</name><index pos:start="113:52" pos:end="113:74">[<expr pos:start="113:53" pos:end="113:73"><name pos:start="113:53" pos:end="113:65">pic_size_indx</name> <operator pos:start="113:67" pos:end="113:67">*</operator> <literal type="number" pos:start="113:69" pos:end="113:71">2</literal> <operator pos:start="113:71" pos:end="113:71">+</operator> <literal type="number" pos:start="113:73" pos:end="113:73">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:75"><expr pos:start="115:9" pos:end="115:74"><name pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:16">pic_conf</name><operator pos:start="115:17" pos:end="115:17">.</operator><name pos:start="115:18" pos:end="115:26">pic_width</name></name>  <operator pos:start="115:29" pos:end="115:29">=</operator> <name pos:start="115:31" pos:end="115:74"><name pos:start="115:31" pos:end="115:51">ivi4_common_pic_sizes</name><index pos:start="115:52" pos:end="115:74">[<expr pos:start="115:53" pos:end="115:69"><name pos:start="115:53" pos:end="115:65">pic_size_indx</name> <operator pos:start="115:67" pos:end="115:67">*</operator> <literal type="number" pos:start="115:69" pos:end="115:69">2</literal></expr>    ]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:33">/* Decode tile dimensions. */</comment>

    <if_stmt pos:start="123:5" pos:end="141:5"><if pos:start="123:5" pos:end="135:5">if <condition pos:start="123:8" pos:end="123:28">(<expr pos:start="123:9" pos:end="123:27"><call pos:start="123:9" pos:end="123:27"><name pos:start="123:9" pos:end="123:17">get_bits1</name><argument_list pos:start="123:18" pos:end="123:27">(<argument pos:start="123:19" pos:end="123:26"><expr pos:start="123:19" pos:end="123:26"><operator pos:start="123:19" pos:end="123:19">&amp;</operator><name pos:start="123:20" pos:end="123:26"><name pos:start="123:20" pos:end="123:22">ctx</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:30" pos:end="135:5">{<block_content pos:start="125:9" pos:end="134:0">

        <expr_stmt pos:start="125:9" pos:end="125:91"><expr pos:start="125:9" pos:end="125:90"><name pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:16">pic_conf</name><operator pos:start="125:17" pos:end="125:17">.</operator><name pos:start="125:18" pos:end="125:28">tile_height</name></name> <operator pos:start="125:30" pos:end="125:30">=</operator> <call pos:start="125:32" pos:end="125:90"><name pos:start="125:32" pos:end="125:46">scale_tile_size</name><argument_list pos:start="125:47" pos:end="125:90">(<argument pos:start="125:48" pos:end="125:66"><expr pos:start="125:48" pos:end="125:66"><name pos:start="125:48" pos:end="125:66"><name pos:start="125:48" pos:end="125:55">pic_conf</name><operator pos:start="125:56" pos:end="125:56">.</operator><name pos:start="125:57" pos:end="125:66">pic_height</name></name></expr></argument>, <argument pos:start="125:69" pos:end="125:89"><expr pos:start="125:69" pos:end="125:89"><call pos:start="125:69" pos:end="125:89"><name pos:start="125:69" pos:end="125:76">get_bits</name><argument_list pos:start="125:77" pos:end="125:89">(<argument pos:start="125:78" pos:end="125:85"><expr pos:start="125:78" pos:end="125:85"><operator pos:start="125:78" pos:end="125:78">&amp;</operator><name pos:start="125:79" pos:end="125:85"><name pos:start="125:79" pos:end="125:81">ctx</name><operator pos:start="125:82" pos:end="125:83">-&gt;</operator><name pos:start="125:84" pos:end="125:85">gb</name></name></expr></argument>, <argument pos:start="125:88" pos:end="125:88"><expr pos:start="125:88" pos:end="125:88"><literal type="number" pos:start="125:88" pos:end="125:88">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="130:0"><expr pos:start="127:9" pos:end="127:90"><name pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:16">pic_conf</name><operator pos:start="127:17" pos:end="127:17">.</operator><name pos:start="127:18" pos:end="127:27">tile_width</name></name>  <operator pos:start="127:30" pos:end="127:30">=</operator> <call pos:start="127:32" pos:end="127:90"><name pos:start="127:32" pos:end="127:46">scale_tile_size</name><argument_list pos:start="127:47" pos:end="127:90">(<argument pos:start="127:48" pos:end="127:65"><expr pos:start="127:48" pos:end="127:65"><name pos:start="127:48" pos:end="127:65"><name pos:start="127:48" pos:end="127:55">pic_conf</name><operator pos:start="127:56" pos:end="127:56">.</operator><name pos:start="127:57" pos:end="127:65">pic_width</name></name></expr></argument>,  <argument pos:start="127:69" pos:end="127:89"><expr pos:start="127:69" pos:end="127:89"><call pos:start="127:69" pos:end="127:89"><name pos:start="127:69" pos:end="127:76">get_bits</name><argument_list pos:start="127:77" pos:end="127:89">(<argument pos:start="127:78" pos:end="127:85"><expr pos:start="127:78" pos:end="127:85"><operator pos:start="127:78" pos:end="127:78">&amp;</operator><name pos:start="127:79" pos:end="127:85"><name pos:start="127:79" pos:end="127:81">ctx</name><operator pos:start="127:82" pos:end="127:83">-&gt;</operator><name pos:start="127:84" pos:end="127:85">gb</name></name></expr></argument>, <argument pos:start="127:88" pos:end="127:88"><expr pos:start="127:88" pos:end="127:88"><literal type="number" pos:start="127:88" pos:end="127:88">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="129:1" pos:end="129:24">#<cpp:directive pos:start="129:2" pos:end="129:3">if</cpp:directive> <expr pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:24">IVI4_STREAM_ANALYSER</name></expr></cpp:if>

        <expr_stmt pos:start="131:9" pos:end="134:0"><expr pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:24"><name pos:start="131:9" pos:end="131:11">ctx</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:24">uses_tiling</name></name> <operator pos:start="131:26" pos:end="131:26">=</operator> <literal type="number" pos:start="131:28" pos:end="131:28">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="133:1" pos:end="133:6">#<cpp:directive pos:start="133:2" pos:end="133:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="135:7" pos:end="141:5">else <block pos:start="135:12" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:50">

        <expr_stmt pos:start="137:9" pos:end="137:51"><expr pos:start="137:9" pos:end="137:50"><name pos:start="137:9" pos:end="137:28"><name pos:start="137:9" pos:end="137:16">pic_conf</name><operator pos:start="137:17" pos:end="137:17">.</operator><name pos:start="137:18" pos:end="137:28">tile_height</name></name> <operator pos:start="137:30" pos:end="137:30">=</operator> <name pos:start="137:32" pos:end="137:50"><name pos:start="137:32" pos:end="137:39">pic_conf</name><operator pos:start="137:40" pos:end="137:40">.</operator><name pos:start="137:41" pos:end="137:50">pic_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:50"><expr pos:start="139:9" pos:end="139:49"><name pos:start="139:9" pos:end="139:27"><name pos:start="139:9" pos:end="139:16">pic_conf</name><operator pos:start="139:17" pos:end="139:17">.</operator><name pos:start="139:18" pos:end="139:27">tile_width</name></name>  <operator pos:start="139:30" pos:end="139:30">=</operator> <name pos:start="139:32" pos:end="139:49"><name pos:start="139:32" pos:end="139:39">pic_conf</name><operator pos:start="139:40" pos:end="139:40">.</operator><name pos:start="139:41" pos:end="139:49">pic_width</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="145:5" pos:end="145:66">/* Decode chroma subsampling. We support only 4:4 aka YVU9. */</comment>

    <if_stmt pos:start="147:5" pos:end="153:5"><if pos:start="147:5" pos:end="153:5">if <condition pos:start="147:8" pos:end="147:30">(<expr pos:start="147:9" pos:end="147:29"><call pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:16">get_bits</name><argument_list pos:start="147:17" pos:end="147:29">(<argument pos:start="147:18" pos:end="147:25"><expr pos:start="147:18" pos:end="147:25"><operator pos:start="147:18" pos:end="147:18">&amp;</operator><name pos:start="147:19" pos:end="147:25"><name pos:start="147:19" pos:end="147:21">ctx</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:25">gb</name></name></expr></argument>, <argument pos:start="147:28" pos:end="147:28"><expr pos:start="147:28" pos:end="147:28"><literal type="number" pos:start="147:28" pos:end="147:28">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:32" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:35">

        <expr_stmt pos:start="149:9" pos:end="149:80"><expr pos:start="149:9" pos:end="149:79"><call pos:start="149:9" pos:end="149:79"><name pos:start="149:9" pos:end="149:14">av_log</name><argument_list pos:start="149:15" pos:end="149:79">(<argument pos:start="149:16" pos:end="149:20"><expr pos:start="149:16" pos:end="149:20"><name pos:start="149:16" pos:end="149:20">avctx</name></expr></argument>, <argument pos:start="149:23" pos:end="149:34"><expr pos:start="149:23" pos:end="149:34"><name pos:start="149:23" pos:end="149:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:37" pos:end="149:78"><expr pos:start="149:37" pos:end="149:78"><literal type="string" pos:start="149:37" pos:end="149:78">"Only YVU9 picture format is supported!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="151:9" pos:end="151:35">return <expr pos:start="151:16" pos:end="151:34"><name pos:start="151:16" pos:end="151:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:60"><expr pos:start="155:5" pos:end="155:59"><name pos:start="155:5" pos:end="155:26"><name pos:start="155:5" pos:end="155:12">pic_conf</name><operator pos:start="155:13" pos:end="155:13">.</operator><name pos:start="155:14" pos:end="155:26">chroma_height</name></name> <operator pos:start="155:28" pos:end="155:28">=</operator> <operator pos:start="155:30" pos:end="155:30">(</operator><name pos:start="155:31" pos:end="155:49"><name pos:start="155:31" pos:end="155:38">pic_conf</name><operator pos:start="155:39" pos:end="155:39">.</operator><name pos:start="155:40" pos:end="155:49">pic_height</name></name> <operator pos:start="155:51" pos:end="155:51">+</operator> <literal type="number" pos:start="155:53" pos:end="155:53">3</literal><operator pos:start="155:54" pos:end="155:54">)</operator> <operator pos:start="155:56" pos:end="155:57">&gt;&gt;</operator> <literal type="number" pos:start="155:59" pos:end="155:59">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:60"><expr pos:start="157:5" pos:end="157:59"><name pos:start="157:5" pos:end="157:25"><name pos:start="157:5" pos:end="157:12">pic_conf</name><operator pos:start="157:13" pos:end="157:13">.</operator><name pos:start="157:14" pos:end="157:25">chroma_width</name></name>  <operator pos:start="157:28" pos:end="157:28">=</operator> <operator pos:start="157:30" pos:end="157:30">(</operator><name pos:start="157:31" pos:end="157:48"><name pos:start="157:31" pos:end="157:38">pic_conf</name><operator pos:start="157:39" pos:end="157:39">.</operator><name pos:start="157:40" pos:end="157:48">pic_width</name></name>  <operator pos:start="157:51" pos:end="157:51">+</operator> <literal type="number" pos:start="157:53" pos:end="157:53">3</literal><operator pos:start="157:54" pos:end="157:54">)</operator> <operator pos:start="157:56" pos:end="157:57">&gt;&gt;</operator> <literal type="number" pos:start="157:59" pos:end="157:59">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:42">/* decode subdivision of the planes */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:61"><expr pos:start="163:5" pos:end="163:60"><name pos:start="163:5" pos:end="163:23"><name pos:start="163:5" pos:end="163:12">pic_conf</name><operator pos:start="163:13" pos:end="163:13">.</operator><name pos:start="163:14" pos:end="163:23">luma_bands</name></name> <operator pos:start="163:25" pos:end="163:25">=</operator> <call pos:start="163:27" pos:end="163:60"><name pos:start="163:27" pos:end="163:50">decode_plane_subdivision</name><argument_list pos:start="163:51" pos:end="163:60">(<argument pos:start="163:52" pos:end="163:59"><expr pos:start="163:52" pos:end="163:59"><operator pos:start="163:52" pos:end="163:52">&amp;</operator><name pos:start="163:53" pos:end="163:59"><name pos:start="163:53" pos:end="163:55">ctx</name><operator pos:start="163:56" pos:end="163:57">-&gt;</operator><name pos:start="163:58" pos:end="163:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <if_stmt pos:start="166:5" pos:end="168:67"><if pos:start="166:5" pos:end="168:67">if <condition pos:start="166:8" pos:end="166:28">(<expr pos:start="166:9" pos:end="166:27"><name pos:start="166:9" pos:end="166:27"><name pos:start="166:9" pos:end="166:16">pic_conf</name><operator pos:start="166:17" pos:end="166:17">.</operator><name pos:start="166:18" pos:end="166:27">luma_bands</name></name></expr>)</condition><block type="pseudo" pos:start="168:9" pos:end="168:67"><block_content pos:start="168:9" pos:end="168:67">

        <expr_stmt pos:start="168:9" pos:end="168:67"><expr pos:start="168:9" pos:end="168:66"><name pos:start="168:9" pos:end="168:29"><name pos:start="168:9" pos:end="168:16">pic_conf</name><operator pos:start="168:17" pos:end="168:17">.</operator><name pos:start="168:18" pos:end="168:29">chroma_bands</name></name> <operator pos:start="168:31" pos:end="168:31">=</operator> <call pos:start="168:33" pos:end="168:66"><name pos:start="168:33" pos:end="168:56">decode_plane_subdivision</name><argument_list pos:start="168:57" pos:end="168:66">(<argument pos:start="168:58" pos:end="168:65"><expr pos:start="168:58" pos:end="168:65"><operator pos:start="168:58" pos:end="168:58">&amp;</operator><name pos:start="168:59" pos:end="168:65"><name pos:start="168:59" pos:end="168:61">ctx</name><operator pos:start="168:62" pos:end="168:63">-&gt;</operator><name pos:start="168:64" pos:end="168:65">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="170:5" pos:end="170:78"><expr pos:start="170:5" pos:end="170:77"><name pos:start="170:5" pos:end="170:20"><name pos:start="170:5" pos:end="170:7">ctx</name><operator pos:start="170:8" pos:end="170:9">-&gt;</operator><name pos:start="170:10" pos:end="170:20">is_scalable</name></name> <operator pos:start="170:22" pos:end="170:22">=</operator> <name pos:start="170:24" pos:end="170:42"><name pos:start="170:24" pos:end="170:31">pic_conf</name><operator pos:start="170:32" pos:end="170:32">.</operator><name pos:start="170:33" pos:end="170:42">luma_bands</name></name> <operator pos:start="170:44" pos:end="170:45">!=</operator> <literal type="number" pos:start="170:47" pos:end="170:47">1</literal> <operator pos:start="170:49" pos:end="170:50">||</operator> <name pos:start="170:52" pos:end="170:72"><name pos:start="170:52" pos:end="170:59">pic_conf</name><operator pos:start="170:60" pos:end="170:60">.</operator><name pos:start="170:61" pos:end="170:72">chroma_bands</name></name> <operator pos:start="170:74" pos:end="170:75">!=</operator> <literal type="number" pos:start="170:77" pos:end="170:77">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="172:5" pos:end="180:5"><if pos:start="172:5" pos:end="180:5">if <condition pos:start="172:8" pos:end="172:85">(<expr pos:start="172:9" pos:end="172:84"><name pos:start="172:9" pos:end="172:24"><name pos:start="172:9" pos:end="172:11">ctx</name><operator pos:start="172:12" pos:end="172:13">-&gt;</operator><name pos:start="172:14" pos:end="172:24">is_scalable</name></name> <operator pos:start="172:26" pos:end="172:27">&amp;&amp;</operator> <operator pos:start="172:29" pos:end="172:29">(</operator><name pos:start="172:30" pos:end="172:48"><name pos:start="172:30" pos:end="172:37">pic_conf</name><operator pos:start="172:38" pos:end="172:38">.</operator><name pos:start="172:39" pos:end="172:48">luma_bands</name></name> <operator pos:start="172:50" pos:end="172:51">!=</operator> <literal type="number" pos:start="172:53" pos:end="172:53">4</literal> <operator pos:start="172:55" pos:end="172:56">||</operator> <name pos:start="172:58" pos:end="172:78"><name pos:start="172:58" pos:end="172:65">pic_conf</name><operator pos:start="172:66" pos:end="172:66">.</operator><name pos:start="172:67" pos:end="172:78">chroma_bands</name></name> <operator pos:start="172:80" pos:end="172:81">!=</operator> <literal type="number" pos:start="172:83" pos:end="172:83">1</literal><operator pos:start="172:84" pos:end="172:84">)</operator></expr>)</condition> <block pos:start="172:87" pos:end="180:5">{<block_content pos:start="174:9" pos:end="178:35">

        <expr_stmt pos:start="174:9" pos:end="176:59"><expr pos:start="174:9" pos:end="176:58"><call pos:start="174:9" pos:end="176:58"><name pos:start="174:9" pos:end="174:14">av_log</name><argument_list pos:start="174:15" pos:end="176:58">(<argument pos:start="174:16" pos:end="174:20"><expr pos:start="174:16" pos:end="174:20"><name pos:start="174:16" pos:end="174:20">avctx</name></expr></argument>, <argument pos:start="174:23" pos:end="174:34"><expr pos:start="174:23" pos:end="174:34"><name pos:start="174:23" pos:end="174:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="174:37" pos:end="174:110"><expr pos:start="174:37" pos:end="174:110"><literal type="string" pos:start="174:37" pos:end="174:110">"Scalability: unsupported subdivision! Luma bands: %d, chroma bands: %d\n"</literal></expr></argument>,

               <argument pos:start="176:16" pos:end="176:34"><expr pos:start="176:16" pos:end="176:34"><name pos:start="176:16" pos:end="176:34"><name pos:start="176:16" pos:end="176:23">pic_conf</name><operator pos:start="176:24" pos:end="176:24">.</operator><name pos:start="176:25" pos:end="176:34">luma_bands</name></name></expr></argument>, <argument pos:start="176:37" pos:end="176:57"><expr pos:start="176:37" pos:end="176:57"><name pos:start="176:37" pos:end="176:57"><name pos:start="176:37" pos:end="176:44">pic_conf</name><operator pos:start="176:45" pos:end="176:45">.</operator><name pos:start="176:46" pos:end="176:57">chroma_bands</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="178:9" pos:end="178:35">return <expr pos:start="178:16" pos:end="178:34"><name pos:start="178:16" pos:end="178:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="184:5" pos:end="184:68">/* check if picture layout was changed and reallocate buffers */</comment>

    <if_stmt pos:start="186:5" pos:end="230:5"><if pos:start="186:5" pos:end="230:5">if <condition pos:start="186:8" pos:end="186:54">(<expr pos:start="186:9" pos:end="186:53"><call pos:start="186:9" pos:end="186:53"><name pos:start="186:9" pos:end="186:26">ivi_pic_config_cmp</name><argument_list pos:start="186:27" pos:end="186:53">(<argument pos:start="186:28" pos:end="186:36"><expr pos:start="186:28" pos:end="186:36"><operator pos:start="186:28" pos:end="186:28">&amp;</operator><name pos:start="186:29" pos:end="186:36">pic_conf</name></expr></argument>, <argument pos:start="186:39" pos:end="186:52"><expr pos:start="186:39" pos:end="186:52"><operator pos:start="186:39" pos:end="186:39">&amp;</operator><name pos:start="186:40" pos:end="186:52"><name pos:start="186:40" pos:end="186:42">ctx</name><operator pos:start="186:43" pos:end="186:44">-&gt;</operator><name pos:start="186:45" pos:end="186:52">pic_conf</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="186:56" pos:end="230:5">{<block_content pos:start="188:9" pos:end="228:9">

        <if_stmt pos:start="188:9" pos:end="194:9"><if pos:start="188:9" pos:end="194:9">if <condition pos:start="188:12" pos:end="188:55">(<expr pos:start="188:13" pos:end="188:54"><call pos:start="188:13" pos:end="188:54"><name pos:start="188:13" pos:end="188:30">ff_ivi_init_planes</name><argument_list pos:start="188:31" pos:end="188:54">(<argument pos:start="188:32" pos:end="188:42"><expr pos:start="188:32" pos:end="188:42"><name pos:start="188:32" pos:end="188:42"><name pos:start="188:32" pos:end="188:34">ctx</name><operator pos:start="188:35" pos:end="188:36">-&gt;</operator><name pos:start="188:37" pos:end="188:42">planes</name></name></expr></argument>, <argument pos:start="188:45" pos:end="188:53"><expr pos:start="188:45" pos:end="188:53"><operator pos:start="188:45" pos:end="188:45">&amp;</operator><name pos:start="188:46" pos:end="188:53">pic_conf</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="188:57" pos:end="194:9">{<block_content pos:start="190:13" pos:end="192:35">

            <expr_stmt pos:start="190:13" pos:end="190:79"><expr pos:start="190:13" pos:end="190:78"><call pos:start="190:13" pos:end="190:78"><name pos:start="190:13" pos:end="190:18">av_log</name><argument_list pos:start="190:19" pos:end="190:78">(<argument pos:start="190:20" pos:end="190:24"><expr pos:start="190:20" pos:end="190:24"><name pos:start="190:20" pos:end="190:24">avctx</name></expr></argument>, <argument pos:start="190:27" pos:end="190:38"><expr pos:start="190:27" pos:end="190:38"><name pos:start="190:27" pos:end="190:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="190:41" pos:end="190:77"><expr pos:start="190:41" pos:end="190:77"><literal type="string" pos:start="190:41" pos:end="190:77">"Couldn't reallocate color planes!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="192:13" pos:end="192:35">return <expr pos:start="192:20" pos:end="192:34"><call pos:start="192:20" pos:end="192:34"><name pos:start="192:20" pos:end="192:26">AVERROR</name><argument_list pos:start="192:27" pos:end="192:34">(<argument pos:start="192:28" pos:end="192:33"><expr pos:start="192:28" pos:end="192:33"><name pos:start="192:28" pos:end="192:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="198:9" pos:end="198:33"><expr pos:start="198:9" pos:end="198:32"><name pos:start="198:9" pos:end="198:21"><name pos:start="198:9" pos:end="198:11">ctx</name><operator pos:start="198:12" pos:end="198:13">-&gt;</operator><name pos:start="198:14" pos:end="198:21">pic_conf</name></name> <operator pos:start="198:23" pos:end="198:23">=</operator> <name pos:start="198:25" pos:end="198:32">pic_conf</name></expr>;</expr_stmt>



        <comment type="block" pos:start="202:9" pos:end="202:53">/* set default macroblock/block dimensions */</comment>

        <for pos:start="204:9" pos:end="214:9">for <control pos:start="204:13" pos:end="204:32">(<init pos:start="204:14" pos:end="204:19"><expr pos:start="204:14" pos:end="204:18"><name pos:start="204:14" pos:end="204:14">p</name> <operator pos:start="204:16" pos:end="204:16">=</operator> <literal type="number" pos:start="204:18" pos:end="204:18">0</literal></expr>;</init> <condition pos:start="204:21" pos:end="204:27"><expr pos:start="204:21" pos:end="204:26"><name pos:start="204:21" pos:end="204:21">p</name> <operator pos:start="204:23" pos:end="204:24">&lt;=</operator> <literal type="number" pos:start="204:26" pos:end="204:26">2</literal></expr>;</condition> <incr pos:start="204:29" pos:end="204:31"><expr pos:start="204:29" pos:end="204:31"><name pos:start="204:29" pos:end="204:29">p</name><operator pos:start="204:30" pos:end="204:31">++</operator></expr></incr>)</control> <block pos:start="204:34" pos:end="214:9">{<block_content pos:start="206:13" pos:end="212:13">

            <for pos:start="206:13" pos:end="212:13">for <control pos:start="206:17" pos:end="206:84">(<init pos:start="206:18" pos:end="206:23"><expr pos:start="206:18" pos:end="206:22"><name pos:start="206:18" pos:end="206:18">i</name> <operator pos:start="206:20" pos:end="206:20">=</operator> <literal type="number" pos:start="206:22" pos:end="206:22">0</literal></expr>;</init> <condition pos:start="206:25" pos:end="206:79"><expr pos:start="206:25" pos:end="206:78"><name pos:start="206:25" pos:end="206:25">i</name> <operator pos:start="206:27" pos:end="206:27">&lt;</operator> <operator pos:start="206:29" pos:end="206:29">(</operator><ternary pos:start="206:30" pos:end="206:77"><condition pos:start="206:30" pos:end="206:33"><expr pos:start="206:30" pos:end="206:31"><operator pos:start="206:30" pos:end="206:30">!</operator><name pos:start="206:31" pos:end="206:31">p</name></expr> ?</condition><then pos:start="206:35" pos:end="206:53"> <expr pos:start="206:35" pos:end="206:53"><name pos:start="206:35" pos:end="206:53"><name pos:start="206:35" pos:end="206:42">pic_conf</name><operator pos:start="206:43" pos:end="206:43">.</operator><name pos:start="206:44" pos:end="206:53">luma_bands</name></name></expr> </then><else pos:start="206:55" pos:end="206:77">: <expr pos:start="206:57" pos:end="206:77"><name pos:start="206:57" pos:end="206:77"><name pos:start="206:57" pos:end="206:64">pic_conf</name><operator pos:start="206:65" pos:end="206:65">.</operator><name pos:start="206:66" pos:end="206:77">chroma_bands</name></name></expr></else></ternary><operator pos:start="206:78" pos:end="206:78">)</operator></expr>;</condition> <incr pos:start="206:81" pos:end="206:83"><expr pos:start="206:81" pos:end="206:83"><name pos:start="206:81" pos:end="206:81">i</name><operator pos:start="206:82" pos:end="206:83">++</operator></expr></incr>)</control> <block pos:start="206:86" pos:end="212:13">{<block_content pos:start="208:17" pos:end="210:62">

                <expr_stmt pos:start="208:17" pos:end="208:89"><expr pos:start="208:17" pos:end="208:88"><name pos:start="208:17" pos:end="208:30"><name pos:start="208:17" pos:end="208:19">ctx</name><operator pos:start="208:20" pos:end="208:21">-&gt;</operator><name pos:start="208:22" pos:end="208:27">planes</name><index pos:start="208:28" pos:end="208:30">[<expr pos:start="208:29" pos:end="208:29"><name pos:start="208:29" pos:end="208:29">p</name></expr>]</index></name><operator pos:start="208:31" pos:end="208:31">.</operator><name pos:start="208:32" pos:end="208:39"><name pos:start="208:32" pos:end="208:36">bands</name><index pos:start="208:37" pos:end="208:39">[<expr pos:start="208:38" pos:end="208:38"><name pos:start="208:38" pos:end="208:38">i</name></expr>]</index></name><operator pos:start="208:40" pos:end="208:40">.</operator><name pos:start="208:41" pos:end="208:47">mb_size</name>  <operator pos:start="208:50" pos:end="208:50">=</operator> <ternary pos:start="208:52" pos:end="208:88"><condition pos:start="208:52" pos:end="208:55"><expr pos:start="208:52" pos:end="208:53"><operator pos:start="208:52" pos:end="208:52">!</operator><name pos:start="208:53" pos:end="208:53">p</name></expr> ?</condition><then pos:start="208:57" pos:end="208:84"> <expr pos:start="208:57" pos:end="208:84"><operator pos:start="208:57" pos:end="208:57">(</operator><ternary pos:start="208:58" pos:end="208:83"><condition pos:start="208:58" pos:end="208:76"><expr pos:start="208:58" pos:end="208:74"><operator pos:start="208:58" pos:end="208:58">!</operator><name pos:start="208:59" pos:end="208:74"><name pos:start="208:59" pos:end="208:61">ctx</name><operator pos:start="208:62" pos:end="208:63">-&gt;</operator><name pos:start="208:64" pos:end="208:74">is_scalable</name></name></expr> ?</condition><then pos:start="208:78" pos:end="208:79"> <expr pos:start="208:78" pos:end="208:79"><literal type="number" pos:start="208:78" pos:end="208:79">16</literal></expr> </then><else pos:start="208:81" pos:end="208:83">: <expr pos:start="208:83" pos:end="208:83"><literal type="number" pos:start="208:83" pos:end="208:83">8</literal></expr></else></ternary><operator pos:start="208:84" pos:end="208:84">)</operator></expr> </then><else pos:start="208:86" pos:end="208:88">: <expr pos:start="208:88" pos:end="208:88"><literal type="number" pos:start="208:88" pos:end="208:88">4</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="210:17" pos:end="210:62"><expr pos:start="210:17" pos:end="210:61"><name pos:start="210:17" pos:end="210:30"><name pos:start="210:17" pos:end="210:19">ctx</name><operator pos:start="210:20" pos:end="210:21">-&gt;</operator><name pos:start="210:22" pos:end="210:27">planes</name><index pos:start="210:28" pos:end="210:30">[<expr pos:start="210:29" pos:end="210:29"><name pos:start="210:29" pos:end="210:29">p</name></expr>]</index></name><operator pos:start="210:31" pos:end="210:31">.</operator><name pos:start="210:32" pos:end="210:39"><name pos:start="210:32" pos:end="210:36">bands</name><index pos:start="210:37" pos:end="210:39">[<expr pos:start="210:38" pos:end="210:38"><name pos:start="210:38" pos:end="210:38">i</name></expr>]</index></name><operator pos:start="210:40" pos:end="210:40">.</operator><name pos:start="210:41" pos:end="210:48">blk_size</name> <operator pos:start="210:50" pos:end="210:50">=</operator> <ternary pos:start="210:52" pos:end="210:61"><condition pos:start="210:52" pos:end="210:55"><expr pos:start="210:52" pos:end="210:53"><operator pos:start="210:52" pos:end="210:52">!</operator><name pos:start="210:53" pos:end="210:53">p</name></expr> ?</condition><then pos:start="210:57" pos:end="210:57"> <expr pos:start="210:57" pos:end="210:57"><literal type="number" pos:start="210:57" pos:end="210:57">8</literal></expr> </then><else pos:start="210:59" pos:end="210:61">: <expr pos:start="210:61" pos:end="210:61"><literal type="number" pos:start="210:61" pos:end="210:61">4</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <if_stmt pos:start="218:9" pos:end="228:9"><if pos:start="218:9" pos:end="228:9">if <condition pos:start="218:12" pos:end="220:57">(<expr pos:start="218:13" pos:end="220:56"><call pos:start="218:13" pos:end="220:56"><name pos:start="218:13" pos:end="218:29">ff_ivi_init_tiles</name><argument_list pos:start="218:30" pos:end="220:56">(<argument pos:start="218:31" pos:end="218:41"><expr pos:start="218:31" pos:end="218:41"><name pos:start="218:31" pos:end="218:41"><name pos:start="218:31" pos:end="218:33">ctx</name><operator pos:start="218:34" pos:end="218:35">-&gt;</operator><name pos:start="218:36" pos:end="218:41">planes</name></name></expr></argument>, <argument pos:start="218:44" pos:end="218:67"><expr pos:start="218:44" pos:end="218:67"><name pos:start="218:44" pos:end="218:67"><name pos:start="218:44" pos:end="218:46">ctx</name><operator pos:start="218:47" pos:end="218:48">-&gt;</operator><name pos:start="218:49" pos:end="218:56">pic_conf</name><operator pos:start="218:57" pos:end="218:57">.</operator><name pos:start="218:58" pos:end="218:67">tile_width</name></name></expr></argument>,

                              <argument pos:start="220:31" pos:end="220:55"><expr pos:start="220:31" pos:end="220:55"><name pos:start="220:31" pos:end="220:55"><name pos:start="220:31" pos:end="220:33">ctx</name><operator pos:start="220:34" pos:end="220:35">-&gt;</operator><name pos:start="220:36" pos:end="220:43">pic_conf</name><operator pos:start="220:44" pos:end="220:44">.</operator><name pos:start="220:45" pos:end="220:55">tile_height</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="220:59" pos:end="228:9">{<block_content pos:start="222:13" pos:end="226:35">

            <expr_stmt pos:start="222:13" pos:end="224:65"><expr pos:start="222:13" pos:end="224:64"><call pos:start="222:13" pos:end="224:64"><name pos:start="222:13" pos:end="222:18">av_log</name><argument_list pos:start="222:19" pos:end="224:64">(<argument pos:start="222:20" pos:end="222:24"><expr pos:start="222:20" pos:end="222:24"><name pos:start="222:20" pos:end="222:24">avctx</name></expr></argument>, <argument pos:start="222:27" pos:end="222:38"><expr pos:start="222:27" pos:end="222:38"><name pos:start="222:27" pos:end="222:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="224:20" pos:end="224:63"><expr pos:start="224:20" pos:end="224:63"><literal type="string" pos:start="224:20" pos:end="224:63">"Couldn't reallocate internal structures!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="226:13" pos:end="226:35">return <expr pos:start="226:20" pos:end="226:34"><call pos:start="226:20" pos:end="226:34"><name pos:start="226:20" pos:end="226:26">AVERROR</name><argument_list pos:start="226:27" pos:end="226:34">(<argument pos:start="226:28" pos:end="226:33"><expr pos:start="226:28" pos:end="226:33"><name pos:start="226:28" pos:end="226:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="234:5" pos:end="234:70"><expr pos:start="234:5" pos:end="234:69"><name pos:start="234:5" pos:end="234:18"><name pos:start="234:5" pos:end="234:7">ctx</name><operator pos:start="234:8" pos:end="234:9">-&gt;</operator><name pos:start="234:10" pos:end="234:18">frame_num</name></name> <operator pos:start="234:20" pos:end="234:20">=</operator> <ternary pos:start="234:22" pos:end="234:69"><condition pos:start="234:22" pos:end="234:42"><expr pos:start="234:22" pos:end="234:40"><call pos:start="234:22" pos:end="234:40"><name pos:start="234:22" pos:end="234:30">get_bits1</name><argument_list pos:start="234:31" pos:end="234:40">(<argument pos:start="234:32" pos:end="234:39"><expr pos:start="234:32" pos:end="234:39"><operator pos:start="234:32" pos:end="234:32">&amp;</operator><name pos:start="234:33" pos:end="234:39"><name pos:start="234:33" pos:end="234:35">ctx</name><operator pos:start="234:36" pos:end="234:37">-&gt;</operator><name pos:start="234:38" pos:end="234:39">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="234:44" pos:end="234:65"> <expr pos:start="234:44" pos:end="234:65"><call pos:start="234:44" pos:end="234:65"><name pos:start="234:44" pos:end="234:51">get_bits</name><argument_list pos:start="234:52" pos:end="234:65">(<argument pos:start="234:53" pos:end="234:60"><expr pos:start="234:53" pos:end="234:60"><operator pos:start="234:53" pos:end="234:53">&amp;</operator><name pos:start="234:54" pos:end="234:60"><name pos:start="234:54" pos:end="234:56">ctx</name><operator pos:start="234:57" pos:end="234:58">-&gt;</operator><name pos:start="234:59" pos:end="234:60">gb</name></name></expr></argument>, <argument pos:start="234:63" pos:end="234:64"><expr pos:start="234:63" pos:end="234:64"><literal type="number" pos:start="234:63" pos:end="234:64">20</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="234:67" pos:end="234:69">: <expr pos:start="234:69" pos:end="234:69"><literal type="number" pos:start="234:69" pos:end="234:69">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="238:5" pos:end="238:42">/* skip decTimeEst field if present */</comment>

    <if_stmt pos:start="240:5" pos:end="242:31"><if pos:start="240:5" pos:end="242:31">if <condition pos:start="240:8" pos:end="240:28">(<expr pos:start="240:9" pos:end="240:27"><call pos:start="240:9" pos:end="240:27"><name pos:start="240:9" pos:end="240:17">get_bits1</name><argument_list pos:start="240:18" pos:end="240:27">(<argument pos:start="240:19" pos:end="240:26"><expr pos:start="240:19" pos:end="240:26"><operator pos:start="240:19" pos:end="240:19">&amp;</operator><name pos:start="240:20" pos:end="240:26"><name pos:start="240:20" pos:end="240:22">ctx</name><operator pos:start="240:23" pos:end="240:24">-&gt;</operator><name pos:start="240:25" pos:end="240:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="242:9" pos:end="242:31"><block_content pos:start="242:9" pos:end="242:31">

        <expr_stmt pos:start="242:9" pos:end="242:31"><expr pos:start="242:9" pos:end="242:30"><call pos:start="242:9" pos:end="242:30"><name pos:start="242:9" pos:end="242:17">skip_bits</name><argument_list pos:start="242:18" pos:end="242:30">(<argument pos:start="242:19" pos:end="242:26"><expr pos:start="242:19" pos:end="242:26"><operator pos:start="242:19" pos:end="242:19">&amp;</operator><name pos:start="242:20" pos:end="242:26"><name pos:start="242:20" pos:end="242:22">ctx</name><operator pos:start="242:23" pos:end="242:24">-&gt;</operator><name pos:start="242:25" pos:end="242:26">gb</name></name></expr></argument>, <argument pos:start="242:29" pos:end="242:29"><expr pos:start="242:29" pos:end="242:29"><literal type="number" pos:start="242:29" pos:end="242:29">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="246:5" pos:end="246:55">/* decode macroblock and block huffman codebooks */</comment>

    <if_stmt pos:start="248:5" pos:end="252:35"><if pos:start="248:5" pos:end="252:35">if <condition pos:start="248:8" pos:end="250:96">(<expr pos:start="248:9" pos:end="250:95"><call pos:start="248:9" pos:end="248:95"><name pos:start="248:9" pos:end="248:28">ff_ivi_dec_huff_desc</name><argument_list pos:start="248:29" pos:end="248:95">(<argument pos:start="248:30" pos:end="248:37"><expr pos:start="248:30" pos:end="248:37"><operator pos:start="248:30" pos:end="248:30">&amp;</operator><name pos:start="248:31" pos:end="248:37"><name pos:start="248:31" pos:end="248:33">ctx</name><operator pos:start="248:34" pos:end="248:35">-&gt;</operator><name pos:start="248:36" pos:end="248:37">gb</name></name></expr></argument>, <argument pos:start="248:40" pos:end="248:58"><expr pos:start="248:40" pos:end="248:58"><call pos:start="248:40" pos:end="248:58"><name pos:start="248:40" pos:end="248:48">get_bits1</name><argument_list pos:start="248:49" pos:end="248:58">(<argument pos:start="248:50" pos:end="248:57"><expr pos:start="248:50" pos:end="248:57"><operator pos:start="248:50" pos:end="248:50">&amp;</operator><name pos:start="248:51" pos:end="248:57"><name pos:start="248:51" pos:end="248:53">ctx</name><operator pos:start="248:54" pos:end="248:55">-&gt;</operator><name pos:start="248:56" pos:end="248:57">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="248:61" pos:end="248:71"><expr pos:start="248:61" pos:end="248:71"><name pos:start="248:61" pos:end="248:71">IVI_MB_HUFF</name></expr></argument>,  <argument pos:start="248:75" pos:end="248:86"><expr pos:start="248:75" pos:end="248:86"><operator pos:start="248:75" pos:end="248:75">&amp;</operator><name pos:start="248:76" pos:end="248:86"><name pos:start="248:76" pos:end="248:78">ctx</name><operator pos:start="248:79" pos:end="248:80">-&gt;</operator><name pos:start="248:81" pos:end="248:86">mb_vlc</name></name></expr></argument>,  <argument pos:start="248:90" pos:end="248:94"><expr pos:start="248:90" pos:end="248:94"><name pos:start="248:90" pos:end="248:94">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="248:97" pos:end="248:98">||</operator>

        <call pos:start="250:9" pos:end="250:95"><name pos:start="250:9" pos:end="250:28">ff_ivi_dec_huff_desc</name><argument_list pos:start="250:29" pos:end="250:95">(<argument pos:start="250:30" pos:end="250:37"><expr pos:start="250:30" pos:end="250:37"><operator pos:start="250:30" pos:end="250:30">&amp;</operator><name pos:start="250:31" pos:end="250:37"><name pos:start="250:31" pos:end="250:33">ctx</name><operator pos:start="250:34" pos:end="250:35">-&gt;</operator><name pos:start="250:36" pos:end="250:37">gb</name></name></expr></argument>, <argument pos:start="250:40" pos:end="250:58"><expr pos:start="250:40" pos:end="250:58"><call pos:start="250:40" pos:end="250:58"><name pos:start="250:40" pos:end="250:48">get_bits1</name><argument_list pos:start="250:49" pos:end="250:58">(<argument pos:start="250:50" pos:end="250:57"><expr pos:start="250:50" pos:end="250:57"><operator pos:start="250:50" pos:end="250:50">&amp;</operator><name pos:start="250:51" pos:end="250:57"><name pos:start="250:51" pos:end="250:53">ctx</name><operator pos:start="250:54" pos:end="250:55">-&gt;</operator><name pos:start="250:56" pos:end="250:57">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="250:61" pos:end="250:72"><expr pos:start="250:61" pos:end="250:72"><name pos:start="250:61" pos:end="250:72">IVI_BLK_HUFF</name></expr></argument>, <argument pos:start="250:75" pos:end="250:87"><expr pos:start="250:75" pos:end="250:87"><operator pos:start="250:75" pos:end="250:75">&amp;</operator><name pos:start="250:76" pos:end="250:87"><name pos:start="250:76" pos:end="250:78">ctx</name><operator pos:start="250:79" pos:end="250:80">-&gt;</operator><name pos:start="250:81" pos:end="250:87">blk_vlc</name></name></expr></argument>, <argument pos:start="250:90" pos:end="250:94"><expr pos:start="250:90" pos:end="250:94"><name pos:start="250:90" pos:end="250:94">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="252:9" pos:end="252:35"><block_content pos:start="252:9" pos:end="252:35">

        <return pos:start="252:9" pos:end="252:35">return <expr pos:start="252:16" pos:end="252:34"><name pos:start="252:16" pos:end="252:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="256:5" pos:end="256:69"><expr pos:start="256:5" pos:end="256:68"><name pos:start="256:5" pos:end="256:18"><name pos:start="256:5" pos:end="256:7">ctx</name><operator pos:start="256:8" pos:end="256:9">-&gt;</operator><name pos:start="256:10" pos:end="256:18">rvmap_sel</name></name> <operator pos:start="256:20" pos:end="256:20">=</operator> <ternary pos:start="256:22" pos:end="256:68"><condition pos:start="256:22" pos:end="256:42"><expr pos:start="256:22" pos:end="256:40"><call pos:start="256:22" pos:end="256:40"><name pos:start="256:22" pos:end="256:30">get_bits1</name><argument_list pos:start="256:31" pos:end="256:40">(<argument pos:start="256:32" pos:end="256:39"><expr pos:start="256:32" pos:end="256:39"><operator pos:start="256:32" pos:end="256:32">&amp;</operator><name pos:start="256:33" pos:end="256:39"><name pos:start="256:33" pos:end="256:35">ctx</name><operator pos:start="256:36" pos:end="256:37">-&gt;</operator><name pos:start="256:38" pos:end="256:39">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="256:44" pos:end="256:64"> <expr pos:start="256:44" pos:end="256:64"><call pos:start="256:44" pos:end="256:64"><name pos:start="256:44" pos:end="256:51">get_bits</name><argument_list pos:start="256:52" pos:end="256:64">(<argument pos:start="256:53" pos:end="256:60"><expr pos:start="256:53" pos:end="256:60"><operator pos:start="256:53" pos:end="256:53">&amp;</operator><name pos:start="256:54" pos:end="256:60"><name pos:start="256:54" pos:end="256:56">ctx</name><operator pos:start="256:57" pos:end="256:58">-&gt;</operator><name pos:start="256:59" pos:end="256:60">gb</name></name></expr></argument>, <argument pos:start="256:63" pos:end="256:63"><expr pos:start="256:63" pos:end="256:63"><literal type="number" pos:start="256:63" pos:end="256:63">3</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="256:66" pos:end="256:68">: <expr pos:start="256:68" pos:end="256:68"><literal type="number" pos:start="256:68" pos:end="256:68">8</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="260:5" pos:end="260:38"><expr pos:start="260:5" pos:end="260:37"><name pos:start="260:5" pos:end="260:15"><name pos:start="260:5" pos:end="260:7">ctx</name><operator pos:start="260:8" pos:end="260:9">-&gt;</operator><name pos:start="260:10" pos:end="260:15">in_imf</name></name> <operator pos:start="260:17" pos:end="260:17">=</operator> <call pos:start="260:19" pos:end="260:37"><name pos:start="260:19" pos:end="260:27">get_bits1</name><argument_list pos:start="260:28" pos:end="260:37">(<argument pos:start="260:29" pos:end="260:36"><expr pos:start="260:29" pos:end="260:36"><operator pos:start="260:29" pos:end="260:29">&amp;</operator><name pos:start="260:30" pos:end="260:36"><name pos:start="260:30" pos:end="260:32">ctx</name><operator pos:start="260:33" pos:end="260:34">-&gt;</operator><name pos:start="260:35" pos:end="260:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="262:5" pos:end="262:38"><expr pos:start="262:5" pos:end="262:37"><name pos:start="262:5" pos:end="262:13"><name pos:start="262:5" pos:end="262:7">ctx</name><operator pos:start="262:8" pos:end="262:9">-&gt;</operator><name pos:start="262:10" pos:end="262:13">in_q</name></name>   <operator pos:start="262:17" pos:end="262:17">=</operator> <call pos:start="262:19" pos:end="262:37"><name pos:start="262:19" pos:end="262:27">get_bits1</name><argument_list pos:start="262:28" pos:end="262:37">(<argument pos:start="262:29" pos:end="262:36"><expr pos:start="262:29" pos:end="262:36"><operator pos:start="262:29" pos:end="262:29">&amp;</operator><name pos:start="262:30" pos:end="262:36"><name pos:start="262:30" pos:end="262:32">ctx</name><operator pos:start="262:33" pos:end="262:34">-&gt;</operator><name pos:start="262:35" pos:end="262:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="266:5" pos:end="266:48"><expr pos:start="266:5" pos:end="266:47"><name pos:start="266:5" pos:end="266:23"><name pos:start="266:5" pos:end="266:7">ctx</name><operator pos:start="266:8" pos:end="266:9">-&gt;</operator><name pos:start="266:10" pos:end="266:23">pic_glob_quant</name></name> <operator pos:start="266:25" pos:end="266:25">=</operator> <call pos:start="266:27" pos:end="266:47"><name pos:start="266:27" pos:end="266:34">get_bits</name><argument_list pos:start="266:35" pos:end="266:47">(<argument pos:start="266:36" pos:end="266:43"><expr pos:start="266:36" pos:end="266:43"><operator pos:start="266:36" pos:end="266:36">&amp;</operator><name pos:start="266:37" pos:end="266:43"><name pos:start="266:37" pos:end="266:39">ctx</name><operator pos:start="266:40" pos:end="266:41">-&gt;</operator><name pos:start="266:42" pos:end="266:43">gb</name></name></expr></argument>, <argument pos:start="266:46" pos:end="266:46"><expr pos:start="266:46" pos:end="266:46"><literal type="number" pos:start="266:46" pos:end="266:46">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="270:5" pos:end="270:47">/* TODO: ignore this parameter if unused */</comment>

    <expr_stmt pos:start="272:5" pos:end="272:68"><expr pos:start="272:5" pos:end="272:67"><name pos:start="272:5" pos:end="272:17"><name pos:start="272:5" pos:end="272:7">ctx</name><operator pos:start="272:8" pos:end="272:9">-&gt;</operator><name pos:start="272:10" pos:end="272:17">unknown1</name></name> <operator pos:start="272:19" pos:end="272:19">=</operator> <ternary pos:start="272:21" pos:end="272:67"><condition pos:start="272:21" pos:end="272:41"><expr pos:start="272:21" pos:end="272:39"><call pos:start="272:21" pos:end="272:39"><name pos:start="272:21" pos:end="272:29">get_bits1</name><argument_list pos:start="272:30" pos:end="272:39">(<argument pos:start="272:31" pos:end="272:38"><expr pos:start="272:31" pos:end="272:38"><operator pos:start="272:31" pos:end="272:31">&amp;</operator><name pos:start="272:32" pos:end="272:38"><name pos:start="272:32" pos:end="272:34">ctx</name><operator pos:start="272:35" pos:end="272:36">-&gt;</operator><name pos:start="272:37" pos:end="272:38">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="272:43" pos:end="272:63"> <expr pos:start="272:43" pos:end="272:63"><call pos:start="272:43" pos:end="272:63"><name pos:start="272:43" pos:end="272:50">get_bits</name><argument_list pos:start="272:51" pos:end="272:63">(<argument pos:start="272:52" pos:end="272:59"><expr pos:start="272:52" pos:end="272:59"><operator pos:start="272:52" pos:end="272:52">&amp;</operator><name pos:start="272:53" pos:end="272:59"><name pos:start="272:53" pos:end="272:55">ctx</name><operator pos:start="272:56" pos:end="272:57">-&gt;</operator><name pos:start="272:58" pos:end="272:59">gb</name></name></expr></argument>, <argument pos:start="272:62" pos:end="272:62"><expr pos:start="272:62" pos:end="272:62"><literal type="number" pos:start="272:62" pos:end="272:62">3</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="272:65" pos:end="272:67">: <expr pos:start="272:67" pos:end="272:67"><literal type="number" pos:start="272:67" pos:end="272:67">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="276:5" pos:end="276:69"><expr pos:start="276:5" pos:end="276:68"><name pos:start="276:5" pos:end="276:17"><name pos:start="276:5" pos:end="276:7">ctx</name><operator pos:start="276:8" pos:end="276:9">-&gt;</operator><name pos:start="276:10" pos:end="276:17">checksum</name></name> <operator pos:start="276:19" pos:end="276:19">=</operator> <ternary pos:start="276:21" pos:end="276:68"><condition pos:start="276:21" pos:end="276:41"><expr pos:start="276:21" pos:end="276:39"><call pos:start="276:21" pos:end="276:39"><name pos:start="276:21" pos:end="276:29">get_bits1</name><argument_list pos:start="276:30" pos:end="276:39">(<argument pos:start="276:31" pos:end="276:38"><expr pos:start="276:31" pos:end="276:38"><operator pos:start="276:31" pos:end="276:31">&amp;</operator><name pos:start="276:32" pos:end="276:38"><name pos:start="276:32" pos:end="276:34">ctx</name><operator pos:start="276:35" pos:end="276:36">-&gt;</operator><name pos:start="276:37" pos:end="276:38">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="276:43" pos:end="276:64"> <expr pos:start="276:43" pos:end="276:64"><call pos:start="276:43" pos:end="276:64"><name pos:start="276:43" pos:end="276:50">get_bits</name><argument_list pos:start="276:51" pos:end="276:64">(<argument pos:start="276:52" pos:end="276:59"><expr pos:start="276:52" pos:end="276:59"><operator pos:start="276:52" pos:end="276:52">&amp;</operator><name pos:start="276:53" pos:end="276:59"><name pos:start="276:53" pos:end="276:55">ctx</name><operator pos:start="276:56" pos:end="276:57">-&gt;</operator><name pos:start="276:58" pos:end="276:59">gb</name></name></expr></argument>, <argument pos:start="276:62" pos:end="276:63"><expr pos:start="276:62" pos:end="276:63"><literal type="number" pos:start="276:62" pos:end="276:63">16</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="276:66" pos:end="276:68">: <expr pos:start="276:68" pos:end="276:68"><literal type="number" pos:start="276:68" pos:end="276:68">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="280:5" pos:end="280:46">/* skip picture header extension if any */</comment>

    <while pos:start="282:5" pos:end="288:5">while <condition pos:start="282:11" pos:end="282:31">(<expr pos:start="282:12" pos:end="282:30"><call pos:start="282:12" pos:end="282:30"><name pos:start="282:12" pos:end="282:20">get_bits1</name><argument_list pos:start="282:21" pos:end="282:30">(<argument pos:start="282:22" pos:end="282:29"><expr pos:start="282:22" pos:end="282:29"><operator pos:start="282:22" pos:end="282:22">&amp;</operator><name pos:start="282:23" pos:end="282:29"><name pos:start="282:23" pos:end="282:25">ctx</name><operator pos:start="282:26" pos:end="282:27">-&gt;</operator><name pos:start="282:28" pos:end="282:29">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="282:33" pos:end="288:5">{<block_content pos:start="284:9" pos:end="286:31">

        <expr_stmt pos:start="284:9" pos:end="284:59"><expr pos:start="284:9" pos:end="284:58"><call pos:start="284:9" pos:end="284:58"><name pos:start="284:9" pos:end="284:15">av_dlog</name><argument_list pos:start="284:16" pos:end="284:58">(<argument pos:start="284:17" pos:end="284:21"><expr pos:start="284:17" pos:end="284:21"><name pos:start="284:17" pos:end="284:21">avctx</name></expr></argument>, <argument pos:start="284:24" pos:end="284:57"><expr pos:start="284:24" pos:end="284:57"><literal type="string" pos:start="284:24" pos:end="284:57">"Pic hdr extension encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="286:9" pos:end="286:31"><expr pos:start="286:9" pos:end="286:30"><call pos:start="286:9" pos:end="286:30"><name pos:start="286:9" pos:end="286:17">skip_bits</name><argument_list pos:start="286:18" pos:end="286:30">(<argument pos:start="286:19" pos:end="286:26"><expr pos:start="286:19" pos:end="286:26"><operator pos:start="286:19" pos:end="286:19">&amp;</operator><name pos:start="286:20" pos:end="286:26"><name pos:start="286:20" pos:end="286:22">ctx</name><operator pos:start="286:23" pos:end="286:24">-&gt;</operator><name pos:start="286:25" pos:end="286:26">gb</name></name></expr></argument>, <argument pos:start="286:29" pos:end="286:29"><expr pos:start="286:29" pos:end="286:29"><literal type="number" pos:start="286:29" pos:end="286:29">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="292:5" pos:end="296:5"><if pos:start="292:5" pos:end="296:5">if <condition pos:start="292:8" pos:end="292:28">(<expr pos:start="292:9" pos:end="292:27"><call pos:start="292:9" pos:end="292:27"><name pos:start="292:9" pos:end="292:17">get_bits1</name><argument_list pos:start="292:18" pos:end="292:27">(<argument pos:start="292:19" pos:end="292:26"><expr pos:start="292:19" pos:end="292:26"><operator pos:start="292:19" pos:end="292:19">&amp;</operator><name pos:start="292:20" pos:end="292:26"><name pos:start="292:20" pos:end="292:22">ctx</name><operator pos:start="292:23" pos:end="292:24">-&gt;</operator><name pos:start="292:25" pos:end="292:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="292:30" pos:end="296:5">{<block_content pos:start="294:9" pos:end="294:70">

        <expr_stmt pos:start="294:9" pos:end="294:70"><expr pos:start="294:9" pos:end="294:69"><call pos:start="294:9" pos:end="294:69"><name pos:start="294:9" pos:end="294:14">av_log</name><argument_list pos:start="294:15" pos:end="294:69">(<argument pos:start="294:16" pos:end="294:20"><expr pos:start="294:16" pos:end="294:20"><name pos:start="294:16" pos:end="294:20">avctx</name></expr></argument>, <argument pos:start="294:23" pos:end="294:34"><expr pos:start="294:23" pos:end="294:34"><name pos:start="294:23" pos:end="294:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="294:37" pos:end="294:68"><expr pos:start="294:37" pos:end="294:68"><literal type="string" pos:start="294:37" pos:end="294:68">"Bad blocks bits encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="300:5" pos:end="300:29"><expr pos:start="300:5" pos:end="300:28"><call pos:start="300:5" pos:end="300:28"><name pos:start="300:5" pos:end="300:18">align_get_bits</name><argument_list pos:start="300:19" pos:end="300:28">(<argument pos:start="300:20" pos:end="300:27"><expr pos:start="300:20" pos:end="300:27"><operator pos:start="300:20" pos:end="300:20">&amp;</operator><name pos:start="300:21" pos:end="300:27"><name pos:start="300:21" pos:end="300:23">ctx</name><operator pos:start="300:24" pos:end="300:25">-&gt;</operator><name pos:start="300:26" pos:end="300:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="304:5" pos:end="304:13">return <expr pos:start="304:12" pos:end="304:12"><literal type="number" pos:start="304:12" pos:end="304:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
