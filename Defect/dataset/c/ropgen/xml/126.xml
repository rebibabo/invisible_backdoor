<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/126.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_nvdec_start_frame</name><parameter_list pos:start="1:25" pos:end="1:63">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:55">AVFrame</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="73:15">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NVDECContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name> <init pos:start="5:23" pos:end="5:58">= <expr pos:start="5:25" pos:end="5:58"><name pos:start="5:25" pos:end="5:58"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:39">internal</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:58">hwaccel_priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">FrameDecodeData</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">fdd</name> <init pos:start="7:26" pos:end="7:69">= <expr pos:start="7:28" pos:end="7:69"><operator pos:start="7:28" pos:end="7:28">(</operator><name pos:start="7:29" pos:end="7:43">FrameDecodeData</name><operator pos:start="7:44" pos:end="7:44">*</operator><operator pos:start="7:45" pos:end="7:45">)</operator><name pos:start="7:46" pos:end="7:69"><name pos:start="7:46" pos:end="7:50">frame</name><operator pos:start="7:51" pos:end="7:52">-&gt;</operator><name pos:start="7:53" pos:end="7:63">private_ref</name><operator pos:start="7:64" pos:end="7:65">-&gt;</operator><name pos:start="7:66" pos:end="7:69">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">NVDECFrame</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:18">cf</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:22">bitstream_len</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">ctx</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:18">nb_slices</name></name>     <operator pos:start="17:24" pos:end="17:24">=</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:11">fdd</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:25">hwaccel_priv</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:6">cf</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:32"><name pos:start="27:10" pos:end="27:19">av_mallocz</name><argument_list pos:start="27:20" pos:end="27:32">(<argument pos:start="27:21" pos:end="27:31"><expr pos:start="27:21" pos:end="27:31"><sizeof pos:start="27:21" pos:end="27:31">sizeof<argument_list pos:start="27:27" pos:end="27:31">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><operator pos:start="27:28" pos:end="27:28">*</operator><name pos:start="27:29" pos:end="27:30">cf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:11">cf</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:6">cf</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:19">decoder_ref</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:53"><name pos:start="35:23" pos:end="35:35">av_buffer_ref</name><argument_list pos:start="35:36" pos:end="35:53">(<argument pos:start="35:37" pos:end="35:52"><expr pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:39">ctx</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:52">decoder_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:25">(<expr pos:start="37:9" pos:end="37:24"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:24"><name pos:start="37:10" pos:end="37:11">cf</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:24">decoder_ref</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:56"><expr pos:start="43:5" pos:end="43:55"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:6">cf</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:15">idx_ref</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:55"><name pos:start="43:19" pos:end="43:36">av_buffer_pool_get</name><argument_list pos:start="43:37" pos:end="43:55">(<argument pos:start="43:38" pos:end="43:54"><expr pos:start="43:38" pos:end="43:54"><name pos:start="43:38" pos:end="43:54"><name pos:start="43:38" pos:end="43:40">ctx</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:54">decoder_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:21">(<expr pos:start="45:9" pos:end="45:20"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:20"><name pos:start="45:10" pos:end="45:11">cf</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:20">idx_ref</name></name></expr>)</condition> <block pos:start="45:23" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:18">

        <expr_stmt pos:start="47:9" pos:end="47:66"><expr pos:start="47:9" pos:end="47:65"><call pos:start="47:9" pos:end="47:65"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:65">(<argument pos:start="47:16" pos:end="47:20"><expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20">avctx</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:37" pos:end="47:64"><expr pos:start="47:37" pos:end="47:64"><literal type="string" pos:start="47:37" pos:end="47:64">"No decoder surfaces left\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:29"><name pos:start="49:15" pos:end="49:21">AVERROR</name><argument_list pos:start="49:22" pos:end="49:29">(<argument pos:start="49:23" pos:end="49:28"><expr pos:start="49:23" pos:end="49:28"><name pos:start="49:23" pos:end="49:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:18">goto <name pos:start="51:14" pos:end="51:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:48"><expr pos:start="55:5" pos:end="55:47"><name pos:start="55:5" pos:end="55:11"><name pos:start="55:5" pos:end="55:6">cf</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:11">idx</name></name> <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">*</operator><operator pos:start="55:16" pos:end="55:16">(</operator><name pos:start="55:17" pos:end="55:24">unsigned</name> <name pos:start="55:26" pos:end="55:28">int</name><operator pos:start="55:29" pos:end="55:29">*</operator><operator pos:start="55:30" pos:end="55:30">)</operator><name pos:start="55:31" pos:end="55:47"><name pos:start="55:31" pos:end="55:32">cf</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:41">idx_ref</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:47">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:7">fdd</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:21">hwaccel_priv</name></name>      <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:31">cf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:49"><expr pos:start="61:5" pos:end="61:48"><name pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:7">fdd</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:26">hwaccel_priv_free</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:48">nvdec_fdd_priv_free</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:49"><expr pos:start="63:5" pos:end="63:48"><name pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:7">fdd</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:21">post_process</name></name>      <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:48">nvdec_retrieve_data</name></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

<label pos:start="69:1" pos:end="69:5"><name pos:start="69:1" pos:end="69:4">fail</name>:</label>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><call pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:23">nvdec_fdd_priv_free</name><argument_list pos:start="71:24" pos:end="71:27">(<argument pos:start="71:25" pos:end="71:26"><expr pos:start="71:25" pos:end="71:26"><name pos:start="71:25" pos:end="71:26">cf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>



</block_content>}</block></function>
</unit>
