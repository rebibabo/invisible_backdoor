<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1644.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">mov_read_chapters</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:41">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MOVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mov</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MOVStreamContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:19">cur_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="25:9">for <control pos:start="17:9" pos:end="17:39">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:34"><expr pos:start="17:17" pos:end="17:33"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:33">nb_streams</name></name></expr>;</condition> <incr pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:36">i</name><operator pos:start="17:37" pos:end="17:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="25:9"><block_content pos:start="19:9" pos:end="25:9">

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:52">(<expr pos:start="19:13" pos:end="19:51"><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">streams</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">i</name></expr>]</index></name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">id</name> <operator pos:start="19:31" pos:end="19:32">==</operator> <name pos:start="19:34" pos:end="19:51"><name pos:start="19:34" pos:end="19:36">mov</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:51">chapter_track</name></name></expr>)</condition> <block pos:start="19:54" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:18">

            <expr_stmt pos:start="21:13" pos:end="21:31"><expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:14">st</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:30"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:27">streams</name><index pos:start="21:28" pos:end="21:30">[<expr pos:start="21:29" pos:end="21:29"><name pos:start="21:29" pos:end="21:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="23:13" pos:end="23:18">break;</break>

        </block_content>}</block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:11">st</name></expr>)</condition> <block pos:start="27:14" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:75"><expr pos:start="29:9" pos:end="29:74"><call pos:start="29:9" pos:end="29:74"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:74">(<argument pos:start="29:16" pos:end="29:16"><expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">s</name></expr></argument>, <argument pos:start="29:19" pos:end="29:30"><expr pos:start="29:19" pos:end="29:30"><name pos:start="29:19" pos:end="29:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:33" pos:end="29:73"><expr pos:start="29:33" pos:end="29:73"><literal type="string" pos:start="29:33" pos:end="29:73">"Referenced QT chapter track not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:6">st</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:15">discard</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:31">AVDISCARD_ALL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:6">sc</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <name pos:start="39:10" pos:end="39:22"><name pos:start="39:10" pos:end="39:11">st</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:22">priv_data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:11">cur_pos</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:31"><name pos:start="41:15" pos:end="41:23">avio_tell</name><argument_list pos:start="41:24" pos:end="41:31">(<argument pos:start="41:25" pos:end="41:30"><expr pos:start="41:25" pos:end="41:30"><name pos:start="41:25" pos:end="41:30"><name pos:start="41:25" pos:end="41:26">sc</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="115:5">for <control pos:start="45:9" pos:end="45:46">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:41"><expr pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:40"><name pos:start="45:21" pos:end="45:22">st</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:40">nb_index_entries</name></name></expr>;</condition> <incr pos:start="45:43" pos:end="45:45"><expr pos:start="45:43" pos:end="45:45"><name pos:start="45:43" pos:end="45:43">i</name><operator pos:start="45:44" pos:end="45:45">++</operator></expr></incr>)</control> <block pos:start="45:48" pos:end="115:5">{<block_content pos:start="47:9" pos:end="113:25">

        <decl_stmt pos:start="47:9" pos:end="47:53"><decl pos:start="47:9" pos:end="47:52"><type pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:20">AVIndexEntry</name> <modifier pos:start="47:22" pos:end="47:22">*</modifier></type><name pos:start="47:23" pos:end="47:28">sample</name> <init pos:start="47:30" pos:end="47:52">= <expr pos:start="47:32" pos:end="47:52"><operator pos:start="47:32" pos:end="47:32">&amp;</operator><name pos:start="47:33" pos:end="47:52"><name pos:start="47:33" pos:end="47:34">st</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:49">index_entries</name><index pos:start="47:50" pos:end="47:52">[<expr pos:start="47:51" pos:end="47:51"><name pos:start="47:51" pos:end="47:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:99"><decl pos:start="49:9" pos:end="49:98"><type pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:15">int64_t</name></type> <name pos:start="49:17" pos:end="49:19">end</name> <init pos:start="49:21" pos:end="49:98">= <expr pos:start="49:23" pos:end="49:98"><ternary pos:start="49:23" pos:end="49:98"><condition pos:start="49:23" pos:end="49:50"><expr pos:start="49:23" pos:end="49:48"><name pos:start="49:23" pos:end="49:23">i</name><operator pos:start="49:24" pos:end="49:24">+</operator><literal type="number" pos:start="49:25" pos:end="49:25">1</literal> <operator pos:start="49:27" pos:end="49:27">&lt;</operator> <name pos:start="49:29" pos:end="49:48"><name pos:start="49:29" pos:end="49:30">st</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:48">nb_index_entries</name></name></expr> ?</condition><then pos:start="49:52" pos:end="49:83"> <expr pos:start="49:52" pos:end="49:83"><name pos:start="49:52" pos:end="49:73"><name pos:start="49:52" pos:end="49:53">st</name><operator pos:start="49:54" pos:end="49:55">-&gt;</operator><name pos:start="49:56" pos:end="49:68">index_entries</name><index pos:start="49:69" pos:end="49:73">[<expr pos:start="49:70" pos:end="49:72"><name pos:start="49:70" pos:end="49:70">i</name><operator pos:start="49:71" pos:end="49:71">+</operator><literal type="number" pos:start="49:72" pos:end="49:72">1</literal></expr>]</index></name><operator pos:start="49:74" pos:end="49:74">.</operator><name pos:start="49:75" pos:end="49:83">timestamp</name></expr> </then><else pos:start="49:85" pos:end="49:98">: <expr pos:start="49:87" pos:end="49:98"><name pos:start="49:87" pos:end="49:98"><name pos:start="49:87" pos:end="49:88">st</name><operator pos:start="49:89" pos:end="49:90">-&gt;</operator><name pos:start="49:91" pos:end="49:98">duration</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:23"><decl pos:start="51:9" pos:end="51:22"><type pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:15">uint8_t</name> <modifier pos:start="51:17" pos:end="51:17">*</modifier></type><name pos:start="51:18" pos:end="51:22">title</name></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:20"><decl pos:start="53:9" pos:end="53:19"><type pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:16">uint16_t</name></type> <name pos:start="53:18" pos:end="53:19">ch</name></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:27"><decl pos:start="55:9" pos:end="55:15"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:15">len</name></decl>, <decl pos:start="55:18" pos:end="55:26"><type ref="prev" pos:start="55:9" pos:end="55:11"/><name pos:start="55:18" pos:end="55:26">title_len</name></decl>;</decl_stmt>



        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:68">(<expr pos:start="59:13" pos:end="59:67"><call pos:start="59:13" pos:end="59:52"><name pos:start="59:13" pos:end="59:21">avio_seek</name><argument_list pos:start="59:22" pos:end="59:52">(<argument pos:start="59:23" pos:end="59:28"><expr pos:start="59:23" pos:end="59:28"><name pos:start="59:23" pos:end="59:28"><name pos:start="59:23" pos:end="59:24">sc</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:28">pb</name></name></expr></argument>, <argument pos:start="59:31" pos:end="59:41"><expr pos:start="59:31" pos:end="59:41"><name pos:start="59:31" pos:end="59:41"><name pos:start="59:31" pos:end="59:36">sample</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:41">pos</name></name></expr></argument>, <argument pos:start="59:44" pos:end="59:51"><expr pos:start="59:44" pos:end="59:51"><name pos:start="59:44" pos:end="59:51">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="59:54" pos:end="59:55">!=</operator> <name pos:start="59:57" pos:end="59:67"><name pos:start="59:57" pos:end="59:62">sample</name><operator pos:start="59:63" pos:end="59:64">-&gt;</operator><name pos:start="59:65" pos:end="59:67">pos</name></name></expr>)</condition> <block pos:start="59:70" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:24">

            <expr_stmt pos:start="61:13" pos:end="61:73"><expr pos:start="61:13" pos:end="61:72"><call pos:start="61:13" pos:end="61:72"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="61:72">(<argument pos:start="61:20" pos:end="61:20"><expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">s</name></expr></argument>, <argument pos:start="61:23" pos:end="61:34"><expr pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:37" pos:end="61:68"><expr pos:start="61:37" pos:end="61:68"><literal type="string" pos:start="61:37" pos:end="61:68">"Chapter %d not found in file\n"</literal></expr></argument>, <argument pos:start="61:71" pos:end="61:71"><expr pos:start="61:71" pos:end="61:71"><name pos:start="61:71" pos:end="61:71">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="63:13" pos:end="63:24">goto <name pos:start="63:18" pos:end="63:23">finish</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="69:9" pos:end="69:58">// the first two bytes are the length of the title</comment>

        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:11">len</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:31"><name pos:start="71:15" pos:end="71:23">avio_rb16</name><argument_list pos:start="71:24" pos:end="71:31">(<argument pos:start="71:25" pos:end="71:30"><expr pos:start="71:25" pos:end="71:30"><name pos:start="71:25" pos:end="71:30"><name pos:start="71:25" pos:end="71:26">sc</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:21"><if pos:start="73:9" pos:end="75:21">if <condition pos:start="73:12" pos:end="73:33">(<expr pos:start="73:13" pos:end="73:32"><name pos:start="73:13" pos:end="73:15">len</name> <operator pos:start="73:17" pos:end="73:17">&gt;</operator> <name pos:start="73:19" pos:end="73:30"><name pos:start="73:19" pos:end="73:24">sample</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:30">size</name></name><operator pos:start="73:31" pos:end="73:31">-</operator><literal type="number" pos:start="73:32" pos:end="73:32">2</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:21"><block_content pos:start="75:13" pos:end="75:21">

            <continue pos:start="75:13" pos:end="75:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:17">title_len</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <literal type="number" pos:start="77:21" pos:end="77:21">2</literal><operator pos:start="77:22" pos:end="77:22">*</operator><name pos:start="77:23" pos:end="77:25">len</name> <operator pos:start="77:27" pos:end="77:27">+</operator> <literal type="number" pos:start="77:29" pos:end="77:29">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:24"><if pos:start="79:9" pos:end="81:24">if <condition pos:start="79:12" pos:end="79:45">(<expr pos:start="79:13" pos:end="79:44"><operator pos:start="79:13" pos:end="79:13">!</operator><operator pos:start="79:14" pos:end="79:14">(</operator><name pos:start="79:15" pos:end="79:19">title</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <call pos:start="79:23" pos:end="79:43"><name pos:start="79:23" pos:end="79:32">av_mallocz</name><argument_list pos:start="79:33" pos:end="79:43">(<argument pos:start="79:34" pos:end="79:42"><expr pos:start="79:34" pos:end="79:42"><name pos:start="79:34" pos:end="79:42">title_len</name></expr></argument>)</argument_list></call><operator pos:start="79:44" pos:end="79:44">)</operator></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:24"><block_content pos:start="81:13" pos:end="81:24">

            <goto pos:start="81:13" pos:end="81:24">goto <name pos:start="81:18" pos:end="81:23">finish</name>;</goto></block_content></block></if></if_stmt>



        <comment type="line" pos:start="85:9" pos:end="85:80">// The samples could theoretically be in any encoding if there's an encd</comment>

        <comment type="line" pos:start="87:9" pos:end="87:82">// atom following, but in practice are only utf-8 or utf-16, distinguished</comment>

        <comment type="line" pos:start="89:9" pos:end="89:43">// instead by the presence of a BOM</comment>

        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:10">ch</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:30"><name pos:start="91:14" pos:end="91:22">avio_rb16</name><argument_list pos:start="91:23" pos:end="91:30">(<argument pos:start="91:24" pos:end="91:29"><expr pos:start="91:24" pos:end="91:29"><name pos:start="91:24" pos:end="91:29"><name pos:start="91:24" pos:end="91:25">sc</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="107:9"><if pos:start="93:9" pos:end="95:60">if <condition pos:start="93:12" pos:end="93:25">(<expr pos:start="93:13" pos:end="93:24"><name pos:start="93:13" pos:end="93:14">ch</name> <operator pos:start="93:16" pos:end="93:17">==</operator> <literal type="number" pos:start="93:19" pos:end="93:24">0xfeff</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:60"><block_content pos:start="95:13" pos:end="95:60">

            <expr_stmt pos:start="95:13" pos:end="95:60"><expr pos:start="95:13" pos:end="95:59"><call pos:start="95:13" pos:end="95:59"><name pos:start="95:13" pos:end="95:28">avio_get_str16be</name><argument_list pos:start="95:29" pos:end="95:59">(<argument pos:start="95:30" pos:end="95:35"><expr pos:start="95:30" pos:end="95:35"><name pos:start="95:30" pos:end="95:35"><name pos:start="95:30" pos:end="95:31">sc</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:35">pb</name></name></expr></argument>, <argument pos:start="95:38" pos:end="95:40"><expr pos:start="95:38" pos:end="95:40"><name pos:start="95:38" pos:end="95:40">len</name></expr></argument>, <argument pos:start="95:43" pos:end="95:47"><expr pos:start="95:43" pos:end="95:47"><name pos:start="95:43" pos:end="95:47">title</name></expr></argument>, <argument pos:start="95:50" pos:end="95:58"><expr pos:start="95:50" pos:end="95:58"><name pos:start="95:50" pos:end="95:58">title_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="97:9" pos:end="99:60">else if <condition pos:start="97:17" pos:end="97:30">(<expr pos:start="97:18" pos:end="97:29"><name pos:start="97:18" pos:end="97:19">ch</name> <operator pos:start="97:21" pos:end="97:22">==</operator> <literal type="number" pos:start="97:24" pos:end="97:29">0xfffe</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:60"><block_content pos:start="99:13" pos:end="99:60">

            <expr_stmt pos:start="99:13" pos:end="99:60"><expr pos:start="99:13" pos:end="99:59"><call pos:start="99:13" pos:end="99:59"><name pos:start="99:13" pos:end="99:28">avio_get_str16le</name><argument_list pos:start="99:29" pos:end="99:59">(<argument pos:start="99:30" pos:end="99:35"><expr pos:start="99:30" pos:end="99:35"><name pos:start="99:30" pos:end="99:35"><name pos:start="99:30" pos:end="99:31">sc</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:35">pb</name></name></expr></argument>, <argument pos:start="99:38" pos:end="99:40"><expr pos:start="99:38" pos:end="99:40"><name pos:start="99:38" pos:end="99:40">len</name></expr></argument>, <argument pos:start="99:43" pos:end="99:47"><expr pos:start="99:43" pos:end="99:47"><name pos:start="99:43" pos:end="99:47">title</name></expr></argument>, <argument pos:start="99:50" pos:end="99:58"><expr pos:start="99:50" pos:end="99:58"><name pos:start="99:50" pos:end="99:58">title_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="101:9" pos:end="107:9">else <block pos:start="101:14" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:68">

            <expr_stmt pos:start="103:13" pos:end="103:31"><expr pos:start="103:13" pos:end="103:30"><call pos:start="103:13" pos:end="103:30"><name pos:start="103:13" pos:end="103:19">AV_WB16</name><argument_list pos:start="103:20" pos:end="103:30">(<argument pos:start="103:21" pos:end="103:25"><expr pos:start="103:21" pos:end="103:25"><name pos:start="103:21" pos:end="103:25">title</name></expr></argument>, <argument pos:start="103:28" pos:end="103:29"><expr pos:start="103:28" pos:end="103:29"><name pos:start="103:28" pos:end="103:29">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:68"><expr pos:start="105:13" pos:end="105:67"><call pos:start="105:13" pos:end="105:67"><name pos:start="105:13" pos:end="105:24">avio_get_str</name><argument_list pos:start="105:25" pos:end="105:67">(<argument pos:start="105:26" pos:end="105:31"><expr pos:start="105:26" pos:end="105:31"><name pos:start="105:26" pos:end="105:31"><name pos:start="105:26" pos:end="105:27">sc</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:31">pb</name></name></expr></argument>, <argument pos:start="105:34" pos:end="105:40"><expr pos:start="105:34" pos:end="105:40"><name pos:start="105:34" pos:end="105:36">len</name> <operator pos:start="105:38" pos:end="105:38">-</operator> <literal type="number" pos:start="105:40" pos:end="105:40">2</literal></expr></argument>, <argument pos:start="105:43" pos:end="105:51"><expr pos:start="105:43" pos:end="105:51"><name pos:start="105:43" pos:end="105:47">title</name> <operator pos:start="105:49" pos:end="105:49">+</operator> <literal type="number" pos:start="105:51" pos:end="105:51">2</literal></expr></argument>, <argument pos:start="105:54" pos:end="105:66"><expr pos:start="105:54" pos:end="105:66"><name pos:start="105:54" pos:end="105:62">title_len</name> <operator pos:start="105:64" pos:end="105:64">-</operator> <literal type="number" pos:start="105:66" pos:end="105:66">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:75"><expr pos:start="111:9" pos:end="111:74"><call pos:start="111:9" pos:end="111:74"><name pos:start="111:9" pos:end="111:22">ff_new_chapter</name><argument_list pos:start="111:23" pos:end="111:74">(<argument pos:start="111:24" pos:end="111:24"><expr pos:start="111:24" pos:end="111:24"><name pos:start="111:24" pos:end="111:24">s</name></expr></argument>, <argument pos:start="111:27" pos:end="111:27"><expr pos:start="111:27" pos:end="111:27"><name pos:start="111:27" pos:end="111:27">i</name></expr></argument>, <argument pos:start="111:30" pos:end="111:42"><expr pos:start="111:30" pos:end="111:42"><name pos:start="111:30" pos:end="111:42"><name pos:start="111:30" pos:end="111:31">st</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:42">time_base</name></name></expr></argument>, <argument pos:start="111:45" pos:end="111:61"><expr pos:start="111:45" pos:end="111:61"><name pos:start="111:45" pos:end="111:61"><name pos:start="111:45" pos:end="111:50">sample</name><operator pos:start="111:51" pos:end="111:52">-&gt;</operator><name pos:start="111:53" pos:end="111:61">timestamp</name></name></expr></argument>, <argument pos:start="111:64" pos:end="111:66"><expr pos:start="111:64" pos:end="111:66"><name pos:start="111:64" pos:end="111:66">end</name></expr></argument>, <argument pos:start="111:69" pos:end="111:73"><expr pos:start="111:69" pos:end="111:73"><name pos:start="111:69" pos:end="111:73">title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:25"><expr pos:start="113:9" pos:end="113:24"><call pos:start="113:9" pos:end="113:24"><name pos:start="113:9" pos:end="113:16">av_freep</name><argument_list pos:start="113:17" pos:end="113:24">(<argument pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:23"><operator pos:start="113:18" pos:end="113:18">&amp;</operator><name pos:start="113:19" pos:end="113:23">title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<label pos:start="117:1" pos:end="117:7"><name pos:start="117:1" pos:end="117:6">finish</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:41"><expr pos:start="119:5" pos:end="119:40"><call pos:start="119:5" pos:end="119:40"><name pos:start="119:5" pos:end="119:13">avio_seek</name><argument_list pos:start="119:14" pos:end="119:40">(<argument pos:start="119:15" pos:end="119:20"><expr pos:start="119:15" pos:end="119:20"><name pos:start="119:15" pos:end="119:20"><name pos:start="119:15" pos:end="119:16">sc</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:20">pb</name></name></expr></argument>, <argument pos:start="119:23" pos:end="119:29"><expr pos:start="119:23" pos:end="119:29"><name pos:start="119:23" pos:end="119:29">cur_pos</name></expr></argument>, <argument pos:start="119:32" pos:end="119:39"><expr pos:start="119:32" pos:end="119:39"><name pos:start="119:32" pos:end="119:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
