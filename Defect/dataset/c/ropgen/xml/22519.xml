<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22519.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">dump_exec_info</name><parameter_list pos:start="1:20" pos:end="1:58">(<parameter pos:start="1:21" pos:end="1:27"><decl pos:start="1:21" pos:end="1:27"><type pos:start="1:21" pos:end="1:27"><name pos:start="1:21" pos:end="1:24">FILE</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:27">f</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:57"><decl pos:start="1:30" pos:end="1:57"><type pos:start="1:30" pos:end="1:57"><name pos:start="1:30" pos:end="1:45">fprintf_function</name></type> <name pos:start="1:47" pos:end="1:57">cpu_fprintf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:34">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:27">target_code_size</name></decl>, <decl pos:start="5:30" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:30" pos:end="5:49">max_target_code_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:24">direct_jmp_count</name></decl>, <decl pos:start="7:27" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:43">direct_jmp2_count</name></decl>, <decl pos:start="7:46" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:46" pos:end="7:55">cross_page</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">TranslationBlock</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">tb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:20">target_code_size</name> <operator pos:start="13:22" pos:end="13:22">=</operator> <literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:24">max_target_code_size</name> <operator pos:start="15:26" pos:end="15:26">=</operator> <literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:14">cross_page</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:20">direct_jmp_count</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:21">direct_jmp2_count</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="53:5">for <control pos:start="23:9" pos:end="23:47">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:42"><expr pos:start="23:17" pos:end="23:41"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:41"><name pos:start="23:21" pos:end="23:27">tcg_ctx</name><operator pos:start="23:28" pos:end="23:28">.</operator><name pos:start="23:29" pos:end="23:34">tb_ctx</name><operator pos:start="23:35" pos:end="23:35">.</operator><name pos:start="23:36" pos:end="23:41">nb_tbs</name></name></expr>;</condition> <incr pos:start="23:44" pos:end="23:46"><expr pos:start="23:44" pos:end="23:46"><name pos:start="23:44" pos:end="23:44">i</name><operator pos:start="23:45" pos:end="23:46">++</operator></expr></incr>)</control> <block pos:start="23:49" pos:end="53:5">{<block_content pos:start="25:9" pos:end="51:9">

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:10">tb</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:35"><name pos:start="25:15" pos:end="25:21">tcg_ctx</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:28">tb_ctx</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:32">tbs</name><index pos:start="25:33" pos:end="25:35">[<expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:37"><expr pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:24">target_code_size</name> <operator pos:start="27:26" pos:end="27:27">+=</operator> <name pos:start="27:29" pos:end="27:36"><name pos:start="27:29" pos:end="27:30">tb</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:36">size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:44">(<expr pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:14">tb</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:20">size</name></name> <operator pos:start="29:22" pos:end="29:22">&gt;</operator> <name pos:start="29:24" pos:end="29:43">max_target_code_size</name></expr>)</condition> <block pos:start="29:46" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:44">

            <expr_stmt pos:start="31:13" pos:end="31:44"><expr pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:32">max_target_code_size</name> <operator pos:start="31:34" pos:end="31:34">=</operator> <name pos:start="31:36" pos:end="31:43"><name pos:start="31:36" pos:end="31:37">tb</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:43">size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:35">(<expr pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:14">tb</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:25">page_addr</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">1</literal></expr>]</index></name> <operator pos:start="35:30" pos:end="35:31">!=</operator> <operator pos:start="35:33" pos:end="35:33">-</operator><literal type="number" pos:start="35:34" pos:end="35:34">1</literal></expr>)</condition> <block pos:start="35:37" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:25">

            <expr_stmt pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:22">cross_page</name><operator pos:start="37:23" pos:end="37:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:44">(<expr pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:14">tb</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:30">tb_next_offset</name><index pos:start="41:31" pos:end="41:33">[<expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr>]</index></name> <operator pos:start="41:35" pos:end="41:36">!=</operator> <literal type="number" pos:start="41:38" pos:end="41:43">0xffff</literal></expr>)</condition> <block pos:start="41:46" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:13">

            <expr_stmt pos:start="43:13" pos:end="43:31"><expr pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:28">direct_jmp_count</name><operator pos:start="43:29" pos:end="43:30">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="49:13"><if pos:start="45:13" pos:end="49:13">if <condition pos:start="45:16" pos:end="45:48">(<expr pos:start="45:17" pos:end="45:47"><name pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:18">tb</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:34">tb_next_offset</name><index pos:start="45:35" pos:end="45:37">[<expr pos:start="45:36" pos:end="45:36"><literal type="number" pos:start="45:36" pos:end="45:36">1</literal></expr>]</index></name> <operator pos:start="45:39" pos:end="45:40">!=</operator> <literal type="number" pos:start="45:42" pos:end="45:47">0xffff</literal></expr>)</condition> <block pos:start="45:50" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:36">

                <expr_stmt pos:start="47:17" pos:end="47:36"><expr pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:33">direct_jmp2_count</name><operator pos:start="47:34" pos:end="47:35">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="55:5" pos:end="55:36">/* XXX: avoid using doubles ? */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:50"><expr pos:start="57:5" pos:end="57:49"><call pos:start="57:5" pos:end="57:49"><name pos:start="57:5" pos:end="57:15">cpu_fprintf</name><argument_list pos:start="57:16" pos:end="57:49">(<argument pos:start="57:17" pos:end="57:17"><expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">f</name></expr></argument>, <argument pos:start="57:20" pos:end="57:48"><expr pos:start="57:20" pos:end="57:48"><literal type="string" pos:start="57:20" pos:end="57:48">"Translation buffer state:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="63:50"><expr pos:start="59:5" pos:end="63:49"><call pos:start="59:5" pos:end="63:49"><name pos:start="59:5" pos:end="59:15">cpu_fprintf</name><argument_list pos:start="59:16" pos:end="63:49">(<argument pos:start="59:17" pos:end="59:17"><expr pos:start="59:17" pos:end="59:17"><name pos:start="59:17" pos:end="59:17">f</name></expr></argument>, <argument pos:start="59:20" pos:end="59:50"><expr pos:start="59:20" pos:end="59:50"><literal type="string" pos:start="59:20" pos:end="59:50">"gen code size       %td/%zd\n"</literal></expr></argument>,

                <argument pos:start="61:17" pos:end="61:62"><expr pos:start="61:17" pos:end="61:62"><name pos:start="61:17" pos:end="61:36"><name pos:start="61:17" pos:end="61:23">tcg_ctx</name><operator pos:start="61:24" pos:end="61:24">.</operator><name pos:start="61:25" pos:end="61:36">code_gen_ptr</name></name> <operator pos:start="61:38" pos:end="61:38">-</operator> <name pos:start="61:40" pos:end="61:62"><name pos:start="61:40" pos:end="61:46">tcg_ctx</name><operator pos:start="61:47" pos:end="61:47">.</operator><name pos:start="61:48" pos:end="61:62">code_gen_buffer</name></name></expr></argument>,

                <argument pos:start="63:17" pos:end="63:48"><expr pos:start="63:17" pos:end="63:48"><name pos:start="63:17" pos:end="63:48"><name pos:start="63:17" pos:end="63:23">tcg_ctx</name><operator pos:start="63:24" pos:end="63:24">.</operator><name pos:start="63:25" pos:end="63:48">code_gen_buffer_max_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:64"><expr pos:start="65:5" pos:end="67:63"><call pos:start="65:5" pos:end="67:63"><name pos:start="65:5" pos:end="65:15">cpu_fprintf</name><argument_list pos:start="65:16" pos:end="67:63">(<argument pos:start="65:17" pos:end="65:17"><expr pos:start="65:17" pos:end="65:17"><name pos:start="65:17" pos:end="65:17">f</name></expr></argument>, <argument pos:start="65:20" pos:end="65:48"><expr pos:start="65:20" pos:end="65:48"><literal type="string" pos:start="65:20" pos:end="65:48">"TB count            %d/%d\n"</literal></expr></argument>,

            <argument pos:start="67:13" pos:end="67:33"><expr pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:19">tcg_ctx</name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:26">tb_ctx</name><operator pos:start="67:27" pos:end="67:27">.</operator><name pos:start="67:28" pos:end="67:33">nb_tbs</name></name></expr></argument>, <argument pos:start="67:36" pos:end="67:62"><expr pos:start="67:36" pos:end="67:62"><name pos:start="67:36" pos:end="67:62"><name pos:start="67:36" pos:end="67:42">tcg_ctx</name><operator pos:start="67:43" pos:end="67:43">.</operator><name pos:start="67:44" pos:end="67:62">code_gen_max_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="75:34"><expr pos:start="69:5" pos:end="75:33"><call pos:start="69:5" pos:end="75:33"><name pos:start="69:5" pos:end="69:15">cpu_fprintf</name><argument_list pos:start="69:16" pos:end="75:33">(<argument pos:start="69:17" pos:end="69:17"><expr pos:start="69:17" pos:end="69:17"><name pos:start="69:17" pos:end="69:17">f</name></expr></argument>, <argument pos:start="69:20" pos:end="69:58"><expr pos:start="69:20" pos:end="69:58"><literal type="string" pos:start="69:20" pos:end="69:58">"TB avg target size  %d max=%d bytes\n"</literal></expr></argument>,

            <argument pos:start="71:13" pos:end="73:45"><expr pos:start="71:13" pos:end="73:45"><ternary pos:start="71:13" pos:end="73:45"><condition pos:start="71:13" pos:end="71:35"><expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:19">tcg_ctx</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:26">tb_ctx</name><operator pos:start="71:27" pos:end="71:27">.</operator><name pos:start="71:28" pos:end="71:33">nb_tbs</name></name></expr> ?</condition><then pos:start="71:37" pos:end="73:41"> <expr pos:start="71:37" pos:end="73:41"><name pos:start="71:37" pos:end="71:52">target_code_size</name> <operator pos:start="71:54" pos:end="71:54">/</operator>

                    <name pos:start="73:21" pos:end="73:41"><name pos:start="73:21" pos:end="73:27">tcg_ctx</name><operator pos:start="73:28" pos:end="73:28">.</operator><name pos:start="73:29" pos:end="73:34">tb_ctx</name><operator pos:start="73:35" pos:end="73:35">.</operator><name pos:start="73:36" pos:end="73:41">nb_tbs</name></name></expr> </then><else pos:start="73:43" pos:end="73:45">: <expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">0</literal></expr></else></ternary></expr></argument>,

            <argument pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:32">max_target_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="89:67"><expr pos:start="77:5" pos:end="89:66"><call pos:start="77:5" pos:end="89:66"><name pos:start="77:5" pos:end="77:15">cpu_fprintf</name><argument_list pos:start="77:16" pos:end="89:66">(<argument pos:start="77:17" pos:end="77:17"><expr pos:start="77:17" pos:end="77:17"><name pos:start="77:17" pos:end="77:17">f</name></expr></argument>, <argument pos:start="77:20" pos:end="77:77"><expr pos:start="77:20" pos:end="77:77"><literal type="string" pos:start="77:20" pos:end="77:77">"TB avg host size    %td bytes (expansion ratio: %0.1f)\n"</literal></expr></argument>,

            <argument pos:start="79:13" pos:end="83:62"><expr pos:start="79:13" pos:end="83:62"><ternary pos:start="79:13" pos:end="83:62"><condition pos:start="79:13" pos:end="79:35"><expr pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:19">tcg_ctx</name><operator pos:start="79:20" pos:end="79:20">.</operator><name pos:start="79:21" pos:end="79:26">tb_ctx</name><operator pos:start="79:27" pos:end="79:27">.</operator><name pos:start="79:28" pos:end="79:33">nb_tbs</name></name></expr> ?</condition><then pos:start="79:37" pos:end="83:58"> <expr pos:start="79:37" pos:end="83:58"><operator pos:start="79:37" pos:end="79:37">(</operator><name pos:start="79:38" pos:end="79:57"><name pos:start="79:38" pos:end="79:44">tcg_ctx</name><operator pos:start="79:45" pos:end="79:45">.</operator><name pos:start="79:46" pos:end="79:57">code_gen_ptr</name></name> <operator pos:start="79:59" pos:end="79:59">-</operator>

                                     <name pos:start="81:38" pos:end="81:60"><name pos:start="81:38" pos:end="81:44">tcg_ctx</name><operator pos:start="81:45" pos:end="81:45">.</operator><name pos:start="81:46" pos:end="81:60">code_gen_buffer</name></name><operator pos:start="81:61" pos:end="81:61">)</operator> <operator pos:start="81:63" pos:end="81:63">/</operator>

                                     <name pos:start="83:38" pos:end="83:58"><name pos:start="83:38" pos:end="83:44">tcg_ctx</name><operator pos:start="83:45" pos:end="83:45">.</operator><name pos:start="83:46" pos:end="83:51">tb_ctx</name><operator pos:start="83:52" pos:end="83:52">.</operator><name pos:start="83:53" pos:end="83:58">nb_tbs</name></name></expr> </then><else pos:start="83:60" pos:end="83:62">: <expr pos:start="83:62" pos:end="83:62"><literal type="number" pos:start="83:62" pos:end="83:62">0</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="85:17" pos:end="89:65"><expr pos:start="85:17" pos:end="89:65"><ternary pos:start="85:17" pos:end="89:65"><condition pos:start="85:17" pos:end="85:34"><expr pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:32">target_code_size</name></expr> ?</condition><then pos:start="85:36" pos:end="89:61"> <expr pos:start="85:36" pos:end="89:61"><operator pos:start="85:36" pos:end="85:36">(</operator><name pos:start="85:37" pos:end="85:42">double</name><operator pos:start="85:43" pos:end="85:43">)</operator> <operator pos:start="85:45" pos:end="85:45">(</operator><name pos:start="85:46" pos:end="85:65"><name pos:start="85:46" pos:end="85:52">tcg_ctx</name><operator pos:start="85:53" pos:end="85:53">.</operator><name pos:start="85:54" pos:end="85:65">code_gen_ptr</name></name> <operator pos:start="85:67" pos:end="85:67">-</operator>

                                             <name pos:start="87:46" pos:end="87:68"><name pos:start="87:46" pos:end="87:52">tcg_ctx</name><operator pos:start="87:53" pos:end="87:53">.</operator><name pos:start="87:54" pos:end="87:68">code_gen_buffer</name></name><operator pos:start="87:69" pos:end="87:69">)</operator> <operator pos:start="87:71" pos:end="87:71">/</operator>

                                             <name pos:start="89:46" pos:end="89:61">target_code_size</name></expr> </then><else pos:start="89:63" pos:end="89:65">: <expr pos:start="89:65" pos:end="89:65"><literal type="number" pos:start="89:65" pos:end="89:65">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="95:63"><expr pos:start="91:5" pos:end="95:62"><call pos:start="91:5" pos:end="95:62"><name pos:start="91:5" pos:end="91:15">cpu_fprintf</name><argument_list pos:start="91:16" pos:end="95:62">(<argument pos:start="91:17" pos:end="91:17"><expr pos:start="91:17" pos:end="91:17"><name pos:start="91:17" pos:end="91:17">f</name></expr></argument>, <argument pos:start="91:20" pos:end="91:52"><expr pos:start="91:20" pos:end="91:52"><literal type="string" pos:start="91:20" pos:end="91:52">"cross page TB count %d (%d%%)\n"</literal></expr></argument>, <argument pos:start="91:55" pos:end="91:64"><expr pos:start="91:55" pos:end="91:64"><name pos:start="91:55" pos:end="91:64">cross_page</name></expr></argument>,

            <argument pos:start="93:13" pos:end="95:61"><expr pos:start="93:13" pos:end="95:61"><ternary pos:start="93:13" pos:end="95:61"><condition pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:19">tcg_ctx</name><operator pos:start="93:20" pos:end="93:20">.</operator><name pos:start="93:21" pos:end="93:26">tb_ctx</name><operator pos:start="93:27" pos:end="93:27">.</operator><name pos:start="93:28" pos:end="93:33">nb_tbs</name></name></expr> ?</condition><then pos:start="93:37" pos:end="95:57"> <expr pos:start="93:37" pos:end="95:57"><operator pos:start="93:37" pos:end="93:37">(</operator><name pos:start="93:38" pos:end="93:47">cross_page</name> <operator pos:start="93:49" pos:end="93:49">*</operator> <literal type="number" pos:start="93:51" pos:end="93:53">100</literal><operator pos:start="93:54" pos:end="93:54">)</operator> <operator pos:start="93:56" pos:end="93:56">/</operator>

                                    <name pos:start="95:37" pos:end="95:57"><name pos:start="95:37" pos:end="95:43">tcg_ctx</name><operator pos:start="95:44" pos:end="95:44">.</operator><name pos:start="95:45" pos:end="95:50">tb_ctx</name><operator pos:start="95:51" pos:end="95:51">.</operator><name pos:start="95:52" pos:end="95:57">nb_tbs</name></name></expr> </then><else pos:start="95:59" pos:end="95:61">: <expr pos:start="95:61" pos:end="95:61"><literal type="number" pos:start="95:61" pos:end="95:61">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="109:51"><expr pos:start="97:5" pos:end="109:50"><call pos:start="97:5" pos:end="109:50"><name pos:start="97:5" pos:end="97:15">cpu_fprintf</name><argument_list pos:start="97:16" pos:end="109:50">(<argument pos:start="97:17" pos:end="97:17"><expr pos:start="97:17" pos:end="97:17"><name pos:start="97:17" pos:end="97:17">f</name></expr></argument>, <argument pos:start="97:20" pos:end="97:70"><expr pos:start="97:20" pos:end="97:70"><literal type="string" pos:start="97:20" pos:end="97:70">"direct jump count   %d (%d%%) (2 jumps=%d %d%%)\n"</literal></expr></argument>,

                <argument pos:start="99:17" pos:end="99:32"><expr pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:32">direct_jmp_count</name></expr></argument>,

                <argument pos:start="101:17" pos:end="103:49"><expr pos:start="101:17" pos:end="103:49"><ternary pos:start="101:17" pos:end="103:49"><condition pos:start="101:17" pos:end="101:39"><expr pos:start="101:17" pos:end="101:37"><name pos:start="101:17" pos:end="101:37"><name pos:start="101:17" pos:end="101:23">tcg_ctx</name><operator pos:start="101:24" pos:end="101:24">.</operator><name pos:start="101:25" pos:end="101:30">tb_ctx</name><operator pos:start="101:31" pos:end="101:31">.</operator><name pos:start="101:32" pos:end="101:37">nb_tbs</name></name></expr> ?</condition><then pos:start="101:41" pos:end="103:45"> <expr pos:start="101:41" pos:end="103:45"><operator pos:start="101:41" pos:end="101:41">(</operator><name pos:start="101:42" pos:end="101:57">direct_jmp_count</name> <operator pos:start="101:59" pos:end="101:59">*</operator> <literal type="number" pos:start="101:61" pos:end="101:63">100</literal><operator pos:start="101:64" pos:end="101:64">)</operator> <operator pos:start="101:66" pos:end="101:66">/</operator>

                        <name pos:start="103:25" pos:end="103:45"><name pos:start="103:25" pos:end="103:31">tcg_ctx</name><operator pos:start="103:32" pos:end="103:32">.</operator><name pos:start="103:33" pos:end="103:38">tb_ctx</name><operator pos:start="103:39" pos:end="103:39">.</operator><name pos:start="103:40" pos:end="103:45">nb_tbs</name></name></expr> </then><else pos:start="103:47" pos:end="103:49">: <expr pos:start="103:49" pos:end="103:49"><literal type="number" pos:start="103:49" pos:end="103:49">0</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="105:17" pos:end="105:33"><expr pos:start="105:17" pos:end="105:33"><name pos:start="105:17" pos:end="105:33">direct_jmp2_count</name></expr></argument>,

                <argument pos:start="107:17" pos:end="109:49"><expr pos:start="107:17" pos:end="109:49"><ternary pos:start="107:17" pos:end="109:49"><condition pos:start="107:17" pos:end="107:39"><expr pos:start="107:17" pos:end="107:37"><name pos:start="107:17" pos:end="107:37"><name pos:start="107:17" pos:end="107:23">tcg_ctx</name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:30">tb_ctx</name><operator pos:start="107:31" pos:end="107:31">.</operator><name pos:start="107:32" pos:end="107:37">nb_tbs</name></name></expr> ?</condition><then pos:start="107:41" pos:end="109:45"> <expr pos:start="107:41" pos:end="109:45"><operator pos:start="107:41" pos:end="107:41">(</operator><name pos:start="107:42" pos:end="107:58">direct_jmp2_count</name> <operator pos:start="107:60" pos:end="107:60">*</operator> <literal type="number" pos:start="107:62" pos:end="107:64">100</literal><operator pos:start="107:65" pos:end="107:65">)</operator> <operator pos:start="107:67" pos:end="107:67">/</operator>

                        <name pos:start="109:25" pos:end="109:45"><name pos:start="109:25" pos:end="109:31">tcg_ctx</name><operator pos:start="109:32" pos:end="109:32">.</operator><name pos:start="109:33" pos:end="109:38">tb_ctx</name><operator pos:start="109:39" pos:end="109:39">.</operator><name pos:start="109:40" pos:end="109:45">nb_tbs</name></name></expr> </then><else pos:start="109:47" pos:end="109:49">: <expr pos:start="109:49" pos:end="109:49"><literal type="number" pos:start="109:49" pos:end="109:49">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:38"><expr pos:start="111:5" pos:end="111:37"><call pos:start="111:5" pos:end="111:37"><name pos:start="111:5" pos:end="111:15">cpu_fprintf</name><argument_list pos:start="111:16" pos:end="111:37">(<argument pos:start="111:17" pos:end="111:17"><expr pos:start="111:17" pos:end="111:17"><name pos:start="111:17" pos:end="111:17">f</name></expr></argument>, <argument pos:start="111:20" pos:end="111:36"><expr pos:start="111:20" pos:end="111:36"><literal type="string" pos:start="111:20" pos:end="111:36">"\nStatistics:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:78"><expr pos:start="113:5" pos:end="113:77"><call pos:start="113:5" pos:end="113:77"><name pos:start="113:5" pos:end="113:15">cpu_fprintf</name><argument_list pos:start="113:16" pos:end="113:77">(<argument pos:start="113:17" pos:end="113:17"><expr pos:start="113:17" pos:end="113:17"><name pos:start="113:17" pos:end="113:17">f</name></expr></argument>, <argument pos:start="113:20" pos:end="113:45"><expr pos:start="113:20" pos:end="113:45"><literal type="string" pos:start="113:20" pos:end="113:45">"TB flush count      %d\n"</literal></expr></argument>, <argument pos:start="113:48" pos:end="113:76"><expr pos:start="113:48" pos:end="113:76"><name pos:start="113:48" pos:end="113:76"><name pos:start="113:48" pos:end="113:54">tcg_ctx</name><operator pos:start="113:55" pos:end="113:55">.</operator><name pos:start="113:56" pos:end="113:61">tb_ctx</name><operator pos:start="113:62" pos:end="113:62">.</operator><name pos:start="113:63" pos:end="113:76">tb_flush_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="117:53"><expr pos:start="115:5" pos:end="117:52"><call pos:start="115:5" pos:end="117:52"><name pos:start="115:5" pos:end="115:15">cpu_fprintf</name><argument_list pos:start="115:16" pos:end="117:52">(<argument pos:start="115:17" pos:end="115:17"><expr pos:start="115:17" pos:end="115:17"><name pos:start="115:17" pos:end="115:17">f</name></expr></argument>, <argument pos:start="115:20" pos:end="115:45"><expr pos:start="115:20" pos:end="115:45"><literal type="string" pos:start="115:20" pos:end="115:45">"TB invalidate count %d\n"</literal></expr></argument>,

            <argument pos:start="117:13" pos:end="117:51"><expr pos:start="117:13" pos:end="117:51"><name pos:start="117:13" pos:end="117:51"><name pos:start="117:13" pos:end="117:19">tcg_ctx</name><operator pos:start="117:20" pos:end="117:20">.</operator><name pos:start="117:21" pos:end="117:26">tb_ctx</name><operator pos:start="117:27" pos:end="117:27">.</operator><name pos:start="117:28" pos:end="117:51">tb_phys_invalidate_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:64"><expr pos:start="119:5" pos:end="119:63"><call pos:start="119:5" pos:end="119:63"><name pos:start="119:5" pos:end="119:15">cpu_fprintf</name><argument_list pos:start="119:16" pos:end="119:63">(<argument pos:start="119:17" pos:end="119:17"><expr pos:start="119:17" pos:end="119:17"><name pos:start="119:17" pos:end="119:17">f</name></expr></argument>, <argument pos:start="119:20" pos:end="119:45"><expr pos:start="119:20" pos:end="119:45"><literal type="string" pos:start="119:20" pos:end="119:45">"TLB flush count     %d\n"</literal></expr></argument>, <argument pos:start="119:48" pos:end="119:62"><expr pos:start="119:48" pos:end="119:62"><name pos:start="119:48" pos:end="119:62">tlb_flush_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:34"><expr pos:start="121:5" pos:end="121:33"><call pos:start="121:5" pos:end="121:33"><name pos:start="121:5" pos:end="121:17">tcg_dump_info</name><argument_list pos:start="121:18" pos:end="121:33">(<argument pos:start="121:19" pos:end="121:19"><expr pos:start="121:19" pos:end="121:19"><name pos:start="121:19" pos:end="121:19">f</name></expr></argument>, <argument pos:start="121:22" pos:end="121:32"><expr pos:start="121:22" pos:end="121:32"><name pos:start="121:22" pos:end="121:32">cpu_fprintf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
