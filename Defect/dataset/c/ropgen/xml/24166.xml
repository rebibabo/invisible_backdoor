<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24166.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decorrelate</name><parameter_list pos:start="1:23" pos:end="1:68">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:36">TAKDecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:47"><decl pos:start="1:42" pos:end="1:47"><type pos:start="1:42" pos:end="1:47"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:47">c1</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:55"><decl pos:start="1:50" pos:end="1:55"><type pos:start="1:50" pos:end="1:55"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:55">c2</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:67">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="237:1">{<block_content pos:start="5:5" pos:end="235:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">int32_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:15">p1</name>       <init pos:start="7:23" pos:end="7:55">= <expr pos:start="7:25" pos:end="7:55"><name pos:start="7:25" pos:end="7:38"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:34">decoded</name><index pos:start="7:35" pos:end="7:38">[<expr pos:start="7:36" pos:end="7:37"><name pos:start="7:36" pos:end="7:37">c1</name></expr>]</index></name> <operator pos:start="7:40" pos:end="7:40">+</operator> <operator pos:start="7:42" pos:end="7:42">(</operator><name pos:start="7:43" pos:end="7:50"><name pos:start="7:43" pos:end="7:43">s</name><operator pos:start="7:44" pos:end="7:45">-&gt;</operator><name pos:start="7:46" pos:end="7:50">dmode</name></name> <operator pos:start="7:52" pos:end="7:52">&gt;</operator> <literal type="number" pos:start="7:54" pos:end="7:54">5</literal><operator pos:start="7:55" pos:end="7:55">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int32_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">p2</name>       <init pos:start="9:23" pos:end="9:55">= <expr pos:start="9:25" pos:end="9:55"><name pos:start="9:25" pos:end="9:38"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:34">decoded</name><index pos:start="9:35" pos:end="9:38">[<expr pos:start="9:36" pos:end="9:37"><name pos:start="9:36" pos:end="9:37">c2</name></expr>]</index></name> <operator pos:start="9:40" pos:end="9:40">+</operator> <operator pos:start="9:42" pos:end="9:42">(</operator><name pos:start="9:43" pos:end="9:50"><name pos:start="9:43" pos:end="9:43">s</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:50">dmode</name></name> <operator pos:start="9:52" pos:end="9:52">&gt;</operator> <literal type="number" pos:start="9:54" pos:end="9:54">5</literal><operator pos:start="9:55" pos:end="9:55">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int32_t</name></type> <name pos:start="11:13" pos:end="11:15">bp1</name>       <init pos:start="11:23" pos:end="11:29">= <expr pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:26">p1</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:15">bp2</name>       <init pos:start="13:23" pos:end="13:29">= <expr pos:start="13:25" pos:end="13:29"><name pos:start="13:25" pos:end="13:29"><name pos:start="13:25" pos:end="13:26">p2</name><index pos:start="13:27" pos:end="13:29">[<expr pos:start="13:28" pos:end="13:28"><literal type="number" pos:start="13:28" pos:end="13:28">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">dshift</name></decl>, <decl pos:start="17:17" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:17" pos:end="17:23">dfactor</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:10">length</name> <operator pos:start="21:12" pos:end="21:13">+=</operator> <name pos:start="21:15" pos:end="21:22"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:22">dmode</name></name> <operator pos:start="21:24" pos:end="21:24">&lt;</operator> <literal type="number" pos:start="21:26" pos:end="21:26">6</literal></expr>;</expr_stmt>



    <switch pos:start="25:5" pos:end="221:5">switch <condition pos:start="25:12" pos:end="25:21">(<expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">dmode</name></name></expr>)</condition> <block pos:start="25:23" pos:end="221:5">{<block_content pos:start="27:5" pos:end="219:5">

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">1</literal></expr>:</case> <comment type="block" pos:start="27:13" pos:end="27:27">/* left/side */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><call pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">tdsp</name><operator pos:start="29:16" pos:end="29:16">.</operator><name pos:start="29:17" pos:end="29:30">decorrelate_ls</name></name><argument_list pos:start="29:31" pos:end="29:46">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">p1</name></expr></argument>, <argument pos:start="29:36" pos:end="29:37"><expr pos:start="29:36" pos:end="29:37"><name pos:start="29:36" pos:end="29:37">p2</name></expr></argument>, <argument pos:start="29:40" pos:end="29:45"><expr pos:start="29:40" pos:end="29:45"><name pos:start="29:40" pos:end="29:45">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">2</literal></expr>:</case> <comment type="block" pos:start="33:13" pos:end="33:28">/* side/right */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:47"><expr pos:start="35:9" pos:end="35:46"><call pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:15">tdsp</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:30">decorrelate_sr</name></name><argument_list pos:start="35:31" pos:end="35:46">(<argument pos:start="35:32" pos:end="35:33"><expr pos:start="35:32" pos:end="35:33"><name pos:start="35:32" pos:end="35:33">p1</name></expr></argument>, <argument pos:start="35:36" pos:end="35:37"><expr pos:start="35:36" pos:end="35:37"><name pos:start="35:36" pos:end="35:37">p2</name></expr></argument>, <argument pos:start="35:40" pos:end="35:45"><expr pos:start="35:40" pos:end="35:45"><name pos:start="35:40" pos:end="35:45">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">3</literal></expr>:</case> <comment type="block" pos:start="39:13" pos:end="39:26">/* side/mid */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><call pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:15">tdsp</name><operator pos:start="41:16" pos:end="41:16">.</operator><name pos:start="41:17" pos:end="41:30">decorrelate_sm</name></name><argument_list pos:start="41:31" pos:end="41:46">(<argument pos:start="41:32" pos:end="41:33"><expr pos:start="41:32" pos:end="41:33"><name pos:start="41:32" pos:end="41:33">p1</name></expr></argument>, <argument pos:start="41:36" pos:end="41:37"><expr pos:start="41:36" pos:end="41:37"><name pos:start="41:36" pos:end="41:37">p2</name></expr></argument>, <argument pos:start="41:40" pos:end="41:45"><expr pos:start="41:40" pos:end="41:45"><name pos:start="41:40" pos:end="41:45">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">4</literal></expr>:</case> <comment type="block" pos:start="45:13" pos:end="45:45">/* side/left with scale factor */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><call pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:14">FFSWAP</name><argument_list pos:start="47:15" pos:end="47:32">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:22">int32_t</name><operator pos:start="47:23" pos:end="47:23">*</operator></expr></argument>, <argument pos:start="47:26" pos:end="47:27"><expr pos:start="47:26" pos:end="47:27"><name pos:start="47:26" pos:end="47:27">p1</name></expr></argument>, <argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><name pos:start="47:30" pos:end="47:31">p2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><call pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:14">FFSWAP</name><argument_list pos:start="49:15" pos:end="49:33">(<argument pos:start="49:16" pos:end="49:22"><expr pos:start="49:16" pos:end="49:22"><name pos:start="49:16" pos:end="49:22">int32_t</name></expr></argument>, <argument pos:start="49:25" pos:end="49:27"><expr pos:start="49:25" pos:end="49:27"><name pos:start="49:25" pos:end="49:27">bp1</name></expr></argument>, <argument pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:32">bp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">5</literal></expr>:</case> <comment type="block" pos:start="51:13" pos:end="51:46">/* side/right with scale factor */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:14">dshift</name>  <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:35"><name pos:start="53:19" pos:end="53:31">get_bits_esc4</name><argument_list pos:start="53:32" pos:end="53:35">(<argument pos:start="53:33" pos:end="53:34"><expr pos:start="53:33" pos:end="53:34"><name pos:start="53:33" pos:end="53:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:15">dfactor</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:35"><name pos:start="55:19" pos:end="55:27">get_sbits</name><argument_list pos:start="55:28" pos:end="55:35">(<argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><name pos:start="55:29" pos:end="55:30">gb</name></expr></argument>, <argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><literal type="number" pos:start="55:33" pos:end="55:34">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:64"><expr pos:start="57:9" pos:end="57:63"><call pos:start="57:9" pos:end="57:63"><name pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:15">tdsp</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:30">decorrelate_sf</name></name><argument_list pos:start="57:31" pos:end="57:63">(<argument pos:start="57:32" pos:end="57:33"><expr pos:start="57:32" pos:end="57:33"><name pos:start="57:32" pos:end="57:33">p1</name></expr></argument>, <argument pos:start="57:36" pos:end="57:37"><expr pos:start="57:36" pos:end="57:37"><name pos:start="57:36" pos:end="57:37">p2</name></expr></argument>, <argument pos:start="57:40" pos:end="57:45"><expr pos:start="57:40" pos:end="57:45"><name pos:start="57:40" pos:end="57:45">length</name></expr></argument>, <argument pos:start="57:48" pos:end="57:53"><expr pos:start="57:48" pos:end="57:53"><name pos:start="57:48" pos:end="57:53">dshift</name></expr></argument>, <argument pos:start="57:56" pos:end="57:62"><expr pos:start="57:56" pos:end="57:62"><name pos:start="57:56" pos:end="57:62">dfactor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">6</literal></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:33"><expr pos:start="63:9" pos:end="63:32"><call pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:14">FFSWAP</name><argument_list pos:start="63:15" pos:end="63:32">(<argument pos:start="63:16" pos:end="63:23"><expr pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:22">int32_t</name><operator pos:start="63:23" pos:end="63:23">*</operator></expr></argument>, <argument pos:start="63:26" pos:end="63:27"><expr pos:start="63:26" pos:end="63:27"><name pos:start="63:26" pos:end="63:27">p1</name></expr></argument>, <argument pos:start="63:30" pos:end="63:31"><expr pos:start="63:30" pos:end="63:31"><name pos:start="63:30" pos:end="63:31">p2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">7</literal></expr>:</case> <block pos:start="65:13" pos:end="219:5">{<block_content pos:start="67:9" pos:end="217:14">

        <decl_stmt pos:start="67:9" pos:end="67:60"><decl pos:start="67:9" pos:end="67:19"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:19">length2</name></decl>, <decl pos:start="67:22" pos:end="67:31"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:22" pos:end="67:31">order_half</name></decl>, <decl pos:start="67:34" pos:end="67:45"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:34" pos:end="67:45">filter_order</name></decl>, <decl pos:start="67:48" pos:end="67:52"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:48" pos:end="67:52">dval1</name></decl>, <decl pos:start="67:55" pos:end="67:59"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:55" pos:end="67:59">dval2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:30"><decl pos:start="69:9" pos:end="69:15"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:15">tmp</name></decl>, <decl pos:start="69:18" pos:end="69:18"><type ref="prev" pos:start="69:9" pos:end="69:11"/><name pos:start="69:18" pos:end="69:18">x</name></decl>, <decl pos:start="69:21" pos:end="69:29"><type ref="prev" pos:start="69:9" pos:end="69:11"/><name pos:start="69:21" pos:end="69:29">code_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="73:9" pos:end="75:39"><if pos:start="73:9" pos:end="75:39">if <condition pos:start="73:12" pos:end="73:25">(<expr pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:18">length</name> <operator pos:start="73:20" pos:end="73:20">&lt;</operator> <literal type="number" pos:start="73:22" pos:end="73:24">256</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:39"><block_content pos:start="75:13" pos:end="75:39">

            <return pos:start="75:13" pos:end="75:39">return <expr pos:start="75:20" pos:end="75:38"><name pos:start="75:20" pos:end="75:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:14">dshift</name>       <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="79:40"><name pos:start="79:24" pos:end="79:36">get_bits_esc4</name><argument_list pos:start="79:37" pos:end="79:40">(<argument pos:start="79:38" pos:end="79:39"><expr pos:start="79:38" pos:end="79:39"><name pos:start="79:38" pos:end="79:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:20">filter_order</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <literal type="number" pos:start="81:24" pos:end="81:24">8</literal> <operator pos:start="81:26" pos:end="81:27">&lt;&lt;</operator> <call pos:start="81:29" pos:end="81:41"><name pos:start="81:29" pos:end="81:37">get_bits1</name><argument_list pos:start="81:38" pos:end="81:41">(<argument pos:start="81:39" pos:end="81:40"><expr pos:start="81:39" pos:end="81:40"><name pos:start="81:39" pos:end="81:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:37"><expr pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:13">dval1</name>        <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:36"><name pos:start="83:24" pos:end="83:32">get_bits1</name><argument_list pos:start="83:33" pos:end="83:36">(<argument pos:start="83:34" pos:end="83:35"><expr pos:start="83:34" pos:end="83:35"><name pos:start="83:34" pos:end="83:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:37"><expr pos:start="85:9" pos:end="85:36"><name pos:start="85:9" pos:end="85:13">dval2</name>        <operator pos:start="85:22" pos:end="85:22">=</operator> <call pos:start="85:24" pos:end="85:36"><name pos:start="85:24" pos:end="85:32">get_bits1</name><argument_list pos:start="85:33" pos:end="85:36">(<argument pos:start="85:34" pos:end="85:35"><expr pos:start="85:34" pos:end="85:35"><name pos:start="85:34" pos:end="85:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="89:9" pos:end="97:9">for <control pos:start="89:13" pos:end="89:42">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:37"><expr pos:start="89:21" pos:end="89:36"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <name pos:start="89:25" pos:end="89:36">filter_order</name></expr>;</condition> <incr pos:start="89:39" pos:end="89:41"><expr pos:start="89:39" pos:end="89:41"><name pos:start="89:39" pos:end="89:39">i</name><operator pos:start="89:40" pos:end="89:41">++</operator></expr></incr>)</control> <block pos:start="89:44" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:52">

            <if_stmt pos:start="91:13" pos:end="93:49"><if pos:start="91:13" pos:end="93:49">if <condition pos:start="91:16" pos:end="91:25">(<expr pos:start="91:17" pos:end="91:24"><operator pos:start="91:17" pos:end="91:17">!</operator><operator pos:start="91:18" pos:end="91:18">(</operator><name pos:start="91:19" pos:end="91:19">i</name> <operator pos:start="91:21" pos:end="91:21">&amp;</operator> <literal type="number" pos:start="91:23" pos:end="91:23">3</literal><operator pos:start="91:24" pos:end="91:24">)</operator></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:49"><block_content pos:start="93:17" pos:end="93:49">

                <expr_stmt pos:start="93:17" pos:end="93:49"><expr pos:start="93:17" pos:end="93:48"><name pos:start="93:17" pos:end="93:25">code_size</name> <operator pos:start="93:27" pos:end="93:27">=</operator> <literal type="number" pos:start="93:29" pos:end="93:32">14</literal> <operator pos:start="93:32" pos:end="93:32">-</operator> <call pos:start="93:34" pos:end="93:48"><name pos:start="93:34" pos:end="93:41">get_bits</name><argument_list pos:start="93:42" pos:end="93:48">(<argument pos:start="93:43" pos:end="93:44"><expr pos:start="93:43" pos:end="93:44"><name pos:start="93:43" pos:end="93:44">gb</name></expr></argument>, <argument pos:start="93:47" pos:end="93:47"><expr pos:start="93:47" pos:end="93:47"><literal type="number" pos:start="93:47" pos:end="93:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:52"><expr pos:start="95:13" pos:end="95:51"><name pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:21">filter</name><index pos:start="95:22" pos:end="95:24">[<expr pos:start="95:23" pos:end="95:23"><name pos:start="95:23" pos:end="95:23">i</name></expr>]</index></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <call pos:start="95:28" pos:end="95:51"><name pos:start="95:28" pos:end="95:36">get_sbits</name><argument_list pos:start="95:37" pos:end="95:51">(<argument pos:start="95:38" pos:end="95:39"><expr pos:start="95:38" pos:end="95:39"><name pos:start="95:38" pos:end="95:39">gb</name></expr></argument>, <argument pos:start="95:42" pos:end="95:50"><expr pos:start="95:42" pos:end="95:50"><name pos:start="95:42" pos:end="95:50">code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="101:9" pos:end="101:38"><expr pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:18">order_half</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:33">filter_order</name> <operator pos:start="101:35" pos:end="101:35">/</operator> <literal type="number" pos:start="101:37" pos:end="101:37">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:49"><expr pos:start="103:9" pos:end="103:48"><name pos:start="103:9" pos:end="103:15">length2</name>    <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:27">length</name> <operator pos:start="103:29" pos:end="103:29">-</operator> <operator pos:start="103:31" pos:end="103:31">(</operator><name pos:start="103:32" pos:end="103:43">filter_order</name> <operator pos:start="103:45" pos:end="103:45">-</operator> <literal type="number" pos:start="103:47" pos:end="103:47">1</literal><operator pos:start="103:48" pos:end="103:48">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="107:9" pos:end="107:43">/* decorrelate beginning samples */</comment>

        <if_stmt pos:start="109:9" pos:end="121:9"><if pos:start="109:9" pos:end="121:9">if <condition pos:start="109:12" pos:end="109:18">(<expr pos:start="109:13" pos:end="109:17"><name pos:start="109:13" pos:end="109:17">dval1</name></expr>)</condition> <block pos:start="109:20" pos:end="121:9">{<block_content pos:start="111:13" pos:end="119:13">

            <for pos:start="111:13" pos:end="119:13">for <control pos:start="111:17" pos:end="111:44">(<init pos:start="111:18" pos:end="111:23"><expr pos:start="111:18" pos:end="111:22"><name pos:start="111:18" pos:end="111:18">i</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr>;</init> <condition pos:start="111:25" pos:end="111:39"><expr pos:start="111:25" pos:end="111:38"><name pos:start="111:25" pos:end="111:25">i</name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <name pos:start="111:29" pos:end="111:38">order_half</name></expr>;</condition> <incr pos:start="111:41" pos:end="111:43"><expr pos:start="111:41" pos:end="111:43"><name pos:start="111:41" pos:end="111:41">i</name><operator pos:start="111:42" pos:end="111:43">++</operator></expr></incr>)</control> <block pos:start="111:46" pos:end="119:13">{<block_content pos:start="113:17" pos:end="117:34">

                <decl_stmt pos:start="113:17" pos:end="113:34"><decl pos:start="113:17" pos:end="113:33"><type pos:start="113:17" pos:end="113:23"><name pos:start="113:17" pos:end="113:23">int32_t</name></type> <name pos:start="113:25" pos:end="113:25">a</name> <init pos:start="113:27" pos:end="113:33">= <expr pos:start="113:29" pos:end="113:33"><name pos:start="113:29" pos:end="113:33"><name pos:start="113:29" pos:end="113:30">p1</name><index pos:start="113:31" pos:end="113:33">[<expr pos:start="113:32" pos:end="113:32"><name pos:start="113:32" pos:end="113:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="115:17" pos:end="115:34"><decl pos:start="115:17" pos:end="115:33"><type pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:23">int32_t</name></type> <name pos:start="115:25" pos:end="115:25">b</name> <init pos:start="115:27" pos:end="115:33">= <expr pos:start="115:29" pos:end="115:33"><name pos:start="115:29" pos:end="115:33"><name pos:start="115:29" pos:end="115:30">p2</name><index pos:start="115:31" pos:end="115:33">[<expr pos:start="115:32" pos:end="115:32"><name pos:start="115:32" pos:end="115:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:34"><expr pos:start="117:17" pos:end="117:33"><name pos:start="117:17" pos:end="117:21"><name pos:start="117:17" pos:end="117:18">p1</name><index pos:start="117:19" pos:end="117:21">[<expr pos:start="117:20" pos:end="117:20"><name pos:start="117:20" pos:end="117:20">i</name></expr>]</index></name>     <operator pos:start="117:27" pos:end="117:27">=</operator> <name pos:start="117:29" pos:end="117:29">a</name> <operator pos:start="117:31" pos:end="117:31">+</operator> <name pos:start="117:33" pos:end="117:33">b</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="125:9" pos:end="125:40">/* decorrelate ending samples */</comment>

        <if_stmt pos:start="127:9" pos:end="139:9"><if pos:start="127:9" pos:end="139:9">if <condition pos:start="127:12" pos:end="127:18">(<expr pos:start="127:13" pos:end="127:17"><name pos:start="127:13" pos:end="127:17">dval2</name></expr>)</condition> <block pos:start="127:20" pos:end="139:9">{<block_content pos:start="129:13" pos:end="137:13">

            <for pos:start="129:13" pos:end="137:13">for <control pos:start="129:17" pos:end="129:59">(<init pos:start="129:18" pos:end="129:42"><expr pos:start="129:18" pos:end="129:41"><name pos:start="129:18" pos:end="129:18">i</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <name pos:start="129:22" pos:end="129:28">length2</name> <operator pos:start="129:30" pos:end="129:30">+</operator> <name pos:start="129:32" pos:end="129:41">order_half</name></expr>;</init> <condition pos:start="129:44" pos:end="129:54"><expr pos:start="129:44" pos:end="129:53"><name pos:start="129:44" pos:end="129:44">i</name> <operator pos:start="129:46" pos:end="129:46">&lt;</operator> <name pos:start="129:48" pos:end="129:53">length</name></expr>;</condition> <incr pos:start="129:56" pos:end="129:58"><expr pos:start="129:56" pos:end="129:58"><name pos:start="129:56" pos:end="129:56">i</name><operator pos:start="129:57" pos:end="129:58">++</operator></expr></incr>)</control> <block pos:start="129:61" pos:end="137:13">{<block_content pos:start="131:17" pos:end="135:34">

                <decl_stmt pos:start="131:17" pos:end="131:34"><decl pos:start="131:17" pos:end="131:33"><type pos:start="131:17" pos:end="131:23"><name pos:start="131:17" pos:end="131:23">int32_t</name></type> <name pos:start="131:25" pos:end="131:25">a</name> <init pos:start="131:27" pos:end="131:33">= <expr pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:30">p1</name><index pos:start="131:31" pos:end="131:33">[<expr pos:start="131:32" pos:end="131:32"><name pos:start="131:32" pos:end="131:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="133:17" pos:end="133:34"><decl pos:start="133:17" pos:end="133:33"><type pos:start="133:17" pos:end="133:23"><name pos:start="133:17" pos:end="133:23">int32_t</name></type> <name pos:start="133:25" pos:end="133:25">b</name> <init pos:start="133:27" pos:end="133:33">= <expr pos:start="133:29" pos:end="133:33"><name pos:start="133:29" pos:end="133:33"><name pos:start="133:29" pos:end="133:30">p2</name><index pos:start="133:31" pos:end="133:33">[<expr pos:start="133:32" pos:end="133:32"><name pos:start="133:32" pos:end="133:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:34"><expr pos:start="135:17" pos:end="135:33"><name pos:start="135:17" pos:end="135:21"><name pos:start="135:17" pos:end="135:18">p1</name><index pos:start="135:19" pos:end="135:21">[<expr pos:start="135:20" pos:end="135:20"><name pos:start="135:20" pos:end="135:20">i</name></expr>]</index></name>     <operator pos:start="135:27" pos:end="135:27">=</operator> <name pos:start="135:29" pos:end="135:29">a</name> <operator pos:start="135:31" pos:end="135:31">+</operator> <name pos:start="135:33" pos:end="135:33">b</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>





        <for pos:start="145:9" pos:end="147:45">for <control pos:start="145:13" pos:end="145:42">(<init pos:start="145:14" pos:end="145:19"><expr pos:start="145:14" pos:end="145:18"><name pos:start="145:14" pos:end="145:14">i</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>;</init> <condition pos:start="145:21" pos:end="145:37"><expr pos:start="145:21" pos:end="145:36"><name pos:start="145:21" pos:end="145:21">i</name> <operator pos:start="145:23" pos:end="145:23">&lt;</operator> <name pos:start="145:25" pos:end="145:36">filter_order</name></expr>;</condition> <incr pos:start="145:39" pos:end="145:41"><expr pos:start="145:39" pos:end="145:41"><name pos:start="145:39" pos:end="145:39">i</name><operator pos:start="145:40" pos:end="145:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:13" pos:end="147:45"><block_content pos:start="147:13" pos:end="147:45">

            <expr_stmt pos:start="147:13" pos:end="147:45"><expr pos:start="147:13" pos:end="147:44"><name pos:start="147:13" pos:end="147:26"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:23">residues</name><index pos:start="147:24" pos:end="147:26">[<expr pos:start="147:25" pos:end="147:25"><name pos:start="147:25" pos:end="147:25">i</name></expr>]</index></name> <operator pos:start="147:28" pos:end="147:28">=</operator> <operator pos:start="147:30" pos:end="147:30">*</operator><name pos:start="147:31" pos:end="147:32">p2</name><operator pos:start="147:33" pos:end="147:34">++</operator> <operator pos:start="147:36" pos:end="147:37">&gt;&gt;</operator> <name pos:start="147:39" pos:end="147:44">dshift</name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="151:9" pos:end="151:25"><expr pos:start="151:9" pos:end="151:24"><name pos:start="151:9" pos:end="151:10">p1</name> <operator pos:start="151:12" pos:end="151:13">+=</operator> <name pos:start="151:15" pos:end="151:24">order_half</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:55"><expr pos:start="153:9" pos:end="153:54"><name pos:start="153:9" pos:end="153:9">x</name> <operator pos:start="153:11" pos:end="153:11">=</operator> <call pos:start="153:13" pos:end="153:39"><name pos:start="153:13" pos:end="153:26">FF_ARRAY_ELEMS</name><argument_list pos:start="153:27" pos:end="153:39">(<argument pos:start="153:28" pos:end="153:38"><expr pos:start="153:28" pos:end="153:38"><name pos:start="153:28" pos:end="153:38"><name pos:start="153:28" pos:end="153:28">s</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:38">residues</name></name></expr></argument>)</argument_list></call> <operator pos:start="153:41" pos:end="153:41">-</operator> <name pos:start="153:43" pos:end="153:54">filter_order</name></expr>;</expr_stmt>

        <for pos:start="155:9" pos:end="211:9">for <control pos:start="155:13" pos:end="155:43">(<init pos:start="155:14" pos:end="155:14">;</init> <condition pos:start="155:16" pos:end="155:27"><expr pos:start="155:16" pos:end="155:26"><name pos:start="155:16" pos:end="155:22">length2</name> <operator pos:start="155:24" pos:end="155:24">&gt;</operator> <literal type="number" pos:start="155:26" pos:end="155:26">0</literal></expr>;</condition> <incr pos:start="155:29" pos:end="155:42"><expr pos:start="155:29" pos:end="155:42"><name pos:start="155:29" pos:end="155:35">length2</name> <operator pos:start="155:37" pos:end="155:38">-=</operator> <name pos:start="155:40" pos:end="155:42">tmp</name></expr></incr>)</control> <block pos:start="155:45" pos:end="211:9">{<block_content pos:start="157:13" pos:end="209:70">

            <expr_stmt pos:start="157:13" pos:end="157:36"><expr pos:start="157:13" pos:end="157:35"><name pos:start="157:13" pos:end="157:15">tmp</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <call pos:start="157:19" pos:end="157:35"><name pos:start="157:19" pos:end="157:23">FFMIN</name><argument_list pos:start="157:24" pos:end="157:35">(<argument pos:start="157:25" pos:end="157:31"><expr pos:start="157:25" pos:end="157:31"><name pos:start="157:25" pos:end="157:31">length2</name></expr></argument>, <argument pos:start="157:34" pos:end="157:34"><expr pos:start="157:34" pos:end="157:34"><name pos:start="157:34" pos:end="157:34">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="161:13" pos:end="163:64">for <control pos:start="161:17" pos:end="161:37">(<init pos:start="161:18" pos:end="161:23"><expr pos:start="161:18" pos:end="161:22"><name pos:start="161:18" pos:end="161:18">i</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <literal type="number" pos:start="161:22" pos:end="161:22">0</literal></expr>;</init> <condition pos:start="161:25" pos:end="161:32"><expr pos:start="161:25" pos:end="161:31"><name pos:start="161:25" pos:end="161:25">i</name> <operator pos:start="161:27" pos:end="161:27">&lt;</operator> <name pos:start="161:29" pos:end="161:31">tmp</name></expr>;</condition> <incr pos:start="161:34" pos:end="161:36"><expr pos:start="161:34" pos:end="161:36"><name pos:start="161:34" pos:end="161:34">i</name><operator pos:start="161:35" pos:end="161:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="163:17" pos:end="163:64"><block_content pos:start="163:17" pos:end="163:64">

                <expr_stmt pos:start="163:17" pos:end="163:64"><expr pos:start="163:17" pos:end="163:63"><name pos:start="163:17" pos:end="163:45"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:27">residues</name><index pos:start="163:28" pos:end="163:45">[<expr pos:start="163:29" pos:end="163:44"><name pos:start="163:29" pos:end="163:40">filter_order</name> <operator pos:start="163:42" pos:end="163:42">+</operator> <name pos:start="163:44" pos:end="163:44">i</name></expr>]</index></name> <operator pos:start="163:47" pos:end="163:47">=</operator> <operator pos:start="163:49" pos:end="163:49">*</operator><name pos:start="163:50" pos:end="163:51">p2</name><operator pos:start="163:52" pos:end="163:53">++</operator> <operator pos:start="163:55" pos:end="163:56">&gt;&gt;</operator> <name pos:start="163:58" pos:end="163:63">dshift</name></expr>;</expr_stmt></block_content></block></for>



            <for pos:start="167:13" pos:end="205:13">for <control pos:start="167:17" pos:end="167:37">(<init pos:start="167:18" pos:end="167:23"><expr pos:start="167:18" pos:end="167:22"><name pos:start="167:18" pos:end="167:18">i</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <literal type="number" pos:start="167:22" pos:end="167:22">0</literal></expr>;</init> <condition pos:start="167:25" pos:end="167:32"><expr pos:start="167:25" pos:end="167:31"><name pos:start="167:25" pos:end="167:25">i</name> <operator pos:start="167:27" pos:end="167:27">&lt;</operator> <name pos:start="167:29" pos:end="167:31">tmp</name></expr>;</condition> <incr pos:start="167:34" pos:end="167:36"><expr pos:start="167:34" pos:end="167:36"><name pos:start="167:34" pos:end="167:34">i</name><operator pos:start="167:35" pos:end="167:36">++</operator></expr></incr>)</control> <block pos:start="167:39" pos:end="205:13">{<block_content pos:start="169:17" pos:end="203:26">

                <decl_stmt pos:start="169:17" pos:end="169:31"><decl pos:start="169:17" pos:end="169:30"><type pos:start="169:17" pos:end="169:19"><name pos:start="169:17" pos:end="169:19">int</name></type> <name pos:start="169:21" pos:end="169:21">v</name> <init pos:start="169:23" pos:end="169:30">= <expr pos:start="169:25" pos:end="169:30"><literal type="number" pos:start="169:25" pos:end="169:25">1</literal> <operator pos:start="169:27" pos:end="169:28">&lt;&lt;</operator> <literal type="number" pos:start="169:30" pos:end="169:30">9</literal></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="173:17" pos:end="197:17"><if pos:start="173:17" pos:end="179:17">if <condition pos:start="173:20" pos:end="173:39">(<expr pos:start="173:21" pos:end="173:38"><name pos:start="173:21" pos:end="173:32">filter_order</name> <operator pos:start="173:34" pos:end="173:35">==</operator> <literal type="number" pos:start="173:37" pos:end="173:38">16</literal></expr>)</condition> <block pos:start="173:41" pos:end="179:17">{<block_content pos:start="175:21" pos:end="177:67">

                    <expr_stmt pos:start="175:21" pos:end="177:67"><expr pos:start="175:21" pos:end="177:66"><name pos:start="175:21" pos:end="175:21">v</name> <operator pos:start="175:23" pos:end="175:24">+=</operator> <call pos:start="175:26" pos:end="177:66"><name pos:start="175:26" pos:end="175:52"><name pos:start="175:26" pos:end="175:26">s</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:32">adsp</name><operator pos:start="175:33" pos:end="175:33">.</operator><name pos:start="175:34" pos:end="175:52">scalarproduct_int16</name></name><argument_list pos:start="175:53" pos:end="177:66">(<argument pos:start="175:54" pos:end="175:68"><expr pos:start="175:54" pos:end="175:68"><operator pos:start="175:54" pos:end="175:54">&amp;</operator><name pos:start="175:55" pos:end="175:68"><name pos:start="175:55" pos:end="175:55">s</name><operator pos:start="175:56" pos:end="175:57">-&gt;</operator><name pos:start="175:58" pos:end="175:65">residues</name><index pos:start="175:66" pos:end="175:68">[<expr pos:start="175:67" pos:end="175:67"><name pos:start="175:67" pos:end="175:67">i</name></expr>]</index></name></expr></argument>, <argument pos:start="175:71" pos:end="175:79"><expr pos:start="175:71" pos:end="175:79"><name pos:start="175:71" pos:end="175:79"><name pos:start="175:71" pos:end="175:71">s</name><operator pos:start="175:72" pos:end="175:73">-&gt;</operator><name pos:start="175:74" pos:end="175:79">filter</name></name></expr></argument>,

                                                     <argument pos:start="177:54" pos:end="177:65"><expr pos:start="177:54" pos:end="177:65"><name pos:start="177:54" pos:end="177:65">filter_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="179:19" pos:end="197:17">else <block pos:start="179:24" pos:end="197:17">{<block_content pos:start="181:21" pos:end="195:59">

                    <expr_stmt pos:start="181:21" pos:end="195:59"><expr pos:start="181:21" pos:end="195:58"><name pos:start="181:21" pos:end="181:21">v</name> <operator pos:start="181:23" pos:end="181:24">+=</operator> <name pos:start="181:26" pos:end="181:43"><name pos:start="181:26" pos:end="181:26">s</name><operator pos:start="181:27" pos:end="181:28">-&gt;</operator><name pos:start="181:29" pos:end="181:36">residues</name><index pos:start="181:37" pos:end="181:43">[<expr pos:start="181:38" pos:end="181:42"><name pos:start="181:38" pos:end="181:38">i</name> <operator pos:start="181:40" pos:end="181:40">+</operator> <literal type="number" pos:start="181:42" pos:end="181:42">7</literal></expr>]</index></name> <operator pos:start="181:45" pos:end="181:45">*</operator> <name pos:start="181:47" pos:end="181:58"><name pos:start="181:47" pos:end="181:47">s</name><operator pos:start="181:48" pos:end="181:49">-&gt;</operator><name pos:start="181:50" pos:end="181:55">filter</name><index pos:start="181:56" pos:end="181:58">[<expr pos:start="181:57" pos:end="181:57"><literal type="number" pos:start="181:57" pos:end="181:57">7</literal></expr>]</index></name> <operator pos:start="181:60" pos:end="181:60">+</operator>

                         <name pos:start="183:26" pos:end="183:43"><name pos:start="183:26" pos:end="183:26">s</name><operator pos:start="183:27" pos:end="183:28">-&gt;</operator><name pos:start="183:29" pos:end="183:36">residues</name><index pos:start="183:37" pos:end="183:43">[<expr pos:start="183:38" pos:end="183:42"><name pos:start="183:38" pos:end="183:38">i</name> <operator pos:start="183:40" pos:end="183:40">+</operator> <literal type="number" pos:start="183:42" pos:end="183:42">6</literal></expr>]</index></name> <operator pos:start="183:45" pos:end="183:45">*</operator> <name pos:start="183:47" pos:end="183:58"><name pos:start="183:47" pos:end="183:47">s</name><operator pos:start="183:48" pos:end="183:49">-&gt;</operator><name pos:start="183:50" pos:end="183:55">filter</name><index pos:start="183:56" pos:end="183:58">[<expr pos:start="183:57" pos:end="183:57"><literal type="number" pos:start="183:57" pos:end="183:57">6</literal></expr>]</index></name> <operator pos:start="183:60" pos:end="183:60">+</operator>

                         <name pos:start="185:26" pos:end="185:43"><name pos:start="185:26" pos:end="185:26">s</name><operator pos:start="185:27" pos:end="185:28">-&gt;</operator><name pos:start="185:29" pos:end="185:36">residues</name><index pos:start="185:37" pos:end="185:43">[<expr pos:start="185:38" pos:end="185:42"><name pos:start="185:38" pos:end="185:38">i</name> <operator pos:start="185:40" pos:end="185:40">+</operator> <literal type="number" pos:start="185:42" pos:end="185:42">5</literal></expr>]</index></name> <operator pos:start="185:45" pos:end="185:45">*</operator> <name pos:start="185:47" pos:end="185:58"><name pos:start="185:47" pos:end="185:47">s</name><operator pos:start="185:48" pos:end="185:49">-&gt;</operator><name pos:start="185:50" pos:end="185:55">filter</name><index pos:start="185:56" pos:end="185:58">[<expr pos:start="185:57" pos:end="185:57"><literal type="number" pos:start="185:57" pos:end="185:57">5</literal></expr>]</index></name> <operator pos:start="185:60" pos:end="185:60">+</operator>

                         <name pos:start="187:26" pos:end="187:43"><name pos:start="187:26" pos:end="187:26">s</name><operator pos:start="187:27" pos:end="187:28">-&gt;</operator><name pos:start="187:29" pos:end="187:36">residues</name><index pos:start="187:37" pos:end="187:43">[<expr pos:start="187:38" pos:end="187:42"><name pos:start="187:38" pos:end="187:38">i</name> <operator pos:start="187:40" pos:end="187:40">+</operator> <literal type="number" pos:start="187:42" pos:end="187:42">4</literal></expr>]</index></name> <operator pos:start="187:45" pos:end="187:45">*</operator> <name pos:start="187:47" pos:end="187:58"><name pos:start="187:47" pos:end="187:47">s</name><operator pos:start="187:48" pos:end="187:49">-&gt;</operator><name pos:start="187:50" pos:end="187:55">filter</name><index pos:start="187:56" pos:end="187:58">[<expr pos:start="187:57" pos:end="187:57"><literal type="number" pos:start="187:57" pos:end="187:57">4</literal></expr>]</index></name> <operator pos:start="187:60" pos:end="187:60">+</operator>

                         <name pos:start="189:26" pos:end="189:43"><name pos:start="189:26" pos:end="189:26">s</name><operator pos:start="189:27" pos:end="189:28">-&gt;</operator><name pos:start="189:29" pos:end="189:36">residues</name><index pos:start="189:37" pos:end="189:43">[<expr pos:start="189:38" pos:end="189:42"><name pos:start="189:38" pos:end="189:38">i</name> <operator pos:start="189:40" pos:end="189:40">+</operator> <literal type="number" pos:start="189:42" pos:end="189:42">3</literal></expr>]</index></name> <operator pos:start="189:45" pos:end="189:45">*</operator> <name pos:start="189:47" pos:end="189:58"><name pos:start="189:47" pos:end="189:47">s</name><operator pos:start="189:48" pos:end="189:49">-&gt;</operator><name pos:start="189:50" pos:end="189:55">filter</name><index pos:start="189:56" pos:end="189:58">[<expr pos:start="189:57" pos:end="189:57"><literal type="number" pos:start="189:57" pos:end="189:57">3</literal></expr>]</index></name> <operator pos:start="189:60" pos:end="189:60">+</operator>

                         <name pos:start="191:26" pos:end="191:43"><name pos:start="191:26" pos:end="191:26">s</name><operator pos:start="191:27" pos:end="191:28">-&gt;</operator><name pos:start="191:29" pos:end="191:36">residues</name><index pos:start="191:37" pos:end="191:43">[<expr pos:start="191:38" pos:end="191:42"><name pos:start="191:38" pos:end="191:38">i</name> <operator pos:start="191:40" pos:end="191:40">+</operator> <literal type="number" pos:start="191:42" pos:end="191:42">2</literal></expr>]</index></name> <operator pos:start="191:45" pos:end="191:45">*</operator> <name pos:start="191:47" pos:end="191:58"><name pos:start="191:47" pos:end="191:47">s</name><operator pos:start="191:48" pos:end="191:49">-&gt;</operator><name pos:start="191:50" pos:end="191:55">filter</name><index pos:start="191:56" pos:end="191:58">[<expr pos:start="191:57" pos:end="191:57"><literal type="number" pos:start="191:57" pos:end="191:57">2</literal></expr>]</index></name> <operator pos:start="191:60" pos:end="191:60">+</operator>

                         <name pos:start="193:26" pos:end="193:43"><name pos:start="193:26" pos:end="193:26">s</name><operator pos:start="193:27" pos:end="193:28">-&gt;</operator><name pos:start="193:29" pos:end="193:36">residues</name><index pos:start="193:37" pos:end="193:43">[<expr pos:start="193:38" pos:end="193:42"><name pos:start="193:38" pos:end="193:38">i</name> <operator pos:start="193:40" pos:end="193:40">+</operator> <literal type="number" pos:start="193:42" pos:end="193:42">1</literal></expr>]</index></name> <operator pos:start="193:45" pos:end="193:45">*</operator> <name pos:start="193:47" pos:end="193:58"><name pos:start="193:47" pos:end="193:47">s</name><operator pos:start="193:48" pos:end="193:49">-&gt;</operator><name pos:start="193:50" pos:end="193:55">filter</name><index pos:start="193:56" pos:end="193:58">[<expr pos:start="193:57" pos:end="193:57"><literal type="number" pos:start="193:57" pos:end="193:57">1</literal></expr>]</index></name> <operator pos:start="193:60" pos:end="193:60">+</operator>

                         <name pos:start="195:26" pos:end="195:43"><name pos:start="195:26" pos:end="195:26">s</name><operator pos:start="195:27" pos:end="195:28">-&gt;</operator><name pos:start="195:29" pos:end="195:36">residues</name><index pos:start="195:37" pos:end="195:43">[<expr pos:start="195:38" pos:end="195:38"><name pos:start="195:38" pos:end="195:38">i</name></expr>    ]</index></name> <operator pos:start="195:45" pos:end="195:45">*</operator> <name pos:start="195:47" pos:end="195:58"><name pos:start="195:47" pos:end="195:47">s</name><operator pos:start="195:48" pos:end="195:49">-&gt;</operator><name pos:start="195:50" pos:end="195:55">filter</name><index pos:start="195:56" pos:end="195:58">[<expr pos:start="195:57" pos:end="195:57"><literal type="number" pos:start="195:57" pos:end="195:57">0</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="201:17" pos:end="201:65"><expr pos:start="201:17" pos:end="201:64"><name pos:start="201:17" pos:end="201:17">v</name> <operator pos:start="201:19" pos:end="201:19">=</operator> <operator pos:start="201:21" pos:end="201:21">(</operator><call pos:start="201:22" pos:end="201:47"><name pos:start="201:22" pos:end="201:34">av_clip_intp2</name><argument_list pos:start="201:35" pos:end="201:47">(<argument pos:start="201:36" pos:end="201:42"><expr pos:start="201:36" pos:end="201:42"><name pos:start="201:36" pos:end="201:36">v</name> <operator pos:start="201:38" pos:end="201:39">&gt;&gt;</operator> <literal type="number" pos:start="201:41" pos:end="201:42">10</literal></expr></argument>, <argument pos:start="201:45" pos:end="201:46"><expr pos:start="201:45" pos:end="201:46"><literal type="number" pos:start="201:45" pos:end="201:46">13</literal></expr></argument>)</argument_list></call> <operator pos:start="201:49" pos:end="201:50">&lt;&lt;</operator> <name pos:start="201:52" pos:end="201:57">dshift</name><operator pos:start="201:58" pos:end="201:58">)</operator> <operator pos:start="201:60" pos:end="201:60">-</operator> <operator pos:start="201:62" pos:end="201:62">*</operator><name pos:start="201:63" pos:end="201:64">p1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:26"><expr pos:start="203:17" pos:end="203:25"><operator pos:start="203:17" pos:end="203:17">*</operator><name pos:start="203:18" pos:end="203:19">p1</name><operator pos:start="203:20" pos:end="203:21">++</operator> <operator pos:start="203:23" pos:end="203:23">=</operator> <name pos:start="203:25" pos:end="203:25">v</name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="209:13" pos:end="209:70"><expr pos:start="209:13" pos:end="209:69"><call pos:start="209:13" pos:end="209:69"><name pos:start="209:13" pos:end="209:19">memmove</name><argument_list pos:start="209:20" pos:end="209:69">(<argument pos:start="209:21" pos:end="209:31"><expr pos:start="209:21" pos:end="209:31"><name pos:start="209:21" pos:end="209:31"><name pos:start="209:21" pos:end="209:21">s</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:31">residues</name></name></expr></argument>, <argument pos:start="209:34" pos:end="209:50"><expr pos:start="209:34" pos:end="209:50"><operator pos:start="209:34" pos:end="209:34">&amp;</operator><name pos:start="209:35" pos:end="209:50"><name pos:start="209:35" pos:end="209:35">s</name><operator pos:start="209:36" pos:end="209:37">-&gt;</operator><name pos:start="209:38" pos:end="209:45">residues</name><index pos:start="209:46" pos:end="209:50">[<expr pos:start="209:47" pos:end="209:49"><name pos:start="209:47" pos:end="209:49">tmp</name></expr>]</index></name></expr></argument>, <argument pos:start="209:53" pos:end="209:68"><expr pos:start="209:53" pos:end="209:68"><literal type="number" pos:start="209:53" pos:end="209:53">2</literal> <operator pos:start="209:55" pos:end="209:55">*</operator> <name pos:start="209:57" pos:end="209:68">filter_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="215:9" pos:end="215:17"><expr pos:start="215:9" pos:end="215:16"><call pos:start="215:9" pos:end="215:16"><name pos:start="215:9" pos:end="215:14">emms_c</name><argument_list pos:start="215:15" pos:end="215:16">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="217:9" pos:end="217:14">break;</break>

    </block_content>}</block>

    </block_content>}</block></switch>



    <if_stmt pos:start="225:5" pos:end="231:5"><if pos:start="225:5" pos:end="231:5">if <condition pos:start="225:8" pos:end="225:37">(<expr pos:start="225:9" pos:end="225:36"><name pos:start="225:9" pos:end="225:16"><name pos:start="225:9" pos:end="225:9">s</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:16">dmode</name></name> <operator pos:start="225:18" pos:end="225:18">&gt;</operator> <literal type="number" pos:start="225:20" pos:end="225:20">0</literal> <operator pos:start="225:22" pos:end="225:23">&amp;&amp;</operator> <name pos:start="225:25" pos:end="225:32"><name pos:start="225:25" pos:end="225:25">s</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:32">dmode</name></name> <operator pos:start="225:34" pos:end="225:34">&lt;</operator> <literal type="number" pos:start="225:36" pos:end="225:36">6</literal></expr>)</condition> <block pos:start="225:39" pos:end="231:5">{<block_content pos:start="227:9" pos:end="229:20">

        <expr_stmt pos:start="227:9" pos:end="227:20"><expr pos:start="227:9" pos:end="227:19"><name pos:start="227:9" pos:end="227:13"><name pos:start="227:9" pos:end="227:10">p1</name><index pos:start="227:11" pos:end="227:13">[<expr pos:start="227:12" pos:end="227:12"><literal type="number" pos:start="227:12" pos:end="227:12">0</literal></expr>]</index></name> <operator pos:start="227:15" pos:end="227:15">=</operator> <name pos:start="227:17" pos:end="227:19">bp1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:20"><expr pos:start="229:9" pos:end="229:19"><name pos:start="229:9" pos:end="229:13"><name pos:start="229:9" pos:end="229:10">p2</name><index pos:start="229:11" pos:end="229:13">[<expr pos:start="229:12" pos:end="229:12"><literal type="number" pos:start="229:12" pos:end="229:12">0</literal></expr>]</index></name> <operator pos:start="229:15" pos:end="229:15">=</operator> <name pos:start="229:17" pos:end="229:19">bp2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="235:5" pos:end="235:13">return <expr pos:start="235:12" pos:end="235:12"><literal type="number" pos:start="235:12" pos:end="235:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
