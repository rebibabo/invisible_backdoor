<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27210.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">asf_read_replicated_data</name><parameter_list pos:start="1:36" pos:end="1:75">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:51">AVFormatContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><name pos:start="1:57" pos:end="1:65">ASFPacket</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:74">asf_pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="27:25"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:28">(<expr pos:start="13:9" pos:end="13:27"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:27"><name pos:start="13:10" pos:end="13:16">asf_pkt</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:27">data_size</name></name></expr>)</condition> <block pos:start="13:30" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:23">

        <expr_stmt pos:start="15:9" pos:end="15:64"><expr pos:start="15:9" pos:end="15:63"><name pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:15">asf_pkt</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:26">data_size</name></name> <operator pos:start="15:28" pos:end="15:28">=</operator> <name pos:start="15:30" pos:end="15:47"><name pos:start="15:30" pos:end="15:36">asf_pkt</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:47">size_left</name></name> <operator pos:start="15:49" pos:end="15:49">=</operator> <call pos:start="15:51" pos:end="15:63"><name pos:start="15:51" pos:end="15:59">avio_rl32</name><argument_list pos:start="15:60" pos:end="15:63">(<argument pos:start="15:61" pos:end="15:62"><expr pos:start="15:61" pos:end="15:62"><name pos:start="15:61" pos:end="15:62">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="15:66" pos:end="15:90">// read media object size</comment>

        <if_stmt pos:start="17:9" pos:end="19:39"><if pos:start="17:9" pos:end="19:39">if <condition pos:start="17:12" pos:end="17:36">(<expr pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:19">asf_pkt</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:30">data_size</name></name> <operator pos:start="17:32" pos:end="17:33">&lt;=</operator> <literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:39"><block_content pos:start="19:13" pos:end="19:39">

            <return pos:start="19:13" pos:end="19:39">return <expr pos:start="19:20" pos:end="19:38"><name pos:start="19:20" pos:end="19:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="23:23"><if pos:start="21:9" pos:end="23:23">if <condition pos:start="21:12" pos:end="21:75">(<expr pos:start="21:13" pos:end="21:74"><operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:16">ret</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:69"><name pos:start="21:20" pos:end="21:32">av_new_packet</name><argument_list pos:start="21:33" pos:end="21:69">(<argument pos:start="21:34" pos:end="21:48"><expr pos:start="21:34" pos:end="21:48"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:48"><name pos:start="21:35" pos:end="21:41">asf_pkt</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:48">avpkt</name></name></expr></argument>, <argument pos:start="21:51" pos:end="21:68"><expr pos:start="21:51" pos:end="21:68"><name pos:start="21:51" pos:end="21:68"><name pos:start="21:51" pos:end="21:57">asf_pkt</name><operator pos:start="21:58" pos:end="21:59">-&gt;</operator><name pos:start="21:60" pos:end="21:68">data_size</name></name></expr></argument>)</argument_list></call><operator pos:start="21:70" pos:end="21:70">)</operator> <operator pos:start="21:72" pos:end="21:72">&lt;</operator> <literal type="number" pos:start="21:74" pos:end="21:74">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:23"><block_content pos:start="23:13" pos:end="23:23">

            <return pos:start="23:13" pos:end="23:23">return <expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="27:25">else<block type="pseudo" pos:start="27:9" pos:end="27:25"><block_content pos:start="27:9" pos:end="27:25">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:17">avio_skip</name><argument_list pos:start="27:18" pos:end="27:24">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">pb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="27:27" pos:end="27:73">// reading of media object size is already done</comment>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:11">asf_pkt</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:16">dts</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:28">avio_rl32</name><argument_list pos:start="29:29" pos:end="29:32">(<argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><name pos:start="29:30" pos:end="29:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="29:35" pos:end="29:59">// read presentation time</comment>

    <if_stmt pos:start="31:5" pos:end="33:45"><if pos:start="31:5" pos:end="33:45">if <condition pos:start="31:8" pos:end="31:54">(<expr pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:11">asf</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:25">rep_data_len</name></name> <operator pos:start="31:27" pos:end="31:28">&amp;&amp;</operator> <operator pos:start="31:30" pos:end="31:30">(</operator><name pos:start="31:31" pos:end="31:47"><name pos:start="31:31" pos:end="31:33">asf</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:47">rep_data_len</name></name> <operator pos:start="31:49" pos:end="31:50">&gt;=</operator> <literal type="number" pos:start="31:52" pos:end="31:52">8</literal><operator pos:start="31:53" pos:end="31:53">)</operator></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:45"><block_content pos:start="33:9" pos:end="33:45">

        <expr_stmt pos:start="33:9" pos:end="33:45"><expr pos:start="33:9" pos:end="33:44"><call pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:17">avio_skip</name><argument_list pos:start="33:18" pos:end="33:44">(<argument pos:start="33:19" pos:end="33:20"><expr pos:start="33:19" pos:end="33:20"><name pos:start="33:19" pos:end="33:20">pb</name></expr></argument>, <argument pos:start="33:23" pos:end="33:43"><expr pos:start="33:23" pos:end="33:43"><name pos:start="33:23" pos:end="33:39"><name pos:start="33:23" pos:end="33:25">asf</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:39">rep_data_len</name></name> <operator pos:start="33:41" pos:end="33:41">-</operator> <literal type="number" pos:start="33:43" pos:end="33:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="33:47" pos:end="33:69">// skip replicated data</comment>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
