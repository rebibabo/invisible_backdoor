<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26690.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:49">protocol_client_auth_sasl_mechname_len</name><parameter_list pos:start="1:50" pos:end="1:90">(<parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:58">VncState</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">vs</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:77"><decl pos:start="1:65" pos:end="1:77"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:71">uint8_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">data</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:89"><decl pos:start="1:80" pos:end="1:89"><type pos:start="1:80" pos:end="1:89"><name pos:start="1:80" pos:end="1:85">size_t</name></type> <name pos:start="1:87" pos:end="1:89">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:20">mechlen</name> <init pos:start="5:22" pos:end="5:40">= <expr pos:start="5:24" pos:end="5:40"><call pos:start="5:24" pos:end="5:40"><name pos:start="5:24" pos:end="5:31">read_u32</name><argument_list pos:start="5:32" pos:end="5:40">(<argument pos:start="5:33" pos:end="5:36"><expr pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:36">data</name></expr></argument>, <argument pos:start="5:39" pos:end="5:39"><expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:55"><expr pos:start="7:5" pos:end="7:54"><call pos:start="7:5" pos:end="7:54"><name pos:start="7:5" pos:end="7:13">VNC_DEBUG</name><argument_list pos:start="7:14" pos:end="7:54">(<argument pos:start="7:15" pos:end="7:44"><expr pos:start="7:15" pos:end="7:44"><literal type="string" pos:start="7:15" pos:end="7:44">"Got client mechname len %d\n"</literal></expr></argument>, <argument pos:start="7:47" pos:end="7:53"><expr pos:start="7:47" pos:end="7:53"><name pos:start="7:47" pos:end="7:53">mechlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:22">(<expr pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:15">mechlen</name> <operator pos:start="9:17" pos:end="9:17">&gt;</operator> <literal type="number" pos:start="9:19" pos:end="9:21">100</literal></expr>)</condition> <block pos:start="9:24" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:18">

        <expr_stmt pos:start="11:9" pos:end="11:63"><expr pos:start="11:9" pos:end="11:62"><call pos:start="11:9" pos:end="11:62"><name pos:start="11:9" pos:end="11:17">VNC_DEBUG</name><argument_list pos:start="11:18" pos:end="11:62">(<argument pos:start="11:19" pos:end="11:52"><expr pos:start="11:19" pos:end="11:52"><literal type="string" pos:start="11:19" pos:end="11:52">"Too long SASL mechname data %d\n"</literal></expr></argument>, <argument pos:start="11:55" pos:end="11:61"><expr pos:start="11:55" pos:end="11:61"><name pos:start="11:55" pos:end="11:61">mechlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:29"><expr pos:start="13:9" pos:end="13:28"><call pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:24">vnc_client_error</name><argument_list pos:start="13:25" pos:end="13:28">(<argument pos:start="13:26" pos:end="13:27"><expr pos:start="13:26" pos:end="13:27"><name pos:start="13:26" pos:end="13:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:15">mechlen</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">1</literal></expr>)</condition> <block pos:start="19:22" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:18">

        <expr_stmt pos:start="21:9" pos:end="21:59"><expr pos:start="21:9" pos:end="21:58"><call pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:17">VNC_DEBUG</name><argument_list pos:start="21:18" pos:end="21:58">(<argument pos:start="21:19" pos:end="21:48"><expr pos:start="21:19" pos:end="21:48"><literal type="string" pos:start="21:19" pos:end="21:48">"Too short SASL mechname %d\n"</literal></expr></argument>, <argument pos:start="21:51" pos:end="21:57"><expr pos:start="21:51" pos:end="21:57"><name pos:start="21:51" pos:end="21:57">mechlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><call pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:24">vnc_client_error</name><argument_list pos:start="23:25" pos:end="23:28">(<argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><name pos:start="23:26" pos:end="23:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:66"><expr pos:start="29:5" pos:end="29:65"><call pos:start="29:5" pos:end="29:65"><name pos:start="29:5" pos:end="29:17">vnc_read_when</name><argument_list pos:start="29:18" pos:end="29:65">(<argument pos:start="29:19" pos:end="29:20"><expr pos:start="29:19" pos:end="29:20"><name pos:start="29:19" pos:end="29:20">vs</name></expr></argument>, <argument pos:start="29:23" pos:end="29:56"><expr pos:start="29:23" pos:end="29:56"><name pos:start="29:23" pos:end="29:56">protocol_client_auth_sasl_mechname</name></expr></argument>,<argument pos:start="29:58" pos:end="29:64"><expr pos:start="29:58" pos:end="29:64"><name pos:start="29:58" pos:end="29:64">mechlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
