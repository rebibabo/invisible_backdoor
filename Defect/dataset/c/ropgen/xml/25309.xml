<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25309.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">indeo3_decode_frame</name><parameter_list pos:start="1:31" pos:end="5:64">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:41"><decl pos:start="3:32" pos:end="3:41"><type pos:start="3:32" pos:end="3:41"><name pos:start="3:32" pos:end="3:35">void</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">data</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:46">int</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:57">data_size</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:49"><decl pos:start="5:32" pos:end="5:49"><type pos:start="5:32" pos:end="5:49"><name pos:start="5:32" pos:end="5:39">unsigned</name> <name pos:start="5:41" pos:end="5:44">char</name> <modifier pos:start="5:46" pos:end="5:46">*</modifier></type><name pos:start="5:47" pos:end="5:49">buf</name></decl></parameter>, <parameter pos:start="5:52" pos:end="5:63"><decl pos:start="5:52" pos:end="5:63"><type pos:start="5:52" pos:end="5:63"><name pos:start="5:52" pos:end="5:54">int</name></type> <name pos:start="5:56" pos:end="5:63">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="111:1">{<block_content pos:start="9:5" pos:end="109:20">

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">Indeo3DecodeContext</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:26">s</name><init pos:start="9:27" pos:end="9:43">=<expr pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:32">avctx</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">src</name></decl>, <decl pos:start="11:25" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:29">dest</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">y</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:16">buf_size</name> <operator pos:start="19:18" pos:end="19:19">==</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>)</condition> <block pos:start="19:24" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><call pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:19">iv_decode_frame</name><argument_list pos:start="27:20" pos:end="27:37">(<argument pos:start="27:21" pos:end="27:21"><expr pos:start="27:21" pos:end="27:21"><name pos:start="27:21" pos:end="27:21">s</name></expr></argument>, <argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">buf</name></expr></argument>, <argument pos:start="27:29" pos:end="27:36"><expr pos:start="27:29" pos:end="27:36"><name pos:start="27:29" pos:end="27:36">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:48"><if pos:start="31:5" pos:end="33:48">if<condition pos:start="31:7" pos:end="31:24">(<expr pos:start="31:8" pos:end="31:23"><name pos:start="31:8" pos:end="31:23"><name pos:start="31:8" pos:end="31:8">s</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:15">frame</name><operator pos:start="31:16" pos:end="31:16">.</operator><name pos:start="31:17" pos:end="31:20">data</name><index pos:start="31:21" pos:end="31:23">[<expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:48"><block_content pos:start="33:9" pos:end="33:48">

        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><call pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:29">release_buffer</name></name><argument_list pos:start="33:30" pos:end="33:47">(<argument pos:start="33:31" pos:end="33:35"><expr pos:start="33:31" pos:end="33:35"><name pos:start="33:31" pos:end="33:35">avctx</name></expr></argument>, <argument pos:start="33:38" pos:end="33:46"><expr pos:start="33:38" pos:end="33:46"><operator pos:start="33:38" pos:end="33:38">&amp;</operator><name pos:start="33:39" pos:end="33:46"><name pos:start="33:39" pos:end="33:39">s</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:46">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:12">frame</name><operator pos:start="37:13" pos:end="37:13">.</operator><name pos:start="37:14" pos:end="37:22">reference</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if<condition pos:start="39:7" pos:end="39:47">(<expr pos:start="39:8" pos:end="39:46"><call pos:start="39:8" pos:end="39:42"><name pos:start="39:8" pos:end="39:24"><name pos:start="39:8" pos:end="39:12">avctx</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:24">get_buffer</name></name><argument_list pos:start="39:25" pos:end="39:42">(<argument pos:start="39:26" pos:end="39:30"><expr pos:start="39:26" pos:end="39:30"><name pos:start="39:26" pos:end="39:30">avctx</name></expr></argument>, <argument pos:start="39:33" pos:end="39:41"><expr pos:start="39:33" pos:end="39:41"><operator pos:start="39:33" pos:end="39:33">&amp;</operator><name pos:start="39:34" pos:end="39:41"><name pos:start="39:34" pos:end="39:34">s</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:41">frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:44" pos:end="39:44">&lt;</operator> <literal type="number" pos:start="39:46" pos:end="39:46">0</literal></expr>)</condition> <block pos:start="39:49" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:64"><expr pos:start="41:9" pos:end="41:63"><call pos:start="41:9" pos:end="41:63"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:63">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:23">avctx</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:37"><expr pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:40" pos:end="41:62"><expr pos:start="41:40" pos:end="41:62"><literal type="string" pos:start="41:40" pos:end="41:62">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:7">src</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <name pos:start="49:11" pos:end="49:28"><name pos:start="49:11" pos:end="49:11">s</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:22">cur_frame</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:28">Ybuf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:28"><expr pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:8">dest</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <name pos:start="51:12" pos:end="51:27"><name pos:start="51:12" pos:end="51:12">s</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:19">frame</name><operator pos:start="51:20" pos:end="51:20">.</operator><name pos:start="51:21" pos:end="51:24">data</name><index pos:start="51:25" pos:end="51:27">[<expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="61:5">for <control pos:start="53:9" pos:end="53:35">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">y</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:30"><expr pos:start="53:17" pos:end="53:29"><name pos:start="53:17" pos:end="53:17">y</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:29">height</name></name></expr>;</condition> <incr pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:32">y</name><operator pos:start="53:33" pos:end="53:34">++</operator></expr></incr>)</control> <block pos:start="53:37" pos:end="61:5">{<block_content pos:start="55:7" pos:end="59:35">

      <expr_stmt pos:start="55:7" pos:end="55:43"><expr pos:start="55:7" pos:end="55:42"><call pos:start="55:7" pos:end="55:42"><name pos:start="55:7" pos:end="55:12">memcpy</name><argument_list pos:start="55:13" pos:end="55:42">(<argument pos:start="55:14" pos:end="55:17"><expr pos:start="55:14" pos:end="55:17"><name pos:start="55:14" pos:end="55:17">dest</name></expr></argument>, <argument pos:start="55:20" pos:end="55:22"><expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">src</name></expr></argument>, <argument pos:start="55:25" pos:end="55:41"><expr pos:start="55:25" pos:end="55:41"><name pos:start="55:25" pos:end="55:41"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:36">cur_frame</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:41">y_w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="57:7" pos:end="57:31"><expr pos:start="57:7" pos:end="57:30"><name pos:start="57:7" pos:end="57:9">src</name> <operator pos:start="57:11" pos:end="57:12">+=</operator> <name pos:start="57:14" pos:end="57:30"><name pos:start="57:14" pos:end="57:14">s</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:25">cur_frame</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:30">y_w</name></name></expr>;</expr_stmt>

      <expr_stmt pos:start="59:7" pos:end="59:35"><expr pos:start="59:7" pos:end="59:34"><name pos:start="59:7" pos:end="59:10">dest</name> <operator pos:start="59:12" pos:end="59:13">+=</operator> <name pos:start="59:15" pos:end="59:34"><name pos:start="59:15" pos:end="59:15">s</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:22">frame</name><operator pos:start="59:23" pos:end="59:23">.</operator><name pos:start="59:24" pos:end="59:31">linesize</name><index pos:start="59:32" pos:end="59:34">[<expr pos:start="59:33" pos:end="59:33"><literal type="number" pos:start="59:33" pos:end="59:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="65:5" pos:end="99:5"><if pos:start="65:5" pos:end="99:5">if <condition pos:start="65:8" pos:end="65:45">(<expr pos:start="65:9" pos:end="65:44"><operator pos:start="65:9" pos:end="65:9">!</operator><operator pos:start="65:10" pos:end="65:10">(</operator><name pos:start="65:11" pos:end="65:25"><name pos:start="65:11" pos:end="65:11">s</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:18">avctx</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:25">flags</name></name> <operator pos:start="65:27" pos:end="65:27">&amp;</operator> <name pos:start="65:29" pos:end="65:43">CODEC_FLAG_GRAY</name><operator pos:start="65:44" pos:end="65:44">)</operator></expr>)</condition>

    <block pos:start="67:5" pos:end="99:5">{<block_content pos:start="69:5" pos:end="97:5">

    <expr_stmt pos:start="69:5" pos:end="69:29"><expr pos:start="69:5" pos:end="69:28"><name pos:start="69:5" pos:end="69:7">src</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <name pos:start="69:11" pos:end="69:28"><name pos:start="69:11" pos:end="69:11">s</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:22">cur_frame</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:28">Ubuf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:8">dest</name> <operator pos:start="71:10" pos:end="71:10">=</operator> <name pos:start="71:12" pos:end="71:27"><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:19">frame</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:24">data</name><index pos:start="71:25" pos:end="71:27">[<expr pos:start="71:26" pos:end="71:26"><literal type="number" pos:start="71:26" pos:end="71:26">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="81:5">for <control pos:start="73:9" pos:end="73:39">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">y</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:34"><expr pos:start="73:17" pos:end="73:33"><name pos:start="73:17" pos:end="73:17">y</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:29"><name pos:start="73:21" pos:end="73:21">s</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:29">height</name></name> <operator pos:start="73:31" pos:end="73:31">/</operator> <literal type="number" pos:start="73:33" pos:end="73:33">4</literal></expr>;</condition> <incr pos:start="73:36" pos:end="73:38"><expr pos:start="73:36" pos:end="73:38"><name pos:start="73:36" pos:end="73:36">y</name><operator pos:start="73:37" pos:end="73:38">++</operator></expr></incr>)</control> <block pos:start="73:41" pos:end="81:5">{<block_content pos:start="75:7" pos:end="79:35">

      <expr_stmt pos:start="75:7" pos:end="75:44"><expr pos:start="75:7" pos:end="75:43"><call pos:start="75:7" pos:end="75:43"><name pos:start="75:7" pos:end="75:12">memcpy</name><argument_list pos:start="75:13" pos:end="75:43">(<argument pos:start="75:14" pos:end="75:17"><expr pos:start="75:14" pos:end="75:17"><name pos:start="75:14" pos:end="75:17">dest</name></expr></argument>, <argument pos:start="75:20" pos:end="75:22"><expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">src</name></expr></argument>, <argument pos:start="75:25" pos:end="75:42"><expr pos:start="75:25" pos:end="75:42"><name pos:start="75:25" pos:end="75:42"><name pos:start="75:25" pos:end="75:25">s</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:36">cur_frame</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:42">uv_w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="77:7" pos:end="77:32"><expr pos:start="77:7" pos:end="77:31"><name pos:start="77:7" pos:end="77:9">src</name> <operator pos:start="77:11" pos:end="77:12">+=</operator> <name pos:start="77:14" pos:end="77:31"><name pos:start="77:14" pos:end="77:14">s</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:25">cur_frame</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:31">uv_w</name></name></expr>;</expr_stmt>

      <expr_stmt pos:start="79:7" pos:end="79:35"><expr pos:start="79:7" pos:end="79:34"><name pos:start="79:7" pos:end="79:10">dest</name> <operator pos:start="79:12" pos:end="79:13">+=</operator> <name pos:start="79:15" pos:end="79:34"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:22">frame</name><operator pos:start="79:23" pos:end="79:23">.</operator><name pos:start="79:24" pos:end="79:31">linesize</name><index pos:start="79:32" pos:end="79:34">[<expr pos:start="79:33" pos:end="79:33"><literal type="number" pos:start="79:33" pos:end="79:33">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="85:5" pos:end="85:29"><expr pos:start="85:5" pos:end="85:28"><name pos:start="85:5" pos:end="85:7">src</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <name pos:start="85:11" pos:end="85:28"><name pos:start="85:11" pos:end="85:11">s</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:22">cur_frame</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:28">Vbuf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:28"><expr pos:start="87:5" pos:end="87:27"><name pos:start="87:5" pos:end="87:8">dest</name> <operator pos:start="87:10" pos:end="87:10">=</operator> <name pos:start="87:12" pos:end="87:27"><name pos:start="87:12" pos:end="87:12">s</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:19">frame</name><operator pos:start="87:20" pos:end="87:20">.</operator><name pos:start="87:21" pos:end="87:24">data</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="89:5" pos:end="97:5">for <control pos:start="89:9" pos:end="89:39">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">y</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:34"><expr pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:17">y</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:29"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:29">height</name></name> <operator pos:start="89:31" pos:end="89:31">/</operator> <literal type="number" pos:start="89:33" pos:end="89:33">4</literal></expr>;</condition> <incr pos:start="89:36" pos:end="89:38"><expr pos:start="89:36" pos:end="89:38"><name pos:start="89:36" pos:end="89:36">y</name><operator pos:start="89:37" pos:end="89:38">++</operator></expr></incr>)</control> <block pos:start="89:41" pos:end="97:5">{<block_content pos:start="91:7" pos:end="95:35">

      <expr_stmt pos:start="91:7" pos:end="91:44"><expr pos:start="91:7" pos:end="91:43"><call pos:start="91:7" pos:end="91:43"><name pos:start="91:7" pos:end="91:12">memcpy</name><argument_list pos:start="91:13" pos:end="91:43">(<argument pos:start="91:14" pos:end="91:17"><expr pos:start="91:14" pos:end="91:17"><name pos:start="91:14" pos:end="91:17">dest</name></expr></argument>, <argument pos:start="91:20" pos:end="91:22"><expr pos:start="91:20" pos:end="91:22"><name pos:start="91:20" pos:end="91:22">src</name></expr></argument>, <argument pos:start="91:25" pos:end="91:42"><expr pos:start="91:25" pos:end="91:42"><name pos:start="91:25" pos:end="91:42"><name pos:start="91:25" pos:end="91:25">s</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:36">cur_frame</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:42">uv_w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="93:7" pos:end="93:32"><expr pos:start="93:7" pos:end="93:31"><name pos:start="93:7" pos:end="93:9">src</name> <operator pos:start="93:11" pos:end="93:12">+=</operator> <name pos:start="93:14" pos:end="93:31"><name pos:start="93:14" pos:end="93:14">s</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:25">cur_frame</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:31">uv_w</name></name></expr>;</expr_stmt>

      <expr_stmt pos:start="95:7" pos:end="95:35"><expr pos:start="95:7" pos:end="95:34"><name pos:start="95:7" pos:end="95:10">dest</name> <operator pos:start="95:12" pos:end="95:13">+=</operator> <name pos:start="95:15" pos:end="95:34"><name pos:start="95:15" pos:end="95:15">s</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:22">frame</name><operator pos:start="95:23" pos:end="95:23">.</operator><name pos:start="95:24" pos:end="95:31">linesize</name><index pos:start="95:32" pos:end="95:34">[<expr pos:start="95:33" pos:end="95:33"><literal type="number" pos:start="95:33" pos:end="95:33">2</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:31"><expr pos:start="103:5" pos:end="103:30"><operator pos:start="103:5" pos:end="103:5">*</operator><name pos:start="103:6" pos:end="103:14">data_size</name><operator pos:start="103:15" pos:end="103:15">=</operator><sizeof pos:start="103:16" pos:end="103:30">sizeof<argument_list pos:start="103:22" pos:end="103:30">(<argument pos:start="103:23" pos:end="103:29"><expr pos:start="103:23" pos:end="103:29"><name pos:start="103:23" pos:end="103:29">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:30"><expr pos:start="105:5" pos:end="105:29"><operator pos:start="105:5" pos:end="105:5">*</operator><operator pos:start="105:6" pos:end="105:6">(</operator><name pos:start="105:7" pos:end="105:13">AVFrame</name><operator pos:start="105:14" pos:end="105:14">*</operator><operator pos:start="105:15" pos:end="105:15">)</operator><name pos:start="105:16" pos:end="105:19">data</name><operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:29"><name pos:start="105:22" pos:end="105:22">s</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:29">frame</name></name></expr>;</expr_stmt>



    <return pos:start="109:5" pos:end="109:20">return <expr pos:start="109:12" pos:end="109:19"><name pos:start="109:12" pos:end="109:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
