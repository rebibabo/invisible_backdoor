<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24681.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">serial_init_core</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">SerialState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:43">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:16">(<expr pos:start="5:9" pos:end="5:15"><operator pos:start="5:9" pos:end="5:9">!</operator><name pos:start="5:10" pos:end="5:15"><name pos:start="5:10" pos:end="5:10">s</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:15">chr</name></name></expr>)</condition> <block pos:start="5:18" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:16">

        <expr_stmt pos:start="7:9" pos:end="7:75"><expr pos:start="7:9" pos:end="7:74"><call pos:start="7:9" pos:end="7:74"><name pos:start="7:9" pos:end="7:15">fprintf</name><argument_list pos:start="7:16" pos:end="7:74">(<argument pos:start="7:17" pos:end="7:22"><expr pos:start="7:17" pos:end="7:22"><name pos:start="7:17" pos:end="7:22">stderr</name></expr></argument>, <argument pos:start="7:25" pos:end="7:73"><expr pos:start="7:25" pos:end="7:73"><literal type="string" pos:start="7:25" pos:end="7:73">"Can't create serial device, empty char device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="9:9" pos:end="9:16"><expr pos:start="9:9" pos:end="9:15"><call pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:12">exit</name><argument_list pos:start="9:13" pos:end="9:15">(<argument pos:start="9:14" pos:end="9:14"><expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:90"><expr pos:start="15:5" pos:end="15:89"><name pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:24">modem_status_poll</name></name> <operator pos:start="15:26" pos:end="15:26">=</operator> <call pos:start="15:28" pos:end="15:89"><name pos:start="15:28" pos:end="15:41">qemu_new_timer</name><argument_list pos:start="15:42" pos:end="15:89">(<argument pos:start="15:43" pos:end="15:50"><expr pos:start="15:43" pos:end="15:50"><name pos:start="15:43" pos:end="15:50">vm_clock</name></expr></argument>, <argument pos:start="15:53" pos:end="15:85"><expr pos:start="15:53" pos:end="15:85"><operator pos:start="15:53" pos:end="15:53">(</operator><name pos:start="15:54" pos:end="15:64">QEMUTimerCB</name> <operator pos:start="15:66" pos:end="15:66">*</operator><operator pos:start="15:67" pos:end="15:67">)</operator> <name pos:start="15:69" pos:end="15:85">serial_update_msl</name></expr></argument>, <argument pos:start="15:88" pos:end="15:88"><expr pos:start="15:88" pos:end="15:88"><name pos:start="15:88" pos:end="15:88">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:90"><expr pos:start="19:5" pos:end="19:89"><name pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:25">fifo_timeout_timer</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <call pos:start="19:29" pos:end="19:89"><name pos:start="19:29" pos:end="19:42">qemu_new_timer</name><argument_list pos:start="19:43" pos:end="19:89">(<argument pos:start="19:44" pos:end="19:51"><expr pos:start="19:44" pos:end="19:51"><name pos:start="19:44" pos:end="19:51">vm_clock</name></expr></argument>, <argument pos:start="19:54" pos:end="19:85"><expr pos:start="19:54" pos:end="19:85"><operator pos:start="19:54" pos:end="19:54">(</operator><name pos:start="19:55" pos:end="19:65">QEMUTimerCB</name> <operator pos:start="19:67" pos:end="19:67">*</operator><operator pos:start="19:68" pos:end="19:68">)</operator> <name pos:start="19:70" pos:end="19:85">fifo_timeout_int</name></expr></argument>, <argument pos:start="19:88" pos:end="19:88"><expr pos:start="19:88" pos:end="19:88"><name pos:start="19:88" pos:end="19:88">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:81"><expr pos:start="21:5" pos:end="21:80"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:21">transmit_timer</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <call pos:start="21:25" pos:end="21:80"><name pos:start="21:25" pos:end="21:38">qemu_new_timer</name><argument_list pos:start="21:39" pos:end="21:80">(<argument pos:start="21:40" pos:end="21:47"><expr pos:start="21:40" pos:end="21:47"><name pos:start="21:40" pos:end="21:47">vm_clock</name></expr></argument>, <argument pos:start="21:50" pos:end="21:76"><expr pos:start="21:50" pos:end="21:76"><operator pos:start="21:50" pos:end="21:50">(</operator><name pos:start="21:51" pos:end="21:61">QEMUTimerCB</name> <operator pos:start="21:63" pos:end="21:63">*</operator><operator pos:start="21:64" pos:end="21:64">)</operator> <name pos:start="21:66" pos:end="21:76">serial_xmit</name></expr></argument>, <argument pos:start="21:79" pos:end="21:79"><expr pos:start="21:79" pos:end="21:79"><name pos:start="21:79" pos:end="21:79">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:23">qemu_register_reset</name><argument_list pos:start="25:24" pos:end="25:40">(<argument pos:start="25:25" pos:end="25:36"><expr pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:36">serial_reset</name></expr></argument>, <argument pos:start="25:39" pos:end="25:39"><expr pos:start="25:39" pos:end="25:39"><name pos:start="25:39" pos:end="25:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:20"><expr pos:start="27:5" pos:end="27:19"><call pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:16">serial_reset</name><argument_list pos:start="27:17" pos:end="27:19">(<argument pos:start="27:18" pos:end="27:18"><expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:43"><expr pos:start="31:5" pos:end="33:42"><call pos:start="31:5" pos:end="33:42"><name pos:start="31:5" pos:end="31:25">qemu_chr_add_handlers</name><argument_list pos:start="31:26" pos:end="33:42">(<argument pos:start="31:27" pos:end="31:32"><expr pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:32">chr</name></name></expr></argument>, <argument pos:start="31:35" pos:end="31:53"><expr pos:start="31:35" pos:end="31:53"><name pos:start="31:35" pos:end="31:53">serial_can_receive1</name></expr></argument>, <argument pos:start="31:56" pos:end="31:70"><expr pos:start="31:56" pos:end="31:70"><name pos:start="31:56" pos:end="31:70">serial_receive1</name></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:38">serial_event</name></expr></argument>, <argument pos:start="33:41" pos:end="33:41"><expr pos:start="33:41" pos:end="33:41"><name pos:start="33:41" pos:end="33:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
