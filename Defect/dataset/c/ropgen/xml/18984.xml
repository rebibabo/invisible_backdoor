<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18984.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">dcr_write_sdram</name> <parameter_list pos:start="1:29" pos:end="1:66">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:51"><decl pos:start="1:44" pos:end="1:51"><type pos:start="1:44" pos:end="1:51"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:51">dcrn</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:65">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">ppc4xx_sdram_t</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">sdram</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:19"><expr pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:9">sdram</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <name pos:start="9:13" pos:end="9:18">opaque</name></expr>;</expr_stmt>

    <switch pos:start="11:5" pos:end="165:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">dcrn</name></expr>)</condition> <block pos:start="11:19" pos:end="165:5">{<block_content pos:start="13:5" pos:end="163:14">

    <case pos:start="13:5" pos:end="13:24">case <expr pos:start="13:10" pos:end="13:23"><name pos:start="13:10" pos:end="13:23">SDRAM0_CFGADDR</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:13">sdram</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:19">addr</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:25">val</name></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:24">case <expr pos:start="19:10" pos:end="19:23"><name pos:start="19:10" pos:end="19:23">SDRAM0_CFGDATA</name></expr>:</case>

        <switch pos:start="21:9" pos:end="161:9">switch <condition pos:start="21:16" pos:end="21:28">(<expr pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:21">sdram</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:27">addr</name></name></expr>)</condition> <block pos:start="21:30" pos:end="161:9">{<block_content pos:start="23:9" pos:end="159:18">

        <case pos:start="23:9" pos:end="23:18">case <expr pos:start="23:14" pos:end="23:17"><literal type="number" pos:start="23:14" pos:end="23:17">0x00</literal></expr>:</case> <comment type="block" pos:start="23:20" pos:end="23:36">/* SDRAM_BESR0 */</comment>

            <expr_stmt pos:start="25:13" pos:end="25:33"><expr pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:17">sdram</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:24">besr0</name></name> <operator pos:start="25:26" pos:end="25:27">&amp;=</operator> <operator pos:start="25:29" pos:end="25:29">~</operator><name pos:start="25:30" pos:end="25:32">val</name></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:18">case <expr pos:start="29:14" pos:end="29:17"><literal type="number" pos:start="29:14" pos:end="29:17">0x08</literal></expr>:</case> <comment type="block" pos:start="29:20" pos:end="29:36">/* SDRAM_BESR1 */</comment>

            <expr_stmt pos:start="31:13" pos:end="31:33"><expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:17">sdram</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:24">besr1</name></name> <operator pos:start="31:26" pos:end="31:27">&amp;=</operator> <operator pos:start="31:29" pos:end="31:29">~</operator><name pos:start="31:30" pos:end="31:32">val</name></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:18">case <expr pos:start="35:14" pos:end="35:17"><literal type="number" pos:start="35:14" pos:end="35:17">0x10</literal></expr>:</case> <comment type="block" pos:start="35:20" pos:end="35:35">/* SDRAM_BEAR */</comment>

            <expr_stmt pos:start="37:13" pos:end="37:30"><expr pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:17">sdram</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:23">bear</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:29">val</name></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:18">case <expr pos:start="41:14" pos:end="41:17"><literal type="number" pos:start="41:14" pos:end="41:17">0x20</literal></expr>:</case> <comment type="block" pos:start="41:20" pos:end="41:34">/* SDRAM_CFG */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:30"><expr pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:15">val</name> <operator pos:start="43:17" pos:end="43:18">&amp;=</operator> <literal type="number" pos:start="43:20" pos:end="43:29">0xFFE00000</literal></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="73:13"><if pos:start="45:13" pos:end="59:13">if <condition pos:start="45:16" pos:end="45:65">(<expr pos:start="45:17" pos:end="45:64"><operator pos:start="45:17" pos:end="45:17">!</operator><operator pos:start="45:18" pos:end="45:18">(</operator><name pos:start="45:19" pos:end="45:28"><name pos:start="45:19" pos:end="45:23">sdram</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:28">cfg</name></name> <operator pos:start="45:30" pos:end="45:30">&amp;</operator> <literal type="number" pos:start="45:32" pos:end="45:41">0x80000000</literal><operator pos:start="45:42" pos:end="45:42">)</operator> <operator pos:start="45:44" pos:end="45:45">&amp;&amp;</operator> <operator pos:start="45:47" pos:end="45:47">(</operator><name pos:start="45:48" pos:end="45:50">val</name> <operator pos:start="45:52" pos:end="45:52">&amp;</operator> <literal type="number" pos:start="45:54" pos:end="45:63">0x80000000</literal><operator pos:start="45:64" pos:end="45:64">)</operator></expr>)</condition> <block pos:start="45:67" pos:end="59:13">{<block_content pos:start="49:17" pos:end="57:45">

<cpp:ifdef pos:start="47:1" pos:end="47:18">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:18">DEBUG_SDRAM</name></cpp:ifdef>

                <expr_stmt pos:start="49:17" pos:end="52:0"><expr pos:start="49:17" pos:end="49:65"><call pos:start="49:17" pos:end="49:65"><name pos:start="49:17" pos:end="49:22">printf</name><argument_list pos:start="49:23" pos:end="49:65">(<argument pos:start="49:24" pos:end="49:54"><expr pos:start="49:24" pos:end="49:54"><literal type="string" pos:start="49:24" pos:end="49:54">"%s: enable SDRAM controller\n"</literal></expr></argument>, <argument pos:start="49:57" pos:end="49:64"><expr pos:start="49:57" pos:end="49:64"><name pos:start="49:57" pos:end="49:64">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

                <comment type="block" pos:start="53:17" pos:end="53:47">/* validate all RAM mappings */</comment>

                <expr_stmt pos:start="55:17" pos:end="55:37"><expr pos:start="55:17" pos:end="55:36"><call pos:start="55:17" pos:end="55:36"><name pos:start="55:17" pos:end="55:29">sdram_map_bcr</name><argument_list pos:start="55:30" pos:end="55:36">(<argument pos:start="55:31" pos:end="55:35"><expr pos:start="55:31" pos:end="55:35"><name pos:start="55:31" pos:end="55:35">sdram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:45"><expr pos:start="57:17" pos:end="57:44"><name pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:21">sdram</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:29">status</name></name> <operator pos:start="57:31" pos:end="57:32">&amp;=</operator> <operator pos:start="57:34" pos:end="57:34">~</operator><literal type="number" pos:start="57:35" pos:end="57:44">0x80000000</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="59:15" pos:end="73:13">else if <condition pos:start="59:23" pos:end="59:72">(<expr pos:start="59:24" pos:end="59:71"><operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:34"><name pos:start="59:25" pos:end="59:29">sdram</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:34">cfg</name></name> <operator pos:start="59:36" pos:end="59:36">&amp;</operator> <literal type="number" pos:start="59:38" pos:end="59:47">0x80000000</literal><operator pos:start="59:48" pos:end="59:48">)</operator> <operator pos:start="59:50" pos:end="59:51">&amp;&amp;</operator> <operator pos:start="59:53" pos:end="59:53">!</operator><operator pos:start="59:54" pos:end="59:54">(</operator><name pos:start="59:55" pos:end="59:57">val</name> <operator pos:start="59:59" pos:end="59:59">&amp;</operator> <literal type="number" pos:start="59:61" pos:end="59:70">0x80000000</literal><operator pos:start="59:71" pos:end="59:71">)</operator></expr>)</condition> <block pos:start="59:74" pos:end="73:13">{<block_content pos:start="63:17" pos:end="71:44">

<cpp:ifdef pos:start="61:1" pos:end="61:18">#<cpp:directive pos:start="61:2" pos:end="61:6">ifdef</cpp:directive> <name pos:start="61:8" pos:end="61:18">DEBUG_SDRAM</name></cpp:ifdef>

                <expr_stmt pos:start="63:17" pos:end="66:0"><expr pos:start="63:17" pos:end="63:66"><call pos:start="63:17" pos:end="63:66"><name pos:start="63:17" pos:end="63:22">printf</name><argument_list pos:start="63:23" pos:end="63:66">(<argument pos:start="63:24" pos:end="63:55"><expr pos:start="63:24" pos:end="63:55"><literal type="string" pos:start="63:24" pos:end="63:55">"%s: disable SDRAM controller\n"</literal></expr></argument>, <argument pos:start="63:58" pos:end="63:65"><expr pos:start="63:58" pos:end="63:65"><name pos:start="63:58" pos:end="63:65">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

                <comment type="block" pos:start="67:17" pos:end="67:49">/* invalidate all RAM mappings */</comment>

                <expr_stmt pos:start="69:17" pos:end="69:39"><expr pos:start="69:17" pos:end="69:38"><call pos:start="69:17" pos:end="69:38"><name pos:start="69:17" pos:end="69:31">sdram_unmap_bcr</name><argument_list pos:start="69:32" pos:end="69:38">(<argument pos:start="69:33" pos:end="69:37"><expr pos:start="69:33" pos:end="69:37"><name pos:start="69:33" pos:end="69:37">sdram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:44"><expr pos:start="71:17" pos:end="71:43"><name pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:21">sdram</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:29">status</name></name> <operator pos:start="71:31" pos:end="71:32">|=</operator> <literal type="number" pos:start="71:34" pos:end="71:43">0x80000000</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="75:13" pos:end="81:45"><if pos:start="75:13" pos:end="77:44">if <condition pos:start="75:16" pos:end="75:65">(<expr pos:start="75:17" pos:end="75:64"><operator pos:start="75:17" pos:end="75:17">!</operator><operator pos:start="75:18" pos:end="75:18">(</operator><name pos:start="75:19" pos:end="75:28"><name pos:start="75:19" pos:end="75:23">sdram</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:28">cfg</name></name> <operator pos:start="75:30" pos:end="75:30">&amp;</operator> <literal type="number" pos:start="75:32" pos:end="75:41">0x40000000</literal><operator pos:start="75:42" pos:end="75:42">)</operator> <operator pos:start="75:44" pos:end="75:45">&amp;&amp;</operator> <operator pos:start="75:47" pos:end="75:47">(</operator><name pos:start="75:48" pos:end="75:50">val</name> <operator pos:start="75:52" pos:end="75:52">&amp;</operator> <literal type="number" pos:start="75:54" pos:end="75:63">0x40000000</literal><operator pos:start="75:64" pos:end="75:64">)</operator></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:44"><block_content pos:start="77:17" pos:end="77:44">

                <expr_stmt pos:start="77:17" pos:end="77:44"><expr pos:start="77:17" pos:end="77:43"><name pos:start="77:17" pos:end="77:29"><name pos:start="77:17" pos:end="77:21">sdram</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:29">status</name></name> <operator pos:start="77:31" pos:end="77:32">|=</operator> <literal type="number" pos:start="77:34" pos:end="77:43">0x40000000</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="79:13" pos:end="81:45">else if <condition pos:start="79:21" pos:end="79:70">(<expr pos:start="79:22" pos:end="79:69"><operator pos:start="79:22" pos:end="79:22">(</operator><name pos:start="79:23" pos:end="79:32"><name pos:start="79:23" pos:end="79:27">sdram</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:32">cfg</name></name> <operator pos:start="79:34" pos:end="79:34">&amp;</operator> <literal type="number" pos:start="79:36" pos:end="79:45">0x40000000</literal><operator pos:start="79:46" pos:end="79:46">)</operator> <operator pos:start="79:48" pos:end="79:49">&amp;&amp;</operator> <operator pos:start="79:51" pos:end="79:51">!</operator><operator pos:start="79:52" pos:end="79:52">(</operator><name pos:start="79:53" pos:end="79:55">val</name> <operator pos:start="79:57" pos:end="79:57">&amp;</operator> <literal type="number" pos:start="79:59" pos:end="79:68">0x40000000</literal><operator pos:start="79:69" pos:end="79:69">)</operator></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:45"><block_content pos:start="81:17" pos:end="81:45">

                <expr_stmt pos:start="81:17" pos:end="81:45"><expr pos:start="81:17" pos:end="81:44"><name pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:21">sdram</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:29">status</name></name> <operator pos:start="81:31" pos:end="81:32">&amp;=</operator> <operator pos:start="81:34" pos:end="81:34">~</operator><literal type="number" pos:start="81:35" pos:end="81:44">0x40000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:17">sdram</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:22">cfg</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:28">val</name></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:18">case <expr pos:start="87:14" pos:end="87:17"><literal type="number" pos:start="87:14" pos:end="87:17">0x24</literal></expr>:</case> <comment type="block" pos:start="87:20" pos:end="87:37">/* SDRAM_STATUS */</comment>

            <comment type="block" pos:start="89:13" pos:end="89:36">/* Read-only register */</comment>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:18">case <expr pos:start="93:14" pos:end="93:17"><literal type="number" pos:start="93:14" pos:end="93:17">0x30</literal></expr>:</case> <comment type="block" pos:start="93:20" pos:end="93:34">/* SDRAM_RTR */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:42"><expr pos:start="95:13" pos:end="95:41"><name pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:17">sdram</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:22">rtr</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:28">val</name> <operator pos:start="95:30" pos:end="95:30">&amp;</operator> <literal type="number" pos:start="95:32" pos:end="95:41">0x3FF80000</literal></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:18">case <expr pos:start="99:14" pos:end="99:17"><literal type="number" pos:start="99:14" pos:end="99:17">0x34</literal></expr>:</case> <comment type="block" pos:start="99:20" pos:end="99:35">/* SDRAM_PMIT */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:58"><expr pos:start="101:13" pos:end="101:57"><name pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:17">sdram</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:23">pmit</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <operator pos:start="101:27" pos:end="101:27">(</operator><name pos:start="101:28" pos:end="101:30">val</name> <operator pos:start="101:32" pos:end="101:32">&amp;</operator> <literal type="number" pos:start="101:34" pos:end="101:43">0xF8000000</literal><operator pos:start="101:44" pos:end="101:44">)</operator> <operator pos:start="101:46" pos:end="101:46">|</operator> <literal type="number" pos:start="101:48" pos:end="101:57">0x07C00000</literal></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:18">case <expr pos:start="105:14" pos:end="105:17"><literal type="number" pos:start="105:14" pos:end="105:17">0x40</literal></expr>:</case> <comment type="block" pos:start="105:20" pos:end="105:35">/* SDRAM_B0CR */</comment>

            <expr_stmt pos:start="107:13" pos:end="107:72"><expr pos:start="107:13" pos:end="107:71"><call pos:start="107:13" pos:end="107:71"><name pos:start="107:13" pos:end="107:25">sdram_set_bcr</name><argument_list pos:start="107:26" pos:end="107:71">(<argument pos:start="107:27" pos:end="107:40"><expr pos:start="107:27" pos:end="107:40"><operator pos:start="107:27" pos:end="107:27">&amp;</operator><name pos:start="107:28" pos:end="107:40"><name pos:start="107:28" pos:end="107:32">sdram</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:37">bcr</name><index pos:start="107:38" pos:end="107:40">[<expr pos:start="107:39" pos:end="107:39"><literal type="number" pos:start="107:39" pos:end="107:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:43" pos:end="107:45"><expr pos:start="107:43" pos:end="107:45"><name pos:start="107:43" pos:end="107:45">val</name></expr></argument>, <argument pos:start="107:48" pos:end="107:70"><expr pos:start="107:48" pos:end="107:70"><name pos:start="107:48" pos:end="107:57"><name pos:start="107:48" pos:end="107:52">sdram</name><operator pos:start="107:53" pos:end="107:54">-&gt;</operator><name pos:start="107:55" pos:end="107:57">cfg</name></name> <operator pos:start="107:59" pos:end="107:59">&amp;</operator> <literal type="number" pos:start="107:61" pos:end="107:70">0x80000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:18">case <expr pos:start="111:14" pos:end="111:17"><literal type="number" pos:start="111:14" pos:end="111:17">0x44</literal></expr>:</case> <comment type="block" pos:start="111:20" pos:end="111:35">/* SDRAM_B1CR */</comment>

            <expr_stmt pos:start="113:13" pos:end="113:72"><expr pos:start="113:13" pos:end="113:71"><call pos:start="113:13" pos:end="113:71"><name pos:start="113:13" pos:end="113:25">sdram_set_bcr</name><argument_list pos:start="113:26" pos:end="113:71">(<argument pos:start="113:27" pos:end="113:40"><expr pos:start="113:27" pos:end="113:40"><operator pos:start="113:27" pos:end="113:27">&amp;</operator><name pos:start="113:28" pos:end="113:40"><name pos:start="113:28" pos:end="113:32">sdram</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:37">bcr</name><index pos:start="113:38" pos:end="113:40">[<expr pos:start="113:39" pos:end="113:39"><literal type="number" pos:start="113:39" pos:end="113:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:43" pos:end="113:45"><expr pos:start="113:43" pos:end="113:45"><name pos:start="113:43" pos:end="113:45">val</name></expr></argument>, <argument pos:start="113:48" pos:end="113:70"><expr pos:start="113:48" pos:end="113:70"><name pos:start="113:48" pos:end="113:57"><name pos:start="113:48" pos:end="113:52">sdram</name><operator pos:start="113:53" pos:end="113:54">-&gt;</operator><name pos:start="113:55" pos:end="113:57">cfg</name></name> <operator pos:start="113:59" pos:end="113:59">&amp;</operator> <literal type="number" pos:start="113:61" pos:end="113:70">0x80000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:18">case <expr pos:start="117:14" pos:end="117:17"><literal type="number" pos:start="117:14" pos:end="117:17">0x48</literal></expr>:</case> <comment type="block" pos:start="117:20" pos:end="117:35">/* SDRAM_B2CR */</comment>

            <expr_stmt pos:start="119:13" pos:end="119:72"><expr pos:start="119:13" pos:end="119:71"><call pos:start="119:13" pos:end="119:71"><name pos:start="119:13" pos:end="119:25">sdram_set_bcr</name><argument_list pos:start="119:26" pos:end="119:71">(<argument pos:start="119:27" pos:end="119:40"><expr pos:start="119:27" pos:end="119:40"><operator pos:start="119:27" pos:end="119:27">&amp;</operator><name pos:start="119:28" pos:end="119:40"><name pos:start="119:28" pos:end="119:32">sdram</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:37">bcr</name><index pos:start="119:38" pos:end="119:40">[<expr pos:start="119:39" pos:end="119:39"><literal type="number" pos:start="119:39" pos:end="119:39">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><name pos:start="119:43" pos:end="119:45">val</name></expr></argument>, <argument pos:start="119:48" pos:end="119:70"><expr pos:start="119:48" pos:end="119:70"><name pos:start="119:48" pos:end="119:57"><name pos:start="119:48" pos:end="119:52">sdram</name><operator pos:start="119:53" pos:end="119:54">-&gt;</operator><name pos:start="119:55" pos:end="119:57">cfg</name></name> <operator pos:start="119:59" pos:end="119:59">&amp;</operator> <literal type="number" pos:start="119:61" pos:end="119:70">0x80000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:18">case <expr pos:start="123:14" pos:end="123:17"><literal type="number" pos:start="123:14" pos:end="123:17">0x4C</literal></expr>:</case> <comment type="block" pos:start="123:20" pos:end="123:35">/* SDRAM_B3CR */</comment>

            <expr_stmt pos:start="125:13" pos:end="125:72"><expr pos:start="125:13" pos:end="125:71"><call pos:start="125:13" pos:end="125:71"><name pos:start="125:13" pos:end="125:25">sdram_set_bcr</name><argument_list pos:start="125:26" pos:end="125:71">(<argument pos:start="125:27" pos:end="125:40"><expr pos:start="125:27" pos:end="125:40"><operator pos:start="125:27" pos:end="125:27">&amp;</operator><name pos:start="125:28" pos:end="125:40"><name pos:start="125:28" pos:end="125:32">sdram</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:37">bcr</name><index pos:start="125:38" pos:end="125:40">[<expr pos:start="125:39" pos:end="125:39"><literal type="number" pos:start="125:39" pos:end="125:39">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:43" pos:end="125:45"><expr pos:start="125:43" pos:end="125:45"><name pos:start="125:43" pos:end="125:45">val</name></expr></argument>, <argument pos:start="125:48" pos:end="125:70"><expr pos:start="125:48" pos:end="125:70"><name pos:start="125:48" pos:end="125:57"><name pos:start="125:48" pos:end="125:52">sdram</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:57">cfg</name></name> <operator pos:start="125:59" pos:end="125:59">&amp;</operator> <literal type="number" pos:start="125:61" pos:end="125:70">0x80000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <case pos:start="129:9" pos:end="129:18">case <expr pos:start="129:14" pos:end="129:17"><literal type="number" pos:start="129:14" pos:end="129:17">0x80</literal></expr>:</case> <comment type="block" pos:start="129:20" pos:end="129:33">/* SDRAM_TR */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:41"><expr pos:start="131:13" pos:end="131:40"><name pos:start="131:13" pos:end="131:21"><name pos:start="131:13" pos:end="131:17">sdram</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:21">tr</name></name> <operator pos:start="131:23" pos:end="131:23">=</operator> <name pos:start="131:25" pos:end="131:27">val</name> <operator pos:start="131:29" pos:end="131:29">&amp;</operator> <literal type="number" pos:start="131:31" pos:end="131:40">0x018FC01F</literal></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:18">case <expr pos:start="135:14" pos:end="135:17"><literal type="number" pos:start="135:14" pos:end="135:17">0x94</literal></expr>:</case> <comment type="block" pos:start="135:20" pos:end="135:37">/* SDRAM_ECCCFG */</comment>

            <expr_stmt pos:start="137:13" pos:end="137:45"><expr pos:start="137:13" pos:end="137:44"><name pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:17">sdram</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:25">ecccfg</name></name> <operator pos:start="137:27" pos:end="137:27">=</operator> <name pos:start="137:29" pos:end="137:31">val</name> <operator pos:start="137:33" pos:end="137:33">&amp;</operator> <literal type="number" pos:start="137:35" pos:end="137:44">0x00F00000</literal></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:18">case <expr pos:start="141:14" pos:end="141:17"><literal type="number" pos:start="141:14" pos:end="141:17">0x98</literal></expr>:</case> <comment type="block" pos:start="141:20" pos:end="141:37">/* SDRAM_ECCESR */</comment>

            <expr_stmt pos:start="143:13" pos:end="143:30"><expr pos:start="143:13" pos:end="143:29"><name pos:start="143:13" pos:end="143:15">val</name> <operator pos:start="143:17" pos:end="143:18">&amp;=</operator> <literal type="number" pos:start="143:20" pos:end="143:29">0xFFF0F000</literal></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="151:43"><if pos:start="145:13" pos:end="147:43">if <condition pos:start="145:16" pos:end="145:47">(<expr pos:start="145:17" pos:end="145:46"><name pos:start="145:17" pos:end="145:29"><name pos:start="145:17" pos:end="145:21">sdram</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:29">eccesr</name></name> <operator pos:start="145:31" pos:end="145:32">==</operator> <literal type="number" pos:start="145:34" pos:end="145:34">0</literal> <operator pos:start="145:36" pos:end="145:37">&amp;&amp;</operator> <name pos:start="145:39" pos:end="145:41">val</name> <operator pos:start="145:43" pos:end="145:44">!=</operator> <literal type="number" pos:start="145:46" pos:end="145:46">0</literal></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:43"><block_content pos:start="147:17" pos:end="147:43">

                <expr_stmt pos:start="147:17" pos:end="147:43"><expr pos:start="147:17" pos:end="147:42"><call pos:start="147:17" pos:end="147:42"><name pos:start="147:17" pos:end="147:30">qemu_irq_raise</name><argument_list pos:start="147:31" pos:end="147:42">(<argument pos:start="147:32" pos:end="147:41"><expr pos:start="147:32" pos:end="147:41"><name pos:start="147:32" pos:end="147:41"><name pos:start="147:32" pos:end="147:36">sdram</name><operator pos:start="147:37" pos:end="147:38">-&gt;</operator><name pos:start="147:39" pos:end="147:41">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="149:13" pos:end="151:43">else if <condition pos:start="149:21" pos:end="149:52">(<expr pos:start="149:22" pos:end="149:51"><name pos:start="149:22" pos:end="149:34"><name pos:start="149:22" pos:end="149:26">sdram</name><operator pos:start="149:27" pos:end="149:28">-&gt;</operator><name pos:start="149:29" pos:end="149:34">eccesr</name></name> <operator pos:start="149:36" pos:end="149:37">!=</operator> <literal type="number" pos:start="149:39" pos:end="149:39">0</literal> <operator pos:start="149:41" pos:end="149:42">&amp;&amp;</operator> <name pos:start="149:44" pos:end="149:46">val</name> <operator pos:start="149:48" pos:end="149:49">==</operator> <literal type="number" pos:start="149:51" pos:end="149:51">0</literal></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:43"><block_content pos:start="151:17" pos:end="151:43">

                <expr_stmt pos:start="151:17" pos:end="151:43"><expr pos:start="151:17" pos:end="151:42"><call pos:start="151:17" pos:end="151:42"><name pos:start="151:17" pos:end="151:30">qemu_irq_lower</name><argument_list pos:start="151:31" pos:end="151:42">(<argument pos:start="151:32" pos:end="151:41"><expr pos:start="151:32" pos:end="151:41"><name pos:start="151:32" pos:end="151:41"><name pos:start="151:32" pos:end="151:36">sdram</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:41">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:32"><expr pos:start="153:13" pos:end="153:31"><name pos:start="153:13" pos:end="153:25"><name pos:start="153:13" pos:end="153:17">sdram</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:25">eccesr</name></name> <operator pos:start="153:27" pos:end="153:27">=</operator> <name pos:start="153:29" pos:end="153:31">val</name></expr>;</expr_stmt>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        <default pos:start="157:9" pos:end="157:16">default:</default> <comment type="block" pos:start="157:18" pos:end="157:28">/* Error */</comment>

            <break pos:start="159:13" pos:end="159:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="163:9" pos:end="163:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
