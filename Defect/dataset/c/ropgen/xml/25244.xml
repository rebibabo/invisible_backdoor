<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25244.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">test_source_notify</name><parameter_list pos:start="1:31" pos:end="1:36">(<parameter pos:start="1:32" pos:end="1:35"><decl pos:start="1:32" pos:end="1:35"><type pos:start="1:32" pos:end="1:35"><name pos:start="1:32" pos:end="1:35">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:53">

    <while pos:start="5:5" pos:end="5:50">while <condition pos:start="5:11" pos:end="5:49">(<expr pos:start="5:12" pos:end="5:48"><call pos:start="5:12" pos:end="5:48"><name pos:start="5:12" pos:end="5:35">g_main_context_iteration</name><argument_list pos:start="5:36" pos:end="5:48">(<argument pos:start="5:37" pos:end="5:40"><expr pos:start="5:37" pos:end="5:40"><name pos:start="5:37" pos:end="5:40">NULL</name></expr></argument>, <argument pos:start="5:43" pos:end="5:47"><expr pos:start="5:43" pos:end="5:47"><name pos:start="5:43" pos:end="5:47">false</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="5:50" pos:end="5:50"><block_content pos:start="5:50" pos:end="5:50"><empty_stmt pos:start="5:50" pos:end="5:50">;</empty_stmt></block_content></block></while>

    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><call pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:14">aio_notify</name><argument_list pos:start="7:15" pos:end="7:19">(<argument pos:start="7:16" pos:end="7:18"><expr pos:start="7:16" pos:end="7:18"><name pos:start="7:16" pos:end="7:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:51"><expr pos:start="9:5" pos:end="9:50"><call pos:start="9:5" pos:end="9:50"><name pos:start="9:5" pos:end="9:12">g_assert</name><argument_list pos:start="9:13" pos:end="9:50">(<argument pos:start="9:14" pos:end="9:49"><expr pos:start="9:14" pos:end="9:49"><call pos:start="9:14" pos:end="9:49"><name pos:start="9:14" pos:end="9:37">g_main_context_iteration</name><argument_list pos:start="9:38" pos:end="9:49">(<argument pos:start="9:39" pos:end="9:42"><expr pos:start="9:39" pos:end="9:42"><name pos:start="9:39" pos:end="9:42">NULL</name></expr></argument>, <argument pos:start="9:45" pos:end="9:48"><expr pos:start="9:45" pos:end="9:48"><name pos:start="9:45" pos:end="9:48">true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:53"><expr pos:start="11:5" pos:end="11:52"><call pos:start="11:5" pos:end="11:52"><name pos:start="11:5" pos:end="11:12">g_assert</name><argument_list pos:start="11:13" pos:end="11:52">(<argument pos:start="11:14" pos:end="11:51"><expr pos:start="11:14" pos:end="11:51"><operator pos:start="11:14" pos:end="11:14">!</operator><call pos:start="11:15" pos:end="11:51"><name pos:start="11:15" pos:end="11:38">g_main_context_iteration</name><argument_list pos:start="11:39" pos:end="11:51">(<argument pos:start="11:40" pos:end="11:43"><expr pos:start="11:40" pos:end="11:43"><name pos:start="11:40" pos:end="11:43">NULL</name></expr></argument>, <argument pos:start="11:46" pos:end="11:50"><expr pos:start="11:46" pos:end="11:50"><name pos:start="11:46" pos:end="11:50">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
