<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8779.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="103:1"><decl pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:46">sbr_hf_apply_noise</name><argument_list pos:start="1:47" pos:end="13:58">(<argument pos:start="1:48" pos:end="1:58"><expr pos:start="1:48" pos:end="1:58"><call pos:start="1:48" pos:end="1:55"><name pos:start="1:48" pos:end="1:50">int</name> <argument_list pos:start="1:52" pos:end="1:55">(<argument pos:start="1:53" pos:end="1:54"><expr pos:start="1:53" pos:end="1:54"><operator pos:start="1:53" pos:end="1:53">*</operator><name pos:start="1:54" pos:end="1:54">Y</name></expr></argument>)</argument_list></call><index pos:start="1:56" pos:end="1:58">[<expr pos:start="1:57" pos:end="1:57"><literal type="number" pos:start="1:57" pos:end="1:57">2</literal></expr>]</index></expr></argument>,

                                                <argument pos:start="3:49" pos:end="3:68"><expr pos:start="3:49" pos:end="3:68"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:63">SoftFloat</name> <operator pos:start="3:65" pos:end="3:65">*</operator><name pos:start="3:66" pos:end="3:68">s_m</name></expr></argument>,

                                                <argument pos:start="5:49" pos:end="5:71"><expr pos:start="5:49" pos:end="5:71"><specifier pos:start="5:49" pos:end="5:53">const</specifier> <name pos:start="5:55" pos:end="5:63">SoftFloat</name> <operator pos:start="5:65" pos:end="5:65">*</operator><name pos:start="5:66" pos:end="5:71">q_filt</name></expr></argument>,

                                                <argument pos:start="7:49" pos:end="7:57"><expr pos:start="7:49" pos:end="7:57"><name pos:start="7:49" pos:end="7:51">int</name> <name pos:start="7:53" pos:end="7:57">noise</name></expr></argument>,

                                                <argument pos:start="9:49" pos:end="9:61"><expr pos:start="9:49" pos:end="9:61"><name pos:start="9:49" pos:end="9:51">int</name> <name pos:start="9:53" pos:end="9:61">phi_sign0</name></expr></argument>,

                                                <argument pos:start="11:49" pos:end="11:61"><expr pos:start="11:49" pos:end="11:61"><name pos:start="11:49" pos:end="11:51">int</name> <name pos:start="11:53" pos:end="11:61">phi_sign1</name></expr></argument>,

                                                <argument pos:start="13:49" pos:end="13:57"><expr pos:start="13:49" pos:end="13:57"><name pos:start="13:49" pos:end="13:51">int</name> <name pos:start="13:53" pos:end="13:57">m_max</name></expr></argument>)</argument_list>

<block pos:start="15:1" pos:end="103:1">{<block_content pos:start="17:5" pos:end="101:13">

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">m</name></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="99:5">for <control pos:start="21:9" pos:end="21:31">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">m</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:26"><expr pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:17">m</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:25">m_max</name></expr>;</condition> <incr pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:28">m</name><operator pos:start="21:29" pos:end="21:30">++</operator></expr></incr>)</control> <block pos:start="21:33" pos:end="99:5">{<block_content pos:start="23:9" pos:end="97:31">

        <decl_stmt pos:start="23:9" pos:end="23:25"><decl pos:start="23:9" pos:end="23:24"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:14">y0</name> <init pos:start="23:16" pos:end="23:24">= <expr pos:start="23:18" pos:end="23:24"><name pos:start="23:18" pos:end="23:24"><name pos:start="23:18" pos:end="23:18">Y</name><index pos:start="23:19" pos:end="23:21">[<expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">m</name></expr>]</index><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:25"><decl pos:start="25:9" pos:end="25:24"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:14">y1</name> <init pos:start="25:16" pos:end="25:24">= <expr pos:start="25:18" pos:end="25:24"><name pos:start="25:18" pos:end="25:24"><name pos:start="25:18" pos:end="25:18">Y</name><index pos:start="25:19" pos:end="25:21">[<expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">m</name></expr>]</index><index pos:start="25:22" pos:end="25:24">[<expr pos:start="25:23" pos:end="25:23"><literal type="number" pos:start="25:23" pos:end="25:23">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:13">noise</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <operator pos:start="27:17" pos:end="27:17">(</operator><name pos:start="27:18" pos:end="27:22">noise</name> <operator pos:start="27:24" pos:end="27:24">+</operator> <literal type="number" pos:start="27:26" pos:end="27:26">1</literal><operator pos:start="27:27" pos:end="27:27">)</operator> <operator pos:start="27:29" pos:end="27:29">&amp;</operator> <literal type="number" pos:start="27:31" pos:end="27:35">0x1ff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="91:9"><if pos:start="29:9" pos:end="53:9">if <condition pos:start="29:12" pos:end="29:24">(<expr pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:15">s_m</name><index pos:start="29:16" pos:end="29:18">[<expr pos:start="29:17" pos:end="29:17"><name pos:start="29:17" pos:end="29:17">m</name></expr>]</index></name><operator pos:start="29:19" pos:end="29:19">.</operator><name pos:start="29:20" pos:end="29:23">mant</name></expr>)</condition> <block pos:start="29:26" pos:end="53:9">{<block_content pos:start="31:13" pos:end="51:13">

            <decl_stmt pos:start="31:13" pos:end="31:29"><decl pos:start="31:13" pos:end="31:21"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:21">shift</name></decl>, <decl pos:start="31:24" pos:end="31:28"><type ref="prev" pos:start="31:13" pos:end="31:15"/><name pos:start="31:24" pos:end="31:28">round</name></decl>;</decl_stmt>



            <expr_stmt pos:start="35:13" pos:end="35:36"><expr pos:start="35:13" pos:end="35:35"><name pos:start="35:13" pos:end="35:17">shift</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <literal type="number" pos:start="35:21" pos:end="35:24">22</literal> <operator pos:start="35:24" pos:end="35:24">-</operator> <name pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:28">s_m</name><index pos:start="35:29" pos:end="35:31">[<expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">m</name></expr>]</index></name><operator pos:start="35:32" pos:end="35:32">.</operator><name pos:start="35:33" pos:end="35:35">exp</name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="51:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:26">(<expr pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:21">shift</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr>)</condition> <block pos:start="37:28" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:39">

                <expr_stmt pos:start="39:17" pos:end="39:96"><expr pos:start="39:17" pos:end="39:95"><call pos:start="39:17" pos:end="39:95"><name pos:start="39:17" pos:end="39:22">av_log</name><argument_list pos:start="39:23" pos:end="39:95">(<argument pos:start="39:24" pos:end="39:27"><expr pos:start="39:24" pos:end="39:27"><name pos:start="39:24" pos:end="39:27">NULL</name></expr></argument>, <argument pos:start="39:30" pos:end="39:41"><expr pos:start="39:30" pos:end="39:41"><name pos:start="39:30" pos:end="39:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:44" pos:end="39:87"><expr pos:start="39:44" pos:end="39:87"><literal type="string" pos:start="39:44" pos:end="39:87">"Overflow in sbr_hf_apply_noise, shift=%d\n"</literal></expr></argument>, <argument pos:start="39:90" pos:end="39:94"><expr pos:start="39:90" pos:end="39:94"><name pos:start="39:90" pos:end="39:94">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="41:17" pos:end="41:39">return <expr pos:start="41:24" pos:end="41:38"><call pos:start="41:24" pos:end="41:38"><name pos:start="41:24" pos:end="41:30">AVERROR</name><argument_list pos:start="41:31" pos:end="41:38">(<argument pos:start="41:32" pos:end="41:37"><expr pos:start="41:32" pos:end="41:37"><name pos:start="41:32" pos:end="41:37">ERANGE</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if> <if type="elseif" pos:start="43:15" pos:end="51:13">else if <condition pos:start="43:23" pos:end="43:34">(<expr pos:start="43:24" pos:end="43:33"><name pos:start="43:24" pos:end="43:28">shift</name> <operator pos:start="43:30" pos:end="43:30">&lt;</operator> <literal type="number" pos:start="43:32" pos:end="43:33">30</literal></expr>)</condition> <block pos:start="43:36" pos:end="51:13">{<block_content pos:start="45:17" pos:end="49:65">

                <expr_stmt pos:start="45:17" pos:end="45:39"><expr pos:start="45:17" pos:end="45:38"><name pos:start="45:17" pos:end="45:21">round</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <literal type="number" pos:start="45:25" pos:end="45:25">1</literal> <operator pos:start="45:27" pos:end="45:28">&lt;&lt;</operator> <operator pos:start="45:30" pos:end="45:30">(</operator><name pos:start="45:31" pos:end="45:35">shift</name><operator pos:start="45:36" pos:end="45:36">-</operator><literal type="number" pos:start="45:37" pos:end="45:37">1</literal><operator pos:start="45:38" pos:end="45:38">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:65"><expr pos:start="47:17" pos:end="47:64"><name pos:start="47:17" pos:end="47:18">y0</name> <operator pos:start="47:20" pos:end="47:21">+=</operator> <operator pos:start="47:23" pos:end="47:23">(</operator><name pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:26">s_m</name><index pos:start="47:27" pos:end="47:29">[<expr pos:start="47:28" pos:end="47:28"><name pos:start="47:28" pos:end="47:28">m</name></expr>]</index></name><operator pos:start="47:30" pos:end="47:30">.</operator><name pos:start="47:31" pos:end="47:34">mant</name> <operator pos:start="47:36" pos:end="47:36">*</operator> <name pos:start="47:38" pos:end="47:46">phi_sign0</name> <operator pos:start="47:48" pos:end="47:48">+</operator> <name pos:start="47:50" pos:end="47:54">round</name><operator pos:start="47:55" pos:end="47:55">)</operator> <operator pos:start="47:57" pos:end="47:58">&gt;&gt;</operator> <name pos:start="47:60" pos:end="47:64">shift</name></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:65"><expr pos:start="49:17" pos:end="49:64"><name pos:start="49:17" pos:end="49:18">y1</name> <operator pos:start="49:20" pos:end="49:21">+=</operator> <operator pos:start="49:23" pos:end="49:23">(</operator><name pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:26">s_m</name><index pos:start="49:27" pos:end="49:29">[<expr pos:start="49:28" pos:end="49:28"><name pos:start="49:28" pos:end="49:28">m</name></expr>]</index></name><operator pos:start="49:30" pos:end="49:30">.</operator><name pos:start="49:31" pos:end="49:34">mant</name> <operator pos:start="49:36" pos:end="49:36">*</operator> <name pos:start="49:38" pos:end="49:46">phi_sign1</name> <operator pos:start="49:48" pos:end="49:48">+</operator> <name pos:start="49:50" pos:end="49:54">round</name><operator pos:start="49:55" pos:end="49:55">)</operator> <operator pos:start="49:57" pos:end="49:58">&gt;&gt;</operator> <name pos:start="49:60" pos:end="49:64">shift</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="91:9">else <block pos:start="53:16" pos:end="91:9">{<block_content pos:start="55:13" pos:end="89:13">

            <decl_stmt pos:start="55:13" pos:end="55:34"><decl pos:start="55:13" pos:end="55:21"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:21">shift</name></decl>, <decl pos:start="55:24" pos:end="55:28"><type ref="prev" pos:start="55:13" pos:end="55:15"/><name pos:start="55:24" pos:end="55:28">round</name></decl>, <decl pos:start="55:31" pos:end="55:33"><type ref="prev" pos:start="55:13" pos:end="55:15"/><name pos:start="55:31" pos:end="55:33">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:25"><decl pos:start="57:13" pos:end="57:24"><type pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:19">int64_t</name></type> <name pos:start="57:21" pos:end="57:24">accu</name></decl>;</decl_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:39"><expr pos:start="61:13" pos:end="61:38"><name pos:start="61:13" pos:end="61:17">shift</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:24">22</literal> <operator pos:start="61:24" pos:end="61:24">-</operator> <name pos:start="61:26" pos:end="61:34"><name pos:start="61:26" pos:end="61:31">q_filt</name><index pos:start="61:32" pos:end="61:34">[<expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">m</name></expr>]</index></name><operator pos:start="61:35" pos:end="61:35">.</operator><name pos:start="61:36" pos:end="61:38">exp</name></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="89:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:26">(<expr pos:start="63:17" pos:end="63:25"><name pos:start="63:17" pos:end="63:21">shift</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>)</condition> <block pos:start="63:28" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:39">

                <expr_stmt pos:start="65:17" pos:end="65:96"><expr pos:start="65:17" pos:end="65:95"><call pos:start="65:17" pos:end="65:95"><name pos:start="65:17" pos:end="65:22">av_log</name><argument_list pos:start="65:23" pos:end="65:95">(<argument pos:start="65:24" pos:end="65:27"><expr pos:start="65:24" pos:end="65:27"><name pos:start="65:24" pos:end="65:27">NULL</name></expr></argument>, <argument pos:start="65:30" pos:end="65:41"><expr pos:start="65:30" pos:end="65:41"><name pos:start="65:30" pos:end="65:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:44" pos:end="65:87"><expr pos:start="65:44" pos:end="65:87"><literal type="string" pos:start="65:44" pos:end="65:87">"Overflow in sbr_hf_apply_noise, shift=%d\n"</literal></expr></argument>, <argument pos:start="65:90" pos:end="65:94"><expr pos:start="65:90" pos:end="65:94"><name pos:start="65:90" pos:end="65:94">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="67:17" pos:end="67:39">return <expr pos:start="67:24" pos:end="67:38"><call pos:start="67:24" pos:end="67:38"><name pos:start="67:24" pos:end="67:30">AVERROR</name><argument_list pos:start="67:31" pos:end="67:38">(<argument pos:start="67:32" pos:end="67:37"><expr pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:37">ERANGE</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if> <if type="elseif" pos:start="69:15" pos:end="89:13">else if <condition pos:start="69:23" pos:end="69:34">(<expr pos:start="69:24" pos:end="69:33"><name pos:start="69:24" pos:end="69:28">shift</name> <operator pos:start="69:30" pos:end="69:30">&lt;</operator> <literal type="number" pos:start="69:32" pos:end="69:33">30</literal></expr>)</condition> <block pos:start="69:36" pos:end="89:13">{<block_content pos:start="71:17" pos:end="87:45">

                <expr_stmt pos:start="71:17" pos:end="71:39"><expr pos:start="71:17" pos:end="71:38"><name pos:start="71:17" pos:end="71:21">round</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <literal type="number" pos:start="71:25" pos:end="71:25">1</literal> <operator pos:start="71:27" pos:end="71:28">&lt;&lt;</operator> <operator pos:start="71:30" pos:end="71:30">(</operator><name pos:start="71:31" pos:end="71:35">shift</name><operator pos:start="71:36" pos:end="71:36">-</operator><literal type="number" pos:start="71:37" pos:end="71:37">1</literal><operator pos:start="71:38" pos:end="71:38">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="75:17" pos:end="75:84"><expr pos:start="75:17" pos:end="75:83"><name pos:start="75:17" pos:end="75:20">accu</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <operator pos:start="75:24" pos:end="75:24">(</operator><name pos:start="75:25" pos:end="75:31">int64_t</name><operator pos:start="75:32" pos:end="75:32">)</operator><name pos:start="75:33" pos:end="75:41"><name pos:start="75:33" pos:end="75:38">q_filt</name><index pos:start="75:39" pos:end="75:41">[<expr pos:start="75:40" pos:end="75:40"><name pos:start="75:40" pos:end="75:40">m</name></expr>]</index></name><operator pos:start="75:42" pos:end="75:42">.</operator><name pos:start="75:43" pos:end="75:46">mant</name> <operator pos:start="75:48" pos:end="75:48">*</operator> <name pos:start="75:50" pos:end="75:83"><name pos:start="75:50" pos:end="75:73">ff_sbr_noise_table_fixed</name><index pos:start="75:74" pos:end="75:80">[<expr pos:start="75:75" pos:end="75:79"><name pos:start="75:75" pos:end="75:79">noise</name></expr>]</index><index pos:start="75:81" pos:end="75:83">[<expr pos:start="75:82" pos:end="75:82"><literal type="number" pos:start="75:82" pos:end="75:82">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:55"><expr pos:start="77:17" pos:end="77:54"><name pos:start="77:17" pos:end="77:19">tmp</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <operator pos:start="77:23" pos:end="77:23">(</operator><name pos:start="77:24" pos:end="77:26">int</name><operator pos:start="77:27" pos:end="77:27">)</operator><operator pos:start="77:28" pos:end="77:28">(</operator><operator pos:start="77:29" pos:end="77:29">(</operator><name pos:start="77:30" pos:end="77:33">accu</name> <operator pos:start="77:35" pos:end="77:35">+</operator> <literal type="number" pos:start="77:37" pos:end="77:46">0x40000000</literal><operator pos:start="77:47" pos:end="77:47">)</operator> <operator pos:start="77:49" pos:end="77:50">&gt;&gt;</operator> <literal type="number" pos:start="77:52" pos:end="77:53">31</literal><operator pos:start="77:54" pos:end="77:54">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:45"><expr pos:start="79:17" pos:end="79:44"><name pos:start="79:17" pos:end="79:18">y0</name> <operator pos:start="79:20" pos:end="79:21">+=</operator> <operator pos:start="79:23" pos:end="79:23">(</operator><name pos:start="79:24" pos:end="79:26">tmp</name> <operator pos:start="79:28" pos:end="79:28">+</operator> <name pos:start="79:30" pos:end="79:34">round</name><operator pos:start="79:35" pos:end="79:35">)</operator> <operator pos:start="79:37" pos:end="79:38">&gt;&gt;</operator> <name pos:start="79:40" pos:end="79:44">shift</name></expr>;</expr_stmt>



                <expr_stmt pos:start="83:17" pos:end="83:84"><expr pos:start="83:17" pos:end="83:83"><name pos:start="83:17" pos:end="83:20">accu</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <operator pos:start="83:24" pos:end="83:24">(</operator><name pos:start="83:25" pos:end="83:31">int64_t</name><operator pos:start="83:32" pos:end="83:32">)</operator><name pos:start="83:33" pos:end="83:41"><name pos:start="83:33" pos:end="83:38">q_filt</name><index pos:start="83:39" pos:end="83:41">[<expr pos:start="83:40" pos:end="83:40"><name pos:start="83:40" pos:end="83:40">m</name></expr>]</index></name><operator pos:start="83:42" pos:end="83:42">.</operator><name pos:start="83:43" pos:end="83:46">mant</name> <operator pos:start="83:48" pos:end="83:48">*</operator> <name pos:start="83:50" pos:end="83:83"><name pos:start="83:50" pos:end="83:73">ff_sbr_noise_table_fixed</name><index pos:start="83:74" pos:end="83:80">[<expr pos:start="83:75" pos:end="83:79"><name pos:start="83:75" pos:end="83:79">noise</name></expr>]</index><index pos:start="83:81" pos:end="83:83">[<expr pos:start="83:82" pos:end="83:82"><literal type="number" pos:start="83:82" pos:end="83:82">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:55"><expr pos:start="85:17" pos:end="85:54"><name pos:start="85:17" pos:end="85:19">tmp</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <operator pos:start="85:23" pos:end="85:23">(</operator><name pos:start="85:24" pos:end="85:26">int</name><operator pos:start="85:27" pos:end="85:27">)</operator><operator pos:start="85:28" pos:end="85:28">(</operator><operator pos:start="85:29" pos:end="85:29">(</operator><name pos:start="85:30" pos:end="85:33">accu</name> <operator pos:start="85:35" pos:end="85:35">+</operator> <literal type="number" pos:start="85:37" pos:end="85:46">0x40000000</literal><operator pos:start="85:47" pos:end="85:47">)</operator> <operator pos:start="85:49" pos:end="85:50">&gt;&gt;</operator> <literal type="number" pos:start="85:52" pos:end="85:53">31</literal><operator pos:start="85:54" pos:end="85:54">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:45"><expr pos:start="87:17" pos:end="87:44"><name pos:start="87:17" pos:end="87:18">y1</name> <operator pos:start="87:20" pos:end="87:21">+=</operator> <operator pos:start="87:23" pos:end="87:23">(</operator><name pos:start="87:24" pos:end="87:26">tmp</name> <operator pos:start="87:28" pos:end="87:28">+</operator> <name pos:start="87:30" pos:end="87:34">round</name><operator pos:start="87:35" pos:end="87:35">)</operator> <operator pos:start="87:37" pos:end="87:38">&gt;&gt;</operator> <name pos:start="87:40" pos:end="87:44">shift</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:21"><expr pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:9">Y</name><index pos:start="93:10" pos:end="93:12">[<expr pos:start="93:11" pos:end="93:11"><name pos:start="93:11" pos:end="93:11">m</name></expr>]</index><index pos:start="93:13" pos:end="93:15">[<expr pos:start="93:14" pos:end="93:14"><literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>]</index></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:20">y0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:21"><expr pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:9">Y</name><index pos:start="95:10" pos:end="95:12">[<expr pos:start="95:11" pos:end="95:11"><name pos:start="95:11" pos:end="95:11">m</name></expr>]</index><index pos:start="95:13" pos:end="95:15">[<expr pos:start="95:14" pos:end="95:14"><literal type="number" pos:start="95:14" pos:end="95:14">1</literal></expr>]</index></name> <operator pos:start="95:17" pos:end="95:17">=</operator> <name pos:start="95:19" pos:end="95:20">y1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:17">phi_sign1</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <operator pos:start="97:21" pos:end="97:21">-</operator><name pos:start="97:22" pos:end="97:30">phi_sign1</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

</block_content>}</block></decl></decl_stmt>
</unit>
