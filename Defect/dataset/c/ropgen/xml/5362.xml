<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5362.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">s390x_write_all_elf64_notes</name><parameter_list pos:start="1:39" pos:end="7:52">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:60"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:60">note_name</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:62"><decl pos:start="3:40" pos:end="3:62"><type pos:start="3:40" pos:end="3:62"><name pos:start="3:40" pos:end="3:60">WriteCoreDumpFunction</name></type> <name pos:start="3:62" pos:end="3:62">f</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:51"><decl pos:start="5:40" pos:end="5:51"><type pos:start="5:40" pos:end="5:51"><name pos:start="5:40" pos:end="5:46">S390CPU</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:51">cpu</name></decl></parameter>, <parameter pos:start="5:54" pos:end="5:59"><decl pos:start="5:54" pos:end="5:59"><type pos:start="5:54" pos:end="5:59"><name pos:start="5:54" pos:end="5:56">int</name></type> <name pos:start="5:58" pos:end="5:59">id</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:51"><decl pos:start="7:40" pos:end="7:51"><type pos:start="7:40" pos:end="7:51"><name pos:start="7:40" pos:end="7:43">void</name> <modifier pos:start="7:45" pos:end="7:45">*</modifier></type><name pos:start="7:46" pos:end="7:51">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="55:1">{<block_content pos:start="11:5" pos:end="53:13">

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">Note</name></type> <name pos:start="11:10" pos:end="11:13">note</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:24"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:22">NoteFuncDesc</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:26">nf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">note_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name> <init pos:start="17:13" pos:end="17:16">= <expr pos:start="17:15" pos:end="17:16"><operator pos:start="17:15" pos:end="17:15">-</operator><literal type="number" pos:start="17:16" pos:end="17:16">1</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="49:5">for <control pos:start="21:9" pos:end="21:54">(<init pos:start="21:10" pos:end="21:24"><expr pos:start="21:10" pos:end="21:23"><name pos:start="21:10" pos:end="21:11">nf</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:23">note_func</name></expr>;</init> <condition pos:start="21:26" pos:end="21:48"><expr pos:start="21:26" pos:end="21:47"><name pos:start="21:26" pos:end="21:47"><name pos:start="21:26" pos:end="21:27">nf</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:47">note_contents_func</name></name></expr>;</condition> <incr pos:start="21:50" pos:end="21:53"><expr pos:start="21:50" pos:end="21:53"><name pos:start="21:50" pos:end="21:51">nf</name><operator pos:start="21:52" pos:end="21:53">++</operator></expr></incr>)</control> <block pos:start="21:56" pos:end="49:5">{<block_content pos:start="23:9" pos:end="45:9">

        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><call pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:14">memset</name><argument_list pos:start="23:15" pos:end="23:38">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><operator pos:start="23:16" pos:end="23:16">&amp;</operator><name pos:start="23:17" pos:end="23:20">note</name></expr></argument>, <argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr></argument>, <argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><sizeof pos:start="23:26" pos:end="23:37">sizeof<argument_list pos:start="23:32" pos:end="23:37">(<argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><name pos:start="23:33" pos:end="23:36">note</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:12">note</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:16">hdr</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:25">n_namesz</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <call pos:start="25:29" pos:end="25:58"><name pos:start="25:29" pos:end="25:39">cpu_to_be32</name><argument_list pos:start="25:40" pos:end="25:58">(<argument pos:start="25:41" pos:end="25:57"><expr pos:start="25:41" pos:end="25:57"><sizeof pos:start="25:41" pos:end="25:57">sizeof<argument_list pos:start="25:47" pos:end="25:57">(<argument pos:start="25:48" pos:end="25:56"><expr pos:start="25:48" pos:end="25:56"><name pos:start="25:48" pos:end="25:56"><name pos:start="25:48" pos:end="25:51">note</name><operator pos:start="25:52" pos:end="25:52">.</operator><name pos:start="25:53" pos:end="25:56">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:59"><expr pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:12">note</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:16">hdr</name><operator pos:start="27:17" pos:end="27:17">.</operator><name pos:start="27:18" pos:end="27:25">n_descsz</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <call pos:start="27:29" pos:end="27:58"><name pos:start="27:29" pos:end="27:39">cpu_to_be32</name><argument_list pos:start="27:40" pos:end="27:58">(<argument pos:start="27:41" pos:end="27:57"><expr pos:start="27:41" pos:end="27:57"><name pos:start="27:41" pos:end="27:57"><name pos:start="27:41" pos:end="27:42">nf</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:57">contents_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:57"><expr pos:start="29:9" pos:end="29:56"><call pos:start="29:9" pos:end="29:56"><name pos:start="29:9" pos:end="29:15">strncpy</name><argument_list pos:start="29:16" pos:end="29:56">(<argument pos:start="29:17" pos:end="29:25"><expr pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:20">note</name><operator pos:start="29:21" pos:end="29:21">.</operator><name pos:start="29:22" pos:end="29:25">name</name></name></expr></argument>, <argument pos:start="29:28" pos:end="29:36"><expr pos:start="29:28" pos:end="29:36"><name pos:start="29:28" pos:end="29:36">note_name</name></expr></argument>, <argument pos:start="29:39" pos:end="29:55"><expr pos:start="29:39" pos:end="29:55"><sizeof pos:start="29:39" pos:end="29:55">sizeof<argument_list pos:start="29:45" pos:end="29:55">(<argument pos:start="29:46" pos:end="29:54"><expr pos:start="29:46" pos:end="29:54"><name pos:start="29:46" pos:end="29:54"><name pos:start="29:46" pos:end="29:49">note</name><operator pos:start="29:50" pos:end="29:50">.</operator><name pos:start="29:51" pos:end="29:54">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:46"><expr pos:start="31:9" pos:end="31:45"><call pos:start="31:9" pos:end="31:45">(<modifier pos:start="31:10" pos:end="31:10">*</modifier><name pos:start="31:11" pos:end="31:32"><name pos:start="31:11" pos:end="31:12">nf</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:32">note_contents_func</name></name>)<argument_list pos:start="31:34" pos:end="31:45">(<argument pos:start="31:35" pos:end="31:39"><expr pos:start="31:35" pos:end="31:39"><operator pos:start="31:35" pos:end="31:35">&amp;</operator><name pos:start="31:36" pos:end="31:39">note</name></expr></argument>, <argument pos:start="31:42" pos:end="31:44"><expr pos:start="31:42" pos:end="31:44"><name pos:start="31:42" pos:end="31:44">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:77"><expr pos:start="35:9" pos:end="35:76"><name pos:start="35:9" pos:end="35:17">note_size</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <sizeof pos:start="35:21" pos:end="35:32">sizeof<argument_list pos:start="35:27" pos:end="35:32">(<argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">note</name></expr></argument>)</argument_list></sizeof> <operator pos:start="35:34" pos:end="35:34">-</operator> <sizeof pos:start="35:36" pos:end="35:56">sizeof<argument_list pos:start="35:42" pos:end="35:56">(<argument pos:start="35:43" pos:end="35:55"><expr pos:start="35:43" pos:end="35:55"><name pos:start="35:43" pos:end="35:55"><name pos:start="35:43" pos:end="35:46">note</name><operator pos:start="35:47" pos:end="35:47">.</operator><name pos:start="35:48" pos:end="35:55">contents</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="35:58" pos:end="35:58">+</operator> <name pos:start="35:60" pos:end="35:76"><name pos:start="35:60" pos:end="35:61">nf</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:76">contents_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:42"><expr pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:41"><name pos:start="37:15" pos:end="37:15">f</name><argument_list pos:start="37:16" pos:end="37:41">(<argument pos:start="37:17" pos:end="37:21"><expr pos:start="37:17" pos:end="37:21"><operator pos:start="37:17" pos:end="37:17">&amp;</operator><name pos:start="37:18" pos:end="37:21">note</name></expr></argument>, <argument pos:start="37:24" pos:end="37:32"><expr pos:start="37:24" pos:end="37:32"><name pos:start="37:24" pos:end="37:32">note_size</name></expr></argument>, <argument pos:start="37:35" pos:end="37:40"><expr pos:start="37:35" pos:end="37:40"><name pos:start="37:35" pos:end="37:40">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:22">

            <return pos:start="43:13" pos:end="43:22">return <expr pos:start="43:20" pos:end="43:21"><operator pos:start="43:20" pos:end="43:20">-</operator><literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></for>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
