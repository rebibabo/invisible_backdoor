<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15659.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">helper_syscall</name><parameter_list pos:start="1:20" pos:end="1:58">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:31">CPUX86State</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:57">next_eip_addend</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">selector</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:36">(<expr pos:start="9:9" pos:end="9:35"><operator pos:start="9:9" pos:end="9:9">!</operator><operator pos:start="9:10" pos:end="9:10">(</operator><name pos:start="9:11" pos:end="9:19"><name pos:start="9:11" pos:end="9:13">env</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:19">efer</name></name> <operator pos:start="9:21" pos:end="9:21">&amp;</operator> <name pos:start="9:23" pos:end="9:34">MSR_EFER_SCE</name><operator pos:start="9:35" pos:end="9:35">)</operator></expr>)</condition> <block pos:start="9:38" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:50">

        <expr_stmt pos:start="11:9" pos:end="11:50"><expr pos:start="11:9" pos:end="11:49"><call pos:start="11:9" pos:end="11:49"><name pos:start="11:9" pos:end="11:27">raise_exception_err</name><argument_list pos:start="11:28" pos:end="11:49">(<argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:31">env</name></expr></argument>, <argument pos:start="11:34" pos:end="11:45"><expr pos:start="11:34" pos:end="11:45"><name pos:start="11:34" pos:end="11:45">EXCP06_ILLOP</name></expr></argument>, <argument pos:start="11:48" pos:end="11:48"><expr pos:start="11:48" pos:end="11:48"><literal type="number" pos:start="11:48" pos:end="11:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:12">selector</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:19">env</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:25">star</name></name> <operator pos:start="15:27" pos:end="15:28">&gt;&gt;</operator> <literal type="number" pos:start="15:30" pos:end="15:31">32</literal><operator pos:start="15:32" pos:end="15:32">)</operator> <operator pos:start="15:34" pos:end="15:34">&amp;</operator> <literal type="number" pos:start="15:36" pos:end="15:41">0xffff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="103:5"><if pos:start="17:5" pos:end="71:5">if <condition pos:start="17:8" pos:end="17:34">(<expr pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:11">env</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:19">hflags</name></name> <operator pos:start="17:21" pos:end="17:21">&amp;</operator> <name pos:start="17:23" pos:end="17:33">HF_LMA_MASK</name></expr>)</condition> <block pos:start="17:36" pos:end="71:5">{<block_content pos:start="19:9" pos:end="69:9">

        <decl_stmt pos:start="19:9" pos:end="19:19"><decl pos:start="19:9" pos:end="19:18"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:18">code64</name></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:54"><expr pos:start="23:9" pos:end="23:53"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">regs</name><index pos:start="23:18" pos:end="23:24">[<expr pos:start="23:19" pos:end="23:23"><name pos:start="23:19" pos:end="23:23">R_ECX</name></expr>]</index></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <name pos:start="23:28" pos:end="23:35"><name pos:start="23:28" pos:end="23:30">env</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:35">eip</name></name> <operator pos:start="23:37" pos:end="23:37">+</operator> <name pos:start="23:39" pos:end="23:53">next_eip_addend</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:17">regs</name><index pos:start="25:18" pos:end="25:21">[<expr pos:start="25:19" pos:end="25:20"><literal type="number" pos:start="25:19" pos:end="25:20">11</literal></expr>]</index></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <call pos:start="25:25" pos:end="25:47"><name pos:start="25:25" pos:end="25:42">cpu_compute_eflags</name><argument_list pos:start="25:43" pos:end="25:47">(<argument pos:start="25:44" pos:end="25:46"><expr pos:start="25:44" pos:end="25:46"><name pos:start="25:44" pos:end="25:46">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:14">code64</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:28"><name pos:start="29:18" pos:end="29:20">env</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:28">hflags</name></name> <operator pos:start="29:30" pos:end="29:30">&amp;</operator> <name pos:start="29:32" pos:end="29:43">HF_CS64_MASK</name></expr>;</expr_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:11">env</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:19">eflags</name></name> <operator pos:start="33:21" pos:end="33:22">&amp;=</operator> <operator pos:start="33:24" pos:end="33:24">~</operator><name pos:start="33:25" pos:end="33:34"><name pos:start="33:25" pos:end="33:27">env</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:34">fmask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><call pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:23">cpu_load_eflags</name><argument_list pos:start="35:24" pos:end="35:44">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">env</name></expr></argument>, <argument pos:start="35:30" pos:end="35:40"><expr pos:start="35:30" pos:end="35:40"><name pos:start="35:30" pos:end="35:40"><name pos:start="35:30" pos:end="35:32">env</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:40">eflags</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:43"><expr pos:start="35:43" pos:end="35:43"><literal type="number" pos:start="35:43" pos:end="35:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:23">cpu_x86_set_cpl</name><argument_list pos:start="37:24" pos:end="37:31">(<argument pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">env</name></expr></argument>, <argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><literal type="number" pos:start="37:30" pos:end="37:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="49:44"><expr pos:start="39:9" pos:end="49:43"><call pos:start="39:9" pos:end="49:43"><name pos:start="39:9" pos:end="39:30">cpu_x86_load_seg_cache</name><argument_list pos:start="39:31" pos:end="49:43">(<argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">env</name></expr></argument>, <argument pos:start="39:37" pos:end="39:40"><expr pos:start="39:37" pos:end="39:40"><name pos:start="39:37" pos:end="39:40">R_CS</name></expr></argument>, <argument pos:start="39:43" pos:end="39:59"><expr pos:start="39:43" pos:end="39:59"><name pos:start="39:43" pos:end="39:50">selector</name> <operator pos:start="39:52" pos:end="39:52">&amp;</operator> <literal type="number" pos:start="39:54" pos:end="39:59">0xfffc</literal></expr></argument>,

                           <argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr></argument>, <argument pos:start="41:31" pos:end="41:40"><expr pos:start="41:31" pos:end="41:40"><literal type="number" pos:start="41:31" pos:end="41:40">0xffffffff</literal></expr></argument>,

                               <argument pos:start="43:32" pos:end="49:42"><expr pos:start="43:32" pos:end="49:42"><name pos:start="43:32" pos:end="43:42">DESC_G_MASK</name> <operator pos:start="43:44" pos:end="43:44">|</operator> <name pos:start="43:46" pos:end="43:56">DESC_P_MASK</name> <operator pos:start="43:58" pos:end="43:58">|</operator>

                               <name pos:start="45:32" pos:end="45:42">DESC_S_MASK</name> <operator pos:start="45:44" pos:end="45:44">|</operator>

                               <name pos:start="47:32" pos:end="47:43">DESC_CS_MASK</name> <operator pos:start="47:45" pos:end="47:45">|</operator> <name pos:start="47:47" pos:end="47:57">DESC_R_MASK</name> <operator pos:start="47:59" pos:end="47:59">|</operator> <name pos:start="47:61" pos:end="47:71">DESC_A_MASK</name> <operator pos:start="47:73" pos:end="47:73">|</operator>

                               <name pos:start="49:32" pos:end="49:42">DESC_L_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="59:58"><expr pos:start="51:9" pos:end="59:57"><call pos:start="51:9" pos:end="59:57"><name pos:start="51:9" pos:end="51:30">cpu_x86_load_seg_cache</name><argument_list pos:start="51:31" pos:end="59:57">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">env</name></expr></argument>, <argument pos:start="51:37" pos:end="51:40"><expr pos:start="51:37" pos:end="51:40"><name pos:start="51:37" pos:end="51:40">R_SS</name></expr></argument>, <argument pos:start="51:43" pos:end="51:65"><expr pos:start="51:43" pos:end="51:65"><operator pos:start="51:43" pos:end="51:43">(</operator><name pos:start="51:44" pos:end="51:51">selector</name> <operator pos:start="51:53" pos:end="51:53">+</operator> <literal type="number" pos:start="51:55" pos:end="51:55">8</literal><operator pos:start="51:56" pos:end="51:56">)</operator> <operator pos:start="51:58" pos:end="51:58">&amp;</operator> <literal type="number" pos:start="51:60" pos:end="51:65">0xfffc</literal></expr></argument>,

                               <argument pos:start="53:32" pos:end="53:32"><expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">0</literal></expr></argument>, <argument pos:start="53:35" pos:end="53:44"><expr pos:start="53:35" pos:end="53:44"><literal type="number" pos:start="53:35" pos:end="53:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="55:32" pos:end="59:56"><expr pos:start="55:32" pos:end="59:56"><name pos:start="55:32" pos:end="55:42">DESC_G_MASK</name> <operator pos:start="55:44" pos:end="55:44">|</operator> <name pos:start="55:46" pos:end="55:56">DESC_B_MASK</name> <operator pos:start="55:58" pos:end="55:58">|</operator> <name pos:start="55:60" pos:end="55:70">DESC_P_MASK</name> <operator pos:start="55:72" pos:end="55:72">|</operator>

                               <name pos:start="57:32" pos:end="57:42">DESC_S_MASK</name> <operator pos:start="57:44" pos:end="57:44">|</operator>

                               <name pos:start="59:32" pos:end="59:42">DESC_W_MASK</name> <operator pos:start="59:44" pos:end="59:44">|</operator> <name pos:start="59:46" pos:end="59:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:19">(<expr pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:18">code64</name></expr>)</condition> <block pos:start="61:21" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:34">

            <expr_stmt pos:start="63:13" pos:end="63:34"><expr pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:15">env</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:20">eip</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:33"><name pos:start="63:24" pos:end="63:26">env</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:33">lstar</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="69:9">else <block pos:start="65:16" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:34">

            <expr_stmt pos:start="67:13" pos:end="67:34"><expr pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:15">env</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:20">eip</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:33"><name pos:start="67:24" pos:end="67:26">env</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:33">cstar</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="103:5">else <block pos:start="71:12" pos:end="103:5">{<block_content pos:start="73:9" pos:end="101:39">

        <expr_stmt pos:start="73:9" pos:end="73:66"><expr pos:start="73:9" pos:end="73:65"><name pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:11">env</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:17">regs</name><index pos:start="73:18" pos:end="73:24">[<expr pos:start="73:19" pos:end="73:23"><name pos:start="73:19" pos:end="73:23">R_ECX</name></expr>]</index></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <operator pos:start="73:28" pos:end="73:28">(</operator><name pos:start="73:29" pos:end="73:36">uint32_t</name><operator pos:start="73:37" pos:end="73:37">)</operator><operator pos:start="73:38" pos:end="73:38">(</operator><name pos:start="73:39" pos:end="73:46"><name pos:start="73:39" pos:end="73:41">env</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:46">eip</name></name> <operator pos:start="73:48" pos:end="73:48">+</operator> <name pos:start="73:50" pos:end="73:64">next_eip_addend</name><operator pos:start="73:65" pos:end="73:65">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:54"><expr pos:start="77:9" pos:end="77:53"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:11">env</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:19">eflags</name></name> <operator pos:start="77:21" pos:end="77:22">&amp;=</operator> <operator pos:start="77:24" pos:end="77:24">~</operator><operator pos:start="77:25" pos:end="77:25">(</operator><name pos:start="77:26" pos:end="77:32">IF_MASK</name> <operator pos:start="77:34" pos:end="77:34">|</operator> <name pos:start="77:36" pos:end="77:42">RF_MASK</name> <operator pos:start="77:44" pos:end="77:44">|</operator> <name pos:start="77:46" pos:end="77:52">VM_MASK</name><operator pos:start="77:53" pos:end="77:53">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:32"><expr pos:start="79:9" pos:end="79:31"><call pos:start="79:9" pos:end="79:31"><name pos:start="79:9" pos:end="79:23">cpu_x86_set_cpl</name><argument_list pos:start="79:24" pos:end="79:31">(<argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><name pos:start="79:25" pos:end="79:27">env</name></expr></argument>, <argument pos:start="79:30" pos:end="79:30"><expr pos:start="79:30" pos:end="79:30"><literal type="number" pos:start="79:30" pos:end="79:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="89:73"><expr pos:start="81:9" pos:end="89:72"><call pos:start="81:9" pos:end="89:72"><name pos:start="81:9" pos:end="81:30">cpu_x86_load_seg_cache</name><argument_list pos:start="81:31" pos:end="89:72">(<argument pos:start="81:32" pos:end="81:34"><expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:34">env</name></expr></argument>, <argument pos:start="81:37" pos:end="81:40"><expr pos:start="81:37" pos:end="81:40"><name pos:start="81:37" pos:end="81:40">R_CS</name></expr></argument>, <argument pos:start="81:43" pos:end="81:59"><expr pos:start="81:43" pos:end="81:59"><name pos:start="81:43" pos:end="81:50">selector</name> <operator pos:start="81:52" pos:end="81:52">&amp;</operator> <literal type="number" pos:start="81:54" pos:end="81:59">0xfffc</literal></expr></argument>,

                           <argument pos:start="83:28" pos:end="83:28"><expr pos:start="83:28" pos:end="83:28"><literal type="number" pos:start="83:28" pos:end="83:28">0</literal></expr></argument>, <argument pos:start="83:31" pos:end="83:40"><expr pos:start="83:31" pos:end="83:40"><literal type="number" pos:start="83:31" pos:end="83:40">0xffffffff</literal></expr></argument>,

                               <argument pos:start="85:32" pos:end="89:71"><expr pos:start="85:32" pos:end="89:71"><name pos:start="85:32" pos:end="85:42">DESC_G_MASK</name> <operator pos:start="85:44" pos:end="85:44">|</operator> <name pos:start="85:46" pos:end="85:56">DESC_B_MASK</name> <operator pos:start="85:58" pos:end="85:58">|</operator> <name pos:start="85:60" pos:end="85:70">DESC_P_MASK</name> <operator pos:start="85:72" pos:end="85:72">|</operator>

                               <name pos:start="87:32" pos:end="87:42">DESC_S_MASK</name> <operator pos:start="87:44" pos:end="87:44">|</operator>

                               <name pos:start="89:32" pos:end="89:43">DESC_CS_MASK</name> <operator pos:start="89:45" pos:end="89:45">|</operator> <name pos:start="89:47" pos:end="89:57">DESC_R_MASK</name> <operator pos:start="89:59" pos:end="89:59">|</operator> <name pos:start="89:61" pos:end="89:71">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="99:58"><expr pos:start="91:9" pos:end="99:57"><call pos:start="91:9" pos:end="99:57"><name pos:start="91:9" pos:end="91:30">cpu_x86_load_seg_cache</name><argument_list pos:start="91:31" pos:end="99:57">(<argument pos:start="91:32" pos:end="91:34"><expr pos:start="91:32" pos:end="91:34"><name pos:start="91:32" pos:end="91:34">env</name></expr></argument>, <argument pos:start="91:37" pos:end="91:40"><expr pos:start="91:37" pos:end="91:40"><name pos:start="91:37" pos:end="91:40">R_SS</name></expr></argument>, <argument pos:start="91:43" pos:end="91:65"><expr pos:start="91:43" pos:end="91:65"><operator pos:start="91:43" pos:end="91:43">(</operator><name pos:start="91:44" pos:end="91:51">selector</name> <operator pos:start="91:53" pos:end="91:53">+</operator> <literal type="number" pos:start="91:55" pos:end="91:55">8</literal><operator pos:start="91:56" pos:end="91:56">)</operator> <operator pos:start="91:58" pos:end="91:58">&amp;</operator> <literal type="number" pos:start="91:60" pos:end="91:65">0xfffc</literal></expr></argument>,

                               <argument pos:start="93:32" pos:end="93:32"><expr pos:start="93:32" pos:end="93:32"><literal type="number" pos:start="93:32" pos:end="93:32">0</literal></expr></argument>, <argument pos:start="93:35" pos:end="93:44"><expr pos:start="93:35" pos:end="93:44"><literal type="number" pos:start="93:35" pos:end="93:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="95:32" pos:end="99:56"><expr pos:start="95:32" pos:end="99:56"><name pos:start="95:32" pos:end="95:42">DESC_G_MASK</name> <operator pos:start="95:44" pos:end="95:44">|</operator> <name pos:start="95:46" pos:end="95:56">DESC_B_MASK</name> <operator pos:start="95:58" pos:end="95:58">|</operator> <name pos:start="95:60" pos:end="95:70">DESC_P_MASK</name> <operator pos:start="95:72" pos:end="95:72">|</operator>

                               <name pos:start="97:32" pos:end="97:42">DESC_S_MASK</name> <operator pos:start="97:44" pos:end="97:44">|</operator>

                               <name pos:start="99:32" pos:end="99:42">DESC_W_MASK</name> <operator pos:start="99:44" pos:end="99:44">|</operator> <name pos:start="99:46" pos:end="99:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:39"><expr pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:11">env</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:16">eip</name></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <operator pos:start="101:20" pos:end="101:20">(</operator><name pos:start="101:21" pos:end="101:28">uint32_t</name><operator pos:start="101:29" pos:end="101:29">)</operator><name pos:start="101:30" pos:end="101:38"><name pos:start="101:30" pos:end="101:32">env</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:38">star</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
