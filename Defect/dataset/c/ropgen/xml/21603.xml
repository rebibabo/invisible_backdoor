<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21603.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">transcode_video</name><parameter_list pos:start="1:27" pos:end="1:94">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38">InputStream</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ist</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">AVPacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pkt</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:75">got_output</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:93"><decl pos:start="1:78" pos:end="1:93"><type pos:start="1:78" pos:end="1:93"><name pos:start="1:78" pos:end="1:84">int64_t</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:93">pkt_pts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:15">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:26">decoded_frame</name></decl>, <decl pos:start="5:29" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:43">filtered_frame</name> <init pos:start="5:45" pos:end="5:50">= <expr pos:start="5:47" pos:end="5:50"><name pos:start="5:47" pos:end="5:50">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:24">buffer_to_free</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:17">quality</name></decl>;</decl_stmt>

<cpp:if pos:start="13:1" pos:end="13:19">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">CONFIG_AVFILTER</name></expr></cpp:if>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:23">frame_available</name> <init pos:start="15:25" pos:end="15:27">= <expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="21:5" pos:end="27:55"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:77">(<expr pos:start="21:9" pos:end="21:76"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:27"><name pos:start="21:10" pos:end="21:12">ist</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:27">decoded_frame</name></name> <operator pos:start="21:29" pos:end="21:30">&amp;&amp;</operator> <operator pos:start="21:32" pos:end="21:32">!</operator><operator pos:start="21:33" pos:end="21:33">(</operator><name pos:start="21:34" pos:end="21:51"><name pos:start="21:34" pos:end="21:36">ist</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:51">decoded_frame</name></name> <operator pos:start="21:53" pos:end="21:53">=</operator> <call pos:start="21:55" pos:end="21:75"><name pos:start="21:55" pos:end="21:73">avcodec_alloc_frame</name><argument_list pos:start="21:74" pos:end="21:75">()</argument_list></call><operator pos:start="21:76" pos:end="21:76">)</operator></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="25:5" pos:end="27:55">else<block type="pseudo" pos:start="27:9" pos:end="27:55"><block_content pos:start="27:9" pos:end="27:55">

        <expr_stmt pos:start="27:9" pos:end="27:55"><expr pos:start="27:9" pos:end="27:54"><call pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:34">avcodec_get_frame_defaults</name><argument_list pos:start="27:35" pos:end="27:54">(<argument pos:start="27:36" pos:end="27:53"><expr pos:start="27:36" pos:end="27:53"><name pos:start="27:36" pos:end="27:53"><name pos:start="27:36" pos:end="27:38">ist</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:53">decoded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:17">decoded_frame</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:38"><name pos:start="29:21" pos:end="29:23">ist</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:38">decoded_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:7">pkt</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:12">pts</name></name>  <operator pos:start="31:15" pos:end="31:15">=</operator> <operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:24">pkt_pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:7">pkt</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">dts</name></name>  <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:19">ist</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:29">last_dts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><operator pos:start="35:5" pos:end="35:5">*</operator><name pos:start="35:6" pos:end="35:12">pkt_pts</name>  <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:30">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="41:64"><expr pos:start="39:5" pos:end="41:63"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="41:63"><name pos:start="39:11" pos:end="39:31">avcodec_decode_video2</name><argument_list pos:start="39:32" pos:end="41:63">(<argument pos:start="39:33" pos:end="39:46"><expr pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:35">ist</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:39">st</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:46">codec</name></name></expr></argument>,

                                <argument pos:start="41:33" pos:end="41:45"><expr pos:start="41:33" pos:end="41:45"><name pos:start="41:33" pos:end="41:45">decoded_frame</name></expr></argument>, <argument pos:start="41:48" pos:end="41:57"><expr pos:start="41:48" pos:end="41:57"><name pos:start="41:48" pos:end="41:57">got_output</name></expr></argument>, <argument pos:start="41:60" pos:end="41:62"><expr pos:start="41:60" pos:end="41:62"><name pos:start="41:60" pos:end="41:62">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:19"><if pos:start="43:5" pos:end="45:19">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:19"><block_content pos:start="45:9" pos:end="45:19">

        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:54"><expr pos:start="49:5" pos:end="49:53"><name pos:start="49:5" pos:end="49:11">quality</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <ternary pos:start="49:15" pos:end="49:53"><condition pos:start="49:15" pos:end="49:26"><expr pos:start="49:15" pos:end="49:24"><name pos:start="49:15" pos:end="49:24">same_quant</name></expr> ?</condition><then pos:start="49:28" pos:end="49:49"> <expr pos:start="49:28" pos:end="49:49"><name pos:start="49:28" pos:end="49:49"><name pos:start="49:28" pos:end="49:40">decoded_frame</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:49">quality</name></name></expr> </then><else pos:start="49:51" pos:end="49:53">: <expr pos:start="49:53" pos:end="49:53"><literal type="number" pos:start="49:53" pos:end="49:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:21">(<expr pos:start="51:9" pos:end="51:20"><operator pos:start="51:9" pos:end="51:9">!</operator><operator pos:start="51:10" pos:end="51:10">*</operator><name pos:start="51:11" pos:end="51:20">got_output</name></expr>)</condition> <block pos:start="51:23" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:19">

        <comment type="block" pos:start="53:9" pos:end="53:28">/* no picture yet */</comment>

        <return pos:start="55:9" pos:end="55:19">return <expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:67"><expr pos:start="59:5" pos:end="61:66"><name pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:17">decoded_frame</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:22">pts</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <call pos:start="59:26" pos:end="61:66"><name pos:start="59:26" pos:end="59:42">guess_correct_pts</name><argument_list pos:start="59:43" pos:end="61:66">(<argument pos:start="59:44" pos:end="59:56"><expr pos:start="59:44" pos:end="59:56"><operator pos:start="59:44" pos:end="59:44">&amp;</operator><name pos:start="59:45" pos:end="59:56"><name pos:start="59:45" pos:end="59:47">ist</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:56">pts_ctx</name></name></expr></argument>, <argument pos:start="59:59" pos:end="59:80"><expr pos:start="59:59" pos:end="59:80"><name pos:start="59:59" pos:end="59:80"><name pos:start="59:59" pos:end="59:71">decoded_frame</name><operator pos:start="59:72" pos:end="59:73">-&gt;</operator><name pos:start="59:74" pos:end="59:80">pkt_pts</name></name></expr></argument>,

                                           <argument pos:start="61:44" pos:end="61:65"><expr pos:start="61:44" pos:end="61:65"><name pos:start="61:44" pos:end="61:65"><name pos:start="61:44" pos:end="61:56">decoded_frame</name><operator pos:start="61:57" pos:end="61:58">-&gt;</operator><name pos:start="61:59" pos:end="61:65">pkt_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:18"><expr pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:7">pkt</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:13">size</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <literal type="number" pos:start="63:17" pos:end="63:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:78"><expr pos:start="65:5" pos:end="65:77"><call pos:start="65:5" pos:end="65:77"><name pos:start="65:5" pos:end="65:27">pre_process_video_frame</name><argument_list pos:start="65:28" pos:end="65:77">(<argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:31">ist</name></expr></argument>, <argument pos:start="65:34" pos:end="65:59"><expr pos:start="65:34" pos:end="65:59"><operator pos:start="65:34" pos:end="65:34">(</operator><name pos:start="65:35" pos:end="65:43">AVPicture</name> <operator pos:start="65:45" pos:end="65:45">*</operator><operator pos:start="65:46" pos:end="65:46">)</operator><name pos:start="65:47" pos:end="65:59">decoded_frame</name></expr></argument>, <argument pos:start="65:62" pos:end="65:76"><expr pos:start="65:62" pos:end="65:76"><operator pos:start="65:62" pos:end="65:62">&amp;</operator><name pos:start="65:63" pos:end="65:76">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><call pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:18">rate_emu_sleep</name><argument_list pos:start="69:19" pos:end="69:23">(<argument pos:start="69:20" pos:end="69:22"><expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">ist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="73:5" pos:end="231:5">for <control pos:start="73:9" pos:end="73:43">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:38"><expr pos:start="73:17" pos:end="73:37"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:37">nb_output_streams</name></expr>;</condition> <incr pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:40">i</name><operator pos:start="73:41" pos:end="73:42">++</operator></expr></incr>)</control> <block pos:start="73:45" pos:end="231:5">{<block_content pos:start="75:9" pos:end="230:0">

        <decl_stmt pos:start="75:9" pos:end="75:47"><decl pos:start="75:9" pos:end="75:46"><type pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:20">OutputStream</name> <modifier pos:start="75:22" pos:end="75:22">*</modifier></type><name pos:start="75:23" pos:end="75:25">ost</name> <init pos:start="75:27" pos:end="75:46">= <expr pos:start="75:29" pos:end="75:46"><operator pos:start="75:29" pos:end="75:29">&amp;</operator><name pos:start="75:30" pos:end="75:46"><name pos:start="75:30" pos:end="75:43">output_streams</name><index pos:start="75:44" pos:end="75:46">[<expr pos:start="75:45" pos:end="75:45"><name pos:start="75:45" pos:end="75:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:41"><decl pos:start="77:9" pos:end="77:22"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:22">frame_size</name></decl>, <decl pos:start="77:25" pos:end="77:40"><type ref="prev" pos:start="77:9" pos:end="77:11"/><name pos:start="77:25" pos:end="77:40">resample_changed</name></decl>;</decl_stmt>



        <if_stmt pos:start="81:9" pos:end="88:0"><if pos:start="81:9" pos:end="88:0">if <condition pos:start="81:12" pos:end="81:73">(<expr pos:start="81:13" pos:end="81:72"><operator pos:start="81:13" pos:end="81:13">!</operator><call pos:start="81:14" pos:end="81:47"><name pos:start="81:14" pos:end="81:37">check_output_constraints</name><argument_list pos:start="81:38" pos:end="81:47">(<argument pos:start="81:39" pos:end="81:41"><expr pos:start="81:39" pos:end="81:41"><name pos:start="81:39" pos:end="81:41">ist</name></expr></argument>, <argument pos:start="81:44" pos:end="81:46"><expr pos:start="81:44" pos:end="81:46"><name pos:start="81:44" pos:end="81:46">ost</name></expr></argument>)</argument_list></call> <operator pos:start="81:49" pos:end="81:50">||</operator> <operator pos:start="81:52" pos:end="81:52">!</operator><name pos:start="81:53" pos:end="81:72"><name pos:start="81:53" pos:end="81:55">ost</name><operator pos:start="81:56" pos:end="81:57">-&gt;</operator><name pos:start="81:58" pos:end="81:72">encoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="88:0"><block_content pos:start="83:13" pos:end="88:0">

            <continue pos:start="83:13" pos:end="88:0">continue;</continue></block_content></block></if></if_stmt>



<cpp:if pos:start="87:1" pos:end="87:19">#<cpp:directive pos:start="87:2" pos:end="87:3">if</cpp:directive> <expr pos:start="87:5" pos:end="87:19"><name pos:start="87:5" pos:end="87:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <expr_stmt pos:start="89:9" pos:end="93:74"><expr pos:start="89:9" pos:end="93:73"><name pos:start="89:9" pos:end="89:24">resample_changed</name> <operator pos:start="89:26" pos:end="89:26">=</operator> <name pos:start="89:28" pos:end="89:46"><name pos:start="89:28" pos:end="89:30">ost</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:46">resample_width</name></name>   <operator pos:start="89:50" pos:end="89:51">!=</operator> <name pos:start="89:53" pos:end="89:72"><name pos:start="89:53" pos:end="89:65">decoded_frame</name><operator pos:start="89:66" pos:end="89:67">-&gt;</operator><name pos:start="89:68" pos:end="89:72">width</name></name>  <operator pos:start="89:75" pos:end="89:76">||</operator>

                           <name pos:start="91:28" pos:end="91:47"><name pos:start="91:28" pos:end="91:30">ost</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:47">resample_height</name></name>  <operator pos:start="91:50" pos:end="91:51">!=</operator> <name pos:start="91:53" pos:end="91:73"><name pos:start="91:53" pos:end="91:65">decoded_frame</name><operator pos:start="91:66" pos:end="91:67">-&gt;</operator><name pos:start="91:68" pos:end="91:73">height</name></name> <operator pos:start="91:75" pos:end="91:76">||</operator>

                           <name pos:start="93:28" pos:end="93:48"><name pos:start="93:28" pos:end="93:30">ost</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:48">resample_pix_fmt</name></name> <operator pos:start="93:50" pos:end="93:51">!=</operator> <name pos:start="93:53" pos:end="93:73"><name pos:start="93:53" pos:end="93:65">decoded_frame</name><operator pos:start="93:66" pos:end="93:67">-&gt;</operator><name pos:start="93:68" pos:end="93:73">format</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="127:9"><if pos:start="95:9" pos:end="127:9">if <condition pos:start="95:12" pos:end="95:29">(<expr pos:start="95:13" pos:end="95:28"><name pos:start="95:13" pos:end="95:28">resample_changed</name></expr>)</condition> <block pos:start="95:31" pos:end="127:9">{<block_content pos:start="97:13" pos:end="125:58">

            <expr_stmt pos:start="97:13" pos:end="105:109"><expr pos:start="97:13" pos:end="105:108"><call pos:start="97:13" pos:end="105:108"><name pos:start="97:13" pos:end="97:18">av_log</name><argument_list pos:start="97:19" pos:end="105:108">(<argument pos:start="97:20" pos:end="97:23"><expr pos:start="97:20" pos:end="97:23"><name pos:start="97:20" pos:end="97:23">NULL</name></expr></argument>, <argument pos:start="97:26" pos:end="97:36"><expr pos:start="97:26" pos:end="97:36"><name pos:start="97:26" pos:end="97:36">AV_LOG_INFO</name></expr></argument>,

                    <argument pos:start="99:21" pos:end="99:101"><expr pos:start="99:21" pos:end="99:101"><literal type="string" pos:start="99:21" pos:end="99:101">"Input stream #%d:%d frame changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s\n"</literal></expr></argument>,

                    <argument pos:start="101:21" pos:end="101:35"><expr pos:start="101:21" pos:end="101:35"><name pos:start="101:21" pos:end="101:35"><name pos:start="101:21" pos:end="101:23">ist</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:35">file_index</name></name></expr></argument>, <argument pos:start="101:38" pos:end="101:51"><expr pos:start="101:38" pos:end="101:51"><name pos:start="101:38" pos:end="101:51"><name pos:start="101:38" pos:end="101:40">ist</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:44">st</name><operator pos:start="101:45" pos:end="101:46">-&gt;</operator><name pos:start="101:47" pos:end="101:51">index</name></name></expr></argument>,

                    <argument pos:start="103:21" pos:end="103:39"><expr pos:start="103:21" pos:end="103:39"><name pos:start="103:21" pos:end="103:39"><name pos:start="103:21" pos:end="103:23">ost</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:39">resample_width</name></name></expr></argument>,  <argument pos:start="103:43" pos:end="103:62"><expr pos:start="103:43" pos:end="103:62"><name pos:start="103:43" pos:end="103:62"><name pos:start="103:43" pos:end="103:45">ost</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:62">resample_height</name></name></expr></argument>,  <argument pos:start="103:66" pos:end="103:107"><expr pos:start="103:66" pos:end="103:107"><call pos:start="103:66" pos:end="103:107"><name pos:start="103:66" pos:end="103:84">av_get_pix_fmt_name</name><argument_list pos:start="103:85" pos:end="103:107">(<argument pos:start="103:86" pos:end="103:106"><expr pos:start="103:86" pos:end="103:106"><name pos:start="103:86" pos:end="103:106"><name pos:start="103:86" pos:end="103:88">ost</name><operator pos:start="103:89" pos:end="103:90">-&gt;</operator><name pos:start="103:91" pos:end="103:106">resample_pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="105:21" pos:end="105:40"><expr pos:start="105:21" pos:end="105:40"><name pos:start="105:21" pos:end="105:40"><name pos:start="105:21" pos:end="105:33">decoded_frame</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:40">width</name></name></expr></argument>, <argument pos:start="105:43" pos:end="105:63"><expr pos:start="105:43" pos:end="105:63"><name pos:start="105:43" pos:end="105:63"><name pos:start="105:43" pos:end="105:55">decoded_frame</name><operator pos:start="105:56" pos:end="105:57">-&gt;</operator><name pos:start="105:58" pos:end="105:63">height</name></name></expr></argument>, <argument pos:start="105:66" pos:end="105:107"><expr pos:start="105:66" pos:end="105:107"><call pos:start="105:66" pos:end="105:107"><name pos:start="105:66" pos:end="105:84">av_get_pix_fmt_name</name><argument_list pos:start="105:85" pos:end="105:107">(<argument pos:start="105:86" pos:end="105:106"><expr pos:start="105:86" pos:end="105:106"><name pos:start="105:86" pos:end="105:106"><name pos:start="105:86" pos:end="105:98">decoded_frame</name><operator pos:start="105:99" pos:end="105:100">-&gt;</operator><name pos:start="105:101" pos:end="105:106">format</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:45"><expr pos:start="109:13" pos:end="109:44"><call pos:start="109:13" pos:end="109:44"><name pos:start="109:13" pos:end="109:31">avfilter_graph_free</name><argument_list pos:start="109:32" pos:end="109:44">(<argument pos:start="109:33" pos:end="109:43"><expr pos:start="109:33" pos:end="109:43"><operator pos:start="109:33" pos:end="109:33">&amp;</operator><name pos:start="109:34" pos:end="109:43"><name pos:start="109:34" pos:end="109:36">ost</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:43">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="117:13"><if pos:start="111:13" pos:end="117:13">if <condition pos:start="111:16" pos:end="111:50">(<expr pos:start="111:17" pos:end="111:49"><call pos:start="111:17" pos:end="111:49"><name pos:start="111:17" pos:end="111:39">configure_video_filters</name><argument_list pos:start="111:40" pos:end="111:49">(<argument pos:start="111:41" pos:end="111:43"><expr pos:start="111:41" pos:end="111:43"><name pos:start="111:41" pos:end="111:43">ist</name></expr></argument>, <argument pos:start="111:46" pos:end="111:48"><expr pos:start="111:46" pos:end="111:48"><name pos:start="111:46" pos:end="111:48">ost</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:52" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:32">

                <expr_stmt pos:start="113:17" pos:end="113:78"><expr pos:start="113:17" pos:end="113:77"><call pos:start="113:17" pos:end="113:77"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="113:77">(<argument pos:start="113:24" pos:end="113:27"><expr pos:start="113:24" pos:end="113:27"><name pos:start="113:24" pos:end="113:27">NULL</name></expr></argument>, <argument pos:start="113:30" pos:end="113:41"><expr pos:start="113:30" pos:end="113:41"><name pos:start="113:30" pos:end="113:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="113:44" pos:end="113:76"><expr pos:start="113:44" pos:end="113:76"><literal type="string" pos:start="113:44" pos:end="113:76">"Error reinitializing filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:32"><expr pos:start="115:17" pos:end="115:31"><call pos:start="115:17" pos:end="115:31"><name pos:start="115:17" pos:end="115:28">exit_program</name><argument_list pos:start="115:29" pos:end="115:31">(<argument pos:start="115:30" pos:end="115:30"><expr pos:start="115:30" pos:end="115:30"><literal type="number" pos:start="115:30" pos:end="115:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:57"><expr pos:start="121:13" pos:end="121:56"><name pos:start="121:13" pos:end="121:31"><name pos:start="121:13" pos:end="121:15">ost</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:31">resample_width</name></name>   <operator pos:start="121:35" pos:end="121:35">=</operator> <name pos:start="121:37" pos:end="121:56"><name pos:start="121:37" pos:end="121:49">decoded_frame</name><operator pos:start="121:50" pos:end="121:51">-&gt;</operator><name pos:start="121:52" pos:end="121:56">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:58"><expr pos:start="123:13" pos:end="123:57"><name pos:start="123:13" pos:end="123:32"><name pos:start="123:13" pos:end="123:15">ost</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:32">resample_height</name></name>  <operator pos:start="123:35" pos:end="123:35">=</operator> <name pos:start="123:37" pos:end="123:57"><name pos:start="123:37" pos:end="123:49">decoded_frame</name><operator pos:start="123:50" pos:end="123:51">-&gt;</operator><name pos:start="123:52" pos:end="123:57">height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:58"><expr pos:start="125:13" pos:end="125:57"><name pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:15">ost</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:33">resample_pix_fmt</name></name> <operator pos:start="125:35" pos:end="125:35">=</operator> <name pos:start="125:37" pos:end="125:57"><name pos:start="125:37" pos:end="125:49">decoded_frame</name><operator pos:start="125:50" pos:end="125:51">-&gt;</operator><name pos:start="125:52" pos:end="125:57">format</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="131:9" pos:end="133:78"><if pos:start="131:9" pos:end="133:78">if <condition pos:start="131:12" pos:end="131:45">(<expr pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:15">ist</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:19">st</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:40">sample_aspect_ratio</name><operator pos:start="131:41" pos:end="131:41">.</operator><name pos:start="131:42" pos:end="131:44">num</name></name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:78"><block_content pos:start="133:13" pos:end="133:78">

            <expr_stmt pos:start="133:13" pos:end="133:78"><expr pos:start="133:13" pos:end="133:77"><name pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:25">decoded_frame</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:46">sample_aspect_ratio</name></name> <operator pos:start="133:48" pos:end="133:48">=</operator> <name pos:start="133:50" pos:end="133:77"><name pos:start="133:50" pos:end="133:52">ist</name><operator pos:start="133:53" pos:end="133:54">-&gt;</operator><name pos:start="133:55" pos:end="133:56">st</name><operator pos:start="133:57" pos:end="133:58">-&gt;</operator><name pos:start="133:59" pos:end="133:77">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="135:9" pos:end="167:93"><if pos:start="135:9" pos:end="163:9">if <condition pos:start="135:12" pos:end="135:64">(<expr pos:start="135:13" pos:end="135:63"><name pos:start="135:13" pos:end="135:47"><name pos:start="135:13" pos:end="135:15">ist</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:19">st</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:26">codec</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:33">codec</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:47">capabilities</name></name> <operator pos:start="135:49" pos:end="135:49">&amp;</operator> <name pos:start="135:51" pos:end="135:63">CODEC_CAP_DR1</name></expr>)</condition> <block pos:start="135:66" pos:end="163:9">{<block_content pos:start="137:13" pos:end="161:61">

            <decl_stmt pos:start="137:13" pos:end="137:58"><decl pos:start="137:13" pos:end="137:57"><type pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:23">FrameBuffer</name>      <modifier pos:start="137:30" pos:end="137:30">*</modifier></type><name pos:start="137:31" pos:end="137:33">buf</name> <init pos:start="137:35" pos:end="137:57">= <expr pos:start="137:37" pos:end="137:57"><name pos:start="137:37" pos:end="137:57"><name pos:start="137:37" pos:end="137:49">decoded_frame</name><operator pos:start="137:50" pos:end="137:51">-&gt;</operator><name pos:start="137:52" pos:end="137:57">opaque</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="139:13" pos:end="147:65"><decl pos:start="139:13" pos:end="147:64"><type pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:29">AVFilterBufferRef</name> <modifier pos:start="139:31" pos:end="139:31">*</modifier></type><name pos:start="139:32" pos:end="139:33">fb</name> <init pos:start="139:35" pos:end="147:64">= <expr pos:start="139:37" pos:end="147:64"><call pos:start="139:37" pos:end="147:64"><name pos:start="139:37" pos:end="139:77">avfilter_get_video_buffer_ref_from_arrays</name><argument_list pos:start="139:78" pos:end="147:64">(

                                        <argument pos:start="141:41" pos:end="141:59"><expr pos:start="141:41" pos:end="141:59"><name pos:start="141:41" pos:end="141:59"><name pos:start="141:41" pos:end="141:53">decoded_frame</name><operator pos:start="141:54" pos:end="141:55">-&gt;</operator><name pos:start="141:56" pos:end="141:59">data</name></name></expr></argument>, <argument pos:start="141:62" pos:end="141:84"><expr pos:start="141:62" pos:end="141:84"><name pos:start="141:62" pos:end="141:84"><name pos:start="141:62" pos:end="141:74">decoded_frame</name><operator pos:start="141:75" pos:end="141:76">-&gt;</operator><name pos:start="141:77" pos:end="141:84">linesize</name></name></expr></argument>,

                                        <argument pos:start="143:41" pos:end="143:71"><expr pos:start="143:41" pos:end="143:71"><name pos:start="143:41" pos:end="143:52">AV_PERM_READ</name> <operator pos:start="143:54" pos:end="143:54">|</operator> <name pos:start="143:56" pos:end="143:71">AV_PERM_PRESERVE</name></expr></argument>,

                                        <argument pos:start="145:41" pos:end="145:61"><expr pos:start="145:41" pos:end="145:61"><name pos:start="145:41" pos:end="145:61"><name pos:start="145:41" pos:end="145:43">ist</name><operator pos:start="145:44" pos:end="145:45">-&gt;</operator><name pos:start="145:46" pos:end="145:47">st</name><operator pos:start="145:48" pos:end="145:49">-&gt;</operator><name pos:start="145:50" pos:end="145:54">codec</name><operator pos:start="145:55" pos:end="145:56">-&gt;</operator><name pos:start="145:57" pos:end="145:61">width</name></name></expr></argument>, <argument pos:start="145:64" pos:end="145:85"><expr pos:start="145:64" pos:end="145:85"><name pos:start="145:64" pos:end="145:85"><name pos:start="145:64" pos:end="145:66">ist</name><operator pos:start="145:67" pos:end="145:68">-&gt;</operator><name pos:start="145:69" pos:end="145:70">st</name><operator pos:start="145:71" pos:end="145:72">-&gt;</operator><name pos:start="145:73" pos:end="145:77">codec</name><operator pos:start="145:78" pos:end="145:79">-&gt;</operator><name pos:start="145:80" pos:end="145:85">height</name></name></expr></argument>,

                                        <argument pos:start="147:41" pos:end="147:63"><expr pos:start="147:41" pos:end="147:63"><name pos:start="147:41" pos:end="147:63"><name pos:start="147:41" pos:end="147:43">ist</name><operator pos:start="147:44" pos:end="147:45">-&gt;</operator><name pos:start="147:46" pos:end="147:47">st</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:54">codec</name><operator pos:start="147:55" pos:end="147:56">-&gt;</operator><name pos:start="147:57" pos:end="147:63">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="151:13" pos:end="151:57"><expr pos:start="151:13" pos:end="151:56"><call pos:start="151:13" pos:end="151:56"><name pos:start="151:13" pos:end="151:37">avfilter_copy_frame_props</name><argument_list pos:start="151:38" pos:end="151:56">(<argument pos:start="151:39" pos:end="151:40"><expr pos:start="151:39" pos:end="151:40"><name pos:start="151:39" pos:end="151:40">fb</name></expr></argument>, <argument pos:start="151:43" pos:end="151:55"><expr pos:start="151:43" pos:end="151:55"><name pos:start="151:43" pos:end="151:55">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:42"><expr pos:start="153:13" pos:end="153:41"><name pos:start="153:13" pos:end="153:25"><name pos:start="153:13" pos:end="153:14">fb</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:19">buf</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:25">priv</name></name>           <operator pos:start="153:37" pos:end="153:37">=</operator> <name pos:start="153:39" pos:end="153:41">buf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:60"><expr pos:start="155:13" pos:end="155:59"><name pos:start="155:13" pos:end="155:25"><name pos:start="155:13" pos:end="155:14">fb</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:19">buf</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:25">free</name></name>           <operator pos:start="155:37" pos:end="155:37">=</operator> <name pos:start="155:39" pos:end="155:59">filter_release_buffer</name></expr>;</expr_stmt>



            <expr_stmt pos:start="159:13" pos:end="159:28"><expr pos:start="159:13" pos:end="159:27"><name pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:15">buf</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:25">refcount</name></name><operator pos:start="159:26" pos:end="159:27">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:61"><expr pos:start="161:13" pos:end="161:60"><call pos:start="161:13" pos:end="161:60"><name pos:start="161:13" pos:end="161:31">av_buffersrc_buffer</name><argument_list pos:start="161:32" pos:end="161:60">(<argument pos:start="161:33" pos:end="161:55"><expr pos:start="161:33" pos:end="161:55"><name pos:start="161:33" pos:end="161:55"><name pos:start="161:33" pos:end="161:35">ost</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:55">input_video_filter</name></name></expr></argument>, <argument pos:start="161:58" pos:end="161:59"><expr pos:start="161:58" pos:end="161:59"><name pos:start="161:58" pos:end="161:59">fb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="163:11" pos:end="167:93">else<block type="pseudo" pos:start="165:13" pos:end="167:93"><block_content pos:start="165:13" pos:end="167:93">

            <expr_stmt pos:start="165:13" pos:end="167:93"><expr pos:start="165:13" pos:end="167:92"><call pos:start="165:13" pos:end="167:92"><name pos:start="165:13" pos:end="165:36">av_vsrc_buffer_add_frame</name><argument_list pos:start="165:37" pos:end="167:92">(<argument pos:start="165:38" pos:end="165:60"><expr pos:start="165:38" pos:end="165:60"><name pos:start="165:38" pos:end="165:60"><name pos:start="165:38" pos:end="165:40">ost</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:60">input_video_filter</name></name></expr></argument>, <argument pos:start="165:63" pos:end="165:75"><expr pos:start="165:63" pos:end="165:75"><name pos:start="165:63" pos:end="165:75">decoded_frame</name></expr></argument>,

                                     <argument pos:start="167:38" pos:end="167:55"><expr pos:start="167:38" pos:end="167:55"><name pos:start="167:38" pos:end="167:55"><name pos:start="167:38" pos:end="167:50">decoded_frame</name><operator pos:start="167:51" pos:end="167:52">-&gt;</operator><name pos:start="167:53" pos:end="167:55">pts</name></name></expr></argument>, <argument pos:start="167:58" pos:end="167:91"><expr pos:start="167:58" pos:end="167:91"><name pos:start="167:58" pos:end="167:91"><name pos:start="167:58" pos:end="167:70">decoded_frame</name><operator pos:start="167:71" pos:end="167:72">-&gt;</operator><name pos:start="167:73" pos:end="167:91">sample_aspect_ratio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="171:9" pos:end="179:60"><if pos:start="171:9" pos:end="177:9">if <condition pos:start="171:12" pos:end="171:83">(<expr pos:start="171:13" pos:end="171:82"><operator pos:start="171:13" pos:end="171:13">!</operator><name pos:start="171:14" pos:end="171:32"><name pos:start="171:14" pos:end="171:16">ist</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:32">filtered_frame</name></name> <operator pos:start="171:34" pos:end="171:35">&amp;&amp;</operator> <operator pos:start="171:37" pos:end="171:37">!</operator><operator pos:start="171:38" pos:end="171:38">(</operator><name pos:start="171:39" pos:end="171:57"><name pos:start="171:39" pos:end="171:41">ist</name><operator pos:start="171:42" pos:end="171:43">-&gt;</operator><name pos:start="171:44" pos:end="171:57">filtered_frame</name></name> <operator pos:start="171:59" pos:end="171:59">=</operator> <call pos:start="171:61" pos:end="171:81"><name pos:start="171:61" pos:end="171:79">avcodec_alloc_frame</name><argument_list pos:start="171:80" pos:end="171:81">()</argument_list></call><operator pos:start="171:82" pos:end="171:82">)</operator></expr>)</condition> <block pos:start="171:85" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:35">

            <expr_stmt pos:start="173:13" pos:end="173:36"><expr pos:start="173:13" pos:end="173:35"><call pos:start="173:13" pos:end="173:35"><name pos:start="173:13" pos:end="173:19">av_free</name><argument_list pos:start="173:20" pos:end="173:35">(<argument pos:start="173:21" pos:end="173:34"><expr pos:start="173:21" pos:end="173:34"><name pos:start="173:21" pos:end="173:34">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="175:13" pos:end="175:35">return <expr pos:start="175:20" pos:end="175:34"><call pos:start="175:20" pos:end="175:34"><name pos:start="175:20" pos:end="175:26">AVERROR</name><argument_list pos:start="175:27" pos:end="175:34">(<argument pos:start="175:28" pos:end="175:33"><expr pos:start="175:28" pos:end="175:33"><name pos:start="175:28" pos:end="175:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if> <else pos:start="177:11" pos:end="179:60">else<block type="pseudo" pos:start="179:13" pos:end="179:60"><block_content pos:start="179:13" pos:end="179:60">

            <expr_stmt pos:start="179:13" pos:end="179:60"><expr pos:start="179:13" pos:end="179:59"><call pos:start="179:13" pos:end="179:59"><name pos:start="179:13" pos:end="179:38">avcodec_get_frame_defaults</name><argument_list pos:start="179:39" pos:end="179:59">(<argument pos:start="179:40" pos:end="179:58"><expr pos:start="179:40" pos:end="179:58"><name pos:start="179:40" pos:end="179:58"><name pos:start="179:40" pos:end="179:42">ist</name><operator pos:start="179:43" pos:end="179:44">-&gt;</operator><name pos:start="179:45" pos:end="179:58">filtered_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:45"><expr pos:start="181:9" pos:end="181:44"><name pos:start="181:9" pos:end="181:22">filtered_frame</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <name pos:start="181:26" pos:end="181:44"><name pos:start="181:26" pos:end="181:28">ist</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:44">filtered_frame</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="185:9" pos:end="185:83"><expr pos:start="185:9" pos:end="185:82"><name pos:start="185:9" pos:end="185:23">frame_available</name> <operator pos:start="185:25" pos:end="185:25">=</operator> <call pos:start="185:27" pos:end="185:82"><name pos:start="185:27" pos:end="185:45">avfilter_poll_frame</name><argument_list pos:start="185:46" pos:end="185:82">(<argument pos:start="185:47" pos:end="185:81"><expr pos:start="185:47" pos:end="185:81"><name pos:start="185:47" pos:end="185:81"><name pos:start="185:47" pos:end="185:49">ost</name><operator pos:start="185:50" pos:end="185:51">-&gt;</operator><name pos:start="185:52" pos:end="185:70">output_video_filter</name><operator pos:start="185:71" pos:end="185:72">-&gt;</operator><name pos:start="185:73" pos:end="185:78">inputs</name><index pos:start="185:79" pos:end="185:81">[<expr pos:start="185:80" pos:end="185:80"><literal type="number" pos:start="185:80" pos:end="185:80">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="187:9" pos:end="230:0">while <condition pos:start="187:15" pos:end="187:31">(<expr pos:start="187:16" pos:end="187:30"><name pos:start="187:16" pos:end="187:30">frame_available</name></expr>)</condition> <block pos:start="187:33" pos:end="230:0">{<block_content pos:start="189:13" pos:end="225:51">

            <decl_stmt pos:start="189:13" pos:end="189:34"><decl pos:start="189:13" pos:end="189:33"><type pos:start="189:13" pos:end="189:22"><name pos:start="189:13" pos:end="189:22">AVRational</name></type> <name pos:start="189:24" pos:end="189:33">ist_pts_tb</name></decl>;</decl_stmt>

            <if_stmt pos:start="191:13" pos:end="193:110"><if pos:start="191:13" pos:end="193:110">if <condition pos:start="191:16" pos:end="191:41">(<expr pos:start="191:17" pos:end="191:40"><name pos:start="191:17" pos:end="191:40"><name pos:start="191:17" pos:end="191:19">ost</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:40">output_video_filter</name></name></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:110"><block_content pos:start="193:17" pos:end="193:110">

                <expr_stmt pos:start="193:17" pos:end="193:110"><expr pos:start="193:17" pos:end="193:109"><call pos:start="193:17" pos:end="193:109"><name pos:start="193:17" pos:end="193:40">get_filtered_video_frame</name><argument_list pos:start="193:41" pos:end="193:109">(<argument pos:start="193:42" pos:end="193:65"><expr pos:start="193:42" pos:end="193:65"><name pos:start="193:42" pos:end="193:65"><name pos:start="193:42" pos:end="193:44">ost</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:65">output_video_filter</name></name></expr></argument>, <argument pos:start="193:68" pos:end="193:81"><expr pos:start="193:68" pos:end="193:81"><name pos:start="193:68" pos:end="193:81">filtered_frame</name></expr></argument>, <argument pos:start="193:84" pos:end="193:95"><expr pos:start="193:84" pos:end="193:95"><operator pos:start="193:84" pos:end="193:84">&amp;</operator><name pos:start="193:85" pos:end="193:95"><name pos:start="193:85" pos:end="193:87">ost</name><operator pos:start="193:88" pos:end="193:89">-&gt;</operator><name pos:start="193:90" pos:end="193:95">picref</name></name></expr></argument>, <argument pos:start="193:98" pos:end="193:108"><expr pos:start="193:98" pos:end="193:108"><operator pos:start="193:98" pos:end="193:98">&amp;</operator><name pos:start="193:99" pos:end="193:108">ist_pts_tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="195:13" pos:end="197:97"><if pos:start="195:13" pos:end="197:97">if <condition pos:start="195:16" pos:end="195:28">(<expr pos:start="195:17" pos:end="195:27"><name pos:start="195:17" pos:end="195:27"><name pos:start="195:17" pos:end="195:19">ost</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:27">picref</name></name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:97"><block_content pos:start="197:17" pos:end="197:97">

                <expr_stmt pos:start="197:17" pos:end="197:97"><expr pos:start="197:17" pos:end="197:96"><name pos:start="197:17" pos:end="197:35"><name pos:start="197:17" pos:end="197:30">filtered_frame</name><operator pos:start="197:31" pos:end="197:32">-&gt;</operator><name pos:start="197:33" pos:end="197:35">pts</name></name> <operator pos:start="197:37" pos:end="197:37">=</operator> <call pos:start="197:39" pos:end="197:96"><name pos:start="197:39" pos:end="197:50">av_rescale_q</name><argument_list pos:start="197:51" pos:end="197:96">(<argument pos:start="197:52" pos:end="197:67"><expr pos:start="197:52" pos:end="197:67"><name pos:start="197:52" pos:end="197:67"><name pos:start="197:52" pos:end="197:54">ost</name><operator pos:start="197:55" pos:end="197:56">-&gt;</operator><name pos:start="197:57" pos:end="197:62">picref</name><operator pos:start="197:63" pos:end="197:64">-&gt;</operator><name pos:start="197:65" pos:end="197:67">pts</name></name></expr></argument>, <argument pos:start="197:70" pos:end="197:79"><expr pos:start="197:70" pos:end="197:79"><name pos:start="197:70" pos:end="197:79">ist_pts_tb</name></expr></argument>, <argument pos:start="197:82" pos:end="197:95"><expr pos:start="197:82" pos:end="197:95"><name pos:start="197:82" pos:end="197:95">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="199:13" pos:end="204:0"><if pos:start="199:13" pos:end="204:0">if <condition pos:start="199:16" pos:end="199:63">(<expr pos:start="199:17" pos:end="199:62"><name pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:19">ost</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:27">picref</name><operator pos:start="199:28" pos:end="199:29">-&gt;</operator><name pos:start="199:30" pos:end="199:34">video</name></name> <operator pos:start="199:36" pos:end="199:37">&amp;&amp;</operator> <operator pos:start="199:39" pos:end="199:39">!</operator><name pos:start="199:40" pos:end="199:62"><name pos:start="199:40" pos:end="199:42">ost</name><operator pos:start="199:43" pos:end="199:44">-&gt;</operator><name pos:start="199:45" pos:end="199:62">frame_aspect_ratio</name></name></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="204:0"><block_content pos:start="201:17" pos:end="204:0">

                <expr_stmt pos:start="201:17" pos:end="204:0"><expr pos:start="201:17" pos:end="201:86"><name pos:start="201:17" pos:end="201:51"><name pos:start="201:17" pos:end="201:19">ost</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:23">st</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:30">codec</name><operator pos:start="201:31" pos:end="201:32">-&gt;</operator><name pos:start="201:33" pos:end="201:51">sample_aspect_ratio</name></name> <operator pos:start="201:53" pos:end="201:53">=</operator> <name pos:start="201:55" pos:end="201:86"><name pos:start="201:55" pos:end="201:57">ost</name><operator pos:start="201:58" pos:end="201:59">-&gt;</operator><name pos:start="201:60" pos:end="201:65">picref</name><operator pos:start="201:66" pos:end="201:67">-&gt;</operator><name pos:start="201:68" pos:end="201:72">video</name><operator pos:start="201:73" pos:end="201:74">-&gt;</operator><name pos:start="201:75" pos:end="201:86">pixel_aspect</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:else pos:start="203:1" pos:end="203:5">#<cpp:directive pos:start="203:2" pos:end="203:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="205:13" pos:end="208:0"><expr pos:start="205:13" pos:end="205:42"><name pos:start="205:13" pos:end="205:26">filtered_frame</name> <operator pos:start="205:28" pos:end="205:28">=</operator> <name pos:start="205:30" pos:end="205:42">decoded_frame</name></expr>;</expr_stmt>

<cpp:endif pos:start="207:1" pos:end="207:6">#<cpp:directive pos:start="207:2" pos:end="207:6">endif</cpp:directive></cpp:endif>



            <expr_stmt pos:start="211:13" pos:end="213:80"><expr pos:start="211:13" pos:end="213:79"><call pos:start="211:13" pos:end="213:79"><name pos:start="211:13" pos:end="211:24">do_video_out</name><argument_list pos:start="211:25" pos:end="213:79">(<argument pos:start="211:26" pos:end="211:58"><expr pos:start="211:26" pos:end="211:58"><name pos:start="211:26" pos:end="211:54"><name pos:start="211:26" pos:end="211:37">output_files</name><index pos:start="211:38" pos:end="211:54">[<expr pos:start="211:39" pos:end="211:53"><name pos:start="211:39" pos:end="211:53"><name pos:start="211:39" pos:end="211:41">ost</name><operator pos:start="211:42" pos:end="211:43">-&gt;</operator><name pos:start="211:44" pos:end="211:53">file_index</name></name></expr>]</index></name><operator pos:start="211:55" pos:end="211:55">.</operator><name pos:start="211:56" pos:end="211:58">ctx</name></expr></argument>, <argument pos:start="211:61" pos:end="211:63"><expr pos:start="211:61" pos:end="211:63"><name pos:start="211:61" pos:end="211:63">ost</name></expr></argument>, <argument pos:start="211:66" pos:end="211:68"><expr pos:start="211:66" pos:end="211:68"><name pos:start="211:66" pos:end="211:68">ist</name></expr></argument>, <argument pos:start="211:71" pos:end="211:84"><expr pos:start="211:71" pos:end="211:84"><name pos:start="211:71" pos:end="211:84">filtered_frame</name></expr></argument>, <argument pos:start="211:87" pos:end="211:97"><expr pos:start="211:87" pos:end="211:97"><operator pos:start="211:87" pos:end="211:87">&amp;</operator><name pos:start="211:88" pos:end="211:97">frame_size</name></expr></argument>,

                         <argument pos:start="213:26" pos:end="213:78"><expr pos:start="213:26" pos:end="213:78"><ternary pos:start="213:26" pos:end="213:78"><condition pos:start="213:26" pos:end="213:37"><expr pos:start="213:26" pos:end="213:35"><name pos:start="213:26" pos:end="213:35">same_quant</name></expr> ?</condition><then pos:start="213:39" pos:end="213:45"> <expr pos:start="213:39" pos:end="213:45"><name pos:start="213:39" pos:end="213:45">quality</name></expr> </then><else pos:start="213:47" pos:end="213:78">: <expr pos:start="213:49" pos:end="213:78"><name pos:start="213:49" pos:end="213:78"><name pos:start="213:49" pos:end="213:51">ost</name><operator pos:start="213:52" pos:end="213:53">-&gt;</operator><name pos:start="213:54" pos:end="213:55">st</name><operator pos:start="213:56" pos:end="213:57">-&gt;</operator><name pos:start="213:58" pos:end="213:62">codec</name><operator pos:start="213:63" pos:end="213:64">-&gt;</operator><name pos:start="213:65" pos:end="213:78">global_quality</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="215:13" pos:end="220:0"><if pos:start="215:13" pos:end="220:0">if <condition pos:start="215:16" pos:end="215:46">(<expr pos:start="215:17" pos:end="215:45"><name pos:start="215:17" pos:end="215:31">vstats_filename</name> <operator pos:start="215:33" pos:end="215:34">&amp;&amp;</operator> <name pos:start="215:36" pos:end="215:45">frame_size</name></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="220:0"><block_content pos:start="217:17" pos:end="220:0">

                <expr_stmt pos:start="217:17" pos:end="220:0"><expr pos:start="217:17" pos:end="217:82"><call pos:start="217:17" pos:end="217:82"><name pos:start="217:17" pos:end="217:30">do_video_stats</name><argument_list pos:start="217:31" pos:end="217:82">(<argument pos:start="217:32" pos:end="217:64"><expr pos:start="217:32" pos:end="217:64"><name pos:start="217:32" pos:end="217:60"><name pos:start="217:32" pos:end="217:43">output_files</name><index pos:start="217:44" pos:end="217:60">[<expr pos:start="217:45" pos:end="217:59"><name pos:start="217:45" pos:end="217:59"><name pos:start="217:45" pos:end="217:47">ost</name><operator pos:start="217:48" pos:end="217:49">-&gt;</operator><name pos:start="217:50" pos:end="217:59">file_index</name></name></expr>]</index></name><operator pos:start="217:61" pos:end="217:61">.</operator><name pos:start="217:62" pos:end="217:64">ctx</name></expr></argument>, <argument pos:start="217:67" pos:end="217:69"><expr pos:start="217:67" pos:end="217:69"><name pos:start="217:67" pos:end="217:69">ost</name></expr></argument>, <argument pos:start="217:72" pos:end="217:81"><expr pos:start="217:72" pos:end="217:81"><name pos:start="217:72" pos:end="217:81">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="219:1" pos:end="219:19">#<cpp:directive pos:start="219:2" pos:end="219:3">if</cpp:directive> <expr pos:start="219:5" pos:end="219:19"><name pos:start="219:5" pos:end="219:19">CONFIG_AVFILTER</name></expr></cpp:if>

            <expr_stmt pos:start="221:13" pos:end="221:115"><expr pos:start="221:13" pos:end="221:114"><name pos:start="221:13" pos:end="221:27">frame_available</name> <operator pos:start="221:29" pos:end="221:29">=</operator> <name pos:start="221:31" pos:end="221:54"><name pos:start="221:31" pos:end="221:33">ost</name><operator pos:start="221:34" pos:end="221:35">-&gt;</operator><name pos:start="221:36" pos:end="221:54">output_video_filter</name></name> <operator pos:start="221:56" pos:end="221:57">&amp;&amp;</operator> <call pos:start="221:59" pos:end="221:114"><name pos:start="221:59" pos:end="221:77">avfilter_poll_frame</name><argument_list pos:start="221:78" pos:end="221:114">(<argument pos:start="221:79" pos:end="221:113"><expr pos:start="221:79" pos:end="221:113"><name pos:start="221:79" pos:end="221:113"><name pos:start="221:79" pos:end="221:81">ost</name><operator pos:start="221:82" pos:end="221:83">-&gt;</operator><name pos:start="221:84" pos:end="221:102">output_video_filter</name><operator pos:start="221:103" pos:end="221:104">-&gt;</operator><name pos:start="221:105" pos:end="221:110">inputs</name><index pos:start="221:111" pos:end="221:113">[<expr pos:start="221:112" pos:end="221:112"><literal type="number" pos:start="221:112" pos:end="221:112">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="223:13" pos:end="225:51"><if pos:start="223:13" pos:end="225:51">if <condition pos:start="223:16" pos:end="223:28">(<expr pos:start="223:17" pos:end="223:27"><name pos:start="223:17" pos:end="223:27"><name pos:start="223:17" pos:end="223:19">ost</name><operator pos:start="223:20" pos:end="223:21">-&gt;</operator><name pos:start="223:22" pos:end="223:27">picref</name></name></expr>)</condition><block type="pseudo" pos:start="225:17" pos:end="225:51"><block_content pos:start="225:17" pos:end="225:51">

                <expr_stmt pos:start="225:17" pos:end="225:51"><expr pos:start="225:17" pos:end="225:50"><call pos:start="225:17" pos:end="225:50"><name pos:start="225:17" pos:end="225:37">avfilter_unref_buffer</name><argument_list pos:start="225:38" pos:end="225:50">(<argument pos:start="225:39" pos:end="225:49"><expr pos:start="225:39" pos:end="225:49"><name pos:start="225:39" pos:end="225:49"><name pos:start="225:39" pos:end="225:41">ost</name><operator pos:start="225:42" pos:end="225:43">-&gt;</operator><name pos:start="225:44" pos:end="225:49">picref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></while>

<cpp:endif pos:start="229:1" pos:end="229:6">#<cpp:directive pos:start="229:2" pos:end="229:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <expr_stmt pos:start="235:5" pos:end="235:28"><expr pos:start="235:5" pos:end="235:27"><call pos:start="235:5" pos:end="235:27"><name pos:start="235:5" pos:end="235:11">av_free</name><argument_list pos:start="235:12" pos:end="235:27">(<argument pos:start="235:13" pos:end="235:26"><expr pos:start="235:13" pos:end="235:26"><name pos:start="235:13" pos:end="235:26">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="237:5" pos:end="237:15">return <expr pos:start="237:12" pos:end="237:14"><name pos:start="237:12" pos:end="237:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
