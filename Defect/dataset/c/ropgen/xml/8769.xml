<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8769.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">div_round</name> <parameter_list pos:start="1:22" pos:end="1:48">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:25">int</name></type> <name pos:start="1:27" pos:end="1:34">dividend</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:47">divisor</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:55">

    <if_stmt pos:start="5:5" pos:end="11:55"><if pos:start="5:5" pos:end="7:51">if <condition pos:start="5:8" pos:end="5:21">(<expr pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:16">dividend</name> <operator pos:start="5:18" pos:end="5:18">&gt;</operator> <literal type="number" pos:start="5:20" pos:end="5:20">0</literal></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:51"><block_content pos:start="7:9" pos:end="7:51">

	<return pos:start="7:9" pos:end="7:51">return <expr pos:start="7:16" pos:end="7:50"><operator pos:start="7:16" pos:end="7:16">(</operator><name pos:start="7:17" pos:end="7:24">dividend</name> <operator pos:start="7:26" pos:end="7:26">+</operator> <operator pos:start="7:28" pos:end="7:28">(</operator><name pos:start="7:29" pos:end="7:35">divisor</name><operator pos:start="7:36" pos:end="7:37">&gt;&gt;</operator><literal type="number" pos:start="7:38" pos:end="7:38">1</literal><operator pos:start="7:39" pos:end="7:39">)</operator><operator pos:start="7:40" pos:end="7:40">)</operator> <operator pos:start="7:42" pos:end="7:42">/</operator> <name pos:start="7:44" pos:end="7:50">divisor</name></expr>;</return></block_content></block></if>

    <else pos:start="9:5" pos:end="11:55">else<block type="pseudo" pos:start="11:9" pos:end="11:55"><block_content pos:start="11:9" pos:end="11:55">

	<return pos:start="11:9" pos:end="11:55">return <expr pos:start="11:16" pos:end="11:54"><operator pos:start="11:16" pos:end="11:16">-</operator><operator pos:start="11:17" pos:end="11:17">(</operator><operator pos:start="11:18" pos:end="11:18">(</operator><operator pos:start="11:19" pos:end="11:19">-</operator><name pos:start="11:20" pos:end="11:27">dividend</name> <operator pos:start="11:29" pos:end="11:29">+</operator> <operator pos:start="11:31" pos:end="11:31">(</operator><name pos:start="11:32" pos:end="11:38">divisor</name><operator pos:start="11:39" pos:end="11:40">&gt;&gt;</operator><literal type="number" pos:start="11:41" pos:end="11:41">1</literal><operator pos:start="11:42" pos:end="11:42">)</operator><operator pos:start="11:43" pos:end="11:43">)</operator> <operator pos:start="11:45" pos:end="11:45">/</operator> <name pos:start="11:47" pos:end="11:53">divisor</name><operator pos:start="11:54" pos:end="11:54">)</operator></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
