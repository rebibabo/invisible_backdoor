<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7644.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">decode_spectrum_and_dequant</name><parameter_list pos:start="1:39" pos:end="3:114">(<parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:49">AACContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type> <name pos:start="1:53" pos:end="1:54">ac</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:72"><decl pos:start="1:57" pos:end="1:72"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:61">float</name></type> <name pos:start="1:63" pos:end="1:72"><name pos:start="1:63" pos:end="1:66">coef</name><index pos:start="1:67" pos:end="1:72">[<expr pos:start="1:68" pos:end="1:71"><literal type="number" pos:start="1:68" pos:end="1:71">1024</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:92"><decl pos:start="1:75" pos:end="1:92"><type pos:start="1:75" pos:end="1:92"><name pos:start="1:75" pos:end="1:87">GetBitContext</name> <modifier pos:start="1:89" pos:end="1:89">*</modifier></type> <name pos:start="1:91" pos:end="1:92">gb</name></decl></parameter>, <parameter pos:start="1:95" pos:end="1:107"><decl pos:start="1:95" pos:end="1:107"><type pos:start="1:95" pos:end="1:102"><name pos:start="1:95" pos:end="1:99">float</name></type> <name pos:start="1:101" pos:end="1:107"><name pos:start="1:101" pos:end="1:102">sf</name><index pos:start="1:103" pos:end="1:107">[<expr pos:start="1:104" pos:end="1:106"><literal type="number" pos:start="1:104" pos:end="1:106">120</literal></expr>]</index></name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:25"><decl pos:start="3:9" pos:end="3:25"><type pos:start="3:9" pos:end="3:25"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:25">pulse_present</name></decl></parameter>, <parameter pos:start="3:28" pos:end="3:46"><decl pos:start="3:28" pos:end="3:46"><type pos:start="3:28" pos:end="3:46"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:38">Pulse</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type> <name pos:start="3:42" pos:end="3:46">pulse</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:83"><decl pos:start="3:49" pos:end="3:83"><type pos:start="3:49" pos:end="3:83"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:77">IndividualChannelStream</name> <modifier pos:start="3:79" pos:end="3:79">*</modifier></type> <name pos:start="3:81" pos:end="3:83">ics</name></decl></parameter>, <parameter pos:start="3:86" pos:end="3:113"><decl pos:start="3:86" pos:end="3:113"><type pos:start="3:86" pos:end="3:108"><name pos:start="3:86" pos:end="3:98"><name pos:start="3:86" pos:end="3:89">enum</name> <name pos:start="3:91" pos:end="3:98">BandType</name></name></type> <name pos:start="3:100" pos:end="3:113"><name pos:start="3:100" pos:end="3:108">band_type</name><index pos:start="3:109" pos:end="3:113">[<expr pos:start="3:110" pos:end="3:112"><literal type="number" pos:start="3:110" pos:end="3:112">120</literal></expr>]</index></name></decl></parameter>)</parameter_list> <block pos:start="3:116" pos:end="173:1">{<block_content pos:start="5:5" pos:end="171:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">k</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">g</name></decl>, <decl pos:start="5:18" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:20">idx</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:15">c</name> <init pos:start="7:17" pos:end="7:39">= <expr pos:start="7:19" pos:end="7:39"><literal type="number" pos:start="7:19" pos:end="7:22">1024</literal><operator pos:start="7:23" pos:end="7:23">/</operator><name pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:26">ics</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:39">num_windows</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:20"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">uint16_t</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type> <name pos:start="9:22" pos:end="9:28">offsets</name> <init pos:start="9:30" pos:end="9:46">= <expr pos:start="9:32" pos:end="9:46"><name pos:start="9:32" pos:end="9:46"><name pos:start="9:32" pos:end="9:34">ics</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:46">swb_offset</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">float</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">coef_base</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">coef</name></expr></init></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="17:101">for <control pos:start="15:9" pos:end="15:42">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">g</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:37"><expr pos:start="15:17" pos:end="15:36"><name pos:start="15:17" pos:end="15:17">g</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:36"><name pos:start="15:21" pos:end="15:23">ics</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:36">num_windows</name></name></expr>;</condition> <incr pos:start="15:39" pos:end="15:41"><expr pos:start="15:39" pos:end="15:41"><name pos:start="15:39" pos:end="15:39">g</name><operator pos:start="15:40" pos:end="15:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="17:101"><block_content pos:start="17:9" pos:end="17:101">

        <expr_stmt pos:start="17:9" pos:end="17:101"><expr pos:start="17:9" pos:end="17:100"><call pos:start="17:9" pos:end="17:100"><name pos:start="17:9" pos:end="17:14">memset</name><argument_list pos:start="17:15" pos:end="17:100">(<argument pos:start="17:16" pos:end="17:53"><expr pos:start="17:16" pos:end="17:53"><name pos:start="17:16" pos:end="17:19">coef</name> <operator pos:start="17:21" pos:end="17:21">+</operator> <name pos:start="17:23" pos:end="17:23">g</name> <operator pos:start="17:25" pos:end="17:25">*</operator> <literal type="number" pos:start="17:27" pos:end="17:31">128</literal> <operator pos:start="17:31" pos:end="17:31">+</operator> <name pos:start="17:33" pos:end="17:53"><name pos:start="17:33" pos:end="17:39">offsets</name><index pos:start="17:40" pos:end="17:53">[<expr pos:start="17:41" pos:end="17:52"><name pos:start="17:41" pos:end="17:52"><name pos:start="17:41" pos:end="17:43">ics</name><operator pos:start="17:44" pos:end="17:45">-&gt;</operator><name pos:start="17:46" pos:end="17:52">max_sfb</name></name></expr>]</index></name></expr></argument>, <argument pos:start="17:56" pos:end="17:56"><expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">0</literal></expr></argument>, <argument pos:start="17:59" pos:end="17:99"><expr pos:start="17:59" pos:end="17:99"><sizeof pos:start="17:59" pos:end="17:71">sizeof<argument_list pos:start="17:65" pos:end="17:71">(<argument pos:start="17:66" pos:end="17:70"><expr pos:start="17:66" pos:end="17:70"><name pos:start="17:66" pos:end="17:70">float</name></expr></argument>)</argument_list></sizeof><operator pos:start="17:72" pos:end="17:72">*</operator><operator pos:start="17:73" pos:end="17:73">(</operator><name pos:start="17:74" pos:end="17:74">c</name> <operator pos:start="17:76" pos:end="17:76">-</operator> <name pos:start="17:78" pos:end="17:98"><name pos:start="17:78" pos:end="17:84">offsets</name><index pos:start="17:85" pos:end="17:98">[<expr pos:start="17:86" pos:end="17:97"><name pos:start="17:86" pos:end="17:97"><name pos:start="17:86" pos:end="17:88">ics</name><operator pos:start="17:89" pos:end="17:90">-&gt;</operator><name pos:start="17:91" pos:end="17:97">max_sfb</name></name></expr>]</index></name><operator pos:start="17:99" pos:end="17:99">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="21:5" pos:end="153:5">for <control pos:start="21:9" pos:end="21:48">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">g</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:43"><expr pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:17">g</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:42"><name pos:start="21:21" pos:end="21:23">ics</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:42">num_window_groups</name></name></expr>;</condition> <incr pos:start="21:45" pos:end="21:47"><expr pos:start="21:45" pos:end="21:47"><name pos:start="21:45" pos:end="21:45">g</name><operator pos:start="21:46" pos:end="21:47">++</operator></expr></incr>)</control> <block pos:start="21:50" pos:end="153:5">{<block_content pos:start="23:9" pos:end="151:37">

        <for pos:start="23:9" pos:end="149:9">for <control pos:start="23:13" pos:end="23:49">(<init pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:14">i</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</init> <condition pos:start="23:21" pos:end="23:37"><expr pos:start="23:21" pos:end="23:36"><name pos:start="23:21" pos:end="23:21">i</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <name pos:start="23:25" pos:end="23:36"><name pos:start="23:25" pos:end="23:27">ics</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:36">max_sfb</name></name></expr>;</condition> <incr pos:start="23:39" pos:end="23:48"><expr pos:start="23:39" pos:end="23:41"><name pos:start="23:39" pos:end="23:39">i</name><operator pos:start="23:40" pos:end="23:41">++</operator></expr><operator pos:start="23:42" pos:end="23:42">,</operator> <expr pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:46">idx</name><operator pos:start="23:47" pos:end="23:48">++</operator></expr></incr>)</control> <block pos:start="23:51" pos:end="149:9">{<block_content pos:start="25:13" pos:end="147:13">

            <decl_stmt pos:start="25:13" pos:end="25:53"><decl pos:start="25:13" pos:end="25:52"><type pos:start="25:13" pos:end="25:21"><specifier pos:start="25:13" pos:end="25:17">const</specifier> <name pos:start="25:19" pos:end="25:21">int</name></type> <name pos:start="25:23" pos:end="25:35">cur_band_type</name> <init pos:start="25:37" pos:end="25:52">= <expr pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:47">band_type</name><index pos:start="25:48" pos:end="25:52">[<expr pos:start="25:49" pos:end="25:51"><name pos:start="25:49" pos:end="25:51">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:67"><decl pos:start="27:13" pos:end="27:66"><type pos:start="27:13" pos:end="27:21"><specifier pos:start="27:13" pos:end="27:17">const</specifier> <name pos:start="27:19" pos:end="27:21">int</name></type> <name pos:start="27:23" pos:end="27:25">dim</name> <init pos:start="27:27" pos:end="27:66">= <expr pos:start="27:29" pos:end="27:66"><ternary pos:start="27:29" pos:end="27:66"><condition pos:start="27:29" pos:end="27:60"><expr pos:start="27:29" pos:end="27:58"><name pos:start="27:29" pos:end="27:41">cur_band_type</name> <operator pos:start="27:43" pos:end="27:44">&gt;=</operator> <name pos:start="27:46" pos:end="27:58">FIRST_PAIR_BT</name></expr> ?</condition><then pos:start="27:62" pos:end="27:62"> <expr pos:start="27:62" pos:end="27:62"><literal type="number" pos:start="27:62" pos:end="27:62">2</literal></expr> </then><else pos:start="27:64" pos:end="27:66">: <expr pos:start="27:66" pos:end="27:66"><literal type="number" pos:start="27:66" pos:end="27:66">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:75"><decl pos:start="29:13" pos:end="29:74"><type pos:start="29:13" pos:end="29:21"><specifier pos:start="29:13" pos:end="29:17">const</specifier> <name pos:start="29:19" pos:end="29:21">int</name></type> <name pos:start="29:23" pos:end="29:36">is_cb_unsigned</name> <init pos:start="29:38" pos:end="29:74">= <expr pos:start="29:40" pos:end="29:74"><call pos:start="29:40" pos:end="29:74"><name pos:start="29:40" pos:end="29:59">IS_CODEBOOK_UNSIGNED</name><argument_list pos:start="29:60" pos:end="29:74">(<argument pos:start="29:61" pos:end="29:73"><expr pos:start="29:61" pos:end="29:73"><name pos:start="29:61" pos:end="29:73">cur_band_type</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="31:22"><decl pos:start="31:13" pos:end="31:21"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:21">group</name></decl>;</decl_stmt>

            <if_stmt pos:start="33:13" pos:end="147:13"><if pos:start="33:13" pos:end="41:13">if <condition pos:start="33:16" pos:end="33:41">(<expr pos:start="33:17" pos:end="33:40"><name pos:start="33:17" pos:end="33:29">cur_band_type</name> <operator pos:start="33:31" pos:end="33:32">==</operator> <name pos:start="33:34" pos:end="33:40">ZERO_BT</name></expr>)</condition> <block pos:start="33:43" pos:end="41:13">{<block_content pos:start="35:17" pos:end="39:17">

                <for pos:start="35:17" pos:end="39:17">for <control pos:start="35:21" pos:end="35:67">(<init pos:start="35:22" pos:end="35:31"><expr pos:start="35:22" pos:end="35:30"><name pos:start="35:22" pos:end="35:26">group</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <literal type="number" pos:start="35:30" pos:end="35:30">0</literal></expr>;</init> <condition pos:start="35:33" pos:end="35:58"><expr pos:start="35:33" pos:end="35:57"><name pos:start="35:33" pos:end="35:37">group</name> <operator pos:start="35:39" pos:end="35:39">&lt;</operator> <name pos:start="35:41" pos:end="35:57"><name pos:start="35:41" pos:end="35:43">ics</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:54">group_len</name><index pos:start="35:55" pos:end="35:57">[<expr pos:start="35:56" pos:end="35:56"><name pos:start="35:56" pos:end="35:56">g</name></expr>]</index></name></expr>;</condition> <incr pos:start="35:60" pos:end="35:66"><expr pos:start="35:60" pos:end="35:66"><name pos:start="35:60" pos:end="35:64">group</name><operator pos:start="35:65" pos:end="35:66">++</operator></expr></incr>)</control> <block pos:start="35:69" pos:end="39:17">{<block_content pos:start="37:21" pos:end="37:106">

                    <expr_stmt pos:start="37:21" pos:end="37:106"><expr pos:start="37:21" pos:end="37:105"><call pos:start="37:21" pos:end="37:105"><name pos:start="37:21" pos:end="37:26">memset</name><argument_list pos:start="37:27" pos:end="37:105">(<argument pos:start="37:28" pos:end="37:58"><expr pos:start="37:28" pos:end="37:58"><name pos:start="37:28" pos:end="37:31">coef</name> <operator pos:start="37:33" pos:end="37:33">+</operator> <name pos:start="37:35" pos:end="37:39">group</name> <operator pos:start="37:41" pos:end="37:41">*</operator> <literal type="number" pos:start="37:43" pos:end="37:47">128</literal> <operator pos:start="37:47" pos:end="37:47">+</operator> <name pos:start="37:49" pos:end="37:58"><name pos:start="37:49" pos:end="37:55">offsets</name><index pos:start="37:56" pos:end="37:58">[<expr pos:start="37:57" pos:end="37:57"><name pos:start="37:57" pos:end="37:57">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:61" pos:end="37:61"><expr pos:start="37:61" pos:end="37:61"><literal type="number" pos:start="37:61" pos:end="37:61">0</literal></expr></argument>, <argument pos:start="37:64" pos:end="37:104"><expr pos:start="37:64" pos:end="37:104"><operator pos:start="37:64" pos:end="37:64">(</operator><name pos:start="37:65" pos:end="37:76"><name pos:start="37:65" pos:end="37:71">offsets</name><index pos:start="37:72" pos:end="37:76">[<expr pos:start="37:73" pos:end="37:75"><name pos:start="37:73" pos:end="37:73">i</name><operator pos:start="37:74" pos:end="37:74">+</operator><literal type="number" pos:start="37:75" pos:end="37:75">1</literal></expr>]</index></name> <operator pos:start="37:78" pos:end="37:78">-</operator> <name pos:start="37:80" pos:end="37:89"><name pos:start="37:80" pos:end="37:86">offsets</name><index pos:start="37:87" pos:end="37:89">[<expr pos:start="37:88" pos:end="37:88"><name pos:start="37:88" pos:end="37:88">i</name></expr>]</index></name><operator pos:start="37:90" pos:end="37:90">)</operator><operator pos:start="37:91" pos:end="37:91">*</operator><sizeof pos:start="37:92" pos:end="37:104">sizeof<argument_list pos:start="37:98" pos:end="37:104">(<argument pos:start="37:99" pos:end="37:103"><expr pos:start="37:99" pos:end="37:103"><name pos:start="37:99" pos:end="37:103">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if><if type="elseif" pos:start="41:14" pos:end="57:13">else if <condition pos:start="41:22" pos:end="41:48">(<expr pos:start="41:23" pos:end="41:47"><name pos:start="41:23" pos:end="41:35">cur_band_type</name> <operator pos:start="41:37" pos:end="41:38">==</operator> <name pos:start="41:40" pos:end="41:47">NOISE_BT</name></expr>)</condition> <block pos:start="41:50" pos:end="57:13">{<block_content pos:start="43:17" pos:end="55:17">

                <decl_stmt pos:start="43:17" pos:end="43:94"><decl pos:start="43:17" pos:end="43:93"><type pos:start="43:17" pos:end="43:27"><specifier pos:start="43:17" pos:end="43:21">const</specifier> <name pos:start="43:23" pos:end="43:27">float</name></type> <name pos:start="43:29" pos:end="43:33">scale</name> <init pos:start="43:35" pos:end="43:93">= <expr pos:start="43:37" pos:end="43:93"><name pos:start="43:37" pos:end="43:43"><name pos:start="43:37" pos:end="43:38">sf</name><index pos:start="43:39" pos:end="43:43">[<expr pos:start="43:40" pos:end="43:42"><name pos:start="43:40" pos:end="43:42">idx</name></expr>]</index></name> <operator pos:start="43:45" pos:end="43:45">/</operator> <operator pos:start="43:47" pos:end="43:47">(</operator><operator pos:start="43:48" pos:end="43:48">(</operator><name pos:start="43:49" pos:end="43:60"><name pos:start="43:49" pos:end="43:55">offsets</name><index pos:start="43:56" pos:end="43:60">[<expr pos:start="43:57" pos:end="43:59"><name pos:start="43:57" pos:end="43:57">i</name><operator pos:start="43:58" pos:end="43:58">+</operator><literal type="number" pos:start="43:59" pos:end="43:59">1</literal></expr>]</index></name> <operator pos:start="43:62" pos:end="43:62">-</operator> <name pos:start="43:64" pos:end="43:73"><name pos:start="43:64" pos:end="43:70">offsets</name><index pos:start="43:71" pos:end="43:73">[<expr pos:start="43:72" pos:end="43:72"><name pos:start="43:72" pos:end="43:72">i</name></expr>]</index></name><operator pos:start="43:74" pos:end="43:74">)</operator> <operator pos:start="43:76" pos:end="43:76">*</operator> <name pos:start="43:78" pos:end="43:92">PNS_MEAN_ENERGY</name><operator pos:start="43:93" pos:end="43:93">)</operator></expr></init></decl>;</decl_stmt>

                <for pos:start="45:17" pos:end="55:17">for <control pos:start="45:21" pos:end="45:67">(<init pos:start="45:22" pos:end="45:31"><expr pos:start="45:22" pos:end="45:30"><name pos:start="45:22" pos:end="45:26">group</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <literal type="number" pos:start="45:30" pos:end="45:30">0</literal></expr>;</init> <condition pos:start="45:33" pos:end="45:58"><expr pos:start="45:33" pos:end="45:57"><name pos:start="45:33" pos:end="45:37">group</name> <operator pos:start="45:39" pos:end="45:39">&lt;</operator> <name pos:start="45:41" pos:end="45:57"><name pos:start="45:41" pos:end="45:43">ics</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:54">group_len</name><index pos:start="45:55" pos:end="45:57">[<expr pos:start="45:56" pos:end="45:56"><name pos:start="45:56" pos:end="45:56">g</name></expr>]</index></name></expr>;</condition> <incr pos:start="45:60" pos:end="45:66"><expr pos:start="45:60" pos:end="45:66"><name pos:start="45:60" pos:end="45:64">group</name><operator pos:start="45:65" pos:end="45:66">++</operator></expr></incr>)</control> <block pos:start="45:69" pos:end="55:17">{<block_content pos:start="47:21" pos:end="53:21">

                    <for pos:start="47:21" pos:end="53:21">for <control pos:start="47:25" pos:end="47:63">(<init pos:start="47:26" pos:end="47:40"><expr pos:start="47:26" pos:end="47:39"><name pos:start="47:26" pos:end="47:26">k</name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:39"><name pos:start="47:30" pos:end="47:36">offsets</name><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><name pos:start="47:38" pos:end="47:38">i</name></expr>]</index></name></expr>;</init> <condition pos:start="47:42" pos:end="47:58"><expr pos:start="47:42" pos:end="47:57"><name pos:start="47:42" pos:end="47:42">k</name> <operator pos:start="47:44" pos:end="47:44">&lt;</operator> <name pos:start="47:46" pos:end="47:57"><name pos:start="47:46" pos:end="47:52">offsets</name><index pos:start="47:53" pos:end="47:57">[<expr pos:start="47:54" pos:end="47:56"><name pos:start="47:54" pos:end="47:54">i</name><operator pos:start="47:55" pos:end="47:55">+</operator><literal type="number" pos:start="47:56" pos:end="47:56">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="47:60" pos:end="47:62"><expr pos:start="47:60" pos:end="47:62"><name pos:start="47:60" pos:end="47:60">k</name><operator pos:start="47:61" pos:end="47:62">++</operator></expr></incr>)</control> <block pos:start="47:65" pos:end="53:21">{<block_content pos:start="49:25" pos:end="51:69">

                        <expr_stmt pos:start="49:25" pos:end="49:73"><expr pos:start="49:25" pos:end="49:72"><name pos:start="49:25" pos:end="49:40"><name pos:start="49:25" pos:end="49:26">ac</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:40">random_state</name></name>  <operator pos:start="49:43" pos:end="49:43">=</operator> <call pos:start="49:45" pos:end="49:72"><name pos:start="49:45" pos:end="49:54">lcg_random</name><argument_list pos:start="49:55" pos:end="49:72">(<argument pos:start="49:56" pos:end="49:71"><expr pos:start="49:56" pos:end="49:71"><name pos:start="49:56" pos:end="49:71"><name pos:start="49:56" pos:end="49:57">ac</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:71">random_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="51:25" pos:end="51:69"><expr pos:start="51:25" pos:end="51:68"><name pos:start="51:25" pos:end="51:41"><name pos:start="51:25" pos:end="51:28">coef</name><index pos:start="51:29" pos:end="51:41">[<expr pos:start="51:30" pos:end="51:40"><name pos:start="51:30" pos:end="51:34">group</name><operator pos:start="51:35" pos:end="51:35">*</operator><literal type="number" pos:start="51:36" pos:end="51:38">128</literal><operator pos:start="51:39" pos:end="51:39">+</operator><name pos:start="51:40" pos:end="51:40">k</name></expr>]</index></name> <operator pos:start="51:43" pos:end="51:43">=</operator> <name pos:start="51:45" pos:end="51:60"><name pos:start="51:45" pos:end="51:46">ac</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:60">random_state</name></name> <operator pos:start="51:62" pos:end="51:62">*</operator> <name pos:start="51:64" pos:end="51:68">scale</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></if><if type="elseif" pos:start="57:14" pos:end="147:13">else if <condition pos:start="57:22" pos:end="57:86">(<expr pos:start="57:23" pos:end="57:85"><name pos:start="57:23" pos:end="57:35">cur_band_type</name> <operator pos:start="57:37" pos:end="57:38">!=</operator> <name pos:start="57:40" pos:end="57:52">INTENSITY_BT2</name> <operator pos:start="57:54" pos:end="57:55">&amp;&amp;</operator> <name pos:start="57:57" pos:end="57:69">cur_band_type</name> <operator pos:start="57:71" pos:end="57:72">!=</operator> <name pos:start="57:74" pos:end="57:85">INTENSITY_BT</name></expr>)</condition> <block pos:start="57:88" pos:end="147:13">{<block_content pos:start="59:17" pos:end="145:17">

                <for pos:start="59:17" pos:end="145:17">for <control pos:start="59:21" pos:end="59:67">(<init pos:start="59:22" pos:end="59:31"><expr pos:start="59:22" pos:end="59:30"><name pos:start="59:22" pos:end="59:26">group</name> <operator pos:start="59:28" pos:end="59:28">=</operator> <literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr>;</init> <condition pos:start="59:33" pos:end="59:58"><expr pos:start="59:33" pos:end="59:57"><name pos:start="59:33" pos:end="59:37">group</name> <operator pos:start="59:39" pos:end="59:39">&lt;</operator> <name pos:start="59:41" pos:end="59:57"><name pos:start="59:41" pos:end="59:43">ics</name><operator pos:start="59:44" pos:end="59:45">-&gt;</operator><name pos:start="59:46" pos:end="59:54">group_len</name><index pos:start="59:55" pos:end="59:57">[<expr pos:start="59:56" pos:end="59:56"><name pos:start="59:56" pos:end="59:56">g</name></expr>]</index></name></expr>;</condition> <incr pos:start="59:60" pos:end="59:66"><expr pos:start="59:60" pos:end="59:66"><name pos:start="59:60" pos:end="59:64">group</name><operator pos:start="59:65" pos:end="59:66">++</operator></expr></incr>)</control> <block pos:start="59:69" pos:end="145:17">{<block_content pos:start="61:21" pos:end="143:21">

                    <for pos:start="61:21" pos:end="143:21">for <control pos:start="61:25" pos:end="61:68">(<init pos:start="61:26" pos:end="61:40"><expr pos:start="61:26" pos:end="61:39"><name pos:start="61:26" pos:end="61:26">k</name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:39"><name pos:start="61:30" pos:end="61:36">offsets</name><index pos:start="61:37" pos:end="61:39">[<expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">i</name></expr>]</index></name></expr>;</init> <condition pos:start="61:42" pos:end="61:58"><expr pos:start="61:42" pos:end="61:57"><name pos:start="61:42" pos:end="61:42">k</name> <operator pos:start="61:44" pos:end="61:44">&lt;</operator> <name pos:start="61:46" pos:end="61:57"><name pos:start="61:46" pos:end="61:52">offsets</name><index pos:start="61:53" pos:end="61:57">[<expr pos:start="61:54" pos:end="61:56"><name pos:start="61:54" pos:end="61:54">i</name><operator pos:start="61:55" pos:end="61:55">+</operator><literal type="number" pos:start="61:56" pos:end="61:56">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="61:60" pos:end="61:67"><expr pos:start="61:60" pos:end="61:67"><name pos:start="61:60" pos:end="61:60">k</name> <operator pos:start="61:62" pos:end="61:63">+=</operator> <name pos:start="61:65" pos:end="61:67">dim</name></expr></incr>)</control> <block pos:start="61:70" pos:end="143:21">{<block_content pos:start="63:25" pos:end="141:62">

                        <decl_stmt pos:start="63:25" pos:end="63:100"><decl pos:start="63:25" pos:end="63:99"><type pos:start="63:25" pos:end="63:33"><specifier pos:start="63:25" pos:end="63:29">const</specifier> <name pos:start="63:31" pos:end="63:33">int</name></type> <name pos:start="63:35" pos:end="63:39">index</name> <init pos:start="63:41" pos:end="63:99">= <expr pos:start="63:43" pos:end="63:99"><call pos:start="63:43" pos:end="63:99"><name pos:start="63:43" pos:end="63:50">get_vlc2</name><argument_list pos:start="63:51" pos:end="63:99">(<argument pos:start="63:52" pos:end="63:53"><expr pos:start="63:52" pos:end="63:53"><name pos:start="63:52" pos:end="63:53">gb</name></expr></argument>, <argument pos:start="63:56" pos:end="63:92"><expr pos:start="63:56" pos:end="63:92"><name pos:start="63:56" pos:end="63:86"><name pos:start="63:56" pos:end="63:67">vlc_spectral</name><index pos:start="63:68" pos:end="63:86">[<expr pos:start="63:69" pos:end="63:85"><name pos:start="63:69" pos:end="63:81">cur_band_type</name> <operator pos:start="63:83" pos:end="63:83">-</operator> <literal type="number" pos:start="63:85" pos:end="63:85">1</literal></expr>]</index></name><operator pos:start="63:87" pos:end="63:87">.</operator><name pos:start="63:88" pos:end="63:92">table</name></expr></argument>, <argument pos:start="63:95" pos:end="63:95"><expr pos:start="63:95" pos:end="63:95"><literal type="number" pos:start="63:95" pos:end="63:95">6</literal></expr></argument>, <argument pos:start="63:98" pos:end="63:98"><expr pos:start="63:98" pos:end="63:98"><literal type="number" pos:start="63:98" pos:end="63:98">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="65:25" pos:end="65:66"><decl pos:start="65:25" pos:end="65:65"><type pos:start="65:25" pos:end="65:33"><specifier pos:start="65:25" pos:end="65:29">const</specifier> <name pos:start="65:31" pos:end="65:33">int</name></type> <name pos:start="65:35" pos:end="65:46">coef_tmp_idx</name> <init pos:start="65:48" pos:end="65:65">= <expr pos:start="65:50" pos:end="65:65"><operator pos:start="65:50" pos:end="65:50">(</operator><name pos:start="65:51" pos:end="65:55">group</name> <operator pos:start="65:57" pos:end="65:58">&lt;&lt;</operator> <literal type="number" pos:start="65:60" pos:end="65:60">7</literal><operator pos:start="65:61" pos:end="65:61">)</operator> <operator pos:start="65:63" pos:end="65:63">+</operator> <name pos:start="65:65" pos:end="65:65">k</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="67:25" pos:end="67:44"><decl pos:start="67:25" pos:end="67:43"><type pos:start="67:25" pos:end="67:37"><specifier pos:start="67:25" pos:end="67:29">const</specifier> <name pos:start="67:31" pos:end="67:35">float</name> <modifier pos:start="67:37" pos:end="67:37">*</modifier></type><name pos:start="67:38" pos:end="67:43">vq_ptr</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="69:25" pos:end="69:30"><decl pos:start="69:25" pos:end="69:29"><type pos:start="69:25" pos:end="69:27"><name pos:start="69:25" pos:end="69:27">int</name></type> <name pos:start="69:29" pos:end="69:29">j</name></decl>;</decl_stmt>

                        <if_stmt pos:start="71:25" pos:end="81:25"><if pos:start="71:25" pos:end="81:25">if<condition pos:start="71:27" pos:end="71:77">(<expr pos:start="71:28" pos:end="71:76"><name pos:start="71:28" pos:end="71:32">index</name> <operator pos:start="71:34" pos:end="71:35">&gt;=</operator> <name pos:start="71:37" pos:end="71:76"><name pos:start="71:37" pos:end="71:57">ff_aac_spectral_sizes</name><index pos:start="71:58" pos:end="71:76">[<expr pos:start="71:59" pos:end="71:75"><name pos:start="71:59" pos:end="71:71">cur_band_type</name> <operator pos:start="71:73" pos:end="71:73">-</operator> <literal type="number" pos:start="71:75" pos:end="71:75">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="71:79" pos:end="81:25">{<block_content pos:start="73:29" pos:end="79:38">

                            <expr_stmt pos:start="73:29" pos:end="77:100"><expr pos:start="73:29" pos:end="77:99"><call pos:start="73:29" pos:end="77:99"><name pos:start="73:29" pos:end="73:34">av_log</name><argument_list pos:start="73:35" pos:end="77:99">(<argument pos:start="73:36" pos:end="73:49"><expr pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:37">ac</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:49">avccontext</name></name></expr></argument>, <argument pos:start="73:52" pos:end="73:63"><expr pos:start="73:52" pos:end="73:63"><name pos:start="73:52" pos:end="73:63">AV_LOG_ERROR</name></expr></argument>,

                                <argument pos:start="75:33" pos:end="75:100"><expr pos:start="75:33" pos:end="75:100"><literal type="string" pos:start="75:33" pos:end="75:100">"Read beyond end of ff_aac_codebook_vectors[%d][]. index %d &gt;= %d\n"</literal></expr></argument>,

                                <argument pos:start="77:33" pos:end="77:49"><expr pos:start="77:33" pos:end="77:49"><name pos:start="77:33" pos:end="77:45">cur_band_type</name> <operator pos:start="77:47" pos:end="77:47">-</operator> <literal type="number" pos:start="77:49" pos:end="77:49">1</literal></expr></argument>, <argument pos:start="77:52" pos:end="77:56"><expr pos:start="77:52" pos:end="77:56"><name pos:start="77:52" pos:end="77:56">index</name></expr></argument>, <argument pos:start="77:59" pos:end="77:98"><expr pos:start="77:59" pos:end="77:98"><name pos:start="77:59" pos:end="77:98"><name pos:start="77:59" pos:end="77:79">ff_aac_spectral_sizes</name><index pos:start="77:80" pos:end="77:98">[<expr pos:start="77:81" pos:end="77:97"><name pos:start="77:81" pos:end="77:93">cur_band_type</name> <operator pos:start="77:95" pos:end="77:95">-</operator> <literal type="number" pos:start="77:97" pos:end="77:97">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="79:29" pos:end="79:38">return <expr pos:start="79:36" pos:end="79:37"><operator pos:start="79:36" pos:end="79:36">-</operator><literal type="number" pos:start="79:37" pos:end="79:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:90"><expr pos:start="83:25" pos:end="83:89"><name pos:start="83:25" pos:end="83:30">vq_ptr</name> <operator pos:start="83:32" pos:end="83:32">=</operator> <operator pos:start="83:34" pos:end="83:34">&amp;</operator><name pos:start="83:35" pos:end="83:89"><name pos:start="83:35" pos:end="83:57">ff_aac_codebook_vectors</name><index pos:start="83:58" pos:end="83:76">[<expr pos:start="83:59" pos:end="83:75"><name pos:start="83:59" pos:end="83:71">cur_band_type</name> <operator pos:start="83:73" pos:end="83:73">-</operator> <literal type="number" pos:start="83:75" pos:end="83:75">1</literal></expr>]</index><index pos:start="83:77" pos:end="83:89">[<expr pos:start="83:78" pos:end="83:88"><name pos:start="83:78" pos:end="83:82">index</name> <operator pos:start="83:84" pos:end="83:84">*</operator> <name pos:start="83:86" pos:end="83:88">dim</name></expr>]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="85:25" pos:end="99:25"><if pos:start="85:25" pos:end="93:25">if <condition pos:start="85:28" pos:end="85:43">(<expr pos:start="85:29" pos:end="85:42"><name pos:start="85:29" pos:end="85:42">is_cb_unsigned</name></expr>)</condition> <block pos:start="85:45" pos:end="93:25">{<block_content pos:start="87:29" pos:end="91:86">

                            <for pos:start="87:29" pos:end="91:86">for <control pos:start="87:33" pos:end="87:53">(<init pos:start="87:34" pos:end="87:39"><expr pos:start="87:34" pos:end="87:38"><name pos:start="87:34" pos:end="87:34">j</name> <operator pos:start="87:36" pos:end="87:36">=</operator> <literal type="number" pos:start="87:38" pos:end="87:38">0</literal></expr>;</init> <condition pos:start="87:41" pos:end="87:48"><expr pos:start="87:41" pos:end="87:47"><name pos:start="87:41" pos:end="87:41">j</name> <operator pos:start="87:43" pos:end="87:43">&lt;</operator> <name pos:start="87:45" pos:end="87:47">dim</name></expr>;</condition> <incr pos:start="87:50" pos:end="87:52"><expr pos:start="87:50" pos:end="87:52"><name pos:start="87:50" pos:end="87:50">j</name><operator pos:start="87:51" pos:end="87:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:33" pos:end="91:86"><block_content pos:start="89:33" pos:end="91:86">

                                <if_stmt pos:start="89:33" pos:end="91:86"><if pos:start="89:33" pos:end="91:86">if <condition pos:start="89:36" pos:end="89:46">(<expr pos:start="89:37" pos:end="89:45"><name pos:start="89:37" pos:end="89:45"><name pos:start="89:37" pos:end="89:42">vq_ptr</name><index pos:start="89:43" pos:end="89:45">[<expr pos:start="89:44" pos:end="89:44"><name pos:start="89:44" pos:end="89:44">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="91:37" pos:end="91:86"><block_content pos:start="91:37" pos:end="91:86">

                                    <expr_stmt pos:start="91:37" pos:end="91:86"><expr pos:start="91:37" pos:end="91:85"><name pos:start="91:37" pos:end="91:58"><name pos:start="91:37" pos:end="91:40">coef</name><index pos:start="91:41" pos:end="91:58">[<expr pos:start="91:42" pos:end="91:57"><name pos:start="91:42" pos:end="91:53">coef_tmp_idx</name> <operator pos:start="91:55" pos:end="91:55">+</operator> <name pos:start="91:57" pos:end="91:57">j</name></expr>]</index></name> <operator pos:start="91:60" pos:end="91:60">=</operator> <literal type="number" pos:start="91:62" pos:end="91:64">1</literal> <operator pos:start="91:64" pos:end="91:64">-</operator> <literal type="number" pos:start="91:66" pos:end="91:66">2</literal><operator pos:start="91:67" pos:end="91:67">*</operator><operator pos:start="91:68" pos:end="91:68">(</operator><name pos:start="91:69" pos:end="91:71">int</name><operator pos:start="91:72" pos:end="91:72">)</operator><call pos:start="91:73" pos:end="91:85"><name pos:start="91:73" pos:end="91:81">get_bits1</name><argument_list pos:start="91:82" pos:end="91:85">(<argument pos:start="91:83" pos:end="91:84"><expr pos:start="91:83" pos:end="91:84"><name pos:start="91:83" pos:end="91:84">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                        </block_content>}</block></if><else pos:start="93:26" pos:end="99:25">else <block pos:start="93:31" pos:end="99:25">{<block_content pos:start="95:29" pos:end="97:62">

                            <for pos:start="95:29" pos:end="97:62">for <control pos:start="95:33" pos:end="95:53">(<init pos:start="95:34" pos:end="95:39"><expr pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:34">j</name> <operator pos:start="95:36" pos:end="95:36">=</operator> <literal type="number" pos:start="95:38" pos:end="95:38">0</literal></expr>;</init> <condition pos:start="95:41" pos:end="95:48"><expr pos:start="95:41" pos:end="95:47"><name pos:start="95:41" pos:end="95:41">j</name> <operator pos:start="95:43" pos:end="95:43">&lt;</operator> <name pos:start="95:45" pos:end="95:47">dim</name></expr>;</condition> <incr pos:start="95:50" pos:end="95:52"><expr pos:start="95:50" pos:end="95:52"><name pos:start="95:50" pos:end="95:50">j</name><operator pos:start="95:51" pos:end="95:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="97:33" pos:end="97:62"><block_content pos:start="97:33" pos:end="97:62">

                                <expr_stmt pos:start="97:33" pos:end="97:62"><expr pos:start="97:33" pos:end="97:61"><name pos:start="97:33" pos:end="97:54"><name pos:start="97:33" pos:end="97:36">coef</name><index pos:start="97:37" pos:end="97:54">[<expr pos:start="97:38" pos:end="97:53"><name pos:start="97:38" pos:end="97:49">coef_tmp_idx</name> <operator pos:start="97:51" pos:end="97:51">+</operator> <name pos:start="97:53" pos:end="97:53">j</name></expr>]</index></name> <operator pos:start="97:56" pos:end="97:56">=</operator> <literal type="number" pos:start="97:58" pos:end="97:61">1.0f</literal></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="101:25" pos:end="137:68"><if pos:start="101:25" pos:end="133:25">if <condition pos:start="101:28" pos:end="101:52">(<expr pos:start="101:29" pos:end="101:51"><name pos:start="101:29" pos:end="101:41">cur_band_type</name> <operator pos:start="101:43" pos:end="101:44">==</operator> <name pos:start="101:46" pos:end="101:51">ESC_BT</name></expr>)</condition> <block pos:start="101:54" pos:end="133:25">{<block_content pos:start="103:29" pos:end="131:29">

                            <for pos:start="103:29" pos:end="131:29">for <control pos:start="103:33" pos:end="103:51">(<init pos:start="103:34" pos:end="103:39"><expr pos:start="103:34" pos:end="103:38"><name pos:start="103:34" pos:end="103:34">j</name> <operator pos:start="103:36" pos:end="103:36">=</operator> <literal type="number" pos:start="103:38" pos:end="103:38">0</literal></expr>;</init> <condition pos:start="103:41" pos:end="103:46"><expr pos:start="103:41" pos:end="103:45"><name pos:start="103:41" pos:end="103:41">j</name> <operator pos:start="103:43" pos:end="103:43">&lt;</operator> <literal type="number" pos:start="103:45" pos:end="103:45">2</literal></expr>;</condition> <incr pos:start="103:48" pos:end="103:50"><expr pos:start="103:48" pos:end="103:50"><name pos:start="103:48" pos:end="103:48">j</name><operator pos:start="103:49" pos:end="103:50">++</operator></expr></incr>)</control> <block pos:start="103:53" pos:end="131:29">{<block_content pos:start="105:33" pos:end="129:72">

                                <if_stmt pos:start="105:33" pos:end="129:72"><if pos:start="105:33" pos:end="127:33">if <condition pos:start="105:36" pos:end="105:55">(<expr pos:start="105:37" pos:end="105:54"><name pos:start="105:37" pos:end="105:45"><name pos:start="105:37" pos:end="105:42">vq_ptr</name><index pos:start="105:43" pos:end="105:45">[<expr pos:start="105:44" pos:end="105:44"><name pos:start="105:44" pos:end="105:44">j</name></expr>]</index></name> <operator pos:start="105:47" pos:end="105:48">==</operator> <literal type="number" pos:start="105:50" pos:end="105:54">64.0f</literal></expr>)</condition> <block pos:start="105:57" pos:end="127:33">{<block_content pos:start="107:37" pos:end="125:82">

                                    <decl_stmt pos:start="107:37" pos:end="107:46"><decl pos:start="107:37" pos:end="107:45"><type pos:start="107:37" pos:end="107:39"><name pos:start="107:37" pos:end="107:39">int</name></type> <name pos:start="107:41" pos:end="107:41">n</name> <init pos:start="107:43" pos:end="107:45">= <expr pos:start="107:45" pos:end="107:45"><literal type="number" pos:start="107:45" pos:end="107:45">4</literal></expr></init></decl>;</decl_stmt>

                                    <comment type="block" pos:start="109:37" pos:end="111:99">/* The total length of escape_sequence must be &lt; 22 bits according

                                       to the specification (i.e. max is 11111111110xxxxxxxxxx). */</comment>

                                    <while pos:start="113:37" pos:end="113:72">while <condition pos:start="113:43" pos:end="113:67">(<expr pos:start="113:44" pos:end="113:66"><call pos:start="113:44" pos:end="113:56"><name pos:start="113:44" pos:end="113:52">get_bits1</name><argument_list pos:start="113:53" pos:end="113:56">(<argument pos:start="113:54" pos:end="113:55"><expr pos:start="113:54" pos:end="113:55"><name pos:start="113:54" pos:end="113:55">gb</name></expr></argument>)</argument_list></call> <operator pos:start="113:58" pos:end="113:59">&amp;&amp;</operator> <name pos:start="113:61" pos:end="113:61">n</name> <operator pos:start="113:63" pos:end="113:63">&lt;</operator> <literal type="number" pos:start="113:65" pos:end="113:66">15</literal></expr>)</condition><block type="pseudo" pos:start="113:69" pos:end="113:72"><block_content pos:start="113:69" pos:end="113:72"> <expr_stmt pos:start="113:69" pos:end="113:72"><expr pos:start="113:69" pos:end="113:71"><name pos:start="113:69" pos:end="113:69">n</name><operator pos:start="113:70" pos:end="113:71">++</operator></expr>;</expr_stmt></block_content></block></while>

                                    <if_stmt pos:start="115:37" pos:end="121:37"><if pos:start="115:37" pos:end="121:37">if<condition pos:start="115:39" pos:end="115:47">(<expr pos:start="115:40" pos:end="115:46"><name pos:start="115:40" pos:end="115:40">n</name> <operator pos:start="115:42" pos:end="115:43">==</operator> <literal type="number" pos:start="115:45" pos:end="115:46">15</literal></expr>)</condition> <block pos:start="115:49" pos:end="121:37">{<block_content pos:start="117:41" pos:end="119:50">

                                        <expr_stmt pos:start="117:41" pos:end="117:119"><expr pos:start="117:41" pos:end="117:118"><call pos:start="117:41" pos:end="117:118"><name pos:start="117:41" pos:end="117:46">av_log</name><argument_list pos:start="117:47" pos:end="117:118">(<argument pos:start="117:48" pos:end="117:61"><expr pos:start="117:48" pos:end="117:61"><name pos:start="117:48" pos:end="117:61"><name pos:start="117:48" pos:end="117:49">ac</name><operator pos:start="117:50" pos:end="117:51">-&gt;</operator><name pos:start="117:52" pos:end="117:61">avccontext</name></name></expr></argument>, <argument pos:start="117:64" pos:end="117:75"><expr pos:start="117:64" pos:end="117:75"><name pos:start="117:64" pos:end="117:75">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:78" pos:end="117:117"><expr pos:start="117:78" pos:end="117:117"><literal type="string" pos:start="117:78" pos:end="117:117">"error in spectral data, ESC overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                        <return pos:start="119:41" pos:end="119:50">return <expr pos:start="119:48" pos:end="119:49"><operator pos:start="119:48" pos:end="119:48">-</operator><literal type="number" pos:start="119:49" pos:end="119:49">1</literal></expr>;</return>

                                    </block_content>}</block></if></if_stmt>

                                    <expr_stmt pos:start="123:37" pos:end="123:65"><expr pos:start="123:37" pos:end="123:64"><name pos:start="123:37" pos:end="123:37">n</name> <operator pos:start="123:39" pos:end="123:39">=</operator> <operator pos:start="123:41" pos:end="123:41">(</operator><literal type="number" pos:start="123:42" pos:end="123:42">1</literal><operator pos:start="123:43" pos:end="123:44">&lt;&lt;</operator><name pos:start="123:45" pos:end="123:45">n</name><operator pos:start="123:46" pos:end="123:46">)</operator> <operator pos:start="123:48" pos:end="123:48">+</operator> <call pos:start="123:50" pos:end="123:64"><name pos:start="123:50" pos:end="123:57">get_bits</name><argument_list pos:start="123:58" pos:end="123:64">(<argument pos:start="123:59" pos:end="123:60"><expr pos:start="123:59" pos:end="123:60"><name pos:start="123:59" pos:end="123:60">gb</name></expr></argument>, <argument pos:start="123:63" pos:end="123:63"><expr pos:start="123:63" pos:end="123:63"><name pos:start="123:63" pos:end="123:63">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="125:37" pos:end="125:82"><expr pos:start="125:37" pos:end="125:81"><name pos:start="125:37" pos:end="125:58"><name pos:start="125:37" pos:end="125:40">coef</name><index pos:start="125:41" pos:end="125:58">[<expr pos:start="125:42" pos:end="125:57"><name pos:start="125:42" pos:end="125:53">coef_tmp_idx</name> <operator pos:start="125:55" pos:end="125:55">+</operator> <name pos:start="125:57" pos:end="125:57">j</name></expr>]</index></name> <operator pos:start="125:60" pos:end="125:61">*=</operator> <call pos:start="125:63" pos:end="125:77"><name pos:start="125:63" pos:end="125:67">cbrtf</name><argument_list pos:start="125:68" pos:end="125:77">(<argument pos:start="125:69" pos:end="125:76"><expr pos:start="125:69" pos:end="125:76"><call pos:start="125:69" pos:end="125:76"><name pos:start="125:69" pos:end="125:73">fabsf</name><argument_list pos:start="125:74" pos:end="125:76">(<argument pos:start="125:75" pos:end="125:75"><expr pos:start="125:75" pos:end="125:75"><name pos:start="125:75" pos:end="125:75">n</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="125:79" pos:end="125:79">*</operator> <name pos:start="125:81" pos:end="125:81">n</name></expr>;</expr_stmt>

                                </block_content>}</block></if><else pos:start="127:34" pos:end="129:72">else<block type="pseudo" pos:start="129:37" pos:end="129:72"><block_content pos:start="129:37" pos:end="129:72">

                                    <expr_stmt pos:start="129:37" pos:end="129:72"><expr pos:start="129:37" pos:end="129:71"><name pos:start="129:37" pos:end="129:58"><name pos:start="129:37" pos:end="129:40">coef</name><index pos:start="129:41" pos:end="129:58">[<expr pos:start="129:42" pos:end="129:57"><name pos:start="129:42" pos:end="129:53">coef_tmp_idx</name> <operator pos:start="129:55" pos:end="129:55">+</operator> <name pos:start="129:57" pos:end="129:57">j</name></expr>]</index></name> <operator pos:start="129:60" pos:end="129:61">*=</operator> <name pos:start="129:63" pos:end="129:71"><name pos:start="129:63" pos:end="129:68">vq_ptr</name><index pos:start="129:69" pos:end="129:71">[<expr pos:start="129:70" pos:end="129:70"><name pos:start="129:70" pos:end="129:70">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></if><else pos:start="133:26" pos:end="137:68">else<block type="pseudo" pos:start="135:29" pos:end="137:68"><block_content pos:start="135:29" pos:end="137:68">

                            <for pos:start="135:29" pos:end="137:68">for <control pos:start="135:33" pos:end="135:53">(<init pos:start="135:34" pos:end="135:39"><expr pos:start="135:34" pos:end="135:38"><name pos:start="135:34" pos:end="135:34">j</name> <operator pos:start="135:36" pos:end="135:36">=</operator> <literal type="number" pos:start="135:38" pos:end="135:38">0</literal></expr>;</init> <condition pos:start="135:41" pos:end="135:48"><expr pos:start="135:41" pos:end="135:47"><name pos:start="135:41" pos:end="135:41">j</name> <operator pos:start="135:43" pos:end="135:43">&lt;</operator> <name pos:start="135:45" pos:end="135:47">dim</name></expr>;</condition> <incr pos:start="135:50" pos:end="135:52"><expr pos:start="135:50" pos:end="135:52"><name pos:start="135:50" pos:end="135:50">j</name><operator pos:start="135:51" pos:end="135:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:33" pos:end="137:68"><block_content pos:start="137:33" pos:end="137:68">

                                <expr_stmt pos:start="137:33" pos:end="137:68"><expr pos:start="137:33" pos:end="137:67"><name pos:start="137:33" pos:end="137:54"><name pos:start="137:33" pos:end="137:36">coef</name><index pos:start="137:37" pos:end="137:54">[<expr pos:start="137:38" pos:end="137:53"><name pos:start="137:38" pos:end="137:49">coef_tmp_idx</name> <operator pos:start="137:51" pos:end="137:51">+</operator> <name pos:start="137:53" pos:end="137:53">j</name></expr>]</index></name> <operator pos:start="137:56" pos:end="137:57">*=</operator> <name pos:start="137:59" pos:end="137:67"><name pos:start="137:59" pos:end="137:64">vq_ptr</name><index pos:start="137:65" pos:end="137:67">[<expr pos:start="137:66" pos:end="137:66"><name pos:start="137:66" pos:end="137:66">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>

                        <for pos:start="139:25" pos:end="141:62">for <control pos:start="139:29" pos:end="139:49">(<init pos:start="139:30" pos:end="139:35"><expr pos:start="139:30" pos:end="139:34"><name pos:start="139:30" pos:end="139:30">j</name> <operator pos:start="139:32" pos:end="139:32">=</operator> <literal type="number" pos:start="139:34" pos:end="139:34">0</literal></expr>;</init> <condition pos:start="139:37" pos:end="139:44"><expr pos:start="139:37" pos:end="139:43"><name pos:start="139:37" pos:end="139:37">j</name> <operator pos:start="139:39" pos:end="139:39">&lt;</operator> <name pos:start="139:41" pos:end="139:43">dim</name></expr>;</condition> <incr pos:start="139:46" pos:end="139:48"><expr pos:start="139:46" pos:end="139:48"><name pos:start="139:46" pos:end="139:46">j</name><operator pos:start="139:47" pos:end="139:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="141:29" pos:end="141:62"><block_content pos:start="141:29" pos:end="141:62">

                            <expr_stmt pos:start="141:29" pos:end="141:62"><expr pos:start="141:29" pos:end="141:61"><name pos:start="141:29" pos:end="141:50"><name pos:start="141:29" pos:end="141:32">coef</name><index pos:start="141:33" pos:end="141:50">[<expr pos:start="141:34" pos:end="141:49"><name pos:start="141:34" pos:end="141:45">coef_tmp_idx</name> <operator pos:start="141:47" pos:end="141:47">+</operator> <name pos:start="141:49" pos:end="141:49">j</name></expr>]</index></name> <operator pos:start="141:52" pos:end="141:53">*=</operator> <name pos:start="141:55" pos:end="141:61"><name pos:start="141:55" pos:end="141:56">sf</name><index pos:start="141:57" pos:end="141:61">[<expr pos:start="141:58" pos:end="141:60"><name pos:start="141:58" pos:end="141:60">idx</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="151:9" pos:end="151:37"><expr pos:start="151:9" pos:end="151:36"><name pos:start="151:9" pos:end="151:12">coef</name> <operator pos:start="151:14" pos:end="151:15">+=</operator> <name pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:19">ics</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:30">group_len</name><index pos:start="151:31" pos:end="151:33">[<expr pos:start="151:32" pos:end="151:32"><name pos:start="151:32" pos:end="151:32">g</name></expr>]</index></name><operator pos:start="151:34" pos:end="151:35">&lt;&lt;</operator><literal type="number" pos:start="151:36" pos:end="151:36">7</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="157:5" pos:end="169:5"><if pos:start="157:5" pos:end="169:5">if <condition pos:start="157:8" pos:end="157:22">(<expr pos:start="157:9" pos:end="157:21"><name pos:start="157:9" pos:end="157:21">pulse_present</name></expr>)</condition> <block pos:start="157:24" pos:end="169:5">{<block_content pos:start="159:9" pos:end="167:9">

        <for pos:start="159:9" pos:end="167:9">for<control pos:start="159:12" pos:end="159:45">(<init pos:start="159:13" pos:end="159:18"><expr pos:start="159:13" pos:end="159:17"><name pos:start="159:13" pos:end="159:13">i</name> <operator pos:start="159:15" pos:end="159:15">=</operator> <literal type="number" pos:start="159:17" pos:end="159:17">0</literal></expr>;</init> <condition pos:start="159:20" pos:end="159:40"><expr pos:start="159:20" pos:end="159:39"><name pos:start="159:20" pos:end="159:20">i</name> <operator pos:start="159:22" pos:end="159:22">&lt;</operator> <name pos:start="159:24" pos:end="159:39"><name pos:start="159:24" pos:end="159:28">pulse</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:39">num_pulse</name></name></expr>;</condition> <incr pos:start="159:42" pos:end="159:44"><expr pos:start="159:42" pos:end="159:44"><name pos:start="159:42" pos:end="159:42">i</name><operator pos:start="159:43" pos:end="159:44">++</operator></expr></incr>)</control><block pos:start="159:46" pos:end="167:9">{<block_content pos:start="161:13" pos:end="165:65">

            <decl_stmt pos:start="161:13" pos:end="161:51"><decl pos:start="161:13" pos:end="161:50"><type pos:start="161:13" pos:end="161:17"><name pos:start="161:13" pos:end="161:17">float</name></type> <name pos:start="161:19" pos:end="161:20">co</name>  <init pos:start="161:23" pos:end="161:50">= <expr pos:start="161:25" pos:end="161:50"><name pos:start="161:25" pos:end="161:50"><name pos:start="161:25" pos:end="161:33">coef_base</name><index pos:start="161:34" pos:end="161:50">[ <expr pos:start="161:36" pos:end="161:48"><name pos:start="161:36" pos:end="161:48"><name pos:start="161:36" pos:end="161:40">pulse</name><operator pos:start="161:41" pos:end="161:42">-&gt;</operator><name pos:start="161:43" pos:end="161:45">pos</name><index pos:start="161:46" pos:end="161:48">[<expr pos:start="161:47" pos:end="161:47"><name pos:start="161:47" pos:end="161:47">i</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="163:13" pos:end="163:69"><decl pos:start="163:13" pos:end="163:68"><type pos:start="163:13" pos:end="163:17"><name pos:start="163:13" pos:end="163:17">float</name></type> <name pos:start="163:19" pos:end="163:21">ico</name> <init pos:start="163:23" pos:end="163:68">= <expr pos:start="163:25" pos:end="163:68"><name pos:start="163:25" pos:end="163:26">co</name> <operator pos:start="163:28" pos:end="163:28">/</operator> <call pos:start="163:30" pos:end="163:52"><name pos:start="163:30" pos:end="163:34">sqrtf</name><argument_list pos:start="163:35" pos:end="163:52">(<argument pos:start="163:36" pos:end="163:51"><expr pos:start="163:36" pos:end="163:51"><call pos:start="163:36" pos:end="163:51"><name pos:start="163:36" pos:end="163:40">sqrtf</name><argument_list pos:start="163:41" pos:end="163:51">(<argument pos:start="163:42" pos:end="163:50"><expr pos:start="163:42" pos:end="163:50"><call pos:start="163:42" pos:end="163:50"><name pos:start="163:42" pos:end="163:46">fabsf</name><argument_list pos:start="163:47" pos:end="163:50">(<argument pos:start="163:48" pos:end="163:49"><expr pos:start="163:48" pos:end="163:49"><name pos:start="163:48" pos:end="163:49">co</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="163:54" pos:end="163:54">+</operator> <name pos:start="163:56" pos:end="163:68"><name pos:start="163:56" pos:end="163:60">pulse</name><operator pos:start="163:61" pos:end="163:62">-&gt;</operator><name pos:start="163:63" pos:end="163:65">amp</name><index pos:start="163:66" pos:end="163:68">[<expr pos:start="163:67" pos:end="163:67"><name pos:start="163:67" pos:end="163:67">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:65"><expr pos:start="165:13" pos:end="165:64"><name pos:start="165:13" pos:end="165:38"><name pos:start="165:13" pos:end="165:21">coef_base</name><index pos:start="165:22" pos:end="165:38">[ <expr pos:start="165:24" pos:end="165:36"><name pos:start="165:24" pos:end="165:36"><name pos:start="165:24" pos:end="165:28">pulse</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:33">pos</name><index pos:start="165:34" pos:end="165:36">[<expr pos:start="165:35" pos:end="165:35"><name pos:start="165:35" pos:end="165:35">i</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="165:40" pos:end="165:40">=</operator> <call pos:start="165:42" pos:end="165:58"><name pos:start="165:42" pos:end="165:46">cbrtf</name><argument_list pos:start="165:47" pos:end="165:58">(<argument pos:start="165:48" pos:end="165:57"><expr pos:start="165:48" pos:end="165:57"><call pos:start="165:48" pos:end="165:57"><name pos:start="165:48" pos:end="165:52">fabsf</name><argument_list pos:start="165:53" pos:end="165:57">(<argument pos:start="165:54" pos:end="165:56"><expr pos:start="165:54" pos:end="165:56"><name pos:start="165:54" pos:end="165:56">ico</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="165:60" pos:end="165:60">*</operator> <name pos:start="165:62" pos:end="165:64">ico</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="171:5" pos:end="171:13">return <expr pos:start="171:12" pos:end="171:12"><literal type="number" pos:start="171:12" pos:end="171:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
