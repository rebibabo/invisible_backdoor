<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18793.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">vtd_iommu_replay</name><parameter_list pos:start="1:29" pos:end="1:64">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:41">MemoryRegion</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">mr</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:60">IOMMUNotifier</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:11">

    <decl_stmt pos:start="5:5" pos:end="5:71"><decl pos:start="5:5" pos:end="5:70"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">VTDAddressSpace</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:27">vtd_as</name> <init pos:start="5:29" pos:end="5:70">= <expr pos:start="5:31" pos:end="5:70"><call pos:start="5:31" pos:end="5:70"><name pos:start="5:31" pos:end="5:42">container_of</name><argument_list pos:start="5:43" pos:end="5:70">(<argument pos:start="5:44" pos:end="5:45"><expr pos:start="5:44" pos:end="5:45"><name pos:start="5:44" pos:end="5:45">mr</name></expr></argument>, <argument pos:start="5:48" pos:end="5:62"><expr pos:start="5:48" pos:end="5:62"><name pos:start="5:48" pos:end="5:62">VTDAddressSpace</name></expr></argument>, <argument pos:start="5:65" pos:end="5:69"><expr pos:start="5:65" pos:end="5:69"><name pos:start="5:65" pos:end="5:69">iommu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">IntelIOMMUState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:44">= <expr pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:31">vtd_as</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:44">iommu_state</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:17">bus_n</name> <init pos:start="9:19" pos:end="9:44">= <expr pos:start="9:21" pos:end="9:44"><call pos:start="9:21" pos:end="9:44"><name pos:start="9:21" pos:end="9:31">pci_bus_num</name><argument_list pos:start="9:32" pos:end="9:44">(<argument pos:start="9:33" pos:end="9:43"><expr pos:start="9:33" pos:end="9:43"><name pos:start="9:33" pos:end="9:43"><name pos:start="9:33" pos:end="9:38">vtd_as</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:43">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:19">VTDContextEntry</name></type> <name pos:start="11:21" pos:end="11:22">ce</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="41:5"><if pos:start="15:5" pos:end="35:5">if <condition pos:start="15:8" pos:end="15:68">(<expr pos:start="15:9" pos:end="15:67"><call pos:start="15:9" pos:end="15:62"><name pos:start="15:9" pos:end="15:32">vtd_dev_to_context_entry</name><argument_list pos:start="15:33" pos:end="15:62">(<argument pos:start="15:34" pos:end="15:34"><expr pos:start="15:34" pos:end="15:34"><name pos:start="15:34" pos:end="15:34">s</name></expr></argument>, <argument pos:start="15:37" pos:end="15:41"><expr pos:start="15:37" pos:end="15:41"><name pos:start="15:37" pos:end="15:41">bus_n</name></expr></argument>, <argument pos:start="15:44" pos:end="15:56"><expr pos:start="15:44" pos:end="15:56"><name pos:start="15:44" pos:end="15:56"><name pos:start="15:44" pos:end="15:49">vtd_as</name><operator pos:start="15:50" pos:end="15:51">-&gt;</operator><name pos:start="15:52" pos:end="15:56">devfn</name></name></expr></argument>, <argument pos:start="15:59" pos:end="15:61"><expr pos:start="15:59" pos:end="15:61"><operator pos:start="15:59" pos:end="15:59">&amp;</operator><name pos:start="15:60" pos:end="15:61">ce</name></expr></argument>)</argument_list></call> <operator pos:start="15:64" pos:end="15:65">==</operator> <literal type="number" pos:start="15:67" pos:end="15:67">0</literal></expr>)</condition> <block pos:start="15:70" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:65">

        <comment type="block" pos:start="17:9" pos:end="23:11">/*

         * Scanned a valid context entry, walk over the pages and

         * notify when needed.

         */</comment>

        <expr_stmt pos:start="25:9" pos:end="31:48"><expr pos:start="25:9" pos:end="31:47"><call pos:start="25:9" pos:end="31:47"><name pos:start="25:9" pos:end="25:33">trace_vtd_replay_ce_valid</name><argument_list pos:start="25:34" pos:end="31:47">(<argument pos:start="25:35" pos:end="25:39"><expr pos:start="25:35" pos:end="25:39"><name pos:start="25:35" pos:end="25:39">bus_n</name></expr></argument>, <argument pos:start="25:42" pos:end="25:64"><expr pos:start="25:42" pos:end="25:64"><call pos:start="25:42" pos:end="25:64"><name pos:start="25:42" pos:end="25:49">PCI_SLOT</name><argument_list pos:start="25:50" pos:end="25:64">(<argument pos:start="25:51" pos:end="25:63"><expr pos:start="25:51" pos:end="25:63"><name pos:start="25:51" pos:end="25:63"><name pos:start="25:51" pos:end="25:56">vtd_as</name><operator pos:start="25:57" pos:end="25:58">-&gt;</operator><name pos:start="25:59" pos:end="25:63">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="27:35" pos:end="27:57"><expr pos:start="27:35" pos:end="27:57"><call pos:start="27:35" pos:end="27:57"><name pos:start="27:35" pos:end="27:42">PCI_FUNC</name><argument_list pos:start="27:43" pos:end="27:57">(<argument pos:start="27:44" pos:end="27:56"><expr pos:start="27:44" pos:end="27:56"><name pos:start="27:44" pos:end="27:56"><name pos:start="27:44" pos:end="27:49">vtd_as</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:56">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="29:35" pos:end="29:62"><expr pos:start="29:35" pos:end="29:62"><call pos:start="29:35" pos:end="29:62"><name pos:start="29:35" pos:end="29:55">VTD_CONTEXT_ENTRY_DID</name><argument_list pos:start="29:56" pos:end="29:62">(<argument pos:start="29:57" pos:end="29:61"><expr pos:start="29:57" pos:end="29:61"><name pos:start="29:57" pos:end="29:61"><name pos:start="29:57" pos:end="29:58">ce</name><operator pos:start="29:59" pos:end="29:59">.</operator><name pos:start="29:60" pos:end="29:61">hi</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="31:35" pos:end="31:39"><expr pos:start="31:35" pos:end="31:39"><name pos:start="31:35" pos:end="31:39"><name pos:start="31:35" pos:end="31:36">ce</name><operator pos:start="31:37" pos:end="31:37">.</operator><name pos:start="31:38" pos:end="31:39">hi</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:46"><expr pos:start="31:42" pos:end="31:46"><name pos:start="31:42" pos:end="31:46"><name pos:start="31:42" pos:end="31:43">ce</name><operator pos:start="31:44" pos:end="31:44">.</operator><name pos:start="31:45" pos:end="31:46">lo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><call pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:21">vtd_page_walk</name><argument_list pos:start="33:22" pos:end="33:64">(<argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:25">ce</name></expr></argument>, <argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr></argument>, <argument pos:start="33:31" pos:end="33:35"><expr pos:start="33:31" pos:end="33:35"><operator pos:start="33:31" pos:end="33:31">~</operator><literal type="number" pos:start="33:32" pos:end="33:35">0ULL</literal></expr></argument>, <argument pos:start="33:38" pos:end="33:52"><expr pos:start="33:38" pos:end="33:52"><name pos:start="33:38" pos:end="33:52">vtd_replay_hook</name></expr></argument>, <argument pos:start="33:55" pos:end="33:63"><expr pos:start="33:55" pos:end="33:63"><operator pos:start="33:55" pos:end="33:55">(</operator><name pos:start="33:56" pos:end="33:59">void</name> <operator pos:start="33:61" pos:end="33:61">*</operator><operator pos:start="33:62" pos:end="33:62">)</operator><name pos:start="33:63" pos:end="33:63">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="41:5">else <block pos:start="35:12" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:61">

        <expr_stmt pos:start="37:9" pos:end="39:61"><expr pos:start="37:9" pos:end="39:60"><call pos:start="37:9" pos:end="39:60"><name pos:start="37:9" pos:end="37:35">trace_vtd_replay_ce_invalid</name><argument_list pos:start="37:36" pos:end="39:60">(<argument pos:start="37:37" pos:end="37:41"><expr pos:start="37:37" pos:end="37:41"><name pos:start="37:37" pos:end="37:41">bus_n</name></expr></argument>, <argument pos:start="37:44" pos:end="37:66"><expr pos:start="37:44" pos:end="37:66"><call pos:start="37:44" pos:end="37:66"><name pos:start="37:44" pos:end="37:51">PCI_SLOT</name><argument_list pos:start="37:52" pos:end="37:66">(<argument pos:start="37:53" pos:end="37:65"><expr pos:start="37:53" pos:end="37:65"><name pos:start="37:53" pos:end="37:65"><name pos:start="37:53" pos:end="37:58">vtd_as</name><operator pos:start="37:59" pos:end="37:60">-&gt;</operator><name pos:start="37:61" pos:end="37:65">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="39:37" pos:end="39:59"><expr pos:start="39:37" pos:end="39:59"><call pos:start="39:37" pos:end="39:59"><name pos:start="39:37" pos:end="39:44">PCI_FUNC</name><argument_list pos:start="39:45" pos:end="39:59">(<argument pos:start="39:46" pos:end="39:58"><expr pos:start="39:46" pos:end="39:58"><name pos:start="39:46" pos:end="39:58"><name pos:start="39:46" pos:end="39:51">vtd_as</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:58">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="45:5" pos:end="45:11">return;</return>

</block_content>}</block></function>
</unit>
