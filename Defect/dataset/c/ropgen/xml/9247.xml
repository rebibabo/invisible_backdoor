<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9247.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">aac_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:64">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:46">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><name pos:start="3:49" pos:end="3:56">AVPacket</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:63">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:59">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AACContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">ac</name> <init pos:start="7:20" pos:end="7:37">= <expr pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">buf_consumed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">buf_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:26">new_extradata_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="27:60"><decl pos:start="23:5" pos:end="27:59"><type pos:start="23:5" pos:end="23:19"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:17">uint8_t</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:32">new_extradata</name> <init pos:start="23:34" pos:end="27:59">= <expr pos:start="23:36" pos:end="27:59"><call pos:start="23:36" pos:end="27:59"><name pos:start="23:36" pos:end="23:58">av_packet_get_side_data</name><argument_list pos:start="23:59" pos:end="27:59">(<argument pos:start="23:60" pos:end="23:64"><expr pos:start="23:60" pos:end="23:64"><name pos:start="23:60" pos:end="23:64">avpkt</name></expr></argument>,

                                       <argument pos:start="25:40" pos:end="25:64"><expr pos:start="25:40" pos:end="25:64"><name pos:start="25:40" pos:end="25:64">AV_PKT_DATA_NEW_EXTRADATA</name></expr></argument>,

                                       <argument pos:start="27:40" pos:end="27:58"><expr pos:start="27:40" pos:end="27:58"><operator pos:start="27:40" pos:end="27:40">&amp;</operator><name pos:start="27:41" pos:end="27:58">new_extradata_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="61:5"><if pos:start="31:5" pos:end="61:5">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:21">new_extradata</name></expr>)</condition> <block pos:start="31:24" pos:end="61:5">{<block_content pos:start="33:9" pos:end="59:9">

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><call pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:15">av_free</name><argument_list pos:start="33:16" pos:end="33:33">(<argument pos:start="33:17" pos:end="33:32"><expr pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:21">avctx</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:32">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:68"><expr pos:start="35:9" pos:end="37:67"><name pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:24">extradata</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <call pos:start="35:28" pos:end="37:67"><name pos:start="35:28" pos:end="35:37">av_mallocz</name><argument_list pos:start="35:38" pos:end="37:67">(<argument pos:start="35:39" pos:end="37:66"><expr pos:start="35:39" pos:end="37:66"><name pos:start="35:39" pos:end="35:56">new_extradata_size</name> <operator pos:start="35:58" pos:end="35:58">+</operator>

                                      <name pos:start="37:39" pos:end="37:66">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:35"><if pos:start="39:9" pos:end="41:35">if <condition pos:start="39:12" pos:end="39:30">(<expr pos:start="39:13" pos:end="39:29"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:29"><name pos:start="39:14" pos:end="39:18">avctx</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:29">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:35"><block_content pos:start="41:13" pos:end="41:35">

            <return pos:start="41:13" pos:end="41:35">return <expr pos:start="41:20" pos:end="41:34"><call pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:26">AVERROR</name><argument_list pos:start="41:27" pos:end="41:34">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:29">extradata_size</name></name> <operator pos:start="43:31" pos:end="43:31">=</operator> <name pos:start="43:33" pos:end="43:50">new_extradata_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:68"><expr pos:start="45:9" pos:end="45:67"><call pos:start="45:9" pos:end="45:67"><name pos:start="45:9" pos:end="45:14">memcpy</name><argument_list pos:start="45:15" pos:end="45:67">(<argument pos:start="45:16" pos:end="45:31"><expr pos:start="45:16" pos:end="45:31"><name pos:start="45:16" pos:end="45:31"><name pos:start="45:16" pos:end="45:20">avctx</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:31">extradata</name></name></expr></argument>, <argument pos:start="45:34" pos:end="45:46"><expr pos:start="45:34" pos:end="45:46"><name pos:start="45:34" pos:end="45:46">new_extradata</name></expr></argument>, <argument pos:start="45:49" pos:end="45:66"><expr pos:start="45:49" pos:end="45:66"><name pos:start="45:49" pos:end="45:66">new_extradata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><call pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:33">push_output_configuration</name><argument_list pos:start="47:34" pos:end="47:37">(<argument pos:start="47:35" pos:end="47:36"><expr pos:start="47:35" pos:end="47:36"><name pos:start="47:35" pos:end="47:36">ac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="59:9"><if pos:start="49:9" pos:end="59:9">if <condition pos:start="49:12" pos:end="53:73">(<expr pos:start="49:13" pos:end="53:72"><call pos:start="49:13" pos:end="53:68"><name pos:start="49:13" pos:end="49:40">decode_audio_specific_config</name><argument_list pos:start="49:41" pos:end="53:68">(<argument pos:start="49:42" pos:end="49:43"><expr pos:start="49:42" pos:end="49:43"><name pos:start="49:42" pos:end="49:43">ac</name></expr></argument>, <argument pos:start="49:46" pos:end="49:54"><expr pos:start="49:46" pos:end="49:54"><name pos:start="49:46" pos:end="49:54"><name pos:start="49:46" pos:end="49:47">ac</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:54">avctx</name></name></expr></argument>, <argument pos:start="49:57" pos:end="49:71"><expr pos:start="49:57" pos:end="49:71"><operator pos:start="49:57" pos:end="49:57">&amp;</operator><name pos:start="49:58" pos:end="49:66"><name pos:start="49:58" pos:end="49:59">ac</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:63">oc</name><index pos:start="49:64" pos:end="49:66">[<expr pos:start="49:65" pos:end="49:65"><literal type="number" pos:start="49:65" pos:end="49:65">1</literal></expr>]</index></name><operator pos:start="49:67" pos:end="49:67">.</operator><name pos:start="49:68" pos:end="49:71">m4ac</name></expr></argument>,

                                         <argument pos:start="51:42" pos:end="51:57"><expr pos:start="51:42" pos:end="51:57"><name pos:start="51:42" pos:end="51:57"><name pos:start="51:42" pos:end="51:46">avctx</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:57">extradata</name></name></expr></argument>,

                                         <argument pos:start="53:42" pos:end="53:64"><expr pos:start="53:42" pos:end="53:64"><name pos:start="53:42" pos:end="53:62"><name pos:start="53:42" pos:end="53:46">avctx</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:62">extradata_size</name></name><operator pos:start="53:63" pos:end="53:63">*</operator><literal type="number" pos:start="53:64" pos:end="53:64">8</literal></expr></argument>, <argument pos:start="53:67" pos:end="53:67"><expr pos:start="53:67" pos:end="53:67"><literal type="number" pos:start="53:67" pos:end="53:67">1</literal></expr></argument>)</argument_list></call> <operator pos:start="53:70" pos:end="53:70">&lt;</operator> <literal type="number" pos:start="53:72" pos:end="53:72">0</literal></expr>)</condition> <block pos:start="53:75" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:39">

            <expr_stmt pos:start="55:13" pos:end="55:41"><expr pos:start="55:13" pos:end="55:40"><call pos:start="55:13" pos:end="55:40"><name pos:start="55:13" pos:end="55:36">pop_output_configuration</name><argument_list pos:start="55:37" pos:end="55:40">(<argument pos:start="55:38" pos:end="55:39"><expr pos:start="55:38" pos:end="55:39"><name pos:start="55:38" pos:end="55:39">ac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:39">return <expr pos:start="57:20" pos:end="57:38"><name pos:start="57:20" pos:end="57:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:42"><expr pos:start="65:5" pos:end="65:41"><call pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:17">init_get_bits</name><argument_list pos:start="65:18" pos:end="65:41">(<argument pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><operator pos:start="65:19" pos:end="65:19">&amp;</operator><name pos:start="65:20" pos:end="65:21">gb</name></expr></argument>, <argument pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">buf</name></expr></argument>, <argument pos:start="65:29" pos:end="65:40"><expr pos:start="65:29" pos:end="65:40"><name pos:start="65:29" pos:end="65:36">buf_size</name> <operator pos:start="65:38" pos:end="65:38">*</operator> <literal type="number" pos:start="65:40" pos:end="65:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="71:19"><if pos:start="69:5" pos:end="71:19">if <condition pos:start="69:8" pos:end="69:74">(<expr pos:start="69:9" pos:end="69:73"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:12">err</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:68"><name pos:start="69:16" pos:end="69:35">aac_decode_frame_int</name><argument_list pos:start="69:36" pos:end="69:68">(<argument pos:start="69:37" pos:end="69:41"><expr pos:start="69:37" pos:end="69:41"><name pos:start="69:37" pos:end="69:41">avctx</name></expr></argument>, <argument pos:start="69:44" pos:end="69:47"><expr pos:start="69:44" pos:end="69:47"><name pos:start="69:44" pos:end="69:47">data</name></expr></argument>, <argument pos:start="69:50" pos:end="69:62"><expr pos:start="69:50" pos:end="69:62"><name pos:start="69:50" pos:end="69:62">got_frame_ptr</name></expr></argument>, <argument pos:start="69:65" pos:end="69:67"><expr pos:start="69:65" pos:end="69:67"><operator pos:start="69:65" pos:end="69:65">&amp;</operator><name pos:start="69:66" pos:end="69:67">gb</name></expr></argument>)</argument_list></call><operator pos:start="69:69" pos:end="69:69">)</operator> <operator pos:start="69:71" pos:end="69:71">&lt;</operator> <literal type="number" pos:start="69:73" pos:end="69:73">0</literal></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:19"><block_content pos:start="71:9" pos:end="71:19">

        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:50"><expr pos:start="75:5" pos:end="75:49"><name pos:start="75:5" pos:end="75:16">buf_consumed</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <operator pos:start="75:20" pos:end="75:20">(</operator><call pos:start="75:21" pos:end="75:39"><name pos:start="75:21" pos:end="75:34">get_bits_count</name><argument_list pos:start="75:35" pos:end="75:39">(<argument pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><operator pos:start="75:36" pos:end="75:36">&amp;</operator><name pos:start="75:37" pos:end="75:38">gb</name></expr></argument>)</argument_list></call> <operator pos:start="75:41" pos:end="75:41">+</operator> <literal type="number" pos:start="75:43" pos:end="75:43">7</literal><operator pos:start="75:44" pos:end="75:44">)</operator> <operator pos:start="75:46" pos:end="75:47">&gt;&gt;</operator> <literal type="number" pos:start="75:49" pos:end="75:49">3</literal></expr>;</expr_stmt>

    <for pos:start="77:5" pos:end="81:18">for <control pos:start="77:9" pos:end="77:72">(<init pos:start="77:10" pos:end="77:35"><expr pos:start="77:10" pos:end="77:34"><name pos:start="77:10" pos:end="77:19">buf_offset</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <name pos:start="77:23" pos:end="77:34">buf_consumed</name></expr>;</init> <condition pos:start="77:37" pos:end="77:58"><expr pos:start="77:37" pos:end="77:57"><name pos:start="77:37" pos:end="77:46">buf_offset</name> <operator pos:start="77:48" pos:end="77:48">&lt;</operator> <name pos:start="77:50" pos:end="77:57">buf_size</name></expr>;</condition> <incr pos:start="77:60" pos:end="77:71"><expr pos:start="77:60" pos:end="77:71"><name pos:start="77:60" pos:end="77:69">buf_offset</name><operator pos:start="77:70" pos:end="77:71">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:9" pos:end="81:18"><block_content pos:start="79:9" pos:end="81:18">

        <if_stmt pos:start="79:9" pos:end="81:18"><if pos:start="79:9" pos:end="81:18">if <condition pos:start="79:12" pos:end="79:28">(<expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:15">buf</name><index pos:start="79:16" pos:end="79:27">[<expr pos:start="79:17" pos:end="79:26"><name pos:start="79:17" pos:end="79:26">buf_offset</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:18"><block_content pos:start="81:13" pos:end="81:18">

            <break pos:start="81:13" pos:end="81:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>



    <return pos:start="85:5" pos:end="85:59">return <expr pos:start="85:12" pos:end="85:58"><ternary pos:start="85:12" pos:end="85:58"><condition pos:start="85:12" pos:end="85:34"><expr pos:start="85:12" pos:end="85:32"><name pos:start="85:12" pos:end="85:19">buf_size</name> <operator pos:start="85:21" pos:end="85:21">&gt;</operator> <name pos:start="85:23" pos:end="85:32">buf_offset</name></expr> ?</condition><then pos:start="85:36" pos:end="85:47"> <expr pos:start="85:36" pos:end="85:47"><name pos:start="85:36" pos:end="85:47">buf_consumed</name></expr> </then><else pos:start="85:49" pos:end="85:58">: <expr pos:start="85:51" pos:end="85:58"><name pos:start="85:51" pos:end="85:58">buf_size</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
