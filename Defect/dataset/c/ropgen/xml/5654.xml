<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5654.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">jpg_decode_data</name><parameter_list pos:start="1:27" pos:end="9:38">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">JPGContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">c</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:51"><decl pos:start="1:43" pos:end="1:51"><type pos:start="1:43" pos:end="1:51"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:51">width</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:63">height</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:45"><decl pos:start="3:28" pos:end="3:45"><type pos:start="3:28" pos:end="3:45"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">src</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:59"><decl pos:start="3:48" pos:end="3:59"><type pos:start="3:48" pos:end="3:59"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:59">src_size</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:39"><decl pos:start="5:28" pos:end="5:39"><type pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:34">uint8_t</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:39">dst</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:55"><decl pos:start="5:42" pos:end="5:55"><type pos:start="5:42" pos:end="5:55"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:55">dst_stride</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:46"><decl pos:start="7:28" pos:end="7:46"><type pos:start="7:28" pos:end="7:46"><specifier pos:start="7:28" pos:end="7:32">const</specifier> <name pos:start="7:34" pos:end="7:40">uint8_t</name> <modifier pos:start="7:42" pos:end="7:42">*</modifier></type><name pos:start="7:43" pos:end="7:46">mask</name></decl></parameter>, <parameter pos:start="7:49" pos:end="7:63"><decl pos:start="7:49" pos:end="7:63"><type pos:start="7:49" pos:end="7:63"><name pos:start="7:49" pos:end="7:51">int</name></type> <name pos:start="7:53" pos:end="7:63">mask_stride</name></decl></parameter>, <parameter pos:start="7:66" pos:end="7:76"><decl pos:start="7:66" pos:end="7:76"><type pos:start="7:66" pos:end="7:76"><name pos:start="7:66" pos:end="7:68">int</name></type> <name pos:start="7:70" pos:end="7:76">num_mbs</name></decl></parameter>,

                           <parameter pos:start="9:28" pos:end="9:37"><decl pos:start="9:28" pos:end="9:37"><type pos:start="9:28" pos:end="9:37"><name pos:start="9:28" pos:end="9:30">int</name></type> <name pos:start="9:32" pos:end="9:37">swapuv</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="159:1">{<block_content pos:start="13:5" pos:end="157:13">

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">mb_w</name></decl>, <decl pos:start="15:15" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:18">mb_h</name></decl>, <decl pos:start="15:21" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:24">mb_x</name></decl>, <decl pos:start="15:27" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:30">mb_y</name></decl>, <decl pos:start="15:33" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:33" pos:end="15:33">i</name></decl>, <decl pos:start="15:36" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:36" pos:end="15:36">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:10"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:10">bx</name></decl>, <decl pos:start="17:13" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:13" pos:end="17:14">by</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">unesc_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="29:19"><if pos:start="25:5" pos:end="29:19">if <condition pos:start="25:8" pos:end="27:73">(<expr pos:start="25:9" pos:end="27:72"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">ret</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="27:67"><name pos:start="25:16" pos:end="25:26">av_reallocp</name><argument_list pos:start="25:27" pos:end="27:67">(<argument pos:start="25:28" pos:end="25:34"><expr pos:start="25:28" pos:end="25:34"><operator pos:start="25:28" pos:end="25:28">&amp;</operator><name pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:29">c</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:34">buf</name></name></expr></argument>,

                           <argument pos:start="27:28" pos:end="27:66"><expr pos:start="27:28" pos:end="27:66"><name pos:start="27:28" pos:end="27:35">src_size</name> <operator pos:start="27:37" pos:end="27:37">+</operator> <name pos:start="27:39" pos:end="27:66">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="27:68" pos:end="27:68">)</operator> <operator pos:start="27:70" pos:end="27:70">&lt;</operator> <literal type="number" pos:start="27:72" pos:end="27:72">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:19"><block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><call pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:16">jpg_unescape</name><argument_list pos:start="31:17" pos:end="31:52">(<argument pos:start="31:18" pos:end="31:20"><expr pos:start="31:18" pos:end="31:20"><name pos:start="31:18" pos:end="31:20">src</name></expr></argument>, <argument pos:start="31:23" pos:end="31:30"><expr pos:start="31:23" pos:end="31:30"><name pos:start="31:23" pos:end="31:30">src_size</name></expr></argument>, <argument pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:33">c</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:38">buf</name></name></expr></argument>, <argument pos:start="31:41" pos:end="31:51"><expr pos:start="31:41" pos:end="31:51"><operator pos:start="31:41" pos:end="31:41">&amp;</operator><name pos:start="31:42" pos:end="31:51">unesc_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:65"><expr pos:start="33:5" pos:end="33:64"><call pos:start="33:5" pos:end="33:64"><name pos:start="33:5" pos:end="33:10">memset</name><argument_list pos:start="33:11" pos:end="33:64">(<argument pos:start="33:12" pos:end="33:30"><expr pos:start="33:12" pos:end="33:30"><name pos:start="33:12" pos:end="33:17"><name pos:start="33:12" pos:end="33:12">c</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:17">buf</name></name> <operator pos:start="33:19" pos:end="33:19">+</operator> <name pos:start="33:21" pos:end="33:30">unesc_size</name></expr></argument>, <argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><literal type="number" pos:start="33:33" pos:end="33:33">0</literal></expr></argument>, <argument pos:start="33:36" pos:end="33:63"><expr pos:start="33:36" pos:end="33:63"><name pos:start="33:36" pos:end="33:63">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:44"><expr pos:start="35:5" pos:end="35:43"><call pos:start="35:5" pos:end="35:43"><name pos:start="35:5" pos:end="35:18">init_get_bits8</name><argument_list pos:start="35:19" pos:end="35:43">(<argument pos:start="35:20" pos:end="35:22"><expr pos:start="35:20" pos:end="35:22"><operator pos:start="35:20" pos:end="35:20">&amp;</operator><name pos:start="35:21" pos:end="35:22">gb</name></expr></argument>, <argument pos:start="35:25" pos:end="35:30"><expr pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:25">c</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:30">buf</name></name></expr></argument>, <argument pos:start="35:33" pos:end="35:42"><expr pos:start="35:33" pos:end="35:42"><name pos:start="35:33" pos:end="35:42">unesc_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:9">width</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:19">FFALIGN</name><argument_list pos:start="39:20" pos:end="39:30">(<argument pos:start="39:21" pos:end="39:25"><expr pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:25">width</name></expr></argument>, <argument pos:start="39:28" pos:end="39:29"><expr pos:start="39:28" pos:end="39:29"><literal type="number" pos:start="39:28" pos:end="39:29">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:8">mb_w</name>  <operator pos:start="41:11" pos:end="41:11">=</operator>  <name pos:start="41:14" pos:end="41:18">width</name>        <operator pos:start="41:27" pos:end="41:28">&gt;&gt;</operator> <literal type="number" pos:start="41:30" pos:end="41:30">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:8">mb_h</name>  <operator pos:start="43:11" pos:end="43:11">=</operator> <operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:19">height</name> <operator pos:start="43:21" pos:end="43:21">+</operator> <literal type="number" pos:start="43:23" pos:end="43:24">15</literal><operator pos:start="43:25" pos:end="43:25">)</operator> <operator pos:start="43:27" pos:end="43:28">&gt;&gt;</operator> <literal type="number" pos:start="43:30" pos:end="43:30">4</literal></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="49:34"><if pos:start="47:5" pos:end="49:34">if <condition pos:start="47:8" pos:end="47:17">(<expr pos:start="47:9" pos:end="47:16"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:16">num_mbs</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:34"><block_content pos:start="49:9" pos:end="49:34">

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:15">num_mbs</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:22">mb_w</name> <operator pos:start="49:24" pos:end="49:24">*</operator> <name pos:start="49:26" pos:end="49:29">mb_h</name> <operator pos:start="49:31" pos:end="49:31">*</operator> <literal type="number" pos:start="49:33" pos:end="49:33">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="53:5" pos:end="55:29">for <control pos:start="53:9" pos:end="53:27">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:21"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <literal type="number" pos:start="53:21" pos:end="53:21">3</literal></expr>;</condition> <incr pos:start="53:24" pos:end="53:26"><expr pos:start="53:24" pos:end="53:26"><name pos:start="53:24" pos:end="53:24">i</name><operator pos:start="53:25" pos:end="53:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="55:9" pos:end="55:29"><block_content pos:start="55:9" pos:end="55:29">

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:9">c</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">prev_dc</name><index pos:start="55:19" pos:end="55:21">[<expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">i</name></expr>]</index></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="number" pos:start="55:25" pos:end="55:28">1024</literal></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="57:5" pos:end="59:11"><expr pos:start="57:5" pos:end="59:10"><name pos:start="57:5" pos:end="57:6">bx</name> <operator pos:start="57:8" pos:end="57:8">=</operator>

    <name pos:start="59:5" pos:end="59:6">by</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <literal type="number" pos:start="59:10" pos:end="59:10">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:38"><expr pos:start="61:5" pos:end="61:37"><call pos:start="61:5" pos:end="61:37"><name pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:5">c</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:11">bdsp</name><operator pos:start="61:12" pos:end="61:12">.</operator><name pos:start="61:13" pos:end="61:24">clear_blocks</name></name><argument_list pos:start="61:25" pos:end="61:37">(<argument pos:start="61:26" pos:end="61:36"><expr pos:start="61:26" pos:end="61:36"><name pos:start="61:26" pos:end="61:36"><name pos:start="61:26" pos:end="61:26">c</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:33">block</name><index pos:start="61:34" pos:end="61:36">[<expr pos:start="61:35" pos:end="61:35"><literal type="number" pos:start="61:35" pos:end="61:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="153:5">for <control pos:start="63:9" pos:end="63:39">(<init pos:start="63:10" pos:end="63:18"><expr pos:start="63:10" pos:end="63:17"><name pos:start="63:10" pos:end="63:13">mb_y</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <literal type="number" pos:start="63:17" pos:end="63:17">0</literal></expr>;</init> <condition pos:start="63:20" pos:end="63:31"><expr pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:23">mb_y</name> <operator pos:start="63:25" pos:end="63:25">&lt;</operator> <name pos:start="63:27" pos:end="63:30">mb_h</name></expr>;</condition> <incr pos:start="63:33" pos:end="63:38"><expr pos:start="63:33" pos:end="63:38"><name pos:start="63:33" pos:end="63:36">mb_y</name><operator pos:start="63:37" pos:end="63:38">++</operator></expr></incr>)</control> <block pos:start="63:41" pos:end="153:5">{<block_content pos:start="65:9" pos:end="151:36">

        <for pos:start="65:9" pos:end="143:9">for <control pos:start="65:13" pos:end="65:43">(<init pos:start="65:14" pos:end="65:22"><expr pos:start="65:14" pos:end="65:21"><name pos:start="65:14" pos:end="65:17">mb_x</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr>;</init> <condition pos:start="65:24" pos:end="65:35"><expr pos:start="65:24" pos:end="65:34"><name pos:start="65:24" pos:end="65:27">mb_x</name> <operator pos:start="65:29" pos:end="65:29">&lt;</operator> <name pos:start="65:31" pos:end="65:34">mb_w</name></expr>;</condition> <incr pos:start="65:37" pos:end="65:42"><expr pos:start="65:37" pos:end="65:42"><name pos:start="65:37" pos:end="65:40">mb_x</name><operator pos:start="65:41" pos:end="65:42">++</operator></expr></incr>)</control> <block pos:start="65:45" pos:end="143:9">{<block_content pos:start="67:13" pos:end="141:21">

            <if_stmt pos:start="67:13" pos:end="77:13"><if pos:start="67:13" pos:end="77:13">if <condition pos:start="67:16" pos:end="71:50">(<expr pos:start="67:17" pos:end="71:49"><name pos:start="67:17" pos:end="67:20">mask</name> <operator pos:start="67:22" pos:end="67:23">&amp;&amp;</operator> <operator pos:start="67:25" pos:end="67:25">!</operator><name pos:start="67:26" pos:end="67:39"><name pos:start="67:26" pos:end="67:29">mask</name><index pos:start="67:30" pos:end="67:39">[<expr pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:34">mb_x</name> <operator pos:start="67:36" pos:end="67:36">*</operator> <literal type="number" pos:start="67:38" pos:end="67:38">2</literal></expr>]</index></name> <operator pos:start="67:41" pos:end="67:42">&amp;&amp;</operator> <operator pos:start="67:44" pos:end="67:44">!</operator><name pos:start="67:45" pos:end="67:62"><name pos:start="67:45" pos:end="67:48">mask</name><index pos:start="67:49" pos:end="67:62">[<expr pos:start="67:50" pos:end="67:61"><name pos:start="67:50" pos:end="67:53">mb_x</name> <operator pos:start="67:55" pos:end="67:55">*</operator> <literal type="number" pos:start="67:57" pos:end="67:59">2</literal> <operator pos:start="67:59" pos:end="67:59">+</operator> <literal type="number" pos:start="67:61" pos:end="67:61">1</literal></expr>]</index></name> <operator pos:start="67:64" pos:end="67:65">&amp;&amp;</operator>

                <operator pos:start="69:17" pos:end="69:17">!</operator><name pos:start="69:18" pos:end="69:49"><name pos:start="69:18" pos:end="69:21">mask</name><index pos:start="69:22" pos:end="69:49">[<expr pos:start="69:23" pos:end="69:48"><name pos:start="69:23" pos:end="69:26">mb_x</name> <operator pos:start="69:28" pos:end="69:28">*</operator> <literal type="number" pos:start="69:30" pos:end="69:32">2</literal> <operator pos:start="69:32" pos:end="69:32">+</operator>     <name pos:start="69:38" pos:end="69:48">mask_stride</name></expr>]</index></name> <operator pos:start="69:51" pos:end="69:52">&amp;&amp;</operator>

                <operator pos:start="71:17" pos:end="71:17">!</operator><name pos:start="71:18" pos:end="71:49"><name pos:start="71:18" pos:end="71:21">mask</name><index pos:start="71:22" pos:end="71:49">[<expr pos:start="71:23" pos:end="71:48"><name pos:start="71:23" pos:end="71:26">mb_x</name> <operator pos:start="71:28" pos:end="71:28">*</operator> <literal type="number" pos:start="71:30" pos:end="71:32">2</literal> <operator pos:start="71:32" pos:end="71:32">+</operator> <literal type="number" pos:start="71:34" pos:end="71:36">1</literal> <operator pos:start="71:36" pos:end="71:36">+</operator> <name pos:start="71:38" pos:end="71:48">mask_stride</name></expr>]</index></name></expr>)</condition> <block pos:start="71:52" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:25">

                <expr_stmt pos:start="73:17" pos:end="73:25"><expr pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:18">bx</name> <operator pos:start="73:20" pos:end="73:21">+=</operator> <literal type="number" pos:start="73:23" pos:end="73:24">16</literal></expr>;</expr_stmt>

                <continue pos:start="75:17" pos:end="75:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <for pos:start="79:13" pos:end="99:13">for <control pos:start="79:17" pos:end="79:35">(<init pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:22"><name pos:start="79:18" pos:end="79:18">j</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</init> <condition pos:start="79:25" pos:end="79:30"><expr pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:25">j</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <literal type="number" pos:start="79:29" pos:end="79:29">2</literal></expr>;</condition> <incr pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><name pos:start="79:32" pos:end="79:32">j</name><operator pos:start="79:33" pos:end="79:34">++</operator></expr></incr>)</control> <block pos:start="79:37" pos:end="99:13">{<block_content pos:start="81:17" pos:end="97:17">

                <for pos:start="81:17" pos:end="97:17">for <control pos:start="81:21" pos:end="81:39">(<init pos:start="81:22" pos:end="81:27"><expr pos:start="81:22" pos:end="81:26"><name pos:start="81:22" pos:end="81:22">i</name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr>;</init> <condition pos:start="81:29" pos:end="81:34"><expr pos:start="81:29" pos:end="81:33"><name pos:start="81:29" pos:end="81:29">i</name> <operator pos:start="81:31" pos:end="81:31">&lt;</operator> <literal type="number" pos:start="81:33" pos:end="81:33">2</literal></expr>;</condition> <incr pos:start="81:36" pos:end="81:38"><expr pos:start="81:36" pos:end="81:38"><name pos:start="81:36" pos:end="81:36">i</name><operator pos:start="81:37" pos:end="81:38">++</operator></expr></incr>)</control> <block pos:start="81:41" pos:end="97:17">{<block_content pos:start="83:21" pos:end="95:54">

                    <if_stmt pos:start="83:21" pos:end="85:33"><if pos:start="83:21" pos:end="85:33">if <condition pos:start="83:24" pos:end="83:70">(<expr pos:start="83:25" pos:end="83:69"><name pos:start="83:25" pos:end="83:28">mask</name> <operator pos:start="83:30" pos:end="83:31">&amp;&amp;</operator> <operator pos:start="83:33" pos:end="83:33">!</operator><name pos:start="83:34" pos:end="83:69"><name pos:start="83:34" pos:end="83:37">mask</name><index pos:start="83:38" pos:end="83:69">[<expr pos:start="83:39" pos:end="83:68"><name pos:start="83:39" pos:end="83:42">mb_x</name> <operator pos:start="83:44" pos:end="83:44">*</operator> <literal type="number" pos:start="83:46" pos:end="83:48">2</literal> <operator pos:start="83:48" pos:end="83:48">+</operator> <name pos:start="83:50" pos:end="83:50">i</name> <operator pos:start="83:52" pos:end="83:52">+</operator> <name pos:start="83:54" pos:end="83:54">j</name> <operator pos:start="83:56" pos:end="83:56">*</operator> <name pos:start="83:58" pos:end="83:68">mask_stride</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="85:25" pos:end="85:33"><block_content pos:start="85:25" pos:end="85:33">

                        <continue pos:start="85:25" pos:end="85:33">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:30"><expr pos:start="87:21" pos:end="87:29"><name pos:start="87:21" pos:end="87:27">num_mbs</name><operator pos:start="87:28" pos:end="87:29">--</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="89:21" pos:end="93:35"><if pos:start="89:21" pos:end="93:35">if <condition pos:start="89:24" pos:end="91:75">(<expr pos:start="89:25" pos:end="91:74"><operator pos:start="89:25" pos:end="89:25">(</operator><name pos:start="89:26" pos:end="89:28">ret</name> <operator pos:start="89:30" pos:end="89:30">=</operator> <call pos:start="89:32" pos:end="91:68"><name pos:start="89:32" pos:end="89:47">jpg_decode_block</name><argument_list pos:start="89:48" pos:end="91:68">(<argument pos:start="89:49" pos:end="89:49"><expr pos:start="89:49" pos:end="89:49"><name pos:start="89:49" pos:end="89:49">c</name></expr></argument>, <argument pos:start="89:52" pos:end="89:54"><expr pos:start="89:52" pos:end="89:54"><operator pos:start="89:52" pos:end="89:52">&amp;</operator><name pos:start="89:53" pos:end="89:54">gb</name></expr></argument>, <argument pos:start="89:57" pos:end="89:57"><expr pos:start="89:57" pos:end="89:57"><literal type="number" pos:start="89:57" pos:end="89:57">0</literal></expr></argument>,

                                                <argument pos:start="91:49" pos:end="91:67"><expr pos:start="91:49" pos:end="91:67"><name pos:start="91:49" pos:end="91:67"><name pos:start="91:49" pos:end="91:49">c</name><operator pos:start="91:50" pos:end="91:51">-&gt;</operator><name pos:start="91:52" pos:end="91:56">block</name><index pos:start="91:57" pos:end="91:67">[<expr pos:start="91:58" pos:end="91:66"><name pos:start="91:58" pos:end="91:58">i</name> <operator pos:start="91:60" pos:end="91:60">+</operator> <name pos:start="91:62" pos:end="91:62">j</name> <operator pos:start="91:64" pos:end="91:64">*</operator> <literal type="number" pos:start="91:66" pos:end="91:66">2</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="91:69" pos:end="91:69">)</operator> <operator pos:start="91:71" pos:end="91:72">!=</operator> <literal type="number" pos:start="91:74" pos:end="91:74">0</literal></expr>)</condition><block type="pseudo" pos:start="93:25" pos:end="93:35"><block_content pos:start="93:25" pos:end="93:35">

                        <return pos:start="93:25" pos:end="93:35">return <expr pos:start="93:32" pos:end="93:34"><name pos:start="93:32" pos:end="93:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:54"><expr pos:start="95:21" pos:end="95:53"><call pos:start="95:21" pos:end="95:53"><name pos:start="95:21" pos:end="95:32"><name pos:start="95:21" pos:end="95:21">c</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:27">idsp</name><operator pos:start="95:28" pos:end="95:28">.</operator><name pos:start="95:29" pos:end="95:32">idct</name></name><argument_list pos:start="95:33" pos:end="95:53">(<argument pos:start="95:34" pos:end="95:52"><expr pos:start="95:34" pos:end="95:52"><name pos:start="95:34" pos:end="95:52"><name pos:start="95:34" pos:end="95:34">c</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:41">block</name><index pos:start="95:42" pos:end="95:52">[<expr pos:start="95:43" pos:end="95:51"><name pos:start="95:43" pos:end="95:43">i</name> <operator pos:start="95:45" pos:end="95:45">+</operator> <name pos:start="95:47" pos:end="95:47">j</name> <operator pos:start="95:49" pos:end="95:49">*</operator> <literal type="number" pos:start="95:51" pos:end="95:51">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <for pos:start="101:13" pos:end="109:13">for <control pos:start="101:17" pos:end="101:35">(<init pos:start="101:18" pos:end="101:23"><expr pos:start="101:18" pos:end="101:22"><name pos:start="101:18" pos:end="101:18">i</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <literal type="number" pos:start="101:22" pos:end="101:22">1</literal></expr>;</init> <condition pos:start="101:25" pos:end="101:30"><expr pos:start="101:25" pos:end="101:29"><name pos:start="101:25" pos:end="101:25">i</name> <operator pos:start="101:27" pos:end="101:27">&lt;</operator> <literal type="number" pos:start="101:29" pos:end="101:29">3</literal></expr>;</condition> <incr pos:start="101:32" pos:end="101:34"><expr pos:start="101:32" pos:end="101:34"><name pos:start="101:32" pos:end="101:32">i</name><operator pos:start="101:33" pos:end="101:34">++</operator></expr></incr>)</control> <block pos:start="101:37" pos:end="109:13">{<block_content pos:start="103:17" pos:end="107:46">

                <if_stmt pos:start="103:17" pos:end="105:31"><if pos:start="103:17" pos:end="105:31">if <condition pos:start="103:20" pos:end="103:78">(<expr pos:start="103:21" pos:end="103:77"><operator pos:start="103:21" pos:end="103:21">(</operator><name pos:start="103:22" pos:end="103:24">ret</name> <operator pos:start="103:26" pos:end="103:26">=</operator> <call pos:start="103:28" pos:end="103:71"><name pos:start="103:28" pos:end="103:43">jpg_decode_block</name><argument_list pos:start="103:44" pos:end="103:71">(<argument pos:start="103:45" pos:end="103:45"><expr pos:start="103:45" pos:end="103:45"><name pos:start="103:45" pos:end="103:45">c</name></expr></argument>, <argument pos:start="103:48" pos:end="103:50"><expr pos:start="103:48" pos:end="103:50"><operator pos:start="103:48" pos:end="103:48">&amp;</operator><name pos:start="103:49" pos:end="103:50">gb</name></expr></argument>, <argument pos:start="103:53" pos:end="103:53"><expr pos:start="103:53" pos:end="103:53"><name pos:start="103:53" pos:end="103:53">i</name></expr></argument>, <argument pos:start="103:56" pos:end="103:70"><expr pos:start="103:56" pos:end="103:70"><name pos:start="103:56" pos:end="103:70"><name pos:start="103:56" pos:end="103:56">c</name><operator pos:start="103:57" pos:end="103:58">-&gt;</operator><name pos:start="103:59" pos:end="103:63">block</name><index pos:start="103:64" pos:end="103:70">[<expr pos:start="103:65" pos:end="103:69"><name pos:start="103:65" pos:end="103:65">i</name> <operator pos:start="103:67" pos:end="103:67">+</operator> <literal type="number" pos:start="103:69" pos:end="103:69">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="103:72" pos:end="103:72">)</operator> <operator pos:start="103:74" pos:end="103:75">!=</operator> <literal type="number" pos:start="103:77" pos:end="103:77">0</literal></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="105:31"><block_content pos:start="105:21" pos:end="105:31">

                    <return pos:start="105:21" pos:end="105:31">return <expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:46"><expr pos:start="107:17" pos:end="107:45"><call pos:start="107:17" pos:end="107:45"><name pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:17">c</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:23">idsp</name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:28">idct</name></name><argument_list pos:start="107:29" pos:end="107:45">(<argument pos:start="107:30" pos:end="107:44"><expr pos:start="107:30" pos:end="107:44"><name pos:start="107:30" pos:end="107:44"><name pos:start="107:30" pos:end="107:30">c</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:37">block</name><index pos:start="107:38" pos:end="107:44">[<expr pos:start="107:39" pos:end="107:43"><name pos:start="107:39" pos:end="107:39">i</name> <operator pos:start="107:41" pos:end="107:41">+</operator> <literal type="number" pos:start="107:43" pos:end="107:43">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <for pos:start="113:13" pos:end="133:13">for <control pos:start="113:17" pos:end="113:36">(<init pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:22"><name pos:start="113:18" pos:end="113:18">j</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>;</init> <condition pos:start="113:25" pos:end="113:31"><expr pos:start="113:25" pos:end="113:30"><name pos:start="113:25" pos:end="113:25">j</name> <operator pos:start="113:27" pos:end="113:27">&lt;</operator> <literal type="number" pos:start="113:29" pos:end="113:30">16</literal></expr>;</condition> <incr pos:start="113:33" pos:end="113:35"><expr pos:start="113:33" pos:end="113:35"><name pos:start="113:33" pos:end="113:33">j</name><operator pos:start="113:34" pos:end="113:35">++</operator></expr></incr>)</control> <block pos:start="113:38" pos:end="133:13">{<block_content pos:start="115:17" pos:end="131:17">

                <decl_stmt pos:start="115:17" pos:end="115:68"><decl pos:start="115:17" pos:end="115:67"><type pos:start="115:17" pos:end="115:25"><name pos:start="115:17" pos:end="115:23">uint8_t</name> <modifier pos:start="115:25" pos:end="115:25">*</modifier></type><name pos:start="115:26" pos:end="115:28">out</name> <init pos:start="115:30" pos:end="115:67">= <expr pos:start="115:32" pos:end="115:67"><name pos:start="115:32" pos:end="115:34">dst</name> <operator pos:start="115:36" pos:end="115:36">+</operator> <name pos:start="115:38" pos:end="115:39">bx</name> <operator pos:start="115:41" pos:end="115:41">*</operator> <literal type="number" pos:start="115:43" pos:end="115:45">3</literal> <operator pos:start="115:45" pos:end="115:45">+</operator> <operator pos:start="115:47" pos:end="115:47">(</operator><name pos:start="115:48" pos:end="115:49">by</name> <operator pos:start="115:51" pos:end="115:51">+</operator> <name pos:start="115:53" pos:end="115:53">j</name><operator pos:start="115:54" pos:end="115:54">)</operator> <operator pos:start="115:56" pos:end="115:56">*</operator> <name pos:start="115:58" pos:end="115:67">dst_stride</name></expr></init></decl>;</decl_stmt>

                <for pos:start="117:17" pos:end="131:17">for <control pos:start="117:21" pos:end="117:40">(<init pos:start="117:22" pos:end="117:27"><expr pos:start="117:22" pos:end="117:26"><name pos:start="117:22" pos:end="117:22">i</name> <operator pos:start="117:24" pos:end="117:24">=</operator> <literal type="number" pos:start="117:26" pos:end="117:26">0</literal></expr>;</init> <condition pos:start="117:29" pos:end="117:35"><expr pos:start="117:29" pos:end="117:34"><name pos:start="117:29" pos:end="117:29">i</name> <operator pos:start="117:31" pos:end="117:31">&lt;</operator> <literal type="number" pos:start="117:33" pos:end="117:34">16</literal></expr>;</condition> <incr pos:start="117:37" pos:end="117:39"><expr pos:start="117:37" pos:end="117:39"><name pos:start="117:37" pos:end="117:37">i</name><operator pos:start="117:38" pos:end="117:39">++</operator></expr></incr>)</control> <block pos:start="117:42" pos:end="131:17">{<block_content pos:start="119:21" pos:end="129:50">

                    <decl_stmt pos:start="119:21" pos:end="119:32"><decl pos:start="119:21" pos:end="119:25"><type pos:start="119:21" pos:end="119:23"><name pos:start="119:21" pos:end="119:23">int</name></type> <name pos:start="119:25" pos:end="119:25">Y</name></decl>, <decl pos:start="119:28" pos:end="119:28"><type ref="prev" pos:start="119:21" pos:end="119:23"/><name pos:start="119:28" pos:end="119:28">U</name></decl>, <decl pos:start="119:31" pos:end="119:31"><type ref="prev" pos:start="119:21" pos:end="119:23"/><name pos:start="119:31" pos:end="119:31">V</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="123:21" pos:end="123:81"><expr pos:start="123:21" pos:end="123:80"><name pos:start="123:21" pos:end="123:21">Y</name> <operator pos:start="123:23" pos:end="123:23">=</operator> <name pos:start="123:25" pos:end="123:80"><name pos:start="123:25" pos:end="123:25">c</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:32">block</name><index pos:start="123:33" pos:end="123:57">[<expr pos:start="123:34" pos:end="123:56"><operator pos:start="123:34" pos:end="123:34">(</operator><name pos:start="123:35" pos:end="123:35">j</name> <operator pos:start="123:37" pos:end="123:38">&gt;&gt;</operator> <literal type="number" pos:start="123:40" pos:end="123:40">3</literal><operator pos:start="123:41" pos:end="123:41">)</operator> <operator pos:start="123:43" pos:end="123:43">*</operator> <literal type="number" pos:start="123:45" pos:end="123:47">2</literal> <operator pos:start="123:47" pos:end="123:47">+</operator> <operator pos:start="123:49" pos:end="123:49">(</operator><name pos:start="123:50" pos:end="123:50">i</name> <operator pos:start="123:52" pos:end="123:53">&gt;&gt;</operator> <literal type="number" pos:start="123:55" pos:end="123:55">3</literal><operator pos:start="123:56" pos:end="123:56">)</operator></expr>]</index><index pos:start="123:58" pos:end="123:80">[<expr pos:start="123:59" pos:end="123:79"><operator pos:start="123:59" pos:end="123:59">(</operator><name pos:start="123:60" pos:end="123:60">i</name> <operator pos:start="123:62" pos:end="123:62">&amp;</operator> <literal type="number" pos:start="123:64" pos:end="123:64">7</literal><operator pos:start="123:65" pos:end="123:65">)</operator> <operator pos:start="123:67" pos:end="123:67">+</operator> <operator pos:start="123:69" pos:end="123:69">(</operator><name pos:start="123:70" pos:end="123:70">j</name> <operator pos:start="123:72" pos:end="123:72">&amp;</operator> <literal type="number" pos:start="123:74" pos:end="123:74">7</literal><operator pos:start="123:75" pos:end="123:75">)</operator> <operator pos:start="123:77" pos:end="123:77">*</operator> <literal type="number" pos:start="123:79" pos:end="123:79">8</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="125:21" pos:end="125:76"><expr pos:start="125:21" pos:end="125:75"><name pos:start="125:21" pos:end="125:21">U</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:69"><name pos:start="125:25" pos:end="125:25">c</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:32">block</name><index pos:start="125:33" pos:end="125:44">[<expr pos:start="125:34" pos:end="125:43"><literal type="number" pos:start="125:34" pos:end="125:34">4</literal> <operator pos:start="125:36" pos:end="125:36">^</operator> <name pos:start="125:38" pos:end="125:43">swapuv</name></expr>]</index><index pos:start="125:45" pos:end="125:69">[<expr pos:start="125:46" pos:end="125:68"><operator pos:start="125:46" pos:end="125:46">(</operator><name pos:start="125:47" pos:end="125:47">i</name> <operator pos:start="125:49" pos:end="125:50">&gt;&gt;</operator> <literal type="number" pos:start="125:52" pos:end="125:52">1</literal><operator pos:start="125:53" pos:end="125:53">)</operator> <operator pos:start="125:55" pos:end="125:55">+</operator> <operator pos:start="125:57" pos:end="125:57">(</operator><name pos:start="125:58" pos:end="125:58">j</name> <operator pos:start="125:60" pos:end="125:61">&gt;&gt;</operator> <literal type="number" pos:start="125:63" pos:end="125:63">1</literal><operator pos:start="125:64" pos:end="125:64">)</operator> <operator pos:start="125:66" pos:end="125:66">*</operator> <literal type="number" pos:start="125:68" pos:end="125:68">8</literal></expr>]</index></name> <operator pos:start="125:71" pos:end="125:71">-</operator> <literal type="number" pos:start="125:73" pos:end="125:75">128</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="127:21" pos:end="127:76"><expr pos:start="127:21" pos:end="127:75"><name pos:start="127:21" pos:end="127:21">V</name> <operator pos:start="127:23" pos:end="127:23">=</operator> <name pos:start="127:25" pos:end="127:69"><name pos:start="127:25" pos:end="127:25">c</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:32">block</name><index pos:start="127:33" pos:end="127:44">[<expr pos:start="127:34" pos:end="127:43"><literal type="number" pos:start="127:34" pos:end="127:34">5</literal> <operator pos:start="127:36" pos:end="127:36">^</operator> <name pos:start="127:38" pos:end="127:43">swapuv</name></expr>]</index><index pos:start="127:45" pos:end="127:69">[<expr pos:start="127:46" pos:end="127:68"><operator pos:start="127:46" pos:end="127:46">(</operator><name pos:start="127:47" pos:end="127:47">i</name> <operator pos:start="127:49" pos:end="127:50">&gt;&gt;</operator> <literal type="number" pos:start="127:52" pos:end="127:52">1</literal><operator pos:start="127:53" pos:end="127:53">)</operator> <operator pos:start="127:55" pos:end="127:55">+</operator> <operator pos:start="127:57" pos:end="127:57">(</operator><name pos:start="127:58" pos:end="127:58">j</name> <operator pos:start="127:60" pos:end="127:61">&gt;&gt;</operator> <literal type="number" pos:start="127:63" pos:end="127:63">1</literal><operator pos:start="127:64" pos:end="127:64">)</operator> <operator pos:start="127:66" pos:end="127:66">*</operator> <literal type="number" pos:start="127:68" pos:end="127:68">8</literal></expr>]</index></name> <operator pos:start="127:71" pos:end="127:71">-</operator> <literal type="number" pos:start="127:73" pos:end="127:75">128</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="129:21" pos:end="129:50"><expr pos:start="129:21" pos:end="129:49"><call pos:start="129:21" pos:end="129:49"><name pos:start="129:21" pos:end="129:27">yuv2rgb</name><argument_list pos:start="129:28" pos:end="129:49">(<argument pos:start="129:29" pos:end="129:39"><expr pos:start="129:29" pos:end="129:39"><name pos:start="129:29" pos:end="129:31">out</name> <operator pos:start="129:33" pos:end="129:33">+</operator> <name pos:start="129:35" pos:end="129:35">i</name> <operator pos:start="129:37" pos:end="129:37">*</operator> <literal type="number" pos:start="129:39" pos:end="129:39">3</literal></expr></argument>, <argument pos:start="129:42" pos:end="129:42"><expr pos:start="129:42" pos:end="129:42"><name pos:start="129:42" pos:end="129:42">Y</name></expr></argument>, <argument pos:start="129:45" pos:end="129:45"><expr pos:start="129:45" pos:end="129:45"><name pos:start="129:45" pos:end="129:45">U</name></expr></argument>, <argument pos:start="129:48" pos:end="129:48"><expr pos:start="129:48" pos:end="129:48"><name pos:start="129:48" pos:end="129:48">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <if_stmt pos:start="137:13" pos:end="139:25"><if pos:start="137:13" pos:end="139:25">if <condition pos:start="137:16" pos:end="137:25">(<expr pos:start="137:17" pos:end="137:24"><operator pos:start="137:17" pos:end="137:17">!</operator><name pos:start="137:18" pos:end="137:24">num_mbs</name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:25"><block_content pos:start="139:17" pos:end="139:25">

                <return pos:start="139:17" pos:end="139:25">return <expr pos:start="139:24" pos:end="139:24"><literal type="number" pos:start="139:24" pos:end="139:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:21"><expr pos:start="141:13" pos:end="141:20"><name pos:start="141:13" pos:end="141:14">bx</name> <operator pos:start="141:16" pos:end="141:17">+=</operator> <literal type="number" pos:start="141:19" pos:end="141:20">16</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="145:9" pos:end="145:16"><expr pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:10">bx</name>  <operator pos:start="145:13" pos:end="145:13">=</operator> <literal type="number" pos:start="145:15" pos:end="145:15">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:17"><expr pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:10">by</name> <operator pos:start="147:12" pos:end="147:13">+=</operator> <literal type="number" pos:start="147:15" pos:end="147:16">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="151:36"><if pos:start="149:9" pos:end="151:36">if <condition pos:start="149:12" pos:end="149:17">(<expr pos:start="149:13" pos:end="149:16"><name pos:start="149:13" pos:end="149:16">mask</name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:36"><block_content pos:start="151:13" pos:end="151:36">

            <expr_stmt pos:start="151:13" pos:end="151:36"><expr pos:start="151:13" pos:end="151:35"><name pos:start="151:13" pos:end="151:16">mask</name> <operator pos:start="151:18" pos:end="151:19">+=</operator> <name pos:start="151:21" pos:end="151:31">mask_stride</name> <operator pos:start="151:33" pos:end="151:33">*</operator> <literal type="number" pos:start="151:35" pos:end="151:35">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="157:5" pos:end="157:13">return <expr pos:start="157:12" pos:end="157:12"><literal type="number" pos:start="157:12" pos:end="157:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
