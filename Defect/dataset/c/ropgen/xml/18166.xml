<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18166.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:32">ff_hpeldsp_init_x86</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:47">HpelDSPContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">c</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:61">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:53">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">cpu_flags</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><call pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:36">av_get_cpu_flags</name><argument_list pos:start="5:37" pos:end="5:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:35"><if pos:start="9:5" pos:end="11:35">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:18">INLINE_MMX</name><argument_list pos:start="9:19" pos:end="9:29">(<argument pos:start="9:20" pos:end="9:28"><expr pos:start="9:20" pos:end="9:28"><name pos:start="9:20" pos:end="9:28">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:35"><block_content pos:start="11:9" pos:end="11:35">

        <expr_stmt pos:start="11:9" pos:end="11:35"><expr pos:start="11:9" pos:end="11:34"><call pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:24">hpeldsp_init_mmx</name><argument_list pos:start="11:25" pos:end="11:34">(<argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><name pos:start="11:26" pos:end="11:26">c</name></expr></argument>, <argument pos:start="11:29" pos:end="11:33"><expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:33">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="17:37"><if pos:start="15:5" pos:end="17:37">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:25">EXTERNAL_AMD3DNOW</name><argument_list pos:start="15:26" pos:end="15:36">(<argument pos:start="15:27" pos:end="15:35"><expr pos:start="15:27" pos:end="15:35"><name pos:start="15:27" pos:end="15:35">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:37"><block_content pos:start="17:9" pos:end="17:37">

        <expr_stmt pos:start="17:9" pos:end="17:37"><expr pos:start="17:9" pos:end="17:36"><call pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:26">hpeldsp_init_3dnow</name><argument_list pos:start="17:27" pos:end="17:36">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">c</name></expr></argument>, <argument pos:start="17:31" pos:end="17:35"><expr pos:start="17:31" pos:end="17:35"><name pos:start="17:31" pos:end="17:35">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="23:38"><if pos:start="21:5" pos:end="23:38">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><call pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:23">EXTERNAL_MMXEXT</name><argument_list pos:start="21:24" pos:end="21:34">(<argument pos:start="21:25" pos:end="21:33"><expr pos:start="21:25" pos:end="21:33"><name pos:start="21:25" pos:end="21:33">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:38"><block_content pos:start="23:9" pos:end="23:38">

        <expr_stmt pos:start="23:9" pos:end="23:38"><expr pos:start="23:9" pos:end="23:37"><call pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:27">hpeldsp_init_mmxext</name><argument_list pos:start="23:28" pos:end="23:37">(<argument pos:start="23:29" pos:end="23:29"><expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">c</name></expr></argument>, <argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><name pos:start="23:32" pos:end="23:36">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:41"><if pos:start="27:5" pos:end="29:41">if <condition pos:start="27:8" pos:end="27:38">(<expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:26">EXTERNAL_SSE2_FAST</name><argument_list pos:start="27:27" pos:end="27:37">(<argument pos:start="27:28" pos:end="27:36"><expr pos:start="27:28" pos:end="27:36"><name pos:start="27:28" pos:end="27:36">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:41"><block_content pos:start="29:9" pos:end="29:41">

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:30">hpeldsp_init_sse2_fast</name><argument_list pos:start="29:31" pos:end="29:40">(<argument pos:start="29:32" pos:end="29:32"><expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">c</name></expr></argument>, <argument pos:start="29:35" pos:end="29:39"><expr pos:start="29:35" pos:end="29:39"><name pos:start="29:35" pos:end="29:39">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:53"><if pos:start="33:5" pos:end="35:53">if <condition pos:start="33:8" pos:end="33:27">(<expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:26">CONFIG_VP3_DECODER</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:53"><block_content pos:start="35:9" pos:end="35:53">

        <expr_stmt pos:start="35:9" pos:end="35:53"><expr pos:start="35:9" pos:end="35:52"><call pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:31">ff_hpeldsp_vp3_init_x86</name><argument_list pos:start="35:32" pos:end="35:52">(<argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">c</name></expr></argument>, <argument pos:start="35:36" pos:end="35:44"><expr pos:start="35:36" pos:end="35:44"><name pos:start="35:36" pos:end="35:44">cpu_flags</name></expr></argument>, <argument pos:start="35:47" pos:end="35:51"><expr pos:start="35:47" pos:end="35:51"><name pos:start="35:47" pos:end="35:51">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
