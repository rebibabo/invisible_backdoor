<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20677.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">ff_mpeg4_encode_picture_header</name><parameter_list pos:start="1:35" pos:end="1:73">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:49">MpegEncContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:72"><decl pos:start="1:55" pos:end="1:72"><type pos:start="1:55" pos:end="1:72"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:72">picture_number</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">time_incr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">time_div</name></decl>, <decl pos:start="7:19" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:26">time_mod</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="29:5"><if pos:start="11:5" pos:end="29:5">if <condition pos:start="11:8" pos:end="11:42">(<expr pos:start="11:9" pos:end="11:41"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:20">pict_type</name></name> <operator pos:start="11:22" pos:end="11:23">==</operator> <name pos:start="11:25" pos:end="11:41">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="11:44" pos:end="29:5">{<block_content pos:start="13:9" pos:end="27:39">

        <if_stmt pos:start="13:9" pos:end="23:9"><if pos:start="13:9" pos:end="23:9">if <condition pos:start="13:12" pos:end="13:61">(<expr pos:start="13:13" pos:end="13:60"><operator pos:start="13:13" pos:end="13:13">!</operator><operator pos:start="13:14" pos:end="13:14">(</operator><name pos:start="13:15" pos:end="13:29"><name pos:start="13:15" pos:end="13:15">s</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:22">avctx</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:29">flags</name></name> <operator pos:start="13:31" pos:end="13:31">&amp;</operator> <name pos:start="13:33" pos:end="13:59">AV_CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="13:60" pos:end="13:60">)</operator></expr>)</condition> <block pos:start="13:63" pos:end="23:9">{<block_content pos:start="15:13" pos:end="21:49">

            <if_stmt pos:start="15:13" pos:end="17:53"><if pos:start="15:13" pos:end="17:53">if <condition pos:start="15:16" pos:end="15:69">(<expr pos:start="15:17" pos:end="15:68"><name pos:start="15:17" pos:end="15:40"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:40">strict_std_compliance</name></name> <operator pos:start="15:42" pos:end="15:42">&lt;</operator> <name pos:start="15:44" pos:end="15:68">FF_COMPLIANCE_VERY_STRICT</name></expr>)</condition><block type="pseudo" pos:start="17:17" pos:end="17:53"><block_content pos:start="17:17" pos:end="17:53">  <comment type="line" pos:start="15:72" pos:end="15:105">// HACK, the reference sw is buggy</comment>

                <expr_stmt pos:start="17:17" pos:end="17:53"><expr pos:start="17:17" pos:end="17:52"><call pos:start="17:17" pos:end="17:52"><name pos:start="17:17" pos:end="17:49">mpeg4_encode_visual_object_header</name><argument_list pos:start="17:50" pos:end="17:52">(<argument pos:start="17:51" pos:end="17:51"><expr pos:start="17:51" pos:end="17:51"><name pos:start="17:51" pos:end="17:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="19:13" pos:end="21:49"><if pos:start="19:13" pos:end="21:49">if <condition pos:start="19:16" pos:end="19:92">(<expr pos:start="19:17" pos:end="19:91"><name pos:start="19:17" pos:end="19:40"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:40">strict_std_compliance</name></name> <operator pos:start="19:42" pos:end="19:42">&lt;</operator> <name pos:start="19:44" pos:end="19:68">FF_COMPLIANCE_VERY_STRICT</name> <operator pos:start="19:70" pos:end="19:71">||</operator> <name pos:start="19:73" pos:end="19:86">picture_number</name> <operator pos:start="19:88" pos:end="19:89">==</operator> <literal type="number" pos:start="19:91" pos:end="19:91">0</literal></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:49"><block_content pos:start="21:17" pos:end="21:49">  <comment type="line" pos:start="19:95" pos:end="19:128">// HACK, the reference sw is buggy</comment>

                <expr_stmt pos:start="21:17" pos:end="21:49"><expr pos:start="21:17" pos:end="21:48"><call pos:start="21:17" pos:end="21:48"><name pos:start="21:17" pos:end="21:39">mpeg4_encode_vol_header</name><argument_list pos:start="21:40" pos:end="21:48">(<argument pos:start="21:41" pos:end="21:41"><expr pos:start="21:41" pos:end="21:41"><name pos:start="21:41" pos:end="21:41">s</name></expr></argument>, <argument pos:start="21:44" pos:end="21:44"><expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">0</literal></expr></argument>, <argument pos:start="21:47" pos:end="21:47"><expr pos:start="21:47" pos:end="21:47"><literal type="number" pos:start="21:47" pos:end="21:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="27:39"><if pos:start="25:9" pos:end="27:39">if <condition pos:start="25:12" pos:end="25:46">(<expr pos:start="25:13" pos:end="25:45"><operator pos:start="25:13" pos:end="25:13">!</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:32"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:32">workaround_bugs</name></name> <operator pos:start="25:34" pos:end="25:34">&amp;</operator> <name pos:start="25:36" pos:end="25:44">FF_BUG_MS</name><operator pos:start="25:45" pos:end="25:45">)</operator></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:39"><block_content pos:start="27:13" pos:end="27:39">

            <expr_stmt pos:start="27:13" pos:end="27:39"><expr pos:start="27:13" pos:end="27:38"><call pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:35">mpeg4_encode_gop_header</name><argument_list pos:start="27:36" pos:end="27:38">(<argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><name pos:start="27:37" pos:end="27:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:85"><expr pos:start="33:5" pos:end="33:84"><name pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:24">partitioned_frame</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:47"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:47">data_partitioning</name></name> <operator pos:start="33:49" pos:end="33:50">&amp;&amp;</operator> <name pos:start="33:52" pos:end="33:63"><name pos:start="33:52" pos:end="33:52">s</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:63">pict_type</name></name> <operator pos:start="33:65" pos:end="33:66">!=</operator> <name pos:start="33:68" pos:end="33:84">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><call pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:12">put_bits</name><argument_list pos:start="37:13" pos:end="37:27">(<argument pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:19"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:19"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:19">pb</name></name></expr></argument>, <argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><literal type="number" pos:start="37:22" pos:end="37:23">16</literal></expr></argument>, <argument pos:start="37:26" pos:end="37:26"><expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                <comment type="block" pos:start="37:45" pos:end="37:60">/* vop header */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><call pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:12">put_bits</name><argument_list pos:start="39:13" pos:end="39:39">(<argument pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:19"><operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:19">pb</name></name></expr></argument>, <argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><literal type="number" pos:start="39:22" pos:end="39:23">16</literal></expr></argument>, <argument pos:start="39:26" pos:end="39:38"><expr pos:start="39:26" pos:end="39:38"><name pos:start="39:26" pos:end="39:38">VOP_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="39:45" pos:end="39:60">/* vop header */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><call pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:12">put_bits</name><argument_list pos:start="41:13" pos:end="41:41">(<argument pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:19"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">pb</name></name></expr></argument>, <argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">2</literal></expr></argument>, <argument pos:start="41:25" pos:end="41:40"><expr pos:start="41:25" pos:end="41:40"><name pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:36">pict_type</name></name> <operator pos:start="41:38" pos:end="41:38">-</operator> <literal type="number" pos:start="41:40" pos:end="41:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="41:45" pos:end="41:74">/* pict type: I = 0 , P = 1 */</comment>



    <expr_stmt pos:start="45:5" pos:end="45:57"><expr pos:start="45:5" pos:end="45:56"><name pos:start="45:5" pos:end="45:12">time_div</name>  <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:56"><name pos:start="45:17" pos:end="45:22">FFUDIV</name><argument_list pos:start="45:23" pos:end="45:56">(<argument pos:start="45:24" pos:end="45:30"><expr pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:30">time</name></name></expr></argument>, <argument pos:start="45:33" pos:end="45:55"><expr pos:start="45:33" pos:end="45:55"><name pos:start="45:33" pos:end="45:55"><name pos:start="45:33" pos:end="45:33">s</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:40">avctx</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:51">time_base</name><operator pos:start="45:52" pos:end="45:52">.</operator><name pos:start="45:53" pos:end="45:55">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:57"><expr pos:start="47:5" pos:end="47:56"><name pos:start="47:5" pos:end="47:12">time_mod</name>  <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:56"><name pos:start="47:17" pos:end="47:22">FFUMOD</name><argument_list pos:start="47:23" pos:end="47:56">(<argument pos:start="47:24" pos:end="47:30"><expr pos:start="47:24" pos:end="47:30"><name pos:start="47:24" pos:end="47:30"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:30">time</name></name></expr></argument>, <argument pos:start="47:33" pos:end="47:55"><expr pos:start="47:33" pos:end="47:55"><name pos:start="47:33" pos:end="47:55"><name pos:start="47:33" pos:end="47:33">s</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:40">avctx</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:51">time_base</name><operator pos:start="47:52" pos:end="47:52">.</operator><name pos:start="47:53" pos:end="47:55">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:13">time_incr</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:24">time_div</name> <operator pos:start="49:26" pos:end="49:26">-</operator> <name pos:start="49:28" pos:end="49:44"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:44">last_time_base</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><call pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:14">av_assert0</name><argument_list pos:start="51:15" pos:end="51:30">(<argument pos:start="51:16" pos:end="51:29"><expr pos:start="51:16" pos:end="51:29"><name pos:start="51:16" pos:end="51:24">time_incr</name> <operator pos:start="51:26" pos:end="51:27">&gt;=</operator> <literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="55:5" pos:end="55:51">// This limits the frame duration to max 1 hour</comment>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:25">(<expr pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:17">time_incr</name> <operator pos:start="57:19" pos:end="57:19">&gt;</operator> <literal type="number" pos:start="57:21" pos:end="57:24">3600</literal></expr>)</condition> <block pos:start="57:27" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:31">

        <expr_stmt pos:start="59:9" pos:end="59:78"><expr pos:start="59:9" pos:end="59:77"><call pos:start="59:9" pos:end="59:77"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:77">(<argument pos:start="59:16" pos:end="59:23"><expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">avctx</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:37"><expr pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:40" pos:end="59:65"><expr pos:start="59:40" pos:end="59:65"><literal type="string" pos:start="59:40" pos:end="59:65">"time_incr %d too large\n"</literal></expr></argument>, <argument pos:start="59:68" pos:end="59:76"><expr pos:start="59:68" pos:end="59:76"><name pos:start="59:68" pos:end="59:76">time_incr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:31">return <expr pos:start="61:16" pos:end="61:30"><call pos:start="61:16" pos:end="61:30"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <while pos:start="65:5" pos:end="67:31">while <condition pos:start="65:11" pos:end="65:23">(<expr pos:start="65:12" pos:end="65:22"><name pos:start="65:12" pos:end="65:20">time_incr</name><operator pos:start="65:21" pos:end="65:22">--</operator></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:31"><block_content pos:start="67:9" pos:end="67:31">

        <expr_stmt pos:start="67:9" pos:end="67:31"><expr pos:start="67:9" pos:end="67:30"><call pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:16">put_bits</name><argument_list pos:start="67:17" pos:end="67:30">(<argument pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:23"><operator pos:start="67:18" pos:end="67:18">&amp;</operator><name pos:start="67:19" pos:end="67:23"><name pos:start="67:19" pos:end="67:19">s</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:23">pb</name></name></expr></argument>, <argument pos:start="67:26" pos:end="67:26"><expr pos:start="67:26" pos:end="67:26"><literal type="number" pos:start="67:26" pos:end="67:26">1</literal></expr></argument>, <argument pos:start="67:29" pos:end="67:29"><expr pos:start="67:29" pos:end="67:29"><literal type="number" pos:start="67:29" pos:end="67:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="71:5" pos:end="71:27"><expr pos:start="71:5" pos:end="71:26"><call pos:start="71:5" pos:end="71:26"><name pos:start="71:5" pos:end="71:12">put_bits</name><argument_list pos:start="71:13" pos:end="71:26">(<argument pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:19"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:19"><name pos:start="71:15" pos:end="71:15">s</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:19">pb</name></name></expr></argument>, <argument pos:start="71:22" pos:end="71:22"><expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">1</literal></expr></argument>, <argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:27"><expr pos:start="75:5" pos:end="75:26"><call pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:12">put_bits</name><argument_list pos:start="75:13" pos:end="75:26">(<argument pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:19"><operator pos:start="75:14" pos:end="75:14">&amp;</operator><name pos:start="75:15" pos:end="75:19"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:19">pb</name></name></expr></argument>, <argument pos:start="75:22" pos:end="75:22"><expr pos:start="75:22" pos:end="75:22"><literal type="number" pos:start="75:22" pos:end="75:22">1</literal></expr></argument>, <argument pos:start="75:25" pos:end="75:25"><expr pos:start="75:25" pos:end="75:25"><literal type="number" pos:start="75:25" pos:end="75:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="block" pos:start="75:57" pos:end="75:68">/* marker */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:55"><expr pos:start="77:5" pos:end="77:54"><call pos:start="77:5" pos:end="77:54"><name pos:start="77:5" pos:end="77:12">put_bits</name><argument_list pos:start="77:13" pos:end="77:54">(<argument pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:19"><operator pos:start="77:14" pos:end="77:14">&amp;</operator><name pos:start="77:15" pos:end="77:19"><name pos:start="77:15" pos:end="77:15">s</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:19">pb</name></name></expr></argument>, <argument pos:start="77:22" pos:end="77:43"><expr pos:start="77:22" pos:end="77:43"><name pos:start="77:22" pos:end="77:43"><name pos:start="77:22" pos:end="77:22">s</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:43">time_increment_bits</name></name></expr></argument>, <argument pos:start="77:46" pos:end="77:53"><expr pos:start="77:46" pos:end="77:53"><name pos:start="77:46" pos:end="77:53">time_mod</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="77:57" pos:end="77:76">/* time increment */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:27"><expr pos:start="79:5" pos:end="79:26"><call pos:start="79:5" pos:end="79:26"><name pos:start="79:5" pos:end="79:12">put_bits</name><argument_list pos:start="79:13" pos:end="79:26">(<argument pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:19"><operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:19"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:19">pb</name></name></expr></argument>, <argument pos:start="79:22" pos:end="79:22"><expr pos:start="79:22" pos:end="79:22"><literal type="number" pos:start="79:22" pos:end="79:22">1</literal></expr></argument>, <argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="block" pos:start="79:57" pos:end="79:68">/* marker */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><call pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:12">put_bits</name><argument_list pos:start="81:13" pos:end="81:26">(<argument pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:19"><operator pos:start="81:14" pos:end="81:14">&amp;</operator><name pos:start="81:15" pos:end="81:19"><name pos:start="81:15" pos:end="81:15">s</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:19">pb</name></name></expr></argument>, <argument pos:start="81:22" pos:end="81:22"><expr pos:start="81:22" pos:end="81:22"><literal type="number" pos:start="81:22" pos:end="81:22">1</literal></expr></argument>, <argument pos:start="81:25" pos:end="81:25"><expr pos:start="81:25" pos:end="81:25"><literal type="number" pos:start="81:25" pos:end="81:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="block" pos:start="81:57" pos:end="81:71">/* vop coded */</comment>

    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:42">(<expr pos:start="83:9" pos:end="83:41"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:20">pict_type</name></name> <operator pos:start="83:22" pos:end="83:23">==</operator> <name pos:start="83:25" pos:end="83:41">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="83:44" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:44">

        <expr_stmt pos:start="85:9" pos:end="85:44"><expr pos:start="85:9" pos:end="85:43"><call pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:16">put_bits</name><argument_list pos:start="85:17" pos:end="85:43">(<argument pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:23"><operator pos:start="85:18" pos:end="85:18">&amp;</operator><name pos:start="85:19" pos:end="85:23"><name pos:start="85:19" pos:end="85:19">s</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:23">pb</name></name></expr></argument>, <argument pos:start="85:26" pos:end="85:26"><expr pos:start="85:26" pos:end="85:26"><literal type="number" pos:start="85:26" pos:end="85:26">1</literal></expr></argument>, <argument pos:start="85:29" pos:end="85:42"><expr pos:start="85:29" pos:end="85:42"><name pos:start="85:29" pos:end="85:42"><name pos:start="85:29" pos:end="85:29">s</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:42">no_rounding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="85:49" pos:end="85:67">/* rounding type */</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:27"><expr pos:start="89:5" pos:end="89:26"><call pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:12">put_bits</name><argument_list pos:start="89:13" pos:end="89:26">(<argument pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:19"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:19"><name pos:start="89:15" pos:end="89:15">s</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:19">pb</name></name></expr></argument>, <argument pos:start="89:22" pos:end="89:22"><expr pos:start="89:22" pos:end="89:22"><literal type="number" pos:start="89:22" pos:end="89:22">3</literal></expr></argument>, <argument pos:start="89:25" pos:end="89:25"><expr pos:start="89:25" pos:end="89:25"><literal type="number" pos:start="89:25" pos:end="89:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="89:33" pos:end="89:60">/* intra dc VLC threshold */</comment>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:33">(<expr pos:start="91:9" pos:end="91:32"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:32"><name pos:start="91:10" pos:end="91:10">s</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:32">progressive_sequence</name></name></expr>)</condition> <block pos:start="91:35" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:47">

        <expr_stmt pos:start="93:9" pos:end="93:72"><expr pos:start="93:9" pos:end="93:71"><call pos:start="93:9" pos:end="93:71"><name pos:start="93:9" pos:end="93:16">put_bits</name><argument_list pos:start="93:17" pos:end="93:71">(<argument pos:start="93:18" pos:end="93:23"><expr pos:start="93:18" pos:end="93:23"><operator pos:start="93:18" pos:end="93:18">&amp;</operator><name pos:start="93:19" pos:end="93:23"><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:23">pb</name></name></expr></argument>, <argument pos:start="93:26" pos:end="93:26"><expr pos:start="93:26" pos:end="93:26"><literal type="number" pos:start="93:26" pos:end="93:26">1</literal></expr></argument>, <argument pos:start="93:29" pos:end="93:70"><expr pos:start="93:29" pos:end="93:70"><name pos:start="93:29" pos:end="93:70"><name pos:start="93:29" pos:end="93:29">s</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:50">current_picture_ptr</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:53">f</name><operator pos:start="93:54" pos:end="93:55">-&gt;</operator><name pos:start="93:56" pos:end="93:70">top_field_first</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:47"><expr pos:start="95:9" pos:end="95:46"><call pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:16">put_bits</name><argument_list pos:start="95:17" pos:end="95:46">(<argument pos:start="95:18" pos:end="95:23"><expr pos:start="95:18" pos:end="95:23"><operator pos:start="95:18" pos:end="95:18">&amp;</operator><name pos:start="95:19" pos:end="95:23"><name pos:start="95:19" pos:end="95:19">s</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:23">pb</name></name></expr></argument>, <argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><literal type="number" pos:start="95:26" pos:end="95:26">1</literal></expr></argument>, <argument pos:start="95:29" pos:end="95:45"><expr pos:start="95:29" pos:end="95:45"><name pos:start="95:29" pos:end="95:45"><name pos:start="95:29" pos:end="95:29">s</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:45">alternate_scan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="99:5" pos:end="99:25">// FIXME sprite stuff</comment>



    <expr_stmt pos:start="103:5" pos:end="103:35"><expr pos:start="103:5" pos:end="103:34"><call pos:start="103:5" pos:end="103:34"><name pos:start="103:5" pos:end="103:12">put_bits</name><argument_list pos:start="103:13" pos:end="103:34">(<argument pos:start="103:14" pos:end="103:19"><expr pos:start="103:14" pos:end="103:19"><operator pos:start="103:14" pos:end="103:14">&amp;</operator><name pos:start="103:15" pos:end="103:19"><name pos:start="103:15" pos:end="103:15">s</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:19">pb</name></name></expr></argument>, <argument pos:start="103:22" pos:end="103:22"><expr pos:start="103:22" pos:end="103:22"><literal type="number" pos:start="103:22" pos:end="103:22">5</literal></expr></argument>, <argument pos:start="103:25" pos:end="103:33"><expr pos:start="103:25" pos:end="103:33"><name pos:start="103:25" pos:end="103:33"><name pos:start="103:25" pos:end="103:25">s</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:33">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="109:39"><if pos:start="107:5" pos:end="109:39">if <condition pos:start="107:8" pos:end="107:42">(<expr pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:20">pict_type</name></name> <operator pos:start="107:22" pos:end="107:23">!=</operator> <name pos:start="107:25" pos:end="107:41">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:39"><block_content pos:start="109:9" pos:end="109:39">

        <expr_stmt pos:start="109:9" pos:end="109:39"><expr pos:start="109:9" pos:end="109:38"><call pos:start="109:9" pos:end="109:38"><name pos:start="109:9" pos:end="109:16">put_bits</name><argument_list pos:start="109:17" pos:end="109:38">(<argument pos:start="109:18" pos:end="109:23"><expr pos:start="109:18" pos:end="109:23"><operator pos:start="109:18" pos:end="109:18">&amp;</operator><name pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:23">pb</name></name></expr></argument>, <argument pos:start="109:26" pos:end="109:26"><expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">3</literal></expr></argument>, <argument pos:start="109:29" pos:end="109:37"><expr pos:start="109:29" pos:end="109:37"><name pos:start="109:29" pos:end="109:37"><name pos:start="109:29" pos:end="109:29">s</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:37">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="109:42" pos:end="109:56">/* fcode_for */</comment>

    <if_stmt pos:start="111:5" pos:end="113:39"><if pos:start="111:5" pos:end="113:39">if <condition pos:start="111:8" pos:end="111:42">(<expr pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:20">pict_type</name></name> <operator pos:start="111:22" pos:end="111:23">==</operator> <name pos:start="111:25" pos:end="111:41">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:39"><block_content pos:start="113:9" pos:end="113:39">

        <expr_stmt pos:start="113:9" pos:end="113:39"><expr pos:start="113:9" pos:end="113:38"><call pos:start="113:9" pos:end="113:38"><name pos:start="113:9" pos:end="113:16">put_bits</name><argument_list pos:start="113:17" pos:end="113:38">(<argument pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:23"><operator pos:start="113:18" pos:end="113:18">&amp;</operator><name pos:start="113:19" pos:end="113:23"><name pos:start="113:19" pos:end="113:19">s</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:23">pb</name></name></expr></argument>, <argument pos:start="113:26" pos:end="113:26"><expr pos:start="113:26" pos:end="113:26"><literal type="number" pos:start="113:26" pos:end="113:26">3</literal></expr></argument>, <argument pos:start="113:29" pos:end="113:37"><expr pos:start="113:29" pos:end="113:37"><name pos:start="113:29" pos:end="113:37"><name pos:start="113:29" pos:end="113:29">s</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:37">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="113:42" pos:end="113:57">/* fcode_back */</comment>



    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
