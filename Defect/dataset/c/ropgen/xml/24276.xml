<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24276.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">helper_lswx</name><parameter_list pos:start="1:17" pos:end="3:42">(<parameter pos:start="1:18" pos:end="1:33"><decl pos:start="1:18" pos:end="1:33"><type pos:start="1:18" pos:end="1:33"><name pos:start="1:18" pos:end="1:28">CPUPPCState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">env</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:47">target_ulong</name></type> <name pos:start="1:49" pos:end="1:52">addr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:66">reg</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:28"><decl pos:start="3:18" pos:end="3:28"><type pos:start="3:18" pos:end="3:28"><name pos:start="3:18" pos:end="3:25">uint32_t</name></type> <name pos:start="3:27" pos:end="3:28">ra</name></decl></parameter>, <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:38">uint32_t</name></type> <name pos:start="3:40" pos:end="3:41">rb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="27:1">{<block_content pos:start="7:5" pos:end="25:5">

    <if_stmt pos:start="7:5" pos:end="25:5"><if pos:start="7:5" pos:end="25:5">if <condition pos:start="7:8" pos:end="7:28">(<expr pos:start="7:9" pos:end="7:27"><call pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:14">likely</name><argument_list pos:start="7:15" pos:end="7:27">(<argument pos:start="7:16" pos:end="7:26"><expr pos:start="7:16" pos:end="7:26"><name pos:start="7:16" pos:end="7:21">xer_bc</name> <operator pos:start="7:23" pos:end="7:24">!=</operator> <literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:30" pos:end="25:5">{<block_content pos:start="9:9" pos:end="23:9">

        <if_stmt pos:start="9:9" pos:end="23:9"><if pos:start="9:9" pos:end="19:9">if <condition pos:start="9:12" pos:end="11:56">(<expr pos:start="9:13" pos:end="11:55"><call pos:start="9:13" pos:end="11:55"><name pos:start="9:13" pos:end="9:20">unlikely</name><argument_list pos:start="9:21" pos:end="11:55">(<argument pos:start="9:22" pos:end="11:54"><expr pos:start="9:22" pos:end="11:54"><operator pos:start="9:22" pos:end="9:22">(</operator><name pos:start="9:23" pos:end="9:24">ra</name> <operator pos:start="9:26" pos:end="9:27">!=</operator> <literal type="number" pos:start="9:29" pos:end="9:29">0</literal> <operator pos:start="9:31" pos:end="9:32">&amp;&amp;</operator> <name pos:start="9:34" pos:end="9:61"><name pos:start="9:34" pos:end="9:36">reg</name> <argument_list type="generic" pos:start="9:38" pos:end="9:61">&lt; <argument pos:start="9:40" pos:end="9:59"><expr pos:start="9:40" pos:end="9:59"><name pos:start="9:40" pos:end="9:41">ra</name> <operator pos:start="9:43" pos:end="9:44">&amp;&amp;</operator> <operator pos:start="9:46" pos:end="9:46">(</operator><name pos:start="9:47" pos:end="9:49">reg</name> <operator pos:start="9:51" pos:end="9:51">+</operator> <name pos:start="9:53" pos:end="9:58">xer_bc</name><operator pos:start="9:59" pos:end="9:59">)</operator></expr></argument> &gt;</argument_list></name> <name pos:start="9:63" pos:end="9:64">ra</name><operator pos:start="9:65" pos:end="9:65">)</operator> <operator pos:start="9:67" pos:end="9:68">||</operator>

                     <operator pos:start="11:22" pos:end="11:22">(</operator><name pos:start="11:23" pos:end="11:50"><name pos:start="11:23" pos:end="11:25">reg</name> <argument_list type="generic" pos:start="11:27" pos:end="11:50">&lt; <argument pos:start="11:29" pos:end="11:48"><expr pos:start="11:29" pos:end="11:48"><name pos:start="11:29" pos:end="11:30">rb</name> <operator pos:start="11:32" pos:end="11:33">&amp;&amp;</operator> <operator pos:start="11:35" pos:end="11:35">(</operator><name pos:start="11:36" pos:end="11:38">reg</name> <operator pos:start="11:40" pos:end="11:40">+</operator> <name pos:start="11:42" pos:end="11:47">xer_bc</name><operator pos:start="11:48" pos:end="11:48">)</operator></expr></argument> &gt;</argument_list></name> <name pos:start="11:52" pos:end="11:53">rb</name><operator pos:start="11:54" pos:end="11:54">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:58" pos:end="19:9">{<block_content pos:start="13:13" pos:end="17:64">

            <expr_stmt pos:start="13:13" pos:end="17:64"><expr pos:start="13:13" pos:end="17:63"><call pos:start="13:13" pos:end="17:63"><name pos:start="13:13" pos:end="13:38">helper_raise_exception_err</name><argument_list pos:start="13:39" pos:end="17:63">(<argument pos:start="13:40" pos:end="13:42"><expr pos:start="13:40" pos:end="13:42"><name pos:start="13:40" pos:end="13:42">env</name></expr></argument>, <argument pos:start="13:45" pos:end="13:64"><expr pos:start="13:45" pos:end="13:64"><name pos:start="13:45" pos:end="13:64">POWERPC_EXCP_PROGRAM</name></expr></argument>,

                                       <argument pos:start="15:40" pos:end="17:62"><expr pos:start="15:40" pos:end="17:62"><name pos:start="15:40" pos:end="15:57">POWERPC_EXCP_INVAL</name> <operator pos:start="15:59" pos:end="15:59">|</operator>

                                       <name pos:start="17:40" pos:end="17:62">POWERPC_EXCP_INVAL_LSWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="19:11" pos:end="23:9">else <block pos:start="19:16" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:47">

            <expr_stmt pos:start="21:13" pos:end="21:47"><expr pos:start="21:13" pos:end="21:46"><call pos:start="21:13" pos:end="21:46"><name pos:start="21:13" pos:end="21:22">helper_lsw</name><argument_list pos:start="21:23" pos:end="21:46">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">env</name></expr></argument>, <argument pos:start="21:29" pos:end="21:32"><expr pos:start="21:29" pos:end="21:32"><name pos:start="21:29" pos:end="21:32">addr</name></expr></argument>, <argument pos:start="21:35" pos:end="21:40"><expr pos:start="21:35" pos:end="21:40"><name pos:start="21:35" pos:end="21:40">xer_bc</name></expr></argument>, <argument pos:start="21:43" pos:end="21:45"><expr pos:start="21:43" pos:end="21:45"><name pos:start="21:43" pos:end="21:45">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
