<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15352.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">ich9_lpc_config_write</name><parameter_list pos:start="1:34" pos:end="3:71">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:43">PCIDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">d</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:42">uint32_t</name></type> <name pos:start="3:44" pos:end="3:47">addr</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:57">uint32_t</name></type> <name pos:start="3:59" pos:end="3:61">val</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:70"><decl pos:start="3:64" pos:end="3:70"><type pos:start="3:64" pos:end="3:70"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:70">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:5">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ICH9LPCState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">lpc</name> <init pos:start="7:23" pos:end="7:42">= <expr pos:start="7:25" pos:end="7:42"><call pos:start="7:25" pos:end="7:42"><name pos:start="7:25" pos:end="7:39">ICH9_LPC_DEVICE</name><argument_list pos:start="7:40" pos:end="7:42">(<argument pos:start="7:41" pos:end="7:41"><expr pos:start="7:41" pos:end="7:41"><name pos:start="7:41" pos:end="7:41">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:64"><decl pos:start="9:5" pos:end="9:63"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:21">rcba_old</name> <init pos:start="9:23" pos:end="9:63">= <expr pos:start="9:25" pos:end="9:63"><call pos:start="9:25" pos:end="9:63"><name pos:start="9:25" pos:end="9:36">pci_get_long</name><argument_list pos:start="9:37" pos:end="9:63">(<argument pos:start="9:38" pos:end="9:62"><expr pos:start="9:38" pos:end="9:62"><name pos:start="9:38" pos:end="9:46"><name pos:start="9:38" pos:end="9:38">d</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:46">config</name></name> <operator pos:start="9:48" pos:end="9:48">+</operator> <name pos:start="9:50" pos:end="9:62">ICH9_LPC_RCBA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><call pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:28">pci_default_write_config</name><argument_list pos:start="13:29" pos:end="13:47">(<argument pos:start="13:30" pos:end="13:30"><expr pos:start="13:30" pos:end="13:30"><name pos:start="13:30" pos:end="13:30">d</name></expr></argument>, <argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">addr</name></expr></argument>, <argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">val</name></expr></argument>, <argument pos:start="13:44" pos:end="13:46"><expr pos:start="13:44" pos:end="13:46"><name pos:start="13:44" pos:end="13:46">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="17:57">(<expr pos:start="15:9" pos:end="17:56"><call pos:start="15:9" pos:end="15:53"><name pos:start="15:9" pos:end="15:22">ranges_overlap</name><argument_list pos:start="15:23" pos:end="15:53">(<argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">addr</name></expr></argument>, <argument pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><name pos:start="15:30" pos:end="15:32">len</name></expr></argument>, <argument pos:start="15:35" pos:end="15:49"><expr pos:start="15:35" pos:end="15:49"><name pos:start="15:35" pos:end="15:49">ICH9_LPC_PMBASE</name></expr></argument>, <argument pos:start="15:52" pos:end="15:52"><expr pos:start="15:52" pos:end="15:52"><literal type="number" pos:start="15:52" pos:end="15:52">4</literal></expr></argument>)</argument_list></call> <operator pos:start="15:55" pos:end="15:56">||</operator>

        <call pos:start="17:9" pos:end="17:56"><name pos:start="17:9" pos:end="17:22">ranges_overlap</name><argument_list pos:start="17:23" pos:end="17:56">(<argument pos:start="17:24" pos:end="17:27"><expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">addr</name></expr></argument>, <argument pos:start="17:30" pos:end="17:32"><expr pos:start="17:30" pos:end="17:32"><name pos:start="17:30" pos:end="17:32">len</name></expr></argument>, <argument pos:start="17:35" pos:end="17:52"><expr pos:start="17:35" pos:end="17:52"><name pos:start="17:35" pos:end="17:52">ICH9_LPC_ACPI_CTRL</name></expr></argument>, <argument pos:start="17:55" pos:end="17:55"><expr pos:start="17:55" pos:end="17:55"><literal type="number" pos:start="17:55" pos:end="17:55">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:59" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:40">

        <expr_stmt pos:start="19:9" pos:end="19:40"><expr pos:start="19:9" pos:end="19:39"><call pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:34">ich9_lpc_pmbase_sci_update</name><argument_list pos:start="19:35" pos:end="19:39">(<argument pos:start="19:36" pos:end="19:38"><expr pos:start="19:36" pos:end="19:38"><name pos:start="19:36" pos:end="19:38">lpc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:52">(<expr pos:start="23:9" pos:end="23:51"><call pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:22">ranges_overlap</name><argument_list pos:start="23:23" pos:end="23:51">(<argument pos:start="23:24" pos:end="23:27"><expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">addr</name></expr></argument>, <argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">len</name></expr></argument>, <argument pos:start="23:35" pos:end="23:47"><expr pos:start="23:35" pos:end="23:47"><name pos:start="23:35" pos:end="23:47">ICH9_LPC_RCBA</name></expr></argument>, <argument pos:start="23:50" pos:end="23:50"><expr pos:start="23:50" pos:end="23:50"><literal type="number" pos:start="23:50" pos:end="23:50">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:54" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:44">

        <expr_stmt pos:start="25:9" pos:end="25:44"><expr pos:start="25:9" pos:end="25:43"><call pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:28">ich9_lpc_rcba_update</name><argument_list pos:start="25:29" pos:end="25:43">(<argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:32">lpc</name></expr></argument>, <argument pos:start="25:35" pos:end="25:42"><expr pos:start="25:35" pos:end="25:42"><name pos:start="25:35" pos:end="25:42">rcba_old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:58">(<expr pos:start="29:9" pos:end="29:57"><call pos:start="29:9" pos:end="29:57"><name pos:start="29:9" pos:end="29:22">ranges_overlap</name><argument_list pos:start="29:23" pos:end="29:57">(<argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">addr</name></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">len</name></expr></argument>, <argument pos:start="29:35" pos:end="29:53"><expr pos:start="29:35" pos:end="29:53"><name pos:start="29:35" pos:end="29:53">ICH9_LPC_PIRQA_ROUT</name></expr></argument>, <argument pos:start="29:56" pos:end="29:56"><expr pos:start="29:56" pos:end="29:56"><literal type="number" pos:start="29:56" pos:end="29:56">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:60" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:55">

        <expr_stmt pos:start="31:9" pos:end="31:55"><expr pos:start="31:9" pos:end="31:54"><call pos:start="31:9" pos:end="31:54"><name pos:start="31:9" pos:end="31:42">pci_bus_fire_intx_routing_notifier</name><argument_list pos:start="31:43" pos:end="31:54">(<argument pos:start="31:44" pos:end="31:53"><expr pos:start="31:44" pos:end="31:53"><name pos:start="31:44" pos:end="31:53"><name pos:start="31:44" pos:end="31:46">lpc</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:49">d</name><operator pos:start="31:50" pos:end="31:50">.</operator><name pos:start="31:51" pos:end="31:53">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:58">(<expr pos:start="35:9" pos:end="35:57"><call pos:start="35:9" pos:end="35:57"><name pos:start="35:9" pos:end="35:22">ranges_overlap</name><argument_list pos:start="35:23" pos:end="35:57">(<argument pos:start="35:24" pos:end="35:27"><expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">addr</name></expr></argument>, <argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:32">len</name></expr></argument>, <argument pos:start="35:35" pos:end="35:53"><expr pos:start="35:35" pos:end="35:53"><name pos:start="35:35" pos:end="35:53">ICH9_LPC_PIRQE_ROUT</name></expr></argument>, <argument pos:start="35:56" pos:end="35:56"><expr pos:start="35:56" pos:end="35:56"><literal type="number" pos:start="35:56" pos:end="35:56">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:60" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:55">

        <expr_stmt pos:start="37:9" pos:end="37:55"><expr pos:start="37:9" pos:end="37:54"><call pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:42">pci_bus_fire_intx_routing_notifier</name><argument_list pos:start="37:43" pos:end="37:54">(<argument pos:start="37:44" pos:end="37:53"><expr pos:start="37:44" pos:end="37:53"><name pos:start="37:44" pos:end="37:53"><name pos:start="37:44" pos:end="37:46">lpc</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:49">d</name><operator pos:start="37:50" pos:end="37:50">.</operator><name pos:start="37:51" pos:end="37:53">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:59">(<expr pos:start="41:9" pos:end="41:58"><call pos:start="41:9" pos:end="41:58"><name pos:start="41:9" pos:end="41:22">ranges_overlap</name><argument_list pos:start="41:23" pos:end="41:58">(<argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><name pos:start="41:24" pos:end="41:27">addr</name></expr></argument>, <argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">len</name></expr></argument>, <argument pos:start="41:35" pos:end="41:54"><expr pos:start="41:35" pos:end="41:54"><name pos:start="41:35" pos:end="41:54">ICH9_LPC_GEN_PMCON_1</name></expr></argument>, <argument pos:start="41:57" pos:end="41:57"><expr pos:start="41:57" pos:end="41:57"><literal type="number" pos:start="41:57" pos:end="41:57">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:61" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:35">

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:29">ich9_lpc_pmcon_update</name><argument_list pos:start="43:30" pos:end="43:34">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">lpc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
