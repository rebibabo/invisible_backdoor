<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17816.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">prom_init</name><parameter_list pos:start="1:22" pos:end="1:69">(<parameter pos:start="1:23" pos:end="1:45"><decl pos:start="1:23" pos:end="1:45"><type pos:start="1:23" pos:end="1:45"><name pos:start="1:23" pos:end="1:40">target_phys_addr_t</name></type> <name pos:start="1:42" pos:end="1:45">addr</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:68"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:68">bios_name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">SysBusDevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:18">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:7">dev</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:39"><name pos:start="15:11" pos:end="15:21">qdev_create</name><argument_list pos:start="15:22" pos:end="15:39">(<argument pos:start="15:23" pos:end="15:26"><expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">NULL</name></expr></argument>, <argument pos:start="15:29" pos:end="15:38"><expr pos:start="15:29" pos:end="15:38"><literal type="string" pos:start="15:29" pos:end="15:38">"openprom"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><call pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:13">qdev_init</name><argument_list pos:start="17:14" pos:end="17:18">(<argument pos:start="17:15" pos:end="17:17"><expr pos:start="17:15" pos:end="17:17"><name pos:start="17:15" pos:end="17:17">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:5">s</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:24">sysbus_from_qdev</name><argument_list pos:start="19:25" pos:end="19:29">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:19">sysbus_mmio_map</name><argument_list pos:start="23:20" pos:end="23:31">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">s</name></expr></argument>, <argument pos:start="23:24" pos:end="23:24"><expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr></argument>, <argument pos:start="23:27" pos:end="23:30"><expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:24">/* load boot prom */</comment>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:17">bios_name</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <name pos:start="29:22" pos:end="29:25">NULL</name></expr>)</condition> <block pos:start="29:28" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:34">

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:17">bios_name</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:33">PROM_FILENAME</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:12">filename</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:61"><name pos:start="35:16" pos:end="35:29">qemu_find_file</name><argument_list pos:start="35:30" pos:end="35:61">(<argument pos:start="35:31" pos:end="35:49"><expr pos:start="35:31" pos:end="35:49"><name pos:start="35:31" pos:end="35:49">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="35:52" pos:end="35:60"><expr pos:start="35:52" pos:end="35:60"><name pos:start="35:52" pos:end="35:60">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="55:5"><if pos:start="37:5" pos:end="51:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">filename</name></expr>)</condition> <block pos:start="37:19" pos:end="51:5">{<block_content pos:start="39:9" pos:end="49:28">

        <expr_stmt pos:start="39:9" pos:end="41:42"><expr pos:start="39:9" pos:end="41:41"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="41:41"><name pos:start="39:15" pos:end="39:22">load_elf</name><argument_list pos:start="39:23" pos:end="41:41">(<argument pos:start="39:24" pos:end="39:31"><expr pos:start="39:24" pos:end="39:31"><name pos:start="39:24" pos:end="39:31">filename</name></expr></argument>, <argument pos:start="39:34" pos:end="39:50"><expr pos:start="39:34" pos:end="39:50"><name pos:start="39:34" pos:end="39:37">addr</name> <operator pos:start="39:39" pos:end="39:39">-</operator> <name pos:start="39:41" pos:end="39:50">PROM_VADDR</name></expr></argument>, <argument pos:start="39:53" pos:end="39:56"><expr pos:start="39:53" pos:end="39:56"><name pos:start="39:53" pos:end="39:56">NULL</name></expr></argument>, <argument pos:start="39:59" pos:end="39:62"><expr pos:start="39:59" pos:end="39:62"><name pos:start="39:59" pos:end="39:62">NULL</name></expr></argument>, <argument pos:start="39:65" pos:end="39:68"><expr pos:start="39:65" pos:end="39:68"><name pos:start="39:65" pos:end="39:68">NULL</name></expr></argument>,

                       <argument pos:start="41:24" pos:end="41:24"><expr pos:start="41:24" pos:end="41:24"><literal type="number" pos:start="41:24" pos:end="41:24">1</literal></expr></argument>, <argument pos:start="41:27" pos:end="41:37"><expr pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:37">ELF_MACHINE</name></expr></argument>, <argument pos:start="41:40" pos:end="41:40"><expr pos:start="41:40" pos:end="41:40"><literal type="number" pos:start="41:40" pos:end="41:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:43">(<expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:15">ret</name> <argument_list type="generic" pos:start="43:17" pos:end="43:28">&lt; <argument pos:start="43:19" pos:end="43:26"><expr pos:start="43:19" pos:end="43:26"><literal type="number" pos:start="43:19" pos:end="43:19">0</literal> <operator pos:start="43:21" pos:end="43:22">||</operator> <name pos:start="43:24" pos:end="43:26">ret</name></expr></argument> &gt;</argument_list></name> <name pos:start="43:30" pos:end="43:42">PROM_SIZE_MAX</name></expr>)</condition> <block pos:start="43:45" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:69">

            <expr_stmt pos:start="45:13" pos:end="45:69"><expr pos:start="45:13" pos:end="45:68"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:68"><name pos:start="45:19" pos:end="45:37">load_image_targphys</name><argument_list pos:start="45:38" pos:end="45:68">(<argument pos:start="45:39" pos:end="45:46"><expr pos:start="45:39" pos:end="45:46"><name pos:start="45:39" pos:end="45:46">filename</name></expr></argument>, <argument pos:start="45:49" pos:end="45:52"><expr pos:start="45:49" pos:end="45:52"><name pos:start="45:49" pos:end="45:52">addr</name></expr></argument>, <argument pos:start="45:55" pos:end="45:67"><expr pos:start="45:55" pos:end="45:67"><name pos:start="45:55" pos:end="45:67">PROM_SIZE_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><call pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:17">qemu_free</name><argument_list pos:start="49:18" pos:end="49:27">(<argument pos:start="49:19" pos:end="49:26"><expr pos:start="49:19" pos:end="49:26"><name pos:start="49:19" pos:end="49:26">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="55:5">else <block pos:start="51:12" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:17">

        <expr_stmt pos:start="53:9" pos:end="53:17"><expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <operator pos:start="53:15" pos:end="53:15">-</operator><literal type="number" pos:start="53:16" pos:end="53:16">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:39">(<expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:11">ret</name> <argument_list type="generic" pos:start="57:13" pos:end="57:24">&lt; <argument pos:start="57:15" pos:end="57:22"><expr pos:start="57:15" pos:end="57:22"><literal type="number" pos:start="57:15" pos:end="57:15">0</literal> <operator pos:start="57:17" pos:end="57:18">||</operator> <name pos:start="57:20" pos:end="57:22">ret</name></expr></argument> &gt;</argument_list></name> <name pos:start="57:26" pos:end="57:38">PROM_SIZE_MAX</name></expr>)</condition> <block pos:start="57:41" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:16">

        <expr_stmt pos:start="59:9" pos:end="59:71"><expr pos:start="59:9" pos:end="59:70"><call pos:start="59:9" pos:end="59:70"><name pos:start="59:9" pos:end="59:15">fprintf</name><argument_list pos:start="59:16" pos:end="59:70">(<argument pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:22">stderr</name></expr></argument>, <argument pos:start="59:25" pos:end="59:58"><expr pos:start="59:25" pos:end="59:58"><literal type="string" pos:start="59:25" pos:end="59:58">"qemu: could not load prom '%s'\n"</literal></expr></argument>, <argument pos:start="59:61" pos:end="59:69"><expr pos:start="59:61" pos:end="59:69"><name pos:start="59:61" pos:end="59:69">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><call pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:12">exit</name><argument_list pos:start="61:13" pos:end="61:15">(<argument pos:start="61:14" pos:end="61:14"><expr pos:start="61:14" pos:end="61:14"><literal type="number" pos:start="61:14" pos:end="61:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
