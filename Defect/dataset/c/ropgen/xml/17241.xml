<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17241.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ehci_state_advqueue</name><parameter_list pos:start="1:31" pos:end="1:55">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:40">EHCIQueue</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">q</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:54"><decl pos:start="1:46" pos:end="1:54"><type pos:start="1:46" pos:end="1:54"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:54">async</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="33:5" pos:end="75:13">

<cpp:if pos:start="5:1" pos:end="5:5">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:5"><literal type="number" pos:start="5:5" pos:end="5:5">0</literal></expr></cpp:if>

    <comment type="block" pos:start="7:5" pos:end="13:7">/* TO-DO: 4.10.2 - paragraph 2

     * if I-bit is set to 1 and QH is not active

     * go to horizontal QH

     */</comment>

    if (I-bit set) {

        ehci_set_state(ehci, async, EST_HORIZONTALQH);

        goto out;

    }

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="27:5" pos:end="31:7">/*

     * want data and alt-next qTD is valid

     */</comment>

    <if_stmt pos:start="33:5" pos:end="71:5"><if pos:start="33:5" pos:end="51:5">if <condition pos:start="33:8" pos:end="37:45">(<expr pos:start="33:9" pos:end="37:44"><operator pos:start="33:9" pos:end="33:9">(</operator><operator pos:start="33:10" pos:end="33:10">(</operator><name pos:start="33:11" pos:end="33:21"><name pos:start="33:11" pos:end="33:11">q</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:15">qh</name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:21">token</name></name> <operator pos:start="33:23" pos:end="33:23">&amp;</operator> <name pos:start="33:25" pos:end="33:45">QTD_TOKEN_TBYTES_MASK</name><operator pos:start="33:46" pos:end="33:46">)</operator> <operator pos:start="33:48" pos:end="33:49">!=</operator> <literal type="number" pos:start="33:51" pos:end="33:51">0</literal><operator pos:start="33:52" pos:end="33:52">)</operator> <operator pos:start="33:54" pos:end="33:55">&amp;&amp;</operator>

        <operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:26"><name pos:start="35:10" pos:end="35:10">q</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:14">qh</name><operator pos:start="35:15" pos:end="35:15">.</operator><name pos:start="35:16" pos:end="35:26">altnext_qtd</name></name> <operator pos:start="35:28" pos:end="35:28">&gt;</operator> <literal type="number" pos:start="35:30" pos:end="35:35">0x1000</literal><operator pos:start="35:36" pos:end="35:36">)</operator> <operator pos:start="35:38" pos:end="35:39">&amp;&amp;</operator>

        <operator pos:start="37:9" pos:end="37:9">(</operator><call pos:start="37:10" pos:end="37:38"><name pos:start="37:10" pos:end="37:19">NLPTR_TBIT</name><argument_list pos:start="37:20" pos:end="37:38">(<argument pos:start="37:21" pos:end="37:37"><expr pos:start="37:21" pos:end="37:37"><name pos:start="37:21" pos:end="37:37"><name pos:start="37:21" pos:end="37:21">q</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:25">qh</name><operator pos:start="37:26" pos:end="37:26">.</operator><name pos:start="37:27" pos:end="37:37">altnext_qtd</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:40" pos:end="37:41">==</operator> <literal type="number" pos:start="37:43" pos:end="37:43">0</literal><operator pos:start="37:44" pos:end="37:44">)</operator></expr>)</condition> <block pos:start="37:47" pos:end="51:5">{<block_content pos:start="39:9" pos:end="41:53">

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">q</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:18">qtdaddr</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:38"><name pos:start="39:22" pos:end="39:22">q</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:26">qh</name><operator pos:start="39:27" pos:end="39:27">.</operator><name pos:start="39:28" pos:end="39:38">altnext_qtd</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:53"><expr pos:start="41:9" pos:end="41:52"><call pos:start="41:9" pos:end="41:52"><name pos:start="41:9" pos:end="41:22">ehci_set_state</name><argument_list pos:start="41:23" pos:end="41:52">(<argument pos:start="41:24" pos:end="41:30"><expr pos:start="41:24" pos:end="41:30"><name pos:start="41:24" pos:end="41:30"><name pos:start="41:24" pos:end="41:24">q</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:30">ehci</name></name></expr></argument>, <argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37">async</name></expr></argument>, <argument pos:start="41:40" pos:end="41:51"><expr pos:start="41:40" pos:end="41:51"><name pos:start="41:40" pos:end="41:51">EST_FETCHQTD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="49:7">/*

     *  next qTD is valid

     */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="67:5">else if <condition pos:start="51:15" pos:end="53:49">(<expr pos:start="51:16" pos:end="53:48"><operator pos:start="51:16" pos:end="51:16">(</operator><name pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:17">q</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:21">qh</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:30">next_qtd</name></name> <operator pos:start="51:32" pos:end="51:32">&gt;</operator> <literal type="number" pos:start="51:34" pos:end="51:39">0x1000</literal><operator pos:start="51:40" pos:end="51:40">)</operator> <operator pos:start="51:42" pos:end="51:43">&amp;&amp;</operator>

               <operator pos:start="53:16" pos:end="53:16">(</operator><call pos:start="53:17" pos:end="53:42"><name pos:start="53:17" pos:end="53:26">NLPTR_TBIT</name><argument_list pos:start="53:27" pos:end="53:42">(<argument pos:start="53:28" pos:end="53:41"><expr pos:start="53:28" pos:end="53:41"><name pos:start="53:28" pos:end="53:41"><name pos:start="53:28" pos:end="53:28">q</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:32">qh</name><operator pos:start="53:33" pos:end="53:33">.</operator><name pos:start="53:34" pos:end="53:41">next_qtd</name></name></expr></argument>)</argument_list></call> <operator pos:start="53:44" pos:end="53:45">==</operator> <literal type="number" pos:start="53:47" pos:end="53:47">0</literal><operator pos:start="53:48" pos:end="53:48">)</operator></expr>)</condition> <block pos:start="53:51" pos:end="67:5">{<block_content pos:start="55:9" pos:end="57:53">

        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:9">q</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">qtdaddr</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:35"><name pos:start="55:22" pos:end="55:22">q</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:26">qh</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:35">next_qtd</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:53"><expr pos:start="57:9" pos:end="57:52"><call pos:start="57:9" pos:end="57:52"><name pos:start="57:9" pos:end="57:22">ehci_set_state</name><argument_list pos:start="57:23" pos:end="57:52">(<argument pos:start="57:24" pos:end="57:30"><expr pos:start="57:24" pos:end="57:30"><name pos:start="57:24" pos:end="57:30"><name pos:start="57:24" pos:end="57:24">q</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:30">ehci</name></name></expr></argument>, <argument pos:start="57:33" pos:end="57:37"><expr pos:start="57:33" pos:end="57:37"><name pos:start="57:33" pos:end="57:37">async</name></expr></argument>, <argument pos:start="57:40" pos:end="57:51"><expr pos:start="57:40" pos:end="57:51"><name pos:start="57:40" pos:end="57:51">EST_FETCHQTD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="65:7">/*

     *  no valid qTD, try next QH

     */</comment>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="71:5">else <block pos:start="67:12" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:57">

        <expr_stmt pos:start="69:9" pos:end="69:57"><expr pos:start="69:9" pos:end="69:56"><call pos:start="69:9" pos:end="69:56"><name pos:start="69:9" pos:end="69:22">ehci_set_state</name><argument_list pos:start="69:23" pos:end="69:56">(<argument pos:start="69:24" pos:end="69:30"><expr pos:start="69:24" pos:end="69:30"><name pos:start="69:24" pos:end="69:30"><name pos:start="69:24" pos:end="69:24">q</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:30">ehci</name></name></expr></argument>, <argument pos:start="69:33" pos:end="69:37"><expr pos:start="69:33" pos:end="69:37"><name pos:start="69:33" pos:end="69:37">async</name></expr></argument>, <argument pos:start="69:40" pos:end="69:55"><expr pos:start="69:40" pos:end="69:55"><name pos:start="69:40" pos:end="69:55">EST_HORIZONTALQH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
