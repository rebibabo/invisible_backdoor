<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26308.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">net_rx_pkt_attach_iovec_ex</name><parameter_list pos:start="1:32" pos:end="7:45">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:38">struct</name> <name pos:start="1:40" pos:end="1:47">NetRxPkt</name></name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">pkt</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:55"><decl pos:start="3:33" pos:end="3:55"><type pos:start="3:33" pos:end="3:55"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:44">struct</name> <name pos:start="3:46" pos:end="3:50">iovec</name></name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:55">iov</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:67"><decl pos:start="3:58" pos:end="3:67"><type pos:start="3:58" pos:end="3:67"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:67">iovcnt</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:45"><decl pos:start="5:33" pos:end="5:45"><type pos:start="5:33" pos:end="5:45"><name pos:start="5:33" pos:end="5:38">size_t</name></type> <name pos:start="5:40" pos:end="5:45">iovoff</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:62"><decl pos:start="5:48" pos:end="5:62"><type pos:start="5:48" pos:end="5:62"><name pos:start="5:48" pos:end="5:51">bool</name></type> <name pos:start="5:53" pos:end="5:62">strip_vlan</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:44"><decl pos:start="7:33" pos:end="7:44"><type pos:start="7:33" pos:end="7:44"><name pos:start="7:33" pos:end="7:40">uint16_t</name></type> <name pos:start="7:42" pos:end="7:44">vet</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="39:1">{<block_content pos:start="11:5" pos:end="37:50">

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:16">tci</name> <init pos:start="11:18" pos:end="11:20">= <expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:18">ploff</name> <init pos:start="13:20" pos:end="13:27">= <expr pos:start="13:22" pos:end="13:27"><name pos:start="13:22" pos:end="13:27">iovoff</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><call pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:15">(<argument pos:start="15:12" pos:end="15:14"><expr pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:14">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:7">pkt</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:22">vlan_stripped</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:30">false</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:19">(<expr pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:18">strip_vlan</name></expr>)</condition> <block pos:start="21:21" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:61">

        <expr_stmt pos:start="23:9" pos:end="27:61"><expr pos:start="23:9" pos:end="27:60"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:11">pkt</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:26">vlan_stripped</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <call pos:start="23:30" pos:end="27:60"><name pos:start="23:30" pos:end="23:46">eth_strip_vlan_ex</name><argument_list pos:start="23:47" pos:end="27:60">(<argument pos:start="23:48" pos:end="23:50"><expr pos:start="23:48" pos:end="23:50"><name pos:start="23:48" pos:end="23:50">iov</name></expr></argument>, <argument pos:start="23:53" pos:end="23:58"><expr pos:start="23:53" pos:end="23:58"><name pos:start="23:53" pos:end="23:58">iovcnt</name></expr></argument>, <argument pos:start="23:61" pos:end="23:66"><expr pos:start="23:61" pos:end="23:66"><name pos:start="23:61" pos:end="23:66">iovoff</name></expr></argument>, <argument pos:start="23:69" pos:end="23:71"><expr pos:start="23:69" pos:end="23:71"><name pos:start="23:69" pos:end="23:71">vet</name></expr></argument>,

                                               <argument pos:start="25:48" pos:end="25:60"><expr pos:start="25:48" pos:end="25:60"><name pos:start="25:48" pos:end="25:60"><name pos:start="25:48" pos:end="25:50">pkt</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:60">ehdr_buf</name></name></expr></argument>,

                                               <argument pos:start="27:48" pos:end="27:53"><expr pos:start="27:48" pos:end="27:53"><operator pos:start="27:48" pos:end="27:48">&amp;</operator><name pos:start="27:49" pos:end="27:53">ploff</name></expr></argument>, <argument pos:start="27:56" pos:end="27:59"><expr pos:start="27:56" pos:end="27:59"><operator pos:start="27:56" pos:end="27:56">&amp;</operator><name pos:start="27:57" pos:end="27:59">tci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:7">pkt</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">tci</name></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:18">tci</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><call pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:24">net_rx_pkt_pull_data</name><argument_list pos:start="37:25" pos:end="37:49">(<argument pos:start="37:26" pos:end="37:28"><expr pos:start="37:26" pos:end="37:28"><name pos:start="37:26" pos:end="37:28">pkt</name></expr></argument>, <argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">iov</name></expr></argument>, <argument pos:start="37:36" pos:end="37:41"><expr pos:start="37:36" pos:end="37:41"><name pos:start="37:36" pos:end="37:41">iovcnt</name></expr></argument>, <argument pos:start="37:44" pos:end="37:48"><expr pos:start="37:44" pos:end="37:48"><name pos:start="37:44" pos:end="37:48">ploff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
