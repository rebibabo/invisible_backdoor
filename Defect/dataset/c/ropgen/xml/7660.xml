<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7660.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">qed_read_backing_file</name><parameter_list pos:start="1:34" pos:end="5:78">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:46">BDRVQEDState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">uint64_t</name></type> <name pos:start="1:61" pos:end="1:63">pos</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:52"><decl pos:start="3:35" pos:end="3:52"><type pos:start="3:35" pos:end="3:52"><name pos:start="3:35" pos:end="3:46">QEMUIOVector</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">qiov</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:63"><decl pos:start="5:35" pos:end="5:63"><type pos:start="5:35" pos:end="5:63"><name pos:start="5:35" pos:end="5:59">BlockDriverCompletionFunc</name> <modifier pos:start="5:61" pos:end="5:61">*</modifier></type><name pos:start="5:62" pos:end="5:63">cb</name></decl></parameter>, <parameter pos:start="5:66" pos:end="5:77"><decl pos:start="5:66" pos:end="5:77"><type pos:start="5:66" pos:end="5:77"><name pos:start="5:66" pos:end="5:69">void</name> <modifier pos:start="5:71" pos:end="5:71">*</modifier></type><name pos:start="5:72" pos:end="5:77">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="75:1">{<block_content pos:start="9:5" pos:end="73:62">

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:27">backing_length</name> <init pos:start="9:29" pos:end="9:31">= <expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:15">size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="19:7">/* If there is a backing file, get its length.  Treat the absence of a

     * backing file like a zero length backing file.

     */</comment>

    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="35:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:13">bs</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:25">backing_hd</name></name></expr>)</condition> <block pos:start="21:28" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:27">

        <decl_stmt pos:start="23:9" pos:end="23:54"><decl pos:start="23:9" pos:end="23:53"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">int64_t</name></type> <name pos:start="23:17" pos:end="23:17">l</name> <init pos:start="23:19" pos:end="23:53">= <expr pos:start="23:21" pos:end="23:53"><call pos:start="23:21" pos:end="23:53"><name pos:start="23:21" pos:end="23:34">bdrv_getlength</name><argument_list pos:start="23:35" pos:end="23:53">(<argument pos:start="23:36" pos:end="23:52"><expr pos:start="23:36" pos:end="23:52"><name pos:start="23:36" pos:end="23:52"><name pos:start="23:36" pos:end="23:36">s</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:40">bs</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:52">backing_hd</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:18">(<expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:13">l</name> <operator pos:start="25:15" pos:end="25:15">&lt;</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>)</condition> <block pos:start="25:20" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:19">

            <expr_stmt pos:start="27:13" pos:end="27:26"><expr pos:start="27:13" pos:end="27:25"><call pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:14">cb</name><argument_list pos:start="27:15" pos:end="27:25">(<argument pos:start="27:16" pos:end="27:21"><expr pos:start="27:16" pos:end="27:21"><name pos:start="27:16" pos:end="27:21">opaque</name></expr></argument>, <argument pos:start="27:24" pos:end="27:24"><expr pos:start="27:24" pos:end="27:24"><name pos:start="27:24" pos:end="27:24">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:22">backing_length</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:26">l</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:72">/* Zero all sectors if reading beyond the end of the backing file */</comment>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="43:42">(<expr pos:start="41:9" pos:end="43:41"><name pos:start="41:9" pos:end="41:11">pos</name> <operator pos:start="41:13" pos:end="41:14">&gt;=</operator> <name pos:start="41:16" pos:end="41:29">backing_length</name> <operator pos:start="41:31" pos:end="41:32">||</operator>

        <name pos:start="43:9" pos:end="43:11">pos</name> <operator pos:start="43:13" pos:end="43:13">+</operator> <name pos:start="43:15" pos:end="43:24"><name pos:start="43:15" pos:end="43:18">qiov</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:24">size</name></name> <operator pos:start="43:26" pos:end="43:26">&gt;</operator> <name pos:start="43:28" pos:end="43:41">backing_length</name></expr>)</condition> <block pos:start="43:44" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:50">

        <expr_stmt pos:start="45:9" pos:end="45:50"><expr pos:start="45:9" pos:end="45:49"><call pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:25">qemu_iovec_memset</name><argument_list pos:start="45:26" pos:end="45:49">(<argument pos:start="45:27" pos:end="45:30"><expr pos:start="45:27" pos:end="45:30"><name pos:start="45:27" pos:end="45:30">qiov</name></expr></argument>, <argument pos:start="45:33" pos:end="45:33"><expr pos:start="45:33" pos:end="45:33"><literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr></argument>, <argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><literal type="number" pos:start="45:36" pos:end="45:36">0</literal></expr></argument>, <argument pos:start="45:39" pos:end="45:48"><expr pos:start="45:39" pos:end="45:48"><name pos:start="45:39" pos:end="45:48"><name pos:start="45:39" pos:end="45:42">qiov</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:48">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:67">/* Complete now if there are no backing file sectors to read */</comment>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:30">(<expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:11">pos</name> <operator pos:start="53:13" pos:end="53:14">&gt;=</operator> <name pos:start="53:16" pos:end="53:29">backing_length</name></expr>)</condition> <block pos:start="53:32" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:15">

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><call pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:10">cb</name><argument_list pos:start="55:11" pos:end="55:21">(<argument pos:start="55:12" pos:end="55:17"><expr pos:start="55:12" pos:end="55:17"><name pos:start="55:12" pos:end="55:17">opaque</name></expr></argument>, <argument pos:start="55:20" pos:end="55:20"><expr pos:start="55:20" pos:end="55:20"><literal type="number" pos:start="55:20" pos:end="55:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:71">/* If the read straddles the end of the backing file, shorten it */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:59"><expr pos:start="65:5" pos:end="65:58"><name pos:start="65:5" pos:end="65:8">size</name> <operator pos:start="65:10" pos:end="65:10">=</operator> <call pos:start="65:12" pos:end="65:58"><name pos:start="65:12" pos:end="65:14">MIN</name><argument_list pos:start="65:15" pos:end="65:58">(<argument pos:start="65:16" pos:end="65:45"><expr pos:start="65:16" pos:end="65:45"><operator pos:start="65:16" pos:end="65:16">(</operator><name pos:start="65:17" pos:end="65:24">uint64_t</name><operator pos:start="65:25" pos:end="65:25">)</operator><name pos:start="65:26" pos:end="65:39">backing_length</name> <operator pos:start="65:41" pos:end="65:41">-</operator> <name pos:start="65:43" pos:end="65:45">pos</name></expr></argument>, <argument pos:start="65:48" pos:end="65:57"><expr pos:start="65:48" pos:end="65:57"><name pos:start="65:48" pos:end="65:57"><name pos:start="65:48" pos:end="65:51">qiov</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:57">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:55"><expr pos:start="69:5" pos:end="69:54"><call pos:start="69:5" pos:end="69:54"><name pos:start="69:5" pos:end="69:16">BLKDBG_EVENT</name><argument_list pos:start="69:17" pos:end="69:54">(<argument pos:start="69:18" pos:end="69:28"><expr pos:start="69:18" pos:end="69:28"><name pos:start="69:18" pos:end="69:28"><name pos:start="69:18" pos:end="69:18">s</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:22">bs</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:28">file</name></name></expr></argument>, <argument pos:start="69:31" pos:end="69:53"><expr pos:start="69:31" pos:end="69:53"><name pos:start="69:31" pos:end="69:53">BLKDBG_READ_BACKING_AIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="73:62"><expr pos:start="71:5" pos:end="73:61"><call pos:start="71:5" pos:end="73:61"><name pos:start="71:5" pos:end="71:18">bdrv_aio_readv</name><argument_list pos:start="71:19" pos:end="73:61">(<argument pos:start="71:20" pos:end="71:36"><expr pos:start="71:20" pos:end="71:36"><name pos:start="71:20" pos:end="71:36"><name pos:start="71:20" pos:end="71:20">s</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:24">bs</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:36">backing_hd</name></name></expr></argument>, <argument pos:start="71:39" pos:end="71:60"><expr pos:start="71:39" pos:end="71:60"><name pos:start="71:39" pos:end="71:41">pos</name> <operator pos:start="71:43" pos:end="71:43">/</operator> <name pos:start="71:45" pos:end="71:60">BDRV_SECTOR_SIZE</name></expr></argument>,

                   <argument pos:start="73:20" pos:end="73:23"><expr pos:start="73:20" pos:end="73:23"><name pos:start="73:20" pos:end="73:23">qiov</name></expr></argument>, <argument pos:start="73:26" pos:end="73:48"><expr pos:start="73:26" pos:end="73:48"><name pos:start="73:26" pos:end="73:29">size</name> <operator pos:start="73:31" pos:end="73:31">/</operator> <name pos:start="73:33" pos:end="73:48">BDRV_SECTOR_SIZE</name></expr></argument>, <argument pos:start="73:51" pos:end="73:52"><expr pos:start="73:51" pos:end="73:52"><name pos:start="73:51" pos:end="73:52">cb</name></expr></argument>, <argument pos:start="73:55" pos:end="73:60"><expr pos:start="73:55" pos:end="73:60"><name pos:start="73:55" pos:end="73:60">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
