<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1752.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">qemu_rbd_parsename</name><parameter_list pos:start="1:30" pos:end="11:43">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:50">filename</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">char</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">pool</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:54">pool_len</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:40"><decl pos:start="5:31" pos:end="5:40"><type pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:34">char</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:40">snap</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">snap_len</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:40"><decl pos:start="7:31" pos:end="7:40"><type pos:start="7:31" pos:end="7:40"><name pos:start="7:31" pos:end="7:34">char</name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:40">name</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:54"><decl pos:start="7:43" pos:end="7:54"><type pos:start="7:43" pos:end="7:54"><name pos:start="7:43" pos:end="7:45">int</name></type> <name pos:start="7:47" pos:end="7:54">name_len</name></decl></parameter>,

                              <parameter pos:start="9:31" pos:end="9:40"><decl pos:start="9:31" pos:end="9:40"><type pos:start="9:31" pos:end="9:40"><name pos:start="9:31" pos:end="9:34">char</name> <modifier pos:start="9:36" pos:end="9:36">*</modifier></type><name pos:start="9:37" pos:end="9:40">conf</name></decl></parameter>, <parameter pos:start="9:43" pos:end="9:54"><decl pos:start="9:43" pos:end="9:54"><type pos:start="9:43" pos:end="9:54"><name pos:start="9:43" pos:end="9:45">int</name></type> <name pos:start="9:47" pos:end="9:54">conf_len</name></decl></parameter>,

                              <parameter pos:start="11:31" pos:end="11:42"><decl pos:start="11:31" pos:end="11:42"><type pos:start="11:31" pos:end="11:42"><name pos:start="11:31" pos:end="11:35">Error</name> <modifier pos:start="11:37" pos:end="11:37">*</modifier><modifier pos:start="11:38" pos:end="11:38">*</modifier></type><name pos:start="11:39" pos:end="11:42">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="159:1">{<block_content pos:start="15:5" pos:end="157:15">

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:21">start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:11">p</name></decl>, <decl pos:start="17:14" pos:end="17:17"><type ref="prev" pos:start="17:5" pos:end="17:10"><modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:17">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name> <init pos:start="19:13" pos:end="19:15">= <expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">char</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:19">found_str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:9">Error</name> <modifier pos:start="23:11" pos:end="23:11">*</modifier></type><name pos:start="23:12" pos:end="23:20">local_err</name> <init pos:start="23:22" pos:end="23:27">= <expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:44">(<expr pos:start="27:9" pos:end="27:43"><operator pos:start="27:9" pos:end="27:9">!</operator><call pos:start="27:10" pos:end="27:43"><name pos:start="27:10" pos:end="27:17">strstart</name><argument_list pos:start="27:18" pos:end="27:43">(<argument pos:start="27:19" pos:end="27:26"><expr pos:start="27:19" pos:end="27:26"><name pos:start="27:19" pos:end="27:26">filename</name></expr></argument>, <argument pos:start="27:29" pos:end="27:34"><expr pos:start="27:29" pos:end="27:34"><literal type="string" pos:start="27:29" pos:end="27:34">"rbd:"</literal></expr></argument>, <argument pos:start="27:37" pos:end="27:42"><expr pos:start="27:37" pos:end="27:42"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:42">start</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:46" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:23">

        <expr_stmt pos:start="29:9" pos:end="29:61"><expr pos:start="29:9" pos:end="29:60"><call pos:start="29:9" pos:end="29:60"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="29:60">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:59"><expr pos:start="29:26" pos:end="29:59"><literal type="string" pos:start="29:26" pos:end="29:59">"File name must start with 'rbd:'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:23">return <expr pos:start="31:16" pos:end="31:22"><operator pos:start="31:16" pos:end="31:16">-</operator><name pos:start="31:17" pos:end="31:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:7">buf</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:25"><name pos:start="37:11" pos:end="37:18">g_strdup</name><argument_list pos:start="37:19" pos:end="37:25">(<argument pos:start="37:20" pos:end="37:24"><expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:24">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:12"><expr pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:5">p</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <name pos:start="39:9" pos:end="39:11">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:17"><expr pos:start="41:5" pos:end="41:16"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:9">snap</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <literal type="char" pos:start="41:13" pos:end="41:16">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:17"><expr pos:start="43:5" pos:end="43:16"><operator pos:start="43:5" pos:end="43:5">*</operator><name pos:start="43:6" pos:end="43:9">conf</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <literal type="char" pos:start="43:13" pos:end="43:16">'\0'</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:68"><expr pos:start="47:5" pos:end="49:67"><name pos:start="47:5" pos:end="47:13">found_str</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="49:67"><name pos:start="47:17" pos:end="47:33">qemu_rbd_next_tok</name><argument_list pos:start="47:34" pos:end="49:67">(<argument pos:start="47:35" pos:end="47:42"><expr pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:42">pool_len</name></expr></argument>, <argument pos:start="47:45" pos:end="47:45"><expr pos:start="47:45" pos:end="47:45"><name pos:start="47:45" pos:end="47:45">p</name></expr></argument>,

                                  <argument pos:start="49:35" pos:end="49:37"><expr pos:start="49:35" pos:end="49:37"><literal type="char" pos:start="49:35" pos:end="49:37">'/'</literal></expr></argument>, <argument pos:start="49:40" pos:end="49:50"><expr pos:start="49:40" pos:end="49:50"><literal type="string" pos:start="49:40" pos:end="49:50">"pool name"</literal></expr></argument>, <argument pos:start="49:53" pos:end="49:54"><expr pos:start="49:53" pos:end="49:54"><operator pos:start="49:53" pos:end="49:53">&amp;</operator><name pos:start="49:54" pos:end="49:54">p</name></expr></argument>, <argument pos:start="49:57" pos:end="49:66"><expr pos:start="49:57" pos:end="49:66"><operator pos:start="49:57" pos:end="49:57">&amp;</operator><name pos:start="49:58" pos:end="49:66">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:18">(<expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:17">local_err</name></expr>)</condition> <block pos:start="51:20" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:18">

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:11">(<expr pos:start="57:9" pos:end="57:10"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:10">p</name></expr>)</condition> <block pos:start="57:13" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:18">

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <operator pos:start="59:15" pos:end="59:15">-</operator><name pos:start="59:16" pos:end="59:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><call pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:18">error_setg</name><argument_list pos:start="61:19" pos:end="61:49">(<argument pos:start="61:20" pos:end="61:23"><expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">errp</name></expr></argument>, <argument pos:start="61:26" pos:end="61:48"><expr pos:start="61:26" pos:end="61:48"><literal type="string" pos:start="61:26" pos:end="61:48">"Pool name is required"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:33"><expr pos:start="67:5" pos:end="67:32"><call pos:start="67:5" pos:end="67:32"><name pos:start="67:5" pos:end="67:21">qemu_rbd_unescape</name><argument_list pos:start="67:22" pos:end="67:32">(<argument pos:start="67:23" pos:end="67:31"><expr pos:start="67:23" pos:end="67:31"><name pos:start="67:23" pos:end="67:31">found_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:41"><expr pos:start="69:5" pos:end="69:40"><call pos:start="69:5" pos:end="69:40"><name pos:start="69:5" pos:end="69:13">g_strlcpy</name><argument_list pos:start="69:14" pos:end="69:40">(<argument pos:start="69:15" pos:end="69:18"><expr pos:start="69:15" pos:end="69:18"><name pos:start="69:15" pos:end="69:18">pool</name></expr></argument>, <argument pos:start="69:21" pos:end="69:29"><expr pos:start="69:21" pos:end="69:29"><name pos:start="69:21" pos:end="69:29">found_str</name></expr></argument>, <argument pos:start="69:32" pos:end="69:39"><expr pos:start="69:32" pos:end="69:39"><name pos:start="69:32" pos:end="69:39">pool_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="121:5"><if pos:start="73:5" pos:end="105:5">if <condition pos:start="73:8" pos:end="73:23">(<expr pos:start="73:9" pos:end="73:22"><call pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:14">strchr</name><argument_list pos:start="73:15" pos:end="73:22">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">p</name></expr></argument>, <argument pos:start="73:19" pos:end="73:21"><expr pos:start="73:19" pos:end="73:21"><literal type="char" pos:start="73:19" pos:end="73:21">'@'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:25" pos:end="105:5">{<block_content pos:start="75:9" pos:end="103:45">

        <expr_stmt pos:start="75:9" pos:end="77:74"><expr pos:start="75:9" pos:end="77:73"><name pos:start="75:9" pos:end="75:17">found_str</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <call pos:start="75:21" pos:end="77:73"><name pos:start="75:21" pos:end="75:37">qemu_rbd_next_tok</name><argument_list pos:start="75:38" pos:end="77:73">(<argument pos:start="75:39" pos:end="75:46"><expr pos:start="75:39" pos:end="75:46"><name pos:start="75:39" pos:end="75:46">name_len</name></expr></argument>, <argument pos:start="75:49" pos:end="75:49"><expr pos:start="75:49" pos:end="75:49"><name pos:start="75:49" pos:end="75:49">p</name></expr></argument>,

                                      <argument pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><literal type="char" pos:start="77:39" pos:end="77:41">'@'</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:56"><expr pos:start="77:44" pos:end="77:56"><literal type="string" pos:start="77:44" pos:end="77:56">"object name"</literal></expr></argument>, <argument pos:start="77:59" pos:end="77:60"><expr pos:start="77:59" pos:end="77:60"><operator pos:start="77:59" pos:end="77:59">&amp;</operator><name pos:start="77:60" pos:end="77:60">p</name></expr></argument>, <argument pos:start="77:63" pos:end="77:72"><expr pos:start="77:63" pos:end="77:72"><operator pos:start="77:63" pos:end="77:63">&amp;</operator><name pos:start="77:64" pos:end="77:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:22">(<expr pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:21">local_err</name></expr>)</condition> <block pos:start="79:24" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:22">

            <goto pos:start="81:13" pos:end="81:22">goto <name pos:start="81:18" pos:end="81:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:37"><expr pos:start="85:9" pos:end="85:36"><call pos:start="85:9" pos:end="85:36"><name pos:start="85:9" pos:end="85:25">qemu_rbd_unescape</name><argument_list pos:start="85:26" pos:end="85:36">(<argument pos:start="85:27" pos:end="85:35"><expr pos:start="85:27" pos:end="85:35"><name pos:start="85:27" pos:end="85:35">found_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:45"><expr pos:start="87:9" pos:end="87:44"><call pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:17">g_strlcpy</name><argument_list pos:start="87:18" pos:end="87:44">(<argument pos:start="87:19" pos:end="87:22"><expr pos:start="87:19" pos:end="87:22"><name pos:start="87:19" pos:end="87:22">name</name></expr></argument>, <argument pos:start="87:25" pos:end="87:33"><expr pos:start="87:25" pos:end="87:33"><name pos:start="87:25" pos:end="87:33">found_str</name></expr></argument>, <argument pos:start="87:36" pos:end="87:43"><expr pos:start="87:36" pos:end="87:43"><name pos:start="87:36" pos:end="87:43">name_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="93:72"><expr pos:start="91:9" pos:end="93:71"><name pos:start="91:9" pos:end="91:17">found_str</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="93:71"><name pos:start="91:21" pos:end="91:37">qemu_rbd_next_tok</name><argument_list pos:start="91:38" pos:end="93:71">(<argument pos:start="91:39" pos:end="91:46"><expr pos:start="91:39" pos:end="91:46"><name pos:start="91:39" pos:end="91:46">snap_len</name></expr></argument>, <argument pos:start="91:49" pos:end="91:49"><expr pos:start="91:49" pos:end="91:49"><name pos:start="91:49" pos:end="91:49">p</name></expr></argument>,

                                      <argument pos:start="93:39" pos:end="93:41"><expr pos:start="93:39" pos:end="93:41"><literal type="char" pos:start="93:39" pos:end="93:41">':'</literal></expr></argument>, <argument pos:start="93:44" pos:end="93:54"><expr pos:start="93:44" pos:end="93:54"><literal type="string" pos:start="93:44" pos:end="93:54">"snap name"</literal></expr></argument>, <argument pos:start="93:57" pos:end="93:58"><expr pos:start="93:57" pos:end="93:58"><operator pos:start="93:57" pos:end="93:57">&amp;</operator><name pos:start="93:58" pos:end="93:58">p</name></expr></argument>, <argument pos:start="93:61" pos:end="93:70"><expr pos:start="93:61" pos:end="93:70"><operator pos:start="93:61" pos:end="93:61">&amp;</operator><name pos:start="93:62" pos:end="93:70">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:22">(<expr pos:start="95:13" pos:end="95:21"><name pos:start="95:13" pos:end="95:21">local_err</name></expr>)</condition> <block pos:start="95:24" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:22">

            <goto pos:start="97:13" pos:end="97:22">goto <name pos:start="97:18" pos:end="97:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:37"><expr pos:start="101:9" pos:end="101:36"><call pos:start="101:9" pos:end="101:36"><name pos:start="101:9" pos:end="101:25">qemu_rbd_unescape</name><argument_list pos:start="101:26" pos:end="101:36">(<argument pos:start="101:27" pos:end="101:35"><expr pos:start="101:27" pos:end="101:35"><name pos:start="101:27" pos:end="101:35">found_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:45"><expr pos:start="103:9" pos:end="103:44"><call pos:start="103:9" pos:end="103:44"><name pos:start="103:9" pos:end="103:17">g_strlcpy</name><argument_list pos:start="103:18" pos:end="103:44">(<argument pos:start="103:19" pos:end="103:22"><expr pos:start="103:19" pos:end="103:22"><name pos:start="103:19" pos:end="103:22">snap</name></expr></argument>, <argument pos:start="103:25" pos:end="103:33"><expr pos:start="103:25" pos:end="103:33"><name pos:start="103:25" pos:end="103:33">found_str</name></expr></argument>, <argument pos:start="103:36" pos:end="103:43"><expr pos:start="103:36" pos:end="103:43"><name pos:start="103:36" pos:end="103:43">snap_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="121:5">else <block pos:start="105:12" pos:end="121:5">{<block_content pos:start="107:9" pos:end="119:45">

        <expr_stmt pos:start="107:9" pos:end="109:74"><expr pos:start="107:9" pos:end="109:73"><name pos:start="107:9" pos:end="107:17">found_str</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <call pos:start="107:21" pos:end="109:73"><name pos:start="107:21" pos:end="107:37">qemu_rbd_next_tok</name><argument_list pos:start="107:38" pos:end="109:73">(<argument pos:start="107:39" pos:end="107:46"><expr pos:start="107:39" pos:end="107:46"><name pos:start="107:39" pos:end="107:46">name_len</name></expr></argument>, <argument pos:start="107:49" pos:end="107:49"><expr pos:start="107:49" pos:end="107:49"><name pos:start="107:49" pos:end="107:49">p</name></expr></argument>,

                                      <argument pos:start="109:39" pos:end="109:41"><expr pos:start="109:39" pos:end="109:41"><literal type="char" pos:start="109:39" pos:end="109:41">':'</literal></expr></argument>, <argument pos:start="109:44" pos:end="109:56"><expr pos:start="109:44" pos:end="109:56"><literal type="string" pos:start="109:44" pos:end="109:56">"object name"</literal></expr></argument>, <argument pos:start="109:59" pos:end="109:60"><expr pos:start="109:59" pos:end="109:60"><operator pos:start="109:59" pos:end="109:59">&amp;</operator><name pos:start="109:60" pos:end="109:60">p</name></expr></argument>, <argument pos:start="109:63" pos:end="109:72"><expr pos:start="109:63" pos:end="109:72"><operator pos:start="109:63" pos:end="109:63">&amp;</operator><name pos:start="109:64" pos:end="109:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="115:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:22">(<expr pos:start="111:13" pos:end="111:21"><name pos:start="111:13" pos:end="111:21">local_err</name></expr>)</condition> <block pos:start="111:24" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:22">

            <goto pos:start="113:13" pos:end="113:22">goto <name pos:start="113:18" pos:end="113:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><call pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:25">qemu_rbd_unescape</name><argument_list pos:start="117:26" pos:end="117:36">(<argument pos:start="117:27" pos:end="117:35"><expr pos:start="117:27" pos:end="117:35"><name pos:start="117:27" pos:end="117:35">found_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:45"><expr pos:start="119:9" pos:end="119:44"><call pos:start="119:9" pos:end="119:44"><name pos:start="119:9" pos:end="119:17">g_strlcpy</name><argument_list pos:start="119:18" pos:end="119:44">(<argument pos:start="119:19" pos:end="119:22"><expr pos:start="119:19" pos:end="119:22"><name pos:start="119:19" pos:end="119:22">name</name></expr></argument>, <argument pos:start="119:25" pos:end="119:33"><expr pos:start="119:25" pos:end="119:33"><name pos:start="119:25" pos:end="119:33">found_str</name></expr></argument>, <argument pos:start="119:36" pos:end="119:43"><expr pos:start="119:36" pos:end="119:43"><name pos:start="119:36" pos:end="119:43">name_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:11">(<expr pos:start="123:9" pos:end="123:10"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:10">p</name></expr>)</condition> <block pos:start="123:13" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:18">

        <goto pos:start="125:9" pos:end="125:18">goto <name pos:start="125:14" pos:end="125:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="133:73"><expr pos:start="131:5" pos:end="133:72"><name pos:start="131:5" pos:end="131:13">found_str</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <call pos:start="131:17" pos:end="133:72"><name pos:start="131:17" pos:end="131:33">qemu_rbd_next_tok</name><argument_list pos:start="131:34" pos:end="133:72">(<argument pos:start="131:35" pos:end="131:42"><expr pos:start="131:35" pos:end="131:42"><name pos:start="131:35" pos:end="131:42">conf_len</name></expr></argument>, <argument pos:start="131:45" pos:end="131:45"><expr pos:start="131:45" pos:end="131:45"><name pos:start="131:45" pos:end="131:45">p</name></expr></argument>,

                                  <argument pos:start="133:35" pos:end="133:38"><expr pos:start="133:35" pos:end="133:38"><literal type="char" pos:start="133:35" pos:end="133:38">'\0'</literal></expr></argument>, <argument pos:start="133:41" pos:end="133:55"><expr pos:start="133:41" pos:end="133:55"><literal type="string" pos:start="133:41" pos:end="133:55">"configuration"</literal></expr></argument>, <argument pos:start="133:58" pos:end="133:59"><expr pos:start="133:58" pos:end="133:59"><operator pos:start="133:58" pos:end="133:58">&amp;</operator><name pos:start="133:59" pos:end="133:59">p</name></expr></argument>, <argument pos:start="133:62" pos:end="133:71"><expr pos:start="133:62" pos:end="133:71"><operator pos:start="133:62" pos:end="133:62">&amp;</operator><name pos:start="133:63" pos:end="133:71">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="139:5"><if pos:start="135:5" pos:end="139:5">if <condition pos:start="135:8" pos:end="135:18">(<expr pos:start="135:9" pos:end="135:17"><name pos:start="135:9" pos:end="135:17">local_err</name></expr>)</condition> <block pos:start="135:20" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:18">

        <goto pos:start="137:9" pos:end="137:18">goto <name pos:start="137:14" pos:end="137:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:41"><expr pos:start="141:5" pos:end="141:40"><call pos:start="141:5" pos:end="141:40"><name pos:start="141:5" pos:end="141:13">g_strlcpy</name><argument_list pos:start="141:14" pos:end="141:40">(<argument pos:start="141:15" pos:end="141:18"><expr pos:start="141:15" pos:end="141:18"><name pos:start="141:15" pos:end="141:18">conf</name></expr></argument>, <argument pos:start="141:21" pos:end="141:29"><expr pos:start="141:21" pos:end="141:29"><name pos:start="141:21" pos:end="141:29">found_str</name></expr></argument>, <argument pos:start="141:32" pos:end="141:39"><expr pos:start="141:32" pos:end="141:39"><name pos:start="141:32" pos:end="141:39">conf_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="145:1" pos:end="145:5"><name pos:start="145:1" pos:end="145:4">done</name>:</label>

    <if_stmt pos:start="147:5" pos:end="153:5"><if pos:start="147:5" pos:end="153:5">if <condition pos:start="147:8" pos:end="147:18">(<expr pos:start="147:9" pos:end="147:17"><name pos:start="147:9" pos:end="147:17">local_err</name></expr>)</condition> <block pos:start="147:20" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:41">

        <expr_stmt pos:start="149:9" pos:end="149:22"><expr pos:start="149:9" pos:end="149:21"><name pos:start="149:9" pos:end="149:11">ret</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <operator pos:start="149:15" pos:end="149:15">-</operator><name pos:start="149:16" pos:end="149:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:41"><expr pos:start="151:9" pos:end="151:40"><call pos:start="151:9" pos:end="151:40"><name pos:start="151:9" pos:end="151:23">error_propagate</name><argument_list pos:start="151:24" pos:end="151:40">(<argument pos:start="151:25" pos:end="151:28"><expr pos:start="151:25" pos:end="151:28"><name pos:start="151:25" pos:end="151:28">errp</name></expr></argument>, <argument pos:start="151:31" pos:end="151:39"><expr pos:start="151:31" pos:end="151:39"><name pos:start="151:31" pos:end="151:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:16"><expr pos:start="155:5" pos:end="155:15"><call pos:start="155:5" pos:end="155:15"><name pos:start="155:5" pos:end="155:10">g_free</name><argument_list pos:start="155:11" pos:end="155:15">(<argument pos:start="155:12" pos:end="155:14"><expr pos:start="155:12" pos:end="155:14"><name pos:start="155:12" pos:end="155:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="157:5" pos:end="157:15">return <expr pos:start="157:12" pos:end="157:14"><name pos:start="157:12" pos:end="157:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
