<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9396.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:27">arm_ldq_ptw</name><parameter_list pos:start="1:28" pos:end="3:67">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:36">CPUState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">cs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:48">hwaddr</name></type> <name pos:start="1:50" pos:end="1:53">addr</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:59">bool</name></type> <name pos:start="1:61" pos:end="1:69">is_secure</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:37">ARMMMUIdx</name></type> <name pos:start="3:39" pos:end="3:45">mmu_idx</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:66"><decl pos:start="3:48" pos:end="3:66"><type pos:start="3:48" pos:end="3:66"><name pos:start="3:48" pos:end="3:62">ARMMMUFaultInfo</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:66">fi</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:5">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">ARMCPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:29">= <expr pos:start="7:19" pos:end="7:29"><call pos:start="7:19" pos:end="7:29"><name pos:start="7:19" pos:end="7:25">ARM_CPU</name><argument_list pos:start="7:26" pos:end="7:29">(<argument pos:start="7:27" pos:end="7:28"><expr pos:start="7:27" pos:end="7:28"><name pos:start="7:27" pos:end="7:28">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">CPUARMState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">env</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:27">cpu</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">MemTxAttrs</name></type> <name pos:start="11:16" pos:end="11:20">attrs</name> <init pos:start="11:22" pos:end="11:25">= <expr pos:start="11:24" pos:end="11:25"><block pos:start="11:24" pos:end="11:25">{}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">AddressSpace</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">as</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:9">attrs</name><operator pos:start="17:10" pos:end="17:10">.</operator><name pos:start="17:11" pos:end="17:16">secure</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:28">is_secure</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:6">as</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:36"><name pos:start="19:10" pos:end="19:25">arm_addressspace</name><argument_list pos:start="19:26" pos:end="19:36">(<argument pos:start="19:27" pos:end="19:28"><expr pos:start="19:27" pos:end="19:28"><name pos:start="19:27" pos:end="19:28">cs</name></expr></argument>, <argument pos:start="19:31" pos:end="19:35"><expr pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:35">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:59"><expr pos:start="21:5" pos:end="21:58"><name pos:start="21:5" pos:end="21:8">addr</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:58"><name pos:start="21:12" pos:end="21:27">S1_ptw_translate</name><argument_list pos:start="21:28" pos:end="21:58">(<argument pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">env</name></expr></argument>, <argument pos:start="21:34" pos:end="21:40"><expr pos:start="21:34" pos:end="21:40"><name pos:start="21:34" pos:end="21:40">mmu_idx</name></expr></argument>, <argument pos:start="21:43" pos:end="21:46"><expr pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:46">addr</name></expr></argument>, <argument pos:start="21:49" pos:end="21:53"><expr pos:start="21:49" pos:end="21:53"><name pos:start="21:49" pos:end="21:53">attrs</name></expr></argument>, <argument pos:start="21:56" pos:end="21:57"><expr pos:start="21:56" pos:end="21:57"><name pos:start="21:56" pos:end="21:57">fi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:10">fi</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:17">s1ptw</name></name></expr>)</condition> <block pos:start="23:20" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:52">(<expr pos:start="29:9" pos:end="29:51"><call pos:start="29:9" pos:end="29:51"><name pos:start="29:9" pos:end="29:37">regime_translation_big_endian</name><argument_list pos:start="29:38" pos:end="29:51">(<argument pos:start="29:39" pos:end="29:41"><expr pos:start="29:39" pos:end="29:41"><name pos:start="29:39" pos:end="29:41">env</name></expr></argument>, <argument pos:start="29:44" pos:end="29:50"><expr pos:start="29:44" pos:end="29:50"><name pos:start="29:44" pos:end="29:50">mmu_idx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:54" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:59">

        <return pos:start="31:9" pos:end="31:59">return <expr pos:start="31:16" pos:end="31:58"><call pos:start="31:16" pos:end="31:58"><name pos:start="31:16" pos:end="31:35">address_space_ldq_be</name><argument_list pos:start="31:36" pos:end="31:58">(<argument pos:start="31:37" pos:end="31:38"><expr pos:start="31:37" pos:end="31:38"><name pos:start="31:37" pos:end="31:38">as</name></expr></argument>, <argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">addr</name></expr></argument>, <argument pos:start="31:47" pos:end="31:51"><expr pos:start="31:47" pos:end="31:51"><name pos:start="31:47" pos:end="31:51">attrs</name></expr></argument>, <argument pos:start="31:54" pos:end="31:57"><expr pos:start="31:54" pos:end="31:57"><name pos:start="31:54" pos:end="31:57">NULL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:59">

        <return pos:start="35:9" pos:end="35:59">return <expr pos:start="35:16" pos:end="35:58"><call pos:start="35:16" pos:end="35:58"><name pos:start="35:16" pos:end="35:35">address_space_ldq_le</name><argument_list pos:start="35:36" pos:end="35:58">(<argument pos:start="35:37" pos:end="35:38"><expr pos:start="35:37" pos:end="35:38"><name pos:start="35:37" pos:end="35:38">as</name></expr></argument>, <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">addr</name></expr></argument>, <argument pos:start="35:47" pos:end="35:51"><expr pos:start="35:47" pos:end="35:51"><name pos:start="35:47" pos:end="35:51">attrs</name></expr></argument>, <argument pos:start="35:54" pos:end="35:57"><expr pos:start="35:54" pos:end="35:57"><name pos:start="35:54" pos:end="35:57">NULL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
