<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15351.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">qemu_accept</name><parameter_list pos:start="1:16" pos:end="1:65">(<parameter pos:start="1:17" pos:end="1:21"><decl pos:start="1:17" pos:end="1:21"><type pos:start="1:17" pos:end="1:21"><name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:21">s</name></decl></parameter>, <parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:29">struct</name> <name pos:start="1:31" pos:end="1:38">sockaddr</name></name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">addr</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:55">socklen_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:64">addrlen</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:15">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="9:1" pos:end="9:21">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:21">CONFIG_ACCEPT4</name></cpp:ifdef>

    <expr_stmt pos:start="11:5" pos:end="11:50"><expr pos:start="11:5" pos:end="11:49"><name pos:start="11:5" pos:end="11:7">ret</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:49"><name pos:start="11:11" pos:end="11:17">accept4</name><argument_list pos:start="11:18" pos:end="11:49">(<argument pos:start="11:19" pos:end="11:19"><expr pos:start="11:19" pos:end="11:19"><name pos:start="11:19" pos:end="11:19">s</name></expr></argument>, <argument pos:start="11:22" pos:end="11:25"><expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">addr</name></expr></argument>, <argument pos:start="11:28" pos:end="11:34"><expr pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:34">addrlen</name></expr></argument>, <argument pos:start="11:37" pos:end="11:48"><expr pos:start="11:37" pos:end="11:48"><name pos:start="11:37" pos:end="11:48">SOCK_CLOEXEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="20:0"><if pos:start="13:5" pos:end="20:0">if <condition pos:start="13:8" pos:end="13:37">(<expr pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:14">!=</operator> <operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal> <operator pos:start="13:19" pos:end="13:20">||</operator> <name pos:start="13:22" pos:end="13:26">errno</name> <operator pos:start="13:28" pos:end="13:29">!=</operator> <name pos:start="13:31" pos:end="13:36">EINVAL</name></expr>)</condition> <block pos:start="13:39" pos:end="20:0">{<block_content pos:start="15:9" pos:end="15:19">

        <return pos:start="15:9" pos:end="15:19">return <expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:34"><name pos:start="21:11" pos:end="21:16">accept</name><argument_list pos:start="21:17" pos:end="21:34">(<argument pos:start="21:18" pos:end="21:18"><expr pos:start="21:18" pos:end="21:18"><name pos:start="21:18" pos:end="21:18">s</name></expr></argument>, <argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:24">addr</name></expr></argument>, <argument pos:start="21:27" pos:end="21:33"><expr pos:start="21:27" pos:end="21:33"><name pos:start="21:27" pos:end="21:33">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:14">&gt;=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>)</condition> <block pos:start="23:19" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:30">

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><call pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:24">qemu_set_cloexec</name><argument_list pos:start="25:25" pos:end="25:29">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
