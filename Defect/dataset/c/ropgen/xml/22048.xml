<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22048.c" pos:tabs="8"><function pos:start="1:1" pos:end="126:28"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:37">v9fs_lcreate</name><parameter_list pos:start="1:38" pos:end="1:51">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:44"><name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="126:28">{<block_content pos:start="5:5" pos:end="126:28">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:16">dfid</name></decl>, <decl pos:start="5:19" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:19" pos:end="5:23">flags</name></decl>, <decl pos:start="5:26" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:26" pos:end="5:29">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">gid_t</name></type> <name pos:start="7:11" pos:end="7:13">gid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:15">err</name> <init pos:start="9:17" pos:end="9:19">= <expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">ssize_t</name></type> <name pos:start="11:13" pos:end="11:18">offset</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">V9fsString</name></type> <name pos:start="13:16" pos:end="13:19">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">V9fsFidState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:15">stat</name></name></type> <name pos:start="17:17" pos:end="17:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">V9fsQID</name></type> <name pos:start="19:13" pos:end="19:15">qid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int32_t</name></type> <name pos:start="21:13" pos:end="21:18">iounit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">V9fsPDU</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:16">pdu</name> <init pos:start="23:18" pos:end="23:25">= <expr pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><call pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:20">v9fs_string_init</name><argument_list pos:start="27:21" pos:end="27:27">(<argument pos:start="27:22" pos:end="27:26"><expr pos:start="27:22" pos:end="27:26"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:52"><expr pos:start="29:5" pos:end="31:51"><name pos:start="29:5" pos:end="29:7">err</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="31:51"><name pos:start="29:11" pos:end="29:23">pdu_unmarshal</name><argument_list pos:start="29:24" pos:end="31:51">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">pdu</name></expr></argument>, <argument pos:start="29:30" pos:end="29:35"><expr pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:35">offset</name></expr></argument>, <argument pos:start="29:38" pos:end="29:44"><expr pos:start="29:38" pos:end="29:44"><literal type="string" pos:start="29:38" pos:end="29:44">"dsddd"</literal></expr></argument>, <argument pos:start="29:47" pos:end="29:51"><expr pos:start="29:47" pos:end="29:51"><operator pos:start="29:47" pos:end="29:47">&amp;</operator><name pos:start="29:48" pos:end="29:51">dfid</name></expr></argument>,

                        <argument pos:start="31:25" pos:end="31:29"><expr pos:start="31:25" pos:end="31:29"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:29">name</name></expr></argument>, <argument pos:start="31:32" pos:end="31:37"><expr pos:start="31:32" pos:end="31:37"><operator pos:start="31:32" pos:end="31:32">&amp;</operator><name pos:start="31:33" pos:end="31:37">flags</name></expr></argument>, <argument pos:start="31:40" pos:end="31:44"><expr pos:start="31:40" pos:end="31:44"><operator pos:start="31:40" pos:end="31:40">&amp;</operator><name pos:start="31:41" pos:end="31:44">mode</name></expr></argument>, <argument pos:start="31:47" pos:end="31:50"><expr pos:start="31:47" pos:end="31:50"><operator pos:start="31:47" pos:end="31:47">&amp;</operator><name pos:start="31:48" pos:end="31:50">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="126:28"><if pos:start="33:5" pos:end="126:28">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">err</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="126:28">{<block_content pos:start="35:9" pos:end="126:28">

        <goto pos:start="35:9" pos:end="35:23">goto <name pos:start="35:14" pos:end="35:22">out_nofid</name>;</goto>


    <expr_stmt pos:start="38:5" pos:end="38:66"><expr pos:start="38:5" pos:end="38:65"><call pos:start="38:5" pos:end="38:65"><name pos:start="38:5" pos:end="38:22">trace_v9fs_lcreate</name><argument_list pos:start="38:23" pos:end="38:65">(<argument pos:start="38:24" pos:end="38:31"><expr pos:start="38:24" pos:end="38:31"><name pos:start="38:24" pos:end="38:31"><name pos:start="38:24" pos:end="38:26">pdu</name><operator pos:start="38:27" pos:end="38:28">-&gt;</operator><name pos:start="38:29" pos:end="38:31">tag</name></name></expr></argument>, <argument pos:start="38:34" pos:end="38:40"><expr pos:start="38:34" pos:end="38:40"><name pos:start="38:34" pos:end="38:40"><name pos:start="38:34" pos:end="38:36">pdu</name><operator pos:start="38:37" pos:end="38:38">-&gt;</operator><name pos:start="38:39" pos:end="38:40">id</name></name></expr></argument>, <argument pos:start="38:43" pos:end="38:46"><expr pos:start="38:43" pos:end="38:46"><name pos:start="38:43" pos:end="38:46">dfid</name></expr></argument>, <argument pos:start="38:49" pos:end="38:53"><expr pos:start="38:49" pos:end="38:53"><name pos:start="38:49" pos:end="38:53">flags</name></expr></argument>, <argument pos:start="38:56" pos:end="38:59"><expr pos:start="38:56" pos:end="38:59"><name pos:start="38:56" pos:end="38:59">mode</name></expr></argument>, <argument pos:start="38:62" pos:end="38:64"><expr pos:start="38:62" pos:end="38:64"><name pos:start="38:62" pos:end="38:64">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="42:5" pos:end="126:28"><if pos:start="42:5" pos:end="126:28">if <condition pos:start="42:8" pos:end="42:35">(<expr pos:start="42:9" pos:end="42:34"><call pos:start="42:9" pos:end="42:34"><name pos:start="42:9" pos:end="42:23">name_is_illegal</name><argument_list pos:start="42:24" pos:end="42:34">(<argument pos:start="42:25" pos:end="42:33"><expr pos:start="42:25" pos:end="42:33"><name pos:start="42:25" pos:end="42:33"><name pos:start="42:25" pos:end="42:28">name</name><operator pos:start="42:29" pos:end="42:29">.</operator><name pos:start="42:30" pos:end="42:33">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="42:37" pos:end="126:28">{<block_content pos:start="44:9" pos:end="126:28">

        <expr_stmt pos:start="44:9" pos:end="44:22"><expr pos:start="44:9" pos:end="44:21"><name pos:start="44:9" pos:end="44:11">err</name> <operator pos:start="44:13" pos:end="44:13">=</operator> <operator pos:start="44:15" pos:end="44:15">-</operator><name pos:start="44:16" pos:end="44:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="46:9" pos:end="46:23">goto <name pos:start="46:14" pos:end="46:22">out_nofid</name>;</goto>




    <if_stmt pos:start="51:5" pos:end="126:28"><if pos:start="51:5" pos:end="126:28">if <condition pos:start="51:8" pos:end="51:60">(<expr pos:start="51:9" pos:end="51:59"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:31"><name pos:start="51:10" pos:end="51:15">strcmp</name><argument_list pos:start="51:16" pos:end="51:31">(<argument pos:start="51:17" pos:end="51:19"><expr pos:start="51:17" pos:end="51:19"><literal type="string" pos:start="51:17" pos:end="51:19">"."</literal></expr></argument>, <argument pos:start="51:22" pos:end="51:30"><expr pos:start="51:22" pos:end="51:30"><name pos:start="51:22" pos:end="51:30"><name pos:start="51:22" pos:end="51:25">name</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:30">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="51:33" pos:end="51:34">||</operator> <operator pos:start="51:36" pos:end="51:36">!</operator><call pos:start="51:37" pos:end="51:59"><name pos:start="51:37" pos:end="51:42">strcmp</name><argument_list pos:start="51:43" pos:end="51:59">(<argument pos:start="51:44" pos:end="51:47"><expr pos:start="51:44" pos:end="51:47"><literal type="string" pos:start="51:44" pos:end="51:47">".."</literal></expr></argument>, <argument pos:start="51:50" pos:end="51:58"><expr pos:start="51:50" pos:end="51:58"><name pos:start="51:50" pos:end="51:58"><name pos:start="51:50" pos:end="51:53">name</name><operator pos:start="51:54" pos:end="51:54">.</operator><name pos:start="51:55" pos:end="51:58">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:62" pos:end="126:28">{<block_content pos:start="53:9" pos:end="126:28">

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:11">err</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <operator pos:start="53:15" pos:end="53:15">-</operator><name pos:start="53:16" pos:end="53:21">EEXIST</name></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:23">goto <name pos:start="55:14" pos:end="55:22">out_nofid</name>;</goto>




    <expr_stmt pos:start="60:5" pos:end="60:30"><expr pos:start="60:5" pos:end="60:29"><name pos:start="60:5" pos:end="60:8">fidp</name> <operator pos:start="60:10" pos:end="60:10">=</operator> <call pos:start="60:12" pos:end="60:29"><name pos:start="60:12" pos:end="60:18">get_fid</name><argument_list pos:start="60:19" pos:end="60:29">(<argument pos:start="60:20" pos:end="60:22"><expr pos:start="60:20" pos:end="60:22"><name pos:start="60:20" pos:end="60:22">pdu</name></expr></argument>, <argument pos:start="60:25" pos:end="60:28"><expr pos:start="60:25" pos:end="60:28"><name pos:start="60:25" pos:end="60:28">dfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="62:5" pos:end="126:28"><if pos:start="62:5" pos:end="126:28">if <condition pos:start="62:8" pos:end="62:21">(<expr pos:start="62:9" pos:end="62:20"><name pos:start="62:9" pos:end="62:12">fidp</name> <operator pos:start="62:14" pos:end="62:15">==</operator> <name pos:start="62:17" pos:end="62:20">NULL</name></expr>)</condition> <block pos:start="62:23" pos:end="126:28">{<block_content pos:start="64:9" pos:end="126:28">

        <expr_stmt pos:start="64:9" pos:end="64:22"><expr pos:start="64:9" pos:end="64:21"><name pos:start="64:9" pos:end="64:11">err</name> <operator pos:start="64:13" pos:end="64:13">=</operator> <operator pos:start="64:15" pos:end="64:15">-</operator><name pos:start="64:16" pos:end="64:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="66:9" pos:end="66:23">goto <name pos:start="66:14" pos:end="66:22">out_nofid</name>;</goto>








    <expr_stmt pos:start="75:5" pos:end="75:46"><expr pos:start="75:5" pos:end="75:45"><name pos:start="75:5" pos:end="75:9">flags</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="75:45"><name pos:start="75:13" pos:end="75:30">get_dotl_openflags</name><argument_list pos:start="75:31" pos:end="75:45">(<argument pos:start="75:32" pos:end="75:37"><expr pos:start="75:32" pos:end="75:37"><name pos:start="75:32" pos:end="75:37"><name pos:start="75:32" pos:end="75:34">pdu</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:37">s</name></name></expr></argument>, <argument pos:start="75:40" pos:end="75:44"><expr pos:start="75:40" pos:end="75:44"><name pos:start="75:40" pos:end="75:44">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="79:55"><expr pos:start="77:5" pos:end="79:54"><name pos:start="77:5" pos:end="77:7">err</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="79:54"><name pos:start="77:11" pos:end="77:23">v9fs_co_open2</name><argument_list pos:start="77:24" pos:end="79:54">(<argument pos:start="77:25" pos:end="77:27"><expr pos:start="77:25" pos:end="77:27"><name pos:start="77:25" pos:end="77:27">pdu</name></expr></argument>, <argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:33">fidp</name></expr></argument>, <argument pos:start="77:36" pos:end="77:40"><expr pos:start="77:36" pos:end="77:40"><operator pos:start="77:36" pos:end="77:36">&amp;</operator><name pos:start="77:37" pos:end="77:40">name</name></expr></argument>, <argument pos:start="77:43" pos:end="77:45"><expr pos:start="77:43" pos:end="77:45"><name pos:start="77:43" pos:end="77:45">gid</name></expr></argument>,

                        <argument pos:start="79:25" pos:end="79:39"><expr pos:start="79:25" pos:end="79:39"><name pos:start="79:25" pos:end="79:29">flags</name> <operator pos:start="79:31" pos:end="79:31">|</operator> <name pos:start="79:33" pos:end="79:39">O_CREAT</name></expr></argument>, <argument pos:start="79:42" pos:end="79:45"><expr pos:start="79:42" pos:end="79:45"><name pos:start="79:42" pos:end="79:45">mode</name></expr></argument>, <argument pos:start="79:48" pos:end="79:53"><expr pos:start="79:48" pos:end="79:53"><operator pos:start="79:48" pos:end="79:48">&amp;</operator><name pos:start="79:49" pos:end="79:53">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="126:28"><if pos:start="81:5" pos:end="126:28">if <condition pos:start="81:8" pos:end="81:16">(<expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">err</name> <operator pos:start="81:13" pos:end="81:13">&lt;</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>)</condition> <block pos:start="81:18" pos:end="126:28">{<block_content pos:start="85:5" pos:end="126:28">



    <expr_stmt pos:start="85:5" pos:end="85:33"><expr pos:start="85:5" pos:end="85:32"><name pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:8">fidp</name><operator pos:start="85:9" pos:end="85:10">-&gt;</operator><name pos:start="85:11" pos:end="85:18">fid_type</name></name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:32">P9_FID_FILE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:29"><expr pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:20"><name pos:start="87:5" pos:end="87:8">fidp</name><operator pos:start="87:9" pos:end="87:10">-&gt;</operator><name pos:start="87:11" pos:end="87:20">open_flags</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:28">flags</name></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="126:28"><if pos:start="89:5" pos:end="126:28">if <condition pos:start="89:8" pos:end="89:23">(<expr pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:13">flags</name> <operator pos:start="89:15" pos:end="89:15">&amp;</operator> <name pos:start="89:17" pos:end="89:22">O_EXCL</name></expr>)</condition> <block pos:start="89:25" pos:end="126:28">{<block_content pos:start="99:9" pos:end="126:28">

        <comment type="block" pos:start="91:9" pos:end="97:11">/*

         * We let the host file system do O_EXCL check

         * We should not reclaim such fd

         */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:43"><expr pos:start="99:9" pos:end="99:42"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:12">fidp</name><operator pos:start="99:13" pos:end="99:14">-&gt;</operator><name pos:start="99:15" pos:end="99:19">flags</name></name> <operator pos:start="99:21" pos:end="99:22">|=</operator> <name pos:start="99:24" pos:end="99:42">FID_NON_RECLAIMABLE</name></expr>;</expr_stmt>


    <expr_stmt pos:start="102:5" pos:end="102:43"><expr pos:start="102:5" pos:end="102:42"><name pos:start="102:5" pos:end="102:10">iounit</name> <operator pos:start="102:12" pos:end="102:12">=</operator>  <call pos:start="102:15" pos:end="102:42"><name pos:start="102:15" pos:end="102:24">get_iounit</name><argument_list pos:start="102:25" pos:end="102:42">(<argument pos:start="102:26" pos:end="102:28"><expr pos:start="102:26" pos:end="102:28"><name pos:start="102:26" pos:end="102:28">pdu</name></expr></argument>, <argument pos:start="102:31" pos:end="102:41"><expr pos:start="102:31" pos:end="102:41"><operator pos:start="102:31" pos:end="102:31">&amp;</operator><name pos:start="102:32" pos:end="102:41"><name pos:start="102:32" pos:end="102:35">fidp</name><operator pos:start="102:36" pos:end="102:37">-&gt;</operator><name pos:start="102:38" pos:end="102:41">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="104:5" pos:end="104:30"><expr pos:start="104:5" pos:end="104:29"><call pos:start="104:5" pos:end="104:29"><name pos:start="104:5" pos:end="104:15">stat_to_qid</name><argument_list pos:start="104:16" pos:end="104:29">(<argument pos:start="104:17" pos:end="104:22"><expr pos:start="104:17" pos:end="104:22"><operator pos:start="104:17" pos:end="104:17">&amp;</operator><name pos:start="104:18" pos:end="104:22">stbuf</name></expr></argument>, <argument pos:start="104:25" pos:end="104:28"><expr pos:start="104:25" pos:end="104:28"><operator pos:start="104:25" pos:end="104:25">&amp;</operator><name pos:start="104:26" pos:end="104:28">qid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="106:5" pos:end="106:55"><expr pos:start="106:5" pos:end="106:54"><name pos:start="106:5" pos:end="106:7">err</name> <operator pos:start="106:9" pos:end="106:9">=</operator> <call pos:start="106:11" pos:end="106:54"><name pos:start="106:11" pos:end="106:21">pdu_marshal</name><argument_list pos:start="106:22" pos:end="106:54">(<argument pos:start="106:23" pos:end="106:25"><expr pos:start="106:23" pos:end="106:25"><name pos:start="106:23" pos:end="106:25">pdu</name></expr></argument>, <argument pos:start="106:28" pos:end="106:33"><expr pos:start="106:28" pos:end="106:33"><name pos:start="106:28" pos:end="106:33">offset</name></expr></argument>, <argument pos:start="106:36" pos:end="106:39"><expr pos:start="106:36" pos:end="106:39"><literal type="string" pos:start="106:36" pos:end="106:39">"Qd"</literal></expr></argument>, <argument pos:start="106:42" pos:end="106:45"><expr pos:start="106:42" pos:end="106:45"><operator pos:start="106:42" pos:end="106:42">&amp;</operator><name pos:start="106:43" pos:end="106:45">qid</name></expr></argument>, <argument pos:start="106:48" pos:end="106:53"><expr pos:start="106:48" pos:end="106:53"><name pos:start="106:48" pos:end="106:53">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="108:5" pos:end="126:28"><if pos:start="108:5" pos:end="126:28">if <condition pos:start="108:8" pos:end="108:16">(<expr pos:start="108:9" pos:end="108:15"><name pos:start="108:9" pos:end="108:11">err</name> <operator pos:start="108:13" pos:end="108:13">&lt;</operator> <literal type="number" pos:start="108:15" pos:end="108:15">0</literal></expr>)</condition> <block pos:start="108:18" pos:end="126:28">{<block_content pos:start="112:5" pos:end="126:28">



    <expr_stmt pos:start="112:5" pos:end="112:18"><expr pos:start="112:5" pos:end="112:17"><name pos:start="112:5" pos:end="112:7">err</name> <operator pos:start="112:9" pos:end="112:10">+=</operator> <name pos:start="112:12" pos:end="112:17">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="114:5" pos:end="116:71"><expr pos:start="114:5" pos:end="116:70"><call pos:start="114:5" pos:end="116:70"><name pos:start="114:5" pos:end="114:29">trace_v9fs_lcreate_return</name><argument_list pos:start="114:30" pos:end="116:70">(<argument pos:start="114:31" pos:end="114:38"><expr pos:start="114:31" pos:end="114:38"><name pos:start="114:31" pos:end="114:38"><name pos:start="114:31" pos:end="114:33">pdu</name><operator pos:start="114:34" pos:end="114:35">-&gt;</operator><name pos:start="114:36" pos:end="114:38">tag</name></name></expr></argument>, <argument pos:start="114:41" pos:end="114:47"><expr pos:start="114:41" pos:end="114:47"><name pos:start="114:41" pos:end="114:47"><name pos:start="114:41" pos:end="114:43">pdu</name><operator pos:start="114:44" pos:end="114:45">-&gt;</operator><name pos:start="114:46" pos:end="114:47">id</name></name></expr></argument>,

                              <argument pos:start="116:31" pos:end="116:38"><expr pos:start="116:31" pos:end="116:38"><name pos:start="116:31" pos:end="116:38"><name pos:start="116:31" pos:end="116:33">qid</name><operator pos:start="116:34" pos:end="116:34">.</operator><name pos:start="116:35" pos:end="116:38">type</name></name></expr></argument>, <argument pos:start="116:41" pos:end="116:51"><expr pos:start="116:41" pos:end="116:51"><name pos:start="116:41" pos:end="116:51"><name pos:start="116:41" pos:end="116:43">qid</name><operator pos:start="116:44" pos:end="116:44">.</operator><name pos:start="116:45" pos:end="116:51">version</name></name></expr></argument>, <argument pos:start="116:54" pos:end="116:61"><expr pos:start="116:54" pos:end="116:61"><name pos:start="116:54" pos:end="116:61"><name pos:start="116:54" pos:end="116:56">qid</name><operator pos:start="116:57" pos:end="116:57">.</operator><name pos:start="116:58" pos:end="116:61">path</name></name></expr></argument>, <argument pos:start="116:64" pos:end="116:69"><expr pos:start="116:64" pos:end="116:69"><name pos:start="116:64" pos:end="116:69">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="118:1" pos:end="118:4"><name pos:start="118:1" pos:end="118:3">out</name>:</label>

    <expr_stmt pos:start="120:5" pos:end="120:23"><expr pos:start="120:5" pos:end="120:22"><call pos:start="120:5" pos:end="120:22"><name pos:start="120:5" pos:end="120:11">put_fid</name><argument_list pos:start="120:12" pos:end="120:22">(<argument pos:start="120:13" pos:end="120:15"><expr pos:start="120:13" pos:end="120:15"><name pos:start="120:13" pos:end="120:15">pdu</name></expr></argument>, <argument pos:start="120:18" pos:end="120:21"><expr pos:start="120:18" pos:end="120:21"><name pos:start="120:18" pos:end="120:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="122:1" pos:end="122:10"><name pos:start="122:1" pos:end="122:9">out_nofid</name>:</label>

    <expr_stmt pos:start="124:5" pos:end="124:27"><expr pos:start="124:5" pos:end="124:26"><call pos:start="124:5" pos:end="124:26"><name pos:start="124:5" pos:end="124:16">pdu_complete</name><argument_list pos:start="124:17" pos:end="124:26">(<argument pos:start="124:18" pos:end="124:20"><expr pos:start="124:18" pos:end="124:20"><name pos:start="124:18" pos:end="124:20">pdu</name></expr></argument>, <argument pos:start="124:23" pos:end="124:25"><expr pos:start="124:23" pos:end="124:25"><name pos:start="124:23" pos:end="124:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="126:5" pos:end="126:28"><expr pos:start="126:5" pos:end="126:27"><call pos:start="126:5" pos:end="126:27"><name pos:start="126:5" pos:end="126:20">v9fs_string_free</name><argument_list pos:start="126:21" pos:end="126:27">(<argument pos:start="126:22" pos:end="126:26"><expr pos:start="126:22" pos:end="126:26"><operator pos:start="126:22" pos:end="126:22">&amp;</operator><name pos:start="126:23" pos:end="126:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
