<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14899.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">bench_cb</name><parameter_list pos:start="1:21" pos:end="1:43">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:25">void</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33">opaque</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:42"><decl pos:start="1:36" pos:end="1:42"><type pos:start="1:36" pos:end="1:42"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:42">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">BenchData</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">b</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">BlockAIOCB</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">acb</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition> <block pos:start="11:18" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:27">

        <expr_stmt pos:start="13:9" pos:end="13:61"><expr pos:start="13:9" pos:end="13:60"><call pos:start="13:9" pos:end="13:60"><name pos:start="13:9" pos:end="13:20">error_report</name><argument_list pos:start="13:21" pos:end="13:60">(<argument pos:start="13:22" pos:end="13:43"><expr pos:start="13:22" pos:end="13:43"><literal type="string" pos:start="13:22" pos:end="13:43">"Failed request: %s\n"</literal></expr></argument>, <argument pos:start="13:46" pos:end="13:59"><expr pos:start="13:46" pos:end="13:59"><call pos:start="13:46" pos:end="13:59"><name pos:start="13:46" pos:end="13:53">strerror</name><argument_list pos:start="13:54" pos:end="13:59">(<argument pos:start="13:55" pos:end="13:58"><expr pos:start="13:55" pos:end="13:58"><operator pos:start="13:55" pos:end="13:55">-</operator><name pos:start="13:56" pos:end="13:58">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:27"><expr pos:start="15:9" pos:end="15:26"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:12">exit</name><argument_list pos:start="15:13" pos:end="15:26">(<argument pos:start="15:14" pos:end="15:25"><expr pos:start="15:14" pos:end="15:25"><name pos:start="15:14" pos:end="15:25">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="85:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:20">(<expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:9">b</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:19">in_flush</name></name></expr>)</condition> <block pos:start="21:22" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:28">

        <comment type="block" pos:start="23:9" pos:end="23:75">/* Just finished a flush with drained queue: Start next requests */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:14">assert</name><argument_list pos:start="25:15" pos:end="25:33">(<argument pos:start="25:16" pos:end="25:32"><expr pos:start="25:16" pos:end="25:32"><name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:16">b</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:27">in_flight</name></name> <operator pos:start="25:29" pos:end="25:30">==</operator> <literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">b</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:19">in_flush</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:27">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="85:5">else if <condition pos:start="29:15" pos:end="29:32">(<expr pos:start="29:16" pos:end="29:31"><name pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:16">b</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:27">in_flight</name></name> <operator pos:start="29:29" pos:end="29:29">&gt;</operator> <literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr>)</condition> <block pos:start="29:34" pos:end="85:5">{<block_content pos:start="31:9" pos:end="83:9">

        <decl_stmt pos:start="31:9" pos:end="31:44"><decl pos:start="31:9" pos:end="31:43"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:21">remaining</name> <init pos:start="31:23" pos:end="31:43">= <expr pos:start="31:25" pos:end="31:43"><name pos:start="31:25" pos:end="31:28"><name pos:start="31:25" pos:end="31:25">b</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:28">n</name></name> <operator pos:start="31:30" pos:end="31:30">-</operator> <name pos:start="31:32" pos:end="31:43"><name pos:start="31:32" pos:end="31:32">b</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:43">in_flight</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:15"><expr pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:12"><name pos:start="35:9" pos:end="35:9">b</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:12">n</name></name><operator pos:start="35:13" pos:end="35:14">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:9">b</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:20">in_flight</name></name><operator pos:start="37:21" pos:end="37:22">--</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="41:9" pos:end="41:66">/* Time for flush? Drain queue if requested, then flush */</comment>

        <if_stmt pos:start="43:9" pos:end="83:9"><if pos:start="43:9" pos:end="83:9">if <condition pos:start="43:12" pos:end="43:68">(<expr pos:start="43:13" pos:end="43:67"><name pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:13">b</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:29">flush_interval</name></name> <operator pos:start="43:31" pos:end="43:32">&amp;&amp;</operator> <name pos:start="43:34" pos:end="43:42">remaining</name> <operator pos:start="43:44" pos:end="43:44">%</operator> <name pos:start="43:46" pos:end="43:62"><name pos:start="43:46" pos:end="43:46">b</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:62">flush_interval</name></name> <operator pos:start="43:64" pos:end="43:65">==</operator> <literal type="number" pos:start="43:67" pos:end="43:67">0</literal></expr>)</condition> <block pos:start="43:70" pos:end="83:9">{<block_content pos:start="45:13" pos:end="81:13">

            <if_stmt pos:start="45:13" pos:end="75:13"><if pos:start="45:13" pos:end="75:13">if <condition pos:start="45:16" pos:end="45:52">(<expr pos:start="45:17" pos:end="45:51"><operator pos:start="45:17" pos:end="45:17">!</operator><name pos:start="45:18" pos:end="45:29"><name pos:start="45:18" pos:end="45:18">b</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:29">in_flight</name></name> <operator pos:start="45:31" pos:end="45:32">||</operator> <operator pos:start="45:34" pos:end="45:34">!</operator><name pos:start="45:35" pos:end="45:51"><name pos:start="45:35" pos:end="45:35">b</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:51">drain_on_flush</name></name></expr>)</condition> <block pos:start="45:54" pos:end="75:13">{<block_content pos:start="47:17" pos:end="73:17">

                <decl_stmt pos:start="47:17" pos:end="47:40"><decl pos:start="47:17" pos:end="47:39"><type pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:35">BlockCompletionFunc</name> <modifier pos:start="47:37" pos:end="47:37">*</modifier></type><name pos:start="47:38" pos:end="47:39">cb</name></decl>;</decl_stmt>



                <if_stmt pos:start="51:17" pos:end="61:17"><if pos:start="51:17" pos:end="57:17">if <condition pos:start="51:20" pos:end="51:38">(<expr pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:21">b</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:37">drain_on_flush</name></name></expr>)</condition> <block pos:start="51:40" pos:end="57:17">{<block_content pos:start="53:21" pos:end="55:34">

                    <expr_stmt pos:start="53:21" pos:end="53:39"><expr pos:start="53:21" pos:end="53:38"><name pos:start="53:21" pos:end="53:31"><name pos:start="53:21" pos:end="53:21">b</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:31">in_flush</name></name> <operator pos:start="53:33" pos:end="53:33">=</operator> <name pos:start="53:35" pos:end="53:38">true</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:34"><expr pos:start="55:21" pos:end="55:33"><name pos:start="55:21" pos:end="55:22">cb</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:33">bench_cb</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="57:19" pos:end="61:17">else <block pos:start="57:24" pos:end="61:17">{<block_content pos:start="59:21" pos:end="59:50">

                    <expr_stmt pos:start="59:21" pos:end="59:50"><expr pos:start="59:21" pos:end="59:49"><name pos:start="59:21" pos:end="59:22">cb</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:49">bench_undrained_flush_cb</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="65:17" pos:end="65:51"><expr pos:start="65:17" pos:end="65:50"><name pos:start="65:17" pos:end="65:19">acb</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <call pos:start="65:23" pos:end="65:50"><name pos:start="65:23" pos:end="65:35">blk_aio_flush</name><argument_list pos:start="65:36" pos:end="65:50">(<argument pos:start="65:37" pos:end="65:42"><expr pos:start="65:37" pos:end="65:42"><name pos:start="65:37" pos:end="65:42"><name pos:start="65:37" pos:end="65:37">b</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:42">blk</name></name></expr></argument>, <argument pos:start="65:45" pos:end="65:46"><expr pos:start="65:45" pos:end="65:46"><name pos:start="65:45" pos:end="65:46">cb</name></expr></argument>, <argument pos:start="65:49" pos:end="65:49"><expr pos:start="65:49" pos:end="65:49"><name pos:start="65:49" pos:end="65:49">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="67:17" pos:end="73:17"><if pos:start="67:17" pos:end="73:17">if <condition pos:start="67:20" pos:end="67:25">(<expr pos:start="67:21" pos:end="67:24"><operator pos:start="67:21" pos:end="67:21">!</operator><name pos:start="67:22" pos:end="67:24">acb</name></expr>)</condition> <block pos:start="67:27" pos:end="73:17">{<block_content pos:start="69:21" pos:end="71:39">

                    <expr_stmt pos:start="69:21" pos:end="69:66"><expr pos:start="69:21" pos:end="69:65"><call pos:start="69:21" pos:end="69:65"><name pos:start="69:21" pos:end="69:32">error_report</name><argument_list pos:start="69:33" pos:end="69:65">(<argument pos:start="69:34" pos:end="69:64"><expr pos:start="69:34" pos:end="69:64"><literal type="string" pos:start="69:34" pos:end="69:64">"Failed to issue flush request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:39"><expr pos:start="71:21" pos:end="71:38"><call pos:start="71:21" pos:end="71:38"><name pos:start="71:21" pos:end="71:24">exit</name><argument_list pos:start="71:25" pos:end="71:38">(<argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="77:13" pos:end="81:13"><if pos:start="77:13" pos:end="81:13">if <condition pos:start="77:16" pos:end="77:34">(<expr pos:start="77:17" pos:end="77:33"><name pos:start="77:17" pos:end="77:33"><name pos:start="77:17" pos:end="77:17">b</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:33">drain_on_flush</name></name></expr>)</condition> <block pos:start="77:36" pos:end="81:13">{<block_content pos:start="79:17" pos:end="79:23">

                <return pos:start="79:17" pos:end="79:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="89:5" pos:end="119:5">while <condition pos:start="89:11" pos:end="89:58">(<expr pos:start="89:12" pos:end="89:57"><name pos:start="89:12" pos:end="89:15"><name pos:start="89:12" pos:end="89:12">b</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:15">n</name></name> <operator pos:start="89:17" pos:end="89:17">&gt;</operator> <name pos:start="89:19" pos:end="89:30"><name pos:start="89:19" pos:end="89:19">b</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:30">in_flight</name></name> <operator pos:start="89:32" pos:end="89:33">&amp;&amp;</operator> <name pos:start="89:35" pos:end="89:46"><name pos:start="89:35" pos:end="89:35">b</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:46">in_flight</name></name> <operator pos:start="89:48" pos:end="89:48">&lt;</operator> <name pos:start="89:50" pos:end="89:57"><name pos:start="89:50" pos:end="89:50">b</name><operator pos:start="89:51" pos:end="89:52">-&gt;</operator><name pos:start="89:53" pos:end="89:57">nrreq</name></name></expr>)</condition> <block pos:start="89:60" pos:end="119:5">{<block_content pos:start="91:9" pos:end="117:35">

        <if_stmt pos:start="91:9" pos:end="103:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:21">(<expr pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:13">b</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:20">write</name></name></expr>)</condition> <block pos:start="91:23" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:47">

            <expr_stmt pos:start="93:13" pos:end="95:47"><expr pos:start="93:13" pos:end="95:46"><name pos:start="93:13" pos:end="93:15">acb</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="95:46"><name pos:start="93:19" pos:end="93:33">blk_aio_pwritev</name><argument_list pos:start="93:34" pos:end="95:46">(<argument pos:start="93:35" pos:end="93:40"><expr pos:start="93:35" pos:end="93:40"><name pos:start="93:35" pos:end="93:40"><name pos:start="93:35" pos:end="93:35">b</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:40">blk</name></name></expr></argument>, <argument pos:start="93:43" pos:end="93:51"><expr pos:start="93:43" pos:end="93:51"><name pos:start="93:43" pos:end="93:51"><name pos:start="93:43" pos:end="93:43">b</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:51">offset</name></name></expr></argument>, <argument pos:start="93:54" pos:end="93:60"><expr pos:start="93:54" pos:end="93:60"><name pos:start="93:54" pos:end="93:60"><name pos:start="93:54" pos:end="93:54">b</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:60">qiov</name></name></expr></argument>, <argument pos:start="93:63" pos:end="93:63"><expr pos:start="93:63" pos:end="93:63"><literal type="number" pos:start="93:63" pos:end="93:63">0</literal></expr></argument>,

                                  <argument pos:start="95:35" pos:end="95:42"><expr pos:start="95:35" pos:end="95:42"><name pos:start="95:35" pos:end="95:42">bench_cb</name></expr></argument>, <argument pos:start="95:45" pos:end="95:45"><expr pos:start="95:45" pos:end="95:45"><name pos:start="95:45" pos:end="95:45">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="97:11" pos:end="103:9">else <block pos:start="97:16" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:46">

            <expr_stmt pos:start="99:13" pos:end="101:46"><expr pos:start="99:13" pos:end="101:45"><name pos:start="99:13" pos:end="99:15">acb</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="101:45"><name pos:start="99:19" pos:end="99:32">blk_aio_preadv</name><argument_list pos:start="99:33" pos:end="101:45">(<argument pos:start="99:34" pos:end="99:39"><expr pos:start="99:34" pos:end="99:39"><name pos:start="99:34" pos:end="99:39"><name pos:start="99:34" pos:end="99:34">b</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:39">blk</name></name></expr></argument>, <argument pos:start="99:42" pos:end="99:50"><expr pos:start="99:42" pos:end="99:50"><name pos:start="99:42" pos:end="99:50"><name pos:start="99:42" pos:end="99:42">b</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:50">offset</name></name></expr></argument>, <argument pos:start="99:53" pos:end="99:59"><expr pos:start="99:53" pos:end="99:59"><name pos:start="99:53" pos:end="99:59"><name pos:start="99:53" pos:end="99:53">b</name><operator pos:start="99:54" pos:end="99:55">-&gt;</operator><name pos:start="99:56" pos:end="99:59">qiov</name></name></expr></argument>, <argument pos:start="99:62" pos:end="99:62"><expr pos:start="99:62" pos:end="99:62"><literal type="number" pos:start="99:62" pos:end="99:62">0</literal></expr></argument>,

                                 <argument pos:start="101:34" pos:end="101:41"><expr pos:start="101:34" pos:end="101:41"><name pos:start="101:34" pos:end="101:41">bench_cb</name></expr></argument>, <argument pos:start="101:44" pos:end="101:44"><expr pos:start="101:44" pos:end="101:44"><name pos:start="101:44" pos:end="101:44">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:17">(<expr pos:start="105:13" pos:end="105:16"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:16">acb</name></expr>)</condition> <block pos:start="105:19" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:31">

            <expr_stmt pos:start="107:13" pos:end="107:52"><expr pos:start="107:13" pos:end="107:51"><call pos:start="107:13" pos:end="107:51"><name pos:start="107:13" pos:end="107:24">error_report</name><argument_list pos:start="107:25" pos:end="107:51">(<argument pos:start="107:26" pos:end="107:50"><expr pos:start="107:26" pos:end="107:50"><literal type="string" pos:start="107:26" pos:end="107:50">"Failed to issue request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:31"><expr pos:start="109:13" pos:end="109:30"><call pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:16">exit</name><argument_list pos:start="109:17" pos:end="109:30">(<argument pos:start="109:18" pos:end="109:29"><expr pos:start="109:18" pos:end="109:29"><name pos:start="109:18" pos:end="109:29">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:23"><expr pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:9">b</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:20">in_flight</name></name><operator pos:start="113:21" pos:end="113:22">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:29"><expr pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:9">b</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:17">offset</name></name> <operator pos:start="115:19" pos:end="115:20">+=</operator> <name pos:start="115:22" pos:end="115:28"><name pos:start="115:22" pos:end="115:22">b</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:28">step</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:35"><expr pos:start="117:9" pos:end="117:34"><name pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:9">b</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:17">offset</name></name> <operator pos:start="117:19" pos:end="117:20">%=</operator> <name pos:start="117:22" pos:end="117:34"><name pos:start="117:22" pos:end="117:22">b</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:34">image_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
