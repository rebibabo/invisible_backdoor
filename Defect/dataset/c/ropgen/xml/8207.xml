<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8207.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">dirac_decode_init</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">DiracContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">avctx</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:19">frame_number</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <operator pos:start="13:23" pos:end="13:23">-</operator><literal type="number" pos:start="13:24" pos:end="13:24">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:41">(<expr pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:13">avctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">flags</name></name><operator pos:start="17:21" pos:end="17:21">&amp;</operator><name pos:start="17:22" pos:end="17:40">CODEC_FLAG_EMU_EDGE</name></expr>)</condition> <block pos:start="17:43" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:36">

        <expr_stmt pos:start="19:9" pos:end="19:71"><expr pos:start="19:9" pos:end="19:70"><call pos:start="19:9" pos:end="19:70"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:70">(<argument pos:start="19:16" pos:end="19:20"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">avctx</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:37" pos:end="19:69"><expr pos:start="19:37" pos:end="19:69"><literal type="string" pos:start="19:37" pos:end="19:69">"Edge emulation not supported!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:36">return <expr pos:start="21:16" pos:end="21:35"><name pos:start="21:16" pos:end="21:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><call pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:19">ff_dsputil_init</name><argument_list pos:start="27:20" pos:end="27:35">(<argument pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:27"><operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:27"><name pos:start="27:22" pos:end="27:22">s</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:27">dsp</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:20">ff_diracdsp_init</name><argument_list pos:start="29:21" pos:end="29:34">(<argument pos:start="29:22" pos:end="29:33"><expr pos:start="29:22" pos:end="29:33"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:33">diracdsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="35:52">for <control pos:start="33:9" pos:end="33:36">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:31"><expr pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:30">MAX_FRAMES</name></expr>;</condition> <incr pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:33">i</name><operator pos:start="33:34" pos:end="33:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:9" pos:end="35:52"><block_content pos:start="35:9" pos:end="35:52">

        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:21">all_frames</name><index pos:start="35:22" pos:end="35:24">[<expr pos:start="35:23" pos:end="35:23"><name pos:start="35:23" pos:end="35:23">i</name></expr>]</index></name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:32">avframe</name> <operator pos:start="35:34" pos:end="35:34">=</operator> <call pos:start="35:36" pos:end="35:51"><name pos:start="35:36" pos:end="35:49">av_frame_alloc</name><argument_list pos:start="35:50" pos:end="35:51">()</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
