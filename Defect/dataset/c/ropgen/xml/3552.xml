<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3552.c" pos:tabs="8"><function pos:start="1:1" pos:end="381:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">omap_rtc_write</name><parameter_list pos:start="1:27" pos:end="3:57">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:47">hwaddr</name></type> <name pos:start="1:49" pos:end="1:52">addr</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:41"><decl pos:start="3:28" pos:end="3:41"><type pos:start="3:28" pos:end="3:41"><name pos:start="3:28" pos:end="3:35">uint64_t</name></type> <name pos:start="3:37" pos:end="3:41">value</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:51">unsigned</name></type> <name pos:start="3:53" pos:end="3:56">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="381:1">{<block_content pos:start="7:5" pos:end="379:5">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">omap_rtc_s</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:55">= <expr pos:start="7:28" pos:end="7:55"><operator pos:start="7:28" pos:end="7:28">(</operator>struct <name pos:start="7:36" pos:end="7:45">omap_rtc_s</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator> <name pos:start="7:50" pos:end="7:55">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:42">= <expr pos:start="9:18" pos:end="9:42"><name pos:start="9:18" pos:end="9:21">addr</name> <operator pos:start="9:23" pos:end="9:23">&amp;</operator> <name pos:start="9:25" pos:end="9:42">OMAP_MPUI_REG_MASK</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:13">tm</name></name></type> <name pos:start="11:15" pos:end="11:20">new_tm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">time_t</name></type> <name pos:start="13:12" pos:end="13:16"><name pos:start="13:12" pos:end="13:13">ti</name><index pos:start="13:14" pos:end="13:16">[<expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">2</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:12">size</name> <operator pos:start="17:14" pos:end="17:15">!=</operator> <literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>)</condition> <block pos:start="17:20" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:57">

        <return pos:start="19:9" pos:end="19:57">return <expr pos:start="19:16" pos:end="19:56"><call pos:start="19:16" pos:end="19:56"><name pos:start="19:16" pos:end="19:35">omap_badwidth_write8</name><argument_list pos:start="19:36" pos:end="19:56">(<argument pos:start="19:37" pos:end="19:42"><expr pos:start="19:37" pos:end="19:42"><name pos:start="19:37" pos:end="19:42">opaque</name></expr></argument>, <argument pos:start="19:45" pos:end="19:48"><expr pos:start="19:45" pos:end="19:48"><name pos:start="19:45" pos:end="19:48">addr</name></expr></argument>, <argument pos:start="19:51" pos:end="19:55"><expr pos:start="19:51" pos:end="19:55"><name pos:start="19:51" pos:end="19:55">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="25:5" pos:end="379:5">switch <condition pos:start="25:12" pos:end="25:19">(<expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:18">offset</name></expr>)</condition> <block pos:start="25:21" pos:end="379:5">{<block_content pos:start="27:5" pos:end="377:15">

    <case pos:start="27:5" pos:end="30:0">case <expr pos:start="27:10" pos:end="27:13"><literal type="number" pos:start="27:10" pos:end="27:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="27:17" pos:end="27:33">/* SECONDS_REG */</comment>

<cpp:ifdef pos:start="29:1" pos:end="29:15">#<cpp:directive pos:start="29:2" pos:end="29:6">ifdef</cpp:directive> <name pos:start="29:8" pos:end="29:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="31:9" pos:end="34:0"><expr pos:start="31:9" pos:end="31:47"><call pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:14">printf</name><argument_list pos:start="31:15" pos:end="31:47">(<argument pos:start="31:16" pos:end="31:39"><expr pos:start="31:16" pos:end="31:39"><literal type="string" pos:start="31:16" pos:end="31:39">"RTC SEC_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="31:42" pos:end="31:46"><expr pos:start="31:42" pos:end="31:46"><name pos:start="31:42" pos:end="31:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:13">ti</name></name> <operator pos:start="35:15" pos:end="35:16">-=</operator> <name pos:start="35:18" pos:end="35:37"><name pos:start="35:18" pos:end="35:18">s</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:30">current_tm</name><operator pos:start="35:31" pos:end="35:31">.</operator><name pos:start="35:32" pos:end="35:37">tm_sec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:13">ti</name></name> <operator pos:start="37:15" pos:end="37:16">+=</operator> <call pos:start="37:18" pos:end="37:32"><name pos:start="37:18" pos:end="37:25">from_bcd</name><argument_list pos:start="37:26" pos:end="37:32">(<argument pos:start="37:27" pos:end="37:31"><expr pos:start="37:27" pos:end="37:31"><name pos:start="37:27" pos:end="37:31">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>



    <case pos:start="43:5" pos:end="46:0">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="43:17" pos:end="43:33">/* MINUTES_REG */</comment>

<cpp:ifdef pos:start="45:1" pos:end="45:15">#<cpp:directive pos:start="45:2" pos:end="45:6">ifdef</cpp:directive> <name pos:start="45:8" pos:end="45:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="47:9" pos:end="50:0"><expr pos:start="47:9" pos:end="47:47"><call pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:14">printf</name><argument_list pos:start="47:15" pos:end="47:47">(<argument pos:start="47:16" pos:end="47:39"><expr pos:start="47:16" pos:end="47:39"><literal type="string" pos:start="47:16" pos:end="47:39">"RTC MIN_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="47:42" pos:end="47:46"><expr pos:start="47:42" pos:end="47:46"><name pos:start="47:42" pos:end="47:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:13">ti</name></name> <operator pos:start="51:15" pos:end="51:16">-=</operator> <name pos:start="51:18" pos:end="51:37"><name pos:start="51:18" pos:end="51:18">s</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:30">current_tm</name><operator pos:start="51:31" pos:end="51:31">.</operator><name pos:start="51:32" pos:end="51:37">tm_min</name></name> <operator pos:start="51:39" pos:end="51:39">*</operator> <literal type="number" pos:start="51:41" pos:end="51:42">60</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:38"><expr pos:start="53:9" pos:end="53:37"><name pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:13">ti</name></name> <operator pos:start="53:15" pos:end="53:16">+=</operator> <call pos:start="53:18" pos:end="53:32"><name pos:start="53:18" pos:end="53:25">from_bcd</name><argument_list pos:start="53:26" pos:end="53:32">(<argument pos:start="53:27" pos:end="53:31"><expr pos:start="53:27" pos:end="53:31"><name pos:start="53:27" pos:end="53:31">value</name></expr></argument>)</argument_list></call> <operator pos:start="53:34" pos:end="53:34">*</operator> <literal type="number" pos:start="53:36" pos:end="53:37">60</literal></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:15">return;</return>



    <case pos:start="59:5" pos:end="62:0">case <expr pos:start="59:10" pos:end="59:13"><literal type="number" pos:start="59:10" pos:end="59:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="59:17" pos:end="59:31">/* HOURS_REG */</comment>

<cpp:ifdef pos:start="61:1" pos:end="61:15">#<cpp:directive pos:start="61:2" pos:end="61:6">ifdef</cpp:directive> <name pos:start="61:8" pos:end="61:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="63:9" pos:end="66:0"><expr pos:start="63:9" pos:end="63:47"><call pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:14">printf</name><argument_list pos:start="63:15" pos:end="63:47">(<argument pos:start="63:16" pos:end="63:39"><expr pos:start="63:16" pos:end="63:39"><literal type="string" pos:start="63:16" pos:end="63:39">"RTC HRS_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="63:42" pos:end="63:46"><expr pos:start="63:42" pos:end="63:46"><name pos:start="63:42" pos:end="63:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="67:9" pos:end="67:46"><expr pos:start="67:9" pos:end="67:45"><name pos:start="67:9" pos:end="67:13"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:13">ti</name></name> <operator pos:start="67:15" pos:end="67:16">-=</operator> <name pos:start="67:18" pos:end="67:38"><name pos:start="67:18" pos:end="67:18">s</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:30">current_tm</name><operator pos:start="67:31" pos:end="67:31">.</operator><name pos:start="67:32" pos:end="67:38">tm_hour</name></name> <operator pos:start="67:40" pos:end="67:40">*</operator> <literal type="number" pos:start="67:42" pos:end="67:45">3600</literal></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="77:51"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:21">(<expr pos:start="69:13" pos:end="69:20"><name pos:start="69:13" pos:end="69:20"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:20">pm_am</name></name></expr>)</condition> <block pos:start="69:23" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:48">

            <expr_stmt pos:start="71:13" pos:end="71:58"><expr pos:start="71:13" pos:end="71:57"><name pos:start="71:13" pos:end="71:17"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:17">ti</name></name> <operator pos:start="71:19" pos:end="71:20">+=</operator> <operator pos:start="71:22" pos:end="71:22">(</operator><call pos:start="71:23" pos:end="71:44"><name pos:start="71:23" pos:end="71:30">from_bcd</name><argument_list pos:start="71:31" pos:end="71:44">(<argument pos:start="71:32" pos:end="71:43"><expr pos:start="71:32" pos:end="71:43"><name pos:start="71:32" pos:end="71:36">value</name> <operator pos:start="71:38" pos:end="71:38">&amp;</operator> <literal type="number" pos:start="71:40" pos:end="71:43">0x3f</literal></expr></argument>)</argument_list></call> <operator pos:start="71:46" pos:end="71:46">&amp;</operator> <literal type="number" pos:start="71:48" pos:end="71:49">12</literal><operator pos:start="71:50" pos:end="71:50">)</operator> <operator pos:start="71:52" pos:end="71:52">*</operator> <literal type="number" pos:start="71:54" pos:end="71:57">3600</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:48"><expr pos:start="73:13" pos:end="73:47"><name pos:start="73:13" pos:end="73:17"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:17">ti</name></name> <operator pos:start="73:19" pos:end="73:20">+=</operator> <operator pos:start="73:22" pos:end="73:22">(</operator><operator pos:start="73:23" pos:end="73:23">(</operator><name pos:start="73:24" pos:end="73:28">value</name> <operator pos:start="73:30" pos:end="73:31">&gt;&gt;</operator> <literal type="number" pos:start="73:33" pos:end="73:33">7</literal><operator pos:start="73:34" pos:end="73:34">)</operator> <operator pos:start="73:36" pos:end="73:36">&amp;</operator> <literal type="number" pos:start="73:38" pos:end="73:38">1</literal><operator pos:start="73:39" pos:end="73:39">)</operator> <operator pos:start="73:41" pos:end="73:41">*</operator> <literal type="number" pos:start="73:43" pos:end="73:47">43200</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="77:51">else<block type="pseudo" pos:start="77:13" pos:end="77:51"><block_content pos:start="77:13" pos:end="77:51">

            <expr_stmt pos:start="77:13" pos:end="77:51"><expr pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:17"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:17">ti</name></name> <operator pos:start="77:19" pos:end="77:20">+=</operator> <call pos:start="77:22" pos:end="77:43"><name pos:start="77:22" pos:end="77:29">from_bcd</name><argument_list pos:start="77:30" pos:end="77:43">(<argument pos:start="77:31" pos:end="77:42"><expr pos:start="77:31" pos:end="77:42"><name pos:start="77:31" pos:end="77:35">value</name> <operator pos:start="77:37" pos:end="77:37">&amp;</operator> <literal type="number" pos:start="77:39" pos:end="77:42">0x3f</literal></expr></argument>)</argument_list></call> <operator pos:start="77:45" pos:end="77:45">*</operator> <literal type="number" pos:start="77:47" pos:end="77:50">3600</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <return pos:start="79:9" pos:end="79:15">return;</return>



    <case pos:start="83:5" pos:end="86:0">case <expr pos:start="83:10" pos:end="83:13"><literal type="number" pos:start="83:10" pos:end="83:13">0x0c</literal></expr>:</case>	<comment type="block" pos:start="83:17" pos:end="83:30">/* DAYS_REG */</comment>

<cpp:ifdef pos:start="85:1" pos:end="85:15">#<cpp:directive pos:start="85:2" pos:end="85:6">ifdef</cpp:directive> <name pos:start="85:8" pos:end="85:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="87:9" pos:end="90:0"><expr pos:start="87:9" pos:end="87:47"><call pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:14">printf</name><argument_list pos:start="87:15" pos:end="87:47">(<argument pos:start="87:16" pos:end="87:39"><expr pos:start="87:16" pos:end="87:39"><literal type="string" pos:start="87:16" pos:end="87:39">"RTC DAY_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="87:42" pos:end="87:46"><expr pos:start="87:42" pos:end="87:46"><name pos:start="87:42" pos:end="87:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="91:9" pos:end="91:47"><expr pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:13"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:13">ti</name></name> <operator pos:start="91:15" pos:end="91:16">-=</operator> <name pos:start="91:18" pos:end="91:38"><name pos:start="91:18" pos:end="91:18">s</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:30">current_tm</name><operator pos:start="91:31" pos:end="91:31">.</operator><name pos:start="91:32" pos:end="91:38">tm_mday</name></name> <operator pos:start="91:40" pos:end="91:40">*</operator> <literal type="number" pos:start="91:42" pos:end="91:46">86400</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:13"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:13">ti</name></name> <operator pos:start="93:15" pos:end="93:16">+=</operator> <call pos:start="93:18" pos:end="93:32"><name pos:start="93:18" pos:end="93:25">from_bcd</name><argument_list pos:start="93:26" pos:end="93:32">(<argument pos:start="93:27" pos:end="93:31"><expr pos:start="93:27" pos:end="93:31"><name pos:start="93:27" pos:end="93:31">value</name></expr></argument>)</argument_list></call> <operator pos:start="93:34" pos:end="93:34">*</operator> <literal type="number" pos:start="93:36" pos:end="93:40">86400</literal></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:15">return;</return>



    <case pos:start="99:5" pos:end="102:0">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="99:17" pos:end="99:32">/* MONTHS_REG */</comment>

<cpp:ifdef pos:start="101:1" pos:end="101:15">#<cpp:directive pos:start="101:2" pos:end="101:6">ifdef</cpp:directive> <name pos:start="101:8" pos:end="101:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="103:9" pos:end="106:0"><expr pos:start="103:9" pos:end="103:47"><call pos:start="103:9" pos:end="103:47"><name pos:start="103:9" pos:end="103:14">printf</name><argument_list pos:start="103:15" pos:end="103:47">(<argument pos:start="103:16" pos:end="103:39"><expr pos:start="103:16" pos:end="103:39"><literal type="string" pos:start="103:16" pos:end="103:39">"RTC MTH_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="103:42" pos:end="103:46"><expr pos:start="103:42" pos:end="103:46"><name pos:start="103:42" pos:end="103:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="105:1" pos:end="105:6">#<cpp:directive pos:start="105:2" pos:end="105:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="107:9" pos:end="107:56"><expr pos:start="107:9" pos:end="107:55"><call pos:start="107:9" pos:end="107:55"><name pos:start="107:9" pos:end="107:14">memcpy</name><argument_list pos:start="107:15" pos:end="107:55">(<argument pos:start="107:16" pos:end="107:22"><expr pos:start="107:16" pos:end="107:22"><operator pos:start="107:16" pos:end="107:16">&amp;</operator><name pos:start="107:17" pos:end="107:22">new_tm</name></expr></argument>, <argument pos:start="107:25" pos:end="107:38"><expr pos:start="107:25" pos:end="107:38"><operator pos:start="107:25" pos:end="107:25">&amp;</operator><name pos:start="107:26" pos:end="107:38"><name pos:start="107:26" pos:end="107:26">s</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:38">current_tm</name></name></expr></argument>, <argument pos:start="107:41" pos:end="107:54"><expr pos:start="107:41" pos:end="107:54"><sizeof pos:start="107:41" pos:end="107:54">sizeof<argument_list pos:start="107:47" pos:end="107:54">(<argument pos:start="107:48" pos:end="107:53"><expr pos:start="107:48" pos:end="107:53"><name pos:start="107:48" pos:end="107:53">new_tm</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:40"><expr pos:start="109:9" pos:end="109:39"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:14">new_tm</name><operator pos:start="109:15" pos:end="109:15">.</operator><name pos:start="109:16" pos:end="109:21">tm_mon</name></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <call pos:start="109:25" pos:end="109:39"><name pos:start="109:25" pos:end="109:32">from_bcd</name><argument_list pos:start="109:33" pos:end="109:39">(<argument pos:start="109:34" pos:end="109:38"><expr pos:start="109:34" pos:end="109:38"><name pos:start="109:34" pos:end="109:38">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:41"><expr pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:13"><name pos:start="111:9" pos:end="111:10">ti</name><index pos:start="111:11" pos:end="111:13">[<expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>]</index></name> <operator pos:start="111:15" pos:end="111:15">=</operator> <call pos:start="111:17" pos:end="111:40"><name pos:start="111:17" pos:end="111:24">mktimegm</name><argument_list pos:start="111:25" pos:end="111:40">(<argument pos:start="111:26" pos:end="111:39"><expr pos:start="111:26" pos:end="111:39"><operator pos:start="111:26" pos:end="111:26">&amp;</operator><name pos:start="111:27" pos:end="111:39"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:39">current_tm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:34"><expr pos:start="113:9" pos:end="113:33"><name pos:start="113:9" pos:end="113:13"><name pos:start="113:9" pos:end="113:10">ti</name><index pos:start="113:11" pos:end="113:13">[<expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">1</literal></expr>]</index></name> <operator pos:start="113:15" pos:end="113:15">=</operator> <call pos:start="113:17" pos:end="113:33"><name pos:start="113:17" pos:end="113:24">mktimegm</name><argument_list pos:start="113:25" pos:end="113:33">(<argument pos:start="113:26" pos:end="113:32"><expr pos:start="113:26" pos:end="113:32"><operator pos:start="113:26" pos:end="113:26">&amp;</operator><name pos:start="113:27" pos:end="113:32">new_tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="117:9" pos:end="131:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:39">(<expr pos:start="117:13" pos:end="117:38"><name pos:start="117:13" pos:end="117:17"><name pos:start="117:13" pos:end="117:14">ti</name><index pos:start="117:15" pos:end="117:17">[<expr pos:start="117:16" pos:end="117:16"><literal type="number" pos:start="117:16" pos:end="117:16">0</literal></expr>]</index></name> <operator pos:start="117:19" pos:end="117:20">!=</operator> <operator pos:start="117:22" pos:end="117:22">-</operator><literal type="number" pos:start="117:23" pos:end="117:23">1</literal> <operator pos:start="117:25" pos:end="117:26">&amp;&amp;</operator> <name pos:start="117:28" pos:end="117:32"><name pos:start="117:28" pos:end="117:29">ti</name><index pos:start="117:30" pos:end="117:32">[<expr pos:start="117:31" pos:end="117:31"><literal type="number" pos:start="117:31" pos:end="117:31">1</literal></expr>]</index></name> <operator pos:start="117:34" pos:end="117:35">!=</operator> <operator pos:start="117:37" pos:end="117:37">-</operator><literal type="number" pos:start="117:38" pos:end="117:38">1</literal></expr>)</condition> <block pos:start="117:41" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:27">

            <expr_stmt pos:start="119:13" pos:end="119:27"><expr pos:start="119:13" pos:end="119:26"><name pos:start="119:13" pos:end="119:17"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:17">ti</name></name> <operator pos:start="119:19" pos:end="119:20">-=</operator> <name pos:start="119:22" pos:end="119:26"><name pos:start="119:22" pos:end="119:23">ti</name><index pos:start="119:24" pos:end="119:26">[<expr pos:start="119:25" pos:end="119:25"><literal type="number" pos:start="119:25" pos:end="119:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:27"><expr pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:17"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:17">ti</name></name> <operator pos:start="121:19" pos:end="121:20">+=</operator> <name pos:start="121:22" pos:end="121:26"><name pos:start="121:22" pos:end="121:23">ti</name><index pos:start="121:24" pos:end="121:26">[<expr pos:start="121:25" pos:end="121:25"><literal type="number" pos:start="121:25" pos:end="121:25">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="123:11" pos:end="131:9">else <block pos:start="123:16" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:47">

            <comment type="block" pos:start="125:13" pos:end="125:41">/* A less accurate version */</comment>

            <expr_stmt pos:start="127:13" pos:end="127:52"><expr pos:start="127:13" pos:end="127:51"><name pos:start="127:13" pos:end="127:17"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:17">ti</name></name> <operator pos:start="127:19" pos:end="127:20">-=</operator> <name pos:start="127:22" pos:end="127:41"><name pos:start="127:22" pos:end="127:22">s</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:34">current_tm</name><operator pos:start="127:35" pos:end="127:35">.</operator><name pos:start="127:36" pos:end="127:41">tm_mon</name></name> <operator pos:start="127:43" pos:end="127:43">*</operator> <literal type="number" pos:start="127:45" pos:end="127:51">2592000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:47"><expr pos:start="129:13" pos:end="129:46"><name pos:start="129:13" pos:end="129:17"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:17">ti</name></name> <operator pos:start="129:19" pos:end="129:20">+=</operator> <call pos:start="129:22" pos:end="129:36"><name pos:start="129:22" pos:end="129:29">from_bcd</name><argument_list pos:start="129:30" pos:end="129:36">(<argument pos:start="129:31" pos:end="129:35"><expr pos:start="129:31" pos:end="129:35"><name pos:start="129:31" pos:end="129:35">value</name></expr></argument>)</argument_list></call> <operator pos:start="129:38" pos:end="129:38">*</operator> <literal type="number" pos:start="129:40" pos:end="129:46">2592000</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="133:9" pos:end="133:15">return;</return>



    <case pos:start="137:5" pos:end="140:0">case <expr pos:start="137:10" pos:end="137:13"><literal type="number" pos:start="137:10" pos:end="137:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="137:17" pos:end="137:31">/* YEARS_REG */</comment>

<cpp:ifdef pos:start="139:1" pos:end="139:15">#<cpp:directive pos:start="139:2" pos:end="139:6">ifdef</cpp:directive> <name pos:start="139:8" pos:end="139:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="141:9" pos:end="144:0"><expr pos:start="141:9" pos:end="141:47"><call pos:start="141:9" pos:end="141:47"><name pos:start="141:9" pos:end="141:14">printf</name><argument_list pos:start="141:15" pos:end="141:47">(<argument pos:start="141:16" pos:end="141:39"><expr pos:start="141:16" pos:end="141:39"><literal type="string" pos:start="141:16" pos:end="141:39">"RTC YRS_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="141:42" pos:end="141:46"><expr pos:start="141:42" pos:end="141:46"><name pos:start="141:42" pos:end="141:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="145:9" pos:end="145:56"><expr pos:start="145:9" pos:end="145:55"><call pos:start="145:9" pos:end="145:55"><name pos:start="145:9" pos:end="145:14">memcpy</name><argument_list pos:start="145:15" pos:end="145:55">(<argument pos:start="145:16" pos:end="145:22"><expr pos:start="145:16" pos:end="145:22"><operator pos:start="145:16" pos:end="145:16">&amp;</operator><name pos:start="145:17" pos:end="145:22">new_tm</name></expr></argument>, <argument pos:start="145:25" pos:end="145:38"><expr pos:start="145:25" pos:end="145:38"><operator pos:start="145:25" pos:end="145:25">&amp;</operator><name pos:start="145:26" pos:end="145:38"><name pos:start="145:26" pos:end="145:26">s</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:38">current_tm</name></name></expr></argument>, <argument pos:start="145:41" pos:end="145:54"><expr pos:start="145:41" pos:end="145:54"><sizeof pos:start="145:41" pos:end="145:54">sizeof<argument_list pos:start="145:47" pos:end="145:54">(<argument pos:start="145:48" pos:end="145:53"><expr pos:start="145:48" pos:end="145:53"><name pos:start="145:48" pos:end="145:53">new_tm</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:67"><expr pos:start="147:9" pos:end="147:66"><name pos:start="147:9" pos:end="147:22"><name pos:start="147:9" pos:end="147:14">new_tm</name><operator pos:start="147:15" pos:end="147:15">.</operator><name pos:start="147:16" pos:end="147:22">tm_year</name></name> <operator pos:start="147:24" pos:end="147:25">+=</operator> <call pos:start="147:27" pos:end="147:41"><name pos:start="147:27" pos:end="147:34">from_bcd</name><argument_list pos:start="147:35" pos:end="147:41">(<argument pos:start="147:36" pos:end="147:40"><expr pos:start="147:36" pos:end="147:40"><name pos:start="147:36" pos:end="147:40">value</name></expr></argument>)</argument_list></call> <operator pos:start="147:43" pos:end="147:43">-</operator> <operator pos:start="147:45" pos:end="147:45">(</operator><name pos:start="147:46" pos:end="147:59"><name pos:start="147:46" pos:end="147:51">new_tm</name><operator pos:start="147:52" pos:end="147:52">.</operator><name pos:start="147:53" pos:end="147:59">tm_year</name></name> <operator pos:start="147:61" pos:end="147:61">%</operator> <literal type="number" pos:start="147:63" pos:end="147:65">100</literal><operator pos:start="147:66" pos:end="147:66">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:41"><expr pos:start="149:9" pos:end="149:40"><name pos:start="149:9" pos:end="149:13"><name pos:start="149:9" pos:end="149:10">ti</name><index pos:start="149:11" pos:end="149:13">[<expr pos:start="149:12" pos:end="149:12"><literal type="number" pos:start="149:12" pos:end="149:12">0</literal></expr>]</index></name> <operator pos:start="149:15" pos:end="149:15">=</operator> <call pos:start="149:17" pos:end="149:40"><name pos:start="149:17" pos:end="149:24">mktimegm</name><argument_list pos:start="149:25" pos:end="149:40">(<argument pos:start="149:26" pos:end="149:39"><expr pos:start="149:26" pos:end="149:39"><operator pos:start="149:26" pos:end="149:26">&amp;</operator><name pos:start="149:27" pos:end="149:39"><name pos:start="149:27" pos:end="149:27">s</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:39">current_tm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:34"><expr pos:start="151:9" pos:end="151:33"><name pos:start="151:9" pos:end="151:13"><name pos:start="151:9" pos:end="151:10">ti</name><index pos:start="151:11" pos:end="151:13">[<expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">1</literal></expr>]</index></name> <operator pos:start="151:15" pos:end="151:15">=</operator> <call pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:24">mktimegm</name><argument_list pos:start="151:25" pos:end="151:33">(<argument pos:start="151:26" pos:end="151:32"><expr pos:start="151:26" pos:end="151:32"><operator pos:start="151:26" pos:end="151:26">&amp;</operator><name pos:start="151:27" pos:end="151:32">new_tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="155:9" pos:end="169:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:39">(<expr pos:start="155:13" pos:end="155:38"><name pos:start="155:13" pos:end="155:17"><name pos:start="155:13" pos:end="155:14">ti</name><index pos:start="155:15" pos:end="155:17">[<expr pos:start="155:16" pos:end="155:16"><literal type="number" pos:start="155:16" pos:end="155:16">0</literal></expr>]</index></name> <operator pos:start="155:19" pos:end="155:20">!=</operator> <operator pos:start="155:22" pos:end="155:22">-</operator><literal type="number" pos:start="155:23" pos:end="155:23">1</literal> <operator pos:start="155:25" pos:end="155:26">&amp;&amp;</operator> <name pos:start="155:28" pos:end="155:32"><name pos:start="155:28" pos:end="155:29">ti</name><index pos:start="155:30" pos:end="155:32">[<expr pos:start="155:31" pos:end="155:31"><literal type="number" pos:start="155:31" pos:end="155:31">1</literal></expr>]</index></name> <operator pos:start="155:34" pos:end="155:35">!=</operator> <operator pos:start="155:37" pos:end="155:37">-</operator><literal type="number" pos:start="155:38" pos:end="155:38">1</literal></expr>)</condition> <block pos:start="155:41" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:27">

            <expr_stmt pos:start="157:13" pos:end="157:27"><expr pos:start="157:13" pos:end="157:26"><name pos:start="157:13" pos:end="157:17"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:17">ti</name></name> <operator pos:start="157:19" pos:end="157:20">-=</operator> <name pos:start="157:22" pos:end="157:26"><name pos:start="157:22" pos:end="157:23">ti</name><index pos:start="157:24" pos:end="157:26">[<expr pos:start="157:25" pos:end="157:25"><literal type="number" pos:start="157:25" pos:end="157:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:27"><expr pos:start="159:13" pos:end="159:26"><name pos:start="159:13" pos:end="159:17"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:17">ti</name></name> <operator pos:start="159:19" pos:end="159:20">+=</operator> <name pos:start="159:22" pos:end="159:26"><name pos:start="159:22" pos:end="159:23">ti</name><index pos:start="159:24" pos:end="159:26">[<expr pos:start="159:25" pos:end="159:25"><literal type="number" pos:start="159:25" pos:end="159:25">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="161:11" pos:end="169:9">else <block pos:start="161:16" pos:end="169:9">{<block_content pos:start="165:13" pos:end="167:48">

            <comment type="block" pos:start="163:13" pos:end="163:41">/* A less accurate version */</comment>

            <expr_stmt pos:start="165:13" pos:end="165:62"><expr pos:start="165:13" pos:end="165:61"><name pos:start="165:13" pos:end="165:17"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:17">ti</name></name> <operator pos:start="165:19" pos:end="165:20">-=</operator> <operator pos:start="165:22" pos:end="165:22">(</operator><name pos:start="165:23" pos:end="165:43"><name pos:start="165:23" pos:end="165:23">s</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:35">current_tm</name><operator pos:start="165:36" pos:end="165:36">.</operator><name pos:start="165:37" pos:end="165:43">tm_year</name></name> <operator pos:start="165:45" pos:end="165:45">%</operator> <literal type="number" pos:start="165:47" pos:end="165:49">100</literal><operator pos:start="165:50" pos:end="165:50">)</operator> <operator pos:start="165:52" pos:end="165:52">*</operator> <literal type="number" pos:start="165:54" pos:end="165:61">31536000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:48"><expr pos:start="167:13" pos:end="167:47"><name pos:start="167:13" pos:end="167:17"><name pos:start="167:13" pos:end="167:13">s</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:17">ti</name></name> <operator pos:start="167:19" pos:end="167:20">+=</operator> <call pos:start="167:22" pos:end="167:36"><name pos:start="167:22" pos:end="167:29">from_bcd</name><argument_list pos:start="167:30" pos:end="167:36">(<argument pos:start="167:31" pos:end="167:35"><expr pos:start="167:31" pos:end="167:35"><name pos:start="167:31" pos:end="167:35">value</name></expr></argument>)</argument_list></call> <operator pos:start="167:38" pos:end="167:38">*</operator> <literal type="number" pos:start="167:40" pos:end="167:47">31536000</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="171:9" pos:end="171:15">return;</return>



    <case pos:start="175:5" pos:end="175:14">case <expr pos:start="175:10" pos:end="175:13"><literal type="number" pos:start="175:10" pos:end="175:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="175:17" pos:end="175:30">/* WEEK_REG */</comment>

        <return pos:start="177:9" pos:end="177:15">return;</return>	<comment type="block" pos:start="177:17" pos:end="177:29">/* Ignored */</comment>



    <case pos:start="181:5" pos:end="184:0">case <expr pos:start="181:10" pos:end="181:13"><literal type="number" pos:start="181:10" pos:end="181:13">0x20</literal></expr>:</case>	<comment type="block" pos:start="181:17" pos:end="181:39">/* ALARM_SECONDS_REG */</comment>

<cpp:ifdef pos:start="183:1" pos:end="183:15">#<cpp:directive pos:start="183:2" pos:end="183:6">ifdef</cpp:directive> <name pos:start="183:8" pos:end="183:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="185:9" pos:end="188:0"><expr pos:start="185:9" pos:end="185:47"><call pos:start="185:9" pos:end="185:47"><name pos:start="185:9" pos:end="185:14">printf</name><argument_list pos:start="185:15" pos:end="185:47">(<argument pos:start="185:16" pos:end="185:39"><expr pos:start="185:16" pos:end="185:39"><literal type="string" pos:start="185:16" pos:end="185:39">"ALM SEC_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="185:42" pos:end="185:46"><expr pos:start="185:42" pos:end="185:46"><name pos:start="185:42" pos:end="185:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="187:1" pos:end="187:6">#<cpp:directive pos:start="187:2" pos:end="187:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="189:9" pos:end="189:45"><expr pos:start="189:9" pos:end="189:44"><name pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:19">alarm_tm</name><operator pos:start="189:20" pos:end="189:20">.</operator><name pos:start="189:21" pos:end="189:26">tm_sec</name></name> <operator pos:start="189:28" pos:end="189:28">=</operator> <call pos:start="189:30" pos:end="189:44"><name pos:start="189:30" pos:end="189:37">from_bcd</name><argument_list pos:start="189:38" pos:end="189:44">(<argument pos:start="189:39" pos:end="189:43"><expr pos:start="189:39" pos:end="189:43"><name pos:start="189:39" pos:end="189:43">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:33"><expr pos:start="191:9" pos:end="191:32"><call pos:start="191:9" pos:end="191:32"><name pos:start="191:9" pos:end="191:29">omap_rtc_alarm_update</name><argument_list pos:start="191:30" pos:end="191:32">(<argument pos:start="191:31" pos:end="191:31"><expr pos:start="191:31" pos:end="191:31"><name pos:start="191:31" pos:end="191:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="193:9" pos:end="193:15">return;</return>



    <case pos:start="197:5" pos:end="200:0">case <expr pos:start="197:10" pos:end="197:13"><literal type="number" pos:start="197:10" pos:end="197:13">0x24</literal></expr>:</case>	<comment type="block" pos:start="197:17" pos:end="197:39">/* ALARM_MINUTES_REG */</comment>

<cpp:ifdef pos:start="199:1" pos:end="199:15">#<cpp:directive pos:start="199:2" pos:end="199:6">ifdef</cpp:directive> <name pos:start="199:8" pos:end="199:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="201:9" pos:end="204:0"><expr pos:start="201:9" pos:end="201:47"><call pos:start="201:9" pos:end="201:47"><name pos:start="201:9" pos:end="201:14">printf</name><argument_list pos:start="201:15" pos:end="201:47">(<argument pos:start="201:16" pos:end="201:39"><expr pos:start="201:16" pos:end="201:39"><literal type="string" pos:start="201:16" pos:end="201:39">"ALM MIN_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="201:42" pos:end="201:46"><expr pos:start="201:42" pos:end="201:46"><name pos:start="201:42" pos:end="201:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="203:1" pos:end="203:6">#<cpp:directive pos:start="203:2" pos:end="203:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="205:9" pos:end="205:45"><expr pos:start="205:9" pos:end="205:44"><name pos:start="205:9" pos:end="205:26"><name pos:start="205:9" pos:end="205:9">s</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:19">alarm_tm</name><operator pos:start="205:20" pos:end="205:20">.</operator><name pos:start="205:21" pos:end="205:26">tm_min</name></name> <operator pos:start="205:28" pos:end="205:28">=</operator> <call pos:start="205:30" pos:end="205:44"><name pos:start="205:30" pos:end="205:37">from_bcd</name><argument_list pos:start="205:38" pos:end="205:44">(<argument pos:start="205:39" pos:end="205:43"><expr pos:start="205:39" pos:end="205:43"><name pos:start="205:39" pos:end="205:43">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:33"><expr pos:start="207:9" pos:end="207:32"><call pos:start="207:9" pos:end="207:32"><name pos:start="207:9" pos:end="207:29">omap_rtc_alarm_update</name><argument_list pos:start="207:30" pos:end="207:32">(<argument pos:start="207:31" pos:end="207:31"><expr pos:start="207:31" pos:end="207:31"><name pos:start="207:31" pos:end="207:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:15">return;</return>



    <case pos:start="213:5" pos:end="216:0">case <expr pos:start="213:10" pos:end="213:13"><literal type="number" pos:start="213:10" pos:end="213:13">0x28</literal></expr>:</case>	<comment type="block" pos:start="213:17" pos:end="213:37">/* ALARM_HOURS_REG */</comment>

<cpp:ifdef pos:start="215:1" pos:end="215:15">#<cpp:directive pos:start="215:2" pos:end="215:6">ifdef</cpp:directive> <name pos:start="215:8" pos:end="215:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="217:9" pos:end="220:0"><expr pos:start="217:9" pos:end="217:47"><call pos:start="217:9" pos:end="217:47"><name pos:start="217:9" pos:end="217:14">printf</name><argument_list pos:start="217:15" pos:end="217:47">(<argument pos:start="217:16" pos:end="217:39"><expr pos:start="217:16" pos:end="217:39"><literal type="string" pos:start="217:16" pos:end="217:39">"ALM HRS_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="217:42" pos:end="217:46"><expr pos:start="217:42" pos:end="217:46"><name pos:start="217:42" pos:end="217:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="219:1" pos:end="219:6">#<cpp:directive pos:start="219:2" pos:end="219:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="221:9" pos:end="231:50"><if pos:start="221:9" pos:end="227:44">if <condition pos:start="221:12" pos:end="221:21">(<expr pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:13">s</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:20">pm_am</name></name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="227:44"><block_content pos:start="223:13" pos:end="227:44">

            <expr_stmt pos:start="223:13" pos:end="227:44"><expr pos:start="223:13" pos:end="227:43"><name pos:start="223:13" pos:end="223:31"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:23">alarm_tm</name><operator pos:start="223:24" pos:end="223:24">.</operator><name pos:start="223:25" pos:end="223:31">tm_hour</name></name> <operator pos:start="223:33" pos:end="223:33">=</operator>

                    <operator pos:start="225:21" pos:end="225:21">(</operator><operator pos:start="225:22" pos:end="225:22">(</operator><call pos:start="225:23" pos:end="225:44"><name pos:start="225:23" pos:end="225:30">from_bcd</name><argument_list pos:start="225:31" pos:end="225:44">(<argument pos:start="225:32" pos:end="225:43"><expr pos:start="225:32" pos:end="225:43"><name pos:start="225:32" pos:end="225:36">value</name> <operator pos:start="225:38" pos:end="225:38">&amp;</operator> <literal type="number" pos:start="225:40" pos:end="225:43">0x3f</literal></expr></argument>)</argument_list></call><operator pos:start="225:45" pos:end="225:45">)</operator> <operator pos:start="225:47" pos:end="225:47">%</operator> <literal type="number" pos:start="225:49" pos:end="225:50">12</literal><operator pos:start="225:51" pos:end="225:51">)</operator> <operator pos:start="225:53" pos:end="225:53">+</operator>

                    <operator pos:start="227:21" pos:end="227:21">(</operator><operator pos:start="227:22" pos:end="227:22">(</operator><name pos:start="227:23" pos:end="227:27">value</name> <operator pos:start="227:29" pos:end="227:30">&gt;&gt;</operator> <literal type="number" pos:start="227:32" pos:end="227:32">7</literal><operator pos:start="227:33" pos:end="227:33">)</operator> <operator pos:start="227:35" pos:end="227:35">&amp;</operator> <literal type="number" pos:start="227:37" pos:end="227:37">1</literal><operator pos:start="227:38" pos:end="227:38">)</operator> <operator pos:start="227:40" pos:end="227:40">*</operator> <literal type="number" pos:start="227:42" pos:end="227:43">12</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="229:9" pos:end="231:50">else<block type="pseudo" pos:start="231:13" pos:end="231:50"><block_content pos:start="231:13" pos:end="231:50">

            <expr_stmt pos:start="231:13" pos:end="231:50"><expr pos:start="231:13" pos:end="231:49"><name pos:start="231:13" pos:end="231:31"><name pos:start="231:13" pos:end="231:13">s</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:23">alarm_tm</name><operator pos:start="231:24" pos:end="231:24">.</operator><name pos:start="231:25" pos:end="231:31">tm_hour</name></name> <operator pos:start="231:33" pos:end="231:33">=</operator> <call pos:start="231:35" pos:end="231:49"><name pos:start="231:35" pos:end="231:42">from_bcd</name><argument_list pos:start="231:43" pos:end="231:49">(<argument pos:start="231:44" pos:end="231:48"><expr pos:start="231:44" pos:end="231:48"><name pos:start="231:44" pos:end="231:48">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:33"><expr pos:start="233:9" pos:end="233:32"><call pos:start="233:9" pos:end="233:32"><name pos:start="233:9" pos:end="233:29">omap_rtc_alarm_update</name><argument_list pos:start="233:30" pos:end="233:32">(<argument pos:start="233:31" pos:end="233:31"><expr pos:start="233:31" pos:end="233:31"><name pos:start="233:31" pos:end="233:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="235:9" pos:end="235:15">return;</return>



    <case pos:start="239:5" pos:end="242:0">case <expr pos:start="239:10" pos:end="239:13"><literal type="number" pos:start="239:10" pos:end="239:13">0x2c</literal></expr>:</case>	<comment type="block" pos:start="239:17" pos:end="239:36">/* ALARM_DAYS_REG */</comment>

<cpp:ifdef pos:start="241:1" pos:end="241:15">#<cpp:directive pos:start="241:2" pos:end="241:6">ifdef</cpp:directive> <name pos:start="241:8" pos:end="241:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="243:9" pos:end="246:0"><expr pos:start="243:9" pos:end="243:47"><call pos:start="243:9" pos:end="243:47"><name pos:start="243:9" pos:end="243:14">printf</name><argument_list pos:start="243:15" pos:end="243:47">(<argument pos:start="243:16" pos:end="243:39"><expr pos:start="243:16" pos:end="243:39"><literal type="string" pos:start="243:16" pos:end="243:39">"ALM DAY_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="243:42" pos:end="243:46"><expr pos:start="243:42" pos:end="243:46"><name pos:start="243:42" pos:end="243:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="245:1" pos:end="245:6">#<cpp:directive pos:start="245:2" pos:end="245:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="247:9" pos:end="247:46"><expr pos:start="247:9" pos:end="247:45"><name pos:start="247:9" pos:end="247:27"><name pos:start="247:9" pos:end="247:9">s</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:19">alarm_tm</name><operator pos:start="247:20" pos:end="247:20">.</operator><name pos:start="247:21" pos:end="247:27">tm_mday</name></name> <operator pos:start="247:29" pos:end="247:29">=</operator> <call pos:start="247:31" pos:end="247:45"><name pos:start="247:31" pos:end="247:38">from_bcd</name><argument_list pos:start="247:39" pos:end="247:45">(<argument pos:start="247:40" pos:end="247:44"><expr pos:start="247:40" pos:end="247:44"><name pos:start="247:40" pos:end="247:44">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:33"><expr pos:start="249:9" pos:end="249:32"><call pos:start="249:9" pos:end="249:32"><name pos:start="249:9" pos:end="249:29">omap_rtc_alarm_update</name><argument_list pos:start="249:30" pos:end="249:32">(<argument pos:start="249:31" pos:end="249:31"><expr pos:start="249:31" pos:end="249:31"><name pos:start="249:31" pos:end="249:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="251:9" pos:end="251:15">return;</return>



    <case pos:start="255:5" pos:end="258:0">case <expr pos:start="255:10" pos:end="255:13"><literal type="number" pos:start="255:10" pos:end="255:13">0x30</literal></expr>:</case>	<comment type="block" pos:start="255:17" pos:end="255:38">/* ALARM_MONTHS_REG */</comment>

<cpp:ifdef pos:start="257:1" pos:end="257:15">#<cpp:directive pos:start="257:2" pos:end="257:6">ifdef</cpp:directive> <name pos:start="257:8" pos:end="257:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="259:9" pos:end="262:0"><expr pos:start="259:9" pos:end="259:47"><call pos:start="259:9" pos:end="259:47"><name pos:start="259:9" pos:end="259:14">printf</name><argument_list pos:start="259:15" pos:end="259:47">(<argument pos:start="259:16" pos:end="259:39"><expr pos:start="259:16" pos:end="259:39"><literal type="string" pos:start="259:16" pos:end="259:39">"ALM MON_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="259:42" pos:end="259:46"><expr pos:start="259:42" pos:end="259:46"><name pos:start="259:42" pos:end="259:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="261:1" pos:end="261:6">#<cpp:directive pos:start="261:2" pos:end="261:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="263:9" pos:end="263:45"><expr pos:start="263:9" pos:end="263:44"><name pos:start="263:9" pos:end="263:26"><name pos:start="263:9" pos:end="263:9">s</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:19">alarm_tm</name><operator pos:start="263:20" pos:end="263:20">.</operator><name pos:start="263:21" pos:end="263:26">tm_mon</name></name> <operator pos:start="263:28" pos:end="263:28">=</operator> <call pos:start="263:30" pos:end="263:44"><name pos:start="263:30" pos:end="263:37">from_bcd</name><argument_list pos:start="263:38" pos:end="263:44">(<argument pos:start="263:39" pos:end="263:43"><expr pos:start="263:39" pos:end="263:43"><name pos:start="263:39" pos:end="263:43">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:33"><expr pos:start="265:9" pos:end="265:32"><call pos:start="265:9" pos:end="265:32"><name pos:start="265:9" pos:end="265:29">omap_rtc_alarm_update</name><argument_list pos:start="265:30" pos:end="265:32">(<argument pos:start="265:31" pos:end="265:31"><expr pos:start="265:31" pos:end="265:31"><name pos:start="265:31" pos:end="265:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="267:9" pos:end="267:15">return;</return>



    <case pos:start="271:5" pos:end="274:0">case <expr pos:start="271:10" pos:end="271:13"><literal type="number" pos:start="271:10" pos:end="271:13">0x34</literal></expr>:</case>	<comment type="block" pos:start="271:17" pos:end="271:37">/* ALARM_YEARS_REG */</comment>

<cpp:ifdef pos:start="273:1" pos:end="273:15">#<cpp:directive pos:start="273:2" pos:end="273:6">ifdef</cpp:directive> <name pos:start="273:8" pos:end="273:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="275:9" pos:end="278:0"><expr pos:start="275:9" pos:end="275:47"><call pos:start="275:9" pos:end="275:47"><name pos:start="275:9" pos:end="275:14">printf</name><argument_list pos:start="275:15" pos:end="275:47">(<argument pos:start="275:16" pos:end="275:39"><expr pos:start="275:16" pos:end="275:39"><literal type="string" pos:start="275:16" pos:end="275:39">"ALM YRS_REG &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="275:42" pos:end="275:46"><expr pos:start="275:42" pos:end="275:46"><name pos:start="275:42" pos:end="275:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="277:1" pos:end="277:6">#<cpp:directive pos:start="277:2" pos:end="277:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="279:9" pos:end="279:46"><expr pos:start="279:9" pos:end="279:45"><name pos:start="279:9" pos:end="279:27"><name pos:start="279:9" pos:end="279:9">s</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:19">alarm_tm</name><operator pos:start="279:20" pos:end="279:20">.</operator><name pos:start="279:21" pos:end="279:27">tm_year</name></name> <operator pos:start="279:29" pos:end="279:29">=</operator> <call pos:start="279:31" pos:end="279:45"><name pos:start="279:31" pos:end="279:38">from_bcd</name><argument_list pos:start="279:39" pos:end="279:45">(<argument pos:start="279:40" pos:end="279:44"><expr pos:start="279:40" pos:end="279:44"><name pos:start="279:40" pos:end="279:44">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:33"><expr pos:start="281:9" pos:end="281:32"><call pos:start="281:9" pos:end="281:32"><name pos:start="281:9" pos:end="281:29">omap_rtc_alarm_update</name><argument_list pos:start="281:30" pos:end="281:32">(<argument pos:start="281:31" pos:end="281:31"><expr pos:start="281:31" pos:end="281:31"><name pos:start="281:31" pos:end="281:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="283:9" pos:end="283:15">return;</return>



    <case pos:start="287:5" pos:end="290:0">case <expr pos:start="287:10" pos:end="287:13"><literal type="number" pos:start="287:10" pos:end="287:13">0x40</literal></expr>:</case>	<comment type="block" pos:start="287:17" pos:end="287:34">/* RTC_CTRL_REG */</comment>

<cpp:ifdef pos:start="289:1" pos:end="289:15">#<cpp:directive pos:start="289:2" pos:end="289:6">ifdef</cpp:directive> <name pos:start="289:8" pos:end="289:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="291:9" pos:end="294:0"><expr pos:start="291:9" pos:end="291:47"><call pos:start="291:9" pos:end="291:47"><name pos:start="291:9" pos:end="291:14">printf</name><argument_list pos:start="291:15" pos:end="291:47">(<argument pos:start="291:16" pos:end="291:39"><expr pos:start="291:16" pos:end="291:39"><literal type="string" pos:start="291:16" pos:end="291:39">"RTC CONTROL &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="291:42" pos:end="291:46"><expr pos:start="291:42" pos:end="291:46"><name pos:start="291:42" pos:end="291:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="293:1" pos:end="293:6">#<cpp:directive pos:start="293:2" pos:end="293:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="295:9" pos:end="295:36"><expr pos:start="295:9" pos:end="295:35"><name pos:start="295:9" pos:end="295:16"><name pos:start="295:9" pos:end="295:9">s</name><operator pos:start="295:10" pos:end="295:11">-&gt;</operator><name pos:start="295:12" pos:end="295:16">pm_am</name></name> <operator pos:start="295:18" pos:end="295:18">=</operator> <operator pos:start="295:20" pos:end="295:20">(</operator><name pos:start="295:21" pos:end="295:25">value</name> <operator pos:start="295:27" pos:end="295:28">&gt;&gt;</operator> <literal type="number" pos:start="295:30" pos:end="295:30">3</literal><operator pos:start="295:31" pos:end="295:31">)</operator> <operator pos:start="295:33" pos:end="295:33">&amp;</operator> <literal type="number" pos:start="295:35" pos:end="295:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:40"><expr pos:start="297:9" pos:end="297:39"><name pos:start="297:9" pos:end="297:20"><name pos:start="297:9" pos:end="297:9">s</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:20">auto_comp</name></name> <operator pos:start="297:22" pos:end="297:22">=</operator> <operator pos:start="297:24" pos:end="297:24">(</operator><name pos:start="297:25" pos:end="297:29">value</name> <operator pos:start="297:31" pos:end="297:32">&gt;&gt;</operator> <literal type="number" pos:start="297:34" pos:end="297:34">2</literal><operator pos:start="297:35" pos:end="297:35">)</operator> <operator pos:start="297:37" pos:end="297:37">&amp;</operator> <literal type="number" pos:start="297:39" pos:end="297:39">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:36"><expr pos:start="299:9" pos:end="299:35"><name pos:start="299:9" pos:end="299:16"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:16">round</name></name> <operator pos:start="299:18" pos:end="299:18">=</operator> <operator pos:start="299:20" pos:end="299:20">(</operator><name pos:start="299:21" pos:end="299:25">value</name> <operator pos:start="299:27" pos:end="299:28">&gt;&gt;</operator> <literal type="number" pos:start="299:30" pos:end="299:30">1</literal><operator pos:start="299:31" pos:end="299:31">)</operator> <operator pos:start="299:33" pos:end="299:33">&amp;</operator> <literal type="number" pos:start="299:35" pos:end="299:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:31"><expr pos:start="301:9" pos:end="301:30"><name pos:start="301:9" pos:end="301:18"><name pos:start="301:9" pos:end="301:9">s</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:18">running</name></name> <operator pos:start="301:20" pos:end="301:20">=</operator> <name pos:start="301:22" pos:end="301:26">value</name> <operator pos:start="301:28" pos:end="301:28">&amp;</operator> <literal type="number" pos:start="301:30" pos:end="301:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:26"><expr pos:start="303:9" pos:end="303:25"><name pos:start="303:9" pos:end="303:17"><name pos:start="303:9" pos:end="303:9">s</name><operator pos:start="303:10" pos:end="303:11">-&gt;</operator><name pos:start="303:12" pos:end="303:17">status</name></name> <operator pos:start="303:19" pos:end="303:20">&amp;=</operator> <literal type="number" pos:start="303:22" pos:end="303:25">0xfd</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:37"><expr pos:start="305:9" pos:end="305:36"><name pos:start="305:9" pos:end="305:17"><name pos:start="305:9" pos:end="305:9">s</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:17">status</name></name> <operator pos:start="305:19" pos:end="305:20">|=</operator> <name pos:start="305:22" pos:end="305:31"><name pos:start="305:22" pos:end="305:22">s</name><operator pos:start="305:23" pos:end="305:24">-&gt;</operator><name pos:start="305:25" pos:end="305:31">running</name></name> <operator pos:start="305:33" pos:end="305:34">&lt;&lt;</operator> <literal type="number" pos:start="305:36" pos:end="305:36">1</literal></expr>;</expr_stmt>

        <return pos:start="307:9" pos:end="307:15">return;</return>



    <case pos:start="311:5" pos:end="314:0">case <expr pos:start="311:10" pos:end="311:13"><literal type="number" pos:start="311:10" pos:end="311:13">0x44</literal></expr>:</case>	<comment type="block" pos:start="311:17" pos:end="311:36">/* RTC_STATUS_REG */</comment>

<cpp:ifdef pos:start="313:1" pos:end="313:15">#<cpp:directive pos:start="313:2" pos:end="313:6">ifdef</cpp:directive> <name pos:start="313:8" pos:end="313:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="315:9" pos:end="318:0"><expr pos:start="315:9" pos:end="315:47"><call pos:start="315:9" pos:end="315:47"><name pos:start="315:9" pos:end="315:14">printf</name><argument_list pos:start="315:15" pos:end="315:47">(<argument pos:start="315:16" pos:end="315:39"><expr pos:start="315:16" pos:end="315:39"><literal type="string" pos:start="315:16" pos:end="315:39">"RTC STATUSL &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="315:42" pos:end="315:46"><expr pos:start="315:42" pos:end="315:46"><name pos:start="315:42" pos:end="315:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="317:1" pos:end="317:6">#<cpp:directive pos:start="317:2" pos:end="317:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="319:9" pos:end="319:46"><expr pos:start="319:9" pos:end="319:45"><name pos:start="319:9" pos:end="319:17"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:17">status</name></name> <operator pos:start="319:19" pos:end="319:20">&amp;=</operator> <operator pos:start="319:22" pos:end="319:22">~</operator><operator pos:start="319:23" pos:end="319:23">(</operator><operator pos:start="319:24" pos:end="319:24">(</operator><name pos:start="319:25" pos:end="319:29">value</name> <operator pos:start="319:31" pos:end="319:31">&amp;</operator> <literal type="number" pos:start="319:33" pos:end="319:36">0xc0</literal><operator pos:start="319:37" pos:end="319:37">)</operator> <operator pos:start="319:39" pos:end="319:39">^</operator> <literal type="number" pos:start="319:41" pos:end="319:44">0x80</literal><operator pos:start="319:45" pos:end="319:45">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:38"><expr pos:start="321:9" pos:end="321:37"><call pos:start="321:9" pos:end="321:37"><name pos:start="321:9" pos:end="321:34">omap_rtc_interrupts_update</name><argument_list pos:start="321:35" pos:end="321:37">(<argument pos:start="321:36" pos:end="321:36"><expr pos:start="321:36" pos:end="321:36"><name pos:start="321:36" pos:end="321:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="323:9" pos:end="323:15">return;</return>



    <case pos:start="327:5" pos:end="330:0">case <expr pos:start="327:10" pos:end="327:13"><literal type="number" pos:start="327:10" pos:end="327:13">0x48</literal></expr>:</case>	<comment type="block" pos:start="327:17" pos:end="327:40">/* RTC_INTERRUPTS_REG */</comment>

<cpp:ifdef pos:start="329:1" pos:end="329:15">#<cpp:directive pos:start="329:2" pos:end="329:6">ifdef</cpp:directive> <name pos:start="329:8" pos:end="329:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="331:9" pos:end="334:0"><expr pos:start="331:9" pos:end="331:45"><call pos:start="331:9" pos:end="331:45"><name pos:start="331:9" pos:end="331:14">printf</name><argument_list pos:start="331:15" pos:end="331:45">(<argument pos:start="331:16" pos:end="331:37"><expr pos:start="331:16" pos:end="331:37"><literal type="string" pos:start="331:16" pos:end="331:37">"RTC INTRS &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="331:40" pos:end="331:44"><expr pos:start="331:40" pos:end="331:44"><name pos:start="331:40" pos:end="331:44">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="333:1" pos:end="333:6">#<cpp:directive pos:start="333:2" pos:end="333:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="335:9" pos:end="335:30"><expr pos:start="335:9" pos:end="335:29"><name pos:start="335:9" pos:end="335:21"><name pos:start="335:9" pos:end="335:9">s</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:21">interrupts</name></name> <operator pos:start="335:23" pos:end="335:23">=</operator> <name pos:start="335:25" pos:end="335:29">value</name></expr>;</expr_stmt>

        <return pos:start="337:9" pos:end="337:15">return;</return>



    <case pos:start="341:5" pos:end="344:0">case <expr pos:start="341:10" pos:end="341:13"><literal type="number" pos:start="341:10" pos:end="341:13">0x4c</literal></expr>:</case>	<comment type="block" pos:start="341:17" pos:end="341:38">/* RTC_COMP_LSB_REG */</comment>

<cpp:ifdef pos:start="343:1" pos:end="343:15">#<cpp:directive pos:start="343:2" pos:end="343:6">ifdef</cpp:directive> <name pos:start="343:8" pos:end="343:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="345:9" pos:end="348:0"><expr pos:start="345:9" pos:end="345:47"><call pos:start="345:9" pos:end="345:47"><name pos:start="345:9" pos:end="345:14">printf</name><argument_list pos:start="345:15" pos:end="345:47">(<argument pos:start="345:16" pos:end="345:39"><expr pos:start="345:16" pos:end="345:39"><literal type="string" pos:start="345:16" pos:end="345:39">"RTC COMPLSB &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="345:42" pos:end="345:46"><expr pos:start="345:42" pos:end="345:46"><name pos:start="345:42" pos:end="345:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="347:1" pos:end="347:6">#<cpp:directive pos:start="347:2" pos:end="347:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="349:9" pos:end="349:30"><expr pos:start="349:9" pos:end="349:29"><name pos:start="349:9" pos:end="349:19"><name pos:start="349:9" pos:end="349:9">s</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:19">comp_reg</name></name> <operator pos:start="349:21" pos:end="349:22">&amp;=</operator> <literal type="number" pos:start="349:24" pos:end="349:29">0xff00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:38"><expr pos:start="351:9" pos:end="351:37"><name pos:start="351:9" pos:end="351:19"><name pos:start="351:9" pos:end="351:9">s</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:19">comp_reg</name></name> <operator pos:start="351:21" pos:end="351:22">|=</operator> <literal type="number" pos:start="351:24" pos:end="351:29">0x00ff</literal> <operator pos:start="351:31" pos:end="351:31">&amp;</operator> <name pos:start="351:33" pos:end="351:37">value</name></expr>;</expr_stmt>

        <return pos:start="353:9" pos:end="353:15">return;</return>



    <case pos:start="357:5" pos:end="360:0">case <expr pos:start="357:10" pos:end="357:13"><literal type="number" pos:start="357:10" pos:end="357:13">0x50</literal></expr>:</case>	<comment type="block" pos:start="357:17" pos:end="357:38">/* RTC_COMP_MSB_REG */</comment>

<cpp:ifdef pos:start="359:1" pos:end="359:15">#<cpp:directive pos:start="359:2" pos:end="359:6">ifdef</cpp:directive> <name pos:start="359:8" pos:end="359:15">ALMDEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="361:9" pos:end="364:0"><expr pos:start="361:9" pos:end="361:47"><call pos:start="361:9" pos:end="361:47"><name pos:start="361:9" pos:end="361:14">printf</name><argument_list pos:start="361:15" pos:end="361:47">(<argument pos:start="361:16" pos:end="361:39"><expr pos:start="361:16" pos:end="361:39"><literal type="string" pos:start="361:16" pos:end="361:39">"RTC COMPMSB &lt;-- %02x\n"</literal></expr></argument>, <argument pos:start="361:42" pos:end="361:46"><expr pos:start="361:42" pos:end="361:46"><name pos:start="361:42" pos:end="361:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="363:1" pos:end="363:6">#<cpp:directive pos:start="363:2" pos:end="363:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="365:9" pos:end="365:30"><expr pos:start="365:9" pos:end="365:29"><name pos:start="365:9" pos:end="365:19"><name pos:start="365:9" pos:end="365:9">s</name><operator pos:start="365:10" pos:end="365:11">-&gt;</operator><name pos:start="365:12" pos:end="365:19">comp_reg</name></name> <operator pos:start="365:21" pos:end="365:22">&amp;=</operator> <literal type="number" pos:start="365:24" pos:end="365:29">0x00ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:45"><expr pos:start="367:9" pos:end="367:44"><name pos:start="367:9" pos:end="367:19"><name pos:start="367:9" pos:end="367:9">s</name><operator pos:start="367:10" pos:end="367:11">-&gt;</operator><name pos:start="367:12" pos:end="367:19">comp_reg</name></name> <operator pos:start="367:21" pos:end="367:22">|=</operator> <literal type="number" pos:start="367:24" pos:end="367:29">0xff00</literal> <operator pos:start="367:31" pos:end="367:31">&amp;</operator> <operator pos:start="367:33" pos:end="367:33">(</operator><name pos:start="367:34" pos:end="367:38">value</name> <operator pos:start="367:40" pos:end="367:41">&lt;&lt;</operator> <literal type="number" pos:start="367:43" pos:end="367:43">8</literal><operator pos:start="367:44" pos:end="367:44">)</operator></expr>;</expr_stmt>

        <return pos:start="369:9" pos:end="369:15">return;</return>



    <default pos:start="373:5" pos:end="373:12">default:</default>

        <expr_stmt pos:start="375:9" pos:end="375:27"><expr pos:start="375:9" pos:end="375:26"><call pos:start="375:9" pos:end="375:26"><name pos:start="375:9" pos:end="375:20">OMAP_BAD_REG</name><argument_list pos:start="375:21" pos:end="375:26">(<argument pos:start="375:22" pos:end="375:25"><expr pos:start="375:22" pos:end="375:25"><name pos:start="375:22" pos:end="375:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="377:9" pos:end="377:15">return;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
