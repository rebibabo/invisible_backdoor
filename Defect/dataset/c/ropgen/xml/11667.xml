<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11667.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:23">coroutine_fn</name></type> <name pos:start="1:25" pos:end="1:36">nfs_co_flush</name><parameter_list pos:start="1:37" pos:end="1:58">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:53">BlockDriverState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:20">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">NFSClient</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">client</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:26">bs</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">NFSRPC</name></type> <name pos:start="7:12" pos:end="7:15">task</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><call pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:20">nfs_co_init_task</name><argument_list pos:start="11:21" pos:end="11:35">(<argument pos:start="11:22" pos:end="11:27"><expr pos:start="11:22" pos:end="11:27"><name pos:start="11:22" pos:end="11:27">client</name></expr></argument>, <argument pos:start="11:30" pos:end="11:34"><expr pos:start="11:30" pos:end="11:34"><operator pos:start="11:30" pos:end="11:30">&amp;</operator><name pos:start="11:31" pos:end="11:34">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="17:36">(<expr pos:start="15:9" pos:end="17:35"><call pos:start="15:9" pos:end="17:30"><name pos:start="15:9" pos:end="15:23">nfs_fsync_async</name><argument_list pos:start="15:24" pos:end="17:30">(<argument pos:start="15:25" pos:end="15:39"><expr pos:start="15:25" pos:end="15:39"><name pos:start="15:25" pos:end="15:39"><name pos:start="15:25" pos:end="15:30">client</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:39">context</name></name></expr></argument>, <argument pos:start="15:42" pos:end="15:51"><expr pos:start="15:42" pos:end="15:51"><name pos:start="15:42" pos:end="15:51"><name pos:start="15:42" pos:end="15:47">client</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:51">fh</name></name></expr></argument>, <argument pos:start="15:54" pos:end="15:70"><expr pos:start="15:54" pos:end="15:70"><name pos:start="15:54" pos:end="15:70">nfs_co_generic_cb</name></expr></argument>,

                        <argument pos:start="17:25" pos:end="17:29"><expr pos:start="17:25" pos:end="17:29"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:29">task</name></expr></argument>)</argument_list></call> <operator pos:start="17:32" pos:end="17:33">!=</operator> <literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr>)</condition> <block pos:start="17:38" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:23">

        <return pos:start="19:9" pos:end="19:23">return <expr pos:start="19:16" pos:end="19:22"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="25:5" pos:end="31:5">while <condition pos:start="25:11" pos:end="25:26">(<expr pos:start="25:12" pos:end="25:25"><operator pos:start="25:12" pos:end="25:12">!</operator><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:16">task</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:25">complete</name></name></expr>)</condition> <block pos:start="25:28" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:31">

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><call pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:22">nfs_set_events</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><call pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:28">qemu_coroutine_yield</name><argument_list pos:start="29:29" pos:end="29:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="35:5" pos:end="35:20">return <expr pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:15">task</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:19">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
