<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24769.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">uint8_t</name></type> <name pos:start="1:16" pos:end="1:22">get_sot</name><parameter_list pos:start="1:23" pos:end="1:56">(<parameter pos:start="1:24" pos:end="1:48"><decl pos:start="1:24" pos:end="1:48"><type pos:start="1:24" pos:end="1:48"><name pos:start="1:24" pos:end="1:45">Jpeg2000DecoderContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:55"><decl pos:start="1:51" pos:end="1:55"><type pos:start="1:51" pos:end="1:55"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:55">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">Jpeg2000TilePart</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">tp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:17">Isot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">Psot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:17">TPsot</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:18">buf_end</name></name> <operator pos:start="15:20" pos:end="15:20">-</operator> <name pos:start="15:22" pos:end="15:27"><name pos:start="15:22" pos:end="15:22">s</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:27">buf</name></name> <operator pos:start="15:29" pos:end="15:29">&lt;</operator> <literal type="number" pos:start="15:31" pos:end="15:31">4</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:8">Isot</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:39"><name pos:start="21:12" pos:end="21:30">bytestream_get_be16</name><argument_list pos:start="21:31" pos:end="21:39">(<argument pos:start="21:32" pos:end="21:38"><expr pos:start="21:32" pos:end="21:38"><operator pos:start="21:32" pos:end="21:32">&amp;</operator><name pos:start="21:33" pos:end="21:38"><name pos:start="21:33" pos:end="21:33">s</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:38">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="line" pos:start="21:49" pos:end="21:55">// Isot</comment>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:12">Isot</name></expr>)</condition> <block pos:start="23:15" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:18">

        <expr_stmt pos:start="25:9" pos:end="27:64"><expr pos:start="25:9" pos:end="27:63"><call pos:start="25:9" pos:end="27:63"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="27:63">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="27:16" pos:end="27:62"><expr pos:start="27:16" pos:end="27:62"><literal type="string" pos:start="27:16" pos:end="27:62">"Not a DCINEMA JP2K file: more than one tile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:8">Psot</name>  <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="33:40"><name pos:start="33:13" pos:end="33:31">bytestream_get_be32</name><argument_list pos:start="33:32" pos:end="33:40">(<argument pos:start="33:33" pos:end="33:39"><expr pos:start="33:33" pos:end="33:39"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:39"><name pos:start="33:34" pos:end="33:34">s</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:39">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="33:49" pos:end="33:55">// Psot</comment>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:9">TPsot</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:31">bytestream_get_byte</name><argument_list pos:start="35:32" pos:end="35:40">(<argument pos:start="35:33" pos:end="35:39"><expr pos:start="35:33" pos:end="35:39"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:39"><name pos:start="35:34" pos:end="35:34">s</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:39">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="35:49" pos:end="35:56">// TPsot</comment>



    <comment type="block" pos:start="39:5" pos:end="39:33">/* Read TNSot but not used */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><call pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:23">bytestream_get_byte</name><argument_list pos:start="41:24" pos:end="41:32">(<argument pos:start="41:25" pos:end="41:31"><expr pos:start="41:25" pos:end="41:31"><operator pos:start="41:25" pos:end="41:25">&amp;</operator><name pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:26">s</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:31">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>               <comment type="line" pos:start="41:49" pos:end="41:56">// TNsot</comment>



    <expr_stmt pos:start="45:5" pos:end="45:61"><expr pos:start="45:5" pos:end="45:60"><name pos:start="45:5" pos:end="45:6">tp</name>             <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:42"><name pos:start="45:22" pos:end="45:22">s</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:28">tile</name><index pos:start="45:29" pos:end="45:42">[<expr pos:start="45:30" pos:end="45:41"><name pos:start="45:30" pos:end="45:41"><name pos:start="45:30" pos:end="45:30">s</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:41">curtileno</name></name></expr>]</index></name><operator pos:start="45:43" pos:end="45:43">.</operator><name pos:start="45:44" pos:end="45:52">tile_part</name> <operator pos:start="45:54" pos:end="45:54">+</operator> <name pos:start="45:56" pos:end="45:60">TPsot</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:6">tp</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:18">tile_index</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:25">Isot</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:6">tp</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:14">tp_len</name></name>     <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:25">Psot</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:6">tp</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:14">tp_idx</name></name>     <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:26">TPsot</name></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="57:38">/* Start of bit stream. Pointer to SOD marker

     * Check SOD marker is present. */</comment>

    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="61:36">if <condition pos:start="59:8" pos:end="59:53">(<expr pos:start="59:9" pos:end="59:52"><name pos:start="59:9" pos:end="59:20">JPEG2000_SOD</name> <operator pos:start="59:22" pos:end="59:23">==</operator> <call pos:start="59:25" pos:end="59:52"><name pos:start="59:25" pos:end="59:43">bytestream_get_be16</name><argument_list pos:start="59:44" pos:end="59:52">(<argument pos:start="59:45" pos:end="59:51"><expr pos:start="59:45" pos:end="59:51"><operator pos:start="59:45" pos:end="59:45">&amp;</operator><name pos:start="59:46" pos:end="59:51"><name pos:start="59:46" pos:end="59:46">s</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:51">buf</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:36"><block_content pos:start="61:9" pos:end="61:36">

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:10">tp</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:26">tp_start_bstrm</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:35"><name pos:start="61:30" pos:end="61:30">s</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:35">buf</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="63:5" pos:end="69:5">else <block pos:start="63:10" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:18">

        <expr_stmt pos:start="65:9" pos:end="65:66"><expr pos:start="65:9" pos:end="65:65"><call pos:start="65:9" pos:end="65:65"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:65">(<argument pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:23">avctx</name></name></expr></argument>, <argument pos:start="65:26" pos:end="65:37"><expr pos:start="65:26" pos:end="65:37"><name pos:start="65:26" pos:end="65:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:40" pos:end="65:64"><expr pos:start="65:40" pos:end="65:64"><literal type="string" pos:start="65:40" pos:end="65:64">"SOD marker not found \n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:18">return <expr pos:start="67:16" pos:end="67:17"><operator pos:start="67:16" pos:end="67:16">-</operator><literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="77:62">/* End address of bit stream =

     *     start address + (Psot - size of SOT HEADER(n)

     *     - size of SOT MARKER(2)  - size of SOD marker(2) */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:53"><expr pos:start="79:5" pos:end="79:52"><name pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:6">tp</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:20">tp_end_bstrm</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:29"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:29">buf</name></name> <operator pos:start="79:31" pos:end="79:31">+</operator> <operator pos:start="79:33" pos:end="79:33">(</operator><name pos:start="79:34" pos:end="79:43"><name pos:start="79:34" pos:end="79:35">tp</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:43">tp_len</name></name> <operator pos:start="79:45" pos:end="79:45">-</operator> <name pos:start="79:47" pos:end="79:47">n</name> <operator pos:start="79:49" pos:end="79:49">-</operator> <literal type="number" pos:start="79:51" pos:end="79:51">4</literal><operator pos:start="79:52" pos:end="79:52">)</operator></expr>;</expr_stmt>



    <comment type="line" pos:start="83:5" pos:end="83:52">// set buffer pointer to end of tile part header</comment>

    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:10"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:10">buf</name></name> <operator pos:start="85:12" pos:end="85:12">=</operator> <name pos:start="85:14" pos:end="85:29"><name pos:start="85:14" pos:end="85:15">tp</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:29">tp_end_bstrm</name></name></expr>;</expr_stmt>



    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
