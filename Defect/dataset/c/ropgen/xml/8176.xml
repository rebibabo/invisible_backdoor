<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8176.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:37">silk_stabilize_lsf</name><parameter_list pos:start="1:38" pos:end="1:96">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:45">int16_t</name></type> <name pos:start="1:47" pos:end="1:54"><name pos:start="1:47" pos:end="1:50">nlsf</name><index pos:start="1:51" pos:end="1:54">[<expr pos:start="1:52" pos:end="1:53"><literal type="number" pos:start="1:52" pos:end="1:53">16</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:65"><decl pos:start="1:57" pos:end="1:65"><type pos:start="1:57" pos:end="1:65"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:65">order</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:95"><decl pos:start="1:68" pos:end="1:95"><type pos:start="1:68" pos:end="1:91"><specifier pos:start="1:68" pos:end="1:72">const</specifier> <name pos:start="1:74" pos:end="1:81">uint16_t</name></type> <name pos:start="1:83" pos:end="1:95"><name pos:start="1:83" pos:end="1:91">min_delta</name><index pos:start="1:92" pos:end="1:95">[<expr pos:start="1:93" pos:end="1:94"><literal type="number" pos:start="1:93" pos:end="1:94">17</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:11">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">pass</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">i</name></decl>;</decl_stmt>

    <for pos:start="7:5" pos:end="101:5">for <control pos:start="7:9" pos:end="7:37">(<init pos:start="7:10" pos:end="7:18"><expr pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:13">pass</name> <operator pos:start="7:15" pos:end="7:15">=</operator> <literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr>;</init> <condition pos:start="7:20" pos:end="7:29"><expr pos:start="7:20" pos:end="7:28"><name pos:start="7:20" pos:end="7:23">pass</name> <operator pos:start="7:25" pos:end="7:25">&lt;</operator> <literal type="number" pos:start="7:27" pos:end="7:28">20</literal></expr>;</condition> <incr pos:start="7:31" pos:end="7:36"><expr pos:start="7:31" pos:end="7:36"><name pos:start="7:31" pos:end="7:34">pass</name><operator pos:start="7:35" pos:end="7:36">++</operator></expr></incr>)</control> <block pos:start="7:39" pos:end="101:5">{<block_content pos:start="9:9" pos:end="99:9">

        <decl_stmt pos:start="9:9" pos:end="9:28"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">k</name></decl>, <decl pos:start="9:16" pos:end="9:27"><type ref="prev" pos:start="9:9" pos:end="9:11"/><name pos:start="9:16" pos:end="9:23">min_diff</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="11:9" pos:end="35:9">for <control pos:start="11:13" pos:end="11:37">(<init pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:18"><name pos:start="11:14" pos:end="11:14">i</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>;</init> <condition pos:start="11:21" pos:end="11:32"><expr pos:start="11:21" pos:end="11:31"><name pos:start="11:21" pos:end="11:21">i</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <name pos:start="11:25" pos:end="11:29">order</name><operator pos:start="11:30" pos:end="11:30">+</operator><literal type="number" pos:start="11:31" pos:end="11:31">1</literal></expr>;</condition> <incr pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:34">i</name><operator pos:start="11:35" pos:end="11:36">++</operator></expr></incr>)</control> <block pos:start="11:39" pos:end="35:9">{<block_content pos:start="13:13" pos:end="33:13">

            <decl_stmt pos:start="13:13" pos:end="13:50"><decl pos:start="13:13" pos:end="13:49"><type pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">int</name></type> <name pos:start="13:17" pos:end="13:19">low</name>  <init pos:start="13:22" pos:end="13:49">= <expr pos:start="13:24" pos:end="13:49"><ternary pos:start="13:24" pos:end="13:49"><condition pos:start="13:24" pos:end="13:35"><expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:24">i</name> <operator pos:start="13:26" pos:end="13:27">!=</operator> <literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr>     ?</condition><then pos:start="13:37" pos:end="13:45"> <expr pos:start="13:37" pos:end="13:45"><name pos:start="13:37" pos:end="13:45"><name pos:start="13:37" pos:end="13:40">nlsf</name><index pos:start="13:41" pos:end="13:45">[<expr pos:start="13:42" pos:end="13:44"><name pos:start="13:42" pos:end="13:42">i</name><operator pos:start="13:43" pos:end="13:43">-</operator><literal type="number" pos:start="13:44" pos:end="13:44">1</literal></expr>]</index></name></expr> </then><else pos:start="13:47" pos:end="13:49">: <expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="15:13" pos:end="15:54"><decl pos:start="15:13" pos:end="15:53"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:20">high</name> <init pos:start="15:22" pos:end="15:53">= <expr pos:start="15:24" pos:end="15:53"><ternary pos:start="15:24" pos:end="15:53"><condition pos:start="15:24" pos:end="15:35"><expr pos:start="15:24" pos:end="15:33"><name pos:start="15:24" pos:end="15:24">i</name> <operator pos:start="15:26" pos:end="15:27">!=</operator> <name pos:start="15:29" pos:end="15:33">order</name></expr> ?</condition><then pos:start="15:37" pos:end="15:43"> <expr pos:start="15:37" pos:end="15:43"><name pos:start="15:37" pos:end="15:43"><name pos:start="15:37" pos:end="15:40">nlsf</name><index pos:start="15:41" pos:end="15:43">[<expr pos:start="15:42" pos:end="15:42"><name pos:start="15:42" pos:end="15:42">i</name></expr>]</index></name></expr>   </then><else pos:start="15:47" pos:end="15:53">: <expr pos:start="15:49" pos:end="15:53"><literal type="number" pos:start="15:49" pos:end="15:53">32768</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="17:13" pos:end="17:53"><decl pos:start="17:13" pos:end="17:52"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:20">diff</name> <init pos:start="17:22" pos:end="17:52">= <expr pos:start="17:24" pos:end="17:52"><operator pos:start="17:24" pos:end="17:24">(</operator><name pos:start="17:25" pos:end="17:28">high</name> <operator pos:start="17:30" pos:end="17:30">-</operator> <name pos:start="17:32" pos:end="17:34">low</name><operator pos:start="17:35" pos:end="17:35">)</operator> <operator pos:start="17:37" pos:end="17:37">-</operator> <operator pos:start="17:39" pos:end="17:39">(</operator><name pos:start="17:40" pos:end="17:51"><name pos:start="17:40" pos:end="17:48">min_delta</name><index pos:start="17:49" pos:end="17:51">[<expr pos:start="17:50" pos:end="17:50"><name pos:start="17:50" pos:end="17:50">i</name></expr>]</index></name><operator pos:start="17:52" pos:end="17:52">)</operator></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="21:13" pos:end="33:13"><if pos:start="21:13" pos:end="33:13">if <condition pos:start="21:16" pos:end="21:32">(<expr pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:20">diff</name> <operator pos:start="21:22" pos:end="21:22">&lt;</operator> <name pos:start="21:24" pos:end="21:31">min_diff</name></expr>)</condition> <block pos:start="21:34" pos:end="33:13">{<block_content pos:start="23:17" pos:end="31:26">

                <expr_stmt pos:start="23:17" pos:end="23:32"><expr pos:start="23:17" pos:end="23:31"><name pos:start="23:17" pos:end="23:24">min_diff</name> <operator pos:start="23:26" pos:end="23:26">=</operator> <name pos:start="23:28" pos:end="23:31">diff</name></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:17">k</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:21">i</name></expr>;</expr_stmt>



                <if_stmt pos:start="29:17" pos:end="31:26"><if pos:start="29:17" pos:end="31:26">if <condition pos:start="29:20" pos:end="29:31">(<expr pos:start="29:21" pos:end="29:30"><name pos:start="29:21" pos:end="29:24">pass</name> <operator pos:start="29:26" pos:end="29:27">==</operator> <literal type="number" pos:start="29:29" pos:end="29:30">20</literal></expr>)</condition><block type="pseudo" pos:start="31:21" pos:end="31:26"><block_content pos:start="31:21" pos:end="31:26">

                    <break pos:start="31:21" pos:end="31:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="37:9" pos:end="39:19"><if pos:start="37:9" pos:end="39:19">if <condition pos:start="37:12" pos:end="37:26">(<expr pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:20">min_diff</name> <operator pos:start="37:22" pos:end="37:23">==</operator> <literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:19"><block_content pos:start="39:13" pos:end="39:19"> <comment type="block" pos:start="37:28" pos:end="37:54">/* no issues; stabilized */</comment>

            <return pos:start="39:13" pos:end="39:19">return;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:36">/* wiggle one or two LSFs */</comment>

        <if_stmt pos:start="45:9" pos:end="99:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:19">(<expr pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">k</name> <operator pos:start="45:15" pos:end="45:16">==</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>)</condition> <block pos:start="45:21" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:35">

            <comment type="block" pos:start="47:13" pos:end="47:45">/* repel away from lower bound */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:16">nlsf</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>]</index></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:31">min_delta</name><index pos:start="49:32" pos:end="49:34">[<expr pos:start="49:33" pos:end="49:33"><literal type="number" pos:start="49:33" pos:end="49:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="51:11" pos:end="57:9">else if <condition pos:start="51:19" pos:end="51:30">(<expr pos:start="51:20" pos:end="51:29"><name pos:start="51:20" pos:end="51:20">k</name> <operator pos:start="51:22" pos:end="51:23">==</operator> <name pos:start="51:25" pos:end="51:29">order</name></expr>)</condition> <block pos:start="51:32" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:53">

            <comment type="block" pos:start="53:13" pos:end="53:46">/* repel away from higher bound */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:53"><expr pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:16">nlsf</name><index pos:start="55:17" pos:end="55:25">[<expr pos:start="55:18" pos:end="55:24"><name pos:start="55:18" pos:end="55:22">order</name><operator pos:start="55:23" pos:end="55:23">-</operator><literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr>]</index></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <literal type="number" pos:start="55:29" pos:end="55:35">32768</literal> <operator pos:start="55:35" pos:end="55:35">-</operator> <name pos:start="55:37" pos:end="55:52"><name pos:start="55:37" pos:end="55:45">min_delta</name><index pos:start="55:46" pos:end="55:52">[<expr pos:start="55:47" pos:end="55:51"><name pos:start="55:47" pos:end="55:51">order</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="99:9">else <block pos:start="57:16" pos:end="99:9">{<block_content pos:start="61:13" pos:end="97:53">

            <comment type="block" pos:start="59:13" pos:end="59:50">/* repel away from current position */</comment>

            <decl_stmt pos:start="61:13" pos:end="61:63"><decl pos:start="61:13" pos:end="61:30"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:26">min_center</name> <init pos:start="61:28" pos:end="61:30">= <expr pos:start="61:30" pos:end="61:30"><literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr></init></decl>, <decl pos:start="61:33" pos:end="61:50"><type ref="prev" pos:start="61:13" pos:end="61:15"/><name pos:start="61:33" pos:end="61:42">max_center</name> <init pos:start="61:44" pos:end="61:50">= <expr pos:start="61:46" pos:end="61:50"><literal type="number" pos:start="61:46" pos:end="61:50">32768</literal></expr></init></decl>, <decl pos:start="61:53" pos:end="61:62"><type ref="prev" pos:start="61:13" pos:end="61:15"/><name pos:start="61:53" pos:end="61:62">center_val</name></decl>;</decl_stmt>



            <comment type="block" pos:start="65:13" pos:end="65:30">/* lower extent */</comment>

            <for pos:start="67:13" pos:end="69:43">for <control pos:start="67:17" pos:end="67:35">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">i</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:30"><expr pos:start="67:25" pos:end="67:29"><name pos:start="67:25" pos:end="67:25">i</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <name pos:start="67:29" pos:end="67:29">k</name></expr>;</condition> <incr pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:32">i</name><operator pos:start="67:33" pos:end="67:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:17" pos:end="69:43"><block_content pos:start="69:17" pos:end="69:43">

                <expr_stmt pos:start="69:17" pos:end="69:43"><expr pos:start="69:17" pos:end="69:42"><name pos:start="69:17" pos:end="69:26">min_center</name> <operator pos:start="69:28" pos:end="69:29">+=</operator> <name pos:start="69:31" pos:end="69:42"><name pos:start="69:31" pos:end="69:39">min_delta</name><index pos:start="69:40" pos:end="69:42">[<expr pos:start="69:41" pos:end="69:41"><name pos:start="69:41" pos:end="69:41">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="71:13" pos:end="71:44"><expr pos:start="71:13" pos:end="71:43"><name pos:start="71:13" pos:end="71:22">min_center</name> <operator pos:start="71:24" pos:end="71:25">+=</operator> <name pos:start="71:27" pos:end="71:38"><name pos:start="71:27" pos:end="71:35">min_delta</name><index pos:start="71:36" pos:end="71:38">[<expr pos:start="71:37" pos:end="71:37"><name pos:start="71:37" pos:end="71:37">k</name></expr>]</index></name> <operator pos:start="71:40" pos:end="71:41">&gt;&gt;</operator> <literal type="number" pos:start="71:43" pos:end="71:43">1</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="75:13" pos:end="75:30">/* upper extent */</comment>

            <for pos:start="77:13" pos:end="79:43">for <control pos:start="77:17" pos:end="77:39">(<init pos:start="77:18" pos:end="77:27"><expr pos:start="77:18" pos:end="77:26"><name pos:start="77:18" pos:end="77:18">i</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:26">order</name></expr>;</init> <condition pos:start="77:29" pos:end="77:34"><expr pos:start="77:29" pos:end="77:33"><name pos:start="77:29" pos:end="77:29">i</name> <operator pos:start="77:31" pos:end="77:31">&gt;</operator> <name pos:start="77:33" pos:end="77:33">k</name></expr>;</condition> <incr pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:36">i</name><operator pos:start="77:37" pos:end="77:38">--</operator></expr></incr>)</control><block type="pseudo" pos:start="79:17" pos:end="79:43"><block_content pos:start="79:17" pos:end="79:43">

                <expr_stmt pos:start="79:17" pos:end="79:43"><expr pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:26">max_center</name> <operator pos:start="79:28" pos:end="79:29">-=</operator> <name pos:start="79:31" pos:end="79:42"><name pos:start="79:31" pos:end="79:39">min_delta</name><index pos:start="79:40" pos:end="79:42">[<expr pos:start="79:41" pos:end="79:41"><name pos:start="79:41" pos:end="79:41">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="81:13" pos:end="81:44"><expr pos:start="81:13" pos:end="81:43"><name pos:start="81:13" pos:end="81:22">max_center</name> <operator pos:start="81:24" pos:end="81:25">-=</operator> <name pos:start="81:27" pos:end="81:38"><name pos:start="81:27" pos:end="81:35">min_delta</name><index pos:start="81:36" pos:end="81:38">[<expr pos:start="81:37" pos:end="81:37"><name pos:start="81:37" pos:end="81:37">k</name></expr>]</index></name> <operator pos:start="81:40" pos:end="81:41">&gt;&gt;</operator> <literal type="number" pos:start="81:43" pos:end="81:43">1</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="85:13" pos:end="85:28">/* move apart */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:47"><expr pos:start="87:13" pos:end="87:46"><name pos:start="87:13" pos:end="87:22">center_val</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:36"><name pos:start="87:26" pos:end="87:29">nlsf</name><index pos:start="87:30" pos:end="87:36">[<expr pos:start="87:31" pos:end="87:35"><name pos:start="87:31" pos:end="87:31">k</name> <operator pos:start="87:33" pos:end="87:33">-</operator> <literal type="number" pos:start="87:35" pos:end="87:35">1</literal></expr>]</index></name> <operator pos:start="87:38" pos:end="87:38">+</operator> <name pos:start="87:40" pos:end="87:46"><name pos:start="87:40" pos:end="87:43">nlsf</name><index pos:start="87:44" pos:end="87:46">[<expr pos:start="87:45" pos:end="87:45"><name pos:start="87:45" pos:end="87:45">k</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:62"><expr pos:start="89:13" pos:end="89:61"><name pos:start="89:13" pos:end="89:22">center_val</name> <operator pos:start="89:24" pos:end="89:24">=</operator> <operator pos:start="89:26" pos:end="89:26">(</operator><name pos:start="89:27" pos:end="89:36">center_val</name> <operator pos:start="89:38" pos:end="89:39">&gt;&gt;</operator> <literal type="number" pos:start="89:41" pos:end="89:41">1</literal><operator pos:start="89:42" pos:end="89:42">)</operator> <operator pos:start="89:44" pos:end="89:44">+</operator> <operator pos:start="89:46" pos:end="89:46">(</operator><name pos:start="89:47" pos:end="89:56">center_val</name> <operator pos:start="89:58" pos:end="89:58">&amp;</operator> <literal type="number" pos:start="89:60" pos:end="89:60">1</literal><operator pos:start="89:61" pos:end="89:61">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="89:64" pos:end="89:85">// rounded divide by 2</comment>

            <expr_stmt pos:start="91:13" pos:end="91:74"><expr pos:start="91:13" pos:end="91:73"><name pos:start="91:13" pos:end="91:22">center_val</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <call pos:start="91:26" pos:end="91:73"><name pos:start="91:26" pos:end="91:30">FFMIN</name><argument_list pos:start="91:31" pos:end="91:73">(<argument pos:start="91:32" pos:end="91:41"><expr pos:start="91:32" pos:end="91:41"><name pos:start="91:32" pos:end="91:41">max_center</name></expr></argument>, <argument pos:start="91:44" pos:end="91:72"><expr pos:start="91:44" pos:end="91:72"><call pos:start="91:44" pos:end="91:72"><name pos:start="91:44" pos:end="91:48">FFMAX</name><argument_list pos:start="91:49" pos:end="91:72">(<argument pos:start="91:50" pos:end="91:59"><expr pos:start="91:50" pos:end="91:59"><name pos:start="91:50" pos:end="91:59">min_center</name></expr></argument>, <argument pos:start="91:62" pos:end="91:71"><expr pos:start="91:62" pos:end="91:71"><name pos:start="91:62" pos:end="91:71">center_val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="95:13" pos:end="95:59"><expr pos:start="95:13" pos:end="95:58"><name pos:start="95:13" pos:end="95:23"><name pos:start="95:13" pos:end="95:16">nlsf</name><index pos:start="95:17" pos:end="95:23">[<expr pos:start="95:18" pos:end="95:22"><name pos:start="95:18" pos:end="95:18">k</name> <operator pos:start="95:20" pos:end="95:20">-</operator> <literal type="number" pos:start="95:22" pos:end="95:22">1</literal></expr>]</index></name> <operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:36">center_val</name> <operator pos:start="95:38" pos:end="95:38">-</operator> <operator pos:start="95:40" pos:end="95:40">(</operator><name pos:start="95:41" pos:end="95:52"><name pos:start="95:41" pos:end="95:49">min_delta</name><index pos:start="95:50" pos:end="95:52">[<expr pos:start="95:51" pos:end="95:51"><name pos:start="95:51" pos:end="95:51">k</name></expr>]</index></name> <operator pos:start="95:54" pos:end="95:55">&gt;&gt;</operator> <literal type="number" pos:start="95:57" pos:end="95:57">1</literal><operator pos:start="95:58" pos:end="95:58">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:53"><expr pos:start="97:13" pos:end="97:52"><name pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:16">nlsf</name><index pos:start="97:17" pos:end="97:19">[<expr pos:start="97:18" pos:end="97:18"><name pos:start="97:18" pos:end="97:18">k</name></expr>]</index></name>     <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:37"><name pos:start="97:27" pos:end="97:30">nlsf</name><index pos:start="97:31" pos:end="97:37">[<expr pos:start="97:32" pos:end="97:36"><name pos:start="97:32" pos:end="97:32">k</name> <operator pos:start="97:34" pos:end="97:34">-</operator> <literal type="number" pos:start="97:36" pos:end="97:36">1</literal></expr>]</index></name> <operator pos:start="97:39" pos:end="97:39">+</operator> <name pos:start="97:41" pos:end="97:52"><name pos:start="97:41" pos:end="97:49">min_delta</name><index pos:start="97:50" pos:end="97:52">[<expr pos:start="97:51" pos:end="97:51"><name pos:start="97:51" pos:end="97:51">k</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="105:5" pos:end="105:83">/* resort to the fall-back method, the standard method for LSF stabilization */</comment>



    <comment type="block" pos:start="109:5" pos:end="109:71">/* sort; as the LSFs should be nearly sorted, use insertion sort */</comment>

    <for pos:start="111:5" pos:end="121:5">for <control pos:start="111:9" pos:end="111:31">(<init pos:start="111:10" pos:end="111:15"><expr pos:start="111:10" pos:end="111:14"><name pos:start="111:10" pos:end="111:10">i</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <literal type="number" pos:start="111:14" pos:end="111:14">1</literal></expr>;</init> <condition pos:start="111:17" pos:end="111:26"><expr pos:start="111:17" pos:end="111:25"><name pos:start="111:17" pos:end="111:17">i</name> <operator pos:start="111:19" pos:end="111:19">&lt;</operator> <name pos:start="111:21" pos:end="111:25">order</name></expr>;</condition> <incr pos:start="111:28" pos:end="111:30"><expr pos:start="111:28" pos:end="111:30"><name pos:start="111:28" pos:end="111:28">i</name><operator pos:start="111:29" pos:end="111:30">++</operator></expr></incr>)</control> <block pos:start="111:33" pos:end="121:5">{<block_content pos:start="113:9" pos:end="119:28">

        <decl_stmt pos:start="113:9" pos:end="113:31"><decl pos:start="113:9" pos:end="113:13"><type pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:11">int</name></type> <name pos:start="113:13" pos:end="113:13">j</name></decl>, <decl pos:start="113:16" pos:end="113:30"><type ref="prev" pos:start="113:9" pos:end="113:11"/><name pos:start="113:16" pos:end="113:20">value</name> <init pos:start="113:22" pos:end="113:30">= <expr pos:start="113:24" pos:end="113:30"><name pos:start="113:24" pos:end="113:30"><name pos:start="113:24" pos:end="113:27">nlsf</name><index pos:start="113:28" pos:end="113:30">[<expr pos:start="113:29" pos:end="113:29"><name pos:start="113:29" pos:end="113:29">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="115:9" pos:end="117:34">for <control pos:start="115:13" pos:end="115:55">(<init pos:start="115:14" pos:end="115:23"><expr pos:start="115:14" pos:end="115:22"><name pos:start="115:14" pos:end="115:14">j</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:18">i</name> <operator pos:start="115:20" pos:end="115:20">-</operator> <literal type="number" pos:start="115:22" pos:end="115:22">1</literal></expr>;</init> <condition pos:start="115:25" pos:end="115:50"><expr pos:start="115:25" pos:end="115:49"><name pos:start="115:25" pos:end="115:25">j</name> <operator pos:start="115:27" pos:end="115:28">&gt;=</operator> <literal type="number" pos:start="115:30" pos:end="115:30">0</literal> <operator pos:start="115:32" pos:end="115:33">&amp;&amp;</operator> <name pos:start="115:35" pos:end="115:41"><name pos:start="115:35" pos:end="115:38">nlsf</name><index pos:start="115:39" pos:end="115:41">[<expr pos:start="115:40" pos:end="115:40"><name pos:start="115:40" pos:end="115:40">j</name></expr>]</index></name> <operator pos:start="115:43" pos:end="115:43">&gt;</operator> <name pos:start="115:45" pos:end="115:49">value</name></expr>;</condition> <incr pos:start="115:52" pos:end="115:54"><expr pos:start="115:52" pos:end="115:54"><name pos:start="115:52" pos:end="115:52">j</name><operator pos:start="115:53" pos:end="115:54">--</operator></expr></incr>)</control><block type="pseudo" pos:start="117:13" pos:end="117:34"><block_content pos:start="117:13" pos:end="117:34">

            <expr_stmt pos:start="117:13" pos:end="117:34"><expr pos:start="117:13" pos:end="117:33"><name pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:16">nlsf</name><index pos:start="117:17" pos:end="117:23">[<expr pos:start="117:18" pos:end="117:22"><name pos:start="117:18" pos:end="117:18">j</name> <operator pos:start="117:20" pos:end="117:20">+</operator> <literal type="number" pos:start="117:22" pos:end="117:22">1</literal></expr>]</index></name> <operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:33"><name pos:start="117:27" pos:end="117:30">nlsf</name><index pos:start="117:31" pos:end="117:33">[<expr pos:start="117:32" pos:end="117:32"><name pos:start="117:32" pos:end="117:32">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="119:9" pos:end="119:28"><expr pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:12">nlsf</name><index pos:start="119:13" pos:end="119:19">[<expr pos:start="119:14" pos:end="119:18"><name pos:start="119:14" pos:end="119:14">j</name> <operator pos:start="119:16" pos:end="119:16">+</operator> <literal type="number" pos:start="119:18" pos:end="119:18">1</literal></expr>]</index></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:27">value</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="125:5" pos:end="125:44">/* push forwards to increase distance */</comment>

    <if_stmt pos:start="127:5" pos:end="129:31"><if pos:start="127:5" pos:end="129:31">if <condition pos:start="127:8" pos:end="127:31">(<expr pos:start="127:9" pos:end="127:30"><name pos:start="127:9" pos:end="127:15"><name pos:start="127:9" pos:end="127:12">nlsf</name><index pos:start="127:13" pos:end="127:15">[<expr pos:start="127:14" pos:end="127:14"><literal type="number" pos:start="127:14" pos:end="127:14">0</literal></expr>]</index></name> <operator pos:start="127:17" pos:end="127:17">&lt;</operator> <name pos:start="127:19" pos:end="127:30"><name pos:start="127:19" pos:end="127:27">min_delta</name><index pos:start="127:28" pos:end="127:30">[<expr pos:start="127:29" pos:end="127:29"><literal type="number" pos:start="127:29" pos:end="127:29">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:31"><block_content pos:start="129:9" pos:end="129:31">

        <expr_stmt pos:start="129:9" pos:end="129:31"><expr pos:start="129:9" pos:end="129:30"><name pos:start="129:9" pos:end="129:15"><name pos:start="129:9" pos:end="129:12">nlsf</name><index pos:start="129:13" pos:end="129:15">[<expr pos:start="129:14" pos:end="129:14"><literal type="number" pos:start="129:14" pos:end="129:14">0</literal></expr>]</index></name> <operator pos:start="129:17" pos:end="129:17">=</operator> <name pos:start="129:19" pos:end="129:30"><name pos:start="129:19" pos:end="129:27">min_delta</name><index pos:start="129:28" pos:end="129:30">[<expr pos:start="129:29" pos:end="129:29"><literal type="number" pos:start="129:29" pos:end="129:29">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="131:5" pos:end="135:49">for <control pos:start="131:9" pos:end="131:31">(<init pos:start="131:10" pos:end="131:15"><expr pos:start="131:10" pos:end="131:14"><name pos:start="131:10" pos:end="131:10">i</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <literal type="number" pos:start="131:14" pos:end="131:14">1</literal></expr>;</init> <condition pos:start="131:17" pos:end="131:26"><expr pos:start="131:17" pos:end="131:25"><name pos:start="131:17" pos:end="131:17">i</name> <operator pos:start="131:19" pos:end="131:19">&lt;</operator> <name pos:start="131:21" pos:end="131:25">order</name></expr>;</condition> <incr pos:start="131:28" pos:end="131:30"><expr pos:start="131:28" pos:end="131:30"><name pos:start="131:28" pos:end="131:28">i</name><operator pos:start="131:29" pos:end="131:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:9" pos:end="135:49"><block_content pos:start="133:9" pos:end="135:49">

        <if_stmt pos:start="133:9" pos:end="135:49"><if pos:start="133:9" pos:end="135:49">if <condition pos:start="133:12" pos:end="133:49">(<expr pos:start="133:13" pos:end="133:48"><name pos:start="133:13" pos:end="133:19"><name pos:start="133:13" pos:end="133:16">nlsf</name><index pos:start="133:17" pos:end="133:19">[<expr pos:start="133:18" pos:end="133:18"><name pos:start="133:18" pos:end="133:18">i</name></expr>]</index></name> <operator pos:start="133:21" pos:end="133:21">&lt;</operator> <name pos:start="133:23" pos:end="133:33"><name pos:start="133:23" pos:end="133:26">nlsf</name><index pos:start="133:27" pos:end="133:33">[<expr pos:start="133:28" pos:end="133:32"><name pos:start="133:28" pos:end="133:28">i</name> <operator pos:start="133:30" pos:end="133:30">-</operator> <literal type="number" pos:start="133:32" pos:end="133:32">1</literal></expr>]</index></name> <operator pos:start="133:35" pos:end="133:35">+</operator> <name pos:start="133:37" pos:end="133:48"><name pos:start="133:37" pos:end="133:45">min_delta</name><index pos:start="133:46" pos:end="133:48">[<expr pos:start="133:47" pos:end="133:47"><name pos:start="133:47" pos:end="133:47">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:49"><block_content pos:start="135:13" pos:end="135:49">

            <expr_stmt pos:start="135:13" pos:end="135:49"><expr pos:start="135:13" pos:end="135:48"><name pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:16">nlsf</name><index pos:start="135:17" pos:end="135:19">[<expr pos:start="135:18" pos:end="135:18"><name pos:start="135:18" pos:end="135:18">i</name></expr>]</index></name> <operator pos:start="135:21" pos:end="135:21">=</operator> <name pos:start="135:23" pos:end="135:33"><name pos:start="135:23" pos:end="135:26">nlsf</name><index pos:start="135:27" pos:end="135:33">[<expr pos:start="135:28" pos:end="135:32"><name pos:start="135:28" pos:end="135:28">i</name> <operator pos:start="135:30" pos:end="135:30">-</operator> <literal type="number" pos:start="135:32" pos:end="135:32">1</literal></expr>]</index></name> <operator pos:start="135:35" pos:end="135:35">+</operator> <name pos:start="135:37" pos:end="135:48"><name pos:start="135:37" pos:end="135:45">min_delta</name><index pos:start="135:46" pos:end="135:48">[<expr pos:start="135:47" pos:end="135:47"><name pos:start="135:47" pos:end="135:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="139:5" pos:end="139:45">/* push backwards to increase distance */</comment>

    <if_stmt pos:start="141:5" pos:end="143:49"><if pos:start="141:5" pos:end="143:49">if <condition pos:start="141:8" pos:end="141:49">(<expr pos:start="141:9" pos:end="141:48"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:12">nlsf</name><index pos:start="141:13" pos:end="141:21">[<expr pos:start="141:14" pos:end="141:20"><name pos:start="141:14" pos:end="141:18">order</name><operator pos:start="141:19" pos:end="141:19">-</operator><literal type="number" pos:start="141:20" pos:end="141:20">1</literal></expr>]</index></name> <operator pos:start="141:23" pos:end="141:23">&gt;</operator> <literal type="number" pos:start="141:25" pos:end="141:31">32768</literal> <operator pos:start="141:31" pos:end="141:31">-</operator> <name pos:start="141:33" pos:end="141:48"><name pos:start="141:33" pos:end="141:41">min_delta</name><index pos:start="141:42" pos:end="141:48">[<expr pos:start="141:43" pos:end="141:47"><name pos:start="141:43" pos:end="141:47">order</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:49"><block_content pos:start="143:9" pos:end="143:49">

        <expr_stmt pos:start="143:9" pos:end="143:49"><expr pos:start="143:9" pos:end="143:48"><name pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:12">nlsf</name><index pos:start="143:13" pos:end="143:21">[<expr pos:start="143:14" pos:end="143:20"><name pos:start="143:14" pos:end="143:18">order</name><operator pos:start="143:19" pos:end="143:19">-</operator><literal type="number" pos:start="143:20" pos:end="143:20">1</literal></expr>]</index></name> <operator pos:start="143:23" pos:end="143:23">=</operator> <literal type="number" pos:start="143:25" pos:end="143:31">32768</literal> <operator pos:start="143:31" pos:end="143:31">-</operator> <name pos:start="143:33" pos:end="143:48"><name pos:start="143:33" pos:end="143:41">min_delta</name><index pos:start="143:42" pos:end="143:48">[<expr pos:start="143:43" pos:end="143:47"><name pos:start="143:43" pos:end="143:47">order</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="145:5" pos:end="149:51">for <control pos:start="145:9" pos:end="145:34">(<init pos:start="145:10" pos:end="145:21"><expr pos:start="145:10" pos:end="145:20"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <name pos:start="145:14" pos:end="145:18">order</name><operator pos:start="145:19" pos:end="145:19">-</operator><literal type="number" pos:start="145:20" pos:end="145:20">2</literal></expr>;</init> <condition pos:start="145:23" pos:end="145:29"><expr pos:start="145:23" pos:end="145:28"><name pos:start="145:23" pos:end="145:23">i</name> <operator pos:start="145:25" pos:end="145:26">&gt;=</operator> <literal type="number" pos:start="145:28" pos:end="145:28">0</literal></expr>;</condition> <incr pos:start="145:31" pos:end="145:33"><expr pos:start="145:31" pos:end="145:33"><name pos:start="145:31" pos:end="145:31">i</name><operator pos:start="145:32" pos:end="145:33">--</operator></expr></incr>)</control><block type="pseudo" pos:start="147:9" pos:end="149:51"><block_content pos:start="147:9" pos:end="149:51">

        <if_stmt pos:start="147:9" pos:end="149:51"><if pos:start="147:9" pos:end="149:51">if <condition pos:start="147:12" pos:end="147:51">(<expr pos:start="147:13" pos:end="147:50"><name pos:start="147:13" pos:end="147:19"><name pos:start="147:13" pos:end="147:16">nlsf</name><index pos:start="147:17" pos:end="147:19">[<expr pos:start="147:18" pos:end="147:18"><name pos:start="147:18" pos:end="147:18">i</name></expr>]</index></name> <operator pos:start="147:21" pos:end="147:21">&gt;</operator> <name pos:start="147:23" pos:end="147:33"><name pos:start="147:23" pos:end="147:26">nlsf</name><index pos:start="147:27" pos:end="147:33">[<expr pos:start="147:28" pos:end="147:32"><name pos:start="147:28" pos:end="147:28">i</name> <operator pos:start="147:30" pos:end="147:30">+</operator> <literal type="number" pos:start="147:32" pos:end="147:32">1</literal></expr>]</index></name> <operator pos:start="147:35" pos:end="147:35">-</operator> <name pos:start="147:37" pos:end="147:50"><name pos:start="147:37" pos:end="147:45">min_delta</name><index pos:start="147:46" pos:end="147:50">[<expr pos:start="147:47" pos:end="147:49"><name pos:start="147:47" pos:end="147:47">i</name><operator pos:start="147:48" pos:end="147:48">+</operator><literal type="number" pos:start="147:49" pos:end="147:49">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:51"><block_content pos:start="149:13" pos:end="149:51">

            <expr_stmt pos:start="149:13" pos:end="149:51"><expr pos:start="149:13" pos:end="149:50"><name pos:start="149:13" pos:end="149:19"><name pos:start="149:13" pos:end="149:16">nlsf</name><index pos:start="149:17" pos:end="149:19">[<expr pos:start="149:18" pos:end="149:18"><name pos:start="149:18" pos:end="149:18">i</name></expr>]</index></name> <operator pos:start="149:21" pos:end="149:21">=</operator> <name pos:start="149:23" pos:end="149:33"><name pos:start="149:23" pos:end="149:26">nlsf</name><index pos:start="149:27" pos:end="149:33">[<expr pos:start="149:28" pos:end="149:32"><name pos:start="149:28" pos:end="149:28">i</name> <operator pos:start="149:30" pos:end="149:30">+</operator> <literal type="number" pos:start="149:32" pos:end="149:32">1</literal></expr>]</index></name> <operator pos:start="149:35" pos:end="149:35">-</operator> <name pos:start="149:37" pos:end="149:50"><name pos:start="149:37" pos:end="149:45">min_delta</name><index pos:start="149:46" pos:end="149:50">[<expr pos:start="149:47" pos:end="149:49"><name pos:start="149:47" pos:end="149:47">i</name><operator pos:start="149:48" pos:end="149:48">+</operator><literal type="number" pos:start="149:49" pos:end="149:49">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <return pos:start="153:5" pos:end="153:11">return;</return>

</block_content>}</block></function>
</unit>
