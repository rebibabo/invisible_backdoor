<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3679.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:37"><name pos:start="1:1" pos:end="1:16">aio_ctx_finalize</name><argument_list pos:start="1:17" pos:end="1:37">(<argument pos:start="1:18" pos:end="1:36">GSource     *source</argument>)</argument_list></macro>
<block pos:start="2:1" pos:end="9:37">{<block_content pos:start="3:5" pos:end="9:37">
    <decl_stmt pos:start="3:5" pos:end="3:44"><decl pos:start="3:5" pos:end="3:43"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">AioContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">ctx</name> <init pos:start="3:21" pos:end="3:43">= <expr pos:start="3:23" pos:end="3:43"><operator pos:start="3:23" pos:end="3:23">(</operator><name pos:start="3:24" pos:end="3:33">AioContext</name> <operator pos:start="3:35" pos:end="3:35">*</operator><operator pos:start="3:36" pos:end="3:36">)</operator> <name pos:start="3:38" pos:end="3:43">source</name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="4:5" pos:end="4:39"><expr pos:start="4:5" pos:end="4:38"><call pos:start="4:5" pos:end="4:38"><name pos:start="4:5" pos:end="4:20">thread_pool_free</name><argument_list pos:start="4:21" pos:end="4:38">(<argument pos:start="4:22" pos:end="4:37"><expr pos:start="4:22" pos:end="4:37"><name pos:start="4:22" pos:end="4:37"><name pos:start="4:22" pos:end="4:24">ctx</name><operator pos:start="4:25" pos:end="4:26">-&gt;</operator><name pos:start="4:27" pos:end="4:37">thread_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:54"><expr pos:start="5:5" pos:end="5:53"><call pos:start="5:5" pos:end="5:53"><name pos:start="5:5" pos:end="5:26">aio_set_event_notifier</name><argument_list pos:start="5:27" pos:end="5:53">(<argument pos:start="5:28" pos:end="5:30"><expr pos:start="5:28" pos:end="5:30"><name pos:start="5:28" pos:end="5:30">ctx</name></expr></argument>, <argument pos:start="5:33" pos:end="5:46"><expr pos:start="5:33" pos:end="5:46"><operator pos:start="5:33" pos:end="5:33">&amp;</operator><name pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:36">ctx</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:46">notifier</name></name></expr></argument>, <argument pos:start="5:49" pos:end="5:52"><expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:43"><expr pos:start="6:5" pos:end="6:42"><call pos:start="6:5" pos:end="6:42"><name pos:start="6:5" pos:end="6:26">event_notifier_cleanup</name><argument_list pos:start="6:27" pos:end="6:42">(<argument pos:start="6:28" pos:end="6:41"><expr pos:start="6:28" pos:end="6:41"><operator pos:start="6:28" pos:end="6:28">&amp;</operator><name pos:start="6:29" pos:end="6:41"><name pos:start="6:29" pos:end="6:31">ctx</name><operator pos:start="6:32" pos:end="6:33">-&gt;</operator><name pos:start="6:34" pos:end="6:41">notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:34"><expr pos:start="7:5" pos:end="7:33"><call pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:21">rfifolock_destroy</name><argument_list pos:start="7:22" pos:end="7:33">(<argument pos:start="7:23" pos:end="7:32"><expr pos:start="7:23" pos:end="7:32"><operator pos:start="7:23" pos:end="7:23">&amp;</operator><name pos:start="7:24" pos:end="7:32"><name pos:start="7:24" pos:end="7:26">ctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:32">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:38"><expr pos:start="8:5" pos:end="8:37"><call pos:start="8:5" pos:end="8:37"><name pos:start="8:5" pos:end="8:22">qemu_mutex_destroy</name><argument_list pos:start="8:23" pos:end="8:37">(<argument pos:start="8:24" pos:end="8:36"><expr pos:start="8:24" pos:end="8:36"><operator pos:start="8:24" pos:end="8:24">&amp;</operator><name pos:start="8:25" pos:end="8:36"><name pos:start="8:25" pos:end="8:27">ctx</name><operator pos:start="8:28" pos:end="8:29">-&gt;</operator><name pos:start="8:30" pos:end="8:36">bh_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><call pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:25">timerlistgroup_deinit</name><argument_list pos:start="9:26" pos:end="9:36">(<argument pos:start="9:27" pos:end="9:35"><expr pos:start="9:27" pos:end="9:35"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:30">ctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:35">tlg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></unit>
