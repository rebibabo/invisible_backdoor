<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15019.c" pos:tabs="8"><function pos:start="1:1" pos:end="517:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">ppce500_load_device_tree</name><parameter_list pos:start="1:36" pos:end="11:55">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:47">CPUPPCState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">env</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:61"><decl pos:start="3:37" pos:end="3:61"><type pos:start="3:37" pos:end="3:61"><name pos:start="3:37" pos:end="3:55">QEMUMachineInitArgs</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:61">args</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:57"><decl pos:start="5:37" pos:end="5:57"><type pos:start="5:37" pos:end="5:57"><name pos:start="5:37" pos:end="5:49">PPCE500Params</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:57">params</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:47"><decl pos:start="7:37" pos:end="7:47"><type pos:start="7:37" pos:end="7:47"><name pos:start="7:37" pos:end="7:42">hwaddr</name></type> <name pos:start="7:44" pos:end="7:47">addr</name></decl></parameter>,

                                    <parameter pos:start="9:37" pos:end="9:54"><decl pos:start="9:37" pos:end="9:54"><type pos:start="9:37" pos:end="9:54"><name pos:start="9:37" pos:end="9:42">hwaddr</name></type> <name pos:start="9:44" pos:end="9:54">initrd_base</name></decl></parameter>,

                                    <parameter pos:start="11:37" pos:end="11:54"><decl pos:start="11:37" pos:end="11:54"><type pos:start="11:37" pos:end="11:54"><name pos:start="11:37" pos:end="11:42">hwaddr</name></type> <name pos:start="11:44" pos:end="11:54">initrd_size</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="517:1">{<block_content pos:start="15:5" pos:end="515:15">

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:16">= <expr pos:start="15:15" pos:end="15:16"><operator pos:start="15:15" pos:end="15:15">-</operator><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:69"><decl pos:start="17:5" pos:end="17:68"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:31"><name pos:start="17:14" pos:end="17:29">mem_reg_property</name><index pos:start="17:30" pos:end="17:31">[]</index></name> <init pos:start="17:33" pos:end="17:68">= <expr pos:start="17:35" pos:end="17:68"><block pos:start="17:35" pos:end="17:68">{ <expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">0</literal></expr>, <macro pos:start="17:40" pos:end="17:66"><name pos:start="17:40" pos:end="17:50">cpu_to_be64</name><argument_list pos:start="17:51" pos:end="17:66">(<argument pos:start="17:52" pos:end="17:65">args-&gt;ram_size</argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">fdt_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:14"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">void</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:13">fdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">uint8_t</name></type> <name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:21">hypercall</name><index pos:start="23:22" pos:end="23:25">[<expr pos:start="23:23" pos:end="23:24"><literal type="number" pos:start="23:23" pos:end="23:24">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:36"><decl pos:start="25:5" pos:end="25:35"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:23">clock_freq</name> <init pos:start="25:25" pos:end="25:35">= <expr pos:start="25:27" pos:end="25:35"><literal type="number" pos:start="25:27" pos:end="25:35">400000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:33"><decl pos:start="27:5" pos:end="27:32"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:20">tb_freq</name> <init pos:start="27:22" pos:end="27:32">= <expr pos:start="27:24" pos:end="27:32"><literal type="number" pos:start="27:24" pos:end="27:32">400000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:58"><decl pos:start="31:5" pos:end="31:57"><type pos:start="31:5" pos:end="31:8"><name pos:start="31:5" pos:end="31:8">char</name></type> <name pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:22">compatible_sb</name><index pos:start="31:23" pos:end="31:24">[]</index></name> <init pos:start="31:26" pos:end="31:57">= <expr pos:start="31:28" pos:end="31:57"><literal type="string" pos:start="31:28" pos:end="31:57">"fsl,mpc8544-immr\0simple-bus"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:18"><decl pos:start="33:5" pos:end="33:17"><type pos:start="33:5" pos:end="33:8"><name pos:start="33:5" pos:end="33:8">char</name></type> <name pos:start="33:10" pos:end="33:17"><name pos:start="33:10" pos:end="33:12">soc</name><index pos:start="33:13" pos:end="33:17">[<expr pos:start="33:14" pos:end="33:16"><literal type="number" pos:start="33:14" pos:end="33:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:19"><decl pos:start="35:5" pos:end="35:18"><type pos:start="35:5" pos:end="35:8"><name pos:start="35:5" pos:end="35:8">char</name></type> <name pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:13">mpic</name><index pos:start="35:14" pos:end="35:18">[<expr pos:start="35:15" pos:end="35:17"><literal type="number" pos:start="35:15" pos:end="35:17">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:21"><decl pos:start="37:5" pos:end="37:20"><type pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:12">uint32_t</name></type> <name pos:start="37:14" pos:end="37:20">mpic_ph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:20"><decl pos:start="39:5" pos:end="39:19"><type pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:12">uint32_t</name></type> <name pos:start="39:14" pos:end="39:19">msi_ph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:20"><decl pos:start="41:5" pos:end="41:19"><type pos:start="41:5" pos:end="41:8"><name pos:start="41:5" pos:end="41:8">char</name></type> <name pos:start="41:10" pos:end="41:19"><name pos:start="41:10" pos:end="41:14">gutil</name><index pos:start="41:15" pos:end="41:19">[<expr pos:start="41:16" pos:end="41:18"><literal type="number" pos:start="41:16" pos:end="41:18">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:18"><decl pos:start="43:5" pos:end="43:17"><type pos:start="43:5" pos:end="43:8"><name pos:start="43:5" pos:end="43:8">char</name></type> <name pos:start="43:10" pos:end="43:17"><name pos:start="43:10" pos:end="43:12">pci</name><index pos:start="43:13" pos:end="43:17">[<expr pos:start="43:14" pos:end="43:16"><literal type="number" pos:start="43:14" pos:end="43:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:18"><decl pos:start="45:5" pos:end="45:17"><type pos:start="45:5" pos:end="45:8"><name pos:start="45:5" pos:end="45:8">char</name></type> <name pos:start="45:10" pos:end="45:17"><name pos:start="45:10" pos:end="45:12">msi</name><index pos:start="45:13" pos:end="45:17">[<expr pos:start="45:14" pos:end="45:16"><literal type="number" pos:start="45:14" pos:end="45:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:29"><decl pos:start="47:5" pos:end="47:28"><type pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:12">uint32_t</name> <modifier pos:start="47:14" pos:end="47:14">*</modifier></type><name pos:start="47:15" pos:end="47:21">pci_map</name> <init pos:start="47:23" pos:end="47:28">= <expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:12"><decl pos:start="49:5" pos:end="49:11"><type pos:start="49:5" pos:end="49:7"><name pos:start="49:5" pos:end="49:7">int</name></type> <name pos:start="49:9" pos:end="49:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="69:10"><decl pos:start="51:5" pos:end="69:9"><type pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:12">uint32_t</name></type> <name pos:start="51:14" pos:end="51:27"><name pos:start="51:14" pos:end="51:23">pci_ranges</name><index pos:start="51:24" pos:end="51:27">[<expr pos:start="51:25" pos:end="51:26"><literal type="number" pos:start="51:25" pos:end="51:26">14</literal></expr>]</index></name> <init pos:start="51:29" pos:end="69:9">=

        <expr pos:start="53:9" pos:end="69:9"><block pos:start="53:9" pos:end="69:9">{

            <expr pos:start="55:13" pos:end="55:21"><literal type="number" pos:start="55:13" pos:end="55:21">0x2000000</literal></expr>, <expr pos:start="55:24" pos:end="55:26"><literal type="number" pos:start="55:24" pos:end="55:26">0x0</literal></expr>, <expr pos:start="55:29" pos:end="55:38"><literal type="number" pos:start="55:29" pos:end="55:38">0xc0000000</literal></expr>,

            <expr pos:start="57:13" pos:end="57:15"><literal type="number" pos:start="57:13" pos:end="57:15">0x0</literal></expr>, <expr pos:start="57:18" pos:end="57:27"><literal type="number" pos:start="57:18" pos:end="57:27">0xc0000000</literal></expr>,

            <expr pos:start="59:13" pos:end="59:15"><literal type="number" pos:start="59:13" pos:end="59:15">0x0</literal></expr>, <expr pos:start="59:18" pos:end="59:27"><literal type="number" pos:start="59:18" pos:end="59:27">0x20000000</literal></expr>,



            <expr pos:start="63:13" pos:end="63:21"><literal type="number" pos:start="63:13" pos:end="63:21">0x1000000</literal></expr>, <expr pos:start="63:24" pos:end="63:26"><literal type="number" pos:start="63:24" pos:end="63:26">0x0</literal></expr>, <expr pos:start="63:29" pos:end="63:31"><literal type="number" pos:start="63:29" pos:end="63:31">0x0</literal></expr>,

            <expr pos:start="65:13" pos:end="65:15"><literal type="number" pos:start="65:13" pos:end="65:15">0x0</literal></expr>, <expr pos:start="65:18" pos:end="65:27"><literal type="number" pos:start="65:18" pos:end="65:27">0xe1000000</literal></expr>,

            <expr pos:start="67:13" pos:end="67:15"><literal type="number" pos:start="67:13" pos:end="67:15">0x0</literal></expr>, <expr pos:start="67:18" pos:end="67:24"><literal type="number" pos:start="67:18" pos:end="67:24">0x10000</literal></expr>,

        }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="71:5" pos:end="71:53"><decl pos:start="71:5" pos:end="71:52"><type pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:12">QemuOpts</name> <modifier pos:start="71:14" pos:end="71:14">*</modifier></type><name pos:start="71:15" pos:end="71:26">machine_opts</name> <init pos:start="71:28" pos:end="71:52">= <expr pos:start="71:30" pos:end="71:52"><call pos:start="71:30" pos:end="71:52"><name pos:start="71:30" pos:end="71:50">qemu_get_machine_opts</name><argument_list pos:start="71:51" pos:end="71:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="73:5" pos:end="73:61"><decl pos:start="73:5" pos:end="73:60"><type pos:start="73:5" pos:end="73:16"><specifier pos:start="73:5" pos:end="73:9">const</specifier> <name pos:start="73:11" pos:end="73:14">char</name> <modifier pos:start="73:16" pos:end="73:16">*</modifier></type><name pos:start="73:17" pos:end="73:24">dtb_file</name> <init pos:start="73:26" pos:end="73:60">= <expr pos:start="73:28" pos:end="73:60"><call pos:start="73:28" pos:end="73:60"><name pos:start="73:28" pos:end="73:39">qemu_opt_get</name><argument_list pos:start="73:40" pos:end="73:60">(<argument pos:start="73:41" pos:end="73:52"><expr pos:start="73:41" pos:end="73:52"><name pos:start="73:41" pos:end="73:52">machine_opts</name></expr></argument>, <argument pos:start="73:55" pos:end="73:59"><expr pos:start="73:55" pos:end="73:59"><literal type="string" pos:start="73:55" pos:end="73:59">"dtb"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="75:5" pos:end="75:78"><decl pos:start="75:5" pos:end="75:77"><type pos:start="75:5" pos:end="75:16"><specifier pos:start="75:5" pos:end="75:9">const</specifier> <name pos:start="75:11" pos:end="75:14">char</name> <modifier pos:start="75:16" pos:end="75:16">*</modifier></type><name pos:start="75:17" pos:end="75:31">toplevel_compat</name> <init pos:start="75:33" pos:end="75:77">= <expr pos:start="75:35" pos:end="75:77"><call pos:start="75:35" pos:end="75:77"><name pos:start="75:35" pos:end="75:46">qemu_opt_get</name><argument_list pos:start="75:47" pos:end="75:77">(<argument pos:start="75:48" pos:end="75:59"><expr pos:start="75:48" pos:end="75:59"><name pos:start="75:48" pos:end="75:59">machine_opts</name></expr></argument>, <argument pos:start="75:62" pos:end="75:76"><expr pos:start="75:62" pos:end="75:76"><literal type="string" pos:start="75:62" pos:end="75:76">"dt_compatible"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="79:5" pos:end="103:5"><if pos:start="79:5" pos:end="103:5">if <condition pos:start="79:8" pos:end="79:17">(<expr pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:16">dtb_file</name></expr>)</condition> <block pos:start="79:19" pos:end="103:5">{<block_content pos:start="81:9" pos:end="101:18">

        <decl_stmt pos:start="81:9" pos:end="81:23"><decl pos:start="81:9" pos:end="81:22"><type pos:start="81:9" pos:end="81:14"><name pos:start="81:9" pos:end="81:12">char</name> <modifier pos:start="81:14" pos:end="81:14">*</modifier></type><name pos:start="81:15" pos:end="81:22">filename</name></decl>;</decl_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:65"><expr pos:start="83:9" pos:end="83:64"><name pos:start="83:9" pos:end="83:16">filename</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:64"><name pos:start="83:20" pos:end="83:33">qemu_find_file</name><argument_list pos:start="83:34" pos:end="83:64">(<argument pos:start="83:35" pos:end="83:53"><expr pos:start="83:35" pos:end="83:53"><name pos:start="83:35" pos:end="83:53">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="83:56" pos:end="83:63"><expr pos:start="83:56" pos:end="83:63"><name pos:start="83:56" pos:end="83:63">dtb_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:22">(<expr pos:start="85:13" pos:end="85:21"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:21">filename</name></expr>)</condition> <block pos:start="85:24" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:21">

            <goto pos:start="87:13" pos:end="87:21">goto <name pos:start="87:18" pos:end="87:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:52"><expr pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:11">fdt</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:51"><name pos:start="93:15" pos:end="93:30">load_device_tree</name><argument_list pos:start="93:31" pos:end="93:51">(<argument pos:start="93:32" pos:end="93:39"><expr pos:start="93:32" pos:end="93:39"><name pos:start="93:32" pos:end="93:39">filename</name></expr></argument>, <argument pos:start="93:42" pos:end="93:50"><expr pos:start="93:42" pos:end="93:50"><operator pos:start="93:42" pos:end="93:42">&amp;</operator><name pos:start="93:43" pos:end="93:50">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:17">(<expr pos:start="95:13" pos:end="95:16"><operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:16">fdt</name></expr>)</condition> <block pos:start="95:19" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:21">

            <goto pos:start="97:13" pos:end="97:21">goto <name pos:start="97:18" pos:end="97:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="101:9" pos:end="101:18">goto <name pos:start="101:14" pos:end="101:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:40"><expr pos:start="107:5" pos:end="107:39"><name pos:start="107:5" pos:end="107:7">fdt</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <call pos:start="107:11" pos:end="107:39"><name pos:start="107:11" pos:end="107:28">create_device_tree</name><argument_list pos:start="107:29" pos:end="107:39">(<argument pos:start="107:30" pos:end="107:38"><expr pos:start="107:30" pos:end="107:38"><operator pos:start="107:30" pos:end="107:30">&amp;</operator><name pos:start="107:31" pos:end="107:38">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:20">(<expr pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:11">fdt</name> <operator pos:start="109:13" pos:end="109:14">==</operator> <name pos:start="109:16" pos:end="109:19">NULL</name></expr>)</condition> <block pos:start="109:22" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:17">

        <goto pos:start="111:9" pos:end="111:17">goto <name pos:start="111:14" pos:end="111:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="117:5" pos:end="117:43">/* Manipulate device tree in memory. */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:61"><expr pos:start="119:5" pos:end="119:60"><call pos:start="119:5" pos:end="119:60"><name pos:start="119:5" pos:end="119:29">qemu_devtree_setprop_cell</name><argument_list pos:start="119:30" pos:end="119:60">(<argument pos:start="119:31" pos:end="119:33"><expr pos:start="119:31" pos:end="119:33"><name pos:start="119:31" pos:end="119:33">fdt</name></expr></argument>, <argument pos:start="119:36" pos:end="119:38"><expr pos:start="119:36" pos:end="119:38"><literal type="string" pos:start="119:36" pos:end="119:38">"/"</literal></expr></argument>, <argument pos:start="119:41" pos:end="119:56"><expr pos:start="119:41" pos:end="119:56"><literal type="string" pos:start="119:41" pos:end="119:56">"#address-cells"</literal></expr></argument>, <argument pos:start="119:59" pos:end="119:59"><expr pos:start="119:59" pos:end="119:59"><literal type="number" pos:start="119:59" pos:end="119:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:58"><expr pos:start="121:5" pos:end="121:57"><call pos:start="121:5" pos:end="121:57"><name pos:start="121:5" pos:end="121:29">qemu_devtree_setprop_cell</name><argument_list pos:start="121:30" pos:end="121:57">(<argument pos:start="121:31" pos:end="121:33"><expr pos:start="121:31" pos:end="121:33"><name pos:start="121:31" pos:end="121:33">fdt</name></expr></argument>, <argument pos:start="121:36" pos:end="121:38"><expr pos:start="121:36" pos:end="121:38"><literal type="string" pos:start="121:36" pos:end="121:38">"/"</literal></expr></argument>, <argument pos:start="121:41" pos:end="121:53"><expr pos:start="121:41" pos:end="121:53"><literal type="string" pos:start="121:41" pos:end="121:53">"#size-cells"</literal></expr></argument>, <argument pos:start="121:56" pos:end="121:56"><expr pos:start="121:56" pos:end="121:56"><literal type="number" pos:start="121:56" pos:end="121:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:45"><expr pos:start="125:5" pos:end="125:44"><call pos:start="125:5" pos:end="125:44"><name pos:start="125:5" pos:end="125:28">qemu_devtree_add_subnode</name><argument_list pos:start="125:29" pos:end="125:44">(<argument pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:32">fdt</name></expr></argument>, <argument pos:start="125:35" pos:end="125:43"><expr pos:start="125:35" pos:end="125:43"><literal type="string" pos:start="125:35" pos:end="125:43">"/memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:73"><expr pos:start="127:5" pos:end="127:72"><call pos:start="127:5" pos:end="127:72"><name pos:start="127:5" pos:end="127:31">qemu_devtree_setprop_string</name><argument_list pos:start="127:32" pos:end="127:72">(<argument pos:start="127:33" pos:end="127:35"><expr pos:start="127:33" pos:end="127:35"><name pos:start="127:33" pos:end="127:35">fdt</name></expr></argument>, <argument pos:start="127:38" pos:end="127:46"><expr pos:start="127:38" pos:end="127:46"><literal type="string" pos:start="127:38" pos:end="127:46">"/memory"</literal></expr></argument>, <argument pos:start="127:49" pos:end="127:61"><expr pos:start="127:49" pos:end="127:61"><literal type="string" pos:start="127:49" pos:end="127:61">"device_type"</literal></expr></argument>, <argument pos:start="127:64" pos:end="127:71"><expr pos:start="127:64" pos:end="127:71"><literal type="string" pos:start="127:64" pos:end="127:71">"memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="131:51"><expr pos:start="129:5" pos:end="131:50"><call pos:start="129:5" pos:end="131:50"><name pos:start="129:5" pos:end="129:24">qemu_devtree_setprop</name><argument_list pos:start="129:25" pos:end="131:50">(<argument pos:start="129:26" pos:end="129:28"><expr pos:start="129:26" pos:end="129:28"><name pos:start="129:26" pos:end="129:28">fdt</name></expr></argument>, <argument pos:start="129:31" pos:end="129:39"><expr pos:start="129:31" pos:end="129:39"><literal type="string" pos:start="129:31" pos:end="129:39">"/memory"</literal></expr></argument>, <argument pos:start="129:42" pos:end="129:46"><expr pos:start="129:42" pos:end="129:46"><literal type="string" pos:start="129:42" pos:end="129:46">"reg"</literal></expr></argument>, <argument pos:start="129:49" pos:end="129:64"><expr pos:start="129:49" pos:end="129:64"><name pos:start="129:49" pos:end="129:64">mem_reg_property</name></expr></argument>,

                         <argument pos:start="131:26" pos:end="131:49"><expr pos:start="131:26" pos:end="131:49"><sizeof pos:start="131:26" pos:end="131:49">sizeof<argument_list pos:start="131:32" pos:end="131:49">(<argument pos:start="131:33" pos:end="131:48"><expr pos:start="131:33" pos:end="131:48"><name pos:start="131:33" pos:end="131:48">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:45"><expr pos:start="135:5" pos:end="135:44"><call pos:start="135:5" pos:end="135:44"><name pos:start="135:5" pos:end="135:28">qemu_devtree_add_subnode</name><argument_list pos:start="135:29" pos:end="135:44">(<argument pos:start="135:30" pos:end="135:32"><expr pos:start="135:30" pos:end="135:32"><name pos:start="135:30" pos:end="135:32">fdt</name></expr></argument>, <argument pos:start="135:35" pos:end="135:43"><expr pos:start="135:35" pos:end="135:43"><literal type="string" pos:start="135:35" pos:end="135:43">"/chosen"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="161:5"><if pos:start="137:5" pos:end="161:5">if <condition pos:start="137:8" pos:end="137:20">(<expr pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:19">initrd_size</name></expr>)</condition> <block pos:start="137:22" pos:end="161:5">{<block_content pos:start="139:9" pos:end="159:9">

        <expr_stmt pos:start="139:9" pos:end="141:53"><expr pos:start="139:9" pos:end="141:52"><name pos:start="139:9" pos:end="139:11">ret</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <call pos:start="139:15" pos:end="141:52"><name pos:start="139:15" pos:end="139:39">qemu_devtree_setprop_cell</name><argument_list pos:start="139:40" pos:end="141:52">(<argument pos:start="139:41" pos:end="139:43"><expr pos:start="139:41" pos:end="139:43"><name pos:start="139:41" pos:end="139:43">fdt</name></expr></argument>, <argument pos:start="139:46" pos:end="139:54"><expr pos:start="139:46" pos:end="139:54"><literal type="string" pos:start="139:46" pos:end="139:54">"/chosen"</literal></expr></argument>, <argument pos:start="139:57" pos:end="139:76"><expr pos:start="139:57" pos:end="139:76"><literal type="string" pos:start="139:57" pos:end="139:76">"linux,initrd-start"</literal></expr></argument>,

                                        <argument pos:start="141:41" pos:end="141:51"><expr pos:start="141:41" pos:end="141:51"><name pos:start="141:41" pos:end="141:51">initrd_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:20">(<expr pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:15">ret</name> <operator pos:start="143:17" pos:end="143:17">&lt;</operator> <literal type="number" pos:start="143:19" pos:end="143:19">0</literal></expr>)</condition> <block pos:start="143:22" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:73">

            <expr_stmt pos:start="145:13" pos:end="145:73"><expr pos:start="145:13" pos:end="145:72"><call pos:start="145:13" pos:end="145:72"><name pos:start="145:13" pos:end="145:19">fprintf</name><argument_list pos:start="145:20" pos:end="145:72">(<argument pos:start="145:21" pos:end="145:26"><expr pos:start="145:21" pos:end="145:26"><name pos:start="145:21" pos:end="145:26">stderr</name></expr></argument>, <argument pos:start="145:29" pos:end="145:71"><expr pos:start="145:29" pos:end="145:71"><literal type="string" pos:start="145:29" pos:end="145:71">"couldn't set /chosen/linux,initrd-start\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="151:9" pos:end="153:69"><expr pos:start="151:9" pos:end="153:68"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <call pos:start="151:15" pos:end="153:68"><name pos:start="151:15" pos:end="151:39">qemu_devtree_setprop_cell</name><argument_list pos:start="151:40" pos:end="153:68">(<argument pos:start="151:41" pos:end="151:43"><expr pos:start="151:41" pos:end="151:43"><name pos:start="151:41" pos:end="151:43">fdt</name></expr></argument>, <argument pos:start="151:46" pos:end="151:54"><expr pos:start="151:46" pos:end="151:54"><literal type="string" pos:start="151:46" pos:end="151:54">"/chosen"</literal></expr></argument>, <argument pos:start="151:57" pos:end="151:74"><expr pos:start="151:57" pos:end="151:74"><literal type="string" pos:start="151:57" pos:end="151:74">"linux,initrd-end"</literal></expr></argument>,

                                        <argument pos:start="153:41" pos:end="153:67"><expr pos:start="153:41" pos:end="153:67"><operator pos:start="153:41" pos:end="153:41">(</operator><name pos:start="153:42" pos:end="153:52">initrd_base</name> <operator pos:start="153:54" pos:end="153:54">+</operator> <name pos:start="153:56" pos:end="153:66">initrd_size</name><operator pos:start="153:67" pos:end="153:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="159:9"><if pos:start="155:9" pos:end="159:9">if <condition pos:start="155:12" pos:end="155:20">(<expr pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:15">ret</name> <operator pos:start="155:17" pos:end="155:17">&lt;</operator> <literal type="number" pos:start="155:19" pos:end="155:19">0</literal></expr>)</condition> <block pos:start="155:22" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:71">

            <expr_stmt pos:start="157:13" pos:end="157:71"><expr pos:start="157:13" pos:end="157:70"><call pos:start="157:13" pos:end="157:70"><name pos:start="157:13" pos:end="157:19">fprintf</name><argument_list pos:start="157:20" pos:end="157:70">(<argument pos:start="157:21" pos:end="157:26"><expr pos:start="157:21" pos:end="157:26"><name pos:start="157:21" pos:end="157:26">stderr</name></expr></argument>, <argument pos:start="157:29" pos:end="157:69"><expr pos:start="157:29" pos:end="157:69"><literal type="string" pos:start="157:29" pos:end="157:69">"couldn't set /chosen/linux,initrd-end\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="167:60"><expr pos:start="165:5" pos:end="167:59"><name pos:start="165:5" pos:end="165:7">ret</name> <operator pos:start="165:9" pos:end="165:9">=</operator> <call pos:start="165:11" pos:end="167:59"><name pos:start="165:11" pos:end="165:37">qemu_devtree_setprop_string</name><argument_list pos:start="165:38" pos:end="167:59">(<argument pos:start="165:39" pos:end="165:41"><expr pos:start="165:39" pos:end="165:41"><name pos:start="165:39" pos:end="165:41">fdt</name></expr></argument>, <argument pos:start="165:44" pos:end="165:52"><expr pos:start="165:44" pos:end="165:52"><literal type="string" pos:start="165:44" pos:end="165:52">"/chosen"</literal></expr></argument>, <argument pos:start="165:55" pos:end="165:64"><expr pos:start="165:55" pos:end="165:64"><literal type="string" pos:start="165:55" pos:end="165:64">"bootargs"</literal></expr></argument>,

                                      <argument pos:start="167:39" pos:end="167:58"><expr pos:start="167:39" pos:end="167:58"><name pos:start="167:39" pos:end="167:58"><name pos:start="167:39" pos:end="167:42">args</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:58">kernel_cmdline</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="169:5" pos:end="171:59"><if pos:start="169:5" pos:end="171:59">if <condition pos:start="169:8" pos:end="169:16">(<expr pos:start="169:9" pos:end="169:15"><name pos:start="169:9" pos:end="169:11">ret</name> <operator pos:start="169:13" pos:end="169:13">&lt;</operator> <literal type="number" pos:start="169:15" pos:end="169:15">0</literal></expr>)</condition><block type="pseudo" pos:start="171:9" pos:end="171:59"><block_content pos:start="171:9" pos:end="171:59">

        <expr_stmt pos:start="171:9" pos:end="171:59"><expr pos:start="171:9" pos:end="171:58"><call pos:start="171:9" pos:end="171:58"><name pos:start="171:9" pos:end="171:15">fprintf</name><argument_list pos:start="171:16" pos:end="171:58">(<argument pos:start="171:17" pos:end="171:22"><expr pos:start="171:17" pos:end="171:22"><name pos:start="171:17" pos:end="171:22">stderr</name></expr></argument>, <argument pos:start="171:25" pos:end="171:57"><expr pos:start="171:25" pos:end="171:57"><literal type="string" pos:start="171:25" pos:end="171:57">"couldn't set /chosen/bootargs\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="175:5" pos:end="207:5"><if pos:start="175:5" pos:end="207:5">if <condition pos:start="175:8" pos:end="175:22">(<expr pos:start="175:9" pos:end="175:21"><call pos:start="175:9" pos:end="175:21"><name pos:start="175:9" pos:end="175:19">kvm_enabled</name><argument_list pos:start="175:20" pos:end="175:21">()</argument_list></call></expr>)</condition> <block pos:start="175:24" pos:end="207:5">{<block_content pos:start="179:9" pos:end="205:9">

        <comment type="block" pos:start="177:9" pos:end="177:41">/* Read out host's frequencies */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:44"><expr pos:start="179:9" pos:end="179:43"><name pos:start="179:9" pos:end="179:18">clock_freq</name> <operator pos:start="179:20" pos:end="179:20">=</operator> <call pos:start="179:22" pos:end="179:43"><name pos:start="179:22" pos:end="179:41">kvmppc_get_clockfreq</name><argument_list pos:start="179:42" pos:end="179:43">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:38"><expr pos:start="181:9" pos:end="181:37"><name pos:start="181:9" pos:end="181:15">tb_freq</name> <operator pos:start="181:17" pos:end="181:17">=</operator> <call pos:start="181:19" pos:end="181:37"><name pos:start="181:19" pos:end="181:35">kvmppc_get_tbfreq</name><argument_list pos:start="181:36" pos:end="181:37">()</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="185:9" pos:end="185:46">/* indicate KVM hypercall interface */</comment>

        <expr_stmt pos:start="187:9" pos:end="187:53"><expr pos:start="187:9" pos:end="187:52"><call pos:start="187:9" pos:end="187:52"><name pos:start="187:9" pos:end="187:32">qemu_devtree_add_subnode</name><argument_list pos:start="187:33" pos:end="187:52">(<argument pos:start="187:34" pos:end="187:36"><expr pos:start="187:34" pos:end="187:36"><name pos:start="187:34" pos:end="187:36">fdt</name></expr></argument>, <argument pos:start="187:39" pos:end="187:51"><expr pos:start="187:39" pos:end="187:51"><literal type="string" pos:start="187:39" pos:end="187:51">"/hypervisor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="191:49"><expr pos:start="189:9" pos:end="191:48"><call pos:start="189:9" pos:end="191:48"><name pos:start="189:9" pos:end="189:35">qemu_devtree_setprop_string</name><argument_list pos:start="189:36" pos:end="191:48">(<argument pos:start="189:37" pos:end="189:39"><expr pos:start="189:37" pos:end="189:39"><name pos:start="189:37" pos:end="189:39">fdt</name></expr></argument>, <argument pos:start="189:42" pos:end="189:54"><expr pos:start="189:42" pos:end="189:54"><literal type="string" pos:start="189:42" pos:end="189:54">"/hypervisor"</literal></expr></argument>, <argument pos:start="189:57" pos:end="189:68"><expr pos:start="189:57" pos:end="189:68"><literal type="string" pos:start="189:57" pos:end="189:68">"compatible"</literal></expr></argument>,

                                    <argument pos:start="191:37" pos:end="191:47"><expr pos:start="191:37" pos:end="191:47"><literal type="string" pos:start="191:37" pos:end="191:47">"linux,kvm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:64"><expr pos:start="193:9" pos:end="193:63"><call pos:start="193:9" pos:end="193:63"><name pos:start="193:9" pos:end="193:28">kvmppc_get_hypercall</name><argument_list pos:start="193:29" pos:end="193:63">(<argument pos:start="193:30" pos:end="193:32"><expr pos:start="193:30" pos:end="193:32"><name pos:start="193:30" pos:end="193:32">env</name></expr></argument>, <argument pos:start="193:35" pos:end="193:43"><expr pos:start="193:35" pos:end="193:43"><name pos:start="193:35" pos:end="193:43">hypercall</name></expr></argument>, <argument pos:start="193:46" pos:end="193:62"><expr pos:start="193:46" pos:end="193:62"><sizeof pos:start="193:46" pos:end="193:62">sizeof<argument_list pos:start="193:52" pos:end="193:62">(<argument pos:start="193:53" pos:end="193:61"><expr pos:start="193:53" pos:end="193:61"><name pos:start="193:53" pos:end="193:61">hypercall</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="197:59"><expr pos:start="195:9" pos:end="197:58"><call pos:start="195:9" pos:end="197:58"><name pos:start="195:9" pos:end="195:28">qemu_devtree_setprop</name><argument_list pos:start="195:29" pos:end="197:58">(<argument pos:start="195:30" pos:end="195:32"><expr pos:start="195:30" pos:end="195:32"><name pos:start="195:30" pos:end="195:32">fdt</name></expr></argument>, <argument pos:start="195:35" pos:end="195:47"><expr pos:start="195:35" pos:end="195:47"><literal type="string" pos:start="195:35" pos:end="195:47">"/hypervisor"</literal></expr></argument>, <argument pos:start="195:50" pos:end="195:69"><expr pos:start="195:50" pos:end="195:69"><literal type="string" pos:start="195:50" pos:end="195:69">"hcall-instructions"</literal></expr></argument>,

                             <argument pos:start="197:30" pos:end="197:38"><expr pos:start="197:30" pos:end="197:38"><name pos:start="197:30" pos:end="197:38">hypercall</name></expr></argument>, <argument pos:start="197:41" pos:end="197:57"><expr pos:start="197:41" pos:end="197:57"><sizeof pos:start="197:41" pos:end="197:57">sizeof<argument_list pos:start="197:47" pos:end="197:57">(<argument pos:start="197:48" pos:end="197:56"><expr pos:start="197:48" pos:end="197:56"><name pos:start="197:48" pos:end="197:56">hypercall</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="199:9" pos:end="199:74">/* if KVM supports the idle hcall, set property indicating this */</comment>

        <if_stmt pos:start="201:9" pos:end="205:9"><if pos:start="201:9" pos:end="205:9">if <condition pos:start="201:12" pos:end="201:36">(<expr pos:start="201:13" pos:end="201:35"><call pos:start="201:13" pos:end="201:35"><name pos:start="201:13" pos:end="201:30">kvmppc_get_hasidle</name><argument_list pos:start="201:31" pos:end="201:35">(<argument pos:start="201:32" pos:end="201:34"><expr pos:start="201:32" pos:end="201:34"><name pos:start="201:32" pos:end="201:34">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="201:38" pos:end="205:9">{<block_content pos:start="203:13" pos:end="203:74">

            <expr_stmt pos:start="203:13" pos:end="203:74"><expr pos:start="203:13" pos:end="203:73"><call pos:start="203:13" pos:end="203:73"><name pos:start="203:13" pos:end="203:32">qemu_devtree_setprop</name><argument_list pos:start="203:33" pos:end="203:73">(<argument pos:start="203:34" pos:end="203:36"><expr pos:start="203:34" pos:end="203:36"><name pos:start="203:34" pos:end="203:36">fdt</name></expr></argument>, <argument pos:start="203:39" pos:end="203:51"><expr pos:start="203:39" pos:end="203:51"><literal type="string" pos:start="203:39" pos:end="203:51">"/hypervisor"</literal></expr></argument>, <argument pos:start="203:54" pos:end="203:63"><expr pos:start="203:54" pos:end="203:63"><literal type="string" pos:start="203:54" pos:end="203:63">"has-idle"</literal></expr></argument>, <argument pos:start="203:66" pos:end="203:69"><expr pos:start="203:66" pos:end="203:69"><name pos:start="203:66" pos:end="203:69">NULL</name></expr></argument>, <argument pos:start="203:72" pos:end="203:72"><expr pos:start="203:72" pos:end="203:72"><literal type="number" pos:start="203:72" pos:end="203:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:26">/* Create CPU nodes */</comment>

    <expr_stmt pos:start="213:5" pos:end="213:43"><expr pos:start="213:5" pos:end="213:42"><call pos:start="213:5" pos:end="213:42"><name pos:start="213:5" pos:end="213:28">qemu_devtree_add_subnode</name><argument_list pos:start="213:29" pos:end="213:42">(<argument pos:start="213:30" pos:end="213:32"><expr pos:start="213:30" pos:end="213:32"><name pos:start="213:30" pos:end="213:32">fdt</name></expr></argument>, <argument pos:start="213:35" pos:end="213:41"><expr pos:start="213:35" pos:end="213:41"><literal type="string" pos:start="213:35" pos:end="213:41">"/cpus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:65"><expr pos:start="215:5" pos:end="215:64"><call pos:start="215:5" pos:end="215:64"><name pos:start="215:5" pos:end="215:29">qemu_devtree_setprop_cell</name><argument_list pos:start="215:30" pos:end="215:64">(<argument pos:start="215:31" pos:end="215:33"><expr pos:start="215:31" pos:end="215:33"><name pos:start="215:31" pos:end="215:33">fdt</name></expr></argument>, <argument pos:start="215:36" pos:end="215:42"><expr pos:start="215:36" pos:end="215:42"><literal type="string" pos:start="215:36" pos:end="215:42">"/cpus"</literal></expr></argument>, <argument pos:start="215:45" pos:end="215:60"><expr pos:start="215:45" pos:end="215:60"><literal type="string" pos:start="215:45" pos:end="215:60">"#address-cells"</literal></expr></argument>, <argument pos:start="215:63" pos:end="215:63"><expr pos:start="215:63" pos:end="215:63"><literal type="number" pos:start="215:63" pos:end="215:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:62"><expr pos:start="217:5" pos:end="217:61"><call pos:start="217:5" pos:end="217:61"><name pos:start="217:5" pos:end="217:29">qemu_devtree_setprop_cell</name><argument_list pos:start="217:30" pos:end="217:61">(<argument pos:start="217:31" pos:end="217:33"><expr pos:start="217:31" pos:end="217:33"><name pos:start="217:31" pos:end="217:33">fdt</name></expr></argument>, <argument pos:start="217:36" pos:end="217:42"><expr pos:start="217:36" pos:end="217:42"><literal type="string" pos:start="217:36" pos:end="217:42">"/cpus"</literal></expr></argument>, <argument pos:start="217:45" pos:end="217:57"><expr pos:start="217:45" pos:end="217:57"><literal type="string" pos:start="217:45" pos:end="217:57">"#size-cells"</literal></expr></argument>, <argument pos:start="217:60" pos:end="217:60"><expr pos:start="217:60" pos:end="217:60"><literal type="number" pos:start="217:60" pos:end="217:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="221:5" pos:end="223:50">/* We need to generate the cpu nodes in reverse order, so Linux can pick

       the first node as boot node and be happy */</comment>

    <for pos:start="225:5" pos:end="291:5">for <control pos:start="225:9" pos:end="225:39">(<init pos:start="225:10" pos:end="225:26"><expr pos:start="225:10" pos:end="225:25"><name pos:start="225:10" pos:end="225:10">i</name> <operator pos:start="225:12" pos:end="225:12">=</operator> <name pos:start="225:14" pos:end="225:21">smp_cpus</name> <operator pos:start="225:23" pos:end="225:23">-</operator> <literal type="number" pos:start="225:25" pos:end="225:25">1</literal></expr>;</init> <condition pos:start="225:28" pos:end="225:34"><expr pos:start="225:28" pos:end="225:33"><name pos:start="225:28" pos:end="225:28">i</name> <operator pos:start="225:30" pos:end="225:31">&gt;=</operator> <literal type="number" pos:start="225:33" pos:end="225:33">0</literal></expr>;</condition> <incr pos:start="225:36" pos:end="225:38"><expr pos:start="225:36" pos:end="225:38"><name pos:start="225:36" pos:end="225:36">i</name><operator pos:start="225:37" pos:end="225:38">--</operator></expr></incr>)</control> <block pos:start="225:41" pos:end="291:5">{<block_content pos:start="227:9" pos:end="289:9">

        <decl_stmt pos:start="227:9" pos:end="227:22"><decl pos:start="227:9" pos:end="227:21"><type pos:start="227:9" pos:end="227:18"><name pos:start="227:9" pos:end="227:16">CPUState</name> <modifier pos:start="227:18" pos:end="227:18">*</modifier></type><name pos:start="227:19" pos:end="227:21">cpu</name></decl>;</decl_stmt>

        <decl_stmt pos:start="229:9" pos:end="229:27"><decl pos:start="229:9" pos:end="229:26"><type pos:start="229:9" pos:end="229:12"><name pos:start="229:9" pos:end="229:12">char</name></type> <name pos:start="229:14" pos:end="229:26"><name pos:start="229:14" pos:end="229:21">cpu_name</name><index pos:start="229:22" pos:end="229:26">[<expr pos:start="229:23" pos:end="229:25"><literal type="number" pos:start="229:23" pos:end="229:25">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="231:9" pos:end="231:67"><decl pos:start="231:9" pos:end="231:66"><type pos:start="231:9" pos:end="231:16"><name pos:start="231:9" pos:end="231:16">uint64_t</name></type> <name pos:start="231:18" pos:end="231:33">cpu_release_addr</name> <init pos:start="231:35" pos:end="231:66">= <expr pos:start="231:37" pos:end="231:66"><name pos:start="231:37" pos:end="231:53">MPC8544_SPIN_BASE</name> <operator pos:start="231:55" pos:end="231:55">+</operator> <operator pos:start="231:57" pos:end="231:57">(</operator><name pos:start="231:58" pos:end="231:58">i</name> <operator pos:start="231:60" pos:end="231:60">*</operator> <literal type="number" pos:start="231:62" pos:end="231:65">0x20</literal><operator pos:start="231:66" pos:end="231:66">)</operator></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="235:9" pos:end="235:30"><expr pos:start="235:9" pos:end="235:29"><name pos:start="235:9" pos:end="235:11">cpu</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <call pos:start="235:15" pos:end="235:29"><name pos:start="235:15" pos:end="235:26">qemu_get_cpu</name><argument_list pos:start="235:27" pos:end="235:29">(<argument pos:start="235:28" pos:end="235:28"><expr pos:start="235:28" pos:end="235:28"><name pos:start="235:28" pos:end="235:28">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="237:9" pos:end="241:9"><if pos:start="237:9" pos:end="241:9">if <condition pos:start="237:12" pos:end="237:24">(<expr pos:start="237:13" pos:end="237:23"><name pos:start="237:13" pos:end="237:15">cpu</name> <operator pos:start="237:17" pos:end="237:18">==</operator> <name pos:start="237:20" pos:end="237:23">NULL</name></expr>)</condition> <block pos:start="237:26" pos:end="241:9">{<block_content pos:start="239:13" pos:end="239:21">

            <continue pos:start="239:13" pos:end="239:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:27"><expr pos:start="243:9" pos:end="243:26"><name pos:start="243:9" pos:end="243:11">env</name> <operator pos:start="243:13" pos:end="243:13">=</operator> <name pos:start="243:15" pos:end="243:26"><name pos:start="243:15" pos:end="243:17">cpu</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:26">env_ptr</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="247:9" pos:end="249:33"><expr pos:start="247:9" pos:end="249:32"><call pos:start="247:9" pos:end="249:32"><name pos:start="247:9" pos:end="247:16">snprintf</name><argument_list pos:start="247:17" pos:end="249:32">(<argument pos:start="247:18" pos:end="247:25"><expr pos:start="247:18" pos:end="247:25"><name pos:start="247:18" pos:end="247:25">cpu_name</name></expr></argument>, <argument pos:start="247:28" pos:end="247:43"><expr pos:start="247:28" pos:end="247:43"><sizeof pos:start="247:28" pos:end="247:43">sizeof<argument_list pos:start="247:34" pos:end="247:43">(<argument pos:start="247:35" pos:end="247:42"><expr pos:start="247:35" pos:end="247:42"><name pos:start="247:35" pos:end="247:42">cpu_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="247:46" pos:end="247:68"><expr pos:start="247:46" pos:end="247:68"><literal type="string" pos:start="247:46" pos:end="247:68">"/cpus/PowerPC,8544@%x"</literal></expr></argument>,

                 <argument pos:start="249:18" pos:end="249:31"><expr pos:start="249:18" pos:end="249:31"><name pos:start="249:18" pos:end="249:31"><name pos:start="249:18" pos:end="249:20">cpu</name><operator pos:start="249:21" pos:end="249:22">-&gt;</operator><name pos:start="249:23" pos:end="249:31">cpu_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:48"><expr pos:start="251:9" pos:end="251:47"><call pos:start="251:9" pos:end="251:47"><name pos:start="251:9" pos:end="251:32">qemu_devtree_add_subnode</name><argument_list pos:start="251:33" pos:end="251:47">(<argument pos:start="251:34" pos:end="251:36"><expr pos:start="251:34" pos:end="251:36"><name pos:start="251:34" pos:end="251:36">fdt</name></expr></argument>, <argument pos:start="251:39" pos:end="251:46"><expr pos:start="251:39" pos:end="251:46"><name pos:start="251:39" pos:end="251:46">cpu_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:80"><expr pos:start="253:9" pos:end="253:79"><call pos:start="253:9" pos:end="253:79"><name pos:start="253:9" pos:end="253:33">qemu_devtree_setprop_cell</name><argument_list pos:start="253:34" pos:end="253:79">(<argument pos:start="253:35" pos:end="253:37"><expr pos:start="253:35" pos:end="253:37"><name pos:start="253:35" pos:end="253:37">fdt</name></expr></argument>, <argument pos:start="253:40" pos:end="253:47"><expr pos:start="253:40" pos:end="253:47"><name pos:start="253:40" pos:end="253:47">cpu_name</name></expr></argument>, <argument pos:start="253:50" pos:end="253:66"><expr pos:start="253:50" pos:end="253:66"><literal type="string" pos:start="253:50" pos:end="253:66">"clock-frequency"</literal></expr></argument>, <argument pos:start="253:69" pos:end="253:78"><expr pos:start="253:69" pos:end="253:78"><name pos:start="253:69" pos:end="253:78">clock_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:80"><expr pos:start="255:9" pos:end="255:79"><call pos:start="255:9" pos:end="255:79"><name pos:start="255:9" pos:end="255:33">qemu_devtree_setprop_cell</name><argument_list pos:start="255:34" pos:end="255:79">(<argument pos:start="255:35" pos:end="255:37"><expr pos:start="255:35" pos:end="255:37"><name pos:start="255:35" pos:end="255:37">fdt</name></expr></argument>, <argument pos:start="255:40" pos:end="255:47"><expr pos:start="255:40" pos:end="255:47"><name pos:start="255:40" pos:end="255:47">cpu_name</name></expr></argument>, <argument pos:start="255:50" pos:end="255:69"><expr pos:start="255:50" pos:end="255:69"><literal type="string" pos:start="255:50" pos:end="255:69">"timebase-frequency"</literal></expr></argument>, <argument pos:start="255:72" pos:end="255:78"><expr pos:start="255:72" pos:end="255:78"><name pos:start="255:72" pos:end="255:78">tb_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:73"><expr pos:start="257:9" pos:end="257:72"><call pos:start="257:9" pos:end="257:72"><name pos:start="257:9" pos:end="257:35">qemu_devtree_setprop_string</name><argument_list pos:start="257:36" pos:end="257:72">(<argument pos:start="257:37" pos:end="257:39"><expr pos:start="257:37" pos:end="257:39"><name pos:start="257:37" pos:end="257:39">fdt</name></expr></argument>, <argument pos:start="257:42" pos:end="257:49"><expr pos:start="257:42" pos:end="257:49"><name pos:start="257:42" pos:end="257:49">cpu_name</name></expr></argument>, <argument pos:start="257:52" pos:end="257:64"><expr pos:start="257:52" pos:end="257:64"><literal type="string" pos:start="257:52" pos:end="257:64">"device_type"</literal></expr></argument>, <argument pos:start="257:67" pos:end="257:71"><expr pos:start="257:67" pos:end="257:71"><literal type="string" pos:start="257:67" pos:end="257:71">"cpu"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:72"><expr pos:start="259:9" pos:end="259:71"><call pos:start="259:9" pos:end="259:71"><name pos:start="259:9" pos:end="259:33">qemu_devtree_setprop_cell</name><argument_list pos:start="259:34" pos:end="259:71">(<argument pos:start="259:35" pos:end="259:37"><expr pos:start="259:35" pos:end="259:37"><name pos:start="259:35" pos:end="259:37">fdt</name></expr></argument>, <argument pos:start="259:40" pos:end="259:47"><expr pos:start="259:40" pos:end="259:47"><name pos:start="259:40" pos:end="259:47">cpu_name</name></expr></argument>, <argument pos:start="259:50" pos:end="259:54"><expr pos:start="259:50" pos:end="259:54"><literal type="string" pos:start="259:50" pos:end="259:54">"reg"</literal></expr></argument>, <argument pos:start="259:57" pos:end="259:70"><expr pos:start="259:57" pos:end="259:70"><name pos:start="259:57" pos:end="259:70"><name pos:start="259:57" pos:end="259:59">cpu</name><operator pos:start="259:60" pos:end="259:61">-&gt;</operator><name pos:start="259:62" pos:end="259:70">cpu_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="263:57"><expr pos:start="261:9" pos:end="263:56"><call pos:start="261:9" pos:end="263:56"><name pos:start="261:9" pos:end="261:33">qemu_devtree_setprop_cell</name><argument_list pos:start="261:34" pos:end="263:56">(<argument pos:start="261:35" pos:end="261:37"><expr pos:start="261:35" pos:end="261:37"><name pos:start="261:35" pos:end="261:37">fdt</name></expr></argument>, <argument pos:start="261:40" pos:end="261:47"><expr pos:start="261:40" pos:end="261:47"><name pos:start="261:40" pos:end="261:47">cpu_name</name></expr></argument>, <argument pos:start="261:50" pos:end="261:68"><expr pos:start="261:50" pos:end="261:68"><literal type="string" pos:start="261:50" pos:end="261:68">"d-cache-line-size"</literal></expr></argument>,

                                  <argument pos:start="263:35" pos:end="263:55"><expr pos:start="263:35" pos:end="263:55"><name pos:start="263:35" pos:end="263:55"><name pos:start="263:35" pos:end="263:37">env</name><operator pos:start="263:38" pos:end="263:39">-&gt;</operator><name pos:start="263:40" pos:end="263:55">dcache_line_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="267:57"><expr pos:start="265:9" pos:end="267:56"><call pos:start="265:9" pos:end="267:56"><name pos:start="265:9" pos:end="265:33">qemu_devtree_setprop_cell</name><argument_list pos:start="265:34" pos:end="267:56">(<argument pos:start="265:35" pos:end="265:37"><expr pos:start="265:35" pos:end="265:37"><name pos:start="265:35" pos:end="265:37">fdt</name></expr></argument>, <argument pos:start="265:40" pos:end="265:47"><expr pos:start="265:40" pos:end="265:47"><name pos:start="265:40" pos:end="265:47">cpu_name</name></expr></argument>, <argument pos:start="265:50" pos:end="265:68"><expr pos:start="265:50" pos:end="265:68"><literal type="string" pos:start="265:50" pos:end="265:68">"i-cache-line-size"</literal></expr></argument>,

                                  <argument pos:start="267:35" pos:end="267:55"><expr pos:start="267:35" pos:end="267:55"><name pos:start="267:35" pos:end="267:55"><name pos:start="267:35" pos:end="267:37">env</name><operator pos:start="267:38" pos:end="267:39">-&gt;</operator><name pos:start="267:40" pos:end="267:55">icache_line_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:73"><expr pos:start="269:9" pos:end="269:72"><call pos:start="269:9" pos:end="269:72"><name pos:start="269:9" pos:end="269:33">qemu_devtree_setprop_cell</name><argument_list pos:start="269:34" pos:end="269:72">(<argument pos:start="269:35" pos:end="269:37"><expr pos:start="269:35" pos:end="269:37"><name pos:start="269:35" pos:end="269:37">fdt</name></expr></argument>, <argument pos:start="269:40" pos:end="269:47"><expr pos:start="269:40" pos:end="269:47"><name pos:start="269:40" pos:end="269:47">cpu_name</name></expr></argument>, <argument pos:start="269:50" pos:end="269:63"><expr pos:start="269:50" pos:end="269:63"><literal type="string" pos:start="269:50" pos:end="269:63">"d-cache-size"</literal></expr></argument>, <argument pos:start="269:66" pos:end="269:71"><expr pos:start="269:66" pos:end="269:71"><literal type="number" pos:start="269:66" pos:end="269:71">0x8000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:73"><expr pos:start="271:9" pos:end="271:72"><call pos:start="271:9" pos:end="271:72"><name pos:start="271:9" pos:end="271:33">qemu_devtree_setprop_cell</name><argument_list pos:start="271:34" pos:end="271:72">(<argument pos:start="271:35" pos:end="271:37"><expr pos:start="271:35" pos:end="271:37"><name pos:start="271:35" pos:end="271:37">fdt</name></expr></argument>, <argument pos:start="271:40" pos:end="271:47"><expr pos:start="271:40" pos:end="271:47"><name pos:start="271:40" pos:end="271:47">cpu_name</name></expr></argument>, <argument pos:start="271:50" pos:end="271:63"><expr pos:start="271:50" pos:end="271:63"><literal type="string" pos:start="271:50" pos:end="271:63">"i-cache-size"</literal></expr></argument>, <argument pos:start="271:66" pos:end="271:71"><expr pos:start="271:66" pos:end="271:71"><literal type="number" pos:start="271:66" pos:end="271:71">0x8000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:69"><expr pos:start="273:9" pos:end="273:68"><call pos:start="273:9" pos:end="273:68"><name pos:start="273:9" pos:end="273:33">qemu_devtree_setprop_cell</name><argument_list pos:start="273:34" pos:end="273:68">(<argument pos:start="273:35" pos:end="273:37"><expr pos:start="273:35" pos:end="273:37"><name pos:start="273:35" pos:end="273:37">fdt</name></expr></argument>, <argument pos:start="273:40" pos:end="273:47"><expr pos:start="273:40" pos:end="273:47"><name pos:start="273:40" pos:end="273:47">cpu_name</name></expr></argument>, <argument pos:start="273:50" pos:end="273:64"><expr pos:start="273:50" pos:end="273:64"><literal type="string" pos:start="273:50" pos:end="273:64">"bus-frequency"</literal></expr></argument>, <argument pos:start="273:67" pos:end="273:67"><expr pos:start="273:67" pos:end="273:67"><literal type="number" pos:start="273:67" pos:end="273:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="275:9" pos:end="289:9"><if pos:start="275:9" pos:end="285:9">if <condition pos:start="275:12" pos:end="275:27">(<expr pos:start="275:13" pos:end="275:26"><name pos:start="275:13" pos:end="275:26"><name pos:start="275:13" pos:end="275:15">cpu</name><operator pos:start="275:16" pos:end="275:17">-&gt;</operator><name pos:start="275:18" pos:end="275:26">cpu_index</name></name></expr>)</condition> <block pos:start="275:29" pos:end="285:9">{<block_content pos:start="277:13" pos:end="283:55">

            <expr_stmt pos:start="277:13" pos:end="277:77"><expr pos:start="277:13" pos:end="277:76"><call pos:start="277:13" pos:end="277:76"><name pos:start="277:13" pos:end="277:39">qemu_devtree_setprop_string</name><argument_list pos:start="277:40" pos:end="277:76">(<argument pos:start="277:41" pos:end="277:43"><expr pos:start="277:41" pos:end="277:43"><name pos:start="277:41" pos:end="277:43">fdt</name></expr></argument>, <argument pos:start="277:46" pos:end="277:53"><expr pos:start="277:46" pos:end="277:53"><name pos:start="277:46" pos:end="277:53">cpu_name</name></expr></argument>, <argument pos:start="277:56" pos:end="277:63"><expr pos:start="277:56" pos:end="277:63"><literal type="string" pos:start="277:56" pos:end="277:63">"status"</literal></expr></argument>, <argument pos:start="277:66" pos:end="277:75"><expr pos:start="277:66" pos:end="277:75"><literal type="string" pos:start="277:66" pos:end="277:75">"disabled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:86"><expr pos:start="279:13" pos:end="279:85"><call pos:start="279:13" pos:end="279:85"><name pos:start="279:13" pos:end="279:39">qemu_devtree_setprop_string</name><argument_list pos:start="279:40" pos:end="279:85">(<argument pos:start="279:41" pos:end="279:43"><expr pos:start="279:41" pos:end="279:43"><name pos:start="279:41" pos:end="279:43">fdt</name></expr></argument>, <argument pos:start="279:46" pos:end="279:53"><expr pos:start="279:46" pos:end="279:53"><name pos:start="279:46" pos:end="279:53">cpu_name</name></expr></argument>, <argument pos:start="279:56" pos:end="279:70"><expr pos:start="279:56" pos:end="279:70"><literal type="string" pos:start="279:56" pos:end="279:70">"enable-method"</literal></expr></argument>, <argument pos:start="279:73" pos:end="279:84"><expr pos:start="279:73" pos:end="279:84"><literal type="string" pos:start="279:73" pos:end="279:84">"spin-table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="283:55"><expr pos:start="281:13" pos:end="283:54"><call pos:start="281:13" pos:end="283:54"><name pos:start="281:13" pos:end="281:36">qemu_devtree_setprop_u64</name><argument_list pos:start="281:37" pos:end="283:54">(<argument pos:start="281:38" pos:end="281:40"><expr pos:start="281:38" pos:end="281:40"><name pos:start="281:38" pos:end="281:40">fdt</name></expr></argument>, <argument pos:start="281:43" pos:end="281:50"><expr pos:start="281:43" pos:end="281:50"><name pos:start="281:43" pos:end="281:50">cpu_name</name></expr></argument>, <argument pos:start="281:53" pos:end="281:70"><expr pos:start="281:53" pos:end="281:70"><literal type="string" pos:start="281:53" pos:end="281:70">"cpu-release-addr"</literal></expr></argument>,

                                     <argument pos:start="283:38" pos:end="283:53"><expr pos:start="283:38" pos:end="283:53"><name pos:start="283:38" pos:end="283:53">cpu_release_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="285:11" pos:end="289:9">else <block pos:start="285:16" pos:end="289:9">{<block_content pos:start="287:13" pos:end="287:73">

            <expr_stmt pos:start="287:13" pos:end="287:73"><expr pos:start="287:13" pos:end="287:72"><call pos:start="287:13" pos:end="287:72"><name pos:start="287:13" pos:end="287:39">qemu_devtree_setprop_string</name><argument_list pos:start="287:40" pos:end="287:72">(<argument pos:start="287:41" pos:end="287:43"><expr pos:start="287:41" pos:end="287:43"><name pos:start="287:41" pos:end="287:43">fdt</name></expr></argument>, <argument pos:start="287:46" pos:end="287:53"><expr pos:start="287:46" pos:end="287:53"><name pos:start="287:46" pos:end="287:53">cpu_name</name></expr></argument>, <argument pos:start="287:56" pos:end="287:63"><expr pos:start="287:56" pos:end="287:63"><literal type="string" pos:start="287:56" pos:end="287:63">"status"</literal></expr></argument>, <argument pos:start="287:66" pos:end="287:71"><expr pos:start="287:66" pos:end="287:71"><literal type="string" pos:start="287:66" pos:end="287:71">"okay"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="295:5" pos:end="295:46"><expr pos:start="295:5" pos:end="295:45"><call pos:start="295:5" pos:end="295:45"><name pos:start="295:5" pos:end="295:28">qemu_devtree_add_subnode</name><argument_list pos:start="295:29" pos:end="295:45">(<argument pos:start="295:30" pos:end="295:32"><expr pos:start="295:30" pos:end="295:32"><name pos:start="295:30" pos:end="295:32">fdt</name></expr></argument>, <argument pos:start="295:35" pos:end="295:44"><expr pos:start="295:35" pos:end="295:44"><literal type="string" pos:start="295:35" pos:end="295:44">"/aliases"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="297:5" pos:end="297:65">/* XXX These should go into their respective devices' code */</comment>

    <expr_stmt pos:start="299:5" pos:end="299:66"><expr pos:start="299:5" pos:end="299:65"><call pos:start="299:5" pos:end="299:65"><name pos:start="299:5" pos:end="299:12">snprintf</name><argument_list pos:start="299:13" pos:end="299:65">(<argument pos:start="299:14" pos:end="299:16"><expr pos:start="299:14" pos:end="299:16"><name pos:start="299:14" pos:end="299:16">soc</name></expr></argument>, <argument pos:start="299:19" pos:end="299:29"><expr pos:start="299:19" pos:end="299:29"><sizeof pos:start="299:19" pos:end="299:29">sizeof<argument_list pos:start="299:25" pos:end="299:29">(<argument pos:start="299:26" pos:end="299:28"><expr pos:start="299:26" pos:end="299:28"><name pos:start="299:26" pos:end="299:28">soc</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="299:32" pos:end="299:42"><expr pos:start="299:32" pos:end="299:42"><literal type="string" pos:start="299:32" pos:end="299:42">"/soc@%llx"</literal></expr></argument>, <argument pos:start="299:45" pos:end="299:64"><expr pos:start="299:45" pos:end="299:64"><name pos:start="299:45" pos:end="299:64">MPC8544_CCSRBAR_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:39"><expr pos:start="301:5" pos:end="301:38"><call pos:start="301:5" pos:end="301:38"><name pos:start="301:5" pos:end="301:28">qemu_devtree_add_subnode</name><argument_list pos:start="301:29" pos:end="301:38">(<argument pos:start="301:30" pos:end="301:32"><expr pos:start="301:30" pos:end="301:32"><name pos:start="301:30" pos:end="301:32">fdt</name></expr></argument>, <argument pos:start="301:35" pos:end="301:37"><expr pos:start="301:35" pos:end="301:37"><name pos:start="301:35" pos:end="301:37">soc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:64"><expr pos:start="303:5" pos:end="303:63"><call pos:start="303:5" pos:end="303:63"><name pos:start="303:5" pos:end="303:31">qemu_devtree_setprop_string</name><argument_list pos:start="303:32" pos:end="303:63">(<argument pos:start="303:33" pos:end="303:35"><expr pos:start="303:33" pos:end="303:35"><name pos:start="303:33" pos:end="303:35">fdt</name></expr></argument>, <argument pos:start="303:38" pos:end="303:40"><expr pos:start="303:38" pos:end="303:40"><name pos:start="303:38" pos:end="303:40">soc</name></expr></argument>, <argument pos:start="303:43" pos:end="303:55"><expr pos:start="303:43" pos:end="303:55"><literal type="string" pos:start="303:43" pos:end="303:55">"device_type"</literal></expr></argument>, <argument pos:start="303:58" pos:end="303:62"><expr pos:start="303:58" pos:end="303:62"><literal type="string" pos:start="303:58" pos:end="303:62">"soc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="307:48"><expr pos:start="305:5" pos:end="307:47"><call pos:start="305:5" pos:end="307:47"><name pos:start="305:5" pos:end="305:24">qemu_devtree_setprop</name><argument_list pos:start="305:25" pos:end="307:47">(<argument pos:start="305:26" pos:end="305:28"><expr pos:start="305:26" pos:end="305:28"><name pos:start="305:26" pos:end="305:28">fdt</name></expr></argument>, <argument pos:start="305:31" pos:end="305:33"><expr pos:start="305:31" pos:end="305:33"><name pos:start="305:31" pos:end="305:33">soc</name></expr></argument>, <argument pos:start="305:36" pos:end="305:47"><expr pos:start="305:36" pos:end="305:47"><literal type="string" pos:start="305:36" pos:end="305:47">"compatible"</literal></expr></argument>, <argument pos:start="305:50" pos:end="305:62"><expr pos:start="305:50" pos:end="305:62"><name pos:start="305:50" pos:end="305:62">compatible_sb</name></expr></argument>,

                         <argument pos:start="307:26" pos:end="307:46"><expr pos:start="307:26" pos:end="307:46"><sizeof pos:start="307:26" pos:end="307:46">sizeof<argument_list pos:start="307:32" pos:end="307:46">(<argument pos:start="307:33" pos:end="307:45"><expr pos:start="307:33" pos:end="307:45"><name pos:start="307:33" pos:end="307:45">compatible_sb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:61"><expr pos:start="309:5" pos:end="309:60"><call pos:start="309:5" pos:end="309:60"><name pos:start="309:5" pos:end="309:29">qemu_devtree_setprop_cell</name><argument_list pos:start="309:30" pos:end="309:60">(<argument pos:start="309:31" pos:end="309:33"><expr pos:start="309:31" pos:end="309:33"><name pos:start="309:31" pos:end="309:33">fdt</name></expr></argument>, <argument pos:start="309:36" pos:end="309:38"><expr pos:start="309:36" pos:end="309:38"><name pos:start="309:36" pos:end="309:38">soc</name></expr></argument>, <argument pos:start="309:41" pos:end="309:56"><expr pos:start="309:41" pos:end="309:56"><literal type="string" pos:start="309:41" pos:end="309:56">"#address-cells"</literal></expr></argument>, <argument pos:start="309:59" pos:end="309:59"><expr pos:start="309:59" pos:end="309:59"><literal type="number" pos:start="309:59" pos:end="309:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:58"><expr pos:start="311:5" pos:end="311:57"><call pos:start="311:5" pos:end="311:57"><name pos:start="311:5" pos:end="311:29">qemu_devtree_setprop_cell</name><argument_list pos:start="311:30" pos:end="311:57">(<argument pos:start="311:31" pos:end="311:33"><expr pos:start="311:31" pos:end="311:33"><name pos:start="311:31" pos:end="311:33">fdt</name></expr></argument>, <argument pos:start="311:36" pos:end="311:38"><expr pos:start="311:36" pos:end="311:38"><name pos:start="311:36" pos:end="311:38">soc</name></expr></argument>, <argument pos:start="311:41" pos:end="311:53"><expr pos:start="311:41" pos:end="311:53"><literal type="string" pos:start="311:41" pos:end="311:53">"#size-cells"</literal></expr></argument>, <argument pos:start="311:56" pos:end="311:56"><expr pos:start="311:56" pos:end="311:56"><literal type="number" pos:start="311:56" pos:end="311:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="317:53"><expr pos:start="313:5" pos:end="317:52"><call pos:start="313:5" pos:end="317:52"><name pos:start="313:5" pos:end="313:30">qemu_devtree_setprop_cells</name><argument_list pos:start="313:31" pos:end="317:52">(<argument pos:start="313:32" pos:end="313:34"><expr pos:start="313:32" pos:end="313:34"><name pos:start="313:32" pos:end="313:34">fdt</name></expr></argument>, <argument pos:start="313:37" pos:end="313:39"><expr pos:start="313:37" pos:end="313:39"><name pos:start="313:37" pos:end="313:39">soc</name></expr></argument>, <argument pos:start="313:42" pos:end="313:49"><expr pos:start="313:42" pos:end="313:49"><literal type="string" pos:start="313:42" pos:end="313:49">"ranges"</literal></expr></argument>, <argument pos:start="313:52" pos:end="313:54"><expr pos:start="313:52" pos:end="313:54"><literal type="number" pos:start="313:52" pos:end="313:54">0x0</literal></expr></argument>,

                               <argument pos:start="315:32" pos:end="315:57"><expr pos:start="315:32" pos:end="315:57"><name pos:start="315:32" pos:end="315:51">MPC8544_CCSRBAR_BASE</name> <operator pos:start="315:53" pos:end="315:54">&gt;&gt;</operator> <literal type="number" pos:start="315:56" pos:end="315:57">32</literal></expr></argument>, <argument pos:start="315:60" pos:end="315:79"><expr pos:start="315:60" pos:end="315:79"><name pos:start="315:60" pos:end="315:79">MPC8544_CCSRBAR_BASE</name></expr></argument>,

                               <argument pos:start="317:32" pos:end="317:51"><expr pos:start="317:32" pos:end="317:51"><name pos:start="317:32" pos:end="317:51">MPC8544_CCSRBAR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="319:5" pos:end="319:47">/* XXX should contain a reasonable value */</comment>

    <expr_stmt pos:start="321:5" pos:end="321:60"><expr pos:start="321:5" pos:end="321:59"><call pos:start="321:5" pos:end="321:59"><name pos:start="321:5" pos:end="321:29">qemu_devtree_setprop_cell</name><argument_list pos:start="321:30" pos:end="321:59">(<argument pos:start="321:31" pos:end="321:33"><expr pos:start="321:31" pos:end="321:33"><name pos:start="321:31" pos:end="321:33">fdt</name></expr></argument>, <argument pos:start="321:36" pos:end="321:38"><expr pos:start="321:36" pos:end="321:38"><name pos:start="321:36" pos:end="321:38">soc</name></expr></argument>, <argument pos:start="321:41" pos:end="321:55"><expr pos:start="321:41" pos:end="321:55"><literal type="string" pos:start="321:41" pos:end="321:55">"bus-frequency"</literal></expr></argument>, <argument pos:start="321:58" pos:end="321:58"><expr pos:start="321:58" pos:end="321:58"><literal type="number" pos:start="321:58" pos:end="321:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="325:5" pos:end="325:79"><expr pos:start="325:5" pos:end="325:78"><call pos:start="325:5" pos:end="325:78"><name pos:start="325:5" pos:end="325:12">snprintf</name><argument_list pos:start="325:13" pos:end="325:78">(<argument pos:start="325:14" pos:end="325:17"><expr pos:start="325:14" pos:end="325:17"><name pos:start="325:14" pos:end="325:17">mpic</name></expr></argument>, <argument pos:start="325:20" pos:end="325:31"><expr pos:start="325:20" pos:end="325:31"><sizeof pos:start="325:20" pos:end="325:31">sizeof<argument_list pos:start="325:26" pos:end="325:31">(<argument pos:start="325:27" pos:end="325:30"><expr pos:start="325:27" pos:end="325:30"><name pos:start="325:27" pos:end="325:30">mpic</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="325:34" pos:end="325:46"><expr pos:start="325:34" pos:end="325:46"><literal type="string" pos:start="325:34" pos:end="325:46">"%s/pic@%llx"</literal></expr></argument>, <argument pos:start="325:49" pos:end="325:51"><expr pos:start="325:49" pos:end="325:51"><name pos:start="325:49" pos:end="325:51">soc</name></expr></argument>, <argument pos:start="325:54" pos:end="325:77"><expr pos:start="325:54" pos:end="325:77"><name pos:start="325:54" pos:end="325:77">MPC8544_MPIC_REGS_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:40"><expr pos:start="327:5" pos:end="327:39"><call pos:start="327:5" pos:end="327:39"><name pos:start="327:5" pos:end="327:28">qemu_devtree_add_subnode</name><argument_list pos:start="327:29" pos:end="327:39">(<argument pos:start="327:30" pos:end="327:32"><expr pos:start="327:30" pos:end="327:32"><name pos:start="327:30" pos:end="327:32">fdt</name></expr></argument>, <argument pos:start="327:35" pos:end="327:38"><expr pos:start="327:35" pos:end="327:38"><name pos:start="327:35" pos:end="327:38">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="329:70"><expr pos:start="329:5" pos:end="329:69"><call pos:start="329:5" pos:end="329:69"><name pos:start="329:5" pos:end="329:31">qemu_devtree_setprop_string</name><argument_list pos:start="329:32" pos:end="329:69">(<argument pos:start="329:33" pos:end="329:35"><expr pos:start="329:33" pos:end="329:35"><name pos:start="329:33" pos:end="329:35">fdt</name></expr></argument>, <argument pos:start="329:38" pos:end="329:41"><expr pos:start="329:38" pos:end="329:41"><name pos:start="329:38" pos:end="329:41">mpic</name></expr></argument>, <argument pos:start="329:44" pos:end="329:56"><expr pos:start="329:44" pos:end="329:56"><literal type="string" pos:start="329:44" pos:end="329:56">"device_type"</literal></expr></argument>, <argument pos:start="329:59" pos:end="329:68"><expr pos:start="329:59" pos:end="329:68"><literal type="string" pos:start="329:59" pos:end="329:68">"open-pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:69"><expr pos:start="331:5" pos:end="331:68"><call pos:start="331:5" pos:end="331:68"><name pos:start="331:5" pos:end="331:31">qemu_devtree_setprop_string</name><argument_list pos:start="331:32" pos:end="331:68">(<argument pos:start="331:33" pos:end="331:35"><expr pos:start="331:33" pos:end="331:35"><name pos:start="331:33" pos:end="331:35">fdt</name></expr></argument>, <argument pos:start="331:38" pos:end="331:41"><expr pos:start="331:38" pos:end="331:41"><name pos:start="331:38" pos:end="331:41">mpic</name></expr></argument>, <argument pos:start="331:44" pos:end="331:55"><expr pos:start="331:44" pos:end="331:55"><literal type="string" pos:start="331:44" pos:end="331:55">"compatible"</literal></expr></argument>, <argument pos:start="331:58" pos:end="331:67"><expr pos:start="331:58" pos:end="331:67"><literal type="string" pos:start="331:58" pos:end="331:67">"fsl,mpic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="335:40"><expr pos:start="333:5" pos:end="335:39"><call pos:start="333:5" pos:end="335:39"><name pos:start="333:5" pos:end="333:30">qemu_devtree_setprop_cells</name><argument_list pos:start="333:31" pos:end="335:39">(<argument pos:start="333:32" pos:end="333:34"><expr pos:start="333:32" pos:end="333:34"><name pos:start="333:32" pos:end="333:34">fdt</name></expr></argument>, <argument pos:start="333:37" pos:end="333:40"><expr pos:start="333:37" pos:end="333:40"><name pos:start="333:37" pos:end="333:40">mpic</name></expr></argument>, <argument pos:start="333:43" pos:end="333:47"><expr pos:start="333:43" pos:end="333:47"><literal type="string" pos:start="333:43" pos:end="333:47">"reg"</literal></expr></argument>, <argument pos:start="333:50" pos:end="333:73"><expr pos:start="333:50" pos:end="333:73"><name pos:start="333:50" pos:end="333:73">MPC8544_MPIC_REGS_OFFSET</name></expr></argument>,

                               <argument pos:start="335:32" pos:end="335:38"><expr pos:start="335:32" pos:end="335:38"><literal type="number" pos:start="335:32" pos:end="335:38">0x40000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:62"><expr pos:start="337:5" pos:end="337:61"><call pos:start="337:5" pos:end="337:61"><name pos:start="337:5" pos:end="337:29">qemu_devtree_setprop_cell</name><argument_list pos:start="337:30" pos:end="337:61">(<argument pos:start="337:31" pos:end="337:33"><expr pos:start="337:31" pos:end="337:33"><name pos:start="337:31" pos:end="337:33">fdt</name></expr></argument>, <argument pos:start="337:36" pos:end="337:39"><expr pos:start="337:36" pos:end="337:39"><name pos:start="337:36" pos:end="337:39">mpic</name></expr></argument>, <argument pos:start="337:42" pos:end="337:57"><expr pos:start="337:42" pos:end="337:57"><literal type="string" pos:start="337:42" pos:end="337:57">"#address-cells"</literal></expr></argument>, <argument pos:start="337:60" pos:end="337:60"><expr pos:start="337:60" pos:end="337:60"><literal type="number" pos:start="337:60" pos:end="337:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:64"><expr pos:start="339:5" pos:end="339:63"><call pos:start="339:5" pos:end="339:63"><name pos:start="339:5" pos:end="339:29">qemu_devtree_setprop_cell</name><argument_list pos:start="339:30" pos:end="339:63">(<argument pos:start="339:31" pos:end="339:33"><expr pos:start="339:31" pos:end="339:33"><name pos:start="339:31" pos:end="339:33">fdt</name></expr></argument>, <argument pos:start="339:36" pos:end="339:39"><expr pos:start="339:36" pos:end="339:39"><name pos:start="339:36" pos:end="339:39">mpic</name></expr></argument>, <argument pos:start="339:42" pos:end="339:59"><expr pos:start="339:42" pos:end="339:59"><literal type="string" pos:start="339:42" pos:end="339:59">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="339:62" pos:end="339:62"><expr pos:start="339:62" pos:end="339:62"><literal type="number" pos:start="339:62" pos:end="339:62">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:46"><expr pos:start="341:5" pos:end="341:45"><name pos:start="341:5" pos:end="341:11">mpic_ph</name> <operator pos:start="341:13" pos:end="341:13">=</operator> <call pos:start="341:15" pos:end="341:45"><name pos:start="341:15" pos:end="341:40">qemu_devtree_alloc_phandle</name><argument_list pos:start="341:41" pos:end="341:45">(<argument pos:start="341:42" pos:end="341:44"><expr pos:start="341:42" pos:end="341:44"><name pos:start="341:42" pos:end="341:44">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:61"><expr pos:start="343:5" pos:end="343:60"><call pos:start="343:5" pos:end="343:60"><name pos:start="343:5" pos:end="343:29">qemu_devtree_setprop_cell</name><argument_list pos:start="343:30" pos:end="343:60">(<argument pos:start="343:31" pos:end="343:33"><expr pos:start="343:31" pos:end="343:33"><name pos:start="343:31" pos:end="343:33">fdt</name></expr></argument>, <argument pos:start="343:36" pos:end="343:39"><expr pos:start="343:36" pos:end="343:39"><name pos:start="343:36" pos:end="343:39">mpic</name></expr></argument>, <argument pos:start="343:42" pos:end="343:50"><expr pos:start="343:42" pos:end="343:50"><literal type="string" pos:start="343:42" pos:end="343:50">"phandle"</literal></expr></argument>, <argument pos:start="343:53" pos:end="343:59"><expr pos:start="343:53" pos:end="343:59"><name pos:start="343:53" pos:end="343:59">mpic_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:67"><expr pos:start="345:5" pos:end="345:66"><call pos:start="345:5" pos:end="345:66"><name pos:start="345:5" pos:end="345:29">qemu_devtree_setprop_cell</name><argument_list pos:start="345:30" pos:end="345:66">(<argument pos:start="345:31" pos:end="345:33"><expr pos:start="345:31" pos:end="345:33"><name pos:start="345:31" pos:end="345:33">fdt</name></expr></argument>, <argument pos:start="345:36" pos:end="345:39"><expr pos:start="345:36" pos:end="345:39"><name pos:start="345:36" pos:end="345:39">mpic</name></expr></argument>, <argument pos:start="345:42" pos:end="345:56"><expr pos:start="345:42" pos:end="345:56"><literal type="string" pos:start="345:42" pos:end="345:56">"linux,phandle"</literal></expr></argument>, <argument pos:start="345:59" pos:end="345:65"><expr pos:start="345:59" pos:end="345:65"><name pos:start="345:59" pos:end="345:65">mpic_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:69"><expr pos:start="347:5" pos:end="347:68"><call pos:start="347:5" pos:end="347:68"><name pos:start="347:5" pos:end="347:24">qemu_devtree_setprop</name><argument_list pos:start="347:25" pos:end="347:68">(<argument pos:start="347:26" pos:end="347:28"><expr pos:start="347:26" pos:end="347:28"><name pos:start="347:26" pos:end="347:28">fdt</name></expr></argument>, <argument pos:start="347:31" pos:end="347:34"><expr pos:start="347:31" pos:end="347:34"><name pos:start="347:31" pos:end="347:34">mpic</name></expr></argument>, <argument pos:start="347:37" pos:end="347:58"><expr pos:start="347:37" pos:end="347:58"><literal type="string" pos:start="347:37" pos:end="347:58">"interrupt-controller"</literal></expr></argument>, <argument pos:start="347:61" pos:end="347:64"><expr pos:start="347:61" pos:end="347:64"><name pos:start="347:61" pos:end="347:64">NULL</name></expr></argument>, <argument pos:start="347:67" pos:end="347:67"><expr pos:start="347:67" pos:end="347:67"><literal type="number" pos:start="347:67" pos:end="347:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="351:5" pos:end="359:7">/*

     * We have to generate ser1 first, because Linux takes the first

     * device it finds in the dt as serial output device. And we generate

     * devices in reverse order to the dt.

     */</comment>

    <expr_stmt pos:start="361:5" pos:end="363:53"><expr pos:start="361:5" pos:end="363:52"><call pos:start="361:5" pos:end="363:52"><name pos:start="361:5" pos:end="361:20">dt_serial_create</name><argument_list pos:start="361:21" pos:end="363:52">(<argument pos:start="361:22" pos:end="361:24"><expr pos:start="361:22" pos:end="361:24"><name pos:start="361:22" pos:end="361:24">fdt</name></expr></argument>, <argument pos:start="361:27" pos:end="361:53"><expr pos:start="361:27" pos:end="361:53"><name pos:start="361:27" pos:end="361:53">MPC8544_SERIAL1_REGS_OFFSET</name></expr></argument>,

                     <argument pos:start="363:22" pos:end="363:24"><expr pos:start="363:22" pos:end="363:24"><name pos:start="363:22" pos:end="363:24">soc</name></expr></argument>, <argument pos:start="363:27" pos:end="363:30"><expr pos:start="363:27" pos:end="363:30"><name pos:start="363:27" pos:end="363:30">mpic</name></expr></argument>, <argument pos:start="363:33" pos:end="363:41"><expr pos:start="363:33" pos:end="363:41"><literal type="string" pos:start="363:33" pos:end="363:41">"serial1"</literal></expr></argument>, <argument pos:start="363:44" pos:end="363:44"><expr pos:start="363:44" pos:end="363:44"><literal type="number" pos:start="363:44" pos:end="363:44">1</literal></expr></argument>, <argument pos:start="363:47" pos:end="363:51"><expr pos:start="363:47" pos:end="363:51"><name pos:start="363:47" pos:end="363:51">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="365:5" pos:end="367:52"><expr pos:start="365:5" pos:end="367:51"><call pos:start="365:5" pos:end="367:51"><name pos:start="365:5" pos:end="365:20">dt_serial_create</name><argument_list pos:start="365:21" pos:end="367:51">(<argument pos:start="365:22" pos:end="365:24"><expr pos:start="365:22" pos:end="365:24"><name pos:start="365:22" pos:end="365:24">fdt</name></expr></argument>, <argument pos:start="365:27" pos:end="365:53"><expr pos:start="365:27" pos:end="365:53"><name pos:start="365:27" pos:end="365:53">MPC8544_SERIAL0_REGS_OFFSET</name></expr></argument>,

                     <argument pos:start="367:22" pos:end="367:24"><expr pos:start="367:22" pos:end="367:24"><name pos:start="367:22" pos:end="367:24">soc</name></expr></argument>, <argument pos:start="367:27" pos:end="367:30"><expr pos:start="367:27" pos:end="367:30"><name pos:start="367:27" pos:end="367:30">mpic</name></expr></argument>, <argument pos:start="367:33" pos:end="367:41"><expr pos:start="367:33" pos:end="367:41"><literal type="string" pos:start="367:33" pos:end="367:41">"serial0"</literal></expr></argument>, <argument pos:start="367:44" pos:end="367:44"><expr pos:start="367:44" pos:end="367:44"><literal type="number" pos:start="367:44" pos:end="367:44">0</literal></expr></argument>, <argument pos:start="367:47" pos:end="367:50"><expr pos:start="367:47" pos:end="367:50"><name pos:start="367:47" pos:end="367:50">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="371:5" pos:end="373:34"><expr pos:start="371:5" pos:end="373:33"><call pos:start="371:5" pos:end="373:33"><name pos:start="371:5" pos:end="371:12">snprintf</name><argument_list pos:start="371:13" pos:end="373:33">(<argument pos:start="371:14" pos:end="371:18"><expr pos:start="371:14" pos:end="371:18"><name pos:start="371:14" pos:end="371:18">gutil</name></expr></argument>, <argument pos:start="371:21" pos:end="371:33"><expr pos:start="371:21" pos:end="371:33"><sizeof pos:start="371:21" pos:end="371:33">sizeof<argument_list pos:start="371:27" pos:end="371:33">(<argument pos:start="371:28" pos:end="371:32"><expr pos:start="371:28" pos:end="371:32"><name pos:start="371:28" pos:end="371:32">gutil</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="371:36" pos:end="371:61"><expr pos:start="371:36" pos:end="371:61"><literal type="string" pos:start="371:36" pos:end="371:61">"%s/global-utilities@%llx"</literal></expr></argument>, <argument pos:start="371:64" pos:end="371:66"><expr pos:start="371:64" pos:end="371:66"><name pos:start="371:64" pos:end="371:66">soc</name></expr></argument>,

             <argument pos:start="373:14" pos:end="373:32"><expr pos:start="373:14" pos:end="373:32"><name pos:start="373:14" pos:end="373:32">MPC8544_UTIL_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="375:5" pos:end="375:41"><expr pos:start="375:5" pos:end="375:40"><call pos:start="375:5" pos:end="375:40"><name pos:start="375:5" pos:end="375:28">qemu_devtree_add_subnode</name><argument_list pos:start="375:29" pos:end="375:40">(<argument pos:start="375:30" pos:end="375:32"><expr pos:start="375:30" pos:end="375:32"><name pos:start="375:30" pos:end="375:32">fdt</name></expr></argument>, <argument pos:start="375:35" pos:end="375:39"><expr pos:start="375:35" pos:end="375:39"><name pos:start="375:35" pos:end="375:39">gutil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="377:5" pos:end="377:78"><expr pos:start="377:5" pos:end="377:77"><call pos:start="377:5" pos:end="377:77"><name pos:start="377:5" pos:end="377:31">qemu_devtree_setprop_string</name><argument_list pos:start="377:32" pos:end="377:77">(<argument pos:start="377:33" pos:end="377:35"><expr pos:start="377:33" pos:end="377:35"><name pos:start="377:33" pos:end="377:35">fdt</name></expr></argument>, <argument pos:start="377:38" pos:end="377:42"><expr pos:start="377:38" pos:end="377:42"><name pos:start="377:38" pos:end="377:42">gutil</name></expr></argument>, <argument pos:start="377:45" pos:end="377:56"><expr pos:start="377:45" pos:end="377:56"><literal type="string" pos:start="377:45" pos:end="377:56">"compatible"</literal></expr></argument>, <argument pos:start="377:59" pos:end="377:76"><expr pos:start="377:59" pos:end="377:76"><literal type="string" pos:start="377:59" pos:end="377:76">"fsl,mpc8544-guts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="379:5" pos:end="379:79"><expr pos:start="379:5" pos:end="379:78"><call pos:start="379:5" pos:end="379:78"><name pos:start="379:5" pos:end="379:30">qemu_devtree_setprop_cells</name><argument_list pos:start="379:31" pos:end="379:78">(<argument pos:start="379:32" pos:end="379:34"><expr pos:start="379:32" pos:end="379:34"><name pos:start="379:32" pos:end="379:34">fdt</name></expr></argument>, <argument pos:start="379:37" pos:end="379:41"><expr pos:start="379:37" pos:end="379:41"><name pos:start="379:37" pos:end="379:41">gutil</name></expr></argument>, <argument pos:start="379:44" pos:end="379:48"><expr pos:start="379:44" pos:end="379:48"><literal type="string" pos:start="379:44" pos:end="379:48">"reg"</literal></expr></argument>, <argument pos:start="379:51" pos:end="379:69"><expr pos:start="379:51" pos:end="379:69"><name pos:start="379:51" pos:end="379:69">MPC8544_UTIL_OFFSET</name></expr></argument>, <argument pos:start="379:72" pos:end="379:77"><expr pos:start="379:72" pos:end="379:77"><literal type="number" pos:start="379:72" pos:end="379:77">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:63"><expr pos:start="381:5" pos:end="381:62"><call pos:start="381:5" pos:end="381:62"><name pos:start="381:5" pos:end="381:24">qemu_devtree_setprop</name><argument_list pos:start="381:25" pos:end="381:62">(<argument pos:start="381:26" pos:end="381:28"><expr pos:start="381:26" pos:end="381:28"><name pos:start="381:26" pos:end="381:28">fdt</name></expr></argument>, <argument pos:start="381:31" pos:end="381:35"><expr pos:start="381:31" pos:end="381:35"><name pos:start="381:31" pos:end="381:35">gutil</name></expr></argument>, <argument pos:start="381:38" pos:end="381:52"><expr pos:start="381:38" pos:end="381:52"><literal type="string" pos:start="381:38" pos:end="381:52">"fsl,has-rstcr"</literal></expr></argument>, <argument pos:start="381:55" pos:end="381:58"><expr pos:start="381:55" pos:end="381:58"><name pos:start="381:55" pos:end="381:58">NULL</name></expr></argument>, <argument pos:start="381:61" pos:end="381:61"><expr pos:start="381:61" pos:end="381:61"><literal type="number" pos:start="381:61" pos:end="381:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="385:5" pos:end="385:77"><expr pos:start="385:5" pos:end="385:76"><call pos:start="385:5" pos:end="385:76"><name pos:start="385:5" pos:end="385:12">snprintf</name><argument_list pos:start="385:13" pos:end="385:76">(<argument pos:start="385:14" pos:end="385:16"><expr pos:start="385:14" pos:end="385:16"><name pos:start="385:14" pos:end="385:16">msi</name></expr></argument>, <argument pos:start="385:19" pos:end="385:29"><expr pos:start="385:19" pos:end="385:29"><sizeof pos:start="385:19" pos:end="385:29">sizeof<argument_list pos:start="385:25" pos:end="385:29">(<argument pos:start="385:26" pos:end="385:28"><expr pos:start="385:26" pos:end="385:28"><name pos:start="385:26" pos:end="385:28">msi</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="385:32" pos:end="385:45"><expr pos:start="385:32" pos:end="385:45"><literal type="string" pos:start="385:32" pos:end="385:45">"/%s/msi@%llx"</literal></expr></argument>, <argument pos:start="385:48" pos:end="385:50"><expr pos:start="385:48" pos:end="385:50"><name pos:start="385:48" pos:end="385:50">soc</name></expr></argument>, <argument pos:start="385:53" pos:end="385:75"><expr pos:start="385:53" pos:end="385:75"><name pos:start="385:53" pos:end="385:75">MPC8544_MSI_REGS_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="387:5" pos:end="387:39"><expr pos:start="387:5" pos:end="387:38"><call pos:start="387:5" pos:end="387:38"><name pos:start="387:5" pos:end="387:28">qemu_devtree_add_subnode</name><argument_list pos:start="387:29" pos:end="387:38">(<argument pos:start="387:30" pos:end="387:32"><expr pos:start="387:30" pos:end="387:32"><name pos:start="387:30" pos:end="387:32">fdt</name></expr></argument>, <argument pos:start="387:35" pos:end="387:37"><expr pos:start="387:35" pos:end="387:37"><name pos:start="387:35" pos:end="387:37">msi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="389:5" pos:end="389:72"><expr pos:start="389:5" pos:end="389:71"><call pos:start="389:5" pos:end="389:71"><name pos:start="389:5" pos:end="389:31">qemu_devtree_setprop_string</name><argument_list pos:start="389:32" pos:end="389:71">(<argument pos:start="389:33" pos:end="389:35"><expr pos:start="389:33" pos:end="389:35"><name pos:start="389:33" pos:end="389:35">fdt</name></expr></argument>, <argument pos:start="389:38" pos:end="389:40"><expr pos:start="389:38" pos:end="389:40"><name pos:start="389:38" pos:end="389:40">msi</name></expr></argument>, <argument pos:start="389:43" pos:end="389:54"><expr pos:start="389:43" pos:end="389:54"><literal type="string" pos:start="389:43" pos:end="389:54">"compatible"</literal></expr></argument>, <argument pos:start="389:57" pos:end="389:70"><expr pos:start="389:57" pos:end="389:70"><literal type="string" pos:start="389:57" pos:end="389:70">"fsl,mpic-msi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="391:5" pos:end="391:80"><expr pos:start="391:5" pos:end="391:79"><call pos:start="391:5" pos:end="391:79"><name pos:start="391:5" pos:end="391:30">qemu_devtree_setprop_cells</name><argument_list pos:start="391:31" pos:end="391:79">(<argument pos:start="391:32" pos:end="391:34"><expr pos:start="391:32" pos:end="391:34"><name pos:start="391:32" pos:end="391:34">fdt</name></expr></argument>, <argument pos:start="391:37" pos:end="391:39"><expr pos:start="391:37" pos:end="391:39"><name pos:start="391:37" pos:end="391:39">msi</name></expr></argument>, <argument pos:start="391:42" pos:end="391:46"><expr pos:start="391:42" pos:end="391:46"><literal type="string" pos:start="391:42" pos:end="391:46">"reg"</literal></expr></argument>, <argument pos:start="391:49" pos:end="391:71"><expr pos:start="391:49" pos:end="391:71"><name pos:start="391:49" pos:end="391:71">MPC8544_MSI_REGS_OFFSET</name></expr></argument>, <argument pos:start="391:74" pos:end="391:78"><expr pos:start="391:74" pos:end="391:78"><literal type="number" pos:start="391:74" pos:end="391:78">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="393:5" pos:end="393:45"><expr pos:start="393:5" pos:end="393:44"><name pos:start="393:5" pos:end="393:10">msi_ph</name> <operator pos:start="393:12" pos:end="393:12">=</operator> <call pos:start="393:14" pos:end="393:44"><name pos:start="393:14" pos:end="393:39">qemu_devtree_alloc_phandle</name><argument_list pos:start="393:40" pos:end="393:44">(<argument pos:start="393:41" pos:end="393:43"><expr pos:start="393:41" pos:end="393:43"><name pos:start="393:41" pos:end="393:43">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:77"><expr pos:start="395:5" pos:end="395:76"><call pos:start="395:5" pos:end="395:76"><name pos:start="395:5" pos:end="395:30">qemu_devtree_setprop_cells</name><argument_list pos:start="395:31" pos:end="395:76">(<argument pos:start="395:32" pos:end="395:34"><expr pos:start="395:32" pos:end="395:34"><name pos:start="395:32" pos:end="395:34">fdt</name></expr></argument>, <argument pos:start="395:37" pos:end="395:39"><expr pos:start="395:37" pos:end="395:39"><name pos:start="395:37" pos:end="395:39">msi</name></expr></argument>, <argument pos:start="395:42" pos:end="395:63"><expr pos:start="395:42" pos:end="395:63"><literal type="string" pos:start="395:42" pos:end="395:63">"msi-available-ranges"</literal></expr></argument>, <argument pos:start="395:66" pos:end="395:68"><expr pos:start="395:66" pos:end="395:68"><literal type="number" pos:start="395:66" pos:end="395:68">0x0</literal></expr></argument>, <argument pos:start="395:71" pos:end="395:75"><expr pos:start="395:71" pos:end="395:75"><literal type="number" pos:start="395:71" pos:end="395:75">0x100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="397:5" pos:end="397:69"><expr pos:start="397:5" pos:end="397:68"><call pos:start="397:5" pos:end="397:68"><name pos:start="397:5" pos:end="397:32">qemu_devtree_setprop_phandle</name><argument_list pos:start="397:33" pos:end="397:68">(<argument pos:start="397:34" pos:end="397:36"><expr pos:start="397:34" pos:end="397:36"><name pos:start="397:34" pos:end="397:36">fdt</name></expr></argument>, <argument pos:start="397:39" pos:end="397:41"><expr pos:start="397:39" pos:end="397:41"><name pos:start="397:39" pos:end="397:41">msi</name></expr></argument>, <argument pos:start="397:44" pos:end="397:61"><expr pos:start="397:44" pos:end="397:61"><literal type="string" pos:start="397:44" pos:end="397:61">"interrupt-parent"</literal></expr></argument>, <argument pos:start="397:64" pos:end="397:67"><expr pos:start="397:64" pos:end="397:67"><name pos:start="397:64" pos:end="397:67">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="399:5" pos:end="415:19"><expr pos:start="399:5" pos:end="415:18"><call pos:start="399:5" pos:end="415:18"><name pos:start="399:5" pos:end="399:30">qemu_devtree_setprop_cells</name><argument_list pos:start="399:31" pos:end="415:18">(<argument pos:start="399:32" pos:end="399:34"><expr pos:start="399:32" pos:end="399:34"><name pos:start="399:32" pos:end="399:34">fdt</name></expr></argument>, <argument pos:start="399:37" pos:end="399:39"><expr pos:start="399:37" pos:end="399:39"><name pos:start="399:37" pos:end="399:39">msi</name></expr></argument>, <argument pos:start="399:42" pos:end="399:53"><expr pos:start="399:42" pos:end="399:53"><literal type="string" pos:start="399:42" pos:end="399:53">"interrupts"</literal></expr></argument>,

        <argument pos:start="401:9" pos:end="401:12"><expr pos:start="401:9" pos:end="401:12"><literal type="number" pos:start="401:9" pos:end="401:12">0xe0</literal></expr></argument>, <argument pos:start="401:15" pos:end="401:17"><expr pos:start="401:15" pos:end="401:17"><literal type="number" pos:start="401:15" pos:end="401:17">0x0</literal></expr></argument>,

        <argument pos:start="403:9" pos:end="403:12"><expr pos:start="403:9" pos:end="403:12"><literal type="number" pos:start="403:9" pos:end="403:12">0xe1</literal></expr></argument>, <argument pos:start="403:15" pos:end="403:17"><expr pos:start="403:15" pos:end="403:17"><literal type="number" pos:start="403:15" pos:end="403:17">0x0</literal></expr></argument>,

        <argument pos:start="405:9" pos:end="405:12"><expr pos:start="405:9" pos:end="405:12"><literal type="number" pos:start="405:9" pos:end="405:12">0xe2</literal></expr></argument>, <argument pos:start="405:15" pos:end="405:17"><expr pos:start="405:15" pos:end="405:17"><literal type="number" pos:start="405:15" pos:end="405:17">0x0</literal></expr></argument>,

        <argument pos:start="407:9" pos:end="407:12"><expr pos:start="407:9" pos:end="407:12"><literal type="number" pos:start="407:9" pos:end="407:12">0xe3</literal></expr></argument>, <argument pos:start="407:15" pos:end="407:17"><expr pos:start="407:15" pos:end="407:17"><literal type="number" pos:start="407:15" pos:end="407:17">0x0</literal></expr></argument>,

        <argument pos:start="409:9" pos:end="409:12"><expr pos:start="409:9" pos:end="409:12"><literal type="number" pos:start="409:9" pos:end="409:12">0xe4</literal></expr></argument>, <argument pos:start="409:15" pos:end="409:17"><expr pos:start="409:15" pos:end="409:17"><literal type="number" pos:start="409:15" pos:end="409:17">0x0</literal></expr></argument>,

        <argument pos:start="411:9" pos:end="411:12"><expr pos:start="411:9" pos:end="411:12"><literal type="number" pos:start="411:9" pos:end="411:12">0xe5</literal></expr></argument>, <argument pos:start="411:15" pos:end="411:17"><expr pos:start="411:15" pos:end="411:17"><literal type="number" pos:start="411:15" pos:end="411:17">0x0</literal></expr></argument>,

        <argument pos:start="413:9" pos:end="413:12"><expr pos:start="413:9" pos:end="413:12"><literal type="number" pos:start="413:9" pos:end="413:12">0xe6</literal></expr></argument>, <argument pos:start="413:15" pos:end="413:17"><expr pos:start="413:15" pos:end="413:17"><literal type="number" pos:start="413:15" pos:end="413:17">0x0</literal></expr></argument>,

        <argument pos:start="415:9" pos:end="415:12"><expr pos:start="415:9" pos:end="415:12"><literal type="number" pos:start="415:9" pos:end="415:12">0xe7</literal></expr></argument>, <argument pos:start="415:15" pos:end="415:17"><expr pos:start="415:15" pos:end="415:17"><literal type="number" pos:start="415:15" pos:end="415:17">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="417:5" pos:end="417:59"><expr pos:start="417:5" pos:end="417:58"><call pos:start="417:5" pos:end="417:58"><name pos:start="417:5" pos:end="417:29">qemu_devtree_setprop_cell</name><argument_list pos:start="417:30" pos:end="417:58">(<argument pos:start="417:31" pos:end="417:33"><expr pos:start="417:31" pos:end="417:33"><name pos:start="417:31" pos:end="417:33">fdt</name></expr></argument>, <argument pos:start="417:36" pos:end="417:38"><expr pos:start="417:36" pos:end="417:38"><name pos:start="417:36" pos:end="417:38">msi</name></expr></argument>, <argument pos:start="417:41" pos:end="417:49"><expr pos:start="417:41" pos:end="417:49"><literal type="string" pos:start="417:41" pos:end="417:49">"phandle"</literal></expr></argument>, <argument pos:start="417:52" pos:end="417:57"><expr pos:start="417:52" pos:end="417:57"><name pos:start="417:52" pos:end="417:57">msi_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="419:5" pos:end="419:65"><expr pos:start="419:5" pos:end="419:64"><call pos:start="419:5" pos:end="419:64"><name pos:start="419:5" pos:end="419:29">qemu_devtree_setprop_cell</name><argument_list pos:start="419:30" pos:end="419:64">(<argument pos:start="419:31" pos:end="419:33"><expr pos:start="419:31" pos:end="419:33"><name pos:start="419:31" pos:end="419:33">fdt</name></expr></argument>, <argument pos:start="419:36" pos:end="419:38"><expr pos:start="419:36" pos:end="419:38"><name pos:start="419:36" pos:end="419:38">msi</name></expr></argument>, <argument pos:start="419:41" pos:end="419:55"><expr pos:start="419:41" pos:end="419:55"><literal type="string" pos:start="419:41" pos:end="419:55">"linux,phandle"</literal></expr></argument>, <argument pos:start="419:58" pos:end="419:63"><expr pos:start="419:58" pos:end="419:63"><name pos:start="419:58" pos:end="419:63">msi_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="423:5" pos:end="423:67"><expr pos:start="423:5" pos:end="423:66"><call pos:start="423:5" pos:end="423:66"><name pos:start="423:5" pos:end="423:12">snprintf</name><argument_list pos:start="423:13" pos:end="423:66">(<argument pos:start="423:14" pos:end="423:16"><expr pos:start="423:14" pos:end="423:16"><name pos:start="423:14" pos:end="423:16">pci</name></expr></argument>, <argument pos:start="423:19" pos:end="423:29"><expr pos:start="423:19" pos:end="423:29"><sizeof pos:start="423:19" pos:end="423:29">sizeof<argument_list pos:start="423:25" pos:end="423:29">(<argument pos:start="423:26" pos:end="423:28"><expr pos:start="423:26" pos:end="423:28"><name pos:start="423:26" pos:end="423:28">pci</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="423:32" pos:end="423:42"><expr pos:start="423:32" pos:end="423:42"><literal type="string" pos:start="423:32" pos:end="423:42">"/pci@%llx"</literal></expr></argument>, <argument pos:start="423:45" pos:end="423:65"><expr pos:start="423:45" pos:end="423:65"><name pos:start="423:45" pos:end="423:65">MPC8544_PCI_REGS_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="425:5" pos:end="425:39"><expr pos:start="425:5" pos:end="425:38"><call pos:start="425:5" pos:end="425:38"><name pos:start="425:5" pos:end="425:28">qemu_devtree_add_subnode</name><argument_list pos:start="425:29" pos:end="425:38">(<argument pos:start="425:30" pos:end="425:32"><expr pos:start="425:30" pos:end="425:32"><name pos:start="425:30" pos:end="425:32">fdt</name></expr></argument>, <argument pos:start="425:35" pos:end="425:37"><expr pos:start="425:35" pos:end="425:37"><name pos:start="425:35" pos:end="425:37">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="427:5" pos:end="427:57"><expr pos:start="427:5" pos:end="427:56"><call pos:start="427:5" pos:end="427:56"><name pos:start="427:5" pos:end="427:29">qemu_devtree_setprop_cell</name><argument_list pos:start="427:30" pos:end="427:56">(<argument pos:start="427:31" pos:end="427:33"><expr pos:start="427:31" pos:end="427:33"><name pos:start="427:31" pos:end="427:33">fdt</name></expr></argument>, <argument pos:start="427:36" pos:end="427:38"><expr pos:start="427:36" pos:end="427:38"><name pos:start="427:36" pos:end="427:38">pci</name></expr></argument>, <argument pos:start="427:41" pos:end="427:52"><expr pos:start="427:41" pos:end="427:52"><literal type="string" pos:start="427:41" pos:end="427:52">"cell-index"</literal></expr></argument>, <argument pos:start="427:55" pos:end="427:55"><expr pos:start="427:55" pos:end="427:55"><literal type="number" pos:start="427:55" pos:end="427:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="429:5" pos:end="429:75"><expr pos:start="429:5" pos:end="429:74"><call pos:start="429:5" pos:end="429:74"><name pos:start="429:5" pos:end="429:31">qemu_devtree_setprop_string</name><argument_list pos:start="429:32" pos:end="429:74">(<argument pos:start="429:33" pos:end="429:35"><expr pos:start="429:33" pos:end="429:35"><name pos:start="429:33" pos:end="429:35">fdt</name></expr></argument>, <argument pos:start="429:38" pos:end="429:40"><expr pos:start="429:38" pos:end="429:40"><name pos:start="429:38" pos:end="429:40">pci</name></expr></argument>, <argument pos:start="429:43" pos:end="429:54"><expr pos:start="429:43" pos:end="429:54"><literal type="string" pos:start="429:43" pos:end="429:54">"compatible"</literal></expr></argument>, <argument pos:start="429:57" pos:end="429:73"><expr pos:start="429:57" pos:end="429:73"><literal type="string" pos:start="429:57" pos:end="429:73">"fsl,mpc8540-pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="431:5" pos:end="431:64"><expr pos:start="431:5" pos:end="431:63"><call pos:start="431:5" pos:end="431:63"><name pos:start="431:5" pos:end="431:31">qemu_devtree_setprop_string</name><argument_list pos:start="431:32" pos:end="431:63">(<argument pos:start="431:33" pos:end="431:35"><expr pos:start="431:33" pos:end="431:35"><name pos:start="431:33" pos:end="431:35">fdt</name></expr></argument>, <argument pos:start="431:38" pos:end="431:40"><expr pos:start="431:38" pos:end="431:40"><name pos:start="431:38" pos:end="431:40">pci</name></expr></argument>, <argument pos:start="431:43" pos:end="431:55"><expr pos:start="431:43" pos:end="431:55"><literal type="string" pos:start="431:43" pos:end="431:55">"device_type"</literal></expr></argument>, <argument pos:start="431:58" pos:end="431:62"><expr pos:start="431:58" pos:end="431:62"><literal type="string" pos:start="431:58" pos:end="431:62">"pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="433:5" pos:end="435:41"><expr pos:start="433:5" pos:end="435:40"><call pos:start="433:5" pos:end="435:40"><name pos:start="433:5" pos:end="433:30">qemu_devtree_setprop_cells</name><argument_list pos:start="433:31" pos:end="435:40">(<argument pos:start="433:32" pos:end="433:34"><expr pos:start="433:32" pos:end="433:34"><name pos:start="433:32" pos:end="433:34">fdt</name></expr></argument>, <argument pos:start="433:37" pos:end="433:39"><expr pos:start="433:37" pos:end="433:39"><name pos:start="433:37" pos:end="433:39">pci</name></expr></argument>, <argument pos:start="433:42" pos:end="433:61"><expr pos:start="433:42" pos:end="433:61"><literal type="string" pos:start="433:42" pos:end="433:61">"interrupt-map-mask"</literal></expr></argument>, <argument pos:start="433:64" pos:end="433:69"><expr pos:start="433:64" pos:end="433:69"><literal type="number" pos:start="433:64" pos:end="433:69">0xf800</literal></expr></argument>, <argument pos:start="433:72" pos:end="433:74"><expr pos:start="433:72" pos:end="433:74"><literal type="number" pos:start="433:72" pos:end="433:74">0x0</literal></expr></argument>,

                               <argument pos:start="435:32" pos:end="435:34"><expr pos:start="435:32" pos:end="435:34"><literal type="number" pos:start="435:32" pos:end="435:34">0x0</literal></expr></argument>, <argument pos:start="435:37" pos:end="435:39"><expr pos:start="435:37" pos:end="435:39"><literal type="number" pos:start="435:37" pos:end="435:39">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="437:5" pos:end="441:35"><expr pos:start="437:5" pos:end="441:34"><name pos:start="437:5" pos:end="437:11">pci_map</name> <operator pos:start="437:13" pos:end="437:13">=</operator> <call pos:start="437:15" pos:end="441:34"><name pos:start="437:15" pos:end="437:28">pci_map_create</name><argument_list pos:start="437:29" pos:end="441:34">(<argument pos:start="437:30" pos:end="437:32"><expr pos:start="437:30" pos:end="437:32"><name pos:start="437:30" pos:end="437:32">fdt</name></expr></argument>, <argument pos:start="437:35" pos:end="437:69"><expr pos:start="437:35" pos:end="437:69"><call pos:start="437:35" pos:end="437:69"><name pos:start="437:35" pos:end="437:58">qemu_devtree_get_phandle</name><argument_list pos:start="437:59" pos:end="437:69">(<argument pos:start="437:60" pos:end="437:62"><expr pos:start="437:60" pos:end="437:62"><name pos:start="437:60" pos:end="437:62">fdt</name></expr></argument>, <argument pos:start="437:65" pos:end="437:68"><expr pos:start="437:65" pos:end="437:68"><name pos:start="437:65" pos:end="437:68">mpic</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="439:30" pos:end="439:51"><expr pos:start="439:30" pos:end="439:51"><name pos:start="439:30" pos:end="439:51"><name pos:start="439:30" pos:end="439:35">params</name><operator pos:start="439:36" pos:end="439:37">-&gt;</operator><name pos:start="439:38" pos:end="439:51">pci_first_slot</name></name></expr></argument>, <argument pos:start="439:54" pos:end="439:73"><expr pos:start="439:54" pos:end="439:73"><name pos:start="439:54" pos:end="439:73"><name pos:start="439:54" pos:end="439:59">params</name><operator pos:start="439:60" pos:end="439:61">-&gt;</operator><name pos:start="439:62" pos:end="439:73">pci_nr_slots</name></name></expr></argument>,

                             <argument pos:start="441:30" pos:end="441:33"><expr pos:start="441:30" pos:end="441:33"><operator pos:start="441:30" pos:end="441:30">&amp;</operator><name pos:start="441:31" pos:end="441:33">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="443:5" pos:end="443:66"><expr pos:start="443:5" pos:end="443:65"><call pos:start="443:5" pos:end="443:65"><name pos:start="443:5" pos:end="443:24">qemu_devtree_setprop</name><argument_list pos:start="443:25" pos:end="443:65">(<argument pos:start="443:26" pos:end="443:28"><expr pos:start="443:26" pos:end="443:28"><name pos:start="443:26" pos:end="443:28">fdt</name></expr></argument>, <argument pos:start="443:31" pos:end="443:33"><expr pos:start="443:31" pos:end="443:33"><name pos:start="443:31" pos:end="443:33">pci</name></expr></argument>, <argument pos:start="443:36" pos:end="443:50"><expr pos:start="443:36" pos:end="443:50"><literal type="string" pos:start="443:36" pos:end="443:50">"interrupt-map"</literal></expr></argument>, <argument pos:start="443:53" pos:end="443:59"><expr pos:start="443:53" pos:end="443:59"><name pos:start="443:53" pos:end="443:59">pci_map</name></expr></argument>, <argument pos:start="443:62" pos:end="443:64"><expr pos:start="443:62" pos:end="443:64"><name pos:start="443:62" pos:end="443:64">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="445:5" pos:end="445:69"><expr pos:start="445:5" pos:end="445:68"><call pos:start="445:5" pos:end="445:68"><name pos:start="445:5" pos:end="445:32">qemu_devtree_setprop_phandle</name><argument_list pos:start="445:33" pos:end="445:68">(<argument pos:start="445:34" pos:end="445:36"><expr pos:start="445:34" pos:end="445:36"><name pos:start="445:34" pos:end="445:36">fdt</name></expr></argument>, <argument pos:start="445:39" pos:end="445:41"><expr pos:start="445:39" pos:end="445:41"><name pos:start="445:39" pos:end="445:41">pci</name></expr></argument>, <argument pos:start="445:44" pos:end="445:61"><expr pos:start="445:44" pos:end="445:61"><literal type="string" pos:start="445:44" pos:end="445:61">"interrupt-parent"</literal></expr></argument>, <argument pos:start="445:64" pos:end="445:67"><expr pos:start="445:64" pos:end="445:67"><name pos:start="445:64" pos:end="445:67">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:62"><expr pos:start="447:5" pos:end="447:61"><call pos:start="447:5" pos:end="447:61"><name pos:start="447:5" pos:end="447:30">qemu_devtree_setprop_cells</name><argument_list pos:start="447:31" pos:end="447:61">(<argument pos:start="447:32" pos:end="447:34"><expr pos:start="447:32" pos:end="447:34"><name pos:start="447:32" pos:end="447:34">fdt</name></expr></argument>, <argument pos:start="447:37" pos:end="447:39"><expr pos:start="447:37" pos:end="447:39"><name pos:start="447:37" pos:end="447:39">pci</name></expr></argument>, <argument pos:start="447:42" pos:end="447:53"><expr pos:start="447:42" pos:end="447:53"><literal type="string" pos:start="447:42" pos:end="447:53">"interrupts"</literal></expr></argument>, <argument pos:start="447:56" pos:end="447:57"><expr pos:start="447:56" pos:end="447:57"><literal type="number" pos:start="447:56" pos:end="447:57">24</literal></expr></argument>, <argument pos:start="447:60" pos:end="447:60"><expr pos:start="447:60" pos:end="447:60"><literal type="number" pos:start="447:60" pos:end="447:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="449:5" pos:end="449:62"><expr pos:start="449:5" pos:end="449:61"><call pos:start="449:5" pos:end="449:61"><name pos:start="449:5" pos:end="449:30">qemu_devtree_setprop_cells</name><argument_list pos:start="449:31" pos:end="449:61">(<argument pos:start="449:32" pos:end="449:34"><expr pos:start="449:32" pos:end="449:34"><name pos:start="449:32" pos:end="449:34">fdt</name></expr></argument>, <argument pos:start="449:37" pos:end="449:39"><expr pos:start="449:37" pos:end="449:39"><name pos:start="449:37" pos:end="449:39">pci</name></expr></argument>, <argument pos:start="449:42" pos:end="449:52"><expr pos:start="449:42" pos:end="449:52"><literal type="string" pos:start="449:42" pos:end="449:52">"bus-range"</literal></expr></argument>, <argument pos:start="449:55" pos:end="449:55"><expr pos:start="449:55" pos:end="449:55"><literal type="number" pos:start="449:55" pos:end="449:55">0</literal></expr></argument>, <argument pos:start="449:58" pos:end="449:60"><expr pos:start="449:58" pos:end="449:60"><literal type="number" pos:start="449:58" pos:end="449:60">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="451:5" pos:end="455:5">for <control pos:start="451:9" pos:end="451:28">(<init pos:start="451:10" pos:end="451:15"><expr pos:start="451:10" pos:end="451:14"><name pos:start="451:10" pos:end="451:10">i</name> <operator pos:start="451:12" pos:end="451:12">=</operator> <literal type="number" pos:start="451:14" pos:end="451:14">0</literal></expr>;</init> <condition pos:start="451:17" pos:end="451:23"><expr pos:start="451:17" pos:end="451:22"><name pos:start="451:17" pos:end="451:17">i</name> <operator pos:start="451:19" pos:end="451:19">&lt;</operator> <literal type="number" pos:start="451:21" pos:end="451:22">14</literal></expr>;</condition> <incr pos:start="451:25" pos:end="451:27"><expr pos:start="451:25" pos:end="451:27"><name pos:start="451:25" pos:end="451:25">i</name><operator pos:start="451:26" pos:end="451:27">++</operator></expr></incr>)</control> <block pos:start="451:30" pos:end="455:5">{<block_content pos:start="453:9" pos:end="453:51">

        <expr_stmt pos:start="453:9" pos:end="453:51"><expr pos:start="453:9" pos:end="453:50"><name pos:start="453:9" pos:end="453:21"><name pos:start="453:9" pos:end="453:18">pci_ranges</name><index pos:start="453:19" pos:end="453:21">[<expr pos:start="453:20" pos:end="453:20"><name pos:start="453:20" pos:end="453:20">i</name></expr>]</index></name> <operator pos:start="453:23" pos:end="453:23">=</operator> <call pos:start="453:25" pos:end="453:50"><name pos:start="453:25" pos:end="453:35">cpu_to_be32</name><argument_list pos:start="453:36" pos:end="453:50">(<argument pos:start="453:37" pos:end="453:49"><expr pos:start="453:37" pos:end="453:49"><name pos:start="453:37" pos:end="453:49"><name pos:start="453:37" pos:end="453:46">pci_ranges</name><index pos:start="453:47" pos:end="453:49">[<expr pos:start="453:48" pos:end="453:48"><name pos:start="453:48" pos:end="453:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="457:5" pos:end="457:59"><expr pos:start="457:5" pos:end="457:58"><call pos:start="457:5" pos:end="457:58"><name pos:start="457:5" pos:end="457:29">qemu_devtree_setprop_cell</name><argument_list pos:start="457:30" pos:end="457:58">(<argument pos:start="457:31" pos:end="457:33"><expr pos:start="457:31" pos:end="457:33"><name pos:start="457:31" pos:end="457:33">fdt</name></expr></argument>, <argument pos:start="457:36" pos:end="457:38"><expr pos:start="457:36" pos:end="457:38"><name pos:start="457:36" pos:end="457:38">pci</name></expr></argument>, <argument pos:start="457:41" pos:end="457:49"><expr pos:start="457:41" pos:end="457:49"><literal type="string" pos:start="457:41" pos:end="457:49">"fsl,msi"</literal></expr></argument>, <argument pos:start="457:52" pos:end="457:57"><expr pos:start="457:52" pos:end="457:57"><name pos:start="457:52" pos:end="457:57">msi_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="459:5" pos:end="459:77"><expr pos:start="459:5" pos:end="459:76"><call pos:start="459:5" pos:end="459:76"><name pos:start="459:5" pos:end="459:24">qemu_devtree_setprop</name><argument_list pos:start="459:25" pos:end="459:76">(<argument pos:start="459:26" pos:end="459:28"><expr pos:start="459:26" pos:end="459:28"><name pos:start="459:26" pos:end="459:28">fdt</name></expr></argument>, <argument pos:start="459:31" pos:end="459:33"><expr pos:start="459:31" pos:end="459:33"><name pos:start="459:31" pos:end="459:33">pci</name></expr></argument>, <argument pos:start="459:36" pos:end="459:43"><expr pos:start="459:36" pos:end="459:43"><literal type="string" pos:start="459:36" pos:end="459:43">"ranges"</literal></expr></argument>, <argument pos:start="459:46" pos:end="459:55"><expr pos:start="459:46" pos:end="459:55"><name pos:start="459:46" pos:end="459:55">pci_ranges</name></expr></argument>, <argument pos:start="459:58" pos:end="459:75"><expr pos:start="459:58" pos:end="459:75"><sizeof pos:start="459:58" pos:end="459:75">sizeof<argument_list pos:start="459:64" pos:end="459:75">(<argument pos:start="459:65" pos:end="459:74"><expr pos:start="459:65" pos:end="459:74"><name pos:start="459:65" pos:end="459:74">pci_ranges</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="461:5" pos:end="463:65"><expr pos:start="461:5" pos:end="463:64"><call pos:start="461:5" pos:end="463:64"><name pos:start="461:5" pos:end="461:30">qemu_devtree_setprop_cells</name><argument_list pos:start="461:31" pos:end="463:64">(<argument pos:start="461:32" pos:end="461:34"><expr pos:start="461:32" pos:end="461:34"><name pos:start="461:32" pos:end="461:34">fdt</name></expr></argument>, <argument pos:start="461:37" pos:end="461:39"><expr pos:start="461:37" pos:end="461:39"><name pos:start="461:37" pos:end="461:39">pci</name></expr></argument>, <argument pos:start="461:42" pos:end="461:46"><expr pos:start="461:42" pos:end="461:46"><literal type="string" pos:start="461:42" pos:end="461:46">"reg"</literal></expr></argument>, <argument pos:start="461:49" pos:end="461:75"><expr pos:start="461:49" pos:end="461:75"><name pos:start="461:49" pos:end="461:69">MPC8544_PCI_REGS_BASE</name> <operator pos:start="461:71" pos:end="461:72">&gt;&gt;</operator> <literal type="number" pos:start="461:74" pos:end="461:75">32</literal></expr></argument>,

                               <argument pos:start="463:32" pos:end="463:52"><expr pos:start="463:32" pos:end="463:52"><name pos:start="463:32" pos:end="463:52">MPC8544_PCI_REGS_BASE</name></expr></argument>, <argument pos:start="463:55" pos:end="463:55"><expr pos:start="463:55" pos:end="463:55"><literal type="number" pos:start="463:55" pos:end="463:55">0</literal></expr></argument>, <argument pos:start="463:58" pos:end="463:63"><expr pos:start="463:58" pos:end="463:63"><literal type="number" pos:start="463:58" pos:end="463:63">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="465:5" pos:end="465:69"><expr pos:start="465:5" pos:end="465:68"><call pos:start="465:5" pos:end="465:68"><name pos:start="465:5" pos:end="465:29">qemu_devtree_setprop_cell</name><argument_list pos:start="465:30" pos:end="465:68">(<argument pos:start="465:31" pos:end="465:33"><expr pos:start="465:31" pos:end="465:33"><name pos:start="465:31" pos:end="465:33">fdt</name></expr></argument>, <argument pos:start="465:36" pos:end="465:38"><expr pos:start="465:36" pos:end="465:38"><name pos:start="465:36" pos:end="465:38">pci</name></expr></argument>, <argument pos:start="465:41" pos:end="465:57"><expr pos:start="465:41" pos:end="465:57"><literal type="string" pos:start="465:41" pos:end="465:57">"clock-frequency"</literal></expr></argument>, <argument pos:start="465:60" pos:end="465:67"><expr pos:start="465:60" pos:end="465:67"><literal type="number" pos:start="465:60" pos:end="465:67">66666666</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="467:5" pos:end="467:63"><expr pos:start="467:5" pos:end="467:62"><call pos:start="467:5" pos:end="467:62"><name pos:start="467:5" pos:end="467:29">qemu_devtree_setprop_cell</name><argument_list pos:start="467:30" pos:end="467:62">(<argument pos:start="467:31" pos:end="467:33"><expr pos:start="467:31" pos:end="467:33"><name pos:start="467:31" pos:end="467:33">fdt</name></expr></argument>, <argument pos:start="467:36" pos:end="467:38"><expr pos:start="467:36" pos:end="467:38"><name pos:start="467:36" pos:end="467:38">pci</name></expr></argument>, <argument pos:start="467:41" pos:end="467:58"><expr pos:start="467:41" pos:end="467:58"><literal type="string" pos:start="467:41" pos:end="467:58">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="467:61" pos:end="467:61"><expr pos:start="467:61" pos:end="467:61"><literal type="number" pos:start="467:61" pos:end="467:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="469:5" pos:end="469:58"><expr pos:start="469:5" pos:end="469:57"><call pos:start="469:5" pos:end="469:57"><name pos:start="469:5" pos:end="469:29">qemu_devtree_setprop_cell</name><argument_list pos:start="469:30" pos:end="469:57">(<argument pos:start="469:31" pos:end="469:33"><expr pos:start="469:31" pos:end="469:33"><name pos:start="469:31" pos:end="469:33">fdt</name></expr></argument>, <argument pos:start="469:36" pos:end="469:38"><expr pos:start="469:36" pos:end="469:38"><name pos:start="469:36" pos:end="469:38">pci</name></expr></argument>, <argument pos:start="469:41" pos:end="469:53"><expr pos:start="469:41" pos:end="469:53"><literal type="string" pos:start="469:41" pos:end="469:53">"#size-cells"</literal></expr></argument>, <argument pos:start="469:56" pos:end="469:56"><expr pos:start="469:56" pos:end="469:56"><literal type="number" pos:start="469:56" pos:end="469:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:61"><expr pos:start="471:5" pos:end="471:60"><call pos:start="471:5" pos:end="471:60"><name pos:start="471:5" pos:end="471:29">qemu_devtree_setprop_cell</name><argument_list pos:start="471:30" pos:end="471:60">(<argument pos:start="471:31" pos:end="471:33"><expr pos:start="471:31" pos:end="471:33"><name pos:start="471:31" pos:end="471:33">fdt</name></expr></argument>, <argument pos:start="471:36" pos:end="471:38"><expr pos:start="471:36" pos:end="471:38"><name pos:start="471:36" pos:end="471:38">pci</name></expr></argument>, <argument pos:start="471:41" pos:end="471:56"><expr pos:start="471:41" pos:end="471:56"><literal type="string" pos:start="471:41" pos:end="471:56">"#address-cells"</literal></expr></argument>, <argument pos:start="471:59" pos:end="471:59"><expr pos:start="471:59" pos:end="471:59"><literal type="number" pos:start="471:59" pos:end="471:59">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="473:5" pos:end="473:62"><expr pos:start="473:5" pos:end="473:61"><call pos:start="473:5" pos:end="473:61"><name pos:start="473:5" pos:end="473:31">qemu_devtree_setprop_string</name><argument_list pos:start="473:32" pos:end="473:61">(<argument pos:start="473:33" pos:end="473:35"><expr pos:start="473:33" pos:end="473:35"><name pos:start="473:33" pos:end="473:35">fdt</name></expr></argument>, <argument pos:start="473:38" pos:end="473:47"><expr pos:start="473:38" pos:end="473:47"><literal type="string" pos:start="473:38" pos:end="473:47">"/aliases"</literal></expr></argument>, <argument pos:start="473:50" pos:end="473:55"><expr pos:start="473:50" pos:end="473:55"><literal type="string" pos:start="473:50" pos:end="473:55">"pci0"</literal></expr></argument>, <argument pos:start="473:58" pos:end="473:60"><expr pos:start="473:58" pos:end="473:60"><name pos:start="473:58" pos:end="473:60">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="477:5" pos:end="477:39"><expr pos:start="477:5" pos:end="477:38"><call pos:start="477:5" pos:end="477:38"><name pos:start="477:5" pos:end="477:25"><name pos:start="477:5" pos:end="477:10">params</name><operator pos:start="477:11" pos:end="477:12">-&gt;</operator><name pos:start="477:13" pos:end="477:25">fixup_devtree</name></name><argument_list pos:start="477:26" pos:end="477:38">(<argument pos:start="477:27" pos:end="477:32"><expr pos:start="477:27" pos:end="477:32"><name pos:start="477:27" pos:end="477:32">params</name></expr></argument>, <argument pos:start="477:35" pos:end="477:37"><expr pos:start="477:35" pos:end="477:37"><name pos:start="477:35" pos:end="477:37">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="481:5" pos:end="487:5"><if pos:start="481:5" pos:end="487:5">if <condition pos:start="481:8" pos:end="481:24">(<expr pos:start="481:9" pos:end="481:23"><name pos:start="481:9" pos:end="481:23">toplevel_compat</name></expr>)</condition> <block pos:start="481:26" pos:end="487:5">{<block_content pos:start="483:9" pos:end="485:58">

        <expr_stmt pos:start="483:9" pos:end="485:58"><expr pos:start="483:9" pos:end="485:57"><call pos:start="483:9" pos:end="485:57"><name pos:start="483:9" pos:end="483:28">qemu_devtree_setprop</name><argument_list pos:start="483:29" pos:end="485:57">(<argument pos:start="483:30" pos:end="483:32"><expr pos:start="483:30" pos:end="483:32"><name pos:start="483:30" pos:end="483:32">fdt</name></expr></argument>, <argument pos:start="483:35" pos:end="483:37"><expr pos:start="483:35" pos:end="483:37"><literal type="string" pos:start="483:35" pos:end="483:37">"/"</literal></expr></argument>, <argument pos:start="483:40" pos:end="483:51"><expr pos:start="483:40" pos:end="483:51"><literal type="string" pos:start="483:40" pos:end="483:51">"compatible"</literal></expr></argument>, <argument pos:start="483:54" pos:end="483:68"><expr pos:start="483:54" pos:end="483:68"><name pos:start="483:54" pos:end="483:68">toplevel_compat</name></expr></argument>,

                             <argument pos:start="485:30" pos:end="485:56"><expr pos:start="485:30" pos:end="485:56"><call pos:start="485:30" pos:end="485:52"><name pos:start="485:30" pos:end="485:35">strlen</name><argument_list pos:start="485:36" pos:end="485:52">(<argument pos:start="485:37" pos:end="485:51"><expr pos:start="485:37" pos:end="485:51"><name pos:start="485:37" pos:end="485:51">toplevel_compat</name></expr></argument>)</argument_list></call> <operator pos:start="485:54" pos:end="485:54">+</operator> <literal type="number" pos:start="485:56" pos:end="485:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="491:1" pos:end="491:5"><name pos:start="491:1" pos:end="491:4">done</name>:</label>

    <expr_stmt pos:start="493:5" pos:end="493:40"><expr pos:start="493:5" pos:end="493:39"><call pos:start="493:5" pos:end="493:39"><name pos:start="493:5" pos:end="493:24">qemu_devtree_dumpdtb</name><argument_list pos:start="493:25" pos:end="493:39">(<argument pos:start="493:26" pos:end="493:28"><expr pos:start="493:26" pos:end="493:28"><name pos:start="493:26" pos:end="493:28">fdt</name></expr></argument>, <argument pos:start="493:31" pos:end="493:38"><expr pos:start="493:31" pos:end="493:38"><name pos:start="493:31" pos:end="493:38">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="495:5" pos:end="495:75"><expr pos:start="495:5" pos:end="495:74"><name pos:start="495:5" pos:end="495:7">ret</name> <operator pos:start="495:9" pos:end="495:9">=</operator> <call pos:start="495:11" pos:end="495:74"><name pos:start="495:11" pos:end="495:28">rom_add_blob_fixed</name><argument_list pos:start="495:29" pos:end="495:74">(<argument pos:start="495:30" pos:end="495:52"><expr pos:start="495:30" pos:end="495:52"><name pos:start="495:30" pos:end="495:52">BINARY_DEVICE_TREE_FILE</name></expr></argument>, <argument pos:start="495:55" pos:end="495:57"><expr pos:start="495:55" pos:end="495:57"><name pos:start="495:55" pos:end="495:57">fdt</name></expr></argument>, <argument pos:start="495:60" pos:end="495:67"><expr pos:start="495:60" pos:end="495:67"><name pos:start="495:60" pos:end="495:67">fdt_size</name></expr></argument>, <argument pos:start="495:70" pos:end="495:73"><expr pos:start="495:70" pos:end="495:73"><name pos:start="495:70" pos:end="495:73">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="497:5" pos:end="501:5"><if pos:start="497:5" pos:end="501:5">if <condition pos:start="497:8" pos:end="497:16">(<expr pos:start="497:9" pos:end="497:15"><name pos:start="497:9" pos:end="497:11">ret</name> <operator pos:start="497:13" pos:end="497:13">&lt;</operator> <literal type="number" pos:start="497:15" pos:end="497:15">0</literal></expr>)</condition> <block pos:start="497:18" pos:end="501:5">{<block_content pos:start="499:9" pos:end="499:17">

        <goto pos:start="499:9" pos:end="499:17">goto <name pos:start="499:14" pos:end="499:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="503:5" pos:end="503:16"><expr pos:start="503:5" pos:end="503:15"><call pos:start="503:5" pos:end="503:15"><name pos:start="503:5" pos:end="503:10">g_free</name><argument_list pos:start="503:11" pos:end="503:15">(<argument pos:start="503:12" pos:end="503:14"><expr pos:start="503:12" pos:end="503:14"><name pos:start="503:12" pos:end="503:14">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="505:5" pos:end="505:19"><expr pos:start="505:5" pos:end="505:18"><name pos:start="505:5" pos:end="505:7">ret</name> <operator pos:start="505:9" pos:end="505:9">=</operator> <name pos:start="505:11" pos:end="505:18">fdt_size</name></expr>;</expr_stmt>



<label pos:start="509:1" pos:end="509:4"><name pos:start="509:1" pos:end="509:3">out</name>:</label>

    <expr_stmt pos:start="511:5" pos:end="511:20"><expr pos:start="511:5" pos:end="511:19"><call pos:start="511:5" pos:end="511:19"><name pos:start="511:5" pos:end="511:10">g_free</name><argument_list pos:start="511:11" pos:end="511:19">(<argument pos:start="511:12" pos:end="511:18"><expr pos:start="511:12" pos:end="511:18"><name pos:start="511:12" pos:end="511:18">pci_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="515:5" pos:end="515:15">return <expr pos:start="515:12" pos:end="515:14"><name pos:start="515:12" pos:end="515:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
