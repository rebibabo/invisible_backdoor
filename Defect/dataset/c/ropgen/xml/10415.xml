<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10415.c" pos:tabs="8"><function pos:start="1:1" pos:end="397:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bmp_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:55">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="397:1">{<block_content pos:start="9:5" pos:end="395:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">BMPContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">s</name> <init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">picture</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:14">p</name> <init pos:start="13:16" pos:end="13:28">= <expr pos:start="13:18" pos:end="13:28"><operator pos:start="13:18" pos:end="13:18">&amp;</operator><name pos:start="13:19" pos:end="13:28"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:28">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:22">fsize</name></decl>, <decl pos:start="15:25" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:25" pos:end="15:29">hsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">width</name></decl>, <decl pos:start="17:16" pos:end="17:21"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:16" pos:end="17:21">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:16">int</name></type> <name pos:start="19:18" pos:end="19:22">depth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:17">BiCompression</name></type> <name pos:start="21:19" pos:end="21:22">comp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:24"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:16">int</name></type> <name pos:start="23:18" pos:end="23:23">ihsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>, <decl pos:start="25:12" pos:end="25:12"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:12">j</name></decl>, <decl pos:start="25:15" pos:end="25:15"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:15" pos:end="25:15">n</name></decl>, <decl pos:start="25:18" pos:end="25:25"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:18" pos:end="25:25">linesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:20"><decl pos:start="27:5" pos:end="27:19"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:19"><name pos:start="27:14" pos:end="27:16">rgb</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:17"><decl pos:start="29:5" pos:end="29:16"><type pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:11">uint8_t</name> <modifier pos:start="29:13" pos:end="29:13">*</modifier></type><name pos:start="29:14" pos:end="29:16">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:14"><decl pos:start="31:5" pos:end="31:13"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:13">dsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:24"><decl pos:start="33:5" pos:end="33:23"><type pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:11">uint8_t</name> <modifier pos:start="33:13" pos:end="33:13">*</modifier></type><name pos:start="33:14" pos:end="33:17">buf0</name> <init pos:start="33:19" pos:end="33:23">= <expr pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:23">buf</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if<condition pos:start="37:7" pos:end="37:21">(<expr pos:start="37:8" pos:end="37:20"><name pos:start="37:8" pos:end="37:15">buf_size</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:20">14</literal></expr>)</condition><block pos:start="37:22" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:18">

        <expr_stmt pos:start="39:9" pos:end="39:75"><expr pos:start="39:9" pos:end="39:74"><call pos:start="39:9" pos:end="39:74"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:74">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:63"><expr pos:start="39:37" pos:end="39:63"><literal type="string" pos:start="39:37" pos:end="39:63">"buf size too small (%d)\n"</literal></expr></argument>, <argument pos:start="39:66" pos:end="39:73"><expr pos:start="39:66" pos:end="39:73"><name pos:start="39:66" pos:end="39:73">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if<condition pos:start="47:7" pos:end="49:40">(<expr pos:start="47:8" pos:end="49:39"><call pos:start="47:8" pos:end="47:32"><name pos:start="47:8" pos:end="47:26">bytestream_get_byte</name><argument_list pos:start="47:27" pos:end="47:32">(<argument pos:start="47:28" pos:end="47:31"><expr pos:start="47:28" pos:end="47:31"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:31">buf</name></expr></argument>)</argument_list></call> <operator pos:start="47:34" pos:end="47:35">!=</operator> <literal type="char" pos:start="47:37" pos:end="47:39">'B'</literal> <operator pos:start="47:41" pos:end="47:42">||</operator>

       <call pos:start="49:8" pos:end="49:32"><name pos:start="49:8" pos:end="49:26">bytestream_get_byte</name><argument_list pos:start="49:27" pos:end="49:32">(<argument pos:start="49:28" pos:end="49:31"><expr pos:start="49:28" pos:end="49:31"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:31">buf</name></expr></argument>)</argument_list></call> <operator pos:start="49:34" pos:end="49:35">!=</operator> <literal type="char" pos:start="49:37" pos:end="49:39">'M'</literal></expr>)</condition> <block pos:start="49:42" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:58"><expr pos:start="51:9" pos:end="51:57"><call pos:start="51:9" pos:end="51:57"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:57">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20">avctx</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:56"><expr pos:start="51:37" pos:end="51:56"><literal type="string" pos:start="51:37" pos:end="51:56">"bad magic number\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:38"><expr pos:start="59:5" pos:end="59:37"><name pos:start="59:5" pos:end="59:9">fsize</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:37"><name pos:start="59:13" pos:end="59:31">bytestream_get_le32</name><argument_list pos:start="59:32" pos:end="59:37">(<argument pos:start="59:33" pos:end="59:36"><expr pos:start="59:33" pos:end="59:36"><operator pos:start="59:33" pos:end="59:33">&amp;</operator><name pos:start="59:34" pos:end="59:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if<condition pos:start="61:7" pos:end="61:24">(<expr pos:start="61:8" pos:end="61:23"><name pos:start="61:8" pos:end="61:15">buf_size</name> <operator pos:start="61:17" pos:end="61:17">&lt;</operator> <name pos:start="61:19" pos:end="61:23">fsize</name></expr>)</condition><block pos:start="61:25" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:18">

        <expr_stmt pos:start="63:9" pos:end="65:32"><expr pos:start="63:9" pos:end="65:31"><call pos:start="63:9" pos:end="65:31"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="65:31">(<argument pos:start="63:16" pos:end="63:20"><expr pos:start="63:16" pos:end="63:20"><name pos:start="63:16" pos:end="63:20">avctx</name></expr></argument>, <argument pos:start="63:23" pos:end="63:34"><expr pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:37" pos:end="63:65"><expr pos:start="63:37" pos:end="63:65"><literal type="string" pos:start="63:37" pos:end="63:65">"not enough data (%d &lt; %d)\n"</literal></expr></argument>,

               <argument pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:23">buf_size</name></expr></argument>, <argument pos:start="65:26" pos:end="65:30"><expr pos:start="65:26" pos:end="65:30"><name pos:start="65:26" pos:end="65:30">fsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:18">return <expr pos:start="67:16" pos:end="67:17"><operator pos:start="67:16" pos:end="67:16">-</operator><literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:13"><expr pos:start="73:5" pos:end="73:12"><name pos:start="73:5" pos:end="73:7">buf</name> <operator pos:start="73:9" pos:end="73:10">+=</operator> <literal type="number" pos:start="73:12" pos:end="73:12">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="73:15" pos:end="73:29">/* reserved1 */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:13"><expr pos:start="75:5" pos:end="75:12"><name pos:start="75:5" pos:end="75:7">buf</name> <operator pos:start="75:9" pos:end="75:10">+=</operator> <literal type="number" pos:start="75:12" pos:end="75:12">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="75:15" pos:end="75:29">/* reserved2 */</comment>



    <expr_stmt pos:start="79:5" pos:end="79:38"><expr pos:start="79:5" pos:end="79:37"><name pos:start="79:5" pos:end="79:9">hsize</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <call pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:31">bytestream_get_le32</name><argument_list pos:start="79:32" pos:end="79:37">(<argument pos:start="79:33" pos:end="79:36"><expr pos:start="79:33" pos:end="79:36"><operator pos:start="79:33" pos:end="79:33">&amp;</operator><name pos:start="79:34" pos:end="79:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:40" pos:end="79:56">/* header size */</comment>

    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if<condition pos:start="81:7" pos:end="81:22">(<expr pos:start="81:8" pos:end="81:21"><name pos:start="81:8" pos:end="81:12">fsize</name> <operator pos:start="81:14" pos:end="81:15">&lt;=</operator> <name pos:start="81:17" pos:end="81:21">hsize</name></expr>)</condition><block pos:start="81:23" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:18">

        <expr_stmt pos:start="83:9" pos:end="85:29"><expr pos:start="83:9" pos:end="85:28"><call pos:start="83:9" pos:end="85:28"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="85:28">(<argument pos:start="83:16" pos:end="83:20"><expr pos:start="83:16" pos:end="83:20"><name pos:start="83:16" pos:end="83:20">avctx</name></expr></argument>, <argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:37" pos:end="83:65"><expr pos:start="83:37" pos:end="83:65"><literal type="string" pos:start="83:37" pos:end="83:65">"not enough data (%d &lt; %d)\n"</literal></expr></argument>,

               <argument pos:start="85:16" pos:end="85:20"><expr pos:start="85:16" pos:end="85:20"><name pos:start="85:16" pos:end="85:20">fsize</name></expr></argument>, <argument pos:start="85:23" pos:end="85:27"><expr pos:start="85:23" pos:end="85:27"><name pos:start="85:23" pos:end="85:27">hsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:18">return <expr pos:start="87:16" pos:end="87:17"><operator pos:start="87:16" pos:end="87:16">-</operator><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:39"><expr pos:start="93:5" pos:end="93:38"><name pos:start="93:5" pos:end="93:10">ihsize</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <call pos:start="93:14" pos:end="93:38"><name pos:start="93:14" pos:end="93:32">bytestream_get_le32</name><argument_list pos:start="93:33" pos:end="93:38">(<argument pos:start="93:34" pos:end="93:37"><expr pos:start="93:34" pos:end="93:37"><operator pos:start="93:34" pos:end="93:34">&amp;</operator><name pos:start="93:35" pos:end="93:37">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="93:47" pos:end="93:68">/* more header size */</comment>

    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if<condition pos:start="95:7" pos:end="95:27">(<expr pos:start="95:8" pos:end="95:26"><name pos:start="95:8" pos:end="95:13">ihsize</name> <operator pos:start="95:15" pos:end="95:15">+</operator> <literal type="number" pos:start="95:17" pos:end="95:18">14</literal> <operator pos:start="95:20" pos:end="95:20">&gt;</operator> <name pos:start="95:22" pos:end="95:26">hsize</name></expr>)</condition><block pos:start="95:28" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:18">

        <expr_stmt pos:start="97:9" pos:end="97:71"><expr pos:start="97:9" pos:end="97:70"><call pos:start="97:9" pos:end="97:70"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="97:70">(<argument pos:start="97:16" pos:end="97:20"><expr pos:start="97:16" pos:end="97:20"><name pos:start="97:16" pos:end="97:20">avctx</name></expr></argument>, <argument pos:start="97:23" pos:end="97:34"><expr pos:start="97:23" pos:end="97:34"><name pos:start="97:23" pos:end="97:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:37" pos:end="97:62"><expr pos:start="97:37" pos:end="97:62"><literal type="string" pos:start="97:37" pos:end="97:62">"invalid header size %d\n"</literal></expr></argument>, <argument pos:start="97:65" pos:end="97:69"><expr pos:start="97:65" pos:end="97:69"><name pos:start="97:65" pos:end="97:69">hsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:18">return <expr pos:start="99:16" pos:end="99:17"><operator pos:start="99:16" pos:end="99:16">-</operator><literal type="number" pos:start="99:17" pos:end="99:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:38"><expr pos:start="105:5" pos:end="105:37"><name pos:start="105:5" pos:end="105:9">width</name> <operator pos:start="105:11" pos:end="105:11">=</operator> <call pos:start="105:13" pos:end="105:37"><name pos:start="105:13" pos:end="105:31">bytestream_get_le32</name><argument_list pos:start="105:32" pos:end="105:37">(<argument pos:start="105:33" pos:end="105:36"><expr pos:start="105:33" pos:end="105:36"><operator pos:start="105:33" pos:end="105:33">&amp;</operator><name pos:start="105:34" pos:end="105:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:39"><expr pos:start="107:5" pos:end="107:38"><name pos:start="107:5" pos:end="107:10">height</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <call pos:start="107:14" pos:end="107:38"><name pos:start="107:14" pos:end="107:32">bytestream_get_le32</name><argument_list pos:start="107:33" pos:end="107:38">(<argument pos:start="107:34" pos:end="107:37"><expr pos:start="107:34" pos:end="107:37"><operator pos:start="107:34" pos:end="107:34">&amp;</operator><name pos:start="107:35" pos:end="107:37">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="117:5"><if pos:start="111:5" pos:end="117:5">if<condition pos:start="111:7" pos:end="111:38">(<expr pos:start="111:8" pos:end="111:37"><call pos:start="111:8" pos:end="111:32"><name pos:start="111:8" pos:end="111:26">bytestream_get_le16</name><argument_list pos:start="111:27" pos:end="111:32">(<argument pos:start="111:28" pos:end="111:31"><expr pos:start="111:28" pos:end="111:31"><operator pos:start="111:28" pos:end="111:28">&amp;</operator><name pos:start="111:29" pos:end="111:31">buf</name></expr></argument>)</argument_list></call> <operator pos:start="111:34" pos:end="111:35">!=</operator> <literal type="number" pos:start="111:37" pos:end="111:37">1</literal></expr>)</condition><block pos:start="111:39" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:18"> <comment type="block" pos:start="111:41" pos:end="111:52">/* planes */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:60"><expr pos:start="113:9" pos:end="113:59"><call pos:start="113:9" pos:end="113:59"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="113:59">(<argument pos:start="113:16" pos:end="113:20"><expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20">avctx</name></expr></argument>, <argument pos:start="113:23" pos:end="113:34"><expr pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:37" pos:end="113:58"><expr pos:start="113:37" pos:end="113:58"><literal type="string" pos:start="113:37" pos:end="113:58">"invalid BMP header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:18">return <expr pos:start="115:16" pos:end="115:17"><operator pos:start="115:16" pos:end="115:16">-</operator><literal type="number" pos:start="115:17" pos:end="115:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:38"><expr pos:start="121:5" pos:end="121:37"><name pos:start="121:5" pos:end="121:9">depth</name> <operator pos:start="121:11" pos:end="121:11">=</operator> <call pos:start="121:13" pos:end="121:37"><name pos:start="121:13" pos:end="121:31">bytestream_get_le16</name><argument_list pos:start="121:32" pos:end="121:37">(<argument pos:start="121:33" pos:end="121:36"><expr pos:start="121:33" pos:end="121:36"><operator pos:start="121:33" pos:end="121:33">&amp;</operator><name pos:start="121:34" pos:end="121:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="125:5" pos:end="131:23"><if pos:start="125:5" pos:end="127:41">if<condition pos:start="125:7" pos:end="125:19">(<expr pos:start="125:8" pos:end="125:18"><name pos:start="125:8" pos:end="125:13">ihsize</name> <operator pos:start="125:15" pos:end="125:15">&gt;</operator> <literal type="number" pos:start="125:17" pos:end="125:18">16</literal></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:41"><block_content pos:start="127:9" pos:end="127:41">

        <expr_stmt pos:start="127:9" pos:end="127:41"><expr pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:12">comp</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <call pos:start="127:16" pos:end="127:40"><name pos:start="127:16" pos:end="127:34">bytestream_get_le32</name><argument_list pos:start="127:35" pos:end="127:40">(<argument pos:start="127:36" pos:end="127:39"><expr pos:start="127:36" pos:end="127:39"><operator pos:start="127:36" pos:end="127:36">&amp;</operator><name pos:start="127:37" pos:end="127:39">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="129:5" pos:end="131:23">else<block type="pseudo" pos:start="131:9" pos:end="131:23"><block_content pos:start="131:9" pos:end="131:23">

        <expr_stmt pos:start="131:9" pos:end="131:23"><expr pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:12">comp</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <name pos:start="131:16" pos:end="131:22">BMP_RGB</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="135:5" pos:end="141:5"><if pos:start="135:5" pos:end="141:5">if<condition pos:start="135:7" pos:end="135:48">(<expr pos:start="135:8" pos:end="135:47"><name pos:start="135:8" pos:end="135:11">comp</name> <operator pos:start="135:13" pos:end="135:14">!=</operator> <name pos:start="135:16" pos:end="135:22">BMP_RGB</name> <operator pos:start="135:24" pos:end="135:25">&amp;&amp;</operator> <name pos:start="135:27" pos:end="135:30">comp</name> <operator pos:start="135:32" pos:end="135:33">!=</operator> <name pos:start="135:35" pos:end="135:47">BMP_BITFIELDS</name></expr>)</condition><block pos:start="135:49" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:18">

        <expr_stmt pos:start="137:9" pos:end="137:75"><expr pos:start="137:9" pos:end="137:74"><call pos:start="137:9" pos:end="137:74"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="137:74">(<argument pos:start="137:16" pos:end="137:20"><expr pos:start="137:16" pos:end="137:20"><name pos:start="137:16" pos:end="137:20">avctx</name></expr></argument>, <argument pos:start="137:23" pos:end="137:34"><expr pos:start="137:23" pos:end="137:34"><name pos:start="137:23" pos:end="137:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:37" pos:end="137:67"><expr pos:start="137:37" pos:end="137:67"><literal type="string" pos:start="137:37" pos:end="137:67">"BMP coding %d not supported\n"</literal></expr></argument>, <argument pos:start="137:70" pos:end="137:73"><expr pos:start="137:70" pos:end="137:73"><name pos:start="137:70" pos:end="137:73">comp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="139:9" pos:end="139:18">return <expr pos:start="139:16" pos:end="139:17"><operator pos:start="139:16" pos:end="139:16">-</operator><literal type="number" pos:start="139:17" pos:end="139:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="145:5" pos:end="155:5"><if pos:start="145:5" pos:end="155:5">if<condition pos:start="145:7" pos:end="145:29">(<expr pos:start="145:8" pos:end="145:28"><name pos:start="145:8" pos:end="145:11">comp</name> <operator pos:start="145:13" pos:end="145:14">==</operator> <name pos:start="145:16" pos:end="145:28">BMP_BITFIELDS</name></expr>)</condition><block pos:start="145:30" pos:end="155:5">{<block_content pos:start="147:9" pos:end="153:43">

        <expr_stmt pos:start="147:9" pos:end="147:18"><expr pos:start="147:9" pos:end="147:17"><name pos:start="147:9" pos:end="147:11">buf</name> <operator pos:start="147:13" pos:end="147:14">+=</operator> <literal type="number" pos:start="147:16" pos:end="147:17">20</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:43"><expr pos:start="149:9" pos:end="149:42"><name pos:start="149:9" pos:end="149:14"><name pos:start="149:9" pos:end="149:11">rgb</name><index pos:start="149:12" pos:end="149:14">[<expr pos:start="149:13" pos:end="149:13"><literal type="number" pos:start="149:13" pos:end="149:13">0</literal></expr>]</index></name> <operator pos:start="149:16" pos:end="149:16">=</operator> <call pos:start="149:18" pos:end="149:42"><name pos:start="149:18" pos:end="149:36">bytestream_get_le32</name><argument_list pos:start="149:37" pos:end="149:42">(<argument pos:start="149:38" pos:end="149:41"><expr pos:start="149:38" pos:end="149:41"><operator pos:start="149:38" pos:end="149:38">&amp;</operator><name pos:start="149:39" pos:end="149:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:43"><expr pos:start="151:9" pos:end="151:42"><name pos:start="151:9" pos:end="151:14"><name pos:start="151:9" pos:end="151:11">rgb</name><index pos:start="151:12" pos:end="151:14">[<expr pos:start="151:13" pos:end="151:13"><literal type="number" pos:start="151:13" pos:end="151:13">1</literal></expr>]</index></name> <operator pos:start="151:16" pos:end="151:16">=</operator> <call pos:start="151:18" pos:end="151:42"><name pos:start="151:18" pos:end="151:36">bytestream_get_le32</name><argument_list pos:start="151:37" pos:end="151:42">(<argument pos:start="151:38" pos:end="151:41"><expr pos:start="151:38" pos:end="151:41"><operator pos:start="151:38" pos:end="151:38">&amp;</operator><name pos:start="151:39" pos:end="151:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:43"><expr pos:start="153:9" pos:end="153:42"><name pos:start="153:9" pos:end="153:14"><name pos:start="153:9" pos:end="153:11">rgb</name><index pos:start="153:12" pos:end="153:14">[<expr pos:start="153:13" pos:end="153:13"><literal type="number" pos:start="153:13" pos:end="153:13">2</literal></expr>]</index></name> <operator pos:start="153:16" pos:end="153:16">=</operator> <call pos:start="153:18" pos:end="153:42"><name pos:start="153:18" pos:end="153:36">bytestream_get_le32</name><argument_list pos:start="153:37" pos:end="153:42">(<argument pos:start="153:38" pos:end="153:41"><expr pos:start="153:38" pos:end="153:41"><operator pos:start="153:38" pos:end="153:38">&amp;</operator><name pos:start="153:39" pos:end="153:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:35"><expr pos:start="159:5" pos:end="159:34"><name pos:start="159:5" pos:end="159:19"><name pos:start="159:5" pos:end="159:9">avctx</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:19">codec_id</name></name> <operator pos:start="159:21" pos:end="159:21">=</operator> <name pos:start="159:23" pos:end="159:34">CODEC_ID_BMP</name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:25"><expr pos:start="161:5" pos:end="161:24"><name pos:start="161:5" pos:end="161:16"><name pos:start="161:5" pos:end="161:9">avctx</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:16">width</name></name> <operator pos:start="161:18" pos:end="161:18">=</operator> <name pos:start="161:20" pos:end="161:24">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:48"><expr pos:start="163:5" pos:end="163:47"><name pos:start="163:5" pos:end="163:17"><name pos:start="163:5" pos:end="163:9">avctx</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:17">height</name></name> <operator pos:start="163:19" pos:end="163:19">=</operator> <ternary pos:start="163:21" pos:end="163:47"><condition pos:start="163:21" pos:end="163:31"><expr pos:start="163:21" pos:end="163:30"><name pos:start="163:21" pos:end="163:26">height</name> <operator pos:start="163:28" pos:end="163:28">&gt;</operator> <literal type="number" pos:start="163:30" pos:end="163:30">0</literal></expr>?</condition><then pos:start="163:33" pos:end="163:38"> <expr pos:start="163:33" pos:end="163:38"><name pos:start="163:33" pos:end="163:38">height</name></expr></then><else pos:start="163:39" pos:end="163:47">: <expr pos:start="163:41" pos:end="163:47"><operator pos:start="163:41" pos:end="163:41">-</operator><name pos:start="163:42" pos:end="163:47">height</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:34"><expr pos:start="167:5" pos:end="167:33"><name pos:start="167:5" pos:end="167:18"><name pos:start="167:5" pos:end="167:9">avctx</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:18">pix_fmt</name></name> <operator pos:start="167:20" pos:end="167:20">=</operator> <name pos:start="167:22" pos:end="167:33">PIX_FMT_NONE</name></expr>;</expr_stmt>



    <switch pos:start="171:5" pos:end="229:5">switch<condition pos:start="171:11" pos:end="171:17">(<expr pos:start="171:12" pos:end="171:16"><name pos:start="171:12" pos:end="171:16">depth</name></expr>)</condition><block pos:start="171:18" pos:end="229:5">{<block_content pos:start="173:5" pos:end="227:18">

    <case pos:start="173:5" pos:end="173:12">case <expr pos:start="173:10" pos:end="173:11"><literal type="number" pos:start="173:10" pos:end="173:11">32</literal></expr>:</case>

        <if_stmt pos:start="175:9" pos:end="201:9"><if pos:start="175:9" pos:end="193:9">if<condition pos:start="175:11" pos:end="175:33">(<expr pos:start="175:12" pos:end="175:32"><name pos:start="175:12" pos:end="175:15">comp</name> <operator pos:start="175:17" pos:end="175:18">==</operator> <name pos:start="175:20" pos:end="175:32">BMP_BITFIELDS</name></expr>)</condition><block pos:start="175:34" pos:end="193:9">{<block_content pos:start="177:13" pos:end="191:13">

            <expr_stmt pos:start="177:13" pos:end="177:40"><expr pos:start="177:13" pos:end="177:39"><name pos:start="177:13" pos:end="177:18"><name pos:start="177:13" pos:end="177:15">rgb</name><index pos:start="177:16" pos:end="177:18">[<expr pos:start="177:17" pos:end="177:17"><literal type="number" pos:start="177:17" pos:end="177:17">0</literal></expr>]</index></name> <operator pos:start="177:20" pos:end="177:20">=</operator> <operator pos:start="177:22" pos:end="177:22">(</operator><name pos:start="177:23" pos:end="177:28"><name pos:start="177:23" pos:end="177:25">rgb</name><index pos:start="177:26" pos:end="177:28">[<expr pos:start="177:27" pos:end="177:27"><literal type="number" pos:start="177:27" pos:end="177:27">0</literal></expr>]</index></name> <operator pos:start="177:30" pos:end="177:31">&gt;&gt;</operator> <literal type="number" pos:start="177:33" pos:end="177:34">15</literal><operator pos:start="177:35" pos:end="177:35">)</operator> <operator pos:start="177:37" pos:end="177:37">&amp;</operator> <literal type="number" pos:start="177:39" pos:end="177:39">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:40"><expr pos:start="179:13" pos:end="179:39"><name pos:start="179:13" pos:end="179:18"><name pos:start="179:13" pos:end="179:15">rgb</name><index pos:start="179:16" pos:end="179:18">[<expr pos:start="179:17" pos:end="179:17"><literal type="number" pos:start="179:17" pos:end="179:17">1</literal></expr>]</index></name> <operator pos:start="179:20" pos:end="179:20">=</operator> <operator pos:start="179:22" pos:end="179:22">(</operator><name pos:start="179:23" pos:end="179:28"><name pos:start="179:23" pos:end="179:25">rgb</name><index pos:start="179:26" pos:end="179:28">[<expr pos:start="179:27" pos:end="179:27"><literal type="number" pos:start="179:27" pos:end="179:27">1</literal></expr>]</index></name> <operator pos:start="179:30" pos:end="179:31">&gt;&gt;</operator> <literal type="number" pos:start="179:33" pos:end="179:34">15</literal><operator pos:start="179:35" pos:end="179:35">)</operator> <operator pos:start="179:37" pos:end="179:37">&amp;</operator> <literal type="number" pos:start="179:39" pos:end="179:39">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:40"><expr pos:start="181:13" pos:end="181:39"><name pos:start="181:13" pos:end="181:18"><name pos:start="181:13" pos:end="181:15">rgb</name><index pos:start="181:16" pos:end="181:18">[<expr pos:start="181:17" pos:end="181:17"><literal type="number" pos:start="181:17" pos:end="181:17">2</literal></expr>]</index></name> <operator pos:start="181:20" pos:end="181:20">=</operator> <operator pos:start="181:22" pos:end="181:22">(</operator><name pos:start="181:23" pos:end="181:28"><name pos:start="181:23" pos:end="181:25">rgb</name><index pos:start="181:26" pos:end="181:28">[<expr pos:start="181:27" pos:end="181:27"><literal type="number" pos:start="181:27" pos:end="181:27">2</literal></expr>]</index></name> <operator pos:start="181:30" pos:end="181:31">&gt;&gt;</operator> <literal type="number" pos:start="181:33" pos:end="181:34">15</literal><operator pos:start="181:35" pos:end="181:35">)</operator> <operator pos:start="181:37" pos:end="181:37">&amp;</operator> <literal type="number" pos:start="181:39" pos:end="181:39">3</literal></expr>;</expr_stmt>



            <if_stmt pos:start="185:13" pos:end="191:13"><if pos:start="185:13" pos:end="191:13">if<condition pos:start="185:15" pos:end="187:72">(<expr pos:start="185:16" pos:end="187:71"><name pos:start="185:16" pos:end="185:21"><name pos:start="185:16" pos:end="185:18">rgb</name><index pos:start="185:19" pos:end="185:21">[<expr pos:start="185:20" pos:end="185:20"><literal type="number" pos:start="185:20" pos:end="185:20">0</literal></expr>]</index></name> <operator pos:start="185:23" pos:end="185:23">+</operator> <name pos:start="185:25" pos:end="185:30"><name pos:start="185:25" pos:end="185:27">rgb</name><index pos:start="185:28" pos:end="185:30">[<expr pos:start="185:29" pos:end="185:29"><literal type="number" pos:start="185:29" pos:end="185:29">1</literal></expr>]</index></name> <operator pos:start="185:32" pos:end="185:32">+</operator> <name pos:start="185:34" pos:end="185:39"><name pos:start="185:34" pos:end="185:36">rgb</name><index pos:start="185:37" pos:end="185:39">[<expr pos:start="185:38" pos:end="185:38"><literal type="number" pos:start="185:38" pos:end="185:38">2</literal></expr>]</index></name> <operator pos:start="185:41" pos:end="185:42">!=</operator> <literal type="number" pos:start="185:44" pos:end="185:44">3</literal> <operator pos:start="185:46" pos:end="185:47">||</operator>

               <name pos:start="187:16" pos:end="187:21"><name pos:start="187:16" pos:end="187:18">rgb</name><index pos:start="187:19" pos:end="187:21">[<expr pos:start="187:20" pos:end="187:20"><literal type="number" pos:start="187:20" pos:end="187:20">0</literal></expr>]</index></name> <operator pos:start="187:23" pos:end="187:24">==</operator> <name pos:start="187:26" pos:end="187:31"><name pos:start="187:26" pos:end="187:28">rgb</name><index pos:start="187:29" pos:end="187:31">[<expr pos:start="187:30" pos:end="187:30"><literal type="number" pos:start="187:30" pos:end="187:30">1</literal></expr>]</index></name> <operator pos:start="187:33" pos:end="187:34">||</operator> <name pos:start="187:36" pos:end="187:41"><name pos:start="187:36" pos:end="187:38">rgb</name><index pos:start="187:39" pos:end="187:41">[<expr pos:start="187:40" pos:end="187:40"><literal type="number" pos:start="187:40" pos:end="187:40">0</literal></expr>]</index></name> <operator pos:start="187:43" pos:end="187:44">==</operator> <name pos:start="187:46" pos:end="187:51"><name pos:start="187:46" pos:end="187:48">rgb</name><index pos:start="187:49" pos:end="187:51">[<expr pos:start="187:50" pos:end="187:50"><literal type="number" pos:start="187:50" pos:end="187:50">2</literal></expr>]</index></name> <operator pos:start="187:53" pos:end="187:54">||</operator> <name pos:start="187:56" pos:end="187:61"><name pos:start="187:56" pos:end="187:58">rgb</name><index pos:start="187:59" pos:end="187:61">[<expr pos:start="187:60" pos:end="187:60"><literal type="number" pos:start="187:60" pos:end="187:60">1</literal></expr>]</index></name> <operator pos:start="187:63" pos:end="187:64">==</operator> <name pos:start="187:66" pos:end="187:71"><name pos:start="187:66" pos:end="187:68">rgb</name><index pos:start="187:69" pos:end="187:71">[<expr pos:start="187:70" pos:end="187:70"><literal type="number" pos:start="187:70" pos:end="187:70">2</literal></expr>]</index></name></expr>)</condition><block pos:start="187:73" pos:end="191:13">{<block_content pos:start="189:17" pos:end="189:22">

                <break pos:start="189:17" pos:end="189:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="193:11" pos:end="201:9">else <block pos:start="193:16" pos:end="201:9">{<block_content pos:start="195:13" pos:end="199:23">

            <expr_stmt pos:start="195:13" pos:end="195:23"><expr pos:start="195:13" pos:end="195:22"><name pos:start="195:13" pos:end="195:18"><name pos:start="195:13" pos:end="195:15">rgb</name><index pos:start="195:16" pos:end="195:18">[<expr pos:start="195:17" pos:end="195:17"><literal type="number" pos:start="195:17" pos:end="195:17">0</literal></expr>]</index></name> <operator pos:start="195:20" pos:end="195:20">=</operator> <literal type="number" pos:start="195:22" pos:end="195:22">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:23"><expr pos:start="197:13" pos:end="197:22"><name pos:start="197:13" pos:end="197:18"><name pos:start="197:13" pos:end="197:15">rgb</name><index pos:start="197:16" pos:end="197:18">[<expr pos:start="197:17" pos:end="197:17"><literal type="number" pos:start="197:17" pos:end="197:17">1</literal></expr>]</index></name> <operator pos:start="197:20" pos:end="197:20">=</operator> <literal type="number" pos:start="197:22" pos:end="197:22">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:23"><expr pos:start="199:13" pos:end="199:22"><name pos:start="199:13" pos:end="199:18"><name pos:start="199:13" pos:end="199:15">rgb</name><index pos:start="199:16" pos:end="199:18">[<expr pos:start="199:17" pos:end="199:17"><literal type="number" pos:start="199:17" pos:end="199:17">2</literal></expr>]</index></name> <operator pos:start="199:20" pos:end="199:20">=</operator> <literal type="number" pos:start="199:22" pos:end="199:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="205:9" pos:end="205:39"><expr pos:start="205:9" pos:end="205:38"><name pos:start="205:9" pos:end="205:22"><name pos:start="205:9" pos:end="205:13">avctx</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:22">pix_fmt</name></name> <operator pos:start="205:24" pos:end="205:24">=</operator> <name pos:start="205:26" pos:end="205:38">PIX_FMT_BGR24</name></expr>;</expr_stmt>

        <break pos:start="207:9" pos:end="207:14">break;</break>

    <case pos:start="209:5" pos:end="209:12">case <expr pos:start="209:10" pos:end="209:11"><literal type="number" pos:start="209:10" pos:end="209:11">24</literal></expr>:</case>

        <expr_stmt pos:start="211:9" pos:end="211:39"><expr pos:start="211:9" pos:end="211:38"><name pos:start="211:9" pos:end="211:22"><name pos:start="211:9" pos:end="211:13">avctx</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:22">pix_fmt</name></name> <operator pos:start="211:24" pos:end="211:24">=</operator> <name pos:start="211:26" pos:end="211:38">PIX_FMT_BGR24</name></expr>;</expr_stmt>

        <break pos:start="213:9" pos:end="213:14">break;</break>

    <case pos:start="215:5" pos:end="215:12">case <expr pos:start="215:10" pos:end="215:11"><literal type="number" pos:start="215:10" pos:end="215:11">16</literal></expr>:</case>

        <if_stmt pos:start="217:9" pos:end="219:44"><if pos:start="217:9" pos:end="219:44">if<condition pos:start="217:11" pos:end="217:27">(<expr pos:start="217:12" pos:end="217:26"><name pos:start="217:12" pos:end="217:15">comp</name> <operator pos:start="217:17" pos:end="217:18">==</operator> <name pos:start="217:20" pos:end="217:26">BMP_RGB</name></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="219:44"><block_content pos:start="219:13" pos:end="219:44">

            <expr_stmt pos:start="219:13" pos:end="219:44"><expr pos:start="219:13" pos:end="219:43"><name pos:start="219:13" pos:end="219:26"><name pos:start="219:13" pos:end="219:17">avctx</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:26">pix_fmt</name></name> <operator pos:start="219:28" pos:end="219:28">=</operator> <name pos:start="219:30" pos:end="219:43">PIX_FMT_RGB555</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="221:9" pos:end="221:14">break;</break>

    <default pos:start="223:5" pos:end="223:12">default:</default>

        <expr_stmt pos:start="225:9" pos:end="225:71"><expr pos:start="225:9" pos:end="225:70"><call pos:start="225:9" pos:end="225:70"><name pos:start="225:9" pos:end="225:14">av_log</name><argument_list pos:start="225:15" pos:end="225:70">(<argument pos:start="225:16" pos:end="225:20"><expr pos:start="225:16" pos:end="225:20"><name pos:start="225:16" pos:end="225:20">avctx</name></expr></argument>, <argument pos:start="225:23" pos:end="225:34"><expr pos:start="225:23" pos:end="225:34"><name pos:start="225:23" pos:end="225:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="225:37" pos:end="225:62"><expr pos:start="225:37" pos:end="225:62"><literal type="string" pos:start="225:37" pos:end="225:62">"depth %d not supported\n"</literal></expr></argument>, <argument pos:start="225:65" pos:end="225:69"><expr pos:start="225:65" pos:end="225:69"><name pos:start="225:65" pos:end="225:69">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="227:9" pos:end="227:18">return <expr pos:start="227:16" pos:end="227:17"><operator pos:start="227:16" pos:end="227:16">-</operator><literal type="number" pos:start="227:17" pos:end="227:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="233:5" pos:end="239:5"><if pos:start="233:5" pos:end="239:5">if<condition pos:start="233:7" pos:end="233:38">(<expr pos:start="233:8" pos:end="233:37"><name pos:start="233:8" pos:end="233:21"><name pos:start="233:8" pos:end="233:12">avctx</name><operator pos:start="233:13" pos:end="233:14">-&gt;</operator><name pos:start="233:15" pos:end="233:21">pix_fmt</name></name> <operator pos:start="233:23" pos:end="233:24">==</operator> <name pos:start="233:26" pos:end="233:37">PIX_FMT_NONE</name></expr>)</condition><block pos:start="233:39" pos:end="239:5">{<block_content pos:start="235:9" pos:end="237:18">

        <expr_stmt pos:start="235:9" pos:end="235:66"><expr pos:start="235:9" pos:end="235:65"><call pos:start="235:9" pos:end="235:65"><name pos:start="235:9" pos:end="235:14">av_log</name><argument_list pos:start="235:15" pos:end="235:65">(<argument pos:start="235:16" pos:end="235:20"><expr pos:start="235:16" pos:end="235:20"><name pos:start="235:16" pos:end="235:20">avctx</name></expr></argument>, <argument pos:start="235:23" pos:end="235:34"><expr pos:start="235:23" pos:end="235:34"><name pos:start="235:23" pos:end="235:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="235:37" pos:end="235:64"><expr pos:start="235:37" pos:end="235:64"><literal type="string" pos:start="235:37" pos:end="235:64">"unsupported pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="237:9" pos:end="237:18">return <expr pos:start="237:16" pos:end="237:17"><operator pos:start="237:16" pos:end="237:16">-</operator><literal type="number" pos:start="237:17" pos:end="237:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="243:5" pos:end="245:40"><if pos:start="243:5" pos:end="245:40">if<condition pos:start="243:7" pos:end="243:18">(<expr pos:start="243:8" pos:end="243:17"><name pos:start="243:8" pos:end="243:17"><name pos:start="243:8" pos:end="243:8">p</name><operator pos:start="243:9" pos:end="243:10">-&gt;</operator><name pos:start="243:11" pos:end="243:14">data</name><index pos:start="243:15" pos:end="243:17">[<expr pos:start="243:16" pos:end="243:16"><literal type="number" pos:start="243:16" pos:end="243:16">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="245:9" pos:end="245:40"><block_content pos:start="245:9" pos:end="245:40">

        <expr_stmt pos:start="245:9" pos:end="245:40"><expr pos:start="245:9" pos:end="245:39"><call pos:start="245:9" pos:end="245:39"><name pos:start="245:9" pos:end="245:29"><name pos:start="245:9" pos:end="245:13">avctx</name><operator pos:start="245:14" pos:end="245:15">-&gt;</operator><name pos:start="245:16" pos:end="245:29">release_buffer</name></name><argument_list pos:start="245:30" pos:end="245:39">(<argument pos:start="245:31" pos:end="245:35"><expr pos:start="245:31" pos:end="245:35"><name pos:start="245:31" pos:end="245:35">avctx</name></expr></argument>, <argument pos:start="245:38" pos:end="245:38"><expr pos:start="245:38" pos:end="245:38"><name pos:start="245:38" pos:end="245:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:21"><expr pos:start="249:5" pos:end="249:20"><name pos:start="249:5" pos:end="249:16"><name pos:start="249:5" pos:end="249:5">p</name><operator pos:start="249:6" pos:end="249:7">-&gt;</operator><name pos:start="249:8" pos:end="249:16">reference</name></name> <operator pos:start="249:18" pos:end="249:18">=</operator> <literal type="number" pos:start="249:20" pos:end="249:20">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="257:5"><if pos:start="251:5" pos:end="257:5">if<condition pos:start="251:7" pos:end="251:39">(<expr pos:start="251:8" pos:end="251:38"><call pos:start="251:8" pos:end="251:34"><name pos:start="251:8" pos:end="251:24"><name pos:start="251:8" pos:end="251:12">avctx</name><operator pos:start="251:13" pos:end="251:14">-&gt;</operator><name pos:start="251:15" pos:end="251:24">get_buffer</name></name><argument_list pos:start="251:25" pos:end="251:34">(<argument pos:start="251:26" pos:end="251:30"><expr pos:start="251:26" pos:end="251:30"><name pos:start="251:26" pos:end="251:30">avctx</name></expr></argument>, <argument pos:start="251:33" pos:end="251:33"><expr pos:start="251:33" pos:end="251:33"><name pos:start="251:33" pos:end="251:33">p</name></expr></argument>)</argument_list></call> <operator pos:start="251:36" pos:end="251:36">&lt;</operator> <literal type="number" pos:start="251:38" pos:end="251:38">0</literal></expr>)</condition><block pos:start="251:40" pos:end="257:5">{<block_content pos:start="253:9" pos:end="255:18">

        <expr_stmt pos:start="253:9" pos:end="253:61"><expr pos:start="253:9" pos:end="253:60"><call pos:start="253:9" pos:end="253:60"><name pos:start="253:9" pos:end="253:14">av_log</name><argument_list pos:start="253:15" pos:end="253:60">(<argument pos:start="253:16" pos:end="253:20"><expr pos:start="253:16" pos:end="253:20"><name pos:start="253:16" pos:end="253:20">avctx</name></expr></argument>, <argument pos:start="253:23" pos:end="253:34"><expr pos:start="253:23" pos:end="253:34"><name pos:start="253:23" pos:end="253:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="253:37" pos:end="253:59"><expr pos:start="253:37" pos:end="253:59"><literal type="string" pos:start="253:37" pos:end="253:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="255:9" pos:end="255:18">return <expr pos:start="255:16" pos:end="255:17"><operator pos:start="255:16" pos:end="255:16">-</operator><literal type="number" pos:start="255:17" pos:end="255:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:29"><expr pos:start="259:5" pos:end="259:28"><name pos:start="259:5" pos:end="259:16"><name pos:start="259:5" pos:end="259:5">p</name><operator pos:start="259:6" pos:end="259:7">-&gt;</operator><name pos:start="259:8" pos:end="259:16">pict_type</name></name> <operator pos:start="259:18" pos:end="259:18">=</operator> <name pos:start="259:20" pos:end="259:28">FF_I_TYPE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:21"><expr pos:start="261:5" pos:end="261:20"><name pos:start="261:5" pos:end="261:16"><name pos:start="261:5" pos:end="261:5">p</name><operator pos:start="261:6" pos:end="261:7">-&gt;</operator><name pos:start="261:8" pos:end="261:16">key_frame</name></name> <operator pos:start="261:18" pos:end="261:18">=</operator> <literal type="number" pos:start="261:20" pos:end="261:20">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="265:5" pos:end="265:23"><expr pos:start="265:5" pos:end="265:22"><name pos:start="265:5" pos:end="265:7">buf</name> <operator pos:start="265:9" pos:end="265:9">=</operator> <name pos:start="265:11" pos:end="265:14">buf0</name> <operator pos:start="265:16" pos:end="265:16">+</operator> <name pos:start="265:18" pos:end="265:22">hsize</name></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:29"><expr pos:start="267:5" pos:end="267:28"><name pos:start="267:5" pos:end="267:9">dsize</name> <operator pos:start="267:11" pos:end="267:11">=</operator> <name pos:start="267:13" pos:end="267:20">buf_size</name> <operator pos:start="267:22" pos:end="267:22">-</operator> <name pos:start="267:24" pos:end="267:28">hsize</name></expr>;</expr_stmt>



    <comment type="block" pos:start="271:5" pos:end="271:41">/* Line size in file multiple of 4 */</comment>

    <expr_stmt pos:start="273:5" pos:end="273:46"><expr pos:start="273:5" pos:end="273:45"><name pos:start="273:5" pos:end="273:5">n</name> <operator pos:start="273:7" pos:end="273:7">=</operator> <operator pos:start="273:9" pos:end="273:9">(</operator><name pos:start="273:10" pos:end="273:21"><name pos:start="273:10" pos:end="273:14">avctx</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:21">width</name></name> <operator pos:start="273:23" pos:end="273:23">*</operator> <operator pos:start="273:25" pos:end="273:25">(</operator><name pos:start="273:26" pos:end="273:30">depth</name> <operator pos:start="273:32" pos:end="273:32">/</operator> <literal type="number" pos:start="273:34" pos:end="273:34">8</literal><operator pos:start="273:35" pos:end="273:35">)</operator> <operator pos:start="273:37" pos:end="273:37">+</operator> <literal type="number" pos:start="273:39" pos:end="273:39">3</literal><operator pos:start="273:40" pos:end="273:40">)</operator> <operator pos:start="273:42" pos:end="273:42">&amp;</operator> <operator pos:start="273:44" pos:end="273:44">~</operator><literal type="number" pos:start="273:45" pos:end="273:45">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="277:5" pos:end="285:5"><if pos:start="277:5" pos:end="285:5">if<condition pos:start="277:7" pos:end="277:33">(<expr pos:start="277:8" pos:end="277:32"><name pos:start="277:8" pos:end="277:8">n</name> <operator pos:start="277:10" pos:end="277:10">*</operator> <name pos:start="277:12" pos:end="277:24"><name pos:start="277:12" pos:end="277:16">avctx</name><operator pos:start="277:17" pos:end="277:18">-&gt;</operator><name pos:start="277:19" pos:end="277:24">height</name></name> <operator pos:start="277:26" pos:end="277:26">&gt;</operator> <name pos:start="277:28" pos:end="277:32">dsize</name></expr>)</condition><block pos:start="277:34" pos:end="285:5">{<block_content pos:start="279:9" pos:end="283:18">

        <expr_stmt pos:start="279:9" pos:end="281:41"><expr pos:start="279:9" pos:end="281:40"><call pos:start="279:9" pos:end="281:40"><name pos:start="279:9" pos:end="279:14">av_log</name><argument_list pos:start="279:15" pos:end="281:40">(<argument pos:start="279:16" pos:end="279:20"><expr pos:start="279:16" pos:end="279:20"><name pos:start="279:16" pos:end="279:20">avctx</name></expr></argument>, <argument pos:start="279:23" pos:end="279:34"><expr pos:start="279:23" pos:end="279:34"><name pos:start="279:23" pos:end="279:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="279:37" pos:end="279:65"><expr pos:start="279:37" pos:end="279:65"><literal type="string" pos:start="279:37" pos:end="279:65">"not enough data (%d &lt; %d)\n"</literal></expr></argument>,

               <argument pos:start="281:16" pos:end="281:20"><expr pos:start="281:16" pos:end="281:20"><name pos:start="281:16" pos:end="281:20">dsize</name></expr></argument>, <argument pos:start="281:23" pos:end="281:39"><expr pos:start="281:23" pos:end="281:39"><name pos:start="281:23" pos:end="281:23">n</name> <operator pos:start="281:25" pos:end="281:25">*</operator> <name pos:start="281:27" pos:end="281:39"><name pos:start="281:27" pos:end="281:31">avctx</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:39">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="283:9" pos:end="283:18">return <expr pos:start="283:16" pos:end="283:17"><operator pos:start="283:16" pos:end="283:16">-</operator><literal type="number" pos:start="283:17" pos:end="283:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="289:5" pos:end="301:5"><if pos:start="289:5" pos:end="295:5">if<condition pos:start="289:7" pos:end="289:18">(<expr pos:start="289:8" pos:end="289:17"><name pos:start="289:8" pos:end="289:13">height</name> <operator pos:start="289:15" pos:end="289:15">&gt;</operator> <literal type="number" pos:start="289:17" pos:end="289:17">0</literal></expr>)</condition><block pos:start="289:19" pos:end="295:5">{<block_content pos:start="291:9" pos:end="293:35">

        <expr_stmt pos:start="291:9" pos:end="291:64"><expr pos:start="291:9" pos:end="291:63"><name pos:start="291:9" pos:end="291:11">ptr</name> <operator pos:start="291:13" pos:end="291:13">=</operator> <name pos:start="291:15" pos:end="291:24"><name pos:start="291:15" pos:end="291:15">p</name><operator pos:start="291:16" pos:end="291:17">-&gt;</operator><name pos:start="291:18" pos:end="291:21">data</name><index pos:start="291:22" pos:end="291:24">[<expr pos:start="291:23" pos:end="291:23"><literal type="number" pos:start="291:23" pos:end="291:23">0</literal></expr>]</index></name> <operator pos:start="291:26" pos:end="291:26">+</operator> <operator pos:start="291:28" pos:end="291:28">(</operator><name pos:start="291:29" pos:end="291:41"><name pos:start="291:29" pos:end="291:33">avctx</name><operator pos:start="291:34" pos:end="291:35">-&gt;</operator><name pos:start="291:36" pos:end="291:41">height</name></name> <operator pos:start="291:43" pos:end="291:43">-</operator> <literal type="number" pos:start="291:45" pos:end="291:45">1</literal><operator pos:start="291:46" pos:end="291:46">)</operator> <operator pos:start="291:48" pos:end="291:48">*</operator> <name pos:start="291:50" pos:end="291:63"><name pos:start="291:50" pos:end="291:50">p</name><operator pos:start="291:51" pos:end="291:52">-&gt;</operator><name pos:start="291:53" pos:end="291:60">linesize</name><index pos:start="291:61" pos:end="291:63">[<expr pos:start="291:62" pos:end="291:62"><literal type="number" pos:start="291:62" pos:end="291:62">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:35"><expr pos:start="293:9" pos:end="293:34"><name pos:start="293:9" pos:end="293:16">linesize</name> <operator pos:start="293:18" pos:end="293:18">=</operator> <operator pos:start="293:20" pos:end="293:20">-</operator><name pos:start="293:21" pos:end="293:34"><name pos:start="293:21" pos:end="293:21">p</name><operator pos:start="293:22" pos:end="293:23">-&gt;</operator><name pos:start="293:24" pos:end="293:31">linesize</name><index pos:start="293:32" pos:end="293:34">[<expr pos:start="293:33" pos:end="293:33"><literal type="number" pos:start="293:33" pos:end="293:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="295:7" pos:end="301:5">else <block pos:start="295:12" pos:end="301:5">{<block_content pos:start="297:9" pos:end="299:34">

        <expr_stmt pos:start="297:9" pos:end="297:25"><expr pos:start="297:9" pos:end="297:24"><name pos:start="297:9" pos:end="297:11">ptr</name> <operator pos:start="297:13" pos:end="297:13">=</operator> <name pos:start="297:15" pos:end="297:24"><name pos:start="297:15" pos:end="297:15">p</name><operator pos:start="297:16" pos:end="297:17">-&gt;</operator><name pos:start="297:18" pos:end="297:21">data</name><index pos:start="297:22" pos:end="297:24">[<expr pos:start="297:23" pos:end="297:23"><literal type="number" pos:start="297:23" pos:end="297:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:34"><expr pos:start="299:9" pos:end="299:33"><name pos:start="299:9" pos:end="299:16">linesize</name> <operator pos:start="299:18" pos:end="299:18">=</operator> <name pos:start="299:20" pos:end="299:33"><name pos:start="299:20" pos:end="299:20">p</name><operator pos:start="299:21" pos:end="299:22">-&gt;</operator><name pos:start="299:23" pos:end="299:30">linesize</name><index pos:start="299:31" pos:end="299:33">[<expr pos:start="299:32" pos:end="299:32"><literal type="number" pos:start="299:32" pos:end="299:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="305:5" pos:end="385:5">switch<condition pos:start="305:11" pos:end="305:17">(<expr pos:start="305:12" pos:end="305:16"><name pos:start="305:12" pos:end="305:16">depth</name></expr>)</condition><block pos:start="305:18" pos:end="385:5">{<block_content pos:start="307:5" pos:end="383:18">

    <case pos:start="307:5" pos:end="307:12">case <expr pos:start="307:10" pos:end="307:11"><literal type="number" pos:start="307:10" pos:end="307:11">24</literal></expr>:</case>

        <for pos:start="309:9" pos:end="317:9">for<control pos:start="309:12" pos:end="309:42">(<init pos:start="309:13" pos:end="309:18"><expr pos:start="309:13" pos:end="309:17"><name pos:start="309:13" pos:end="309:13">i</name> <operator pos:start="309:15" pos:end="309:15">=</operator> <literal type="number" pos:start="309:17" pos:end="309:17">0</literal></expr>;</init> <condition pos:start="309:20" pos:end="309:37"><expr pos:start="309:20" pos:end="309:36"><name pos:start="309:20" pos:end="309:20">i</name> <operator pos:start="309:22" pos:end="309:22">&lt;</operator> <name pos:start="309:24" pos:end="309:36"><name pos:start="309:24" pos:end="309:28">avctx</name><operator pos:start="309:29" pos:end="309:30">-&gt;</operator><name pos:start="309:31" pos:end="309:36">height</name></name></expr>;</condition> <incr pos:start="309:39" pos:end="309:41"><expr pos:start="309:39" pos:end="309:41"><name pos:start="309:39" pos:end="309:39">i</name><operator pos:start="309:40" pos:end="309:41">++</operator></expr></incr>)</control><block pos:start="309:43" pos:end="317:9">{<block_content pos:start="311:13" pos:end="315:28">

            <expr_stmt pos:start="311:13" pos:end="311:32"><expr pos:start="311:13" pos:end="311:31"><call pos:start="311:13" pos:end="311:31"><name pos:start="311:13" pos:end="311:18">memcpy</name><argument_list pos:start="311:19" pos:end="311:31">(<argument pos:start="311:20" pos:end="311:22"><expr pos:start="311:20" pos:end="311:22"><name pos:start="311:20" pos:end="311:22">ptr</name></expr></argument>, <argument pos:start="311:25" pos:end="311:27"><expr pos:start="311:25" pos:end="311:27"><name pos:start="311:25" pos:end="311:27">buf</name></expr></argument>, <argument pos:start="311:30" pos:end="311:30"><expr pos:start="311:30" pos:end="311:30"><name pos:start="311:30" pos:end="311:30">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:21"><expr pos:start="313:13" pos:end="313:20"><name pos:start="313:13" pos:end="313:15">buf</name> <operator pos:start="313:17" pos:end="313:18">+=</operator> <name pos:start="313:20" pos:end="313:20">n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:28"><expr pos:start="315:13" pos:end="315:27"><name pos:start="315:13" pos:end="315:15">ptr</name> <operator pos:start="315:17" pos:end="315:18">+=</operator> <name pos:start="315:20" pos:end="315:27">linesize</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="319:9" pos:end="319:14">break;</break>

    <case pos:start="321:5" pos:end="321:12">case <expr pos:start="321:10" pos:end="321:11"><literal type="number" pos:start="321:10" pos:end="321:11">16</literal></expr>:</case>

        <for pos:start="323:9" pos:end="341:9">for<control pos:start="323:12" pos:end="323:42">(<init pos:start="323:13" pos:end="323:18"><expr pos:start="323:13" pos:end="323:17"><name pos:start="323:13" pos:end="323:13">i</name> <operator pos:start="323:15" pos:end="323:15">=</operator> <literal type="number" pos:start="323:17" pos:end="323:17">0</literal></expr>;</init> <condition pos:start="323:20" pos:end="323:37"><expr pos:start="323:20" pos:end="323:36"><name pos:start="323:20" pos:end="323:20">i</name> <operator pos:start="323:22" pos:end="323:22">&lt;</operator> <name pos:start="323:24" pos:end="323:36"><name pos:start="323:24" pos:end="323:28">avctx</name><operator pos:start="323:29" pos:end="323:30">-&gt;</operator><name pos:start="323:31" pos:end="323:36">height</name></name></expr>;</condition> <incr pos:start="323:39" pos:end="323:41"><expr pos:start="323:39" pos:end="323:41"><name pos:start="323:39" pos:end="323:39">i</name><operator pos:start="323:40" pos:end="323:41">++</operator></expr></incr>)</control><block pos:start="323:43" pos:end="341:9">{<block_content pos:start="325:13" pos:end="339:28">

            <decl_stmt pos:start="325:13" pos:end="325:45"><decl pos:start="325:13" pos:end="325:44"><type pos:start="325:13" pos:end="325:22"><name pos:start="325:13" pos:end="325:20">uint16_t</name> <modifier pos:start="325:22" pos:end="325:22">*</modifier></type><name pos:start="325:23" pos:end="325:25">src</name> <init pos:start="325:27" pos:end="325:44">= <expr pos:start="325:29" pos:end="325:44"><operator pos:start="325:29" pos:end="325:29">(</operator><name pos:start="325:30" pos:end="325:37">uint16_t</name> <operator pos:start="325:39" pos:end="325:39">*</operator><operator pos:start="325:40" pos:end="325:40">)</operator> <name pos:start="325:42" pos:end="325:44">buf</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="327:13" pos:end="327:45"><decl pos:start="327:13" pos:end="327:44"><type pos:start="327:13" pos:end="327:22"><name pos:start="327:13" pos:end="327:20">uint16_t</name> <modifier pos:start="327:22" pos:end="327:22">*</modifier></type><name pos:start="327:23" pos:end="327:25">dst</name> <init pos:start="327:27" pos:end="327:44">= <expr pos:start="327:29" pos:end="327:44"><operator pos:start="327:29" pos:end="327:29">(</operator><name pos:start="327:30" pos:end="327:37">uint16_t</name> <operator pos:start="327:39" pos:end="327:39">*</operator><operator pos:start="327:40" pos:end="327:40">)</operator> <name pos:start="327:42" pos:end="327:44">ptr</name></expr></init></decl>;</decl_stmt>



            <for pos:start="331:13" pos:end="333:42">for<control pos:start="331:16" pos:end="331:45">(<init pos:start="331:17" pos:end="331:22"><expr pos:start="331:17" pos:end="331:21"><name pos:start="331:17" pos:end="331:17">j</name> <operator pos:start="331:19" pos:end="331:19">=</operator> <literal type="number" pos:start="331:21" pos:end="331:21">0</literal></expr>;</init> <condition pos:start="331:24" pos:end="331:40"><expr pos:start="331:24" pos:end="331:39"><name pos:start="331:24" pos:end="331:24">j</name> <operator pos:start="331:26" pos:end="331:26">&lt;</operator> <name pos:start="331:28" pos:end="331:39"><name pos:start="331:28" pos:end="331:32">avctx</name><operator pos:start="331:33" pos:end="331:34">-&gt;</operator><name pos:start="331:35" pos:end="331:39">width</name></name></expr>;</condition> <incr pos:start="331:42" pos:end="331:44"><expr pos:start="331:42" pos:end="331:44"><name pos:start="331:42" pos:end="331:42">j</name><operator pos:start="331:43" pos:end="331:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="333:17" pos:end="333:42"><block_content pos:start="333:17" pos:end="333:42">

                <expr_stmt pos:start="333:17" pos:end="333:42"><expr pos:start="333:17" pos:end="333:41"><operator pos:start="333:17" pos:end="333:17">*</operator><name pos:start="333:18" pos:end="333:20">dst</name><operator pos:start="333:21" pos:end="333:22">++</operator> <operator pos:start="333:24" pos:end="333:24">=</operator> <call pos:start="333:26" pos:end="333:41"><name pos:start="333:26" pos:end="333:33">le2me_16</name><argument_list pos:start="333:34" pos:end="333:41">(<argument pos:start="333:35" pos:end="333:40"><expr pos:start="333:35" pos:end="333:40"><operator pos:start="333:35" pos:end="333:35">*</operator><name pos:start="333:36" pos:end="333:38">src</name><operator pos:start="333:39" pos:end="333:40">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="337:13" pos:end="337:21"><expr pos:start="337:13" pos:end="337:20"><name pos:start="337:13" pos:end="337:15">buf</name> <operator pos:start="337:17" pos:end="337:18">+=</operator> <name pos:start="337:20" pos:end="337:20">n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:28"><expr pos:start="339:13" pos:end="339:27"><name pos:start="339:13" pos:end="339:15">ptr</name> <operator pos:start="339:17" pos:end="339:18">+=</operator> <name pos:start="339:20" pos:end="339:27">linesize</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="343:9" pos:end="343:14">break;</break>

    <case pos:start="345:5" pos:end="345:12">case <expr pos:start="345:10" pos:end="345:11"><literal type="number" pos:start="345:10" pos:end="345:11">32</literal></expr>:</case>

        <for pos:start="347:9" pos:end="375:9">for<control pos:start="347:12" pos:end="347:42">(<init pos:start="347:13" pos:end="347:18"><expr pos:start="347:13" pos:end="347:17"><name pos:start="347:13" pos:end="347:13">i</name> <operator pos:start="347:15" pos:end="347:15">=</operator> <literal type="number" pos:start="347:17" pos:end="347:17">0</literal></expr>;</init> <condition pos:start="347:20" pos:end="347:37"><expr pos:start="347:20" pos:end="347:36"><name pos:start="347:20" pos:end="347:20">i</name> <operator pos:start="347:22" pos:end="347:22">&lt;</operator> <name pos:start="347:24" pos:end="347:36"><name pos:start="347:24" pos:end="347:28">avctx</name><operator pos:start="347:29" pos:end="347:30">-&gt;</operator><name pos:start="347:31" pos:end="347:36">height</name></name></expr>;</condition> <incr pos:start="347:39" pos:end="347:41"><expr pos:start="347:39" pos:end="347:41"><name pos:start="347:39" pos:end="347:39">i</name><operator pos:start="347:40" pos:end="347:41">++</operator></expr></incr>)</control><block pos:start="347:43" pos:end="375:9">{<block_content pos:start="349:13" pos:end="373:28">

            <decl_stmt pos:start="349:13" pos:end="349:31"><decl pos:start="349:13" pos:end="349:30"><type pos:start="349:13" pos:end="349:21"><name pos:start="349:13" pos:end="349:19">uint8_t</name> <modifier pos:start="349:21" pos:end="349:21">*</modifier></type><name pos:start="349:22" pos:end="349:24">src</name> <init pos:start="349:26" pos:end="349:30">= <expr pos:start="349:28" pos:end="349:30"><name pos:start="349:28" pos:end="349:30">buf</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="351:13" pos:end="351:31"><decl pos:start="351:13" pos:end="351:30"><type pos:start="351:13" pos:end="351:21"><name pos:start="351:13" pos:end="351:19">uint8_t</name> <modifier pos:start="351:21" pos:end="351:21">*</modifier></type><name pos:start="351:22" pos:end="351:24">dst</name> <init pos:start="351:26" pos:end="351:30">= <expr pos:start="351:28" pos:end="351:30"><name pos:start="351:28" pos:end="351:30">ptr</name></expr></init></decl>;</decl_stmt>



            <for pos:start="355:13" pos:end="367:13">for<control pos:start="355:16" pos:end="355:45">(<init pos:start="355:17" pos:end="355:22"><expr pos:start="355:17" pos:end="355:21"><name pos:start="355:17" pos:end="355:17">j</name> <operator pos:start="355:19" pos:end="355:19">=</operator> <literal type="number" pos:start="355:21" pos:end="355:21">0</literal></expr>;</init> <condition pos:start="355:24" pos:end="355:40"><expr pos:start="355:24" pos:end="355:39"><name pos:start="355:24" pos:end="355:24">j</name> <operator pos:start="355:26" pos:end="355:26">&lt;</operator> <name pos:start="355:28" pos:end="355:39"><name pos:start="355:28" pos:end="355:32">avctx</name><operator pos:start="355:33" pos:end="355:34">-&gt;</operator><name pos:start="355:35" pos:end="355:39">width</name></name></expr>;</condition> <incr pos:start="355:42" pos:end="355:44"><expr pos:start="355:42" pos:end="355:44"><name pos:start="355:42" pos:end="355:42">j</name><operator pos:start="355:43" pos:end="355:44">++</operator></expr></incr>)</control><block pos:start="355:46" pos:end="367:13">{<block_content pos:start="357:17" pos:end="365:25">

                <expr_stmt pos:start="357:17" pos:end="357:37"><expr pos:start="357:17" pos:end="357:36"><name pos:start="357:17" pos:end="357:22"><name pos:start="357:17" pos:end="357:19">dst</name><index pos:start="357:20" pos:end="357:22">[<expr pos:start="357:21" pos:end="357:21"><literal type="number" pos:start="357:21" pos:end="357:21">0</literal></expr>]</index></name> <operator pos:start="357:24" pos:end="357:24">=</operator> <name pos:start="357:26" pos:end="357:36"><name pos:start="357:26" pos:end="357:28">src</name><index pos:start="357:29" pos:end="357:36">[<expr pos:start="357:30" pos:end="357:35"><name pos:start="357:30" pos:end="357:35"><name pos:start="357:30" pos:end="357:32">rgb</name><index pos:start="357:33" pos:end="357:35">[<expr pos:start="357:34" pos:end="357:34"><literal type="number" pos:start="357:34" pos:end="357:34">2</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:37"><expr pos:start="359:17" pos:end="359:36"><name pos:start="359:17" pos:end="359:22"><name pos:start="359:17" pos:end="359:19">dst</name><index pos:start="359:20" pos:end="359:22">[<expr pos:start="359:21" pos:end="359:21"><literal type="number" pos:start="359:21" pos:end="359:21">1</literal></expr>]</index></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <name pos:start="359:26" pos:end="359:36"><name pos:start="359:26" pos:end="359:28">src</name><index pos:start="359:29" pos:end="359:36">[<expr pos:start="359:30" pos:end="359:35"><name pos:start="359:30" pos:end="359:35"><name pos:start="359:30" pos:end="359:32">rgb</name><index pos:start="359:33" pos:end="359:35">[<expr pos:start="359:34" pos:end="359:34"><literal type="number" pos:start="359:34" pos:end="359:34">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="361:17" pos:end="361:37"><expr pos:start="361:17" pos:end="361:36"><name pos:start="361:17" pos:end="361:22"><name pos:start="361:17" pos:end="361:19">dst</name><index pos:start="361:20" pos:end="361:22">[<expr pos:start="361:21" pos:end="361:21"><literal type="number" pos:start="361:21" pos:end="361:21">2</literal></expr>]</index></name> <operator pos:start="361:24" pos:end="361:24">=</operator> <name pos:start="361:26" pos:end="361:36"><name pos:start="361:26" pos:end="361:28">src</name><index pos:start="361:29" pos:end="361:36">[<expr pos:start="361:30" pos:end="361:35"><name pos:start="361:30" pos:end="361:35"><name pos:start="361:30" pos:end="361:32">rgb</name><index pos:start="361:33" pos:end="361:35">[<expr pos:start="361:34" pos:end="361:34"><literal type="number" pos:start="361:34" pos:end="361:34">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:25"><expr pos:start="363:17" pos:end="363:24"><name pos:start="363:17" pos:end="363:19">dst</name> <operator pos:start="363:21" pos:end="363:22">+=</operator> <literal type="number" pos:start="363:24" pos:end="363:24">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="365:17" pos:end="365:25"><expr pos:start="365:17" pos:end="365:24"><name pos:start="365:17" pos:end="365:19">src</name> <operator pos:start="365:21" pos:end="365:22">+=</operator> <literal type="number" pos:start="365:24" pos:end="365:24">4</literal></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="371:13" pos:end="371:21"><expr pos:start="371:13" pos:end="371:20"><name pos:start="371:13" pos:end="371:15">buf</name> <operator pos:start="371:17" pos:end="371:18">+=</operator> <name pos:start="371:20" pos:end="371:20">n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:28"><expr pos:start="373:13" pos:end="373:27"><name pos:start="373:13" pos:end="373:15">ptr</name> <operator pos:start="373:17" pos:end="373:18">+=</operator> <name pos:start="373:20" pos:end="373:27">linesize</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="377:9" pos:end="377:14">break;</break>

    <default pos:start="379:5" pos:end="379:12">default:</default>

        <expr_stmt pos:start="381:9" pos:end="381:63"><expr pos:start="381:9" pos:end="381:62"><call pos:start="381:9" pos:end="381:62"><name pos:start="381:9" pos:end="381:14">av_log</name><argument_list pos:start="381:15" pos:end="381:62">(<argument pos:start="381:16" pos:end="381:20"><expr pos:start="381:16" pos:end="381:20"><name pos:start="381:16" pos:end="381:20">avctx</name></expr></argument>, <argument pos:start="381:23" pos:end="381:34"><expr pos:start="381:23" pos:end="381:34"><name pos:start="381:23" pos:end="381:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="381:37" pos:end="381:61"><expr pos:start="381:37" pos:end="381:61"><literal type="string" pos:start="381:37" pos:end="381:61">"BMP decoder is broken\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="383:9" pos:end="383:18">return <expr pos:start="383:16" pos:end="383:17"><operator pos:start="383:16" pos:end="383:16">-</operator><literal type="number" pos:start="383:17" pos:end="383:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="389:5" pos:end="389:26"><expr pos:start="389:5" pos:end="389:25"><operator pos:start="389:5" pos:end="389:5">*</operator><name pos:start="389:6" pos:end="389:12">picture</name> <operator pos:start="389:14" pos:end="389:14">=</operator> <name pos:start="389:16" pos:end="389:25"><name pos:start="389:16" pos:end="389:16">s</name><operator pos:start="389:17" pos:end="389:18">-&gt;</operator><name pos:start="389:19" pos:end="389:25">picture</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="391:5" pos:end="391:35"><expr pos:start="391:5" pos:end="391:34"><operator pos:start="391:5" pos:end="391:5">*</operator><name pos:start="391:6" pos:end="391:14">data_size</name> <operator pos:start="391:16" pos:end="391:16">=</operator> <sizeof pos:start="391:18" pos:end="391:34">sizeof<argument_list pos:start="391:24" pos:end="391:34">(<argument pos:start="391:25" pos:end="391:33"><expr pos:start="391:25" pos:end="391:33"><name pos:start="391:25" pos:end="391:33">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <return pos:start="395:5" pos:end="395:20">return <expr pos:start="395:12" pos:end="395:19"><name pos:start="395:12" pos:end="395:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
