<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15592.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:18">RENAME</name></type>(<name pos:start="1:20" pos:end="1:31">yuv2rgb555_1</name>)<parameter_list pos:start="1:33" pos:end="7:62">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">SwsContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:67"><decl pos:start="1:49" pos:end="1:67"><type pos:start="1:49" pos:end="1:67"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:61">int16_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">buf0</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:55"><decl pos:start="3:34" pos:end="3:55"><type pos:start="3:34" pos:end="3:52"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:46">int16_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:55"><name pos:start="3:49" pos:end="3:52">ubuf</name><index pos:start="3:53" pos:end="3:55">[<expr pos:start="3:54" pos:end="3:54"><literal type="number" pos:start="3:54" pos:end="3:54">2</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:79"><decl pos:start="3:58" pos:end="3:79"><type pos:start="3:58" pos:end="3:76"><specifier pos:start="3:58" pos:end="3:62">const</specifier> <name pos:start="3:64" pos:end="3:70">int16_t</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:79"><name pos:start="3:73" pos:end="3:76">bguf</name><index pos:start="3:77" pos:end="3:79">[<expr pos:start="3:78" pos:end="3:78"><literal type="number" pos:start="3:78" pos:end="3:78">2</literal></expr>]</index></name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:53"><decl pos:start="5:34" pos:end="5:53"><type pos:start="5:34" pos:end="5:53"><specifier pos:start="5:34" pos:end="5:38">const</specifier> <name pos:start="5:40" pos:end="5:46">int16_t</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:53">abuf0</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:68"><decl pos:start="5:56" pos:end="5:68"><type pos:start="5:56" pos:end="5:68"><name pos:start="5:56" pos:end="5:62">uint8_t</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:68">dest</name></decl></parameter>,

                                 <parameter pos:start="7:34" pos:end="7:41"><decl pos:start="7:34" pos:end="7:41"><type pos:start="7:34" pos:end="7:41"><name pos:start="7:34" pos:end="7:36">int</name></type> <name pos:start="7:38" pos:end="7:41">dstW</name></decl></parameter>, <parameter pos:start="7:44" pos:end="7:54"><decl pos:start="7:44" pos:end="7:54"><type pos:start="7:44" pos:end="7:54"><name pos:start="7:44" pos:end="7:46">int</name></type> <name pos:start="7:48" pos:end="7:54">uvalpha</name></decl></parameter>, <parameter pos:start="7:57" pos:end="7:61"><decl pos:start="7:57" pos:end="7:61"><type pos:start="7:57" pos:end="7:61"><name pos:start="7:57" pos:end="7:59">int</name></type> <name pos:start="7:61" pos:end="7:61">y</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="95:1">{<block_content pos:start="11:5" pos:end="93:5">

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">int16_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:24">ubuf0</name> <init pos:start="11:26" pos:end="11:34">= <expr pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:31">ubuf</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="11:37" pos:end="11:52"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:37" pos:end="11:37">*</modifier></type><name pos:start="11:38" pos:end="11:42">ubuf1</name> <init pos:start="11:44" pos:end="11:52">= <expr pos:start="11:46" pos:end="11:52"><name pos:start="11:46" pos:end="11:52"><name pos:start="11:46" pos:end="11:49">ubuf</name><index pos:start="11:50" pos:end="11:52">[<expr pos:start="11:51" pos:end="11:51"><literal type="number" pos:start="11:51" pos:end="11:51">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">int16_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">buf1</name><init pos:start="13:24" pos:end="13:29">= <expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">buf0</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="13:32" pos:end="13:59">//FIXME needed for RGB1/BGR1</comment>



    <if_stmt pos:start="17:5" pos:end="93:5"><if pos:start="17:5" pos:end="55:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:15">uvalpha</name> <operator pos:start="17:17" pos:end="17:17">&lt;</operator> <literal type="number" pos:start="17:19" pos:end="17:22">2048</literal></expr>)</condition> <block pos:start="17:25" pos:end="55:5">{<block_content pos:start="19:9" pos:end="53:10"> <comment type="line" pos:start="17:27" pos:end="17:111">// note this is not correct (shifts chrominance by 0.5 pixels) but it is a bit faster</comment>

        <asm pos:start="19:9" pos:end="53:10">__asm__ <specifier pos:start="19:17" pos:end="19:24">volatile</specifier>(

            "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

            "mov        %4, %%"REG_b"               \n\t"

            "push %%"REG_BP"                        \n\t"

            YSCALEYUV2RGB1(%%REGBP, %5)

            "pxor    %%mm7, %%mm7                   \n\t"

            <comment type="block" pos:start="31:13" pos:end="31:50">/* mm2=B, %%mm4=G, %%mm5=R, %%mm7=0 */</comment>

<cpp:ifdef pos:start="33:1" pos:end="33:18">#<cpp:directive pos:start="33:2" pos:end="33:6">ifdef</cpp:directive> <name pos:start="33:8" pos:end="33:18">DITHER1XBPP</name></cpp:ifdef>

            "paddusb "BLUE_DITHER"(%5), %%mm2      \n\t"

            "paddusb "GREEN_DITHER"(%5), %%mm4      \n\t"

            "paddusb "RED_DITHER"(%5), %%mm5      \n\t"

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

            WRITERGB15(%%REGb, 8280(%5), %%REGBP)

            "pop %%"REG_BP"                         \n\t"

            "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

            :: "c" (buf0), "d" (buf1), "S" (ubuf0), "D" (ubuf1), "m" (dest),

               "a" (&amp;c-&gt;redDither)

        );</asm>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="93:5">else <block pos:start="55:12" pos:end="93:5">{<block_content pos:start="57:9" pos:end="91:10">

        <asm pos:start="57:9" pos:end="91:10">__asm__ <specifier pos:start="57:17" pos:end="57:24">volatile</specifier>(

            "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

            "mov        %4, %%"REG_b"               \n\t"

            "push %%"REG_BP"                        \n\t"

            YSCALEYUV2RGB1b(%%REGBP, %5)

            "pxor    %%mm7, %%mm7                   \n\t"

            <comment type="block" pos:start="69:13" pos:end="69:50">/* mm2=B, %%mm4=G, %%mm5=R, %%mm7=0 */</comment>

<cpp:ifdef pos:start="71:1" pos:end="71:18">#<cpp:directive pos:start="71:2" pos:end="71:6">ifdef</cpp:directive> <name pos:start="71:8" pos:end="71:18">DITHER1XBPP</name></cpp:ifdef>

            "paddusb "BLUE_DITHER"(%5), %%mm2      \n\t"

            "paddusb "GREEN_DITHER"(%5), %%mm4      \n\t"

            "paddusb "RED_DITHER"(%5), %%mm5      \n\t"

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

            WRITERGB15(%%REGb, 8280(%5), %%REGBP)

            "pop %%"REG_BP"                         \n\t"

            "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

            :: "c" (buf0), "d" (buf1), "S" (ubuf0), "D" (ubuf1), "m" (dest),

               "a" (&amp;c-&gt;redDither)

        );</asm>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
