<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13199.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">mxf_read_content_storage</name><parameter_list pos:start="1:36" pos:end="1:91">(<parameter pos:start="1:37" pos:end="1:45"><decl pos:start="1:37" pos:end="1:45"><type pos:start="1:37" pos:end="1:45"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">arg</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:58">AVIOContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">pb</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:71"><decl pos:start="1:65" pos:end="1:71"><type pos:start="1:65" pos:end="1:71"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:71">tag</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:81"><decl pos:start="1:74" pos:end="1:81"><type pos:start="1:74" pos:end="1:81"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:81">size</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:90"><decl pos:start="1:84" pos:end="1:90"><type pos:start="1:84" pos:end="1:90"><name pos:start="1:84" pos:end="1:86">UID</name></type> <name pos:start="1:88" pos:end="1:90">uid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:25">= <expr pos:start="5:23" pos:end="5:25"><name pos:start="5:23" pos:end="5:25">arg</name></expr></init></decl>;</decl_stmt>

    <switch pos:start="7:5" pos:end="29:5">switch <condition pos:start="7:12" pos:end="7:16">(<expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">tag</name></expr>)</condition> <block pos:start="7:18" pos:end="29:5">{<block_content pos:start="9:5" pos:end="27:14">

    <case pos:start="9:5" pos:end="9:16">case <expr pos:start="9:10" pos:end="9:15"><literal type="number" pos:start="9:10" pos:end="9:15">0x1901</literal></expr>:</case>

        <expr_stmt pos:start="11:9" pos:end="11:44"><expr pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:11">mxf</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:27">packages_count</name></name> <operator pos:start="11:29" pos:end="11:29">=</operator> <call pos:start="11:31" pos:end="11:43"><name pos:start="11:31" pos:end="11:39">avio_rb32</name><argument_list pos:start="11:40" pos:end="11:43">(<argument pos:start="11:41" pos:end="11:42"><expr pos:start="11:41" pos:end="11:42"><name pos:start="11:41" pos:end="11:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="15:22"><if pos:start="13:9" pos:end="15:22">if <condition pos:start="13:12" pos:end="13:58">(<expr pos:start="13:13" pos:end="13:57"><name pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:15">mxf</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:31">packages_count</name></name> <operator pos:start="13:33" pos:end="13:34">&gt;=</operator> <name pos:start="13:36" pos:end="13:43">UINT_MAX</name> <operator pos:start="13:45" pos:end="13:45">/</operator> <sizeof pos:start="13:47" pos:end="13:57">sizeof<argument_list pos:start="13:53" pos:end="13:57">(<argument pos:start="13:54" pos:end="13:56"><expr pos:start="13:54" pos:end="13:56"><name pos:start="13:54" pos:end="13:56">UID</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:22"><block_content pos:start="15:13" pos:end="15:22">

            <return pos:start="15:13" pos:end="15:22">return <expr pos:start="15:20" pos:end="15:21"><operator pos:start="15:20" pos:end="15:20">-</operator><literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:74"><expr pos:start="17:9" pos:end="17:73"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:11">mxf</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:26">packages_refs</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <call pos:start="17:30" pos:end="17:73"><name pos:start="17:30" pos:end="17:38">av_malloc</name><argument_list pos:start="17:39" pos:end="17:73">(<argument pos:start="17:40" pos:end="17:72"><expr pos:start="17:40" pos:end="17:72"><name pos:start="17:40" pos:end="17:58"><name pos:start="17:40" pos:end="17:42">mxf</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:58">packages_count</name></name> <operator pos:start="17:60" pos:end="17:60">*</operator> <sizeof pos:start="17:62" pos:end="17:72">sizeof<argument_list pos:start="17:68" pos:end="17:72">(<argument pos:start="17:69" pos:end="17:71"><expr pos:start="17:69" pos:end="17:71"><name pos:start="17:69" pos:end="17:71">UID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:32">(<expr pos:start="19:13" pos:end="19:31"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:31"><name pos:start="19:14" pos:end="19:16">mxf</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:31">packages_refs</name></name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><call pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:17">avio_skip</name><argument_list pos:start="23:18" pos:end="23:24">(<argument pos:start="23:19" pos:end="23:20"><expr pos:start="23:19" pos:end="23:20"><name pos:start="23:19" pos:end="23:20">pb</name></expr></argument>, <argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:27" pos:end="23:85">/* useless size of objects, always 16 according to specs */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:88"><expr pos:start="25:9" pos:end="25:87"><call pos:start="25:9" pos:end="25:87"><name pos:start="25:9" pos:end="25:17">avio_read</name><argument_list pos:start="25:18" pos:end="25:87">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">pb</name></expr></argument>, <argument pos:start="25:23" pos:end="25:51"><expr pos:start="25:23" pos:end="25:51"><operator pos:start="25:23" pos:end="25:23">(</operator><name pos:start="25:24" pos:end="25:30">uint8_t</name> <operator pos:start="25:32" pos:end="25:32">*</operator><operator pos:start="25:33" pos:end="25:33">)</operator><name pos:start="25:34" pos:end="25:51"><name pos:start="25:34" pos:end="25:36">mxf</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:51">packages_refs</name></name></expr></argument>, <argument pos:start="25:54" pos:end="25:86"><expr pos:start="25:54" pos:end="25:86"><name pos:start="25:54" pos:end="25:72"><name pos:start="25:54" pos:end="25:56">mxf</name><operator pos:start="25:57" pos:end="25:58">-&gt;</operator><name pos:start="25:59" pos:end="25:72">packages_count</name></name> <operator pos:start="25:74" pos:end="25:74">*</operator> <sizeof pos:start="25:76" pos:end="25:86">sizeof<argument_list pos:start="25:82" pos:end="25:86">(<argument pos:start="25:83" pos:end="25:85"><expr pos:start="25:83" pos:end="25:85"><name pos:start="25:83" pos:end="25:85">UID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
