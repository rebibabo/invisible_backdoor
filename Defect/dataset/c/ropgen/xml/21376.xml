<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21376.c" pos:tabs="8"><function pos:start="1:1" pos:end="144:59"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">vnc_dpy_copy</name><parameter_list pos:start="1:25" pos:end="5:60">(<parameter pos:start="1:26" pos:end="1:51"><decl pos:start="1:26" pos:end="1:51"><type pos:start="1:26" pos:end="1:51"><name pos:start="1:26" pos:end="1:46">DisplayChangeListener</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dcl</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:34"><decl pos:start="3:26" pos:end="3:34"><type pos:start="3:26" pos:end="3:34"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:34">src_x</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:45"><decl pos:start="3:37" pos:end="3:45"><type pos:start="3:37" pos:end="3:45"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:45">src_y</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:34"><decl pos:start="5:26" pos:end="5:34"><type pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:28">int</name></type> <name pos:start="5:30" pos:end="5:34">dst_x</name></decl></parameter>, <parameter pos:start="5:37" pos:end="5:45"><decl pos:start="5:37" pos:end="5:45"><type pos:start="5:37" pos:end="5:45"><name pos:start="5:37" pos:end="5:39">int</name></type> <name pos:start="5:41" pos:end="5:45">dst_y</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:52"><decl pos:start="5:48" pos:end="5:52"><type pos:start="5:48" pos:end="5:52"><name pos:start="5:48" pos:end="5:50">int</name></type> <name pos:start="5:52" pos:end="5:52">w</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:59"><decl pos:start="5:55" pos:end="5:59"><type pos:start="5:55" pos:end="5:59"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:59">h</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="144:59">{<block_content pos:start="9:5" pos:end="144:59">

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">VncDisplay</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:18">vd</name> <init pos:start="9:20" pos:end="9:55">= <expr pos:start="9:22" pos:end="9:55"><call pos:start="9:22" pos:end="9:55"><name pos:start="9:22" pos:end="9:33">container_of</name><argument_list pos:start="9:34" pos:end="9:55">(<argument pos:start="9:35" pos:end="9:37"><expr pos:start="9:35" pos:end="9:37"><name pos:start="9:35" pos:end="9:37">dcl</name></expr></argument>, <argument pos:start="9:40" pos:end="9:49"><expr pos:start="9:40" pos:end="9:49"><name pos:start="9:40" pos:end="9:49">VncDisplay</name></expr></argument>, <argument pos:start="9:52" pos:end="9:54"><expr pos:start="9:52" pos:end="9:54"><name pos:start="9:52" pos:end="9:54">dcl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">VncState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">vs</name></decl>, <decl pos:start="11:19" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">vn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">src_row</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">dst_row</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">x</name></decl>, <decl pos:start="17:15" pos:end="17:15"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:15">y</name></decl>, <decl pos:start="17:18" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:18" pos:end="17:22">pitch</name></decl>, <decl pos:start="17:25" pos:end="17:27"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:25" pos:end="17:27">inc</name></decl>, <decl pos:start="17:30" pos:end="17:34"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:30" pos:end="17:34">w_lim</name></decl>, <decl pos:start="17:37" pos:end="17:37"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:37" pos:end="17:37">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">cmp_bytes</name></decl>;</decl_stmt>









    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:30">vnc_refresh_server_surface</name><argument_list pos:start="29:31" pos:end="29:34">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="31:5" pos:end="31:51"><name pos:start="31:5" pos:end="31:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="31:24" pos:end="31:51">(<argument pos:start="31:25" pos:end="31:26">vs</argument>, <argument pos:start="31:29" pos:end="31:40">&amp;vd-&gt;clients</argument>, <argument pos:start="31:43" pos:end="31:46">next</argument>, <argument pos:start="31:49" pos:end="31:50">vn</argument>)</argument_list></macro> <block pos:start="31:53" pos:end="144:59">{<block_content pos:start="33:9" pos:end="144:59">

        <if_stmt pos:start="33:9" pos:end="144:59"><if pos:start="33:9" pos:end="144:59">if <condition pos:start="33:12" pos:end="33:54">(<expr pos:start="33:13" pos:end="33:53"><call pos:start="33:13" pos:end="33:53"><name pos:start="33:13" pos:end="33:27">vnc_has_feature</name><argument_list pos:start="33:28" pos:end="33:53">(<argument pos:start="33:29" pos:end="33:30"><expr pos:start="33:29" pos:end="33:30"><name pos:start="33:29" pos:end="33:30">vs</name></expr></argument>, <argument pos:start="33:33" pos:end="33:52"><expr pos:start="33:33" pos:end="33:52"><name pos:start="33:33" pos:end="33:52">VNC_FEATURE_COPYRECT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:56" pos:end="144:59">{<block_content pos:start="35:13" pos:end="144:59">

            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:14">vs</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:28">force_update</name></name> <operator pos:start="35:30" pos:end="35:30">=</operator> <literal type="number" pos:start="35:32" pos:end="35:32">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><call pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:29">vnc_update_client</name><argument_list pos:start="37:30" pos:end="37:42">(<argument pos:start="37:31" pos:end="37:32"><expr pos:start="37:31" pos:end="37:32"><name pos:start="37:31" pos:end="37:32">vs</name></expr></argument>, <argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><literal type="number" pos:start="37:35" pos:end="37:35">1</literal></expr></argument>, <argument pos:start="37:38" pos:end="37:41"><expr pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:41">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="39:13" pos:end="39:43">/* vs might be free()ed here */</comment>









    <comment type="block" pos:start="49:5" pos:end="49:48">/* do bitblit op on the local surface too */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:9">pitch</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:36"><name pos:start="51:13" pos:end="51:32">vnc_server_fb_stride</name><argument_list pos:start="51:33" pos:end="51:36">(<argument pos:start="51:34" pos:end="51:35"><expr pos:start="51:34" pos:end="51:35"><name pos:start="51:34" pos:end="51:35">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:50"><expr pos:start="53:5" pos:end="53:49"><name pos:start="53:5" pos:end="53:11">src_row</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:49"><name pos:start="53:15" pos:end="53:31">vnc_server_fb_ptr</name><argument_list pos:start="53:32" pos:end="53:49">(<argument pos:start="53:33" pos:end="53:34"><expr pos:start="53:33" pos:end="53:34"><name pos:start="53:33" pos:end="53:34">vd</name></expr></argument>, <argument pos:start="53:37" pos:end="53:41"><expr pos:start="53:37" pos:end="53:41"><name pos:start="53:37" pos:end="53:41">src_x</name></expr></argument>, <argument pos:start="53:44" pos:end="53:48"><expr pos:start="53:44" pos:end="53:48"><name pos:start="53:44" pos:end="53:48">src_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:50"><expr pos:start="55:5" pos:end="55:49"><name pos:start="55:5" pos:end="55:11">dst_row</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:49"><name pos:start="55:15" pos:end="55:31">vnc_server_fb_ptr</name><argument_list pos:start="55:32" pos:end="55:49">(<argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">vd</name></expr></argument>, <argument pos:start="55:37" pos:end="55:41"><expr pos:start="55:37" pos:end="55:41"><name pos:start="55:37" pos:end="55:41">dst_x</name></expr></argument>, <argument pos:start="55:44" pos:end="55:48"><expr pos:start="55:44" pos:end="55:48"><name pos:start="55:44" pos:end="55:48">dst_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:14"><expr pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:5">y</name> <operator pos:start="57:7" pos:end="57:7">=</operator> <name pos:start="57:9" pos:end="57:13">dst_y</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:12"><expr pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:7">inc</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <literal type="number" pos:start="59:11" pos:end="59:11">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="144:59"><if pos:start="61:5" pos:end="144:59">if <condition pos:start="61:8" pos:end="61:22">(<expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:13">dst_y</name> <operator pos:start="61:15" pos:end="61:15">&gt;</operator> <name pos:start="61:17" pos:end="61:21">src_y</name></expr>)</condition> <block pos:start="61:24" pos:end="144:59">{<block_content pos:start="65:9" pos:end="144:59">

        <comment type="block" pos:start="63:9" pos:end="63:28">/* copy backwards */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:33"><expr pos:start="65:9" pos:end="65:32"><name pos:start="65:9" pos:end="65:15">src_row</name> <operator pos:start="65:17" pos:end="65:18">+=</operator> <name pos:start="65:20" pos:end="65:24">pitch</name> <operator pos:start="65:26" pos:end="65:26">*</operator> <operator pos:start="65:28" pos:end="65:28">(</operator><name pos:start="65:29" pos:end="65:29">h</name><operator pos:start="65:30" pos:end="65:30">-</operator><literal type="number" pos:start="65:31" pos:end="65:31">1</literal><operator pos:start="65:32" pos:end="65:32">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:15">dst_row</name> <operator pos:start="67:17" pos:end="67:18">+=</operator> <name pos:start="67:20" pos:end="67:24">pitch</name> <operator pos:start="67:26" pos:end="67:26">*</operator> <operator pos:start="67:28" pos:end="67:28">(</operator><name pos:start="67:29" pos:end="67:29">h</name><operator pos:start="67:30" pos:end="67:30">-</operator><literal type="number" pos:start="67:31" pos:end="67:31">1</literal><operator pos:start="67:32" pos:end="67:32">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:23"><expr pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:13">pitch</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <operator pos:start="69:17" pos:end="69:17">-</operator><name pos:start="69:18" pos:end="69:22">pitch</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:26"><expr pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:9">y</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <name pos:start="71:13" pos:end="71:17">dst_y</name> <operator pos:start="71:19" pos:end="71:19">+</operator> <name pos:start="71:21" pos:end="71:21">h</name> <operator pos:start="71:23" pos:end="71:23">-</operator> <literal type="number" pos:start="71:25" pos:end="71:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:17"><expr pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:11">inc</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <operator pos:start="73:15" pos:end="73:15">-</operator><literal type="number" pos:start="73:16" pos:end="73:16">1</literal></expr>;</expr_stmt>


    <expr_stmt pos:start="76:5" pos:end="76:80"><expr pos:start="76:5" pos:end="76:79"><name pos:start="76:5" pos:end="76:9">w_lim</name> <operator pos:start="76:11" pos:end="76:11">=</operator> <name pos:start="76:13" pos:end="76:13">w</name> <operator pos:start="76:15" pos:end="76:15">-</operator> <operator pos:start="76:17" pos:end="76:17">(</operator><name pos:start="76:18" pos:end="76:41">VNC_DIRTY_PIXELS_PER_BIT</name> <operator pos:start="76:43" pos:end="76:43">-</operator> <operator pos:start="76:45" pos:end="76:45">(</operator><name pos:start="76:46" pos:end="76:50">dst_x</name> <operator pos:start="76:52" pos:end="76:52">%</operator> <name pos:start="76:54" pos:end="76:77">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="76:78" pos:end="76:78">)</operator><operator pos:start="76:79" pos:end="76:79">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="78:5" pos:end="144:59"><if pos:start="78:5" pos:end="82:5">if <condition pos:start="78:8" pos:end="78:18">(<expr pos:start="78:9" pos:end="78:17"><name pos:start="78:9" pos:end="78:13">w_lim</name> <operator pos:start="78:15" pos:end="78:15">&lt;</operator> <literal type="number" pos:start="78:17" pos:end="78:17">0</literal></expr>)</condition> <block pos:start="78:20" pos:end="82:5">{<block_content pos:start="80:9" pos:end="80:18">

        <expr_stmt pos:start="80:9" pos:end="80:18"><expr pos:start="80:9" pos:end="80:17"><name pos:start="80:9" pos:end="80:13">w_lim</name> <operator pos:start="80:15" pos:end="80:15">=</operator> <name pos:start="80:17" pos:end="80:17">w</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="82:7" pos:end="144:59">else <block pos:start="82:12" pos:end="144:59">{<block_content pos:start="84:9" pos:end="144:59">

        <expr_stmt pos:start="84:9" pos:end="84:55"><expr pos:start="84:9" pos:end="84:54"><name pos:start="84:9" pos:end="84:13">w_lim</name> <operator pos:start="84:15" pos:end="84:15">=</operator> <name pos:start="84:17" pos:end="84:17">w</name> <operator pos:start="84:19" pos:end="84:19">-</operator> <operator pos:start="84:21" pos:end="84:21">(</operator><name pos:start="84:22" pos:end="84:26">w_lim</name> <operator pos:start="84:28" pos:end="84:28">%</operator> <name pos:start="84:30" pos:end="84:53">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="84:54" pos:end="84:54">)</operator></expr>;</expr_stmt>


    <for pos:start="87:5" pos:end="144:59">for <control pos:start="87:9" pos:end="87:27">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:22"><expr pos:start="87:17" pos:end="87:21"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:21">h</name></expr>;</condition> <incr pos:start="87:24" pos:end="87:26"><expr pos:start="87:24" pos:end="87:26"><name pos:start="87:24" pos:end="87:24">i</name><operator pos:start="87:25" pos:end="87:26">++</operator></expr></incr>)</control> <block pos:start="87:29" pos:end="144:59">{<block_content pos:start="89:9" pos:end="144:59">

        <for pos:start="89:9" pos:end="144:59">for <control pos:start="89:13" pos:end="91:67">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">x</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:31"><expr pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:21">x</name> <operator pos:start="89:23" pos:end="89:24">&lt;=</operator> <name pos:start="89:26" pos:end="89:30">w_lim</name></expr>;</condition>

                <incr pos:start="91:17" pos:end="91:66"><expr pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:17">x</name> <operator pos:start="91:19" pos:end="91:20">+=</operator> <name pos:start="91:22" pos:end="91:22">s</name></expr><operator pos:start="91:23" pos:end="91:23">,</operator> <expr pos:start="91:25" pos:end="91:44"><name pos:start="91:25" pos:end="91:31">src_row</name> <operator pos:start="91:33" pos:end="91:34">+=</operator> <name pos:start="91:36" pos:end="91:44">cmp_bytes</name></expr><operator pos:start="91:45" pos:end="91:45">,</operator> <expr pos:start="91:47" pos:end="91:66"><name pos:start="91:47" pos:end="91:53">dst_row</name> <operator pos:start="91:55" pos:end="91:56">+=</operator> <name pos:start="91:58" pos:end="91:66">cmp_bytes</name></expr></incr>)</control> <block pos:start="91:69" pos:end="144:59">{<block_content pos:start="93:13" pos:end="144:59">

            <if_stmt pos:start="93:13" pos:end="144:59"><if pos:start="93:13" pos:end="99:13">if <condition pos:start="93:16" pos:end="93:27">(<expr pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:17">x</name> <operator pos:start="93:19" pos:end="93:20">==</operator> <name pos:start="93:22" pos:end="93:26">w_lim</name></expr>)</condition> <block pos:start="93:29" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:26">

                <if_stmt pos:start="95:17" pos:end="97:26"><if pos:start="95:17" pos:end="97:26">if <condition pos:start="95:20" pos:end="95:41">(<expr pos:start="95:21" pos:end="95:40"><operator pos:start="95:21" pos:end="95:21">(</operator><name pos:start="95:22" pos:end="95:22">s</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:26">w</name> <operator pos:start="95:28" pos:end="95:28">-</operator> <name pos:start="95:30" pos:end="95:34">w_lim</name><operator pos:start="95:35" pos:end="95:35">)</operator> <operator pos:start="95:37" pos:end="95:38">==</operator> <literal type="number" pos:start="95:40" pos:end="95:40">0</literal></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="97:26"><block_content pos:start="97:21" pos:end="97:26">

                    <break pos:start="97:21" pos:end="97:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="99:15" pos:end="107:13">else if <condition pos:start="99:23" pos:end="99:26">(<expr pos:start="99:24" pos:end="99:25"><operator pos:start="99:24" pos:end="99:24">!</operator><name pos:start="99:25" pos:end="99:25">x</name></expr>)</condition> <block pos:start="99:28" pos:end="107:13">{<block_content pos:start="101:17" pos:end="105:34">

                <expr_stmt pos:start="101:17" pos:end="103:56"><expr pos:start="101:17" pos:end="103:55"><name pos:start="101:17" pos:end="101:17">s</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">(</operator><name pos:start="101:22" pos:end="101:45">VNC_DIRTY_PIXELS_PER_BIT</name> <operator pos:start="101:47" pos:end="101:47">-</operator>

                    <operator pos:start="103:21" pos:end="103:21">(</operator><name pos:start="103:22" pos:end="103:26">dst_x</name> <operator pos:start="103:28" pos:end="103:28">%</operator> <name pos:start="103:30" pos:end="103:53">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="103:54" pos:end="103:54">)</operator><operator pos:start="103:55" pos:end="103:55">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:34"><expr pos:start="105:17" pos:end="105:33"><name pos:start="105:17" pos:end="105:17">s</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <call pos:start="105:21" pos:end="105:33"><name pos:start="105:21" pos:end="105:23">MIN</name><argument_list pos:start="105:24" pos:end="105:33">(<argument pos:start="105:25" pos:end="105:25"><expr pos:start="105:25" pos:end="105:25"><name pos:start="105:25" pos:end="105:25">s</name></expr></argument>, <argument pos:start="105:28" pos:end="105:32"><expr pos:start="105:28" pos:end="105:32"><name pos:start="105:28" pos:end="105:32">w_lim</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="107:15" pos:end="144:59">else <block pos:start="107:20" pos:end="144:59">{<block_content pos:start="109:17" pos:end="144:59">

                <expr_stmt pos:start="109:17" pos:end="109:45"><expr pos:start="109:17" pos:end="109:44"><name pos:start="109:17" pos:end="109:17">s</name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:44">VNC_DIRTY_PIXELS_PER_BIT</name></expr>;</expr_stmt>


            <expr_stmt pos:start="112:13" pos:end="112:48"><expr pos:start="112:13" pos:end="112:47"><name pos:start="112:13" pos:end="112:21">cmp_bytes</name> <operator pos:start="112:23" pos:end="112:23">=</operator> <name pos:start="112:25" pos:end="112:25">s</name> <operator pos:start="112:27" pos:end="112:27">*</operator> <name pos:start="112:29" pos:end="112:47">VNC_SERVER_FB_BYTES</name></expr>;</expr_stmt>

            <if_stmt pos:start="114:13" pos:end="116:25"><if pos:start="114:13" pos:end="116:25">if <condition pos:start="114:16" pos:end="114:57">(<expr pos:start="114:17" pos:end="114:56"><call pos:start="114:17" pos:end="114:51"><name pos:start="114:17" pos:end="114:22">memcmp</name><argument_list pos:start="114:23" pos:end="114:51">(<argument pos:start="114:24" pos:end="114:30"><expr pos:start="114:24" pos:end="114:30"><name pos:start="114:24" pos:end="114:30">src_row</name></expr></argument>, <argument pos:start="114:33" pos:end="114:39"><expr pos:start="114:33" pos:end="114:39"><name pos:start="114:33" pos:end="114:39">dst_row</name></expr></argument>, <argument pos:start="114:42" pos:end="114:50"><expr pos:start="114:42" pos:end="114:50"><name pos:start="114:42" pos:end="114:50">cmp_bytes</name></expr></argument>)</argument_list></call> <operator pos:start="114:53" pos:end="114:54">==</operator> <literal type="number" pos:start="114:56" pos:end="114:56">0</literal></expr>)</condition><block type="pseudo" pos:start="116:17" pos:end="116:25"><block_content pos:start="116:17" pos:end="116:25">

                <continue pos:start="116:17" pos:end="116:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="118:13" pos:end="118:49"><expr pos:start="118:13" pos:end="118:48"><call pos:start="118:13" pos:end="118:48"><name pos:start="118:13" pos:end="118:19">memmove</name><argument_list pos:start="118:20" pos:end="118:48">(<argument pos:start="118:21" pos:end="118:27"><expr pos:start="118:21" pos:end="118:27"><name pos:start="118:21" pos:end="118:27">dst_row</name></expr></argument>, <argument pos:start="118:30" pos:end="118:36"><expr pos:start="118:30" pos:end="118:36"><name pos:start="118:30" pos:end="118:36">src_row</name></expr></argument>, <argument pos:start="118:39" pos:end="118:47"><expr pos:start="118:39" pos:end="118:47"><name pos:start="118:39" pos:end="118:47">cmp_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <macro pos:start="120:13" pos:end="120:50"><name pos:start="120:13" pos:end="120:26">QTAILQ_FOREACH</name><argument_list pos:start="120:27" pos:end="120:50">(<argument pos:start="120:28" pos:end="120:29">vs</argument>, <argument pos:start="120:32" pos:end="120:43">&amp;vd-&gt;clients</argument>, <argument pos:start="120:46" pos:end="120:49">next</argument>)</argument_list></macro> <block pos:start="120:52" pos:end="144:59">{<block_content pos:start="122:17" pos:end="144:59">

                <if_stmt pos:start="122:17" pos:end="144:59"><if pos:start="122:17" pos:end="144:59">if <condition pos:start="122:20" pos:end="122:63">(<expr pos:start="122:21" pos:end="122:62"><operator pos:start="122:21" pos:end="122:21">!</operator><call pos:start="122:22" pos:end="122:62"><name pos:start="122:22" pos:end="122:36">vnc_has_feature</name><argument_list pos:start="122:37" pos:end="122:62">(<argument pos:start="122:38" pos:end="122:39"><expr pos:start="122:38" pos:end="122:39"><name pos:start="122:38" pos:end="122:39">vs</name></expr></argument>, <argument pos:start="122:42" pos:end="122:61"><expr pos:start="122:42" pos:end="122:61"><name pos:start="122:42" pos:end="122:61">VNC_FEATURE_COPYRECT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="122:65" pos:end="144:59">{<block_content pos:start="124:21" pos:end="144:59">

                    <expr_stmt pos:start="124:21" pos:end="126:42"><expr pos:start="124:21" pos:end="126:41"><call pos:start="124:21" pos:end="126:41"><name pos:start="124:21" pos:end="124:27">set_bit</name><argument_list pos:start="124:28" pos:end="126:41">(<argument pos:start="124:29" pos:end="124:68"><expr pos:start="124:29" pos:end="124:68"><operator pos:start="124:29" pos:end="124:29">(</operator><operator pos:start="124:30" pos:end="124:30">(</operator><name pos:start="124:31" pos:end="124:31">x</name> <operator pos:start="124:33" pos:end="124:33">+</operator> <name pos:start="124:35" pos:end="124:39">dst_x</name><operator pos:start="124:40" pos:end="124:40">)</operator> <operator pos:start="124:42" pos:end="124:42">/</operator> <name pos:start="124:44" pos:end="124:67">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="124:68" pos:end="124:68">)</operator></expr></argument>,

                            <argument pos:start="126:29" pos:end="126:40"><expr pos:start="126:29" pos:end="126:40"><name pos:start="126:29" pos:end="126:40"><name pos:start="126:29" pos:end="126:30">vs</name><operator pos:start="126:31" pos:end="126:32">-&gt;</operator><name pos:start="126:33" pos:end="126:37">dirty</name><index pos:start="126:38" pos:end="126:40">[<expr pos:start="126:39" pos:end="126:39"><name pos:start="126:39" pos:end="126:39">y</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <expr_stmt pos:start="131:9" pos:end="131:51"><expr pos:start="131:9" pos:end="131:50"><name pos:start="131:9" pos:end="131:15">src_row</name> <operator pos:start="131:17" pos:end="131:18">+=</operator> <name pos:start="131:20" pos:end="131:24">pitch</name> <operator pos:start="131:26" pos:end="131:26">-</operator> <name pos:start="131:28" pos:end="131:28">w</name> <operator pos:start="131:30" pos:end="131:30">*</operator> <name pos:start="131:32" pos:end="131:50">VNC_SERVER_FB_BYTES</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:51"><expr pos:start="133:9" pos:end="133:50"><name pos:start="133:9" pos:end="133:15">dst_row</name> <operator pos:start="133:17" pos:end="133:18">+=</operator> <name pos:start="133:20" pos:end="133:24">pitch</name> <operator pos:start="133:26" pos:end="133:26">-</operator> <name pos:start="133:28" pos:end="133:28">w</name> <operator pos:start="133:30" pos:end="133:30">*</operator> <name pos:start="133:32" pos:end="133:50">VNC_SERVER_FB_BYTES</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:17"><expr pos:start="135:9" pos:end="135:16"><name pos:start="135:9" pos:end="135:9">y</name> <operator pos:start="135:11" pos:end="135:12">+=</operator> <name pos:start="135:14" pos:end="135:16">inc</name></expr>;</expr_stmt>




    <macro pos:start="140:5" pos:end="140:42"><name pos:start="140:5" pos:end="140:18">QTAILQ_FOREACH</name><argument_list pos:start="140:19" pos:end="140:42">(<argument pos:start="140:20" pos:end="140:21">vs</argument>, <argument pos:start="140:24" pos:end="140:35">&amp;vd-&gt;clients</argument>, <argument pos:start="140:38" pos:end="140:41">next</argument>)</argument_list></macro> <block pos:start="140:44" pos:end="144:59">{<block_content pos:start="142:9" pos:end="144:59">

        <if_stmt pos:start="142:9" pos:end="144:59"><if pos:start="142:9" pos:end="144:59">if <condition pos:start="142:12" pos:end="142:54">(<expr pos:start="142:13" pos:end="142:53"><call pos:start="142:13" pos:end="142:53"><name pos:start="142:13" pos:end="142:27">vnc_has_feature</name><argument_list pos:start="142:28" pos:end="142:53">(<argument pos:start="142:29" pos:end="142:30"><expr pos:start="142:29" pos:end="142:30"><name pos:start="142:29" pos:end="142:30">vs</name></expr></argument>, <argument pos:start="142:33" pos:end="142:52"><expr pos:start="142:33" pos:end="142:52"><name pos:start="142:33" pos:end="142:52">VNC_FEATURE_COPYRECT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="142:56" pos:end="144:59">{<block_content pos:start="144:13" pos:end="144:59">

            <expr_stmt pos:start="144:13" pos:end="144:59"><expr pos:start="144:13" pos:end="144:58"><call pos:start="144:13" pos:end="144:58"><name pos:start="144:13" pos:end="144:20">vnc_copy</name><argument_list pos:start="144:21" pos:end="144:58">(<argument pos:start="144:22" pos:end="144:23"><expr pos:start="144:22" pos:end="144:23"><name pos:start="144:22" pos:end="144:23">vs</name></expr></argument>, <argument pos:start="144:26" pos:end="144:30"><expr pos:start="144:26" pos:end="144:30"><name pos:start="144:26" pos:end="144:30">src_x</name></expr></argument>, <argument pos:start="144:33" pos:end="144:37"><expr pos:start="144:33" pos:end="144:37"><name pos:start="144:33" pos:end="144:37">src_y</name></expr></argument>, <argument pos:start="144:40" pos:end="144:44"><expr pos:start="144:40" pos:end="144:44"><name pos:start="144:40" pos:end="144:44">dst_x</name></expr></argument>, <argument pos:start="144:47" pos:end="144:51"><expr pos:start="144:47" pos:end="144:51"><name pos:start="144:47" pos:end="144:51">dst_y</name></expr></argument>, <argument pos:start="144:54" pos:end="144:54"><expr pos:start="144:54" pos:end="144:54"><name pos:start="144:54" pos:end="144:54">w</name></expr></argument>, <argument pos:start="144:57" pos:end="144:57"><expr pos:start="144:57" pos:end="144:57"><name pos:start="144:57" pos:end="144:57">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></block_content></block></else></if_stmt></block_content></block></for></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></function>


</unit>
