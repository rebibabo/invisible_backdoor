<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3185.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">convert_sub_to_old_ass_form</name><parameter_list pos:start="1:39" pos:end="1:91">(<parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:49">AVSubtitle</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">sub</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:75"><decl pos:start="1:57" pos:end="1:75"><type pos:start="1:57" pos:end="1:75"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:70">AVPacket</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:75">pkt</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:90"><decl pos:start="1:78" pos:end="1:90"><type pos:start="1:78" pos:end="1:90"><name pos:start="1:78" pos:end="1:87">AVRational</name></type> <name pos:start="1:89" pos:end="1:90">tb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVBPrint</name></type> <name pos:start="7:14" pos:end="7:16">buf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:54"><expr pos:start="11:5" pos:end="11:53"><call pos:start="11:5" pos:end="11:53"><name pos:start="11:5" pos:end="11:18">av_bprint_init</name><argument_list pos:start="11:19" pos:end="11:53">(<argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:23">buf</name></expr></argument>, <argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr></argument>, <argument pos:start="11:29" pos:end="11:52"><expr pos:start="11:29" pos:end="11:52"><name pos:start="11:29" pos:end="11:52">AV_BPRINT_SIZE_UNLIMITED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="15:5" pos:end="103:5">for <control pos:start="15:9" pos:end="15:40">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:35"><expr pos:start="15:17" pos:end="15:34"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:34"><name pos:start="15:21" pos:end="15:23">sub</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:34">num_rects</name></name></expr>;</condition> <incr pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:37">i</name><operator pos:start="15:38" pos:end="15:39">++</operator></expr></incr>)</control> <block pos:start="15:42" pos:end="103:5">{<block_content pos:start="17:9" pos:end="101:33">

        <decl_stmt pos:start="17:9" pos:end="17:27"><decl pos:start="17:9" pos:end="17:26"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">char</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:26">final_dialog</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:27"><decl pos:start="19:9" pos:end="19:26"><type pos:start="19:9" pos:end="19:20"><specifier pos:start="19:9" pos:end="19:13">const</specifier> <name pos:start="19:15" pos:end="19:18">char</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:26">dialog</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:45"><decl pos:start="21:9" pos:end="21:44"><type pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:22">AVSubtitleRect</name> <modifier pos:start="21:24" pos:end="21:24">*</modifier></type><name pos:start="21:25" pos:end="21:28">rect</name> <init pos:start="21:30" pos:end="21:44">= <expr pos:start="21:32" pos:end="21:44"><name pos:start="21:32" pos:end="21:44"><name pos:start="21:32" pos:end="21:34">sub</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:41">rects</name><index pos:start="21:42" pos:end="21:44">[<expr pos:start="21:43" pos:end="21:43"><name pos:start="21:43" pos:end="21:43">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:39"><decl pos:start="23:9" pos:end="23:20"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:20">ts_start</name></decl>, <decl pos:start="23:23" pos:end="23:38"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:23" pos:end="23:33">ts_duration</name> <init pos:start="23:35" pos:end="23:38">= <expr pos:start="23:37" pos:end="23:38"><operator pos:start="23:37" pos:end="23:37">-</operator><literal type="number" pos:start="23:38" pos:end="23:38">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:23"><decl pos:start="25:9" pos:end="25:22"><type pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:12">long</name> <name pos:start="25:14" pos:end="25:16">int</name></type> <name pos:start="25:18" pos:end="25:22">layer</name></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="31:21"><if pos:start="29:9" pos:end="31:21">if <condition pos:start="29:12" pos:end="29:79">(<expr pos:start="29:13" pos:end="29:78"><name pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:16">rect</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:22">type</name></name> <operator pos:start="29:24" pos:end="29:25">!=</operator> <name pos:start="29:27" pos:end="29:38">SUBTITLE_ASS</name> <operator pos:start="29:40" pos:end="29:41">||</operator> <operator pos:start="29:43" pos:end="29:43">!</operator><call pos:start="29:44" pos:end="29:78"><name pos:start="29:44" pos:end="29:50">strncmp</name><argument_list pos:start="29:51" pos:end="29:78">(<argument pos:start="29:52" pos:end="29:60"><expr pos:start="29:52" pos:end="29:60"><name pos:start="29:52" pos:end="29:60"><name pos:start="29:52" pos:end="29:55">rect</name><operator pos:start="29:56" pos:end="29:57">-&gt;</operator><name pos:start="29:58" pos:end="29:60">ass</name></name></expr></argument>, <argument pos:start="29:63" pos:end="29:73"><expr pos:start="29:63" pos:end="29:73"><literal type="string" pos:start="29:63" pos:end="29:73">"Dialogue "</literal></expr></argument>, <argument pos:start="29:76" pos:end="29:77"><expr pos:start="29:76" pos:end="29:77"><literal type="number" pos:start="29:76" pos:end="29:77">10</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:21"><block_content pos:start="31:13" pos:end="31:21">

            <continue pos:start="31:13" pos:end="31:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><call pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:23">av_bprint_clear</name><argument_list pos:start="35:24" pos:end="35:29">(<argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><operator pos:start="35:25" pos:end="35:25">&amp;</operator><name pos:start="35:26" pos:end="35:28">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="39:9" pos:end="39:28">/* skip ReadOrder */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:14">dialog</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:39"><name pos:start="41:18" pos:end="41:23">strchr</name><argument_list pos:start="41:24" pos:end="41:39">(<argument pos:start="41:25" pos:end="41:33"><expr pos:start="41:25" pos:end="41:33"><name pos:start="41:25" pos:end="41:33"><name pos:start="41:25" pos:end="41:28">rect</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:33">ass</name></name></expr></argument>, <argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><literal type="char" pos:start="41:36" pos:end="41:38">','</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:21"><if pos:start="43:9" pos:end="45:21">if <condition pos:start="43:12" pos:end="43:20">(<expr pos:start="43:13" pos:end="43:19"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:19">dialog</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:21"><block_content pos:start="45:13" pos:end="45:21">

            <continue pos:start="45:13" pos:end="45:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:17"><expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:14">dialog</name><operator pos:start="47:15" pos:end="47:16">++</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="51:9" pos:end="51:37">/* extract Layer or Marked */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:52"><expr pos:start="53:9" pos:end="53:51"><name pos:start="53:9" pos:end="53:13">layer</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:51"><name pos:start="53:17" pos:end="53:22">strtol</name><argument_list pos:start="53:23" pos:end="53:51">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">dialog</name></expr></argument>, <argument pos:start="53:32" pos:end="53:46"><expr pos:start="53:32" pos:end="53:46"><operator pos:start="53:32" pos:end="53:32">(</operator><name pos:start="53:33" pos:end="53:36">char</name><operator pos:start="53:37" pos:end="53:37">*</operator><operator pos:start="53:38" pos:end="53:38">*</operator><operator pos:start="53:39" pos:end="53:39">)</operator><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:46">dialog</name></expr></argument>, <argument pos:start="53:49" pos:end="53:50"><expr pos:start="53:49" pos:end="53:50"><literal type="number" pos:start="53:49" pos:end="53:50">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:21"><if pos:start="55:9" pos:end="57:21">if <condition pos:start="55:12" pos:end="55:27">(<expr pos:start="55:13" pos:end="55:26"><operator pos:start="55:13" pos:end="55:13">*</operator><name pos:start="55:14" pos:end="55:19">dialog</name> <operator pos:start="55:21" pos:end="55:22">!=</operator> <literal type="char" pos:start="55:24" pos:end="55:26">','</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:21"><block_content pos:start="57:13" pos:end="57:21">

            <continue pos:start="57:13" pos:end="57:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:17"><expr pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:14">dialog</name><operator pos:start="59:15" pos:end="59:16">++</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="63:9" pos:end="63:50">/* rescale timing to ASS time base (ms) */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:65"><expr pos:start="65:9" pos:end="65:64"><name pos:start="65:9" pos:end="65:16">ts_start</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:64"><name pos:start="65:20" pos:end="65:31">av_rescale_q</name><argument_list pos:start="65:32" pos:end="65:64">(<argument pos:start="65:33" pos:end="65:40"><expr pos:start="65:33" pos:end="65:40"><name pos:start="65:33" pos:end="65:40"><name pos:start="65:33" pos:end="65:35">pkt</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:40">pts</name></name></expr></argument>, <argument pos:start="65:43" pos:end="65:44"><expr pos:start="65:43" pos:end="65:44"><name pos:start="65:43" pos:end="65:44">tb</name></expr></argument>, <argument pos:start="65:47" pos:end="65:63"><expr pos:start="65:47" pos:end="65:63"><call pos:start="65:47" pos:end="65:63"><name pos:start="65:47" pos:end="65:55">av_make_q</name><argument_list pos:start="65:56" pos:end="65:63">(<argument pos:start="65:57" pos:end="65:57"><expr pos:start="65:57" pos:end="65:57"><literal type="number" pos:start="65:57" pos:end="65:57">1</literal></expr></argument>, <argument pos:start="65:60" pos:end="65:62"><expr pos:start="65:60" pos:end="65:62"><literal type="number" pos:start="65:60" pos:end="65:62">100</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:77"><if pos:start="67:9" pos:end="69:77">if <condition pos:start="67:12" pos:end="67:32">(<expr pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:15">pkt</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:25">duration</name></name> <operator pos:start="67:27" pos:end="67:28">!=</operator> <operator pos:start="67:30" pos:end="67:30">-</operator><literal type="number" pos:start="67:31" pos:end="67:31">1</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:77"><block_content pos:start="69:13" pos:end="69:77">

            <expr_stmt pos:start="69:13" pos:end="69:77"><expr pos:start="69:13" pos:end="69:76"><name pos:start="69:13" pos:end="69:23">ts_duration</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:76"><name pos:start="69:27" pos:end="69:38">av_rescale_q</name><argument_list pos:start="69:39" pos:end="69:76">(<argument pos:start="69:40" pos:end="69:52"><expr pos:start="69:40" pos:end="69:52"><name pos:start="69:40" pos:end="69:52"><name pos:start="69:40" pos:end="69:42">pkt</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:52">duration</name></name></expr></argument>, <argument pos:start="69:55" pos:end="69:56"><expr pos:start="69:55" pos:end="69:56"><name pos:start="69:55" pos:end="69:56">tb</name></expr></argument>, <argument pos:start="69:59" pos:end="69:75"><expr pos:start="69:59" pos:end="69:75"><call pos:start="69:59" pos:end="69:75"><name pos:start="69:59" pos:end="69:67">av_make_q</name><argument_list pos:start="69:68" pos:end="69:75">(<argument pos:start="69:69" pos:end="69:69"><expr pos:start="69:69" pos:end="69:69"><literal type="number" pos:start="69:69" pos:end="69:69">1</literal></expr></argument>, <argument pos:start="69:72" pos:end="69:74"><expr pos:start="69:72" pos:end="69:74"><literal type="number" pos:start="69:72" pos:end="69:74">100</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:79"><expr pos:start="71:9" pos:end="71:78"><name pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:11">sub</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:29">end_display_time</name></name> <operator pos:start="71:31" pos:end="71:31">=</operator> <call pos:start="71:33" pos:end="71:78"><name pos:start="71:33" pos:end="71:37">FFMAX</name><argument_list pos:start="71:38" pos:end="71:78">(<argument pos:start="71:39" pos:end="71:59"><expr pos:start="71:39" pos:end="71:59"><name pos:start="71:39" pos:end="71:59"><name pos:start="71:39" pos:end="71:41">sub</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:59">end_display_time</name></name></expr></argument>, <argument pos:start="71:62" pos:end="71:77"><expr pos:start="71:62" pos:end="71:77"><literal type="number" pos:start="71:62" pos:end="71:63">10</literal> <operator pos:start="71:65" pos:end="71:65">*</operator> <name pos:start="71:67" pos:end="71:77">ts_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:73">/* construct ASS (standalone file form with timestamps) string */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:50"><expr pos:start="77:9" pos:end="77:49"><call pos:start="77:9" pos:end="77:49"><name pos:start="77:9" pos:end="77:18">av_bprintf</name><argument_list pos:start="77:19" pos:end="77:49">(<argument pos:start="77:20" pos:end="77:23"><expr pos:start="77:20" pos:end="77:23"><operator pos:start="77:20" pos:end="77:20">&amp;</operator><name pos:start="77:21" pos:end="77:23">buf</name></expr></argument>, <argument pos:start="77:26" pos:end="77:41"><expr pos:start="77:26" pos:end="77:41"><literal type="string" pos:start="77:26" pos:end="77:41">"Dialogue: %ld,"</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:48"><expr pos:start="77:44" pos:end="77:48"><name pos:start="77:44" pos:end="77:48">layer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:34"><expr pos:start="79:9" pos:end="79:33"><call pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:17">insert_ts</name><argument_list pos:start="79:18" pos:end="79:33">(<argument pos:start="79:19" pos:end="79:22"><expr pos:start="79:19" pos:end="79:22"><operator pos:start="79:19" pos:end="79:19">&amp;</operator><name pos:start="79:20" pos:end="79:22">buf</name></expr></argument>, <argument pos:start="79:25" pos:end="79:32"><expr pos:start="79:25" pos:end="79:32"><name pos:start="79:25" pos:end="79:32">ts_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:73"><expr pos:start="81:9" pos:end="81:72"><call pos:start="81:9" pos:end="81:72"><name pos:start="81:9" pos:end="81:17">insert_ts</name><argument_list pos:start="81:18" pos:end="81:72">(<argument pos:start="81:19" pos:end="81:22"><expr pos:start="81:19" pos:end="81:22"><operator pos:start="81:19" pos:end="81:19">&amp;</operator><name pos:start="81:20" pos:end="81:22">buf</name></expr></argument>, <argument pos:start="81:25" pos:end="81:71"><expr pos:start="81:25" pos:end="81:71"><ternary pos:start="81:25" pos:end="81:71"><condition pos:start="81:25" pos:end="81:43"><expr pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:35">ts_duration</name> <operator pos:start="81:37" pos:end="81:38">==</operator> <operator pos:start="81:40" pos:end="81:40">-</operator><literal type="number" pos:start="81:41" pos:end="81:41">1</literal></expr> ?</condition><then pos:start="81:45" pos:end="81:46"> <expr pos:start="81:45" pos:end="81:46"><operator pos:start="81:45" pos:end="81:45">-</operator><literal type="number" pos:start="81:46" pos:end="81:46">1</literal></expr> </then><else pos:start="81:48" pos:end="81:71">: <expr pos:start="81:50" pos:end="81:71"><name pos:start="81:50" pos:end="81:57">ts_start</name> <operator pos:start="81:59" pos:end="81:59">+</operator> <name pos:start="81:61" pos:end="81:71">ts_duration</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><call pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:18">av_bprintf</name><argument_list pos:start="83:19" pos:end="83:42">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:23">buf</name></expr></argument>, <argument pos:start="83:26" pos:end="83:33"><expr pos:start="83:26" pos:end="83:33"><literal type="string" pos:start="83:26" pos:end="83:33">"%s\r\n"</literal></expr></argument>, <argument pos:start="83:36" pos:end="83:41"><expr pos:start="83:36" pos:end="83:41"><name pos:start="83:36" pos:end="83:41">dialog</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:20">final_dialog</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:41"><name pos:start="87:24" pos:end="87:32">av_strdup</name><argument_list pos:start="87:33" pos:end="87:41">(<argument pos:start="87:34" pos:end="87:40"><expr pos:start="87:34" pos:end="87:40"><name pos:start="87:34" pos:end="87:40"><name pos:start="87:34" pos:end="87:36">buf</name><operator pos:start="87:37" pos:end="87:37">.</operator><name pos:start="87:38" pos:end="87:40">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="97:9"><if pos:start="89:9" pos:end="97:9">if <condition pos:start="89:12" pos:end="89:58">(<expr pos:start="89:13" pos:end="89:57"><operator pos:start="89:13" pos:end="89:13">!</operator><call pos:start="89:14" pos:end="89:40"><name pos:start="89:14" pos:end="89:34">av_bprint_is_complete</name><argument_list pos:start="89:35" pos:end="89:40">(<argument pos:start="89:36" pos:end="89:39"><expr pos:start="89:36" pos:end="89:39"><operator pos:start="89:36" pos:end="89:36">&amp;</operator><name pos:start="89:37" pos:end="89:39">buf</name></expr></argument>)</argument_list></call> <operator pos:start="89:42" pos:end="89:43">||</operator> <operator pos:start="89:45" pos:end="89:45">!</operator><name pos:start="89:46" pos:end="89:57">final_dialog</name></expr>)</condition> <block pos:start="89:60" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:35">

            <expr_stmt pos:start="91:13" pos:end="91:36"><expr pos:start="91:13" pos:end="91:35"><call pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:20">av_freep</name><argument_list pos:start="91:21" pos:end="91:35">(<argument pos:start="91:22" pos:end="91:34"><expr pos:start="91:22" pos:end="91:34"><operator pos:start="91:22" pos:end="91:22">&amp;</operator><name pos:start="91:23" pos:end="91:34">final_dialog</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:43"><expr pos:start="93:13" pos:end="93:42"><call pos:start="93:13" pos:end="93:42"><name pos:start="93:13" pos:end="93:30">av_bprint_finalize</name><argument_list pos:start="93:31" pos:end="93:42">(<argument pos:start="93:32" pos:end="93:35"><expr pos:start="93:32" pos:end="93:35"><operator pos:start="93:32" pos:end="93:32">&amp;</operator><name pos:start="93:33" pos:end="93:35">buf</name></expr></argument>, <argument pos:start="93:38" pos:end="93:41"><expr pos:start="93:38" pos:end="93:41"><name pos:start="93:38" pos:end="93:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="95:13" pos:end="95:35">return <expr pos:start="95:20" pos:end="95:34"><call pos:start="95:20" pos:end="95:34"><name pos:start="95:20" pos:end="95:26">AVERROR</name><argument_list pos:start="95:27" pos:end="95:34">(<argument pos:start="95:28" pos:end="95:33"><expr pos:start="95:28" pos:end="95:33"><name pos:start="95:28" pos:end="95:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:29"><expr pos:start="99:9" pos:end="99:28"><call pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:16">av_freep</name><argument_list pos:start="99:17" pos:end="99:28">(<argument pos:start="99:18" pos:end="99:27"><expr pos:start="99:18" pos:end="99:27"><operator pos:start="99:18" pos:end="99:18">&amp;</operator><name pos:start="99:19" pos:end="99:27"><name pos:start="99:19" pos:end="99:22">rect</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:27">ass</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:33"><expr pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:12">rect</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:17">ass</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:32">final_dialog</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="107:5" pos:end="107:35"><expr pos:start="107:5" pos:end="107:34"><call pos:start="107:5" pos:end="107:34"><name pos:start="107:5" pos:end="107:22">av_bprint_finalize</name><argument_list pos:start="107:23" pos:end="107:34">(<argument pos:start="107:24" pos:end="107:27"><expr pos:start="107:24" pos:end="107:27"><operator pos:start="107:24" pos:end="107:24">&amp;</operator><name pos:start="107:25" pos:end="107:27">buf</name></expr></argument>, <argument pos:start="107:30" pos:end="107:33"><expr pos:start="107:30" pos:end="107:33"><name pos:start="107:30" pos:end="107:33">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
