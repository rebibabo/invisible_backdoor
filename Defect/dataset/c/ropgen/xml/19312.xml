<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19312.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">get_physical_address_data</name><parameter_list pos:start="1:37" pos:end="5:79">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">CPUState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">env</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:55">target_phys_addr_t</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:65">physical</name></decl></parameter>, <parameter pos:start="3:68" pos:end="3:76"><decl pos:start="3:68" pos:end="3:76"><type pos:start="3:68" pos:end="3:76"><name pos:start="3:68" pos:end="3:70">int</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:76">prot</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:57"><decl pos:start="5:38" pos:end="5:57"><type pos:start="5:38" pos:end="5:57"><name pos:start="5:38" pos:end="5:49">target_ulong</name></type> <name pos:start="5:51" pos:end="5:57">address</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:65"><decl pos:start="5:60" pos:end="5:65"><type pos:start="5:60" pos:end="5:65"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:65">rw</name></decl></parameter>, <parameter pos:start="5:68" pos:end="5:78"><decl pos:start="5:68" pos:end="5:78"><type pos:start="5:68" pos:end="5:78"><name pos:start="5:68" pos:end="5:70">int</name></type> <name pos:start="5:72" pos:end="5:78">is_user</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="119:1">{<block_content pos:start="9:5" pos:end="117:13">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:20">context</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">is_nucleus</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:33">(<expr pos:start="17:9" pos:end="17:32"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:17"><name pos:start="17:10" pos:end="17:12">env</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:17">lsu</name></name> <operator pos:start="17:19" pos:end="17:19">&amp;</operator> <name pos:start="17:21" pos:end="17:26">DMMU_E</name><operator pos:start="17:27" pos:end="17:27">)</operator> <operator pos:start="17:29" pos:end="17:30">==</operator> <literal type="number" pos:start="17:32" pos:end="17:32">0</literal></expr>)</condition> <block pos:start="17:35" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:17"> <comment type="block" pos:start="17:37" pos:end="17:55">/* DMMU disabled */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:58"><expr pos:start="19:9" pos:end="19:57"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:17">physical</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:57"><name pos:start="19:21" pos:end="19:48">ultrasparc_truncate_physical</name><argument_list pos:start="19:49" pos:end="19:57">(<argument pos:start="19:50" pos:end="19:56"><expr pos:start="19:50" pos:end="19:56"><name pos:start="19:50" pos:end="19:56">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:13">prot</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:25">PAGE_READ</name> <operator pos:start="21:27" pos:end="21:27">|</operator> <name pos:start="21:29" pos:end="21:38">PAGE_WRITE</name></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:53"><expr pos:start="29:5" pos:end="29:52"><name pos:start="29:5" pos:end="29:11">context</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:43"><name pos:start="29:15" pos:end="29:17">env</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:23">dmmu</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:43">mmu_primary_context</name></name> <operator pos:start="29:45" pos:end="29:45">&amp;</operator> <literal type="number" pos:start="29:47" pos:end="29:52">0x1fff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:14">is_nucleus</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:24"><name pos:start="31:18" pos:end="31:20">env</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:24">tl</name></name> <operator pos:start="31:26" pos:end="31:26">&gt;</operator> <literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="108:0">for <control pos:start="35:9" pos:end="35:28">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:23"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <literal type="number" pos:start="35:21" pos:end="35:22">64</literal></expr>;</condition> <incr pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:25">i</name><operator pos:start="35:26" pos:end="35:27">++</operator></expr></incr>)</control> <block pos:start="35:30" pos:end="108:0">{<block_content pos:start="39:9" pos:end="103:9">

        <comment type="line" pos:start="37:9" pos:end="37:41">// ctx match, vaddr match, valid?</comment>

        <if_stmt pos:start="39:9" pos:end="103:9"><if pos:start="39:9" pos:end="103:9">if <condition pos:start="39:12" pos:end="43:45">(<expr pos:start="39:13" pos:end="43:44"><call pos:start="39:13" pos:end="43:44"><name pos:start="39:13" pos:end="39:32">ultrasparc_tag_match</name><argument_list pos:start="39:33" pos:end="43:44">(<argument pos:start="39:34" pos:end="39:46"><expr pos:start="39:34" pos:end="39:46"><operator pos:start="39:34" pos:end="39:34">&amp;</operator><name pos:start="39:35" pos:end="39:46"><name pos:start="39:35" pos:end="39:37">env</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:43">dtlb</name><index pos:start="39:44" pos:end="39:46">[<expr pos:start="39:45" pos:end="39:45"><name pos:start="39:45" pos:end="39:45">i</name></expr>]</index></name></expr></argument>,

                                 <argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:40">address</name></expr></argument>, <argument pos:start="41:43" pos:end="41:49"><expr pos:start="41:43" pos:end="41:49"><name pos:start="41:43" pos:end="41:49">context</name></expr></argument>, <argument pos:start="41:52" pos:end="41:59"><expr pos:start="41:52" pos:end="41:59"><name pos:start="41:52" pos:end="41:59">physical</name></expr></argument>,

                                 <argument pos:start="43:34" pos:end="43:43"><expr pos:start="43:34" pos:end="43:43"><name pos:start="43:34" pos:end="43:43">is_nucleus</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:47" pos:end="103:9">{<block_content pos:start="47:13" pos:end="101:21">

            <comment type="line" pos:start="45:13" pos:end="45:25">// access ok?</comment>

            <if_stmt pos:start="47:13" pos:end="91:13"><if pos:start="47:13" pos:end="91:13">if <condition pos:start="47:16" pos:end="49:57">(<expr pos:start="47:17" pos:end="49:56"><operator pos:start="47:17" pos:end="47:17">(</operator><operator pos:start="47:18" pos:end="47:18">(</operator><name pos:start="47:19" pos:end="47:30"><name pos:start="47:19" pos:end="47:21">env</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:27">dtlb</name><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">i</name></expr>]</index></name><operator pos:start="47:31" pos:end="47:31">.</operator><name pos:start="47:32" pos:end="47:34">tte</name> <operator pos:start="47:36" pos:end="47:36">&amp;</operator> <literal type="number" pos:start="47:38" pos:end="47:40">0x4</literal><operator pos:start="47:41" pos:end="47:41">)</operator> <operator pos:start="47:43" pos:end="47:44">&amp;&amp;</operator> <name pos:start="47:46" pos:end="47:52">is_user</name><operator pos:start="47:53" pos:end="47:53">)</operator> <operator pos:start="47:55" pos:end="47:56">||</operator>

                <operator pos:start="49:17" pos:end="49:17">(</operator><operator pos:start="49:18" pos:end="49:18">!</operator><operator pos:start="49:19" pos:end="49:19">(</operator><name pos:start="49:20" pos:end="49:31"><name pos:start="49:20" pos:end="49:22">env</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:28">dtlb</name><index pos:start="49:29" pos:end="49:31">[<expr pos:start="49:30" pos:end="49:30"><name pos:start="49:30" pos:end="49:30">i</name></expr>]</index></name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:35">tte</name> <operator pos:start="49:37" pos:end="49:37">&amp;</operator> <literal type="number" pos:start="49:39" pos:end="49:41">0x2</literal><operator pos:start="49:42" pos:end="49:42">)</operator> <operator pos:start="49:44" pos:end="49:45">&amp;&amp;</operator> <operator pos:start="49:47" pos:end="49:47">(</operator><name pos:start="49:48" pos:end="49:49">rw</name> <operator pos:start="49:51" pos:end="49:52">==</operator> <literal type="number" pos:start="49:54" pos:end="49:54">1</literal><operator pos:start="49:55" pos:end="49:55">)</operator><operator pos:start="49:56" pos:end="49:56">)</operator></expr>)</condition> <block pos:start="49:59" pos:end="91:13">{<block_content pos:start="51:17" pos:end="89:25">

                <decl_stmt pos:start="51:17" pos:end="51:39"><decl pos:start="51:17" pos:end="51:38"><type pos:start="51:17" pos:end="51:23"><name pos:start="51:17" pos:end="51:23">uint8_t</name></type> <name pos:start="51:25" pos:end="51:34">fault_type</name> <init pos:start="51:36" pos:end="51:38">= <expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">0</literal></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="55:17" pos:end="59:17"><if pos:start="55:17" pos:end="59:17">if <condition pos:start="55:20" pos:end="55:56">(<expr pos:start="55:21" pos:end="55:55"><operator pos:start="55:21" pos:end="55:21">(</operator><name pos:start="55:22" pos:end="55:33"><name pos:start="55:22" pos:end="55:24">env</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:30">dtlb</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><name pos:start="55:32" pos:end="55:32">i</name></expr>]</index></name><operator pos:start="55:34" pos:end="55:34">.</operator><name pos:start="55:35" pos:end="55:37">tte</name> <operator pos:start="55:39" pos:end="55:39">&amp;</operator> <literal type="number" pos:start="55:41" pos:end="55:43">0x4</literal><operator pos:start="55:44" pos:end="55:44">)</operator> <operator pos:start="55:46" pos:end="55:47">&amp;&amp;</operator> <name pos:start="55:49" pos:end="55:55">is_user</name></expr>)</condition> <block pos:start="55:58" pos:end="59:17">{<block_content pos:start="57:21" pos:end="57:36">

                    <expr_stmt pos:start="57:21" pos:end="57:36"><expr pos:start="57:21" pos:end="57:35"><name pos:start="57:21" pos:end="57:30">fault_type</name> <operator pos:start="57:32" pos:end="57:33">|=</operator> <literal type="number" pos:start="57:35" pos:end="57:35">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="57:38" pos:end="57:62">/* privilege violation */</comment>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="63:17" pos:end="65:39"><if pos:start="63:17" pos:end="65:39">if <condition pos:start="63:20" pos:end="63:39">(<expr pos:start="63:21" pos:end="63:38"><name pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:23">env</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:29">dmmu</name><operator pos:start="63:30" pos:end="63:30">.</operator><name pos:start="63:31" pos:end="63:34">sfsr</name></name> <operator pos:start="63:36" pos:end="63:36">&amp;</operator> <literal type="number" pos:start="63:38" pos:end="63:38">1</literal></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:39"><block_content pos:start="65:21" pos:end="65:39"> <comment type="block" pos:start="63:41" pos:end="63:67">/* Fault status register */</comment>

                    <expr_stmt pos:start="65:21" pos:end="65:39"><expr pos:start="65:21" pos:end="65:38"><name pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:23">env</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:29">dmmu</name><operator pos:start="65:30" pos:end="65:30">.</operator><name pos:start="65:31" pos:end="65:34">sfsr</name></name> <operator pos:start="65:36" pos:end="65:36">=</operator> <literal type="number" pos:start="65:38" pos:end="65:38">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="65:41" pos:end="67:62">/* overflow (not read before

                                             another fault) */</comment>



                <expr_stmt pos:start="71:17" pos:end="71:72"><expr pos:start="71:17" pos:end="71:71"><name pos:start="71:17" pos:end="71:30"><name pos:start="71:17" pos:end="71:19">env</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:25">dmmu</name><operator pos:start="71:26" pos:end="71:26">.</operator><name pos:start="71:27" pos:end="71:30">sfsr</name></name> <operator pos:start="71:32" pos:end="71:33">|=</operator> <operator pos:start="71:35" pos:end="71:35">(</operator><name pos:start="71:36" pos:end="71:42">is_user</name> <operator pos:start="71:44" pos:end="71:45">&lt;&lt;</operator> <literal type="number" pos:start="71:47" pos:end="71:47">3</literal><operator pos:start="71:48" pos:end="71:48">)</operator> <operator pos:start="71:50" pos:end="71:50">|</operator> <operator pos:start="71:52" pos:end="71:52">(</operator><operator pos:start="71:53" pos:end="71:53">(</operator><name pos:start="71:54" pos:end="71:55">rw</name> <operator pos:start="71:57" pos:end="71:58">==</operator> <literal type="number" pos:start="71:60" pos:end="71:60">1</literal><operator pos:start="71:61" pos:end="71:61">)</operator> <operator pos:start="71:63" pos:end="71:64">&lt;&lt;</operator> <literal type="number" pos:start="71:66" pos:end="71:66">2</literal><operator pos:start="71:67" pos:end="71:67">)</operator> <operator pos:start="71:69" pos:end="71:69">|</operator> <literal type="number" pos:start="71:71" pos:end="71:71">1</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="75:17" pos:end="75:52"><expr pos:start="75:17" pos:end="75:51"><name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:19">env</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:25">dmmu</name><operator pos:start="75:26" pos:end="75:26">.</operator><name pos:start="75:27" pos:end="75:30">sfsr</name></name> <operator pos:start="75:32" pos:end="75:33">|=</operator> <operator pos:start="75:35" pos:end="75:35">(</operator><name pos:start="75:36" pos:end="75:45">fault_type</name> <operator pos:start="75:47" pos:end="75:48">&lt;&lt;</operator> <literal type="number" pos:start="75:50" pos:end="75:50">7</literal><operator pos:start="75:51" pos:end="75:51">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="79:17" pos:end="79:41"><expr pos:start="79:17" pos:end="79:40"><name pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:19">env</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:25">dmmu</name><operator pos:start="79:26" pos:end="79:26">.</operator><name pos:start="79:27" pos:end="79:30">sfar</name></name> <operator pos:start="79:32" pos:end="79:32">=</operator> <name pos:start="79:34" pos:end="79:40">address</name></expr>;</expr_stmt> <comment type="block" pos:start="79:43" pos:end="79:70">/* Fault address register */</comment>

                <expr_stmt pos:start="81:17" pos:end="84:0"><expr pos:start="81:17" pos:end="81:48"><name pos:start="81:17" pos:end="81:36"><name pos:start="81:17" pos:end="81:19">env</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:36">exception_index</name></name> <operator pos:start="81:38" pos:end="81:38">=</operator> <name pos:start="81:40" pos:end="81:48">TT_DFAULT</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="83:1" pos:end="83:16">#<cpp:directive pos:start="83:2" pos:end="83:6">ifdef</cpp:directive> <name pos:start="83:8" pos:end="83:16">DEBUG_MMU</name></cpp:ifdef>

                <expr_stmt pos:start="85:17" pos:end="88:0"><expr pos:start="85:17" pos:end="85:60"><call pos:start="85:17" pos:end="85:60"><name pos:start="85:17" pos:end="85:22">printf</name><argument_list pos:start="85:23" pos:end="85:60">(<argument pos:start="85:24" pos:end="85:50"><expr pos:start="85:24" pos:end="85:50"><literal type="string" pos:start="85:24" pos:end="85:38">"DFAULT at 0x%"</literal> <name pos:start="85:40" pos:end="85:45">PRIx64</name> <literal type="string" pos:start="85:47" pos:end="85:50">"\n"</literal></expr></argument>, <argument pos:start="85:53" pos:end="85:59"><expr pos:start="85:53" pos:end="85:59"><name pos:start="85:53" pos:end="85:59">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="87:1" pos:end="87:6">#<cpp:directive pos:start="87:2" pos:end="87:6">endif</cpp:directive></cpp:endif>

                <return pos:start="89:17" pos:end="89:25">return <expr pos:start="89:24" pos:end="89:24"><literal type="number" pos:start="89:24" pos:end="89:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:30"><expr pos:start="93:13" pos:end="93:29"><operator pos:start="93:13" pos:end="93:13">*</operator><name pos:start="93:14" pos:end="93:17">prot</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:29">PAGE_READ</name></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="97:36"><if pos:start="95:13" pos:end="97:36">if <condition pos:start="95:16" pos:end="95:39">(<expr pos:start="95:17" pos:end="95:38"><name pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:19">env</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:25">dtlb</name><index pos:start="95:26" pos:end="95:28">[<expr pos:start="95:27" pos:end="95:27"><name pos:start="95:27" pos:end="95:27">i</name></expr>]</index></name><operator pos:start="95:29" pos:end="95:29">.</operator><name pos:start="95:30" pos:end="95:32">tte</name> <operator pos:start="95:34" pos:end="95:34">&amp;</operator> <literal type="number" pos:start="95:36" pos:end="95:38">0x2</literal></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:36"><block_content pos:start="97:17" pos:end="97:36">

                <expr_stmt pos:start="97:17" pos:end="97:36"><expr pos:start="97:17" pos:end="97:35"><operator pos:start="97:17" pos:end="97:17">*</operator><name pos:start="97:18" pos:end="97:21">prot</name> <operator pos:start="97:23" pos:end="97:24">|=</operator> <name pos:start="97:26" pos:end="97:35">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:43"><expr pos:start="99:13" pos:end="99:42"><call pos:start="99:13" pos:end="99:42"><name pos:start="99:13" pos:end="99:24">TTE_SET_USED</name><argument_list pos:start="99:25" pos:end="99:42">(<argument pos:start="99:26" pos:end="99:41"><expr pos:start="99:26" pos:end="99:41"><name pos:start="99:26" pos:end="99:37"><name pos:start="99:26" pos:end="99:28">env</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:34">dtlb</name><index pos:start="99:35" pos:end="99:37">[<expr pos:start="99:36" pos:end="99:36"><name pos:start="99:36" pos:end="99:36">i</name></expr>]</index></name><operator pos:start="99:38" pos:end="99:38">.</operator><name pos:start="99:39" pos:end="99:41">tte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="101:13" pos:end="101:21">return <expr pos:start="101:20" pos:end="101:20"><literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:ifdef pos:start="107:1" pos:end="107:16">#<cpp:directive pos:start="107:2" pos:end="107:6">ifdef</cpp:directive> <name pos:start="107:8" pos:end="107:16">DEBUG_MMU</name></cpp:ifdef>

    <expr_stmt pos:start="109:5" pos:end="112:0"><expr pos:start="109:5" pos:end="109:47"><call pos:start="109:5" pos:end="109:47"><name pos:start="109:5" pos:end="109:10">printf</name><argument_list pos:start="109:11" pos:end="109:47">(<argument pos:start="109:12" pos:end="109:37"><expr pos:start="109:12" pos:end="109:37"><literal type="string" pos:start="109:12" pos:end="109:25">"DMISS at 0x%"</literal> <name pos:start="109:27" pos:end="109:32">PRIx64</name> <literal type="string" pos:start="109:34" pos:end="109:37">"\n"</literal></expr></argument>, <argument pos:start="109:40" pos:end="109:46"><expr pos:start="109:40" pos:end="109:46"><name pos:start="109:40" pos:end="109:46">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="113:5" pos:end="113:60"><expr pos:start="113:5" pos:end="113:59"><name pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:7">env</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:13">dmmu</name><operator pos:start="113:14" pos:end="113:14">.</operator><name pos:start="113:15" pos:end="113:24">tag_access</name></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <operator pos:start="113:28" pos:end="113:28">(</operator><name pos:start="113:29" pos:end="113:35">address</name> <operator pos:start="113:37" pos:end="113:37">&amp;</operator> <operator pos:start="113:39" pos:end="113:39">~</operator><literal type="number" pos:start="113:40" pos:end="113:48">0x1fffULL</literal><operator pos:start="113:49" pos:end="113:49">)</operator> <operator pos:start="113:51" pos:end="113:51">|</operator> <name pos:start="113:53" pos:end="113:59">context</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:36"><expr pos:start="115:5" pos:end="115:35"><name pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:7">env</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:24">exception_index</name></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:35">TT_DMISS</name></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
