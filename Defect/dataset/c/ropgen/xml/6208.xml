<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6208.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">flic_read_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="217:1">{<block_content pos:start="5:5" pos:end="215:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">FlicDemuxContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:26">flic</name> <init pos:start="5:28" pos:end="5:41">= <expr pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:30">s</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:42"><name pos:start="9:19" pos:end="9:24">header</name><index pos:start="9:25" pos:end="9:42">[<expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41">FLIC_HEADER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">ast</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">speed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">magic_number</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:47"><decl pos:start="17:5" pos:end="17:46"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">char</name></type> <name pos:start="17:19" pos:end="17:46"><name pos:start="17:19" pos:end="17:26">preamble</name><index pos:start="17:27" pos:end="17:46">[<expr pos:start="17:28" pos:end="17:45"><name pos:start="17:28" pos:end="17:45">FLIC_PREAMBLE_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:8">flic</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:22">frame_number</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:65">/* load the whole header and pull out the width and height */</comment>

    <if_stmt pos:start="27:5" pos:end="29:28"><if pos:start="27:5" pos:end="29:28">if <condition pos:start="27:8" pos:end="27:68">(<expr pos:start="27:9" pos:end="27:67"><call pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:17">avio_read</name><argument_list pos:start="27:18" pos:end="27:47">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">pb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:28"><expr pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:28">header</name></expr></argument>, <argument pos:start="27:31" pos:end="27:46"><expr pos:start="27:31" pos:end="27:46"><name pos:start="27:31" pos:end="27:46">FLIC_HEADER_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="27:49" pos:end="27:50">!=</operator> <name pos:start="27:52" pos:end="27:67">FLIC_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:28"><block_content pos:start="29:9" pos:end="29:28">

        <return pos:start="29:9" pos:end="29:28">return <expr pos:start="29:16" pos:end="29:27"><call pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:27">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:16">magic_number</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:26">AV_RL16</name><argument_list pos:start="33:27" pos:end="33:38">(<argument pos:start="33:28" pos:end="33:37"><expr pos:start="33:28" pos:end="33:37"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:37"><name pos:start="33:29" pos:end="33:34">header</name><index pos:start="33:35" pos:end="33:37">[<expr pos:start="33:36" pos:end="33:36"><literal type="number" pos:start="33:36" pos:end="33:36">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:9">speed</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:19">AV_RL32</name><argument_list pos:start="35:20" pos:end="35:34">(<argument pos:start="35:21" pos:end="35:33"><expr pos:start="35:21" pos:end="35:33"><operator pos:start="35:21" pos:end="35:21">&amp;</operator><name pos:start="35:22" pos:end="35:33"><name pos:start="35:22" pos:end="35:27">header</name><index pos:start="35:28" pos:end="35:33">[<expr pos:start="35:29" pos:end="35:32"><literal type="number" pos:start="35:29" pos:end="35:32">0x10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:35"><if pos:start="37:5" pos:end="39:35">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:13">speed</name> <operator pos:start="37:15" pos:end="37:16">==</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:35"><block_content pos:start="39:9" pos:end="39:35">

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:13">speed</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:34">FLIC_DEFAULT_SPEED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:40">/* initialize the decoder streams */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:6">st</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <call pos:start="45:10" pos:end="45:37"><name pos:start="45:10" pos:end="45:28">avformat_new_stream</name><argument_list pos:start="45:29" pos:end="45:37">(<argument pos:start="45:30" pos:end="45:30"><expr pos:start="45:30" pos:end="45:30"><name pos:start="45:30" pos:end="45:30">s</name></expr></argument>, <argument pos:start="45:33" pos:end="45:36"><expr pos:start="45:33" pos:end="45:36"><name pos:start="45:33" pos:end="45:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:31"><if pos:start="47:5" pos:end="49:31">if <condition pos:start="47:8" pos:end="47:12">(<expr pos:start="47:9" pos:end="47:11"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:11">st</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:31"><block_content pos:start="49:9" pos:end="49:31">

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:41"><expr pos:start="51:5" pos:end="51:40"><name pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:8">flic</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:28">video_stream_index</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <name pos:start="51:32" pos:end="51:40"><name pos:start="51:32" pos:end="51:33">st</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:40">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:47"><expr pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:6">st</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:13">codec</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:25">codec_type</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:6">st</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:13">codec</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:23">codec_id</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:42">AV_CODEC_ID_FLIC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:6">st</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:13">codec</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:24">codec_tag</name></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <literal type="number" pos:start="57:28" pos:end="57:28">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="57:32" pos:end="57:46">/* no fourcc */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:46"><expr pos:start="59:5" pos:end="59:45"><name pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:6">st</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:13">codec</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:20">width</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <call pos:start="59:24" pos:end="59:45"><name pos:start="59:24" pos:end="59:30">AV_RL16</name><argument_list pos:start="59:31" pos:end="59:45">(<argument pos:start="59:32" pos:end="59:44"><expr pos:start="59:32" pos:end="59:44"><operator pos:start="59:32" pos:end="59:32">&amp;</operator><name pos:start="59:33" pos:end="59:44"><name pos:start="59:33" pos:end="59:38">header</name><index pos:start="59:39" pos:end="59:44">[<expr pos:start="59:40" pos:end="59:43"><literal type="number" pos:start="59:40" pos:end="59:43">0x08</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:47"><expr pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:6">st</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:13">codec</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:21">height</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:46"><name pos:start="61:25" pos:end="61:31">AV_RL16</name><argument_list pos:start="61:32" pos:end="61:46">(<argument pos:start="61:33" pos:end="61:45"><expr pos:start="61:33" pos:end="61:45"><operator pos:start="61:33" pos:end="61:33">&amp;</operator><name pos:start="61:34" pos:end="61:45"><name pos:start="61:34" pos:end="61:39">header</name><index pos:start="61:40" pos:end="61:45">[<expr pos:start="61:41" pos:end="61:44"><literal type="number" pos:start="61:41" pos:end="61:44">0x0A</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="79:5"><if pos:start="65:5" pos:end="79:5">if <condition pos:start="65:8" pos:end="65:48">(<expr pos:start="65:9" pos:end="65:47"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:25"><name pos:start="65:10" pos:end="65:11">st</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:18">codec</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:25">width</name></name> <operator pos:start="65:27" pos:end="65:28">||</operator> <operator pos:start="65:30" pos:end="65:30">!</operator><name pos:start="65:31" pos:end="65:47"><name pos:start="65:31" pos:end="65:32">st</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:39">codec</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:47">height</name></name></expr>)</condition> <block pos:start="65:50" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:32">

        <comment type="block" pos:start="67:9" pos:end="67:56">/* Ugly hack needed for the following sample: */</comment>

        <comment type="block" pos:start="69:9" pos:end="69:71">/* http://samples.mplayerhq.hu/fli-flc/fli-bugs/specular.flc */</comment>

        <expr_stmt pos:start="71:9" pos:end="73:73"><expr pos:start="71:9" pos:end="73:72"><call pos:start="71:9" pos:end="73:72"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="73:72">(<argument pos:start="71:16" pos:end="71:16"><expr pos:start="71:16" pos:end="71:16"><name pos:start="71:16" pos:end="71:16">s</name></expr></argument>, <argument pos:start="71:19" pos:end="71:32"><expr pos:start="71:19" pos:end="71:32"><name pos:start="71:19" pos:end="71:32">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="73:16" pos:end="73:71"><expr pos:start="73:16" pos:end="73:71"><literal type="string" pos:start="73:16" pos:end="73:71">"File with no specified width/height. Trying 640x480.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:10">st</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:17">codec</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:24">width</name></name>  <operator pos:start="75:27" pos:end="75:27">=</operator> <literal type="number" pos:start="75:29" pos:end="75:31">640</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:10">st</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:17">codec</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:25">height</name></name> <operator pos:start="77:27" pos:end="77:27">=</operator> <literal type="number" pos:start="77:29" pos:end="77:31">480</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:50">/* send over the whole 128-byte FLIC header */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:49"><expr pos:start="85:5" pos:end="85:48"><name pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:6">st</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:13">codec</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:29">extradata_size</name></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <name pos:start="85:33" pos:end="85:48">FLIC_HEADER_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:55"><expr pos:start="87:5" pos:end="87:54"><name pos:start="87:5" pos:end="87:24"><name pos:start="87:5" pos:end="87:6">st</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:13">codec</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:24">extradata</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <call pos:start="87:28" pos:end="87:54"><name pos:start="87:28" pos:end="87:36">av_malloc</name><argument_list pos:start="87:37" pos:end="87:54">(<argument pos:start="87:38" pos:end="87:53"><expr pos:start="87:38" pos:end="87:53"><name pos:start="87:38" pos:end="87:53">FLIC_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:59"><expr pos:start="89:5" pos:end="89:58"><call pos:start="89:5" pos:end="89:58"><name pos:start="89:5" pos:end="89:10">memcpy</name><argument_list pos:start="89:11" pos:end="89:58">(<argument pos:start="89:12" pos:end="89:31"><expr pos:start="89:12" pos:end="89:31"><name pos:start="89:12" pos:end="89:31"><name pos:start="89:12" pos:end="89:13">st</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">codec</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:31">extradata</name></name></expr></argument>, <argument pos:start="89:34" pos:end="89:39"><expr pos:start="89:34" pos:end="89:39"><name pos:start="89:34" pos:end="89:39">header</name></expr></argument>, <argument pos:start="89:42" pos:end="89:57"><expr pos:start="89:42" pos:end="89:57"><name pos:start="89:42" pos:end="89:57">FLIC_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:100">/* peek at the preamble to detect TFTD videos - they seem to always start with an audio chunk */</comment>

    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:74">(<expr pos:start="95:9" pos:end="95:73"><call pos:start="95:9" pos:end="95:51"><name pos:start="95:9" pos:end="95:17">avio_read</name><argument_list pos:start="95:18" pos:end="95:51">(<argument pos:start="95:19" pos:end="95:20"><expr pos:start="95:19" pos:end="95:20"><name pos:start="95:19" pos:end="95:20">pb</name></expr></argument>, <argument pos:start="95:23" pos:end="95:30"><expr pos:start="95:23" pos:end="95:30"><name pos:start="95:23" pos:end="95:30">preamble</name></expr></argument>, <argument pos:start="95:33" pos:end="95:50"><expr pos:start="95:33" pos:end="95:50"><name pos:start="95:33" pos:end="95:50">FLIC_PREAMBLE_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="95:53" pos:end="95:54">!=</operator> <name pos:start="95:56" pos:end="95:73">FLIC_PREAMBLE_SIZE</name></expr>)</condition> <block pos:start="95:76" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:28">

        <expr_stmt pos:start="97:9" pos:end="97:64"><expr pos:start="97:9" pos:end="97:63"><call pos:start="97:9" pos:end="97:63"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="97:63">(<argument pos:start="97:16" pos:end="97:16"><expr pos:start="97:16" pos:end="97:16"><name pos:start="97:16" pos:end="97:16">s</name></expr></argument>, <argument pos:start="97:19" pos:end="97:30"><expr pos:start="97:19" pos:end="97:30"><name pos:start="97:19" pos:end="97:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:33" pos:end="97:62"><expr pos:start="97:33" pos:end="97:62"><literal type="string" pos:start="97:33" pos:end="97:62">"Failed to peek at preamble\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:28">return <expr pos:start="99:16" pos:end="99:27"><call pos:start="99:16" pos:end="99:27"><name pos:start="99:16" pos:end="99:22">AVERROR</name><argument_list pos:start="99:23" pos:end="99:27">(<argument pos:start="99:24" pos:end="99:26"><expr pos:start="99:24" pos:end="99:26"><name pos:start="99:24" pos:end="99:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:49"><expr pos:start="105:5" pos:end="105:48"><call pos:start="105:5" pos:end="105:48"><name pos:start="105:5" pos:end="105:13">avio_seek</name><argument_list pos:start="105:14" pos:end="105:48">(<argument pos:start="105:15" pos:end="105:16"><expr pos:start="105:15" pos:end="105:16"><name pos:start="105:15" pos:end="105:16">pb</name></expr></argument>, <argument pos:start="105:19" pos:end="105:37"><expr pos:start="105:19" pos:end="105:37"><operator pos:start="105:19" pos:end="105:19">-</operator><name pos:start="105:20" pos:end="105:37">FLIC_PREAMBLE_SIZE</name></expr></argument>, <argument pos:start="105:40" pos:end="105:47"><expr pos:start="105:40" pos:end="105:47"><name pos:start="105:40" pos:end="105:47">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="119:7">/* Time to figure out the framerate:

     * If the first preamble's magic number is 0xAAAA then this file is from

     * X-COM: Terror from the Deep. If on the other hand there is a FLIC chunk

     * magic number at offset 0x10 assume this file is from Magic Carpet instead.

     * If neither of the above is true then this is a normal FLIC file.

     */</comment>

    <if_stmt pos:start="121:5" pos:end="211:5"><if pos:start="121:5" pos:end="171:5">if <condition pos:start="121:8" pos:end="121:55">(<expr pos:start="121:9" pos:end="121:54"><call pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:15">AV_RL16</name><argument_list pos:start="121:16" pos:end="121:29">(<argument pos:start="121:17" pos:end="121:28"><expr pos:start="121:17" pos:end="121:28"><operator pos:start="121:17" pos:end="121:17">&amp;</operator><name pos:start="121:18" pos:end="121:28"><name pos:start="121:18" pos:end="121:25">preamble</name><index pos:start="121:26" pos:end="121:28">[<expr pos:start="121:27" pos:end="121:27"><literal type="number" pos:start="121:27" pos:end="121:27">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="121:31" pos:end="121:32">==</operator> <name pos:start="121:34" pos:end="121:54">FLIC_TFTD_CHUNK_AUDIO</name></expr>)</condition> <block pos:start="121:57" pos:end="171:5">{<block_content pos:start="125:9" pos:end="169:63">

        <comment type="block" pos:start="123:9" pos:end="123:72">/* TFTD videos have an extra 22050 Hz 8-bit mono audio stream */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:43"><expr pos:start="125:9" pos:end="125:42"><name pos:start="125:9" pos:end="125:11">ast</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="125:42"><name pos:start="125:15" pos:end="125:33">avformat_new_stream</name><argument_list pos:start="125:34" pos:end="125:42">(<argument pos:start="125:35" pos:end="125:35"><expr pos:start="125:35" pos:end="125:35"><name pos:start="125:35" pos:end="125:35">s</name></expr></argument>, <argument pos:start="125:38" pos:end="125:41"><expr pos:start="125:38" pos:end="125:41"><name pos:start="125:38" pos:end="125:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="129:35"><if pos:start="127:9" pos:end="129:35">if <condition pos:start="127:12" pos:end="127:17">(<expr pos:start="127:13" pos:end="127:16"><operator pos:start="127:13" pos:end="127:13">!</operator><name pos:start="127:14" pos:end="127:16">ast</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:35"><block_content pos:start="129:13" pos:end="129:35">

            <return pos:start="129:13" pos:end="129:35">return <expr pos:start="129:20" pos:end="129:34"><call pos:start="129:20" pos:end="129:34"><name pos:start="129:20" pos:end="129:26">AVERROR</name><argument_list pos:start="129:27" pos:end="129:34">(<argument pos:start="129:28" pos:end="129:33"><expr pos:start="129:28" pos:end="129:33"><name pos:start="129:28" pos:end="129:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:46"><expr pos:start="133:9" pos:end="133:45"><name pos:start="133:9" pos:end="133:32"><name pos:start="133:9" pos:end="133:12">flic</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:32">audio_stream_index</name></name> <operator pos:start="133:34" pos:end="133:34">=</operator> <name pos:start="133:36" pos:end="133:45"><name pos:start="133:36" pos:end="133:38">ast</name><operator pos:start="133:39" pos:end="133:40">-&gt;</operator><name pos:start="133:41" pos:end="133:45">index</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="137:9" pos:end="137:100">/* all audio frames are the same size, so use the size of the first chunk for block_align */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:56"><expr pos:start="139:9" pos:end="139:55"><name pos:start="139:9" pos:end="139:31"><name pos:start="139:9" pos:end="139:11">ast</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:18">codec</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:31">block_align</name></name> <operator pos:start="139:33" pos:end="139:33">=</operator> <call pos:start="139:35" pos:end="139:55"><name pos:start="139:35" pos:end="139:41">AV_RL32</name><argument_list pos:start="139:42" pos:end="139:55">(<argument pos:start="139:43" pos:end="139:54"><expr pos:start="139:43" pos:end="139:54"><operator pos:start="139:43" pos:end="139:43">&amp;</operator><name pos:start="139:44" pos:end="139:54"><name pos:start="139:44" pos:end="139:51">preamble</name><index pos:start="139:52" pos:end="139:54">[<expr pos:start="139:53" pos:end="139:53"><literal type="number" pos:start="139:53" pos:end="139:53">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:52"><expr pos:start="141:9" pos:end="141:51"><name pos:start="141:9" pos:end="141:30"><name pos:start="141:9" pos:end="141:11">ast</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:18">codec</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:30">codec_type</name></name> <operator pos:start="141:32" pos:end="141:32">=</operator> <name pos:start="141:34" pos:end="141:51">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:50"><expr pos:start="143:9" pos:end="143:49"><name pos:start="143:9" pos:end="143:28"><name pos:start="143:9" pos:end="143:11">ast</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:18">codec</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:28">codec_id</name></name> <operator pos:start="143:30" pos:end="143:30">=</operator> <name pos:start="143:32" pos:end="143:49">AV_CODEC_ID_PCM_U8</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:34"><expr pos:start="145:9" pos:end="145:33"><name pos:start="145:9" pos:end="145:29"><name pos:start="145:9" pos:end="145:11">ast</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:18">codec</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:29">codec_tag</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <literal type="number" pos:start="145:33" pos:end="145:33">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:56"><expr pos:start="147:9" pos:end="147:55"><name pos:start="147:9" pos:end="147:31"><name pos:start="147:9" pos:end="147:11">ast</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:18">codec</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:31">sample_rate</name></name> <operator pos:start="147:33" pos:end="147:33">=</operator> <name pos:start="147:35" pos:end="147:55">FLIC_TFTD_SAMPLE_RATE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:33"><expr pos:start="149:9" pos:end="149:32"><name pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:11">ast</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:18">codec</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:28">channels</name></name> <operator pos:start="149:30" pos:end="149:30">=</operator> <literal type="number" pos:start="149:32" pos:end="149:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:58"><expr pos:start="151:9" pos:end="151:57"><name pos:start="151:9" pos:end="151:28"><name pos:start="151:9" pos:end="151:11">ast</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:18">codec</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:28">bit_rate</name></name> <operator pos:start="151:30" pos:end="151:30">=</operator> <name pos:start="151:32" pos:end="151:53"><name pos:start="151:32" pos:end="151:33">st</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:40">codec</name><operator pos:start="151:41" pos:end="151:42">-&gt;</operator><name pos:start="151:43" pos:end="151:53">sample_rate</name></name> <operator pos:start="151:55" pos:end="151:55">*</operator> <literal type="number" pos:start="151:57" pos:end="151:57">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:46"><expr pos:start="153:9" pos:end="153:45"><name pos:start="153:9" pos:end="153:41"><name pos:start="153:9" pos:end="153:11">ast</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:18">codec</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:41">bits_per_coded_sample</name></name> <operator pos:start="153:43" pos:end="153:43">=</operator> <literal type="number" pos:start="153:45" pos:end="153:45">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:55"><expr pos:start="155:9" pos:end="155:54"><name pos:start="155:9" pos:end="155:34"><name pos:start="155:9" pos:end="155:11">ast</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:18">codec</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:34">channel_layout</name></name> <operator pos:start="155:36" pos:end="155:36">=</operator> <name pos:start="155:38" pos:end="155:54">AV_CH_LAYOUT_MONO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:39"><expr pos:start="157:9" pos:end="157:38"><name pos:start="157:9" pos:end="157:34"><name pos:start="157:9" pos:end="157:11">ast</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:18">codec</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:34">extradata_size</name></name> <operator pos:start="157:36" pos:end="157:36">=</operator> <literal type="number" pos:start="157:38" pos:end="157:38">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="161:9" pos:end="165:74">/* Since the header information is incorrect we have to figure out the

         * framerate using block_align and the fact that the audio is 22050 Hz.

         * We usually have two cases: 2205 -&gt; 10 fps and 1470 -&gt; 15 fps */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:84"><expr pos:start="167:9" pos:end="167:83"><call pos:start="167:9" pos:end="167:83"><name pos:start="167:9" pos:end="167:27">avpriv_set_pts_info</name><argument_list pos:start="167:28" pos:end="167:83">(<argument pos:start="167:29" pos:end="167:30"><expr pos:start="167:29" pos:end="167:30"><name pos:start="167:29" pos:end="167:30">st</name></expr></argument>, <argument pos:start="167:33" pos:end="167:34"><expr pos:start="167:33" pos:end="167:34"><literal type="number" pos:start="167:33" pos:end="167:34">64</literal></expr></argument>, <argument pos:start="167:37" pos:end="167:59"><expr pos:start="167:37" pos:end="167:59"><name pos:start="167:37" pos:end="167:59"><name pos:start="167:37" pos:end="167:39">ast</name><operator pos:start="167:40" pos:end="167:41">-&gt;</operator><name pos:start="167:42" pos:end="167:46">codec</name><operator pos:start="167:47" pos:end="167:48">-&gt;</operator><name pos:start="167:49" pos:end="167:59">block_align</name></name></expr></argument>, <argument pos:start="167:62" pos:end="167:82"><expr pos:start="167:62" pos:end="167:82"><name pos:start="167:62" pos:end="167:82">FLIC_TFTD_SAMPLE_RATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:63"><expr pos:start="169:9" pos:end="169:62"><call pos:start="169:9" pos:end="169:62"><name pos:start="169:9" pos:end="169:27">avpriv_set_pts_info</name><argument_list pos:start="169:28" pos:end="169:62">(<argument pos:start="169:29" pos:end="169:31"><expr pos:start="169:29" pos:end="169:31"><name pos:start="169:29" pos:end="169:31">ast</name></expr></argument>, <argument pos:start="169:34" pos:end="169:35"><expr pos:start="169:34" pos:end="169:35"><literal type="number" pos:start="169:34" pos:end="169:35">64</literal></expr></argument>, <argument pos:start="169:38" pos:end="169:38"><expr pos:start="169:38" pos:end="169:38"><literal type="number" pos:start="169:38" pos:end="169:38">1</literal></expr></argument>, <argument pos:start="169:41" pos:end="169:61"><expr pos:start="169:41" pos:end="169:61"><name pos:start="169:41" pos:end="169:61">FLIC_TFTD_SAMPLE_RATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="171:7" pos:end="195:5">else if <condition pos:start="171:15" pos:end="171:60">(<expr pos:start="171:16" pos:end="171:59"><call pos:start="171:16" pos:end="171:37"><name pos:start="171:16" pos:end="171:22">AV_RL16</name><argument_list pos:start="171:23" pos:end="171:37">(<argument pos:start="171:24" pos:end="171:36"><expr pos:start="171:24" pos:end="171:36"><operator pos:start="171:24" pos:end="171:24">&amp;</operator><name pos:start="171:25" pos:end="171:36"><name pos:start="171:25" pos:end="171:30">header</name><index pos:start="171:31" pos:end="171:36">[<expr pos:start="171:32" pos:end="171:35"><literal type="number" pos:start="171:32" pos:end="171:35">0x10</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="171:39" pos:end="171:40">==</operator> <name pos:start="171:42" pos:end="171:59">FLIC_CHUNK_MAGIC_1</name></expr>)</condition> <block pos:start="171:62" pos:end="195:5">{<block_content pos:start="173:9" pos:end="191:49">

        <expr_stmt pos:start="173:9" pos:end="173:55"><expr pos:start="173:9" pos:end="173:54"><call pos:start="173:9" pos:end="173:54"><name pos:start="173:9" pos:end="173:27">avpriv_set_pts_info</name><argument_list pos:start="173:28" pos:end="173:54">(<argument pos:start="173:29" pos:end="173:30"><expr pos:start="173:29" pos:end="173:30"><name pos:start="173:29" pos:end="173:30">st</name></expr></argument>, <argument pos:start="173:33" pos:end="173:34"><expr pos:start="173:33" pos:end="173:34"><literal type="number" pos:start="173:33" pos:end="173:34">64</literal></expr></argument>, <argument pos:start="173:37" pos:end="173:49"><expr pos:start="173:37" pos:end="173:49"><name pos:start="173:37" pos:end="173:49">FLIC_MC_SPEED</name></expr></argument>, <argument pos:start="173:52" pos:end="173:53"><expr pos:start="173:52" pos:end="173:53"><literal type="number" pos:start="173:52" pos:end="173:53">70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="177:9" pos:end="177:69">/* rewind the stream since the first chunk is at offset 12 */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:36"><expr pos:start="179:9" pos:end="179:35"><call pos:start="179:9" pos:end="179:35"><name pos:start="179:9" pos:end="179:17">avio_seek</name><argument_list pos:start="179:18" pos:end="179:35">(<argument pos:start="179:19" pos:end="179:20"><expr pos:start="179:19" pos:end="179:20"><name pos:start="179:19" pos:end="179:20">pb</name></expr></argument>, <argument pos:start="179:23" pos:end="179:24"><expr pos:start="179:23" pos:end="179:24"><literal type="number" pos:start="179:23" pos:end="179:24">12</literal></expr></argument>, <argument pos:start="179:27" pos:end="179:34"><expr pos:start="179:27" pos:end="179:34"><name pos:start="179:27" pos:end="179:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="183:9" pos:end="183:53">/* send over abbreviated FLIC header chunk */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:38"><expr pos:start="185:9" pos:end="185:37"><call pos:start="185:9" pos:end="185:37"><name pos:start="185:9" pos:end="185:15">av_free</name><argument_list pos:start="185:16" pos:end="185:37">(<argument pos:start="185:17" pos:end="185:36"><expr pos:start="185:17" pos:end="185:36"><name pos:start="185:17" pos:end="185:36"><name pos:start="185:17" pos:end="185:18">st</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:25">codec</name><operator pos:start="185:26" pos:end="185:27">-&gt;</operator><name pos:start="185:28" pos:end="185:36">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:39"><expr pos:start="187:9" pos:end="187:38"><name pos:start="187:9" pos:end="187:33"><name pos:start="187:9" pos:end="187:10">st</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:17">codec</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:33">extradata_size</name></name> <operator pos:start="187:35" pos:end="187:35">=</operator> <literal type="number" pos:start="187:37" pos:end="187:38">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:45"><expr pos:start="189:9" pos:end="189:44"><name pos:start="189:9" pos:end="189:28"><name pos:start="189:9" pos:end="189:10">st</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:17">codec</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:28">extradata</name></name> <operator pos:start="189:30" pos:end="189:30">=</operator> <call pos:start="189:32" pos:end="189:44"><name pos:start="189:32" pos:end="189:40">av_malloc</name><argument_list pos:start="189:41" pos:end="189:44">(<argument pos:start="189:42" pos:end="189:43"><expr pos:start="189:42" pos:end="189:43"><literal type="number" pos:start="189:42" pos:end="189:43">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:49"><expr pos:start="191:9" pos:end="191:48"><call pos:start="191:9" pos:end="191:48"><name pos:start="191:9" pos:end="191:14">memcpy</name><argument_list pos:start="191:15" pos:end="191:48">(<argument pos:start="191:16" pos:end="191:35"><expr pos:start="191:16" pos:end="191:35"><name pos:start="191:16" pos:end="191:35"><name pos:start="191:16" pos:end="191:17">st</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:24">codec</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:35">extradata</name></name></expr></argument>, <argument pos:start="191:38" pos:end="191:43"><expr pos:start="191:38" pos:end="191:43"><name pos:start="191:38" pos:end="191:43">header</name></expr></argument>, <argument pos:start="191:46" pos:end="191:47"><expr pos:start="191:46" pos:end="191:47"><literal type="number" pos:start="191:46" pos:end="191:47">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="195:7" pos:end="199:5">else if <condition pos:start="195:15" pos:end="195:49">(<expr pos:start="195:16" pos:end="195:48"><name pos:start="195:16" pos:end="195:27">magic_number</name> <operator pos:start="195:29" pos:end="195:30">==</operator> <name pos:start="195:32" pos:end="195:48">FLIC_FILE_MAGIC_1</name></expr>)</condition> <block pos:start="195:51" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:47">

        <expr_stmt pos:start="197:9" pos:end="197:47"><expr pos:start="197:9" pos:end="197:46"><call pos:start="197:9" pos:end="197:46"><name pos:start="197:9" pos:end="197:27">avpriv_set_pts_info</name><argument_list pos:start="197:28" pos:end="197:46">(<argument pos:start="197:29" pos:end="197:30"><expr pos:start="197:29" pos:end="197:30"><name pos:start="197:29" pos:end="197:30">st</name></expr></argument>, <argument pos:start="197:33" pos:end="197:34"><expr pos:start="197:33" pos:end="197:34"><literal type="number" pos:start="197:33" pos:end="197:34">64</literal></expr></argument>, <argument pos:start="197:37" pos:end="197:41"><expr pos:start="197:37" pos:end="197:41"><name pos:start="197:37" pos:end="197:41">speed</name></expr></argument>, <argument pos:start="197:44" pos:end="197:45"><expr pos:start="197:44" pos:end="197:45"><literal type="number" pos:start="197:44" pos:end="197:45">70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="199:7" pos:end="205:5">else if <condition pos:start="199:15" pos:end="201:51">(<expr pos:start="199:16" pos:end="201:50"><operator pos:start="199:16" pos:end="199:16">(</operator><name pos:start="199:17" pos:end="199:28">magic_number</name> <operator pos:start="199:30" pos:end="199:31">==</operator> <name pos:start="199:33" pos:end="199:49">FLIC_FILE_MAGIC_2</name><operator pos:start="199:50" pos:end="199:50">)</operator> <operator pos:start="199:52" pos:end="199:53">||</operator>

               <operator pos:start="201:16" pos:end="201:16">(</operator><name pos:start="201:17" pos:end="201:28">magic_number</name> <operator pos:start="201:30" pos:end="201:31">==</operator> <name pos:start="201:33" pos:end="201:49">FLIC_FILE_MAGIC_3</name><operator pos:start="201:50" pos:end="201:50">)</operator></expr>)</condition> <block pos:start="201:53" pos:end="205:5">{<block_content pos:start="203:9" pos:end="203:49">

        <expr_stmt pos:start="203:9" pos:end="203:49"><expr pos:start="203:9" pos:end="203:48"><call pos:start="203:9" pos:end="203:48"><name pos:start="203:9" pos:end="203:27">avpriv_set_pts_info</name><argument_list pos:start="203:28" pos:end="203:48">(<argument pos:start="203:29" pos:end="203:30"><expr pos:start="203:29" pos:end="203:30"><name pos:start="203:29" pos:end="203:30">st</name></expr></argument>, <argument pos:start="203:33" pos:end="203:34"><expr pos:start="203:33" pos:end="203:34"><literal type="number" pos:start="203:33" pos:end="203:34">64</literal></expr></argument>, <argument pos:start="203:37" pos:end="203:41"><expr pos:start="203:37" pos:end="203:41"><name pos:start="203:37" pos:end="203:41">speed</name></expr></argument>, <argument pos:start="203:44" pos:end="203:47"><expr pos:start="203:44" pos:end="203:47"><literal type="number" pos:start="203:44" pos:end="203:47">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="205:7" pos:end="211:5">else <block pos:start="205:12" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:35">

        <expr_stmt pos:start="207:9" pos:end="207:80"><expr pos:start="207:9" pos:end="207:79"><call pos:start="207:9" pos:end="207:79"><name pos:start="207:9" pos:end="207:14">av_log</name><argument_list pos:start="207:15" pos:end="207:79">(<argument pos:start="207:16" pos:end="207:16"><expr pos:start="207:16" pos:end="207:16"><name pos:start="207:16" pos:end="207:16">s</name></expr></argument>, <argument pos:start="207:19" pos:end="207:30"><expr pos:start="207:19" pos:end="207:30"><name pos:start="207:19" pos:end="207:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="207:33" pos:end="207:78"><expr pos:start="207:33" pos:end="207:78"><literal type="string" pos:start="207:33" pos:end="207:78">"Invalid or unsupported magic chunk in file\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:35">return <expr pos:start="209:16" pos:end="209:34"><name pos:start="209:16" pos:end="209:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <return pos:start="215:5" pos:end="215:13">return <expr pos:start="215:12" pos:end="215:12"><literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
