<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6616.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">enable_write_target</name><parameter_list pos:start="1:31" pos:end="1:63">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:45">BDRVVVFATState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:55">Error</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier><modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:15">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">BlockDriver</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:26">bdrv_qcow</name> <init pos:start="5:28" pos:end="5:33">= <expr pos:start="5:30" pos:end="5:33"><name pos:start="5:30" pos:end="5:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name> <init pos:start="7:20" pos:end="7:25">= <expr pos:start="7:22" pos:end="7:25"><name pos:start="7:22" pos:end="7:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name> <init pos:start="11:14" pos:end="11:49">= <expr pos:start="11:16" pos:end="11:49"><call pos:start="11:16" pos:end="11:49"><name pos:start="11:16" pos:end="11:29">sector2cluster</name><argument_list pos:start="11:30" pos:end="11:49">(<argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><name pos:start="11:31" pos:end="11:31">s</name></expr></argument>, <argument pos:start="11:34" pos:end="11:48"><expr pos:start="11:34" pos:end="11:48"><name pos:start="11:34" pos:end="11:48"><name pos:start="11:34" pos:end="11:34">s</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:48">sector_count</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:20">used_clusters</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <call pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:29">calloc</name><argument_list pos:start="13:30" pos:end="13:38">(<argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">size</name></expr></argument>, <argument pos:start="13:37" pos:end="13:37"><expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><call pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:14">array_init</name><argument_list pos:start="17:15" pos:end="17:47">(<argument pos:start="17:16" pos:end="17:28"><expr pos:start="17:16" pos:end="17:28"><operator pos:start="17:16" pos:end="17:16">&amp;</operator><operator pos:start="17:17" pos:end="17:17">(</operator><name pos:start="17:18" pos:end="17:27"><name pos:start="17:18" pos:end="17:18">s</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:27">commits</name></name><operator pos:start="17:28" pos:end="17:28">)</operator></expr></argument>, <argument pos:start="17:31" pos:end="17:46"><expr pos:start="17:31" pos:end="17:46"><sizeof pos:start="17:31" pos:end="17:46">sizeof<argument_list pos:start="17:37" pos:end="17:46">(<argument pos:start="17:38" pos:end="17:45"><expr pos:start="17:38" pos:end="17:45"><name pos:start="17:38" pos:end="17:45">commit_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:20">qcow_filename</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <call pos:start="21:24" pos:end="21:37"><name pos:start="21:24" pos:end="21:31">g_malloc</name><argument_list pos:start="21:32" pos:end="21:37">(<argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><literal type="number" pos:start="21:33" pos:end="21:36">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:50"><name pos:start="23:11" pos:end="23:26">get_tmp_filename</name><argument_list pos:start="23:27" pos:end="23:50">(<argument pos:start="23:28" pos:end="23:43"><expr pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:28">s</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:43">qcow_filename</name></name></expr></argument>, <argument pos:start="23:46" pos:end="23:49"><expr pos:start="23:46" pos:end="23:49"><literal type="number" pos:start="23:46" pos:end="23:49">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition> <block pos:start="25:18" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:17">

        <expr_stmt pos:start="27:9" pos:end="27:68"><expr pos:start="27:9" pos:end="27:67"><call pos:start="27:9" pos:end="27:67"><name pos:start="27:9" pos:end="27:24">error_setg_errno</name><argument_list pos:start="27:25" pos:end="27:67">(<argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">errp</name></expr></argument>, <argument pos:start="27:32" pos:end="27:35"><expr pos:start="27:32" pos:end="27:35"><operator pos:start="27:32" pos:end="27:32">-</operator><name pos:start="27:33" pos:end="27:35">ret</name></expr></argument>, <argument pos:start="27:38" pos:end="27:66"><expr pos:start="27:38" pos:end="27:66"><literal type="string" pos:start="27:38" pos:end="27:66">"can't create temporary file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:13">bdrv_qcow</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:40"><name pos:start="35:17" pos:end="35:32">bdrv_find_format</name><argument_list pos:start="35:33" pos:end="35:40">(<argument pos:start="35:34" pos:end="35:39"><expr pos:start="35:34" pos:end="35:39"><literal type="string" pos:start="35:34" pos:end="35:39">"qcow"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:18">bdrv_qcow</name></expr>)</condition> <block pos:start="37:21" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:17">

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><call pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:18">error_setg</name><argument_list pos:start="39:19" pos:end="39:56">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">errp</name></expr></argument>, <argument pos:start="39:26" pos:end="39:55"><expr pos:start="39:26" pos:end="39:55"><literal type="string" pos:start="39:26" pos:end="39:55">"Failed to locate qcow driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">-</operator><name pos:start="41:16" pos:end="41:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:17">goto <name pos:start="43:14" pos:end="43:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:75"><expr pos:start="49:5" pos:end="49:74"><name pos:start="49:5" pos:end="49:8">opts</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <call pos:start="49:12" pos:end="49:74"><name pos:start="49:12" pos:end="49:27">qemu_opts_create</name><argument_list pos:start="49:28" pos:end="49:74">(<argument pos:start="49:29" pos:end="49:50"><expr pos:start="49:29" pos:end="49:50"><name pos:start="49:29" pos:end="49:50"><name pos:start="49:29" pos:end="49:37">bdrv_qcow</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:50">create_opts</name></name></expr></argument>, <argument pos:start="49:53" pos:end="49:56"><expr pos:start="49:53" pos:end="49:56"><name pos:start="49:53" pos:end="49:56">NULL</name></expr></argument>, <argument pos:start="49:59" pos:end="49:59"><expr pos:start="49:59" pos:end="49:59"><literal type="number" pos:start="49:59" pos:end="49:59">0</literal></expr></argument>, <argument pos:start="49:62" pos:end="49:73"><expr pos:start="49:62" pos:end="49:73"><operator pos:start="49:62" pos:end="49:62">&amp;</operator><name pos:start="49:63" pos:end="49:73">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:69"><expr pos:start="51:5" pos:end="51:68"><call pos:start="51:5" pos:end="51:68"><name pos:start="51:5" pos:end="51:23">qemu_opt_set_number</name><argument_list pos:start="51:24" pos:end="51:68">(<argument pos:start="51:25" pos:end="51:28"><expr pos:start="51:25" pos:end="51:28"><name pos:start="51:25" pos:end="51:28">opts</name></expr></argument>, <argument pos:start="51:31" pos:end="51:44"><expr pos:start="51:31" pos:end="51:44"><name pos:start="51:31" pos:end="51:44">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="51:47" pos:end="51:67"><expr pos:start="51:47" pos:end="51:67"><name pos:start="51:47" pos:end="51:61"><name pos:start="51:47" pos:end="51:47">s</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:61">sector_count</name></name> <operator pos:start="51:63" pos:end="51:63">*</operator> <literal type="number" pos:start="51:65" pos:end="51:67">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:55"><expr pos:start="53:5" pos:end="53:54"><call pos:start="53:5" pos:end="53:54"><name pos:start="53:5" pos:end="53:16">qemu_opt_set</name><argument_list pos:start="53:17" pos:end="53:54">(<argument pos:start="53:18" pos:end="53:21"><expr pos:start="53:18" pos:end="53:21"><name pos:start="53:18" pos:end="53:21">opts</name></expr></argument>, <argument pos:start="53:24" pos:end="53:45"><expr pos:start="53:24" pos:end="53:45"><name pos:start="53:24" pos:end="53:45">BLOCK_OPT_BACKING_FILE</name></expr></argument>, <argument pos:start="53:48" pos:end="53:53"><expr pos:start="53:48" pos:end="53:53"><literal type="string" pos:start="53:48" pos:end="53:53">"fat:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:63"><expr pos:start="57:5" pos:end="57:62"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:62"><name pos:start="57:11" pos:end="57:21">bdrv_create</name><argument_list pos:start="57:22" pos:end="57:62">(<argument pos:start="57:23" pos:end="57:31"><expr pos:start="57:23" pos:end="57:31"><name pos:start="57:23" pos:end="57:31">bdrv_qcow</name></expr></argument>, <argument pos:start="57:34" pos:end="57:49"><expr pos:start="57:34" pos:end="57:49"><name pos:start="57:34" pos:end="57:49"><name pos:start="57:34" pos:end="57:34">s</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:49">qcow_filename</name></name></expr></argument>, <argument pos:start="57:52" pos:end="57:55"><expr pos:start="57:52" pos:end="57:55"><name pos:start="57:52" pos:end="57:55">opts</name></expr></argument>, <argument pos:start="57:58" pos:end="57:61"><expr pos:start="57:58" pos:end="57:61"><name pos:start="57:58" pos:end="57:61">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><call pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:17">qemu_opts_del</name><argument_list pos:start="59:18" pos:end="59:23">(<argument pos:start="59:19" pos:end="59:22"><expr pos:start="59:19" pos:end="59:22"><name pos:start="59:19" pos:end="59:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:16">(<expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">&lt;</operator> <literal type="number" pos:start="61:15" pos:end="61:15">0</literal></expr>)</condition> <block pos:start="61:18" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:17">

        <goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:19"><expr pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:11">qcow</name></name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:18">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="75:37"><expr pos:start="71:5" pos:end="75:36"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="75:36"><name pos:start="71:11" pos:end="71:19">bdrv_open</name><argument_list pos:start="71:20" pos:end="75:36">(<argument pos:start="71:21" pos:end="71:28"><expr pos:start="71:21" pos:end="71:28"><operator pos:start="71:21" pos:end="71:21">&amp;</operator><name pos:start="71:22" pos:end="71:28"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:28">qcow</name></name></expr></argument>, <argument pos:start="71:31" pos:end="71:46"><expr pos:start="71:31" pos:end="71:46"><name pos:start="71:31" pos:end="71:46"><name pos:start="71:31" pos:end="71:31">s</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:46">qcow_filename</name></name></expr></argument>, <argument pos:start="71:49" pos:end="71:52"><expr pos:start="71:49" pos:end="71:52"><name pos:start="71:49" pos:end="71:52">NULL</name></expr></argument>, <argument pos:start="71:55" pos:end="71:58"><expr pos:start="71:55" pos:end="71:58"><name pos:start="71:55" pos:end="71:58">NULL</name></expr></argument>,

                    <argument pos:start="73:21" pos:end="73:67"><expr pos:start="73:21" pos:end="73:67"><name pos:start="73:21" pos:end="73:31">BDRV_O_RDWR</name> <operator pos:start="73:33" pos:end="73:33">|</operator> <name pos:start="73:35" pos:end="73:49">BDRV_O_CACHE_WB</name> <operator pos:start="73:51" pos:end="73:51">|</operator> <name pos:start="73:53" pos:end="73:67">BDRV_O_NO_FLUSH</name></expr></argument>,

                    <argument pos:start="75:21" pos:end="75:29"><expr pos:start="75:21" pos:end="75:29"><name pos:start="75:21" pos:end="75:29">bdrv_qcow</name></expr></argument>, <argument pos:start="75:32" pos:end="75:35"><expr pos:start="75:32" pos:end="75:35"><name pos:start="75:32" pos:end="75:35">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="86:0"><if pos:start="77:5" pos:end="86:0">if <condition pos:start="77:8" pos:end="77:16">(<expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">&lt;</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>)</condition> <block pos:start="77:18" pos:end="86:0">{<block_content pos:start="79:9" pos:end="79:17">

        <goto pos:start="79:9" pos:end="79:17">goto <name pos:start="79:14" pos:end="79:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="85:1" pos:end="85:14">#<cpp:directive pos:start="85:2" pos:end="85:7">ifndef</cpp:directive> <name pos:start="85:9" pos:end="85:14">_WIN32</name></cpp:ifndef>

    <expr_stmt pos:start="87:5" pos:end="90:0"><expr pos:start="87:5" pos:end="87:28"><call pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:10">unlink</name><argument_list pos:start="87:11" pos:end="87:28">(<argument pos:start="87:12" pos:end="87:27"><expr pos:start="87:12" pos:end="87:27"><name pos:start="87:12" pos:end="87:27"><name pos:start="87:12" pos:end="87:12">s</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:27">qcow_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="93:5" pos:end="93:43"><expr pos:start="93:5" pos:end="93:42"><call pos:start="93:5" pos:end="93:42"><name pos:start="93:5" pos:end="93:23">bdrv_set_backing_hd</name><argument_list pos:start="93:24" pos:end="93:42">(<argument pos:start="93:25" pos:end="93:29"><expr pos:start="93:25" pos:end="93:29"><name pos:start="93:25" pos:end="93:29"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:29">bs</name></name></expr></argument>, <argument pos:start="93:32" pos:end="93:41"><expr pos:start="93:32" pos:end="93:41"><call pos:start="93:32" pos:end="93:41"><name pos:start="93:32" pos:end="93:39">bdrv_new</name><argument_list pos:start="93:40" pos:end="93:41">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:49"><expr pos:start="95:5" pos:end="95:48"><name pos:start="95:5" pos:end="95:26"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:9">bs</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:21">backing_hd</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:26">drv</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <operator pos:start="95:30" pos:end="95:30">&amp;</operator><name pos:start="95:31" pos:end="95:48">vvfat_write_target</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:49"><expr pos:start="97:5" pos:end="97:48"><name pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:9">bs</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:21">backing_hd</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:29">opaque</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <call pos:start="97:33" pos:end="97:48"><name pos:start="97:33" pos:end="97:37">g_new</name><argument_list pos:start="97:38" pos:end="97:48">(<argument pos:start="97:39" pos:end="97:44"><expr pos:start="97:39" pos:end="97:44"><name pos:start="97:39" pos:end="97:42">void</name> <operator pos:start="97:44" pos:end="97:44">*</operator></expr></argument>, <argument pos:start="97:47" pos:end="97:47"><expr pos:start="97:47" pos:end="97:47"><literal type="number" pos:start="97:47" pos:end="97:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:43"><expr pos:start="99:5" pos:end="99:42"><operator pos:start="99:5" pos:end="99:5">*</operator><operator pos:start="99:6" pos:end="99:6">(</operator><name pos:start="99:7" pos:end="99:10">void</name><operator pos:start="99:11" pos:end="99:11">*</operator><operator pos:start="99:12" pos:end="99:12">*</operator><operator pos:start="99:13" pos:end="99:13">)</operator><name pos:start="99:14" pos:end="99:38"><name pos:start="99:14" pos:end="99:14">s</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:18">bs</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:30">backing_hd</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:38">opaque</name></name> <operator pos:start="99:40" pos:end="99:40">=</operator> <name pos:start="99:42" pos:end="99:42">s</name></expr>;</expr_stmt>



    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>



<label pos:start="107:1" pos:end="107:4"><name pos:start="107:1" pos:end="107:3">err</name>:</label>

    <expr_stmt pos:start="109:5" pos:end="109:29"><expr pos:start="109:5" pos:end="109:28"><call pos:start="109:5" pos:end="109:28"><name pos:start="109:5" pos:end="109:10">g_free</name><argument_list pos:start="109:11" pos:end="109:28">(<argument pos:start="109:12" pos:end="109:27"><expr pos:start="109:12" pos:end="109:27"><name pos:start="109:12" pos:end="109:27"><name pos:start="109:12" pos:end="109:12">s</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:27">qcow_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:28"><expr pos:start="111:5" pos:end="111:27"><name pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:20">qcow_filename</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:27">NULL</name></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:15">return <expr pos:start="113:12" pos:end="113:14"><name pos:start="113:12" pos:end="113:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
