<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10497.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">randomize_loopfilter_buffers</name><parameter_list pos:start="1:41" pos:end="7:70">(<parameter pos:start="1:42" pos:end="1:49"><decl pos:start="1:42" pos:end="1:49"><type pos:start="1:42" pos:end="1:49"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:49">bidx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:62">lineoff</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:71"><decl pos:start="1:65" pos:end="1:71"><type pos:start="1:65" pos:end="1:71"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:71">str</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:54">bit_depth</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:63"><decl pos:start="3:57" pos:end="3:63"><type pos:start="3:57" pos:end="3:63"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:63">dir</name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:47"><decl pos:start="5:42" pos:end="5:47"><type pos:start="5:42" pos:end="5:47"><name pos:start="5:42" pos:end="5:44">int</name><modifier pos:start="5:45" pos:end="5:45">*</modifier></type> <name pos:start="5:47" pos:end="5:47">E</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:55"><decl pos:start="5:50" pos:end="5:55"><type pos:start="5:50" pos:end="5:55"><name pos:start="5:50" pos:end="5:52">int</name><modifier pos:start="5:53" pos:end="5:53">*</modifier></type> <name pos:start="5:55" pos:end="5:55">F</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:63"><decl pos:start="5:58" pos:end="5:63"><type pos:start="5:58" pos:end="5:63"><name pos:start="5:58" pos:end="5:60">int</name><modifier pos:start="5:61" pos:end="5:61">*</modifier></type> <name pos:start="5:63" pos:end="5:63">H</name></decl></parameter>, <parameter pos:start="5:66" pos:end="5:71"><decl pos:start="5:66" pos:end="5:71"><type pos:start="5:66" pos:end="5:71"><name pos:start="5:66" pos:end="5:68">int</name><modifier pos:start="5:69" pos:end="5:69">*</modifier></type> <name pos:start="5:71" pos:end="5:71">I</name></decl></parameter>,

                                         <parameter pos:start="7:42" pos:end="7:54"><decl pos:start="7:42" pos:end="7:54"><type pos:start="7:42" pos:end="7:54"><name pos:start="7:42" pos:end="7:48">uint8_t</name> <modifier pos:start="7:50" pos:end="7:50">*</modifier></type><name pos:start="7:51" pos:end="7:54">buf0</name></decl></parameter>, <parameter pos:start="7:57" pos:end="7:69"><decl pos:start="7:57" pos:end="7:69"><type pos:start="7:57" pos:end="7:69"><name pos:start="7:57" pos:end="7:63">uint8_t</name> <modifier pos:start="7:65" pos:end="7:65">*</modifier></type><name pos:start="7:66" pos:end="7:69">buf1</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="109:1">{<block_content pos:start="11:5" pos:end="107:5">

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">mask</name> <init pos:start="11:19" pos:end="11:40">= <expr pos:start="11:21" pos:end="11:40"><operator pos:start="11:21" pos:end="11:21">(</operator><literal type="number" pos:start="11:22" pos:end="11:22">1</literal> <operator pos:start="11:24" pos:end="11:25">&lt;&lt;</operator> <name pos:start="11:27" pos:end="11:35">bit_depth</name><operator pos:start="11:36" pos:end="11:36">)</operator> <operator pos:start="11:38" pos:end="11:38">-</operator> <literal type="number" pos:start="11:40" pos:end="11:40">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">off</name> <init pos:start="13:13" pos:end="13:42">= <expr pos:start="13:15" pos:end="13:42"><ternary pos:start="13:15" pos:end="13:42"><condition pos:start="13:15" pos:end="13:19"><expr pos:start="13:15" pos:end="13:17"><name pos:start="13:15" pos:end="13:17">dir</name></expr> ?</condition><then pos:start="13:21" pos:end="13:27"> <expr pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:27">lineoff</name></expr> </then><else pos:start="13:29" pos:end="13:42">: <expr pos:start="13:31" pos:end="13:42"><name pos:start="13:31" pos:end="13:37">lineoff</name> <operator pos:start="13:39" pos:end="13:39">*</operator> <literal type="number" pos:start="13:41" pos:end="13:42">16</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">istride</name> <init pos:start="15:17" pos:end="15:30">= <expr pos:start="15:19" pos:end="15:30"><ternary pos:start="15:19" pos:end="15:30"><condition pos:start="15:19" pos:end="15:23"><expr pos:start="15:19" pos:end="15:21"><name pos:start="15:19" pos:end="15:21">dir</name></expr> ?</condition><then pos:start="15:25" pos:end="15:25"> <expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">1</literal></expr> </then><else pos:start="15:27" pos:end="15:30">: <expr pos:start="15:29" pos:end="15:30"><literal type="number" pos:start="15:29" pos:end="15:30">16</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">jstride</name> <init pos:start="17:17" pos:end="17:31">= <expr pos:start="17:19" pos:end="17:31"><ternary pos:start="17:19" pos:end="17:31"><condition pos:start="17:19" pos:end="17:23"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">dir</name></expr> ?</condition><then pos:start="17:25" pos:end="17:27"> <expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">str</name></expr> </then><else pos:start="17:29" pos:end="17:31">: <expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:13"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">j</name></decl>;</decl_stmt>

    <for pos:start="21:5" pos:end="37:5">for <control pos:start="21:9" pos:end="21:27">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:21">2</literal></expr>;</condition> <incr pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:24">i</name><operator pos:start="21:25" pos:end="21:26">++</operator></expr></incr>)</control> <comment type="block" pos:start="21:29" pos:end="21:40">/* flat16 */</comment> <block pos:start="21:42" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:9">

        <decl_stmt pos:start="23:9" pos:end="23:44"><decl pos:start="23:9" pos:end="23:35"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">idx</name> <init pos:start="23:17" pos:end="23:35">= <expr pos:start="23:19" pos:end="23:35"><name pos:start="23:19" pos:end="23:21">off</name> <operator pos:start="23:23" pos:end="23:23">+</operator> <name pos:start="23:25" pos:end="23:25">i</name> <operator pos:start="23:27" pos:end="23:27">*</operator> <name pos:start="23:29" pos:end="23:35">istride</name></expr></init></decl>, <decl pos:start="23:38" pos:end="23:39"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:38" pos:end="23:39">p0</name></decl>, <decl pos:start="23:42" pos:end="23:43"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:42" pos:end="23:43">q0</name></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><call pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:13">setpx</name><argument_list pos:start="25:14" pos:end="25:41">(<argument pos:start="25:15" pos:end="25:17"><expr pos:start="25:15" pos:end="25:17"><name pos:start="25:15" pos:end="25:17">idx</name></expr></argument>,  <argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr></argument>, <argument pos:start="25:24" pos:end="25:40"><expr pos:start="25:24" pos:end="25:40"><name pos:start="25:24" pos:end="25:25">q0</name> <operator pos:start="25:27" pos:end="25:27">=</operator> <call pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:31">rnd</name><argument_list pos:start="25:32" pos:end="25:33">()</argument_list></call> <operator pos:start="25:35" pos:end="25:35">&amp;</operator> <name pos:start="25:37" pos:end="25:40">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><call pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:13">setsx</name><argument_list pos:start="27:14" pos:end="27:45">(<argument pos:start="27:15" pos:end="27:17"><expr pos:start="27:15" pos:end="27:17"><name pos:start="27:15" pos:end="27:17">idx</name></expr></argument>, <argument pos:start="27:20" pos:end="27:21"><expr pos:start="27:20" pos:end="27:21"><operator pos:start="27:20" pos:end="27:20">-</operator><literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr></argument>, <argument pos:start="27:24" pos:end="27:30"><expr pos:start="27:24" pos:end="27:30"><name pos:start="27:24" pos:end="27:25">p0</name> <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:30">q0</name></expr></argument>, <argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:39"><name pos:start="27:33" pos:end="27:33">E</name><index pos:start="27:34" pos:end="27:39">[<expr pos:start="27:35" pos:end="27:38"><name pos:start="27:35" pos:end="27:38">bidx</name></expr>]</index></name> <operator pos:start="27:41" pos:end="27:42">&gt;&gt;</operator> <literal type="number" pos:start="27:44" pos:end="27:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="29:9" pos:end="35:9">for <control pos:start="29:13" pos:end="29:31">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">j</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">1</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:26"><expr pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">j</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <literal type="number" pos:start="29:25" pos:end="29:25">8</literal></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">j</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr>)</control> <block pos:start="29:33" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:39">

            <expr_stmt pos:start="31:13" pos:end="31:44"><expr pos:start="31:13" pos:end="31:43"><call pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:17">setsx</name><argument_list pos:start="31:18" pos:end="31:43">(<argument pos:start="31:19" pos:end="31:21"><expr pos:start="31:19" pos:end="31:21"><name pos:start="31:19" pos:end="31:21">idx</name></expr></argument>, <argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><operator pos:start="31:24" pos:end="31:24">-</operator><literal type="number" pos:start="31:25" pos:end="31:27">1</literal> <operator pos:start="31:27" pos:end="31:27">-</operator> <name pos:start="31:29" pos:end="31:29">j</name></expr></argument>, <argument pos:start="31:32" pos:end="31:33"><expr pos:start="31:32" pos:end="31:33"><name pos:start="31:32" pos:end="31:33">p0</name></expr></argument>, <argument pos:start="31:36" pos:end="31:42"><expr pos:start="31:36" pos:end="31:42"><name pos:start="31:36" pos:end="31:42"><name pos:start="31:36" pos:end="31:36">F</name><index pos:start="31:37" pos:end="31:42">[<expr pos:start="31:38" pos:end="31:41"><name pos:start="31:38" pos:end="31:41">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:39"><expr pos:start="33:13" pos:end="33:38"><call pos:start="33:13" pos:end="33:38"><name pos:start="33:13" pos:end="33:17">setsx</name><argument_list pos:start="33:18" pos:end="33:38">(<argument pos:start="33:19" pos:end="33:21"><expr pos:start="33:19" pos:end="33:21"><name pos:start="33:19" pos:end="33:21">idx</name></expr></argument>, <argument pos:start="33:24" pos:end="33:24"><expr pos:start="33:24" pos:end="33:24"><name pos:start="33:24" pos:end="33:24">j</name></expr></argument>, <argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">q0</name></expr></argument>, <argument pos:start="33:31" pos:end="33:37"><expr pos:start="33:31" pos:end="33:37"><name pos:start="33:31" pos:end="33:37"><name pos:start="33:31" pos:end="33:31">F</name><index pos:start="33:32" pos:end="33:37">[<expr pos:start="33:33" pos:end="33:36"><name pos:start="33:33" pos:end="33:36">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="39:5" pos:end="63:5">for <control pos:start="39:9" pos:end="39:27">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">2</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:22"><expr pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <literal type="number" pos:start="39:21" pos:end="39:21">4</literal></expr>;</condition> <incr pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:24">i</name><operator pos:start="39:25" pos:end="39:26">++</operator></expr></incr>)</control> <comment type="block" pos:start="39:29" pos:end="39:39">/* flat8 */</comment> <block pos:start="39:41" pos:end="63:5">{<block_content pos:start="41:9" pos:end="61:9">

        <decl_stmt pos:start="41:9" pos:end="41:44"><decl pos:start="41:9" pos:end="41:35"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:15">idx</name> <init pos:start="41:17" pos:end="41:35">= <expr pos:start="41:19" pos:end="41:35"><name pos:start="41:19" pos:end="41:21">off</name> <operator pos:start="41:23" pos:end="41:23">+</operator> <name pos:start="41:25" pos:end="41:25">i</name> <operator pos:start="41:27" pos:end="41:27">*</operator> <name pos:start="41:29" pos:end="41:35">istride</name></expr></init></decl>, <decl pos:start="41:38" pos:end="41:39"><type ref="prev" pos:start="41:9" pos:end="41:11"/><name pos:start="41:38" pos:end="41:39">p0</name></decl>, <decl pos:start="41:42" pos:end="41:43"><type ref="prev" pos:start="41:9" pos:end="41:11"/><name pos:start="41:42" pos:end="41:43">q0</name></decl>;</decl_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><call pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:13">setpx</name><argument_list pos:start="43:14" pos:end="43:41">(<argument pos:start="43:15" pos:end="43:17"><expr pos:start="43:15" pos:end="43:17"><name pos:start="43:15" pos:end="43:17">idx</name></expr></argument>,  <argument pos:start="43:21" pos:end="43:21"><expr pos:start="43:21" pos:end="43:21"><literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr></argument>, <argument pos:start="43:24" pos:end="43:40"><expr pos:start="43:24" pos:end="43:40"><name pos:start="43:24" pos:end="43:25">q0</name> <operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:31">rnd</name><argument_list pos:start="43:32" pos:end="43:33">()</argument_list></call> <operator pos:start="43:35" pos:end="43:35">&amp;</operator> <name pos:start="43:37" pos:end="43:40">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:46"><expr pos:start="45:9" pos:end="45:45"><call pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:13">setsx</name><argument_list pos:start="45:14" pos:end="45:45">(<argument pos:start="45:15" pos:end="45:17"><expr pos:start="45:15" pos:end="45:17"><name pos:start="45:15" pos:end="45:17">idx</name></expr></argument>, <argument pos:start="45:20" pos:end="45:21"><expr pos:start="45:20" pos:end="45:21"><operator pos:start="45:20" pos:end="45:20">-</operator><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr></argument>, <argument pos:start="45:24" pos:end="45:30"><expr pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:25">p0</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:30">q0</name></expr></argument>, <argument pos:start="45:33" pos:end="45:44"><expr pos:start="45:33" pos:end="45:44"><name pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:33">E</name><index pos:start="45:34" pos:end="45:39">[<expr pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:38">bidx</name></expr>]</index></name> <operator pos:start="45:41" pos:end="45:42">&gt;&gt;</operator> <literal type="number" pos:start="45:44" pos:end="45:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="47:9" pos:end="53:9">for <control pos:start="47:13" pos:end="47:31">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">j</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">1</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:26"><expr pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:21">j</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <literal type="number" pos:start="47:25" pos:end="47:25">4</literal></expr>;</condition> <incr pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:28">j</name><operator pos:start="47:29" pos:end="47:30">++</operator></expr></incr>)</control> <block pos:start="47:33" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:39">

            <expr_stmt pos:start="49:13" pos:end="49:44"><expr pos:start="49:13" pos:end="49:43"><call pos:start="49:13" pos:end="49:43"><name pos:start="49:13" pos:end="49:17">setsx</name><argument_list pos:start="49:18" pos:end="49:43">(<argument pos:start="49:19" pos:end="49:21"><expr pos:start="49:19" pos:end="49:21"><name pos:start="49:19" pos:end="49:21">idx</name></expr></argument>, <argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><operator pos:start="49:24" pos:end="49:24">-</operator><literal type="number" pos:start="49:25" pos:end="49:27">1</literal> <operator pos:start="49:27" pos:end="49:27">-</operator> <name pos:start="49:29" pos:end="49:29">j</name></expr></argument>, <argument pos:start="49:32" pos:end="49:33"><expr pos:start="49:32" pos:end="49:33"><name pos:start="49:32" pos:end="49:33">p0</name></expr></argument>, <argument pos:start="49:36" pos:end="49:42"><expr pos:start="49:36" pos:end="49:42"><name pos:start="49:36" pos:end="49:42"><name pos:start="49:36" pos:end="49:36">F</name><index pos:start="49:37" pos:end="49:42">[<expr pos:start="49:38" pos:end="49:41"><name pos:start="49:38" pos:end="49:41">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:39"><expr pos:start="51:13" pos:end="51:38"><call pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:17">setsx</name><argument_list pos:start="51:18" pos:end="51:38">(<argument pos:start="51:19" pos:end="51:21"><expr pos:start="51:19" pos:end="51:21"><name pos:start="51:19" pos:end="51:21">idx</name></expr></argument>, <argument pos:start="51:24" pos:end="51:24"><expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">j</name></expr></argument>, <argument pos:start="51:27" pos:end="51:28"><expr pos:start="51:27" pos:end="51:28"><name pos:start="51:27" pos:end="51:28">q0</name></expr></argument>, <argument pos:start="51:31" pos:end="51:37"><expr pos:start="51:31" pos:end="51:37"><name pos:start="51:31" pos:end="51:37"><name pos:start="51:31" pos:end="51:31">F</name><index pos:start="51:32" pos:end="51:37">[<expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="55:9" pos:end="61:9">for <control pos:start="55:13" pos:end="55:31">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">j</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">4</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:26"><expr pos:start="55:21" pos:end="55:25"><name pos:start="55:21" pos:end="55:21">j</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:25">8</literal></expr>;</condition> <incr pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:28">j</name><operator pos:start="55:29" pos:end="55:30">++</operator></expr></incr>)</control> <block pos:start="55:33" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:40">

            <expr_stmt pos:start="57:13" pos:end="57:45"><expr pos:start="57:13" pos:end="57:44"><call pos:start="57:13" pos:end="57:44"><name pos:start="57:13" pos:end="57:17">setpx</name><argument_list pos:start="57:18" pos:end="57:44">(<argument pos:start="57:19" pos:end="57:21"><expr pos:start="57:19" pos:end="57:21"><name pos:start="57:19" pos:end="57:21">idx</name></expr></argument>, <argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><operator pos:start="57:24" pos:end="57:24">-</operator><literal type="number" pos:start="57:25" pos:end="57:27">1</literal> <operator pos:start="57:27" pos:end="57:27">-</operator> <name pos:start="57:29" pos:end="57:29">j</name></expr></argument>, <argument pos:start="57:32" pos:end="57:43"><expr pos:start="57:32" pos:end="57:43"><call pos:start="57:32" pos:end="57:36"><name pos:start="57:32" pos:end="57:34">rnd</name><argument_list pos:start="57:35" pos:end="57:36">()</argument_list></call> <operator pos:start="57:38" pos:end="57:38">&amp;</operator> <name pos:start="57:40" pos:end="57:43">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><call pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:17">setpx</name><argument_list pos:start="59:18" pos:end="59:39">(<argument pos:start="59:19" pos:end="59:21"><expr pos:start="59:19" pos:end="59:21"><name pos:start="59:19" pos:end="59:21">idx</name></expr></argument>, <argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">j</name></expr></argument>, <argument pos:start="59:27" pos:end="59:38"><expr pos:start="59:27" pos:end="59:38"><call pos:start="59:27" pos:end="59:31"><name pos:start="59:27" pos:end="59:29">rnd</name><argument_list pos:start="59:30" pos:end="59:31">()</argument_list></call> <operator pos:start="59:33" pos:end="59:33">&amp;</operator> <name pos:start="59:35" pos:end="59:38">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="65:5" pos:end="93:5">for <control pos:start="65:9" pos:end="65:27">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">4</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:22"><expr pos:start="65:17" pos:end="65:21"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <literal type="number" pos:start="65:21" pos:end="65:21">6</literal></expr>;</condition> <incr pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:24">i</name><operator pos:start="65:25" pos:end="65:26">++</operator></expr></incr>)</control> <comment type="block" pos:start="65:29" pos:end="65:41">/* regular */</comment> <block pos:start="65:43" pos:end="93:5">{<block_content pos:start="67:9" pos:end="91:9">

        <decl_stmt pos:start="67:9" pos:end="67:60"><decl pos:start="67:9" pos:end="67:35"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:15">idx</name> <init pos:start="67:17" pos:end="67:35">= <expr pos:start="67:19" pos:end="67:35"><name pos:start="67:19" pos:end="67:21">off</name> <operator pos:start="67:23" pos:end="67:23">+</operator> <name pos:start="67:25" pos:end="67:25">i</name> <operator pos:start="67:27" pos:end="67:27">*</operator> <name pos:start="67:29" pos:end="67:35">istride</name></expr></init></decl>, <decl pos:start="67:38" pos:end="67:39"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:38" pos:end="67:39">p2</name></decl>, <decl pos:start="67:42" pos:end="67:43"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:42" pos:end="67:43">p1</name></decl>, <decl pos:start="67:46" pos:end="67:47"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:46" pos:end="67:47">p0</name></decl>, <decl pos:start="67:50" pos:end="67:51"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:50" pos:end="67:51">q0</name></decl>, <decl pos:start="67:54" pos:end="67:55"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:54" pos:end="67:55">q1</name></decl>, <decl pos:start="67:58" pos:end="67:59"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:58" pos:end="67:59">q2</name></decl>;</decl_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><call pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:13">setpx</name><argument_list pos:start="69:14" pos:end="69:41">(<argument pos:start="69:15" pos:end="69:17"><expr pos:start="69:15" pos:end="69:17"><name pos:start="69:15" pos:end="69:17">idx</name></expr></argument>,  <argument pos:start="69:21" pos:end="69:21"><expr pos:start="69:21" pos:end="69:21"><literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr></argument>, <argument pos:start="69:24" pos:end="69:40"><expr pos:start="69:24" pos:end="69:40"><name pos:start="69:24" pos:end="69:25">q0</name> <operator pos:start="69:27" pos:end="69:27">=</operator> <call pos:start="69:29" pos:end="69:33"><name pos:start="69:29" pos:end="69:31">rnd</name><argument_list pos:start="69:32" pos:end="69:33">()</argument_list></call> <operator pos:start="69:35" pos:end="69:35">&amp;</operator> <name pos:start="69:37" pos:end="69:40">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:41"><expr pos:start="71:9" pos:end="71:40"><call pos:start="71:9" pos:end="71:40"><name pos:start="71:9" pos:end="71:13">setsx</name><argument_list pos:start="71:14" pos:end="71:40">(<argument pos:start="71:15" pos:end="71:17"><expr pos:start="71:15" pos:end="71:17"><name pos:start="71:15" pos:end="71:17">idx</name></expr></argument>,  <argument pos:start="71:21" pos:end="71:21"><expr pos:start="71:21" pos:end="71:21"><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr></argument>, <argument pos:start="71:24" pos:end="71:30"><expr pos:start="71:24" pos:end="71:30"><name pos:start="71:24" pos:end="71:25">q1</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:30">q0</name></expr></argument>, <argument pos:start="71:33" pos:end="71:39"><expr pos:start="71:33" pos:end="71:39"><name pos:start="71:33" pos:end="71:39"><name pos:start="71:33" pos:end="71:33">I</name><index pos:start="71:34" pos:end="71:39">[<expr pos:start="71:35" pos:end="71:38"><name pos:start="71:35" pos:end="71:38">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:41"><expr pos:start="73:9" pos:end="73:40"><call pos:start="73:9" pos:end="73:40"><name pos:start="73:9" pos:end="73:13">setsx</name><argument_list pos:start="73:14" pos:end="73:40">(<argument pos:start="73:15" pos:end="73:17"><expr pos:start="73:15" pos:end="73:17"><name pos:start="73:15" pos:end="73:17">idx</name></expr></argument>,  <argument pos:start="73:21" pos:end="73:21"><expr pos:start="73:21" pos:end="73:21"><literal type="number" pos:start="73:21" pos:end="73:21">2</literal></expr></argument>, <argument pos:start="73:24" pos:end="73:30"><expr pos:start="73:24" pos:end="73:30"><name pos:start="73:24" pos:end="73:25">q2</name> <operator pos:start="73:27" pos:end="73:27">=</operator> <name pos:start="73:29" pos:end="73:30">q1</name></expr></argument>, <argument pos:start="73:33" pos:end="73:39"><expr pos:start="73:33" pos:end="73:39"><name pos:start="73:33" pos:end="73:39"><name pos:start="73:33" pos:end="73:33">I</name><index pos:start="73:34" pos:end="73:39">[<expr pos:start="73:35" pos:end="73:38"><name pos:start="73:35" pos:end="73:38">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:41"><expr pos:start="75:9" pos:end="75:40"><call pos:start="75:9" pos:end="75:40"><name pos:start="75:9" pos:end="75:13">setsx</name><argument_list pos:start="75:14" pos:end="75:40">(<argument pos:start="75:15" pos:end="75:17"><expr pos:start="75:15" pos:end="75:17"><name pos:start="75:15" pos:end="75:17">idx</name></expr></argument>,  <argument pos:start="75:21" pos:end="75:21"><expr pos:start="75:21" pos:end="75:21"><literal type="number" pos:start="75:21" pos:end="75:21">3</literal></expr></argument>, <argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">q2</name></expr></argument>,      <argument pos:start="75:33" pos:end="75:39"><expr pos:start="75:33" pos:end="75:39"><name pos:start="75:33" pos:end="75:39"><name pos:start="75:33" pos:end="75:33">I</name><index pos:start="75:34" pos:end="75:39">[<expr pos:start="75:35" pos:end="75:38"><name pos:start="75:35" pos:end="75:38">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><call pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:13">setsx</name><argument_list pos:start="77:14" pos:end="77:45">(<argument pos:start="77:15" pos:end="77:17"><expr pos:start="77:15" pos:end="77:17"><name pos:start="77:15" pos:end="77:17">idx</name></expr></argument>, <argument pos:start="77:20" pos:end="77:21"><expr pos:start="77:20" pos:end="77:21"><operator pos:start="77:20" pos:end="77:20">-</operator><literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr></argument>, <argument pos:start="77:24" pos:end="77:30"><expr pos:start="77:24" pos:end="77:30"><name pos:start="77:24" pos:end="77:25">p0</name> <operator pos:start="77:27" pos:end="77:27">=</operator> <name pos:start="77:29" pos:end="77:30">q0</name></expr></argument>, <argument pos:start="77:33" pos:end="77:44"><expr pos:start="77:33" pos:end="77:44"><name pos:start="77:33" pos:end="77:39"><name pos:start="77:33" pos:end="77:33">E</name><index pos:start="77:34" pos:end="77:39">[<expr pos:start="77:35" pos:end="77:38"><name pos:start="77:35" pos:end="77:38">bidx</name></expr>]</index></name> <operator pos:start="77:41" pos:end="77:42">&gt;&gt;</operator> <literal type="number" pos:start="77:44" pos:end="77:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><call pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:13">setsx</name><argument_list pos:start="79:14" pos:end="79:40">(<argument pos:start="79:15" pos:end="79:17"><expr pos:start="79:15" pos:end="79:17"><name pos:start="79:15" pos:end="79:17">idx</name></expr></argument>, <argument pos:start="79:20" pos:end="79:21"><expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">2</literal></expr></argument>, <argument pos:start="79:24" pos:end="79:30"><expr pos:start="79:24" pos:end="79:30"><name pos:start="79:24" pos:end="79:25">p1</name> <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:30">p0</name></expr></argument>, <argument pos:start="79:33" pos:end="79:39"><expr pos:start="79:33" pos:end="79:39"><name pos:start="79:33" pos:end="79:39"><name pos:start="79:33" pos:end="79:33">I</name><index pos:start="79:34" pos:end="79:39">[<expr pos:start="79:35" pos:end="79:38"><name pos:start="79:35" pos:end="79:38">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><call pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:13">setsx</name><argument_list pos:start="81:14" pos:end="81:40">(<argument pos:start="81:15" pos:end="81:17"><expr pos:start="81:15" pos:end="81:17"><name pos:start="81:15" pos:end="81:17">idx</name></expr></argument>, <argument pos:start="81:20" pos:end="81:21"><expr pos:start="81:20" pos:end="81:21"><operator pos:start="81:20" pos:end="81:20">-</operator><literal type="number" pos:start="81:21" pos:end="81:21">3</literal></expr></argument>, <argument pos:start="81:24" pos:end="81:30"><expr pos:start="81:24" pos:end="81:30"><name pos:start="81:24" pos:end="81:25">p2</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:30">p1</name></expr></argument>, <argument pos:start="81:33" pos:end="81:39"><expr pos:start="81:33" pos:end="81:39"><name pos:start="81:33" pos:end="81:39"><name pos:start="81:33" pos:end="81:33">I</name><index pos:start="81:34" pos:end="81:39">[<expr pos:start="81:35" pos:end="81:38"><name pos:start="81:35" pos:end="81:38">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:41"><expr pos:start="83:9" pos:end="83:40"><call pos:start="83:9" pos:end="83:40"><name pos:start="83:9" pos:end="83:13">setsx</name><argument_list pos:start="83:14" pos:end="83:40">(<argument pos:start="83:15" pos:end="83:17"><expr pos:start="83:15" pos:end="83:17"><name pos:start="83:15" pos:end="83:17">idx</name></expr></argument>, <argument pos:start="83:20" pos:end="83:21"><expr pos:start="83:20" pos:end="83:21"><operator pos:start="83:20" pos:end="83:20">-</operator><literal type="number" pos:start="83:21" pos:end="83:21">4</literal></expr></argument>, <argument pos:start="83:24" pos:end="83:25"><expr pos:start="83:24" pos:end="83:25"><name pos:start="83:24" pos:end="83:25">p2</name></expr></argument>,      <argument pos:start="83:33" pos:end="83:39"><expr pos:start="83:33" pos:end="83:39"><name pos:start="83:33" pos:end="83:39"><name pos:start="83:33" pos:end="83:33">I</name><index pos:start="83:34" pos:end="83:39">[<expr pos:start="83:35" pos:end="83:38"><name pos:start="83:35" pos:end="83:38">bidx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="85:9" pos:end="91:9">for <control pos:start="85:13" pos:end="85:31">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">j</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">4</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:26"><expr pos:start="85:21" pos:end="85:25"><name pos:start="85:21" pos:end="85:21">j</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <literal type="number" pos:start="85:25" pos:end="85:25">8</literal></expr>;</condition> <incr pos:start="85:28" pos:end="85:30"><expr pos:start="85:28" pos:end="85:30"><name pos:start="85:28" pos:end="85:28">j</name><operator pos:start="85:29" pos:end="85:30">++</operator></expr></incr>)</control> <block pos:start="85:33" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:40">

            <expr_stmt pos:start="87:13" pos:end="87:45"><expr pos:start="87:13" pos:end="87:44"><call pos:start="87:13" pos:end="87:44"><name pos:start="87:13" pos:end="87:17">setpx</name><argument_list pos:start="87:18" pos:end="87:44">(<argument pos:start="87:19" pos:end="87:21"><expr pos:start="87:19" pos:end="87:21"><name pos:start="87:19" pos:end="87:21">idx</name></expr></argument>, <argument pos:start="87:24" pos:end="87:29"><expr pos:start="87:24" pos:end="87:29"><operator pos:start="87:24" pos:end="87:24">-</operator><literal type="number" pos:start="87:25" pos:end="87:27">1</literal> <operator pos:start="87:27" pos:end="87:27">-</operator> <name pos:start="87:29" pos:end="87:29">j</name></expr></argument>, <argument pos:start="87:32" pos:end="87:43"><expr pos:start="87:32" pos:end="87:43"><call pos:start="87:32" pos:end="87:36"><name pos:start="87:32" pos:end="87:34">rnd</name><argument_list pos:start="87:35" pos:end="87:36">()</argument_list></call> <operator pos:start="87:38" pos:end="87:38">&amp;</operator> <name pos:start="87:40" pos:end="87:43">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:40"><expr pos:start="89:13" pos:end="89:39"><call pos:start="89:13" pos:end="89:39"><name pos:start="89:13" pos:end="89:17">setpx</name><argument_list pos:start="89:18" pos:end="89:39">(<argument pos:start="89:19" pos:end="89:21"><expr pos:start="89:19" pos:end="89:21"><name pos:start="89:19" pos:end="89:21">idx</name></expr></argument>, <argument pos:start="89:24" pos:end="89:24"><expr pos:start="89:24" pos:end="89:24"><name pos:start="89:24" pos:end="89:24">j</name></expr></argument>, <argument pos:start="89:27" pos:end="89:38"><expr pos:start="89:27" pos:end="89:38"><call pos:start="89:27" pos:end="89:31"><name pos:start="89:27" pos:end="89:29">rnd</name><argument_list pos:start="89:30" pos:end="89:31">()</argument_list></call> <operator pos:start="89:33" pos:end="89:33">&amp;</operator> <name pos:start="89:35" pos:end="89:38">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="95:5" pos:end="107:5">for <control pos:start="95:9" pos:end="95:27">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">6</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:22"><expr pos:start="95:17" pos:end="95:21"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <literal type="number" pos:start="95:21" pos:end="95:21">8</literal></expr>;</condition> <incr pos:start="95:24" pos:end="95:26"><expr pos:start="95:24" pos:end="95:26"><name pos:start="95:24" pos:end="95:24">i</name><operator pos:start="95:25" pos:end="95:26">++</operator></expr></incr>)</control> <comment type="block" pos:start="95:29" pos:end="95:37">/* off */</comment> <block pos:start="95:39" pos:end="107:5">{<block_content pos:start="97:9" pos:end="105:9">

        <decl_stmt pos:start="97:9" pos:end="97:36"><decl pos:start="97:9" pos:end="97:35"><type pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">int</name></type> <name pos:start="97:13" pos:end="97:15">idx</name> <init pos:start="97:17" pos:end="97:35">= <expr pos:start="97:19" pos:end="97:35"><name pos:start="97:19" pos:end="97:21">off</name> <operator pos:start="97:23" pos:end="97:23">+</operator> <name pos:start="97:25" pos:end="97:25">i</name> <operator pos:start="97:27" pos:end="97:27">*</operator> <name pos:start="97:29" pos:end="97:35">istride</name></expr></init></decl>;</decl_stmt>

        <for pos:start="99:9" pos:end="105:9">for <control pos:start="99:13" pos:end="99:31">(<init pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:14">j</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>;</init> <condition pos:start="99:21" pos:end="99:26"><expr pos:start="99:21" pos:end="99:25"><name pos:start="99:21" pos:end="99:21">j</name> <operator pos:start="99:23" pos:end="99:23">&lt;</operator> <literal type="number" pos:start="99:25" pos:end="99:25">8</literal></expr>;</condition> <incr pos:start="99:28" pos:end="99:30"><expr pos:start="99:28" pos:end="99:30"><name pos:start="99:28" pos:end="99:28">j</name><operator pos:start="99:29" pos:end="99:30">++</operator></expr></incr>)</control> <block pos:start="99:33" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:40">

            <expr_stmt pos:start="101:13" pos:end="101:45"><expr pos:start="101:13" pos:end="101:44"><call pos:start="101:13" pos:end="101:44"><name pos:start="101:13" pos:end="101:17">setpx</name><argument_list pos:start="101:18" pos:end="101:44">(<argument pos:start="101:19" pos:end="101:21"><expr pos:start="101:19" pos:end="101:21"><name pos:start="101:19" pos:end="101:21">idx</name></expr></argument>, <argument pos:start="101:24" pos:end="101:29"><expr pos:start="101:24" pos:end="101:29"><operator pos:start="101:24" pos:end="101:24">-</operator><literal type="number" pos:start="101:25" pos:end="101:27">1</literal> <operator pos:start="101:27" pos:end="101:27">-</operator> <name pos:start="101:29" pos:end="101:29">j</name></expr></argument>, <argument pos:start="101:32" pos:end="101:43"><expr pos:start="101:32" pos:end="101:43"><call pos:start="101:32" pos:end="101:36"><name pos:start="101:32" pos:end="101:34">rnd</name><argument_list pos:start="101:35" pos:end="101:36">()</argument_list></call> <operator pos:start="101:38" pos:end="101:38">&amp;</operator> <name pos:start="101:40" pos:end="101:43">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:40"><expr pos:start="103:13" pos:end="103:39"><call pos:start="103:13" pos:end="103:39"><name pos:start="103:13" pos:end="103:17">setpx</name><argument_list pos:start="103:18" pos:end="103:39">(<argument pos:start="103:19" pos:end="103:21"><expr pos:start="103:19" pos:end="103:21"><name pos:start="103:19" pos:end="103:21">idx</name></expr></argument>, <argument pos:start="103:24" pos:end="103:24"><expr pos:start="103:24" pos:end="103:24"><name pos:start="103:24" pos:end="103:24">j</name></expr></argument>, <argument pos:start="103:27" pos:end="103:38"><expr pos:start="103:27" pos:end="103:38"><call pos:start="103:27" pos:end="103:31"><name pos:start="103:27" pos:end="103:29">rnd</name><argument_list pos:start="103:30" pos:end="103:31">()</argument_list></call> <operator pos:start="103:33" pos:end="103:33">&amp;</operator> <name pos:start="103:35" pos:end="103:38">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
