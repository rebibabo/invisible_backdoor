<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16872.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">vfio_probe_ati_bar4_quirk</name><parameter_list pos:start="1:38" pos:end="1:66">(<parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:51">VFIOPCIDevice</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">vdev</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:65"><decl pos:start="1:60" pos:end="1:65"><type pos:start="1:60" pos:end="1:65"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:65">nr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:57">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VFIOQuirk</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">quirk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">VFIOConfigWindowQuirk</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:33">window</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:72">/* This windows doesn't seem to be used except by legacy VGA code */</comment>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="15:34">(<expr pos:start="13:9" pos:end="15:33"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:57"><name pos:start="13:10" pos:end="13:20">vfio_pci_is</name><argument_list pos:start="13:21" pos:end="13:57">(<argument pos:start="13:22" pos:end="13:25"><expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">vdev</name></expr></argument>, <argument pos:start="13:28" pos:end="13:44"><expr pos:start="13:28" pos:end="13:44"><name pos:start="13:28" pos:end="13:44">PCI_VENDOR_ID_ATI</name></expr></argument>, <argument pos:start="13:47" pos:end="13:56"><expr pos:start="13:47" pos:end="13:56"><name pos:start="13:47" pos:end="13:56">PCI_ANY_ID</name></expr></argument>)</argument_list></call> <operator pos:start="13:59" pos:end="13:60">||</operator>

        <operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:13">vdev</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:22">has_vga</name></name> <operator pos:start="15:24" pos:end="15:25">||</operator> <name pos:start="15:27" pos:end="15:28">nr</name> <operator pos:start="15:30" pos:end="15:31">!=</operator> <literal type="number" pos:start="15:33" pos:end="15:33">4</literal></expr>)</condition> <block pos:start="15:36" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:9">quirk</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:21">g_malloc0</name><argument_list pos:start="23:22" pos:end="23:37">(<argument pos:start="23:23" pos:end="23:36"><expr pos:start="23:23" pos:end="23:36"><sizeof pos:start="23:23" pos:end="23:36">sizeof<argument_list pos:start="23:29" pos:end="23:36">(<argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><operator pos:start="23:30" pos:end="23:30">*</operator><name pos:start="23:31" pos:end="23:35">quirk</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:9">quirk</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:14">mem</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:40"><name pos:start="25:18" pos:end="25:23">g_new0</name><argument_list pos:start="25:24" pos:end="25:40">(<argument pos:start="25:25" pos:end="25:36"><expr pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:36">MemoryRegion</name></expr></argument>, <argument pos:start="25:39" pos:end="25:39"><expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:9">quirk</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">nr_mem</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:68"><expr pos:start="29:5" pos:end="31:67"><name pos:start="29:5" pos:end="29:10">window</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:24"><name pos:start="29:14" pos:end="29:18">quirk</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:24">data</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <call pos:start="29:28" pos:end="31:67"><name pos:start="29:28" pos:end="29:36">g_malloc0</name><argument_list pos:start="29:37" pos:end="31:67">(<argument pos:start="29:38" pos:end="31:66"><expr pos:start="29:38" pos:end="31:66"><sizeof pos:start="29:38" pos:end="29:52">sizeof<argument_list pos:start="29:44" pos:end="29:52">(<argument pos:start="29:45" pos:end="29:51"><expr pos:start="29:45" pos:end="29:51"><operator pos:start="29:45" pos:end="29:45">*</operator><name pos:start="29:46" pos:end="29:51">window</name></expr></argument>)</argument_list></sizeof> <operator pos:start="29:54" pos:end="29:54">+</operator>

                                     <sizeof pos:start="31:38" pos:end="31:66">sizeof<argument_list pos:start="31:44" pos:end="31:66">(<argument pos:start="31:45" pos:end="31:65"><expr pos:start="31:45" pos:end="31:65"><name pos:start="31:45" pos:end="31:65">VFIOConfigWindowMatch</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:10">window</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:16">vdev</name></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:23">vdev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:10">window</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:26">address_offset</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <literal type="number" pos:start="35:30" pos:end="35:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:10">window</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:23">data_offset</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <literal type="number" pos:start="37:27" pos:end="37:27">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:10">window</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:22">nr_matches</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:10">window</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:19">matches</name><index pos:start="41:20" pos:end="41:22">[<expr pos:start="41:21" pos:end="41:21"><literal type="number" pos:start="41:21" pos:end="41:21">0</literal></expr>]</index></name><operator pos:start="41:23" pos:end="41:23">.</operator><name pos:start="41:24" pos:end="41:28">match</name> <operator pos:start="41:30" pos:end="41:30">=</operator> <literal type="number" pos:start="41:32" pos:end="41:37">0x4000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:10">window</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:19">matches</name><index pos:start="43:20" pos:end="43:22">[<expr pos:start="43:21" pos:end="43:21"><literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>]</index></name><operator pos:start="43:23" pos:end="43:23">.</operator><name pos:start="43:24" pos:end="43:27">mask</name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:52">PCIE_CONFIG_SPACE_SIZE</name> <operator pos:start="43:54" pos:end="43:54">-</operator> <literal type="number" pos:start="43:56" pos:end="43:56">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:10">window</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:15">bar</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:20">nr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:10">window</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:20">addr_mem</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:37"><name pos:start="47:25" pos:end="47:29">quirk</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:34">mem</name><index pos:start="47:35" pos:end="47:37">[<expr pos:start="47:36" pos:end="47:36"><literal type="number" pos:start="47:36" pos:end="47:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:10">window</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:20">data_mem</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <operator pos:start="49:24" pos:end="49:24">&amp;</operator><name pos:start="49:25" pos:end="49:37"><name pos:start="49:25" pos:end="49:29">quirk</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:34">mem</name><index pos:start="49:35" pos:end="49:37">[<expr pos:start="49:36" pos:end="49:36"><literal type="number" pos:start="49:36" pos:end="49:36">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="57:67"><expr pos:start="53:5" pos:end="57:66"><call pos:start="53:5" pos:end="57:66"><name pos:start="53:5" pos:end="53:25">memory_region_init_io</name><argument_list pos:start="53:26" pos:end="57:66">(<argument pos:start="53:27" pos:end="53:42"><expr pos:start="53:27" pos:end="53:42"><name pos:start="53:27" pos:end="53:42"><name pos:start="53:27" pos:end="53:32">window</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:42">addr_mem</name></name></expr></argument>, <argument pos:start="53:45" pos:end="53:56"><expr pos:start="53:45" pos:end="53:56"><call pos:start="53:45" pos:end="53:56"><name pos:start="53:45" pos:end="53:50">OBJECT</name><argument_list pos:start="53:51" pos:end="53:56">(<argument pos:start="53:52" pos:end="53:55"><expr pos:start="53:52" pos:end="53:55"><name pos:start="53:52" pos:end="53:55">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="55:27" pos:end="55:60"><expr pos:start="55:27" pos:end="55:60"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:60">vfio_generic_window_address_quirk</name></expr></argument>, <argument pos:start="55:63" pos:end="55:68"><expr pos:start="55:63" pos:end="55:68"><name pos:start="55:63" pos:end="55:68">window</name></expr></argument>,

                          <argument pos:start="57:27" pos:end="57:62"><expr pos:start="57:27" pos:end="57:62"><literal type="string" pos:start="57:27" pos:end="57:62">"vfio-ati-bar4-window-address-quirk"</literal></expr></argument>, <argument pos:start="57:65" pos:end="57:65"><expr pos:start="57:65" pos:end="57:65"><literal type="number" pos:start="57:65" pos:end="57:65">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="63:61"><expr pos:start="59:5" pos:end="63:60"><call pos:start="59:5" pos:end="63:60"><name pos:start="59:5" pos:end="59:39">memory_region_add_subregion_overlap</name><argument_list pos:start="59:40" pos:end="63:60">(<argument pos:start="59:41" pos:end="59:66"><expr pos:start="59:41" pos:end="59:66"><operator pos:start="59:41" pos:end="59:41">&amp;</operator><name pos:start="59:42" pos:end="59:55"><name pos:start="59:42" pos:end="59:45">vdev</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:51">bars</name><index pos:start="59:52" pos:end="59:55">[<expr pos:start="59:53" pos:end="59:54"><name pos:start="59:53" pos:end="59:54">nr</name></expr>]</index></name><operator pos:start="59:56" pos:end="59:56">.</operator><name pos:start="59:57" pos:end="59:66"><name pos:start="59:57" pos:end="59:62">region</name><operator pos:start="59:63" pos:end="59:63">.</operator><name pos:start="59:64" pos:end="59:66">mem</name></name></expr></argument>,

                                        <argument pos:start="61:41" pos:end="61:62"><expr pos:start="61:41" pos:end="61:62"><name pos:start="61:41" pos:end="61:62"><name pos:start="61:41" pos:end="61:46">window</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:62">address_offset</name></name></expr></argument>,

                                        <argument pos:start="63:41" pos:end="63:56"><expr pos:start="63:41" pos:end="63:56"><name pos:start="63:41" pos:end="63:56"><name pos:start="63:41" pos:end="63:46">window</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:56">addr_mem</name></name></expr></argument>, <argument pos:start="63:59" pos:end="63:59"><expr pos:start="63:59" pos:end="63:59"><literal type="number" pos:start="63:59" pos:end="63:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="71:64"><expr pos:start="67:5" pos:end="71:63"><call pos:start="67:5" pos:end="71:63"><name pos:start="67:5" pos:end="67:25">memory_region_init_io</name><argument_list pos:start="67:26" pos:end="71:63">(<argument pos:start="67:27" pos:end="67:42"><expr pos:start="67:27" pos:end="67:42"><name pos:start="67:27" pos:end="67:42"><name pos:start="67:27" pos:end="67:32">window</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:42">data_mem</name></name></expr></argument>, <argument pos:start="67:45" pos:end="67:56"><expr pos:start="67:45" pos:end="67:56"><call pos:start="67:45" pos:end="67:56"><name pos:start="67:45" pos:end="67:50">OBJECT</name><argument_list pos:start="67:51" pos:end="67:56">(<argument pos:start="67:52" pos:end="67:55"><expr pos:start="67:52" pos:end="67:55"><name pos:start="67:52" pos:end="67:55">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="69:27" pos:end="69:57"><expr pos:start="69:27" pos:end="69:57"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:57">vfio_generic_window_data_quirk</name></expr></argument>, <argument pos:start="69:60" pos:end="69:65"><expr pos:start="69:60" pos:end="69:65"><name pos:start="69:60" pos:end="69:65">window</name></expr></argument>,

                          <argument pos:start="71:27" pos:end="71:59"><expr pos:start="71:27" pos:end="71:59"><literal type="string" pos:start="71:27" pos:end="71:59">"vfio-ati-bar4-window-data-quirk"</literal></expr></argument>, <argument pos:start="71:62" pos:end="71:62"><expr pos:start="71:62" pos:end="71:62"><literal type="number" pos:start="71:62" pos:end="71:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="77:61"><expr pos:start="73:5" pos:end="77:60"><call pos:start="73:5" pos:end="77:60"><name pos:start="73:5" pos:end="73:39">memory_region_add_subregion_overlap</name><argument_list pos:start="73:40" pos:end="77:60">(<argument pos:start="73:41" pos:end="73:66"><expr pos:start="73:41" pos:end="73:66"><operator pos:start="73:41" pos:end="73:41">&amp;</operator><name pos:start="73:42" pos:end="73:55"><name pos:start="73:42" pos:end="73:45">vdev</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:51">bars</name><index pos:start="73:52" pos:end="73:55">[<expr pos:start="73:53" pos:end="73:54"><name pos:start="73:53" pos:end="73:54">nr</name></expr>]</index></name><operator pos:start="73:56" pos:end="73:56">.</operator><name pos:start="73:57" pos:end="73:66"><name pos:start="73:57" pos:end="73:62">region</name><operator pos:start="73:63" pos:end="73:63">.</operator><name pos:start="73:64" pos:end="73:66">mem</name></name></expr></argument>,

                                        <argument pos:start="75:41" pos:end="75:59"><expr pos:start="75:41" pos:end="75:59"><name pos:start="75:41" pos:end="75:59"><name pos:start="75:41" pos:end="75:46">window</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:59">data_offset</name></name></expr></argument>,

                                        <argument pos:start="77:41" pos:end="77:56"><expr pos:start="77:41" pos:end="77:56"><name pos:start="77:41" pos:end="77:56"><name pos:start="77:41" pos:end="77:46">window</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:56">data_mem</name></name></expr></argument>, <argument pos:start="77:59" pos:end="77:59"><expr pos:start="77:59" pos:end="77:59"><literal type="number" pos:start="77:59" pos:end="77:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:59"><expr pos:start="81:5" pos:end="81:58"><call pos:start="81:5" pos:end="81:58"><name pos:start="81:5" pos:end="81:21">QLIST_INSERT_HEAD</name><argument_list pos:start="81:22" pos:end="81:58">(<argument pos:start="81:23" pos:end="81:44"><expr pos:start="81:23" pos:end="81:44"><operator pos:start="81:23" pos:end="81:23">&amp;</operator><name pos:start="81:24" pos:end="81:37"><name pos:start="81:24" pos:end="81:27">vdev</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:33">bars</name><index pos:start="81:34" pos:end="81:37">[<expr pos:start="81:35" pos:end="81:36"><name pos:start="81:35" pos:end="81:36">nr</name></expr>]</index></name><operator pos:start="81:38" pos:end="81:38">.</operator><name pos:start="81:39" pos:end="81:44">quirks</name></expr></argument>, <argument pos:start="81:47" pos:end="81:51"><expr pos:start="81:47" pos:end="81:51"><name pos:start="81:47" pos:end="81:51">quirk</name></expr></argument>, <argument pos:start="81:54" pos:end="81:57"><expr pos:start="81:54" pos:end="81:57"><name pos:start="81:54" pos:end="81:57">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:57"><expr pos:start="85:5" pos:end="85:56"><call pos:start="85:5" pos:end="85:56"><name pos:start="85:5" pos:end="85:35">trace_vfio_quirk_ati_bar4_probe</name><argument_list pos:start="85:36" pos:end="85:56">(<argument pos:start="85:37" pos:end="85:55"><expr pos:start="85:37" pos:end="85:55"><name pos:start="85:37" pos:end="85:55"><name pos:start="85:37" pos:end="85:40">vdev</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:50">vbasedev</name><operator pos:start="85:51" pos:end="85:51">.</operator><name pos:start="85:52" pos:end="85:55">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
