<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6717.c" pos:tabs="8"><function pos:start="1:1" pos:end="357:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">shorten_decode_frame</name><parameter_list pos:start="1:32" pos:end="5:24">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:18"><decl pos:start="3:9" pos:end="3:18"><type pos:start="3:9" pos:end="3:18"><name pos:start="3:9" pos:end="3:12">void</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier></type><name pos:start="3:15" pos:end="3:18">data</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:34"><decl pos:start="3:21" pos:end="3:34"><type pos:start="3:21" pos:end="3:34"><name pos:start="3:21" pos:end="3:23">int</name> <modifier pos:start="3:25" pos:end="3:25">*</modifier></type><name pos:start="3:26" pos:end="3:34">data_size</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:23"><decl pos:start="5:9" pos:end="5:23"><type pos:start="5:9" pos:end="5:23"><name pos:start="5:9" pos:end="5:16">AVPacket</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="357:1">{<block_content pos:start="9:5" pos:end="355:17">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">ShortenContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">s</name> <init pos:start="13:23" pos:end="13:40">= <expr pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:29">avctx</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:25">input_buf_size</name> <init pos:start="15:27" pos:end="15:29">= <expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int16_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:20">samples</name> <init pos:start="17:22" pos:end="17:27">= <expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">data</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if<condition pos:start="19:7" pos:end="19:29">(<expr pos:start="19:8" pos:end="19:28"><name pos:start="19:8" pos:end="19:23"><name pos:start="19:8" pos:end="19:8">s</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:23">max_framesize</name></name> <operator pos:start="19:25" pos:end="19:26">==</operator> <literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr>)</condition><block pos:start="19:30" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:100">

        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:24">max_framesize</name></name><operator pos:start="21:25" pos:end="21:25">=</operator> <literal type="number" pos:start="21:27" pos:end="21:30">1024</literal></expr>;</expr_stmt> <comment type="line" pos:start="21:33" pos:end="21:82">// should hopefully be enough for the first header</comment>

        <expr_stmt pos:start="23:9" pos:end="23:100"><expr pos:start="23:9" pos:end="23:99"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">bitstream</name></name><operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:99"><name pos:start="23:23" pos:end="23:37">av_fast_realloc</name><argument_list pos:start="23:38" pos:end="23:99">(<argument pos:start="23:39" pos:end="23:50"><expr pos:start="23:39" pos:end="23:50"><name pos:start="23:39" pos:end="23:50"><name pos:start="23:39" pos:end="23:39">s</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:50">bitstream</name></name></expr></argument>, <argument pos:start="23:53" pos:end="23:80"><expr pos:start="23:53" pos:end="23:80"><operator pos:start="23:53" pos:end="23:53">&amp;</operator><name pos:start="23:54" pos:end="23:80"><name pos:start="23:54" pos:end="23:54">s</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:80">allocated_bitstream_size</name></name></expr></argument>, <argument pos:start="23:83" pos:end="23:98"><expr pos:start="23:83" pos:end="23:98"><name pos:start="23:83" pos:end="23:98"><name pos:start="23:83" pos:end="23:83">s</name><operator pos:start="23:84" pos:end="23:85">-&gt;</operator><name pos:start="23:86" pos:end="23:98">max_framesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="65:5"><if pos:start="29:5" pos:end="65:5">if<condition pos:start="29:7" pos:end="29:29">(<expr pos:start="29:8" pos:end="29:28"><literal type="number" pos:start="29:8" pos:end="29:8">1</literal> <operator pos:start="29:10" pos:end="29:11">&amp;&amp;</operator> <name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:28">max_framesize</name></name></expr>)</condition><block pos:start="29:30" pos:end="65:5">{<block_content pos:start="31:9" pos:end="63:9"><comment type="line" pos:start="29:31" pos:end="29:47">//FIXME truncated</comment>

        <expr_stmt pos:start="31:9" pos:end="31:72"><expr pos:start="31:9" pos:end="31:71"><name pos:start="31:9" pos:end="31:16">buf_size</name><operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:71"><name pos:start="31:19" pos:end="31:23">FFMIN</name><argument_list pos:start="31:24" pos:end="31:71">(<argument pos:start="31:25" pos:end="31:32"><expr pos:start="31:25" pos:end="31:32"><name pos:start="31:25" pos:end="31:32">buf_size</name></expr></argument>, <argument pos:start="31:35" pos:end="31:70"><expr pos:start="31:35" pos:end="31:70"><name pos:start="31:35" pos:end="31:50"><name pos:start="31:35" pos:end="31:35">s</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:50">max_framesize</name></name> <operator pos:start="31:52" pos:end="31:52">-</operator> <name pos:start="31:54" pos:end="31:70"><name pos:start="31:54" pos:end="31:54">s</name><operator pos:start="31:55" pos:end="31:56">-&gt;</operator><name pos:start="31:57" pos:end="31:70">bitstream_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:22">input_buf_size</name><operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:32">buf_size</name></expr>;</expr_stmt>



        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if<condition pos:start="37:11" pos:end="37:91">(<expr pos:start="37:12" pos:end="37:90"><name pos:start="37:12" pos:end="37:29"><name pos:start="37:12" pos:end="37:12">s</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:29">bitstream_index</name></name> <operator pos:start="37:31" pos:end="37:31">+</operator> <name pos:start="37:33" pos:end="37:49"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:49">bitstream_size</name></name> <operator pos:start="37:51" pos:end="37:51">+</operator> <name pos:start="37:53" pos:end="37:60">buf_size</name> <operator pos:start="37:62" pos:end="37:62">&gt;</operator> <name pos:start="37:64" pos:end="37:90"><name pos:start="37:64" pos:end="37:64">s</name><operator pos:start="37:65" pos:end="37:66">-&gt;</operator><name pos:start="37:67" pos:end="37:90">allocated_bitstream_size</name></name></expr>)</condition><block pos:start="37:92" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:33">

            <comment type="line" pos:start="39:13" pos:end="39:50">//                printf("memmove\n");</comment>

            <expr_stmt pos:start="41:13" pos:end="41:88"><expr pos:start="41:13" pos:end="41:87"><call pos:start="41:13" pos:end="41:87"><name pos:start="41:13" pos:end="41:19">memmove</name><argument_list pos:start="41:20" pos:end="41:87">(<argument pos:start="41:21" pos:end="41:32"><expr pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:32">bitstream</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:67"><expr pos:start="41:35" pos:end="41:67"><operator pos:start="41:35" pos:end="41:35">&amp;</operator><name pos:start="41:36" pos:end="41:67"><name pos:start="41:36" pos:end="41:36">s</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:47">bitstream</name><index pos:start="41:48" pos:end="41:67">[<expr pos:start="41:49" pos:end="41:66"><name pos:start="41:49" pos:end="41:66"><name pos:start="41:49" pos:end="41:49">s</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:66">bitstream_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="41:70" pos:end="41:86"><expr pos:start="41:70" pos:end="41:86"><name pos:start="41:70" pos:end="41:86"><name pos:start="41:70" pos:end="41:70">s</name><operator pos:start="41:71" pos:end="41:72">-&gt;</operator><name pos:start="41:73" pos:end="41:86">bitstream_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:30">bitstream_index</name></name><operator pos:start="43:31" pos:end="43:31">=</operator><literal type="number" pos:start="43:32" pos:end="43:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:85"><expr pos:start="47:9" pos:end="47:84"><call pos:start="47:9" pos:end="47:84"><name pos:start="47:9" pos:end="47:14">memcpy</name><argument_list pos:start="47:15" pos:end="47:84">(<argument pos:start="47:16" pos:end="47:68"><expr pos:start="47:16" pos:end="47:68"><operator pos:start="47:16" pos:end="47:16">&amp;</operator><name pos:start="47:17" pos:end="47:68"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:28">bitstream</name><index pos:start="47:29" pos:end="47:68">[<expr pos:start="47:30" pos:end="47:67"><name pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:30">s</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:47">bitstream_index</name></name> <operator pos:start="47:49" pos:end="47:49">+</operator> <name pos:start="47:51" pos:end="47:67"><name pos:start="47:51" pos:end="47:51">s</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:67">bitstream_size</name></name></expr>]</index></name></expr></argument>, <argument pos:start="47:71" pos:end="47:73"><expr pos:start="47:71" pos:end="47:73"><name pos:start="47:71" pos:end="47:73">buf</name></expr></argument>, <argument pos:start="47:76" pos:end="47:83"><expr pos:start="47:76" pos:end="47:83"><name pos:start="47:76" pos:end="47:83">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:47"><expr pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:11">buf</name><operator pos:start="49:12" pos:end="49:12">=</operator> <operator pos:start="49:14" pos:end="49:14">&amp;</operator><name pos:start="49:15" pos:end="49:46"><name pos:start="49:15" pos:end="49:15">s</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:26">bitstream</name><index pos:start="49:27" pos:end="49:46">[<expr pos:start="49:28" pos:end="49:45"><name pos:start="49:28" pos:end="49:45"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:45">bitstream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:38"><expr pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:16">buf_size</name> <operator pos:start="51:18" pos:end="51:19">+=</operator> <name pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:21">s</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:37">bitstream_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:25">bitstream_size</name></name><operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:35">buf_size</name></expr>;</expr_stmt>



        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if<condition pos:start="57:11" pos:end="57:39">(<expr pos:start="57:12" pos:end="57:38"><name pos:start="57:12" pos:end="57:19">buf_size</name> <operator pos:start="57:21" pos:end="57:21">&lt;</operator> <name pos:start="57:23" pos:end="57:38"><name pos:start="57:23" pos:end="57:23">s</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:38">max_framesize</name></name></expr>)</condition><block pos:start="57:40" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:34">

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:22">data_size</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:34">return <expr pos:start="61:20" pos:end="61:33"><name pos:start="61:20" pos:end="61:33">input_buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:43"><expr pos:start="67:5" pos:end="67:42"><call pos:start="67:5" pos:end="67:42"><name pos:start="67:5" pos:end="67:17">init_get_bits</name><argument_list pos:start="67:18" pos:end="67:42">(<argument pos:start="67:19" pos:end="67:24"><expr pos:start="67:19" pos:end="67:24"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:24">gb</name></name></expr></argument>, <argument pos:start="67:27" pos:end="67:29"><expr pos:start="67:27" pos:end="67:29"><name pos:start="67:27" pos:end="67:29">buf</name></expr></argument>, <argument pos:start="67:32" pos:end="67:41"><expr pos:start="67:32" pos:end="67:41"><name pos:start="67:32" pos:end="67:39">buf_size</name><operator pos:start="67:40" pos:end="67:40">*</operator><literal type="number" pos:start="67:41" pos:end="67:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:35"><expr pos:start="69:5" pos:end="69:34"><call pos:start="69:5" pos:end="69:34"><name pos:start="69:5" pos:end="69:13">skip_bits</name><argument_list pos:start="69:14" pos:end="69:34">(<argument pos:start="69:15" pos:end="69:20"><expr pos:start="69:15" pos:end="69:20"><operator pos:start="69:15" pos:end="69:15">&amp;</operator><name pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:20">gb</name></name></expr></argument>, <argument pos:start="69:23" pos:end="69:33"><expr pos:start="69:23" pos:end="69:33"><name pos:start="69:23" pos:end="69:33"><name pos:start="69:23" pos:end="69:23">s</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:33">bitindex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="323:5"><if pos:start="71:5" pos:end="83:5">if <condition pos:start="71:8" pos:end="71:22">(<expr pos:start="71:9" pos:end="71:21"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:21"><name pos:start="71:10" pos:end="71:10">s</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:21">blocksize</name></name></expr>)</condition>

    <block pos:start="73:5" pos:end="83:5">{<block_content pos:start="75:9" pos:end="81:23">

        <decl_stmt pos:start="75:9" pos:end="75:16"><decl pos:start="75:9" pos:end="75:15"><type pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">int</name></type> <name pos:start="75:13" pos:end="75:15">ret</name></decl>;</decl_stmt>

        <if_stmt pos:start="77:9" pos:end="79:23"><if pos:start="77:9" pos:end="79:23">if <condition pos:start="77:12" pos:end="77:39">(<expr pos:start="77:13" pos:end="77:38"><operator pos:start="77:13" pos:end="77:13">(</operator><name pos:start="77:14" pos:end="77:16">ret</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:33"><name pos:start="77:20" pos:end="77:30">read_header</name><argument_list pos:start="77:31" pos:end="77:33">(<argument pos:start="77:32" pos:end="77:32"><expr pos:start="77:32" pos:end="77:32"><name pos:start="77:32" pos:end="77:32">s</name></expr></argument>)</argument_list></call><operator pos:start="77:34" pos:end="77:34">)</operator> <operator pos:start="77:36" pos:end="77:36">&lt;</operator> <literal type="number" pos:start="77:38" pos:end="77:38">0</literal></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:23"><block_content pos:start="79:13" pos:end="79:23">

            <return pos:start="79:13" pos:end="79:23">return <expr pos:start="79:20" pos:end="79:22"><name pos:start="79:20" pos:end="79:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:18">data_size</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="85:5" pos:end="323:5">else

    <block pos:start="87:5" pos:end="323:5">{<block_content pos:start="89:9" pos:end="321:9">

        <decl_stmt pos:start="89:9" pos:end="89:16"><decl pos:start="89:9" pos:end="89:15"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:15">cmd</name></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:16"><decl pos:start="91:9" pos:end="91:15"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:15">len</name></decl>;</decl_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:52"><expr pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:11">cmd</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:51"><name pos:start="93:15" pos:end="93:35">get_ur_golomb_shorten</name><argument_list pos:start="93:36" pos:end="93:51">(<argument pos:start="93:37" pos:end="93:42"><expr pos:start="93:37" pos:end="93:42"><operator pos:start="93:37" pos:end="93:37">&amp;</operator><name pos:start="93:38" pos:end="93:42"><name pos:start="93:38" pos:end="93:38">s</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:42">gb</name></name></expr></argument>, <argument pos:start="93:45" pos:end="93:50"><expr pos:start="93:45" pos:end="93:50"><name pos:start="93:45" pos:end="93:50">FNSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="97:9" pos:end="111:9"><if pos:start="97:9" pos:end="111:9">if <condition pos:start="97:12" pos:end="97:30">(<expr pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:15">cmd</name> <operator pos:start="97:17" pos:end="97:17">&gt;</operator> <name pos:start="97:19" pos:end="97:29">FN_VERBATIM</name></expr>)</condition> <block pos:start="97:32" pos:end="111:9">{<block_content pos:start="99:13" pos:end="109:22">

            <expr_stmt pos:start="99:13" pos:end="99:78"><expr pos:start="99:13" pos:end="99:77"><call pos:start="99:13" pos:end="99:77"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="99:77">(<argument pos:start="99:20" pos:end="99:24"><expr pos:start="99:20" pos:end="99:24"><name pos:start="99:20" pos:end="99:24">avctx</name></expr></argument>, <argument pos:start="99:27" pos:end="99:38"><expr pos:start="99:27" pos:end="99:38"><name pos:start="99:27" pos:end="99:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:41" pos:end="99:71"><expr pos:start="99:41" pos:end="99:71"><literal type="string" pos:start="99:41" pos:end="99:71">"unknown shorten function %d\n"</literal></expr></argument>, <argument pos:start="99:74" pos:end="99:76"><expr pos:start="99:74" pos:end="99:76"><name pos:start="99:74" pos:end="99:76">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="107:13"><if pos:start="101:13" pos:end="107:13">if <condition pos:start="101:16" pos:end="101:38">(<expr pos:start="101:17" pos:end="101:37"><name pos:start="101:17" pos:end="101:33"><name pos:start="101:17" pos:end="101:17">s</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:33">bitstream_size</name></name> <operator pos:start="101:35" pos:end="101:35">&gt;</operator> <literal type="number" pos:start="101:37" pos:end="101:37">0</literal></expr>)</condition> <block pos:start="101:40" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:36">

                <expr_stmt pos:start="103:17" pos:end="103:37"><expr pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:34">bitstream_index</name></name><operator pos:start="103:35" pos:end="103:36">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:36"><expr pos:start="105:17" pos:end="105:35"><name pos:start="105:17" pos:end="105:33"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:33">bitstream_size</name></name><operator pos:start="105:34" pos:end="105:35">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="109:13" pos:end="109:22">return <expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">-</operator><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="115:9" pos:end="321:9"><if pos:start="115:9" pos:end="165:9">if <condition pos:start="115:12" pos:end="115:35">(<expr pos:start="115:13" pos:end="115:34"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:34"><name pos:start="115:14" pos:end="115:29">is_audio_command</name><index pos:start="115:30" pos:end="115:34">[<expr pos:start="115:31" pos:end="115:33"><name pos:start="115:31" pos:end="115:33">cmd</name></expr>]</index></name></expr>)</condition> <block pos:start="115:37" pos:end="165:9">{<block_content pos:start="119:13" pos:end="163:27">

            <comment type="block" pos:start="117:13" pos:end="117:43">/* process non-audio command */</comment>

            <switch pos:start="119:13" pos:end="161:13">switch <condition pos:start="119:20" pos:end="119:24">(<expr pos:start="119:21" pos:end="119:23"><name pos:start="119:21" pos:end="119:23">cmd</name></expr>)</condition> <block pos:start="119:26" pos:end="161:13">{<block_content pos:start="121:17" pos:end="159:26">

                <case pos:start="121:17" pos:end="121:33">case <expr pos:start="121:22" pos:end="121:32"><name pos:start="121:22" pos:end="121:32">FN_VERBATIM</name></expr>:</case>

                    <expr_stmt pos:start="123:21" pos:end="123:78"><expr pos:start="123:21" pos:end="123:77"><name pos:start="123:21" pos:end="123:23">len</name> <operator pos:start="123:25" pos:end="123:25">=</operator> <call pos:start="123:27" pos:end="123:77"><name pos:start="123:27" pos:end="123:47">get_ur_golomb_shorten</name><argument_list pos:start="123:48" pos:end="123:77">(<argument pos:start="123:49" pos:end="123:54"><expr pos:start="123:49" pos:end="123:54"><operator pos:start="123:49" pos:end="123:49">&amp;</operator><name pos:start="123:50" pos:end="123:54"><name pos:start="123:50" pos:end="123:50">s</name><operator pos:start="123:51" pos:end="123:52">-&gt;</operator><name pos:start="123:53" pos:end="123:54">gb</name></name></expr></argument>, <argument pos:start="123:57" pos:end="123:76"><expr pos:start="123:57" pos:end="123:76"><name pos:start="123:57" pos:end="123:76">VERBATIM_CKSIZE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <while pos:start="125:21" pos:end="129:21">while <condition pos:start="125:27" pos:end="125:33">(<expr pos:start="125:28" pos:end="125:32"><name pos:start="125:28" pos:end="125:30">len</name><operator pos:start="125:31" pos:end="125:32">--</operator></expr>)</condition> <block pos:start="125:35" pos:end="129:21">{<block_content pos:start="127:25" pos:end="127:74">

                        <expr_stmt pos:start="127:25" pos:end="127:74"><expr pos:start="127:25" pos:end="127:73"><call pos:start="127:25" pos:end="127:73"><name pos:start="127:25" pos:end="127:45">get_ur_golomb_shorten</name><argument_list pos:start="127:46" pos:end="127:73">(<argument pos:start="127:47" pos:end="127:52"><expr pos:start="127:47" pos:end="127:52"><operator pos:start="127:47" pos:end="127:47">&amp;</operator><name pos:start="127:48" pos:end="127:52"><name pos:start="127:48" pos:end="127:48">s</name><operator pos:start="127:49" pos:end="127:50">-&gt;</operator><name pos:start="127:51" pos:end="127:52">gb</name></name></expr></argument>, <argument pos:start="127:55" pos:end="127:72"><expr pos:start="127:55" pos:end="127:72"><name pos:start="127:55" pos:end="127:72">VERBATIM_BYTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></while>

                    <break pos:start="131:21" pos:end="131:26">break;</break>

                <case pos:start="133:17" pos:end="133:33">case <expr pos:start="133:22" pos:end="133:32"><name pos:start="133:22" pos:end="133:32">FN_BITSHIFT</name></expr>:</case>

                    <expr_stmt pos:start="135:21" pos:end="135:78"><expr pos:start="135:21" pos:end="135:77"><name pos:start="135:21" pos:end="135:31"><name pos:start="135:21" pos:end="135:21">s</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:31">bitshift</name></name> <operator pos:start="135:33" pos:end="135:33">=</operator> <call pos:start="135:35" pos:end="135:77"><name pos:start="135:35" pos:end="135:55">get_ur_golomb_shorten</name><argument_list pos:start="135:56" pos:end="135:77">(<argument pos:start="135:57" pos:end="135:62"><expr pos:start="135:57" pos:end="135:62"><operator pos:start="135:57" pos:end="135:57">&amp;</operator><name pos:start="135:58" pos:end="135:62"><name pos:start="135:58" pos:end="135:58">s</name><operator pos:start="135:59" pos:end="135:60">-&gt;</operator><name pos:start="135:61" pos:end="135:62">gb</name></name></expr></argument>, <argument pos:start="135:65" pos:end="135:76"><expr pos:start="135:65" pos:end="135:76"><name pos:start="135:65" pos:end="135:76">BITSHIFTSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="137:21" pos:end="137:26">break;</break>

                <case pos:start="139:17" pos:end="139:34">case <expr pos:start="139:22" pos:end="139:33"><name pos:start="139:22" pos:end="139:33">FN_BLOCKSIZE</name></expr>:</case> <block pos:start="139:36" pos:end="155:17">{<block_content pos:start="141:21" pos:end="153:26">

                    <decl_stmt pos:start="141:21" pos:end="141:71"><decl pos:start="141:21" pos:end="141:70"><type pos:start="141:21" pos:end="141:23"><name pos:start="141:21" pos:end="141:23">int</name></type> <name pos:start="141:25" pos:end="141:33">blocksize</name> <init pos:start="141:35" pos:end="141:70">= <expr pos:start="141:37" pos:end="141:70"><call pos:start="141:37" pos:end="141:70"><name pos:start="141:37" pos:end="141:44">get_uint</name><argument_list pos:start="141:45" pos:end="141:70">(<argument pos:start="141:46" pos:end="141:46"><expr pos:start="141:46" pos:end="141:46"><name pos:start="141:46" pos:end="141:46">s</name></expr></argument>, <argument pos:start="141:49" pos:end="141:69"><expr pos:start="141:49" pos:end="141:69"><call pos:start="141:49" pos:end="141:69"><name pos:start="141:49" pos:end="141:55">av_log2</name><argument_list pos:start="141:56" pos:end="141:69">(<argument pos:start="141:57" pos:end="141:68"><expr pos:start="141:57" pos:end="141:68"><name pos:start="141:57" pos:end="141:68"><name pos:start="141:57" pos:end="141:57">s</name><operator pos:start="141:58" pos:end="141:59">-&gt;</operator><name pos:start="141:60" pos:end="141:68">blocksize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="143:21" pos:end="149:21"><if pos:start="143:21" pos:end="149:21">if <condition pos:start="143:24" pos:end="143:49">(<expr pos:start="143:25" pos:end="143:48"><name pos:start="143:25" pos:end="143:33">blocksize</name> <operator pos:start="143:35" pos:end="143:35">&gt;</operator> <name pos:start="143:37" pos:end="143:48"><name pos:start="143:37" pos:end="143:37">s</name><operator pos:start="143:38" pos:end="143:39">-&gt;</operator><name pos:start="143:40" pos:end="143:48">blocksize</name></name></expr>)</condition> <block pos:start="143:51" pos:end="149:21">{<block_content pos:start="145:25" pos:end="147:52">

                        <expr_stmt pos:start="145:25" pos:end="145:96"><expr pos:start="145:25" pos:end="145:95"><call pos:start="145:25" pos:end="145:95"><name pos:start="145:25" pos:end="145:30">av_log</name><argument_list pos:start="145:31" pos:end="145:95">(<argument pos:start="145:32" pos:end="145:36"><expr pos:start="145:32" pos:end="145:36"><name pos:start="145:32" pos:end="145:36">avctx</name></expr></argument>, <argument pos:start="145:39" pos:end="145:50"><expr pos:start="145:39" pos:end="145:50"><name pos:start="145:39" pos:end="145:50">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="145:53" pos:end="145:94"><expr pos:start="145:53" pos:end="145:94"><literal type="string" pos:start="145:53" pos:end="145:94">"Increasing block size is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="147:25" pos:end="147:52">return <expr pos:start="147:32" pos:end="147:51"><name pos:start="147:32" pos:end="147:51">AVERROR_PATCHWELCOME</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:45"><expr pos:start="151:21" pos:end="151:44"><name pos:start="151:21" pos:end="151:32"><name pos:start="151:21" pos:end="151:21">s</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:32">blocksize</name></name> <operator pos:start="151:34" pos:end="151:34">=</operator> <name pos:start="151:36" pos:end="151:44">blocksize</name></expr>;</expr_stmt>

                    <break pos:start="153:21" pos:end="153:26">break;</break>

                </block_content>}</block>

                <case pos:start="157:17" pos:end="157:29">case <expr pos:start="157:22" pos:end="157:28"><name pos:start="157:22" pos:end="157:28">FN_QUIT</name></expr>:</case>

                    <break pos:start="159:21" pos:end="159:26">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="163:13" pos:end="163:27"><expr pos:start="163:13" pos:end="163:26"><operator pos:start="163:13" pos:end="163:13">*</operator><name pos:start="163:14" pos:end="163:22">data_size</name> <operator pos:start="163:24" pos:end="163:24">=</operator> <literal type="number" pos:start="163:26" pos:end="163:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="165:11" pos:end="321:9">else <block pos:start="165:16" pos:end="321:9">{<block_content pos:start="169:13" pos:end="319:13">

            <comment type="block" pos:start="167:13" pos:end="167:39">/* process audio command */</comment>

            <decl_stmt pos:start="169:13" pos:end="169:20"><decl pos:start="169:13" pos:end="169:19"><type pos:start="169:13" pos:end="169:15"><name pos:start="169:13" pos:end="169:15">int</name></type> <name pos:start="169:17" pos:end="169:19">ret</name></decl>;</decl_stmt>

            <decl_stmt pos:start="171:13" pos:end="171:34"><decl pos:start="171:13" pos:end="171:33"><type pos:start="171:13" pos:end="171:15"><name pos:start="171:13" pos:end="171:15">int</name></type> <name pos:start="171:17" pos:end="171:29">residual_size</name> <init pos:start="171:31" pos:end="171:33">= <expr pos:start="171:33" pos:end="171:33"><literal type="number" pos:start="171:33" pos:end="171:33">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="173:13" pos:end="173:38"><decl pos:start="173:13" pos:end="173:37"><type pos:start="173:13" pos:end="173:15"><name pos:start="173:13" pos:end="173:15">int</name></type> <name pos:start="173:17" pos:end="173:23">channel</name> <init pos:start="173:25" pos:end="173:37">= <expr pos:start="173:27" pos:end="173:37"><name pos:start="173:27" pos:end="173:37"><name pos:start="173:27" pos:end="173:27">s</name><operator pos:start="173:28" pos:end="173:29">-&gt;</operator><name pos:start="173:30" pos:end="173:37">cur_chan</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="175:13" pos:end="175:28"><decl pos:start="175:13" pos:end="175:27"><type pos:start="175:13" pos:end="175:19"><name pos:start="175:13" pos:end="175:19">int32_t</name></type> <name pos:start="175:21" pos:end="175:27">coffset</name></decl>;</decl_stmt>

            <if_stmt pos:start="177:13" pos:end="187:13"><if pos:start="177:13" pos:end="187:13">if <condition pos:start="177:16" pos:end="177:31">(<expr pos:start="177:17" pos:end="177:30"><name pos:start="177:17" pos:end="177:19">cmd</name> <operator pos:start="177:21" pos:end="177:22">!=</operator> <name pos:start="177:24" pos:end="177:30">FN_ZERO</name></expr>)</condition> <block pos:start="177:33" pos:end="187:13">{<block_content pos:start="179:17" pos:end="185:36">

                <expr_stmt pos:start="179:17" pos:end="179:74"><expr pos:start="179:17" pos:end="179:73"><name pos:start="179:17" pos:end="179:29">residual_size</name> <operator pos:start="179:31" pos:end="179:31">=</operator> <call pos:start="179:33" pos:end="179:73"><name pos:start="179:33" pos:end="179:53">get_ur_golomb_shorten</name><argument_list pos:start="179:54" pos:end="179:73">(<argument pos:start="179:55" pos:end="179:60"><expr pos:start="179:55" pos:end="179:60"><operator pos:start="179:55" pos:end="179:55">&amp;</operator><name pos:start="179:56" pos:end="179:60"><name pos:start="179:56" pos:end="179:56">s</name><operator pos:start="179:57" pos:end="179:58">-&gt;</operator><name pos:start="179:59" pos:end="179:60">gb</name></name></expr></argument>, <argument pos:start="179:63" pos:end="179:72"><expr pos:start="179:63" pos:end="179:72"><name pos:start="179:63" pos:end="179:72">ENERGYSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="181:17" pos:end="181:96">/* this is a hack as version 0 differed in defintion of get_sr_golomb_shorten */</comment>

                <if_stmt pos:start="183:17" pos:end="185:36"><if pos:start="183:17" pos:end="185:36">if <condition pos:start="183:20" pos:end="183:36">(<expr pos:start="183:21" pos:end="183:35"><name pos:start="183:21" pos:end="183:30"><name pos:start="183:21" pos:end="183:21">s</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:30">version</name></name> <operator pos:start="183:32" pos:end="183:33">==</operator> <literal type="number" pos:start="183:35" pos:end="183:35">0</literal></expr>)</condition><block type="pseudo" pos:start="185:21" pos:end="185:36"><block_content pos:start="185:21" pos:end="185:36">

                    <expr_stmt pos:start="185:21" pos:end="185:36"><expr pos:start="185:21" pos:end="185:35"><name pos:start="185:21" pos:end="185:33">residual_size</name><operator pos:start="185:34" pos:end="185:35">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="191:13" pos:end="209:13"><if pos:start="191:13" pos:end="193:48">if <condition pos:start="191:16" pos:end="191:30">(<expr pos:start="191:17" pos:end="191:29"><name pos:start="191:17" pos:end="191:24"><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:24">nmean</name></name> <operator pos:start="191:26" pos:end="191:27">==</operator> <literal type="number" pos:start="191:29" pos:end="191:29">0</literal></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:48"><block_content pos:start="193:17" pos:end="193:48">

                <expr_stmt pos:start="193:17" pos:end="193:48"><expr pos:start="193:17" pos:end="193:47"><name pos:start="193:17" pos:end="193:23">coffset</name> <operator pos:start="193:25" pos:end="193:25">=</operator> <name pos:start="193:27" pos:end="193:47"><name pos:start="193:27" pos:end="193:27">s</name><operator pos:start="193:28" pos:end="193:29">-&gt;</operator><name pos:start="193:30" pos:end="193:35">offset</name><index pos:start="193:36" pos:end="193:44">[<expr pos:start="193:37" pos:end="193:43"><name pos:start="193:37" pos:end="193:43">channel</name></expr>]</index><index pos:start="193:45" pos:end="193:47">[<expr pos:start="193:46" pos:end="193:46"><literal type="number" pos:start="193:46" pos:end="193:46">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="195:13" pos:end="209:13">else <block pos:start="195:18" pos:end="209:13">{<block_content pos:start="197:17" pos:end="207:54">

                <decl_stmt pos:start="197:17" pos:end="197:66"><decl pos:start="197:17" pos:end="197:65"><type pos:start="197:17" pos:end="197:23"><name pos:start="197:17" pos:end="197:23">int32_t</name></type> <name pos:start="197:25" pos:end="197:27">sum</name> <init pos:start="197:29" pos:end="197:65">= <expr pos:start="197:31" pos:end="197:65"><ternary pos:start="197:31" pos:end="197:65"><condition pos:start="197:31" pos:end="197:48"><expr pos:start="197:31" pos:end="197:46"><operator pos:start="197:31" pos:end="197:31">(</operator><name pos:start="197:32" pos:end="197:41"><name pos:start="197:32" pos:end="197:32">s</name><operator pos:start="197:33" pos:end="197:34">-&gt;</operator><name pos:start="197:35" pos:end="197:41">version</name></name> <operator pos:start="197:43" pos:end="197:43">&lt;</operator> <literal type="number" pos:start="197:45" pos:end="197:45">2</literal><operator pos:start="197:46" pos:end="197:46">)</operator></expr> ?</condition><then pos:start="197:50" pos:end="197:50"> <expr pos:start="197:50" pos:end="197:50"><literal type="number" pos:start="197:50" pos:end="197:50">0</literal></expr> </then><else pos:start="197:52" pos:end="197:65">: <expr pos:start="197:54" pos:end="197:65"><name pos:start="197:54" pos:end="197:61"><name pos:start="197:54" pos:end="197:54">s</name><operator pos:start="197:55" pos:end="197:56">-&gt;</operator><name pos:start="197:57" pos:end="197:61">nmean</name></name> <operator pos:start="197:63" pos:end="197:63">/</operator> <literal type="number" pos:start="197:65" pos:end="197:65">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <for pos:start="199:17" pos:end="201:49">for <control pos:start="199:21" pos:end="199:42">(<init pos:start="199:22" pos:end="199:25"><expr pos:start="199:22" pos:end="199:24"><name pos:start="199:22" pos:end="199:22">i</name><operator pos:start="199:23" pos:end="199:23">=</operator><literal type="number" pos:start="199:24" pos:end="199:24">0</literal></expr>;</init> <condition pos:start="199:27" pos:end="199:37"><expr pos:start="199:27" pos:end="199:36"><name pos:start="199:27" pos:end="199:27">i</name><operator pos:start="199:28" pos:end="199:28">&lt;</operator><name pos:start="199:29" pos:end="199:36"><name pos:start="199:29" pos:end="199:29">s</name><operator pos:start="199:30" pos:end="199:31">-&gt;</operator><name pos:start="199:32" pos:end="199:36">nmean</name></name></expr>;</condition> <incr pos:start="199:39" pos:end="199:41"><expr pos:start="199:39" pos:end="199:41"><name pos:start="199:39" pos:end="199:39">i</name><operator pos:start="199:40" pos:end="199:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="201:21" pos:end="201:49"><block_content pos:start="201:21" pos:end="201:49">

                    <expr_stmt pos:start="201:21" pos:end="201:49"><expr pos:start="201:21" pos:end="201:48"><name pos:start="201:21" pos:end="201:23">sum</name> <operator pos:start="201:25" pos:end="201:26">+=</operator> <name pos:start="201:28" pos:end="201:48"><name pos:start="201:28" pos:end="201:28">s</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:36">offset</name><index pos:start="201:37" pos:end="201:45">[<expr pos:start="201:38" pos:end="201:44"><name pos:start="201:38" pos:end="201:44">channel</name></expr>]</index><index pos:start="201:46" pos:end="201:48">[<expr pos:start="201:47" pos:end="201:47"><name pos:start="201:47" pos:end="201:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="203:17" pos:end="203:41"><expr pos:start="203:17" pos:end="203:40"><name pos:start="203:17" pos:end="203:23">coffset</name> <operator pos:start="203:25" pos:end="203:25">=</operator> <name pos:start="203:27" pos:end="203:29">sum</name> <operator pos:start="203:31" pos:end="203:31">/</operator> <name pos:start="203:33" pos:end="203:40"><name pos:start="203:33" pos:end="203:33">s</name><operator pos:start="203:34" pos:end="203:35">-&gt;</operator><name pos:start="203:36" pos:end="203:40">nmean</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="205:17" pos:end="207:54"><if pos:start="205:17" pos:end="207:54">if <condition pos:start="205:20" pos:end="205:36">(<expr pos:start="205:21" pos:end="205:35"><name pos:start="205:21" pos:end="205:30"><name pos:start="205:21" pos:end="205:21">s</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:30">version</name></name> <operator pos:start="205:32" pos:end="205:33">&gt;=</operator> <literal type="number" pos:start="205:35" pos:end="205:35">2</literal></expr>)</condition><block type="pseudo" pos:start="207:21" pos:end="207:54"><block_content pos:start="207:21" pos:end="207:54">

                    <expr_stmt pos:start="207:21" pos:end="207:54"><expr pos:start="207:21" pos:end="207:53"><name pos:start="207:21" pos:end="207:27">coffset</name> <operator pos:start="207:29" pos:end="207:31">&gt;&gt;=</operator> <call pos:start="207:33" pos:end="207:53"><name pos:start="207:33" pos:end="207:37">FFMIN</name><argument_list pos:start="207:38" pos:end="207:53">(<argument pos:start="207:39" pos:end="207:39"><expr pos:start="207:39" pos:end="207:39"><literal type="number" pos:start="207:39" pos:end="207:39">1</literal></expr></argument>, <argument pos:start="207:42" pos:end="207:52"><expr pos:start="207:42" pos:end="207:52"><name pos:start="207:42" pos:end="207:52"><name pos:start="207:42" pos:end="207:42">s</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:52">bitshift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <switch pos:start="211:13" pos:end="267:13">switch <condition pos:start="211:20" pos:end="211:24">(<expr pos:start="211:21" pos:end="211:23"><name pos:start="211:21" pos:end="211:23">cmd</name></expr>)</condition> <block pos:start="211:26" pos:end="267:13">{<block_content pos:start="213:17" pos:end="265:26">

                <case pos:start="213:17" pos:end="213:29">case <expr pos:start="213:22" pos:end="213:28"><name pos:start="213:22" pos:end="213:28">FN_ZERO</name></expr>:</case>

                    <for pos:start="215:21" pos:end="217:51">for <control pos:start="215:25" pos:end="215:50">(<init pos:start="215:26" pos:end="215:29"><expr pos:start="215:26" pos:end="215:28"><name pos:start="215:26" pos:end="215:26">i</name><operator pos:start="215:27" pos:end="215:27">=</operator><literal type="number" pos:start="215:28" pos:end="215:28">0</literal></expr>;</init> <condition pos:start="215:31" pos:end="215:45"><expr pos:start="215:31" pos:end="215:44"><name pos:start="215:31" pos:end="215:31">i</name><operator pos:start="215:32" pos:end="215:32">&lt;</operator><name pos:start="215:33" pos:end="215:44"><name pos:start="215:33" pos:end="215:33">s</name><operator pos:start="215:34" pos:end="215:35">-&gt;</operator><name pos:start="215:36" pos:end="215:44">blocksize</name></name></expr>;</condition> <incr pos:start="215:47" pos:end="215:49"><expr pos:start="215:47" pos:end="215:49"><name pos:start="215:47" pos:end="215:47">i</name><operator pos:start="215:48" pos:end="215:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="217:25" pos:end="217:51"><block_content pos:start="217:25" pos:end="217:51">

                        <expr_stmt pos:start="217:25" pos:end="217:51"><expr pos:start="217:25" pos:end="217:50"><name pos:start="217:25" pos:end="217:46"><name pos:start="217:25" pos:end="217:25">s</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:34">decoded</name><index pos:start="217:35" pos:end="217:43">[<expr pos:start="217:36" pos:end="217:42"><name pos:start="217:36" pos:end="217:42">channel</name></expr>]</index><index pos:start="217:44" pos:end="217:46">[<expr pos:start="217:45" pos:end="217:45"><name pos:start="217:45" pos:end="217:45">i</name></expr>]</index></name> <operator pos:start="217:48" pos:end="217:48">=</operator> <literal type="number" pos:start="217:50" pos:end="217:50">0</literal></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="219:21" pos:end="219:26">break;</break>

                <case pos:start="221:17" pos:end="221:30">case <expr pos:start="221:22" pos:end="221:29"><name pos:start="221:22" pos:end="221:29">FN_DIFF0</name></expr>:</case>

                    <for pos:start="223:21" pos:end="225:104">for <control pos:start="223:25" pos:end="223:50">(<init pos:start="223:26" pos:end="223:29"><expr pos:start="223:26" pos:end="223:28"><name pos:start="223:26" pos:end="223:26">i</name><operator pos:start="223:27" pos:end="223:27">=</operator><literal type="number" pos:start="223:28" pos:end="223:28">0</literal></expr>;</init> <condition pos:start="223:31" pos:end="223:45"><expr pos:start="223:31" pos:end="223:44"><name pos:start="223:31" pos:end="223:31">i</name><operator pos:start="223:32" pos:end="223:32">&lt;</operator><name pos:start="223:33" pos:end="223:44"><name pos:start="223:33" pos:end="223:33">s</name><operator pos:start="223:34" pos:end="223:35">-&gt;</operator><name pos:start="223:36" pos:end="223:44">blocksize</name></name></expr>;</condition> <incr pos:start="223:47" pos:end="223:49"><expr pos:start="223:47" pos:end="223:49"><name pos:start="223:47" pos:end="223:47">i</name><operator pos:start="223:48" pos:end="223:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="225:25" pos:end="225:104"><block_content pos:start="225:25" pos:end="225:104">

                        <expr_stmt pos:start="225:25" pos:end="225:104"><expr pos:start="225:25" pos:end="225:103"><name pos:start="225:25" pos:end="225:46"><name pos:start="225:25" pos:end="225:25">s</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:34">decoded</name><index pos:start="225:35" pos:end="225:43">[<expr pos:start="225:36" pos:end="225:42"><name pos:start="225:36" pos:end="225:42">channel</name></expr>]</index><index pos:start="225:44" pos:end="225:46">[<expr pos:start="225:45" pos:end="225:45"><name pos:start="225:45" pos:end="225:45">i</name></expr>]</index></name> <operator pos:start="225:48" pos:end="225:48">=</operator> <call pos:start="225:50" pos:end="225:93"><name pos:start="225:50" pos:end="225:70">get_sr_golomb_shorten</name><argument_list pos:start="225:71" pos:end="225:93">(<argument pos:start="225:72" pos:end="225:77"><expr pos:start="225:72" pos:end="225:77"><operator pos:start="225:72" pos:end="225:72">&amp;</operator><name pos:start="225:73" pos:end="225:77"><name pos:start="225:73" pos:end="225:73">s</name><operator pos:start="225:74" pos:end="225:75">-&gt;</operator><name pos:start="225:76" pos:end="225:77">gb</name></name></expr></argument>, <argument pos:start="225:80" pos:end="225:92"><expr pos:start="225:80" pos:end="225:92"><name pos:start="225:80" pos:end="225:92">residual_size</name></expr></argument>)</argument_list></call> <operator pos:start="225:95" pos:end="225:95">+</operator> <name pos:start="225:97" pos:end="225:103">coffset</name></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="227:21" pos:end="227:26">break;</break>

                <case pos:start="229:17" pos:end="229:30">case <expr pos:start="229:22" pos:end="229:29"><name pos:start="229:22" pos:end="229:29">FN_DIFF1</name></expr>:</case>

                    <for pos:start="231:21" pos:end="233:123">for <control pos:start="231:25" pos:end="231:50">(<init pos:start="231:26" pos:end="231:29"><expr pos:start="231:26" pos:end="231:28"><name pos:start="231:26" pos:end="231:26">i</name><operator pos:start="231:27" pos:end="231:27">=</operator><literal type="number" pos:start="231:28" pos:end="231:28">0</literal></expr>;</init> <condition pos:start="231:31" pos:end="231:45"><expr pos:start="231:31" pos:end="231:44"><name pos:start="231:31" pos:end="231:31">i</name><operator pos:start="231:32" pos:end="231:32">&lt;</operator><name pos:start="231:33" pos:end="231:44"><name pos:start="231:33" pos:end="231:33">s</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:44">blocksize</name></name></expr>;</condition> <incr pos:start="231:47" pos:end="231:49"><expr pos:start="231:47" pos:end="231:49"><name pos:start="231:47" pos:end="231:47">i</name><operator pos:start="231:48" pos:end="231:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="233:25" pos:end="233:123"><block_content pos:start="233:25" pos:end="233:123">

                        <expr_stmt pos:start="233:25" pos:end="233:123"><expr pos:start="233:25" pos:end="233:122"><name pos:start="233:25" pos:end="233:46"><name pos:start="233:25" pos:end="233:25">s</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:34">decoded</name><index pos:start="233:35" pos:end="233:43">[<expr pos:start="233:36" pos:end="233:42"><name pos:start="233:36" pos:end="233:42">channel</name></expr>]</index><index pos:start="233:44" pos:end="233:46">[<expr pos:start="233:45" pos:end="233:45"><name pos:start="233:45" pos:end="233:45">i</name></expr>]</index></name> <operator pos:start="233:48" pos:end="233:48">=</operator> <call pos:start="233:50" pos:end="233:93"><name pos:start="233:50" pos:end="233:70">get_sr_golomb_shorten</name><argument_list pos:start="233:71" pos:end="233:93">(<argument pos:start="233:72" pos:end="233:77"><expr pos:start="233:72" pos:end="233:77"><operator pos:start="233:72" pos:end="233:72">&amp;</operator><name pos:start="233:73" pos:end="233:77"><name pos:start="233:73" pos:end="233:73">s</name><operator pos:start="233:74" pos:end="233:75">-&gt;</operator><name pos:start="233:76" pos:end="233:77">gb</name></name></expr></argument>, <argument pos:start="233:80" pos:end="233:92"><expr pos:start="233:80" pos:end="233:92"><name pos:start="233:80" pos:end="233:92">residual_size</name></expr></argument>)</argument_list></call> <operator pos:start="233:95" pos:end="233:95">+</operator> <name pos:start="233:97" pos:end="233:122"><name pos:start="233:97" pos:end="233:97">s</name><operator pos:start="233:98" pos:end="233:99">-&gt;</operator><name pos:start="233:100" pos:end="233:106">decoded</name><index pos:start="233:107" pos:end="233:115">[<expr pos:start="233:108" pos:end="233:114"><name pos:start="233:108" pos:end="233:114">channel</name></expr>]</index><index pos:start="233:116" pos:end="233:122">[<expr pos:start="233:117" pos:end="233:121"><name pos:start="233:117" pos:end="233:117">i</name> <operator pos:start="233:119" pos:end="233:119">-</operator> <literal type="number" pos:start="233:121" pos:end="233:121">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="235:21" pos:end="235:26">break;</break>

                <case pos:start="237:17" pos:end="237:30">case <expr pos:start="237:22" pos:end="237:29"><name pos:start="237:22" pos:end="237:29">FN_DIFF2</name></expr>:</case>

                    <for pos:start="239:21" pos:end="243:123">for <control pos:start="239:25" pos:end="239:50">(<init pos:start="239:26" pos:end="239:29"><expr pos:start="239:26" pos:end="239:28"><name pos:start="239:26" pos:end="239:26">i</name><operator pos:start="239:27" pos:end="239:27">=</operator><literal type="number" pos:start="239:28" pos:end="239:28">0</literal></expr>;</init> <condition pos:start="239:31" pos:end="239:45"><expr pos:start="239:31" pos:end="239:44"><name pos:start="239:31" pos:end="239:31">i</name><operator pos:start="239:32" pos:end="239:32">&lt;</operator><name pos:start="239:33" pos:end="239:44"><name pos:start="239:33" pos:end="239:33">s</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:44">blocksize</name></name></expr>;</condition> <incr pos:start="239:47" pos:end="239:49"><expr pos:start="239:47" pos:end="239:49"><name pos:start="239:47" pos:end="239:47">i</name><operator pos:start="239:48" pos:end="239:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="241:25" pos:end="243:123"><block_content pos:start="241:25" pos:end="243:123">

                        <expr_stmt pos:start="241:25" pos:end="243:123"><expr pos:start="241:25" pos:end="243:122"><name pos:start="241:25" pos:end="241:46"><name pos:start="241:25" pos:end="241:25">s</name><operator pos:start="241:26" pos:end="241:27">-&gt;</operator><name pos:start="241:28" pos:end="241:34">decoded</name><index pos:start="241:35" pos:end="241:43">[<expr pos:start="241:36" pos:end="241:42"><name pos:start="241:36" pos:end="241:42">channel</name></expr>]</index><index pos:start="241:44" pos:end="241:46">[<expr pos:start="241:45" pos:end="241:45"><name pos:start="241:45" pos:end="241:45">i</name></expr>]</index></name> <operator pos:start="241:48" pos:end="241:48">=</operator> <call pos:start="241:50" pos:end="241:93"><name pos:start="241:50" pos:end="241:70">get_sr_golomb_shorten</name><argument_list pos:start="241:71" pos:end="241:93">(<argument pos:start="241:72" pos:end="241:77"><expr pos:start="241:72" pos:end="241:77"><operator pos:start="241:72" pos:end="241:72">&amp;</operator><name pos:start="241:73" pos:end="241:77"><name pos:start="241:73" pos:end="241:73">s</name><operator pos:start="241:74" pos:end="241:75">-&gt;</operator><name pos:start="241:76" pos:end="241:77">gb</name></name></expr></argument>, <argument pos:start="241:80" pos:end="241:92"><expr pos:start="241:80" pos:end="241:92"><name pos:start="241:80" pos:end="241:92">residual_size</name></expr></argument>)</argument_list></call> <operator pos:start="241:95" pos:end="241:95">+</operator> <literal type="number" pos:start="241:97" pos:end="241:97">2</literal><operator pos:start="241:98" pos:end="241:98">*</operator><name pos:start="241:99" pos:end="241:122"><name pos:start="241:99" pos:end="241:99">s</name><operator pos:start="241:100" pos:end="241:101">-&gt;</operator><name pos:start="241:102" pos:end="241:108">decoded</name><index pos:start="241:109" pos:end="241:117">[<expr pos:start="241:110" pos:end="241:116"><name pos:start="241:110" pos:end="241:116">channel</name></expr>]</index><index pos:start="241:118" pos:end="241:122">[<expr pos:start="241:119" pos:end="241:121"><name pos:start="241:119" pos:end="241:119">i</name><operator pos:start="241:120" pos:end="241:120">-</operator><literal type="number" pos:start="241:121" pos:end="241:121">1</literal></expr>]</index></name>

                                                                                              <operator pos:start="243:95" pos:end="243:95">-</operator>   <name pos:start="243:99" pos:end="243:122"><name pos:start="243:99" pos:end="243:99">s</name><operator pos:start="243:100" pos:end="243:101">-&gt;</operator><name pos:start="243:102" pos:end="243:108">decoded</name><index pos:start="243:109" pos:end="243:117">[<expr pos:start="243:110" pos:end="243:116"><name pos:start="243:110" pos:end="243:116">channel</name></expr>]</index><index pos:start="243:118" pos:end="243:122">[<expr pos:start="243:119" pos:end="243:121"><name pos:start="243:119" pos:end="243:119">i</name><operator pos:start="243:120" pos:end="243:120">-</operator><literal type="number" pos:start="243:121" pos:end="243:121">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="245:21" pos:end="245:26">break;</break>

                <case pos:start="247:17" pos:end="247:30">case <expr pos:start="247:22" pos:end="247:29"><name pos:start="247:22" pos:end="247:29">FN_DIFF3</name></expr>:</case>

                    <for pos:start="249:21" pos:end="255:123">for <control pos:start="249:25" pos:end="249:50">(<init pos:start="249:26" pos:end="249:29"><expr pos:start="249:26" pos:end="249:28"><name pos:start="249:26" pos:end="249:26">i</name><operator pos:start="249:27" pos:end="249:27">=</operator><literal type="number" pos:start="249:28" pos:end="249:28">0</literal></expr>;</init> <condition pos:start="249:31" pos:end="249:45"><expr pos:start="249:31" pos:end="249:44"><name pos:start="249:31" pos:end="249:31">i</name><operator pos:start="249:32" pos:end="249:32">&lt;</operator><name pos:start="249:33" pos:end="249:44"><name pos:start="249:33" pos:end="249:33">s</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:44">blocksize</name></name></expr>;</condition> <incr pos:start="249:47" pos:end="249:49"><expr pos:start="249:47" pos:end="249:49"><name pos:start="249:47" pos:end="249:47">i</name><operator pos:start="249:48" pos:end="249:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="251:25" pos:end="255:123"><block_content pos:start="251:25" pos:end="255:123">

                        <expr_stmt pos:start="251:25" pos:end="255:123"><expr pos:start="251:25" pos:end="255:122"><name pos:start="251:25" pos:end="251:46"><name pos:start="251:25" pos:end="251:25">s</name><operator pos:start="251:26" pos:end="251:27">-&gt;</operator><name pos:start="251:28" pos:end="251:34">decoded</name><index pos:start="251:35" pos:end="251:43">[<expr pos:start="251:36" pos:end="251:42"><name pos:start="251:36" pos:end="251:42">channel</name></expr>]</index><index pos:start="251:44" pos:end="251:46">[<expr pos:start="251:45" pos:end="251:45"><name pos:start="251:45" pos:end="251:45">i</name></expr>]</index></name> <operator pos:start="251:48" pos:end="251:48">=</operator> <call pos:start="251:50" pos:end="251:93"><name pos:start="251:50" pos:end="251:70">get_sr_golomb_shorten</name><argument_list pos:start="251:71" pos:end="251:93">(<argument pos:start="251:72" pos:end="251:77"><expr pos:start="251:72" pos:end="251:77"><operator pos:start="251:72" pos:end="251:72">&amp;</operator><name pos:start="251:73" pos:end="251:77"><name pos:start="251:73" pos:end="251:73">s</name><operator pos:start="251:74" pos:end="251:75">-&gt;</operator><name pos:start="251:76" pos:end="251:77">gb</name></name></expr></argument>, <argument pos:start="251:80" pos:end="251:92"><expr pos:start="251:80" pos:end="251:92"><name pos:start="251:80" pos:end="251:92">residual_size</name></expr></argument>)</argument_list></call> <operator pos:start="251:95" pos:end="251:95">+</operator> <literal type="number" pos:start="251:97" pos:end="251:97">3</literal><operator pos:start="251:98" pos:end="251:98">*</operator><name pos:start="251:99" pos:end="251:122"><name pos:start="251:99" pos:end="251:99">s</name><operator pos:start="251:100" pos:end="251:101">-&gt;</operator><name pos:start="251:102" pos:end="251:108">decoded</name><index pos:start="251:109" pos:end="251:117">[<expr pos:start="251:110" pos:end="251:116"><name pos:start="251:110" pos:end="251:116">channel</name></expr>]</index><index pos:start="251:118" pos:end="251:122">[<expr pos:start="251:119" pos:end="251:121"><name pos:start="251:119" pos:end="251:119">i</name><operator pos:start="251:120" pos:end="251:120">-</operator><literal type="number" pos:start="251:121" pos:end="251:121">1</literal></expr>]</index></name>

                                                                                              <operator pos:start="253:95" pos:end="253:95">-</operator> <literal type="number" pos:start="253:97" pos:end="253:97">3</literal><operator pos:start="253:98" pos:end="253:98">*</operator><name pos:start="253:99" pos:end="253:122"><name pos:start="253:99" pos:end="253:99">s</name><operator pos:start="253:100" pos:end="253:101">-&gt;</operator><name pos:start="253:102" pos:end="253:108">decoded</name><index pos:start="253:109" pos:end="253:117">[<expr pos:start="253:110" pos:end="253:116"><name pos:start="253:110" pos:end="253:116">channel</name></expr>]</index><index pos:start="253:118" pos:end="253:122">[<expr pos:start="253:119" pos:end="253:121"><name pos:start="253:119" pos:end="253:119">i</name><operator pos:start="253:120" pos:end="253:120">-</operator><literal type="number" pos:start="253:121" pos:end="253:121">2</literal></expr>]</index></name>

                                                                                              <operator pos:start="255:95" pos:end="255:95">+</operator>   <name pos:start="255:99" pos:end="255:122"><name pos:start="255:99" pos:end="255:99">s</name><operator pos:start="255:100" pos:end="255:101">-&gt;</operator><name pos:start="255:102" pos:end="255:108">decoded</name><index pos:start="255:109" pos:end="255:117">[<expr pos:start="255:110" pos:end="255:116"><name pos:start="255:110" pos:end="255:116">channel</name></expr>]</index><index pos:start="255:118" pos:end="255:122">[<expr pos:start="255:119" pos:end="255:121"><name pos:start="255:119" pos:end="255:119">i</name><operator pos:start="255:120" pos:end="255:120">-</operator><literal type="number" pos:start="255:121" pos:end="255:121">3</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="257:21" pos:end="257:26">break;</break>

                <case pos:start="259:17" pos:end="259:29">case <expr pos:start="259:22" pos:end="259:28"><name pos:start="259:22" pos:end="259:28">FN_QLPC</name></expr>:</case>

                    <if_stmt pos:start="261:21" pos:end="263:35"><if pos:start="261:21" pos:end="263:35">if <condition pos:start="261:24" pos:end="261:92">(<expr pos:start="261:25" pos:end="261:91"><operator pos:start="261:25" pos:end="261:25">(</operator><name pos:start="261:26" pos:end="261:28">ret</name> <operator pos:start="261:30" pos:end="261:30">=</operator> <call pos:start="261:32" pos:end="261:86"><name pos:start="261:32" pos:end="261:50">decode_subframe_lpc</name><argument_list pos:start="261:51" pos:end="261:86">(<argument pos:start="261:52" pos:end="261:52"><expr pos:start="261:52" pos:end="261:52"><name pos:start="261:52" pos:end="261:52">s</name></expr></argument>, <argument pos:start="261:55" pos:end="261:61"><expr pos:start="261:55" pos:end="261:61"><name pos:start="261:55" pos:end="261:61">channel</name></expr></argument>, <argument pos:start="261:64" pos:end="261:76"><expr pos:start="261:64" pos:end="261:76"><name pos:start="261:64" pos:end="261:76">residual_size</name></expr></argument>, <argument pos:start="261:79" pos:end="261:85"><expr pos:start="261:79" pos:end="261:85"><name pos:start="261:79" pos:end="261:85">coffset</name></expr></argument>)</argument_list></call><operator pos:start="261:87" pos:end="261:87">)</operator> <operator pos:start="261:89" pos:end="261:89">&lt;</operator> <literal type="number" pos:start="261:91" pos:end="261:91">0</literal></expr>)</condition><block type="pseudo" pos:start="263:25" pos:end="263:35"><block_content pos:start="263:25" pos:end="263:35">

                        <return pos:start="263:25" pos:end="263:35">return <expr pos:start="263:32" pos:end="263:34"><name pos:start="263:32" pos:end="263:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                    <break pos:start="265:21" pos:end="265:26">break;</break>

            </block_content>}</block></switch>

            <if_stmt pos:start="269:13" pos:end="293:13"><if pos:start="269:13" pos:end="293:13">if <condition pos:start="269:16" pos:end="269:29">(<expr pos:start="269:17" pos:end="269:28"><name pos:start="269:17" pos:end="269:24"><name pos:start="269:17" pos:end="269:17">s</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:24">nmean</name></name> <operator pos:start="269:26" pos:end="269:26">&gt;</operator> <literal type="number" pos:start="269:28" pos:end="269:28">0</literal></expr>)</condition> <block pos:start="269:31" pos:end="293:13">{<block_content pos:start="271:17" pos:end="291:91">

                <decl_stmt pos:start="271:17" pos:end="271:70"><decl pos:start="271:17" pos:end="271:69"><type pos:start="271:17" pos:end="271:23"><name pos:start="271:17" pos:end="271:23">int32_t</name></type> <name pos:start="271:25" pos:end="271:27">sum</name> <init pos:start="271:29" pos:end="271:69">= <expr pos:start="271:31" pos:end="271:69"><ternary pos:start="271:31" pos:end="271:69"><condition pos:start="271:31" pos:end="271:48"><expr pos:start="271:31" pos:end="271:46"><operator pos:start="271:31" pos:end="271:31">(</operator><name pos:start="271:32" pos:end="271:41"><name pos:start="271:32" pos:end="271:32">s</name><operator pos:start="271:33" pos:end="271:34">-&gt;</operator><name pos:start="271:35" pos:end="271:41">version</name></name> <operator pos:start="271:43" pos:end="271:43">&lt;</operator> <literal type="number" pos:start="271:45" pos:end="271:45">2</literal><operator pos:start="271:46" pos:end="271:46">)</operator></expr> ?</condition><then pos:start="271:50" pos:end="271:50"> <expr pos:start="271:50" pos:end="271:50"><literal type="number" pos:start="271:50" pos:end="271:50">0</literal></expr> </then><else pos:start="271:52" pos:end="271:69">: <expr pos:start="271:54" pos:end="271:69"><name pos:start="271:54" pos:end="271:65"><name pos:start="271:54" pos:end="271:54">s</name><operator pos:start="271:55" pos:end="271:56">-&gt;</operator><name pos:start="271:57" pos:end="271:65">blocksize</name></name> <operator pos:start="271:67" pos:end="271:67">/</operator> <literal type="number" pos:start="271:69" pos:end="271:69">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <for pos:start="273:17" pos:end="275:50">for <control pos:start="273:21" pos:end="273:46">(<init pos:start="273:22" pos:end="273:25"><expr pos:start="273:22" pos:end="273:24"><name pos:start="273:22" pos:end="273:22">i</name><operator pos:start="273:23" pos:end="273:23">=</operator><literal type="number" pos:start="273:24" pos:end="273:24">0</literal></expr>;</init> <condition pos:start="273:27" pos:end="273:41"><expr pos:start="273:27" pos:end="273:40"><name pos:start="273:27" pos:end="273:27">i</name><operator pos:start="273:28" pos:end="273:28">&lt;</operator><name pos:start="273:29" pos:end="273:40"><name pos:start="273:29" pos:end="273:29">s</name><operator pos:start="273:30" pos:end="273:31">-&gt;</operator><name pos:start="273:32" pos:end="273:40">blocksize</name></name></expr>;</condition> <incr pos:start="273:43" pos:end="273:45"><expr pos:start="273:43" pos:end="273:45"><name pos:start="273:43" pos:end="273:43">i</name><operator pos:start="273:44" pos:end="273:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="275:21" pos:end="275:50"><block_content pos:start="275:21" pos:end="275:50">

                    <expr_stmt pos:start="275:21" pos:end="275:50"><expr pos:start="275:21" pos:end="275:49"><name pos:start="275:21" pos:end="275:23">sum</name> <operator pos:start="275:25" pos:end="275:26">+=</operator> <name pos:start="275:28" pos:end="275:49"><name pos:start="275:28" pos:end="275:28">s</name><operator pos:start="275:29" pos:end="275:30">-&gt;</operator><name pos:start="275:31" pos:end="275:37">decoded</name><index pos:start="275:38" pos:end="275:46">[<expr pos:start="275:39" pos:end="275:45"><name pos:start="275:39" pos:end="275:45">channel</name></expr>]</index><index pos:start="275:47" pos:end="275:49">[<expr pos:start="275:48" pos:end="275:48"><name pos:start="275:48" pos:end="275:48">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



                <for pos:start="279:17" pos:end="281:68">for <control pos:start="279:21" pos:end="279:42">(<init pos:start="279:22" pos:end="279:25"><expr pos:start="279:22" pos:end="279:24"><name pos:start="279:22" pos:end="279:22">i</name><operator pos:start="279:23" pos:end="279:23">=</operator><literal type="number" pos:start="279:24" pos:end="279:24">1</literal></expr>;</init> <condition pos:start="279:27" pos:end="279:37"><expr pos:start="279:27" pos:end="279:36"><name pos:start="279:27" pos:end="279:27">i</name><operator pos:start="279:28" pos:end="279:28">&lt;</operator><name pos:start="279:29" pos:end="279:36"><name pos:start="279:29" pos:end="279:29">s</name><operator pos:start="279:30" pos:end="279:31">-&gt;</operator><name pos:start="279:32" pos:end="279:36">nmean</name></name></expr>;</condition> <incr pos:start="279:39" pos:end="279:41"><expr pos:start="279:39" pos:end="279:41"><name pos:start="279:39" pos:end="279:39">i</name><operator pos:start="279:40" pos:end="279:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="281:21" pos:end="281:68"><block_content pos:start="281:21" pos:end="281:68">

                    <expr_stmt pos:start="281:21" pos:end="281:68"><expr pos:start="281:21" pos:end="281:67"><name pos:start="281:21" pos:end="281:43"><name pos:start="281:21" pos:end="281:21">s</name><operator pos:start="281:22" pos:end="281:23">-&gt;</operator><name pos:start="281:24" pos:end="281:29">offset</name><index pos:start="281:30" pos:end="281:38">[<expr pos:start="281:31" pos:end="281:37"><name pos:start="281:31" pos:end="281:37">channel</name></expr>]</index><index pos:start="281:39" pos:end="281:43">[<expr pos:start="281:40" pos:end="281:42"><name pos:start="281:40" pos:end="281:40">i</name><operator pos:start="281:41" pos:end="281:41">-</operator><literal type="number" pos:start="281:42" pos:end="281:42">1</literal></expr>]</index></name> <operator pos:start="281:45" pos:end="281:45">=</operator> <name pos:start="281:47" pos:end="281:67"><name pos:start="281:47" pos:end="281:47">s</name><operator pos:start="281:48" pos:end="281:49">-&gt;</operator><name pos:start="281:50" pos:end="281:55">offset</name><index pos:start="281:56" pos:end="281:64">[<expr pos:start="281:57" pos:end="281:63"><name pos:start="281:57" pos:end="281:63">channel</name></expr>]</index><index pos:start="281:65" pos:end="281:67">[<expr pos:start="281:66" pos:end="281:66"><name pos:start="281:66" pos:end="281:66">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



                <if_stmt pos:start="285:17" pos:end="291:91"><if pos:start="285:17" pos:end="287:74">if <condition pos:start="285:20" pos:end="285:35">(<expr pos:start="285:21" pos:end="285:34"><name pos:start="285:21" pos:end="285:30"><name pos:start="285:21" pos:end="285:21">s</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:30">version</name></name> <operator pos:start="285:32" pos:end="285:32">&lt;</operator> <literal type="number" pos:start="285:34" pos:end="285:34">2</literal></expr>)</condition><block type="pseudo" pos:start="287:21" pos:end="287:74"><block_content pos:start="287:21" pos:end="287:74">

                    <expr_stmt pos:start="287:21" pos:end="287:74"><expr pos:start="287:21" pos:end="287:73"><name pos:start="287:21" pos:end="287:52"><name pos:start="287:21" pos:end="287:21">s</name><operator pos:start="287:22" pos:end="287:23">-&gt;</operator><name pos:start="287:24" pos:end="287:29">offset</name><index pos:start="287:30" pos:end="287:38">[<expr pos:start="287:31" pos:end="287:37"><name pos:start="287:31" pos:end="287:37">channel</name></expr>]</index><index pos:start="287:39" pos:end="287:52">[<expr pos:start="287:40" pos:end="287:51"><name pos:start="287:40" pos:end="287:47"><name pos:start="287:40" pos:end="287:40">s</name><operator pos:start="287:41" pos:end="287:42">-&gt;</operator><name pos:start="287:43" pos:end="287:47">nmean</name></name> <operator pos:start="287:49" pos:end="287:49">-</operator> <literal type="number" pos:start="287:51" pos:end="287:51">1</literal></expr>]</index></name> <operator pos:start="287:54" pos:end="287:54">=</operator> <name pos:start="287:56" pos:end="287:58">sum</name> <operator pos:start="287:60" pos:end="287:60">/</operator> <name pos:start="287:62" pos:end="287:73"><name pos:start="287:62" pos:end="287:62">s</name><operator pos:start="287:63" pos:end="287:64">-&gt;</operator><name pos:start="287:65" pos:end="287:73">blocksize</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="289:17" pos:end="291:91">else<block type="pseudo" pos:start="291:21" pos:end="291:91"><block_content pos:start="291:21" pos:end="291:91">

                    <expr_stmt pos:start="291:21" pos:end="291:91"><expr pos:start="291:21" pos:end="291:90"><name pos:start="291:21" pos:end="291:52"><name pos:start="291:21" pos:end="291:21">s</name><operator pos:start="291:22" pos:end="291:23">-&gt;</operator><name pos:start="291:24" pos:end="291:29">offset</name><index pos:start="291:30" pos:end="291:38">[<expr pos:start="291:31" pos:end="291:37"><name pos:start="291:31" pos:end="291:37">channel</name></expr>]</index><index pos:start="291:39" pos:end="291:52">[<expr pos:start="291:40" pos:end="291:51"><name pos:start="291:40" pos:end="291:47"><name pos:start="291:40" pos:end="291:40">s</name><operator pos:start="291:41" pos:end="291:42">-&gt;</operator><name pos:start="291:43" pos:end="291:47">nmean</name></name> <operator pos:start="291:49" pos:end="291:49">-</operator> <literal type="number" pos:start="291:51" pos:end="291:51">1</literal></expr>]</index></name> <operator pos:start="291:54" pos:end="291:54">=</operator> <operator pos:start="291:56" pos:end="291:56">(</operator><name pos:start="291:57" pos:end="291:59">sum</name> <operator pos:start="291:61" pos:end="291:61">/</operator> <name pos:start="291:63" pos:end="291:74"><name pos:start="291:63" pos:end="291:63">s</name><operator pos:start="291:64" pos:end="291:65">-&gt;</operator><name pos:start="291:66" pos:end="291:74">blocksize</name></name><operator pos:start="291:75" pos:end="291:75">)</operator> <operator pos:start="291:77" pos:end="291:78">&lt;&lt;</operator> <name pos:start="291:80" pos:end="291:90"><name pos:start="291:80" pos:end="291:80">s</name><operator pos:start="291:81" pos:end="291:82">-&gt;</operator><name pos:start="291:83" pos:end="291:90">bitshift</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="295:13" pos:end="297:79">for <control pos:start="295:17" pos:end="295:39">(<init pos:start="295:18" pos:end="295:29"><expr pos:start="295:18" pos:end="295:28"><name pos:start="295:18" pos:end="295:18">i</name><operator pos:start="295:19" pos:end="295:19">=</operator><operator pos:start="295:20" pos:end="295:20">-</operator><name pos:start="295:21" pos:end="295:28"><name pos:start="295:21" pos:end="295:21">s</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:28">nwrap</name></name></expr>;</init> <condition pos:start="295:31" pos:end="295:34"><expr pos:start="295:31" pos:end="295:33"><name pos:start="295:31" pos:end="295:31">i</name><operator pos:start="295:32" pos:end="295:32">&lt;</operator><literal type="number" pos:start="295:33" pos:end="295:33">0</literal></expr>;</condition> <incr pos:start="295:36" pos:end="295:38"><expr pos:start="295:36" pos:end="295:38"><name pos:start="295:36" pos:end="295:36">i</name><operator pos:start="295:37" pos:end="295:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="297:17" pos:end="297:79"><block_content pos:start="297:17" pos:end="297:79">

                <expr_stmt pos:start="297:17" pos:end="297:79"><expr pos:start="297:17" pos:end="297:78"><name pos:start="297:17" pos:end="297:38"><name pos:start="297:17" pos:end="297:17">s</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:26">decoded</name><index pos:start="297:27" pos:end="297:35">[<expr pos:start="297:28" pos:end="297:34"><name pos:start="297:28" pos:end="297:34">channel</name></expr>]</index><index pos:start="297:36" pos:end="297:38">[<expr pos:start="297:37" pos:end="297:37"><name pos:start="297:37" pos:end="297:37">i</name></expr>]</index></name> <operator pos:start="297:40" pos:end="297:40">=</operator> <name pos:start="297:42" pos:end="297:78"><name pos:start="297:42" pos:end="297:42">s</name><operator pos:start="297:43" pos:end="297:44">-&gt;</operator><name pos:start="297:45" pos:end="297:51">decoded</name><index pos:start="297:52" pos:end="297:60">[<expr pos:start="297:53" pos:end="297:59"><name pos:start="297:53" pos:end="297:59">channel</name></expr>]</index><index pos:start="297:61" pos:end="297:78">[<expr pos:start="297:62" pos:end="297:77"><name pos:start="297:62" pos:end="297:62">i</name> <operator pos:start="297:64" pos:end="297:64">+</operator> <name pos:start="297:66" pos:end="297:77"><name pos:start="297:66" pos:end="297:66">s</name><operator pos:start="297:67" pos:end="297:68">-&gt;</operator><name pos:start="297:69" pos:end="297:77">blocksize</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="301:13" pos:end="301:49"><expr pos:start="301:13" pos:end="301:48"><call pos:start="301:13" pos:end="301:48"><name pos:start="301:13" pos:end="301:24">fix_bitshift</name><argument_list pos:start="301:25" pos:end="301:48">(<argument pos:start="301:26" pos:end="301:26"><expr pos:start="301:26" pos:end="301:26"><name pos:start="301:26" pos:end="301:26">s</name></expr></argument>, <argument pos:start="301:29" pos:end="301:47"><expr pos:start="301:29" pos:end="301:47"><name pos:start="301:29" pos:end="301:47"><name pos:start="301:29" pos:end="301:29">s</name><operator pos:start="301:30" pos:end="301:31">-&gt;</operator><name pos:start="301:32" pos:end="301:38">decoded</name><index pos:start="301:39" pos:end="301:47">[<expr pos:start="301:40" pos:end="301:46"><name pos:start="301:40" pos:end="301:46">channel</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="305:13" pos:end="305:26"><expr pos:start="305:13" pos:end="305:25"><name pos:start="305:13" pos:end="305:23"><name pos:start="305:13" pos:end="305:13">s</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:23">cur_chan</name></name><operator pos:start="305:24" pos:end="305:25">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="307:13" pos:end="319:13"><if pos:start="307:13" pos:end="315:13">if <condition pos:start="307:16" pos:end="307:43">(<expr pos:start="307:17" pos:end="307:42"><name pos:start="307:17" pos:end="307:27"><name pos:start="307:17" pos:end="307:17">s</name><operator pos:start="307:18" pos:end="307:19">-&gt;</operator><name pos:start="307:20" pos:end="307:27">cur_chan</name></name> <operator pos:start="307:29" pos:end="307:30">==</operator> <name pos:start="307:32" pos:end="307:42"><name pos:start="307:32" pos:end="307:32">s</name><operator pos:start="307:33" pos:end="307:34">-&gt;</operator><name pos:start="307:35" pos:end="307:42">channels</name></name></expr>)</condition> <block pos:start="307:45" pos:end="315:13">{<block_content pos:start="309:17" pos:end="313:64">

                <expr_stmt pos:start="309:17" pos:end="309:92"><expr pos:start="309:17" pos:end="309:91"><name pos:start="309:17" pos:end="309:23">samples</name> <operator pos:start="309:25" pos:end="309:25">=</operator> <call pos:start="309:27" pos:end="309:91"><name pos:start="309:27" pos:end="309:43">interleave_buffer</name><argument_list pos:start="309:44" pos:end="309:91">(<argument pos:start="309:45" pos:end="309:51"><expr pos:start="309:45" pos:end="309:51"><name pos:start="309:45" pos:end="309:51">samples</name></expr></argument>, <argument pos:start="309:54" pos:end="309:64"><expr pos:start="309:54" pos:end="309:64"><name pos:start="309:54" pos:end="309:64"><name pos:start="309:54" pos:end="309:54">s</name><operator pos:start="309:55" pos:end="309:56">-&gt;</operator><name pos:start="309:57" pos:end="309:64">channels</name></name></expr></argument>, <argument pos:start="309:67" pos:end="309:78"><expr pos:start="309:67" pos:end="309:78"><name pos:start="309:67" pos:end="309:78"><name pos:start="309:67" pos:end="309:67">s</name><operator pos:start="309:68" pos:end="309:69">-&gt;</operator><name pos:start="309:70" pos:end="309:78">blocksize</name></name></expr></argument>, <argument pos:start="309:81" pos:end="309:90"><expr pos:start="309:81" pos:end="309:90"><name pos:start="309:81" pos:end="309:90"><name pos:start="309:81" pos:end="309:81">s</name><operator pos:start="309:82" pos:end="309:83">-&gt;</operator><name pos:start="309:84" pos:end="309:90">decoded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="311:17" pos:end="311:32"><expr pos:start="311:17" pos:end="311:31"><name pos:start="311:17" pos:end="311:27"><name pos:start="311:17" pos:end="311:17">s</name><operator pos:start="311:18" pos:end="311:19">-&gt;</operator><name pos:start="311:20" pos:end="311:27">cur_chan</name></name> <operator pos:start="311:29" pos:end="311:29">=</operator> <literal type="number" pos:start="311:31" pos:end="311:31">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:64"><expr pos:start="313:17" pos:end="313:63"><operator pos:start="313:17" pos:end="313:17">*</operator><name pos:start="313:18" pos:end="313:26">data_size</name> <operator pos:start="313:28" pos:end="313:28">=</operator> <operator pos:start="313:30" pos:end="313:30">(</operator><name pos:start="313:31" pos:end="313:36">int8_t</name> <operator pos:start="313:38" pos:end="313:38">*</operator><operator pos:start="313:39" pos:end="313:39">)</operator><name pos:start="313:40" pos:end="313:46">samples</name> <operator pos:start="313:48" pos:end="313:48">-</operator> <operator pos:start="313:50" pos:end="313:50">(</operator><name pos:start="313:51" pos:end="313:56">int8_t</name> <operator pos:start="313:58" pos:end="313:58">*</operator><operator pos:start="313:59" pos:end="313:59">)</operator><name pos:start="313:60" pos:end="313:63">data</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="315:15" pos:end="319:13">else <block pos:start="315:20" pos:end="319:13">{<block_content pos:start="317:17" pos:end="317:31">

                <expr_stmt pos:start="317:17" pos:end="317:31"><expr pos:start="317:17" pos:end="317:30"><operator pos:start="317:17" pos:end="317:17">*</operator><name pos:start="317:18" pos:end="317:26">data_size</name> <operator pos:start="317:28" pos:end="317:28">=</operator> <literal type="number" pos:start="317:30" pos:end="317:30">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="327:5" pos:end="327:43">//    s-&gt;last_blocksize = s-&gt;blocksize;</comment>

    <expr_stmt pos:start="329:5" pos:end="329:74"><expr pos:start="329:5" pos:end="329:73"><name pos:start="329:5" pos:end="329:15"><name pos:start="329:5" pos:end="329:5">s</name><operator pos:start="329:6" pos:end="329:7">-&gt;</operator><name pos:start="329:8" pos:end="329:15">bitindex</name></name> <operator pos:start="329:17" pos:end="329:17">=</operator> <call pos:start="329:19" pos:end="329:40"><name pos:start="329:19" pos:end="329:32">get_bits_count</name><argument_list pos:start="329:33" pos:end="329:40">(<argument pos:start="329:34" pos:end="329:39"><expr pos:start="329:34" pos:end="329:39"><operator pos:start="329:34" pos:end="329:34">&amp;</operator><name pos:start="329:35" pos:end="329:39"><name pos:start="329:35" pos:end="329:35">s</name><operator pos:start="329:36" pos:end="329:37">-&gt;</operator><name pos:start="329:38" pos:end="329:39">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="329:42" pos:end="329:42">-</operator> <literal type="number" pos:start="329:44" pos:end="329:44">8</literal><operator pos:start="329:45" pos:end="329:45">*</operator><operator pos:start="329:46" pos:end="329:46">(</operator><operator pos:start="329:47" pos:end="329:47">(</operator><call pos:start="329:48" pos:end="329:69"><name pos:start="329:48" pos:end="329:61">get_bits_count</name><argument_list pos:start="329:62" pos:end="329:69">(<argument pos:start="329:63" pos:end="329:68"><expr pos:start="329:63" pos:end="329:68"><operator pos:start="329:63" pos:end="329:63">&amp;</operator><name pos:start="329:64" pos:end="329:68"><name pos:start="329:64" pos:end="329:64">s</name><operator pos:start="329:65" pos:end="329:66">-&gt;</operator><name pos:start="329:67" pos:end="329:68">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="329:70" pos:end="329:70">)</operator><operator pos:start="329:71" pos:end="329:71">/</operator><literal type="number" pos:start="329:72" pos:end="329:72">8</literal><operator pos:start="329:73" pos:end="329:73">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:34"><expr pos:start="331:5" pos:end="331:33"><name pos:start="331:5" pos:end="331:5">i</name><operator pos:start="331:6" pos:end="331:6">=</operator> <operator pos:start="331:8" pos:end="331:8">(</operator><call pos:start="331:9" pos:end="331:30"><name pos:start="331:9" pos:end="331:22">get_bits_count</name><argument_list pos:start="331:23" pos:end="331:30">(<argument pos:start="331:24" pos:end="331:29"><expr pos:start="331:24" pos:end="331:29"><operator pos:start="331:24" pos:end="331:24">&amp;</operator><name pos:start="331:25" pos:end="331:29"><name pos:start="331:25" pos:end="331:25">s</name><operator pos:start="331:26" pos:end="331:27">-&gt;</operator><name pos:start="331:28" pos:end="331:29">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="331:31" pos:end="331:31">)</operator><operator pos:start="331:32" pos:end="331:32">/</operator><literal type="number" pos:start="331:33" pos:end="331:33">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="333:5" pos:end="343:5"><if pos:start="333:5" pos:end="343:5">if <condition pos:start="333:8" pos:end="333:21">(<expr pos:start="333:9" pos:end="333:20"><name pos:start="333:9" pos:end="333:9">i</name> <operator pos:start="333:11" pos:end="333:11">&gt;</operator> <name pos:start="333:13" pos:end="333:20">buf_size</name></expr>)</condition> <block pos:start="333:23" pos:end="343:5">{<block_content pos:start="335:9" pos:end="341:18">

        <expr_stmt pos:start="335:9" pos:end="335:71"><expr pos:start="335:9" pos:end="335:70"><call pos:start="335:9" pos:end="335:70"><name pos:start="335:9" pos:end="335:14">av_log</name><argument_list pos:start="335:15" pos:end="335:70">(<argument pos:start="335:16" pos:end="335:23"><expr pos:start="335:16" pos:end="335:23"><name pos:start="335:16" pos:end="335:23"><name pos:start="335:16" pos:end="335:16">s</name><operator pos:start="335:17" pos:end="335:18">-&gt;</operator><name pos:start="335:19" pos:end="335:23">avctx</name></name></expr></argument>, <argument pos:start="335:26" pos:end="335:37"><expr pos:start="335:26" pos:end="335:37"><name pos:start="335:26" pos:end="335:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="335:40" pos:end="335:55"><expr pos:start="335:40" pos:end="335:55"><literal type="string" pos:start="335:40" pos:end="335:55">"overread: %d\n"</literal></expr></argument>, <argument pos:start="335:58" pos:end="335:69"><expr pos:start="335:58" pos:end="335:69"><name pos:start="335:58" pos:end="335:58">i</name> <operator pos:start="335:60" pos:end="335:60">-</operator> <name pos:start="335:62" pos:end="335:69">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:28"><expr pos:start="337:9" pos:end="337:27"><name pos:start="337:9" pos:end="337:25"><name pos:start="337:9" pos:end="337:9">s</name><operator pos:start="337:10" pos:end="337:11">-&gt;</operator><name pos:start="337:12" pos:end="337:25">bitstream_size</name></name><operator pos:start="337:26" pos:end="337:26">=</operator><literal type="number" pos:start="337:27" pos:end="337:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:29"><expr pos:start="339:9" pos:end="339:28"><name pos:start="339:9" pos:end="339:26"><name pos:start="339:9" pos:end="339:9">s</name><operator pos:start="339:10" pos:end="339:11">-&gt;</operator><name pos:start="339:12" pos:end="339:26">bitstream_index</name></name><operator pos:start="339:27" pos:end="339:27">=</operator><literal type="number" pos:start="339:28" pos:end="339:28">0</literal></expr>;</expr_stmt>

        <return pos:start="341:9" pos:end="341:18">return <expr pos:start="341:16" pos:end="341:17"><operator pos:start="341:16" pos:end="341:16">-</operator><literal type="number" pos:start="341:17" pos:end="341:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="345:5" pos:end="355:17"><if pos:start="345:5" pos:end="353:5">if <condition pos:start="345:8" pos:end="345:26">(<expr pos:start="345:9" pos:end="345:25"><name pos:start="345:9" pos:end="345:25"><name pos:start="345:9" pos:end="345:9">s</name><operator pos:start="345:10" pos:end="345:11">-&gt;</operator><name pos:start="345:12" pos:end="345:25">bitstream_size</name></name></expr>)</condition> <block pos:start="345:28" pos:end="353:5">{<block_content pos:start="347:9" pos:end="351:30">

        <expr_stmt pos:start="347:9" pos:end="347:32"><expr pos:start="347:9" pos:end="347:31"><name pos:start="347:9" pos:end="347:26"><name pos:start="347:9" pos:end="347:9">s</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:26">bitstream_index</name></name> <operator pos:start="347:28" pos:end="347:29">+=</operator> <name pos:start="347:31" pos:end="347:31">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:32"><expr pos:start="349:9" pos:end="349:31"><name pos:start="349:9" pos:end="349:25"><name pos:start="349:9" pos:end="349:9">s</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:25">bitstream_size</name></name>  <operator pos:start="349:28" pos:end="349:29">-=</operator> <name pos:start="349:31" pos:end="349:31">i</name></expr>;</expr_stmt>

        <return pos:start="351:9" pos:end="351:30">return <expr pos:start="351:16" pos:end="351:29"><name pos:start="351:16" pos:end="351:29">input_buf_size</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="353:7" pos:end="355:17">else<block type="pseudo" pos:start="355:9" pos:end="355:17"><block_content pos:start="355:9" pos:end="355:17">

        <return pos:start="355:9" pos:end="355:17">return <expr pos:start="355:16" pos:end="355:16"><name pos:start="355:16" pos:end="355:16">i</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
