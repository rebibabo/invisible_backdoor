<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8516.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">applehttp_open</name><parameter_list pos:start="1:26" pos:end="1:68">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:36">URLContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">h</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">uri</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:67">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:15">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">AppleHTTPContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:26">nested_url</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:31"><if pos:start="13:5" pos:end="15:31">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:13">flags</name> <operator pos:start="13:15" pos:end="13:15">&amp;</operator> <name pos:start="13:17" pos:end="13:31">AVIO_FLAG_WRITE</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:31"><block_content pos:start="15:9" pos:end="15:31">

        <return pos:start="15:9" pos:end="15:31">return <expr pos:start="15:16" pos:end="15:30"><call pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:22">AVERROR</name><argument_list pos:start="15:23" pos:end="15:30">(<argument pos:start="15:24" pos:end="15:29"><expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:5">s</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:18">av_mallocz</name><argument_list pos:start="19:19" pos:end="19:44">(<argument pos:start="19:20" pos:end="19:43"><expr pos:start="19:20" pos:end="19:43"><sizeof pos:start="19:20" pos:end="19:43">sizeof<argument_list pos:start="19:26" pos:end="19:43">(<argument pos:start="19:27" pos:end="19:42"><expr pos:start="19:27" pos:end="19:42"><name pos:start="19:27" pos:end="19:42">AppleHTTPContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:11">(<expr pos:start="21:9" pos:end="21:10"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:10">s</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:16">priv_data</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:20">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:5">h</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:18">is_streamed</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="49:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:52">(<expr pos:start="31:9" pos:end="31:51"><call pos:start="31:9" pos:end="31:51"><name pos:start="31:9" pos:end="31:19">av_strstart</name><argument_list pos:start="31:20" pos:end="31:51">(<argument pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:23">uri</name></expr></argument>, <argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><literal type="string" pos:start="31:26" pos:end="31:37">"applehttp+"</literal></expr></argument>, <argument pos:start="31:40" pos:end="31:50"><expr pos:start="31:40" pos:end="31:50"><operator pos:start="31:40" pos:end="31:40">&amp;</operator><name pos:start="31:41" pos:end="31:50">nested_url</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:54" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:71">

        <expr_stmt pos:start="33:9" pos:end="33:71"><expr pos:start="33:9" pos:end="33:70"><call pos:start="33:9" pos:end="33:70"><name pos:start="33:9" pos:end="33:18">av_strlcpy</name><argument_list pos:start="33:19" pos:end="33:70">(<argument pos:start="33:20" pos:end="33:33"><expr pos:start="33:20" pos:end="33:33"><name pos:start="33:20" pos:end="33:33"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:33">playlisturl</name></name></expr></argument>, <argument pos:start="33:36" pos:end="33:45"><expr pos:start="33:36" pos:end="33:45"><name pos:start="33:36" pos:end="33:45">nested_url</name></expr></argument>, <argument pos:start="33:48" pos:end="33:69"><expr pos:start="33:48" pos:end="33:69"><sizeof pos:start="33:48" pos:end="33:69">sizeof<argument_list pos:start="33:54" pos:end="33:69">(<argument pos:start="33:55" pos:end="33:68"><expr pos:start="33:55" pos:end="33:68"><name pos:start="33:55" pos:end="33:68"><name pos:start="33:55" pos:end="33:55">s</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:68">playlisturl</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="41:5">else if <condition pos:start="35:15" pos:end="35:61">(<expr pos:start="35:16" pos:end="35:60"><call pos:start="35:16" pos:end="35:60"><name pos:start="35:16" pos:end="35:26">av_strstart</name><argument_list pos:start="35:27" pos:end="35:60">(<argument pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:30">uri</name></expr></argument>, <argument pos:start="35:33" pos:end="35:46"><expr pos:start="35:33" pos:end="35:46"><literal type="string" pos:start="35:33" pos:end="35:46">"applehttp://"</literal></expr></argument>, <argument pos:start="35:49" pos:end="35:59"><expr pos:start="35:49" pos:end="35:59"><operator pos:start="35:49" pos:end="35:49">&amp;</operator><name pos:start="35:50" pos:end="35:59">nested_url</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:63" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:71">

        <expr_stmt pos:start="37:9" pos:end="37:70"><expr pos:start="37:9" pos:end="37:69"><call pos:start="37:9" pos:end="37:69"><name pos:start="37:9" pos:end="37:18">av_strlcpy</name><argument_list pos:start="37:19" pos:end="37:69">(<argument pos:start="37:20" pos:end="37:33"><expr pos:start="37:20" pos:end="37:33"><name pos:start="37:20" pos:end="37:33"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:33">playlisturl</name></name></expr></argument>, <argument pos:start="37:36" pos:end="37:44"><expr pos:start="37:36" pos:end="37:44"><literal type="string" pos:start="37:36" pos:end="37:44">"http://"</literal></expr></argument>, <argument pos:start="37:47" pos:end="37:68"><expr pos:start="37:47" pos:end="37:68"><sizeof pos:start="37:47" pos:end="37:68">sizeof<argument_list pos:start="37:53" pos:end="37:68">(<argument pos:start="37:54" pos:end="37:67"><expr pos:start="37:54" pos:end="37:67"><name pos:start="37:54" pos:end="37:67"><name pos:start="37:54" pos:end="37:54">s</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:67">playlisturl</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:71"><expr pos:start="39:9" pos:end="39:70"><call pos:start="39:9" pos:end="39:70"><name pos:start="39:9" pos:end="39:18">av_strlcat</name><argument_list pos:start="39:19" pos:end="39:70">(<argument pos:start="39:20" pos:end="39:33"><expr pos:start="39:20" pos:end="39:33"><name pos:start="39:20" pos:end="39:33"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:33">playlisturl</name></name></expr></argument>, <argument pos:start="39:36" pos:end="39:45"><expr pos:start="39:36" pos:end="39:45"><name pos:start="39:36" pos:end="39:45">nested_url</name></expr></argument>, <argument pos:start="39:48" pos:end="39:69"><expr pos:start="39:48" pos:end="39:69"><sizeof pos:start="39:48" pos:end="39:69">sizeof<argument_list pos:start="39:54" pos:end="39:69">(<argument pos:start="39:55" pos:end="39:68"><expr pos:start="39:55" pos:end="39:68"><name pos:start="39:55" pos:end="39:68"><name pos:start="39:55" pos:end="39:55">s</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:68">playlisturl</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="49:5">else <block pos:start="41:12" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:18">

        <expr_stmt pos:start="43:9" pos:end="43:61"><expr pos:start="43:9" pos:end="43:60"><call pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:60">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><name pos:start="43:16" pos:end="43:16">h</name></expr></argument>, <argument pos:start="43:19" pos:end="43:30"><expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:33" pos:end="43:54"><expr pos:start="43:33" pos:end="43:54"><literal type="string" pos:start="43:33" pos:end="43:54">"Unsupported url %s\n"</literal></expr></argument>, <argument pos:start="43:57" pos:end="43:59"><expr pos:start="43:57" pos:end="43:59"><name pos:start="43:57" pos:end="43:59">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:29"><name pos:start="45:15" pos:end="45:21">AVERROR</name><argument_list pos:start="45:22" pos:end="45:29">(<argument pos:start="45:23" pos:end="45:28"><expr pos:start="45:23" pos:end="45:28"><name pos:start="45:23" pos:end="45:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:18">goto <name pos:start="47:14" pos:end="47:17">fail</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:54">(<expr pos:start="53:9" pos:end="53:53"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:12">ret</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:48"><name pos:start="53:16" pos:end="53:29">parse_playlist</name><argument_list pos:start="53:30" pos:end="53:48">(<argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">h</name></expr></argument>, <argument pos:start="53:34" pos:end="53:47"><expr pos:start="53:34" pos:end="53:47"><name pos:start="53:34" pos:end="53:47"><name pos:start="53:34" pos:end="53:34">s</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:47">playlisturl</name></name></expr></argument>)</argument_list></call><operator pos:start="53:49" pos:end="53:49">)</operator> <operator pos:start="53:51" pos:end="53:51">&lt;</operator> <literal type="number" pos:start="53:53" pos:end="53:53">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18">

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="83:5"><if pos:start="59:5" pos:end="83:5">if <condition pos:start="59:8" pos:end="59:48">(<expr pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:21">n_segments</name></name> <operator pos:start="59:23" pos:end="59:24">==</operator> <literal type="number" pos:start="59:26" pos:end="59:26">0</literal> <operator pos:start="59:28" pos:end="59:29">&amp;&amp;</operator> <name pos:start="59:31" pos:end="59:43"><name pos:start="59:31" pos:end="59:31">s</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:43">n_variants</name></name> <operator pos:start="59:45" pos:end="59:45">&gt;</operator> <literal type="number" pos:start="59:47" pos:end="59:47">0</literal></expr>)</condition> <block pos:start="59:50" pos:end="83:5">{<block_content pos:start="61:9" pos:end="81:22">

        <decl_stmt pos:start="61:9" pos:end="61:43"><decl pos:start="61:9" pos:end="61:29"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:25">max_bandwidth</name> <init pos:start="61:27" pos:end="61:29">= <expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">0</literal></expr></init></decl>, <decl pos:start="61:32" pos:end="61:42"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:32" pos:end="61:37">maxvar</name> <init pos:start="61:39" pos:end="61:42">= <expr pos:start="61:41" pos:end="61:42"><operator pos:start="61:41" pos:end="61:41">-</operator><literal type="number" pos:start="61:42" pos:end="61:42">1</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="63:9" pos:end="73:9">for <control pos:start="63:13" pos:end="63:43">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">i</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:38"><expr pos:start="63:21" pos:end="63:37"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <name pos:start="63:25" pos:end="63:37"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:37">n_variants</name></name></expr>;</condition> <incr pos:start="63:40" pos:end="63:42"><expr pos:start="63:40" pos:end="63:42"><name pos:start="63:40" pos:end="63:40">i</name><operator pos:start="63:41" pos:end="63:42">++</operator></expr></incr>)</control> <block pos:start="63:45" pos:end="73:9">{<block_content pos:start="65:13" pos:end="71:13">

            <if_stmt pos:start="65:13" pos:end="71:13"><if pos:start="65:13" pos:end="71:13">if <condition pos:start="65:16" pos:end="65:68">(<expr pos:start="65:17" pos:end="65:67"><name pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:27">variants</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">i</name></expr>]</index></name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:41">bandwidth</name> <operator pos:start="65:43" pos:end="65:43">&gt;</operator> <name pos:start="65:45" pos:end="65:57">max_bandwidth</name> <operator pos:start="65:59" pos:end="65:60">||</operator> <name pos:start="65:62" pos:end="65:62">i</name> <operator pos:start="65:64" pos:end="65:65">==</operator> <literal type="number" pos:start="65:67" pos:end="65:67">0</literal></expr>)</condition> <block pos:start="65:70" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:27">

                <expr_stmt pos:start="67:17" pos:end="67:58"><expr pos:start="67:17" pos:end="67:57"><name pos:start="67:17" pos:end="67:29">max_bandwidth</name> <operator pos:start="67:31" pos:end="67:31">=</operator> <name pos:start="67:33" pos:end="67:46"><name pos:start="67:33" pos:end="67:33">s</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:43">variants</name><index pos:start="67:44" pos:end="67:46">[<expr pos:start="67:45" pos:end="67:45"><name pos:start="67:45" pos:end="67:45">i</name></expr>]</index></name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:57">bandwidth</name></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:27"><expr pos:start="69:17" pos:end="69:26"><name pos:start="69:17" pos:end="69:22">maxvar</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:26">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="75:9" pos:end="77:43"><expr pos:start="75:9" pos:end="77:42"><call pos:start="75:9" pos:end="77:42"><name pos:start="75:9" pos:end="75:18">av_strlcpy</name><argument_list pos:start="75:19" pos:end="77:42">(<argument pos:start="75:20" pos:end="75:33"><expr pos:start="75:20" pos:end="75:33"><name pos:start="75:20" pos:end="75:33"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:33">playlisturl</name></name></expr></argument>, <argument pos:start="75:36" pos:end="75:59"><expr pos:start="75:36" pos:end="75:59"><name pos:start="75:36" pos:end="75:54"><name pos:start="75:36" pos:end="75:36">s</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:46">variants</name><index pos:start="75:47" pos:end="75:54">[<expr pos:start="75:48" pos:end="75:53"><name pos:start="75:48" pos:end="75:53">maxvar</name></expr>]</index></name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:59">url</name></expr></argument>,

                   <argument pos:start="77:20" pos:end="77:41"><expr pos:start="77:20" pos:end="77:41"><sizeof pos:start="77:20" pos:end="77:41">sizeof<argument_list pos:start="77:26" pos:end="77:41">(<argument pos:start="77:27" pos:end="77:40"><expr pos:start="77:27" pos:end="77:40"><name pos:start="77:27" pos:end="77:40"><name pos:start="77:27" pos:end="77:27">s</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:40">playlisturl</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:22"><if pos:start="79:9" pos:end="81:22">if <condition pos:start="79:12" pos:end="79:58">(<expr pos:start="79:13" pos:end="79:57"><operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:16">ret</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <call pos:start="79:20" pos:end="79:52"><name pos:start="79:20" pos:end="79:33">parse_playlist</name><argument_list pos:start="79:34" pos:end="79:52">(<argument pos:start="79:35" pos:end="79:35"><expr pos:start="79:35" pos:end="79:35"><name pos:start="79:35" pos:end="79:35">h</name></expr></argument>, <argument pos:start="79:38" pos:end="79:51"><expr pos:start="79:38" pos:end="79:51"><name pos:start="79:38" pos:end="79:51"><name pos:start="79:38" pos:end="79:38">s</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:51">playlisturl</name></name></expr></argument>)</argument_list></call><operator pos:start="79:53" pos:end="79:53">)</operator> <operator pos:start="79:55" pos:end="79:55">&lt;</operator> <literal type="number" pos:start="79:57" pos:end="79:57">0</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:22"><block_content pos:start="81:13" pos:end="81:22">

            <goto pos:start="81:13" pos:end="81:22">goto <name pos:start="81:18" pos:end="81:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:27">(<expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:21">n_segments</name></name> <operator pos:start="87:23" pos:end="87:24">==</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>)</condition> <block pos:start="87:29" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:18">

        <expr_stmt pos:start="89:9" pos:end="89:54"><expr pos:start="89:9" pos:end="89:53"><call pos:start="89:9" pos:end="89:53"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:53">(<argument pos:start="89:16" pos:end="89:16"><expr pos:start="89:16" pos:end="89:16"><name pos:start="89:16" pos:end="89:16">h</name></expr></argument>, <argument pos:start="89:19" pos:end="89:32"><expr pos:start="89:19" pos:end="89:32"><name pos:start="89:19" pos:end="89:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="89:35" pos:end="89:52"><expr pos:start="89:35" pos:end="89:52"><literal type="string" pos:start="89:35" pos:end="89:52">"Empty playlist\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:26"><name pos:start="91:15" pos:end="91:21">AVERROR</name><argument_list pos:start="91:22" pos:end="91:26">(<argument pos:start="91:23" pos:end="91:25"><expr pos:start="91:23" pos:end="91:25"><name pos:start="91:23" pos:end="91:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:18">goto <name pos:start="93:14" pos:end="93:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:36"><expr pos:start="97:5" pos:end="97:35"><name pos:start="97:5" pos:end="97:17"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:17">cur_seq_no</name></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:35"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:35">start_seq_no</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:60"><if pos:start="99:5" pos:end="101:60">if <condition pos:start="99:8" pos:end="99:43">(<expr pos:start="99:9" pos:end="99:42"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:20"><name pos:start="99:10" pos:end="99:10">s</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:20">finished</name></name> <operator pos:start="99:22" pos:end="99:23">&amp;&amp;</operator> <name pos:start="99:25" pos:end="99:37"><name pos:start="99:25" pos:end="99:25">s</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:37">n_segments</name></name> <operator pos:start="99:39" pos:end="99:40">&gt;=</operator> <literal type="number" pos:start="99:42" pos:end="99:42">3</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:60"><block_content pos:start="101:9" pos:end="101:60">

        <expr_stmt pos:start="101:9" pos:end="101:60"><expr pos:start="101:9" pos:end="101:59"><name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:21">cur_seq_no</name></name> <operator pos:start="101:23" pos:end="101:23">=</operator> <name pos:start="101:25" pos:end="101:39"><name pos:start="101:25" pos:end="101:25">s</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:39">start_seq_no</name></name> <operator pos:start="101:41" pos:end="101:41">+</operator> <name pos:start="101:43" pos:end="101:55"><name pos:start="101:43" pos:end="101:43">s</name><operator pos:start="101:44" pos:end="101:45">-&gt;</operator><name pos:start="101:46" pos:end="101:55">n_segments</name></name> <operator pos:start="101:57" pos:end="101:57">-</operator> <literal type="number" pos:start="101:59" pos:end="101:59">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>



<label pos:start="109:1" pos:end="109:5"><name pos:start="109:1" pos:end="109:4">fail</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:15"><expr pos:start="111:5" pos:end="111:14"><call pos:start="111:5" pos:end="111:14"><name pos:start="111:5" pos:end="111:11">av_free</name><argument_list pos:start="111:12" pos:end="111:14">(<argument pos:start="111:13" pos:end="111:13"><expr pos:start="111:13" pos:end="111:13"><name pos:start="111:13" pos:end="111:13">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:15">return <expr pos:start="113:12" pos:end="113:14"><name pos:start="113:12" pos:end="113:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
