<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27213.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">diag288_timer_expired</name><parameter_list pos:start="1:34" pos:end="1:44">(<parameter pos:start="1:35" pos:end="1:43"><decl pos:start="1:35" pos:end="1:43"><type pos:start="1:35" pos:end="1:40"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:27">

    <expr_stmt pos:start="5:5" pos:end="5:62"><expr pos:start="5:5" pos:end="5:61"><call pos:start="5:5" pos:end="5:61"><name pos:start="5:5" pos:end="5:17">qemu_log_mask</name><argument_list pos:start="5:18" pos:end="5:61">(<argument pos:start="5:19" pos:end="5:31"><expr pos:start="5:19" pos:end="5:31"><name pos:start="5:19" pos:end="5:31">CPU_LOG_RESET</name></expr></argument>, <argument pos:start="5:34" pos:end="5:60"><expr pos:start="5:34" pos:end="5:60"><literal type="string" pos:start="5:34" pos:end="5:60">"Watchdog timer expired.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:30"><expr pos:start="7:5" pos:end="7:29"><call pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27">watchdog_perform_action</name><argument_list pos:start="7:28" pos:end="7:29">()</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:73">/* Reset the watchdog only if the guest was notified about expiry. */</comment>

    <switch pos:start="11:5" pos:end="21:5">switch <condition pos:start="11:12" pos:end="11:34">(<expr pos:start="11:13" pos:end="11:33"><call pos:start="11:13" pos:end="11:33"><name pos:start="11:13" pos:end="11:31">get_watchdog_action</name><argument_list pos:start="11:32" pos:end="11:33">()</argument_list></call></expr>)</condition> <block pos:start="11:36" pos:end="21:5">{<block_content pos:start="13:5" pos:end="19:16">

    <case pos:start="13:5" pos:end="13:19">case <expr pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:18">WDT_DEBUG</name></expr>:</case>

    <case pos:start="15:5" pos:end="15:18">case <expr pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:17">WDT_NONE</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:19">case <expr pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:18">WDT_PAUSE</name></expr>:</case>

         <return pos:start="19:10" pos:end="19:16">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:21">wdt_diag288_reset</name><argument_list pos:start="23:22" pos:end="23:26">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
