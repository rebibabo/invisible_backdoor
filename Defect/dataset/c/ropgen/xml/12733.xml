<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12733.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">bdrv_drain_all_end</name><parameter_list pos:start="1:24" pos:end="1:29">(<parameter pos:start="1:25" pos:end="1:28"><decl pos:start="1:25" pos:end="1:28"><type pos:start="1:25" pos:end="1:28"><name pos:start="1:25" pos:end="1:28">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">BdrvNextIterator</name></type> <name pos:start="7:22" pos:end="7:23">it</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">BlockJob</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">job</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="29:5">for <control pos:start="13:9" pos:end="13:55">(<init pos:start="13:10" pos:end="13:30"><expr pos:start="13:10" pos:end="13:29"><name pos:start="13:10" pos:end="13:11">bs</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:29"><name pos:start="13:15" pos:end="13:24">bdrv_first</name><argument_list pos:start="13:25" pos:end="13:29">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:28">it</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:33"><name pos:start="13:32" pos:end="13:33">bs</name></expr>;</condition> <incr pos:start="13:36" pos:end="13:54"><expr pos:start="13:36" pos:end="13:54"><name pos:start="13:36" pos:end="13:37">bs</name> <operator pos:start="13:39" pos:end="13:39">=</operator> <call pos:start="13:41" pos:end="13:54"><name pos:start="13:41" pos:end="13:49">bdrv_next</name><argument_list pos:start="13:50" pos:end="13:54">(<argument pos:start="13:51" pos:end="13:53"><expr pos:start="13:51" pos:end="13:53"><operator pos:start="13:51" pos:end="13:51">&amp;</operator><name pos:start="13:52" pos:end="13:53">it</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="13:57" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:41">

        <decl_stmt pos:start="15:9" pos:end="15:59"><decl pos:start="15:9" pos:end="15:58"><type pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:18">AioContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:31">aio_context</name> <init pos:start="15:33" pos:end="15:58">= <expr pos:start="15:35" pos:end="15:58"><call pos:start="15:35" pos:end="15:58"><name pos:start="15:35" pos:end="15:54">bdrv_get_aio_context</name><argument_list pos:start="15:55" pos:end="15:58">(<argument pos:start="15:56" pos:end="15:57"><expr pos:start="15:56" pos:end="15:57"><name pos:start="15:56" pos:end="15:57">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><call pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:27">aio_context_acquire</name><argument_list pos:start="19:28" pos:end="19:40">(<argument pos:start="19:29" pos:end="19:39"><expr pos:start="19:29" pos:end="19:39"><name pos:start="19:29" pos:end="19:39">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><call pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:27">aio_enable_external</name><argument_list pos:start="21:28" pos:end="21:40">(<argument pos:start="21:29" pos:end="21:39"><expr pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:39">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:29">bdrv_io_unplugged_end</name><argument_list pos:start="23:30" pos:end="23:33">(<argument pos:start="23:31" pos:end="23:32"><expr pos:start="23:31" pos:end="23:32"><name pos:start="23:31" pos:end="23:32">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><call pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:31">bdrv_parent_drained_end</name><argument_list pos:start="25:32" pos:end="25:35">(<argument pos:start="25:33" pos:end="25:34"><expr pos:start="25:33" pos:end="25:34"><name pos:start="25:33" pos:end="25:34">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><call pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:27">aio_context_release</name><argument_list pos:start="27:28" pos:end="27:40">(<argument pos:start="27:29" pos:end="27:39"><expr pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:39">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <while pos:start="33:5" pos:end="45:5">while <condition pos:start="33:11" pos:end="33:39">(<expr pos:start="33:12" pos:end="33:38"><operator pos:start="33:12" pos:end="33:12">(</operator><name pos:start="33:13" pos:end="33:15">job</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:37"><name pos:start="33:19" pos:end="33:32">block_job_next</name><argument_list pos:start="33:33" pos:end="33:37">(<argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:36">job</name></expr></argument>)</argument_list></call><operator pos:start="33:38" pos:end="33:38">)</operator></expr>)</condition> <block pos:start="33:41" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:41">

        <decl_stmt pos:start="35:9" pos:end="35:64"><decl pos:start="35:9" pos:end="35:63"><type pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:18">AioContext</name> <modifier pos:start="35:20" pos:end="35:20">*</modifier></type><name pos:start="35:21" pos:end="35:31">aio_context</name> <init pos:start="35:33" pos:end="35:63">= <expr pos:start="35:35" pos:end="35:63"><call pos:start="35:35" pos:end="35:63"><name pos:start="35:35" pos:end="35:53">blk_get_aio_context</name><argument_list pos:start="35:54" pos:end="35:63">(<argument pos:start="35:55" pos:end="35:62"><expr pos:start="35:55" pos:end="35:62"><name pos:start="35:55" pos:end="35:62"><name pos:start="35:55" pos:end="35:57">job</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:62">blk</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><call pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:27">aio_context_acquire</name><argument_list pos:start="39:28" pos:end="39:40">(<argument pos:start="39:29" pos:end="39:39"><expr pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:39">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><call pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:24">block_job_resume</name><argument_list pos:start="41:25" pos:end="41:29">(<argument pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:28">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:27">aio_context_release</name><argument_list pos:start="43:28" pos:end="43:40">(<argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:39">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
