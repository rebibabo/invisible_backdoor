<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14183.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">fbdev_read_header</name><parameter_list pos:start="1:37" pos:end="1:60">(<parameter pos:start="1:38" pos:end="1:59"><decl pos:start="1:38" pos:end="1:59"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:52">AVFormatContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:15">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">FBDevContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">fbdev</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:8">enum</name> <name pos:start="9:10" pos:end="9:22">AVPixelFormat</name></name></type> <name pos:start="9:24" pos:end="9:30">pix_fmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:18">flags</name> <init pos:start="11:20" pos:end="11:29">= <expr pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:29">O_RDONLY</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:49">(<expr pos:start="15:9" pos:end="15:48"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:12">st</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:47"><name pos:start="15:16" pos:end="15:34">avformat_new_stream</name><argument_list pos:start="15:35" pos:end="15:47">(<argument pos:start="15:36" pos:end="15:40"><expr pos:start="15:36" pos:end="15:40"><name pos:start="15:36" pos:end="15:40">avctx</name></expr></argument>, <argument pos:start="15:43" pos:end="15:46"><expr pos:start="15:43" pos:end="15:46"><name pos:start="15:43" pos:end="15:46">NULL</name></expr></argument>)</argument_list></call><operator pos:start="15:48" pos:end="15:48">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><call pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:23">avpriv_set_pts_info</name><argument_list pos:start="19:24" pos:end="19:43">(<argument pos:start="19:25" pos:end="19:26"><expr pos:start="19:25" pos:end="19:26"><name pos:start="19:25" pos:end="19:26">st</name></expr></argument>, <argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><literal type="number" pos:start="19:29" pos:end="19:30">64</literal></expr></argument>, <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">1</literal></expr></argument>, <argument pos:start="19:36" pos:end="19:42"><expr pos:start="19:36" pos:end="19:42"><literal type="number" pos:start="19:36" pos:end="19:42">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:46" pos:end="19:78">/* 64 bits pts in microseconds */</comment>



    <comment type="block" pos:start="23:5" pos:end="23:75">/* NONBLOCK is ignored by the fbdev driver, only set for consistency */</comment>

    <if_stmt pos:start="25:5" pos:end="27:28"><if pos:start="25:5" pos:end="27:28">if <condition pos:start="25:8" pos:end="25:43">(<expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">flags</name></name> <operator pos:start="25:22" pos:end="25:22">&amp;</operator> <name pos:start="25:24" pos:end="25:42">AVFMT_FLAG_NONBLOCK</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:28"><block_content pos:start="27:9" pos:end="27:28">

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:13">flags</name> <operator pos:start="27:15" pos:end="27:16">|=</operator> <name pos:start="27:18" pos:end="27:27">O_NONBLOCK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="43:5"><if pos:start="31:5" pos:end="43:5">if <condition pos:start="31:8" pos:end="31:64">(<expr pos:start="31:9" pos:end="31:63"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:18"><name pos:start="31:10" pos:end="31:14">fbdev</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:18">fd</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <call pos:start="31:22" pos:end="31:56"><name pos:start="31:22" pos:end="31:32">avpriv_open</name><argument_list pos:start="31:33" pos:end="31:56">(<argument pos:start="31:34" pos:end="31:48"><expr pos:start="31:34" pos:end="31:48"><name pos:start="31:34" pos:end="31:48"><name pos:start="31:34" pos:end="31:38">avctx</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:48">filename</name></name></expr></argument>, <argument pos:start="31:51" pos:end="31:55"><expr pos:start="31:51" pos:end="31:55"><name pos:start="31:51" pos:end="31:55">flags</name></expr></argument>)</argument_list></call><operator pos:start="31:57" pos:end="31:57">)</operator> <operator pos:start="31:59" pos:end="31:60">==</operator> <operator pos:start="31:62" pos:end="31:62">-</operator><literal type="number" pos:start="31:63" pos:end="31:63">1</literal></expr>)</condition> <block pos:start="31:66" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:19">

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:28"><name pos:start="33:15" pos:end="33:21">AVERROR</name><argument_list pos:start="33:22" pos:end="33:28">(<argument pos:start="33:23" pos:end="33:27"><expr pos:start="33:23" pos:end="33:27"><name pos:start="33:23" pos:end="33:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="39:47"><expr pos:start="35:9" pos:end="39:46"><call pos:start="35:9" pos:end="39:46"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="39:46">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="37:16" pos:end="37:61"><expr pos:start="37:16" pos:end="37:61"><literal type="string" pos:start="37:16" pos:end="37:61">"Could not open framebuffer device '%s': %s\n"</literal></expr></argument>,

               <argument pos:start="39:16" pos:end="39:30"><expr pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:20">avctx</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:30">filename</name></name></expr></argument>, <argument pos:start="39:33" pos:end="39:45"><expr pos:start="39:33" pos:end="39:45"><call pos:start="39:33" pos:end="39:45"><name pos:start="39:33" pos:end="39:40">strerror</name><argument_list pos:start="39:41" pos:end="39:45">(<argument pos:start="39:42" pos:end="39:44"><expr pos:start="39:42" pos:end="39:44"><name pos:start="39:42" pos:end="39:44">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:67">(<expr pos:start="47:9" pos:end="47:66"><call pos:start="47:9" pos:end="47:62"><name pos:start="47:9" pos:end="47:13">ioctl</name><argument_list pos:start="47:14" pos:end="47:62">(<argument pos:start="47:15" pos:end="47:23"><expr pos:start="47:15" pos:end="47:23"><name pos:start="47:15" pos:end="47:23"><name pos:start="47:15" pos:end="47:19">fbdev</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:23">fd</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:44"><expr pos:start="47:26" pos:end="47:44"><name pos:start="47:26" pos:end="47:44">FBIOGET_VSCREENINFO</name></expr></argument>, <argument pos:start="47:47" pos:end="47:61"><expr pos:start="47:47" pos:end="47:61"><operator pos:start="47:47" pos:end="47:47">&amp;</operator><name pos:start="47:48" pos:end="47:61"><name pos:start="47:48" pos:end="47:52">fbdev</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:61">varinfo</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:64" pos:end="47:64">&lt;</operator> <literal type="number" pos:start="47:66" pos:end="47:66">0</literal></expr>)</condition> <block pos:start="47:69" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:18">

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:28"><name pos:start="49:15" pos:end="49:21">AVERROR</name><argument_list pos:start="49:22" pos:end="49:28">(<argument pos:start="49:23" pos:end="49:27"><expr pos:start="49:23" pos:end="49:27"><name pos:start="49:23" pos:end="49:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="53:61"><expr pos:start="51:9" pos:end="53:60"><call pos:start="51:9" pos:end="53:60"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="53:60">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20">avctx</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="53:16" pos:end="53:42"><expr pos:start="53:16" pos:end="53:42"><literal type="string" pos:start="53:16" pos:end="53:42">"FBIOGET_VSCREENINFO: %s\n"</literal></expr></argument>, <argument pos:start="53:45" pos:end="53:59"><expr pos:start="53:45" pos:end="53:59"><call pos:start="53:45" pos:end="53:59"><name pos:start="53:45" pos:end="53:52">strerror</name><argument_list pos:start="53:53" pos:end="53:59">(<argument pos:start="53:54" pos:end="53:58"><expr pos:start="53:54" pos:end="53:58"><name pos:start="53:54" pos:end="53:58">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="71:5"><if pos:start="61:5" pos:end="71:5">if <condition pos:start="61:8" pos:end="61:67">(<expr pos:start="61:9" pos:end="61:66"><call pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:13">ioctl</name><argument_list pos:start="61:14" pos:end="61:62">(<argument pos:start="61:15" pos:end="61:23"><expr pos:start="61:15" pos:end="61:23"><name pos:start="61:15" pos:end="61:23"><name pos:start="61:15" pos:end="61:19">fbdev</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:23">fd</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:44"><expr pos:start="61:26" pos:end="61:44"><name pos:start="61:26" pos:end="61:44">FBIOGET_FSCREENINFO</name></expr></argument>, <argument pos:start="61:47" pos:end="61:61"><expr pos:start="61:47" pos:end="61:61"><operator pos:start="61:47" pos:end="61:47">&amp;</operator><name pos:start="61:48" pos:end="61:61"><name pos:start="61:48" pos:end="61:52">fbdev</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:61">fixinfo</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:64" pos:end="61:64">&lt;</operator> <literal type="number" pos:start="61:66" pos:end="61:66">0</literal></expr>)</condition> <block pos:start="61:69" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:18">

        <expr_stmt pos:start="63:9" pos:end="63:29"><expr pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:28"><name pos:start="63:15" pos:end="63:21">AVERROR</name><argument_list pos:start="63:22" pos:end="63:28">(<argument pos:start="63:23" pos:end="63:27"><expr pos:start="63:23" pos:end="63:27"><name pos:start="63:23" pos:end="63:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:61"><expr pos:start="65:9" pos:end="67:60"><call pos:start="65:9" pos:end="67:60"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="67:60">(<argument pos:start="65:16" pos:end="65:20"><expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">avctx</name></expr></argument>, <argument pos:start="65:23" pos:end="65:34"><expr pos:start="65:23" pos:end="65:34"><name pos:start="65:23" pos:end="65:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="67:16" pos:end="67:42"><expr pos:start="67:16" pos:end="67:42"><literal type="string" pos:start="67:16" pos:end="67:42">"FBIOGET_FSCREENINFO: %s\n"</literal></expr></argument>, <argument pos:start="67:45" pos:end="67:59"><expr pos:start="67:45" pos:end="67:59"><call pos:start="67:45" pos:end="67:59"><name pos:start="67:45" pos:end="67:52">strerror</name><argument_list pos:start="67:53" pos:end="67:59">(<argument pos:start="67:54" pos:end="67:58"><expr pos:start="67:54" pos:end="67:58"><name pos:start="67:54" pos:end="67:58">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:18">goto <name pos:start="69:14" pos:end="69:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:58"><expr pos:start="75:5" pos:end="75:57"><name pos:start="75:5" pos:end="75:11">pix_fmt</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:57"><name pos:start="75:15" pos:end="75:40">get_pixfmt_from_fb_varinfo</name><argument_list pos:start="75:41" pos:end="75:57">(<argument pos:start="75:42" pos:end="75:56"><expr pos:start="75:42" pos:end="75:56"><operator pos:start="75:42" pos:end="75:42">&amp;</operator><name pos:start="75:43" pos:end="75:56"><name pos:start="75:43" pos:end="75:47">fbdev</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:56">varinfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="87:5"><if pos:start="77:5" pos:end="87:5">if <condition pos:start="77:8" pos:end="77:35">(<expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:15">pix_fmt</name> <operator pos:start="77:17" pos:end="77:18">==</operator> <name pos:start="77:20" pos:end="77:34">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="77:37" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:18">

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:29"><name pos:start="79:15" pos:end="79:21">AVERROR</name><argument_list pos:start="79:22" pos:end="79:29">(<argument pos:start="79:23" pos:end="79:28"><expr pos:start="79:23" pos:end="79:28"><name pos:start="79:23" pos:end="79:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="83:60"><expr pos:start="81:9" pos:end="83:59"><call pos:start="81:9" pos:end="83:59"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="83:59">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="83:16" pos:end="83:58"><expr pos:start="83:16" pos:end="83:58"><literal type="string" pos:start="83:16" pos:end="83:58">"Framebuffer pixel format not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:18">goto <name pos:start="85:14" pos:end="85:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:49"><expr pos:start="91:5" pos:end="91:48"><name pos:start="91:5" pos:end="91:16"><name pos:start="91:5" pos:end="91:9">fbdev</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:16">width</name></name>           <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:48"><name pos:start="91:30" pos:end="91:34">fbdev</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:43">varinfo</name><operator pos:start="91:44" pos:end="91:44">.</operator><name pos:start="91:45" pos:end="91:48">xres</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:49"><expr pos:start="93:5" pos:end="93:48"><name pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:9">fbdev</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:17">height</name></name>          <operator pos:start="93:28" pos:end="93:28">=</operator> <name pos:start="93:30" pos:end="93:48"><name pos:start="93:30" pos:end="93:34">fbdev</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:43">varinfo</name><operator pos:start="93:44" pos:end="93:44">.</operator><name pos:start="93:45" pos:end="93:48">yres</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:70"><expr pos:start="95:5" pos:end="95:69"><name pos:start="95:5" pos:end="95:26"><name pos:start="95:5" pos:end="95:9">fbdev</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:26">bytes_per_pixel</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <operator pos:start="95:30" pos:end="95:30">(</operator><name pos:start="95:31" pos:end="95:59"><name pos:start="95:31" pos:end="95:35">fbdev</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:44">varinfo</name><operator pos:start="95:45" pos:end="95:45">.</operator><name pos:start="95:46" pos:end="95:59">bits_per_pixel</name></name> <operator pos:start="95:61" pos:end="95:61">+</operator> <literal type="number" pos:start="95:63" pos:end="95:63">7</literal><operator pos:start="95:64" pos:end="95:64">)</operator> <operator pos:start="95:66" pos:end="95:67">&gt;&gt;</operator> <literal type="number" pos:start="95:69" pos:end="95:69">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:67"><expr pos:start="97:5" pos:end="97:66"><name pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:9">fbdev</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:25">frame_linesize</name></name>  <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:41"><name pos:start="97:30" pos:end="97:34">fbdev</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:41">width</name></name> <operator pos:start="97:43" pos:end="97:43">*</operator> <name pos:start="97:45" pos:end="97:66"><name pos:start="97:45" pos:end="97:49">fbdev</name><operator pos:start="97:50" pos:end="97:51">-&gt;</operator><name pos:start="97:52" pos:end="97:66">bytes_per_pixel</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:67"><expr pos:start="99:5" pos:end="99:66"><name pos:start="99:5" pos:end="99:21"><name pos:start="99:5" pos:end="99:9">fbdev</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:21">frame_size</name></name>      <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:50"><name pos:start="99:30" pos:end="99:34">fbdev</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:50">frame_linesize</name></name> <operator pos:start="99:52" pos:end="99:52">*</operator> <name pos:start="99:54" pos:end="99:66"><name pos:start="99:54" pos:end="99:58">fbdev</name><operator pos:start="99:59" pos:end="99:60">-&gt;</operator><name pos:start="99:61" pos:end="99:66">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:44"><expr pos:start="101:5" pos:end="101:43"><name pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:9">fbdev</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:21">time_frame</name></name>      <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:43">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:91"><expr pos:start="103:5" pos:end="103:90"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:9">fbdev</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:15">data</name></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:90"><name pos:start="103:19" pos:end="103:22">mmap</name><argument_list pos:start="103:23" pos:end="103:90">(<argument pos:start="103:24" pos:end="103:27"><expr pos:start="103:24" pos:end="103:27"><name pos:start="103:24" pos:end="103:27">NULL</name></expr></argument>, <argument pos:start="103:30" pos:end="103:52"><expr pos:start="103:30" pos:end="103:52"><name pos:start="103:30" pos:end="103:52"><name pos:start="103:30" pos:end="103:34">fbdev</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:43">fixinfo</name><operator pos:start="103:44" pos:end="103:44">.</operator><name pos:start="103:45" pos:end="103:52">smem_len</name></name></expr></argument>, <argument pos:start="103:55" pos:end="103:63"><expr pos:start="103:55" pos:end="103:63"><name pos:start="103:55" pos:end="103:63">PROT_READ</name></expr></argument>, <argument pos:start="103:66" pos:end="103:75"><expr pos:start="103:66" pos:end="103:75"><name pos:start="103:66" pos:end="103:75">MAP_SHARED</name></expr></argument>, <argument pos:start="103:78" pos:end="103:86"><expr pos:start="103:78" pos:end="103:86"><name pos:start="103:78" pos:end="103:86"><name pos:start="103:78" pos:end="103:82">fbdev</name><operator pos:start="103:83" pos:end="103:84">-&gt;</operator><name pos:start="103:85" pos:end="103:86">fd</name></name></expr></argument>, <argument pos:start="103:89" pos:end="103:89"><expr pos:start="103:89" pos:end="103:89"><literal type="number" pos:start="103:89" pos:end="103:89">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="105:34">(<expr pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:13">fbdev</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:19">data</name></name> <operator pos:start="105:21" pos:end="105:22">==</operator> <name pos:start="105:24" pos:end="105:33">MAP_FAILED</name></expr>)</condition> <block pos:start="105:36" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:18">

        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:11">ret</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:28"><name pos:start="107:15" pos:end="107:21">AVERROR</name><argument_list pos:start="107:22" pos:end="107:28">(<argument pos:start="107:23" pos:end="107:27"><expr pos:start="107:23" pos:end="107:27"><name pos:start="107:23" pos:end="107:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:78"><expr pos:start="109:9" pos:end="109:77"><call pos:start="109:9" pos:end="109:77"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="109:77">(<argument pos:start="109:16" pos:end="109:20"><expr pos:start="109:16" pos:end="109:20"><name pos:start="109:16" pos:end="109:20">avctx</name></expr></argument>, <argument pos:start="109:23" pos:end="109:34"><expr pos:start="109:23" pos:end="109:34"><name pos:start="109:23" pos:end="109:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:37" pos:end="109:59"><expr pos:start="109:37" pos:end="109:59"><literal type="string" pos:start="109:37" pos:end="109:59">"Error in mmap(): %s\n"</literal></expr></argument>, <argument pos:start="109:62" pos:end="109:76"><expr pos:start="109:62" pos:end="109:76"><call pos:start="109:62" pos:end="109:76"><name pos:start="109:62" pos:end="109:69">strerror</name><argument_list pos:start="109:70" pos:end="109:76">(<argument pos:start="109:71" pos:end="109:75"><expr pos:start="109:71" pos:end="109:75"><name pos:start="109:71" pos:end="109:75">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:18">goto <name pos:start="111:14" pos:end="111:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:47"><expr pos:start="117:5" pos:end="117:46"><name pos:start="117:5" pos:end="117:25"><name pos:start="117:5" pos:end="117:6">st</name><operator pos:start="117:7" pos:end="117:8">-&gt;</operator><name pos:start="117:9" pos:end="117:13">codec</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:25">codec_type</name></name> <operator pos:start="117:27" pos:end="117:27">=</operator> <name pos:start="117:29" pos:end="117:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:49"><expr pos:start="119:5" pos:end="119:48"><name pos:start="119:5" pos:end="119:23"><name pos:start="119:5" pos:end="119:6">st</name><operator pos:start="119:7" pos:end="119:8">-&gt;</operator><name pos:start="119:9" pos:end="119:13">codec</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:23">codec_id</name></name>   <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:48">AV_CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:41"><expr pos:start="121:5" pos:end="121:40"><name pos:start="121:5" pos:end="121:20"><name pos:start="121:5" pos:end="121:6">st</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:13">codec</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:20">width</name></name>      <operator pos:start="121:27" pos:end="121:27">=</operator> <name pos:start="121:29" pos:end="121:40"><name pos:start="121:29" pos:end="121:33">fbdev</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:40">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:42"><expr pos:start="123:5" pos:end="123:41"><name pos:start="123:5" pos:end="123:21"><name pos:start="123:5" pos:end="123:6">st</name><operator pos:start="123:7" pos:end="123:8">-&gt;</operator><name pos:start="123:9" pos:end="123:13">codec</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:21">height</name></name>     <operator pos:start="123:27" pos:end="123:27">=</operator> <name pos:start="123:29" pos:end="123:41"><name pos:start="123:29" pos:end="123:33">fbdev</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:41">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:36"><expr pos:start="125:5" pos:end="125:35"><name pos:start="125:5" pos:end="125:22"><name pos:start="125:5" pos:end="125:6">st</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:13">codec</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:22">pix_fmt</name></name>    <operator pos:start="125:27" pos:end="125:27">=</operator> <name pos:start="125:29" pos:end="125:35">pix_fmt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:57"><expr pos:start="127:5" pos:end="127:56"><name pos:start="127:5" pos:end="127:24"><name pos:start="127:5" pos:end="127:6">st</name><operator pos:start="127:7" pos:end="127:8">-&gt;</operator><name pos:start="127:9" pos:end="127:13">codec</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:24">time_base</name></name>  <operator pos:start="127:27" pos:end="127:27">=</operator> <call pos:start="127:29" pos:end="127:56"><name pos:start="127:29" pos:end="127:36">av_inv_q</name><argument_list pos:start="127:37" pos:end="127:56">(<argument pos:start="127:38" pos:end="127:55"><expr pos:start="127:38" pos:end="127:55"><name pos:start="127:38" pos:end="127:55"><name pos:start="127:38" pos:end="127:42">fbdev</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:55">framerate_q</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="131:95"><expr pos:start="129:5" pos:end="131:94"><name pos:start="129:5" pos:end="129:23"><name pos:start="129:5" pos:end="129:6">st</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:13">codec</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:23">bit_rate</name></name>   <operator pos:start="129:27" pos:end="129:27">=</operator>

        <name pos:start="131:9" pos:end="131:20"><name pos:start="131:9" pos:end="131:13">fbdev</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:20">width</name></name> <operator pos:start="131:22" pos:end="131:22">*</operator> <name pos:start="131:24" pos:end="131:36"><name pos:start="131:24" pos:end="131:28">fbdev</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:36">height</name></name> <operator pos:start="131:38" pos:end="131:38">*</operator> <name pos:start="131:40" pos:end="131:61"><name pos:start="131:40" pos:end="131:44">fbdev</name><operator pos:start="131:45" pos:end="131:46">-&gt;</operator><name pos:start="131:47" pos:end="131:61">bytes_per_pixel</name></name> <operator pos:start="131:63" pos:end="131:63">*</operator> <call pos:start="131:65" pos:end="131:90"><name pos:start="131:65" pos:end="131:70">av_q2d</name><argument_list pos:start="131:71" pos:end="131:90">(<argument pos:start="131:72" pos:end="131:89"><expr pos:start="131:72" pos:end="131:89"><name pos:start="131:72" pos:end="131:89"><name pos:start="131:72" pos:end="131:76">fbdev</name><operator pos:start="131:77" pos:end="131:78">-&gt;</operator><name pos:start="131:79" pos:end="131:89">framerate_q</name></name></expr></argument>)</argument_list></call> <operator pos:start="131:92" pos:end="131:92">*</operator> <literal type="number" pos:start="131:94" pos:end="131:94">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="145:32"><expr pos:start="135:5" pos:end="145:31"><call pos:start="135:5" pos:end="145:31"><name pos:start="135:5" pos:end="135:10">av_log</name><argument_list pos:start="135:11" pos:end="145:31">(<argument pos:start="135:12" pos:end="135:16"><expr pos:start="135:12" pos:end="135:16"><name pos:start="135:12" pos:end="135:16">avctx</name></expr></argument>, <argument pos:start="135:19" pos:end="135:29"><expr pos:start="135:19" pos:end="135:29"><name pos:start="135:19" pos:end="135:29">AV_LOG_INFO</name></expr></argument>,

           <argument pos:start="137:12" pos:end="137:63"><expr pos:start="137:12" pos:end="137:63"><literal type="string" pos:start="137:12" pos:end="137:63">"w:%d h:%d bpp:%d pixfmt:%s fps:%d/%d bit_rate:%d\n"</literal></expr></argument>,

           <argument pos:start="139:12" pos:end="139:23"><expr pos:start="139:12" pos:end="139:23"><name pos:start="139:12" pos:end="139:23"><name pos:start="139:12" pos:end="139:16">fbdev</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:23">width</name></name></expr></argument>, <argument pos:start="139:26" pos:end="139:38"><expr pos:start="139:26" pos:end="139:38"><name pos:start="139:26" pos:end="139:38"><name pos:start="139:26" pos:end="139:30">fbdev</name><operator pos:start="139:31" pos:end="139:32">-&gt;</operator><name pos:start="139:33" pos:end="139:38">height</name></name></expr></argument>, <argument pos:start="139:41" pos:end="139:69"><expr pos:start="139:41" pos:end="139:69"><name pos:start="139:41" pos:end="139:69"><name pos:start="139:41" pos:end="139:45">fbdev</name><operator pos:start="139:46" pos:end="139:47">-&gt;</operator><name pos:start="139:48" pos:end="139:54">varinfo</name><operator pos:start="139:55" pos:end="139:55">.</operator><name pos:start="139:56" pos:end="139:69">bits_per_pixel</name></name></expr></argument>,

           <argument pos:start="141:12" pos:end="141:39"><expr pos:start="141:12" pos:end="141:39"><call pos:start="141:12" pos:end="141:39"><name pos:start="141:12" pos:end="141:30">av_get_pix_fmt_name</name><argument_list pos:start="141:31" pos:end="141:39">(<argument pos:start="141:32" pos:end="141:38"><expr pos:start="141:32" pos:end="141:38"><name pos:start="141:32" pos:end="141:38">pix_fmt</name></expr></argument>)</argument_list></call></expr></argument>,

           <argument pos:start="143:12" pos:end="143:33"><expr pos:start="143:12" pos:end="143:33"><name pos:start="143:12" pos:end="143:33"><name pos:start="143:12" pos:end="143:16">fbdev</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:29">framerate_q</name><operator pos:start="143:30" pos:end="143:30">.</operator><name pos:start="143:31" pos:end="143:33">num</name></name></expr></argument>, <argument pos:start="143:36" pos:end="143:57"><expr pos:start="143:36" pos:end="143:57"><name pos:start="143:36" pos:end="143:57"><name pos:start="143:36" pos:end="143:40">fbdev</name><operator pos:start="143:41" pos:end="143:42">-&gt;</operator><name pos:start="143:43" pos:end="143:53">framerate_q</name><operator pos:start="143:54" pos:end="143:54">.</operator><name pos:start="143:55" pos:end="143:57">den</name></name></expr></argument>,

           <argument pos:start="145:12" pos:end="145:30"><expr pos:start="145:12" pos:end="145:30"><name pos:start="145:12" pos:end="145:30"><name pos:start="145:12" pos:end="145:13">st</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:20">codec</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:30">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="147:5" pos:end="147:13">return <expr pos:start="147:12" pos:end="147:12"><literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</return>



<label pos:start="151:1" pos:end="151:5"><name pos:start="151:1" pos:end="151:4">fail</name>:</label>

    <expr_stmt pos:start="153:5" pos:end="153:21"><expr pos:start="153:5" pos:end="153:20"><call pos:start="153:5" pos:end="153:20"><name pos:start="153:5" pos:end="153:9">close</name><argument_list pos:start="153:10" pos:end="153:20">(<argument pos:start="153:11" pos:end="153:19"><expr pos:start="153:11" pos:end="153:19"><name pos:start="153:11" pos:end="153:19"><name pos:start="153:11" pos:end="153:15">fbdev</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="155:5" pos:end="155:15">return <expr pos:start="155:12" pos:end="155:14"><name pos:start="155:12" pos:end="155:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
