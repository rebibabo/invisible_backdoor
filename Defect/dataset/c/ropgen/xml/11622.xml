<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11622.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">spapr_nvram_init</name><parameter_list pos:start="1:28" pos:end="1:48">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:42">VIOsPAPRDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">sPAPRNVRAM</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">nvram</name> <init pos:start="5:23" pos:end="5:44">= <expr pos:start="5:25" pos:end="5:44"><call pos:start="5:25" pos:end="5:44"><name pos:start="5:25" pos:end="5:39">VIO_SPAPR_NVRAM</name><argument_list pos:start="5:40" pos:end="5:44">(<argument pos:start="5:41" pos:end="5:43"><expr pos:start="5:41" pos:end="5:43"><name pos:start="5:41" pos:end="5:43">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="19:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:21">(<expr pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:13">nvram</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:20">drive</name></name></expr>)</condition> <block pos:start="9:23" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:51">

        <expr_stmt pos:start="11:9" pos:end="11:51"><expr pos:start="11:9" pos:end="11:50"><name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:13">nvram</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:19">size</name></name> <operator pos:start="11:21" pos:end="11:21">=</operator> <call pos:start="11:23" pos:end="11:50"><name pos:start="11:23" pos:end="11:36">bdrv_getlength</name><argument_list pos:start="11:37" pos:end="11:50">(<argument pos:start="11:38" pos:end="11:49"><expr pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:42">nvram</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:49">drive</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="19:5">else <block pos:start="13:12" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:44">

        <expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:13">nvram</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:19">size</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:40">DEFAULT_NVRAM_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:13">nvram</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">buf</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:43"><name pos:start="17:22" pos:end="17:30">g_malloc0</name><argument_list pos:start="17:31" pos:end="17:43">(<argument pos:start="17:32" pos:end="17:42"><expr pos:start="17:32" pos:end="17:42"><name pos:start="17:32" pos:end="17:42"><name pos:start="17:32" pos:end="17:36">nvram</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:42">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:73">(<expr pos:start="23:9" pos:end="23:72"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:14">nvram</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:20">size</name></name> <operator pos:start="23:22" pos:end="23:22">&lt;</operator> <name pos:start="23:24" pos:end="23:37">MIN_NVRAM_SIZE</name><operator pos:start="23:38" pos:end="23:38">)</operator> <operator pos:start="23:40" pos:end="23:41">||</operator> <operator pos:start="23:43" pos:end="23:43">(</operator><name pos:start="23:44" pos:end="23:54"><name pos:start="23:44" pos:end="23:48">nvram</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:54">size</name></name> <operator pos:start="23:56" pos:end="23:56">&gt;</operator> <name pos:start="23:58" pos:end="23:71">MAX_NVRAM_SIZE</name><operator pos:start="23:72" pos:end="23:72">)</operator></expr>)</condition> <block pos:start="23:75" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:18">

        <expr_stmt pos:start="25:9" pos:end="27:48"><expr pos:start="25:9" pos:end="27:47"><call pos:start="25:9" pos:end="27:47"><name pos:start="25:9" pos:end="25:15">fprintf</name><argument_list pos:start="25:16" pos:end="27:47">(<argument pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:22">stderr</name></expr></argument>, <argument pos:start="25:25" pos:end="25:79"><expr pos:start="25:25" pos:end="25:79"><literal type="string" pos:start="25:25" pos:end="25:79">"spapr-nvram must be between %d and %d bytes in size\n"</literal></expr></argument>,

                <argument pos:start="27:17" pos:end="27:30"><expr pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:30">MIN_NVRAM_SIZE</name></expr></argument>, <argument pos:start="27:33" pos:end="27:46"><expr pos:start="27:33" pos:end="27:46"><name pos:start="27:33" pos:end="27:46">MAX_NVRAM_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:75"><expr pos:start="35:5" pos:end="35:74"><call pos:start="35:5" pos:end="35:74"><name pos:start="35:5" pos:end="35:23">spapr_rtas_register</name><argument_list pos:start="35:24" pos:end="35:74">(<argument pos:start="35:25" pos:end="35:40"><expr pos:start="35:25" pos:end="35:40"><name pos:start="35:25" pos:end="35:40">RTAS_NVRAM_FETCH</name></expr></argument>, <argument pos:start="35:43" pos:end="35:55"><expr pos:start="35:43" pos:end="35:55"><literal type="string" pos:start="35:43" pos:end="35:55">"nvram-fetch"</literal></expr></argument>, <argument pos:start="35:58" pos:end="35:73"><expr pos:start="35:58" pos:end="35:73"><name pos:start="35:58" pos:end="35:73">rtas_nvram_fetch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:75"><expr pos:start="37:5" pos:end="37:74"><call pos:start="37:5" pos:end="37:74"><name pos:start="37:5" pos:end="37:23">spapr_rtas_register</name><argument_list pos:start="37:24" pos:end="37:74">(<argument pos:start="37:25" pos:end="37:40"><expr pos:start="37:25" pos:end="37:40"><name pos:start="37:25" pos:end="37:40">RTAS_NVRAM_STORE</name></expr></argument>, <argument pos:start="37:43" pos:end="37:55"><expr pos:start="37:43" pos:end="37:55"><literal type="string" pos:start="37:43" pos:end="37:55">"nvram-store"</literal></expr></argument>, <argument pos:start="37:58" pos:end="37:73"><expr pos:start="37:58" pos:end="37:73"><name pos:start="37:58" pos:end="37:73">rtas_nvram_store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
