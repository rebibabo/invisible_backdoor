<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4683.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">avconv_cleanup</name><parameter_list pos:start="1:27" pos:end="1:35">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:30"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="63:5">for <control pos:start="9:9" pos:end="9:41">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:36"><expr pos:start="9:17" pos:end="9:35"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:35">nb_filtergraphs</name></expr>;</condition> <incr pos:start="9:38" pos:end="9:40"><expr pos:start="9:38" pos:end="9:40"><name pos:start="9:38" pos:end="9:38">i</name><operator pos:start="9:39" pos:end="9:40">++</operator></expr></incr>)</control> <block pos:start="9:43" pos:end="63:5">{<block_content pos:start="11:9" pos:end="61:35">

        <decl_stmt pos:start="11:9" pos:end="11:42"><decl pos:start="11:9" pos:end="11:41"><type pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:19">FilterGraph</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">fg</name> <init pos:start="11:25" pos:end="11:41">= <expr pos:start="11:27" pos:end="11:41"><name pos:start="11:27" pos:end="11:41"><name pos:start="11:27" pos:end="11:38">filtergraphs</name><index pos:start="11:39" pos:end="11:41">[<expr pos:start="11:40" pos:end="11:40"><name pos:start="11:40" pos:end="11:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:40"><expr pos:start="13:9" pos:end="13:39"><call pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:27">avfilter_graph_free</name><argument_list pos:start="13:28" pos:end="13:39">(<argument pos:start="13:29" pos:end="13:38"><expr pos:start="13:29" pos:end="13:38"><operator pos:start="13:29" pos:end="13:29">&amp;</operator><name pos:start="13:30" pos:end="13:38"><name pos:start="13:30" pos:end="13:31">fg</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:38">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="15:9" pos:end="37:9">for <control pos:start="15:13" pos:end="15:43">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">j</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:38"><expr pos:start="15:21" pos:end="15:37"><name pos:start="15:21" pos:end="15:21">j</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:37"><name pos:start="15:25" pos:end="15:26">fg</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:37">nb_inputs</name></name></expr>;</condition> <incr pos:start="15:40" pos:end="15:42"><expr pos:start="15:40" pos:end="15:42"><name pos:start="15:40" pos:end="15:40">j</name><operator pos:start="15:41" pos:end="15:42">++</operator></expr></incr>)</control> <block pos:start="15:45" pos:end="37:9">{<block_content pos:start="17:13" pos:end="35:37">

            <while pos:start="17:13" pos:end="27:13">while <condition pos:start="17:19" pos:end="17:60">(<expr pos:start="17:20" pos:end="17:59"><call pos:start="17:20" pos:end="17:59"><name pos:start="17:20" pos:end="17:31">av_fifo_size</name><argument_list pos:start="17:32" pos:end="17:59">(<argument pos:start="17:33" pos:end="17:58"><expr pos:start="17:33" pos:end="17:58"><name pos:start="17:33" pos:end="17:45"><name pos:start="17:33" pos:end="17:34">fg</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:42">inputs</name><index pos:start="17:43" pos:end="17:45">[<expr pos:start="17:44" pos:end="17:44"><name pos:start="17:44" pos:end="17:44">j</name></expr>]</index></name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:58">frame_queue</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:62" pos:end="27:13">{<block_content pos:start="19:17" pos:end="25:38">

                <decl_stmt pos:start="19:17" pos:end="19:31"><decl pos:start="19:17" pos:end="19:30"><type pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:23">AVFrame</name> <modifier pos:start="19:25" pos:end="19:25">*</modifier></type><name pos:start="19:26" pos:end="19:30">frame</name></decl>;</decl_stmt>

                <expr_stmt pos:start="21:17" pos:end="23:58"><expr pos:start="21:17" pos:end="23:57"><call pos:start="21:17" pos:end="23:57"><name pos:start="21:17" pos:end="21:36">av_fifo_generic_read</name><argument_list pos:start="21:37" pos:end="23:57">(<argument pos:start="21:38" pos:end="21:63"><expr pos:start="21:38" pos:end="21:63"><name pos:start="21:38" pos:end="21:50"><name pos:start="21:38" pos:end="21:39">fg</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:47">inputs</name><index pos:start="21:48" pos:end="21:50">[<expr pos:start="21:49" pos:end="21:49"><name pos:start="21:49" pos:end="21:49">j</name></expr>]</index></name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:63">frame_queue</name></expr></argument>, <argument pos:start="21:66" pos:end="21:71"><expr pos:start="21:66" pos:end="21:71"><operator pos:start="21:66" pos:end="21:66">&amp;</operator><name pos:start="21:67" pos:end="21:71">frame</name></expr></argument>,

                                     <argument pos:start="23:38" pos:end="23:50"><expr pos:start="23:38" pos:end="23:50"><sizeof pos:start="23:38" pos:end="23:50">sizeof<argument_list pos:start="23:44" pos:end="23:50">(<argument pos:start="23:45" pos:end="23:49"><expr pos:start="23:45" pos:end="23:49"><name pos:start="23:45" pos:end="23:49">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="23:53" pos:end="23:56"><expr pos:start="23:53" pos:end="23:56"><name pos:start="23:53" pos:end="23:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:38"><expr pos:start="25:17" pos:end="25:37"><call pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:29">av_frame_free</name><argument_list pos:start="25:30" pos:end="25:37">(<argument pos:start="25:31" pos:end="25:36"><expr pos:start="25:31" pos:end="25:36"><operator pos:start="25:31" pos:end="25:31">&amp;</operator><name pos:start="25:32" pos:end="25:36">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="29:13" pos:end="29:53"><expr pos:start="29:13" pos:end="29:52"><call pos:start="29:13" pos:end="29:52"><name pos:start="29:13" pos:end="29:24">av_fifo_free</name><argument_list pos:start="29:25" pos:end="29:52">(<argument pos:start="29:26" pos:end="29:51"><expr pos:start="29:26" pos:end="29:51"><name pos:start="29:26" pos:end="29:38"><name pos:start="29:26" pos:end="29:27">fg</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:35">inputs</name><index pos:start="29:36" pos:end="29:38">[<expr pos:start="29:37" pos:end="29:37"><name pos:start="29:37" pos:end="29:37">j</name></expr>]</index></name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:51">frame_queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:59"><expr pos:start="31:13" pos:end="31:58"><call pos:start="31:13" pos:end="31:58"><name pos:start="31:13" pos:end="31:27">av_buffer_unref</name><argument_list pos:start="31:28" pos:end="31:58">(<argument pos:start="31:29" pos:end="31:57"><expr pos:start="31:29" pos:end="31:57"><operator pos:start="31:29" pos:end="31:29">&amp;</operator><name pos:start="31:30" pos:end="31:42"><name pos:start="31:30" pos:end="31:31">fg</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:39">inputs</name><index pos:start="31:40" pos:end="31:42">[<expr pos:start="31:41" pos:end="31:41"><name pos:start="31:41" pos:end="31:41">j</name></expr>]</index></name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:57">hw_frames_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><call pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:20">av_freep</name><argument_list pos:start="33:21" pos:end="33:42">(<argument pos:start="33:22" pos:end="33:41"><expr pos:start="33:22" pos:end="33:41"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:35"><name pos:start="33:23" pos:end="33:24">fg</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:32">inputs</name><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><name pos:start="33:34" pos:end="33:34">j</name></expr>]</index></name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:41">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:37"><expr pos:start="35:13" pos:end="35:36"><call pos:start="35:13" pos:end="35:36"><name pos:start="35:13" pos:end="35:20">av_freep</name><argument_list pos:start="35:21" pos:end="35:36">(<argument pos:start="35:22" pos:end="35:35"><expr pos:start="35:22" pos:end="35:35"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:24">fg</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:32">inputs</name><index pos:start="35:33" pos:end="35:35">[<expr pos:start="35:34" pos:end="35:34"><name pos:start="35:34" pos:end="35:34">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><call pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:16">av_freep</name><argument_list pos:start="39:17" pos:end="39:29">(<argument pos:start="39:18" pos:end="39:28"><expr pos:start="39:18" pos:end="39:28"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:28"><name pos:start="39:19" pos:end="39:20">fg</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:28">inputs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="41:9" pos:end="53:9">for <control pos:start="41:13" pos:end="41:44">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">j</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:39"><expr pos:start="41:21" pos:end="41:38"><name pos:start="41:21" pos:end="41:21">j</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <name pos:start="41:25" pos:end="41:38"><name pos:start="41:25" pos:end="41:26">fg</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:38">nb_outputs</name></name></expr>;</condition> <incr pos:start="41:41" pos:end="41:43"><expr pos:start="41:41" pos:end="41:43"><name pos:start="41:41" pos:end="41:41">j</name><operator pos:start="41:42" pos:end="41:43">++</operator></expr></incr>)</control> <block pos:start="41:46" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:38">

            <expr_stmt pos:start="43:13" pos:end="43:44"><expr pos:start="43:13" pos:end="43:43"><call pos:start="43:13" pos:end="43:43"><name pos:start="43:13" pos:end="43:20">av_freep</name><argument_list pos:start="43:21" pos:end="43:43">(<argument pos:start="43:22" pos:end="43:42"><expr pos:start="43:22" pos:end="43:42"><operator pos:start="43:22" pos:end="43:22">&amp;</operator><name pos:start="43:23" pos:end="43:36"><name pos:start="43:23" pos:end="43:24">fg</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:33">outputs</name><index pos:start="43:34" pos:end="43:36">[<expr pos:start="43:35" pos:end="43:35"><name pos:start="43:35" pos:end="43:35">j</name></expr>]</index></name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:42">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:47"><expr pos:start="45:13" pos:end="45:46"><call pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:20">av_freep</name><argument_list pos:start="45:21" pos:end="45:46">(<argument pos:start="45:22" pos:end="45:45"><expr pos:start="45:22" pos:end="45:45"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:36"><name pos:start="45:23" pos:end="45:24">fg</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:33">outputs</name><index pos:start="45:34" pos:end="45:36">[<expr pos:start="45:35" pos:end="45:35"><name pos:start="45:35" pos:end="45:35">j</name></expr>]</index></name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:45">formats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:55"><expr pos:start="47:13" pos:end="47:54"><call pos:start="47:13" pos:end="47:54"><name pos:start="47:13" pos:end="47:20">av_freep</name><argument_list pos:start="47:21" pos:end="47:54">(<argument pos:start="47:22" pos:end="47:53"><expr pos:start="47:22" pos:end="47:53"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:36"><name pos:start="47:23" pos:end="47:24">fg</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:33">outputs</name><index pos:start="47:34" pos:end="47:36">[<expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">j</name></expr>]</index></name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:53">channel_layouts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:52"><expr pos:start="49:13" pos:end="49:51"><call pos:start="49:13" pos:end="49:51"><name pos:start="49:13" pos:end="49:20">av_freep</name><argument_list pos:start="49:21" pos:end="49:51">(<argument pos:start="49:22" pos:end="49:50"><expr pos:start="49:22" pos:end="49:50"><operator pos:start="49:22" pos:end="49:22">&amp;</operator><name pos:start="49:23" pos:end="49:36"><name pos:start="49:23" pos:end="49:24">fg</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:33">outputs</name><index pos:start="49:34" pos:end="49:36">[<expr pos:start="49:35" pos:end="49:35"><name pos:start="49:35" pos:end="49:35">j</name></expr>]</index></name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:50">sample_rates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:38"><expr pos:start="51:13" pos:end="51:37"><call pos:start="51:13" pos:end="51:37"><name pos:start="51:13" pos:end="51:20">av_freep</name><argument_list pos:start="51:21" pos:end="51:37">(<argument pos:start="51:22" pos:end="51:36"><expr pos:start="51:22" pos:end="51:36"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:36"><name pos:start="51:23" pos:end="51:24">fg</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:33">outputs</name><index pos:start="51:34" pos:end="51:36">[<expr pos:start="51:35" pos:end="51:35"><name pos:start="51:35" pos:end="51:35">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><call pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:16">av_freep</name><argument_list pos:start="55:17" pos:end="55:30">(<argument pos:start="55:18" pos:end="55:29"><expr pos:start="55:18" pos:end="55:29"><operator pos:start="55:18" pos:end="55:18">&amp;</operator><name pos:start="55:19" pos:end="55:29"><name pos:start="55:19" pos:end="55:20">fg</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:29">outputs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><call pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:16">av_freep</name><argument_list pos:start="57:17" pos:end="57:33">(<argument pos:start="57:18" pos:end="57:32"><expr pos:start="57:18" pos:end="57:32"><operator pos:start="57:18" pos:end="57:18">&amp;</operator><name pos:start="57:19" pos:end="57:32"><name pos:start="57:19" pos:end="57:20">fg</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:32">graph_desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><call pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:16">av_freep</name><argument_list pos:start="61:17" pos:end="61:34">(<argument pos:start="61:18" pos:end="61:33"><expr pos:start="61:18" pos:end="61:33"><operator pos:start="61:18" pos:end="61:18">&amp;</operator><name pos:start="61:19" pos:end="61:33"><name pos:start="61:19" pos:end="61:30">filtergraphs</name><index pos:start="61:31" pos:end="61:33">[<expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="65:5" pos:end="65:28"><expr pos:start="65:5" pos:end="65:27"><call pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:12">av_freep</name><argument_list pos:start="65:13" pos:end="65:27">(<argument pos:start="65:14" pos:end="65:26"><expr pos:start="65:14" pos:end="65:26"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:26">filtergraphs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:21">/* close files */</comment>

    <for pos:start="71:5" pos:end="89:5">for <control pos:start="71:9" pos:end="71:41">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:36"><expr pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:35">nb_output_files</name></expr>;</condition> <incr pos:start="71:38" pos:end="71:40"><expr pos:start="71:38" pos:end="71:40"><name pos:start="71:38" pos:end="71:38">i</name><operator pos:start="71:39" pos:end="71:40">++</operator></expr></incr>)</control> <block pos:start="71:43" pos:end="89:5">{<block_content pos:start="73:9" pos:end="87:35">

        <decl_stmt pos:start="73:9" pos:end="73:41"><decl pos:start="73:9" pos:end="73:40"><type pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:18">OutputFile</name> <modifier pos:start="73:20" pos:end="73:20">*</modifier></type><name pos:start="73:21" pos:end="73:22">of</name> <init pos:start="73:24" pos:end="73:40">= <expr pos:start="73:26" pos:end="73:40"><name pos:start="73:26" pos:end="73:40"><name pos:start="73:26" pos:end="73:37">output_files</name><index pos:start="73:38" pos:end="73:40">[<expr pos:start="73:39" pos:end="73:39"><name pos:start="73:39" pos:end="73:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:37"><decl pos:start="75:9" pos:end="75:36"><type pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:23">AVFormatContext</name> <modifier pos:start="75:25" pos:end="75:25">*</modifier></type><name pos:start="75:26" pos:end="75:26">s</name> <init pos:start="75:28" pos:end="75:36">= <expr pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:31">of</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:36">ctx</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="77:9" pos:end="79:30"><if pos:start="77:9" pos:end="79:30">if <condition pos:start="77:12" pos:end="77:76">(<expr pos:start="77:13" pos:end="77:75"><name pos:start="77:13" pos:end="77:13">s</name> <operator pos:start="77:15" pos:end="77:16">&amp;&amp;</operator> <name pos:start="77:18" pos:end="77:27"><name pos:start="77:18" pos:end="77:18">s</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:27">oformat</name></name> <operator pos:start="77:29" pos:end="77:30">&amp;&amp;</operator> <operator pos:start="77:32" pos:end="77:32">!</operator><operator pos:start="77:33" pos:end="77:33">(</operator><name pos:start="77:34" pos:end="77:50"><name pos:start="77:34" pos:end="77:34">s</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:43">oformat</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:50">flags</name></name> <operator pos:start="77:52" pos:end="77:52">&amp;</operator> <name pos:start="77:54" pos:end="77:65">AVFMT_NOFILE</name><operator pos:start="77:66" pos:end="77:66">)</operator> <operator pos:start="77:68" pos:end="77:69">&amp;&amp;</operator> <name pos:start="77:71" pos:end="77:75"><name pos:start="77:71" pos:end="77:71">s</name><operator pos:start="77:72" pos:end="77:73">-&gt;</operator><name pos:start="77:74" pos:end="77:75">pb</name></name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:30"><block_content pos:start="79:13" pos:end="79:30">

            <expr_stmt pos:start="79:13" pos:end="79:30"><expr pos:start="79:13" pos:end="79:29"><call pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:22">avio_close</name><argument_list pos:start="79:23" pos:end="79:29">(<argument pos:start="79:24" pos:end="79:28"><expr pos:start="79:24" pos:end="79:28"><name pos:start="79:24" pos:end="79:28"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:28">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:33"><expr pos:start="81:9" pos:end="81:32"><call pos:start="81:9" pos:end="81:32"><name pos:start="81:9" pos:end="81:29">avformat_free_context</name><argument_list pos:start="81:30" pos:end="81:32">(<argument pos:start="81:31" pos:end="81:31"><expr pos:start="81:31" pos:end="81:31"><name pos:start="81:31" pos:end="81:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><call pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:20">av_dict_free</name><argument_list pos:start="83:21" pos:end="83:31">(<argument pos:start="83:22" pos:end="83:30"><expr pos:start="83:22" pos:end="83:30"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:30"><name pos:start="83:23" pos:end="83:24">of</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:30">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:35"><expr pos:start="87:9" pos:end="87:34"><call pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:16">av_freep</name><argument_list pos:start="87:17" pos:end="87:34">(<argument pos:start="87:18" pos:end="87:33"><expr pos:start="87:18" pos:end="87:33"><operator pos:start="87:18" pos:end="87:18">&amp;</operator><name pos:start="87:19" pos:end="87:33"><name pos:start="87:19" pos:end="87:30">output_files</name><index pos:start="87:31" pos:end="87:33">[<expr pos:start="87:32" pos:end="87:32"><name pos:start="87:32" pos:end="87:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="91:5" pos:end="145:5">for <control pos:start="91:9" pos:end="91:43">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:38"><expr pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <name pos:start="91:21" pos:end="91:37">nb_output_streams</name></expr>;</condition> <incr pos:start="91:40" pos:end="91:42"><expr pos:start="91:40" pos:end="91:42"><name pos:start="91:40" pos:end="91:40">i</name><operator pos:start="91:41" pos:end="91:42">++</operator></expr></incr>)</control> <block pos:start="91:45" pos:end="145:5">{<block_content pos:start="93:9" pos:end="143:37">

        <decl_stmt pos:start="93:9" pos:end="93:46"><decl pos:start="93:9" pos:end="93:45"><type pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:20">OutputStream</name> <modifier pos:start="93:22" pos:end="93:22">*</modifier></type><name pos:start="93:23" pos:end="93:25">ost</name> <init pos:start="93:27" pos:end="93:45">= <expr pos:start="93:29" pos:end="93:45"><name pos:start="93:29" pos:end="93:45"><name pos:start="93:29" pos:end="93:42">output_streams</name><index pos:start="93:43" pos:end="93:45">[<expr pos:start="93:44" pos:end="93:44"><name pos:start="93:44" pos:end="93:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <for pos:start="97:9" pos:end="99:42">for <control pos:start="97:13" pos:end="97:55">(<init pos:start="97:14" pos:end="97:19"><expr pos:start="97:14" pos:end="97:18"><name pos:start="97:14" pos:end="97:14">j</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="number" pos:start="97:18" pos:end="97:18">0</literal></expr>;</init> <condition pos:start="97:21" pos:end="97:50"><expr pos:start="97:21" pos:end="97:49"><name pos:start="97:21" pos:end="97:21">j</name> <operator pos:start="97:23" pos:end="97:23">&lt;</operator> <name pos:start="97:25" pos:end="97:49"><name pos:start="97:25" pos:end="97:27">ost</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:49">nb_bitstream_filters</name></name></expr>;</condition> <incr pos:start="97:52" pos:end="97:54"><expr pos:start="97:52" pos:end="97:54"><name pos:start="97:52" pos:end="97:52">j</name><operator pos:start="97:53" pos:end="97:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:13" pos:end="99:42"><block_content pos:start="99:13" pos:end="99:42">

            <expr_stmt pos:start="99:13" pos:end="99:42"><expr pos:start="99:13" pos:end="99:41"><call pos:start="99:13" pos:end="99:41"><name pos:start="99:13" pos:end="99:23">av_bsf_free</name><argument_list pos:start="99:24" pos:end="99:41">(<argument pos:start="99:25" pos:end="99:40"><expr pos:start="99:25" pos:end="99:40"><operator pos:start="99:25" pos:end="99:25">&amp;</operator><name pos:start="99:26" pos:end="99:40"><name pos:start="99:26" pos:end="99:28">ost</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:37">bsf_ctx</name><index pos:start="99:38" pos:end="99:40">[<expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="101:9" pos:end="101:32"><expr pos:start="101:9" pos:end="101:31"><call pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:16">av_freep</name><argument_list pos:start="101:17" pos:end="101:31">(<argument pos:start="101:18" pos:end="101:30"><expr pos:start="101:18" pos:end="101:30"><operator pos:start="101:18" pos:end="101:18">&amp;</operator><name pos:start="101:19" pos:end="101:30"><name pos:start="101:19" pos:end="101:21">ost</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:30">bsf_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:42"><expr pos:start="103:9" pos:end="103:41"><call pos:start="103:9" pos:end="103:41"><name pos:start="103:9" pos:end="103:16">av_freep</name><argument_list pos:start="103:17" pos:end="103:41">(<argument pos:start="103:18" pos:end="103:40"><expr pos:start="103:18" pos:end="103:40"><operator pos:start="103:18" pos:end="103:18">&amp;</operator><name pos:start="103:19" pos:end="103:40"><name pos:start="103:19" pos:end="103:21">ost</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:40">bitstream_filters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:44"><expr pos:start="107:9" pos:end="107:43"><call pos:start="107:9" pos:end="107:43"><name pos:start="107:9" pos:end="107:21">av_frame_free</name><argument_list pos:start="107:22" pos:end="107:43">(<argument pos:start="107:23" pos:end="107:42"><expr pos:start="107:23" pos:end="107:42"><operator pos:start="107:23" pos:end="107:23">&amp;</operator><name pos:start="107:24" pos:end="107:42"><name pos:start="107:24" pos:end="107:26">ost</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:42">filtered_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:37"><expr pos:start="111:9" pos:end="111:36"><call pos:start="111:9" pos:end="111:36"><name pos:start="111:9" pos:end="111:23">av_parser_close</name><argument_list pos:start="111:24" pos:end="111:36">(<argument pos:start="111:25" pos:end="111:35"><expr pos:start="111:25" pos:end="111:35"><name pos:start="111:25" pos:end="111:35"><name pos:start="111:25" pos:end="111:27">ost</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:35">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:49"><expr pos:start="113:9" pos:end="113:48"><call pos:start="113:9" pos:end="113:48"><name pos:start="113:9" pos:end="113:28">avcodec_free_context</name><argument_list pos:start="113:29" pos:end="113:48">(<argument pos:start="113:30" pos:end="113:47"><expr pos:start="113:30" pos:end="113:47"><operator pos:start="113:30" pos:end="113:30">&amp;</operator><name pos:start="113:31" pos:end="113:47"><name pos:start="113:31" pos:end="113:33">ost</name><operator pos:start="113:34" pos:end="113:35">-&gt;</operator><name pos:start="113:36" pos:end="113:47">parser_avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:41"><expr pos:start="117:9" pos:end="117:40"><call pos:start="117:9" pos:end="117:40"><name pos:start="117:9" pos:end="117:16">av_freep</name><argument_list pos:start="117:17" pos:end="117:40">(<argument pos:start="117:18" pos:end="117:39"><expr pos:start="117:18" pos:end="117:39"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:39"><name pos:start="117:19" pos:end="117:21">ost</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:39">forced_keyframes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:33"><expr pos:start="119:9" pos:end="119:32"><call pos:start="119:9" pos:end="119:32"><name pos:start="119:9" pos:end="119:16">av_freep</name><argument_list pos:start="119:17" pos:end="119:32">(<argument pos:start="119:18" pos:end="119:31"><expr pos:start="119:18" pos:end="119:31"><operator pos:start="119:18" pos:end="119:18">&amp;</operator><name pos:start="119:19" pos:end="119:31"><name pos:start="119:19" pos:end="119:21">ost</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:31">avfilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:39"><expr pos:start="121:9" pos:end="121:38"><call pos:start="121:9" pos:end="121:38"><name pos:start="121:9" pos:end="121:16">av_freep</name><argument_list pos:start="121:17" pos:end="121:38">(<argument pos:start="121:18" pos:end="121:37"><expr pos:start="121:18" pos:end="121:37"><operator pos:start="121:18" pos:end="121:18">&amp;</operator><name pos:start="121:19" pos:end="121:37"><name pos:start="121:19" pos:end="121:21">ost</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:37">logfile_prefix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:44"><expr pos:start="125:9" pos:end="125:43"><call pos:start="125:9" pos:end="125:43"><name pos:start="125:9" pos:end="125:28">avcodec_free_context</name><argument_list pos:start="125:29" pos:end="125:43">(<argument pos:start="125:30" pos:end="125:42"><expr pos:start="125:30" pos:end="125:42"><operator pos:start="125:30" pos:end="125:30">&amp;</operator><name pos:start="125:31" pos:end="125:42"><name pos:start="125:31" pos:end="125:33">ost</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:42">enc_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <while pos:start="129:9" pos:end="137:9">while <condition pos:start="129:15" pos:end="129:47">(<expr pos:start="129:16" pos:end="129:46"><call pos:start="129:16" pos:end="129:46"><name pos:start="129:16" pos:end="129:27">av_fifo_size</name><argument_list pos:start="129:28" pos:end="129:46">(<argument pos:start="129:29" pos:end="129:45"><expr pos:start="129:29" pos:end="129:45"><name pos:start="129:29" pos:end="129:45"><name pos:start="129:29" pos:end="129:31">ost</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:45">muxing_queue</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:49" pos:end="137:9">{<block_content pos:start="131:13" pos:end="135:34">

            <decl_stmt pos:start="131:13" pos:end="131:25"><decl pos:start="131:13" pos:end="131:24"><type pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:20">AVPacket</name></type> <name pos:start="131:22" pos:end="131:24">pkt</name></decl>;</decl_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:77"><expr pos:start="133:13" pos:end="133:76"><call pos:start="133:13" pos:end="133:76"><name pos:start="133:13" pos:end="133:32">av_fifo_generic_read</name><argument_list pos:start="133:33" pos:end="133:76">(<argument pos:start="133:34" pos:end="133:50"><expr pos:start="133:34" pos:end="133:50"><name pos:start="133:34" pos:end="133:50"><name pos:start="133:34" pos:end="133:36">ost</name><operator pos:start="133:37" pos:end="133:38">-&gt;</operator><name pos:start="133:39" pos:end="133:50">muxing_queue</name></name></expr></argument>, <argument pos:start="133:53" pos:end="133:56"><expr pos:start="133:53" pos:end="133:56"><operator pos:start="133:53" pos:end="133:53">&amp;</operator><name pos:start="133:54" pos:end="133:56">pkt</name></expr></argument>, <argument pos:start="133:59" pos:end="133:69"><expr pos:start="133:59" pos:end="133:69"><sizeof pos:start="133:59" pos:end="133:69">sizeof<argument_list pos:start="133:65" pos:end="133:69">(<argument pos:start="133:66" pos:end="133:68"><expr pos:start="133:66" pos:end="133:68"><name pos:start="133:66" pos:end="133:68">pkt</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="133:72" pos:end="133:75"><expr pos:start="133:72" pos:end="133:75"><name pos:start="133:72" pos:end="133:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:34"><expr pos:start="135:13" pos:end="135:33"><call pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:27">av_packet_unref</name><argument_list pos:start="135:28" pos:end="135:33">(<argument pos:start="135:29" pos:end="135:32"><expr pos:start="135:29" pos:end="135:32"><operator pos:start="135:29" pos:end="135:29">&amp;</operator><name pos:start="135:30" pos:end="135:32">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="139:9" pos:end="139:40"><expr pos:start="139:9" pos:end="139:39"><call pos:start="139:9" pos:end="139:39"><name pos:start="139:9" pos:end="139:20">av_fifo_free</name><argument_list pos:start="139:21" pos:end="139:39">(<argument pos:start="139:22" pos:end="139:38"><expr pos:start="139:22" pos:end="139:38"><name pos:start="139:22" pos:end="139:38"><name pos:start="139:22" pos:end="139:24">ost</name><operator pos:start="139:25" pos:end="139:26">-&gt;</operator><name pos:start="139:27" pos:end="139:38">muxing_queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:37"><expr pos:start="143:9" pos:end="143:36"><call pos:start="143:9" pos:end="143:36"><name pos:start="143:9" pos:end="143:16">av_freep</name><argument_list pos:start="143:17" pos:end="143:36">(<argument pos:start="143:18" pos:end="143:35"><expr pos:start="143:18" pos:end="143:35"><operator pos:start="143:18" pos:end="143:18">&amp;</operator><name pos:start="143:19" pos:end="143:35"><name pos:start="143:19" pos:end="143:32">output_streams</name><index pos:start="143:33" pos:end="143:35">[<expr pos:start="143:34" pos:end="143:34"><name pos:start="143:34" pos:end="143:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="147:5" pos:end="153:5">for <control pos:start="147:9" pos:end="147:40">(<init pos:start="147:10" pos:end="147:15"><expr pos:start="147:10" pos:end="147:14"><name pos:start="147:10" pos:end="147:10">i</name> <operator pos:start="147:12" pos:end="147:12">=</operator> <literal type="number" pos:start="147:14" pos:end="147:14">0</literal></expr>;</init> <condition pos:start="147:17" pos:end="147:35"><expr pos:start="147:17" pos:end="147:34"><name pos:start="147:17" pos:end="147:17">i</name> <operator pos:start="147:19" pos:end="147:19">&lt;</operator> <name pos:start="147:21" pos:end="147:34">nb_input_files</name></expr>;</condition> <incr pos:start="147:37" pos:end="147:39"><expr pos:start="147:37" pos:end="147:39"><name pos:start="147:37" pos:end="147:37">i</name><operator pos:start="147:38" pos:end="147:39">++</operator></expr></incr>)</control> <block pos:start="147:42" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:34">

        <expr_stmt pos:start="149:9" pos:end="149:51"><expr pos:start="149:9" pos:end="149:50"><call pos:start="149:9" pos:end="149:50"><name pos:start="149:9" pos:end="149:28">avformat_close_input</name><argument_list pos:start="149:29" pos:end="149:50">(<argument pos:start="149:30" pos:end="149:49"><expr pos:start="149:30" pos:end="149:49"><operator pos:start="149:30" pos:end="149:30">&amp;</operator><name pos:start="149:31" pos:end="149:44"><name pos:start="149:31" pos:end="149:41">input_files</name><index pos:start="149:42" pos:end="149:44">[<expr pos:start="149:43" pos:end="149:43"><name pos:start="149:43" pos:end="149:43">i</name></expr>]</index></name><operator pos:start="149:45" pos:end="149:46">-&gt;</operator><name pos:start="149:47" pos:end="149:49">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:34"><expr pos:start="151:9" pos:end="151:33"><call pos:start="151:9" pos:end="151:33"><name pos:start="151:9" pos:end="151:16">av_freep</name><argument_list pos:start="151:17" pos:end="151:33">(<argument pos:start="151:18" pos:end="151:32"><expr pos:start="151:18" pos:end="151:32"><operator pos:start="151:18" pos:end="151:18">&amp;</operator><name pos:start="151:19" pos:end="151:32"><name pos:start="151:19" pos:end="151:29">input_files</name><index pos:start="151:30" pos:end="151:32">[<expr pos:start="151:31" pos:end="151:31"><name pos:start="151:31" pos:end="151:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="155:5" pos:end="179:5">for <control pos:start="155:9" pos:end="155:42">(<init pos:start="155:10" pos:end="155:15"><expr pos:start="155:10" pos:end="155:14"><name pos:start="155:10" pos:end="155:10">i</name> <operator pos:start="155:12" pos:end="155:12">=</operator> <literal type="number" pos:start="155:14" pos:end="155:14">0</literal></expr>;</init> <condition pos:start="155:17" pos:end="155:37"><expr pos:start="155:17" pos:end="155:36"><name pos:start="155:17" pos:end="155:17">i</name> <operator pos:start="155:19" pos:end="155:19">&lt;</operator> <name pos:start="155:21" pos:end="155:36">nb_input_streams</name></expr>;</condition> <incr pos:start="155:39" pos:end="155:41"><expr pos:start="155:39" pos:end="155:41"><name pos:start="155:39" pos:end="155:39">i</name><operator pos:start="155:40" pos:end="155:41">++</operator></expr></incr>)</control> <block pos:start="155:44" pos:end="179:5">{<block_content pos:start="157:9" pos:end="177:36">

        <decl_stmt pos:start="157:9" pos:end="157:44"><decl pos:start="157:9" pos:end="157:43"><type pos:start="157:9" pos:end="157:21"><name pos:start="157:9" pos:end="157:19">InputStream</name> <modifier pos:start="157:21" pos:end="157:21">*</modifier></type><name pos:start="157:22" pos:end="157:24">ist</name> <init pos:start="157:26" pos:end="157:43">= <expr pos:start="157:28" pos:end="157:43"><name pos:start="157:28" pos:end="157:43"><name pos:start="157:28" pos:end="157:40">input_streams</name><index pos:start="157:41" pos:end="157:43">[<expr pos:start="157:42" pos:end="157:42"><name pos:start="157:42" pos:end="157:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:43"><expr pos:start="161:9" pos:end="161:42"><call pos:start="161:9" pos:end="161:42"><name pos:start="161:9" pos:end="161:21">av_frame_free</name><argument_list pos:start="161:22" pos:end="161:42">(<argument pos:start="161:23" pos:end="161:41"><expr pos:start="161:23" pos:end="161:41"><operator pos:start="161:23" pos:end="161:23">&amp;</operator><name pos:start="161:24" pos:end="161:41"><name pos:start="161:24" pos:end="161:26">ist</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:41">decoded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:42"><expr pos:start="163:9" pos:end="163:41"><call pos:start="163:9" pos:end="163:41"><name pos:start="163:9" pos:end="163:21">av_frame_free</name><argument_list pos:start="163:22" pos:end="163:41">(<argument pos:start="163:23" pos:end="163:40"><expr pos:start="163:23" pos:end="163:40"><operator pos:start="163:23" pos:end="163:23">&amp;</operator><name pos:start="163:24" pos:end="163:40"><name pos:start="163:24" pos:end="163:26">ist</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:40">filter_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:41"><expr pos:start="165:9" pos:end="165:40"><call pos:start="165:9" pos:end="165:40"><name pos:start="165:9" pos:end="165:20">av_dict_free</name><argument_list pos:start="165:21" pos:end="165:40">(<argument pos:start="165:22" pos:end="165:39"><expr pos:start="165:22" pos:end="165:39"><operator pos:start="165:22" pos:end="165:22">&amp;</operator><name pos:start="165:23" pos:end="165:39"><name pos:start="165:23" pos:end="165:25">ist</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:39">decoder_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:32"><expr pos:start="167:9" pos:end="167:31"><call pos:start="167:9" pos:end="167:31"><name pos:start="167:9" pos:end="167:16">av_freep</name><argument_list pos:start="167:17" pos:end="167:31">(<argument pos:start="167:18" pos:end="167:30"><expr pos:start="167:18" pos:end="167:30"><operator pos:start="167:18" pos:end="167:18">&amp;</operator><name pos:start="167:19" pos:end="167:30"><name pos:start="167:19" pos:end="167:21">ist</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:30">filters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:39"><expr pos:start="169:9" pos:end="169:38"><call pos:start="169:9" pos:end="169:38"><name pos:start="169:9" pos:end="169:16">av_freep</name><argument_list pos:start="169:17" pos:end="169:38">(<argument pos:start="169:18" pos:end="169:37"><expr pos:start="169:18" pos:end="169:37"><operator pos:start="169:18" pos:end="169:18">&amp;</operator><name pos:start="169:19" pos:end="169:37"><name pos:start="169:19" pos:end="169:21">ist</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:37">hwaccel_device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="173:9" pos:end="173:44"><expr pos:start="173:9" pos:end="173:43"><call pos:start="173:9" pos:end="173:43"><name pos:start="173:9" pos:end="173:28">avcodec_free_context</name><argument_list pos:start="173:29" pos:end="173:43">(<argument pos:start="173:30" pos:end="173:42"><expr pos:start="173:30" pos:end="173:42"><operator pos:start="173:30" pos:end="173:30">&amp;</operator><name pos:start="173:31" pos:end="173:42"><name pos:start="173:31" pos:end="173:33">ist</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:42">dec_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="177:9" pos:end="177:36"><expr pos:start="177:9" pos:end="177:35"><call pos:start="177:9" pos:end="177:35"><name pos:start="177:9" pos:end="177:16">av_freep</name><argument_list pos:start="177:17" pos:end="177:35">(<argument pos:start="177:18" pos:end="177:34"><expr pos:start="177:18" pos:end="177:34"><operator pos:start="177:18" pos:end="177:18">&amp;</operator><name pos:start="177:19" pos:end="177:34"><name pos:start="177:19" pos:end="177:31">input_streams</name><index pos:start="177:32" pos:end="177:34">[<expr pos:start="177:33" pos:end="177:33"><name pos:start="177:33" pos:end="177:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="183:5" pos:end="185:28"><if pos:start="183:5" pos:end="185:28">if <condition pos:start="183:8" pos:end="183:20">(<expr pos:start="183:9" pos:end="183:19"><name pos:start="183:9" pos:end="183:19">vstats_file</name></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:28"><block_content pos:start="185:9" pos:end="185:28">

        <expr_stmt pos:start="185:9" pos:end="185:28"><expr pos:start="185:9" pos:end="185:27"><call pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:14">fclose</name><argument_list pos:start="185:15" pos:end="185:27">(<argument pos:start="185:16" pos:end="185:26"><expr pos:start="185:16" pos:end="185:26"><name pos:start="185:16" pos:end="185:26">vstats_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:29"><expr pos:start="187:5" pos:end="187:28"><call pos:start="187:5" pos:end="187:28"><name pos:start="187:5" pos:end="187:11">av_free</name><argument_list pos:start="187:12" pos:end="187:28">(<argument pos:start="187:13" pos:end="187:27"><expr pos:start="187:13" pos:end="187:27"><name pos:start="187:13" pos:end="187:27">vstats_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:29"><expr pos:start="191:5" pos:end="191:28"><call pos:start="191:5" pos:end="191:28"><name pos:start="191:5" pos:end="191:12">av_freep</name><argument_list pos:start="191:13" pos:end="191:28">(<argument pos:start="191:14" pos:end="191:27"><expr pos:start="191:14" pos:end="191:27"><operator pos:start="191:14" pos:end="191:14">&amp;</operator><name pos:start="191:15" pos:end="191:27">input_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:27"><expr pos:start="193:5" pos:end="193:26"><call pos:start="193:5" pos:end="193:26"><name pos:start="193:5" pos:end="193:12">av_freep</name><argument_list pos:start="193:13" pos:end="193:26">(<argument pos:start="193:14" pos:end="193:25"><expr pos:start="193:14" pos:end="193:25"><operator pos:start="193:14" pos:end="193:14">&amp;</operator><name pos:start="193:15" pos:end="193:25">input_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:30"><expr pos:start="195:5" pos:end="195:29"><call pos:start="195:5" pos:end="195:29"><name pos:start="195:5" pos:end="195:12">av_freep</name><argument_list pos:start="195:13" pos:end="195:29">(<argument pos:start="195:14" pos:end="195:28"><expr pos:start="195:14" pos:end="195:28"><operator pos:start="195:14" pos:end="195:14">&amp;</operator><name pos:start="195:15" pos:end="195:28">output_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:28"><expr pos:start="197:5" pos:end="197:27"><call pos:start="197:5" pos:end="197:27"><name pos:start="197:5" pos:end="197:12">av_freep</name><argument_list pos:start="197:13" pos:end="197:27">(<argument pos:start="197:14" pos:end="197:26"><expr pos:start="197:14" pos:end="197:26"><operator pos:start="197:14" pos:end="197:14">&amp;</operator><name pos:start="197:15" pos:end="197:26">output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:18"><expr pos:start="201:5" pos:end="201:17"><call pos:start="201:5" pos:end="201:17"><name pos:start="201:5" pos:end="201:15">uninit_opts</name><argument_list pos:start="201:16" pos:end="201:17">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:30"><expr pos:start="205:5" pos:end="205:29"><call pos:start="205:5" pos:end="205:29"><name pos:start="205:5" pos:end="205:27">avformat_network_deinit</name><argument_list pos:start="205:28" pos:end="205:29">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="209:5" pos:end="217:5"><if pos:start="209:5" pos:end="217:5">if <condition pos:start="209:8" pos:end="209:25">(<expr pos:start="209:9" pos:end="209:24"><name pos:start="209:9" pos:end="209:24">received_sigterm</name></expr>)</condition> <block pos:start="209:27" pos:end="217:5">{<block_content pos:start="211:9" pos:end="215:19">

        <expr_stmt pos:start="211:9" pos:end="213:39"><expr pos:start="211:9" pos:end="213:38"><call pos:start="211:9" pos:end="213:38"><name pos:start="211:9" pos:end="211:14">av_log</name><argument_list pos:start="211:15" pos:end="213:38">(<argument pos:start="211:16" pos:end="211:19"><expr pos:start="211:16" pos:end="211:19"><name pos:start="211:16" pos:end="211:19">NULL</name></expr></argument>, <argument pos:start="211:22" pos:end="211:32"><expr pos:start="211:22" pos:end="211:32"><name pos:start="211:22" pos:end="211:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="211:35" pos:end="211:70"><expr pos:start="211:35" pos:end="211:70"><literal type="string" pos:start="211:35" pos:end="211:70">"Received signal %d: terminating.\n"</literal></expr></argument>,

               <argument pos:start="213:16" pos:end="213:37"><expr pos:start="213:16" pos:end="213:37"><operator pos:start="213:16" pos:end="213:16">(</operator><name pos:start="213:17" pos:end="213:19">int</name><operator pos:start="213:20" pos:end="213:20">)</operator> <name pos:start="213:22" pos:end="213:37">received_sigterm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:19"><expr pos:start="215:9" pos:end="215:18"><call pos:start="215:9" pos:end="215:18"><name pos:start="215:9" pos:end="215:12">exit</name> <argument_list pos:start="215:14" pos:end="215:18">(<argument pos:start="215:15" pos:end="215:17"><expr pos:start="215:15" pos:end="215:17"><literal type="number" pos:start="215:15" pos:end="215:17">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
