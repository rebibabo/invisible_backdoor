<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22632.c" pos:tabs="8"><function pos:start="1:1" pos:end="257:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:42">ff_hevc_deblocking_boundary_strengths</name><parameter_list pos:start="1:43" pos:end="3:63">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:54">HEVCContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:65"><decl pos:start="1:60" pos:end="1:65"><type pos:start="1:60" pos:end="1:65"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:65">x0</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:73"><decl pos:start="1:68" pos:end="1:73"><type pos:start="1:68" pos:end="1:73"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:73">y0</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:62"><decl pos:start="3:44" pos:end="3:62"><type pos:start="3:44" pos:end="3:62"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:62">log2_trafo_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="257:1">{<block_content pos:start="7:5" pos:end="255:9">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">HEVCLocalContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">lc</name> <init pos:start="7:26" pos:end="7:37">= <expr pos:start="7:28" pos:end="7:37"><operator pos:start="7:28" pos:end="7:28">&amp;</operator><name pos:start="7:29" pos:end="7:37"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:37">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">MvField</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">tab_mvf</name>     <init pos:start="9:26" pos:end="9:42">= <expr pos:start="9:28" pos:end="9:42"><name pos:start="9:28" pos:end="9:42"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">ref</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:42">tab_mvf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:24">log2_min_pu_size</name> <init pos:start="11:26" pos:end="11:51">= <expr pos:start="11:28" pos:end="11:51"><name pos:start="11:28" pos:end="11:51"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:33">sps</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:51">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:24">log2_min_tu_size</name> <init pos:start="13:26" pos:end="13:51">= <expr pos:start="13:28" pos:end="13:51"><name pos:start="13:28" pos:end="13:51"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:33">sps</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:51">log2_min_tb_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:48"><decl pos:start="15:5" pos:end="15:47"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">min_pu_width</name>     <init pos:start="15:26" pos:end="15:47">= <expr pos:start="15:28" pos:end="15:47"><name pos:start="15:28" pos:end="15:47"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:33">sps</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:47">min_pu_width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:47"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">min_tu_width</name>     <init pos:start="17:26" pos:end="17:47">= <expr pos:start="17:28" pos:end="17:47"><name pos:start="17:28" pos:end="17:47"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:33">sps</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:47">min_tb_width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="21:62"><decl pos:start="19:5" pos:end="21:61"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">is_intra</name> <init pos:start="19:18" pos:end="21:61">= <expr pos:start="19:20" pos:end="21:61"><name pos:start="19:20" pos:end="21:52"><name pos:start="19:20" pos:end="19:26">tab_mvf</name><index pos:start="19:27" pos:end="21:52">[<expr pos:start="19:28" pos:end="21:51"><operator pos:start="19:28" pos:end="19:28">(</operator><name pos:start="19:29" pos:end="19:30">y0</name> <operator pos:start="19:32" pos:end="19:33">&gt;&gt;</operator> <name pos:start="19:35" pos:end="19:50">log2_min_pu_size</name><operator pos:start="19:51" pos:end="19:51">)</operator> <operator pos:start="19:53" pos:end="19:53">*</operator> <name pos:start="19:55" pos:end="19:66">min_pu_width</name> <operator pos:start="19:68" pos:end="19:68">+</operator>

                           <operator pos:start="21:28" pos:end="21:28">(</operator><name pos:start="21:29" pos:end="21:30">x0</name> <operator pos:start="21:32" pos:end="21:33">&gt;&gt;</operator> <name pos:start="21:35" pos:end="21:50">log2_min_pu_size</name><operator pos:start="21:51" pos:end="21:51">)</operator></expr>]</index></name><operator pos:start="21:53" pos:end="21:53">.</operator><name pos:start="21:54" pos:end="21:61">is_intra</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">j</name></decl>, <decl pos:start="23:15" pos:end="23:16"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:16">bs</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="85:5"><if pos:start="27:5" pos:end="85:5">if <condition pos:start="27:8" pos:end="27:32">(<expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:10">y0</name> <operator pos:start="27:12" pos:end="27:12">&gt;</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal> <operator pos:start="27:16" pos:end="27:17">&amp;&amp;</operator> <operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:21">y0</name> <operator pos:start="27:23" pos:end="27:23">&amp;</operator> <literal type="number" pos:start="27:25" pos:end="27:25">7</literal><operator pos:start="27:26" pos:end="27:26">)</operator> <operator pos:start="27:28" pos:end="27:29">==</operator> <literal type="number" pos:start="27:31" pos:end="27:31">0</literal></expr>)</condition> <block pos:start="27:34" pos:end="85:5">{<block_content pos:start="29:9" pos:end="83:9">

        <decl_stmt pos:start="29:9" pos:end="29:49"><decl pos:start="29:9" pos:end="29:48"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:17">yp_pu</name> <init pos:start="29:19" pos:end="29:48">= <expr pos:start="29:21" pos:end="29:48"><operator pos:start="29:21" pos:end="29:21">(</operator><name pos:start="29:22" pos:end="29:23">y0</name> <operator pos:start="29:25" pos:end="29:25">-</operator> <literal type="number" pos:start="29:27" pos:end="29:27">1</literal><operator pos:start="29:28" pos:end="29:28">)</operator> <operator pos:start="29:30" pos:end="29:31">&gt;&gt;</operator> <name pos:start="29:33" pos:end="29:48">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:49"><decl pos:start="31:9" pos:end="31:48"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:17">yq_pu</name> <init pos:start="31:19" pos:end="31:48">=  <expr pos:start="31:22" pos:end="31:48"><name pos:start="31:22" pos:end="31:23">y0</name>      <operator pos:start="31:30" pos:end="31:31">&gt;&gt;</operator> <name pos:start="31:33" pos:end="31:48">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:49"><decl pos:start="33:9" pos:end="33:48"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:17">yp_tu</name> <init pos:start="33:19" pos:end="33:48">= <expr pos:start="33:21" pos:end="33:48"><operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:23">y0</name> <operator pos:start="33:25" pos:end="33:25">-</operator> <literal type="number" pos:start="33:27" pos:end="33:27">1</literal><operator pos:start="33:28" pos:end="33:28">)</operator> <operator pos:start="33:30" pos:end="33:31">&gt;&gt;</operator> <name pos:start="33:33" pos:end="33:48">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:49"><decl pos:start="35:9" pos:end="35:48"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:17">yq_tu</name> <init pos:start="35:19" pos:end="35:48">=  <expr pos:start="35:22" pos:end="35:48"><name pos:start="35:22" pos:end="35:23">y0</name>      <operator pos:start="35:30" pos:end="35:31">&gt;&gt;</operator> <name pos:start="35:33" pos:end="35:48">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>



        <for pos:start="39:9" pos:end="83:9">for <control pos:start="39:13" pos:end="39:55">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">i</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:47"><expr pos:start="39:21" pos:end="39:46"><name pos:start="39:21" pos:end="39:21">i</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <operator pos:start="39:25" pos:end="39:25">(</operator><literal type="number" pos:start="39:26" pos:end="39:26">1</literal> <operator pos:start="39:28" pos:end="39:29">&lt;&lt;</operator> <name pos:start="39:31" pos:end="39:45">log2_trafo_size</name><operator pos:start="39:46" pos:end="39:46">)</operator></expr>;</condition> <incr pos:start="39:49" pos:end="39:54"><expr pos:start="39:49" pos:end="39:54"><name pos:start="39:49" pos:end="39:49">i</name> <operator pos:start="39:51" pos:end="39:52">+=</operator> <literal type="number" pos:start="39:54" pos:end="39:54">4</literal></expr></incr>)</control> <block pos:start="39:57" pos:end="83:9">{<block_content pos:start="41:13" pos:end="81:74">

            <decl_stmt pos:start="41:13" pos:end="41:52"><decl pos:start="41:13" pos:end="41:51"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:20">x_pu</name> <init pos:start="41:22" pos:end="41:51">= <expr pos:start="41:24" pos:end="41:51"><operator pos:start="41:24" pos:end="41:24">(</operator><name pos:start="41:25" pos:end="41:26">x0</name> <operator pos:start="41:28" pos:end="41:28">+</operator> <name pos:start="41:30" pos:end="41:30">i</name><operator pos:start="41:31" pos:end="41:31">)</operator> <operator pos:start="41:33" pos:end="41:34">&gt;&gt;</operator> <name pos:start="41:36" pos:end="41:51">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:52"><decl pos:start="43:13" pos:end="43:51"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:20">x_tu</name> <init pos:start="43:22" pos:end="43:51">= <expr pos:start="43:24" pos:end="43:51"><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:26">x0</name> <operator pos:start="43:28" pos:end="43:28">+</operator> <name pos:start="43:30" pos:end="43:30">i</name><operator pos:start="43:31" pos:end="43:31">)</operator> <operator pos:start="43:33" pos:end="43:34">&gt;&gt;</operator> <name pos:start="43:36" pos:end="43:51">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:66"><decl pos:start="45:13" pos:end="45:65"><type pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:19">MvField</name> <modifier pos:start="45:21" pos:end="45:21">*</modifier></type><name pos:start="45:22" pos:end="45:24">top</name>  <init pos:start="45:27" pos:end="45:65">= <expr pos:start="45:29" pos:end="45:65"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:65"><name pos:start="45:30" pos:end="45:36">tab_mvf</name><index pos:start="45:37" pos:end="45:65">[<expr pos:start="45:38" pos:end="45:64"><name pos:start="45:38" pos:end="45:42">yp_pu</name> <operator pos:start="45:44" pos:end="45:44">*</operator> <name pos:start="45:46" pos:end="45:57">min_pu_width</name> <operator pos:start="45:59" pos:end="45:59">+</operator> <name pos:start="45:61" pos:end="45:64">x_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:66"><decl pos:start="47:13" pos:end="47:65"><type pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:19">MvField</name> <modifier pos:start="47:21" pos:end="47:21">*</modifier></type><name pos:start="47:22" pos:end="47:25">curr</name> <init pos:start="47:27" pos:end="47:65">= <expr pos:start="47:29" pos:end="47:65"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:65"><name pos:start="47:30" pos:end="47:36">tab_mvf</name><index pos:start="47:37" pos:end="47:65">[<expr pos:start="47:38" pos:end="47:64"><name pos:start="47:38" pos:end="47:42">yq_pu</name> <operator pos:start="47:44" pos:end="47:44">*</operator> <name pos:start="47:46" pos:end="47:57">min_pu_width</name> <operator pos:start="47:59" pos:end="47:59">+</operator> <name pos:start="47:61" pos:end="47:64">x_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:77"><decl pos:start="49:13" pos:end="49:76"><type pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:19">uint8_t</name></type> <name pos:start="49:21" pos:end="49:32">top_cbf_luma</name>  <init pos:start="49:35" pos:end="49:76">= <expr pos:start="49:37" pos:end="49:76"><name pos:start="49:37" pos:end="49:76"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:47">cbf_luma</name><index pos:start="49:48" pos:end="49:76">[<expr pos:start="49:49" pos:end="49:75"><name pos:start="49:49" pos:end="49:53">yp_tu</name> <operator pos:start="49:55" pos:end="49:55">*</operator> <name pos:start="49:57" pos:end="49:68">min_tu_width</name> <operator pos:start="49:70" pos:end="49:70">+</operator> <name pos:start="49:72" pos:end="49:75">x_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:77"><decl pos:start="51:13" pos:end="51:76"><type pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:19">uint8_t</name></type> <name pos:start="51:21" pos:end="51:33">curr_cbf_luma</name> <init pos:start="51:35" pos:end="51:76">= <expr pos:start="51:37" pos:end="51:76"><name pos:start="51:37" pos:end="51:76"><name pos:start="51:37" pos:end="51:37">s</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:47">cbf_luma</name><index pos:start="51:48" pos:end="51:76">[<expr pos:start="51:49" pos:end="51:75"><name pos:start="51:49" pos:end="51:53">yq_tu</name> <operator pos:start="51:55" pos:end="51:55">*</operator> <name pos:start="51:57" pos:end="51:68">min_tu_width</name> <operator pos:start="51:70" pos:end="51:70">+</operator> <name pos:start="51:72" pos:end="51:75">x_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="55:78"><decl pos:start="53:13" pos:end="55:77"><type pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:22">RefPicList</name> <modifier pos:start="53:24" pos:end="53:24">*</modifier></type><name pos:start="53:25" pos:end="53:38">top_refPicList</name> <init pos:start="53:40" pos:end="55:77">= <expr pos:start="53:42" pos:end="55:77"><call pos:start="53:42" pos:end="55:77"><name pos:start="53:42" pos:end="53:61">ff_hevc_get_ref_list</name><argument_list pos:start="53:62" pos:end="55:77">(<argument pos:start="53:63" pos:end="53:63"><expr pos:start="53:63" pos:end="53:63"><name pos:start="53:63" pos:end="53:63">s</name></expr></argument>, <argument pos:start="53:66" pos:end="53:71"><expr pos:start="53:66" pos:end="53:71"><name pos:start="53:66" pos:end="53:71"><name pos:start="53:66" pos:end="53:66">s</name><operator pos:start="53:67" pos:end="53:68">-&gt;</operator><name pos:start="53:69" pos:end="53:71">ref</name></name></expr></argument>,

                                                              <argument pos:start="55:63" pos:end="55:68"><expr pos:start="55:63" pos:end="55:68"><name pos:start="55:63" pos:end="55:64">x0</name> <operator pos:start="55:66" pos:end="55:66">+</operator> <name pos:start="55:68" pos:end="55:68">i</name></expr></argument>, <argument pos:start="55:71" pos:end="55:76"><expr pos:start="55:71" pos:end="55:76"><name pos:start="55:71" pos:end="55:72">y0</name> <operator pos:start="55:74" pos:end="55:74">-</operator> <literal type="number" pos:start="55:76" pos:end="55:76">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="59:13" pos:end="61:73"><expr pos:start="59:13" pos:end="61:72"><name pos:start="59:13" pos:end="59:14">bs</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <call pos:start="59:18" pos:end="61:72"><name pos:start="59:18" pos:end="59:34">boundary_strength</name><argument_list pos:start="59:35" pos:end="61:72">(<argument pos:start="59:36" pos:end="59:36"><expr pos:start="59:36" pos:end="59:36"><name pos:start="59:36" pos:end="59:36">s</name></expr></argument>, <argument pos:start="59:39" pos:end="59:42"><expr pos:start="59:39" pos:end="59:42"><name pos:start="59:39" pos:end="59:42">curr</name></expr></argument>, <argument pos:start="59:45" pos:end="59:57"><expr pos:start="59:45" pos:end="59:57"><name pos:start="59:45" pos:end="59:57">curr_cbf_luma</name></expr></argument>,

                                   <argument pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:38">top</name></expr></argument>, <argument pos:start="61:41" pos:end="61:52"><expr pos:start="61:41" pos:end="61:52"><name pos:start="61:41" pos:end="61:52">top_cbf_luma</name></expr></argument>, <argument pos:start="61:55" pos:end="61:68"><expr pos:start="61:55" pos:end="61:68"><name pos:start="61:55" pos:end="61:68">top_refPicList</name></expr></argument>, <argument pos:start="61:71" pos:end="61:71"><expr pos:start="61:71" pos:end="61:71"><literal type="number" pos:start="61:71" pos:end="61:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="77:23"><if pos:start="63:13" pos:end="69:23">if <condition pos:start="63:16" pos:end="67:57">(<expr pos:start="63:17" pos:end="67:56"><operator pos:start="63:17" pos:end="63:17">!</operator><name pos:start="63:18" pos:end="63:67"><name pos:start="63:18" pos:end="63:18">s</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:22">sh</name><operator pos:start="63:23" pos:end="63:23">.</operator><name pos:start="63:24" pos:end="63:67">slice_loop_filter_across_slices_enabled_flag</name></name> <operator pos:start="63:69" pos:end="63:70">&amp;&amp;</operator>

                <name pos:start="65:17" pos:end="65:34"><name pos:start="65:17" pos:end="65:18">lc</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:34">boundary_flags</name></name> <operator pos:start="65:36" pos:end="65:36">&amp;</operator> <name pos:start="65:38" pos:end="65:57">BOUNDARY_UPPER_SLICE</name> <operator pos:start="65:59" pos:end="65:60">&amp;&amp;</operator>

                <operator pos:start="67:17" pos:end="67:17">(</operator><name pos:start="67:18" pos:end="67:19">y0</name> <operator pos:start="67:21" pos:end="67:21">%</operator> <operator pos:start="67:23" pos:end="67:23">(</operator><literal type="number" pos:start="67:24" pos:end="67:24">1</literal> <operator pos:start="67:26" pos:end="67:27">&lt;&lt;</operator> <name pos:start="67:29" pos:end="67:49"><name pos:start="67:29" pos:end="67:29">s</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:34">sps</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:49">log2_ctb_size</name></name><operator pos:start="67:50" pos:end="67:50">)</operator><operator pos:start="67:51" pos:end="67:51">)</operator> <operator pos:start="67:53" pos:end="67:54">==</operator> <literal type="number" pos:start="67:56" pos:end="67:56">0</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:23"><block_content pos:start="69:17" pos:end="69:23">

                <expr_stmt pos:start="69:17" pos:end="69:23"><expr pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:18">bs</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="71:13" pos:end="77:23">else if <condition pos:start="71:21" pos:end="75:62">(<expr pos:start="71:22" pos:end="75:61"><operator pos:start="71:22" pos:end="71:22">!</operator><name pos:start="71:23" pos:end="71:67"><name pos:start="71:23" pos:end="71:23">s</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:28">pps</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:67">loop_filter_across_tiles_enabled_flag</name></name> <operator pos:start="71:69" pos:end="71:70">&amp;&amp;</operator>

                     <name pos:start="73:22" pos:end="73:39"><name pos:start="73:22" pos:end="73:23">lc</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:39">boundary_flags</name></name> <operator pos:start="73:41" pos:end="73:41">&amp;</operator> <name pos:start="73:43" pos:end="73:61">BOUNDARY_UPPER_TILE</name> <operator pos:start="73:63" pos:end="73:64">&amp;&amp;</operator>

                     <operator pos:start="75:22" pos:end="75:22">(</operator><name pos:start="75:23" pos:end="75:24">y0</name> <operator pos:start="75:26" pos:end="75:26">%</operator> <operator pos:start="75:28" pos:end="75:28">(</operator><literal type="number" pos:start="75:29" pos:end="75:29">1</literal> <operator pos:start="75:31" pos:end="75:32">&lt;&lt;</operator> <name pos:start="75:34" pos:end="75:54"><name pos:start="75:34" pos:end="75:34">s</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:39">sps</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:54">log2_ctb_size</name></name><operator pos:start="75:55" pos:end="75:55">)</operator><operator pos:start="75:56" pos:end="75:56">)</operator> <operator pos:start="75:58" pos:end="75:59">==</operator> <literal type="number" pos:start="75:61" pos:end="75:61">0</literal></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:23"><block_content pos:start="77:17" pos:end="77:23">

                <expr_stmt pos:start="77:17" pos:end="77:23"><expr pos:start="77:17" pos:end="77:22"><name pos:start="77:17" pos:end="77:18">bs</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="79:13" pos:end="81:74"><if pos:start="79:13" pos:end="81:74">if <condition pos:start="79:16" pos:end="79:19">(<expr pos:start="79:17" pos:end="79:18"><name pos:start="79:17" pos:end="79:18">bs</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:74"><block_content pos:start="81:17" pos:end="81:74">

                <expr_stmt pos:start="81:17" pos:end="81:74"><expr pos:start="81:17" pos:end="81:73"><name pos:start="81:17" pos:end="81:68"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:32">horizontal_bs</name><index pos:start="81:33" pos:end="81:68">[<expr pos:start="81:34" pos:end="81:67"><operator pos:start="81:34" pos:end="81:34">(</operator><operator pos:start="81:35" pos:end="81:35">(</operator><name pos:start="81:36" pos:end="81:37">x0</name> <operator pos:start="81:39" pos:end="81:39">+</operator> <name pos:start="81:41" pos:end="81:41">i</name><operator pos:start="81:42" pos:end="81:42">)</operator> <operator pos:start="81:44" pos:end="81:44">+</operator> <name pos:start="81:46" pos:end="81:47">y0</name> <operator pos:start="81:49" pos:end="81:49">*</operator> <name pos:start="81:51" pos:end="81:61"><name pos:start="81:51" pos:end="81:51">s</name><operator pos:start="81:52" pos:end="81:53">-&gt;</operator><name pos:start="81:54" pos:end="81:61">bs_width</name></name><operator pos:start="81:62" pos:end="81:62">)</operator> <operator pos:start="81:64" pos:end="81:65">&gt;&gt;</operator> <literal type="number" pos:start="81:67" pos:end="81:67">2</literal></expr>]</index></name> <operator pos:start="81:70" pos:end="81:70">=</operator> <name pos:start="81:72" pos:end="81:73">bs</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="89:5" pos:end="89:50">// bs for TU internal horizontal PU boundaries</comment>

    <if_stmt pos:start="91:5" pos:end="137:9"><if pos:start="91:5" pos:end="137:9">if <condition pos:start="91:8" pos:end="91:64">(<expr pos:start="91:9" pos:end="91:63"><name pos:start="91:9" pos:end="91:23">log2_trafo_size</name> <operator pos:start="91:25" pos:end="91:25">&gt;</operator> <name pos:start="91:27" pos:end="91:50"><name pos:start="91:27" pos:end="91:27">s</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:32">sps</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:50">log2_min_pu_size</name></name> <operator pos:start="91:52" pos:end="91:53">&amp;&amp;</operator> <operator pos:start="91:55" pos:end="91:55">!</operator><name pos:start="91:56" pos:end="91:63">is_intra</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="137:9"><block_content pos:start="93:9" pos:end="137:9">

        <for pos:start="93:9" pos:end="137:9">for <control pos:start="93:13" pos:end="93:55">(<init pos:start="93:14" pos:end="93:19"><expr pos:start="93:14" pos:end="93:18"><name pos:start="93:14" pos:end="93:14">j</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">8</literal></expr>;</init> <condition pos:start="93:21" pos:end="93:47"><expr pos:start="93:21" pos:end="93:46"><name pos:start="93:21" pos:end="93:21">j</name> <operator pos:start="93:23" pos:end="93:23">&lt;</operator> <operator pos:start="93:25" pos:end="93:25">(</operator><literal type="number" pos:start="93:26" pos:end="93:26">1</literal> <operator pos:start="93:28" pos:end="93:29">&lt;&lt;</operator> <name pos:start="93:31" pos:end="93:45">log2_trafo_size</name><operator pos:start="93:46" pos:end="93:46">)</operator></expr>;</condition> <incr pos:start="93:49" pos:end="93:54"><expr pos:start="93:49" pos:end="93:54"><name pos:start="93:49" pos:end="93:49">j</name> <operator pos:start="93:51" pos:end="93:52">+=</operator> <literal type="number" pos:start="93:54" pos:end="93:54">8</literal></expr></incr>)</control> <block pos:start="93:57" pos:end="137:9">{<block_content pos:start="95:13" pos:end="135:13">

            <decl_stmt pos:start="95:13" pos:end="95:57"><decl pos:start="95:13" pos:end="95:56"><type pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:15">int</name></type> <name pos:start="95:17" pos:end="95:21">yp_pu</name> <init pos:start="95:23" pos:end="95:56">= <expr pos:start="95:25" pos:end="95:56"><operator pos:start="95:25" pos:end="95:25">(</operator><name pos:start="95:26" pos:end="95:27">y0</name> <operator pos:start="95:29" pos:end="95:29">+</operator> <name pos:start="95:31" pos:end="95:31">j</name> <operator pos:start="95:33" pos:end="95:33">-</operator> <literal type="number" pos:start="95:35" pos:end="95:35">1</literal><operator pos:start="95:36" pos:end="95:36">)</operator> <operator pos:start="95:38" pos:end="95:39">&gt;&gt;</operator> <name pos:start="95:41" pos:end="95:56">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="97:13" pos:end="97:57"><decl pos:start="97:13" pos:end="97:56"><type pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">int</name></type> <name pos:start="97:17" pos:end="97:21">yq_pu</name> <init pos:start="97:23" pos:end="97:56">= <expr pos:start="97:25" pos:end="97:56"><operator pos:start="97:25" pos:end="97:25">(</operator><name pos:start="97:26" pos:end="97:27">y0</name> <operator pos:start="97:29" pos:end="97:29">+</operator> <name pos:start="97:31" pos:end="97:31">j</name><operator pos:start="97:32" pos:end="97:32">)</operator>     <operator pos:start="97:38" pos:end="97:39">&gt;&gt;</operator> <name pos:start="97:41" pos:end="97:56">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="99:13" pos:end="99:57"><decl pos:start="99:13" pos:end="99:56"><type pos:start="99:13" pos:end="99:15"><name pos:start="99:13" pos:end="99:15">int</name></type> <name pos:start="99:17" pos:end="99:21">yp_tu</name> <init pos:start="99:23" pos:end="99:56">= <expr pos:start="99:25" pos:end="99:56"><operator pos:start="99:25" pos:end="99:25">(</operator><name pos:start="99:26" pos:end="99:27">y0</name> <operator pos:start="99:29" pos:end="99:29">+</operator> <name pos:start="99:31" pos:end="99:31">j</name> <operator pos:start="99:33" pos:end="99:33">-</operator> <literal type="number" pos:start="99:35" pos:end="99:35">1</literal><operator pos:start="99:36" pos:end="99:36">)</operator> <operator pos:start="99:38" pos:end="99:39">&gt;&gt;</operator> <name pos:start="99:41" pos:end="99:56">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="101:13" pos:end="101:57"><decl pos:start="101:13" pos:end="101:56"><type pos:start="101:13" pos:end="101:15"><name pos:start="101:13" pos:end="101:15">int</name></type> <name pos:start="101:17" pos:end="101:21">yq_tu</name> <init pos:start="101:23" pos:end="101:56">= <expr pos:start="101:25" pos:end="101:56"><operator pos:start="101:25" pos:end="101:25">(</operator><name pos:start="101:26" pos:end="101:27">y0</name> <operator pos:start="101:29" pos:end="101:29">+</operator> <name pos:start="101:31" pos:end="101:31">j</name><operator pos:start="101:32" pos:end="101:32">)</operator>     <operator pos:start="101:38" pos:end="101:39">&gt;&gt;</operator> <name pos:start="101:41" pos:end="101:56">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>



            <for pos:start="105:13" pos:end="135:13">for <control pos:start="105:17" pos:end="105:59">(<init pos:start="105:18" pos:end="105:23"><expr pos:start="105:18" pos:end="105:22"><name pos:start="105:18" pos:end="105:18">i</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>;</init> <condition pos:start="105:25" pos:end="105:51"><expr pos:start="105:25" pos:end="105:50"><name pos:start="105:25" pos:end="105:25">i</name> <operator pos:start="105:27" pos:end="105:27">&lt;</operator> <operator pos:start="105:29" pos:end="105:29">(</operator><literal type="number" pos:start="105:30" pos:end="105:30">1</literal> <operator pos:start="105:32" pos:end="105:33">&lt;&lt;</operator> <name pos:start="105:35" pos:end="105:49">log2_trafo_size</name><operator pos:start="105:50" pos:end="105:50">)</operator></expr>;</condition> <incr pos:start="105:53" pos:end="105:58"><expr pos:start="105:53" pos:end="105:58"><name pos:start="105:53" pos:end="105:53">i</name> <operator pos:start="105:55" pos:end="105:56">+=</operator> <literal type="number" pos:start="105:58" pos:end="105:58">4</literal></expr></incr>)</control> <block pos:start="105:61" pos:end="135:13">{<block_content pos:start="107:17" pos:end="133:84">

                <decl_stmt pos:start="107:17" pos:end="107:56"><decl pos:start="107:17" pos:end="107:55"><type pos:start="107:17" pos:end="107:19"><name pos:start="107:17" pos:end="107:19">int</name></type> <name pos:start="107:21" pos:end="107:24">x_pu</name> <init pos:start="107:26" pos:end="107:55">= <expr pos:start="107:28" pos:end="107:55"><operator pos:start="107:28" pos:end="107:28">(</operator><name pos:start="107:29" pos:end="107:30">x0</name> <operator pos:start="107:32" pos:end="107:32">+</operator> <name pos:start="107:34" pos:end="107:34">i</name><operator pos:start="107:35" pos:end="107:35">)</operator> <operator pos:start="107:37" pos:end="107:38">&gt;&gt;</operator> <name pos:start="107:40" pos:end="107:55">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="109:17" pos:end="109:56"><decl pos:start="109:17" pos:end="109:55"><type pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:19">int</name></type> <name pos:start="109:21" pos:end="109:24">x_tu</name> <init pos:start="109:26" pos:end="109:55">= <expr pos:start="109:28" pos:end="109:55"><operator pos:start="109:28" pos:end="109:28">(</operator><name pos:start="109:29" pos:end="109:30">x0</name> <operator pos:start="109:32" pos:end="109:32">+</operator> <name pos:start="109:34" pos:end="109:34">i</name><operator pos:start="109:35" pos:end="109:35">)</operator> <operator pos:start="109:37" pos:end="109:38">&gt;&gt;</operator> <name pos:start="109:40" pos:end="109:55">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="111:17" pos:end="111:70"><decl pos:start="111:17" pos:end="111:69"><type pos:start="111:17" pos:end="111:25"><name pos:start="111:17" pos:end="111:23">MvField</name> <modifier pos:start="111:25" pos:end="111:25">*</modifier></type><name pos:start="111:26" pos:end="111:28">top</name>  <init pos:start="111:31" pos:end="111:69">= <expr pos:start="111:33" pos:end="111:69"><operator pos:start="111:33" pos:end="111:33">&amp;</operator><name pos:start="111:34" pos:end="111:69"><name pos:start="111:34" pos:end="111:40">tab_mvf</name><index pos:start="111:41" pos:end="111:69">[<expr pos:start="111:42" pos:end="111:68"><name pos:start="111:42" pos:end="111:46">yp_pu</name> <operator pos:start="111:48" pos:end="111:48">*</operator> <name pos:start="111:50" pos:end="111:61">min_pu_width</name> <operator pos:start="111:63" pos:end="111:63">+</operator> <name pos:start="111:65" pos:end="111:68">x_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="113:17" pos:end="113:70"><decl pos:start="113:17" pos:end="113:69"><type pos:start="113:17" pos:end="113:25"><name pos:start="113:17" pos:end="113:23">MvField</name> <modifier pos:start="113:25" pos:end="113:25">*</modifier></type><name pos:start="113:26" pos:end="113:29">curr</name> <init pos:start="113:31" pos:end="113:69">= <expr pos:start="113:33" pos:end="113:69"><operator pos:start="113:33" pos:end="113:33">&amp;</operator><name pos:start="113:34" pos:end="113:69"><name pos:start="113:34" pos:end="113:40">tab_mvf</name><index pos:start="113:41" pos:end="113:69">[<expr pos:start="113:42" pos:end="113:68"><name pos:start="113:42" pos:end="113:46">yq_pu</name> <operator pos:start="113:48" pos:end="113:48">*</operator> <name pos:start="113:50" pos:end="113:61">min_pu_width</name> <operator pos:start="113:63" pos:end="113:63">+</operator> <name pos:start="113:65" pos:end="113:68">x_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="115:17" pos:end="115:81"><decl pos:start="115:17" pos:end="115:80"><type pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:23">uint8_t</name></type> <name pos:start="115:25" pos:end="115:36">top_cbf_luma</name>  <init pos:start="115:39" pos:end="115:80">= <expr pos:start="115:41" pos:end="115:80"><name pos:start="115:41" pos:end="115:80"><name pos:start="115:41" pos:end="115:41">s</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:51">cbf_luma</name><index pos:start="115:52" pos:end="115:80">[<expr pos:start="115:53" pos:end="115:79"><name pos:start="115:53" pos:end="115:57">yp_tu</name> <operator pos:start="115:59" pos:end="115:59">*</operator> <name pos:start="115:61" pos:end="115:72">min_tu_width</name> <operator pos:start="115:74" pos:end="115:74">+</operator> <name pos:start="115:76" pos:end="115:79">x_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="117:17" pos:end="117:81"><decl pos:start="117:17" pos:end="117:80"><type pos:start="117:17" pos:end="117:23"><name pos:start="117:17" pos:end="117:23">uint8_t</name></type> <name pos:start="117:25" pos:end="117:37">curr_cbf_luma</name> <init pos:start="117:39" pos:end="117:80">= <expr pos:start="117:41" pos:end="117:80"><name pos:start="117:41" pos:end="117:80"><name pos:start="117:41" pos:end="117:41">s</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:51">cbf_luma</name><index pos:start="117:52" pos:end="117:80">[<expr pos:start="117:53" pos:end="117:79"><name pos:start="117:53" pos:end="117:57">yq_tu</name> <operator pos:start="117:59" pos:end="117:59">*</operator> <name pos:start="117:61" pos:end="117:72">min_tu_width</name> <operator pos:start="117:74" pos:end="117:74">+</operator> <name pos:start="117:76" pos:end="117:79">x_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="119:17" pos:end="123:78"><decl pos:start="119:17" pos:end="123:77"><type pos:start="119:17" pos:end="119:28"><name pos:start="119:17" pos:end="119:26">RefPicList</name> <modifier pos:start="119:28" pos:end="119:28">*</modifier></type><name pos:start="119:29" pos:end="119:42">top_refPicList</name> <init pos:start="119:44" pos:end="123:77">= <expr pos:start="119:46" pos:end="123:77"><call pos:start="119:46" pos:end="123:77"><name pos:start="119:46" pos:end="119:65">ff_hevc_get_ref_list</name><argument_list pos:start="119:66" pos:end="123:77">(<argument pos:start="119:67" pos:end="119:67"><expr pos:start="119:67" pos:end="119:67"><name pos:start="119:67" pos:end="119:67">s</name></expr></argument>, <argument pos:start="119:70" pos:end="119:75"><expr pos:start="119:70" pos:end="119:75"><name pos:start="119:70" pos:end="119:75"><name pos:start="119:70" pos:end="119:70">s</name><operator pos:start="119:71" pos:end="119:72">-&gt;</operator><name pos:start="119:73" pos:end="119:75">ref</name></name></expr></argument>,

                                                                  <argument pos:start="121:67" pos:end="121:72"><expr pos:start="121:67" pos:end="121:72"><name pos:start="121:67" pos:end="121:68">x0</name> <operator pos:start="121:70" pos:end="121:70">+</operator> <name pos:start="121:72" pos:end="121:72">i</name></expr></argument>,

                                                                  <argument pos:start="123:67" pos:end="123:76"><expr pos:start="123:67" pos:end="123:76"><name pos:start="123:67" pos:end="123:68">y0</name> <operator pos:start="123:70" pos:end="123:70">+</operator> <name pos:start="123:72" pos:end="123:72">j</name> <operator pos:start="123:74" pos:end="123:74">-</operator> <literal type="number" pos:start="123:76" pos:end="123:76">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="127:17" pos:end="129:77"><expr pos:start="127:17" pos:end="129:76"><name pos:start="127:17" pos:end="127:18">bs</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <call pos:start="127:22" pos:end="129:76"><name pos:start="127:22" pos:end="127:38">boundary_strength</name><argument_list pos:start="127:39" pos:end="129:76">(<argument pos:start="127:40" pos:end="127:40"><expr pos:start="127:40" pos:end="127:40"><name pos:start="127:40" pos:end="127:40">s</name></expr></argument>, <argument pos:start="127:43" pos:end="127:46"><expr pos:start="127:43" pos:end="127:46"><name pos:start="127:43" pos:end="127:46">curr</name></expr></argument>, <argument pos:start="127:49" pos:end="127:61"><expr pos:start="127:49" pos:end="127:61"><name pos:start="127:49" pos:end="127:61">curr_cbf_luma</name></expr></argument>,

                                       <argument pos:start="129:40" pos:end="129:42"><expr pos:start="129:40" pos:end="129:42"><name pos:start="129:40" pos:end="129:42">top</name></expr></argument>, <argument pos:start="129:45" pos:end="129:56"><expr pos:start="129:45" pos:end="129:56"><name pos:start="129:45" pos:end="129:56">top_cbf_luma</name></expr></argument>, <argument pos:start="129:59" pos:end="129:72"><expr pos:start="129:59" pos:end="129:72"><name pos:start="129:59" pos:end="129:72">top_refPicList</name></expr></argument>, <argument pos:start="129:75" pos:end="129:75"><expr pos:start="129:75" pos:end="129:75"><literal type="number" pos:start="129:75" pos:end="129:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="131:17" pos:end="133:84"><if pos:start="131:17" pos:end="133:84">if <condition pos:start="131:20" pos:end="131:23">(<expr pos:start="131:21" pos:end="131:22"><name pos:start="131:21" pos:end="131:22">bs</name></expr>)</condition><block type="pseudo" pos:start="133:21" pos:end="133:84"><block_content pos:start="133:21" pos:end="133:84">

                    <expr_stmt pos:start="133:21" pos:end="133:84"><expr pos:start="133:21" pos:end="133:83"><name pos:start="133:21" pos:end="133:78"><name pos:start="133:21" pos:end="133:21">s</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:36">horizontal_bs</name><index pos:start="133:37" pos:end="133:78">[<expr pos:start="133:38" pos:end="133:77"><operator pos:start="133:38" pos:end="133:38">(</operator><operator pos:start="133:39" pos:end="133:39">(</operator><name pos:start="133:40" pos:end="133:41">x0</name> <operator pos:start="133:43" pos:end="133:43">+</operator> <name pos:start="133:45" pos:end="133:45">i</name><operator pos:start="133:46" pos:end="133:46">)</operator> <operator pos:start="133:48" pos:end="133:48">+</operator> <operator pos:start="133:50" pos:end="133:50">(</operator><name pos:start="133:51" pos:end="133:52">y0</name> <operator pos:start="133:54" pos:end="133:54">+</operator> <name pos:start="133:56" pos:end="133:56">j</name><operator pos:start="133:57" pos:end="133:57">)</operator> <operator pos:start="133:59" pos:end="133:59">*</operator> <name pos:start="133:61" pos:end="133:71"><name pos:start="133:61" pos:end="133:61">s</name><operator pos:start="133:62" pos:end="133:63">-&gt;</operator><name pos:start="133:64" pos:end="133:71">bs_width</name></name><operator pos:start="133:72" pos:end="133:72">)</operator> <operator pos:start="133:74" pos:end="133:75">&gt;&gt;</operator> <literal type="number" pos:start="133:77" pos:end="133:77">2</literal></expr>]</index></name> <operator pos:start="133:80" pos:end="133:80">=</operator> <name pos:start="133:82" pos:end="133:83">bs</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="line" pos:start="141:5" pos:end="141:36">// bs for vertical TU boundaries</comment>

    <if_stmt pos:start="143:5" pos:end="203:5"><if pos:start="143:5" pos:end="203:5">if <condition pos:start="143:8" pos:end="143:32">(<expr pos:start="143:9" pos:end="143:31"><name pos:start="143:9" pos:end="143:10">x0</name> <operator pos:start="143:12" pos:end="143:12">&gt;</operator> <literal type="number" pos:start="143:14" pos:end="143:14">0</literal> <operator pos:start="143:16" pos:end="143:17">&amp;&amp;</operator> <operator pos:start="143:19" pos:end="143:19">(</operator><name pos:start="143:20" pos:end="143:21">x0</name> <operator pos:start="143:23" pos:end="143:23">&amp;</operator> <literal type="number" pos:start="143:25" pos:end="143:25">7</literal><operator pos:start="143:26" pos:end="143:26">)</operator> <operator pos:start="143:28" pos:end="143:29">==</operator> <literal type="number" pos:start="143:31" pos:end="143:31">0</literal></expr>)</condition> <block pos:start="143:34" pos:end="203:5">{<block_content pos:start="145:9" pos:end="201:9">

        <decl_stmt pos:start="145:9" pos:end="145:49"><decl pos:start="145:9" pos:end="145:48"><type pos:start="145:9" pos:end="145:11"><name pos:start="145:9" pos:end="145:11">int</name></type> <name pos:start="145:13" pos:end="145:17">xp_pu</name> <init pos:start="145:19" pos:end="145:48">= <expr pos:start="145:21" pos:end="145:48"><operator pos:start="145:21" pos:end="145:21">(</operator><name pos:start="145:22" pos:end="145:23">x0</name> <operator pos:start="145:25" pos:end="145:25">-</operator> <literal type="number" pos:start="145:27" pos:end="145:27">1</literal><operator pos:start="145:28" pos:end="145:28">)</operator> <operator pos:start="145:30" pos:end="145:31">&gt;&gt;</operator> <name pos:start="145:33" pos:end="145:48">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="147:9" pos:end="147:49"><decl pos:start="147:9" pos:end="147:48"><type pos:start="147:9" pos:end="147:11"><name pos:start="147:9" pos:end="147:11">int</name></type> <name pos:start="147:13" pos:end="147:17">xq_pu</name> <init pos:start="147:19" pos:end="147:48">=  <expr pos:start="147:22" pos:end="147:48"><name pos:start="147:22" pos:end="147:23">x0</name>      <operator pos:start="147:30" pos:end="147:31">&gt;&gt;</operator> <name pos:start="147:33" pos:end="147:48">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="149:9" pos:end="149:49"><decl pos:start="149:9" pos:end="149:48"><type pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">int</name></type> <name pos:start="149:13" pos:end="149:17">xp_tu</name> <init pos:start="149:19" pos:end="149:48">= <expr pos:start="149:21" pos:end="149:48"><operator pos:start="149:21" pos:end="149:21">(</operator><name pos:start="149:22" pos:end="149:23">x0</name> <operator pos:start="149:25" pos:end="149:25">-</operator> <literal type="number" pos:start="149:27" pos:end="149:27">1</literal><operator pos:start="149:28" pos:end="149:28">)</operator> <operator pos:start="149:30" pos:end="149:31">&gt;&gt;</operator> <name pos:start="149:33" pos:end="149:48">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="151:9" pos:end="151:49"><decl pos:start="151:9" pos:end="151:48"><type pos:start="151:9" pos:end="151:11"><name pos:start="151:9" pos:end="151:11">int</name></type> <name pos:start="151:13" pos:end="151:17">xq_tu</name> <init pos:start="151:19" pos:end="151:48">=  <expr pos:start="151:22" pos:end="151:48"><name pos:start="151:22" pos:end="151:23">x0</name>      <operator pos:start="151:30" pos:end="151:31">&gt;&gt;</operator> <name pos:start="151:33" pos:end="151:48">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>



        <for pos:start="155:9" pos:end="201:9">for <control pos:start="155:13" pos:end="155:55">(<init pos:start="155:14" pos:end="155:19"><expr pos:start="155:14" pos:end="155:18"><name pos:start="155:14" pos:end="155:14">i</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <literal type="number" pos:start="155:18" pos:end="155:18">0</literal></expr>;</init> <condition pos:start="155:21" pos:end="155:47"><expr pos:start="155:21" pos:end="155:46"><name pos:start="155:21" pos:end="155:21">i</name> <operator pos:start="155:23" pos:end="155:23">&lt;</operator> <operator pos:start="155:25" pos:end="155:25">(</operator><literal type="number" pos:start="155:26" pos:end="155:26">1</literal> <operator pos:start="155:28" pos:end="155:29">&lt;&lt;</operator> <name pos:start="155:31" pos:end="155:45">log2_trafo_size</name><operator pos:start="155:46" pos:end="155:46">)</operator></expr>;</condition> <incr pos:start="155:49" pos:end="155:54"><expr pos:start="155:49" pos:end="155:54"><name pos:start="155:49" pos:end="155:49">i</name> <operator pos:start="155:51" pos:end="155:52">+=</operator> <literal type="number" pos:start="155:54" pos:end="155:54">4</literal></expr></incr>)</control> <block pos:start="155:57" pos:end="201:9">{<block_content pos:start="157:13" pos:end="199:79">

            <decl_stmt pos:start="157:13" pos:end="157:57"><decl pos:start="157:13" pos:end="157:56"><type pos:start="157:13" pos:end="157:15"><name pos:start="157:13" pos:end="157:15">int</name></type> <name pos:start="157:17" pos:end="157:20">y_pu</name>      <init pos:start="157:27" pos:end="157:56">= <expr pos:start="157:29" pos:end="157:56"><operator pos:start="157:29" pos:end="157:29">(</operator><name pos:start="157:30" pos:end="157:31">y0</name> <operator pos:start="157:33" pos:end="157:33">+</operator> <name pos:start="157:35" pos:end="157:35">i</name><operator pos:start="157:36" pos:end="157:36">)</operator> <operator pos:start="157:38" pos:end="157:39">&gt;&gt;</operator> <name pos:start="157:41" pos:end="157:56">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="159:13" pos:end="159:57"><decl pos:start="159:13" pos:end="159:56"><type pos:start="159:13" pos:end="159:15"><name pos:start="159:13" pos:end="159:15">int</name></type> <name pos:start="159:17" pos:end="159:20">y_tu</name>      <init pos:start="159:27" pos:end="159:56">= <expr pos:start="159:29" pos:end="159:56"><operator pos:start="159:29" pos:end="159:29">(</operator><name pos:start="159:30" pos:end="159:31">y0</name> <operator pos:start="159:33" pos:end="159:33">+</operator> <name pos:start="159:35" pos:end="159:35">i</name><operator pos:start="159:36" pos:end="159:36">)</operator> <operator pos:start="159:38" pos:end="159:39">&gt;&gt;</operator> <name pos:start="159:41" pos:end="159:56">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="161:13" pos:end="161:66"><decl pos:start="161:13" pos:end="161:65"><type pos:start="161:13" pos:end="161:21"><name pos:start="161:13" pos:end="161:19">MvField</name> <modifier pos:start="161:21" pos:end="161:21">*</modifier></type><name pos:start="161:22" pos:end="161:25">left</name> <init pos:start="161:27" pos:end="161:65">= <expr pos:start="161:29" pos:end="161:65"><operator pos:start="161:29" pos:end="161:29">&amp;</operator><name pos:start="161:30" pos:end="161:65"><name pos:start="161:30" pos:end="161:36">tab_mvf</name><index pos:start="161:37" pos:end="161:65">[<expr pos:start="161:38" pos:end="161:64"><name pos:start="161:38" pos:end="161:41">y_pu</name> <operator pos:start="161:43" pos:end="161:43">*</operator> <name pos:start="161:45" pos:end="161:56">min_pu_width</name> <operator pos:start="161:58" pos:end="161:58">+</operator> <name pos:start="161:60" pos:end="161:64">xp_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="163:13" pos:end="163:66"><decl pos:start="163:13" pos:end="163:65"><type pos:start="163:13" pos:end="163:21"><name pos:start="163:13" pos:end="163:19">MvField</name> <modifier pos:start="163:21" pos:end="163:21">*</modifier></type><name pos:start="163:22" pos:end="163:25">curr</name> <init pos:start="163:27" pos:end="163:65">= <expr pos:start="163:29" pos:end="163:65"><operator pos:start="163:29" pos:end="163:29">&amp;</operator><name pos:start="163:30" pos:end="163:65"><name pos:start="163:30" pos:end="163:36">tab_mvf</name><index pos:start="163:37" pos:end="163:65">[<expr pos:start="163:38" pos:end="163:64"><name pos:start="163:38" pos:end="163:41">y_pu</name> <operator pos:start="163:43" pos:end="163:43">*</operator> <name pos:start="163:45" pos:end="163:56">min_pu_width</name> <operator pos:start="163:58" pos:end="163:58">+</operator> <name pos:start="163:60" pos:end="163:64">xq_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <decl_stmt pos:start="167:13" pos:end="167:77"><decl pos:start="167:13" pos:end="167:76"><type pos:start="167:13" pos:end="167:19"><name pos:start="167:13" pos:end="167:19">uint8_t</name></type> <name pos:start="167:21" pos:end="167:33">left_cbf_luma</name> <init pos:start="167:35" pos:end="167:76">= <expr pos:start="167:37" pos:end="167:76"><name pos:start="167:37" pos:end="167:76"><name pos:start="167:37" pos:end="167:37">s</name><operator pos:start="167:38" pos:end="167:39">-&gt;</operator><name pos:start="167:40" pos:end="167:47">cbf_luma</name><index pos:start="167:48" pos:end="167:76">[<expr pos:start="167:49" pos:end="167:75"><name pos:start="167:49" pos:end="167:52">y_tu</name> <operator pos:start="167:54" pos:end="167:54">*</operator> <name pos:start="167:56" pos:end="167:67">min_tu_width</name> <operator pos:start="167:69" pos:end="167:69">+</operator> <name pos:start="167:71" pos:end="167:75">xp_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="169:13" pos:end="169:77"><decl pos:start="169:13" pos:end="169:76"><type pos:start="169:13" pos:end="169:19"><name pos:start="169:13" pos:end="169:19">uint8_t</name></type> <name pos:start="169:21" pos:end="169:33">curr_cbf_luma</name> <init pos:start="169:35" pos:end="169:76">= <expr pos:start="169:37" pos:end="169:76"><name pos:start="169:37" pos:end="169:76"><name pos:start="169:37" pos:end="169:37">s</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:47">cbf_luma</name><index pos:start="169:48" pos:end="169:76">[<expr pos:start="169:49" pos:end="169:75"><name pos:start="169:49" pos:end="169:52">y_tu</name> <operator pos:start="169:54" pos:end="169:54">*</operator> <name pos:start="169:56" pos:end="169:67">min_tu_width</name> <operator pos:start="169:69" pos:end="169:69">+</operator> <name pos:start="169:71" pos:end="169:75">xq_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="171:13" pos:end="173:79"><decl pos:start="171:13" pos:end="173:78"><type pos:start="171:13" pos:end="171:24"><name pos:start="171:13" pos:end="171:22">RefPicList</name> <modifier pos:start="171:24" pos:end="171:24">*</modifier></type><name pos:start="171:25" pos:end="171:39">left_refPicList</name> <init pos:start="171:41" pos:end="173:78">= <expr pos:start="171:43" pos:end="173:78"><call pos:start="171:43" pos:end="173:78"><name pos:start="171:43" pos:end="171:62">ff_hevc_get_ref_list</name><argument_list pos:start="171:63" pos:end="173:78">(<argument pos:start="171:64" pos:end="171:64"><expr pos:start="171:64" pos:end="171:64"><name pos:start="171:64" pos:end="171:64">s</name></expr></argument>, <argument pos:start="171:67" pos:end="171:72"><expr pos:start="171:67" pos:end="171:72"><name pos:start="171:67" pos:end="171:72"><name pos:start="171:67" pos:end="171:67">s</name><operator pos:start="171:68" pos:end="171:69">-&gt;</operator><name pos:start="171:70" pos:end="171:72">ref</name></name></expr></argument>,

                                                               <argument pos:start="173:64" pos:end="173:69"><expr pos:start="173:64" pos:end="173:69"><name pos:start="173:64" pos:end="173:65">x0</name> <operator pos:start="173:67" pos:end="173:67">-</operator> <literal type="number" pos:start="173:69" pos:end="173:69">1</literal></expr></argument>, <argument pos:start="173:72" pos:end="173:77"><expr pos:start="173:72" pos:end="173:77"><name pos:start="173:72" pos:end="173:73">y0</name> <operator pos:start="173:75" pos:end="173:75">+</operator> <name pos:start="173:77" pos:end="173:77">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="177:13" pos:end="179:76"><expr pos:start="177:13" pos:end="179:75"><name pos:start="177:13" pos:end="177:14">bs</name> <operator pos:start="177:16" pos:end="177:16">=</operator> <call pos:start="177:18" pos:end="179:75"><name pos:start="177:18" pos:end="177:34">boundary_strength</name><argument_list pos:start="177:35" pos:end="179:75">(<argument pos:start="177:36" pos:end="177:36"><expr pos:start="177:36" pos:end="177:36"><name pos:start="177:36" pos:end="177:36">s</name></expr></argument>, <argument pos:start="177:39" pos:end="177:42"><expr pos:start="177:39" pos:end="177:42"><name pos:start="177:39" pos:end="177:42">curr</name></expr></argument>, <argument pos:start="177:45" pos:end="177:57"><expr pos:start="177:45" pos:end="177:57"><name pos:start="177:45" pos:end="177:57">curr_cbf_luma</name></expr></argument>,

                                   <argument pos:start="179:36" pos:end="179:39"><expr pos:start="179:36" pos:end="179:39"><name pos:start="179:36" pos:end="179:39">left</name></expr></argument>, <argument pos:start="179:42" pos:end="179:54"><expr pos:start="179:42" pos:end="179:54"><name pos:start="179:42" pos:end="179:54">left_cbf_luma</name></expr></argument>, <argument pos:start="179:57" pos:end="179:71"><expr pos:start="179:57" pos:end="179:71"><name pos:start="179:57" pos:end="179:71">left_refPicList</name></expr></argument>, <argument pos:start="179:74" pos:end="179:74"><expr pos:start="179:74" pos:end="179:74"><literal type="number" pos:start="179:74" pos:end="179:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="181:13" pos:end="195:23"><if pos:start="181:13" pos:end="187:23">if <condition pos:start="181:16" pos:end="185:57">(<expr pos:start="181:17" pos:end="185:56"><operator pos:start="181:17" pos:end="181:17">!</operator><name pos:start="181:18" pos:end="181:67"><name pos:start="181:18" pos:end="181:18">s</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:22">sh</name><operator pos:start="181:23" pos:end="181:23">.</operator><name pos:start="181:24" pos:end="181:67">slice_loop_filter_across_slices_enabled_flag</name></name> <operator pos:start="181:69" pos:end="181:70">&amp;&amp;</operator>

                <name pos:start="183:17" pos:end="183:34"><name pos:start="183:17" pos:end="183:18">lc</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:34">boundary_flags</name></name> <operator pos:start="183:36" pos:end="183:36">&amp;</operator> <name pos:start="183:38" pos:end="183:56">BOUNDARY_LEFT_SLICE</name> <operator pos:start="183:58" pos:end="183:59">&amp;&amp;</operator>

                <operator pos:start="185:17" pos:end="185:17">(</operator><name pos:start="185:18" pos:end="185:19">x0</name> <operator pos:start="185:21" pos:end="185:21">%</operator> <operator pos:start="185:23" pos:end="185:23">(</operator><literal type="number" pos:start="185:24" pos:end="185:24">1</literal> <operator pos:start="185:26" pos:end="185:27">&lt;&lt;</operator> <name pos:start="185:29" pos:end="185:49"><name pos:start="185:29" pos:end="185:29">s</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:34">sps</name><operator pos:start="185:35" pos:end="185:36">-&gt;</operator><name pos:start="185:37" pos:end="185:49">log2_ctb_size</name></name><operator pos:start="185:50" pos:end="185:50">)</operator><operator pos:start="185:51" pos:end="185:51">)</operator> <operator pos:start="185:53" pos:end="185:54">==</operator> <literal type="number" pos:start="185:56" pos:end="185:56">0</literal></expr>)</condition><block type="pseudo" pos:start="187:17" pos:end="187:23"><block_content pos:start="187:17" pos:end="187:23">

                <expr_stmt pos:start="187:17" pos:end="187:23"><expr pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:18">bs</name> <operator pos:start="187:20" pos:end="187:20">=</operator> <literal type="number" pos:start="187:22" pos:end="187:22">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="189:13" pos:end="195:23">else if <condition pos:start="189:21" pos:end="193:62">(<expr pos:start="189:22" pos:end="193:61"><operator pos:start="189:22" pos:end="189:22">!</operator><name pos:start="189:23" pos:end="189:67"><name pos:start="189:23" pos:end="189:23">s</name><operator pos:start="189:24" pos:end="189:25">-&gt;</operator><name pos:start="189:26" pos:end="189:28">pps</name><operator pos:start="189:29" pos:end="189:30">-&gt;</operator><name pos:start="189:31" pos:end="189:67">loop_filter_across_tiles_enabled_flag</name></name> <operator pos:start="189:69" pos:end="189:70">&amp;&amp;</operator>

                     <name pos:start="191:22" pos:end="191:39"><name pos:start="191:22" pos:end="191:23">lc</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:39">boundary_flags</name></name> <operator pos:start="191:41" pos:end="191:41">&amp;</operator> <name pos:start="191:43" pos:end="191:60">BOUNDARY_LEFT_TILE</name> <operator pos:start="191:62" pos:end="191:63">&amp;&amp;</operator>

                     <operator pos:start="193:22" pos:end="193:22">(</operator><name pos:start="193:23" pos:end="193:24">x0</name> <operator pos:start="193:26" pos:end="193:26">%</operator> <operator pos:start="193:28" pos:end="193:28">(</operator><literal type="number" pos:start="193:29" pos:end="193:29">1</literal> <operator pos:start="193:31" pos:end="193:32">&lt;&lt;</operator> <name pos:start="193:34" pos:end="193:54"><name pos:start="193:34" pos:end="193:34">s</name><operator pos:start="193:35" pos:end="193:36">-&gt;</operator><name pos:start="193:37" pos:end="193:39">sps</name><operator pos:start="193:40" pos:end="193:41">-&gt;</operator><name pos:start="193:42" pos:end="193:54">log2_ctb_size</name></name><operator pos:start="193:55" pos:end="193:55">)</operator><operator pos:start="193:56" pos:end="193:56">)</operator> <operator pos:start="193:58" pos:end="193:59">==</operator> <literal type="number" pos:start="193:61" pos:end="193:61">0</literal></expr>)</condition><block type="pseudo" pos:start="195:17" pos:end="195:23"><block_content pos:start="195:17" pos:end="195:23">

                <expr_stmt pos:start="195:17" pos:end="195:23"><expr pos:start="195:17" pos:end="195:22"><name pos:start="195:17" pos:end="195:18">bs</name> <operator pos:start="195:20" pos:end="195:20">=</operator> <literal type="number" pos:start="195:22" pos:end="195:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="197:13" pos:end="199:79"><if pos:start="197:13" pos:end="199:79">if <condition pos:start="197:16" pos:end="197:19">(<expr pos:start="197:17" pos:end="197:18"><name pos:start="197:17" pos:end="197:18">bs</name></expr>)</condition><block type="pseudo" pos:start="199:17" pos:end="199:79"><block_content pos:start="199:17" pos:end="199:79">

                <expr_stmt pos:start="199:17" pos:end="199:79"><expr pos:start="199:17" pos:end="199:78"><name pos:start="199:17" pos:end="199:73"><name pos:start="199:17" pos:end="199:17">s</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:30">vertical_bs</name><index pos:start="199:31" pos:end="199:73">[<expr pos:start="199:32" pos:end="199:72"><operator pos:start="199:32" pos:end="199:32">(</operator><name pos:start="199:33" pos:end="199:34">x0</name> <operator pos:start="199:36" pos:end="199:37">&gt;&gt;</operator> <literal type="number" pos:start="199:39" pos:end="199:39">3</literal><operator pos:start="199:40" pos:end="199:40">)</operator> <operator pos:start="199:42" pos:end="199:42">+</operator> <operator pos:start="199:44" pos:end="199:44">(</operator><operator pos:start="199:45" pos:end="199:45">(</operator><name pos:start="199:46" pos:end="199:47">y0</name> <operator pos:start="199:49" pos:end="199:49">+</operator> <name pos:start="199:51" pos:end="199:51">i</name><operator pos:start="199:52" pos:end="199:52">)</operator> <operator pos:start="199:54" pos:end="199:55">&gt;&gt;</operator> <literal type="number" pos:start="199:57" pos:end="199:57">2</literal><operator pos:start="199:58" pos:end="199:58">)</operator> <operator pos:start="199:60" pos:end="199:60">*</operator> <name pos:start="199:62" pos:end="199:72"><name pos:start="199:62" pos:end="199:62">s</name><operator pos:start="199:63" pos:end="199:64">-&gt;</operator><name pos:start="199:65" pos:end="199:72">bs_width</name></name></expr>]</index></name> <operator pos:start="199:75" pos:end="199:75">=</operator> <name pos:start="199:77" pos:end="199:78">bs</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="207:5" pos:end="207:48">// bs for TU internal vertical PU boundaries</comment>

    <if_stmt pos:start="209:5" pos:end="255:9"><if pos:start="209:5" pos:end="255:9">if <condition pos:start="209:8" pos:end="209:56">(<expr pos:start="209:9" pos:end="209:55"><name pos:start="209:9" pos:end="209:23">log2_trafo_size</name> <operator pos:start="209:25" pos:end="209:25">&gt;</operator> <name pos:start="209:27" pos:end="209:42">log2_min_pu_size</name> <operator pos:start="209:44" pos:end="209:45">&amp;&amp;</operator> <operator pos:start="209:47" pos:end="209:47">!</operator><name pos:start="209:48" pos:end="209:55">is_intra</name></expr>)</condition><block type="pseudo" pos:start="211:9" pos:end="255:9"><block_content pos:start="211:9" pos:end="255:9">

        <for pos:start="211:9" pos:end="255:9">for <control pos:start="211:13" pos:end="211:55">(<init pos:start="211:14" pos:end="211:19"><expr pos:start="211:14" pos:end="211:18"><name pos:start="211:14" pos:end="211:14">j</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <literal type="number" pos:start="211:18" pos:end="211:18">0</literal></expr>;</init> <condition pos:start="211:21" pos:end="211:47"><expr pos:start="211:21" pos:end="211:46"><name pos:start="211:21" pos:end="211:21">j</name> <operator pos:start="211:23" pos:end="211:23">&lt;</operator> <operator pos:start="211:25" pos:end="211:25">(</operator><literal type="number" pos:start="211:26" pos:end="211:26">1</literal> <operator pos:start="211:28" pos:end="211:29">&lt;&lt;</operator> <name pos:start="211:31" pos:end="211:45">log2_trafo_size</name><operator pos:start="211:46" pos:end="211:46">)</operator></expr>;</condition> <incr pos:start="211:49" pos:end="211:54"><expr pos:start="211:49" pos:end="211:54"><name pos:start="211:49" pos:end="211:49">j</name> <operator pos:start="211:51" pos:end="211:52">+=</operator> <literal type="number" pos:start="211:54" pos:end="211:54">4</literal></expr></incr>)</control> <block pos:start="211:57" pos:end="255:9">{<block_content pos:start="213:13" pos:end="253:13">

            <decl_stmt pos:start="213:13" pos:end="213:52"><decl pos:start="213:13" pos:end="213:51"><type pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:15">int</name></type> <name pos:start="213:17" pos:end="213:20">y_pu</name> <init pos:start="213:22" pos:end="213:51">= <expr pos:start="213:24" pos:end="213:51"><operator pos:start="213:24" pos:end="213:24">(</operator><name pos:start="213:25" pos:end="213:26">y0</name> <operator pos:start="213:28" pos:end="213:28">+</operator> <name pos:start="213:30" pos:end="213:30">j</name><operator pos:start="213:31" pos:end="213:31">)</operator> <operator pos:start="213:33" pos:end="213:34">&gt;&gt;</operator> <name pos:start="213:36" pos:end="213:51">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="215:13" pos:end="215:52"><decl pos:start="215:13" pos:end="215:51"><type pos:start="215:13" pos:end="215:15"><name pos:start="215:13" pos:end="215:15">int</name></type> <name pos:start="215:17" pos:end="215:20">y_tu</name> <init pos:start="215:22" pos:end="215:51">= <expr pos:start="215:24" pos:end="215:51"><operator pos:start="215:24" pos:end="215:24">(</operator><name pos:start="215:25" pos:end="215:26">y0</name> <operator pos:start="215:28" pos:end="215:28">+</operator> <name pos:start="215:30" pos:end="215:30">j</name><operator pos:start="215:31" pos:end="215:31">)</operator> <operator pos:start="215:33" pos:end="215:34">&gt;&gt;</operator> <name pos:start="215:36" pos:end="215:51">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>



            <for pos:start="219:13" pos:end="253:13">for <control pos:start="219:17" pos:end="219:59">(<init pos:start="219:18" pos:end="219:23"><expr pos:start="219:18" pos:end="219:22"><name pos:start="219:18" pos:end="219:18">i</name> <operator pos:start="219:20" pos:end="219:20">=</operator> <literal type="number" pos:start="219:22" pos:end="219:22">8</literal></expr>;</init> <condition pos:start="219:25" pos:end="219:51"><expr pos:start="219:25" pos:end="219:50"><name pos:start="219:25" pos:end="219:25">i</name> <operator pos:start="219:27" pos:end="219:27">&lt;</operator> <operator pos:start="219:29" pos:end="219:29">(</operator><literal type="number" pos:start="219:30" pos:end="219:30">1</literal> <operator pos:start="219:32" pos:end="219:33">&lt;&lt;</operator> <name pos:start="219:35" pos:end="219:49">log2_trafo_size</name><operator pos:start="219:50" pos:end="219:50">)</operator></expr>;</condition> <incr pos:start="219:53" pos:end="219:58"><expr pos:start="219:53" pos:end="219:58"><name pos:start="219:53" pos:end="219:53">i</name> <operator pos:start="219:55" pos:end="219:56">+=</operator> <literal type="number" pos:start="219:58" pos:end="219:58">8</literal></expr></incr>)</control> <block pos:start="219:61" pos:end="253:13">{<block_content pos:start="221:17" pos:end="251:89">

                <decl_stmt pos:start="221:17" pos:end="221:61"><decl pos:start="221:17" pos:end="221:60"><type pos:start="221:17" pos:end="221:19"><name pos:start="221:17" pos:end="221:19">int</name></type> <name pos:start="221:21" pos:end="221:25">xp_pu</name> <init pos:start="221:27" pos:end="221:60">= <expr pos:start="221:29" pos:end="221:60"><operator pos:start="221:29" pos:end="221:29">(</operator><name pos:start="221:30" pos:end="221:31">x0</name> <operator pos:start="221:33" pos:end="221:33">+</operator> <name pos:start="221:35" pos:end="221:35">i</name> <operator pos:start="221:37" pos:end="221:37">-</operator> <literal type="number" pos:start="221:39" pos:end="221:39">1</literal><operator pos:start="221:40" pos:end="221:40">)</operator> <operator pos:start="221:42" pos:end="221:43">&gt;&gt;</operator> <name pos:start="221:45" pos:end="221:60">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="223:17" pos:end="223:61"><decl pos:start="223:17" pos:end="223:60"><type pos:start="223:17" pos:end="223:19"><name pos:start="223:17" pos:end="223:19">int</name></type> <name pos:start="223:21" pos:end="223:25">xq_pu</name> <init pos:start="223:27" pos:end="223:60">= <expr pos:start="223:29" pos:end="223:60"><operator pos:start="223:29" pos:end="223:29">(</operator><name pos:start="223:30" pos:end="223:31">x0</name> <operator pos:start="223:33" pos:end="223:33">+</operator> <name pos:start="223:35" pos:end="223:35">i</name><operator pos:start="223:36" pos:end="223:36">)</operator>     <operator pos:start="223:42" pos:end="223:43">&gt;&gt;</operator> <name pos:start="223:45" pos:end="223:60">log2_min_pu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="225:17" pos:end="225:61"><decl pos:start="225:17" pos:end="225:60"><type pos:start="225:17" pos:end="225:19"><name pos:start="225:17" pos:end="225:19">int</name></type> <name pos:start="225:21" pos:end="225:25">xp_tu</name> <init pos:start="225:27" pos:end="225:60">= <expr pos:start="225:29" pos:end="225:60"><operator pos:start="225:29" pos:end="225:29">(</operator><name pos:start="225:30" pos:end="225:31">x0</name> <operator pos:start="225:33" pos:end="225:33">+</operator> <name pos:start="225:35" pos:end="225:35">i</name> <operator pos:start="225:37" pos:end="225:37">-</operator> <literal type="number" pos:start="225:39" pos:end="225:39">1</literal><operator pos:start="225:40" pos:end="225:40">)</operator> <operator pos:start="225:42" pos:end="225:43">&gt;&gt;</operator> <name pos:start="225:45" pos:end="225:60">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="227:17" pos:end="227:61"><decl pos:start="227:17" pos:end="227:60"><type pos:start="227:17" pos:end="227:19"><name pos:start="227:17" pos:end="227:19">int</name></type> <name pos:start="227:21" pos:end="227:25">xq_tu</name> <init pos:start="227:27" pos:end="227:60">= <expr pos:start="227:29" pos:end="227:60"><operator pos:start="227:29" pos:end="227:29">(</operator><name pos:start="227:30" pos:end="227:31">x0</name> <operator pos:start="227:33" pos:end="227:33">+</operator> <name pos:start="227:35" pos:end="227:35">i</name><operator pos:start="227:36" pos:end="227:36">)</operator>     <operator pos:start="227:42" pos:end="227:43">&gt;&gt;</operator> <name pos:start="227:45" pos:end="227:60">log2_min_tu_size</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="229:17" pos:end="229:70"><decl pos:start="229:17" pos:end="229:69"><type pos:start="229:17" pos:end="229:25"><name pos:start="229:17" pos:end="229:23">MvField</name> <modifier pos:start="229:25" pos:end="229:25">*</modifier></type><name pos:start="229:26" pos:end="229:29">left</name> <init pos:start="229:31" pos:end="229:69">= <expr pos:start="229:33" pos:end="229:69"><operator pos:start="229:33" pos:end="229:33">&amp;</operator><name pos:start="229:34" pos:end="229:69"><name pos:start="229:34" pos:end="229:40">tab_mvf</name><index pos:start="229:41" pos:end="229:69">[<expr pos:start="229:42" pos:end="229:68"><name pos:start="229:42" pos:end="229:45">y_pu</name> <operator pos:start="229:47" pos:end="229:47">*</operator> <name pos:start="229:49" pos:end="229:60">min_pu_width</name> <operator pos:start="229:62" pos:end="229:62">+</operator> <name pos:start="229:64" pos:end="229:68">xp_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="231:17" pos:end="231:70"><decl pos:start="231:17" pos:end="231:69"><type pos:start="231:17" pos:end="231:25"><name pos:start="231:17" pos:end="231:23">MvField</name> <modifier pos:start="231:25" pos:end="231:25">*</modifier></type><name pos:start="231:26" pos:end="231:29">curr</name> <init pos:start="231:31" pos:end="231:69">= <expr pos:start="231:33" pos:end="231:69"><operator pos:start="231:33" pos:end="231:33">&amp;</operator><name pos:start="231:34" pos:end="231:69"><name pos:start="231:34" pos:end="231:40">tab_mvf</name><index pos:start="231:41" pos:end="231:69">[<expr pos:start="231:42" pos:end="231:68"><name pos:start="231:42" pos:end="231:45">y_pu</name> <operator pos:start="231:47" pos:end="231:47">*</operator> <name pos:start="231:49" pos:end="231:60">min_pu_width</name> <operator pos:start="231:62" pos:end="231:62">+</operator> <name pos:start="231:64" pos:end="231:68">xq_pu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="233:17" pos:end="233:81"><decl pos:start="233:17" pos:end="233:80"><type pos:start="233:17" pos:end="233:23"><name pos:start="233:17" pos:end="233:23">uint8_t</name></type> <name pos:start="233:25" pos:end="233:37">left_cbf_luma</name> <init pos:start="233:39" pos:end="233:80">= <expr pos:start="233:41" pos:end="233:80"><name pos:start="233:41" pos:end="233:80"><name pos:start="233:41" pos:end="233:41">s</name><operator pos:start="233:42" pos:end="233:43">-&gt;</operator><name pos:start="233:44" pos:end="233:51">cbf_luma</name><index pos:start="233:52" pos:end="233:80">[<expr pos:start="233:53" pos:end="233:79"><name pos:start="233:53" pos:end="233:56">y_tu</name> <operator pos:start="233:58" pos:end="233:58">*</operator> <name pos:start="233:60" pos:end="233:71">min_tu_width</name> <operator pos:start="233:73" pos:end="233:73">+</operator> <name pos:start="233:75" pos:end="233:79">xp_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="235:17" pos:end="235:81"><decl pos:start="235:17" pos:end="235:80"><type pos:start="235:17" pos:end="235:23"><name pos:start="235:17" pos:end="235:23">uint8_t</name></type> <name pos:start="235:25" pos:end="235:37">curr_cbf_luma</name> <init pos:start="235:39" pos:end="235:80">= <expr pos:start="235:41" pos:end="235:80"><name pos:start="235:41" pos:end="235:80"><name pos:start="235:41" pos:end="235:41">s</name><operator pos:start="235:42" pos:end="235:43">-&gt;</operator><name pos:start="235:44" pos:end="235:51">cbf_luma</name><index pos:start="235:52" pos:end="235:80">[<expr pos:start="235:53" pos:end="235:79"><name pos:start="235:53" pos:end="235:56">y_tu</name> <operator pos:start="235:58" pos:end="235:58">*</operator> <name pos:start="235:60" pos:end="235:71">min_tu_width</name> <operator pos:start="235:73" pos:end="235:73">+</operator> <name pos:start="235:75" pos:end="235:79">xq_tu</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="237:17" pos:end="241:75"><decl pos:start="237:17" pos:end="241:74"><type pos:start="237:17" pos:end="237:28"><name pos:start="237:17" pos:end="237:26">RefPicList</name> <modifier pos:start="237:28" pos:end="237:28">*</modifier></type><name pos:start="237:29" pos:end="237:43">left_refPicList</name> <init pos:start="237:45" pos:end="241:74">= <expr pos:start="237:47" pos:end="241:74"><call pos:start="237:47" pos:end="241:74"><name pos:start="237:47" pos:end="237:66">ff_hevc_get_ref_list</name><argument_list pos:start="237:67" pos:end="241:74">(<argument pos:start="237:68" pos:end="237:68"><expr pos:start="237:68" pos:end="237:68"><name pos:start="237:68" pos:end="237:68">s</name></expr></argument>, <argument pos:start="237:71" pos:end="237:76"><expr pos:start="237:71" pos:end="237:76"><name pos:start="237:71" pos:end="237:76"><name pos:start="237:71" pos:end="237:71">s</name><operator pos:start="237:72" pos:end="237:73">-&gt;</operator><name pos:start="237:74" pos:end="237:76">ref</name></name></expr></argument>,

                                                                   <argument pos:start="239:68" pos:end="239:77"><expr pos:start="239:68" pos:end="239:77"><name pos:start="239:68" pos:end="239:69">x0</name> <operator pos:start="239:71" pos:end="239:71">+</operator> <name pos:start="239:73" pos:end="239:73">i</name> <operator pos:start="239:75" pos:end="239:75">-</operator> <literal type="number" pos:start="239:77" pos:end="239:77">1</literal></expr></argument>,

                                                                   <argument pos:start="241:68" pos:end="241:73"><expr pos:start="241:68" pos:end="241:73"><name pos:start="241:68" pos:end="241:69">y0</name> <operator pos:start="241:71" pos:end="241:71">+</operator> <name pos:start="241:73" pos:end="241:73">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="245:17" pos:end="247:80"><expr pos:start="245:17" pos:end="247:79"><name pos:start="245:17" pos:end="245:18">bs</name> <operator pos:start="245:20" pos:end="245:20">=</operator> <call pos:start="245:22" pos:end="247:79"><name pos:start="245:22" pos:end="245:38">boundary_strength</name><argument_list pos:start="245:39" pos:end="247:79">(<argument pos:start="245:40" pos:end="245:40"><expr pos:start="245:40" pos:end="245:40"><name pos:start="245:40" pos:end="245:40">s</name></expr></argument>, <argument pos:start="245:43" pos:end="245:46"><expr pos:start="245:43" pos:end="245:46"><name pos:start="245:43" pos:end="245:46">curr</name></expr></argument>, <argument pos:start="245:49" pos:end="245:61"><expr pos:start="245:49" pos:end="245:61"><name pos:start="245:49" pos:end="245:61">curr_cbf_luma</name></expr></argument>,

                                       <argument pos:start="247:40" pos:end="247:43"><expr pos:start="247:40" pos:end="247:43"><name pos:start="247:40" pos:end="247:43">left</name></expr></argument>, <argument pos:start="247:46" pos:end="247:58"><expr pos:start="247:46" pos:end="247:58"><name pos:start="247:46" pos:end="247:58">left_cbf_luma</name></expr></argument>, <argument pos:start="247:61" pos:end="247:75"><expr pos:start="247:61" pos:end="247:75"><name pos:start="247:61" pos:end="247:75">left_refPicList</name></expr></argument>, <argument pos:start="247:78" pos:end="247:78"><expr pos:start="247:78" pos:end="247:78"><literal type="number" pos:start="247:78" pos:end="247:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="249:17" pos:end="251:89"><if pos:start="249:17" pos:end="251:89">if <condition pos:start="249:20" pos:end="249:23">(<expr pos:start="249:21" pos:end="249:22"><name pos:start="249:21" pos:end="249:22">bs</name></expr>)</condition><block type="pseudo" pos:start="251:21" pos:end="251:89"><block_content pos:start="251:21" pos:end="251:89">

                    <expr_stmt pos:start="251:21" pos:end="251:89"><expr pos:start="251:21" pos:end="251:88"><name pos:start="251:21" pos:end="251:83"><name pos:start="251:21" pos:end="251:21">s</name><operator pos:start="251:22" pos:end="251:23">-&gt;</operator><name pos:start="251:24" pos:end="251:34">vertical_bs</name><index pos:start="251:35" pos:end="251:83">[<expr pos:start="251:36" pos:end="251:82"><operator pos:start="251:36" pos:end="251:36">(</operator><operator pos:start="251:37" pos:end="251:37">(</operator><name pos:start="251:38" pos:end="251:39">x0</name> <operator pos:start="251:41" pos:end="251:41">+</operator> <name pos:start="251:43" pos:end="251:43">i</name><operator pos:start="251:44" pos:end="251:44">)</operator> <operator pos:start="251:46" pos:end="251:47">&gt;&gt;</operator> <literal type="number" pos:start="251:49" pos:end="251:49">3</literal><operator pos:start="251:50" pos:end="251:50">)</operator> <operator pos:start="251:52" pos:end="251:52">+</operator> <operator pos:start="251:54" pos:end="251:54">(</operator><operator pos:start="251:55" pos:end="251:55">(</operator><name pos:start="251:56" pos:end="251:57">y0</name> <operator pos:start="251:59" pos:end="251:59">+</operator> <name pos:start="251:61" pos:end="251:61">j</name><operator pos:start="251:62" pos:end="251:62">)</operator> <operator pos:start="251:64" pos:end="251:65">&gt;&gt;</operator> <literal type="number" pos:start="251:67" pos:end="251:67">2</literal><operator pos:start="251:68" pos:end="251:68">)</operator> <operator pos:start="251:70" pos:end="251:70">*</operator> <name pos:start="251:72" pos:end="251:82"><name pos:start="251:72" pos:end="251:72">s</name><operator pos:start="251:73" pos:end="251:74">-&gt;</operator><name pos:start="251:75" pos:end="251:82">bs_width</name></name></expr>]</index></name> <operator pos:start="251:85" pos:end="251:85">=</operator> <name pos:start="251:87" pos:end="251:88">bs</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
