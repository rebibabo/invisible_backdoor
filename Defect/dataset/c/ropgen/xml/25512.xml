<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25512.c" pos:tabs="8"><function pos:start="1:1" pos:end="351:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">versatile_init</name><parameter_list pos:start="1:27" pos:end="1:67">(<parameter pos:start="1:28" pos:end="1:52"><decl pos:start="1:28" pos:end="1:52"><type pos:start="1:28" pos:end="1:52"><name pos:start="1:28" pos:end="1:46">QEMUMachineInitArgs</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">args</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:66">board_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="351:1">{<block_content pos:start="5:5" pos:end="349:43">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">ARMCPU</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MemoryRegion</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:24">sysmem</name> <init pos:start="7:26" pos:end="7:46">= <expr pos:start="7:28" pos:end="7:46"><call pos:start="7:28" pos:end="7:46"><name pos:start="7:28" pos:end="7:44">get_system_memory</name><argument_list pos:start="7:45" pos:end="7:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MemoryRegion</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">ram</name> <init pos:start="9:23" pos:end="9:46">= <expr pos:start="9:25" pos:end="9:46"><call pos:start="9:25" pos:end="9:46"><name pos:start="9:25" pos:end="9:29">g_new</name><argument_list pos:start="9:30" pos:end="9:46">(<argument pos:start="9:31" pos:end="9:42"><expr pos:start="9:31" pos:end="9:42"><name pos:start="9:31" pos:end="9:42">MemoryRegion</name></expr></argument>, <argument pos:start="9:45" pos:end="9:45"><expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">qemu_irq</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:21">cpu_pic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">qemu_irq</name></type> <name pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:16">pic</name><index pos:start="13:17" pos:end="13:20">[<expr pos:start="13:18" pos:end="13:19"><literal type="number" pos:start="13:18" pos:end="13:19">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">qemu_irq</name></type> <name pos:start="15:14" pos:end="15:20"><name pos:start="15:14" pos:end="15:16">sic</name><index pos:start="15:17" pos:end="15:20">[<expr pos:start="15:18" pos:end="15:19"><literal type="number" pos:start="15:18" pos:end="15:19">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:15">DeviceState</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:20">dev</name></decl>, <decl pos:start="17:23" pos:end="17:29"><type ref="prev" pos:start="17:5" pos:end="17:17"><modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:29">sysctl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">SysBusDevice</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:24">busdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:15">DeviceState</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:22">pl041</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:10">PCIBus</name> <modifier pos:start="23:12" pos:end="23:12">*</modifier></type><name pos:start="23:13" pos:end="23:19">pci_bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:16"><decl pos:start="25:5" pos:end="25:15"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">NICInfo</name> <modifier pos:start="25:13" pos:end="25:13">*</modifier></type><name pos:start="25:14" pos:end="25:15">nd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">i2c_bus</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:16">i2c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:21"><decl pos:start="31:5" pos:end="31:20"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:16">done_smc</name> <init pos:start="31:18" pos:end="31:20">= <expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:21"><decl pos:start="33:5" pos:end="33:20"><type pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:13">DriveInfo</name> <modifier pos:start="33:15" pos:end="33:15">*</modifier></type><name pos:start="33:16" pos:end="33:20">dinfo</name></decl>;</decl_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:25">(<expr pos:start="37:9" pos:end="37:24"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:24"><name pos:start="37:10" pos:end="37:13">args</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:24">cpu_model</name></name></expr>)</condition> <block pos:start="37:27" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:35">

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:12">args</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:23">cpu_model</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <literal type="string" pos:start="39:27" pos:end="39:34">"arm926"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:7">cpu</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:39"><name pos:start="43:11" pos:end="43:22">cpu_arm_init</name><argument_list pos:start="43:23" pos:end="43:39">(<argument pos:start="43:24" pos:end="43:38"><expr pos:start="43:24" pos:end="43:38"><name pos:start="43:24" pos:end="43:38"><name pos:start="43:24" pos:end="43:27">args</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:38">cpu_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:13">(<expr pos:start="45:9" pos:end="45:12"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:12">cpu</name></expr>)</condition> <block pos:start="45:15" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:16">

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><call pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:15">fprintf</name><argument_list pos:start="47:16" pos:end="47:58">(<argument pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:22">stderr</name></expr></argument>, <argument pos:start="47:25" pos:end="47:57"><expr pos:start="47:25" pos:end="47:57"><literal type="string" pos:start="47:25" pos:end="47:57">"Unable to find CPU definition\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><call pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:12">exit</name><argument_list pos:start="49:13" pos:end="49:15">(<argument pos:start="49:14" pos:end="49:14"><expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:65"><expr pos:start="53:5" pos:end="53:64"><call pos:start="53:5" pos:end="53:64"><name pos:start="53:5" pos:end="53:26">memory_region_init_ram</name><argument_list pos:start="53:27" pos:end="53:64">(<argument pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:30">ram</name></expr></argument>, <argument pos:start="53:33" pos:end="53:47"><expr pos:start="53:33" pos:end="53:47"><literal type="string" pos:start="53:33" pos:end="53:47">"versatile.ram"</literal></expr></argument>, <argument pos:start="53:50" pos:end="53:63"><expr pos:start="53:50" pos:end="53:63"><name pos:start="53:50" pos:end="53:63"><name pos:start="53:50" pos:end="53:53">args</name><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:63">ram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:37"><expr pos:start="55:5" pos:end="55:36"><call pos:start="55:5" pos:end="55:36"><name pos:start="55:5" pos:end="55:31">vmstate_register_ram_global</name><argument_list pos:start="55:32" pos:end="55:36">(<argument pos:start="55:33" pos:end="55:35"><expr pos:start="55:33" pos:end="55:35"><name pos:start="55:33" pos:end="55:35">ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="57:5" pos:end="57:63">/* ??? RAM should repeat to fill physical memory space.  */</comment>

    <comment type="block" pos:start="59:5" pos:end="59:33">/* SDRAM at address zero.  */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:48"><expr pos:start="61:5" pos:end="61:47"><call pos:start="61:5" pos:end="61:47"><name pos:start="61:5" pos:end="61:31">memory_region_add_subregion</name><argument_list pos:start="61:32" pos:end="61:47">(<argument pos:start="61:33" pos:end="61:38"><expr pos:start="61:33" pos:end="61:38"><name pos:start="61:33" pos:end="61:38">sysmem</name></expr></argument>, <argument pos:start="61:41" pos:end="61:41"><expr pos:start="61:41" pos:end="61:41"><literal type="number" pos:start="61:41" pos:end="61:41">0</literal></expr></argument>, <argument pos:start="61:44" pos:end="61:46"><expr pos:start="61:44" pos:end="61:46"><name pos:start="61:44" pos:end="61:46">ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:50"><expr pos:start="65:5" pos:end="65:49"><name pos:start="65:5" pos:end="65:10">sysctl</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <call pos:start="65:14" pos:end="65:49"><name pos:start="65:14" pos:end="65:24">qdev_create</name><argument_list pos:start="65:25" pos:end="65:49">(<argument pos:start="65:26" pos:end="65:29"><expr pos:start="65:26" pos:end="65:29"><name pos:start="65:26" pos:end="65:29">NULL</name></expr></argument>, <argument pos:start="65:32" pos:end="65:48"><expr pos:start="65:32" pos:end="65:48"><literal type="string" pos:start="65:32" pos:end="65:48">"realview_sysctl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:55"><expr pos:start="67:5" pos:end="67:54"><call pos:start="67:5" pos:end="67:54"><name pos:start="67:5" pos:end="67:24">qdev_prop_set_uint32</name><argument_list pos:start="67:25" pos:end="67:54">(<argument pos:start="67:26" pos:end="67:31"><expr pos:start="67:26" pos:end="67:31"><name pos:start="67:26" pos:end="67:31">sysctl</name></expr></argument>, <argument pos:start="67:34" pos:end="67:41"><expr pos:start="67:34" pos:end="67:41"><literal type="string" pos:start="67:34" pos:end="67:41">"sys_id"</literal></expr></argument>, <argument pos:start="67:44" pos:end="67:53"><expr pos:start="67:44" pos:end="67:53"><literal type="number" pos:start="67:44" pos:end="67:53">0x41007004</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:56"><expr pos:start="69:5" pos:end="69:55"><call pos:start="69:5" pos:end="69:55"><name pos:start="69:5" pos:end="69:24">qdev_prop_set_uint32</name><argument_list pos:start="69:25" pos:end="69:55">(<argument pos:start="69:26" pos:end="69:31"><expr pos:start="69:26" pos:end="69:31"><name pos:start="69:26" pos:end="69:31">sysctl</name></expr></argument>, <argument pos:start="69:34" pos:end="69:42"><expr pos:start="69:34" pos:end="69:42"><literal type="string" pos:start="69:34" pos:end="69:42">"proc_id"</literal></expr></argument>, <argument pos:start="69:45" pos:end="69:54"><expr pos:start="69:45" pos:end="69:54"><literal type="number" pos:start="69:45" pos:end="69:54">0x02000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:29"><expr pos:start="71:5" pos:end="71:28"><call pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:20">qdev_init_nofail</name><argument_list pos:start="71:21" pos:end="71:28">(<argument pos:start="71:22" pos:end="71:27"><expr pos:start="71:22" pos:end="71:27"><name pos:start="71:22" pos:end="71:27">sysctl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:59"><expr pos:start="73:5" pos:end="73:58"><call pos:start="73:5" pos:end="73:58"><name pos:start="73:5" pos:end="73:19">sysbus_mmio_map</name><argument_list pos:start="73:20" pos:end="73:58">(<argument pos:start="73:21" pos:end="73:42"><expr pos:start="73:21" pos:end="73:42"><call pos:start="73:21" pos:end="73:42"><name pos:start="73:21" pos:end="73:34">SYS_BUS_DEVICE</name><argument_list pos:start="73:35" pos:end="73:42">(<argument pos:start="73:36" pos:end="73:41"><expr pos:start="73:36" pos:end="73:41"><name pos:start="73:36" pos:end="73:41">sysctl</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:45" pos:end="73:45"><expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">0</literal></expr></argument>, <argument pos:start="73:48" pos:end="73:57"><expr pos:start="73:48" pos:end="73:57"><literal type="number" pos:start="73:48" pos:end="73:57">0x10000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:36"><expr pos:start="77:5" pos:end="77:35"><name pos:start="77:5" pos:end="77:11">cpu_pic</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:35"><name pos:start="77:15" pos:end="77:30">arm_pic_init_cpu</name><argument_list pos:start="77:31" pos:end="77:35">(<argument pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:34">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="83:64"><expr pos:start="79:5" pos:end="83:63"><name pos:start="79:5" pos:end="79:7">dev</name> <operator pos:start="79:9" pos:end="79:9">=</operator> <call pos:start="79:11" pos:end="83:63"><name pos:start="79:11" pos:end="79:31">sysbus_create_varargs</name><argument_list pos:start="79:32" pos:end="83:63">(<argument pos:start="79:33" pos:end="79:39"><expr pos:start="79:33" pos:end="79:39"><literal type="string" pos:start="79:33" pos:end="79:39">"pl190"</literal></expr></argument>, <argument pos:start="79:42" pos:end="79:51"><expr pos:start="79:42" pos:end="79:51"><literal type="number" pos:start="79:42" pos:end="79:51">0x10140000</literal></expr></argument>,

                                <argument pos:start="81:33" pos:end="81:56"><expr pos:start="81:33" pos:end="81:56"><name pos:start="81:33" pos:end="81:56"><name pos:start="81:33" pos:end="81:39">cpu_pic</name><index pos:start="81:40" pos:end="81:56">[<expr pos:start="81:41" pos:end="81:55"><name pos:start="81:41" pos:end="81:55">ARM_PIC_CPU_IRQ</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="83:33" pos:end="83:56"><expr pos:start="83:33" pos:end="83:56"><name pos:start="83:33" pos:end="83:56"><name pos:start="83:33" pos:end="83:39">cpu_pic</name><index pos:start="83:40" pos:end="83:56">[<expr pos:start="83:41" pos:end="83:55"><name pos:start="83:41" pos:end="83:55">ARM_PIC_CPU_FIQ</name></expr>]</index></name></expr></argument>, <argument pos:start="83:59" pos:end="83:62"><expr pos:start="83:59" pos:end="83:62"><name pos:start="83:59" pos:end="83:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="85:5" pos:end="89:5">for <control pos:start="85:9" pos:end="85:28">(<init pos:start="85:10" pos:end="85:15"><expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:10">n</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>;</init> <condition pos:start="85:17" pos:end="85:23"><expr pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:17">n</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <literal type="number" pos:start="85:21" pos:end="85:22">32</literal></expr>;</condition> <incr pos:start="85:25" pos:end="85:27"><expr pos:start="85:25" pos:end="85:27"><name pos:start="85:25" pos:end="85:25">n</name><operator pos:start="85:26" pos:end="85:27">++</operator></expr></incr>)</control> <block pos:start="85:30" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:42">

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:11">pic</name><index pos:start="87:12" pos:end="87:14">[<expr pos:start="87:13" pos:end="87:13"><name pos:start="87:13" pos:end="87:13">n</name></expr>]</index></name> <operator pos:start="87:16" pos:end="87:16">=</operator> <call pos:start="87:18" pos:end="87:41"><name pos:start="87:18" pos:end="87:33">qdev_get_gpio_in</name><argument_list pos:start="87:34" pos:end="87:41">(<argument pos:start="87:35" pos:end="87:37"><expr pos:start="87:35" pos:end="87:37"><name pos:start="87:35" pos:end="87:37">dev</name></expr></argument>, <argument pos:start="87:40" pos:end="87:40"><expr pos:start="87:40" pos:end="87:40"><name pos:start="87:40" pos:end="87:40">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="91:5" pos:end="91:68"><expr pos:start="91:5" pos:end="91:67"><name pos:start="91:5" pos:end="91:7">dev</name> <operator pos:start="91:9" pos:end="91:9">=</operator> <call pos:start="91:11" pos:end="91:67"><name pos:start="91:11" pos:end="91:30">sysbus_create_simple</name><argument_list pos:start="91:31" pos:end="91:67">(<argument pos:start="91:32" pos:end="91:48"><expr pos:start="91:32" pos:end="91:48"><literal type="string" pos:start="91:32" pos:end="91:48">"versatilepb_sic"</literal></expr></argument>, <argument pos:start="91:51" pos:end="91:60"><expr pos:start="91:51" pos:end="91:60"><literal type="number" pos:start="91:51" pos:end="91:60">0x10003000</literal></expr></argument>, <argument pos:start="91:63" pos:end="91:66"><expr pos:start="91:63" pos:end="91:66"><name pos:start="91:63" pos:end="91:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="93:5" pos:end="99:5">for <control pos:start="93:9" pos:end="93:28">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">n</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:23"><expr pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:17">n</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <literal type="number" pos:start="93:21" pos:end="93:22">32</literal></expr>;</condition> <incr pos:start="93:25" pos:end="93:27"><expr pos:start="93:25" pos:end="93:27"><name pos:start="93:25" pos:end="93:25">n</name><operator pos:start="93:26" pos:end="93:27">++</operator></expr></incr>)</control> <block pos:start="93:30" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:42">

        <expr_stmt pos:start="95:9" pos:end="95:59"><expr pos:start="95:9" pos:end="95:58"><call pos:start="95:9" pos:end="95:58"><name pos:start="95:9" pos:end="95:26">sysbus_connect_irq</name><argument_list pos:start="95:27" pos:end="95:58">(<argument pos:start="95:28" pos:end="95:46"><expr pos:start="95:28" pos:end="95:46"><call pos:start="95:28" pos:end="95:46"><name pos:start="95:28" pos:end="95:41">SYS_BUS_DEVICE</name><argument_list pos:start="95:42" pos:end="95:46">(<argument pos:start="95:43" pos:end="95:45"><expr pos:start="95:43" pos:end="95:45"><name pos:start="95:43" pos:end="95:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:49" pos:end="95:49"><expr pos:start="95:49" pos:end="95:49"><name pos:start="95:49" pos:end="95:49">n</name></expr></argument>, <argument pos:start="95:52" pos:end="95:57"><expr pos:start="95:52" pos:end="95:57"><name pos:start="95:52" pos:end="95:57"><name pos:start="95:52" pos:end="95:54">pic</name><index pos:start="95:55" pos:end="95:57">[<expr pos:start="95:56" pos:end="95:56"><name pos:start="95:56" pos:end="95:56">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:42"><expr pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:11">sic</name><index pos:start="97:12" pos:end="97:14">[<expr pos:start="97:13" pos:end="97:13"><name pos:start="97:13" pos:end="97:13">n</name></expr>]</index></name> <operator pos:start="97:16" pos:end="97:16">=</operator> <call pos:start="97:18" pos:end="97:41"><name pos:start="97:18" pos:end="97:33">qdev_get_gpio_in</name><argument_list pos:start="97:34" pos:end="97:41">(<argument pos:start="97:35" pos:end="97:37"><expr pos:start="97:35" pos:end="97:37"><name pos:start="97:35" pos:end="97:37">dev</name></expr></argument>, <argument pos:start="97:40" pos:end="97:40"><expr pos:start="97:40" pos:end="97:40"><name pos:start="97:40" pos:end="97:40">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="103:5" pos:end="103:63"><expr pos:start="103:5" pos:end="103:62"><call pos:start="103:5" pos:end="103:62"><name pos:start="103:5" pos:end="103:24">sysbus_create_simple</name><argument_list pos:start="103:25" pos:end="103:62">(<argument pos:start="103:26" pos:end="103:41"><expr pos:start="103:26" pos:end="103:41"><literal type="string" pos:start="103:26" pos:end="103:41">"pl050_keyboard"</literal></expr></argument>, <argument pos:start="103:44" pos:end="103:53"><expr pos:start="103:44" pos:end="103:53"><literal type="number" pos:start="103:44" pos:end="103:53">0x10006000</literal></expr></argument>, <argument pos:start="103:56" pos:end="103:61"><expr pos:start="103:56" pos:end="103:61"><name pos:start="103:56" pos:end="103:61"><name pos:start="103:56" pos:end="103:58">sic</name><index pos:start="103:59" pos:end="103:61">[<expr pos:start="103:60" pos:end="103:60"><literal type="number" pos:start="103:60" pos:end="103:60">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:60"><expr pos:start="105:5" pos:end="105:59"><call pos:start="105:5" pos:end="105:59"><name pos:start="105:5" pos:end="105:24">sysbus_create_simple</name><argument_list pos:start="105:25" pos:end="105:59">(<argument pos:start="105:26" pos:end="105:38"><expr pos:start="105:26" pos:end="105:38"><literal type="string" pos:start="105:26" pos:end="105:38">"pl050_mouse"</literal></expr></argument>, <argument pos:start="105:41" pos:end="105:50"><expr pos:start="105:41" pos:end="105:50"><literal type="number" pos:start="105:41" pos:end="105:50">0x10007000</literal></expr></argument>, <argument pos:start="105:53" pos:end="105:58"><expr pos:start="105:53" pos:end="105:58"><name pos:start="105:53" pos:end="105:58"><name pos:start="105:53" pos:end="105:55">sic</name><index pos:start="105:56" pos:end="105:58">[<expr pos:start="105:57" pos:end="105:57"><literal type="number" pos:start="105:57" pos:end="105:57">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:45"><expr pos:start="109:5" pos:end="109:44"><name pos:start="109:5" pos:end="109:7">dev</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:44"><name pos:start="109:11" pos:end="109:21">qdev_create</name><argument_list pos:start="109:22" pos:end="109:44">(<argument pos:start="109:23" pos:end="109:26"><expr pos:start="109:23" pos:end="109:26"><name pos:start="109:23" pos:end="109:26">NULL</name></expr></argument>, <argument pos:start="109:29" pos:end="109:43"><expr pos:start="109:29" pos:end="109:43"><literal type="string" pos:start="109:29" pos:end="109:43">"versatile_pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:33"><expr pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:10">busdev</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <call pos:start="111:14" pos:end="111:32"><name pos:start="111:14" pos:end="111:27">SYS_BUS_DEVICE</name><argument_list pos:start="111:28" pos:end="111:32">(<argument pos:start="111:29" pos:end="111:31"><expr pos:start="111:29" pos:end="111:31"><name pos:start="111:29" pos:end="111:31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><call pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:20">qdev_init_nofail</name><argument_list pos:start="113:21" pos:end="113:25">(<argument pos:start="113:22" pos:end="113:24"><expr pos:start="113:22" pos:end="113:24"><name pos:start="113:22" pos:end="113:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:43"><expr pos:start="115:5" pos:end="115:42"><call pos:start="115:5" pos:end="115:42"><name pos:start="115:5" pos:end="115:19">sysbus_mmio_map</name><argument_list pos:start="115:20" pos:end="115:42">(<argument pos:start="115:21" pos:end="115:26"><expr pos:start="115:21" pos:end="115:26"><name pos:start="115:21" pos:end="115:26">busdev</name></expr></argument>, <argument pos:start="115:29" pos:end="115:29"><expr pos:start="115:29" pos:end="115:29"><literal type="number" pos:start="115:29" pos:end="115:29">0</literal></expr></argument>, <argument pos:start="115:32" pos:end="115:41"><expr pos:start="115:32" pos:end="115:41"><literal type="number" pos:start="115:32" pos:end="115:41">0x41000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:45" pos:end="115:65">/* PCI self-config */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:43"><expr pos:start="117:5" pos:end="117:42"><call pos:start="117:5" pos:end="117:42"><name pos:start="117:5" pos:end="117:19">sysbus_mmio_map</name><argument_list pos:start="117:20" pos:end="117:42">(<argument pos:start="117:21" pos:end="117:26"><expr pos:start="117:21" pos:end="117:26"><name pos:start="117:21" pos:end="117:26">busdev</name></expr></argument>, <argument pos:start="117:29" pos:end="117:29"><expr pos:start="117:29" pos:end="117:29"><literal type="number" pos:start="117:29" pos:end="117:29">1</literal></expr></argument>, <argument pos:start="117:32" pos:end="117:41"><expr pos:start="117:32" pos:end="117:41"><literal type="number" pos:start="117:32" pos:end="117:41">0x42000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:45" pos:end="117:60">/* PCI config */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:43"><expr pos:start="119:5" pos:end="119:42"><call pos:start="119:5" pos:end="119:42"><name pos:start="119:5" pos:end="119:22">sysbus_connect_irq</name><argument_list pos:start="119:23" pos:end="119:42">(<argument pos:start="119:24" pos:end="119:29"><expr pos:start="119:24" pos:end="119:29"><name pos:start="119:24" pos:end="119:29">busdev</name></expr></argument>, <argument pos:start="119:32" pos:end="119:32"><expr pos:start="119:32" pos:end="119:32"><literal type="number" pos:start="119:32" pos:end="119:32">0</literal></expr></argument>, <argument pos:start="119:35" pos:end="119:41"><expr pos:start="119:35" pos:end="119:41"><name pos:start="119:35" pos:end="119:41"><name pos:start="119:35" pos:end="119:37">sic</name><index pos:start="119:38" pos:end="119:41">[<expr pos:start="119:39" pos:end="119:40"><literal type="number" pos:start="119:39" pos:end="119:40">27</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:43"><expr pos:start="121:5" pos:end="121:42"><call pos:start="121:5" pos:end="121:42"><name pos:start="121:5" pos:end="121:22">sysbus_connect_irq</name><argument_list pos:start="121:23" pos:end="121:42">(<argument pos:start="121:24" pos:end="121:29"><expr pos:start="121:24" pos:end="121:29"><name pos:start="121:24" pos:end="121:29">busdev</name></expr></argument>, <argument pos:start="121:32" pos:end="121:32"><expr pos:start="121:32" pos:end="121:32"><literal type="number" pos:start="121:32" pos:end="121:32">1</literal></expr></argument>, <argument pos:start="121:35" pos:end="121:41"><expr pos:start="121:35" pos:end="121:41"><name pos:start="121:35" pos:end="121:41"><name pos:start="121:35" pos:end="121:37">sic</name><index pos:start="121:38" pos:end="121:41">[<expr pos:start="121:39" pos:end="121:40"><literal type="number" pos:start="121:39" pos:end="121:40">28</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:43"><expr pos:start="123:5" pos:end="123:42"><call pos:start="123:5" pos:end="123:42"><name pos:start="123:5" pos:end="123:22">sysbus_connect_irq</name><argument_list pos:start="123:23" pos:end="123:42">(<argument pos:start="123:24" pos:end="123:29"><expr pos:start="123:24" pos:end="123:29"><name pos:start="123:24" pos:end="123:29">busdev</name></expr></argument>, <argument pos:start="123:32" pos:end="123:32"><expr pos:start="123:32" pos:end="123:32"><literal type="number" pos:start="123:32" pos:end="123:32">2</literal></expr></argument>, <argument pos:start="123:35" pos:end="123:41"><expr pos:start="123:35" pos:end="123:41"><name pos:start="123:35" pos:end="123:41"><name pos:start="123:35" pos:end="123:37">sic</name><index pos:start="123:38" pos:end="123:41">[<expr pos:start="123:39" pos:end="123:40"><literal type="number" pos:start="123:39" pos:end="123:40">29</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:43"><expr pos:start="125:5" pos:end="125:42"><call pos:start="125:5" pos:end="125:42"><name pos:start="125:5" pos:end="125:22">sysbus_connect_irq</name><argument_list pos:start="125:23" pos:end="125:42">(<argument pos:start="125:24" pos:end="125:29"><expr pos:start="125:24" pos:end="125:29"><name pos:start="125:24" pos:end="125:29">busdev</name></expr></argument>, <argument pos:start="125:32" pos:end="125:32"><expr pos:start="125:32" pos:end="125:32"><literal type="number" pos:start="125:32" pos:end="125:32">3</literal></expr></argument>, <argument pos:start="125:35" pos:end="125:41"><expr pos:start="125:35" pos:end="125:41"><name pos:start="125:35" pos:end="125:41"><name pos:start="125:35" pos:end="125:37">sic</name><index pos:start="125:38" pos:end="125:41">[<expr pos:start="125:39" pos:end="125:40"><literal type="number" pos:start="125:39" pos:end="125:40">30</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:55"><expr pos:start="127:5" pos:end="127:54"><name pos:start="127:5" pos:end="127:11">pci_bus</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <operator pos:start="127:15" pos:end="127:15">(</operator><name pos:start="127:16" pos:end="127:21">PCIBus</name> <operator pos:start="127:23" pos:end="127:23">*</operator><operator pos:start="127:24" pos:end="127:24">)</operator><call pos:start="127:25" pos:end="127:54"><name pos:start="127:25" pos:end="127:42">qdev_get_child_bus</name><argument_list pos:start="127:43" pos:end="127:54">(<argument pos:start="127:44" pos:end="127:46"><expr pos:start="127:44" pos:end="127:46"><name pos:start="127:44" pos:end="127:46">dev</name></expr></argument>, <argument pos:start="127:49" pos:end="127:53"><expr pos:start="127:49" pos:end="127:53"><literal type="string" pos:start="127:49" pos:end="127:53">"pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="133:59">/* The Versatile PCI bridge does not provide access to PCI IO space,

       so many of the qemu PCI devices are not useable.  */</comment>

    <for pos:start="135:5" pos:end="153:5">for<control pos:start="135:8" pos:end="135:32">(<init pos:start="135:9" pos:end="135:14"><expr pos:start="135:9" pos:end="135:13"><name pos:start="135:9" pos:end="135:9">n</name> <operator pos:start="135:11" pos:end="135:11">=</operator> <literal type="number" pos:start="135:13" pos:end="135:13">0</literal></expr>;</init> <condition pos:start="135:16" pos:end="135:27"><expr pos:start="135:16" pos:end="135:26"><name pos:start="135:16" pos:end="135:16">n</name> <operator pos:start="135:18" pos:end="135:18">&lt;</operator> <name pos:start="135:20" pos:end="135:26">nb_nics</name></expr>;</condition> <incr pos:start="135:29" pos:end="135:31"><expr pos:start="135:29" pos:end="135:31"><name pos:start="135:29" pos:end="135:29">n</name><operator pos:start="135:30" pos:end="135:31">++</operator></expr></incr>)</control> <block pos:start="135:34" pos:end="153:5">{<block_content pos:start="137:9" pos:end="151:9">

        <expr_stmt pos:start="137:9" pos:end="137:26"><expr pos:start="137:9" pos:end="137:25"><name pos:start="137:9" pos:end="137:10">nd</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <operator pos:start="137:14" pos:end="137:14">&amp;</operator><name pos:start="137:15" pos:end="137:25"><name pos:start="137:15" pos:end="137:22">nd_table</name><index pos:start="137:23" pos:end="137:25">[<expr pos:start="137:24" pos:end="137:24"><name pos:start="137:24" pos:end="137:24">n</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="141:9" pos:end="151:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:77">(<expr pos:start="141:13" pos:end="141:76"><operator pos:start="141:13" pos:end="141:13">!</operator><name pos:start="141:14" pos:end="141:21">done_smc</name> <operator pos:start="141:23" pos:end="141:24">&amp;&amp;</operator> <operator pos:start="141:26" pos:end="141:26">(</operator><operator pos:start="141:27" pos:end="141:27">!</operator><name pos:start="141:28" pos:end="141:36"><name pos:start="141:28" pos:end="141:29">nd</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:36">model</name></name> <operator pos:start="141:38" pos:end="141:39">||</operator> <call pos:start="141:41" pos:end="141:70"><name pos:start="141:41" pos:end="141:46">strcmp</name><argument_list pos:start="141:47" pos:end="141:70">(<argument pos:start="141:48" pos:end="141:56"><expr pos:start="141:48" pos:end="141:56"><name pos:start="141:48" pos:end="141:56"><name pos:start="141:48" pos:end="141:49">nd</name><operator pos:start="141:50" pos:end="141:51">-&gt;</operator><name pos:start="141:52" pos:end="141:56">model</name></name></expr></argument>, <argument pos:start="141:59" pos:end="141:69"><expr pos:start="141:59" pos:end="141:69"><literal type="string" pos:start="141:59" pos:end="141:69">"smc91c111"</literal></expr></argument>)</argument_list></call> <operator pos:start="141:72" pos:end="141:73">==</operator> <literal type="number" pos:start="141:75" pos:end="141:75">0</literal><operator pos:start="141:76" pos:end="141:76">)</operator></expr>)</condition> <block pos:start="141:79" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:25">

            <expr_stmt pos:start="143:13" pos:end="143:52"><expr pos:start="143:13" pos:end="143:51"><call pos:start="143:13" pos:end="143:51"><name pos:start="143:13" pos:end="143:26">smc91c111_init</name><argument_list pos:start="143:27" pos:end="143:51">(<argument pos:start="143:28" pos:end="143:29"><expr pos:start="143:28" pos:end="143:29"><name pos:start="143:28" pos:end="143:29">nd</name></expr></argument>, <argument pos:start="143:32" pos:end="143:41"><expr pos:start="143:32" pos:end="143:41"><literal type="number" pos:start="143:32" pos:end="143:41">0x10010000</literal></expr></argument>, <argument pos:start="143:44" pos:end="143:50"><expr pos:start="143:44" pos:end="143:50"><name pos:start="143:44" pos:end="143:50"><name pos:start="143:44" pos:end="143:46">sic</name><index pos:start="143:47" pos:end="143:50">[<expr pos:start="143:48" pos:end="143:49"><literal type="number" pos:start="143:48" pos:end="143:49">25</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:25"><expr pos:start="145:13" pos:end="145:24"><name pos:start="145:13" pos:end="145:20">done_smc</name> <operator pos:start="145:22" pos:end="145:22">=</operator> <literal type="number" pos:start="145:24" pos:end="145:24">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="147:11" pos:end="151:9">else <block pos:start="147:16" pos:end="151:9">{<block_content pos:start="149:13" pos:end="149:53">

            <expr_stmt pos:start="149:13" pos:end="149:53"><expr pos:start="149:13" pos:end="149:52"><call pos:start="149:13" pos:end="149:52"><name pos:start="149:13" pos:end="149:31">pci_nic_init_nofail</name><argument_list pos:start="149:32" pos:end="149:52">(<argument pos:start="149:33" pos:end="149:34"><expr pos:start="149:33" pos:end="149:34"><name pos:start="149:33" pos:end="149:34">nd</name></expr></argument>, <argument pos:start="149:37" pos:end="149:45"><expr pos:start="149:37" pos:end="149:45"><literal type="string" pos:start="149:37" pos:end="149:45">"rtl8139"</literal></expr></argument>, <argument pos:start="149:48" pos:end="149:51"><expr pos:start="149:48" pos:end="149:51"><name pos:start="149:48" pos:end="149:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="155:5" pos:end="159:5"><if pos:start="155:5" pos:end="159:5">if <condition pos:start="155:8" pos:end="155:27">(<expr pos:start="155:9" pos:end="155:26"><call pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:19">usb_enabled</name><argument_list pos:start="155:20" pos:end="155:26">(<argument pos:start="155:21" pos:end="155:25"><expr pos:start="155:21" pos:end="155:25"><name pos:start="155:21" pos:end="155:25">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:29" pos:end="159:5">{<block_content pos:start="157:9" pos:end="157:51">

        <expr_stmt pos:start="157:9" pos:end="157:51"><expr pos:start="157:9" pos:end="157:50"><call pos:start="157:9" pos:end="157:50"><name pos:start="157:9" pos:end="157:25">pci_create_simple</name><argument_list pos:start="157:26" pos:end="157:50">(<argument pos:start="157:27" pos:end="157:33"><expr pos:start="157:27" pos:end="157:33"><name pos:start="157:27" pos:end="157:33">pci_bus</name></expr></argument>, <argument pos:start="157:36" pos:end="157:37"><expr pos:start="157:36" pos:end="157:37"><operator pos:start="157:36" pos:end="157:36">-</operator><literal type="number" pos:start="157:37" pos:end="157:37">1</literal></expr></argument>, <argument pos:start="157:40" pos:end="157:49"><expr pos:start="157:40" pos:end="157:49"><literal type="string" pos:start="157:40" pos:end="157:49">"pci-ohci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:35"><expr pos:start="161:5" pos:end="161:34"><name pos:start="161:5" pos:end="161:5">n</name> <operator pos:start="161:7" pos:end="161:7">=</operator> <call pos:start="161:9" pos:end="161:34"><name pos:start="161:9" pos:end="161:25">drive_get_max_bus</name><argument_list pos:start="161:26" pos:end="161:34">(<argument pos:start="161:27" pos:end="161:33"><expr pos:start="161:27" pos:end="161:33"><name pos:start="161:27" pos:end="161:33">IF_SCSI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="163:5" pos:end="169:5">while <condition pos:start="163:11" pos:end="163:18">(<expr pos:start="163:12" pos:end="163:17"><name pos:start="163:12" pos:end="163:12">n</name> <operator pos:start="163:14" pos:end="163:15">&gt;=</operator> <literal type="number" pos:start="163:17" pos:end="163:17">0</literal></expr>)</condition> <block pos:start="163:20" pos:end="169:5">{<block_content pos:start="165:9" pos:end="167:12">

        <expr_stmt pos:start="165:9" pos:end="165:53"><expr pos:start="165:9" pos:end="165:52"><call pos:start="165:9" pos:end="165:52"><name pos:start="165:9" pos:end="165:25">pci_create_simple</name><argument_list pos:start="165:26" pos:end="165:52">(<argument pos:start="165:27" pos:end="165:33"><expr pos:start="165:27" pos:end="165:33"><name pos:start="165:27" pos:end="165:33">pci_bus</name></expr></argument>, <argument pos:start="165:36" pos:end="165:37"><expr pos:start="165:36" pos:end="165:37"><operator pos:start="165:36" pos:end="165:36">-</operator><literal type="number" pos:start="165:37" pos:end="165:37">1</literal></expr></argument>, <argument pos:start="165:40" pos:end="165:51"><expr pos:start="165:40" pos:end="165:51"><literal type="string" pos:start="165:40" pos:end="165:51">"lsi53c895a"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:12"><expr pos:start="167:9" pos:end="167:11"><name pos:start="167:9" pos:end="167:9">n</name><operator pos:start="167:10" pos:end="167:11">--</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="173:5" pos:end="173:55"><expr pos:start="173:5" pos:end="173:54"><call pos:start="173:5" pos:end="173:54"><name pos:start="173:5" pos:end="173:24">sysbus_create_simple</name><argument_list pos:start="173:25" pos:end="173:54">(<argument pos:start="173:26" pos:end="173:32"><expr pos:start="173:26" pos:end="173:32"><literal type="string" pos:start="173:26" pos:end="173:32">"pl011"</literal></expr></argument>, <argument pos:start="173:35" pos:end="173:44"><expr pos:start="173:35" pos:end="173:44"><literal type="number" pos:start="173:35" pos:end="173:44">0x101f1000</literal></expr></argument>, <argument pos:start="173:47" pos:end="173:53"><expr pos:start="173:47" pos:end="173:53"><name pos:start="173:47" pos:end="173:53"><name pos:start="173:47" pos:end="173:49">pic</name><index pos:start="173:50" pos:end="173:53">[<expr pos:start="173:51" pos:end="173:52"><literal type="number" pos:start="173:51" pos:end="173:52">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:55"><expr pos:start="175:5" pos:end="175:54"><call pos:start="175:5" pos:end="175:54"><name pos:start="175:5" pos:end="175:24">sysbus_create_simple</name><argument_list pos:start="175:25" pos:end="175:54">(<argument pos:start="175:26" pos:end="175:32"><expr pos:start="175:26" pos:end="175:32"><literal type="string" pos:start="175:26" pos:end="175:32">"pl011"</literal></expr></argument>, <argument pos:start="175:35" pos:end="175:44"><expr pos:start="175:35" pos:end="175:44"><literal type="number" pos:start="175:35" pos:end="175:44">0x101f2000</literal></expr></argument>, <argument pos:start="175:47" pos:end="175:53"><expr pos:start="175:47" pos:end="175:53"><name pos:start="175:47" pos:end="175:53"><name pos:start="175:47" pos:end="175:49">pic</name><index pos:start="175:50" pos:end="175:53">[<expr pos:start="175:51" pos:end="175:52"><literal type="number" pos:start="175:51" pos:end="175:52">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:55"><expr pos:start="177:5" pos:end="177:54"><call pos:start="177:5" pos:end="177:54"><name pos:start="177:5" pos:end="177:24">sysbus_create_simple</name><argument_list pos:start="177:25" pos:end="177:54">(<argument pos:start="177:26" pos:end="177:32"><expr pos:start="177:26" pos:end="177:32"><literal type="string" pos:start="177:26" pos:end="177:32">"pl011"</literal></expr></argument>, <argument pos:start="177:35" pos:end="177:44"><expr pos:start="177:35" pos:end="177:44"><literal type="number" pos:start="177:35" pos:end="177:44">0x101f3000</literal></expr></argument>, <argument pos:start="177:47" pos:end="177:53"><expr pos:start="177:47" pos:end="177:53"><name pos:start="177:47" pos:end="177:53"><name pos:start="177:47" pos:end="177:49">pic</name><index pos:start="177:50" pos:end="177:53">[<expr pos:start="177:51" pos:end="177:52"><literal type="number" pos:start="177:51" pos:end="177:52">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:54"><expr pos:start="179:5" pos:end="179:53"><call pos:start="179:5" pos:end="179:53"><name pos:start="179:5" pos:end="179:24">sysbus_create_simple</name><argument_list pos:start="179:25" pos:end="179:53">(<argument pos:start="179:26" pos:end="179:32"><expr pos:start="179:26" pos:end="179:32"><literal type="string" pos:start="179:26" pos:end="179:32">"pl011"</literal></expr></argument>, <argument pos:start="179:35" pos:end="179:44"><expr pos:start="179:35" pos:end="179:44"><literal type="number" pos:start="179:35" pos:end="179:44">0x10009000</literal></expr></argument>, <argument pos:start="179:47" pos:end="179:52"><expr pos:start="179:47" pos:end="179:52"><name pos:start="179:47" pos:end="179:52"><name pos:start="179:47" pos:end="179:49">sic</name><index pos:start="179:50" pos:end="179:52">[<expr pos:start="179:51" pos:end="179:51"><literal type="number" pos:start="179:51" pos:end="179:51">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:55"><expr pos:start="183:5" pos:end="183:54"><call pos:start="183:5" pos:end="183:54"><name pos:start="183:5" pos:end="183:24">sysbus_create_simple</name><argument_list pos:start="183:25" pos:end="183:54">(<argument pos:start="183:26" pos:end="183:32"><expr pos:start="183:26" pos:end="183:32"><literal type="string" pos:start="183:26" pos:end="183:32">"pl080"</literal></expr></argument>, <argument pos:start="183:35" pos:end="183:44"><expr pos:start="183:35" pos:end="183:44"><literal type="number" pos:start="183:35" pos:end="183:44">0x10130000</literal></expr></argument>, <argument pos:start="183:47" pos:end="183:53"><expr pos:start="183:47" pos:end="183:53"><name pos:start="183:47" pos:end="183:53"><name pos:start="183:47" pos:end="183:49">pic</name><index pos:start="183:50" pos:end="183:53">[<expr pos:start="183:51" pos:end="183:52"><literal type="number" pos:start="183:51" pos:end="183:52">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:54"><expr pos:start="185:5" pos:end="185:53"><call pos:start="185:5" pos:end="185:53"><name pos:start="185:5" pos:end="185:24">sysbus_create_simple</name><argument_list pos:start="185:25" pos:end="185:53">(<argument pos:start="185:26" pos:end="185:32"><expr pos:start="185:26" pos:end="185:32"><literal type="string" pos:start="185:26" pos:end="185:32">"sp804"</literal></expr></argument>, <argument pos:start="185:35" pos:end="185:44"><expr pos:start="185:35" pos:end="185:44"><literal type="number" pos:start="185:35" pos:end="185:44">0x101e2000</literal></expr></argument>, <argument pos:start="185:47" pos:end="185:52"><expr pos:start="185:47" pos:end="185:52"><name pos:start="185:47" pos:end="185:52"><name pos:start="185:47" pos:end="185:49">pic</name><index pos:start="185:50" pos:end="185:52">[<expr pos:start="185:51" pos:end="185:51"><literal type="number" pos:start="185:51" pos:end="185:51">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:54"><expr pos:start="187:5" pos:end="187:53"><call pos:start="187:5" pos:end="187:53"><name pos:start="187:5" pos:end="187:24">sysbus_create_simple</name><argument_list pos:start="187:25" pos:end="187:53">(<argument pos:start="187:26" pos:end="187:32"><expr pos:start="187:26" pos:end="187:32"><literal type="string" pos:start="187:26" pos:end="187:32">"sp804"</literal></expr></argument>, <argument pos:start="187:35" pos:end="187:44"><expr pos:start="187:35" pos:end="187:44"><literal type="number" pos:start="187:35" pos:end="187:44">0x101e3000</literal></expr></argument>, <argument pos:start="187:47" pos:end="187:52"><expr pos:start="187:47" pos:end="187:52"><name pos:start="187:47" pos:end="187:52"><name pos:start="187:47" pos:end="187:49">pic</name><index pos:start="187:50" pos:end="187:52">[<expr pos:start="187:51" pos:end="187:51"><literal type="number" pos:start="187:51" pos:end="187:51">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:54"><expr pos:start="191:5" pos:end="191:53"><call pos:start="191:5" pos:end="191:53"><name pos:start="191:5" pos:end="191:24">sysbus_create_simple</name><argument_list pos:start="191:25" pos:end="191:53">(<argument pos:start="191:26" pos:end="191:32"><expr pos:start="191:26" pos:end="191:32"><literal type="string" pos:start="191:26" pos:end="191:32">"pl061"</literal></expr></argument>, <argument pos:start="191:35" pos:end="191:44"><expr pos:start="191:35" pos:end="191:44"><literal type="number" pos:start="191:35" pos:end="191:44">0x101e4000</literal></expr></argument>, <argument pos:start="191:47" pos:end="191:52"><expr pos:start="191:47" pos:end="191:52"><name pos:start="191:47" pos:end="191:52"><name pos:start="191:47" pos:end="191:49">pic</name><index pos:start="191:50" pos:end="191:52">[<expr pos:start="191:51" pos:end="191:51"><literal type="number" pos:start="191:51" pos:end="191:51">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:54"><expr pos:start="193:5" pos:end="193:53"><call pos:start="193:5" pos:end="193:53"><name pos:start="193:5" pos:end="193:24">sysbus_create_simple</name><argument_list pos:start="193:25" pos:end="193:53">(<argument pos:start="193:26" pos:end="193:32"><expr pos:start="193:26" pos:end="193:32"><literal type="string" pos:start="193:26" pos:end="193:32">"pl061"</literal></expr></argument>, <argument pos:start="193:35" pos:end="193:44"><expr pos:start="193:35" pos:end="193:44"><literal type="number" pos:start="193:35" pos:end="193:44">0x101e5000</literal></expr></argument>, <argument pos:start="193:47" pos:end="193:52"><expr pos:start="193:47" pos:end="193:52"><name pos:start="193:47" pos:end="193:52"><name pos:start="193:47" pos:end="193:49">pic</name><index pos:start="193:50" pos:end="193:52">[<expr pos:start="193:51" pos:end="193:51"><literal type="number" pos:start="193:51" pos:end="193:51">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:54"><expr pos:start="195:5" pos:end="195:53"><call pos:start="195:5" pos:end="195:53"><name pos:start="195:5" pos:end="195:24">sysbus_create_simple</name><argument_list pos:start="195:25" pos:end="195:53">(<argument pos:start="195:26" pos:end="195:32"><expr pos:start="195:26" pos:end="195:32"><literal type="string" pos:start="195:26" pos:end="195:32">"pl061"</literal></expr></argument>, <argument pos:start="195:35" pos:end="195:44"><expr pos:start="195:35" pos:end="195:44"><literal type="number" pos:start="195:35" pos:end="195:44">0x101e6000</literal></expr></argument>, <argument pos:start="195:47" pos:end="195:52"><expr pos:start="195:47" pos:end="195:52"><name pos:start="195:47" pos:end="195:52"><name pos:start="195:47" pos:end="195:49">pic</name><index pos:start="195:50" pos:end="195:52">[<expr pos:start="195:51" pos:end="195:51"><literal type="number" pos:start="195:51" pos:end="195:51">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:54"><expr pos:start="197:5" pos:end="197:53"><call pos:start="197:5" pos:end="197:53"><name pos:start="197:5" pos:end="197:24">sysbus_create_simple</name><argument_list pos:start="197:25" pos:end="197:53">(<argument pos:start="197:26" pos:end="197:32"><expr pos:start="197:26" pos:end="197:32"><literal type="string" pos:start="197:26" pos:end="197:32">"pl061"</literal></expr></argument>, <argument pos:start="197:35" pos:end="197:44"><expr pos:start="197:35" pos:end="197:44"><literal type="number" pos:start="197:35" pos:end="197:44">0x101e7000</literal></expr></argument>, <argument pos:start="197:47" pos:end="197:52"><expr pos:start="197:47" pos:end="197:52"><name pos:start="197:47" pos:end="197:52"><name pos:start="197:47" pos:end="197:49">pic</name><index pos:start="197:50" pos:end="197:52">[<expr pos:start="197:51" pos:end="197:51"><literal type="number" pos:start="197:51" pos:end="197:51">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="201:5" pos:end="203:64">/* The versatile/PB actually has a modified Color LCD controller

       that includes hardware cursor support from the PL111.  */</comment>

    <expr_stmt pos:start="205:5" pos:end="205:71"><expr pos:start="205:5" pos:end="205:70"><name pos:start="205:5" pos:end="205:7">dev</name> <operator pos:start="205:9" pos:end="205:9">=</operator> <call pos:start="205:11" pos:end="205:70"><name pos:start="205:11" pos:end="205:30">sysbus_create_simple</name><argument_list pos:start="205:31" pos:end="205:70">(<argument pos:start="205:32" pos:end="205:48"><expr pos:start="205:32" pos:end="205:48"><literal type="string" pos:start="205:32" pos:end="205:48">"pl110_versatile"</literal></expr></argument>, <argument pos:start="205:51" pos:end="205:60"><expr pos:start="205:51" pos:end="205:60"><literal type="number" pos:start="205:51" pos:end="205:60">0x10120000</literal></expr></argument>, <argument pos:start="205:63" pos:end="205:69"><expr pos:start="205:63" pos:end="205:69"><name pos:start="205:63" pos:end="205:69"><name pos:start="205:63" pos:end="205:65">pic</name><index pos:start="205:66" pos:end="205:69">[<expr pos:start="205:67" pos:end="205:68"><literal type="number" pos:start="205:67" pos:end="205:68">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="207:5" pos:end="207:68">/* Wire up the mux control signals from the SYS_CLCD register */</comment>

    <expr_stmt pos:start="209:5" pos:end="209:63"><expr pos:start="209:5" pos:end="209:62"><call pos:start="209:5" pos:end="209:62"><name pos:start="209:5" pos:end="209:25">qdev_connect_gpio_out</name><argument_list pos:start="209:26" pos:end="209:62">(<argument pos:start="209:27" pos:end="209:32"><expr pos:start="209:27" pos:end="209:32"><name pos:start="209:27" pos:end="209:32">sysctl</name></expr></argument>, <argument pos:start="209:35" pos:end="209:35"><expr pos:start="209:35" pos:end="209:35"><literal type="number" pos:start="209:35" pos:end="209:35">0</literal></expr></argument>, <argument pos:start="209:38" pos:end="209:61"><expr pos:start="209:38" pos:end="209:61"><call pos:start="209:38" pos:end="209:61"><name pos:start="209:38" pos:end="209:53">qdev_get_gpio_in</name><argument_list pos:start="209:54" pos:end="209:61">(<argument pos:start="209:55" pos:end="209:57"><expr pos:start="209:55" pos:end="209:57"><name pos:start="209:55" pos:end="209:57">dev</name></expr></argument>, <argument pos:start="209:60" pos:end="209:60"><expr pos:start="209:60" pos:end="209:60"><literal type="number" pos:start="209:60" pos:end="209:60">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:70"><expr pos:start="213:5" pos:end="213:69"><call pos:start="213:5" pos:end="213:69"><name pos:start="213:5" pos:end="213:25">sysbus_create_varargs</name><argument_list pos:start="213:26" pos:end="213:69">(<argument pos:start="213:27" pos:end="213:33"><expr pos:start="213:27" pos:end="213:33"><literal type="string" pos:start="213:27" pos:end="213:33">"pl181"</literal></expr></argument>, <argument pos:start="213:36" pos:end="213:45"><expr pos:start="213:36" pos:end="213:45"><literal type="number" pos:start="213:36" pos:end="213:45">0x10005000</literal></expr></argument>, <argument pos:start="213:48" pos:end="213:54"><expr pos:start="213:48" pos:end="213:54"><name pos:start="213:48" pos:end="213:54"><name pos:start="213:48" pos:end="213:50">sic</name><index pos:start="213:51" pos:end="213:54">[<expr pos:start="213:52" pos:end="213:53"><literal type="number" pos:start="213:52" pos:end="213:53">22</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:57" pos:end="213:62"><expr pos:start="213:57" pos:end="213:62"><name pos:start="213:57" pos:end="213:62"><name pos:start="213:57" pos:end="213:59">sic</name><index pos:start="213:60" pos:end="213:62">[<expr pos:start="213:61" pos:end="213:61"><literal type="number" pos:start="213:61" pos:end="213:61">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:65" pos:end="213:68"><expr pos:start="213:65" pos:end="213:68"><name pos:start="213:65" pos:end="213:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:70"><expr pos:start="215:5" pos:end="215:69"><call pos:start="215:5" pos:end="215:69"><name pos:start="215:5" pos:end="215:25">sysbus_create_varargs</name><argument_list pos:start="215:26" pos:end="215:69">(<argument pos:start="215:27" pos:end="215:33"><expr pos:start="215:27" pos:end="215:33"><literal type="string" pos:start="215:27" pos:end="215:33">"pl181"</literal></expr></argument>, <argument pos:start="215:36" pos:end="215:45"><expr pos:start="215:36" pos:end="215:45"><literal type="number" pos:start="215:36" pos:end="215:45">0x1000b000</literal></expr></argument>, <argument pos:start="215:48" pos:end="215:54"><expr pos:start="215:48" pos:end="215:54"><name pos:start="215:48" pos:end="215:54"><name pos:start="215:48" pos:end="215:50">sic</name><index pos:start="215:51" pos:end="215:54">[<expr pos:start="215:52" pos:end="215:53"><literal type="number" pos:start="215:52" pos:end="215:53">23</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:57" pos:end="215:62"><expr pos:start="215:57" pos:end="215:62"><name pos:start="215:57" pos:end="215:62"><name pos:start="215:57" pos:end="215:59">sic</name><index pos:start="215:60" pos:end="215:62">[<expr pos:start="215:61" pos:end="215:61"><literal type="number" pos:start="215:61" pos:end="215:61">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:65" pos:end="215:68"><expr pos:start="215:65" pos:end="215:68"><name pos:start="215:65" pos:end="215:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="219:5" pos:end="219:36">/* Add PL031 Real Time Clock. */</comment>

    <expr_stmt pos:start="221:5" pos:end="221:55"><expr pos:start="221:5" pos:end="221:54"><call pos:start="221:5" pos:end="221:54"><name pos:start="221:5" pos:end="221:24">sysbus_create_simple</name><argument_list pos:start="221:25" pos:end="221:54">(<argument pos:start="221:26" pos:end="221:32"><expr pos:start="221:26" pos:end="221:32"><literal type="string" pos:start="221:26" pos:end="221:32">"pl031"</literal></expr></argument>, <argument pos:start="221:35" pos:end="221:44"><expr pos:start="221:35" pos:end="221:44"><literal type="number" pos:start="221:35" pos:end="221:44">0x101e8000</literal></expr></argument>, <argument pos:start="221:47" pos:end="221:53"><expr pos:start="221:47" pos:end="221:53"><name pos:start="221:47" pos:end="221:53"><name pos:start="221:47" pos:end="221:49">pic</name><index pos:start="221:50" pos:end="221:53">[<expr pos:start="221:51" pos:end="221:52"><literal type="number" pos:start="221:51" pos:end="221:52">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:66"><expr pos:start="225:5" pos:end="225:65"><name pos:start="225:5" pos:end="225:7">dev</name> <operator pos:start="225:9" pos:end="225:9">=</operator> <call pos:start="225:11" pos:end="225:65"><name pos:start="225:11" pos:end="225:30">sysbus_create_simple</name><argument_list pos:start="225:31" pos:end="225:65">(<argument pos:start="225:32" pos:end="225:46"><expr pos:start="225:32" pos:end="225:46"><literal type="string" pos:start="225:32" pos:end="225:46">"versatile_i2c"</literal></expr></argument>, <argument pos:start="225:49" pos:end="225:58"><expr pos:start="225:49" pos:end="225:58"><literal type="number" pos:start="225:49" pos:end="225:58">0x10002000</literal></expr></argument>, <argument pos:start="225:61" pos:end="225:64"><expr pos:start="225:61" pos:end="225:64"><name pos:start="225:61" pos:end="225:64">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:52"><expr pos:start="227:5" pos:end="227:51"><name pos:start="227:5" pos:end="227:7">i2c</name> <operator pos:start="227:9" pos:end="227:9">=</operator> <operator pos:start="227:11" pos:end="227:11">(</operator><name pos:start="227:12" pos:end="227:18">i2c_bus</name> <operator pos:start="227:20" pos:end="227:20">*</operator><operator pos:start="227:21" pos:end="227:21">)</operator><call pos:start="227:22" pos:end="227:51"><name pos:start="227:22" pos:end="227:39">qdev_get_child_bus</name><argument_list pos:start="227:40" pos:end="227:51">(<argument pos:start="227:41" pos:end="227:43"><expr pos:start="227:41" pos:end="227:43"><name pos:start="227:41" pos:end="227:43">dev</name></expr></argument>, <argument pos:start="227:46" pos:end="227:50"><expr pos:start="227:46" pos:end="227:50"><literal type="string" pos:start="227:46" pos:end="227:50">"i2c"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:42"><expr pos:start="229:5" pos:end="229:41"><call pos:start="229:5" pos:end="229:41"><name pos:start="229:5" pos:end="229:20">i2c_create_slave</name><argument_list pos:start="229:21" pos:end="229:41">(<argument pos:start="229:22" pos:end="229:24"><expr pos:start="229:22" pos:end="229:24"><name pos:start="229:22" pos:end="229:24">i2c</name></expr></argument>, <argument pos:start="229:27" pos:end="229:34"><expr pos:start="229:27" pos:end="229:34"><literal type="string" pos:start="229:27" pos:end="229:34">"ds1338"</literal></expr></argument>, <argument pos:start="229:37" pos:end="229:40"><expr pos:start="229:37" pos:end="229:40"><literal type="number" pos:start="229:37" pos:end="229:40">0x68</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="233:5" pos:end="233:54">/* Add PL041 AACI Interface to the LM4549 codec */</comment>

    <expr_stmt pos:start="235:5" pos:end="235:39"><expr pos:start="235:5" pos:end="235:38"><name pos:start="235:5" pos:end="235:9">pl041</name> <operator pos:start="235:11" pos:end="235:11">=</operator> <call pos:start="235:13" pos:end="235:38"><name pos:start="235:13" pos:end="235:23">qdev_create</name><argument_list pos:start="235:24" pos:end="235:38">(<argument pos:start="235:25" pos:end="235:28"><expr pos:start="235:25" pos:end="235:28"><name pos:start="235:25" pos:end="235:28">NULL</name></expr></argument>, <argument pos:start="235:31" pos:end="235:37"><expr pos:start="235:31" pos:end="235:37"><literal type="string" pos:start="235:31" pos:end="235:37">"pl041"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:54"><expr pos:start="237:5" pos:end="237:53"><call pos:start="237:5" pos:end="237:53"><name pos:start="237:5" pos:end="237:24">qdev_prop_set_uint32</name><argument_list pos:start="237:25" pos:end="237:53">(<argument pos:start="237:26" pos:end="237:30"><expr pos:start="237:26" pos:end="237:30"><name pos:start="237:26" pos:end="237:30">pl041</name></expr></argument>, <argument pos:start="237:33" pos:end="237:47"><expr pos:start="237:33" pos:end="237:47"><literal type="string" pos:start="237:33" pos:end="237:47">"nc_fifo_depth"</literal></expr></argument>, <argument pos:start="237:50" pos:end="237:52"><expr pos:start="237:50" pos:end="237:52"><literal type="number" pos:start="237:50" pos:end="237:52">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:28"><expr pos:start="239:5" pos:end="239:27"><call pos:start="239:5" pos:end="239:27"><name pos:start="239:5" pos:end="239:20">qdev_init_nofail</name><argument_list pos:start="239:21" pos:end="239:27">(<argument pos:start="239:22" pos:end="239:26"><expr pos:start="239:22" pos:end="239:26"><name pos:start="239:22" pos:end="239:26">pl041</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:58"><expr pos:start="241:5" pos:end="241:57"><call pos:start="241:5" pos:end="241:57"><name pos:start="241:5" pos:end="241:19">sysbus_mmio_map</name><argument_list pos:start="241:20" pos:end="241:57">(<argument pos:start="241:21" pos:end="241:41"><expr pos:start="241:21" pos:end="241:41"><call pos:start="241:21" pos:end="241:41"><name pos:start="241:21" pos:end="241:34">SYS_BUS_DEVICE</name><argument_list pos:start="241:35" pos:end="241:41">(<argument pos:start="241:36" pos:end="241:40"><expr pos:start="241:36" pos:end="241:40"><name pos:start="241:36" pos:end="241:40">pl041</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="241:44" pos:end="241:44"><expr pos:start="241:44" pos:end="241:44"><literal type="number" pos:start="241:44" pos:end="241:44">0</literal></expr></argument>, <argument pos:start="241:47" pos:end="241:56"><expr pos:start="241:47" pos:end="241:56"><literal type="number" pos:start="241:47" pos:end="241:56">0x10004000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:58"><expr pos:start="243:5" pos:end="243:57"><call pos:start="243:5" pos:end="243:57"><name pos:start="243:5" pos:end="243:22">sysbus_connect_irq</name><argument_list pos:start="243:23" pos:end="243:57">(<argument pos:start="243:24" pos:end="243:44"><expr pos:start="243:24" pos:end="243:44"><call pos:start="243:24" pos:end="243:44"><name pos:start="243:24" pos:end="243:37">SYS_BUS_DEVICE</name><argument_list pos:start="243:38" pos:end="243:44">(<argument pos:start="243:39" pos:end="243:43"><expr pos:start="243:39" pos:end="243:43"><name pos:start="243:39" pos:end="243:43">pl041</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="243:47" pos:end="243:47"><expr pos:start="243:47" pos:end="243:47"><literal type="number" pos:start="243:47" pos:end="243:47">0</literal></expr></argument>, <argument pos:start="243:50" pos:end="243:56"><expr pos:start="243:50" pos:end="243:56"><name pos:start="243:50" pos:end="243:56"><name pos:start="243:50" pos:end="243:52">sic</name><index pos:start="243:53" pos:end="243:56">[<expr pos:start="243:54" pos:end="243:55"><literal type="number" pos:start="243:54" pos:end="243:55">24</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="247:5" pos:end="247:39">/* Memory map for Versatile/PB:  */</comment>

    <comment type="block" pos:start="249:5" pos:end="249:39">/* 0x10000000 System registers.  */</comment>

    <comment type="block" pos:start="251:5" pos:end="251:54">/* 0x10001000 PCI controller config registers.  */</comment>

    <comment type="block" pos:start="253:5" pos:end="253:43">/* 0x10002000 Serial bus interface.  */</comment>

    <comment type="block" pos:start="255:5" pos:end="255:54">/*  0x10003000 Secondary interrupt controller.  */</comment>

    <comment type="block" pos:start="257:5" pos:end="257:35">/* 0x10004000 AACI (audio).  */</comment>

    <comment type="block" pos:start="259:5" pos:end="259:29">/*  0x10005000 MMCI0.  */</comment>

    <comment type="block" pos:start="261:5" pos:end="261:39">/*  0x10006000 KMI0 (keyboard).  */</comment>

    <comment type="block" pos:start="263:5" pos:end="263:36">/*  0x10007000 KMI1 (mouse).  */</comment>

    <comment type="block" pos:start="265:5" pos:end="265:46">/* 0x10008000 Character LCD Interface.  */</comment>

    <comment type="block" pos:start="267:5" pos:end="267:29">/*  0x10009000 UART3.  */</comment>

    <comment type="block" pos:start="269:5" pos:end="269:35">/* 0x1000a000 Smart card 1.  */</comment>

    <comment type="block" pos:start="271:5" pos:end="271:29">/*  0x1000b000 MMCI1.  */</comment>

    <comment type="block" pos:start="273:5" pos:end="273:32">/*  0x10010000 Ethernet.  */</comment>

    <comment type="block" pos:start="275:5" pos:end="275:26">/* 0x10020000 USB.  */</comment>

    <comment type="block" pos:start="277:5" pos:end="277:27">/* 0x10100000 SSMC.  */</comment>

    <comment type="block" pos:start="279:5" pos:end="279:27">/* 0x10110000 MPMC.  */</comment>

    <comment type="block" pos:start="281:5" pos:end="281:39">/*  0x10120000 CLCD Controller.  */</comment>

    <comment type="block" pos:start="283:5" pos:end="283:38">/*  0x10130000 DMA Controller.  */</comment>

    <comment type="block" pos:start="285:5" pos:end="285:53">/*  0x10140000 Vectored interrupt controller.  */</comment>

    <comment type="block" pos:start="287:5" pos:end="287:44">/* 0x101d0000 AHB Monitor Interface.  */</comment>

    <comment type="block" pos:start="289:5" pos:end="289:40">/* 0x101e0000 System Controller.  */</comment>

    <comment type="block" pos:start="291:5" pos:end="291:41">/* 0x101e1000 Watchdog Interface.  */</comment>

    <comment type="block" pos:start="293:5" pos:end="293:32">/* 0x101e2000 Timer 0/1.  */</comment>

    <comment type="block" pos:start="295:5" pos:end="295:32">/* 0x101e3000 Timer 2/3.  */</comment>

    <comment type="block" pos:start="297:5" pos:end="297:34">/* 0x101e4000 GPIO port 0.  */</comment>

    <comment type="block" pos:start="299:5" pos:end="299:34">/* 0x101e5000 GPIO port 1.  */</comment>

    <comment type="block" pos:start="301:5" pos:end="301:34">/* 0x101e6000 GPIO port 2.  */</comment>

    <comment type="block" pos:start="303:5" pos:end="303:34">/* 0x101e7000 GPIO port 3.  */</comment>

    <comment type="block" pos:start="305:5" pos:end="305:26">/* 0x101e8000 RTC.  */</comment>

    <comment type="block" pos:start="307:5" pos:end="307:35">/* 0x101f0000 Smart card 0.  */</comment>

    <comment type="block" pos:start="309:5" pos:end="309:29">/*  0x101f1000 UART0.  */</comment>

    <comment type="block" pos:start="311:5" pos:end="311:29">/*  0x101f2000 UART1.  */</comment>

    <comment type="block" pos:start="313:5" pos:end="313:29">/*  0x101f3000 UART2.  */</comment>

    <comment type="block" pos:start="315:5" pos:end="315:27">/* 0x101f4000 SSPI.  */</comment>

    <comment type="block" pos:start="317:5" pos:end="317:30">/* 0x34000000 NOR Flash */</comment>



    <expr_stmt pos:start="321:5" pos:end="321:39"><expr pos:start="321:5" pos:end="321:38"><name pos:start="321:5" pos:end="321:9">dinfo</name> <operator pos:start="321:11" pos:end="321:11">=</operator> <call pos:start="321:13" pos:end="321:38"><name pos:start="321:13" pos:end="321:21">drive_get</name><argument_list pos:start="321:22" pos:end="321:38">(<argument pos:start="321:23" pos:end="321:31"><expr pos:start="321:23" pos:end="321:31"><name pos:start="321:23" pos:end="321:31">IF_PFLASH</name></expr></argument>, <argument pos:start="321:34" pos:end="321:34"><expr pos:start="321:34" pos:end="321:34"><literal type="number" pos:start="321:34" pos:end="321:34">0</literal></expr></argument>, <argument pos:start="321:37" pos:end="321:37"><expr pos:start="321:37" pos:end="321:37"><literal type="number" pos:start="321:37" pos:end="321:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="323:5" pos:end="335:5"><if pos:start="323:5" pos:end="335:5">if <condition pos:start="323:8" pos:end="331:61">(<expr pos:start="323:9" pos:end="331:60"><operator pos:start="323:9" pos:end="323:9">!</operator><call pos:start="323:10" pos:end="331:60"><name pos:start="323:10" pos:end="323:30">pflash_cfi01_register</name><argument_list pos:start="323:31" pos:end="331:60">(<argument pos:start="323:32" pos:end="323:51"><expr pos:start="323:32" pos:end="323:51"><name pos:start="323:32" pos:end="323:51">VERSATILE_FLASH_ADDR</name></expr></argument>, <argument pos:start="323:54" pos:end="323:57"><expr pos:start="323:54" pos:end="323:57"><name pos:start="323:54" pos:end="323:57">NULL</name></expr></argument>, <argument pos:start="323:60" pos:end="323:76"><expr pos:start="323:60" pos:end="323:76"><literal type="string" pos:start="323:60" pos:end="323:76">"versatile.flash"</literal></expr></argument>,

                          <argument pos:start="325:27" pos:end="325:46"><expr pos:start="325:27" pos:end="325:46"><name pos:start="325:27" pos:end="325:46">VERSATILE_FLASH_SIZE</name></expr></argument>, <argument pos:start="325:49" pos:end="325:74"><expr pos:start="325:49" pos:end="325:74"><ternary pos:start="325:49" pos:end="325:74"><condition pos:start="325:49" pos:end="325:55"><expr pos:start="325:49" pos:end="325:53"><name pos:start="325:49" pos:end="325:53">dinfo</name></expr> ?</condition><then pos:start="325:57" pos:end="325:67"> <expr pos:start="325:57" pos:end="325:67"><name pos:start="325:57" pos:end="325:67"><name pos:start="325:57" pos:end="325:61">dinfo</name><operator pos:start="325:62" pos:end="325:63">-&gt;</operator><name pos:start="325:64" pos:end="325:67">bdrv</name></name></expr> </then><else pos:start="325:69" pos:end="325:74">: <expr pos:start="325:71" pos:end="325:74"><name pos:start="325:71" pos:end="325:74">NULL</name></expr></else></ternary></expr></argument>,

                          <argument pos:start="327:27" pos:end="327:51"><expr pos:start="327:27" pos:end="327:51"><name pos:start="327:27" pos:end="327:51">VERSATILE_FLASH_SECT_SIZE</name></expr></argument>,

                          <argument pos:start="329:27" pos:end="329:74"><expr pos:start="329:27" pos:end="329:74"><name pos:start="329:27" pos:end="329:46">VERSATILE_FLASH_SIZE</name> <operator pos:start="329:48" pos:end="329:48">/</operator> <name pos:start="329:50" pos:end="329:74">VERSATILE_FLASH_SECT_SIZE</name></expr></argument>,

                          <argument pos:start="331:27" pos:end="331:27"><expr pos:start="331:27" pos:end="331:27"><literal type="number" pos:start="331:27" pos:end="331:27">4</literal></expr></argument>, <argument pos:start="331:30" pos:end="331:35"><expr pos:start="331:30" pos:end="331:35"><literal type="number" pos:start="331:30" pos:end="331:35">0x0089</literal></expr></argument>, <argument pos:start="331:38" pos:end="331:43"><expr pos:start="331:38" pos:end="331:43"><literal type="number" pos:start="331:38" pos:end="331:43">0x0018</literal></expr></argument>, <argument pos:start="331:46" pos:end="331:51"><expr pos:start="331:46" pos:end="331:51"><literal type="number" pos:start="331:46" pos:end="331:51">0x0000</literal></expr></argument>, <argument pos:start="331:54" pos:end="331:56"><expr pos:start="331:54" pos:end="331:56"><literal type="number" pos:start="331:54" pos:end="331:56">0x0</literal></expr></argument>, <argument pos:start="331:59" pos:end="331:59"><expr pos:start="331:59" pos:end="331:59"><literal type="number" pos:start="331:59" pos:end="331:59">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="331:63" pos:end="335:5">{<block_content pos:start="333:9" pos:end="333:67">

        <expr_stmt pos:start="333:9" pos:end="333:67"><expr pos:start="333:9" pos:end="333:66"><call pos:start="333:9" pos:end="333:66"><name pos:start="333:9" pos:end="333:15">fprintf</name><argument_list pos:start="333:16" pos:end="333:66">(<argument pos:start="333:17" pos:end="333:22"><expr pos:start="333:17" pos:end="333:22"><name pos:start="333:17" pos:end="333:22">stderr</name></expr></argument>, <argument pos:start="333:25" pos:end="333:65"><expr pos:start="333:25" pos:end="333:65"><literal type="string" pos:start="333:25" pos:end="333:65">"qemu: Error registering flash memory.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="339:5" pos:end="339:46"><expr pos:start="339:5" pos:end="339:45"><name pos:start="339:5" pos:end="339:28"><name pos:start="339:5" pos:end="339:19">versatile_binfo</name><operator pos:start="339:20" pos:end="339:20">.</operator><name pos:start="339:21" pos:end="339:28">ram_size</name></name> <operator pos:start="339:30" pos:end="339:30">=</operator> <name pos:start="339:32" pos:end="339:45"><name pos:start="339:32" pos:end="339:35">args</name><operator pos:start="339:36" pos:end="339:37">-&gt;</operator><name pos:start="339:38" pos:end="339:45">ram_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:60"><expr pos:start="341:5" pos:end="341:59"><name pos:start="341:5" pos:end="341:35"><name pos:start="341:5" pos:end="341:19">versatile_binfo</name><operator pos:start="341:20" pos:end="341:20">.</operator><name pos:start="341:21" pos:end="341:35">kernel_filename</name></name> <operator pos:start="341:37" pos:end="341:37">=</operator> <name pos:start="341:39" pos:end="341:59"><name pos:start="341:39" pos:end="341:42">args</name><operator pos:start="341:43" pos:end="341:44">-&gt;</operator><name pos:start="341:45" pos:end="341:59">kernel_filename</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:58"><expr pos:start="343:5" pos:end="343:57"><name pos:start="343:5" pos:end="343:34"><name pos:start="343:5" pos:end="343:19">versatile_binfo</name><operator pos:start="343:20" pos:end="343:20">.</operator><name pos:start="343:21" pos:end="343:34">kernel_cmdline</name></name> <operator pos:start="343:36" pos:end="343:36">=</operator> <name pos:start="343:38" pos:end="343:57"><name pos:start="343:38" pos:end="343:41">args</name><operator pos:start="343:42" pos:end="343:43">-&gt;</operator><name pos:start="343:44" pos:end="343:57">kernel_cmdline</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:60"><expr pos:start="345:5" pos:end="345:59"><name pos:start="345:5" pos:end="345:35"><name pos:start="345:5" pos:end="345:19">versatile_binfo</name><operator pos:start="345:20" pos:end="345:20">.</operator><name pos:start="345:21" pos:end="345:35">initrd_filename</name></name> <operator pos:start="345:37" pos:end="345:37">=</operator> <name pos:start="345:39" pos:end="345:59"><name pos:start="345:39" pos:end="345:42">args</name><operator pos:start="345:43" pos:end="345:44">-&gt;</operator><name pos:start="345:45" pos:end="345:59">initrd_filename</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:40"><expr pos:start="347:5" pos:end="347:39"><name pos:start="347:5" pos:end="347:28"><name pos:start="347:5" pos:end="347:19">versatile_binfo</name><operator pos:start="347:20" pos:end="347:20">.</operator><name pos:start="347:21" pos:end="347:28">board_id</name></name> <operator pos:start="347:30" pos:end="347:30">=</operator> <name pos:start="347:32" pos:end="347:39">board_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:43"><expr pos:start="349:5" pos:end="349:42"><call pos:start="349:5" pos:end="349:42"><name pos:start="349:5" pos:end="349:19">arm_load_kernel</name><argument_list pos:start="349:20" pos:end="349:42">(<argument pos:start="349:21" pos:end="349:23"><expr pos:start="349:21" pos:end="349:23"><name pos:start="349:21" pos:end="349:23">cpu</name></expr></argument>, <argument pos:start="349:26" pos:end="349:41"><expr pos:start="349:26" pos:end="349:41"><operator pos:start="349:26" pos:end="349:26">&amp;</operator><name pos:start="349:27" pos:end="349:41">versatile_binfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
