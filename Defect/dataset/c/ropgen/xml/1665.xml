<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1665.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">rc4030_dma_tt_update</name><parameter_list pos:start="1:33" pos:end="3:55">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:44">rc4030State</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:69"><decl pos:start="1:50" pos:end="1:69"><type pos:start="1:50" pos:end="1:69"><name pos:start="1:50" pos:end="1:57">uint32_t</name></type> <name pos:start="1:59" pos:end="1:69">new_tl_base</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:54"><decl pos:start="3:34" pos:end="3:54"><type pos:start="3:34" pos:end="3:54"><name pos:start="3:34" pos:end="3:41">uint32_t</name></type> <name pos:start="3:43" pos:end="3:54">new_tl_limit</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:5">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">entries</name></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">dma_pagetable_entry</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:40">dma_tl_contents</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:23">dma_tl_limit</name></name></expr>)</condition> <block pos:start="13:26" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:72">

        <comment type="block" pos:start="15:9" pos:end="15:55">/* write old dma tl table to physical memory */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:75"><expr pos:start="17:9" pos:end="17:74"><call pos:start="17:9" pos:end="17:74"><name pos:start="17:9" pos:end="17:35">memory_region_del_subregion</name><argument_list pos:start="17:36" pos:end="17:74">(<argument pos:start="17:37" pos:end="17:55"><expr pos:start="17:37" pos:end="17:55"><call pos:start="17:37" pos:end="17:55"><name pos:start="17:37" pos:end="17:53">get_system_memory</name><argument_list pos:start="17:54" pos:end="17:55">()</argument_list></call></expr></argument>, <argument pos:start="17:58" pos:end="17:73"><expr pos:start="17:58" pos:end="17:73"><operator pos:start="17:58" pos:end="17:58">&amp;</operator><name pos:start="17:59" pos:end="17:73"><name pos:start="17:59" pos:end="17:59">s</name><operator pos:start="17:60" pos:end="17:61">-&gt;</operator><name pos:start="17:62" pos:end="17:73">dma_tt_alias</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="23:72"><expr pos:start="19:9" pos:end="23:71"><call pos:start="19:9" pos:end="23:71"><name pos:start="19:9" pos:end="19:33">cpu_physical_memory_write</name><argument_list pos:start="19:34" pos:end="23:71">(<argument pos:start="19:35" pos:end="19:62"><expr pos:start="19:35" pos:end="19:62"><name pos:start="19:35" pos:end="19:49"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:49">dma_tl_limit</name></name> <operator pos:start="19:51" pos:end="19:51">&amp;</operator> <literal type="number" pos:start="19:53" pos:end="19:62">0x7fffffff</literal></expr></argument>,

                                  <argument pos:start="21:35" pos:end="21:71"><expr pos:start="21:35" pos:end="21:71"><call pos:start="21:35" pos:end="21:71"><name pos:start="21:35" pos:end="21:59">memory_region_get_ram_ptr</name><argument_list pos:start="21:60" pos:end="21:71">(<argument pos:start="21:61" pos:end="21:70"><expr pos:start="21:61" pos:end="21:70"><operator pos:start="21:61" pos:end="21:61">&amp;</operator><name pos:start="21:62" pos:end="21:70"><name pos:start="21:62" pos:end="21:62">s</name><operator pos:start="21:63" pos:end="21:64">-&gt;</operator><name pos:start="21:65" pos:end="21:70">dma_tt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="23:35" pos:end="23:70"><expr pos:start="23:35" pos:end="23:70"><call pos:start="23:35" pos:end="23:70"><name pos:start="23:35" pos:end="23:52">memory_region_size</name><argument_list pos:start="23:53" pos:end="23:70">(<argument pos:start="23:54" pos:end="23:69"><expr pos:start="23:54" pos:end="23:69"><operator pos:start="23:54" pos:end="23:54">&amp;</operator><name pos:start="23:55" pos:end="23:69"><name pos:start="23:55" pos:end="23:55">s</name><operator pos:start="23:56" pos:end="23:57">-&gt;</operator><name pos:start="23:58" pos:end="23:69">dma_tt_alias</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><call pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:19">object_unparent</name><argument_list pos:start="27:20" pos:end="27:45">(<argument pos:start="27:21" pos:end="27:44"><expr pos:start="27:21" pos:end="27:44"><call pos:start="27:21" pos:end="27:44"><name pos:start="27:21" pos:end="27:26">OBJECT</name><argument_list pos:start="27:27" pos:end="27:44">(<argument pos:start="27:28" pos:end="27:43"><expr pos:start="27:28" pos:end="27:43"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:43"><name pos:start="27:29" pos:end="27:29">s</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:43">dma_tt_alias</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:18">dma_tl_base</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:32">new_tl_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:19">dma_tl_limit</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:34">new_tl_limit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:15">new_tl_base</name> <operator pos:start="35:17" pos:end="35:18">&amp;=</operator> <literal type="number" pos:start="35:20" pos:end="35:29">0x7fffffff</literal></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="87:5"><if pos:start="39:5" pos:end="81:5">if <condition pos:start="39:8" pos:end="39:24">(<expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:23">dma_tl_limit</name></name></expr>)</condition> <block pos:start="39:26" pos:end="81:5">{<block_content pos:start="41:9" pos:end="79:43">

        <decl_stmt pos:start="41:9" pos:end="41:29"><decl pos:start="41:9" pos:end="41:28"><type pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">uint64_t</name></type> <name pos:start="41:18" pos:end="41:28">dma_tt_size</name></decl>;</decl_stmt>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:62">(<expr pos:start="43:13" pos:end="43:61"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:27">dma_tl_limit</name></name> <operator pos:start="43:29" pos:end="43:30">&lt;=</operator> <call pos:start="43:32" pos:end="43:61"><name pos:start="43:32" pos:end="43:49">memory_region_size</name><argument_list pos:start="43:50" pos:end="43:61">(<argument pos:start="43:51" pos:end="43:60"><expr pos:start="43:51" pos:end="43:60"><operator pos:start="43:51" pos:end="43:51">&amp;</operator><name pos:start="43:52" pos:end="43:60"><name pos:start="43:52" pos:end="43:52">s</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:60">dma_tt</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:64" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:42">

            <expr_stmt pos:start="45:13" pos:end="45:42"><expr pos:start="45:13" pos:end="45:41"><name pos:start="45:13" pos:end="45:23">dma_tt_size</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:41"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:41">dma_tl_limit</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:9">else <block pos:start="47:16" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:57">

            <expr_stmt pos:start="49:13" pos:end="49:57"><expr pos:start="49:13" pos:end="49:56"><name pos:start="49:13" pos:end="49:23">dma_tt_size</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <call pos:start="49:27" pos:end="49:56"><name pos:start="49:27" pos:end="49:44">memory_region_size</name><argument_list pos:start="49:45" pos:end="49:56">(<argument pos:start="49:46" pos:end="49:55"><expr pos:start="49:46" pos:end="49:55"><operator pos:start="49:46" pos:end="49:46">&amp;</operator><name pos:start="49:47" pos:end="49:55"><name pos:start="49:47" pos:end="49:47">s</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:55">dma_tt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="57:61"><expr pos:start="53:9" pos:end="57:60"><call pos:start="53:9" pos:end="57:60"><name pos:start="53:9" pos:end="53:32">memory_region_init_alias</name><argument_list pos:start="53:33" pos:end="57:60">(<argument pos:start="53:34" pos:end="53:49"><expr pos:start="53:34" pos:end="53:49"><operator pos:start="53:34" pos:end="53:34">&amp;</operator><name pos:start="53:35" pos:end="53:49"><name pos:start="53:35" pos:end="53:35">s</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:49">dma_tt_alias</name></name></expr></argument>, <argument pos:start="53:52" pos:end="53:60"><expr pos:start="53:52" pos:end="53:60"><call pos:start="53:52" pos:end="53:60"><name pos:start="53:52" pos:end="53:57">OBJECT</name><argument_list pos:start="53:58" pos:end="53:60">(<argument pos:start="53:59" pos:end="53:59"><expr pos:start="53:59" pos:end="53:59"><name pos:start="53:59" pos:end="53:59">s</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="55:34" pos:end="55:50"><expr pos:start="55:34" pos:end="55:50"><literal type="string" pos:start="55:34" pos:end="55:50">"dma-table-alias"</literal></expr></argument>,

                                 <argument pos:start="57:34" pos:end="57:43"><expr pos:start="57:34" pos:end="57:43"><operator pos:start="57:34" pos:end="57:34">&amp;</operator><name pos:start="57:35" pos:end="57:43"><name pos:start="57:35" pos:end="57:35">s</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:43">dma_tt</name></name></expr></argument>, <argument pos:start="57:46" pos:end="57:46"><expr pos:start="57:46" pos:end="57:46"><literal type="number" pos:start="57:46" pos:end="57:46">0</literal></expr></argument>, <argument pos:start="57:49" pos:end="57:59"><expr pos:start="57:49" pos:end="57:59"><name pos:start="57:49" pos:end="57:59">dma_tt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:64"><expr pos:start="59:9" pos:end="59:63"><name pos:start="59:9" pos:end="59:23">dma_tl_contents</name> <operator pos:start="59:25" pos:end="59:25">=</operator> <call pos:start="59:27" pos:end="59:63"><name pos:start="59:27" pos:end="59:51">memory_region_get_ram_ptr</name><argument_list pos:start="59:52" pos:end="59:63">(<argument pos:start="59:53" pos:end="59:62"><expr pos:start="59:53" pos:end="59:62"><operator pos:start="59:53" pos:end="59:53">&amp;</operator><name pos:start="59:54" pos:end="59:62"><name pos:start="59:54" pos:end="59:54">s</name><operator pos:start="59:55" pos:end="59:56">-&gt;</operator><name pos:start="59:57" pos:end="59:62">dma_tt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:76"><expr pos:start="61:9" pos:end="61:75"><call pos:start="61:9" pos:end="61:75"><name pos:start="61:9" pos:end="61:32">cpu_physical_memory_read</name><argument_list pos:start="61:33" pos:end="61:75">(<argument pos:start="61:34" pos:end="61:44"><expr pos:start="61:34" pos:end="61:44"><name pos:start="61:34" pos:end="61:44">new_tl_base</name></expr></argument>, <argument pos:start="61:47" pos:end="61:61"><expr pos:start="61:47" pos:end="61:61"><name pos:start="61:47" pos:end="61:61">dma_tl_contents</name></expr></argument>, <argument pos:start="61:64" pos:end="61:74"><expr pos:start="61:64" pos:end="61:74"><name pos:start="61:64" pos:end="61:74">dma_tt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:42"><expr pos:start="65:9" pos:end="65:41"><call pos:start="65:9" pos:end="65:41"><name pos:start="65:9" pos:end="65:39">memory_region_transaction_begin</name><argument_list pos:start="65:40" pos:end="65:41">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:60"><expr pos:start="67:9" pos:end="67:59"><name pos:start="67:9" pos:end="67:15">entries</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:29">dma_tt_size</name> <operator pos:start="67:31" pos:end="67:31">/</operator> <sizeof pos:start="67:33" pos:end="67:59">sizeof<argument_list pos:start="67:39" pos:end="67:59">(<argument pos:start="67:40" pos:end="67:58"><expr pos:start="67:40" pos:end="67:58"><name pos:start="67:40" pos:end="67:58">dma_pagetable_entry</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <for pos:start="69:9" pos:end="73:9">for <control pos:start="69:13" pos:end="69:37">(<init pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:18"><name pos:start="69:14" pos:end="69:14">i</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:32"><expr pos:start="69:21" pos:end="69:31"><name pos:start="69:21" pos:end="69:21">i</name> <operator pos:start="69:23" pos:end="69:23">&lt;</operator> <name pos:start="69:25" pos:end="69:31">entries</name></expr>;</condition> <incr pos:start="69:34" pos:end="69:36"><expr pos:start="69:34" pos:end="69:36"><name pos:start="69:34" pos:end="69:34">i</name><operator pos:start="69:35" pos:end="69:36">++</operator></expr></incr>)</control> <block pos:start="69:39" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:69">

            <expr_stmt pos:start="71:13" pos:end="71:69"><expr pos:start="71:13" pos:end="71:68"><call pos:start="71:13" pos:end="71:68"><name pos:start="71:13" pos:end="71:36">rc4030_dma_as_update_one</name><argument_list pos:start="71:37" pos:end="71:68">(<argument pos:start="71:38" pos:end="71:38"><expr pos:start="71:38" pos:end="71:38"><name pos:start="71:38" pos:end="71:38">s</name></expr></argument>, <argument pos:start="71:41" pos:end="71:41"><expr pos:start="71:41" pos:end="71:41"><name pos:start="71:41" pos:end="71:41">i</name></expr></argument>, <argument pos:start="71:44" pos:end="71:67"><expr pos:start="71:44" pos:end="71:67"><name pos:start="71:44" pos:end="71:61"><name pos:start="71:44" pos:end="71:58">dma_tl_contents</name><index pos:start="71:59" pos:end="71:61">[<expr pos:start="71:60" pos:end="71:60"><name pos:start="71:60" pos:end="71:60">i</name></expr>]</index></name><operator pos:start="71:62" pos:end="71:62">.</operator><name pos:start="71:63" pos:end="71:67">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="75:9" pos:end="77:54"><expr pos:start="75:9" pos:end="77:53"><call pos:start="75:9" pos:end="77:53"><name pos:start="75:9" pos:end="75:35">memory_region_add_subregion</name><argument_list pos:start="75:36" pos:end="77:53">(<argument pos:start="75:37" pos:end="75:55"><expr pos:start="75:37" pos:end="75:55"><call pos:start="75:37" pos:end="75:55"><name pos:start="75:37" pos:end="75:53">get_system_memory</name><argument_list pos:start="75:54" pos:end="75:55">()</argument_list></call></expr></argument>, <argument pos:start="75:58" pos:end="75:68"><expr pos:start="75:58" pos:end="75:68"><name pos:start="75:58" pos:end="75:68">new_tl_base</name></expr></argument>,

                                    <argument pos:start="77:37" pos:end="77:52"><expr pos:start="77:37" pos:end="77:52"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:52"><name pos:start="77:38" pos:end="77:38">s</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:52">dma_tt_alias</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><call pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:40">memory_region_transaction_commit</name><argument_list pos:start="79:41" pos:end="79:42">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="87:5">else <block pos:start="81:12" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:49">

        <expr_stmt pos:start="83:9" pos:end="85:49"><expr pos:start="83:9" pos:end="85:48"><call pos:start="83:9" pos:end="85:48"><name pos:start="83:9" pos:end="83:26">memory_region_init</name><argument_list pos:start="83:27" pos:end="85:48">(<argument pos:start="83:28" pos:end="83:43"><expr pos:start="83:28" pos:end="83:43"><operator pos:start="83:28" pos:end="83:28">&amp;</operator><name pos:start="83:29" pos:end="83:43"><name pos:start="83:29" pos:end="83:29">s</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:43">dma_tt_alias</name></name></expr></argument>, <argument pos:start="83:46" pos:end="83:54"><expr pos:start="83:46" pos:end="83:54"><call pos:start="83:46" pos:end="83:54"><name pos:start="83:46" pos:end="83:51">OBJECT</name><argument_list pos:start="83:52" pos:end="83:54">(<argument pos:start="83:53" pos:end="83:53"><expr pos:start="83:53" pos:end="83:53"><name pos:start="83:53" pos:end="83:53">s</name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="85:28" pos:end="85:44"><expr pos:start="85:28" pos:end="85:44"><literal type="string" pos:start="85:28" pos:end="85:44">"dma-table-alias"</literal></expr></argument>, <argument pos:start="85:47" pos:end="85:47"><expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
