<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20839.c" pos:tabs="8"><function pos:start="1:1" pos:end="249:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">sap_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="249:1">{<block_content pos:start="5:5" pos:end="247:15">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">SAPState</name></name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">sap</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:19"><name pos:start="7:10" pos:end="7:13">host</name><index pos:start="7:14" pos:end="7:19">[<expr pos:start="7:15" pos:end="7:18"><literal type="number" pos:start="7:15" pos:end="7:18">1024</literal></expr>]</index></name></decl>, <decl pos:start="7:22" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:22" pos:end="7:31"><name pos:start="7:22" pos:end="7:25">path</name><index pos:start="7:26" pos:end="7:31">[<expr pos:start="7:27" pos:end="7:30"><literal type="number" pos:start="7:27" pos:end="7:30">1024</literal></expr>]</index></name></decl>, <decl pos:start="7:34" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:34" pos:end="7:42"><name pos:start="7:34" pos:end="7:36">url</name><index pos:start="7:37" pos:end="7:42">[<expr pos:start="7:38" pos:end="7:41"><literal type="number" pos:start="7:38" pos:end="7:41">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:42"><name pos:start="9:13" pos:end="9:19">recvbuf</name><index pos:start="9:20" pos:end="9:42">[<expr pos:start="9:21" pos:end="9:41"><name pos:start="9:21" pos:end="9:41">RTP_MAX_PACKET_LENGTH</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:17">AVInputFormat</name><modifier pos:start="15:18" pos:end="15:18">*</modifier></type> <name pos:start="15:20" pos:end="15:24">infmt</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:28"><if pos:start="19:5" pos:end="21:28">if <condition pos:start="19:8" pos:end="19:27">(<expr pos:start="19:9" pos:end="19:26"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:26"><name pos:start="19:10" pos:end="19:24">ff_network_init</name><argument_list pos:start="19:25" pos:end="19:26">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:28"><block_content pos:start="21:9" pos:end="21:28">

        <return pos:start="21:9" pos:end="21:28">return <expr pos:start="21:16" pos:end="21:27"><call pos:start="21:16" pos:end="21:27"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:27">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:50"><expr pos:start="25:5" pos:end="27:49"><call pos:start="25:5" pos:end="27:49"><name pos:start="25:5" pos:end="25:16">av_url_split</name><argument_list pos:start="25:17" pos:end="27:49">(<argument pos:start="25:18" pos:end="25:21"><expr pos:start="25:18" pos:end="25:21"><name pos:start="25:18" pos:end="25:21">NULL</name></expr></argument>, <argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr></argument>, <argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">NULL</name></expr></argument>, <argument pos:start="25:33" pos:end="25:33"><expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr></argument>, <argument pos:start="25:36" pos:end="25:39"><expr pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:39">host</name></expr></argument>, <argument pos:start="25:42" pos:end="25:53"><expr pos:start="25:42" pos:end="25:53"><sizeof pos:start="25:42" pos:end="25:53">sizeof<argument_list pos:start="25:48" pos:end="25:53">(<argument pos:start="25:49" pos:end="25:52"><expr pos:start="25:49" pos:end="25:52"><name pos:start="25:49" pos:end="25:52">host</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:56" pos:end="25:60"><expr pos:start="25:56" pos:end="25:60"><operator pos:start="25:56" pos:end="25:56">&amp;</operator><name pos:start="25:57" pos:end="25:60">port</name></expr></argument>,

                 <argument pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:21">path</name></expr></argument>, <argument pos:start="27:24" pos:end="27:35"><expr pos:start="27:24" pos:end="27:35"><sizeof pos:start="27:24" pos:end="27:35">sizeof<argument_list pos:start="27:30" pos:end="27:35">(<argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:34">path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:38" pos:end="27:48"><expr pos:start="27:38" pos:end="27:48"><name pos:start="27:38" pos:end="27:48"><name pos:start="27:38" pos:end="27:38">s</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:48">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:20"><if pos:start="29:5" pos:end="31:20">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:12">port</name> <operator pos:start="29:14" pos:end="29:14">&lt;</operator> <literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:20"><block_content pos:start="31:9" pos:end="31:20">

        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:12">port</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:19">9875</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:17">(<expr pos:start="35:9" pos:end="35:16"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:16"><name pos:start="35:10" pos:end="35:13">host</name><index pos:start="35:14" pos:end="35:16">[<expr pos:start="35:15" pos:end="35:15"><literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="35:19" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:56">

        <comment type="block" pos:start="37:9" pos:end="37:80">/* Listen for announcements on sap.mcast.net if no host was specified */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><call pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:18">av_strlcpy</name><argument_list pos:start="39:19" pos:end="39:55">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">host</name></expr></argument>, <argument pos:start="39:26" pos:end="39:40"><expr pos:start="39:26" pos:end="39:40"><literal type="string" pos:start="39:26" pos:end="39:40">"224.2.127.254"</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:54"><expr pos:start="39:43" pos:end="39:54"><sizeof pos:start="39:43" pos:end="39:54">sizeof<argument_list pos:start="39:49" pos:end="39:54">(<argument pos:start="39:50" pos:end="39:53"><expr pos:start="39:50" pos:end="39:53"><name pos:start="39:50" pos:end="39:53">host</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="47:22"><expr pos:start="45:5" pos:end="47:21"><call pos:start="45:5" pos:end="47:21"><name pos:start="45:5" pos:end="45:15">ff_url_join</name><argument_list pos:start="45:16" pos:end="47:21">(<argument pos:start="45:17" pos:end="45:19"><expr pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:19">url</name></expr></argument>, <argument pos:start="45:22" pos:end="45:32"><expr pos:start="45:22" pos:end="45:32"><sizeof pos:start="45:22" pos:end="45:32">sizeof<argument_list pos:start="45:28" pos:end="45:32">(<argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:31">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:35" pos:end="45:39"><expr pos:start="45:35" pos:end="45:39"><literal type="string" pos:start="45:35" pos:end="45:39">"udp"</literal></expr></argument>, <argument pos:start="45:42" pos:end="45:45"><expr pos:start="45:42" pos:end="45:45"><name pos:start="45:42" pos:end="45:45">NULL</name></expr></argument>, <argument pos:start="45:48" pos:end="45:51"><expr pos:start="45:48" pos:end="45:51"><name pos:start="45:48" pos:end="45:51">host</name></expr></argument>, <argument pos:start="45:54" pos:end="45:57"><expr pos:start="45:54" pos:end="45:57"><name pos:start="45:54" pos:end="45:57">port</name></expr></argument>, <argument pos:start="45:60" pos:end="45:74"><expr pos:start="45:60" pos:end="45:74"><literal type="string" pos:start="45:60" pos:end="45:74">"?localport=%d"</literal></expr></argument>,

                <argument pos:start="47:17" pos:end="47:20"><expr pos:start="47:17" pos:end="47:20"><name pos:start="47:17" pos:end="47:20">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:51"><expr pos:start="49:5" pos:end="51:50"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="51:50"><name pos:start="49:11" pos:end="49:20">ffurl_open</name><argument_list pos:start="49:21" pos:end="51:50">(<argument pos:start="49:22" pos:end="49:33"><expr pos:start="49:22" pos:end="49:33"><operator pos:start="49:22" pos:end="49:22">&amp;</operator><name pos:start="49:23" pos:end="49:33"><name pos:start="49:23" pos:end="49:25">sap</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:33">ann_fd</name></name></expr></argument>, <argument pos:start="49:36" pos:end="49:38"><expr pos:start="49:36" pos:end="49:38"><name pos:start="49:36" pos:end="49:38">url</name></expr></argument>, <argument pos:start="49:41" pos:end="49:54"><expr pos:start="49:41" pos:end="49:54"><name pos:start="49:41" pos:end="49:54">AVIO_FLAG_READ</name></expr></argument>,

                     <argument pos:start="51:22" pos:end="51:43"><expr pos:start="51:22" pos:end="51:43"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:43"><name pos:start="51:23" pos:end="51:23">s</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:43">interrupt_callback</name></name></expr></argument>, <argument pos:start="51:46" pos:end="51:49"><expr pos:start="51:46" pos:end="51:49"><name pos:start="51:46" pos:end="51:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:12">(<expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">ret</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18">

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <while pos:start="59:5" pos:end="163:5">while <condition pos:start="59:11" pos:end="59:13">(<expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">1</literal></expr>)</condition> <block pos:start="59:15" pos:end="163:5">{<block_content pos:start="61:9" pos:end="161:14">

        <decl_stmt pos:start="61:9" pos:end="61:32"><decl pos:start="61:9" pos:end="61:21"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:21">addr_type</name></decl>, <decl pos:start="61:24" pos:end="61:31"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:24" pos:end="61:31">auth_len</name></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:16"><decl pos:start="63:9" pos:end="63:15"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:15">pos</name></decl>;</decl_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:68"><expr pos:start="67:9" pos:end="67:67"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:67"><name pos:start="67:15" pos:end="67:24">ffurl_read</name><argument_list pos:start="67:25" pos:end="67:67">(<argument pos:start="67:26" pos:end="67:36"><expr pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:28">sap</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:36">ann_fd</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:45"><expr pos:start="67:39" pos:end="67:45"><name pos:start="67:39" pos:end="67:45">recvbuf</name></expr></argument>, <argument pos:start="67:48" pos:end="67:66"><expr pos:start="67:48" pos:end="67:66"><sizeof pos:start="67:48" pos:end="67:62">sizeof<argument_list pos:start="67:54" pos:end="67:62">(<argument pos:start="67:55" pos:end="67:61"><expr pos:start="67:55" pos:end="67:61"><name pos:start="67:55" pos:end="67:61">recvbuf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="67:64" pos:end="67:64">-</operator> <literal type="number" pos:start="67:66" pos:end="67:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:21"><if pos:start="69:9" pos:end="71:21">if <condition pos:start="69:12" pos:end="69:35">(<expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:18">==</operator> <call pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:26">AVERROR</name><argument_list pos:start="69:27" pos:end="69:34">(<argument pos:start="69:28" pos:end="69:33"><expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:21"><block_content pos:start="71:13" pos:end="71:21">

            <continue pos:start="71:13" pos:end="71:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="75:22"><if pos:start="73:9" pos:end="75:22">if <condition pos:start="73:12" pos:end="73:20">(<expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:15">ret</name> <operator pos:start="73:17" pos:end="73:17">&lt;</operator> <literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:22"><block_content pos:start="75:13" pos:end="75:22">

            <goto pos:start="75:13" pos:end="75:22">goto <name pos:start="75:18" pos:end="75:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:15">recvbuf</name><index pos:start="77:16" pos:end="77:20">[<expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">ret</name></expr>]</index></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <literal type="char" pos:start="77:24" pos:end="77:27">'\0'</literal></expr>;</expr_stmt> <comment type="block" pos:start="77:30" pos:end="77:68">/* Null terminate for easier parsing */</comment>

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:20">(<expr pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:15">ret</name> <operator pos:start="79:17" pos:end="79:17">&lt;</operator> <literal type="number" pos:start="79:19" pos:end="79:19">8</literal></expr>)</condition> <block pos:start="79:22" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:21">

            <expr_stmt pos:start="81:13" pos:end="81:69"><expr pos:start="81:13" pos:end="81:68"><call pos:start="81:13" pos:end="81:68"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="81:68">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">s</name></expr></argument>, <argument pos:start="81:23" pos:end="81:36"><expr pos:start="81:23" pos:end="81:36"><name pos:start="81:23" pos:end="81:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="81:39" pos:end="81:67"><expr pos:start="81:39" pos:end="81:67"><literal type="string" pos:start="81:39" pos:end="81:67">"Received too short packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="83:13" pos:end="83:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="89:9" pos:end="97:9"><if pos:start="89:9" pos:end="97:9">if <condition pos:start="89:12" pos:end="89:40">(<expr pos:start="89:13" pos:end="89:39"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:23"><name pos:start="89:14" pos:end="89:20">recvbuf</name><index pos:start="89:21" pos:end="89:23">[<expr pos:start="89:22" pos:end="89:22"><literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>]</index></name> <operator pos:start="89:25" pos:end="89:25">&amp;</operator> <literal type="number" pos:start="89:27" pos:end="89:30">0xe0</literal><operator pos:start="89:31" pos:end="89:31">)</operator> <operator pos:start="89:33" pos:end="89:34">!=</operator> <literal type="number" pos:start="89:36" pos:end="89:39">0x20</literal></expr>)</condition> <block pos:start="89:42" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:21">

            <expr_stmt pos:start="91:13" pos:end="93:52"><expr pos:start="91:13" pos:end="93:51"><call pos:start="91:13" pos:end="93:51"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="93:51">(<argument pos:start="91:20" pos:end="91:20"><expr pos:start="91:20" pos:end="91:20"><name pos:start="91:20" pos:end="91:20">s</name></expr></argument>, <argument pos:start="91:23" pos:end="91:36"><expr pos:start="91:23" pos:end="91:36"><name pos:start="91:23" pos:end="91:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="91:39" pos:end="93:50"><expr pos:start="91:39" pos:end="93:50"><literal type="string" pos:start="91:39" pos:end="91:71">"Unsupported SAP version packet "</literal>

                                      <literal type="string" pos:start="93:39" pos:end="93:50">"received\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="95:13" pos:end="95:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="101:9" pos:end="109:9"><if pos:start="101:9" pos:end="109:9">if <condition pos:start="101:12" pos:end="101:30">(<expr pos:start="101:13" pos:end="101:29"><name pos:start="101:13" pos:end="101:22"><name pos:start="101:13" pos:end="101:19">recvbuf</name><index pos:start="101:20" pos:end="101:22">[<expr pos:start="101:21" pos:end="101:21"><literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr>]</index></name> <operator pos:start="101:24" pos:end="101:24">&amp;</operator> <literal type="number" pos:start="101:26" pos:end="101:29">0x04</literal></expr>)</condition> <block pos:start="101:32" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:21">

            <expr_stmt pos:start="103:13" pos:end="105:56"><expr pos:start="103:13" pos:end="105:55"><call pos:start="103:13" pos:end="105:55"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="105:55">(<argument pos:start="103:20" pos:end="103:20"><expr pos:start="103:20" pos:end="103:20"><name pos:start="103:20" pos:end="103:20">s</name></expr></argument>, <argument pos:start="103:23" pos:end="103:36"><expr pos:start="103:23" pos:end="103:36"><name pos:start="103:23" pos:end="103:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="103:39" pos:end="105:54"><expr pos:start="103:39" pos:end="105:54"><literal type="string" pos:start="103:39" pos:end="103:65">"Received stream deletion "</literal>

                                      <literal type="string" pos:start="105:39" pos:end="105:54">"announcement\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="107:13" pos:end="107:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:38"><expr pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:17">addr_type</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:30"><name pos:start="111:21" pos:end="111:27">recvbuf</name><index pos:start="111:28" pos:end="111:30">[<expr pos:start="111:29" pos:end="111:29"><literal type="number" pos:start="111:29" pos:end="111:29">0</literal></expr>]</index></name> <operator pos:start="111:32" pos:end="111:32">&amp;</operator> <literal type="number" pos:start="111:34" pos:end="111:37">0x10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:31"><expr pos:start="113:9" pos:end="113:30"><name pos:start="113:9" pos:end="113:16">auth_len</name>  <operator pos:start="113:19" pos:end="113:19">=</operator> <name pos:start="113:21" pos:end="113:30"><name pos:start="113:21" pos:end="113:27">recvbuf</name><index pos:start="113:28" pos:end="113:30">[<expr pos:start="113:29" pos:end="113:29"><literal type="number" pos:start="113:29" pos:end="113:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:41"><expr pos:start="115:9" pos:end="115:40"><name pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:11">sap</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:17">hash</name></name> <operator pos:start="115:19" pos:end="115:19">=</operator> <call pos:start="115:21" pos:end="115:40"><name pos:start="115:21" pos:end="115:27">AV_RB16</name><argument_list pos:start="115:28" pos:end="115:40">(<argument pos:start="115:29" pos:end="115:39"><expr pos:start="115:29" pos:end="115:39"><operator pos:start="115:29" pos:end="115:29">&amp;</operator><name pos:start="115:30" pos:end="115:39"><name pos:start="115:30" pos:end="115:36">recvbuf</name><index pos:start="115:37" pos:end="115:39">[<expr pos:start="115:38" pos:end="115:38"><literal type="number" pos:start="115:38" pos:end="115:38">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:16"><expr pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:11">pos</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <literal type="number" pos:start="117:15" pos:end="117:15">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="125:21"><if pos:start="119:9" pos:end="121:22">if <condition pos:start="119:12" pos:end="119:22">(<expr pos:start="119:13" pos:end="119:21"><name pos:start="119:13" pos:end="119:21">addr_type</name></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:22"><block_content pos:start="121:13" pos:end="121:22">

            <expr_stmt pos:start="121:13" pos:end="121:22"><expr pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:15">pos</name> <operator pos:start="121:17" pos:end="121:18">+=</operator> <literal type="number" pos:start="121:20" pos:end="121:21">16</literal></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="121:24" pos:end="121:33">/* IPv6 */</comment>

        <else pos:start="123:9" pos:end="125:21">else<block type="pseudo" pos:start="125:13" pos:end="125:21"><block_content pos:start="125:13" pos:end="125:21">

            <expr_stmt pos:start="125:13" pos:end="125:21"><expr pos:start="125:13" pos:end="125:20"><name pos:start="125:13" pos:end="125:15">pos</name> <operator pos:start="125:17" pos:end="125:18">+=</operator> <literal type="number" pos:start="125:20" pos:end="125:20">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="125:23" pos:end="125:32">/* IPv4 */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:28"><expr pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:11">pos</name> <operator pos:start="127:13" pos:end="127:14">+=</operator> <name pos:start="127:16" pos:end="127:23">auth_len</name> <operator pos:start="127:25" pos:end="127:25">*</operator> <literal type="number" pos:start="127:27" pos:end="127:27">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="138:0"><if pos:start="129:9" pos:end="138:0">if <condition pos:start="129:12" pos:end="129:27">(<expr pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:15">pos</name> <operator pos:start="129:17" pos:end="129:17">+</operator> <literal type="number" pos:start="129:19" pos:end="129:19">4</literal> <operator pos:start="129:21" pos:end="129:22">&gt;=</operator> <name pos:start="129:24" pos:end="129:26">ret</name></expr>)</condition> <block pos:start="129:29" pos:end="138:0">{<block_content pos:start="131:13" pos:end="133:21">

            <expr_stmt pos:start="131:13" pos:end="131:69"><expr pos:start="131:13" pos:end="131:68"><call pos:start="131:13" pos:end="131:68"><name pos:start="131:13" pos:end="131:18">av_log</name><argument_list pos:start="131:19" pos:end="131:68">(<argument pos:start="131:20" pos:end="131:20"><expr pos:start="131:20" pos:end="131:20"><name pos:start="131:20" pos:end="131:20">s</name></expr></argument>, <argument pos:start="131:23" pos:end="131:36"><expr pos:start="131:23" pos:end="131:36"><name pos:start="131:23" pos:end="131:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="131:39" pos:end="131:67"><expr pos:start="131:39" pos:end="131:67"><literal type="string" pos:start="131:39" pos:end="131:67">"Received too short packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="133:13" pos:end="133:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

<cpp:define pos:start="137:1" pos:end="137:30">#<cpp:directive pos:start="137:2" pos:end="137:7">define</cpp:directive> <cpp:macro pos:start="137:9" pos:end="137:12"><name pos:start="137:9" pos:end="137:12">MIME</name></cpp:macro> <cpp:value pos:start="137:14" pos:end="137:30">"application/sdp"</cpp:value></cpp:define>

        <if_stmt pos:start="139:9" pos:end="155:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:45">(<expr pos:start="139:13" pos:end="139:44"><call pos:start="139:13" pos:end="139:39"><name pos:start="139:13" pos:end="139:18">strcmp</name><argument_list pos:start="139:19" pos:end="139:39">(<argument pos:start="139:20" pos:end="139:32"><expr pos:start="139:20" pos:end="139:32"><operator pos:start="139:20" pos:end="139:20">&amp;</operator><name pos:start="139:21" pos:end="139:32"><name pos:start="139:21" pos:end="139:27">recvbuf</name><index pos:start="139:28" pos:end="139:32">[<expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:31">pos</name></expr>]</index></name></expr></argument>, <argument pos:start="139:35" pos:end="139:38"><expr pos:start="139:35" pos:end="139:38"><name pos:start="139:35" pos:end="139:38">MIME</name></expr></argument>)</argument_list></call> <operator pos:start="139:41" pos:end="139:42">==</operator> <literal type="number" pos:start="139:44" pos:end="139:44">0</literal></expr>)</condition> <block pos:start="139:47" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:36">

            <expr_stmt pos:start="141:13" pos:end="141:36"><expr pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:15">pos</name> <operator pos:start="141:17" pos:end="141:18">+=</operator> <call pos:start="141:20" pos:end="141:31"><name pos:start="141:20" pos:end="141:25">strlen</name><argument_list pos:start="141:26" pos:end="141:31">(<argument pos:start="141:27" pos:end="141:30"><expr pos:start="141:27" pos:end="141:30"><name pos:start="141:27" pos:end="141:30">MIME</name></expr></argument>)</argument_list></call> <operator pos:start="141:33" pos:end="141:33">+</operator> <literal type="number" pos:start="141:35" pos:end="141:35">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="143:11" pos:end="147:9">else if <condition pos:start="143:19" pos:end="143:61">(<expr pos:start="143:20" pos:end="143:60"><call pos:start="143:20" pos:end="143:55"><name pos:start="143:20" pos:end="143:26">strncmp</name><argument_list pos:start="143:27" pos:end="143:55">(<argument pos:start="143:28" pos:end="143:40"><expr pos:start="143:28" pos:end="143:40"><operator pos:start="143:28" pos:end="143:28">&amp;</operator><name pos:start="143:29" pos:end="143:40"><name pos:start="143:29" pos:end="143:35">recvbuf</name><index pos:start="143:36" pos:end="143:40">[<expr pos:start="143:37" pos:end="143:39"><name pos:start="143:37" pos:end="143:39">pos</name></expr>]</index></name></expr></argument>, <argument pos:start="143:43" pos:end="143:51"><expr pos:start="143:43" pos:end="143:51"><literal type="string" pos:start="143:43" pos:end="143:51">"v=0\r\n"</literal></expr></argument>, <argument pos:start="143:54" pos:end="143:54"><expr pos:start="143:54" pos:end="143:54"><literal type="number" pos:start="143:54" pos:end="143:54">5</literal></expr></argument>)</argument_list></call> <operator pos:start="143:57" pos:end="143:58">==</operator> <literal type="number" pos:start="143:60" pos:end="143:60">0</literal></expr>)</condition> <block pos:start="143:63" pos:end="147:9">{<block_content>

            <comment type="line" pos:start="145:13" pos:end="145:45">// Direct SDP without a mime type</comment>

        </block_content>}</block></if> <else pos:start="147:11" pos:end="155:9">else <block pos:start="147:16" pos:end="155:9">{<block_content pos:start="149:13" pos:end="153:21">

            <expr_stmt pos:start="149:13" pos:end="151:53"><expr pos:start="149:13" pos:end="151:52"><call pos:start="149:13" pos:end="151:52"><name pos:start="149:13" pos:end="149:18">av_log</name><argument_list pos:start="149:19" pos:end="151:52">(<argument pos:start="149:20" pos:end="149:20"><expr pos:start="149:20" pos:end="149:20"><name pos:start="149:20" pos:end="149:20">s</name></expr></argument>, <argument pos:start="149:23" pos:end="149:36"><expr pos:start="149:23" pos:end="149:36"><name pos:start="149:23" pos:end="149:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="149:39" pos:end="149:66"><expr pos:start="149:39" pos:end="149:66"><literal type="string" pos:start="149:39" pos:end="149:66">"Unsupported mime type %s\n"</literal></expr></argument>,

                                      <argument pos:start="151:39" pos:end="151:51"><expr pos:start="151:39" pos:end="151:51"><operator pos:start="151:39" pos:end="151:39">&amp;</operator><name pos:start="151:40" pos:end="151:51"><name pos:start="151:40" pos:end="151:46">recvbuf</name><index pos:start="151:47" pos:end="151:51">[<expr pos:start="151:48" pos:end="151:50"><name pos:start="151:48" pos:end="151:50">pos</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="153:13" pos:end="153:21">continue;</continue>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="159:9" pos:end="159:44"><expr pos:start="159:9" pos:end="159:43"><name pos:start="159:9" pos:end="159:16"><name pos:start="159:9" pos:end="159:11">sap</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:16">sdp</name></name> <operator pos:start="159:18" pos:end="159:18">=</operator> <call pos:start="159:20" pos:end="159:43"><name pos:start="159:20" pos:end="159:28">av_strdup</name><argument_list pos:start="159:29" pos:end="159:43">(<argument pos:start="159:30" pos:end="159:42"><expr pos:start="159:30" pos:end="159:42"><operator pos:start="159:30" pos:end="159:30">&amp;</operator><name pos:start="159:31" pos:end="159:42"><name pos:start="159:31" pos:end="159:37">recvbuf</name><index pos:start="159:38" pos:end="159:42">[<expr pos:start="159:39" pos:end="159:41"><name pos:start="159:39" pos:end="159:41">pos</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    </block_content>}</block></while>



    <expr_stmt pos:start="167:5" pos:end="167:54"><expr pos:start="167:5" pos:end="167:53"><call pos:start="167:5" pos:end="167:53"><name pos:start="167:5" pos:end="167:10">av_log</name><argument_list pos:start="167:11" pos:end="167:53">(<argument pos:start="167:12" pos:end="167:12"><expr pos:start="167:12" pos:end="167:12"><name pos:start="167:12" pos:end="167:12">s</name></expr></argument>, <argument pos:start="167:15" pos:end="167:28"><expr pos:start="167:15" pos:end="167:28"><name pos:start="167:15" pos:end="167:28">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="167:31" pos:end="167:42"><expr pos:start="167:31" pos:end="167:42"><literal type="string" pos:start="167:31" pos:end="167:42">"SDP:\n%s\n"</literal></expr></argument>, <argument pos:start="167:45" pos:end="167:52"><expr pos:start="167:45" pos:end="167:52"><name pos:start="167:45" pos:end="167:52"><name pos:start="167:45" pos:end="167:47">sap</name><operator pos:start="167:48" pos:end="167:49">-&gt;</operator><name pos:start="167:50" pos:end="167:52">sdp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="171:30"><expr pos:start="169:5" pos:end="171:29"><call pos:start="169:5" pos:end="171:29"><name pos:start="169:5" pos:end="169:21">ffio_init_context</name><argument_list pos:start="169:22" pos:end="171:29">(<argument pos:start="169:23" pos:end="169:34"><expr pos:start="169:23" pos:end="169:34"><operator pos:start="169:23" pos:end="169:23">&amp;</operator><name pos:start="169:24" pos:end="169:34"><name pos:start="169:24" pos:end="169:26">sap</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:34">sdp_pb</name></name></expr></argument>, <argument pos:start="169:37" pos:end="169:44"><expr pos:start="169:37" pos:end="169:44"><name pos:start="169:37" pos:end="169:44"><name pos:start="169:37" pos:end="169:39">sap</name><operator pos:start="169:40" pos:end="169:41">-&gt;</operator><name pos:start="169:42" pos:end="169:44">sdp</name></name></expr></argument>, <argument pos:start="169:47" pos:end="169:62"><expr pos:start="169:47" pos:end="169:62"><call pos:start="169:47" pos:end="169:62"><name pos:start="169:47" pos:end="169:52">strlen</name><argument_list pos:start="169:53" pos:end="169:62">(<argument pos:start="169:54" pos:end="169:61"><expr pos:start="169:54" pos:end="169:61"><name pos:start="169:54" pos:end="169:61"><name pos:start="169:54" pos:end="169:56">sap</name><operator pos:start="169:57" pos:end="169:58">-&gt;</operator><name pos:start="169:59" pos:end="169:61">sdp</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="169:65" pos:end="169:65"><expr pos:start="169:65" pos:end="169:65"><literal type="number" pos:start="169:65" pos:end="169:65">0</literal></expr></argument>, <argument pos:start="169:68" pos:end="169:71"><expr pos:start="169:68" pos:end="169:71"><name pos:start="169:68" pos:end="169:71">NULL</name></expr></argument>, <argument pos:start="169:74" pos:end="169:77"><expr pos:start="169:74" pos:end="169:77"><name pos:start="169:74" pos:end="169:77">NULL</name></expr></argument>,

                  <argument pos:start="171:19" pos:end="171:22"><expr pos:start="171:19" pos:end="171:22"><name pos:start="171:19" pos:end="171:22">NULL</name></expr></argument>, <argument pos:start="171:25" pos:end="171:28"><expr pos:start="171:25" pos:end="171:28"><name pos:start="171:25" pos:end="171:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:40"><expr pos:start="175:5" pos:end="175:39"><name pos:start="175:5" pos:end="175:9">infmt</name> <operator pos:start="175:11" pos:end="175:11">=</operator> <call pos:start="175:13" pos:end="175:39"><name pos:start="175:13" pos:end="175:32">av_find_input_format</name><argument_list pos:start="175:33" pos:end="175:39">(<argument pos:start="175:34" pos:end="175:38"><expr pos:start="175:34" pos:end="175:38"><literal type="string" pos:start="175:34" pos:end="175:38">"sdp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="177:5" pos:end="179:18"><if pos:start="177:5" pos:end="179:18">if <condition pos:start="177:8" pos:end="177:15">(<expr pos:start="177:9" pos:end="177:14"><operator pos:start="177:9" pos:end="177:9">!</operator><name pos:start="177:10" pos:end="177:14">infmt</name></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:18"><block_content pos:start="179:9" pos:end="179:18">

        <goto pos:start="179:9" pos:end="179:18">goto <name pos:start="179:14" pos:end="179:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:44"><expr pos:start="181:5" pos:end="181:43"><name pos:start="181:5" pos:end="181:16"><name pos:start="181:5" pos:end="181:7">sap</name><operator pos:start="181:8" pos:end="181:9">-&gt;</operator><name pos:start="181:10" pos:end="181:16">sdp_ctx</name></name> <operator pos:start="181:18" pos:end="181:18">=</operator> <call pos:start="181:20" pos:end="181:43"><name pos:start="181:20" pos:end="181:41">avformat_alloc_context</name><argument_list pos:start="181:42" pos:end="181:43">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="183:5" pos:end="189:5"><if pos:start="183:5" pos:end="189:5">if <condition pos:start="183:8" pos:end="183:22">(<expr pos:start="183:9" pos:end="183:21"><operator pos:start="183:9" pos:end="183:9">!</operator><name pos:start="183:10" pos:end="183:21"><name pos:start="183:10" pos:end="183:12">sap</name><operator pos:start="183:13" pos:end="183:14">-&gt;</operator><name pos:start="183:15" pos:end="183:21">sdp_ctx</name></name></expr>)</condition> <block pos:start="183:24" pos:end="189:5">{<block_content pos:start="185:9" pos:end="187:18">

        <expr_stmt pos:start="185:9" pos:end="185:30"><expr pos:start="185:9" pos:end="185:29"><name pos:start="185:9" pos:end="185:11">ret</name> <operator pos:start="185:13" pos:end="185:13">=</operator> <call pos:start="185:15" pos:end="185:29"><name pos:start="185:15" pos:end="185:21">AVERROR</name><argument_list pos:start="185:22" pos:end="185:29">(<argument pos:start="185:23" pos:end="185:28"><expr pos:start="185:23" pos:end="185:28"><name pos:start="185:23" pos:end="185:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="187:9" pos:end="187:18">goto <name pos:start="187:14" pos:end="187:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:43"><expr pos:start="191:5" pos:end="191:42"><name pos:start="191:5" pos:end="191:27"><name pos:start="191:5" pos:end="191:7">sap</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:16">sdp_ctx</name><operator pos:start="191:17" pos:end="191:18">-&gt;</operator><name pos:start="191:19" pos:end="191:27">max_delay</name></name> <operator pos:start="191:29" pos:end="191:29">=</operator> <name pos:start="191:31" pos:end="191:42"><name pos:start="191:31" pos:end="191:31">s</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:42">max_delay</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:43"><expr pos:start="193:5" pos:end="193:42"><name pos:start="193:5" pos:end="193:20"><name pos:start="193:5" pos:end="193:7">sap</name><operator pos:start="193:8" pos:end="193:9">-&gt;</operator><name pos:start="193:10" pos:end="193:16">sdp_ctx</name><operator pos:start="193:17" pos:end="193:18">-&gt;</operator><name pos:start="193:19" pos:end="193:20">pb</name></name>        <operator pos:start="193:29" pos:end="193:29">=</operator> <operator pos:start="193:31" pos:end="193:31">&amp;</operator><name pos:start="193:32" pos:end="193:42"><name pos:start="193:32" pos:end="193:34">sap</name><operator pos:start="193:35" pos:end="193:36">-&gt;</operator><name pos:start="193:37" pos:end="193:42">sdp_pb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:61"><expr pos:start="195:5" pos:end="195:60"><name pos:start="195:5" pos:end="195:36"><name pos:start="195:5" pos:end="195:7">sap</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:16">sdp_ctx</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:36">interrupt_callback</name></name> <operator pos:start="195:38" pos:end="195:38">=</operator> <name pos:start="195:40" pos:end="195:60"><name pos:start="195:40" pos:end="195:40">s</name><operator pos:start="195:41" pos:end="195:42">-&gt;</operator><name pos:start="195:43" pos:end="195:60">interrupt_callback</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:82"><expr pos:start="199:5" pos:end="199:81"><call pos:start="199:5" pos:end="199:81"><name pos:start="199:5" pos:end="199:14">av_assert0</name><argument_list pos:start="199:15" pos:end="199:81">(<argument pos:start="199:16" pos:end="199:80"><expr pos:start="199:16" pos:end="199:80"><operator pos:start="199:16" pos:end="199:16">!</operator><name pos:start="199:17" pos:end="199:45"><name pos:start="199:17" pos:end="199:19">sap</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:28">sdp_ctx</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:45">codec_whitelist</name></name> <operator pos:start="199:47" pos:end="199:48">&amp;&amp;</operator> <operator pos:start="199:50" pos:end="199:50">!</operator><name pos:start="199:51" pos:end="199:80"><name pos:start="199:51" pos:end="199:53">sap</name><operator pos:start="199:54" pos:end="199:55">-&gt;</operator><name pos:start="199:56" pos:end="199:62">sdp_ctx</name><operator pos:start="199:63" pos:end="199:64">-&gt;</operator><name pos:start="199:65" pos:end="199:80">format_whitelist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:67"><expr pos:start="201:5" pos:end="201:66"><name pos:start="201:5" pos:end="201:34"><name pos:start="201:5" pos:end="201:7">sap</name><operator pos:start="201:8" pos:end="201:9">-&gt;</operator><name pos:start="201:10" pos:end="201:16">sdp_ctx</name><operator pos:start="201:17" pos:end="201:18">-&gt;</operator> <name pos:start="201:20" pos:end="201:34">codec_whitelist</name></name> <operator pos:start="201:36" pos:end="201:36">=</operator> <call pos:start="201:38" pos:end="201:66"><name pos:start="201:38" pos:end="201:46">av_strdup</name><argument_list pos:start="201:47" pos:end="201:66">(<argument pos:start="201:48" pos:end="201:65"><expr pos:start="201:48" pos:end="201:65"><name pos:start="201:48" pos:end="201:65"><name pos:start="201:48" pos:end="201:48">s</name><operator pos:start="201:49" pos:end="201:50">-&gt;</operator><name pos:start="201:51" pos:end="201:65">codec_whitelist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:68"><expr pos:start="203:5" pos:end="203:67"><name pos:start="203:5" pos:end="203:34"><name pos:start="203:5" pos:end="203:7">sap</name><operator pos:start="203:8" pos:end="203:9">-&gt;</operator><name pos:start="203:10" pos:end="203:16">sdp_ctx</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:34">format_whitelist</name></name> <operator pos:start="203:36" pos:end="203:36">=</operator> <call pos:start="203:38" pos:end="203:67"><name pos:start="203:38" pos:end="203:46">av_strdup</name><argument_list pos:start="203:47" pos:end="203:67">(<argument pos:start="203:48" pos:end="203:66"><expr pos:start="203:48" pos:end="203:66"><name pos:start="203:48" pos:end="203:66"><name pos:start="203:48" pos:end="203:48">s</name><operator pos:start="203:49" pos:end="203:50">-&gt;</operator><name pos:start="203:51" pos:end="203:66">format_whitelist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:70"><expr pos:start="207:5" pos:end="207:69"><name pos:start="207:5" pos:end="207:7">ret</name> <operator pos:start="207:9" pos:end="207:9">=</operator> <call pos:start="207:11" pos:end="207:69"><name pos:start="207:11" pos:end="207:29">avformat_open_input</name><argument_list pos:start="207:30" pos:end="207:69">(<argument pos:start="207:31" pos:end="207:43"><expr pos:start="207:31" pos:end="207:43"><operator pos:start="207:31" pos:end="207:31">&amp;</operator><name pos:start="207:32" pos:end="207:43"><name pos:start="207:32" pos:end="207:34">sap</name><operator pos:start="207:35" pos:end="207:36">-&gt;</operator><name pos:start="207:37" pos:end="207:43">sdp_ctx</name></name></expr></argument>, <argument pos:start="207:46" pos:end="207:55"><expr pos:start="207:46" pos:end="207:55"><literal type="string" pos:start="207:46" pos:end="207:55">"temp.sdp"</literal></expr></argument>, <argument pos:start="207:58" pos:end="207:62"><expr pos:start="207:58" pos:end="207:62"><name pos:start="207:58" pos:end="207:62">infmt</name></expr></argument>, <argument pos:start="207:65" pos:end="207:68"><expr pos:start="207:65" pos:end="207:68"><name pos:start="207:65" pos:end="207:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="209:5" pos:end="211:18"><if pos:start="209:5" pos:end="211:18">if <condition pos:start="209:8" pos:end="209:16">(<expr pos:start="209:9" pos:end="209:15"><name pos:start="209:9" pos:end="209:11">ret</name> <operator pos:start="209:13" pos:end="209:13">&lt;</operator> <literal type="number" pos:start="209:15" pos:end="209:15">0</literal></expr>)</condition><block type="pseudo" pos:start="211:9" pos:end="211:18"><block_content pos:start="211:9" pos:end="211:18">

        <goto pos:start="211:9" pos:end="211:18">goto <name pos:start="211:14" pos:end="211:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="213:5" pos:end="215:42"><if pos:start="213:5" pos:end="215:42">if <condition pos:start="213:8" pos:end="213:52">(<expr pos:start="213:9" pos:end="213:51"><name pos:start="213:9" pos:end="213:31"><name pos:start="213:9" pos:end="213:11">sap</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:20">sdp_ctx</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:31">ctx_flags</name></name> <operator pos:start="213:33" pos:end="213:33">&amp;</operator> <name pos:start="213:35" pos:end="213:51">AVFMTCTX_NOHEADER</name></expr>)</condition><block type="pseudo" pos:start="215:9" pos:end="215:42"><block_content pos:start="215:9" pos:end="215:42">

        <expr_stmt pos:start="215:9" pos:end="215:42"><expr pos:start="215:9" pos:end="215:41"><name pos:start="215:9" pos:end="215:20"><name pos:start="215:9" pos:end="215:9">s</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:20">ctx_flags</name></name> <operator pos:start="215:22" pos:end="215:23">|=</operator> <name pos:start="215:25" pos:end="215:41">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="217:5" pos:end="235:5">for <control pos:start="217:9" pos:end="217:50">(<init pos:start="217:10" pos:end="217:15"><expr pos:start="217:10" pos:end="217:14"><name pos:start="217:10" pos:end="217:10">i</name> <operator pos:start="217:12" pos:end="217:12">=</operator> <literal type="number" pos:start="217:14" pos:end="217:14">0</literal></expr>;</init> <condition pos:start="217:17" pos:end="217:45"><expr pos:start="217:17" pos:end="217:44"><name pos:start="217:17" pos:end="217:17">i</name> <operator pos:start="217:19" pos:end="217:19">&lt;</operator> <name pos:start="217:21" pos:end="217:44"><name pos:start="217:21" pos:end="217:23">sap</name><operator pos:start="217:24" pos:end="217:25">-&gt;</operator><name pos:start="217:26" pos:end="217:32">sdp_ctx</name><operator pos:start="217:33" pos:end="217:34">-&gt;</operator><name pos:start="217:35" pos:end="217:44">nb_streams</name></name></expr>;</condition> <incr pos:start="217:47" pos:end="217:49"><expr pos:start="217:47" pos:end="217:49"><name pos:start="217:47" pos:end="217:47">i</name><operator pos:start="217:48" pos:end="217:49">++</operator></expr></incr>)</control> <block pos:start="217:52" pos:end="235:5">{<block_content pos:start="219:9" pos:end="233:60">

        <decl_stmt pos:start="219:9" pos:end="219:52"><decl pos:start="219:9" pos:end="219:51"><type pos:start="219:9" pos:end="219:18"><name pos:start="219:9" pos:end="219:16">AVStream</name> <modifier pos:start="219:18" pos:end="219:18">*</modifier></type><name pos:start="219:19" pos:end="219:20">st</name> <init pos:start="219:22" pos:end="219:51">= <expr pos:start="219:24" pos:end="219:51"><call pos:start="219:24" pos:end="219:51"><name pos:start="219:24" pos:end="219:42">avformat_new_stream</name><argument_list pos:start="219:43" pos:end="219:51">(<argument pos:start="219:44" pos:end="219:44"><expr pos:start="219:44" pos:end="219:44"><name pos:start="219:44" pos:end="219:44">s</name></expr></argument>, <argument pos:start="219:47" pos:end="219:50"><expr pos:start="219:47" pos:end="219:50"><name pos:start="219:47" pos:end="219:50">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="221:9" pos:end="227:9"><if pos:start="221:9" pos:end="227:9">if <condition pos:start="221:12" pos:end="221:16">(<expr pos:start="221:13" pos:end="221:15"><operator pos:start="221:13" pos:end="221:13">!</operator><name pos:start="221:14" pos:end="221:15">st</name></expr>)</condition> <block pos:start="221:18" pos:end="227:9">{<block_content pos:start="223:13" pos:end="225:22">

            <expr_stmt pos:start="223:13" pos:end="223:34"><expr pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:15">ret</name> <operator pos:start="223:17" pos:end="223:17">=</operator> <call pos:start="223:19" pos:end="223:33"><name pos:start="223:19" pos:end="223:25">AVERROR</name><argument_list pos:start="223:26" pos:end="223:33">(<argument pos:start="223:27" pos:end="223:32"><expr pos:start="223:27" pos:end="223:32"><name pos:start="223:27" pos:end="223:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="225:13" pos:end="225:22">goto <name pos:start="225:18" pos:end="225:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:19"><expr pos:start="229:9" pos:end="229:18"><name pos:start="229:9" pos:end="229:14"><name pos:start="229:9" pos:end="229:10">st</name><operator pos:start="229:11" pos:end="229:12">-&gt;</operator><name pos:start="229:13" pos:end="229:14">id</name></name> <operator pos:start="229:16" pos:end="229:16">=</operator> <name pos:start="229:18" pos:end="229:18">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:73"><expr pos:start="231:9" pos:end="231:72"><call pos:start="231:9" pos:end="231:72"><name pos:start="231:9" pos:end="231:28">avcodec_copy_context</name><argument_list pos:start="231:29" pos:end="231:72">(<argument pos:start="231:30" pos:end="231:38"><expr pos:start="231:30" pos:end="231:38"><name pos:start="231:30" pos:end="231:38"><name pos:start="231:30" pos:end="231:31">st</name><operator pos:start="231:32" pos:end="231:33">-&gt;</operator><name pos:start="231:34" pos:end="231:38">codec</name></name></expr></argument>, <argument pos:start="231:41" pos:end="231:71"><expr pos:start="231:41" pos:end="231:71"><name pos:start="231:41" pos:end="231:64"><name pos:start="231:41" pos:end="231:43">sap</name><operator pos:start="231:44" pos:end="231:45">-&gt;</operator><name pos:start="231:46" pos:end="231:52">sdp_ctx</name><operator pos:start="231:53" pos:end="231:54">-&gt;</operator><name pos:start="231:55" pos:end="231:61">streams</name><index pos:start="231:62" pos:end="231:64">[<expr pos:start="231:63" pos:end="231:63"><name pos:start="231:63" pos:end="231:63">i</name></expr>]</index></name><operator pos:start="231:65" pos:end="231:66">-&gt;</operator><name pos:start="231:67" pos:end="231:71">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:60"><expr pos:start="233:9" pos:end="233:59"><name pos:start="233:9" pos:end="233:21"><name pos:start="233:9" pos:end="233:10">st</name><operator pos:start="233:11" pos:end="233:12">-&gt;</operator><name pos:start="233:13" pos:end="233:21">time_base</name></name> <operator pos:start="233:23" pos:end="233:23">=</operator> <name pos:start="233:25" pos:end="233:48"><name pos:start="233:25" pos:end="233:27">sap</name><operator pos:start="233:28" pos:end="233:29">-&gt;</operator><name pos:start="233:30" pos:end="233:36">sdp_ctx</name><operator pos:start="233:37" pos:end="233:38">-&gt;</operator><name pos:start="233:39" pos:end="233:45">streams</name><index pos:start="233:46" pos:end="233:48">[<expr pos:start="233:47" pos:end="233:47"><name pos:start="233:47" pos:end="233:47">i</name></expr>]</index></name><operator pos:start="233:49" pos:end="233:50">-&gt;</operator><name pos:start="233:51" pos:end="233:59">time_base</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="239:5" pos:end="239:13">return <expr pos:start="239:12" pos:end="239:12"><literal type="number" pos:start="239:12" pos:end="239:12">0</literal></expr>;</return>



<label pos:start="243:1" pos:end="243:5"><name pos:start="243:1" pos:end="243:4">fail</name>:</label>

    <expr_stmt pos:start="245:5" pos:end="245:22"><expr pos:start="245:5" pos:end="245:21"><call pos:start="245:5" pos:end="245:21"><name pos:start="245:5" pos:end="245:18">sap_read_close</name><argument_list pos:start="245:19" pos:end="245:21">(<argument pos:start="245:20" pos:end="245:20"><expr pos:start="245:20" pos:end="245:20"><name pos:start="245:20" pos:end="245:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="247:5" pos:end="247:15">return <expr pos:start="247:12" pos:end="247:14"><name pos:start="247:12" pos:end="247:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
