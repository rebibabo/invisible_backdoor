<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25106.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">raw_read_options</name><parameter_list pos:start="1:28" pos:end="3:34">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:33">QDict</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:42">options</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><name pos:start="1:45" pos:end="1:60">BlockDriverState</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">bs</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:19"><decl pos:start="3:5" pos:end="3:19"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:16">BDRVRawState</name> <modifier pos:start="3:18" pos:end="3:18">*</modifier></type><name pos:start="3:19" pos:end="3:19">s</name></decl></parameter>, <parameter pos:start="3:22" pos:end="3:33"><decl pos:start="3:22" pos:end="3:33"><type pos:start="3:22" pos:end="3:33"><name pos:start="3:22" pos:end="3:26">Error</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier><modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:33">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:15">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:21">real_size</name> <init pos:start="11:23" pos:end="11:25">= <expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:13">real_size</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:44"><name pos:start="17:17" pos:end="17:30">bdrv_getlength</name><argument_list pos:start="17:31" pos:end="17:44">(<argument pos:start="17:32" pos:end="17:43"><expr pos:start="17:32" pos:end="17:43"><name pos:start="17:32" pos:end="17:43"><name pos:start="17:32" pos:end="17:33">bs</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:39">file</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:43">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:17">real_size</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>)</condition> <block pos:start="19:24" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:25">

        <expr_stmt pos:start="21:9" pos:end="21:71"><expr pos:start="21:9" pos:end="21:70"><call pos:start="21:9" pos:end="21:70"><name pos:start="21:9" pos:end="21:24">error_setg_errno</name><argument_list pos:start="21:25" pos:end="21:70">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">errp</name></expr></argument>, <argument pos:start="21:32" pos:end="21:41"><expr pos:start="21:32" pos:end="21:41"><operator pos:start="21:32" pos:end="21:32">-</operator><name pos:start="21:33" pos:end="21:41">real_size</name></expr></argument>, <argument pos:start="21:44" pos:end="21:69"><expr pos:start="21:44" pos:end="21:69"><literal type="string" pos:start="21:44" pos:end="21:69">"Could not get image size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:25">return <expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:24">real_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:70"><expr pos:start="29:5" pos:end="29:69"><name pos:start="29:5" pos:end="29:8">opts</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:69"><name pos:start="29:12" pos:end="29:27">qemu_opts_create</name><argument_list pos:start="29:28" pos:end="29:69">(<argument pos:start="29:29" pos:end="29:45"><expr pos:start="29:29" pos:end="29:45"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:45">raw_runtime_opts</name></expr></argument>, <argument pos:start="29:48" pos:end="29:51"><expr pos:start="29:48" pos:end="29:51"><name pos:start="29:48" pos:end="29:51">NULL</name></expr></argument>, <argument pos:start="29:54" pos:end="29:54"><expr pos:start="29:54" pos:end="29:54"><literal type="number" pos:start="29:54" pos:end="29:54">0</literal></expr></argument>, <argument pos:start="29:57" pos:end="29:68"><expr pos:start="29:57" pos:end="29:68"><operator pos:start="29:57" pos:end="29:57">&amp;</operator><name pos:start="29:58" pos:end="29:68">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><call pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:26">qemu_opts_absorb_qdict</name><argument_list pos:start="31:27" pos:end="31:53">(<argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">opts</name></expr></argument>, <argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:40">options</name></expr></argument>, <argument pos:start="31:43" pos:end="31:52"><expr pos:start="31:43" pos:end="31:52"><operator pos:start="31:43" pos:end="31:43">&amp;</operator><name pos:start="31:44" pos:end="31:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">local_err</name></expr>)</condition> <block pos:start="33:20" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:17">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:23">error_propagate</name><argument_list pos:start="35:24" pos:end="35:40">(<argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><name pos:start="35:25" pos:end="35:28">errp</name></expr></argument>, <argument pos:start="35:31" pos:end="35:39"><expr pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">-</operator><name pos:start="37:16" pos:end="37:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:17">goto <name pos:start="39:14" pos:end="39:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:13"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:13">offset</name></name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:52"><name pos:start="45:17" pos:end="45:33">qemu_opt_get_size</name><argument_list pos:start="45:34" pos:end="45:52">(<argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:38">opts</name></expr></argument>, <argument pos:start="45:41" pos:end="45:48"><expr pos:start="45:41" pos:end="45:48"><literal type="string" pos:start="45:41" pos:end="45:48">"offset"</literal></expr></argument>, <argument pos:start="45:51" pos:end="45:51"><expr pos:start="45:51" pos:end="45:51"><literal type="number" pos:start="45:51" pos:end="45:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="59:5"><if pos:start="47:5" pos:end="59:5">if <condition pos:start="47:8" pos:end="47:30">(<expr pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:17">offset</name></name> <operator pos:start="47:19" pos:end="47:19">&gt;</operator> <name pos:start="47:21" pos:end="47:29">real_size</name></expr>)</condition> <block pos:start="47:32" pos:end="59:5">{<block_content pos:start="49:9" pos:end="57:17">

        <expr_stmt pos:start="49:9" pos:end="53:34"><expr pos:start="49:9" pos:end="53:33"><call pos:start="49:9" pos:end="53:33"><name pos:start="49:9" pos:end="49:18">error_setg</name><argument_list pos:start="49:19" pos:end="53:33">(<argument pos:start="49:20" pos:end="49:23"><expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">errp</name></expr></argument>, <argument pos:start="49:26" pos:end="51:55"><expr pos:start="49:26" pos:end="51:55"><literal type="string" pos:start="49:26" pos:end="49:36">"Offset (%"</literal> <name pos:start="49:38" pos:end="49:43">PRIu64</name> <literal type="string" pos:start="49:45" pos:end="49:71">") cannot be greater than "</literal>

            <literal type="string" pos:start="51:13" pos:end="51:44">"size of the containing file (%"</literal> <name pos:start="51:46" pos:end="51:51">PRId64</name> <literal type="string" pos:start="51:53" pos:end="51:55">")"</literal></expr></argument>,

            <argument pos:start="53:13" pos:end="53:21"><expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:21">offset</name></name></expr></argument>, <argument pos:start="53:24" pos:end="53:32"><expr pos:start="53:24" pos:end="53:32"><name pos:start="53:24" pos:end="53:32">real_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">-</operator><name pos:start="55:16" pos:end="55:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:44">(<expr pos:start="63:9" pos:end="63:43"><call pos:start="63:9" pos:end="63:35"><name pos:start="63:9" pos:end="63:21">qemu_opt_find</name><argument_list pos:start="63:22" pos:end="63:35">(<argument pos:start="63:23" pos:end="63:26"><expr pos:start="63:23" pos:end="63:26"><name pos:start="63:23" pos:end="63:26">opts</name></expr></argument>, <argument pos:start="63:29" pos:end="63:34"><expr pos:start="63:29" pos:end="63:34"><literal type="string" pos:start="63:29" pos:end="63:34">"size"</literal></expr></argument>)</argument_list></call> <operator pos:start="63:37" pos:end="63:38">!=</operator> <name pos:start="63:40" pos:end="63:43">NULL</name></expr>)</condition> <block pos:start="63:46" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:27">

        <expr_stmt pos:start="65:9" pos:end="65:53"><expr pos:start="65:9" pos:end="65:52"><name pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:15">size</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:52"><name pos:start="65:19" pos:end="65:35">qemu_opt_get_size</name><argument_list pos:start="65:36" pos:end="65:52">(<argument pos:start="65:37" pos:end="65:40"><expr pos:start="65:37" pos:end="65:40"><name pos:start="65:37" pos:end="65:40">opts</name></expr></argument>, <argument pos:start="65:43" pos:end="65:48"><expr pos:start="65:43" pos:end="65:48"><literal type="string" pos:start="65:43" pos:end="65:48">"size"</literal></expr></argument>, <argument pos:start="65:51" pos:end="65:51"><expr pos:start="65:51" pos:end="65:51"><literal type="number" pos:start="65:51" pos:end="65:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:27"><expr pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">has_size</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:26">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="75:5">else <block pos:start="69:12" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:40">

        <expr_stmt pos:start="71:9" pos:end="71:28"><expr pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">has_size</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:27">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:15">size</name></name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:27">real_size</name> <operator pos:start="73:29" pos:end="73:29">-</operator> <name pos:start="73:31" pos:end="73:39"><name pos:start="73:31" pos:end="73:31">s</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:39">offset</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:31">/* Check size and offset */</comment>

    <if_stmt pos:start="81:5" pos:end="95:5"><if pos:start="81:5" pos:end="95:5">if <condition pos:start="81:8" pos:end="81:42">(<expr pos:start="81:9" pos:end="81:41"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:18">real_size</name> <operator pos:start="81:20" pos:end="81:20">-</operator> <name pos:start="81:22" pos:end="81:30"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:30">offset</name></name><operator pos:start="81:31" pos:end="81:31">)</operator> <operator pos:start="81:33" pos:end="81:33">&lt;</operator> <name pos:start="81:35" pos:end="81:41"><name pos:start="81:35" pos:end="81:35">s</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:41">size</name></name></expr>)</condition> <block pos:start="81:44" pos:end="95:5">{<block_content pos:start="83:9" pos:end="93:17">

        <expr_stmt pos:start="83:9" pos:end="89:43"><expr pos:start="83:9" pos:end="89:42"><call pos:start="83:9" pos:end="89:42"><name pos:start="83:9" pos:end="83:18">error_setg</name><argument_list pos:start="83:19" pos:end="89:42">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">errp</name></expr></argument>, <argument pos:start="83:26" pos:end="87:63"><expr pos:start="83:26" pos:end="87:63"><literal type="string" pos:start="83:26" pos:end="83:47">"The sum of offset (%"</literal> <name pos:start="83:49" pos:end="83:54">PRIu64</name> <literal type="string" pos:start="83:56" pos:end="83:68">") and size "</literal>

            <literal type="string" pos:start="85:13" pos:end="85:16">"(%"</literal> <name pos:start="85:18" pos:end="85:23">PRIu64</name> <literal type="string" pos:start="85:25" pos:end="85:62">") has to be smaller or equal to the "</literal>

            <literal type="string" pos:start="87:13" pos:end="87:52">" actual size of the containing file (%"</literal> <name pos:start="87:54" pos:end="87:59">PRId64</name> <literal type="string" pos:start="87:61" pos:end="87:63">")"</literal></expr></argument>,

            <argument pos:start="89:13" pos:end="89:21"><expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:21">offset</name></name></expr></argument>, <argument pos:start="89:24" pos:end="89:30"><expr pos:start="89:24" pos:end="89:30"><name pos:start="89:24" pos:end="89:30"><name pos:start="89:24" pos:end="89:24">s</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:30">size</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:41"><expr pos:start="89:33" pos:end="89:41"><name pos:start="89:33" pos:end="89:41">real_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:22"><expr pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <operator pos:start="91:15" pos:end="91:15">-</operator><name pos:start="91:16" pos:end="91:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:17">goto <name pos:start="93:14" pos:end="93:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="99:5" pos:end="101:51">/* Make sure size is multiple of BDRV_SECTOR_SIZE to prevent rounding

     * up and leaking out of the specified area. */</comment>

    <if_stmt pos:start="103:5" pos:end="113:5"><if pos:start="103:5" pos:end="113:5">if <condition pos:start="103:8" pos:end="103:67">(<expr pos:start="103:9" pos:end="103:66"><name pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:19">has_size</name></name> <operator pos:start="103:21" pos:end="103:22">&amp;&amp;</operator> <operator pos:start="103:24" pos:end="103:24">!</operator><call pos:start="103:25" pos:end="103:66"><name pos:start="103:25" pos:end="103:39">QEMU_IS_ALIGNED</name><argument_list pos:start="103:40" pos:end="103:66">(<argument pos:start="103:41" pos:end="103:47"><expr pos:start="103:41" pos:end="103:47"><name pos:start="103:41" pos:end="103:47"><name pos:start="103:41" pos:end="103:41">s</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:47">size</name></name></expr></argument>, <argument pos:start="103:50" pos:end="103:65"><expr pos:start="103:50" pos:end="103:65"><name pos:start="103:50" pos:end="103:65">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:69" pos:end="113:5">{<block_content pos:start="105:9" pos:end="111:17">

        <expr_stmt pos:start="105:9" pos:end="107:30"><expr pos:start="105:9" pos:end="107:29"><call pos:start="105:9" pos:end="107:29"><name pos:start="105:9" pos:end="105:18">error_setg</name><argument_list pos:start="105:19" pos:end="107:29">(<argument pos:start="105:20" pos:end="105:23"><expr pos:start="105:20" pos:end="105:23"><name pos:start="105:20" pos:end="105:23">errp</name></expr></argument>, <argument pos:start="105:26" pos:end="105:65"><expr pos:start="105:26" pos:end="105:65"><literal type="string" pos:start="105:26" pos:end="105:65">"Specified size is not multiple of %llu"</literal></expr></argument>,

            <argument pos:start="107:13" pos:end="107:28"><expr pos:start="107:13" pos:end="107:28"><name pos:start="107:13" pos:end="107:28">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:22"><expr pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <operator pos:start="109:15" pos:end="109:15">-</operator><name pos:start="109:16" pos:end="109:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:17">goto <name pos:start="111:14" pos:end="111:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:12"><expr pos:start="117:5" pos:end="117:11"><name pos:start="117:5" pos:end="117:7">ret</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <literal type="number" pos:start="117:11" pos:end="117:11">0</literal></expr>;</expr_stmt>



<label pos:start="121:1" pos:end="121:4"><name pos:start="121:1" pos:end="121:3">end</name>:</label>



    <expr_stmt pos:start="125:5" pos:end="125:24"><expr pos:start="125:5" pos:end="125:23"><call pos:start="125:5" pos:end="125:23"><name pos:start="125:5" pos:end="125:17">qemu_opts_del</name><argument_list pos:start="125:18" pos:end="125:23">(<argument pos:start="125:19" pos:end="125:22"><expr pos:start="125:19" pos:end="125:22"><name pos:start="125:19" pos:end="125:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="129:5" pos:end="129:15">return <expr pos:start="129:12" pos:end="129:14"><name pos:start="129:12" pos:end="129:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
