<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17761.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">hwmap_config_output</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">AVFilterLink</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:52">outlink</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="291:1">{<block_content pos:start="5:5" pos:end="289:15">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:26">avctx</name> <init pos:start="5:28" pos:end="5:41">= <expr pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:36">outlink</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:41">src</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:16">HWMapContext</name>      <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">ctx</name> <init pos:start="7:28" pos:end="7:40">= <expr pos:start="7:30" pos:end="7:40"><name pos:start="7:30" pos:end="7:40"><name pos:start="7:30" pos:end="7:34">avctx</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:40">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:16">AVFilterLink</name>   <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:26">inlink</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:42">inputs</name><index pos:start="9:43" pos:end="9:45">[<expr pos:start="9:44" pos:end="9:44"><literal type="number" pos:start="9:44" pos:end="9:44">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVHWFramesContext</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:27">hwfc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AVBufferRef</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:23">device</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:30"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:28">AVPixFmtDescriptor</name> <modifier pos:start="15:30" pos:end="15:30">*</modifier></type><name pos:start="15:31" pos:end="15:34">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">err</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="25:49"><expr pos:start="21:5" pos:end="25:48"><call pos:start="21:5" pos:end="25:48"><name pos:start="21:5" pos:end="21:10">av_log</name><argument_list pos:start="21:11" pos:end="25:48">(<argument pos:start="21:12" pos:end="21:16"><expr pos:start="21:12" pos:end="21:16"><name pos:start="21:12" pos:end="21:16">avctx</name></expr></argument>, <argument pos:start="21:19" pos:end="21:30"><expr pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="21:33" pos:end="21:61"><expr pos:start="21:33" pos:end="21:61"><literal type="string" pos:start="21:33" pos:end="21:61">"Configure hwmap %s -&gt; %s.\n"</literal></expr></argument>,

           <argument pos:start="23:12" pos:end="23:46"><expr pos:start="23:12" pos:end="23:46"><call pos:start="23:12" pos:end="23:46"><name pos:start="23:12" pos:end="23:30">av_get_pix_fmt_name</name><argument_list pos:start="23:31" pos:end="23:46">(<argument pos:start="23:32" pos:end="23:45"><expr pos:start="23:32" pos:end="23:45"><name pos:start="23:32" pos:end="23:45"><name pos:start="23:32" pos:end="23:37">inlink</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:45">format</name></name></expr></argument>)</argument_list></call></expr></argument>,

           <argument pos:start="25:12" pos:end="25:47"><expr pos:start="25:12" pos:end="25:47"><call pos:start="25:12" pos:end="25:47"><name pos:start="25:12" pos:end="25:30">av_get_pix_fmt_name</name><argument_list pos:start="25:31" pos:end="25:47">(<argument pos:start="25:32" pos:end="25:46"><expr pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:38">outlink</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:46">format</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><call pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:19">av_buffer_unref</name><argument_list pos:start="29:20" pos:end="29:39">(<argument pos:start="29:21" pos:end="29:38"><expr pos:start="29:21" pos:end="29:38"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:38"><name pos:start="29:22" pos:end="29:24">ctx</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:38">hwframes_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:10">device</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:33"><name pos:start="33:14" pos:end="33:18">avctx</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:33">hw_device_ctx</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="259:5"><if pos:start="37:5" pos:end="181:5">if <condition pos:start="37:8" pos:end="37:30">(<expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:14">inlink</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:29">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="37:32" pos:end="181:5">{<block_content pos:start="39:9" pos:end="179:9">

        <expr_stmt pos:start="39:9" pos:end="39:63"><expr pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:12">hwfc</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <operator pos:start="39:16" pos:end="39:16">(</operator><name pos:start="39:17" pos:end="39:33">AVHWFramesContext</name><operator pos:start="39:34" pos:end="39:34">*</operator><operator pos:start="39:35" pos:end="39:35">)</operator><name pos:start="39:36" pos:end="39:62"><name pos:start="39:36" pos:end="39:41">inlink</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:56">hw_frames_ctx</name><operator pos:start="39:57" pos:end="39:58">-&gt;</operator><name pos:start="39:59" pos:end="39:62">data</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="75:9"><if pos:start="43:9" pos:end="75:9">if <condition pos:start="43:12" pos:end="43:36">(<expr pos:start="43:13" pos:end="43:35"><name pos:start="43:13" pos:end="43:35"><name pos:start="43:13" pos:end="43:15">ctx</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:35">derive_device_type</name></name></expr>)</condition> <block pos:start="43:38" pos:end="75:9">{<block_content pos:start="45:13" pos:end="73:13">

            <decl_stmt pos:start="45:13" pos:end="45:37"><decl pos:start="45:13" pos:end="45:36"><type pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:16">enum</name> <name pos:start="45:18" pos:end="45:31">AVHWDeviceType</name></name></type> <name pos:start="45:33" pos:end="45:36">type</name></decl>;</decl_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:74"><expr pos:start="49:13" pos:end="49:73"><name pos:start="49:13" pos:end="49:16">type</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:73"><name pos:start="49:20" pos:end="49:48">av_hwdevice_find_type_by_name</name><argument_list pos:start="49:49" pos:end="49:73">(<argument pos:start="49:50" pos:end="49:72"><expr pos:start="49:50" pos:end="49:72"><name pos:start="49:50" pos:end="49:72"><name pos:start="49:50" pos:end="49:52">ctx</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:72">derive_device_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="51:46">(<expr pos:start="51:17" pos:end="51:45"><name pos:start="51:17" pos:end="51:20">type</name> <operator pos:start="51:22" pos:end="51:23">==</operator> <name pos:start="51:25" pos:end="51:45">AV_HWDEVICE_TYPE_NONE</name></expr>)</condition> <block pos:start="51:48" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:26">

                <expr_stmt pos:start="53:17" pos:end="53:70"><expr pos:start="53:17" pos:end="53:69"><call pos:start="53:17" pos:end="53:69"><name pos:start="53:17" pos:end="53:22">av_log</name><argument_list pos:start="53:23" pos:end="53:69">(<argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:28">avctx</name></expr></argument>, <argument pos:start="53:31" pos:end="53:42"><expr pos:start="53:31" pos:end="53:42"><name pos:start="53:31" pos:end="53:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:45" pos:end="53:68"><expr pos:start="53:45" pos:end="53:68"><literal type="string" pos:start="53:45" pos:end="53:68">"Invalid device type.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="55:17" pos:end="55:26">goto <name pos:start="55:22" pos:end="55:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="61:13" pos:end="63:70"><expr pos:start="61:13" pos:end="63:69"><name pos:start="61:13" pos:end="61:15">err</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="63:69"><name pos:start="61:19" pos:end="61:48">av_hwdevice_ctx_create_derived</name><argument_list pos:start="61:49" pos:end="63:69">(<argument pos:start="61:50" pos:end="61:56"><expr pos:start="61:50" pos:end="61:56"><operator pos:start="61:50" pos:end="61:50">&amp;</operator><name pos:start="61:51" pos:end="61:56">device</name></expr></argument>, <argument pos:start="61:59" pos:end="61:62"><expr pos:start="61:59" pos:end="61:62"><name pos:start="61:59" pos:end="61:62">type</name></expr></argument>,

                                                 <argument pos:start="63:50" pos:end="63:65"><expr pos:start="63:50" pos:end="63:65"><name pos:start="63:50" pos:end="63:65"><name pos:start="63:50" pos:end="63:53">hwfc</name><operator pos:start="63:54" pos:end="63:55">-&gt;</operator><name pos:start="63:56" pos:end="63:65">device_ref</name></name></expr></argument>, <argument pos:start="63:68" pos:end="63:68"><expr pos:start="63:68" pos:end="63:68"><literal type="number" pos:start="63:68" pos:end="63:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="73:13"><if pos:start="65:13" pos:end="73:13">if <condition pos:start="65:16" pos:end="65:24">(<expr pos:start="65:17" pos:end="65:23"><name pos:start="65:17" pos:end="65:19">err</name> <operator pos:start="65:21" pos:end="65:21">&lt;</operator> <literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr>)</condition> <block pos:start="65:26" pos:end="73:13">{<block_content pos:start="67:17" pos:end="71:26">

                <expr_stmt pos:start="67:17" pos:end="69:53"><expr pos:start="67:17" pos:end="69:52"><call pos:start="67:17" pos:end="69:52"><name pos:start="67:17" pos:end="67:22">av_log</name><argument_list pos:start="67:23" pos:end="69:52">(<argument pos:start="67:24" pos:end="67:28"><expr pos:start="67:24" pos:end="67:28"><name pos:start="67:24" pos:end="67:28">avctx</name></expr></argument>, <argument pos:start="67:31" pos:end="67:42"><expr pos:start="67:31" pos:end="67:42"><name pos:start="67:31" pos:end="67:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:45" pos:end="69:46"><expr pos:start="67:45" pos:end="69:46"><literal type="string" pos:start="67:45" pos:end="67:72">"Failed to created derived "</literal>

                       <literal type="string" pos:start="69:24" pos:end="69:46">"device context: %d.\n"</literal></expr></argument>, <argument pos:start="69:49" pos:end="69:51"><expr pos:start="69:49" pos:end="69:51"><name pos:start="69:49" pos:end="69:51">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="71:17" pos:end="71:26">goto <name pos:start="71:22" pos:end="71:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:52"><expr pos:start="79:9" pos:end="79:51"><name pos:start="79:9" pos:end="79:12">desc</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <call pos:start="79:16" pos:end="79:51"><name pos:start="79:16" pos:end="79:34">av_pix_fmt_desc_get</name><argument_list pos:start="79:35" pos:end="79:51">(<argument pos:start="79:36" pos:end="79:50"><expr pos:start="79:36" pos:end="79:50"><name pos:start="79:36" pos:end="79:50"><name pos:start="79:36" pos:end="79:42">outlink</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:50">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:18">(<expr pos:start="81:13" pos:end="81:17"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:17">desc</name></expr>)</condition> <block pos:start="81:20" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:22">

            <expr_stmt pos:start="83:13" pos:end="83:34"><expr pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:15">err</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:33"><name pos:start="83:19" pos:end="83:25">AVERROR</name><argument_list pos:start="83:26" pos:end="83:33">(<argument pos:start="83:27" pos:end="83:32"><expr pos:start="83:27" pos:end="83:32"><name pos:start="83:27" pos:end="83:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="85:13" pos:end="85:22">goto <name pos:start="85:18" pos:end="85:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="91:9" pos:end="179:9"><if pos:start="91:9" pos:end="135:9">if <condition pos:start="91:12" pos:end="93:52">(<expr pos:start="91:13" pos:end="93:51"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:18">inlink</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:26">format</name></name> <operator pos:start="91:28" pos:end="91:29">==</operator> <name pos:start="91:31" pos:end="91:42"><name pos:start="91:31" pos:end="91:34">hwfc</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:42">format</name></name> <operator pos:start="91:44" pos:end="91:45">&amp;&amp;</operator>

            <operator pos:start="93:13" pos:end="93:13">(</operator><name pos:start="93:14" pos:end="93:24"><name pos:start="93:14" pos:end="93:17">desc</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:24">flags</name></name> <operator pos:start="93:26" pos:end="93:26">&amp;</operator> <name pos:start="93:28" pos:end="93:50">AV_PIX_FMT_FLAG_HWACCEL</name><operator pos:start="93:51" pos:end="93:51">)</operator></expr>)</condition> <block pos:start="93:54" pos:end="135:9">{<block_content pos:start="101:13" pos:end="131:13">

            <comment type="line" pos:start="95:13" pos:end="95:70">// Map between two hardware formats (including the case of</comment>

            <comment type="line" pos:start="97:13" pos:end="97:44">// undoing an existing mapping).</comment>



            <if_stmt pos:start="101:13" pos:end="111:13"><if pos:start="101:13" pos:end="111:13">if <condition pos:start="101:16" pos:end="101:24">(<expr pos:start="101:17" pos:end="101:23"><operator pos:start="101:17" pos:end="101:17">!</operator><name pos:start="101:18" pos:end="101:23">device</name></expr>)</condition> <block pos:start="101:26" pos:end="111:13">{<block_content pos:start="103:17" pos:end="109:26">

                <expr_stmt pos:start="103:17" pos:end="105:66"><expr pos:start="103:17" pos:end="105:65"><call pos:start="103:17" pos:end="105:65"><name pos:start="103:17" pos:end="103:22">av_log</name><argument_list pos:start="103:23" pos:end="105:65">(<argument pos:start="103:24" pos:end="103:28"><expr pos:start="103:24" pos:end="103:28"><name pos:start="103:24" pos:end="103:28">avctx</name></expr></argument>, <argument pos:start="103:31" pos:end="103:42"><expr pos:start="103:31" pos:end="103:42"><name pos:start="103:31" pos:end="103:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:45" pos:end="105:64"><expr pos:start="103:45" pos:end="105:64"><literal type="string" pos:start="103:45" pos:end="103:68">"A device reference is "</literal>

                       <literal type="string" pos:start="105:24" pos:end="105:64">"required to map to a hardware format.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:38"><expr pos:start="107:17" pos:end="107:37"><name pos:start="107:17" pos:end="107:19">err</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <call pos:start="107:23" pos:end="107:37"><name pos:start="107:23" pos:end="107:29">AVERROR</name><argument_list pos:start="107:30" pos:end="107:37">(<argument pos:start="107:31" pos:end="107:36"><expr pos:start="107:31" pos:end="107:36"><name pos:start="107:31" pos:end="107:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="109:17" pos:end="109:26">goto <name pos:start="109:22" pos:end="109:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="115:13" pos:end="121:74"><expr pos:start="115:13" pos:end="121:73"><name pos:start="115:13" pos:end="115:15">err</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <call pos:start="115:19" pos:end="121:73"><name pos:start="115:19" pos:end="115:47">av_hwframe_ctx_create_derived</name><argument_list pos:start="115:48" pos:end="121:73">(<argument pos:start="115:49" pos:end="115:66"><expr pos:start="115:49" pos:end="115:66"><operator pos:start="115:49" pos:end="115:49">&amp;</operator><name pos:start="115:50" pos:end="115:66"><name pos:start="115:50" pos:end="115:52">ctx</name><operator pos:start="115:53" pos:end="115:54">-&gt;</operator><name pos:start="115:55" pos:end="115:66">hwframes_ref</name></name></expr></argument>,

                                                <argument pos:start="117:49" pos:end="117:63"><expr pos:start="117:49" pos:end="117:63"><name pos:start="117:49" pos:end="117:63"><name pos:start="117:49" pos:end="117:55">outlink</name><operator pos:start="117:56" pos:end="117:57">-&gt;</operator><name pos:start="117:58" pos:end="117:63">format</name></name></expr></argument>,

                                                <argument pos:start="119:49" pos:end="119:54"><expr pos:start="119:49" pos:end="119:54"><name pos:start="119:49" pos:end="119:54">device</name></expr></argument>,

                                                <argument pos:start="121:49" pos:end="121:69"><expr pos:start="121:49" pos:end="121:69"><name pos:start="121:49" pos:end="121:69"><name pos:start="121:49" pos:end="121:54">inlink</name><operator pos:start="121:55" pos:end="121:56">-&gt;</operator><name pos:start="121:57" pos:end="121:69">hw_frames_ctx</name></name></expr></argument>, <argument pos:start="121:72" pos:end="121:72"><expr pos:start="121:72" pos:end="121:72"><literal type="number" pos:start="121:72" pos:end="121:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="131:13"><if pos:start="123:13" pos:end="131:13">if <condition pos:start="123:16" pos:end="123:24">(<expr pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:19">err</name> <operator pos:start="123:21" pos:end="123:21">&lt;</operator> <literal type="number" pos:start="123:23" pos:end="123:23">0</literal></expr>)</condition> <block pos:start="123:26" pos:end="131:13">{<block_content pos:start="125:17" pos:end="129:26">

                <expr_stmt pos:start="125:17" pos:end="127:53"><expr pos:start="125:17" pos:end="127:52"><call pos:start="125:17" pos:end="127:52"><name pos:start="125:17" pos:end="125:22">av_log</name><argument_list pos:start="125:23" pos:end="127:52">(<argument pos:start="125:24" pos:end="125:28"><expr pos:start="125:24" pos:end="125:28"><name pos:start="125:24" pos:end="125:28">avctx</name></expr></argument>, <argument pos:start="125:31" pos:end="125:42"><expr pos:start="125:31" pos:end="125:42"><name pos:start="125:31" pos:end="125:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:45" pos:end="127:46"><expr pos:start="125:45" pos:end="127:46"><literal type="string" pos:start="125:45" pos:end="125:71">"Failed to create derived "</literal>

                       <literal type="string" pos:start="127:24" pos:end="127:46">"frames context: %d.\n"</literal></expr></argument>, <argument pos:start="127:49" pos:end="127:51"><expr pos:start="127:49" pos:end="127:51"><name pos:start="127:49" pos:end="127:51">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="129:17" pos:end="129:26">goto <name pos:start="129:22" pos:end="129:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



        </block_content>}</block></if> <if type="elseif" pos:start="135:11" pos:end="159:9">else if <condition pos:start="135:19" pos:end="139:50">(<expr pos:start="135:20" pos:end="139:49"><operator pos:start="135:20" pos:end="135:20">(</operator><name pos:start="135:21" pos:end="135:35"><name pos:start="135:21" pos:end="135:27">outlink</name><operator pos:start="135:28" pos:end="135:29">-&gt;</operator><name pos:start="135:30" pos:end="135:35">format</name></name> <operator pos:start="135:37" pos:end="135:38">==</operator> <name pos:start="135:40" pos:end="135:51"><name pos:start="135:40" pos:end="135:43">hwfc</name><operator pos:start="135:44" pos:end="135:45">-&gt;</operator><name pos:start="135:46" pos:end="135:51">format</name></name> <operator pos:start="135:53" pos:end="135:54">&amp;&amp;</operator>

                    <name pos:start="137:21" pos:end="137:34"><name pos:start="137:21" pos:end="137:26">inlink</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:34">format</name></name>  <operator pos:start="137:37" pos:end="137:38">==</operator> <name pos:start="137:40" pos:end="137:54"><name pos:start="137:40" pos:end="137:43">hwfc</name><operator pos:start="137:44" pos:end="137:45">-&gt;</operator><name pos:start="137:46" pos:end="137:54">sw_format</name></name><operator pos:start="137:55" pos:end="137:55">)</operator> <operator pos:start="137:57" pos:end="137:58">||</operator>

                   <name pos:start="139:20" pos:end="139:33"><name pos:start="139:20" pos:end="139:25">inlink</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:33">format</name></name> <operator pos:start="139:35" pos:end="139:36">==</operator> <name pos:start="139:38" pos:end="139:49"><name pos:start="139:38" pos:end="139:41">hwfc</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:49">format</name></name></expr>)</condition> <block pos:start="139:52" pos:end="159:9">{<block_content pos:start="147:13" pos:end="155:13">

            <comment type="line" pos:start="141:13" pos:end="141:66">// Map from a hardware format to a software format, or</comment>

            <comment type="line" pos:start="143:13" pos:end="143:45">// undo an existing such mapping.</comment>



            <expr_stmt pos:start="147:13" pos:end="147:69"><expr pos:start="147:13" pos:end="147:68"><name pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:15">ctx</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:29">hwframes_ref</name></name> <operator pos:start="147:31" pos:end="147:31">=</operator> <call pos:start="147:33" pos:end="147:68"><name pos:start="147:33" pos:end="147:45">av_buffer_ref</name><argument_list pos:start="147:46" pos:end="147:68">(<argument pos:start="147:47" pos:end="147:67"><expr pos:start="147:47" pos:end="147:67"><name pos:start="147:47" pos:end="147:67"><name pos:start="147:47" pos:end="147:52">inlink</name><operator pos:start="147:53" pos:end="147:54">-&gt;</operator><name pos:start="147:55" pos:end="147:67">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="155:13"><if pos:start="149:13" pos:end="155:13">if <condition pos:start="149:16" pos:end="149:35">(<expr pos:start="149:17" pos:end="149:34"><operator pos:start="149:17" pos:end="149:17">!</operator><name pos:start="149:18" pos:end="149:34"><name pos:start="149:18" pos:end="149:20">ctx</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:34">hwframes_ref</name></name></expr>)</condition> <block pos:start="149:37" pos:end="155:13">{<block_content pos:start="151:17" pos:end="153:26">

                <expr_stmt pos:start="151:17" pos:end="151:38"><expr pos:start="151:17" pos:end="151:37"><name pos:start="151:17" pos:end="151:19">err</name> <operator pos:start="151:21" pos:end="151:21">=</operator> <call pos:start="151:23" pos:end="151:37"><name pos:start="151:23" pos:end="151:29">AVERROR</name><argument_list pos:start="151:30" pos:end="151:37">(<argument pos:start="151:31" pos:end="151:36"><expr pos:start="151:31" pos:end="151:36"><name pos:start="151:31" pos:end="151:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="153:17" pos:end="153:26">goto <name pos:start="153:22" pos:end="153:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



        </block_content>}</block></if> <else pos:start="159:11" pos:end="179:9">else <block pos:start="159:16" pos:end="179:9">{<block_content pos:start="165:13" pos:end="177:22">

            <comment type="line" pos:start="161:13" pos:end="161:52">// Non-matching formats - not supported.</comment>



            <expr_stmt pos:start="165:13" pos:end="173:57"><expr pos:start="165:13" pos:end="173:56"><call pos:start="165:13" pos:end="173:56"><name pos:start="165:13" pos:end="165:18">av_log</name><argument_list pos:start="165:19" pos:end="173:56">(<argument pos:start="165:20" pos:end="165:24"><expr pos:start="165:20" pos:end="165:24"><name pos:start="165:20" pos:end="165:24">avctx</name></expr></argument>, <argument pos:start="165:27" pos:end="165:38"><expr pos:start="165:27" pos:end="165:38"><name pos:start="165:27" pos:end="165:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="165:41" pos:end="167:49"><expr pos:start="165:41" pos:end="167:49"><literal type="string" pos:start="165:41" pos:end="165:66">"Unsupported formats for "</literal>

                   <literal type="string" pos:start="167:20" pos:end="167:49">"hwmap: from %s (%s) to %s.\n"</literal></expr></argument>,

                   <argument pos:start="169:20" pos:end="169:54"><expr pos:start="169:20" pos:end="169:54"><call pos:start="169:20" pos:end="169:54"><name pos:start="169:20" pos:end="169:38">av_get_pix_fmt_name</name><argument_list pos:start="169:39" pos:end="169:54">(<argument pos:start="169:40" pos:end="169:53"><expr pos:start="169:40" pos:end="169:53"><name pos:start="169:40" pos:end="169:53"><name pos:start="169:40" pos:end="169:45">inlink</name><operator pos:start="169:46" pos:end="169:47">-&gt;</operator><name pos:start="169:48" pos:end="169:53">format</name></name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="171:20" pos:end="171:52"><expr pos:start="171:20" pos:end="171:52"><call pos:start="171:20" pos:end="171:52"><name pos:start="171:20" pos:end="171:38">av_get_pix_fmt_name</name><argument_list pos:start="171:39" pos:end="171:52">(<argument pos:start="171:40" pos:end="171:51"><expr pos:start="171:40" pos:end="171:51"><name pos:start="171:40" pos:end="171:51"><name pos:start="171:40" pos:end="171:43">hwfc</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:51">format</name></name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="173:20" pos:end="173:55"><expr pos:start="173:20" pos:end="173:55"><call pos:start="173:20" pos:end="173:55"><name pos:start="173:20" pos:end="173:38">av_get_pix_fmt_name</name><argument_list pos:start="173:39" pos:end="173:55">(<argument pos:start="173:40" pos:end="173:54"><expr pos:start="173:40" pos:end="173:54"><name pos:start="173:40" pos:end="173:54"><name pos:start="173:40" pos:end="173:46">outlink</name><operator pos:start="173:47" pos:end="173:48">-&gt;</operator><name pos:start="173:49" pos:end="173:54">format</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:34"><expr pos:start="175:13" pos:end="175:33"><name pos:start="175:13" pos:end="175:15">err</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <call pos:start="175:19" pos:end="175:33"><name pos:start="175:19" pos:end="175:25">AVERROR</name><argument_list pos:start="175:26" pos:end="175:33">(<argument pos:start="175:27" pos:end="175:32"><expr pos:start="175:27" pos:end="175:32"><name pos:start="175:27" pos:end="175:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="177:13" pos:end="177:22">goto <name pos:start="177:18" pos:end="177:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="181:7" pos:end="251:5">else if <condition pos:start="181:15" pos:end="181:36">(<expr pos:start="181:16" pos:end="181:35"><name pos:start="181:16" pos:end="181:35"><name pos:start="181:16" pos:end="181:20">avctx</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:35">hw_device_ctx</name></name></expr>)</condition> <block pos:start="181:38" pos:end="251:5">{<block_content pos:start="193:9" pos:end="247:9">

        <comment type="line" pos:start="183:9" pos:end="183:65">// Map from a software format to a hardware format.  This</comment>

        <comment type="line" pos:start="185:9" pos:end="185:64">// creates a new hwframe context like hwupload, but then</comment>

        <comment type="line" pos:start="187:9" pos:end="187:66">// returns frames mapped from that to the previous link in</comment>

        <comment type="line" pos:start="189:9" pos:end="189:57">// order to fill them without an additional copy.</comment>



        <if_stmt pos:start="193:9" pos:end="205:9"><if pos:start="193:9" pos:end="205:9">if <condition pos:start="193:12" pos:end="193:20">(<expr pos:start="193:13" pos:end="193:19"><operator pos:start="193:13" pos:end="193:13">!</operator><name pos:start="193:14" pos:end="193:19">device</name></expr>)</condition> <block pos:start="193:22" pos:end="205:9">{<block_content pos:start="195:13" pos:end="203:22">

            <expr_stmt pos:start="195:13" pos:end="199:33"><expr pos:start="195:13" pos:end="199:32"><call pos:start="195:13" pos:end="199:32"><name pos:start="195:13" pos:end="195:18">av_log</name><argument_list pos:start="195:19" pos:end="199:32">(<argument pos:start="195:20" pos:end="195:24"><expr pos:start="195:20" pos:end="195:24"><name pos:start="195:20" pos:end="195:24">avctx</name></expr></argument>, <argument pos:start="195:27" pos:end="195:38"><expr pos:start="195:27" pos:end="195:38"><name pos:start="195:27" pos:end="195:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="195:41" pos:end="199:31"><expr pos:start="195:41" pos:end="199:31"><literal type="string" pos:start="195:41" pos:end="195:64">"A device reference is "</literal>

                   <literal type="string" pos:start="197:20" pos:end="197:66">"required to create new frames with backwards "</literal>

                   <literal type="string" pos:start="199:20" pos:end="199:31">"mapping.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:34"><expr pos:start="201:13" pos:end="201:33"><name pos:start="201:13" pos:end="201:15">err</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <call pos:start="201:19" pos:end="201:33"><name pos:start="201:19" pos:end="201:25">AVERROR</name><argument_list pos:start="201:26" pos:end="201:33">(<argument pos:start="201:27" pos:end="201:32"><expr pos:start="201:27" pos:end="201:32"><name pos:start="201:27" pos:end="201:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="203:13" pos:end="203:22">goto <name pos:start="203:18" pos:end="203:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:31"><expr pos:start="209:9" pos:end="209:30"><name pos:start="209:9" pos:end="209:26"><name pos:start="209:9" pos:end="209:11">ctx</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:26">map_backwards</name></name> <operator pos:start="209:28" pos:end="209:28">=</operator> <literal type="number" pos:start="209:30" pos:end="209:30">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="213:9" pos:end="213:57"><expr pos:start="213:9" pos:end="213:56"><name pos:start="213:9" pos:end="213:25"><name pos:start="213:9" pos:end="213:11">ctx</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:25">hwframes_ref</name></name> <operator pos:start="213:27" pos:end="213:27">=</operator> <call pos:start="213:29" pos:end="213:56"><name pos:start="213:29" pos:end="213:48">av_hwframe_ctx_alloc</name><argument_list pos:start="213:49" pos:end="213:56">(<argument pos:start="213:50" pos:end="213:55"><expr pos:start="213:50" pos:end="213:55"><name pos:start="213:50" pos:end="213:55">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="215:9" pos:end="221:9"><if pos:start="215:9" pos:end="221:9">if <condition pos:start="215:12" pos:end="215:31">(<expr pos:start="215:13" pos:end="215:30"><operator pos:start="215:13" pos:end="215:13">!</operator><name pos:start="215:14" pos:end="215:30"><name pos:start="215:14" pos:end="215:16">ctx</name><operator pos:start="215:17" pos:end="215:18">-&gt;</operator><name pos:start="215:19" pos:end="215:30">hwframes_ref</name></name></expr>)</condition> <block pos:start="215:33" pos:end="221:9">{<block_content pos:start="217:13" pos:end="219:22">

            <expr_stmt pos:start="217:13" pos:end="217:34"><expr pos:start="217:13" pos:end="217:33"><name pos:start="217:13" pos:end="217:15">err</name> <operator pos:start="217:17" pos:end="217:17">=</operator> <call pos:start="217:19" pos:end="217:33"><name pos:start="217:19" pos:end="217:25">AVERROR</name><argument_list pos:start="217:26" pos:end="217:33">(<argument pos:start="217:27" pos:end="217:32"><expr pos:start="217:27" pos:end="217:32"><name pos:start="217:27" pos:end="217:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="219:13" pos:end="219:22">goto <name pos:start="219:18" pos:end="219:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:59"><expr pos:start="223:9" pos:end="223:58"><name pos:start="223:9" pos:end="223:12">hwfc</name> <operator pos:start="223:14" pos:end="223:14">=</operator> <operator pos:start="223:16" pos:end="223:16">(</operator><name pos:start="223:17" pos:end="223:33">AVHWFramesContext</name><operator pos:start="223:34" pos:end="223:34">*</operator><operator pos:start="223:35" pos:end="223:35">)</operator><name pos:start="223:36" pos:end="223:58"><name pos:start="223:36" pos:end="223:38">ctx</name><operator pos:start="223:39" pos:end="223:40">-&gt;</operator><name pos:start="223:41" pos:end="223:52">hwframes_ref</name><operator pos:start="223:53" pos:end="223:54">-&gt;</operator><name pos:start="223:55" pos:end="223:58">data</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="227:9" pos:end="227:42"><expr pos:start="227:9" pos:end="227:41"><name pos:start="227:9" pos:end="227:20"><name pos:start="227:9" pos:end="227:12">hwfc</name><operator pos:start="227:13" pos:end="227:14">-&gt;</operator><name pos:start="227:15" pos:end="227:20">format</name></name>    <operator pos:start="227:25" pos:end="227:25">=</operator> <name pos:start="227:27" pos:end="227:41"><name pos:start="227:27" pos:end="227:33">outlink</name><operator pos:start="227:34" pos:end="227:35">-&gt;</operator><name pos:start="227:36" pos:end="227:41">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:41"><expr pos:start="229:9" pos:end="229:40"><name pos:start="229:9" pos:end="229:23"><name pos:start="229:9" pos:end="229:12">hwfc</name><operator pos:start="229:13" pos:end="229:14">-&gt;</operator><name pos:start="229:15" pos:end="229:23">sw_format</name></name> <operator pos:start="229:25" pos:end="229:25">=</operator> <name pos:start="229:27" pos:end="229:40"><name pos:start="229:27" pos:end="229:32">inlink</name><operator pos:start="229:33" pos:end="229:34">-&gt;</operator><name pos:start="229:35" pos:end="229:40">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:36"><expr pos:start="231:9" pos:end="231:35"><name pos:start="231:9" pos:end="231:19"><name pos:start="231:9" pos:end="231:12">hwfc</name><operator pos:start="231:13" pos:end="231:14">-&gt;</operator><name pos:start="231:15" pos:end="231:19">width</name></name>     <operator pos:start="231:25" pos:end="231:25">=</operator> <name pos:start="231:27" pos:end="231:35"><name pos:start="231:27" pos:end="231:32">inlink</name><operator pos:start="231:33" pos:end="231:34">-&gt;</operator><name pos:start="231:35" pos:end="231:35">w</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:36"><expr pos:start="233:9" pos:end="233:35"><name pos:start="233:9" pos:end="233:20"><name pos:start="233:9" pos:end="233:12">hwfc</name><operator pos:start="233:13" pos:end="233:14">-&gt;</operator><name pos:start="233:15" pos:end="233:20">height</name></name>    <operator pos:start="233:25" pos:end="233:25">=</operator> <name pos:start="233:27" pos:end="233:35"><name pos:start="233:27" pos:end="233:32">inlink</name><operator pos:start="233:33" pos:end="233:34">-&gt;</operator><name pos:start="233:35" pos:end="233:35">h</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="237:9" pos:end="237:53"><expr pos:start="237:9" pos:end="237:52"><name pos:start="237:9" pos:end="237:11">err</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <call pos:start="237:15" pos:end="237:52"><name pos:start="237:15" pos:end="237:33">av_hwframe_ctx_init</name><argument_list pos:start="237:34" pos:end="237:52">(<argument pos:start="237:35" pos:end="237:51"><expr pos:start="237:35" pos:end="237:51"><name pos:start="237:35" pos:end="237:51"><name pos:start="237:35" pos:end="237:37">ctx</name><operator pos:start="237:38" pos:end="237:39">-&gt;</operator><name pos:start="237:40" pos:end="237:51">hwframes_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="247:9"><if pos:start="239:9" pos:end="247:9">if <condition pos:start="239:12" pos:end="239:20">(<expr pos:start="239:13" pos:end="239:19"><name pos:start="239:13" pos:end="239:15">err</name> <operator pos:start="239:17" pos:end="239:17">&lt;</operator> <literal type="number" pos:start="239:19" pos:end="239:19">0</literal></expr>)</condition> <block pos:start="239:22" pos:end="247:9">{<block_content pos:start="241:13" pos:end="245:22">

            <expr_stmt pos:start="241:13" pos:end="243:63"><expr pos:start="241:13" pos:end="243:62"><call pos:start="241:13" pos:end="243:62"><name pos:start="241:13" pos:end="241:18">av_log</name><argument_list pos:start="241:19" pos:end="243:62">(<argument pos:start="241:20" pos:end="241:24"><expr pos:start="241:20" pos:end="241:24"><name pos:start="241:20" pos:end="241:24">avctx</name></expr></argument>, <argument pos:start="241:27" pos:end="241:38"><expr pos:start="241:27" pos:end="241:38"><name pos:start="241:27" pos:end="241:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="241:41" pos:end="243:56"><expr pos:start="241:41" pos:end="243:56"><literal type="string" pos:start="241:41" pos:end="241:65">"Failed to create frame "</literal>

                   <literal type="string" pos:start="243:20" pos:end="243:56">"context for backward mapping: %d.\n"</literal></expr></argument>, <argument pos:start="243:59" pos:end="243:61"><expr pos:start="243:59" pos:end="243:61"><name pos:start="243:59" pos:end="243:61">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="245:13" pos:end="245:22">goto <name pos:start="245:18" pos:end="245:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></if> <else pos:start="251:7" pos:end="259:5">else <block pos:start="251:12" pos:end="259:5">{<block_content pos:start="253:9" pos:end="257:31">

        <expr_stmt pos:start="253:9" pos:end="255:60"><expr pos:start="253:9" pos:end="255:59"><call pos:start="253:9" pos:end="255:59"><name pos:start="253:9" pos:end="253:14">av_log</name><argument_list pos:start="253:15" pos:end="255:59">(<argument pos:start="253:16" pos:end="253:20"><expr pos:start="253:16" pos:end="253:20"><name pos:start="253:16" pos:end="253:20">avctx</name></expr></argument>, <argument pos:start="253:23" pos:end="253:34"><expr pos:start="253:23" pos:end="253:34"><name pos:start="253:23" pos:end="253:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="253:37" pos:end="255:58"><expr pos:start="253:37" pos:end="255:58"><literal type="string" pos:start="253:37" pos:end="253:66">"Mapping requires a hardware "</literal>

               <literal type="string" pos:start="255:16" pos:end="255:58">"context (a device, or frames on input).\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="257:9" pos:end="257:31">return <expr pos:start="257:16" pos:end="257:30"><call pos:start="257:16" pos:end="257:30"><name pos:start="257:16" pos:end="257:22">AVERROR</name><argument_list pos:start="257:23" pos:end="257:30">(<argument pos:start="257:24" pos:end="257:29"><expr pos:start="257:24" pos:end="257:29"><name pos:start="257:24" pos:end="257:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="263:5" pos:end="263:62"><expr pos:start="263:5" pos:end="263:61"><name pos:start="263:5" pos:end="263:26"><name pos:start="263:5" pos:end="263:11">outlink</name><operator pos:start="263:12" pos:end="263:13">-&gt;</operator><name pos:start="263:14" pos:end="263:26">hw_frames_ctx</name></name> <operator pos:start="263:28" pos:end="263:28">=</operator> <call pos:start="263:30" pos:end="263:61"><name pos:start="263:30" pos:end="263:42">av_buffer_ref</name><argument_list pos:start="263:43" pos:end="263:61">(<argument pos:start="263:44" pos:end="263:60"><expr pos:start="263:44" pos:end="263:60"><name pos:start="263:44" pos:end="263:60"><name pos:start="263:44" pos:end="263:46">ctx</name><operator pos:start="263:47" pos:end="263:48">-&gt;</operator><name pos:start="263:49" pos:end="263:60">hwframes_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="265:5" pos:end="271:5"><if pos:start="265:5" pos:end="271:5">if <condition pos:start="265:8" pos:end="265:32">(<expr pos:start="265:9" pos:end="265:31"><operator pos:start="265:9" pos:end="265:9">!</operator><name pos:start="265:10" pos:end="265:31"><name pos:start="265:10" pos:end="265:16">outlink</name><operator pos:start="265:17" pos:end="265:18">-&gt;</operator><name pos:start="265:19" pos:end="265:31">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="265:34" pos:end="271:5">{<block_content pos:start="267:9" pos:end="269:18">

        <expr_stmt pos:start="267:9" pos:end="267:30"><expr pos:start="267:9" pos:end="267:29"><name pos:start="267:9" pos:end="267:11">err</name> <operator pos:start="267:13" pos:end="267:13">=</operator> <call pos:start="267:15" pos:end="267:29"><name pos:start="267:15" pos:end="267:21">AVERROR</name><argument_list pos:start="267:22" pos:end="267:29">(<argument pos:start="267:23" pos:end="267:28"><expr pos:start="267:23" pos:end="267:28"><name pos:start="267:23" pos:end="267:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="269:9" pos:end="269:18">goto <name pos:start="269:14" pos:end="269:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="275:5" pos:end="275:27"><expr pos:start="275:5" pos:end="275:26"><name pos:start="275:5" pos:end="275:14"><name pos:start="275:5" pos:end="275:11">outlink</name><operator pos:start="275:12" pos:end="275:13">-&gt;</operator><name pos:start="275:14" pos:end="275:14">w</name></name> <operator pos:start="275:16" pos:end="275:16">=</operator> <name pos:start="275:18" pos:end="275:26"><name pos:start="275:18" pos:end="275:23">inlink</name><operator pos:start="275:24" pos:end="275:25">-&gt;</operator><name pos:start="275:26" pos:end="275:26">w</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:27"><expr pos:start="277:5" pos:end="277:26"><name pos:start="277:5" pos:end="277:14"><name pos:start="277:5" pos:end="277:11">outlink</name><operator pos:start="277:12" pos:end="277:13">-&gt;</operator><name pos:start="277:14" pos:end="277:14">h</name></name> <operator pos:start="277:16" pos:end="277:16">=</operator> <name pos:start="277:18" pos:end="277:26"><name pos:start="277:18" pos:end="277:23">inlink</name><operator pos:start="277:24" pos:end="277:25">-&gt;</operator><name pos:start="277:26" pos:end="277:26">h</name></name></expr>;</expr_stmt>



    <return pos:start="281:5" pos:end="281:13">return <expr pos:start="281:12" pos:end="281:12"><literal type="number" pos:start="281:12" pos:end="281:12">0</literal></expr>;</return>



<label pos:start="285:1" pos:end="285:5"><name pos:start="285:1" pos:end="285:4">fail</name>:</label>

    <expr_stmt pos:start="287:5" pos:end="287:40"><expr pos:start="287:5" pos:end="287:39"><call pos:start="287:5" pos:end="287:39"><name pos:start="287:5" pos:end="287:19">av_buffer_unref</name><argument_list pos:start="287:20" pos:end="287:39">(<argument pos:start="287:21" pos:end="287:38"><expr pos:start="287:21" pos:end="287:38"><operator pos:start="287:21" pos:end="287:21">&amp;</operator><name pos:start="287:22" pos:end="287:38"><name pos:start="287:22" pos:end="287:24">ctx</name><operator pos:start="287:25" pos:end="287:26">-&gt;</operator><name pos:start="287:27" pos:end="287:38">hwframes_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="289:5" pos:end="289:15">return <expr pos:start="289:12" pos:end="289:14"><name pos:start="289:12" pos:end="289:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
