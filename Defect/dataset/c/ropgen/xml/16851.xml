<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16851.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">filter_samples</name><parameter_list pos:start="1:27" pos:end="1:72">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:39">AVFilterLink</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">inlink</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:71"><decl pos:start="1:50" pos:end="1:71"><type pos:start="1:50" pos:end="1:71"><name pos:start="1:50" pos:end="1:66">AVFilterBufferRef</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:31">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name>  <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">ctx</name> <init pos:start="5:27" pos:end="5:39">= <expr pos:start="5:29" pos:end="5:39"><name pos:start="5:29" pos:end="5:39"><name pos:start="5:29" pos:end="5:34">inlink</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:39">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:16">ASyncContext</name>       <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:37">= <expr pos:start="7:29" pos:end="7:37"><name pos:start="7:29" pos:end="7:37"><name pos:start="7:29" pos:end="7:31">ctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:37">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVFilterLink</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:25">outlink</name> <init pos:start="9:27" pos:end="9:43">= <expr pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:31">ctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:40">outputs</name><index pos:start="9:41" pos:end="9:43">[<expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:84"><decl pos:start="11:5" pos:end="11:83"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">nb_channels</name> <init pos:start="11:21" pos:end="11:83">= <expr pos:start="11:23" pos:end="11:83"><call pos:start="11:23" pos:end="11:83"><name pos:start="11:23" pos:end="11:55">av_get_channel_layout_nb_channels</name><argument_list pos:start="11:56" pos:end="11:83">(<argument pos:start="11:57" pos:end="11:82"><expr pos:start="11:57" pos:end="11:82"><name pos:start="11:57" pos:end="11:82"><name pos:start="11:57" pos:end="11:59">buf</name><operator pos:start="11:60" pos:end="11:61">-&gt;</operator><name pos:start="11:62" pos:end="11:66">audio</name><operator pos:start="11:67" pos:end="11:68">-&gt;</operator><name pos:start="11:69" pos:end="11:82">channel_layout</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="15:80"><decl pos:start="13:5" pos:end="15:79"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">pts</name> <init pos:start="13:17" pos:end="15:79">= <expr pos:start="13:19" pos:end="15:79"><ternary pos:start="13:19" pos:end="15:79"><condition pos:start="13:19" pos:end="13:48"><expr pos:start="13:19" pos:end="13:46"><operator pos:start="13:19" pos:end="13:19">(</operator><name pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:22">buf</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:27">pts</name></name> <operator pos:start="13:29" pos:end="13:30">==</operator> <name pos:start="13:32" pos:end="13:45">AV_NOPTS_VALUE</name><operator pos:start="13:46" pos:end="13:46">)</operator></expr> ?</condition><then pos:start="13:50" pos:end="13:57"> <expr pos:start="13:50" pos:end="13:57"><name pos:start="13:50" pos:end="13:57"><name pos:start="13:50" pos:end="13:52">buf</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:57">pts</name></name></expr> </then><else pos:start="13:59" pos:end="15:79">:

                  <expr pos:start="15:19" pos:end="15:79"><call pos:start="15:19" pos:end="15:79"><name pos:start="15:19" pos:end="15:30">av_rescale_q</name><argument_list pos:start="15:31" pos:end="15:79">(<argument pos:start="15:32" pos:end="15:39"><expr pos:start="15:32" pos:end="15:39"><name pos:start="15:32" pos:end="15:39"><name pos:start="15:32" pos:end="15:34">buf</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:39">pts</name></name></expr></argument>, <argument pos:start="15:42" pos:end="15:58"><expr pos:start="15:42" pos:end="15:58"><name pos:start="15:42" pos:end="15:58"><name pos:start="15:42" pos:end="15:47">inlink</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:58">time_base</name></name></expr></argument>, <argument pos:start="15:61" pos:end="15:78"><expr pos:start="15:61" pos:end="15:78"><name pos:start="15:61" pos:end="15:78"><name pos:start="15:61" pos:end="15:67">outlink</name><operator pos:start="15:68" pos:end="15:69">-&gt;</operator><name pos:start="15:70" pos:end="15:78">time_base</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">out_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:17">delta</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:54">/* buffer data until we get the first timestamp */</comment>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:33">(<expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:14">pts</name></name> <operator pos:start="25:16" pos:end="25:17">==</operator> <name pos:start="25:19" pos:end="25:32">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="25:35" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:15">

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:34">(<expr pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:15">pts</name> <operator pos:start="27:17" pos:end="27:18">!=</operator> <name pos:start="27:20" pos:end="27:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="27:36" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:40">

            <expr_stmt pos:start="29:13" pos:end="29:40"><expr pos:start="29:13" pos:end="29:39"><name pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:18">pts</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:24">pts</name> <operator pos:start="29:26" pos:end="29:26">-</operator> <call pos:start="29:28" pos:end="29:39"><name pos:start="29:28" pos:end="29:36">get_delay</name><argument_list pos:start="29:37" pos:end="29:39">(<argument pos:start="29:38" pos:end="29:38"><expr pos:start="29:38" pos:end="29:38"><name pos:start="29:38" pos:end="29:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><call pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:21">write_to_fifo</name><argument_list pos:start="33:22" pos:end="33:29">(<argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">s</name></expr></argument>, <argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:41">/* now wait for the next timestamp */</comment>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:30">(<expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:11">pts</name> <operator pos:start="43:13" pos:end="43:14">==</operator> <name pos:start="43:16" pos:end="43:29">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="43:32" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:15">

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><call pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:21">write_to_fifo</name><argument_list pos:start="45:22" pos:end="45:29">(<argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">s</name></expr></argument>, <argument pos:start="45:26" pos:end="45:28"><expr pos:start="45:26" pos:end="45:28"><name pos:start="45:26" pos:end="45:28">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="55:70">/* when we have two timestamps, compute how many samples would we have

     * to add/remove to get proper sync between data and timestamps */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:43"><expr pos:start="57:5" pos:end="57:42"><name pos:start="57:5" pos:end="57:9">delta</name>    <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:18">pts</name> <operator pos:start="57:20" pos:end="57:20">-</operator> <name pos:start="57:22" pos:end="57:27"><name pos:start="57:22" pos:end="57:22">s</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:27">pts</name></name> <operator pos:start="57:29" pos:end="57:29">-</operator> <call pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:39">get_delay</name><argument_list pos:start="57:40" pos:end="57:42">(<argument pos:start="57:41" pos:end="57:41"><expr pos:start="57:41" pos:end="57:41"><name pos:start="57:41" pos:end="57:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:44"><expr pos:start="59:5" pos:end="59:43"><name pos:start="59:5" pos:end="59:12">out_size</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:43"><name pos:start="59:16" pos:end="59:35">avresample_available</name><argument_list pos:start="59:36" pos:end="59:43">(<argument pos:start="59:37" pos:end="59:42"><expr pos:start="59:37" pos:end="59:42"><name pos:start="59:37" pos:end="59:42"><name pos:start="59:37" pos:end="59:37">s</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:42">avr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="77:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:35">(<expr pos:start="63:9" pos:end="63:34"><call pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:12">labs</name><argument_list pos:start="63:13" pos:end="63:19">(<argument pos:start="63:14" pos:end="63:18"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:18">delta</name></expr></argument>)</argument_list></call> <operator pos:start="63:21" pos:end="63:21">&gt;</operator> <name pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:23">s</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:34">min_delta</name></name></expr>)</condition> <block pos:start="63:37" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:26">

        <expr_stmt pos:start="65:9" pos:end="65:83"><expr pos:start="65:9" pos:end="65:82"><call pos:start="65:9" pos:end="65:82"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:82">(<argument pos:start="65:16" pos:end="65:18"><expr pos:start="65:16" pos:end="65:18"><name pos:start="65:16" pos:end="65:18">ctx</name></expr></argument>, <argument pos:start="65:21" pos:end="65:34"><expr pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:34">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="65:37" pos:end="65:74"><expr pos:start="65:37" pos:end="65:74"><literal type="string" pos:start="65:37" pos:end="65:55">"Discontinuity - %"</literal><name pos:start="65:56" pos:end="65:61">PRId64</name><literal type="string" pos:start="65:62" pos:end="65:74">" samples.\n"</literal></expr></argument>, <argument pos:start="65:77" pos:end="65:81"><expr pos:start="65:77" pos:end="65:81"><name pos:start="65:77" pos:end="65:81">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:26"><expr pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:16">out_size</name> <operator pos:start="67:18" pos:end="67:19">+=</operator> <name pos:start="67:21" pos:end="67:25">delta</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="69:7" pos:end="77:5">else if <condition pos:start="69:15" pos:end="69:27">(<expr pos:start="69:16" pos:end="69:26"><name pos:start="69:16" pos:end="69:26"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:26">resample</name></name></expr>)</condition> <block pos:start="69:29" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:72">

        <decl_stmt pos:start="71:9" pos:end="71:61"><decl pos:start="71:9" pos:end="71:60"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:16">comp</name> <init pos:start="71:18" pos:end="71:60">= <expr pos:start="71:20" pos:end="71:60"><call pos:start="71:20" pos:end="71:60"><name pos:start="71:20" pos:end="71:26">av_clip</name><argument_list pos:start="71:27" pos:end="71:60">(<argument pos:start="71:28" pos:end="71:32"><expr pos:start="71:28" pos:end="71:32"><name pos:start="71:28" pos:end="71:32">delta</name></expr></argument>, <argument pos:start="71:35" pos:end="71:46"><expr pos:start="71:35" pos:end="71:46"><operator pos:start="71:35" pos:end="71:35">-</operator><name pos:start="71:36" pos:end="71:46"><name pos:start="71:36" pos:end="71:36">s</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:46">max_comp</name></name></expr></argument>, <argument pos:start="71:49" pos:end="71:59"><expr pos:start="71:49" pos:end="71:59"><name pos:start="71:49" pos:end="71:59"><name pos:start="71:49" pos:end="71:49">s</name><operator pos:start="71:50" pos:end="71:51">-&gt;</operator><name pos:start="71:52" pos:end="71:59">max_comp</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:83"><expr pos:start="73:9" pos:end="73:82"><call pos:start="73:9" pos:end="73:82"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:82">(<argument pos:start="73:16" pos:end="73:18"><expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">ctx</name></expr></argument>, <argument pos:start="73:21" pos:end="73:34"><expr pos:start="73:21" pos:end="73:34"><name pos:start="73:21" pos:end="73:34">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="73:37" pos:end="73:75"><expr pos:start="73:37" pos:end="73:75"><literal type="string" pos:start="73:37" pos:end="73:75">"Compensating %d samples per second.\n"</literal></expr></argument>, <argument pos:start="73:78" pos:end="73:81"><expr pos:start="73:78" pos:end="73:81"><name pos:start="73:78" pos:end="73:81">comp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:72"><expr pos:start="75:9" pos:end="75:71"><call pos:start="75:9" pos:end="75:71"><name pos:start="75:9" pos:end="75:35">avresample_set_compensation</name><argument_list pos:start="75:36" pos:end="75:71">(<argument pos:start="75:37" pos:end="75:42"><expr pos:start="75:37" pos:end="75:42"><name pos:start="75:37" pos:end="75:42"><name pos:start="75:37" pos:end="75:37">s</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:42">avr</name></name></expr></argument>, <argument pos:start="75:45" pos:end="75:49"><expr pos:start="75:45" pos:end="75:49"><name pos:start="75:45" pos:end="75:49">delta</name></expr></argument>, <argument pos:start="75:52" pos:end="75:70"><expr pos:start="75:52" pos:end="75:70"><name pos:start="75:52" pos:end="75:70"><name pos:start="75:52" pos:end="75:57">inlink</name><operator pos:start="75:58" pos:end="75:59">-&gt;</operator><name pos:start="75:60" pos:end="75:70">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="115:5"><if pos:start="81:5" pos:end="109:5">if <condition pos:start="81:8" pos:end="81:21">(<expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:16">out_size</name> <operator pos:start="81:18" pos:end="81:18">&gt;</operator> <literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>)</condition> <block pos:start="81:23" pos:end="109:5">{<block_content pos:start="83:9" pos:end="107:44">

        <decl_stmt pos:start="83:9" pos:end="85:67"><decl pos:start="83:9" pos:end="85:66"><type pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:25">AVFilterBufferRef</name> <modifier pos:start="83:27" pos:end="83:27">*</modifier></type><name pos:start="83:28" pos:end="83:34">buf_out</name> <init pos:start="83:36" pos:end="85:66">= <expr pos:start="83:38" pos:end="85:66"><call pos:start="83:38" pos:end="85:66"><name pos:start="83:38" pos:end="83:56">ff_get_audio_buffer</name><argument_list pos:start="83:57" pos:end="85:66">(<argument pos:start="83:58" pos:end="83:64"><expr pos:start="83:58" pos:end="83:64"><name pos:start="83:58" pos:end="83:64">outlink</name></expr></argument>, <argument pos:start="83:67" pos:end="83:79"><expr pos:start="83:67" pos:end="83:79"><name pos:start="83:67" pos:end="83:79">AV_PERM_WRITE</name></expr></argument>,

                                                         <argument pos:start="85:58" pos:end="85:65"><expr pos:start="85:58" pos:end="85:65"><name pos:start="85:58" pos:end="85:65">out_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="87:9" pos:end="89:19"><if pos:start="87:9" pos:end="89:19">if <condition pos:start="87:12" pos:end="87:21">(<expr pos:start="87:13" pos:end="87:20"><operator pos:start="87:13" pos:end="87:13">!</operator><name pos:start="87:14" pos:end="87:20">buf_out</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:19"><block_content pos:start="89:13" pos:end="89:19">

            <return pos:start="89:13" pos:end="89:19">return;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:74"><expr pos:start="93:9" pos:end="93:73"><call pos:start="93:9" pos:end="93:73"><name pos:start="93:9" pos:end="93:23">avresample_read</name><argument_list pos:start="93:24" pos:end="93:73">(<argument pos:start="93:25" pos:end="93:30"><expr pos:start="93:25" pos:end="93:30"><name pos:start="93:25" pos:end="93:30"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:30">avr</name></name></expr></argument>, <argument pos:start="93:33" pos:end="93:62"><expr pos:start="93:33" pos:end="93:62"><operator pos:start="93:33" pos:end="93:33">(</operator><name pos:start="93:34" pos:end="93:37">void</name><operator pos:start="93:38" pos:end="93:38">*</operator><operator pos:start="93:39" pos:end="93:39">*</operator><operator pos:start="93:40" pos:end="93:40">)</operator><name pos:start="93:41" pos:end="93:62"><name pos:start="93:41" pos:end="93:47">buf_out</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:62">extended_data</name></name></expr></argument>, <argument pos:start="93:65" pos:end="93:72"><expr pos:start="93:65" pos:end="93:72"><name pos:start="93:65" pos:end="93:72">out_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:30"><expr pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:15">buf_out</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:20">pts</name></name> <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:24">s</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:29">pts</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:22">(<expr pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:17">delta</name> <operator pos:start="99:19" pos:end="99:19">&gt;</operator> <literal type="number" pos:start="99:21" pos:end="99:21">0</literal></expr>)</condition> <block pos:start="99:24" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:68">

            <expr_stmt pos:start="101:13" pos:end="103:68"><expr pos:start="101:13" pos:end="103:67"><call pos:start="101:13" pos:end="103:67"><name pos:start="101:13" pos:end="101:34">av_samples_set_silence</name><argument_list pos:start="101:35" pos:end="103:67">(<argument pos:start="101:36" pos:end="101:57"><expr pos:start="101:36" pos:end="101:57"><name pos:start="101:36" pos:end="101:57"><name pos:start="101:36" pos:end="101:42">buf_out</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:57">extended_data</name></name></expr></argument>, <argument pos:start="101:60" pos:end="101:75"><expr pos:start="101:60" pos:end="101:75"><name pos:start="101:60" pos:end="101:67">out_size</name> <operator pos:start="101:69" pos:end="101:69">-</operator> <name pos:start="101:71" pos:end="101:75">delta</name></expr></argument>,

                                   <argument pos:start="103:36" pos:end="103:40"><expr pos:start="103:36" pos:end="103:40"><name pos:start="103:36" pos:end="103:40">delta</name></expr></argument>, <argument pos:start="103:43" pos:end="103:53"><expr pos:start="103:43" pos:end="103:53"><name pos:start="103:43" pos:end="103:53">nb_channels</name></expr></argument>, <argument pos:start="103:56" pos:end="103:66"><expr pos:start="103:56" pos:end="103:66"><name pos:start="103:56" pos:end="103:66"><name pos:start="103:56" pos:end="103:58">buf</name><operator pos:start="103:59" pos:end="103:60">-&gt;</operator><name pos:start="103:61" pos:end="103:66">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:44"><expr pos:start="107:9" pos:end="107:43"><call pos:start="107:9" pos:end="107:43"><name pos:start="107:9" pos:end="107:25">ff_filter_samples</name><argument_list pos:start="107:26" pos:end="107:43">(<argument pos:start="107:27" pos:end="107:33"><expr pos:start="107:27" pos:end="107:33"><name pos:start="107:27" pos:end="107:33">outlink</name></expr></argument>, <argument pos:start="107:36" pos:end="107:42"><expr pos:start="107:36" pos:end="107:42"><name pos:start="107:36" pos:end="107:42">buf_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="115:5">else <block pos:start="109:12" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:34">

        <expr_stmt pos:start="111:9" pos:end="113:34"><expr pos:start="111:9" pos:end="113:33"><call pos:start="111:9" pos:end="113:33"><name pos:start="111:9" pos:end="111:14">av_log</name><argument_list pos:start="111:15" pos:end="113:33">(<argument pos:start="111:16" pos:end="111:18"><expr pos:start="111:16" pos:end="111:18"><name pos:start="111:16" pos:end="111:18">ctx</name></expr></argument>, <argument pos:start="111:21" pos:end="111:34"><expr pos:start="111:21" pos:end="111:34"><name pos:start="111:21" pos:end="111:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="111:37" pos:end="113:32"><expr pos:start="111:37" pos:end="113:32"><literal type="string" pos:start="111:37" pos:end="111:74">"Non-monotonous timestamps, dropping "</literal>

               <literal type="string" pos:start="113:16" pos:end="113:32">"whole buffer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:43">/* drain any remaining buffered data */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:64"><expr pos:start="121:5" pos:end="121:63"><call pos:start="121:5" pos:end="121:63"><name pos:start="121:5" pos:end="121:19">avresample_read</name><argument_list pos:start="121:20" pos:end="121:63">(<argument pos:start="121:21" pos:end="121:26"><expr pos:start="121:21" pos:end="121:26"><name pos:start="121:21" pos:end="121:26"><name pos:start="121:21" pos:end="121:21">s</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:26">avr</name></name></expr></argument>, <argument pos:start="121:29" pos:end="121:32"><expr pos:start="121:29" pos:end="121:32"><name pos:start="121:29" pos:end="121:32">NULL</name></expr></argument>, <argument pos:start="121:35" pos:end="121:62"><expr pos:start="121:35" pos:end="121:62"><call pos:start="121:35" pos:end="121:62"><name pos:start="121:35" pos:end="121:54">avresample_available</name><argument_list pos:start="121:55" pos:end="121:62">(<argument pos:start="121:56" pos:end="121:61"><expr pos:start="121:56" pos:end="121:61"><name pos:start="121:56" pos:end="121:61"><name pos:start="121:56" pos:end="121:56">s</name><operator pos:start="121:57" pos:end="121:58">-&gt;</operator><name pos:start="121:59" pos:end="121:61">avr</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:48"><expr pos:start="125:5" pos:end="125:47"><name pos:start="125:5" pos:end="125:10"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:10">pts</name></name> <operator pos:start="125:12" pos:end="125:12">=</operator> <name pos:start="125:14" pos:end="125:16">pts</name> <operator pos:start="125:18" pos:end="125:18">-</operator> <call pos:start="125:20" pos:end="125:47"><name pos:start="125:20" pos:end="125:39">avresample_get_delay</name><argument_list pos:start="125:40" pos:end="125:47">(<argument pos:start="125:41" pos:end="125:46"><expr pos:start="125:41" pos:end="125:46"><name pos:start="125:41" pos:end="125:46"><name pos:start="125:41" pos:end="125:41">s</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:46">avr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="129:65"><expr pos:start="127:5" pos:end="129:64"><call pos:start="127:5" pos:end="129:64"><name pos:start="127:5" pos:end="127:22">avresample_convert</name><argument_list pos:start="127:23" pos:end="129:64">(<argument pos:start="127:24" pos:end="127:29"><expr pos:start="127:24" pos:end="127:29"><name pos:start="127:24" pos:end="127:29"><name pos:start="127:24" pos:end="127:24">s</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:29">avr</name></name></expr></argument>, <argument pos:start="127:32" pos:end="127:35"><expr pos:start="127:32" pos:end="127:35"><name pos:start="127:32" pos:end="127:35">NULL</name></expr></argument>, <argument pos:start="127:38" pos:end="127:38"><expr pos:start="127:38" pos:end="127:38"><literal type="number" pos:start="127:38" pos:end="127:38">0</literal></expr></argument>, <argument pos:start="127:41" pos:end="127:41"><expr pos:start="127:41" pos:end="127:41"><literal type="number" pos:start="127:41" pos:end="127:41">0</literal></expr></argument>, <argument pos:start="127:44" pos:end="127:69"><expr pos:start="127:44" pos:end="127:69"><operator pos:start="127:44" pos:end="127:44">(</operator><name pos:start="127:45" pos:end="127:48">void</name><operator pos:start="127:49" pos:end="127:49">*</operator><operator pos:start="127:50" pos:end="127:50">*</operator><operator pos:start="127:51" pos:end="127:51">)</operator><name pos:start="127:52" pos:end="127:69"><name pos:start="127:52" pos:end="127:54">buf</name><operator pos:start="127:55" pos:end="127:56">-&gt;</operator><name pos:start="127:57" pos:end="127:69">extended_data</name></name></expr></argument>,

                       <argument pos:start="129:24" pos:end="129:39"><expr pos:start="129:24" pos:end="129:39"><name pos:start="129:24" pos:end="129:39"><name pos:start="129:24" pos:end="129:26">buf</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:36">linesize</name><index pos:start="129:37" pos:end="129:39">[<expr pos:start="129:38" pos:end="129:38"><literal type="number" pos:start="129:38" pos:end="129:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="129:42" pos:end="129:63"><expr pos:start="129:42" pos:end="129:63"><name pos:start="129:42" pos:end="129:63"><name pos:start="129:42" pos:end="129:44">buf</name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:51">audio</name><operator pos:start="129:52" pos:end="129:53">-&gt;</operator><name pos:start="129:54" pos:end="129:63">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:31"><expr pos:start="131:5" pos:end="131:30"><call pos:start="131:5" pos:end="131:30"><name pos:start="131:5" pos:end="131:25">avfilter_unref_buffer</name><argument_list pos:start="131:26" pos:end="131:30">(<argument pos:start="131:27" pos:end="131:29"><expr pos:start="131:27" pos:end="131:29"><name pos:start="131:27" pos:end="131:29">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
