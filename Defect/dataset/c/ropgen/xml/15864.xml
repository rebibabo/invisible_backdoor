<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15864.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:29">vtenc_init</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="233:1">{<block_content pos:start="5:5" pos:end="231:18">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:26">CFMutableDictionaryRef</name></type> <name pos:start="5:28" pos:end="5:35">enc_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:26">CFMutableDictionaryRef</name></type> <name pos:start="7:28" pos:end="7:44">pixel_buffer_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">CMVideoCodecType</name></type>       <name pos:start="9:28" pos:end="9:37">codec_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:16">VTEncContext</name>           <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:33">vtctx</name> <init pos:start="11:35" pos:end="11:52">= <expr pos:start="11:37" pos:end="11:52"><name pos:start="11:37" pos:end="11:52"><name pos:start="11:37" pos:end="11:41">avctx</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:52">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">CFStringRef</name></type>            <name pos:start="13:28" pos:end="13:40">profile_level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:46"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">CFBooleanRef</name></type>           <name pos:start="15:28" pos:end="15:46">has_b_frames_cfbool</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:45"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">CFNumberRef</name></type>            <name pos:start="17:28" pos:end="17:38">gamma_level</name> <init pos:start="17:40" pos:end="17:45">= <expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type>                    <name pos:start="19:28" pos:end="19:33">status</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:47"><expr pos:start="23:5" pos:end="23:46"><call pos:start="23:5" pos:end="23:46"><name pos:start="23:5" pos:end="23:16">pthread_once</name><argument_list pos:start="23:17" pos:end="23:46">(<argument pos:start="23:18" pos:end="23:27"><expr pos:start="23:18" pos:end="23:27"><operator pos:start="23:18" pos:end="23:18">&amp;</operator><name pos:start="23:19" pos:end="23:27">once_ctrl</name></expr></argument>, <argument pos:start="23:30" pos:end="23:45"><expr pos:start="23:30" pos:end="23:45"><name pos:start="23:30" pos:end="23:45">loadVTEncSymbols</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:52"><expr pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:14">codec_type</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:51"><name pos:start="27:18" pos:end="27:34">get_cm_codec_type</name><argument_list pos:start="27:35" pos:end="27:51">(<argument pos:start="27:36" pos:end="27:50"><expr pos:start="27:36" pos:end="27:50"><name pos:start="27:36" pos:end="27:50"><name pos:start="27:36" pos:end="27:40">avctx</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:50">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:19">codec_type</name></expr>)</condition> <block pos:start="29:22" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:31">

        <expr_stmt pos:start="31:9" pos:end="31:93"><expr pos:start="31:9" pos:end="31:92"><call pos:start="31:9" pos:end="31:92"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:92">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:37" pos:end="31:74"><expr pos:start="31:37" pos:end="31:74"><literal type="string" pos:start="31:37" pos:end="31:74">"Error: no mapping for AVCodecID %d\n"</literal></expr></argument>, <argument pos:start="31:77" pos:end="31:91"><expr pos:start="31:77" pos:end="31:91"><name pos:start="31:77" pos:end="31:91"><name pos:start="31:77" pos:end="31:81">avctx</name><operator pos:start="31:82" pos:end="31:83">-&gt;</operator><name pos:start="31:84" pos:end="31:91">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:31">return <expr pos:start="33:16" pos:end="33:30"><call pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:22">AVERROR</name><argument_list pos:start="33:23" pos:end="33:30">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:9">vtctx</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:23">has_b_frames</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:45"><name pos:start="39:27" pos:end="39:31">avctx</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:45">max_b_frames</name></name> <operator pos:start="39:47" pos:end="39:47">&gt;</operator> <literal type="number" pos:start="39:49" pos:end="39:49">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if<condition pos:start="41:7" pos:end="41:67">(<expr pos:start="41:8" pos:end="41:66"><name pos:start="41:8" pos:end="41:26"><name pos:start="41:8" pos:end="41:12">vtctx</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:26">has_b_frames</name></name> <operator pos:start="41:28" pos:end="41:29">&amp;&amp;</operator> <name pos:start="41:31" pos:end="41:44"><name pos:start="41:31" pos:end="41:35">vtctx</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:44">profile</name></name> <operator pos:start="41:46" pos:end="41:47">==</operator> <name pos:start="41:49" pos:end="41:66">H264_PROF_BASELINE</name></expr>)</condition><block pos:start="41:68" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:36">

        <expr_stmt pos:start="43:9" pos:end="43:120"><expr pos:start="43:9" pos:end="43:119"><call pos:start="43:9" pos:end="43:119"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:119">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:36"><expr pos:start="43:23" pos:end="43:36"><name pos:start="43:23" pos:end="43:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="43:39" pos:end="43:118"><expr pos:start="43:39" pos:end="43:118"><literal type="string" pos:start="43:39" pos:end="43:118">"Cannot use B-frames with baseline profile. Output will not contain B-frames.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:13">vtctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:27">has_b_frames</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:35">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:75">(<expr pos:start="51:9" pos:end="51:74"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:13">vtctx</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">entropy</name></name> <operator pos:start="51:24" pos:end="51:25">==</operator> <name pos:start="51:27" pos:end="51:34">VT_CABAC</name> <operator pos:start="51:36" pos:end="51:37">&amp;&amp;</operator> <name pos:start="51:39" pos:end="51:52"><name pos:start="51:39" pos:end="51:43">vtctx</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:52">profile</name></name> <operator pos:start="51:54" pos:end="51:55">==</operator> <name pos:start="51:57" pos:end="51:74">H264_PROF_BASELINE</name></expr>)</condition> <block pos:start="51:77" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:44">

        <expr_stmt pos:start="53:9" pos:end="53:155"><expr pos:start="53:9" pos:end="53:154"><call pos:start="53:9" pos:end="53:154"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:154">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:36"><expr pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="53:39" pos:end="53:153"><expr pos:start="53:39" pos:end="53:153"><literal type="string" pos:start="53:39" pos:end="53:153">"CABAC entropy requires 'main' or 'high' profile, but baseline was requested. Encode will not use CABAC entropy.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:44"><expr pos:start="55:9" pos:end="55:43"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:13">vtctx</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">entropy</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:43">VT_ENTROPY_NOT_SET</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="61:77"><if pos:start="61:5" pos:end="61:77">if <condition pos:start="61:8" pos:end="61:53">(<expr pos:start="61:9" pos:end="61:52"><operator pos:start="61:9" pos:end="61:9">!</operator><call pos:start="61:10" pos:end="61:52"><name pos:start="61:10" pos:end="61:29">get_vt_profile_level</name><argument_list pos:start="61:30" pos:end="61:52">(<argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">avctx</name></expr></argument>, <argument pos:start="61:38" pos:end="61:51"><expr pos:start="61:38" pos:end="61:51"><operator pos:start="61:38" pos:end="61:38">&amp;</operator><name pos:start="61:39" pos:end="61:51">profile_level</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:55" pos:end="61:77"><block_content pos:start="61:55" pos:end="61:77"> <return pos:start="61:55" pos:end="61:77">return <expr pos:start="61:62" pos:end="61:76"><call pos:start="61:62" pos:end="61:76"><name pos:start="61:62" pos:end="61:68">AVERROR</name><argument_list pos:start="61:69" pos:end="61:76">(<argument pos:start="61:70" pos:end="61:75"><expr pos:start="61:70" pos:end="61:75"><name pos:start="61:70" pos:end="61:75">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:26"><expr pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:9">vtctx</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:18">session</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:25">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="79:6"><expr pos:start="69:5" pos:end="79:5"><name pos:start="69:5" pos:end="69:12">enc_info</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="79:5"><name pos:start="69:16" pos:end="69:40">CFDictionaryCreateMutable</name><argument_list pos:start="69:41" pos:end="79:5">(

        <argument pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:27">kCFAllocatorDefault</name></expr></argument>,

        <argument pos:start="73:9" pos:end="73:10"><expr pos:start="73:9" pos:end="73:10"><literal type="number" pos:start="73:9" pos:end="73:10">20</literal></expr></argument>,

        <argument pos:start="75:9" pos:end="75:44"><expr pos:start="75:9" pos:end="75:44"><operator pos:start="75:9" pos:end="75:9">&amp;</operator><name pos:start="75:10" pos:end="75:44">kCFCopyStringDictionaryKeyCallBacks</name></expr></argument>,

        <argument pos:start="77:9" pos:end="77:40"><expr pos:start="77:9" pos:end="77:40"><operator pos:start="77:9" pos:end="77:9">&amp;</operator><name pos:start="77:10" pos:end="77:40">kCFTypeDictionaryValueCallBacks</name></expr></argument>

    )</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="88:0"><if pos:start="83:5" pos:end="88:0">if <condition pos:start="83:8" pos:end="83:18">(<expr pos:start="83:9" pos:end="83:17"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:17">enc_info</name></expr>)</condition><block type="pseudo" pos:start="83:20" pos:end="88:0"><block_content pos:start="83:20" pos:end="88:0"> <return pos:start="83:20" pos:end="88:0">return <expr pos:start="83:27" pos:end="83:41"><call pos:start="83:27" pos:end="83:41"><name pos:start="83:27" pos:end="83:33">AVERROR</name><argument_list pos:start="83:34" pos:end="83:41">(<argument pos:start="83:35" pos:end="83:40"><expr pos:start="83:35" pos:end="83:40"><name pos:start="83:35" pos:end="83:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="87:1" pos:end="87:21">#<cpp:directive pos:start="87:2" pos:end="87:3">if</cpp:directive> <expr pos:start="87:5" pos:end="87:21"><operator pos:start="87:5" pos:end="87:5">!</operator><name pos:start="87:6" pos:end="87:21">TARGET_OS_IPHONE</name></expr></cpp:if>

    <if_stmt pos:start="89:5" pos:end="108:0"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:25">(<expr pos:start="89:9" pos:end="89:24"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:24"><name pos:start="89:10" pos:end="89:14">vtctx</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:24">allow_sw</name></name></expr>)</condition> <block pos:start="89:27" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:45">

        <expr_stmt pos:start="91:9" pos:end="95:45"><expr pos:start="91:9" pos:end="95:44"><call pos:start="91:9" pos:end="95:44"><name pos:start="91:9" pos:end="91:28">CFDictionarySetValue</name><argument_list pos:start="91:29" pos:end="95:44">(<argument pos:start="91:30" pos:end="91:37"><expr pos:start="91:30" pos:end="91:37"><name pos:start="91:30" pos:end="91:37">enc_info</name></expr></argument>,

                             <argument pos:start="93:30" pos:end="93:108"><expr pos:start="93:30" pos:end="93:108"><name pos:start="93:30" pos:end="93:108"><name pos:start="93:30" pos:end="93:40">compat_keys</name><operator pos:start="93:41" pos:end="93:41">.</operator><name pos:start="93:42" pos:end="93:108">kVTVideoEncoderSpecification_RequireHardwareAcceleratedVideoEncoder</name></name></expr></argument>,

                             <argument pos:start="95:30" pos:end="95:43"><expr pos:start="95:30" pos:end="95:43"><name pos:start="95:30" pos:end="95:43">kCFBooleanTrue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="108:0">else <block pos:start="97:12" pos:end="108:0">{<block_content pos:start="99:9" pos:end="103:45">

        <expr_stmt pos:start="99:9" pos:end="103:45"><expr pos:start="99:9" pos:end="103:44"><call pos:start="99:9" pos:end="103:44"><name pos:start="99:9" pos:end="99:28">CFDictionarySetValue</name><argument_list pos:start="99:29" pos:end="103:44">(<argument pos:start="99:30" pos:end="99:37"><expr pos:start="99:30" pos:end="99:37"><name pos:start="99:30" pos:end="99:37">enc_info</name></expr></argument>,

                             <argument pos:start="101:30" pos:end="101:107"><expr pos:start="101:30" pos:end="101:107"><name pos:start="101:30" pos:end="101:107"><name pos:start="101:30" pos:end="101:40">compat_keys</name><operator pos:start="101:41" pos:end="101:41">.</operator><name pos:start="101:42" pos:end="101:107">kVTVideoEncoderSpecification_EnableHardwareAcceleratedVideoEncoder</name></name></expr></argument>,

                             <argument pos:start="103:30" pos:end="103:43"><expr pos:start="103:30" pos:end="103:43"><name pos:start="103:30" pos:end="103:43">kCFBooleanTrue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="111:5" pos:end="123:5"><if pos:start="111:5" pos:end="119:5">if <condition pos:start="111:8" pos:end="111:50">(<expr pos:start="111:9" pos:end="111:49"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:13">avctx</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:22">pix_fmt</name></name> <operator pos:start="111:24" pos:end="111:25">!=</operator> <name pos:start="111:27" pos:end="111:49">AV_PIX_FMT_VIDEOTOOLBOX</name></expr>)</condition> <block pos:start="111:52" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:30">

        <expr_stmt pos:start="113:9" pos:end="113:72"><expr pos:start="113:9" pos:end="113:71"><name pos:start="113:9" pos:end="113:14">status</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <call pos:start="113:18" pos:end="113:71"><name pos:start="113:18" pos:end="113:44">create_cv_pixel_buffer_info</name><argument_list pos:start="113:45" pos:end="113:71">(<argument pos:start="113:46" pos:end="113:50"><expr pos:start="113:46" pos:end="113:50"><name pos:start="113:46" pos:end="113:50">avctx</name></expr></argument>, <argument pos:start="113:53" pos:end="113:70"><expr pos:start="113:53" pos:end="113:70"><operator pos:start="113:53" pos:end="113:53">&amp;</operator><name pos:start="113:54" pos:end="113:70">pixel_buffer_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="117:30"><if pos:start="115:9" pos:end="117:30">if <condition pos:start="115:12" pos:end="115:19">(<expr pos:start="115:13" pos:end="115:18"><name pos:start="115:13" pos:end="115:18">status</name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:30"><block_content pos:start="117:13" pos:end="117:30">

            <goto pos:start="117:13" pos:end="117:30">goto <name pos:start="117:18" pos:end="117:29">init_cleanup</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="123:5">else <block pos:start="119:12" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:33">

        <expr_stmt pos:start="121:9" pos:end="121:33"><expr pos:start="121:9" pos:end="121:32"><name pos:start="121:9" pos:end="121:25">pixel_buffer_info</name> <operator pos:start="121:27" pos:end="121:27">=</operator> <name pos:start="121:29" pos:end="121:32">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:43"><expr pos:start="127:5" pos:end="127:42"><call pos:start="127:5" pos:end="127:42"><name pos:start="127:5" pos:end="127:22">pthread_mutex_init</name><argument_list pos:start="127:23" pos:end="127:42">(<argument pos:start="127:24" pos:end="127:35"><expr pos:start="127:24" pos:end="127:35"><operator pos:start="127:24" pos:end="127:24">&amp;</operator><name pos:start="127:25" pos:end="127:35"><name pos:start="127:25" pos:end="127:29">vtctx</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:35">lock</name></name></expr></argument>, <argument pos:start="127:38" pos:end="127:41"><expr pos:start="127:38" pos:end="127:41"><name pos:start="127:38" pos:end="127:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:52"><expr pos:start="129:5" pos:end="129:51"><call pos:start="129:5" pos:end="129:51"><name pos:start="129:5" pos:end="129:21">pthread_cond_init</name><argument_list pos:start="129:22" pos:end="129:51">(<argument pos:start="129:23" pos:end="129:44"><expr pos:start="129:23" pos:end="129:44"><operator pos:start="129:23" pos:end="129:23">&amp;</operator><name pos:start="129:24" pos:end="129:44"><name pos:start="129:24" pos:end="129:28">vtctx</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:44">cv_sample_sent</name></name></expr></argument>, <argument pos:start="129:47" pos:end="129:50"><expr pos:start="129:47" pos:end="129:50"><name pos:start="129:47" pos:end="129:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:52"><expr pos:start="131:5" pos:end="131:51"><name pos:start="131:5" pos:end="131:20"><name pos:start="131:5" pos:end="131:9">vtctx</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:20">dts_delta</name></name> <operator pos:start="131:22" pos:end="131:22">=</operator> <ternary pos:start="131:24" pos:end="131:51"><condition pos:start="131:24" pos:end="131:44"><expr pos:start="131:24" pos:end="131:42"><name pos:start="131:24" pos:end="131:42"><name pos:start="131:24" pos:end="131:28">vtctx</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:42">has_b_frames</name></name></expr> ?</condition><then pos:start="131:46" pos:end="131:47"> <expr pos:start="131:46" pos:end="131:47"><operator pos:start="131:46" pos:end="131:46">-</operator><literal type="number" pos:start="131:47" pos:end="131:47">1</literal></expr> </then><else pos:start="131:49" pos:end="131:51">: <expr pos:start="131:51" pos:end="131:51"><literal type="number" pos:start="131:51" pos:end="131:51">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:77"><expr pos:start="135:5" pos:end="135:76"><call pos:start="135:5" pos:end="135:76"><name pos:start="135:5" pos:end="135:28">get_cv_transfer_function</name><argument_list pos:start="135:29" pos:end="135:76">(<argument pos:start="135:30" pos:end="135:34"><expr pos:start="135:30" pos:end="135:34"><name pos:start="135:30" pos:end="135:34">avctx</name></expr></argument>, <argument pos:start="135:37" pos:end="135:61"><expr pos:start="135:37" pos:end="135:61"><operator pos:start="135:37" pos:end="135:37">&amp;</operator><name pos:start="135:38" pos:end="135:61"><name pos:start="135:38" pos:end="135:42">vtctx</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:61">transfer_function</name></name></expr></argument>, <argument pos:start="135:64" pos:end="135:75"><expr pos:start="135:64" pos:end="135:75"><operator pos:start="135:64" pos:end="135:64">&amp;</operator><name pos:start="135:65" pos:end="135:75">gamma_level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:53"><expr pos:start="137:5" pos:end="137:52"><call pos:start="137:5" pos:end="137:52"><name pos:start="137:5" pos:end="137:23">get_cv_ycbcr_matrix</name><argument_list pos:start="137:24" pos:end="137:52">(<argument pos:start="137:25" pos:end="137:29"><expr pos:start="137:25" pos:end="137:29"><name pos:start="137:25" pos:end="137:29">avctx</name></expr></argument>, <argument pos:start="137:32" pos:end="137:51"><expr pos:start="137:32" pos:end="137:51"><operator pos:start="137:32" pos:end="137:32">&amp;</operator><name pos:start="137:33" pos:end="137:51"><name pos:start="137:33" pos:end="137:37">vtctx</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:51">ycbcr_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:59"><expr pos:start="139:5" pos:end="139:58"><call pos:start="139:5" pos:end="139:58"><name pos:start="139:5" pos:end="139:26">get_cv_color_primaries</name><argument_list pos:start="139:27" pos:end="139:58">(<argument pos:start="139:28" pos:end="139:32"><expr pos:start="139:28" pos:end="139:32"><name pos:start="139:28" pos:end="139:32">avctx</name></expr></argument>, <argument pos:start="139:35" pos:end="139:57"><expr pos:start="139:35" pos:end="139:57"><operator pos:start="139:35" pos:end="139:35">&amp;</operator><name pos:start="139:36" pos:end="139:57"><name pos:start="139:36" pos:end="139:40">vtctx</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:57">color_primaries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="145:5" pos:end="163:5"><if pos:start="145:5" pos:end="163:5">if <condition pos:start="145:8" pos:end="145:51">(<expr pos:start="145:9" pos:end="145:50"><name pos:start="145:9" pos:end="145:20"><name pos:start="145:9" pos:end="145:13">avctx</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:20">flags</name></name> <operator pos:start="145:22" pos:end="145:22">&amp;</operator> <name pos:start="145:24" pos:end="145:50">AV_CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="145:53" pos:end="163:5">{<block_content pos:start="147:9" pos:end="161:30">

        <expr_stmt pos:start="147:9" pos:end="157:61"><expr pos:start="147:9" pos:end="157:60"><name pos:start="147:9" pos:end="147:14">status</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <call pos:start="147:18" pos:end="157:60"><name pos:start="147:18" pos:end="147:41">vtenc_populate_extradata</name><argument_list pos:start="147:42" pos:end="157:60">(<argument pos:start="147:43" pos:end="147:47"><expr pos:start="147:43" pos:end="147:47"><name pos:start="147:43" pos:end="147:47">avctx</name></expr></argument>,

                                          <argument pos:start="149:43" pos:end="149:52"><expr pos:start="149:43" pos:end="149:52"><name pos:start="149:43" pos:end="149:52">codec_type</name></expr></argument>,

                                          <argument pos:start="151:43" pos:end="151:55"><expr pos:start="151:43" pos:end="151:55"><name pos:start="151:43" pos:end="151:55">profile_level</name></expr></argument>,

                                          <argument pos:start="153:43" pos:end="153:53"><expr pos:start="153:43" pos:end="153:53"><name pos:start="153:43" pos:end="153:53">gamma_level</name></expr></argument>,

                                          <argument pos:start="155:43" pos:end="155:50"><expr pos:start="155:43" pos:end="155:50"><name pos:start="155:43" pos:end="155:50">enc_info</name></expr></argument>,

                                          <argument pos:start="157:43" pos:end="157:59"><expr pos:start="157:43" pos:end="157:59"><name pos:start="157:43" pos:end="157:59">pixel_buffer_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="161:30"><if pos:start="159:9" pos:end="161:30">if <condition pos:start="159:12" pos:end="159:19">(<expr pos:start="159:13" pos:end="159:18"><name pos:start="159:13" pos:end="159:18">status</name></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:30"><block_content pos:start="161:13" pos:end="161:30">

            <goto pos:start="161:13" pos:end="161:30">goto <name pos:start="161:18" pos:end="161:29">init_cleanup</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="179:51"><expr pos:start="167:5" pos:end="179:50"><name pos:start="167:5" pos:end="167:10">status</name> <operator pos:start="167:12" pos:end="167:12">=</operator> <call pos:start="167:14" pos:end="179:50"><name pos:start="167:14" pos:end="167:33">vtenc_create_encoder</name><argument_list pos:start="167:34" pos:end="179:50">(<argument pos:start="167:35" pos:end="167:39"><expr pos:start="167:35" pos:end="167:39"><name pos:start="167:35" pos:end="167:39">avctx</name></expr></argument>,

                                  <argument pos:start="169:35" pos:end="169:44"><expr pos:start="169:35" pos:end="169:44"><name pos:start="169:35" pos:end="169:44">codec_type</name></expr></argument>,

                                  <argument pos:start="171:35" pos:end="171:47"><expr pos:start="171:35" pos:end="171:47"><name pos:start="171:35" pos:end="171:47">profile_level</name></expr></argument>,

                                  <argument pos:start="173:35" pos:end="173:45"><expr pos:start="173:35" pos:end="173:45"><name pos:start="173:35" pos:end="173:45">gamma_level</name></expr></argument>,

                                  <argument pos:start="175:35" pos:end="175:42"><expr pos:start="175:35" pos:end="175:42"><name pos:start="175:35" pos:end="175:42">enc_info</name></expr></argument>,

                                  <argument pos:start="177:35" pos:end="177:51"><expr pos:start="177:35" pos:end="177:51"><name pos:start="177:35" pos:end="177:51">pixel_buffer_info</name></expr></argument>,

                                  <argument pos:start="179:35" pos:end="179:49"><expr pos:start="179:35" pos:end="179:49"><operator pos:start="179:35" pos:end="179:35">&amp;</operator><name pos:start="179:36" pos:end="179:49"><name pos:start="179:36" pos:end="179:40">vtctx</name><operator pos:start="179:41" pos:end="179:42">-&gt;</operator><name pos:start="179:43" pos:end="179:49">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="183:5" pos:end="185:26"><if pos:start="183:5" pos:end="185:26">if <condition pos:start="183:8" pos:end="183:19">(<expr pos:start="183:9" pos:end="183:18"><name pos:start="183:9" pos:end="183:14">status</name> <operator pos:start="183:16" pos:end="183:16">&lt;</operator> <literal type="number" pos:start="183:18" pos:end="183:18">0</literal></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:26"><block_content pos:start="185:9" pos:end="185:26">

        <goto pos:start="185:9" pos:end="185:26">goto <name pos:start="185:14" pos:end="185:25">init_cleanup</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="195:57"><expr pos:start="189:5" pos:end="195:56"><name pos:start="189:5" pos:end="189:10">status</name> <operator pos:start="189:12" pos:end="189:12">=</operator> <call pos:start="189:14" pos:end="195:56"><name pos:start="189:14" pos:end="189:34">VTSessionCopyProperty</name><argument_list pos:start="189:35" pos:end="195:56">(<argument pos:start="189:36" pos:end="189:49"><expr pos:start="189:36" pos:end="189:49"><name pos:start="189:36" pos:end="189:49"><name pos:start="189:36" pos:end="189:40">vtctx</name><operator pos:start="189:41" pos:end="189:42">-&gt;</operator><name pos:start="189:43" pos:end="189:49">session</name></name></expr></argument>,

                                   <argument pos:start="191:36" pos:end="191:81"><expr pos:start="191:36" pos:end="191:81"><name pos:start="191:36" pos:end="191:81">kVTCompressionPropertyKey_AllowFrameReordering</name></expr></argument>,

                                   <argument pos:start="193:36" pos:end="193:54"><expr pos:start="193:36" pos:end="193:54"><name pos:start="193:36" pos:end="193:54">kCFAllocatorDefault</name></expr></argument>,

                                   <argument pos:start="195:36" pos:end="195:55"><expr pos:start="195:36" pos:end="195:55"><operator pos:start="195:36" pos:end="195:36">&amp;</operator><name pos:start="195:37" pos:end="195:55">has_b_frames_cfbool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="199:5" pos:end="207:5"><if pos:start="199:5" pos:end="207:5">if <condition pos:start="199:8" pos:end="199:16">(<expr pos:start="199:9" pos:end="199:15"><operator pos:start="199:9" pos:end="199:9">!</operator><name pos:start="199:10" pos:end="199:15">status</name></expr>)</condition> <block pos:start="199:18" pos:end="207:5">{<block_content pos:start="203:9" pos:end="205:39">

        <comment type="line" pos:start="201:9" pos:end="201:81">//Some devices don't output B-frames for main profile, even if requested.</comment>

        <expr_stmt pos:start="203:9" pos:end="203:69"><expr pos:start="203:9" pos:end="203:68"><name pos:start="203:9" pos:end="203:27"><name pos:start="203:9" pos:end="203:13">vtctx</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:27">has_b_frames</name></name> <operator pos:start="203:29" pos:end="203:29">=</operator> <call pos:start="203:31" pos:end="203:68"><name pos:start="203:31" pos:end="203:47">CFBooleanGetValue</name><argument_list pos:start="203:48" pos:end="203:68">(<argument pos:start="203:49" pos:end="203:67"><expr pos:start="203:49" pos:end="203:67"><name pos:start="203:49" pos:end="203:67">has_b_frames_cfbool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:39"><expr pos:start="205:9" pos:end="205:38"><call pos:start="205:9" pos:end="205:38"><name pos:start="205:9" pos:end="205:17">CFRelease</name><argument_list pos:start="205:18" pos:end="205:38">(<argument pos:start="205:19" pos:end="205:37"><expr pos:start="205:19" pos:end="205:37"><name pos:start="205:19" pos:end="205:37">has_b_frames_cfbool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:46"><expr pos:start="209:5" pos:end="209:45"><name pos:start="209:5" pos:end="209:23"><name pos:start="209:5" pos:end="209:9">avctx</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:23">has_b_frames</name></name> <operator pos:start="209:25" pos:end="209:25">=</operator> <name pos:start="209:27" pos:end="209:45"><name pos:start="209:27" pos:end="209:31">vtctx</name><operator pos:start="209:32" pos:end="209:33">-&gt;</operator><name pos:start="209:34" pos:end="209:45">has_b_frames</name></name></expr>;</expr_stmt>



<label pos:start="213:1" pos:end="213:13"><name pos:start="213:1" pos:end="213:12">init_cleanup</name>:</label>

    <if_stmt pos:start="215:5" pos:end="217:31"><if pos:start="215:5" pos:end="217:31">if <condition pos:start="215:8" pos:end="215:20">(<expr pos:start="215:9" pos:end="215:19"><name pos:start="215:9" pos:end="215:19">gamma_level</name></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="217:31"><block_content pos:start="217:9" pos:end="217:31">

        <expr_stmt pos:start="217:9" pos:end="217:31"><expr pos:start="217:9" pos:end="217:30"><call pos:start="217:9" pos:end="217:30"><name pos:start="217:9" pos:end="217:17">CFRelease</name><argument_list pos:start="217:18" pos:end="217:30">(<argument pos:start="217:19" pos:end="217:29"><expr pos:start="217:19" pos:end="217:29"><name pos:start="217:19" pos:end="217:29">gamma_level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="221:5" pos:end="223:37"><if pos:start="221:5" pos:end="223:37">if <condition pos:start="221:8" pos:end="221:26">(<expr pos:start="221:9" pos:end="221:25"><name pos:start="221:9" pos:end="221:25">pixel_buffer_info</name></expr>)</condition><block type="pseudo" pos:start="223:9" pos:end="223:37"><block_content pos:start="223:9" pos:end="223:37">

        <expr_stmt pos:start="223:9" pos:end="223:37"><expr pos:start="223:9" pos:end="223:36"><call pos:start="223:9" pos:end="223:36"><name pos:start="223:9" pos:end="223:17">CFRelease</name><argument_list pos:start="223:18" pos:end="223:36">(<argument pos:start="223:19" pos:end="223:35"><expr pos:start="223:19" pos:end="223:35"><name pos:start="223:19" pos:end="223:35">pixel_buffer_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="227:5" pos:end="227:24"><expr pos:start="227:5" pos:end="227:23"><call pos:start="227:5" pos:end="227:23"><name pos:start="227:5" pos:end="227:13">CFRelease</name><argument_list pos:start="227:14" pos:end="227:23">(<argument pos:start="227:15" pos:end="227:22"><expr pos:start="227:15" pos:end="227:22"><name pos:start="227:15" pos:end="227:22">enc_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="231:5" pos:end="231:18">return <expr pos:start="231:12" pos:end="231:17"><name pos:start="231:12" pos:end="231:17">status</name></expr>;</return>

</block_content>}</block></function>
</unit>
