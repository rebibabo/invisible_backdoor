<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27295.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:28">choose_pix_fmts</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">OutputStream</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:6" pos:end="79:20">

     <if_stmt pos:start="5:6" pos:end="19:5"><if pos:start="5:6" pos:end="19:5">if <condition pos:start="5:9" pos:end="5:27">(<expr pos:start="5:10" pos:end="5:26"><name pos:start="5:10" pos:end="5:26"><name pos:start="5:10" pos:end="5:12">ost</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:26">keep_pix_fmt</name></name></expr>)</condition> <block pos:start="5:29" pos:end="19:5">{<block_content pos:start="7:9" pos:end="17:71">

        <if_stmt pos:start="7:9" pos:end="11:72"><if pos:start="7:9" pos:end="11:72">if <condition pos:start="7:12" pos:end="7:24">(<expr pos:start="7:13" pos:end="7:23"><name pos:start="7:13" pos:end="7:23"><name pos:start="7:13" pos:end="7:15">ost</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:23">filter</name></name></expr>)</condition><block type="pseudo" pos:start="9:13" pos:end="11:72"><block_content pos:start="9:13" pos:end="11:72">

            <expr_stmt pos:start="9:13" pos:end="11:72"><expr pos:start="9:13" pos:end="11:71"><call pos:start="9:13" pos:end="11:71"><name pos:start="9:13" pos:end="9:43">avfilter_graph_set_auto_convert</name><argument_list pos:start="9:44" pos:end="11:71">(<argument pos:start="9:45" pos:end="9:69"><expr pos:start="9:45" pos:end="9:69"><name pos:start="9:45" pos:end="9:69"><name pos:start="9:45" pos:end="9:47">ost</name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:55">filter</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:62">graph</name><operator pos:start="9:63" pos:end="9:64">-&gt;</operator><name pos:start="9:65" pos:end="9:69">graph</name></name></expr></argument>,

                                            <argument pos:start="11:45" pos:end="11:70"><expr pos:start="11:45" pos:end="11:70"><name pos:start="11:45" pos:end="11:70">AVFILTER_AUTO_CONVERT_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="13:9" pos:end="15:24"><if pos:start="13:9" pos:end="15:24">if <condition pos:start="13:12" pos:end="13:52">(<expr pos:start="13:13" pos:end="13:51"><name pos:start="13:13" pos:end="13:35"><name pos:start="13:13" pos:end="13:15">ost</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:19">st</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:26">codec</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:35">pix_fmt</name></name> <operator pos:start="13:37" pos:end="13:38">==</operator> <name pos:start="13:40" pos:end="13:51">PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:24"><block_content pos:start="15:13" pos:end="15:24">

            <return pos:start="15:13" pos:end="15:24">return <expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="17:9" pos:end="17:71">return <expr pos:start="17:16" pos:end="17:70"><call pos:start="17:16" pos:end="17:70"><name pos:start="17:16" pos:end="17:24">av_strdup</name><argument_list pos:start="17:25" pos:end="17:70">(<argument pos:start="17:26" pos:end="17:69"><expr pos:start="17:26" pos:end="17:69"><call pos:start="17:26" pos:end="17:69"><name pos:start="17:26" pos:end="17:44">av_get_pix_fmt_name</name><argument_list pos:start="17:45" pos:end="17:69">(<argument pos:start="17:46" pos:end="17:68"><expr pos:start="17:46" pos:end="17:68"><name pos:start="17:46" pos:end="17:68"><name pos:start="17:46" pos:end="17:48">ost</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:52">st</name><operator pos:start="17:53" pos:end="17:54">-&gt;</operator><name pos:start="17:55" pos:end="17:59">codec</name><operator pos:start="17:60" pos:end="17:61">-&gt;</operator><name pos:start="17:62" pos:end="17:68">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="79:20"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:48">(<expr pos:start="21:9" pos:end="21:47"><name pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:11">ost</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:15">st</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:22">codec</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:31">pix_fmt</name></name> <operator pos:start="21:33" pos:end="21:34">!=</operator> <name pos:start="21:36" pos:end="21:47">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="21:50" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:108">

        <return pos:start="23:9" pos:end="23:108">return <expr pos:start="23:16" pos:end="23:107"><call pos:start="23:16" pos:end="23:107"><name pos:start="23:16" pos:end="23:24">av_strdup</name><argument_list pos:start="23:25" pos:end="23:107">(<argument pos:start="23:26" pos:end="23:106"><expr pos:start="23:26" pos:end="23:106"><call pos:start="23:26" pos:end="23:106"><name pos:start="23:26" pos:end="23:44">av_get_pix_fmt_name</name><argument_list pos:start="23:45" pos:end="23:106">(<argument pos:start="23:46" pos:end="23:105"><expr pos:start="23:46" pos:end="23:105"><call pos:start="23:46" pos:end="23:105"><name pos:start="23:46" pos:end="23:61">choose_pixel_fmt</name><argument_list pos:start="23:62" pos:end="23:105">(<argument pos:start="23:63" pos:end="23:69"><expr pos:start="23:63" pos:end="23:69"><name pos:start="23:63" pos:end="23:69"><name pos:start="23:63" pos:end="23:65">ost</name><operator pos:start="23:66" pos:end="23:67">-&gt;</operator><name pos:start="23:68" pos:end="23:69">st</name></name></expr></argument>, <argument pos:start="23:72" pos:end="23:79"><expr pos:start="23:72" pos:end="23:79"><name pos:start="23:72" pos:end="23:79"><name pos:start="23:72" pos:end="23:74">ost</name><operator pos:start="23:75" pos:end="23:76">-&gt;</operator><name pos:start="23:77" pos:end="23:79">enc</name></name></expr></argument>, <argument pos:start="23:82" pos:end="23:104"><expr pos:start="23:82" pos:end="23:104"><name pos:start="23:82" pos:end="23:104"><name pos:start="23:82" pos:end="23:84">ost</name><operator pos:start="23:85" pos:end="23:86">-&gt;</operator><name pos:start="23:87" pos:end="23:88">st</name><operator pos:start="23:89" pos:end="23:90">-&gt;</operator><name pos:start="23:91" pos:end="23:95">codec</name><operator pos:start="23:96" pos:end="23:97">-&gt;</operator><name pos:start="23:98" pos:end="23:104">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="77:5">else if <condition pos:start="25:15" pos:end="25:34">(<expr pos:start="25:16" pos:end="25:33"><name pos:start="25:16" pos:end="25:33"><name pos:start="25:16" pos:end="25:18">ost</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:23">enc</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:33">pix_fmts</name></name></expr>)</condition> <block pos:start="25:36" pos:end="77:5">{<block_content pos:start="27:9" pos:end="75:19">

        <decl_stmt pos:start="27:9" pos:end="27:34"><decl pos:start="27:9" pos:end="27:33"><type pos:start="27:9" pos:end="27:32"><specifier pos:start="27:9" pos:end="27:13">const</specifier> <name pos:start="27:15" pos:end="27:30"><name pos:start="27:15" pos:end="27:18">enum</name> <name pos:start="27:20" pos:end="27:30">PixelFormat</name></name> <modifier pos:start="27:32" pos:end="27:32">*</modifier></type><name pos:start="27:33" pos:end="27:33">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:30"><decl pos:start="29:9" pos:end="29:29"><type pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:19">AVIOContext</name> <modifier pos:start="29:21" pos:end="29:21">*</modifier></type><name pos:start="29:22" pos:end="29:22">s</name> <init pos:start="29:24" pos:end="29:29">= <expr pos:start="29:26" pos:end="29:29"><name pos:start="29:26" pos:end="29:29">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:21"><decl pos:start="31:9" pos:end="31:20"><type pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:15">uint8_t</name> <modifier pos:start="31:17" pos:end="31:17">*</modifier></type><name pos:start="31:18" pos:end="31:20">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:16"><decl pos:start="33:9" pos:end="33:15"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:15">len</name></decl>;</decl_stmt>



        <if_stmt pos:start="37:9" pos:end="39:28"><if pos:start="37:9" pos:end="39:28">if <condition pos:start="37:12" pos:end="37:38">(<expr pos:start="37:13" pos:end="37:37"><call pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:29">avio_open_dyn_buf</name><argument_list pos:start="37:30" pos:end="37:33">(<argument pos:start="37:31" pos:end="37:32"><expr pos:start="37:31" pos:end="37:32"><operator pos:start="37:31" pos:end="37:31">&amp;</operator><name pos:start="37:32" pos:end="37:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="37:35" pos:end="37:35">&lt;</operator> <literal type="number" pos:start="37:37" pos:end="37:37">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:28"><block_content pos:start="39:13" pos:end="39:28">

            <expr_stmt pos:start="39:13" pos:end="39:28"><expr pos:start="39:13" pos:end="39:27"><call pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:24">exit_program</name><argument_list pos:start="39:25" pos:end="39:27">(<argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:9">p</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:15">ost</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:20">enc</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:30">pix_fmts</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="59:9"><if pos:start="45:9" pos:end="59:9">if <condition pos:start="45:12" pos:end="45:78">(<expr pos:start="45:13" pos:end="45:77"><name pos:start="45:13" pos:end="45:49"><name pos:start="45:13" pos:end="45:15">ost</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:19">st</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:26">codec</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:49">strict_std_compliance</name></name> <operator pos:start="45:51" pos:end="45:52">&lt;=</operator> <name pos:start="45:54" pos:end="45:77">FF_COMPLIANCE_UNOFFICIAL</name></expr>)</condition> <block pos:start="45:80" pos:end="59:9">{<block_content pos:start="47:13" pos:end="57:13">

            <if_stmt pos:start="47:13" pos:end="57:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:59">(<expr pos:start="47:17" pos:end="47:58"><name pos:start="47:17" pos:end="47:40"><name pos:start="47:17" pos:end="47:19">ost</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:23">st</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:30">codec</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:40">codec_id</name></name> <operator pos:start="47:42" pos:end="47:43">==</operator> <name pos:start="47:45" pos:end="47:58">CODEC_ID_MJPEG</name></expr>)</condition> <block pos:start="47:61" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:134">

                <expr_stmt pos:start="49:17" pos:end="49:134"><expr pos:start="49:17" pos:end="49:133"><name pos:start="49:17" pos:end="49:17">p</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <operator pos:start="49:21" pos:end="49:21">(</operator><specifier pos:start="49:22" pos:end="49:26">const</specifier> enum <name pos:start="49:33" pos:end="49:45"><name pos:start="49:33" pos:end="49:43">PixelFormat</name><index pos:start="49:44" pos:end="49:45">[]</index></name><operator pos:start="49:46" pos:end="49:46">)</operator> <block pos:start="49:48" pos:end="49:133">{ <expr pos:start="49:50" pos:end="49:65"><name pos:start="49:50" pos:end="49:65">PIX_FMT_YUVJ420P</name></expr>, <expr pos:start="49:68" pos:end="49:83"><name pos:start="49:68" pos:end="49:83">PIX_FMT_YUVJ422P</name></expr>, <expr pos:start="49:86" pos:end="49:100"><name pos:start="49:86" pos:end="49:100">PIX_FMT_YUV420P</name></expr>, <expr pos:start="49:103" pos:end="49:117"><name pos:start="49:103" pos:end="49:117">PIX_FMT_YUV422P</name></expr>, <expr pos:start="49:120" pos:end="49:131"><name pos:start="49:120" pos:end="49:131">PIX_FMT_NONE</name></expr> }</block></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="51:15" pos:end="57:13">else if <condition pos:start="51:23" pos:end="51:66">(<expr pos:start="51:24" pos:end="51:65"><name pos:start="51:24" pos:end="51:47"><name pos:start="51:24" pos:end="51:26">ost</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:30">st</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:37">codec</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:47">codec_id</name></name> <operator pos:start="51:49" pos:end="51:50">==</operator> <name pos:start="51:52" pos:end="51:65">CODEC_ID_LJPEG</name></expr>)</condition> <block pos:start="51:68" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:115">

                <expr_stmt pos:start="53:17" pos:end="55:115"><expr pos:start="53:17" pos:end="55:114"><name pos:start="53:17" pos:end="53:17">p</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <operator pos:start="53:21" pos:end="53:21">(</operator><specifier pos:start="53:22" pos:end="53:26">const</specifier> enum <name pos:start="53:33" pos:end="53:45"><name pos:start="53:33" pos:end="53:43">PixelFormat</name><index pos:start="53:44" pos:end="53:45">[]</index></name><operator pos:start="53:46" pos:end="53:46">)</operator> <block pos:start="53:48" pos:end="55:114">{ <expr pos:start="53:50" pos:end="53:65"><name pos:start="53:50" pos:end="53:65">PIX_FMT_YUVJ420P</name></expr>, <expr pos:start="53:68" pos:end="53:83"><name pos:start="53:68" pos:end="53:83">PIX_FMT_YUVJ422P</name></expr>, <expr pos:start="53:86" pos:end="53:101"><name pos:start="53:86" pos:end="53:101">PIX_FMT_YUVJ444P</name></expr>, <expr pos:start="53:104" pos:end="53:118"><name pos:start="53:104" pos:end="53:118">PIX_FMT_YUV420P</name></expr>,

                                                    <expr pos:start="55:53" pos:end="55:67"><name pos:start="55:53" pos:end="55:67">PIX_FMT_YUV422P</name></expr>, <expr pos:start="55:70" pos:end="55:84"><name pos:start="55:70" pos:end="55:84">PIX_FMT_YUV444P</name></expr>, <expr pos:start="55:87" pos:end="55:98"><name pos:start="55:87" pos:end="55:98">PIX_FMT_BGRA</name></expr>, <expr pos:start="55:101" pos:end="55:112"><name pos:start="55:101" pos:end="55:112">PIX_FMT_NONE</name></expr> }</block></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="63:9" pos:end="69:9">for <control pos:start="63:13" pos:end="63:39">(<init pos:start="63:14" pos:end="63:14">;</init> <condition pos:start="63:16" pos:end="63:34"><expr pos:start="63:16" pos:end="63:33"><operator pos:start="63:16" pos:end="63:16">*</operator><name pos:start="63:17" pos:end="63:17">p</name> <operator pos:start="63:19" pos:end="63:20">!=</operator> <name pos:start="63:22" pos:end="63:33">PIX_FMT_NONE</name></expr>;</condition> <incr pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:36">p</name><operator pos:start="63:37" pos:end="63:38">++</operator></expr></incr>)</control> <block pos:start="63:41" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:40">

            <decl_stmt pos:start="65:13" pos:end="65:55"><decl pos:start="65:13" pos:end="65:54"><type pos:start="65:13" pos:end="65:24"><specifier pos:start="65:13" pos:end="65:17">const</specifier> <name pos:start="65:19" pos:end="65:22">char</name> <modifier pos:start="65:24" pos:end="65:24">*</modifier></type><name pos:start="65:25" pos:end="65:28">name</name> <init pos:start="65:30" pos:end="65:54">= <expr pos:start="65:32" pos:end="65:54"><call pos:start="65:32" pos:end="65:54"><name pos:start="65:32" pos:end="65:50">av_get_pix_fmt_name</name><argument_list pos:start="65:51" pos:end="65:54">(<argument pos:start="65:52" pos:end="65:53"><expr pos:start="65:52" pos:end="65:53"><operator pos:start="65:52" pos:end="65:52">*</operator><name pos:start="65:53" pos:end="65:53">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:40"><expr pos:start="67:13" pos:end="67:39"><call pos:start="67:13" pos:end="67:39"><name pos:start="67:13" pos:end="67:23">avio_printf</name><argument_list pos:start="67:24" pos:end="67:39">(<argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">s</name></expr></argument>, <argument pos:start="67:28" pos:end="67:32"><expr pos:start="67:28" pos:end="67:32"><literal type="string" pos:start="67:28" pos:end="67:32">"%s:"</literal></expr></argument>, <argument pos:start="67:35" pos:end="67:38"><expr pos:start="67:35" pos:end="67:38"><name pos:start="67:35" pos:end="67:38">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="71:9" pos:end="71:42"><expr pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:11">len</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:41"><name pos:start="71:15" pos:end="71:32">avio_close_dyn_buf</name><argument_list pos:start="71:33" pos:end="71:41">(<argument pos:start="71:34" pos:end="71:34"><expr pos:start="71:34" pos:end="71:34"><name pos:start="71:34" pos:end="71:34">s</name></expr></argument>, <argument pos:start="71:37" pos:end="71:40"><expr pos:start="71:37" pos:end="71:40"><operator pos:start="71:37" pos:end="71:37">&amp;</operator><name pos:start="71:38" pos:end="71:40">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:25"><expr pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:11">ret</name><index pos:start="73:12" pos:end="73:20">[<expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:15">len</name> <operator pos:start="73:17" pos:end="73:17">-</operator> <literal type="number" pos:start="73:19" pos:end="73:19">1</literal></expr>]</index></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:19">return <expr pos:start="75:16" pos:end="75:18"><name pos:start="75:16" pos:end="75:18">ret</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="79:20">else<block type="pseudo" pos:start="79:9" pos:end="79:20"><block_content pos:start="79:9" pos:end="79:20">

        <return pos:start="79:9" pos:end="79:20">return <expr pos:start="79:16" pos:end="79:19"><name pos:start="79:16" pos:end="79:19">NULL</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
