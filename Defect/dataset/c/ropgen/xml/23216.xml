<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23216.c" pos:tabs="8"><function pos:start="1:1" pos:end="70:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">parse_presentation_segment</name><parameter_list pos:start="1:38" pos:end="3:50">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:59"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>,
                                      <parameter pos:start="2:39" pos:end="2:56"><decl pos:start="2:39" pos:end="2:56"><type pos:start="2:39" pos:end="2:56"><specifier pos:start="2:39" pos:end="2:43">const</specifier> <name pos:start="2:45" pos:end="2:51">uint8_t</name> <modifier pos:start="2:53" pos:end="2:53">*</modifier></type><name pos:start="2:54" pos:end="2:56">buf</name></decl></parameter>, <parameter pos:start="2:59" pos:end="2:70"><decl pos:start="2:59" pos:end="2:70"><type pos:start="2:59" pos:end="2:70"><name pos:start="2:59" pos:end="2:61">int</name></type> <name pos:start="2:63" pos:end="2:70">buf_size</name></decl></parameter>,
                                      <parameter pos:start="3:39" pos:end="3:49"><decl pos:start="3:39" pos:end="3:49"><type pos:start="3:39" pos:end="3:49"><name pos:start="3:39" pos:end="3:45">int64_t</name></type> <name pos:start="3:47" pos:end="3:49">pts</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="70:13">{<block_content pos:start="5:5" pos:end="70:13">
    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">PGSSubContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">ctx</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:30">avctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:22"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">i</name></decl>, <decl pos:start="6:12" pos:end="6:16"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:12" pos:end="6:16">state</name></decl>, <decl pos:start="6:19" pos:end="6:21"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:19" pos:end="6:21">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:26">buf_end</name> <init pos:start="7:28" pos:end="7:43">= <expr pos:start="7:30" pos:end="7:43"><name pos:start="7:30" pos:end="7:32">buf</name> <operator pos:start="7:34" pos:end="7:34">+</operator> <name pos:start="7:36" pos:end="7:43">buf_size</name></expr></init></decl>;</decl_stmt>
    <comment type="line" pos:start="8:5" pos:end="8:23">// Video descriptor</comment>
    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">w</name> <init pos:start="9:11" pos:end="9:37">= <expr pos:start="9:13" pos:end="9:37"><call pos:start="9:13" pos:end="9:37"><name pos:start="9:13" pos:end="9:31">bytestream_get_be16</name><argument_list pos:start="9:32" pos:end="9:37">(<argument pos:start="9:33" pos:end="9:36"><expr pos:start="9:33" pos:end="9:36"><operator pos:start="9:33" pos:end="9:33">&amp;</operator><name pos:start="9:34" pos:end="9:36">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:38"><decl pos:start="10:5" pos:end="10:37"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">h</name> <init pos:start="10:11" pos:end="10:37">= <expr pos:start="10:13" pos:end="10:37"><call pos:start="10:13" pos:end="10:37"><name pos:start="10:13" pos:end="10:31">bytestream_get_be16</name><argument_list pos:start="10:32" pos:end="10:37">(<argument pos:start="10:33" pos:end="10:36"><expr pos:start="10:33" pos:end="10:36"><operator pos:start="10:33" pos:end="10:33">&amp;</operator><name pos:start="10:34" pos:end="10:36">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:25">object_index</name></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:32"><expr pos:start="12:5" pos:end="12:31"><name pos:start="12:5" pos:end="12:25"><name pos:start="12:5" pos:end="12:7">ctx</name><operator pos:start="12:8" pos:end="12:9">-&gt;</operator><name pos:start="12:10" pos:end="12:21">presentation</name><operator pos:start="12:22" pos:end="12:22">.</operator><name pos:start="12:23" pos:end="12:25">pts</name></name> <operator pos:start="12:27" pos:end="12:27">=</operator> <name pos:start="12:29" pos:end="12:31">pts</name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="14:18"><expr pos:start="13:5" pos:end="14:17"><call pos:start="13:5" pos:end="14:17"><name pos:start="13:5" pos:end="13:11">av_dlog</name><argument_list pos:start="13:12" pos:end="14:17">(<argument pos:start="13:13" pos:end="13:17"><expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:17">avctx</name></expr></argument>, <argument pos:start="13:20" pos:end="13:45"><expr pos:start="13:20" pos:end="13:45"><literal type="string" pos:start="13:20" pos:end="13:45">"Video Dimensions %dx%d\n"</literal></expr></argument>,
            <argument pos:start="14:13" pos:end="14:13"><expr pos:start="14:13" pos:end="14:13"><name pos:start="14:13" pos:end="14:13">w</name></expr></argument>, <argument pos:start="14:16" pos:end="14:16"><expr pos:start="14:16" pos:end="14:16"><name pos:start="14:16" pos:end="14:16">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:40"><name pos:start="15:11" pos:end="15:27">ff_set_dimensions</name><argument_list pos:start="15:28" pos:end="15:40">(<argument pos:start="15:29" pos:end="15:33"><expr pos:start="15:29" pos:end="15:33"><name pos:start="15:29" pos:end="15:33">avctx</name></expr></argument>, <argument pos:start="15:36" pos:end="15:36"><expr pos:start="15:36" pos:end="15:36"><name pos:start="15:36" pos:end="15:36">w</name></expr></argument>, <argument pos:start="15:39" pos:end="15:39"><expr pos:start="15:39" pos:end="15:39"><name pos:start="15:39" pos:end="15:39">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="17:19"><if pos:start="16:5" pos:end="17:19">if <condition pos:start="16:8" pos:end="16:16">(<expr pos:start="16:9" pos:end="16:15"><name pos:start="16:9" pos:end="16:11">ret</name> <operator pos:start="16:13" pos:end="16:13">&lt;</operator> <literal type="number" pos:start="16:15" pos:end="16:15">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:19"><block_content pos:start="17:9" pos:end="17:19">
        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <comment type="block" pos:start="18:5" pos:end="18:45">/* Skip 1 bytes of unknown, frame rate */</comment>
    <expr_stmt pos:start="19:5" pos:end="19:10"><expr pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:7">buf</name><operator pos:start="19:8" pos:end="19:9">++</operator></expr>;</expr_stmt>
    <comment type="line" pos:start="20:5" pos:end="20:29">// Composition descriptor</comment>
    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:7">ctx</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:21">presentation</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:31">id_number</name></name> <operator pos:start="21:33" pos:end="21:33">=</operator> <call pos:start="21:35" pos:end="21:59"><name pos:start="21:35" pos:end="21:53">bytestream_get_be16</name><argument_list pos:start="21:54" pos:end="21:59">(<argument pos:start="21:55" pos:end="21:58"><expr pos:start="21:55" pos:end="21:58"><operator pos:start="21:55" pos:end="21:55">&amp;</operator><name pos:start="21:56" pos:end="21:58">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="22:5" pos:end="30:7">/*
     * state is a 2 bit field that defines pgs epoch boundaries
     * 00 - Normal, previously defined objects and palettes are still valid
     * 01 - Acquisition point, previous objects and palettes can be released
     * 10 - Epoch start, previous objects and palettes can be released
     * 11 - Epoch continue, previous objects and palettes can be released
     *
     * reserved 6 bits discarded
     */</comment>
    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:9">state</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:31">bytestream_get_byte</name><argument_list pos:start="31:32" pos:end="31:37">(<argument pos:start="31:33" pos:end="31:36"><expr pos:start="31:33" pos:end="31:36"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:36">buf</name></expr></argument>)</argument_list></call> <operator pos:start="31:39" pos:end="31:40">&gt;&gt;</operator> <literal type="number" pos:start="31:42" pos:end="31:42">6</literal></expr>;</expr_stmt>
    <if_stmt pos:start="32:5" pos:end="70:13"><if pos:start="32:5" pos:end="70:13">if <condition pos:start="32:8" pos:end="32:19">(<expr pos:start="32:9" pos:end="32:18"><name pos:start="32:9" pos:end="32:13">state</name> <operator pos:start="32:15" pos:end="32:16">!=</operator> <literal type="number" pos:start="32:18" pos:end="32:18">0</literal></expr>)</condition> <block pos:start="32:21" pos:end="70:13">{<block_content pos:start="33:9" pos:end="70:13">
        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><call pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:19">flush_cache</name><argument_list pos:start="33:20" pos:end="33:26">(<argument pos:start="33:21" pos:end="33:25"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="34:5" pos:end="36:7">/*
     * skip palette_update_flag (0x80),
     */</comment>
    <expr_stmt pos:start="37:5" pos:end="37:13"><expr pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:7">buf</name> <operator pos:start="37:9" pos:end="37:10">+=</operator> <literal type="number" pos:start="37:12" pos:end="37:12">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:61"><expr pos:start="38:5" pos:end="38:60"><name pos:start="38:5" pos:end="38:32"><name pos:start="38:5" pos:end="38:7">ctx</name><operator pos:start="38:8" pos:end="38:9">-&gt;</operator><name pos:start="38:10" pos:end="38:21">presentation</name><operator pos:start="38:22" pos:end="38:22">.</operator><name pos:start="38:23" pos:end="38:32">palette_id</name></name> <operator pos:start="38:34" pos:end="38:34">=</operator> <call pos:start="38:36" pos:end="38:60"><name pos:start="38:36" pos:end="38:54">bytestream_get_byte</name><argument_list pos:start="38:55" pos:end="38:60">(<argument pos:start="38:56" pos:end="38:59"><expr pos:start="38:56" pos:end="38:59"><operator pos:start="38:56" pos:end="38:56">&amp;</operator><name pos:start="38:57" pos:end="38:59">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:63"><expr pos:start="39:5" pos:end="39:62"><name pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:7">ctx</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:21">presentation</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:34">object_count</name></name> <operator pos:start="39:36" pos:end="39:36">=</operator> <call pos:start="39:38" pos:end="39:62"><name pos:start="39:38" pos:end="39:56">bytestream_get_byte</name><argument_list pos:start="39:57" pos:end="39:62">(<argument pos:start="39:58" pos:end="39:61"><expr pos:start="39:58" pos:end="39:61"><operator pos:start="39:58" pos:end="39:58">&amp;</operator><name pos:start="39:59" pos:end="39:61">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="40:5" pos:end="70:13"><if pos:start="40:5" pos:end="70:13">if <condition pos:start="40:8" pos:end="40:57">(<expr pos:start="40:9" pos:end="40:56"><name pos:start="40:9" pos:end="40:38"><name pos:start="40:9" pos:end="40:11">ctx</name><operator pos:start="40:12" pos:end="40:13">-&gt;</operator><name pos:start="40:14" pos:end="40:25">presentation</name><operator pos:start="40:26" pos:end="40:26">.</operator><name pos:start="40:27" pos:end="40:38">object_count</name></name> <operator pos:start="40:40" pos:end="40:40">&gt;</operator> <name pos:start="40:42" pos:end="40:56">MAX_OBJECT_REFS</name></expr>)</condition> <block pos:start="40:59" pos:end="70:13">{<block_content pos:start="41:9" pos:end="70:13">
        <expr_stmt pos:start="41:9" pos:end="43:47"><expr pos:start="41:9" pos:end="43:46"><call pos:start="41:9" pos:end="43:46"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="43:46">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">avctx</name></expr></argument>, <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:34">AV_LOG_ERROR</name></expr></argument>,
               <argument pos:start="42:16" pos:end="42:60"><expr pos:start="42:16" pos:end="42:60"><literal type="string" pos:start="42:16" pos:end="42:60">"Invalid number of presentation objects %d\n"</literal></expr></argument>,
               <argument pos:start="43:16" pos:end="43:45"><expr pos:start="43:16" pos:end="43:45"><name pos:start="43:16" pos:end="43:45"><name pos:start="43:16" pos:end="43:18">ctx</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:32">presentation</name><operator pos:start="43:33" pos:end="43:33">.</operator><name pos:start="43:34" pos:end="43:45">object_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:43"><expr pos:start="44:9" pos:end="44:42"><name pos:start="44:9" pos:end="44:38"><name pos:start="44:9" pos:end="44:11">ctx</name><operator pos:start="44:12" pos:end="44:13">-&gt;</operator><name pos:start="44:14" pos:end="44:25">presentation</name><operator pos:start="44:26" pos:end="44:26">.</operator><name pos:start="44:27" pos:end="44:38">object_count</name></name> <operator pos:start="44:40" pos:end="44:40">=</operator> <literal type="number" pos:start="44:42" pos:end="44:42">2</literal></expr>;</expr_stmt>
        <if_stmt pos:start="45:9" pos:end="70:13"><if pos:start="45:9" pos:end="70:13">if <condition pos:start="45:12" pos:end="45:51">(<expr pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:17">avctx</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:34">err_recognition</name></name> <operator pos:start="45:36" pos:end="45:36">&amp;</operator> <name pos:start="45:38" pos:end="45:50">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="45:53" pos:end="70:13">{<block_content pos:start="46:5" pos:end="70:13">
    <for pos:start="46:5" pos:end="70:13">for <control pos:start="46:9" pos:end="46:56">(<init pos:start="46:10" pos:end="46:15"><expr pos:start="46:10" pos:end="46:14"><name pos:start="46:10" pos:end="46:10">i</name> <operator pos:start="46:12" pos:end="46:12">=</operator> <literal type="number" pos:start="46:14" pos:end="46:14">0</literal></expr>;</init> <condition pos:start="46:17" pos:end="46:51"><expr pos:start="46:17" pos:end="46:50"><name pos:start="46:17" pos:end="46:17">i</name> <operator pos:start="46:19" pos:end="46:19">&lt;</operator> <name pos:start="46:21" pos:end="46:50"><name pos:start="46:21" pos:end="46:23">ctx</name><operator pos:start="46:24" pos:end="46:25">-&gt;</operator><name pos:start="46:26" pos:end="46:37">presentation</name><operator pos:start="46:38" pos:end="46:38">.</operator><name pos:start="46:39" pos:end="46:50">object_count</name></name></expr>;</condition> <incr pos:start="46:53" pos:end="46:55"><expr pos:start="46:53" pos:end="46:55"><name pos:start="46:53" pos:end="46:53">i</name><operator pos:start="46:54" pos:end="46:55">++</operator></expr></incr>)</control>
    <block pos:start="47:5" pos:end="70:13">{<block_content pos:start="48:9" pos:end="70:13">
        <expr_stmt pos:start="48:9" pos:end="48:68"><expr pos:start="48:9" pos:end="48:67"><name pos:start="48:9" pos:end="48:36"><name pos:start="48:9" pos:end="48:11">ctx</name><operator pos:start="48:12" pos:end="48:13">-&gt;</operator><name pos:start="48:14" pos:end="48:25">presentation</name><operator pos:start="48:26" pos:end="48:26">.</operator><name pos:start="48:27" pos:end="48:33">objects</name><index pos:start="48:34" pos:end="48:36">[<expr pos:start="48:35" pos:end="48:35"><name pos:start="48:35" pos:end="48:35">i</name></expr>]</index></name><operator pos:start="48:37" pos:end="48:37">.</operator><name pos:start="48:38" pos:end="48:39">id</name> <operator pos:start="48:41" pos:end="48:41">=</operator> <call pos:start="48:43" pos:end="48:67"><name pos:start="48:43" pos:end="48:61">bytestream_get_be16</name><argument_list pos:start="48:62" pos:end="48:67">(<argument pos:start="48:63" pos:end="48:66"><expr pos:start="48:63" pos:end="48:66"><operator pos:start="48:63" pos:end="48:63">&amp;</operator><name pos:start="48:64" pos:end="48:66">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:75"><expr pos:start="49:9" pos:end="49:74"><name pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:11">ctx</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:25">presentation</name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:33">objects</name><index pos:start="49:34" pos:end="49:36">[<expr pos:start="49:35" pos:end="49:35"><name pos:start="49:35" pos:end="49:35">i</name></expr>]</index></name><operator pos:start="49:37" pos:end="49:37">.</operator><name pos:start="49:38" pos:end="49:46">window_id</name> <operator pos:start="49:48" pos:end="49:48">=</operator> <call pos:start="49:50" pos:end="49:74"><name pos:start="49:50" pos:end="49:68">bytestream_get_byte</name><argument_list pos:start="49:69" pos:end="49:74">(<argument pos:start="49:70" pos:end="49:73"><expr pos:start="49:70" pos:end="49:73"><operator pos:start="49:70" pos:end="49:70">&amp;</operator><name pos:start="49:71" pos:end="49:73">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="50:9" pos:end="50:82"><expr pos:start="50:9" pos:end="50:81"><name pos:start="50:9" pos:end="50:36"><name pos:start="50:9" pos:end="50:11">ctx</name><operator pos:start="50:12" pos:end="50:13">-&gt;</operator><name pos:start="50:14" pos:end="50:25">presentation</name><operator pos:start="50:26" pos:end="50:26">.</operator><name pos:start="50:27" pos:end="50:33">objects</name><index pos:start="50:34" pos:end="50:36">[<expr pos:start="50:35" pos:end="50:35"><name pos:start="50:35" pos:end="50:35">i</name></expr>]</index></name><operator pos:start="50:37" pos:end="50:37">.</operator><name pos:start="50:38" pos:end="50:53">composition_flag</name> <operator pos:start="50:55" pos:end="50:55">=</operator> <call pos:start="50:57" pos:end="50:81"><name pos:start="50:57" pos:end="50:75">bytestream_get_byte</name><argument_list pos:start="50:76" pos:end="50:81">(<argument pos:start="50:77" pos:end="50:80"><expr pos:start="50:77" pos:end="50:80"><operator pos:start="50:77" pos:end="50:77">&amp;</operator><name pos:start="50:78" pos:end="50:80">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="51:9" pos:end="51:67"><expr pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:11">ctx</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:25">presentation</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:33">objects</name><index pos:start="51:34" pos:end="51:36">[<expr pos:start="51:35" pos:end="51:35"><name pos:start="51:35" pos:end="51:35">i</name></expr>]</index></name><operator pos:start="51:37" pos:end="51:37">.</operator><name pos:start="51:38" pos:end="51:38">x</name> <operator pos:start="51:40" pos:end="51:40">=</operator> <call pos:start="51:42" pos:end="51:66"><name pos:start="51:42" pos:end="51:60">bytestream_get_be16</name><argument_list pos:start="51:61" pos:end="51:66">(<argument pos:start="51:62" pos:end="51:65"><expr pos:start="51:62" pos:end="51:65"><operator pos:start="51:62" pos:end="51:62">&amp;</operator><name pos:start="51:63" pos:end="51:65">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:67"><expr pos:start="52:9" pos:end="52:66"><name pos:start="52:9" pos:end="52:36"><name pos:start="52:9" pos:end="52:11">ctx</name><operator pos:start="52:12" pos:end="52:13">-&gt;</operator><name pos:start="52:14" pos:end="52:25">presentation</name><operator pos:start="52:26" pos:end="52:26">.</operator><name pos:start="52:27" pos:end="52:33">objects</name><index pos:start="52:34" pos:end="52:36">[<expr pos:start="52:35" pos:end="52:35"><name pos:start="52:35" pos:end="52:35">i</name></expr>]</index></name><operator pos:start="52:37" pos:end="52:37">.</operator><name pos:start="52:38" pos:end="52:38">y</name> <operator pos:start="52:40" pos:end="52:40">=</operator> <call pos:start="52:42" pos:end="52:66"><name pos:start="52:42" pos:end="52:60">bytestream_get_be16</name><argument_list pos:start="52:61" pos:end="52:66">(<argument pos:start="52:62" pos:end="52:65"><expr pos:start="52:62" pos:end="52:65"><operator pos:start="52:62" pos:end="52:62">&amp;</operator><name pos:start="52:63" pos:end="52:65">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:start="53:9" pos:end="53:22">// If cropping</comment>
        <if_stmt pos:start="54:9" pos:end="70:13"><if pos:start="54:9" pos:end="70:13">if <condition pos:start="54:12" pos:end="54:65">(<expr pos:start="54:13" pos:end="54:64"><name pos:start="54:13" pos:end="54:40"><name pos:start="54:13" pos:end="54:15">ctx</name><operator pos:start="54:16" pos:end="54:17">-&gt;</operator><name pos:start="54:18" pos:end="54:29">presentation</name><operator pos:start="54:30" pos:end="54:30">.</operator><name pos:start="54:31" pos:end="54:37">objects</name><index pos:start="54:38" pos:end="54:40">[<expr pos:start="54:39" pos:end="54:39"><name pos:start="54:39" pos:end="54:39">i</name></expr>]</index></name><operator pos:start="54:41" pos:end="54:41">.</operator><name pos:start="54:42" pos:end="54:57">composition_flag</name> <operator pos:start="54:59" pos:end="54:59">&amp;</operator> <literal type="number" pos:start="54:61" pos:end="54:64">0x80</literal></expr>)</condition> <block pos:start="54:67" pos:end="70:13">{<block_content pos:start="55:13" pos:end="70:13">
            <expr_stmt pos:start="55:13" pos:end="55:76"><expr pos:start="55:13" pos:end="55:75"><name pos:start="55:13" pos:end="55:40"><name pos:start="55:13" pos:end="55:15">ctx</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:29">presentation</name><operator pos:start="55:30" pos:end="55:30">.</operator><name pos:start="55:31" pos:end="55:37">objects</name><index pos:start="55:38" pos:end="55:40">[<expr pos:start="55:39" pos:end="55:39"><name pos:start="55:39" pos:end="55:39">i</name></expr>]</index></name><operator pos:start="55:41" pos:end="55:41">.</operator><name pos:start="55:42" pos:end="55:47">crop_x</name> <operator pos:start="55:49" pos:end="55:49">=</operator> <call pos:start="55:51" pos:end="55:75"><name pos:start="55:51" pos:end="55:69">bytestream_get_be16</name><argument_list pos:start="55:70" pos:end="55:75">(<argument pos:start="55:71" pos:end="55:74"><expr pos:start="55:71" pos:end="55:74"><operator pos:start="55:71" pos:end="55:71">&amp;</operator><name pos:start="55:72" pos:end="55:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="56:13" pos:end="56:76"><expr pos:start="56:13" pos:end="56:75"><name pos:start="56:13" pos:end="56:40"><name pos:start="56:13" pos:end="56:15">ctx</name><operator pos:start="56:16" pos:end="56:17">-&gt;</operator><name pos:start="56:18" pos:end="56:29">presentation</name><operator pos:start="56:30" pos:end="56:30">.</operator><name pos:start="56:31" pos:end="56:37">objects</name><index pos:start="56:38" pos:end="56:40">[<expr pos:start="56:39" pos:end="56:39"><name pos:start="56:39" pos:end="56:39">i</name></expr>]</index></name><operator pos:start="56:41" pos:end="56:41">.</operator><name pos:start="56:42" pos:end="56:47">crop_y</name> <operator pos:start="56:49" pos:end="56:49">=</operator> <call pos:start="56:51" pos:end="56:75"><name pos:start="56:51" pos:end="56:69">bytestream_get_be16</name><argument_list pos:start="56:70" pos:end="56:75">(<argument pos:start="56:71" pos:end="56:74"><expr pos:start="56:71" pos:end="56:74"><operator pos:start="56:71" pos:end="56:71">&amp;</operator><name pos:start="56:72" pos:end="56:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="57:13" pos:end="57:76"><expr pos:start="57:13" pos:end="57:75"><name pos:start="57:13" pos:end="57:40"><name pos:start="57:13" pos:end="57:15">ctx</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:29">presentation</name><operator pos:start="57:30" pos:end="57:30">.</operator><name pos:start="57:31" pos:end="57:37">objects</name><index pos:start="57:38" pos:end="57:40">[<expr pos:start="57:39" pos:end="57:39"><name pos:start="57:39" pos:end="57:39">i</name></expr>]</index></name><operator pos:start="57:41" pos:end="57:41">.</operator><name pos:start="57:42" pos:end="57:47">crop_w</name> <operator pos:start="57:49" pos:end="57:49">=</operator> <call pos:start="57:51" pos:end="57:75"><name pos:start="57:51" pos:end="57:69">bytestream_get_be16</name><argument_list pos:start="57:70" pos:end="57:75">(<argument pos:start="57:71" pos:end="57:74"><expr pos:start="57:71" pos:end="57:74"><operator pos:start="57:71" pos:end="57:71">&amp;</operator><name pos:start="57:72" pos:end="57:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="58:13" pos:end="58:76"><expr pos:start="58:13" pos:end="58:75"><name pos:start="58:13" pos:end="58:40"><name pos:start="58:13" pos:end="58:15">ctx</name><operator pos:start="58:16" pos:end="58:17">-&gt;</operator><name pos:start="58:18" pos:end="58:29">presentation</name><operator pos:start="58:30" pos:end="58:30">.</operator><name pos:start="58:31" pos:end="58:37">objects</name><index pos:start="58:38" pos:end="58:40">[<expr pos:start="58:39" pos:end="58:39"><name pos:start="58:39" pos:end="58:39">i</name></expr>]</index></name><operator pos:start="58:41" pos:end="58:41">.</operator><name pos:start="58:42" pos:end="58:47">crop_h</name> <operator pos:start="58:49" pos:end="58:49">=</operator> <call pos:start="58:51" pos:end="58:75"><name pos:start="58:51" pos:end="58:69">bytestream_get_be16</name><argument_list pos:start="58:70" pos:end="58:75">(<argument pos:start="58:71" pos:end="58:74"><expr pos:start="58:71" pos:end="58:74"><operator pos:start="58:71" pos:end="58:71">&amp;</operator><name pos:start="58:72" pos:end="58:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="59:9" pos:end="60:80"><expr pos:start="59:9" pos:end="60:79"><call pos:start="59:9" pos:end="60:79"><name pos:start="59:9" pos:end="59:15">av_dlog</name><argument_list pos:start="59:16" pos:end="60:79">(<argument pos:start="59:17" pos:end="59:21"><expr pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:21">avctx</name></expr></argument>, <argument pos:start="59:24" pos:end="59:56"><expr pos:start="59:24" pos:end="59:56"><literal type="string" pos:start="59:24" pos:end="59:56">"Subtitle Placement x=%d, y=%d\n"</literal></expr></argument>,
                <argument pos:start="60:17" pos:end="60:46"><expr pos:start="60:17" pos:end="60:46"><name pos:start="60:17" pos:end="60:44"><name pos:start="60:17" pos:end="60:19">ctx</name><operator pos:start="60:20" pos:end="60:21">-&gt;</operator><name pos:start="60:22" pos:end="60:33">presentation</name><operator pos:start="60:34" pos:end="60:34">.</operator><name pos:start="60:35" pos:end="60:41">objects</name><index pos:start="60:42" pos:end="60:44">[<expr pos:start="60:43" pos:end="60:43"><name pos:start="60:43" pos:end="60:43">i</name></expr>]</index></name><operator pos:start="60:45" pos:end="60:45">.</operator><name pos:start="60:46" pos:end="60:46">x</name></expr></argument>, <argument pos:start="60:49" pos:end="60:78"><expr pos:start="60:49" pos:end="60:78"><name pos:start="60:49" pos:end="60:76"><name pos:start="60:49" pos:end="60:51">ctx</name><operator pos:start="60:52" pos:end="60:53">-&gt;</operator><name pos:start="60:54" pos:end="60:65">presentation</name><operator pos:start="60:66" pos:end="60:66">.</operator><name pos:start="60:67" pos:end="60:73">objects</name><index pos:start="60:74" pos:end="60:76">[<expr pos:start="60:75" pos:end="60:75"><name pos:start="60:75" pos:end="60:75">i</name></expr>]</index></name><operator pos:start="60:77" pos:end="60:77">.</operator><name pos:start="60:78" pos:end="60:78">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="61:9" pos:end="70:13"><if pos:start="61:9" pos:end="70:13">if <condition pos:start="61:12" pos:end="62:59">(<expr pos:start="61:13" pos:end="62:58"><name pos:start="61:13" pos:end="61:40"><name pos:start="61:13" pos:end="61:15">ctx</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:29">presentation</name><operator pos:start="61:30" pos:end="61:30">.</operator><name pos:start="61:31" pos:end="61:37">objects</name><index pos:start="61:38" pos:end="61:40">[<expr pos:start="61:39" pos:end="61:39"><name pos:start="61:39" pos:end="61:39">i</name></expr>]</index></name><operator pos:start="61:41" pos:end="61:41">.</operator><name pos:start="61:42" pos:end="61:42">x</name> <operator pos:start="61:44" pos:end="61:44">&gt;</operator> <name pos:start="61:46" pos:end="61:57"><name pos:start="61:46" pos:end="61:50">avctx</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:57">width</name></name> <operator pos:start="61:59" pos:end="61:60">||</operator>
            <name pos:start="62:13" pos:end="62:40"><name pos:start="62:13" pos:end="62:15">ctx</name><operator pos:start="62:16" pos:end="62:17">-&gt;</operator><name pos:start="62:18" pos:end="62:29">presentation</name><operator pos:start="62:30" pos:end="62:30">.</operator><name pos:start="62:31" pos:end="62:37">objects</name><index pos:start="62:38" pos:end="62:40">[<expr pos:start="62:39" pos:end="62:39"><name pos:start="62:39" pos:end="62:39">i</name></expr>]</index></name><operator pos:start="62:41" pos:end="62:41">.</operator><name pos:start="62:42" pos:end="62:42">y</name> <operator pos:start="62:44" pos:end="62:44">&gt;</operator> <name pos:start="62:46" pos:end="62:58"><name pos:start="62:46" pos:end="62:50">avctx</name><operator pos:start="62:51" pos:end="62:52">-&gt;</operator><name pos:start="62:53" pos:end="62:58">height</name></name></expr>)</condition> <block pos:start="62:61" pos:end="70:13">{<block_content pos:start="63:13" pos:end="70:13">
            <expr_stmt pos:start="63:13" pos:end="66:49"><expr pos:start="63:13" pos:end="66:48"><call pos:start="63:13" pos:end="66:48"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="66:48">(<argument pos:start="63:20" pos:end="63:24"><expr pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:24">avctx</name></expr></argument>, <argument pos:start="63:27" pos:end="63:38"><expr pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:41" pos:end="63:126"><expr pos:start="63:41" pos:end="63:126"><literal type="string" pos:start="63:41" pos:end="63:126">"Subtitle out of video bounds. x = %d, y = %d, video width = %d, video height = %d.\n"</literal></expr></argument>,
                   <argument pos:start="64:20" pos:end="64:49"><expr pos:start="64:20" pos:end="64:49"><name pos:start="64:20" pos:end="64:47"><name pos:start="64:20" pos:end="64:22">ctx</name><operator pos:start="64:23" pos:end="64:24">-&gt;</operator><name pos:start="64:25" pos:end="64:36">presentation</name><operator pos:start="64:37" pos:end="64:37">.</operator><name pos:start="64:38" pos:end="64:44">objects</name><index pos:start="64:45" pos:end="64:47">[<expr pos:start="64:46" pos:end="64:46"><name pos:start="64:46" pos:end="64:46">i</name></expr>]</index></name><operator pos:start="64:48" pos:end="64:48">.</operator><name pos:start="64:49" pos:end="64:49">x</name></expr></argument>,
                   <argument pos:start="65:20" pos:end="65:49"><expr pos:start="65:20" pos:end="65:49"><name pos:start="65:20" pos:end="65:47"><name pos:start="65:20" pos:end="65:22">ctx</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:36">presentation</name><operator pos:start="65:37" pos:end="65:37">.</operator><name pos:start="65:38" pos:end="65:44">objects</name><index pos:start="65:45" pos:end="65:47">[<expr pos:start="65:46" pos:end="65:46"><name pos:start="65:46" pos:end="65:46">i</name></expr>]</index></name><operator pos:start="65:48" pos:end="65:48">.</operator><name pos:start="65:49" pos:end="65:49">y</name></expr></argument>,
                    <argument pos:start="66:21" pos:end="66:32"><expr pos:start="66:21" pos:end="66:32"><name pos:start="66:21" pos:end="66:32"><name pos:start="66:21" pos:end="66:25">avctx</name><operator pos:start="66:26" pos:end="66:27">-&gt;</operator><name pos:start="66:28" pos:end="66:32">width</name></name></expr></argument>, <argument pos:start="66:35" pos:end="66:47"><expr pos:start="66:35" pos:end="66:47"><name pos:start="66:35" pos:end="66:47"><name pos:start="66:35" pos:end="66:39">avctx</name><operator pos:start="66:40" pos:end="66:41">-&gt;</operator><name pos:start="66:42" pos:end="66:47">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="67:13" pos:end="67:47"><expr pos:start="67:13" pos:end="67:46"><name pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:15">ctx</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:29">presentation</name><operator pos:start="67:30" pos:end="67:30">.</operator><name pos:start="67:31" pos:end="67:37">objects</name><index pos:start="67:38" pos:end="67:40">[<expr pos:start="67:39" pos:end="67:39"><name pos:start="67:39" pos:end="67:39">i</name></expr>]</index></name><operator pos:start="67:41" pos:end="67:41">.</operator><name pos:start="67:42" pos:end="67:42">x</name> <operator pos:start="67:44" pos:end="67:44">=</operator> <literal type="number" pos:start="67:46" pos:end="67:46">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="68:13" pos:end="68:47"><expr pos:start="68:13" pos:end="68:46"><name pos:start="68:13" pos:end="68:40"><name pos:start="68:13" pos:end="68:15">ctx</name><operator pos:start="68:16" pos:end="68:17">-&gt;</operator><name pos:start="68:18" pos:end="68:29">presentation</name><operator pos:start="68:30" pos:end="68:30">.</operator><name pos:start="68:31" pos:end="68:37">objects</name><index pos:start="68:38" pos:end="68:40">[<expr pos:start="68:39" pos:end="68:39"><name pos:start="68:39" pos:end="68:39">i</name></expr>]</index></name><operator pos:start="68:41" pos:end="68:41">.</operator><name pos:start="68:42" pos:end="68:42">y</name> <operator pos:start="68:44" pos:end="68:44">=</operator> <literal type="number" pos:start="68:46" pos:end="68:46">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="69:13" pos:end="70:13"><if pos:start="69:13" pos:end="70:13">if <condition pos:start="69:16" pos:end="69:55">(<expr pos:start="69:17" pos:end="69:54"><name pos:start="69:17" pos:end="69:38"><name pos:start="69:17" pos:end="69:21">avctx</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:38">err_recognition</name></name> <operator pos:start="69:40" pos:end="69:40">&amp;</operator> <name pos:start="69:42" pos:end="69:54">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="69:57" pos:end="70:13">{<block_content pos:start="70:5" pos:end="70:13">
    <return pos:start="70:5" pos:end="70:13">return <expr pos:start="70:12" pos:end="70:12"><literal type="number" pos:start="70:12" pos:end="70:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
