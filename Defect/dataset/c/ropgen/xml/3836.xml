<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3836.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:27">serial_xmit</name><parameter_list pos:start="1:28" pos:end="1:78">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:38">GIOChannel</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">chan</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:58">GIOCondition</name></type> <name pos:start="1:60" pos:end="1:63">cond</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:69">void</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:77">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:17">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SerialState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="37:5"><if pos:start="9:5" pos:end="37:5">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:20">tsr_retry</name></name> <operator pos:start="9:22" pos:end="9:23">&lt;=</operator> <literal type="number" pos:start="9:25" pos:end="9:25">0</literal></expr>)</condition> <block pos:start="9:28" pos:end="37:5">{<block_content pos:start="11:9" pos:end="35:9">

        <if_stmt pos:start="11:9" pos:end="35:9"><if pos:start="11:9" pos:end="23:9">if <condition pos:start="11:12" pos:end="11:33">(<expr pos:start="11:13" pos:end="11:32"><name pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:13">s</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:18">fcr</name></name> <operator pos:start="11:20" pos:end="11:20">&amp;</operator> <name pos:start="11:22" pos:end="11:32">UART_FCR_FE</name></expr>)</condition> <block pos:start="11:35" pos:end="23:9">{<block_content pos:start="13:13" pos:end="21:13">

            <expr_stmt pos:start="13:13" pos:end="15:53"><expr pos:start="13:13" pos:end="15:52"><name pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">tsr</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <ternary pos:start="13:22" pos:end="15:52"><condition pos:start="13:22" pos:end="13:51"><expr pos:start="13:22" pos:end="13:49"><call pos:start="13:22" pos:end="13:49"><name pos:start="13:22" pos:end="13:34">fifo8_is_full</name><argument_list pos:start="13:35" pos:end="13:49">(<argument pos:start="13:36" pos:end="13:48"><expr pos:start="13:36" pos:end="13:48"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:48"><name pos:start="13:37" pos:end="13:37">s</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:48">xmit_fifo</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="15:25" pos:end="15:25">

                        <expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr> </then><else pos:start="15:27" pos:end="15:52">: <expr pos:start="15:29" pos:end="15:52"><call pos:start="15:29" pos:end="15:52"><name pos:start="15:29" pos:end="15:37">fifo8_pop</name><argument_list pos:start="15:38" pos:end="15:52">(<argument pos:start="15:39" pos:end="15:51"><expr pos:start="15:39" pos:end="15:51"><operator pos:start="15:39" pos:end="15:39">&amp;</operator><name pos:start="15:40" pos:end="15:51"><name pos:start="15:40" pos:end="15:40">s</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:51">xmit_fifo</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="17:13" pos:end="21:13"><if pos:start="17:13" pos:end="21:13">if <condition pos:start="17:16" pos:end="17:34">(<expr pos:start="17:17" pos:end="17:33"><operator pos:start="17:17" pos:end="17:17">!</operator><name pos:start="17:18" pos:end="17:33"><name pos:start="17:18" pos:end="17:18">s</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:29">xmit_fifo</name><operator pos:start="17:30" pos:end="17:30">.</operator><name pos:start="17:31" pos:end="17:33">num</name></name></expr>)</condition> <block pos:start="17:36" pos:end="21:13">{<block_content pos:start="19:17" pos:end="19:40">

                <expr_stmt pos:start="19:17" pos:end="19:40"><expr pos:start="19:17" pos:end="19:39"><name pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:22">lsr</name></name> <operator pos:start="19:24" pos:end="19:25">|=</operator> <name pos:start="19:27" pos:end="19:39">UART_LSR_THRE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="23:11" pos:end="27:9">else if <condition pos:start="23:19" pos:end="23:44">(<expr pos:start="23:20" pos:end="23:43"><operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:26">lsr</name></name> <operator pos:start="23:28" pos:end="23:28">&amp;</operator> <name pos:start="23:30" pos:end="23:42">UART_LSR_THRE</name><operator pos:start="23:43" pos:end="23:43">)</operator></expr>)</condition> <block pos:start="23:46" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:25">

            <return pos:start="25:13" pos:end="25:25">return <expr pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:24">FALSE</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="27:11" pos:end="35:9">else <block pos:start="27:16" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:37">

            <expr_stmt pos:start="29:13" pos:end="29:28"><expr pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:18">tsr</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:27"><name pos:start="29:22" pos:end="29:22">s</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:27">thr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:36"><expr pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:18">lsr</name></name> <operator pos:start="31:20" pos:end="31:21">|=</operator> <name pos:start="31:23" pos:end="31:35">UART_LSR_THRE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:37"><expr pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:18">lsr</name></name> <operator pos:start="33:20" pos:end="33:21">&amp;=</operator> <operator pos:start="33:23" pos:end="33:23">~</operator><name pos:start="33:24" pos:end="33:36">UART_LSR_TEMT</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="65:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:31">(<expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:14">mcr</name></name> <operator pos:start="41:16" pos:end="41:16">&amp;</operator> <name pos:start="41:18" pos:end="41:30">UART_MCR_LOOP</name></expr>)</condition> <block pos:start="41:33" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:39">

        <comment type="block" pos:start="43:9" pos:end="43:64">/* in loopback mode, say that we just received a char */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:39"><expr pos:start="45:9" pos:end="45:38"><call pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:23">serial_receive1</name><argument_list pos:start="45:24" pos:end="45:38">(<argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">s</name></expr></argument>, <argument pos:start="45:28" pos:end="45:34"><expr pos:start="45:28" pos:end="45:34"><operator pos:start="45:28" pos:end="45:28">&amp;</operator><name pos:start="45:29" pos:end="45:34"><name pos:start="45:29" pos:end="45:29">s</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:34">tsr</name></name></expr></argument>, <argument pos:start="45:37" pos:end="45:37"><expr pos:start="45:37" pos:end="45:37"><literal type="number" pos:start="45:37" pos:end="45:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="61:5">else if <condition pos:start="47:15" pos:end="47:58">(<expr pos:start="47:16" pos:end="47:57"><call pos:start="47:16" pos:end="47:52"><name pos:start="47:16" pos:end="47:32">qemu_chr_fe_write</name><argument_list pos:start="47:33" pos:end="47:52">(<argument pos:start="47:34" pos:end="47:39"><expr pos:start="47:34" pos:end="47:39"><name pos:start="47:34" pos:end="47:39"><name pos:start="47:34" pos:end="47:34">s</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:39">chr</name></name></expr></argument>, <argument pos:start="47:42" pos:end="47:48"><expr pos:start="47:42" pos:end="47:48"><operator pos:start="47:42" pos:end="47:42">&amp;</operator><name pos:start="47:43" pos:end="47:48"><name pos:start="47:43" pos:end="47:43">s</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:48">tsr</name></name></expr></argument>, <argument pos:start="47:51" pos:end="47:51"><expr pos:start="47:51" pos:end="47:51"><literal type="number" pos:start="47:51" pos:end="47:51">1</literal></expr></argument>)</argument_list></call> <operator pos:start="47:54" pos:end="47:55">!=</operator> <literal type="number" pos:start="47:57" pos:end="47:57">1</literal></expr>)</condition> <block pos:start="47:60" pos:end="61:5">{<block_content pos:start="49:9" pos:end="59:25">

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="51:72">(<expr pos:start="49:13" pos:end="51:71"><name pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:24">tsr_retry</name></name> <operator pos:start="49:26" pos:end="49:27">&gt;=</operator> <literal type="number" pos:start="49:29" pos:end="49:29">0</literal> <operator pos:start="49:31" pos:end="49:32">&amp;&amp;</operator> <name pos:start="49:34" pos:end="49:45"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:45">tsr_retry</name></name> <operator pos:start="49:47" pos:end="49:47">&lt;</operator> <name pos:start="49:49" pos:end="49:62">MAX_XMIT_RETRY</name> <operator pos:start="49:64" pos:end="49:65">&amp;&amp;</operator>

            <call pos:start="51:13" pos:end="51:67"><name pos:start="51:13" pos:end="51:33">qemu_chr_fe_add_watch</name><argument_list pos:start="51:34" pos:end="51:67">(<argument pos:start="51:35" pos:end="51:40"><expr pos:start="51:35" pos:end="51:40"><name pos:start="51:35" pos:end="51:40"><name pos:start="51:35" pos:end="51:35">s</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:40">chr</name></name></expr></argument>, <argument pos:start="51:43" pos:end="51:50"><expr pos:start="51:43" pos:end="51:50"><name pos:start="51:43" pos:end="51:50">G_IO_OUT</name></expr></argument>, <argument pos:start="51:53" pos:end="51:63"><expr pos:start="51:53" pos:end="51:63"><name pos:start="51:53" pos:end="51:63">serial_xmit</name></expr></argument>, <argument pos:start="51:66" pos:end="51:66"><expr pos:start="51:66" pos:end="51:66"><name pos:start="51:66" pos:end="51:66">s</name></expr></argument>)</argument_list></call> <operator pos:start="51:69" pos:end="51:69">&gt;</operator> <literal type="number" pos:start="51:71" pos:end="51:71">0</literal></expr>)</condition> <block pos:start="51:74" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:25">

            <expr_stmt pos:start="53:13" pos:end="53:27"><expr pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:24">tsr_retry</name></name><operator pos:start="53:25" pos:end="53:26">++</operator></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:25">return <expr pos:start="55:20" pos:end="55:24"><name pos:start="55:20" pos:end="55:24">FALSE</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:25"><expr pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:20">tsr_retry</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="65:5">else <block pos:start="61:12" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:25">

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:20">tsr_retry</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <literal type="number" pos:start="63:24" pos:end="63:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:60"><expr pos:start="69:5" pos:end="69:59"><name pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:19">last_xmit_ts</name></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:59"><name pos:start="69:23" pos:end="69:39">qemu_clock_get_ns</name><argument_list pos:start="69:40" pos:end="69:59">(<argument pos:start="69:41" pos:end="69:58"><expr pos:start="69:41" pos:end="69:58"><name pos:start="69:41" pos:end="69:58">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:31">(<expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:14">lsr</name></name> <operator pos:start="73:16" pos:end="73:16">&amp;</operator> <name pos:start="73:18" pos:end="73:30">UART_LSR_THRE</name></expr>)</condition> <block pos:start="73:33" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:29">

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:14">lsr</name></name> <operator pos:start="75:16" pos:end="75:17">|=</operator> <name pos:start="75:19" pos:end="75:31">UART_LSR_TEMT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:23">thr_ipending</name></name> <operator pos:start="77:25" pos:end="77:25">=</operator> <literal type="number" pos:start="77:27" pos:end="77:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><call pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:25">serial_update_irq</name><argument_list pos:start="79:26" pos:end="79:28">(<argument pos:start="79:27" pos:end="79:27"><expr pos:start="79:27" pos:end="79:27"><name pos:start="79:27" pos:end="79:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:17">return <expr pos:start="85:12" pos:end="85:16"><name pos:start="85:12" pos:end="85:16">FALSE</name></expr>;</return>

</block_content>}</block></function>
</unit>
