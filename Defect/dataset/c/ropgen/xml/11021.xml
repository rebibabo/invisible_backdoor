<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11021.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">lmlm4_read_packet</name><parameter_list pos:start="1:29" pos:end="1:63">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">AVPacket</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">pkt</name></decl></parameter>)</parameter_list> <block pos:start="1:65" pos:end="77:1">{<block_content pos:start="3:5" pos:end="75:15">

    <decl_stmt pos:start="3:5" pos:end="3:28"><decl pos:start="3:5" pos:end="3:27"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">AVIOContext</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:19">pb</name> <init pos:start="3:21" pos:end="3:27">= <expr pos:start="3:23" pos:end="3:27"><name pos:start="3:23" pos:end="3:27"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:62"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:27">frame_type</name></decl>, <decl pos:start="7:30" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:30" pos:end="7:40">packet_size</name></decl>, <decl pos:start="7:43" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:43" pos:end="7:49">padding</name></decl>, <decl pos:start="7:52" pos:end="7:61"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:52" pos:end="7:61">frame_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:18"><expr pos:start="11:5" pos:end="11:17"><call pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:13">avio_rb16</name><argument_list pos:start="11:14" pos:end="11:17">(<argument pos:start="11:15" pos:end="11:16"><expr pos:start="11:15" pos:end="11:16"><name pos:start="11:15" pos:end="11:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                       <comment type="block" pos:start="11:42" pos:end="11:61">/* channel number */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:14">frame_type</name>  <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:31"><name pos:start="13:19" pos:end="13:27">avio_rb16</name><argument_list pos:start="13:28" pos:end="13:31">(<argument pos:start="13:29" pos:end="13:30"><expr pos:start="13:29" pos:end="13:30"><name pos:start="13:29" pos:end="13:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:15">packet_size</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <call pos:start="15:19" pos:end="15:31"><name pos:start="15:19" pos:end="15:27">avio_rb32</name><argument_list pos:start="15:28" pos:end="15:31">(<argument pos:start="15:29" pos:end="15:30"><expr pos:start="15:29" pos:end="15:30"><name pos:start="15:29" pos:end="15:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:11">padding</name>     <operator pos:start="17:17" pos:end="17:17">=</operator> <operator pos:start="17:19" pos:end="17:19">-</operator><name pos:start="17:20" pos:end="17:30">packet_size</name> <operator pos:start="17:32" pos:end="17:32">&amp;</operator> <literal type="number" pos:start="17:34" pos:end="17:36">511</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:14">frame_size</name>  <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:29">packet_size</name> <operator pos:start="19:31" pos:end="19:31">-</operator> <literal type="number" pos:start="19:33" pos:end="19:33">8</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:66">(<expr pos:start="23:9" pos:end="23:65"><name pos:start="23:9" pos:end="23:18">frame_type</name> <operator pos:start="23:20" pos:end="23:20">&gt;</operator> <name pos:start="23:22" pos:end="23:34">LMLM4_MPEG1L2</name> <operator pos:start="23:36" pos:end="23:37">||</operator> <name pos:start="23:39" pos:end="23:48">frame_type</name> <operator pos:start="23:50" pos:end="23:51">==</operator> <name pos:start="23:53" pos:end="23:65">LMLM4_INVALID</name></expr>)</condition> <block pos:start="23:68" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:28">

        <expr_stmt pos:start="25:9" pos:end="25:71"><expr pos:start="25:9" pos:end="25:70"><call pos:start="25:9" pos:end="25:70"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:70">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">s</name></expr></argument>, <argument pos:start="25:19" pos:end="25:30"><expr pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:33" pos:end="25:69"><expr pos:start="25:33" pos:end="25:69"><literal type="string" pos:start="25:33" pos:end="25:69">"invalid or unsupported frame_type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:28">return <expr pos:start="27:16" pos:end="27:27"><call pos:start="27:16" pos:end="27:27"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:27">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:44">(<expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:19">packet_size</name> <operator pos:start="31:21" pos:end="31:21">&gt;</operator> <name pos:start="31:23" pos:end="31:43">LMLM4_MAX_PACKET_SIZE</name></expr>)</condition> <block pos:start="31:46" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:28">

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><call pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:64">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">s</name></expr></argument>, <argument pos:start="33:19" pos:end="33:30"><expr pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:33" pos:end="33:63"><expr pos:start="33:33" pos:end="33:63"><literal type="string" pos:start="33:33" pos:end="33:63">"packet size exceeds maximum\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:28">return <expr pos:start="35:16" pos:end="35:27"><call pos:start="35:16" pos:end="35:27"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:27">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:28"><if pos:start="41:5" pos:end="43:28">if <condition pos:start="41:8" pos:end="41:56">(<expr pos:start="41:9" pos:end="41:55"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:12">ret</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:49"><name pos:start="41:16" pos:end="41:28">av_get_packet</name><argument_list pos:start="41:29" pos:end="41:49">(<argument pos:start="41:30" pos:end="41:31"><expr pos:start="41:30" pos:end="41:31"><name pos:start="41:30" pos:end="41:31">pb</name></expr></argument>, <argument pos:start="41:34" pos:end="41:36"><expr pos:start="41:34" pos:end="41:36"><name pos:start="41:34" pos:end="41:36">pkt</name></expr></argument>, <argument pos:start="41:39" pos:end="41:48"><expr pos:start="41:39" pos:end="41:48"><name pos:start="41:39" pos:end="41:48">frame_size</name></expr></argument>)</argument_list></call><operator pos:start="41:50" pos:end="41:50">)</operator> <operator pos:start="41:52" pos:end="41:53">&lt;=</operator> <literal type="number" pos:start="41:55" pos:end="41:55">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:28"><block_content pos:start="43:9" pos:end="43:28">

        <return pos:start="43:9" pos:end="43:28">return <expr pos:start="43:16" pos:end="43:27"><call pos:start="43:16" pos:end="43:27"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:27">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><call pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:13">avio_skip</name><argument_list pos:start="47:14" pos:end="47:26">(<argument pos:start="47:15" pos:end="47:16"><expr pos:start="47:15" pos:end="47:16"><name pos:start="47:15" pos:end="47:16">pb</name></expr></argument>, <argument pos:start="47:19" pos:end="47:25"><expr pos:start="47:19" pos:end="47:25"><name pos:start="47:19" pos:end="47:25">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="51:5" pos:end="71:5">switch <condition pos:start="51:12" pos:end="51:23">(<expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:22">frame_type</name></expr>)</condition> <block pos:start="51:25" pos:end="71:5">{<block_content pos:start="53:9" pos:end="69:18">

        <case pos:start="53:9" pos:end="53:27">case <expr pos:start="53:14" pos:end="53:26"><name pos:start="53:14" pos:end="53:26">LMLM4_I_FRAME</name></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:41"><expr pos:start="55:13" pos:end="55:40"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:15">pkt</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:22">flags</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:40">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

        <case pos:start="57:9" pos:end="57:27">case <expr pos:start="57:14" pos:end="57:26"><name pos:start="57:14" pos:end="57:26">LMLM4_P_FRAME</name></expr>:</case>

        <case pos:start="59:9" pos:end="59:27">case <expr pos:start="59:14" pos:end="59:26"><name pos:start="59:14" pos:end="59:26">LMLM4_B_FRAME</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:34"><expr pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:15">pkt</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:29">stream_index</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <literal type="number" pos:start="61:33" pos:end="61:33">0</literal></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:27">case <expr pos:start="65:14" pos:end="65:26"><name pos:start="65:14" pos:end="65:26">LMLM4_MPEG1L2</name></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:34"><expr pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:15">pkt</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:29">stream_index</name></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <literal type="number" pos:start="67:33" pos:end="67:33">1</literal></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

    </block_content>}</block></switch>



    <return pos:start="75:5" pos:end="75:15">return <expr pos:start="75:12" pos:end="75:14"><name pos:start="75:12" pos:end="75:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
