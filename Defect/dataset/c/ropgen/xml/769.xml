<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/769.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">write_refcount_block_entries</name><parameter_list pos:start="1:40" pos:end="3:67">(<parameter pos:start="1:41" pos:end="1:60"><decl pos:start="1:41" pos:end="1:60"><type pos:start="1:41" pos:end="1:60"><name pos:start="1:41" pos:end="1:56">BlockDriverState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">bs</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:33"><type pos:start="3:5" pos:end="3:33"><name pos:start="3:5" pos:end="3:11">int64_t</name></type> <name pos:start="3:13" pos:end="3:33">refcount_block_offset</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:50"><decl pos:start="3:36" pos:end="3:50"><type pos:start="3:36" pos:end="3:50"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:50">first_index</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:66"><decl pos:start="3:53" pos:end="3:66"><type pos:start="3:53" pos:end="3:66"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:66">last_index</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:15">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:30">cache_refcount_updates</name></expr>)</condition> <block pos:start="15:33" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:19">first_index</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>)</condition> <block pos:start="23:26" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:15">first_index</name> <operator pos:start="31:17" pos:end="31:18">&amp;=</operator> <operator pos:start="31:20" pos:end="31:20">~</operator><operator pos:start="31:21" pos:end="31:21">(</operator><name pos:start="31:22" pos:end="31:41">REFCOUNTS_PER_SECTOR</name> <operator pos:start="31:43" pos:end="31:43">-</operator> <literal type="number" pos:start="31:45" pos:end="31:45">1</literal><operator pos:start="31:46" pos:end="31:46">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:38"><expr pos:start="33:5" pos:end="35:37"><name pos:start="33:5" pos:end="33:14">last_index</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <operator pos:start="33:18" pos:end="33:18">(</operator><name pos:start="33:19" pos:end="33:28">last_index</name> <operator pos:start="33:30" pos:end="33:30">+</operator> <name pos:start="33:32" pos:end="33:51">REFCOUNTS_PER_SECTOR</name><operator pos:start="33:52" pos:end="33:52">)</operator>

        <operator pos:start="35:9" pos:end="35:9">&amp;</operator> <operator pos:start="35:11" pos:end="35:11">~</operator><operator pos:start="35:12" pos:end="35:12">(</operator><name pos:start="35:13" pos:end="35:32">REFCOUNTS_PER_SECTOR</name> <operator pos:start="35:34" pos:end="35:34">-</operator> <literal type="number" pos:start="35:36" pos:end="35:36">1</literal><operator pos:start="35:37" pos:end="35:37">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:56"><expr pos:start="39:5" pos:end="39:55"><name pos:start="39:5" pos:end="39:8">size</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <operator pos:start="39:12" pos:end="39:12">(</operator><name pos:start="39:13" pos:end="39:22">last_index</name> <operator pos:start="39:24" pos:end="39:24">-</operator> <name pos:start="39:26" pos:end="39:36">first_index</name><operator pos:start="39:37" pos:end="39:37">)</operator> <operator pos:start="39:39" pos:end="39:40">&lt;&lt;</operator> <name pos:start="39:42" pos:end="39:55">REFCOUNT_SHIFT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:56"><expr pos:start="43:5" pos:end="43:55"><call pos:start="43:5" pos:end="43:55"><name pos:start="43:5" pos:end="43:16">BLKDBG_EVENT</name><argument_list pos:start="43:17" pos:end="43:55">(<argument pos:start="43:18" pos:end="43:25"><expr pos:start="43:18" pos:end="43:25"><name pos:start="43:18" pos:end="43:25"><name pos:start="43:18" pos:end="43:19">bs</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:25">file</name></name></expr></argument>, <argument pos:start="43:28" pos:end="43:54"><expr pos:start="43:28" pos:end="43:54"><name pos:start="43:28" pos:end="43:54">BLKDBG_REFBLOCK_UPDATE_PART</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="49:53"><expr pos:start="45:5" pos:end="49:52"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="49:52"><name pos:start="45:11" pos:end="45:21">bdrv_pwrite</name><argument_list pos:start="45:22" pos:end="49:52">(<argument pos:start="45:23" pos:end="45:30"><expr pos:start="45:23" pos:end="45:30"><name pos:start="45:23" pos:end="45:30"><name pos:start="45:23" pos:end="45:24">bs</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:30">file</name></name></expr></argument>,

        <argument pos:start="47:9" pos:end="47:63"><expr pos:start="47:9" pos:end="47:63"><name pos:start="47:9" pos:end="47:29">refcount_block_offset</name> <operator pos:start="47:31" pos:end="47:31">+</operator> <operator pos:start="47:33" pos:end="47:33">(</operator><name pos:start="47:34" pos:end="47:44">first_index</name> <operator pos:start="47:46" pos:end="47:47">&lt;&lt;</operator> <name pos:start="47:49" pos:end="47:62">REFCOUNT_SHIFT</name><operator pos:start="47:63" pos:end="47:63">)</operator></expr></argument>,

        <argument pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:45"><operator pos:start="49:9" pos:end="49:9">&amp;</operator><name pos:start="49:10" pos:end="49:45"><name pos:start="49:10" pos:end="49:10">s</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:32">refcount_block_cache</name><index pos:start="49:33" pos:end="49:45">[<expr pos:start="49:34" pos:end="49:44"><name pos:start="49:34" pos:end="49:44">first_index</name></expr>]</index></name></expr></argument>, <argument pos:start="49:48" pos:end="49:51"><expr pos:start="49:48" pos:end="49:51"><name pos:start="49:48" pos:end="49:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition> <block pos:start="51:18" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:19">

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
