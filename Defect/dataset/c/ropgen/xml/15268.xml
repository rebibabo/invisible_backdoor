<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15268.c" pos:tabs="8"><function pos:start="1:1" pos:end="2903:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">DisasJumpType</name></type> <name pos:start="1:22" pos:end="1:34">translate_one</name><parameter_list pos:start="1:35" pos:end="1:68">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:47">DisasContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">ctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:67"><decl pos:start="1:55" pos:end="1:67"><type pos:start="1:55" pos:end="1:67"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:67">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2903:1">{<block_content pos:start="5:5" pos:end="2901:15">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:18">disp21</name></decl>, <decl pos:start="5:21" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:21" pos:end="5:26">disp16</name></decl>, <decl pos:start="5:29" pos:end="5:58"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:29" pos:end="5:34">disp12</name> <name pos:start="5:36" pos:end="5:48">__attribute__</name><argument_list pos:start="5:49" pos:end="5:58">(<argument pos:start="5:50" pos:end="5:57"><expr pos:start="5:50" pos:end="5:57"><operator pos:start="5:50" pos:end="5:50">(</operator><name pos:start="5:51" pos:end="5:56">unused</name><operator pos:start="5:57" pos:end="5:57">)</operator></expr></argument>)</argument_list></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:17">fn11</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:15">opc</name></decl>, <decl pos:start="9:18" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:18" pos:end="9:19">ra</name></decl>, <decl pos:start="9:22" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:22" pos:end="9:23">rb</name></decl>, <decl pos:start="9:26" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:26" pos:end="9:27">rc</name></decl>, <decl pos:start="9:30" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:30" pos:end="9:33">fpfn</name></decl>, <decl pos:start="9:36" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:36" pos:end="9:38">fn7</name></decl>, <decl pos:start="9:41" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:41" pos:end="9:43">lit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:14">islit</name></decl>, <decl pos:start="11:17" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:17" pos:end="11:26">real_islit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">TCGv</name></type> <name pos:start="13:10" pos:end="13:11">va</name></decl>, <decl pos:start="13:14" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:14" pos:end="13:15">vb</name></decl>, <decl pos:start="13:18" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:18" pos:end="13:19">vc</name></decl>, <decl pos:start="13:22" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:22" pos:end="13:24">tmp</name></decl>, <decl pos:start="13:27" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:27" pos:end="13:30">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">TCGv_i32</name></type> <name pos:start="15:14" pos:end="15:16">t32</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:17">DisasJumpType</name></type> <name pos:start="17:19" pos:end="17:21">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:39">/* Decode all instruction fields */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:7">opc</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:32"><name pos:start="23:11" pos:end="23:19">extract32</name><argument_list pos:start="23:20" pos:end="23:32">(<argument pos:start="23:21" pos:end="23:24"><expr pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:24">insn</name></expr></argument>, <argument pos:start="23:27" pos:end="23:28"><expr pos:start="23:27" pos:end="23:28"><literal type="number" pos:start="23:27" pos:end="23:28">26</literal></expr></argument>, <argument pos:start="23:31" pos:end="23:31"><expr pos:start="23:31" pos:end="23:31"><literal type="number" pos:start="23:31" pos:end="23:31">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:6">ra</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:31"><name pos:start="25:10" pos:end="25:18">extract32</name><argument_list pos:start="25:19" pos:end="25:31">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">insn</name></expr></argument>, <argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><literal type="number" pos:start="25:26" pos:end="25:27">21</literal></expr></argument>, <argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:6">rb</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:31"><name pos:start="27:10" pos:end="27:18">extract32</name><argument_list pos:start="27:19" pos:end="27:31">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">insn</name></expr></argument>, <argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><literal type="number" pos:start="27:26" pos:end="27:27">16</literal></expr></argument>, <argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:6">rc</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:18">extract32</name><argument_list pos:start="29:19" pos:end="29:30">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">insn</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr></argument>, <argument pos:start="29:29" pos:end="29:29"><expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:14">real_islit</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:22">islit</name> <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:47"><name pos:start="31:26" pos:end="31:34">extract32</name><argument_list pos:start="31:35" pos:end="31:47">(<argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><name pos:start="31:36" pos:end="31:39">insn</name></expr></argument>, <argument pos:start="31:42" pos:end="31:43"><expr pos:start="31:42" pos:end="31:43"><literal type="number" pos:start="31:42" pos:end="31:43">12</literal></expr></argument>, <argument pos:start="31:46" pos:end="31:46"><expr pos:start="31:46" pos:end="31:46"><literal type="number" pos:start="31:46" pos:end="31:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:7">lit</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:32"><name pos:start="33:11" pos:end="33:19">extract32</name><argument_list pos:start="33:20" pos:end="33:32">(<argument pos:start="33:21" pos:end="33:24"><expr pos:start="33:21" pos:end="33:24"><name pos:start="33:21" pos:end="33:24">insn</name></expr></argument>, <argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><literal type="number" pos:start="33:27" pos:end="33:28">13</literal></expr></argument>, <argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:10">disp21</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:36"><name pos:start="37:14" pos:end="37:23">sextract32</name><argument_list pos:start="37:24" pos:end="37:36">(<argument pos:start="37:25" pos:end="37:28"><expr pos:start="37:25" pos:end="37:28"><name pos:start="37:25" pos:end="37:28">insn</name></expr></argument>, <argument pos:start="37:31" pos:end="37:31"><expr pos:start="37:31" pos:end="37:31"><literal type="number" pos:start="37:31" pos:end="37:31">0</literal></expr></argument>, <argument pos:start="37:34" pos:end="37:35"><expr pos:start="37:34" pos:end="37:35"><literal type="number" pos:start="37:34" pos:end="37:35">21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:10">disp16</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:36"><name pos:start="39:14" pos:end="39:23">sextract32</name><argument_list pos:start="39:24" pos:end="39:36">(<argument pos:start="39:25" pos:end="39:28"><expr pos:start="39:25" pos:end="39:28"><name pos:start="39:25" pos:end="39:28">insn</name></expr></argument>, <argument pos:start="39:31" pos:end="39:31"><expr pos:start="39:31" pos:end="39:31"><literal type="number" pos:start="39:31" pos:end="39:31">0</literal></expr></argument>, <argument pos:start="39:34" pos:end="39:35"><expr pos:start="39:34" pos:end="39:35"><literal type="number" pos:start="39:34" pos:end="39:35">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:10">disp12</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:36"><name pos:start="41:14" pos:end="41:23">sextract32</name><argument_list pos:start="41:24" pos:end="41:36">(<argument pos:start="41:25" pos:end="41:28"><expr pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:28">insn</name></expr></argument>, <argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><literal type="number" pos:start="41:31" pos:end="41:31">0</literal></expr></argument>, <argument pos:start="41:34" pos:end="41:35"><expr pos:start="41:34" pos:end="41:35"><literal type="number" pos:start="41:34" pos:end="41:35">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:34"><expr pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:8">fn11</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:33"><name pos:start="45:12" pos:end="45:20">extract32</name><argument_list pos:start="45:21" pos:end="45:33">(<argument pos:start="45:22" pos:end="45:25"><expr pos:start="45:22" pos:end="45:25"><name pos:start="45:22" pos:end="45:25">insn</name></expr></argument>, <argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><literal type="number" pos:start="45:28" pos:end="45:28">5</literal></expr></argument>, <argument pos:start="45:31" pos:end="45:32"><expr pos:start="45:31" pos:end="45:32"><literal type="number" pos:start="45:31" pos:end="45:32">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:8">fpfn</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:32"><name pos:start="47:12" pos:end="47:20">extract32</name><argument_list pos:start="47:21" pos:end="47:32">(<argument pos:start="47:22" pos:end="47:25"><expr pos:start="47:22" pos:end="47:25"><name pos:start="47:22" pos:end="47:25">insn</name></expr></argument>, <argument pos:start="47:28" pos:end="47:28"><expr pos:start="47:28" pos:end="47:28"><literal type="number" pos:start="47:28" pos:end="47:28">5</literal></expr></argument>, <argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:32"><expr pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:7">fn7</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:31"><name pos:start="49:11" pos:end="49:19">extract32</name><argument_list pos:start="49:20" pos:end="49:31">(<argument pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:24"><name pos:start="49:21" pos:end="49:24">insn</name></expr></argument>, <argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><literal type="number" pos:start="49:27" pos:end="49:27">5</literal></expr></argument>, <argument pos:start="49:30" pos:end="49:30"><expr pos:start="49:30" pos:end="49:30"><literal type="number" pos:start="49:30" pos:end="49:30">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:27">(<expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:10">rb</name> <operator pos:start="53:12" pos:end="53:13">==</operator> <literal type="number" pos:start="53:15" pos:end="53:16">31</literal> <operator pos:start="53:18" pos:end="53:19">&amp;&amp;</operator> <operator pos:start="53:21" pos:end="53:21">!</operator><name pos:start="53:22" pos:end="53:26">islit</name></expr>)</condition> <block pos:start="53:29" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:16">

        <expr_stmt pos:start="55:9" pos:end="55:21"><expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:13">islit</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:20">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:16"><expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">lit</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <name pos:start="63:11" pos:end="63:20">DISAS_NEXT</name></expr>;</expr_stmt>

    <switch pos:start="65:5" pos:end="2897:5">switch <condition pos:start="65:12" pos:end="65:16">(<expr pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">opc</name></expr>)</condition> <block pos:start="65:18" pos:end="2897:5">{<block_content pos:start="67:5" pos:end="2895:14">

    <case pos:start="67:5" pos:end="67:14">case <expr pos:start="67:10" pos:end="67:13"><literal type="number" pos:start="67:10" pos:end="67:13">0x00</literal></expr>:</case>

        <comment type="block" pos:start="69:9" pos:end="69:22">/* CALL_PAL */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:51"><expr pos:start="71:9" pos:end="71:50"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:50"><name pos:start="71:15" pos:end="71:26">gen_call_pal</name><argument_list pos:start="71:27" pos:end="71:50">(<argument pos:start="71:28" pos:end="71:30"><expr pos:start="71:28" pos:end="71:30"><name pos:start="71:28" pos:end="71:30">ctx</name></expr></argument>, <argument pos:start="71:33" pos:end="71:49"><expr pos:start="71:33" pos:end="71:49"><name pos:start="71:33" pos:end="71:36">insn</name> <operator pos:start="71:38" pos:end="71:38">&amp;</operator> <literal type="number" pos:start="71:40" pos:end="71:49">0x03ffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:14">case <expr pos:start="75:10" pos:end="75:13"><literal type="number" pos:start="75:10" pos:end="75:13">0x01</literal></expr>:</case>

        <comment type="block" pos:start="77:9" pos:end="77:19">/* OPC01 */</comment>

        <goto pos:start="79:9" pos:end="79:25">goto <name pos:start="79:14" pos:end="79:24">invalid_opc</name>;</goto>

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x02</literal></expr>:</case>

        <comment type="block" pos:start="83:9" pos:end="83:19">/* OPC02 */</comment>

        <goto pos:start="85:9" pos:end="85:25">goto <name pos:start="85:14" pos:end="85:24">invalid_opc</name>;</goto>

    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x03</literal></expr>:</case>

        <comment type="block" pos:start="89:9" pos:end="89:19">/* OPC03 */</comment>

        <goto pos:start="91:9" pos:end="91:25">goto <name pos:start="91:14" pos:end="91:24">invalid_opc</name>;</goto>

    <case pos:start="93:5" pos:end="93:14">case <expr pos:start="93:10" pos:end="93:13"><literal type="number" pos:start="93:10" pos:end="93:13">0x04</literal></expr>:</case>

        <comment type="block" pos:start="95:9" pos:end="95:19">/* OPC04 */</comment>

        <goto pos:start="97:9" pos:end="97:25">goto <name pos:start="97:14" pos:end="97:24">invalid_opc</name>;</goto>

    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x05</literal></expr>:</case>

        <comment type="block" pos:start="101:9" pos:end="101:19">/* OPC05 */</comment>

        <goto pos:start="103:9" pos:end="103:25">goto <name pos:start="103:14" pos:end="103:24">invalid_opc</name>;</goto>

    <case pos:start="105:5" pos:end="105:14">case <expr pos:start="105:10" pos:end="105:13"><literal type="number" pos:start="105:10" pos:end="105:13">0x06</literal></expr>:</case>

        <comment type="block" pos:start="107:9" pos:end="107:19">/* OPC06 */</comment>

        <goto pos:start="109:9" pos:end="109:25">goto <name pos:start="109:14" pos:end="109:24">invalid_opc</name>;</goto>

    <case pos:start="111:5" pos:end="111:14">case <expr pos:start="111:10" pos:end="111:13"><literal type="number" pos:start="111:10" pos:end="111:13">0x07</literal></expr>:</case>

        <comment type="block" pos:start="113:9" pos:end="113:19">/* OPC07 */</comment>

        <goto pos:start="115:9" pos:end="115:25">goto <name pos:start="115:14" pos:end="115:24">invalid_opc</name>;</goto>



    <case pos:start="119:5" pos:end="119:14">case <expr pos:start="119:10" pos:end="119:13"><literal type="number" pos:start="119:10" pos:end="119:13">0x09</literal></expr>:</case>

        <comment type="block" pos:start="121:9" pos:end="121:18">/* LDAH */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:40"><expr pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:14">disp16</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <operator pos:start="123:18" pos:end="123:18">(</operator><name pos:start="123:19" pos:end="123:26">uint32_t</name><operator pos:start="123:27" pos:end="123:27">)</operator><name pos:start="123:28" pos:end="123:33">disp16</name> <operator pos:start="123:35" pos:end="123:36">&lt;&lt;</operator> <literal type="number" pos:start="123:38" pos:end="123:39">16</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="125:9" pos:end="125:26">/* fall through */</comment>

    <case pos:start="127:5" pos:end="127:14">case <expr pos:start="127:10" pos:end="127:13"><literal type="number" pos:start="127:10" pos:end="127:13">0x08</literal></expr>:</case>

        <comment type="block" pos:start="129:9" pos:end="129:17">/* LDA */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:31"><expr pos:start="131:9" pos:end="131:30"><name pos:start="131:9" pos:end="131:10">va</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <call pos:start="131:14" pos:end="131:30"><name pos:start="131:14" pos:end="131:21">dest_gpr</name><argument_list pos:start="131:22" pos:end="131:30">(<argument pos:start="131:23" pos:end="131:25"><expr pos:start="131:23" pos:end="131:25"><name pos:start="131:23" pos:end="131:25">ctx</name></expr></argument>, <argument pos:start="131:28" pos:end="131:29"><expr pos:start="131:28" pos:end="131:29"><name pos:start="131:28" pos:end="131:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="133:9" pos:end="133:57">/* It's worth special-casing immediate loads.  */</comment>

        <if_stmt pos:start="135:9" pos:end="143:9"><if pos:start="135:9" pos:end="139:9">if <condition pos:start="135:12" pos:end="135:21">(<expr pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:14">rb</name> <operator pos:start="135:16" pos:end="135:17">==</operator> <literal type="number" pos:start="135:19" pos:end="135:20">31</literal></expr>)</condition> <block pos:start="135:23" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:41">

            <expr_stmt pos:start="137:13" pos:end="137:41"><expr pos:start="137:13" pos:end="137:40"><call pos:start="137:13" pos:end="137:40"><name pos:start="137:13" pos:end="137:28">tcg_gen_movi_i64</name><argument_list pos:start="137:29" pos:end="137:40">(<argument pos:start="137:30" pos:end="137:31"><expr pos:start="137:30" pos:end="137:31"><name pos:start="137:30" pos:end="137:31">va</name></expr></argument>, <argument pos:start="137:34" pos:end="137:39"><expr pos:start="137:34" pos:end="137:39"><name pos:start="137:34" pos:end="137:39">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="139:11" pos:end="143:9">else <block pos:start="139:16" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:60">

            <expr_stmt pos:start="141:13" pos:end="141:60"><expr pos:start="141:13" pos:end="141:59"><call pos:start="141:13" pos:end="141:59"><name pos:start="141:13" pos:end="141:28">tcg_gen_addi_i64</name><argument_list pos:start="141:29" pos:end="141:59">(<argument pos:start="141:30" pos:end="141:31"><expr pos:start="141:30" pos:end="141:31"><name pos:start="141:30" pos:end="141:31">va</name></expr></argument>, <argument pos:start="141:34" pos:end="141:50"><expr pos:start="141:34" pos:end="141:50"><call pos:start="141:34" pos:end="141:50"><name pos:start="141:34" pos:end="141:41">load_gpr</name><argument_list pos:start="141:42" pos:end="141:50">(<argument pos:start="141:43" pos:end="141:45"><expr pos:start="141:43" pos:end="141:45"><name pos:start="141:43" pos:end="141:45">ctx</name></expr></argument>, <argument pos:start="141:48" pos:end="141:49"><expr pos:start="141:48" pos:end="141:49"><name pos:start="141:48" pos:end="141:49">rb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:53" pos:end="141:58"><expr pos:start="141:53" pos:end="141:58"><name pos:start="141:53" pos:end="141:58">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>



    <case pos:start="149:5" pos:end="149:14">case <expr pos:start="149:10" pos:end="149:13"><literal type="number" pos:start="149:10" pos:end="149:13">0x0A</literal></expr>:</case>

        <comment type="block" pos:start="151:9" pos:end="151:18">/* LDBU */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:27"><expr pos:start="153:9" pos:end="153:26"><call pos:start="153:9" pos:end="153:26"><name pos:start="153:9" pos:end="153:21">REQUIRE_AMASK</name><argument_list pos:start="153:22" pos:end="153:26">(<argument pos:start="153:23" pos:end="153:25"><expr pos:start="153:23" pos:end="153:25"><name pos:start="153:23" pos:end="153:25">BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:68"><expr pos:start="155:9" pos:end="155:67"><call pos:start="155:9" pos:end="155:67"><name pos:start="155:9" pos:end="155:20">gen_load_mem</name><argument_list pos:start="155:21" pos:end="155:67">(<argument pos:start="155:22" pos:end="155:24"><expr pos:start="155:22" pos:end="155:24"><name pos:start="155:22" pos:end="155:24">ctx</name></expr></argument>, <argument pos:start="155:27" pos:end="155:44"><expr pos:start="155:27" pos:end="155:44"><operator pos:start="155:27" pos:end="155:27">&amp;</operator><name pos:start="155:28" pos:end="155:44">tcg_gen_qemu_ld8u</name></expr></argument>, <argument pos:start="155:47" pos:end="155:48"><expr pos:start="155:47" pos:end="155:48"><name pos:start="155:47" pos:end="155:48">ra</name></expr></argument>, <argument pos:start="155:51" pos:end="155:52"><expr pos:start="155:51" pos:end="155:52"><name pos:start="155:51" pos:end="155:52">rb</name></expr></argument>, <argument pos:start="155:55" pos:end="155:60"><expr pos:start="155:55" pos:end="155:60"><name pos:start="155:55" pos:end="155:60">disp16</name></expr></argument>, <argument pos:start="155:63" pos:end="155:63"><expr pos:start="155:63" pos:end="155:63"><literal type="number" pos:start="155:63" pos:end="155:63">0</literal></expr></argument>, <argument pos:start="155:66" pos:end="155:66"><expr pos:start="155:66" pos:end="155:66"><literal type="number" pos:start="155:66" pos:end="155:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:14">case <expr pos:start="159:10" pos:end="159:13"><literal type="number" pos:start="159:10" pos:end="159:13">0x0B</literal></expr>:</case>

        <comment type="block" pos:start="161:9" pos:end="161:19">/* LDQ_U */</comment>

        <expr_stmt pos:start="163:9" pos:end="163:68"><expr pos:start="163:9" pos:end="163:67"><call pos:start="163:9" pos:end="163:67"><name pos:start="163:9" pos:end="163:20">gen_load_mem</name><argument_list pos:start="163:21" pos:end="163:67">(<argument pos:start="163:22" pos:end="163:24"><expr pos:start="163:22" pos:end="163:24"><name pos:start="163:22" pos:end="163:24">ctx</name></expr></argument>, <argument pos:start="163:27" pos:end="163:44"><expr pos:start="163:27" pos:end="163:44"><operator pos:start="163:27" pos:end="163:27">&amp;</operator><name pos:start="163:28" pos:end="163:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="163:47" pos:end="163:48"><expr pos:start="163:47" pos:end="163:48"><name pos:start="163:47" pos:end="163:48">ra</name></expr></argument>, <argument pos:start="163:51" pos:end="163:52"><expr pos:start="163:51" pos:end="163:52"><name pos:start="163:51" pos:end="163:52">rb</name></expr></argument>, <argument pos:start="163:55" pos:end="163:60"><expr pos:start="163:55" pos:end="163:60"><name pos:start="163:55" pos:end="163:60">disp16</name></expr></argument>, <argument pos:start="163:63" pos:end="163:63"><expr pos:start="163:63" pos:end="163:63"><literal type="number" pos:start="163:63" pos:end="163:63">0</literal></expr></argument>, <argument pos:start="163:66" pos:end="163:66"><expr pos:start="163:66" pos:end="163:66"><literal type="number" pos:start="163:66" pos:end="163:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:14">case <expr pos:start="167:10" pos:end="167:13"><literal type="number" pos:start="167:10" pos:end="167:13">0x0C</literal></expr>:</case>

        <comment type="block" pos:start="169:9" pos:end="169:18">/* LDWU */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:27"><expr pos:start="171:9" pos:end="171:26"><call pos:start="171:9" pos:end="171:26"><name pos:start="171:9" pos:end="171:21">REQUIRE_AMASK</name><argument_list pos:start="171:22" pos:end="171:26">(<argument pos:start="171:23" pos:end="171:25"><expr pos:start="171:23" pos:end="171:25"><name pos:start="171:23" pos:end="171:25">BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:69"><expr pos:start="173:9" pos:end="173:68"><call pos:start="173:9" pos:end="173:68"><name pos:start="173:9" pos:end="173:20">gen_load_mem</name><argument_list pos:start="173:21" pos:end="173:68">(<argument pos:start="173:22" pos:end="173:24"><expr pos:start="173:22" pos:end="173:24"><name pos:start="173:22" pos:end="173:24">ctx</name></expr></argument>, <argument pos:start="173:27" pos:end="173:45"><expr pos:start="173:27" pos:end="173:45"><operator pos:start="173:27" pos:end="173:27">&amp;</operator><name pos:start="173:28" pos:end="173:45">tcg_gen_qemu_ld16u</name></expr></argument>, <argument pos:start="173:48" pos:end="173:49"><expr pos:start="173:48" pos:end="173:49"><name pos:start="173:48" pos:end="173:49">ra</name></expr></argument>, <argument pos:start="173:52" pos:end="173:53"><expr pos:start="173:52" pos:end="173:53"><name pos:start="173:52" pos:end="173:53">rb</name></expr></argument>, <argument pos:start="173:56" pos:end="173:61"><expr pos:start="173:56" pos:end="173:61"><name pos:start="173:56" pos:end="173:61">disp16</name></expr></argument>, <argument pos:start="173:64" pos:end="173:64"><expr pos:start="173:64" pos:end="173:64"><literal type="number" pos:start="173:64" pos:end="173:64">0</literal></expr></argument>, <argument pos:start="173:67" pos:end="173:67"><expr pos:start="173:67" pos:end="173:67"><literal type="number" pos:start="173:67" pos:end="173:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <case pos:start="177:5" pos:end="177:14">case <expr pos:start="177:10" pos:end="177:13"><literal type="number" pos:start="177:10" pos:end="177:13">0x0D</literal></expr>:</case>

        <comment type="block" pos:start="179:9" pos:end="179:17">/* STW */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:27"><expr pos:start="181:9" pos:end="181:26"><call pos:start="181:9" pos:end="181:26"><name pos:start="181:9" pos:end="181:21">REQUIRE_AMASK</name><argument_list pos:start="181:22" pos:end="181:26">(<argument pos:start="181:23" pos:end="181:25"><expr pos:start="181:23" pos:end="181:25"><name pos:start="181:23" pos:end="181:25">BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:69"><expr pos:start="183:9" pos:end="183:68"><call pos:start="183:9" pos:end="183:68"><name pos:start="183:9" pos:end="183:21">gen_store_mem</name><argument_list pos:start="183:22" pos:end="183:68">(<argument pos:start="183:23" pos:end="183:25"><expr pos:start="183:23" pos:end="183:25"><name pos:start="183:23" pos:end="183:25">ctx</name></expr></argument>, <argument pos:start="183:28" pos:end="183:45"><expr pos:start="183:28" pos:end="183:45"><operator pos:start="183:28" pos:end="183:28">&amp;</operator><name pos:start="183:29" pos:end="183:45">tcg_gen_qemu_st16</name></expr></argument>, <argument pos:start="183:48" pos:end="183:49"><expr pos:start="183:48" pos:end="183:49"><name pos:start="183:48" pos:end="183:49">ra</name></expr></argument>, <argument pos:start="183:52" pos:end="183:53"><expr pos:start="183:52" pos:end="183:53"><name pos:start="183:52" pos:end="183:53">rb</name></expr></argument>, <argument pos:start="183:56" pos:end="183:61"><expr pos:start="183:56" pos:end="183:61"><name pos:start="183:56" pos:end="183:61">disp16</name></expr></argument>, <argument pos:start="183:64" pos:end="183:64"><expr pos:start="183:64" pos:end="183:64"><literal type="number" pos:start="183:64" pos:end="183:64">0</literal></expr></argument>, <argument pos:start="183:67" pos:end="183:67"><expr pos:start="183:67" pos:end="183:67"><literal type="number" pos:start="183:67" pos:end="183:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    <case pos:start="187:5" pos:end="187:14">case <expr pos:start="187:10" pos:end="187:13"><literal type="number" pos:start="187:10" pos:end="187:13">0x0E</literal></expr>:</case>

        <comment type="block" pos:start="189:9" pos:end="189:17">/* STB */</comment>

        <expr_stmt pos:start="191:9" pos:end="191:27"><expr pos:start="191:9" pos:end="191:26"><call pos:start="191:9" pos:end="191:26"><name pos:start="191:9" pos:end="191:21">REQUIRE_AMASK</name><argument_list pos:start="191:22" pos:end="191:26">(<argument pos:start="191:23" pos:end="191:25"><expr pos:start="191:23" pos:end="191:25"><name pos:start="191:23" pos:end="191:25">BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:68"><expr pos:start="193:9" pos:end="193:67"><call pos:start="193:9" pos:end="193:67"><name pos:start="193:9" pos:end="193:21">gen_store_mem</name><argument_list pos:start="193:22" pos:end="193:67">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><name pos:start="193:23" pos:end="193:25">ctx</name></expr></argument>, <argument pos:start="193:28" pos:end="193:44"><expr pos:start="193:28" pos:end="193:44"><operator pos:start="193:28" pos:end="193:28">&amp;</operator><name pos:start="193:29" pos:end="193:44">tcg_gen_qemu_st8</name></expr></argument>, <argument pos:start="193:47" pos:end="193:48"><expr pos:start="193:47" pos:end="193:48"><name pos:start="193:47" pos:end="193:48">ra</name></expr></argument>, <argument pos:start="193:51" pos:end="193:52"><expr pos:start="193:51" pos:end="193:52"><name pos:start="193:51" pos:end="193:52">rb</name></expr></argument>, <argument pos:start="193:55" pos:end="193:60"><expr pos:start="193:55" pos:end="193:60"><name pos:start="193:55" pos:end="193:60">disp16</name></expr></argument>, <argument pos:start="193:63" pos:end="193:63"><expr pos:start="193:63" pos:end="193:63"><literal type="number" pos:start="193:63" pos:end="193:63">0</literal></expr></argument>, <argument pos:start="193:66" pos:end="193:66"><expr pos:start="193:66" pos:end="193:66"><literal type="number" pos:start="193:66" pos:end="193:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:14">case <expr pos:start="197:10" pos:end="197:13"><literal type="number" pos:start="197:10" pos:end="197:13">0x0F</literal></expr>:</case>

        <comment type="block" pos:start="199:9" pos:end="199:19">/* STQ_U */</comment>

        <expr_stmt pos:start="201:9" pos:end="201:69"><expr pos:start="201:9" pos:end="201:68"><call pos:start="201:9" pos:end="201:68"><name pos:start="201:9" pos:end="201:21">gen_store_mem</name><argument_list pos:start="201:22" pos:end="201:68">(<argument pos:start="201:23" pos:end="201:25"><expr pos:start="201:23" pos:end="201:25"><name pos:start="201:23" pos:end="201:25">ctx</name></expr></argument>, <argument pos:start="201:28" pos:end="201:45"><expr pos:start="201:28" pos:end="201:45"><operator pos:start="201:28" pos:end="201:28">&amp;</operator><name pos:start="201:29" pos:end="201:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="201:48" pos:end="201:49"><expr pos:start="201:48" pos:end="201:49"><name pos:start="201:48" pos:end="201:49">ra</name></expr></argument>, <argument pos:start="201:52" pos:end="201:53"><expr pos:start="201:52" pos:end="201:53"><name pos:start="201:52" pos:end="201:53">rb</name></expr></argument>, <argument pos:start="201:56" pos:end="201:61"><expr pos:start="201:56" pos:end="201:61"><name pos:start="201:56" pos:end="201:61">disp16</name></expr></argument>, <argument pos:start="201:64" pos:end="201:64"><expr pos:start="201:64" pos:end="201:64"><literal type="number" pos:start="201:64" pos:end="201:64">0</literal></expr></argument>, <argument pos:start="201:67" pos:end="201:67"><expr pos:start="201:67" pos:end="201:67"><literal type="number" pos:start="201:67" pos:end="201:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>



    <case pos:start="207:5" pos:end="207:14">case <expr pos:start="207:10" pos:end="207:13"><literal type="number" pos:start="207:10" pos:end="207:13">0x10</literal></expr>:</case>

        <expr_stmt pos:start="209:9" pos:end="209:31"><expr pos:start="209:9" pos:end="209:30"><name pos:start="209:9" pos:end="209:10">vc</name> <operator pos:start="209:12" pos:end="209:12">=</operator> <call pos:start="209:14" pos:end="209:30"><name pos:start="209:14" pos:end="209:21">dest_gpr</name><argument_list pos:start="209:22" pos:end="209:30">(<argument pos:start="209:23" pos:end="209:25"><expr pos:start="209:23" pos:end="209:25"><name pos:start="209:23" pos:end="209:25">ctx</name></expr></argument>, <argument pos:start="209:28" pos:end="209:29"><expr pos:start="209:28" pos:end="209:29"><name pos:start="209:28" pos:end="209:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:47"><expr pos:start="211:9" pos:end="211:46"><name pos:start="211:9" pos:end="211:10">vb</name> <operator pos:start="211:12" pos:end="211:12">=</operator> <call pos:start="211:14" pos:end="211:46"><name pos:start="211:14" pos:end="211:25">load_gpr_lit</name><argument_list pos:start="211:26" pos:end="211:46">(<argument pos:start="211:27" pos:end="211:29"><expr pos:start="211:27" pos:end="211:29"><name pos:start="211:27" pos:end="211:29">ctx</name></expr></argument>, <argument pos:start="211:32" pos:end="211:33"><expr pos:start="211:32" pos:end="211:33"><name pos:start="211:32" pos:end="211:33">rb</name></expr></argument>, <argument pos:start="211:36" pos:end="211:38"><expr pos:start="211:36" pos:end="211:38"><name pos:start="211:36" pos:end="211:38">lit</name></expr></argument>, <argument pos:start="211:41" pos:end="211:45"><expr pos:start="211:41" pos:end="211:45"><name pos:start="211:41" pos:end="211:45">islit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="215:9" pos:end="237:9"><if pos:start="215:9" pos:end="237:9">if <condition pos:start="215:12" pos:end="215:21">(<expr pos:start="215:13" pos:end="215:20"><name pos:start="215:13" pos:end="215:14">ra</name> <operator pos:start="215:16" pos:end="215:17">==</operator> <literal type="number" pos:start="215:19" pos:end="215:20">31</literal></expr>)</condition> <block pos:start="215:23" pos:end="237:9">{<block_content pos:start="217:13" pos:end="235:13">

            <if_stmt pos:start="217:13" pos:end="225:13"><if pos:start="217:13" pos:end="225:13">if <condition pos:start="217:16" pos:end="217:28">(<expr pos:start="217:17" pos:end="217:27"><name pos:start="217:17" pos:end="217:19">fn7</name> <operator pos:start="217:21" pos:end="217:22">==</operator> <literal type="number" pos:start="217:24" pos:end="217:27">0x00</literal></expr>)</condition> <block pos:start="217:30" pos:end="225:13">{<block_content pos:start="221:17" pos:end="223:22">

                <comment type="block" pos:start="219:17" pos:end="219:50">/* Special case ADDL as SEXTL.  */</comment>

                <expr_stmt pos:start="221:17" pos:end="221:43"><expr pos:start="221:17" pos:end="221:42"><call pos:start="221:17" pos:end="221:42"><name pos:start="221:17" pos:end="221:34">tcg_gen_ext32s_i64</name><argument_list pos:start="221:35" pos:end="221:42">(<argument pos:start="221:36" pos:end="221:37"><expr pos:start="221:36" pos:end="221:37"><name pos:start="221:36" pos:end="221:37">vc</name></expr></argument>, <argument pos:start="221:40" pos:end="221:41"><expr pos:start="221:40" pos:end="221:41"><name pos:start="221:40" pos:end="221:41">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="223:17" pos:end="223:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="227:13" pos:end="235:13"><if pos:start="227:13" pos:end="235:13">if <condition pos:start="227:16" pos:end="227:28">(<expr pos:start="227:17" pos:end="227:27"><name pos:start="227:17" pos:end="227:19">fn7</name> <operator pos:start="227:21" pos:end="227:22">==</operator> <literal type="number" pos:start="227:24" pos:end="227:27">0x29</literal></expr>)</condition> <block pos:start="227:30" pos:end="235:13">{<block_content pos:start="231:17" pos:end="233:22">

                <comment type="block" pos:start="229:17" pos:end="229:49">/* Special case SUBQ as NEGQ.  */</comment>

                <expr_stmt pos:start="231:17" pos:end="231:40"><expr pos:start="231:17" pos:end="231:39"><call pos:start="231:17" pos:end="231:39"><name pos:start="231:17" pos:end="231:31">tcg_gen_neg_i64</name><argument_list pos:start="231:32" pos:end="231:39">(<argument pos:start="231:33" pos:end="231:34"><expr pos:start="231:33" pos:end="231:34"><name pos:start="231:33" pos:end="231:34">vc</name></expr></argument>, <argument pos:start="231:37" pos:end="231:38"><expr pos:start="231:37" pos:end="231:38"><name pos:start="231:37" pos:end="231:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="233:17" pos:end="233:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="241:9" pos:end="241:31"><expr pos:start="241:9" pos:end="241:30"><name pos:start="241:9" pos:end="241:10">va</name> <operator pos:start="241:12" pos:end="241:12">=</operator> <call pos:start="241:14" pos:end="241:30"><name pos:start="241:14" pos:end="241:21">load_gpr</name><argument_list pos:start="241:22" pos:end="241:30">(<argument pos:start="241:23" pos:end="241:25"><expr pos:start="241:23" pos:end="241:25"><name pos:start="241:23" pos:end="241:25">ctx</name></expr></argument>, <argument pos:start="241:28" pos:end="241:29"><expr pos:start="241:28" pos:end="241:29"><name pos:start="241:28" pos:end="241:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="243:9" pos:end="563:9">switch <condition pos:start="243:16" pos:end="243:20">(<expr pos:start="243:17" pos:end="243:19"><name pos:start="243:17" pos:end="243:19">fn7</name></expr>)</condition> <block pos:start="243:22" pos:end="563:9">{<block_content pos:start="245:9" pos:end="561:29">

        <case pos:start="245:9" pos:end="245:18">case <expr pos:start="245:14" pos:end="245:17"><literal type="number" pos:start="245:14" pos:end="245:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="247:13" pos:end="247:22">/* ADDL */</comment>

            <expr_stmt pos:start="249:13" pos:end="249:40"><expr pos:start="249:13" pos:end="249:39"><call pos:start="249:13" pos:end="249:39"><name pos:start="249:13" pos:end="249:27">tcg_gen_add_i64</name><argument_list pos:start="249:28" pos:end="249:39">(<argument pos:start="249:29" pos:end="249:30"><expr pos:start="249:29" pos:end="249:30"><name pos:start="249:29" pos:end="249:30">vc</name></expr></argument>, <argument pos:start="249:33" pos:end="249:34"><expr pos:start="249:33" pos:end="249:34"><name pos:start="249:33" pos:end="249:34">va</name></expr></argument>, <argument pos:start="249:37" pos:end="249:38"><expr pos:start="249:37" pos:end="249:38"><name pos:start="249:37" pos:end="249:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:39"><expr pos:start="251:13" pos:end="251:38"><call pos:start="251:13" pos:end="251:38"><name pos:start="251:13" pos:end="251:30">tcg_gen_ext32s_i64</name><argument_list pos:start="251:31" pos:end="251:38">(<argument pos:start="251:32" pos:end="251:33"><expr pos:start="251:32" pos:end="251:33"><name pos:start="251:32" pos:end="251:33">vc</name></expr></argument>, <argument pos:start="251:36" pos:end="251:37"><expr pos:start="251:36" pos:end="251:37"><name pos:start="251:36" pos:end="251:37">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="253:13" pos:end="253:18">break;</break>

        <case pos:start="255:9" pos:end="255:18">case <expr pos:start="255:14" pos:end="255:17"><literal type="number" pos:start="255:14" pos:end="255:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="257:13" pos:end="257:24">/* S4ADDL */</comment>

            <expr_stmt pos:start="259:13" pos:end="259:33"><expr pos:start="259:13" pos:end="259:32"><name pos:start="259:13" pos:end="259:15">tmp</name> <operator pos:start="259:17" pos:end="259:17">=</operator> <call pos:start="259:19" pos:end="259:32"><name pos:start="259:19" pos:end="259:30">tcg_temp_new</name><argument_list pos:start="259:31" pos:end="259:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:41"><expr pos:start="261:13" pos:end="261:40"><call pos:start="261:13" pos:end="261:40"><name pos:start="261:13" pos:end="261:28">tcg_gen_shli_i64</name><argument_list pos:start="261:29" pos:end="261:40">(<argument pos:start="261:30" pos:end="261:32"><expr pos:start="261:30" pos:end="261:32"><name pos:start="261:30" pos:end="261:32">tmp</name></expr></argument>, <argument pos:start="261:35" pos:end="261:36"><expr pos:start="261:35" pos:end="261:36"><name pos:start="261:35" pos:end="261:36">va</name></expr></argument>, <argument pos:start="261:39" pos:end="261:39"><expr pos:start="261:39" pos:end="261:39"><literal type="number" pos:start="261:39" pos:end="261:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:42"><expr pos:start="263:13" pos:end="263:41"><call pos:start="263:13" pos:end="263:41"><name pos:start="263:13" pos:end="263:27">tcg_gen_add_i64</name><argument_list pos:start="263:28" pos:end="263:41">(<argument pos:start="263:29" pos:end="263:31"><expr pos:start="263:29" pos:end="263:31"><name pos:start="263:29" pos:end="263:31">tmp</name></expr></argument>, <argument pos:start="263:34" pos:end="263:36"><expr pos:start="263:34" pos:end="263:36"><name pos:start="263:34" pos:end="263:36">tmp</name></expr></argument>, <argument pos:start="263:39" pos:end="263:40"><expr pos:start="263:39" pos:end="263:40"><name pos:start="263:39" pos:end="263:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:40"><expr pos:start="265:13" pos:end="265:39"><call pos:start="265:13" pos:end="265:39"><name pos:start="265:13" pos:end="265:30">tcg_gen_ext32s_i64</name><argument_list pos:start="265:31" pos:end="265:39">(<argument pos:start="265:32" pos:end="265:33"><expr pos:start="265:32" pos:end="265:33"><name pos:start="265:32" pos:end="265:33">vc</name></expr></argument>, <argument pos:start="265:36" pos:end="265:38"><expr pos:start="265:36" pos:end="265:38"><name pos:start="265:36" pos:end="265:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:31"><expr pos:start="267:13" pos:end="267:30"><call pos:start="267:13" pos:end="267:30"><name pos:start="267:13" pos:end="267:25">tcg_temp_free</name><argument_list pos:start="267:26" pos:end="267:30">(<argument pos:start="267:27" pos:end="267:29"><expr pos:start="267:27" pos:end="267:29"><name pos:start="267:27" pos:end="267:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="269:13" pos:end="269:18">break;</break>

        <case pos:start="271:9" pos:end="271:18">case <expr pos:start="271:14" pos:end="271:17"><literal type="number" pos:start="271:14" pos:end="271:17">0x09</literal></expr>:</case>

            <comment type="block" pos:start="273:13" pos:end="273:22">/* SUBL */</comment>

            <expr_stmt pos:start="275:13" pos:end="275:40"><expr pos:start="275:13" pos:end="275:39"><call pos:start="275:13" pos:end="275:39"><name pos:start="275:13" pos:end="275:27">tcg_gen_sub_i64</name><argument_list pos:start="275:28" pos:end="275:39">(<argument pos:start="275:29" pos:end="275:30"><expr pos:start="275:29" pos:end="275:30"><name pos:start="275:29" pos:end="275:30">vc</name></expr></argument>, <argument pos:start="275:33" pos:end="275:34"><expr pos:start="275:33" pos:end="275:34"><name pos:start="275:33" pos:end="275:34">va</name></expr></argument>, <argument pos:start="275:37" pos:end="275:38"><expr pos:start="275:37" pos:end="275:38"><name pos:start="275:37" pos:end="275:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:39"><expr pos:start="277:13" pos:end="277:38"><call pos:start="277:13" pos:end="277:38"><name pos:start="277:13" pos:end="277:30">tcg_gen_ext32s_i64</name><argument_list pos:start="277:31" pos:end="277:38">(<argument pos:start="277:32" pos:end="277:33"><expr pos:start="277:32" pos:end="277:33"><name pos:start="277:32" pos:end="277:33">vc</name></expr></argument>, <argument pos:start="277:36" pos:end="277:37"><expr pos:start="277:36" pos:end="277:37"><name pos:start="277:36" pos:end="277:37">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="279:13" pos:end="279:18">break;</break>

        <case pos:start="281:9" pos:end="281:18">case <expr pos:start="281:14" pos:end="281:17"><literal type="number" pos:start="281:14" pos:end="281:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="283:13" pos:end="283:24">/* S4SUBL */</comment>

            <expr_stmt pos:start="285:13" pos:end="285:33"><expr pos:start="285:13" pos:end="285:32"><name pos:start="285:13" pos:end="285:15">tmp</name> <operator pos:start="285:17" pos:end="285:17">=</operator> <call pos:start="285:19" pos:end="285:32"><name pos:start="285:19" pos:end="285:30">tcg_temp_new</name><argument_list pos:start="285:31" pos:end="285:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:41"><expr pos:start="287:13" pos:end="287:40"><call pos:start="287:13" pos:end="287:40"><name pos:start="287:13" pos:end="287:28">tcg_gen_shli_i64</name><argument_list pos:start="287:29" pos:end="287:40">(<argument pos:start="287:30" pos:end="287:32"><expr pos:start="287:30" pos:end="287:32"><name pos:start="287:30" pos:end="287:32">tmp</name></expr></argument>, <argument pos:start="287:35" pos:end="287:36"><expr pos:start="287:35" pos:end="287:36"><name pos:start="287:35" pos:end="287:36">va</name></expr></argument>, <argument pos:start="287:39" pos:end="287:39"><expr pos:start="287:39" pos:end="287:39"><literal type="number" pos:start="287:39" pos:end="287:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:42"><expr pos:start="289:13" pos:end="289:41"><call pos:start="289:13" pos:end="289:41"><name pos:start="289:13" pos:end="289:27">tcg_gen_sub_i64</name><argument_list pos:start="289:28" pos:end="289:41">(<argument pos:start="289:29" pos:end="289:31"><expr pos:start="289:29" pos:end="289:31"><name pos:start="289:29" pos:end="289:31">tmp</name></expr></argument>, <argument pos:start="289:34" pos:end="289:36"><expr pos:start="289:34" pos:end="289:36"><name pos:start="289:34" pos:end="289:36">tmp</name></expr></argument>, <argument pos:start="289:39" pos:end="289:40"><expr pos:start="289:39" pos:end="289:40"><name pos:start="289:39" pos:end="289:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:40"><expr pos:start="291:13" pos:end="291:39"><call pos:start="291:13" pos:end="291:39"><name pos:start="291:13" pos:end="291:30">tcg_gen_ext32s_i64</name><argument_list pos:start="291:31" pos:end="291:39">(<argument pos:start="291:32" pos:end="291:33"><expr pos:start="291:32" pos:end="291:33"><name pos:start="291:32" pos:end="291:33">vc</name></expr></argument>, <argument pos:start="291:36" pos:end="291:38"><expr pos:start="291:36" pos:end="291:38"><name pos:start="291:36" pos:end="291:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:31"><expr pos:start="293:13" pos:end="293:30"><call pos:start="293:13" pos:end="293:30"><name pos:start="293:13" pos:end="293:25">tcg_temp_free</name><argument_list pos:start="293:26" pos:end="293:30">(<argument pos:start="293:27" pos:end="293:29"><expr pos:start="293:27" pos:end="293:29"><name pos:start="293:27" pos:end="293:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="295:13" pos:end="295:18">break;</break>

        <case pos:start="297:9" pos:end="297:18">case <expr pos:start="297:14" pos:end="297:17"><literal type="number" pos:start="297:14" pos:end="297:17">0x0F</literal></expr>:</case>

            <comment type="block" pos:start="299:13" pos:end="299:24">/* CMPBGE */</comment>

            <if_stmt pos:start="301:13" pos:end="311:13"><if pos:start="301:13" pos:end="307:13">if <condition pos:start="301:16" pos:end="301:25">(<expr pos:start="301:17" pos:end="301:24"><name pos:start="301:17" pos:end="301:18">ra</name> <operator pos:start="301:20" pos:end="301:21">==</operator> <literal type="number" pos:start="301:23" pos:end="301:24">31</literal></expr>)</condition> <block pos:start="301:27" pos:end="307:13">{<block_content pos:start="305:17" pos:end="305:42">

                <comment type="block" pos:start="303:17" pos:end="303:53">/* Special case 0 &gt;= X as X == 0.  */</comment>

                <expr_stmt pos:start="305:17" pos:end="305:42"><expr pos:start="305:17" pos:end="305:41"><call pos:start="305:17" pos:end="305:41"><name pos:start="305:17" pos:end="305:33">gen_helper_cmpbe0</name><argument_list pos:start="305:34" pos:end="305:41">(<argument pos:start="305:35" pos:end="305:36"><expr pos:start="305:35" pos:end="305:36"><name pos:start="305:35" pos:end="305:36">vc</name></expr></argument>, <argument pos:start="305:39" pos:end="305:40"><expr pos:start="305:39" pos:end="305:40"><name pos:start="305:39" pos:end="305:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="307:15" pos:end="311:13">else <block pos:start="307:20" pos:end="311:13">{<block_content pos:start="309:17" pos:end="309:46">

                <expr_stmt pos:start="309:17" pos:end="309:46"><expr pos:start="309:17" pos:end="309:45"><call pos:start="309:17" pos:end="309:45"><name pos:start="309:17" pos:end="309:33">gen_helper_cmpbge</name><argument_list pos:start="309:34" pos:end="309:45">(<argument pos:start="309:35" pos:end="309:36"><expr pos:start="309:35" pos:end="309:36"><name pos:start="309:35" pos:end="309:36">vc</name></expr></argument>, <argument pos:start="309:39" pos:end="309:40"><expr pos:start="309:39" pos:end="309:40"><name pos:start="309:39" pos:end="309:40">va</name></expr></argument>, <argument pos:start="309:43" pos:end="309:44"><expr pos:start="309:43" pos:end="309:44"><name pos:start="309:43" pos:end="309:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="313:13" pos:end="313:18">break;</break>

        <case pos:start="315:9" pos:end="315:18">case <expr pos:start="315:14" pos:end="315:17"><literal type="number" pos:start="315:14" pos:end="315:17">0x12</literal></expr>:</case>

            <comment type="block" pos:start="317:13" pos:end="317:24">/* S8ADDL */</comment>

            <expr_stmt pos:start="319:13" pos:end="319:33"><expr pos:start="319:13" pos:end="319:32"><name pos:start="319:13" pos:end="319:15">tmp</name> <operator pos:start="319:17" pos:end="319:17">=</operator> <call pos:start="319:19" pos:end="319:32"><name pos:start="319:19" pos:end="319:30">tcg_temp_new</name><argument_list pos:start="319:31" pos:end="319:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:41"><expr pos:start="321:13" pos:end="321:40"><call pos:start="321:13" pos:end="321:40"><name pos:start="321:13" pos:end="321:28">tcg_gen_shli_i64</name><argument_list pos:start="321:29" pos:end="321:40">(<argument pos:start="321:30" pos:end="321:32"><expr pos:start="321:30" pos:end="321:32"><name pos:start="321:30" pos:end="321:32">tmp</name></expr></argument>, <argument pos:start="321:35" pos:end="321:36"><expr pos:start="321:35" pos:end="321:36"><name pos:start="321:35" pos:end="321:36">va</name></expr></argument>, <argument pos:start="321:39" pos:end="321:39"><expr pos:start="321:39" pos:end="321:39"><literal type="number" pos:start="321:39" pos:end="321:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:42"><expr pos:start="323:13" pos:end="323:41"><call pos:start="323:13" pos:end="323:41"><name pos:start="323:13" pos:end="323:27">tcg_gen_add_i64</name><argument_list pos:start="323:28" pos:end="323:41">(<argument pos:start="323:29" pos:end="323:31"><expr pos:start="323:29" pos:end="323:31"><name pos:start="323:29" pos:end="323:31">tmp</name></expr></argument>, <argument pos:start="323:34" pos:end="323:36"><expr pos:start="323:34" pos:end="323:36"><name pos:start="323:34" pos:end="323:36">tmp</name></expr></argument>, <argument pos:start="323:39" pos:end="323:40"><expr pos:start="323:39" pos:end="323:40"><name pos:start="323:39" pos:end="323:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:40"><expr pos:start="325:13" pos:end="325:39"><call pos:start="325:13" pos:end="325:39"><name pos:start="325:13" pos:end="325:30">tcg_gen_ext32s_i64</name><argument_list pos:start="325:31" pos:end="325:39">(<argument pos:start="325:32" pos:end="325:33"><expr pos:start="325:32" pos:end="325:33"><name pos:start="325:32" pos:end="325:33">vc</name></expr></argument>, <argument pos:start="325:36" pos:end="325:38"><expr pos:start="325:36" pos:end="325:38"><name pos:start="325:36" pos:end="325:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:31"><expr pos:start="327:13" pos:end="327:30"><call pos:start="327:13" pos:end="327:30"><name pos:start="327:13" pos:end="327:25">tcg_temp_free</name><argument_list pos:start="327:26" pos:end="327:30">(<argument pos:start="327:27" pos:end="327:29"><expr pos:start="327:27" pos:end="327:29"><name pos:start="327:27" pos:end="327:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="329:13" pos:end="329:18">break;</break>

        <case pos:start="331:9" pos:end="331:18">case <expr pos:start="331:14" pos:end="331:17"><literal type="number" pos:start="331:14" pos:end="331:17">0x1B</literal></expr>:</case>

            <comment type="block" pos:start="333:13" pos:end="333:24">/* S8SUBL */</comment>

            <expr_stmt pos:start="335:13" pos:end="335:33"><expr pos:start="335:13" pos:end="335:32"><name pos:start="335:13" pos:end="335:15">tmp</name> <operator pos:start="335:17" pos:end="335:17">=</operator> <call pos:start="335:19" pos:end="335:32"><name pos:start="335:19" pos:end="335:30">tcg_temp_new</name><argument_list pos:start="335:31" pos:end="335:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:41"><expr pos:start="337:13" pos:end="337:40"><call pos:start="337:13" pos:end="337:40"><name pos:start="337:13" pos:end="337:28">tcg_gen_shli_i64</name><argument_list pos:start="337:29" pos:end="337:40">(<argument pos:start="337:30" pos:end="337:32"><expr pos:start="337:30" pos:end="337:32"><name pos:start="337:30" pos:end="337:32">tmp</name></expr></argument>, <argument pos:start="337:35" pos:end="337:36"><expr pos:start="337:35" pos:end="337:36"><name pos:start="337:35" pos:end="337:36">va</name></expr></argument>, <argument pos:start="337:39" pos:end="337:39"><expr pos:start="337:39" pos:end="337:39"><literal type="number" pos:start="337:39" pos:end="337:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:42"><expr pos:start="339:13" pos:end="339:41"><call pos:start="339:13" pos:end="339:41"><name pos:start="339:13" pos:end="339:27">tcg_gen_sub_i64</name><argument_list pos:start="339:28" pos:end="339:41">(<argument pos:start="339:29" pos:end="339:31"><expr pos:start="339:29" pos:end="339:31"><name pos:start="339:29" pos:end="339:31">tmp</name></expr></argument>, <argument pos:start="339:34" pos:end="339:36"><expr pos:start="339:34" pos:end="339:36"><name pos:start="339:34" pos:end="339:36">tmp</name></expr></argument>, <argument pos:start="339:39" pos:end="339:40"><expr pos:start="339:39" pos:end="339:40"><name pos:start="339:39" pos:end="339:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:40"><expr pos:start="341:13" pos:end="341:39"><call pos:start="341:13" pos:end="341:39"><name pos:start="341:13" pos:end="341:30">tcg_gen_ext32s_i64</name><argument_list pos:start="341:31" pos:end="341:39">(<argument pos:start="341:32" pos:end="341:33"><expr pos:start="341:32" pos:end="341:33"><name pos:start="341:32" pos:end="341:33">vc</name></expr></argument>, <argument pos:start="341:36" pos:end="341:38"><expr pos:start="341:36" pos:end="341:38"><name pos:start="341:36" pos:end="341:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:31"><expr pos:start="343:13" pos:end="343:30"><call pos:start="343:13" pos:end="343:30"><name pos:start="343:13" pos:end="343:25">tcg_temp_free</name><argument_list pos:start="343:26" pos:end="343:30">(<argument pos:start="343:27" pos:end="343:29"><expr pos:start="343:27" pos:end="343:29"><name pos:start="343:27" pos:end="343:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="345:13" pos:end="345:18">break;</break>

        <case pos:start="347:9" pos:end="347:18">case <expr pos:start="347:14" pos:end="347:17"><literal type="number" pos:start="347:14" pos:end="347:17">0x1D</literal></expr>:</case>

            <comment type="block" pos:start="349:13" pos:end="349:24">/* CMPULT */</comment>

            <expr_stmt pos:start="351:13" pos:end="351:58"><expr pos:start="351:13" pos:end="351:57"><call pos:start="351:13" pos:end="351:57"><name pos:start="351:13" pos:end="351:31">tcg_gen_setcond_i64</name><argument_list pos:start="351:32" pos:end="351:57">(<argument pos:start="351:33" pos:end="351:44"><expr pos:start="351:33" pos:end="351:44"><name pos:start="351:33" pos:end="351:44">TCG_COND_LTU</name></expr></argument>, <argument pos:start="351:47" pos:end="351:48"><expr pos:start="351:47" pos:end="351:48"><name pos:start="351:47" pos:end="351:48">vc</name></expr></argument>, <argument pos:start="351:51" pos:end="351:52"><expr pos:start="351:51" pos:end="351:52"><name pos:start="351:51" pos:end="351:52">va</name></expr></argument>, <argument pos:start="351:55" pos:end="351:56"><expr pos:start="351:55" pos:end="351:56"><name pos:start="351:55" pos:end="351:56">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="353:13" pos:end="353:18">break;</break>

        <case pos:start="355:9" pos:end="355:18">case <expr pos:start="355:14" pos:end="355:17"><literal type="number" pos:start="355:14" pos:end="355:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="357:13" pos:end="357:22">/* ADDQ */</comment>

            <expr_stmt pos:start="359:13" pos:end="359:40"><expr pos:start="359:13" pos:end="359:39"><call pos:start="359:13" pos:end="359:39"><name pos:start="359:13" pos:end="359:27">tcg_gen_add_i64</name><argument_list pos:start="359:28" pos:end="359:39">(<argument pos:start="359:29" pos:end="359:30"><expr pos:start="359:29" pos:end="359:30"><name pos:start="359:29" pos:end="359:30">vc</name></expr></argument>, <argument pos:start="359:33" pos:end="359:34"><expr pos:start="359:33" pos:end="359:34"><name pos:start="359:33" pos:end="359:34">va</name></expr></argument>, <argument pos:start="359:37" pos:end="359:38"><expr pos:start="359:37" pos:end="359:38"><name pos:start="359:37" pos:end="359:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="361:13" pos:end="361:18">break;</break>

        <case pos:start="363:9" pos:end="363:18">case <expr pos:start="363:14" pos:end="363:17"><literal type="number" pos:start="363:14" pos:end="363:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="365:13" pos:end="365:24">/* S4ADDQ */</comment>

            <expr_stmt pos:start="367:13" pos:end="367:33"><expr pos:start="367:13" pos:end="367:32"><name pos:start="367:13" pos:end="367:15">tmp</name> <operator pos:start="367:17" pos:end="367:17">=</operator> <call pos:start="367:19" pos:end="367:32"><name pos:start="367:19" pos:end="367:30">tcg_temp_new</name><argument_list pos:start="367:31" pos:end="367:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:41"><expr pos:start="369:13" pos:end="369:40"><call pos:start="369:13" pos:end="369:40"><name pos:start="369:13" pos:end="369:28">tcg_gen_shli_i64</name><argument_list pos:start="369:29" pos:end="369:40">(<argument pos:start="369:30" pos:end="369:32"><expr pos:start="369:30" pos:end="369:32"><name pos:start="369:30" pos:end="369:32">tmp</name></expr></argument>, <argument pos:start="369:35" pos:end="369:36"><expr pos:start="369:35" pos:end="369:36"><name pos:start="369:35" pos:end="369:36">va</name></expr></argument>, <argument pos:start="369:39" pos:end="369:39"><expr pos:start="369:39" pos:end="369:39"><literal type="number" pos:start="369:39" pos:end="369:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:41"><expr pos:start="371:13" pos:end="371:40"><call pos:start="371:13" pos:end="371:40"><name pos:start="371:13" pos:end="371:27">tcg_gen_add_i64</name><argument_list pos:start="371:28" pos:end="371:40">(<argument pos:start="371:29" pos:end="371:30"><expr pos:start="371:29" pos:end="371:30"><name pos:start="371:29" pos:end="371:30">vc</name></expr></argument>, <argument pos:start="371:33" pos:end="371:35"><expr pos:start="371:33" pos:end="371:35"><name pos:start="371:33" pos:end="371:35">tmp</name></expr></argument>, <argument pos:start="371:38" pos:end="371:39"><expr pos:start="371:38" pos:end="371:39"><name pos:start="371:38" pos:end="371:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:31"><expr pos:start="373:13" pos:end="373:30"><call pos:start="373:13" pos:end="373:30"><name pos:start="373:13" pos:end="373:25">tcg_temp_free</name><argument_list pos:start="373:26" pos:end="373:30">(<argument pos:start="373:27" pos:end="373:29"><expr pos:start="373:27" pos:end="373:29"><name pos:start="373:27" pos:end="373:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="375:13" pos:end="375:18">break;</break>

        <case pos:start="377:9" pos:end="377:18">case <expr pos:start="377:14" pos:end="377:17"><literal type="number" pos:start="377:14" pos:end="377:17">0x29</literal></expr>:</case>

            <comment type="block" pos:start="379:13" pos:end="379:22">/* SUBQ */</comment>

            <expr_stmt pos:start="381:13" pos:end="381:40"><expr pos:start="381:13" pos:end="381:39"><call pos:start="381:13" pos:end="381:39"><name pos:start="381:13" pos:end="381:27">tcg_gen_sub_i64</name><argument_list pos:start="381:28" pos:end="381:39">(<argument pos:start="381:29" pos:end="381:30"><expr pos:start="381:29" pos:end="381:30"><name pos:start="381:29" pos:end="381:30">vc</name></expr></argument>, <argument pos:start="381:33" pos:end="381:34"><expr pos:start="381:33" pos:end="381:34"><name pos:start="381:33" pos:end="381:34">va</name></expr></argument>, <argument pos:start="381:37" pos:end="381:38"><expr pos:start="381:37" pos:end="381:38"><name pos:start="381:37" pos:end="381:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="383:13" pos:end="383:18">break;</break>

        <case pos:start="385:9" pos:end="385:18">case <expr pos:start="385:14" pos:end="385:17"><literal type="number" pos:start="385:14" pos:end="385:17">0x2B</literal></expr>:</case>

            <comment type="block" pos:start="387:13" pos:end="387:24">/* S4SUBQ */</comment>

            <expr_stmt pos:start="389:13" pos:end="389:33"><expr pos:start="389:13" pos:end="389:32"><name pos:start="389:13" pos:end="389:15">tmp</name> <operator pos:start="389:17" pos:end="389:17">=</operator> <call pos:start="389:19" pos:end="389:32"><name pos:start="389:19" pos:end="389:30">tcg_temp_new</name><argument_list pos:start="389:31" pos:end="389:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:41"><expr pos:start="391:13" pos:end="391:40"><call pos:start="391:13" pos:end="391:40"><name pos:start="391:13" pos:end="391:28">tcg_gen_shli_i64</name><argument_list pos:start="391:29" pos:end="391:40">(<argument pos:start="391:30" pos:end="391:32"><expr pos:start="391:30" pos:end="391:32"><name pos:start="391:30" pos:end="391:32">tmp</name></expr></argument>, <argument pos:start="391:35" pos:end="391:36"><expr pos:start="391:35" pos:end="391:36"><name pos:start="391:35" pos:end="391:36">va</name></expr></argument>, <argument pos:start="391:39" pos:end="391:39"><expr pos:start="391:39" pos:end="391:39"><literal type="number" pos:start="391:39" pos:end="391:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:41"><expr pos:start="393:13" pos:end="393:40"><call pos:start="393:13" pos:end="393:40"><name pos:start="393:13" pos:end="393:27">tcg_gen_sub_i64</name><argument_list pos:start="393:28" pos:end="393:40">(<argument pos:start="393:29" pos:end="393:30"><expr pos:start="393:29" pos:end="393:30"><name pos:start="393:29" pos:end="393:30">vc</name></expr></argument>, <argument pos:start="393:33" pos:end="393:35"><expr pos:start="393:33" pos:end="393:35"><name pos:start="393:33" pos:end="393:35">tmp</name></expr></argument>, <argument pos:start="393:38" pos:end="393:39"><expr pos:start="393:38" pos:end="393:39"><name pos:start="393:38" pos:end="393:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="395:31"><expr pos:start="395:13" pos:end="395:30"><call pos:start="395:13" pos:end="395:30"><name pos:start="395:13" pos:end="395:25">tcg_temp_free</name><argument_list pos:start="395:26" pos:end="395:30">(<argument pos:start="395:27" pos:end="395:29"><expr pos:start="395:27" pos:end="395:29"><name pos:start="395:27" pos:end="395:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="397:13" pos:end="397:18">break;</break>

        <case pos:start="399:9" pos:end="399:18">case <expr pos:start="399:14" pos:end="399:17"><literal type="number" pos:start="399:14" pos:end="399:17">0x2D</literal></expr>:</case>

            <comment type="block" pos:start="401:13" pos:end="401:23">/* CMPEQ */</comment>

            <expr_stmt pos:start="403:13" pos:end="403:57"><expr pos:start="403:13" pos:end="403:56"><call pos:start="403:13" pos:end="403:56"><name pos:start="403:13" pos:end="403:31">tcg_gen_setcond_i64</name><argument_list pos:start="403:32" pos:end="403:56">(<argument pos:start="403:33" pos:end="403:43"><expr pos:start="403:33" pos:end="403:43"><name pos:start="403:33" pos:end="403:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="403:46" pos:end="403:47"><expr pos:start="403:46" pos:end="403:47"><name pos:start="403:46" pos:end="403:47">vc</name></expr></argument>, <argument pos:start="403:50" pos:end="403:51"><expr pos:start="403:50" pos:end="403:51"><name pos:start="403:50" pos:end="403:51">va</name></expr></argument>, <argument pos:start="403:54" pos:end="403:55"><expr pos:start="403:54" pos:end="403:55"><name pos:start="403:54" pos:end="403:55">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="405:13" pos:end="405:18">break;</break>

        <case pos:start="407:9" pos:end="407:18">case <expr pos:start="407:14" pos:end="407:17"><literal type="number" pos:start="407:14" pos:end="407:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="409:13" pos:end="409:24">/* S8ADDQ */</comment>

            <expr_stmt pos:start="411:13" pos:end="411:33"><expr pos:start="411:13" pos:end="411:32"><name pos:start="411:13" pos:end="411:15">tmp</name> <operator pos:start="411:17" pos:end="411:17">=</operator> <call pos:start="411:19" pos:end="411:32"><name pos:start="411:19" pos:end="411:30">tcg_temp_new</name><argument_list pos:start="411:31" pos:end="411:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:41"><expr pos:start="413:13" pos:end="413:40"><call pos:start="413:13" pos:end="413:40"><name pos:start="413:13" pos:end="413:28">tcg_gen_shli_i64</name><argument_list pos:start="413:29" pos:end="413:40">(<argument pos:start="413:30" pos:end="413:32"><expr pos:start="413:30" pos:end="413:32"><name pos:start="413:30" pos:end="413:32">tmp</name></expr></argument>, <argument pos:start="413:35" pos:end="413:36"><expr pos:start="413:35" pos:end="413:36"><name pos:start="413:35" pos:end="413:36">va</name></expr></argument>, <argument pos:start="413:39" pos:end="413:39"><expr pos:start="413:39" pos:end="413:39"><literal type="number" pos:start="413:39" pos:end="413:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="415:13" pos:end="415:41"><expr pos:start="415:13" pos:end="415:40"><call pos:start="415:13" pos:end="415:40"><name pos:start="415:13" pos:end="415:27">tcg_gen_add_i64</name><argument_list pos:start="415:28" pos:end="415:40">(<argument pos:start="415:29" pos:end="415:30"><expr pos:start="415:29" pos:end="415:30"><name pos:start="415:29" pos:end="415:30">vc</name></expr></argument>, <argument pos:start="415:33" pos:end="415:35"><expr pos:start="415:33" pos:end="415:35"><name pos:start="415:33" pos:end="415:35">tmp</name></expr></argument>, <argument pos:start="415:38" pos:end="415:39"><expr pos:start="415:38" pos:end="415:39"><name pos:start="415:38" pos:end="415:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:31"><expr pos:start="417:13" pos:end="417:30"><call pos:start="417:13" pos:end="417:30"><name pos:start="417:13" pos:end="417:25">tcg_temp_free</name><argument_list pos:start="417:26" pos:end="417:30">(<argument pos:start="417:27" pos:end="417:29"><expr pos:start="417:27" pos:end="417:29"><name pos:start="417:27" pos:end="417:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="419:13" pos:end="419:18">break;</break>

        <case pos:start="421:9" pos:end="421:18">case <expr pos:start="421:14" pos:end="421:17"><literal type="number" pos:start="421:14" pos:end="421:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="423:13" pos:end="423:24">/* S8SUBQ */</comment>

            <expr_stmt pos:start="425:13" pos:end="425:33"><expr pos:start="425:13" pos:end="425:32"><name pos:start="425:13" pos:end="425:15">tmp</name> <operator pos:start="425:17" pos:end="425:17">=</operator> <call pos:start="425:19" pos:end="425:32"><name pos:start="425:19" pos:end="425:30">tcg_temp_new</name><argument_list pos:start="425:31" pos:end="425:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:41"><expr pos:start="427:13" pos:end="427:40"><call pos:start="427:13" pos:end="427:40"><name pos:start="427:13" pos:end="427:28">tcg_gen_shli_i64</name><argument_list pos:start="427:29" pos:end="427:40">(<argument pos:start="427:30" pos:end="427:32"><expr pos:start="427:30" pos:end="427:32"><name pos:start="427:30" pos:end="427:32">tmp</name></expr></argument>, <argument pos:start="427:35" pos:end="427:36"><expr pos:start="427:35" pos:end="427:36"><name pos:start="427:35" pos:end="427:36">va</name></expr></argument>, <argument pos:start="427:39" pos:end="427:39"><expr pos:start="427:39" pos:end="427:39"><literal type="number" pos:start="427:39" pos:end="427:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:41"><expr pos:start="429:13" pos:end="429:40"><call pos:start="429:13" pos:end="429:40"><name pos:start="429:13" pos:end="429:27">tcg_gen_sub_i64</name><argument_list pos:start="429:28" pos:end="429:40">(<argument pos:start="429:29" pos:end="429:30"><expr pos:start="429:29" pos:end="429:30"><name pos:start="429:29" pos:end="429:30">vc</name></expr></argument>, <argument pos:start="429:33" pos:end="429:35"><expr pos:start="429:33" pos:end="429:35"><name pos:start="429:33" pos:end="429:35">tmp</name></expr></argument>, <argument pos:start="429:38" pos:end="429:39"><expr pos:start="429:38" pos:end="429:39"><name pos:start="429:38" pos:end="429:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:31"><expr pos:start="431:13" pos:end="431:30"><call pos:start="431:13" pos:end="431:30"><name pos:start="431:13" pos:end="431:25">tcg_temp_free</name><argument_list pos:start="431:26" pos:end="431:30">(<argument pos:start="431:27" pos:end="431:29"><expr pos:start="431:27" pos:end="431:29"><name pos:start="431:27" pos:end="431:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="433:13" pos:end="433:18">break;</break>

        <case pos:start="435:9" pos:end="435:18">case <expr pos:start="435:14" pos:end="435:17"><literal type="number" pos:start="435:14" pos:end="435:17">0x3D</literal></expr>:</case>

            <comment type="block" pos:start="437:13" pos:end="437:24">/* CMPULE */</comment>

            <expr_stmt pos:start="439:13" pos:end="439:58"><expr pos:start="439:13" pos:end="439:57"><call pos:start="439:13" pos:end="439:57"><name pos:start="439:13" pos:end="439:31">tcg_gen_setcond_i64</name><argument_list pos:start="439:32" pos:end="439:57">(<argument pos:start="439:33" pos:end="439:44"><expr pos:start="439:33" pos:end="439:44"><name pos:start="439:33" pos:end="439:44">TCG_COND_LEU</name></expr></argument>, <argument pos:start="439:47" pos:end="439:48"><expr pos:start="439:47" pos:end="439:48"><name pos:start="439:47" pos:end="439:48">vc</name></expr></argument>, <argument pos:start="439:51" pos:end="439:52"><expr pos:start="439:51" pos:end="439:52"><name pos:start="439:51" pos:end="439:52">va</name></expr></argument>, <argument pos:start="439:55" pos:end="439:56"><expr pos:start="439:55" pos:end="439:56"><name pos:start="439:55" pos:end="439:56">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="441:13" pos:end="441:18">break;</break>

        <case pos:start="443:9" pos:end="443:18">case <expr pos:start="443:14" pos:end="443:17"><literal type="number" pos:start="443:14" pos:end="443:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="445:13" pos:end="445:24">/* ADDL/V */</comment>

            <expr_stmt pos:start="447:13" pos:end="447:33"><expr pos:start="447:13" pos:end="447:32"><name pos:start="447:13" pos:end="447:15">tmp</name> <operator pos:start="447:17" pos:end="447:17">=</operator> <call pos:start="447:19" pos:end="447:32"><name pos:start="447:19" pos:end="447:30">tcg_temp_new</name><argument_list pos:start="447:31" pos:end="447:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:40"><expr pos:start="449:13" pos:end="449:39"><call pos:start="449:13" pos:end="449:39"><name pos:start="449:13" pos:end="449:30">tcg_gen_ext32s_i64</name><argument_list pos:start="449:31" pos:end="449:39">(<argument pos:start="449:32" pos:end="449:34"><expr pos:start="449:32" pos:end="449:34"><name pos:start="449:32" pos:end="449:34">tmp</name></expr></argument>, <argument pos:start="449:37" pos:end="449:38"><expr pos:start="449:37" pos:end="449:38"><name pos:start="449:37" pos:end="449:38">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:39"><expr pos:start="451:13" pos:end="451:38"><call pos:start="451:13" pos:end="451:38"><name pos:start="451:13" pos:end="451:30">tcg_gen_ext32s_i64</name><argument_list pos:start="451:31" pos:end="451:38">(<argument pos:start="451:32" pos:end="451:33"><expr pos:start="451:32" pos:end="451:33"><name pos:start="451:32" pos:end="451:33">vc</name></expr></argument>, <argument pos:start="451:36" pos:end="451:37"><expr pos:start="451:36" pos:end="451:37"><name pos:start="451:36" pos:end="451:37">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="453:13" pos:end="453:42"><expr pos:start="453:13" pos:end="453:41"><call pos:start="453:13" pos:end="453:41"><name pos:start="453:13" pos:end="453:27">tcg_gen_add_i64</name><argument_list pos:start="453:28" pos:end="453:41">(<argument pos:start="453:29" pos:end="453:31"><expr pos:start="453:29" pos:end="453:31"><name pos:start="453:29" pos:end="453:31">tmp</name></expr></argument>, <argument pos:start="453:34" pos:end="453:36"><expr pos:start="453:34" pos:end="453:36"><name pos:start="453:34" pos:end="453:36">tmp</name></expr></argument>, <argument pos:start="453:39" pos:end="453:40"><expr pos:start="453:39" pos:end="453:40"><name pos:start="453:39" pos:end="453:40">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="455:13" pos:end="455:40"><expr pos:start="455:13" pos:end="455:39"><call pos:start="455:13" pos:end="455:39"><name pos:start="455:13" pos:end="455:30">tcg_gen_ext32s_i64</name><argument_list pos:start="455:31" pos:end="455:39">(<argument pos:start="455:32" pos:end="455:33"><expr pos:start="455:32" pos:end="455:33"><name pos:start="455:32" pos:end="455:33">vc</name></expr></argument>, <argument pos:start="455:36" pos:end="455:38"><expr pos:start="455:36" pos:end="455:38"><name pos:start="455:36" pos:end="455:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="457:13" pos:end="457:56"><expr pos:start="457:13" pos:end="457:55"><call pos:start="457:13" pos:end="457:55"><name pos:start="457:13" pos:end="457:37">gen_helper_check_overflow</name><argument_list pos:start="457:38" pos:end="457:55">(<argument pos:start="457:39" pos:end="457:45"><expr pos:start="457:39" pos:end="457:45"><name pos:start="457:39" pos:end="457:45">cpu_env</name></expr></argument>, <argument pos:start="457:48" pos:end="457:49"><expr pos:start="457:48" pos:end="457:49"><name pos:start="457:48" pos:end="457:49">vc</name></expr></argument>, <argument pos:start="457:52" pos:end="457:54"><expr pos:start="457:52" pos:end="457:54"><name pos:start="457:52" pos:end="457:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:31"><expr pos:start="459:13" pos:end="459:30"><call pos:start="459:13" pos:end="459:30"><name pos:start="459:13" pos:end="459:25">tcg_temp_free</name><argument_list pos:start="459:26" pos:end="459:30">(<argument pos:start="459:27" pos:end="459:29"><expr pos:start="459:27" pos:end="459:29"><name pos:start="459:27" pos:end="459:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="461:13" pos:end="461:18">break;</break>

        <case pos:start="463:9" pos:end="463:18">case <expr pos:start="463:14" pos:end="463:17"><literal type="number" pos:start="463:14" pos:end="463:17">0x49</literal></expr>:</case>

            <comment type="block" pos:start="465:13" pos:end="465:24">/* SUBL/V */</comment>

            <expr_stmt pos:start="467:13" pos:end="467:33"><expr pos:start="467:13" pos:end="467:32"><name pos:start="467:13" pos:end="467:15">tmp</name> <operator pos:start="467:17" pos:end="467:17">=</operator> <call pos:start="467:19" pos:end="467:32"><name pos:start="467:19" pos:end="467:30">tcg_temp_new</name><argument_list pos:start="467:31" pos:end="467:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="469:13" pos:end="469:40"><expr pos:start="469:13" pos:end="469:39"><call pos:start="469:13" pos:end="469:39"><name pos:start="469:13" pos:end="469:30">tcg_gen_ext32s_i64</name><argument_list pos:start="469:31" pos:end="469:39">(<argument pos:start="469:32" pos:end="469:34"><expr pos:start="469:32" pos:end="469:34"><name pos:start="469:32" pos:end="469:34">tmp</name></expr></argument>, <argument pos:start="469:37" pos:end="469:38"><expr pos:start="469:37" pos:end="469:38"><name pos:start="469:37" pos:end="469:38">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="471:13" pos:end="471:39"><expr pos:start="471:13" pos:end="471:38"><call pos:start="471:13" pos:end="471:38"><name pos:start="471:13" pos:end="471:30">tcg_gen_ext32s_i64</name><argument_list pos:start="471:31" pos:end="471:38">(<argument pos:start="471:32" pos:end="471:33"><expr pos:start="471:32" pos:end="471:33"><name pos:start="471:32" pos:end="471:33">vc</name></expr></argument>, <argument pos:start="471:36" pos:end="471:37"><expr pos:start="471:36" pos:end="471:37"><name pos:start="471:36" pos:end="471:37">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="473:13" pos:end="473:42"><expr pos:start="473:13" pos:end="473:41"><call pos:start="473:13" pos:end="473:41"><name pos:start="473:13" pos:end="473:27">tcg_gen_sub_i64</name><argument_list pos:start="473:28" pos:end="473:41">(<argument pos:start="473:29" pos:end="473:31"><expr pos:start="473:29" pos:end="473:31"><name pos:start="473:29" pos:end="473:31">tmp</name></expr></argument>, <argument pos:start="473:34" pos:end="473:36"><expr pos:start="473:34" pos:end="473:36"><name pos:start="473:34" pos:end="473:36">tmp</name></expr></argument>, <argument pos:start="473:39" pos:end="473:40"><expr pos:start="473:39" pos:end="473:40"><name pos:start="473:39" pos:end="473:40">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="475:13" pos:end="475:40"><expr pos:start="475:13" pos:end="475:39"><call pos:start="475:13" pos:end="475:39"><name pos:start="475:13" pos:end="475:30">tcg_gen_ext32s_i64</name><argument_list pos:start="475:31" pos:end="475:39">(<argument pos:start="475:32" pos:end="475:33"><expr pos:start="475:32" pos:end="475:33"><name pos:start="475:32" pos:end="475:33">vc</name></expr></argument>, <argument pos:start="475:36" pos:end="475:38"><expr pos:start="475:36" pos:end="475:38"><name pos:start="475:36" pos:end="475:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="477:13" pos:end="477:56"><expr pos:start="477:13" pos:end="477:55"><call pos:start="477:13" pos:end="477:55"><name pos:start="477:13" pos:end="477:37">gen_helper_check_overflow</name><argument_list pos:start="477:38" pos:end="477:55">(<argument pos:start="477:39" pos:end="477:45"><expr pos:start="477:39" pos:end="477:45"><name pos:start="477:39" pos:end="477:45">cpu_env</name></expr></argument>, <argument pos:start="477:48" pos:end="477:49"><expr pos:start="477:48" pos:end="477:49"><name pos:start="477:48" pos:end="477:49">vc</name></expr></argument>, <argument pos:start="477:52" pos:end="477:54"><expr pos:start="477:52" pos:end="477:54"><name pos:start="477:52" pos:end="477:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="479:13" pos:end="479:31"><expr pos:start="479:13" pos:end="479:30"><call pos:start="479:13" pos:end="479:30"><name pos:start="479:13" pos:end="479:25">tcg_temp_free</name><argument_list pos:start="479:26" pos:end="479:30">(<argument pos:start="479:27" pos:end="479:29"><expr pos:start="479:27" pos:end="479:29"><name pos:start="479:27" pos:end="479:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="481:13" pos:end="481:18">break;</break>

        <case pos:start="483:9" pos:end="483:18">case <expr pos:start="483:14" pos:end="483:17"><literal type="number" pos:start="483:14" pos:end="483:17">0x4D</literal></expr>:</case>

            <comment type="block" pos:start="485:13" pos:end="485:23">/* CMPLT */</comment>

            <expr_stmt pos:start="487:13" pos:end="487:57"><expr pos:start="487:13" pos:end="487:56"><call pos:start="487:13" pos:end="487:56"><name pos:start="487:13" pos:end="487:31">tcg_gen_setcond_i64</name><argument_list pos:start="487:32" pos:end="487:56">(<argument pos:start="487:33" pos:end="487:43"><expr pos:start="487:33" pos:end="487:43"><name pos:start="487:33" pos:end="487:43">TCG_COND_LT</name></expr></argument>, <argument pos:start="487:46" pos:end="487:47"><expr pos:start="487:46" pos:end="487:47"><name pos:start="487:46" pos:end="487:47">vc</name></expr></argument>, <argument pos:start="487:50" pos:end="487:51"><expr pos:start="487:50" pos:end="487:51"><name pos:start="487:50" pos:end="487:51">va</name></expr></argument>, <argument pos:start="487:54" pos:end="487:55"><expr pos:start="487:54" pos:end="487:55"><name pos:start="487:54" pos:end="487:55">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="489:13" pos:end="489:18">break;</break>

        <case pos:start="491:9" pos:end="491:18">case <expr pos:start="491:14" pos:end="491:17"><literal type="number" pos:start="491:14" pos:end="491:17">0x60</literal></expr>:</case>

            <comment type="block" pos:start="493:13" pos:end="493:24">/* ADDQ/V */</comment>

            <expr_stmt pos:start="495:13" pos:end="495:33"><expr pos:start="495:13" pos:end="495:32"><name pos:start="495:13" pos:end="495:15">tmp</name> <operator pos:start="495:17" pos:end="495:17">=</operator> <call pos:start="495:19" pos:end="495:32"><name pos:start="495:19" pos:end="495:30">tcg_temp_new</name><argument_list pos:start="495:31" pos:end="495:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:34"><expr pos:start="497:13" pos:end="497:33"><name pos:start="497:13" pos:end="497:16">tmp2</name> <operator pos:start="497:18" pos:end="497:18">=</operator> <call pos:start="497:20" pos:end="497:33"><name pos:start="497:20" pos:end="497:31">tcg_temp_new</name><argument_list pos:start="497:32" pos:end="497:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:41"><expr pos:start="499:13" pos:end="499:40"><call pos:start="499:13" pos:end="499:40"><name pos:start="499:13" pos:end="499:27">tcg_gen_eqv_i64</name><argument_list pos:start="499:28" pos:end="499:40">(<argument pos:start="499:29" pos:end="499:31"><expr pos:start="499:29" pos:end="499:31"><name pos:start="499:29" pos:end="499:31">tmp</name></expr></argument>, <argument pos:start="499:34" pos:end="499:35"><expr pos:start="499:34" pos:end="499:35"><name pos:start="499:34" pos:end="499:35">va</name></expr></argument>, <argument pos:start="499:38" pos:end="499:39"><expr pos:start="499:38" pos:end="499:39"><name pos:start="499:38" pos:end="499:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="501:13" pos:end="501:38"><expr pos:start="501:13" pos:end="501:37"><call pos:start="501:13" pos:end="501:37"><name pos:start="501:13" pos:end="501:27">tcg_gen_mov_i64</name><argument_list pos:start="501:28" pos:end="501:37">(<argument pos:start="501:29" pos:end="501:32"><expr pos:start="501:29" pos:end="501:32"><name pos:start="501:29" pos:end="501:32">tmp2</name></expr></argument>, <argument pos:start="501:35" pos:end="501:36"><expr pos:start="501:35" pos:end="501:36"><name pos:start="501:35" pos:end="501:36">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="503:13" pos:end="503:40"><expr pos:start="503:13" pos:end="503:39"><call pos:start="503:13" pos:end="503:39"><name pos:start="503:13" pos:end="503:27">tcg_gen_add_i64</name><argument_list pos:start="503:28" pos:end="503:39">(<argument pos:start="503:29" pos:end="503:30"><expr pos:start="503:29" pos:end="503:30"><name pos:start="503:29" pos:end="503:30">vc</name></expr></argument>, <argument pos:start="503:33" pos:end="503:34"><expr pos:start="503:33" pos:end="503:34"><name pos:start="503:33" pos:end="503:34">va</name></expr></argument>, <argument pos:start="503:37" pos:end="503:38"><expr pos:start="503:37" pos:end="503:38"><name pos:start="503:37" pos:end="503:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:44"><expr pos:start="505:13" pos:end="505:43"><call pos:start="505:13" pos:end="505:43"><name pos:start="505:13" pos:end="505:27">tcg_gen_xor_i64</name><argument_list pos:start="505:28" pos:end="505:43">(<argument pos:start="505:29" pos:end="505:32"><expr pos:start="505:29" pos:end="505:32"><name pos:start="505:29" pos:end="505:32">tmp2</name></expr></argument>, <argument pos:start="505:35" pos:end="505:38"><expr pos:start="505:35" pos:end="505:38"><name pos:start="505:35" pos:end="505:38">tmp2</name></expr></argument>, <argument pos:start="505:41" pos:end="505:42"><expr pos:start="505:41" pos:end="505:42"><name pos:start="505:41" pos:end="505:42">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="507:13" pos:end="507:44"><expr pos:start="507:13" pos:end="507:43"><call pos:start="507:13" pos:end="507:43"><name pos:start="507:13" pos:end="507:27">tcg_gen_and_i64</name><argument_list pos:start="507:28" pos:end="507:43">(<argument pos:start="507:29" pos:end="507:31"><expr pos:start="507:29" pos:end="507:31"><name pos:start="507:29" pos:end="507:31">tmp</name></expr></argument>, <argument pos:start="507:34" pos:end="507:36"><expr pos:start="507:34" pos:end="507:36"><name pos:start="507:34" pos:end="507:36">tmp</name></expr></argument>, <argument pos:start="507:39" pos:end="507:42"><expr pos:start="507:39" pos:end="507:42"><name pos:start="507:39" pos:end="507:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:43"><expr pos:start="509:13" pos:end="509:42"><call pos:start="509:13" pos:end="509:42"><name pos:start="509:13" pos:end="509:28">tcg_gen_shri_i64</name><argument_list pos:start="509:29" pos:end="509:42">(<argument pos:start="509:30" pos:end="509:32"><expr pos:start="509:30" pos:end="509:32"><name pos:start="509:30" pos:end="509:32">tmp</name></expr></argument>, <argument pos:start="509:35" pos:end="509:37"><expr pos:start="509:35" pos:end="509:37"><name pos:start="509:35" pos:end="509:37">tmp</name></expr></argument>, <argument pos:start="509:40" pos:end="509:41"><expr pos:start="509:40" pos:end="509:41"><literal type="number" pos:start="509:40" pos:end="509:41">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="511:13" pos:end="511:38"><expr pos:start="511:13" pos:end="511:37"><call pos:start="511:13" pos:end="511:37"><name pos:start="511:13" pos:end="511:28">tcg_gen_movi_i64</name><argument_list pos:start="511:29" pos:end="511:37">(<argument pos:start="511:30" pos:end="511:33"><expr pos:start="511:30" pos:end="511:33"><name pos:start="511:30" pos:end="511:33">tmp2</name></expr></argument>, <argument pos:start="511:36" pos:end="511:36"><expr pos:start="511:36" pos:end="511:36"><literal type="number" pos:start="511:36" pos:end="511:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="513:13" pos:end="513:58"><expr pos:start="513:13" pos:end="513:57"><call pos:start="513:13" pos:end="513:57"><name pos:start="513:13" pos:end="513:37">gen_helper_check_overflow</name><argument_list pos:start="513:38" pos:end="513:57">(<argument pos:start="513:39" pos:end="513:45"><expr pos:start="513:39" pos:end="513:45"><name pos:start="513:39" pos:end="513:45">cpu_env</name></expr></argument>, <argument pos:start="513:48" pos:end="513:50"><expr pos:start="513:48" pos:end="513:50"><name pos:start="513:48" pos:end="513:50">tmp</name></expr></argument>, <argument pos:start="513:53" pos:end="513:56"><expr pos:start="513:53" pos:end="513:56"><name pos:start="513:53" pos:end="513:56">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="515:13" pos:end="515:31"><expr pos:start="515:13" pos:end="515:30"><call pos:start="515:13" pos:end="515:30"><name pos:start="515:13" pos:end="515:25">tcg_temp_free</name><argument_list pos:start="515:26" pos:end="515:30">(<argument pos:start="515:27" pos:end="515:29"><expr pos:start="515:27" pos:end="515:29"><name pos:start="515:27" pos:end="515:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="517:13" pos:end="517:32"><expr pos:start="517:13" pos:end="517:31"><call pos:start="517:13" pos:end="517:31"><name pos:start="517:13" pos:end="517:25">tcg_temp_free</name><argument_list pos:start="517:26" pos:end="517:31">(<argument pos:start="517:27" pos:end="517:30"><expr pos:start="517:27" pos:end="517:30"><name pos:start="517:27" pos:end="517:30">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="519:13" pos:end="519:18">break;</break>

        <case pos:start="521:9" pos:end="521:18">case <expr pos:start="521:14" pos:end="521:17"><literal type="number" pos:start="521:14" pos:end="521:17">0x69</literal></expr>:</case>

            <comment type="block" pos:start="523:13" pos:end="523:24">/* SUBQ/V */</comment>

            <expr_stmt pos:start="525:13" pos:end="525:33"><expr pos:start="525:13" pos:end="525:32"><name pos:start="525:13" pos:end="525:15">tmp</name> <operator pos:start="525:17" pos:end="525:17">=</operator> <call pos:start="525:19" pos:end="525:32"><name pos:start="525:19" pos:end="525:30">tcg_temp_new</name><argument_list pos:start="525:31" pos:end="525:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:34"><expr pos:start="527:13" pos:end="527:33"><name pos:start="527:13" pos:end="527:16">tmp2</name> <operator pos:start="527:18" pos:end="527:18">=</operator> <call pos:start="527:20" pos:end="527:33"><name pos:start="527:20" pos:end="527:31">tcg_temp_new</name><argument_list pos:start="527:32" pos:end="527:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="529:13" pos:end="529:41"><expr pos:start="529:13" pos:end="529:40"><call pos:start="529:13" pos:end="529:40"><name pos:start="529:13" pos:end="529:27">tcg_gen_xor_i64</name><argument_list pos:start="529:28" pos:end="529:40">(<argument pos:start="529:29" pos:end="529:31"><expr pos:start="529:29" pos:end="529:31"><name pos:start="529:29" pos:end="529:31">tmp</name></expr></argument>, <argument pos:start="529:34" pos:end="529:35"><expr pos:start="529:34" pos:end="529:35"><name pos:start="529:34" pos:end="529:35">va</name></expr></argument>, <argument pos:start="529:38" pos:end="529:39"><expr pos:start="529:38" pos:end="529:39"><name pos:start="529:38" pos:end="529:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="531:13" pos:end="531:38"><expr pos:start="531:13" pos:end="531:37"><call pos:start="531:13" pos:end="531:37"><name pos:start="531:13" pos:end="531:27">tcg_gen_mov_i64</name><argument_list pos:start="531:28" pos:end="531:37">(<argument pos:start="531:29" pos:end="531:32"><expr pos:start="531:29" pos:end="531:32"><name pos:start="531:29" pos:end="531:32">tmp2</name></expr></argument>, <argument pos:start="531:35" pos:end="531:36"><expr pos:start="531:35" pos:end="531:36"><name pos:start="531:35" pos:end="531:36">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="533:13" pos:end="533:40"><expr pos:start="533:13" pos:end="533:39"><call pos:start="533:13" pos:end="533:39"><name pos:start="533:13" pos:end="533:27">tcg_gen_sub_i64</name><argument_list pos:start="533:28" pos:end="533:39">(<argument pos:start="533:29" pos:end="533:30"><expr pos:start="533:29" pos:end="533:30"><name pos:start="533:29" pos:end="533:30">vc</name></expr></argument>, <argument pos:start="533:33" pos:end="533:34"><expr pos:start="533:33" pos:end="533:34"><name pos:start="533:33" pos:end="533:34">va</name></expr></argument>, <argument pos:start="533:37" pos:end="533:38"><expr pos:start="533:37" pos:end="533:38"><name pos:start="533:37" pos:end="533:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="535:13" pos:end="535:44"><expr pos:start="535:13" pos:end="535:43"><call pos:start="535:13" pos:end="535:43"><name pos:start="535:13" pos:end="535:27">tcg_gen_xor_i64</name><argument_list pos:start="535:28" pos:end="535:43">(<argument pos:start="535:29" pos:end="535:32"><expr pos:start="535:29" pos:end="535:32"><name pos:start="535:29" pos:end="535:32">tmp2</name></expr></argument>, <argument pos:start="535:35" pos:end="535:38"><expr pos:start="535:35" pos:end="535:38"><name pos:start="535:35" pos:end="535:38">tmp2</name></expr></argument>, <argument pos:start="535:41" pos:end="535:42"><expr pos:start="535:41" pos:end="535:42"><name pos:start="535:41" pos:end="535:42">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="537:13" pos:end="537:44"><expr pos:start="537:13" pos:end="537:43"><call pos:start="537:13" pos:end="537:43"><name pos:start="537:13" pos:end="537:27">tcg_gen_and_i64</name><argument_list pos:start="537:28" pos:end="537:43">(<argument pos:start="537:29" pos:end="537:31"><expr pos:start="537:29" pos:end="537:31"><name pos:start="537:29" pos:end="537:31">tmp</name></expr></argument>, <argument pos:start="537:34" pos:end="537:36"><expr pos:start="537:34" pos:end="537:36"><name pos:start="537:34" pos:end="537:36">tmp</name></expr></argument>, <argument pos:start="537:39" pos:end="537:42"><expr pos:start="537:39" pos:end="537:42"><name pos:start="537:39" pos:end="537:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="539:13" pos:end="539:43"><expr pos:start="539:13" pos:end="539:42"><call pos:start="539:13" pos:end="539:42"><name pos:start="539:13" pos:end="539:28">tcg_gen_shri_i64</name><argument_list pos:start="539:29" pos:end="539:42">(<argument pos:start="539:30" pos:end="539:32"><expr pos:start="539:30" pos:end="539:32"><name pos:start="539:30" pos:end="539:32">tmp</name></expr></argument>, <argument pos:start="539:35" pos:end="539:37"><expr pos:start="539:35" pos:end="539:37"><name pos:start="539:35" pos:end="539:37">tmp</name></expr></argument>, <argument pos:start="539:40" pos:end="539:41"><expr pos:start="539:40" pos:end="539:41"><literal type="number" pos:start="539:40" pos:end="539:41">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="541:13" pos:end="541:38"><expr pos:start="541:13" pos:end="541:37"><call pos:start="541:13" pos:end="541:37"><name pos:start="541:13" pos:end="541:28">tcg_gen_movi_i64</name><argument_list pos:start="541:29" pos:end="541:37">(<argument pos:start="541:30" pos:end="541:33"><expr pos:start="541:30" pos:end="541:33"><name pos:start="541:30" pos:end="541:33">tmp2</name></expr></argument>, <argument pos:start="541:36" pos:end="541:36"><expr pos:start="541:36" pos:end="541:36"><literal type="number" pos:start="541:36" pos:end="541:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="543:13" pos:end="543:58"><expr pos:start="543:13" pos:end="543:57"><call pos:start="543:13" pos:end="543:57"><name pos:start="543:13" pos:end="543:37">gen_helper_check_overflow</name><argument_list pos:start="543:38" pos:end="543:57">(<argument pos:start="543:39" pos:end="543:45"><expr pos:start="543:39" pos:end="543:45"><name pos:start="543:39" pos:end="543:45">cpu_env</name></expr></argument>, <argument pos:start="543:48" pos:end="543:50"><expr pos:start="543:48" pos:end="543:50"><name pos:start="543:48" pos:end="543:50">tmp</name></expr></argument>, <argument pos:start="543:53" pos:end="543:56"><expr pos:start="543:53" pos:end="543:56"><name pos:start="543:53" pos:end="543:56">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="545:13" pos:end="545:31"><expr pos:start="545:13" pos:end="545:30"><call pos:start="545:13" pos:end="545:30"><name pos:start="545:13" pos:end="545:25">tcg_temp_free</name><argument_list pos:start="545:26" pos:end="545:30">(<argument pos:start="545:27" pos:end="545:29"><expr pos:start="545:27" pos:end="545:29"><name pos:start="545:27" pos:end="545:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="547:13" pos:end="547:32"><expr pos:start="547:13" pos:end="547:31"><call pos:start="547:13" pos:end="547:31"><name pos:start="547:13" pos:end="547:25">tcg_temp_free</name><argument_list pos:start="547:26" pos:end="547:31">(<argument pos:start="547:27" pos:end="547:30"><expr pos:start="547:27" pos:end="547:30"><name pos:start="547:27" pos:end="547:30">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="549:13" pos:end="549:18">break;</break>

        <case pos:start="551:9" pos:end="551:18">case <expr pos:start="551:14" pos:end="551:17"><literal type="number" pos:start="551:14" pos:end="551:17">0x6D</literal></expr>:</case>

            <comment type="block" pos:start="553:13" pos:end="553:23">/* CMPLE */</comment>

            <expr_stmt pos:start="555:13" pos:end="555:57"><expr pos:start="555:13" pos:end="555:56"><call pos:start="555:13" pos:end="555:56"><name pos:start="555:13" pos:end="555:31">tcg_gen_setcond_i64</name><argument_list pos:start="555:32" pos:end="555:56">(<argument pos:start="555:33" pos:end="555:43"><expr pos:start="555:33" pos:end="555:43"><name pos:start="555:33" pos:end="555:43">TCG_COND_LE</name></expr></argument>, <argument pos:start="555:46" pos:end="555:47"><expr pos:start="555:46" pos:end="555:47"><name pos:start="555:46" pos:end="555:47">vc</name></expr></argument>, <argument pos:start="555:50" pos:end="555:51"><expr pos:start="555:50" pos:end="555:51"><name pos:start="555:50" pos:end="555:51">va</name></expr></argument>, <argument pos:start="555:54" pos:end="555:55"><expr pos:start="555:54" pos:end="555:55"><name pos:start="555:54" pos:end="555:55">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="557:13" pos:end="557:18">break;</break>

        <default pos:start="559:9" pos:end="559:16">default:</default>

            <goto pos:start="561:13" pos:end="561:29">goto <name pos:start="561:18" pos:end="561:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="565:9" pos:end="565:14">break;</break>



    <case pos:start="569:5" pos:end="569:14">case <expr pos:start="569:10" pos:end="569:13"><literal type="number" pos:start="569:10" pos:end="569:13">0x11</literal></expr>:</case>

        <if_stmt pos:start="571:9" pos:end="601:9"><if pos:start="571:9" pos:end="601:9">if <condition pos:start="571:12" pos:end="571:24">(<expr pos:start="571:13" pos:end="571:23"><name pos:start="571:13" pos:end="571:15">fn7</name> <operator pos:start="571:17" pos:end="571:18">==</operator> <literal type="number" pos:start="571:20" pos:end="571:23">0x20</literal></expr>)</condition> <block pos:start="571:26" pos:end="601:9">{<block_content pos:start="573:13" pos:end="599:13">

            <if_stmt pos:start="573:13" pos:end="579:13"><if pos:start="573:13" pos:end="579:13">if <condition pos:start="573:16" pos:end="573:25">(<expr pos:start="573:17" pos:end="573:24"><name pos:start="573:17" pos:end="573:18">rc</name> <operator pos:start="573:20" pos:end="573:21">==</operator> <literal type="number" pos:start="573:23" pos:end="573:24">31</literal></expr>)</condition> <block pos:start="573:27" pos:end="579:13">{<block_content pos:start="577:17" pos:end="577:22">

                <comment type="block" pos:start="575:17" pos:end="575:47">/* Special case BIS as NOP.  */</comment>

                <break pos:start="577:17" pos:end="577:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="581:13" pos:end="599:13"><if pos:start="581:13" pos:end="599:13">if <condition pos:start="581:16" pos:end="581:25">(<expr pos:start="581:17" pos:end="581:24"><name pos:start="581:17" pos:end="581:18">ra</name> <operator pos:start="581:20" pos:end="581:21">==</operator> <literal type="number" pos:start="581:23" pos:end="581:24">31</literal></expr>)</condition> <block pos:start="581:27" pos:end="599:13">{<block_content pos:start="585:17" pos:end="597:22">

                <comment type="block" pos:start="583:17" pos:end="583:47">/* Special case BIS as MOV.  */</comment>

                <expr_stmt pos:start="585:17" pos:end="585:39"><expr pos:start="585:17" pos:end="585:38"><name pos:start="585:17" pos:end="585:18">vc</name> <operator pos:start="585:20" pos:end="585:20">=</operator> <call pos:start="585:22" pos:end="585:38"><name pos:start="585:22" pos:end="585:29">dest_gpr</name><argument_list pos:start="585:30" pos:end="585:38">(<argument pos:start="585:31" pos:end="585:33"><expr pos:start="585:31" pos:end="585:33"><name pos:start="585:31" pos:end="585:33">ctx</name></expr></argument>, <argument pos:start="585:36" pos:end="585:37"><expr pos:start="585:36" pos:end="585:37"><name pos:start="585:36" pos:end="585:37">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="587:17" pos:end="595:17"><if pos:start="587:17" pos:end="591:17">if <condition pos:start="587:20" pos:end="587:26">(<expr pos:start="587:21" pos:end="587:25"><name pos:start="587:21" pos:end="587:25">islit</name></expr>)</condition> <block pos:start="587:28" pos:end="591:17">{<block_content pos:start="589:21" pos:end="589:46">

                    <expr_stmt pos:start="589:21" pos:end="589:46"><expr pos:start="589:21" pos:end="589:45"><call pos:start="589:21" pos:end="589:45"><name pos:start="589:21" pos:end="589:36">tcg_gen_movi_i64</name><argument_list pos:start="589:37" pos:end="589:45">(<argument pos:start="589:38" pos:end="589:39"><expr pos:start="589:38" pos:end="589:39"><name pos:start="589:38" pos:end="589:39">vc</name></expr></argument>, <argument pos:start="589:42" pos:end="589:44"><expr pos:start="589:42" pos:end="589:44"><name pos:start="589:42" pos:end="589:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="591:19" pos:end="595:17">else <block pos:start="591:24" pos:end="595:17">{<block_content pos:start="593:21" pos:end="593:59">

                    <expr_stmt pos:start="593:21" pos:end="593:59"><expr pos:start="593:21" pos:end="593:58"><call pos:start="593:21" pos:end="593:58"><name pos:start="593:21" pos:end="593:35">tcg_gen_mov_i64</name><argument_list pos:start="593:36" pos:end="593:58">(<argument pos:start="593:37" pos:end="593:38"><expr pos:start="593:37" pos:end="593:38"><name pos:start="593:37" pos:end="593:38">vc</name></expr></argument>, <argument pos:start="593:41" pos:end="593:57"><expr pos:start="593:41" pos:end="593:57"><call pos:start="593:41" pos:end="593:57"><name pos:start="593:41" pos:end="593:48">load_gpr</name><argument_list pos:start="593:49" pos:end="593:57">(<argument pos:start="593:50" pos:end="593:52"><expr pos:start="593:50" pos:end="593:52"><name pos:start="593:50" pos:end="593:52">ctx</name></expr></argument>, <argument pos:start="593:55" pos:end="593:56"><expr pos:start="593:55" pos:end="593:56"><name pos:start="593:55" pos:end="593:56">rb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="597:17" pos:end="597:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="605:9" pos:end="605:31"><expr pos:start="605:9" pos:end="605:30"><name pos:start="605:9" pos:end="605:10">vc</name> <operator pos:start="605:12" pos:end="605:12">=</operator> <call pos:start="605:14" pos:end="605:30"><name pos:start="605:14" pos:end="605:21">dest_gpr</name><argument_list pos:start="605:22" pos:end="605:30">(<argument pos:start="605:23" pos:end="605:25"><expr pos:start="605:23" pos:end="605:25"><name pos:start="605:23" pos:end="605:25">ctx</name></expr></argument>, <argument pos:start="605:28" pos:end="605:29"><expr pos:start="605:28" pos:end="605:29"><name pos:start="605:28" pos:end="605:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="607:9" pos:end="607:47"><expr pos:start="607:9" pos:end="607:46"><name pos:start="607:9" pos:end="607:10">vb</name> <operator pos:start="607:12" pos:end="607:12">=</operator> <call pos:start="607:14" pos:end="607:46"><name pos:start="607:14" pos:end="607:25">load_gpr_lit</name><argument_list pos:start="607:26" pos:end="607:46">(<argument pos:start="607:27" pos:end="607:29"><expr pos:start="607:27" pos:end="607:29"><name pos:start="607:27" pos:end="607:29">ctx</name></expr></argument>, <argument pos:start="607:32" pos:end="607:33"><expr pos:start="607:32" pos:end="607:33"><name pos:start="607:32" pos:end="607:33">rb</name></expr></argument>, <argument pos:start="607:36" pos:end="607:38"><expr pos:start="607:36" pos:end="607:38"><name pos:start="607:36" pos:end="607:38">lit</name></expr></argument>, <argument pos:start="607:41" pos:end="607:45"><expr pos:start="607:41" pos:end="607:45"><name pos:start="607:41" pos:end="607:45">islit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="611:9" pos:end="619:9"><if pos:start="611:9" pos:end="619:9">if <condition pos:start="611:12" pos:end="611:36">(<expr pos:start="611:13" pos:end="611:35"><name pos:start="611:13" pos:end="611:15">fn7</name> <operator pos:start="611:17" pos:end="611:18">==</operator> <literal type="number" pos:start="611:20" pos:end="611:23">0x28</literal> <operator pos:start="611:25" pos:end="611:26">&amp;&amp;</operator> <name pos:start="611:28" pos:end="611:29">ra</name> <operator pos:start="611:31" pos:end="611:32">==</operator> <literal type="number" pos:start="611:34" pos:end="611:35">31</literal></expr>)</condition> <block pos:start="611:38" pos:end="619:9">{<block_content pos:start="615:13" pos:end="617:18">

            <comment type="block" pos:start="613:13" pos:end="613:45">/* Special case ORNOT as NOT.  */</comment>

            <expr_stmt pos:start="615:13" pos:end="615:36"><expr pos:start="615:13" pos:end="615:35"><call pos:start="615:13" pos:end="615:35"><name pos:start="615:13" pos:end="615:27">tcg_gen_not_i64</name><argument_list pos:start="615:28" pos:end="615:35">(<argument pos:start="615:29" pos:end="615:30"><expr pos:start="615:29" pos:end="615:30"><name pos:start="615:29" pos:end="615:30">vc</name></expr></argument>, <argument pos:start="615:33" pos:end="615:34"><expr pos:start="615:33" pos:end="615:34"><name pos:start="615:33" pos:end="615:34">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="617:13" pos:end="617:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="623:9" pos:end="623:31"><expr pos:start="623:9" pos:end="623:30"><name pos:start="623:9" pos:end="623:10">va</name> <operator pos:start="623:12" pos:end="623:12">=</operator> <call pos:start="623:14" pos:end="623:30"><name pos:start="623:14" pos:end="623:21">load_gpr</name><argument_list pos:start="623:22" pos:end="623:30">(<argument pos:start="623:23" pos:end="623:25"><expr pos:start="623:23" pos:end="623:25"><name pos:start="623:23" pos:end="623:25">ctx</name></expr></argument>, <argument pos:start="623:28" pos:end="623:29"><expr pos:start="623:28" pos:end="623:29"><name pos:start="623:28" pos:end="623:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="625:9" pos:end="791:9">switch <condition pos:start="625:16" pos:end="625:20">(<expr pos:start="625:17" pos:end="625:19"><name pos:start="625:17" pos:end="625:19">fn7</name></expr>)</condition> <block pos:start="625:22" pos:end="791:9">{<block_content pos:start="627:9" pos:end="789:29">

        <case pos:start="627:9" pos:end="627:18">case <expr pos:start="627:14" pos:end="627:17"><literal type="number" pos:start="627:14" pos:end="627:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="629:13" pos:end="629:21">/* AND */</comment>

            <expr_stmt pos:start="631:13" pos:end="631:40"><expr pos:start="631:13" pos:end="631:39"><call pos:start="631:13" pos:end="631:39"><name pos:start="631:13" pos:end="631:27">tcg_gen_and_i64</name><argument_list pos:start="631:28" pos:end="631:39">(<argument pos:start="631:29" pos:end="631:30"><expr pos:start="631:29" pos:end="631:30"><name pos:start="631:29" pos:end="631:30">vc</name></expr></argument>, <argument pos:start="631:33" pos:end="631:34"><expr pos:start="631:33" pos:end="631:34"><name pos:start="631:33" pos:end="631:34">va</name></expr></argument>, <argument pos:start="631:37" pos:end="631:38"><expr pos:start="631:37" pos:end="631:38"><name pos:start="631:37" pos:end="631:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="633:13" pos:end="633:18">break;</break>

        <case pos:start="635:9" pos:end="635:18">case <expr pos:start="635:14" pos:end="635:17"><literal type="number" pos:start="635:14" pos:end="635:17">0x08</literal></expr>:</case>

            <comment type="block" pos:start="637:13" pos:end="637:21">/* BIC */</comment>

            <expr_stmt pos:start="639:13" pos:end="639:41"><expr pos:start="639:13" pos:end="639:40"><call pos:start="639:13" pos:end="639:40"><name pos:start="639:13" pos:end="639:28">tcg_gen_andc_i64</name><argument_list pos:start="639:29" pos:end="639:40">(<argument pos:start="639:30" pos:end="639:31"><expr pos:start="639:30" pos:end="639:31"><name pos:start="639:30" pos:end="639:31">vc</name></expr></argument>, <argument pos:start="639:34" pos:end="639:35"><expr pos:start="639:34" pos:end="639:35"><name pos:start="639:34" pos:end="639:35">va</name></expr></argument>, <argument pos:start="639:38" pos:end="639:39"><expr pos:start="639:38" pos:end="639:39"><name pos:start="639:38" pos:end="639:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="641:13" pos:end="641:18">break;</break>

        <case pos:start="643:9" pos:end="643:18">case <expr pos:start="643:14" pos:end="643:17"><literal type="number" pos:start="643:14" pos:end="643:17">0x14</literal></expr>:</case>

            <comment type="block" pos:start="645:13" pos:end="645:25">/* CMOVLBS */</comment>

            <expr_stmt pos:start="647:13" pos:end="647:33"><expr pos:start="647:13" pos:end="647:32"><name pos:start="647:13" pos:end="647:15">tmp</name> <operator pos:start="647:17" pos:end="647:17">=</operator> <call pos:start="647:19" pos:end="647:32"><name pos:start="647:19" pos:end="647:30">tcg_temp_new</name><argument_list pos:start="647:31" pos:end="647:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="649:13" pos:end="649:41"><expr pos:start="649:13" pos:end="649:40"><call pos:start="649:13" pos:end="649:40"><name pos:start="649:13" pos:end="649:28">tcg_gen_andi_i64</name><argument_list pos:start="649:29" pos:end="649:40">(<argument pos:start="649:30" pos:end="649:32"><expr pos:start="649:30" pos:end="649:32"><name pos:start="649:30" pos:end="649:32">tmp</name></expr></argument>, <argument pos:start="649:35" pos:end="649:36"><expr pos:start="649:35" pos:end="649:36"><name pos:start="649:35" pos:end="649:36">va</name></expr></argument>, <argument pos:start="649:39" pos:end="649:39"><expr pos:start="649:39" pos:end="649:39"><literal type="number" pos:start="649:39" pos:end="649:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="651:13" pos:end="653:55"><expr pos:start="651:13" pos:end="653:54"><call pos:start="651:13" pos:end="653:54"><name pos:start="651:13" pos:end="651:31">tcg_gen_movcond_i64</name><argument_list pos:start="651:32" pos:end="653:54">(<argument pos:start="651:33" pos:end="651:43"><expr pos:start="651:33" pos:end="651:43"><name pos:start="651:33" pos:end="651:43">TCG_COND_NE</name></expr></argument>, <argument pos:start="651:46" pos:end="651:47"><expr pos:start="651:46" pos:end="651:47"><name pos:start="651:46" pos:end="651:47">vc</name></expr></argument>, <argument pos:start="651:50" pos:end="651:52"><expr pos:start="651:50" pos:end="651:52"><name pos:start="651:50" pos:end="651:52">tmp</name></expr></argument>, <argument pos:start="651:55" pos:end="651:68"><expr pos:start="651:55" pos:end="651:68"><call pos:start="651:55" pos:end="651:68"><name pos:start="651:55" pos:end="651:63">load_zero</name><argument_list pos:start="651:64" pos:end="651:68">(<argument pos:start="651:65" pos:end="651:67"><expr pos:start="651:65" pos:end="651:67"><name pos:start="651:65" pos:end="651:67">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="653:33" pos:end="653:34"><expr pos:start="653:33" pos:end="653:34"><name pos:start="653:33" pos:end="653:34">vb</name></expr></argument>, <argument pos:start="653:37" pos:end="653:53"><expr pos:start="653:37" pos:end="653:53"><call pos:start="653:37" pos:end="653:53"><name pos:start="653:37" pos:end="653:44">load_gpr</name><argument_list pos:start="653:45" pos:end="653:53">(<argument pos:start="653:46" pos:end="653:48"><expr pos:start="653:46" pos:end="653:48"><name pos:start="653:46" pos:end="653:48">ctx</name></expr></argument>, <argument pos:start="653:51" pos:end="653:52"><expr pos:start="653:51" pos:end="653:52"><name pos:start="653:51" pos:end="653:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="655:13" pos:end="655:31"><expr pos:start="655:13" pos:end="655:30"><call pos:start="655:13" pos:end="655:30"><name pos:start="655:13" pos:end="655:25">tcg_temp_free</name><argument_list pos:start="655:26" pos:end="655:30">(<argument pos:start="655:27" pos:end="655:29"><expr pos:start="655:27" pos:end="655:29"><name pos:start="655:27" pos:end="655:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="657:13" pos:end="657:18">break;</break>

        <case pos:start="659:9" pos:end="659:18">case <expr pos:start="659:14" pos:end="659:17"><literal type="number" pos:start="659:14" pos:end="659:17">0x16</literal></expr>:</case>

            <comment type="block" pos:start="661:13" pos:end="661:25">/* CMOVLBC */</comment>

            <expr_stmt pos:start="663:13" pos:end="663:33"><expr pos:start="663:13" pos:end="663:32"><name pos:start="663:13" pos:end="663:15">tmp</name> <operator pos:start="663:17" pos:end="663:17">=</operator> <call pos:start="663:19" pos:end="663:32"><name pos:start="663:19" pos:end="663:30">tcg_temp_new</name><argument_list pos:start="663:31" pos:end="663:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="665:13" pos:end="665:41"><expr pos:start="665:13" pos:end="665:40"><call pos:start="665:13" pos:end="665:40"><name pos:start="665:13" pos:end="665:28">tcg_gen_andi_i64</name><argument_list pos:start="665:29" pos:end="665:40">(<argument pos:start="665:30" pos:end="665:32"><expr pos:start="665:30" pos:end="665:32"><name pos:start="665:30" pos:end="665:32">tmp</name></expr></argument>, <argument pos:start="665:35" pos:end="665:36"><expr pos:start="665:35" pos:end="665:36"><name pos:start="665:35" pos:end="665:36">va</name></expr></argument>, <argument pos:start="665:39" pos:end="665:39"><expr pos:start="665:39" pos:end="665:39"><literal type="number" pos:start="665:39" pos:end="665:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="667:13" pos:end="669:55"><expr pos:start="667:13" pos:end="669:54"><call pos:start="667:13" pos:end="669:54"><name pos:start="667:13" pos:end="667:31">tcg_gen_movcond_i64</name><argument_list pos:start="667:32" pos:end="669:54">(<argument pos:start="667:33" pos:end="667:43"><expr pos:start="667:33" pos:end="667:43"><name pos:start="667:33" pos:end="667:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="667:46" pos:end="667:47"><expr pos:start="667:46" pos:end="667:47"><name pos:start="667:46" pos:end="667:47">vc</name></expr></argument>, <argument pos:start="667:50" pos:end="667:52"><expr pos:start="667:50" pos:end="667:52"><name pos:start="667:50" pos:end="667:52">tmp</name></expr></argument>, <argument pos:start="667:55" pos:end="667:68"><expr pos:start="667:55" pos:end="667:68"><call pos:start="667:55" pos:end="667:68"><name pos:start="667:55" pos:end="667:63">load_zero</name><argument_list pos:start="667:64" pos:end="667:68">(<argument pos:start="667:65" pos:end="667:67"><expr pos:start="667:65" pos:end="667:67"><name pos:start="667:65" pos:end="667:67">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="669:33" pos:end="669:34"><expr pos:start="669:33" pos:end="669:34"><name pos:start="669:33" pos:end="669:34">vb</name></expr></argument>, <argument pos:start="669:37" pos:end="669:53"><expr pos:start="669:37" pos:end="669:53"><call pos:start="669:37" pos:end="669:53"><name pos:start="669:37" pos:end="669:44">load_gpr</name><argument_list pos:start="669:45" pos:end="669:53">(<argument pos:start="669:46" pos:end="669:48"><expr pos:start="669:46" pos:end="669:48"><name pos:start="669:46" pos:end="669:48">ctx</name></expr></argument>, <argument pos:start="669:51" pos:end="669:52"><expr pos:start="669:51" pos:end="669:52"><name pos:start="669:51" pos:end="669:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="671:13" pos:end="671:31"><expr pos:start="671:13" pos:end="671:30"><call pos:start="671:13" pos:end="671:30"><name pos:start="671:13" pos:end="671:25">tcg_temp_free</name><argument_list pos:start="671:26" pos:end="671:30">(<argument pos:start="671:27" pos:end="671:29"><expr pos:start="671:27" pos:end="671:29"><name pos:start="671:27" pos:end="671:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="673:13" pos:end="673:18">break;</break>

        <case pos:start="675:9" pos:end="675:18">case <expr pos:start="675:14" pos:end="675:17"><literal type="number" pos:start="675:14" pos:end="675:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="677:13" pos:end="677:21">/* BIS */</comment>

            <expr_stmt pos:start="679:13" pos:end="679:39"><expr pos:start="679:13" pos:end="679:38"><call pos:start="679:13" pos:end="679:38"><name pos:start="679:13" pos:end="679:26">tcg_gen_or_i64</name><argument_list pos:start="679:27" pos:end="679:38">(<argument pos:start="679:28" pos:end="679:29"><expr pos:start="679:28" pos:end="679:29"><name pos:start="679:28" pos:end="679:29">vc</name></expr></argument>, <argument pos:start="679:32" pos:end="679:33"><expr pos:start="679:32" pos:end="679:33"><name pos:start="679:32" pos:end="679:33">va</name></expr></argument>, <argument pos:start="679:36" pos:end="679:37"><expr pos:start="679:36" pos:end="679:37"><name pos:start="679:36" pos:end="679:37">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="681:13" pos:end="681:18">break;</break>

        <case pos:start="683:9" pos:end="683:18">case <expr pos:start="683:14" pos:end="683:17"><literal type="number" pos:start="683:14" pos:end="683:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="685:13" pos:end="685:24">/* CMOVEQ */</comment>

            <expr_stmt pos:start="687:13" pos:end="689:55"><expr pos:start="687:13" pos:end="689:54"><call pos:start="687:13" pos:end="689:54"><name pos:start="687:13" pos:end="687:31">tcg_gen_movcond_i64</name><argument_list pos:start="687:32" pos:end="689:54">(<argument pos:start="687:33" pos:end="687:43"><expr pos:start="687:33" pos:end="687:43"><name pos:start="687:33" pos:end="687:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="687:46" pos:end="687:47"><expr pos:start="687:46" pos:end="687:47"><name pos:start="687:46" pos:end="687:47">vc</name></expr></argument>, <argument pos:start="687:50" pos:end="687:51"><expr pos:start="687:50" pos:end="687:51"><name pos:start="687:50" pos:end="687:51">va</name></expr></argument>, <argument pos:start="687:54" pos:end="687:67"><expr pos:start="687:54" pos:end="687:67"><call pos:start="687:54" pos:end="687:67"><name pos:start="687:54" pos:end="687:62">load_zero</name><argument_list pos:start="687:63" pos:end="687:67">(<argument pos:start="687:64" pos:end="687:66"><expr pos:start="687:64" pos:end="687:66"><name pos:start="687:64" pos:end="687:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="689:33" pos:end="689:34"><expr pos:start="689:33" pos:end="689:34"><name pos:start="689:33" pos:end="689:34">vb</name></expr></argument>, <argument pos:start="689:37" pos:end="689:53"><expr pos:start="689:37" pos:end="689:53"><call pos:start="689:37" pos:end="689:53"><name pos:start="689:37" pos:end="689:44">load_gpr</name><argument_list pos:start="689:45" pos:end="689:53">(<argument pos:start="689:46" pos:end="689:48"><expr pos:start="689:46" pos:end="689:48"><name pos:start="689:46" pos:end="689:48">ctx</name></expr></argument>, <argument pos:start="689:51" pos:end="689:52"><expr pos:start="689:51" pos:end="689:52"><name pos:start="689:51" pos:end="689:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="691:13" pos:end="691:18">break;</break>

        <case pos:start="693:9" pos:end="693:18">case <expr pos:start="693:14" pos:end="693:17"><literal type="number" pos:start="693:14" pos:end="693:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="695:13" pos:end="695:24">/* CMOVNE */</comment>

            <expr_stmt pos:start="697:13" pos:end="699:55"><expr pos:start="697:13" pos:end="699:54"><call pos:start="697:13" pos:end="699:54"><name pos:start="697:13" pos:end="697:31">tcg_gen_movcond_i64</name><argument_list pos:start="697:32" pos:end="699:54">(<argument pos:start="697:33" pos:end="697:43"><expr pos:start="697:33" pos:end="697:43"><name pos:start="697:33" pos:end="697:43">TCG_COND_NE</name></expr></argument>, <argument pos:start="697:46" pos:end="697:47"><expr pos:start="697:46" pos:end="697:47"><name pos:start="697:46" pos:end="697:47">vc</name></expr></argument>, <argument pos:start="697:50" pos:end="697:51"><expr pos:start="697:50" pos:end="697:51"><name pos:start="697:50" pos:end="697:51">va</name></expr></argument>, <argument pos:start="697:54" pos:end="697:67"><expr pos:start="697:54" pos:end="697:67"><call pos:start="697:54" pos:end="697:67"><name pos:start="697:54" pos:end="697:62">load_zero</name><argument_list pos:start="697:63" pos:end="697:67">(<argument pos:start="697:64" pos:end="697:66"><expr pos:start="697:64" pos:end="697:66"><name pos:start="697:64" pos:end="697:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="699:33" pos:end="699:34"><expr pos:start="699:33" pos:end="699:34"><name pos:start="699:33" pos:end="699:34">vb</name></expr></argument>, <argument pos:start="699:37" pos:end="699:53"><expr pos:start="699:37" pos:end="699:53"><call pos:start="699:37" pos:end="699:53"><name pos:start="699:37" pos:end="699:44">load_gpr</name><argument_list pos:start="699:45" pos:end="699:53">(<argument pos:start="699:46" pos:end="699:48"><expr pos:start="699:46" pos:end="699:48"><name pos:start="699:46" pos:end="699:48">ctx</name></expr></argument>, <argument pos:start="699:51" pos:end="699:52"><expr pos:start="699:51" pos:end="699:52"><name pos:start="699:51" pos:end="699:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="701:13" pos:end="701:18">break;</break>

        <case pos:start="703:9" pos:end="703:18">case <expr pos:start="703:14" pos:end="703:17"><literal type="number" pos:start="703:14" pos:end="703:17">0x28</literal></expr>:</case>

            <comment type="block" pos:start="705:13" pos:end="705:23">/* ORNOT */</comment>

            <expr_stmt pos:start="707:13" pos:end="707:40"><expr pos:start="707:13" pos:end="707:39"><call pos:start="707:13" pos:end="707:39"><name pos:start="707:13" pos:end="707:27">tcg_gen_orc_i64</name><argument_list pos:start="707:28" pos:end="707:39">(<argument pos:start="707:29" pos:end="707:30"><expr pos:start="707:29" pos:end="707:30"><name pos:start="707:29" pos:end="707:30">vc</name></expr></argument>, <argument pos:start="707:33" pos:end="707:34"><expr pos:start="707:33" pos:end="707:34"><name pos:start="707:33" pos:end="707:34">va</name></expr></argument>, <argument pos:start="707:37" pos:end="707:38"><expr pos:start="707:37" pos:end="707:38"><name pos:start="707:37" pos:end="707:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="709:13" pos:end="709:18">break;</break>

        <case pos:start="711:9" pos:end="711:18">case <expr pos:start="711:14" pos:end="711:17"><literal type="number" pos:start="711:14" pos:end="711:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="713:13" pos:end="713:21">/* XOR */</comment>

            <expr_stmt pos:start="715:13" pos:end="715:40"><expr pos:start="715:13" pos:end="715:39"><call pos:start="715:13" pos:end="715:39"><name pos:start="715:13" pos:end="715:27">tcg_gen_xor_i64</name><argument_list pos:start="715:28" pos:end="715:39">(<argument pos:start="715:29" pos:end="715:30"><expr pos:start="715:29" pos:end="715:30"><name pos:start="715:29" pos:end="715:30">vc</name></expr></argument>, <argument pos:start="715:33" pos:end="715:34"><expr pos:start="715:33" pos:end="715:34"><name pos:start="715:33" pos:end="715:34">va</name></expr></argument>, <argument pos:start="715:37" pos:end="715:38"><expr pos:start="715:37" pos:end="715:38"><name pos:start="715:37" pos:end="715:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="717:13" pos:end="717:18">break;</break>

        <case pos:start="719:9" pos:end="719:18">case <expr pos:start="719:14" pos:end="719:17"><literal type="number" pos:start="719:14" pos:end="719:17">0x44</literal></expr>:</case>

            <comment type="block" pos:start="721:13" pos:end="721:24">/* CMOVLT */</comment>

            <expr_stmt pos:start="723:13" pos:end="725:55"><expr pos:start="723:13" pos:end="725:54"><call pos:start="723:13" pos:end="725:54"><name pos:start="723:13" pos:end="723:31">tcg_gen_movcond_i64</name><argument_list pos:start="723:32" pos:end="725:54">(<argument pos:start="723:33" pos:end="723:43"><expr pos:start="723:33" pos:end="723:43"><name pos:start="723:33" pos:end="723:43">TCG_COND_LT</name></expr></argument>, <argument pos:start="723:46" pos:end="723:47"><expr pos:start="723:46" pos:end="723:47"><name pos:start="723:46" pos:end="723:47">vc</name></expr></argument>, <argument pos:start="723:50" pos:end="723:51"><expr pos:start="723:50" pos:end="723:51"><name pos:start="723:50" pos:end="723:51">va</name></expr></argument>, <argument pos:start="723:54" pos:end="723:67"><expr pos:start="723:54" pos:end="723:67"><call pos:start="723:54" pos:end="723:67"><name pos:start="723:54" pos:end="723:62">load_zero</name><argument_list pos:start="723:63" pos:end="723:67">(<argument pos:start="723:64" pos:end="723:66"><expr pos:start="723:64" pos:end="723:66"><name pos:start="723:64" pos:end="723:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="725:33" pos:end="725:34"><expr pos:start="725:33" pos:end="725:34"><name pos:start="725:33" pos:end="725:34">vb</name></expr></argument>, <argument pos:start="725:37" pos:end="725:53"><expr pos:start="725:37" pos:end="725:53"><call pos:start="725:37" pos:end="725:53"><name pos:start="725:37" pos:end="725:44">load_gpr</name><argument_list pos:start="725:45" pos:end="725:53">(<argument pos:start="725:46" pos:end="725:48"><expr pos:start="725:46" pos:end="725:48"><name pos:start="725:46" pos:end="725:48">ctx</name></expr></argument>, <argument pos:start="725:51" pos:end="725:52"><expr pos:start="725:51" pos:end="725:52"><name pos:start="725:51" pos:end="725:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="727:13" pos:end="727:18">break;</break>

        <case pos:start="729:9" pos:end="729:18">case <expr pos:start="729:14" pos:end="729:17"><literal type="number" pos:start="729:14" pos:end="729:17">0x46</literal></expr>:</case>

            <comment type="block" pos:start="731:13" pos:end="731:24">/* CMOVGE */</comment>

            <expr_stmt pos:start="733:13" pos:end="735:55"><expr pos:start="733:13" pos:end="735:54"><call pos:start="733:13" pos:end="735:54"><name pos:start="733:13" pos:end="733:31">tcg_gen_movcond_i64</name><argument_list pos:start="733:32" pos:end="735:54">(<argument pos:start="733:33" pos:end="733:43"><expr pos:start="733:33" pos:end="733:43"><name pos:start="733:33" pos:end="733:43">TCG_COND_GE</name></expr></argument>, <argument pos:start="733:46" pos:end="733:47"><expr pos:start="733:46" pos:end="733:47"><name pos:start="733:46" pos:end="733:47">vc</name></expr></argument>, <argument pos:start="733:50" pos:end="733:51"><expr pos:start="733:50" pos:end="733:51"><name pos:start="733:50" pos:end="733:51">va</name></expr></argument>, <argument pos:start="733:54" pos:end="733:67"><expr pos:start="733:54" pos:end="733:67"><call pos:start="733:54" pos:end="733:67"><name pos:start="733:54" pos:end="733:62">load_zero</name><argument_list pos:start="733:63" pos:end="733:67">(<argument pos:start="733:64" pos:end="733:66"><expr pos:start="733:64" pos:end="733:66"><name pos:start="733:64" pos:end="733:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="735:33" pos:end="735:34"><expr pos:start="735:33" pos:end="735:34"><name pos:start="735:33" pos:end="735:34">vb</name></expr></argument>, <argument pos:start="735:37" pos:end="735:53"><expr pos:start="735:37" pos:end="735:53"><call pos:start="735:37" pos:end="735:53"><name pos:start="735:37" pos:end="735:44">load_gpr</name><argument_list pos:start="735:45" pos:end="735:53">(<argument pos:start="735:46" pos:end="735:48"><expr pos:start="735:46" pos:end="735:48"><name pos:start="735:46" pos:end="735:48">ctx</name></expr></argument>, <argument pos:start="735:51" pos:end="735:52"><expr pos:start="735:51" pos:end="735:52"><name pos:start="735:51" pos:end="735:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="737:13" pos:end="737:18">break;</break>

        <case pos:start="739:9" pos:end="739:18">case <expr pos:start="739:14" pos:end="739:17"><literal type="number" pos:start="739:14" pos:end="739:17">0x48</literal></expr>:</case>

            <comment type="block" pos:start="741:13" pos:end="741:21">/* EQV */</comment>

            <expr_stmt pos:start="743:13" pos:end="743:40"><expr pos:start="743:13" pos:end="743:39"><call pos:start="743:13" pos:end="743:39"><name pos:start="743:13" pos:end="743:27">tcg_gen_eqv_i64</name><argument_list pos:start="743:28" pos:end="743:39">(<argument pos:start="743:29" pos:end="743:30"><expr pos:start="743:29" pos:end="743:30"><name pos:start="743:29" pos:end="743:30">vc</name></expr></argument>, <argument pos:start="743:33" pos:end="743:34"><expr pos:start="743:33" pos:end="743:34"><name pos:start="743:33" pos:end="743:34">va</name></expr></argument>, <argument pos:start="743:37" pos:end="743:38"><expr pos:start="743:37" pos:end="743:38"><name pos:start="743:37" pos:end="743:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="745:13" pos:end="745:18">break;</break>

        <case pos:start="747:9" pos:end="747:18">case <expr pos:start="747:14" pos:end="747:17"><literal type="number" pos:start="747:14" pos:end="747:17">0x61</literal></expr>:</case>

            <comment type="block" pos:start="749:13" pos:end="749:23">/* AMASK */</comment>

            <expr_stmt pos:start="751:13" pos:end="751:31"><expr pos:start="751:13" pos:end="751:30"><call pos:start="751:13" pos:end="751:30"><name pos:start="751:13" pos:end="751:26">REQUIRE_REG_31</name><argument_list pos:start="751:27" pos:end="751:30">(<argument pos:start="751:28" pos:end="751:29"><expr pos:start="751:28" pos:end="751:29"><name pos:start="751:28" pos:end="751:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="753:13" pos:end="753:50"><expr pos:start="753:13" pos:end="753:49"><call pos:start="753:13" pos:end="753:49"><name pos:start="753:13" pos:end="753:28">tcg_gen_andi_i64</name><argument_list pos:start="753:29" pos:end="753:49">(<argument pos:start="753:30" pos:end="753:31"><expr pos:start="753:30" pos:end="753:31"><name pos:start="753:30" pos:end="753:31">vc</name></expr></argument>, <argument pos:start="753:34" pos:end="753:35"><expr pos:start="753:34" pos:end="753:35"><name pos:start="753:34" pos:end="753:35">vb</name></expr></argument>, <argument pos:start="753:38" pos:end="753:48"><expr pos:start="753:38" pos:end="753:48"><operator pos:start="753:38" pos:end="753:38">~</operator><name pos:start="753:39" pos:end="753:48"><name pos:start="753:39" pos:end="753:41">ctx</name><operator pos:start="753:42" pos:end="753:43">-&gt;</operator><name pos:start="753:44" pos:end="753:48">amask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="755:13" pos:end="755:18">break;</break>

        <case pos:start="757:9" pos:end="757:18">case <expr pos:start="757:14" pos:end="757:17"><literal type="number" pos:start="757:14" pos:end="757:17">0x64</literal></expr>:</case>

            <comment type="block" pos:start="759:13" pos:end="759:24">/* CMOVLE */</comment>

            <expr_stmt pos:start="761:13" pos:end="763:55"><expr pos:start="761:13" pos:end="763:54"><call pos:start="761:13" pos:end="763:54"><name pos:start="761:13" pos:end="761:31">tcg_gen_movcond_i64</name><argument_list pos:start="761:32" pos:end="763:54">(<argument pos:start="761:33" pos:end="761:43"><expr pos:start="761:33" pos:end="761:43"><name pos:start="761:33" pos:end="761:43">TCG_COND_LE</name></expr></argument>, <argument pos:start="761:46" pos:end="761:47"><expr pos:start="761:46" pos:end="761:47"><name pos:start="761:46" pos:end="761:47">vc</name></expr></argument>, <argument pos:start="761:50" pos:end="761:51"><expr pos:start="761:50" pos:end="761:51"><name pos:start="761:50" pos:end="761:51">va</name></expr></argument>, <argument pos:start="761:54" pos:end="761:67"><expr pos:start="761:54" pos:end="761:67"><call pos:start="761:54" pos:end="761:67"><name pos:start="761:54" pos:end="761:62">load_zero</name><argument_list pos:start="761:63" pos:end="761:67">(<argument pos:start="761:64" pos:end="761:66"><expr pos:start="761:64" pos:end="761:66"><name pos:start="761:64" pos:end="761:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="763:33" pos:end="763:34"><expr pos:start="763:33" pos:end="763:34"><name pos:start="763:33" pos:end="763:34">vb</name></expr></argument>, <argument pos:start="763:37" pos:end="763:53"><expr pos:start="763:37" pos:end="763:53"><call pos:start="763:37" pos:end="763:53"><name pos:start="763:37" pos:end="763:44">load_gpr</name><argument_list pos:start="763:45" pos:end="763:53">(<argument pos:start="763:46" pos:end="763:48"><expr pos:start="763:46" pos:end="763:48"><name pos:start="763:46" pos:end="763:48">ctx</name></expr></argument>, <argument pos:start="763:51" pos:end="763:52"><expr pos:start="763:51" pos:end="763:52"><name pos:start="763:51" pos:end="763:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="765:13" pos:end="765:18">break;</break>

        <case pos:start="767:9" pos:end="767:18">case <expr pos:start="767:14" pos:end="767:17"><literal type="number" pos:start="767:14" pos:end="767:17">0x66</literal></expr>:</case>

            <comment type="block" pos:start="769:13" pos:end="769:24">/* CMOVGT */</comment>

            <expr_stmt pos:start="771:13" pos:end="773:55"><expr pos:start="771:13" pos:end="773:54"><call pos:start="771:13" pos:end="773:54"><name pos:start="771:13" pos:end="771:31">tcg_gen_movcond_i64</name><argument_list pos:start="771:32" pos:end="773:54">(<argument pos:start="771:33" pos:end="771:43"><expr pos:start="771:33" pos:end="771:43"><name pos:start="771:33" pos:end="771:43">TCG_COND_GT</name></expr></argument>, <argument pos:start="771:46" pos:end="771:47"><expr pos:start="771:46" pos:end="771:47"><name pos:start="771:46" pos:end="771:47">vc</name></expr></argument>, <argument pos:start="771:50" pos:end="771:51"><expr pos:start="771:50" pos:end="771:51"><name pos:start="771:50" pos:end="771:51">va</name></expr></argument>, <argument pos:start="771:54" pos:end="771:67"><expr pos:start="771:54" pos:end="771:67"><call pos:start="771:54" pos:end="771:67"><name pos:start="771:54" pos:end="771:62">load_zero</name><argument_list pos:start="771:63" pos:end="771:67">(<argument pos:start="771:64" pos:end="771:66"><expr pos:start="771:64" pos:end="771:66"><name pos:start="771:64" pos:end="771:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="773:33" pos:end="773:34"><expr pos:start="773:33" pos:end="773:34"><name pos:start="773:33" pos:end="773:34">vb</name></expr></argument>, <argument pos:start="773:37" pos:end="773:53"><expr pos:start="773:37" pos:end="773:53"><call pos:start="773:37" pos:end="773:53"><name pos:start="773:37" pos:end="773:44">load_gpr</name><argument_list pos:start="773:45" pos:end="773:53">(<argument pos:start="773:46" pos:end="773:48"><expr pos:start="773:46" pos:end="773:48"><name pos:start="773:46" pos:end="773:48">ctx</name></expr></argument>, <argument pos:start="773:51" pos:end="773:52"><expr pos:start="773:51" pos:end="773:52"><name pos:start="773:51" pos:end="773:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="775:13" pos:end="775:18">break;</break>

        <case pos:start="777:9" pos:end="777:18">case <expr pos:start="777:14" pos:end="777:17"><literal type="number" pos:start="777:14" pos:end="777:17">0x6C</literal></expr>:</case>

            <comment type="block" pos:start="779:13" pos:end="779:25">/* IMPLVER */</comment>

            <expr_stmt pos:start="781:13" pos:end="781:31"><expr pos:start="781:13" pos:end="781:30"><call pos:start="781:13" pos:end="781:30"><name pos:start="781:13" pos:end="781:26">REQUIRE_REG_31</name><argument_list pos:start="781:27" pos:end="781:30">(<argument pos:start="781:28" pos:end="781:29"><expr pos:start="781:28" pos:end="781:29"><name pos:start="781:28" pos:end="781:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="783:13" pos:end="783:47"><expr pos:start="783:13" pos:end="783:46"><call pos:start="783:13" pos:end="783:46"><name pos:start="783:13" pos:end="783:28">tcg_gen_movi_i64</name><argument_list pos:start="783:29" pos:end="783:46">(<argument pos:start="783:30" pos:end="783:31"><expr pos:start="783:30" pos:end="783:31"><name pos:start="783:30" pos:end="783:31">vc</name></expr></argument>, <argument pos:start="783:34" pos:end="783:45"><expr pos:start="783:34" pos:end="783:45"><name pos:start="783:34" pos:end="783:45"><name pos:start="783:34" pos:end="783:36">ctx</name><operator pos:start="783:37" pos:end="783:38">-&gt;</operator><name pos:start="783:39" pos:end="783:45">implver</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="785:13" pos:end="785:18">break;</break>

        <default pos:start="787:9" pos:end="787:16">default:</default>

            <goto pos:start="789:13" pos:end="789:29">goto <name pos:start="789:18" pos:end="789:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="793:9" pos:end="793:14">break;</break>



    <case pos:start="797:5" pos:end="797:14">case <expr pos:start="797:10" pos:end="797:13"><literal type="number" pos:start="797:10" pos:end="797:13">0x12</literal></expr>:</case>

        <expr_stmt pos:start="799:9" pos:end="799:31"><expr pos:start="799:9" pos:end="799:30"><name pos:start="799:9" pos:end="799:10">vc</name> <operator pos:start="799:12" pos:end="799:12">=</operator> <call pos:start="799:14" pos:end="799:30"><name pos:start="799:14" pos:end="799:21">dest_gpr</name><argument_list pos:start="799:22" pos:end="799:30">(<argument pos:start="799:23" pos:end="799:25"><expr pos:start="799:23" pos:end="799:25"><name pos:start="799:23" pos:end="799:25">ctx</name></expr></argument>, <argument pos:start="799:28" pos:end="799:29"><expr pos:start="799:28" pos:end="799:29"><name pos:start="799:28" pos:end="799:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="801:9" pos:end="801:31"><expr pos:start="801:9" pos:end="801:30"><name pos:start="801:9" pos:end="801:10">va</name> <operator pos:start="801:12" pos:end="801:12">=</operator> <call pos:start="801:14" pos:end="801:30"><name pos:start="801:14" pos:end="801:21">load_gpr</name><argument_list pos:start="801:22" pos:end="801:30">(<argument pos:start="801:23" pos:end="801:25"><expr pos:start="801:23" pos:end="801:25"><name pos:start="801:23" pos:end="801:25">ctx</name></expr></argument>, <argument pos:start="801:28" pos:end="801:29"><expr pos:start="801:28" pos:end="801:29"><name pos:start="801:28" pos:end="801:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="803:9" pos:end="1081:9">switch <condition pos:start="803:16" pos:end="803:20">(<expr pos:start="803:17" pos:end="803:19"><name pos:start="803:17" pos:end="803:19">fn7</name></expr>)</condition> <block pos:start="803:22" pos:end="1081:9">{<block_content pos:start="805:9" pos:end="1079:29">

        <case pos:start="805:9" pos:end="805:18">case <expr pos:start="805:14" pos:end="805:17"><literal type="number" pos:start="805:14" pos:end="805:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="807:13" pos:end="807:23">/* MSKBL */</comment>

            <expr_stmt pos:start="809:13" pos:end="809:57"><expr pos:start="809:13" pos:end="809:56"><call pos:start="809:13" pos:end="809:56"><name pos:start="809:13" pos:end="809:21">gen_msk_l</name><argument_list pos:start="809:22" pos:end="809:56">(<argument pos:start="809:23" pos:end="809:25"><expr pos:start="809:23" pos:end="809:25"><name pos:start="809:23" pos:end="809:25">ctx</name></expr></argument>, <argument pos:start="809:28" pos:end="809:29"><expr pos:start="809:28" pos:end="809:29"><name pos:start="809:28" pos:end="809:29">vc</name></expr></argument>, <argument pos:start="809:32" pos:end="809:33"><expr pos:start="809:32" pos:end="809:33"><name pos:start="809:32" pos:end="809:33">va</name></expr></argument>, <argument pos:start="809:36" pos:end="809:37"><expr pos:start="809:36" pos:end="809:37"><name pos:start="809:36" pos:end="809:37">rb</name></expr></argument>, <argument pos:start="809:40" pos:end="809:44"><expr pos:start="809:40" pos:end="809:44"><name pos:start="809:40" pos:end="809:44">islit</name></expr></argument>, <argument pos:start="809:47" pos:end="809:49"><expr pos:start="809:47" pos:end="809:49"><name pos:start="809:47" pos:end="809:49">lit</name></expr></argument>, <argument pos:start="809:52" pos:end="809:55"><expr pos:start="809:52" pos:end="809:55"><literal type="number" pos:start="809:52" pos:end="809:55">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="811:13" pos:end="811:18">break;</break>

        <case pos:start="813:9" pos:end="813:18">case <expr pos:start="813:14" pos:end="813:17"><literal type="number" pos:start="813:14" pos:end="813:17">0x06</literal></expr>:</case>

            <comment type="block" pos:start="815:13" pos:end="815:23">/* EXTBL */</comment>

            <expr_stmt pos:start="817:13" pos:end="817:57"><expr pos:start="817:13" pos:end="817:56"><call pos:start="817:13" pos:end="817:56"><name pos:start="817:13" pos:end="817:21">gen_ext_l</name><argument_list pos:start="817:22" pos:end="817:56">(<argument pos:start="817:23" pos:end="817:25"><expr pos:start="817:23" pos:end="817:25"><name pos:start="817:23" pos:end="817:25">ctx</name></expr></argument>, <argument pos:start="817:28" pos:end="817:29"><expr pos:start="817:28" pos:end="817:29"><name pos:start="817:28" pos:end="817:29">vc</name></expr></argument>, <argument pos:start="817:32" pos:end="817:33"><expr pos:start="817:32" pos:end="817:33"><name pos:start="817:32" pos:end="817:33">va</name></expr></argument>, <argument pos:start="817:36" pos:end="817:37"><expr pos:start="817:36" pos:end="817:37"><name pos:start="817:36" pos:end="817:37">rb</name></expr></argument>, <argument pos:start="817:40" pos:end="817:44"><expr pos:start="817:40" pos:end="817:44"><name pos:start="817:40" pos:end="817:44">islit</name></expr></argument>, <argument pos:start="817:47" pos:end="817:49"><expr pos:start="817:47" pos:end="817:49"><name pos:start="817:47" pos:end="817:49">lit</name></expr></argument>, <argument pos:start="817:52" pos:end="817:55"><expr pos:start="817:52" pos:end="817:55"><literal type="number" pos:start="817:52" pos:end="817:55">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="819:13" pos:end="819:18">break;</break>

        <case pos:start="821:9" pos:end="821:18">case <expr pos:start="821:14" pos:end="821:17"><literal type="number" pos:start="821:14" pos:end="821:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="823:13" pos:end="823:23">/* INSBL */</comment>

            <expr_stmt pos:start="825:13" pos:end="825:57"><expr pos:start="825:13" pos:end="825:56"><call pos:start="825:13" pos:end="825:56"><name pos:start="825:13" pos:end="825:21">gen_ins_l</name><argument_list pos:start="825:22" pos:end="825:56">(<argument pos:start="825:23" pos:end="825:25"><expr pos:start="825:23" pos:end="825:25"><name pos:start="825:23" pos:end="825:25">ctx</name></expr></argument>, <argument pos:start="825:28" pos:end="825:29"><expr pos:start="825:28" pos:end="825:29"><name pos:start="825:28" pos:end="825:29">vc</name></expr></argument>, <argument pos:start="825:32" pos:end="825:33"><expr pos:start="825:32" pos:end="825:33"><name pos:start="825:32" pos:end="825:33">va</name></expr></argument>, <argument pos:start="825:36" pos:end="825:37"><expr pos:start="825:36" pos:end="825:37"><name pos:start="825:36" pos:end="825:37">rb</name></expr></argument>, <argument pos:start="825:40" pos:end="825:44"><expr pos:start="825:40" pos:end="825:44"><name pos:start="825:40" pos:end="825:44">islit</name></expr></argument>, <argument pos:start="825:47" pos:end="825:49"><expr pos:start="825:47" pos:end="825:49"><name pos:start="825:47" pos:end="825:49">lit</name></expr></argument>, <argument pos:start="825:52" pos:end="825:55"><expr pos:start="825:52" pos:end="825:55"><literal type="number" pos:start="825:52" pos:end="825:55">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="827:13" pos:end="827:18">break;</break>

        <case pos:start="829:9" pos:end="829:18">case <expr pos:start="829:14" pos:end="829:17"><literal type="number" pos:start="829:14" pos:end="829:17">0x12</literal></expr>:</case>

            <comment type="block" pos:start="831:13" pos:end="831:23">/* MSKWL */</comment>

            <expr_stmt pos:start="833:13" pos:end="833:57"><expr pos:start="833:13" pos:end="833:56"><call pos:start="833:13" pos:end="833:56"><name pos:start="833:13" pos:end="833:21">gen_msk_l</name><argument_list pos:start="833:22" pos:end="833:56">(<argument pos:start="833:23" pos:end="833:25"><expr pos:start="833:23" pos:end="833:25"><name pos:start="833:23" pos:end="833:25">ctx</name></expr></argument>, <argument pos:start="833:28" pos:end="833:29"><expr pos:start="833:28" pos:end="833:29"><name pos:start="833:28" pos:end="833:29">vc</name></expr></argument>, <argument pos:start="833:32" pos:end="833:33"><expr pos:start="833:32" pos:end="833:33"><name pos:start="833:32" pos:end="833:33">va</name></expr></argument>, <argument pos:start="833:36" pos:end="833:37"><expr pos:start="833:36" pos:end="833:37"><name pos:start="833:36" pos:end="833:37">rb</name></expr></argument>, <argument pos:start="833:40" pos:end="833:44"><expr pos:start="833:40" pos:end="833:44"><name pos:start="833:40" pos:end="833:44">islit</name></expr></argument>, <argument pos:start="833:47" pos:end="833:49"><expr pos:start="833:47" pos:end="833:49"><name pos:start="833:47" pos:end="833:49">lit</name></expr></argument>, <argument pos:start="833:52" pos:end="833:55"><expr pos:start="833:52" pos:end="833:55"><literal type="number" pos:start="833:52" pos:end="833:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="835:13" pos:end="835:18">break;</break>

        <case pos:start="837:9" pos:end="837:18">case <expr pos:start="837:14" pos:end="837:17"><literal type="number" pos:start="837:14" pos:end="837:17">0x16</literal></expr>:</case>

            <comment type="block" pos:start="839:13" pos:end="839:23">/* EXTWL */</comment>

            <expr_stmt pos:start="841:13" pos:end="841:57"><expr pos:start="841:13" pos:end="841:56"><call pos:start="841:13" pos:end="841:56"><name pos:start="841:13" pos:end="841:21">gen_ext_l</name><argument_list pos:start="841:22" pos:end="841:56">(<argument pos:start="841:23" pos:end="841:25"><expr pos:start="841:23" pos:end="841:25"><name pos:start="841:23" pos:end="841:25">ctx</name></expr></argument>, <argument pos:start="841:28" pos:end="841:29"><expr pos:start="841:28" pos:end="841:29"><name pos:start="841:28" pos:end="841:29">vc</name></expr></argument>, <argument pos:start="841:32" pos:end="841:33"><expr pos:start="841:32" pos:end="841:33"><name pos:start="841:32" pos:end="841:33">va</name></expr></argument>, <argument pos:start="841:36" pos:end="841:37"><expr pos:start="841:36" pos:end="841:37"><name pos:start="841:36" pos:end="841:37">rb</name></expr></argument>, <argument pos:start="841:40" pos:end="841:44"><expr pos:start="841:40" pos:end="841:44"><name pos:start="841:40" pos:end="841:44">islit</name></expr></argument>, <argument pos:start="841:47" pos:end="841:49"><expr pos:start="841:47" pos:end="841:49"><name pos:start="841:47" pos:end="841:49">lit</name></expr></argument>, <argument pos:start="841:52" pos:end="841:55"><expr pos:start="841:52" pos:end="841:55"><literal type="number" pos:start="841:52" pos:end="841:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="843:13" pos:end="843:18">break;</break>

        <case pos:start="845:9" pos:end="845:18">case <expr pos:start="845:14" pos:end="845:17"><literal type="number" pos:start="845:14" pos:end="845:17">0x1B</literal></expr>:</case>

            <comment type="block" pos:start="847:13" pos:end="847:23">/* INSWL */</comment>

            <expr_stmt pos:start="849:13" pos:end="849:57"><expr pos:start="849:13" pos:end="849:56"><call pos:start="849:13" pos:end="849:56"><name pos:start="849:13" pos:end="849:21">gen_ins_l</name><argument_list pos:start="849:22" pos:end="849:56">(<argument pos:start="849:23" pos:end="849:25"><expr pos:start="849:23" pos:end="849:25"><name pos:start="849:23" pos:end="849:25">ctx</name></expr></argument>, <argument pos:start="849:28" pos:end="849:29"><expr pos:start="849:28" pos:end="849:29"><name pos:start="849:28" pos:end="849:29">vc</name></expr></argument>, <argument pos:start="849:32" pos:end="849:33"><expr pos:start="849:32" pos:end="849:33"><name pos:start="849:32" pos:end="849:33">va</name></expr></argument>, <argument pos:start="849:36" pos:end="849:37"><expr pos:start="849:36" pos:end="849:37"><name pos:start="849:36" pos:end="849:37">rb</name></expr></argument>, <argument pos:start="849:40" pos:end="849:44"><expr pos:start="849:40" pos:end="849:44"><name pos:start="849:40" pos:end="849:44">islit</name></expr></argument>, <argument pos:start="849:47" pos:end="849:49"><expr pos:start="849:47" pos:end="849:49"><name pos:start="849:47" pos:end="849:49">lit</name></expr></argument>, <argument pos:start="849:52" pos:end="849:55"><expr pos:start="849:52" pos:end="849:55"><literal type="number" pos:start="849:52" pos:end="849:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="851:13" pos:end="851:18">break;</break>

        <case pos:start="853:9" pos:end="853:18">case <expr pos:start="853:14" pos:end="853:17"><literal type="number" pos:start="853:14" pos:end="853:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="855:13" pos:end="855:23">/* MSKLL */</comment>

            <expr_stmt pos:start="857:13" pos:end="857:57"><expr pos:start="857:13" pos:end="857:56"><call pos:start="857:13" pos:end="857:56"><name pos:start="857:13" pos:end="857:21">gen_msk_l</name><argument_list pos:start="857:22" pos:end="857:56">(<argument pos:start="857:23" pos:end="857:25"><expr pos:start="857:23" pos:end="857:25"><name pos:start="857:23" pos:end="857:25">ctx</name></expr></argument>, <argument pos:start="857:28" pos:end="857:29"><expr pos:start="857:28" pos:end="857:29"><name pos:start="857:28" pos:end="857:29">vc</name></expr></argument>, <argument pos:start="857:32" pos:end="857:33"><expr pos:start="857:32" pos:end="857:33"><name pos:start="857:32" pos:end="857:33">va</name></expr></argument>, <argument pos:start="857:36" pos:end="857:37"><expr pos:start="857:36" pos:end="857:37"><name pos:start="857:36" pos:end="857:37">rb</name></expr></argument>, <argument pos:start="857:40" pos:end="857:44"><expr pos:start="857:40" pos:end="857:44"><name pos:start="857:40" pos:end="857:44">islit</name></expr></argument>, <argument pos:start="857:47" pos:end="857:49"><expr pos:start="857:47" pos:end="857:49"><name pos:start="857:47" pos:end="857:49">lit</name></expr></argument>, <argument pos:start="857:52" pos:end="857:55"><expr pos:start="857:52" pos:end="857:55"><literal type="number" pos:start="857:52" pos:end="857:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="859:13" pos:end="859:18">break;</break>

        <case pos:start="861:9" pos:end="861:18">case <expr pos:start="861:14" pos:end="861:17"><literal type="number" pos:start="861:14" pos:end="861:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="863:13" pos:end="863:23">/* EXTLL */</comment>

            <expr_stmt pos:start="865:13" pos:end="865:57"><expr pos:start="865:13" pos:end="865:56"><call pos:start="865:13" pos:end="865:56"><name pos:start="865:13" pos:end="865:21">gen_ext_l</name><argument_list pos:start="865:22" pos:end="865:56">(<argument pos:start="865:23" pos:end="865:25"><expr pos:start="865:23" pos:end="865:25"><name pos:start="865:23" pos:end="865:25">ctx</name></expr></argument>, <argument pos:start="865:28" pos:end="865:29"><expr pos:start="865:28" pos:end="865:29"><name pos:start="865:28" pos:end="865:29">vc</name></expr></argument>, <argument pos:start="865:32" pos:end="865:33"><expr pos:start="865:32" pos:end="865:33"><name pos:start="865:32" pos:end="865:33">va</name></expr></argument>, <argument pos:start="865:36" pos:end="865:37"><expr pos:start="865:36" pos:end="865:37"><name pos:start="865:36" pos:end="865:37">rb</name></expr></argument>, <argument pos:start="865:40" pos:end="865:44"><expr pos:start="865:40" pos:end="865:44"><name pos:start="865:40" pos:end="865:44">islit</name></expr></argument>, <argument pos:start="865:47" pos:end="865:49"><expr pos:start="865:47" pos:end="865:49"><name pos:start="865:47" pos:end="865:49">lit</name></expr></argument>, <argument pos:start="865:52" pos:end="865:55"><expr pos:start="865:52" pos:end="865:55"><literal type="number" pos:start="865:52" pos:end="865:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="867:13" pos:end="867:18">break;</break>

        <case pos:start="869:9" pos:end="869:18">case <expr pos:start="869:14" pos:end="869:17"><literal type="number" pos:start="869:14" pos:end="869:17">0x2B</literal></expr>:</case>

            <comment type="block" pos:start="871:13" pos:end="871:23">/* INSLL */</comment>

            <expr_stmt pos:start="873:13" pos:end="873:57"><expr pos:start="873:13" pos:end="873:56"><call pos:start="873:13" pos:end="873:56"><name pos:start="873:13" pos:end="873:21">gen_ins_l</name><argument_list pos:start="873:22" pos:end="873:56">(<argument pos:start="873:23" pos:end="873:25"><expr pos:start="873:23" pos:end="873:25"><name pos:start="873:23" pos:end="873:25">ctx</name></expr></argument>, <argument pos:start="873:28" pos:end="873:29"><expr pos:start="873:28" pos:end="873:29"><name pos:start="873:28" pos:end="873:29">vc</name></expr></argument>, <argument pos:start="873:32" pos:end="873:33"><expr pos:start="873:32" pos:end="873:33"><name pos:start="873:32" pos:end="873:33">va</name></expr></argument>, <argument pos:start="873:36" pos:end="873:37"><expr pos:start="873:36" pos:end="873:37"><name pos:start="873:36" pos:end="873:37">rb</name></expr></argument>, <argument pos:start="873:40" pos:end="873:44"><expr pos:start="873:40" pos:end="873:44"><name pos:start="873:40" pos:end="873:44">islit</name></expr></argument>, <argument pos:start="873:47" pos:end="873:49"><expr pos:start="873:47" pos:end="873:49"><name pos:start="873:47" pos:end="873:49">lit</name></expr></argument>, <argument pos:start="873:52" pos:end="873:55"><expr pos:start="873:52" pos:end="873:55"><literal type="number" pos:start="873:52" pos:end="873:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="875:13" pos:end="875:18">break;</break>

        <case pos:start="877:9" pos:end="877:18">case <expr pos:start="877:14" pos:end="877:17"><literal type="number" pos:start="877:14" pos:end="877:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="879:13" pos:end="879:21">/* ZAP */</comment>

            <if_stmt pos:start="881:13" pos:end="889:13"><if pos:start="881:13" pos:end="885:13">if <condition pos:start="881:16" pos:end="881:22">(<expr pos:start="881:17" pos:end="881:21"><name pos:start="881:17" pos:end="881:21">islit</name></expr>)</condition> <block pos:start="881:24" pos:end="885:13">{<block_content pos:start="883:17" pos:end="883:42">

                <expr_stmt pos:start="883:17" pos:end="883:42"><expr pos:start="883:17" pos:end="883:41"><call pos:start="883:17" pos:end="883:41"><name pos:start="883:17" pos:end="883:27">gen_zapnoti</name><argument_list pos:start="883:28" pos:end="883:41">(<argument pos:start="883:29" pos:end="883:30"><expr pos:start="883:29" pos:end="883:30"><name pos:start="883:29" pos:end="883:30">vc</name></expr></argument>, <argument pos:start="883:33" pos:end="883:34"><expr pos:start="883:33" pos:end="883:34"><name pos:start="883:33" pos:end="883:34">va</name></expr></argument>, <argument pos:start="883:37" pos:end="883:40"><expr pos:start="883:37" pos:end="883:40"><operator pos:start="883:37" pos:end="883:37">~</operator><name pos:start="883:38" pos:end="883:40">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="885:15" pos:end="889:13">else <block pos:start="885:20" pos:end="889:13">{<block_content pos:start="887:17" pos:end="887:58">

                <expr_stmt pos:start="887:17" pos:end="887:58"><expr pos:start="887:17" pos:end="887:57"><call pos:start="887:17" pos:end="887:57"><name pos:start="887:17" pos:end="887:30">gen_helper_zap</name><argument_list pos:start="887:31" pos:end="887:57">(<argument pos:start="887:32" pos:end="887:33"><expr pos:start="887:32" pos:end="887:33"><name pos:start="887:32" pos:end="887:33">vc</name></expr></argument>, <argument pos:start="887:36" pos:end="887:37"><expr pos:start="887:36" pos:end="887:37"><name pos:start="887:36" pos:end="887:37">va</name></expr></argument>, <argument pos:start="887:40" pos:end="887:56"><expr pos:start="887:40" pos:end="887:56"><call pos:start="887:40" pos:end="887:56"><name pos:start="887:40" pos:end="887:47">load_gpr</name><argument_list pos:start="887:48" pos:end="887:56">(<argument pos:start="887:49" pos:end="887:51"><expr pos:start="887:49" pos:end="887:51"><name pos:start="887:49" pos:end="887:51">ctx</name></expr></argument>, <argument pos:start="887:54" pos:end="887:55"><expr pos:start="887:54" pos:end="887:55"><name pos:start="887:54" pos:end="887:55">rb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="891:13" pos:end="891:18">break;</break>

        <case pos:start="893:9" pos:end="893:18">case <expr pos:start="893:14" pos:end="893:17"><literal type="number" pos:start="893:14" pos:end="893:17">0x31</literal></expr>:</case>

            <comment type="block" pos:start="895:13" pos:end="895:24">/* ZAPNOT */</comment>

            <if_stmt pos:start="897:13" pos:end="905:13"><if pos:start="897:13" pos:end="901:13">if <condition pos:start="897:16" pos:end="897:22">(<expr pos:start="897:17" pos:end="897:21"><name pos:start="897:17" pos:end="897:21">islit</name></expr>)</condition> <block pos:start="897:24" pos:end="901:13">{<block_content pos:start="899:17" pos:end="899:41">

                <expr_stmt pos:start="899:17" pos:end="899:41"><expr pos:start="899:17" pos:end="899:40"><call pos:start="899:17" pos:end="899:40"><name pos:start="899:17" pos:end="899:27">gen_zapnoti</name><argument_list pos:start="899:28" pos:end="899:40">(<argument pos:start="899:29" pos:end="899:30"><expr pos:start="899:29" pos:end="899:30"><name pos:start="899:29" pos:end="899:30">vc</name></expr></argument>, <argument pos:start="899:33" pos:end="899:34"><expr pos:start="899:33" pos:end="899:34"><name pos:start="899:33" pos:end="899:34">va</name></expr></argument>, <argument pos:start="899:37" pos:end="899:39"><expr pos:start="899:37" pos:end="899:39"><name pos:start="899:37" pos:end="899:39">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="901:15" pos:end="905:13">else <block pos:start="901:20" pos:end="905:13">{<block_content pos:start="903:17" pos:end="903:61">

                <expr_stmt pos:start="903:17" pos:end="903:61"><expr pos:start="903:17" pos:end="903:60"><call pos:start="903:17" pos:end="903:60"><name pos:start="903:17" pos:end="903:33">gen_helper_zapnot</name><argument_list pos:start="903:34" pos:end="903:60">(<argument pos:start="903:35" pos:end="903:36"><expr pos:start="903:35" pos:end="903:36"><name pos:start="903:35" pos:end="903:36">vc</name></expr></argument>, <argument pos:start="903:39" pos:end="903:40"><expr pos:start="903:39" pos:end="903:40"><name pos:start="903:39" pos:end="903:40">va</name></expr></argument>, <argument pos:start="903:43" pos:end="903:59"><expr pos:start="903:43" pos:end="903:59"><call pos:start="903:43" pos:end="903:59"><name pos:start="903:43" pos:end="903:50">load_gpr</name><argument_list pos:start="903:51" pos:end="903:59">(<argument pos:start="903:52" pos:end="903:54"><expr pos:start="903:52" pos:end="903:54"><name pos:start="903:52" pos:end="903:54">ctx</name></expr></argument>, <argument pos:start="903:57" pos:end="903:58"><expr pos:start="903:57" pos:end="903:58"><name pos:start="903:57" pos:end="903:58">rb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="907:13" pos:end="907:18">break;</break>

        <case pos:start="909:9" pos:end="909:18">case <expr pos:start="909:14" pos:end="909:17"><literal type="number" pos:start="909:14" pos:end="909:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="911:13" pos:end="911:23">/* MSKQL */</comment>

            <expr_stmt pos:start="913:13" pos:end="913:57"><expr pos:start="913:13" pos:end="913:56"><call pos:start="913:13" pos:end="913:56"><name pos:start="913:13" pos:end="913:21">gen_msk_l</name><argument_list pos:start="913:22" pos:end="913:56">(<argument pos:start="913:23" pos:end="913:25"><expr pos:start="913:23" pos:end="913:25"><name pos:start="913:23" pos:end="913:25">ctx</name></expr></argument>, <argument pos:start="913:28" pos:end="913:29"><expr pos:start="913:28" pos:end="913:29"><name pos:start="913:28" pos:end="913:29">vc</name></expr></argument>, <argument pos:start="913:32" pos:end="913:33"><expr pos:start="913:32" pos:end="913:33"><name pos:start="913:32" pos:end="913:33">va</name></expr></argument>, <argument pos:start="913:36" pos:end="913:37"><expr pos:start="913:36" pos:end="913:37"><name pos:start="913:36" pos:end="913:37">rb</name></expr></argument>, <argument pos:start="913:40" pos:end="913:44"><expr pos:start="913:40" pos:end="913:44"><name pos:start="913:40" pos:end="913:44">islit</name></expr></argument>, <argument pos:start="913:47" pos:end="913:49"><expr pos:start="913:47" pos:end="913:49"><name pos:start="913:47" pos:end="913:49">lit</name></expr></argument>, <argument pos:start="913:52" pos:end="913:55"><expr pos:start="913:52" pos:end="913:55"><literal type="number" pos:start="913:52" pos:end="913:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="915:13" pos:end="915:18">break;</break>

        <case pos:start="917:9" pos:end="917:18">case <expr pos:start="917:14" pos:end="917:17"><literal type="number" pos:start="917:14" pos:end="917:17">0x34</literal></expr>:</case>

            <comment type="block" pos:start="919:13" pos:end="919:21">/* SRL */</comment>

            <if_stmt pos:start="921:13" pos:end="937:13"><if pos:start="921:13" pos:end="925:13">if <condition pos:start="921:16" pos:end="921:22">(<expr pos:start="921:17" pos:end="921:21"><name pos:start="921:17" pos:end="921:21">islit</name></expr>)</condition> <block pos:start="921:24" pos:end="925:13">{<block_content pos:start="923:17" pos:end="923:53">

                <expr_stmt pos:start="923:17" pos:end="923:53"><expr pos:start="923:17" pos:end="923:52"><call pos:start="923:17" pos:end="923:52"><name pos:start="923:17" pos:end="923:32">tcg_gen_shri_i64</name><argument_list pos:start="923:33" pos:end="923:52">(<argument pos:start="923:34" pos:end="923:35"><expr pos:start="923:34" pos:end="923:35"><name pos:start="923:34" pos:end="923:35">vc</name></expr></argument>, <argument pos:start="923:38" pos:end="923:39"><expr pos:start="923:38" pos:end="923:39"><name pos:start="923:38" pos:end="923:39">va</name></expr></argument>, <argument pos:start="923:42" pos:end="923:51"><expr pos:start="923:42" pos:end="923:51"><name pos:start="923:42" pos:end="923:44">lit</name> <operator pos:start="923:46" pos:end="923:46">&amp;</operator> <literal type="number" pos:start="923:48" pos:end="923:51">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="925:15" pos:end="937:13">else <block pos:start="925:20" pos:end="937:13">{<block_content pos:start="927:17" pos:end="935:35">

                <expr_stmt pos:start="927:17" pos:end="927:37"><expr pos:start="927:17" pos:end="927:36"><name pos:start="927:17" pos:end="927:19">tmp</name> <operator pos:start="927:21" pos:end="927:21">=</operator> <call pos:start="927:23" pos:end="927:36"><name pos:start="927:23" pos:end="927:34">tcg_temp_new</name><argument_list pos:start="927:35" pos:end="927:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="929:17" pos:end="929:39"><expr pos:start="929:17" pos:end="929:38"><name pos:start="929:17" pos:end="929:18">vb</name> <operator pos:start="929:20" pos:end="929:20">=</operator> <call pos:start="929:22" pos:end="929:38"><name pos:start="929:22" pos:end="929:29">load_gpr</name><argument_list pos:start="929:30" pos:end="929:38">(<argument pos:start="929:31" pos:end="929:33"><expr pos:start="929:31" pos:end="929:33"><name pos:start="929:31" pos:end="929:33">ctx</name></expr></argument>, <argument pos:start="929:36" pos:end="929:37"><expr pos:start="929:36" pos:end="929:37"><name pos:start="929:36" pos:end="929:37">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="931:17" pos:end="931:48"><expr pos:start="931:17" pos:end="931:47"><call pos:start="931:17" pos:end="931:47"><name pos:start="931:17" pos:end="931:32">tcg_gen_andi_i64</name><argument_list pos:start="931:33" pos:end="931:47">(<argument pos:start="931:34" pos:end="931:36"><expr pos:start="931:34" pos:end="931:36"><name pos:start="931:34" pos:end="931:36">tmp</name></expr></argument>, <argument pos:start="931:39" pos:end="931:40"><expr pos:start="931:39" pos:end="931:40"><name pos:start="931:39" pos:end="931:40">vb</name></expr></argument>, <argument pos:start="931:43" pos:end="931:46"><expr pos:start="931:43" pos:end="931:46"><literal type="number" pos:start="931:43" pos:end="931:46">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="933:17" pos:end="933:45"><expr pos:start="933:17" pos:end="933:44"><call pos:start="933:17" pos:end="933:44"><name pos:start="933:17" pos:end="933:31">tcg_gen_shr_i64</name><argument_list pos:start="933:32" pos:end="933:44">(<argument pos:start="933:33" pos:end="933:34"><expr pos:start="933:33" pos:end="933:34"><name pos:start="933:33" pos:end="933:34">vc</name></expr></argument>, <argument pos:start="933:37" pos:end="933:38"><expr pos:start="933:37" pos:end="933:38"><name pos:start="933:37" pos:end="933:38">va</name></expr></argument>, <argument pos:start="933:41" pos:end="933:43"><expr pos:start="933:41" pos:end="933:43"><name pos:start="933:41" pos:end="933:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="935:17" pos:end="935:35"><expr pos:start="935:17" pos:end="935:34"><call pos:start="935:17" pos:end="935:34"><name pos:start="935:17" pos:end="935:29">tcg_temp_free</name><argument_list pos:start="935:30" pos:end="935:34">(<argument pos:start="935:31" pos:end="935:33"><expr pos:start="935:31" pos:end="935:33"><name pos:start="935:31" pos:end="935:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="939:13" pos:end="939:18">break;</break>

        <case pos:start="941:9" pos:end="941:18">case <expr pos:start="941:14" pos:end="941:17"><literal type="number" pos:start="941:14" pos:end="941:17">0x36</literal></expr>:</case>

            <comment type="block" pos:start="943:13" pos:end="943:23">/* EXTQL */</comment>

            <expr_stmt pos:start="945:13" pos:end="945:57"><expr pos:start="945:13" pos:end="945:56"><call pos:start="945:13" pos:end="945:56"><name pos:start="945:13" pos:end="945:21">gen_ext_l</name><argument_list pos:start="945:22" pos:end="945:56">(<argument pos:start="945:23" pos:end="945:25"><expr pos:start="945:23" pos:end="945:25"><name pos:start="945:23" pos:end="945:25">ctx</name></expr></argument>, <argument pos:start="945:28" pos:end="945:29"><expr pos:start="945:28" pos:end="945:29"><name pos:start="945:28" pos:end="945:29">vc</name></expr></argument>, <argument pos:start="945:32" pos:end="945:33"><expr pos:start="945:32" pos:end="945:33"><name pos:start="945:32" pos:end="945:33">va</name></expr></argument>, <argument pos:start="945:36" pos:end="945:37"><expr pos:start="945:36" pos:end="945:37"><name pos:start="945:36" pos:end="945:37">rb</name></expr></argument>, <argument pos:start="945:40" pos:end="945:44"><expr pos:start="945:40" pos:end="945:44"><name pos:start="945:40" pos:end="945:44">islit</name></expr></argument>, <argument pos:start="945:47" pos:end="945:49"><expr pos:start="945:47" pos:end="945:49"><name pos:start="945:47" pos:end="945:49">lit</name></expr></argument>, <argument pos:start="945:52" pos:end="945:55"><expr pos:start="945:52" pos:end="945:55"><literal type="number" pos:start="945:52" pos:end="945:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="947:13" pos:end="947:18">break;</break>

        <case pos:start="949:9" pos:end="949:18">case <expr pos:start="949:14" pos:end="949:17"><literal type="number" pos:start="949:14" pos:end="949:17">0x39</literal></expr>:</case>

            <comment type="block" pos:start="951:13" pos:end="951:21">/* SLL */</comment>

            <if_stmt pos:start="953:13" pos:end="969:13"><if pos:start="953:13" pos:end="957:13">if <condition pos:start="953:16" pos:end="953:22">(<expr pos:start="953:17" pos:end="953:21"><name pos:start="953:17" pos:end="953:21">islit</name></expr>)</condition> <block pos:start="953:24" pos:end="957:13">{<block_content pos:start="955:17" pos:end="955:53">

                <expr_stmt pos:start="955:17" pos:end="955:53"><expr pos:start="955:17" pos:end="955:52"><call pos:start="955:17" pos:end="955:52"><name pos:start="955:17" pos:end="955:32">tcg_gen_shli_i64</name><argument_list pos:start="955:33" pos:end="955:52">(<argument pos:start="955:34" pos:end="955:35"><expr pos:start="955:34" pos:end="955:35"><name pos:start="955:34" pos:end="955:35">vc</name></expr></argument>, <argument pos:start="955:38" pos:end="955:39"><expr pos:start="955:38" pos:end="955:39"><name pos:start="955:38" pos:end="955:39">va</name></expr></argument>, <argument pos:start="955:42" pos:end="955:51"><expr pos:start="955:42" pos:end="955:51"><name pos:start="955:42" pos:end="955:44">lit</name> <operator pos:start="955:46" pos:end="955:46">&amp;</operator> <literal type="number" pos:start="955:48" pos:end="955:51">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="957:15" pos:end="969:13">else <block pos:start="957:20" pos:end="969:13">{<block_content pos:start="959:17" pos:end="967:35">

                <expr_stmt pos:start="959:17" pos:end="959:37"><expr pos:start="959:17" pos:end="959:36"><name pos:start="959:17" pos:end="959:19">tmp</name> <operator pos:start="959:21" pos:end="959:21">=</operator> <call pos:start="959:23" pos:end="959:36"><name pos:start="959:23" pos:end="959:34">tcg_temp_new</name><argument_list pos:start="959:35" pos:end="959:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="961:17" pos:end="961:39"><expr pos:start="961:17" pos:end="961:38"><name pos:start="961:17" pos:end="961:18">vb</name> <operator pos:start="961:20" pos:end="961:20">=</operator> <call pos:start="961:22" pos:end="961:38"><name pos:start="961:22" pos:end="961:29">load_gpr</name><argument_list pos:start="961:30" pos:end="961:38">(<argument pos:start="961:31" pos:end="961:33"><expr pos:start="961:31" pos:end="961:33"><name pos:start="961:31" pos:end="961:33">ctx</name></expr></argument>, <argument pos:start="961:36" pos:end="961:37"><expr pos:start="961:36" pos:end="961:37"><name pos:start="961:36" pos:end="961:37">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="963:17" pos:end="963:48"><expr pos:start="963:17" pos:end="963:47"><call pos:start="963:17" pos:end="963:47"><name pos:start="963:17" pos:end="963:32">tcg_gen_andi_i64</name><argument_list pos:start="963:33" pos:end="963:47">(<argument pos:start="963:34" pos:end="963:36"><expr pos:start="963:34" pos:end="963:36"><name pos:start="963:34" pos:end="963:36">tmp</name></expr></argument>, <argument pos:start="963:39" pos:end="963:40"><expr pos:start="963:39" pos:end="963:40"><name pos:start="963:39" pos:end="963:40">vb</name></expr></argument>, <argument pos:start="963:43" pos:end="963:46"><expr pos:start="963:43" pos:end="963:46"><literal type="number" pos:start="963:43" pos:end="963:46">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="965:17" pos:end="965:45"><expr pos:start="965:17" pos:end="965:44"><call pos:start="965:17" pos:end="965:44"><name pos:start="965:17" pos:end="965:31">tcg_gen_shl_i64</name><argument_list pos:start="965:32" pos:end="965:44">(<argument pos:start="965:33" pos:end="965:34"><expr pos:start="965:33" pos:end="965:34"><name pos:start="965:33" pos:end="965:34">vc</name></expr></argument>, <argument pos:start="965:37" pos:end="965:38"><expr pos:start="965:37" pos:end="965:38"><name pos:start="965:37" pos:end="965:38">va</name></expr></argument>, <argument pos:start="965:41" pos:end="965:43"><expr pos:start="965:41" pos:end="965:43"><name pos:start="965:41" pos:end="965:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="967:17" pos:end="967:35"><expr pos:start="967:17" pos:end="967:34"><call pos:start="967:17" pos:end="967:34"><name pos:start="967:17" pos:end="967:29">tcg_temp_free</name><argument_list pos:start="967:30" pos:end="967:34">(<argument pos:start="967:31" pos:end="967:33"><expr pos:start="967:31" pos:end="967:33"><name pos:start="967:31" pos:end="967:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="971:13" pos:end="971:18">break;</break>

        <case pos:start="973:9" pos:end="973:18">case <expr pos:start="973:14" pos:end="973:17"><literal type="number" pos:start="973:14" pos:end="973:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="975:13" pos:end="975:23">/* INSQL */</comment>

            <expr_stmt pos:start="977:13" pos:end="977:57"><expr pos:start="977:13" pos:end="977:56"><call pos:start="977:13" pos:end="977:56"><name pos:start="977:13" pos:end="977:21">gen_ins_l</name><argument_list pos:start="977:22" pos:end="977:56">(<argument pos:start="977:23" pos:end="977:25"><expr pos:start="977:23" pos:end="977:25"><name pos:start="977:23" pos:end="977:25">ctx</name></expr></argument>, <argument pos:start="977:28" pos:end="977:29"><expr pos:start="977:28" pos:end="977:29"><name pos:start="977:28" pos:end="977:29">vc</name></expr></argument>, <argument pos:start="977:32" pos:end="977:33"><expr pos:start="977:32" pos:end="977:33"><name pos:start="977:32" pos:end="977:33">va</name></expr></argument>, <argument pos:start="977:36" pos:end="977:37"><expr pos:start="977:36" pos:end="977:37"><name pos:start="977:36" pos:end="977:37">rb</name></expr></argument>, <argument pos:start="977:40" pos:end="977:44"><expr pos:start="977:40" pos:end="977:44"><name pos:start="977:40" pos:end="977:44">islit</name></expr></argument>, <argument pos:start="977:47" pos:end="977:49"><expr pos:start="977:47" pos:end="977:49"><name pos:start="977:47" pos:end="977:49">lit</name></expr></argument>, <argument pos:start="977:52" pos:end="977:55"><expr pos:start="977:52" pos:end="977:55"><literal type="number" pos:start="977:52" pos:end="977:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="979:13" pos:end="979:18">break;</break>

        <case pos:start="981:9" pos:end="981:18">case <expr pos:start="981:14" pos:end="981:17"><literal type="number" pos:start="981:14" pos:end="981:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="983:13" pos:end="983:21">/* SRA */</comment>

            <if_stmt pos:start="985:13" pos:end="1001:13"><if pos:start="985:13" pos:end="989:13">if <condition pos:start="985:16" pos:end="985:22">(<expr pos:start="985:17" pos:end="985:21"><name pos:start="985:17" pos:end="985:21">islit</name></expr>)</condition> <block pos:start="985:24" pos:end="989:13">{<block_content pos:start="987:17" pos:end="987:53">

                <expr_stmt pos:start="987:17" pos:end="987:53"><expr pos:start="987:17" pos:end="987:52"><call pos:start="987:17" pos:end="987:52"><name pos:start="987:17" pos:end="987:32">tcg_gen_sari_i64</name><argument_list pos:start="987:33" pos:end="987:52">(<argument pos:start="987:34" pos:end="987:35"><expr pos:start="987:34" pos:end="987:35"><name pos:start="987:34" pos:end="987:35">vc</name></expr></argument>, <argument pos:start="987:38" pos:end="987:39"><expr pos:start="987:38" pos:end="987:39"><name pos:start="987:38" pos:end="987:39">va</name></expr></argument>, <argument pos:start="987:42" pos:end="987:51"><expr pos:start="987:42" pos:end="987:51"><name pos:start="987:42" pos:end="987:44">lit</name> <operator pos:start="987:46" pos:end="987:46">&amp;</operator> <literal type="number" pos:start="987:48" pos:end="987:51">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="989:15" pos:end="1001:13">else <block pos:start="989:20" pos:end="1001:13">{<block_content pos:start="991:17" pos:end="999:35">

                <expr_stmt pos:start="991:17" pos:end="991:37"><expr pos:start="991:17" pos:end="991:36"><name pos:start="991:17" pos:end="991:19">tmp</name> <operator pos:start="991:21" pos:end="991:21">=</operator> <call pos:start="991:23" pos:end="991:36"><name pos:start="991:23" pos:end="991:34">tcg_temp_new</name><argument_list pos:start="991:35" pos:end="991:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="993:17" pos:end="993:39"><expr pos:start="993:17" pos:end="993:38"><name pos:start="993:17" pos:end="993:18">vb</name> <operator pos:start="993:20" pos:end="993:20">=</operator> <call pos:start="993:22" pos:end="993:38"><name pos:start="993:22" pos:end="993:29">load_gpr</name><argument_list pos:start="993:30" pos:end="993:38">(<argument pos:start="993:31" pos:end="993:33"><expr pos:start="993:31" pos:end="993:33"><name pos:start="993:31" pos:end="993:33">ctx</name></expr></argument>, <argument pos:start="993:36" pos:end="993:37"><expr pos:start="993:36" pos:end="993:37"><name pos:start="993:36" pos:end="993:37">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="995:17" pos:end="995:48"><expr pos:start="995:17" pos:end="995:47"><call pos:start="995:17" pos:end="995:47"><name pos:start="995:17" pos:end="995:32">tcg_gen_andi_i64</name><argument_list pos:start="995:33" pos:end="995:47">(<argument pos:start="995:34" pos:end="995:36"><expr pos:start="995:34" pos:end="995:36"><name pos:start="995:34" pos:end="995:36">tmp</name></expr></argument>, <argument pos:start="995:39" pos:end="995:40"><expr pos:start="995:39" pos:end="995:40"><name pos:start="995:39" pos:end="995:40">vb</name></expr></argument>, <argument pos:start="995:43" pos:end="995:46"><expr pos:start="995:43" pos:end="995:46"><literal type="number" pos:start="995:43" pos:end="995:46">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="997:17" pos:end="997:45"><expr pos:start="997:17" pos:end="997:44"><call pos:start="997:17" pos:end="997:44"><name pos:start="997:17" pos:end="997:31">tcg_gen_sar_i64</name><argument_list pos:start="997:32" pos:end="997:44">(<argument pos:start="997:33" pos:end="997:34"><expr pos:start="997:33" pos:end="997:34"><name pos:start="997:33" pos:end="997:34">vc</name></expr></argument>, <argument pos:start="997:37" pos:end="997:38"><expr pos:start="997:37" pos:end="997:38"><name pos:start="997:37" pos:end="997:38">va</name></expr></argument>, <argument pos:start="997:41" pos:end="997:43"><expr pos:start="997:41" pos:end="997:43"><name pos:start="997:41" pos:end="997:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="999:17" pos:end="999:35"><expr pos:start="999:17" pos:end="999:34"><call pos:start="999:17" pos:end="999:34"><name pos:start="999:17" pos:end="999:29">tcg_temp_free</name><argument_list pos:start="999:30" pos:end="999:34">(<argument pos:start="999:31" pos:end="999:33"><expr pos:start="999:31" pos:end="999:33"><name pos:start="999:31" pos:end="999:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1003:13" pos:end="1003:18">break;</break>

        <case pos:start="1005:9" pos:end="1005:18">case <expr pos:start="1005:14" pos:end="1005:17"><literal type="number" pos:start="1005:14" pos:end="1005:17">0x52</literal></expr>:</case>

            <comment type="block" pos:start="1007:13" pos:end="1007:23">/* MSKWH */</comment>

            <expr_stmt pos:start="1009:13" pos:end="1009:57"><expr pos:start="1009:13" pos:end="1009:56"><call pos:start="1009:13" pos:end="1009:56"><name pos:start="1009:13" pos:end="1009:21">gen_msk_h</name><argument_list pos:start="1009:22" pos:end="1009:56">(<argument pos:start="1009:23" pos:end="1009:25"><expr pos:start="1009:23" pos:end="1009:25"><name pos:start="1009:23" pos:end="1009:25">ctx</name></expr></argument>, <argument pos:start="1009:28" pos:end="1009:29"><expr pos:start="1009:28" pos:end="1009:29"><name pos:start="1009:28" pos:end="1009:29">vc</name></expr></argument>, <argument pos:start="1009:32" pos:end="1009:33"><expr pos:start="1009:32" pos:end="1009:33"><name pos:start="1009:32" pos:end="1009:33">va</name></expr></argument>, <argument pos:start="1009:36" pos:end="1009:37"><expr pos:start="1009:36" pos:end="1009:37"><name pos:start="1009:36" pos:end="1009:37">rb</name></expr></argument>, <argument pos:start="1009:40" pos:end="1009:44"><expr pos:start="1009:40" pos:end="1009:44"><name pos:start="1009:40" pos:end="1009:44">islit</name></expr></argument>, <argument pos:start="1009:47" pos:end="1009:49"><expr pos:start="1009:47" pos:end="1009:49"><name pos:start="1009:47" pos:end="1009:49">lit</name></expr></argument>, <argument pos:start="1009:52" pos:end="1009:55"><expr pos:start="1009:52" pos:end="1009:55"><literal type="number" pos:start="1009:52" pos:end="1009:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1011:13" pos:end="1011:18">break;</break>

        <case pos:start="1013:9" pos:end="1013:18">case <expr pos:start="1013:14" pos:end="1013:17"><literal type="number" pos:start="1013:14" pos:end="1013:17">0x57</literal></expr>:</case>

            <comment type="block" pos:start="1015:13" pos:end="1015:23">/* INSWH */</comment>

            <expr_stmt pos:start="1017:13" pos:end="1017:57"><expr pos:start="1017:13" pos:end="1017:56"><call pos:start="1017:13" pos:end="1017:56"><name pos:start="1017:13" pos:end="1017:21">gen_ins_h</name><argument_list pos:start="1017:22" pos:end="1017:56">(<argument pos:start="1017:23" pos:end="1017:25"><expr pos:start="1017:23" pos:end="1017:25"><name pos:start="1017:23" pos:end="1017:25">ctx</name></expr></argument>, <argument pos:start="1017:28" pos:end="1017:29"><expr pos:start="1017:28" pos:end="1017:29"><name pos:start="1017:28" pos:end="1017:29">vc</name></expr></argument>, <argument pos:start="1017:32" pos:end="1017:33"><expr pos:start="1017:32" pos:end="1017:33"><name pos:start="1017:32" pos:end="1017:33">va</name></expr></argument>, <argument pos:start="1017:36" pos:end="1017:37"><expr pos:start="1017:36" pos:end="1017:37"><name pos:start="1017:36" pos:end="1017:37">rb</name></expr></argument>, <argument pos:start="1017:40" pos:end="1017:44"><expr pos:start="1017:40" pos:end="1017:44"><name pos:start="1017:40" pos:end="1017:44">islit</name></expr></argument>, <argument pos:start="1017:47" pos:end="1017:49"><expr pos:start="1017:47" pos:end="1017:49"><name pos:start="1017:47" pos:end="1017:49">lit</name></expr></argument>, <argument pos:start="1017:52" pos:end="1017:55"><expr pos:start="1017:52" pos:end="1017:55"><literal type="number" pos:start="1017:52" pos:end="1017:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1019:13" pos:end="1019:18">break;</break>

        <case pos:start="1021:9" pos:end="1021:18">case <expr pos:start="1021:14" pos:end="1021:17"><literal type="number" pos:start="1021:14" pos:end="1021:17">0x5A</literal></expr>:</case>

            <comment type="block" pos:start="1023:13" pos:end="1023:23">/* EXTWH */</comment>

            <expr_stmt pos:start="1025:13" pos:end="1025:57"><expr pos:start="1025:13" pos:end="1025:56"><call pos:start="1025:13" pos:end="1025:56"><name pos:start="1025:13" pos:end="1025:21">gen_ext_h</name><argument_list pos:start="1025:22" pos:end="1025:56">(<argument pos:start="1025:23" pos:end="1025:25"><expr pos:start="1025:23" pos:end="1025:25"><name pos:start="1025:23" pos:end="1025:25">ctx</name></expr></argument>, <argument pos:start="1025:28" pos:end="1025:29"><expr pos:start="1025:28" pos:end="1025:29"><name pos:start="1025:28" pos:end="1025:29">vc</name></expr></argument>, <argument pos:start="1025:32" pos:end="1025:33"><expr pos:start="1025:32" pos:end="1025:33"><name pos:start="1025:32" pos:end="1025:33">va</name></expr></argument>, <argument pos:start="1025:36" pos:end="1025:37"><expr pos:start="1025:36" pos:end="1025:37"><name pos:start="1025:36" pos:end="1025:37">rb</name></expr></argument>, <argument pos:start="1025:40" pos:end="1025:44"><expr pos:start="1025:40" pos:end="1025:44"><name pos:start="1025:40" pos:end="1025:44">islit</name></expr></argument>, <argument pos:start="1025:47" pos:end="1025:49"><expr pos:start="1025:47" pos:end="1025:49"><name pos:start="1025:47" pos:end="1025:49">lit</name></expr></argument>, <argument pos:start="1025:52" pos:end="1025:55"><expr pos:start="1025:52" pos:end="1025:55"><literal type="number" pos:start="1025:52" pos:end="1025:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1027:13" pos:end="1027:18">break;</break>

        <case pos:start="1029:9" pos:end="1029:18">case <expr pos:start="1029:14" pos:end="1029:17"><literal type="number" pos:start="1029:14" pos:end="1029:17">0x62</literal></expr>:</case>

            <comment type="block" pos:start="1031:13" pos:end="1031:23">/* MSKLH */</comment>

            <expr_stmt pos:start="1033:13" pos:end="1033:57"><expr pos:start="1033:13" pos:end="1033:56"><call pos:start="1033:13" pos:end="1033:56"><name pos:start="1033:13" pos:end="1033:21">gen_msk_h</name><argument_list pos:start="1033:22" pos:end="1033:56">(<argument pos:start="1033:23" pos:end="1033:25"><expr pos:start="1033:23" pos:end="1033:25"><name pos:start="1033:23" pos:end="1033:25">ctx</name></expr></argument>, <argument pos:start="1033:28" pos:end="1033:29"><expr pos:start="1033:28" pos:end="1033:29"><name pos:start="1033:28" pos:end="1033:29">vc</name></expr></argument>, <argument pos:start="1033:32" pos:end="1033:33"><expr pos:start="1033:32" pos:end="1033:33"><name pos:start="1033:32" pos:end="1033:33">va</name></expr></argument>, <argument pos:start="1033:36" pos:end="1033:37"><expr pos:start="1033:36" pos:end="1033:37"><name pos:start="1033:36" pos:end="1033:37">rb</name></expr></argument>, <argument pos:start="1033:40" pos:end="1033:44"><expr pos:start="1033:40" pos:end="1033:44"><name pos:start="1033:40" pos:end="1033:44">islit</name></expr></argument>, <argument pos:start="1033:47" pos:end="1033:49"><expr pos:start="1033:47" pos:end="1033:49"><name pos:start="1033:47" pos:end="1033:49">lit</name></expr></argument>, <argument pos:start="1033:52" pos:end="1033:55"><expr pos:start="1033:52" pos:end="1033:55"><literal type="number" pos:start="1033:52" pos:end="1033:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1035:13" pos:end="1035:18">break;</break>

        <case pos:start="1037:9" pos:end="1037:18">case <expr pos:start="1037:14" pos:end="1037:17"><literal type="number" pos:start="1037:14" pos:end="1037:17">0x67</literal></expr>:</case>

            <comment type="block" pos:start="1039:13" pos:end="1039:23">/* INSLH */</comment>

            <expr_stmt pos:start="1041:13" pos:end="1041:57"><expr pos:start="1041:13" pos:end="1041:56"><call pos:start="1041:13" pos:end="1041:56"><name pos:start="1041:13" pos:end="1041:21">gen_ins_h</name><argument_list pos:start="1041:22" pos:end="1041:56">(<argument pos:start="1041:23" pos:end="1041:25"><expr pos:start="1041:23" pos:end="1041:25"><name pos:start="1041:23" pos:end="1041:25">ctx</name></expr></argument>, <argument pos:start="1041:28" pos:end="1041:29"><expr pos:start="1041:28" pos:end="1041:29"><name pos:start="1041:28" pos:end="1041:29">vc</name></expr></argument>, <argument pos:start="1041:32" pos:end="1041:33"><expr pos:start="1041:32" pos:end="1041:33"><name pos:start="1041:32" pos:end="1041:33">va</name></expr></argument>, <argument pos:start="1041:36" pos:end="1041:37"><expr pos:start="1041:36" pos:end="1041:37"><name pos:start="1041:36" pos:end="1041:37">rb</name></expr></argument>, <argument pos:start="1041:40" pos:end="1041:44"><expr pos:start="1041:40" pos:end="1041:44"><name pos:start="1041:40" pos:end="1041:44">islit</name></expr></argument>, <argument pos:start="1041:47" pos:end="1041:49"><expr pos:start="1041:47" pos:end="1041:49"><name pos:start="1041:47" pos:end="1041:49">lit</name></expr></argument>, <argument pos:start="1041:52" pos:end="1041:55"><expr pos:start="1041:52" pos:end="1041:55"><literal type="number" pos:start="1041:52" pos:end="1041:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1043:13" pos:end="1043:18">break;</break>

        <case pos:start="1045:9" pos:end="1045:18">case <expr pos:start="1045:14" pos:end="1045:17"><literal type="number" pos:start="1045:14" pos:end="1045:17">0x6A</literal></expr>:</case>

            <comment type="block" pos:start="1047:13" pos:end="1047:23">/* EXTLH */</comment>

            <expr_stmt pos:start="1049:13" pos:end="1049:57"><expr pos:start="1049:13" pos:end="1049:56"><call pos:start="1049:13" pos:end="1049:56"><name pos:start="1049:13" pos:end="1049:21">gen_ext_h</name><argument_list pos:start="1049:22" pos:end="1049:56">(<argument pos:start="1049:23" pos:end="1049:25"><expr pos:start="1049:23" pos:end="1049:25"><name pos:start="1049:23" pos:end="1049:25">ctx</name></expr></argument>, <argument pos:start="1049:28" pos:end="1049:29"><expr pos:start="1049:28" pos:end="1049:29"><name pos:start="1049:28" pos:end="1049:29">vc</name></expr></argument>, <argument pos:start="1049:32" pos:end="1049:33"><expr pos:start="1049:32" pos:end="1049:33"><name pos:start="1049:32" pos:end="1049:33">va</name></expr></argument>, <argument pos:start="1049:36" pos:end="1049:37"><expr pos:start="1049:36" pos:end="1049:37"><name pos:start="1049:36" pos:end="1049:37">rb</name></expr></argument>, <argument pos:start="1049:40" pos:end="1049:44"><expr pos:start="1049:40" pos:end="1049:44"><name pos:start="1049:40" pos:end="1049:44">islit</name></expr></argument>, <argument pos:start="1049:47" pos:end="1049:49"><expr pos:start="1049:47" pos:end="1049:49"><name pos:start="1049:47" pos:end="1049:49">lit</name></expr></argument>, <argument pos:start="1049:52" pos:end="1049:55"><expr pos:start="1049:52" pos:end="1049:55"><literal type="number" pos:start="1049:52" pos:end="1049:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1051:13" pos:end="1051:18">break;</break>

        <case pos:start="1053:9" pos:end="1053:18">case <expr pos:start="1053:14" pos:end="1053:17"><literal type="number" pos:start="1053:14" pos:end="1053:17">0x72</literal></expr>:</case>

            <comment type="block" pos:start="1055:13" pos:end="1055:23">/* MSKQH */</comment>

            <expr_stmt pos:start="1057:13" pos:end="1057:57"><expr pos:start="1057:13" pos:end="1057:56"><call pos:start="1057:13" pos:end="1057:56"><name pos:start="1057:13" pos:end="1057:21">gen_msk_h</name><argument_list pos:start="1057:22" pos:end="1057:56">(<argument pos:start="1057:23" pos:end="1057:25"><expr pos:start="1057:23" pos:end="1057:25"><name pos:start="1057:23" pos:end="1057:25">ctx</name></expr></argument>, <argument pos:start="1057:28" pos:end="1057:29"><expr pos:start="1057:28" pos:end="1057:29"><name pos:start="1057:28" pos:end="1057:29">vc</name></expr></argument>, <argument pos:start="1057:32" pos:end="1057:33"><expr pos:start="1057:32" pos:end="1057:33"><name pos:start="1057:32" pos:end="1057:33">va</name></expr></argument>, <argument pos:start="1057:36" pos:end="1057:37"><expr pos:start="1057:36" pos:end="1057:37"><name pos:start="1057:36" pos:end="1057:37">rb</name></expr></argument>, <argument pos:start="1057:40" pos:end="1057:44"><expr pos:start="1057:40" pos:end="1057:44"><name pos:start="1057:40" pos:end="1057:44">islit</name></expr></argument>, <argument pos:start="1057:47" pos:end="1057:49"><expr pos:start="1057:47" pos:end="1057:49"><name pos:start="1057:47" pos:end="1057:49">lit</name></expr></argument>, <argument pos:start="1057:52" pos:end="1057:55"><expr pos:start="1057:52" pos:end="1057:55"><literal type="number" pos:start="1057:52" pos:end="1057:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1059:13" pos:end="1059:18">break;</break>

        <case pos:start="1061:9" pos:end="1061:18">case <expr pos:start="1061:14" pos:end="1061:17"><literal type="number" pos:start="1061:14" pos:end="1061:17">0x77</literal></expr>:</case>

            <comment type="block" pos:start="1063:13" pos:end="1063:23">/* INSQH */</comment>

            <expr_stmt pos:start="1065:13" pos:end="1065:57"><expr pos:start="1065:13" pos:end="1065:56"><call pos:start="1065:13" pos:end="1065:56"><name pos:start="1065:13" pos:end="1065:21">gen_ins_h</name><argument_list pos:start="1065:22" pos:end="1065:56">(<argument pos:start="1065:23" pos:end="1065:25"><expr pos:start="1065:23" pos:end="1065:25"><name pos:start="1065:23" pos:end="1065:25">ctx</name></expr></argument>, <argument pos:start="1065:28" pos:end="1065:29"><expr pos:start="1065:28" pos:end="1065:29"><name pos:start="1065:28" pos:end="1065:29">vc</name></expr></argument>, <argument pos:start="1065:32" pos:end="1065:33"><expr pos:start="1065:32" pos:end="1065:33"><name pos:start="1065:32" pos:end="1065:33">va</name></expr></argument>, <argument pos:start="1065:36" pos:end="1065:37"><expr pos:start="1065:36" pos:end="1065:37"><name pos:start="1065:36" pos:end="1065:37">rb</name></expr></argument>, <argument pos:start="1065:40" pos:end="1065:44"><expr pos:start="1065:40" pos:end="1065:44"><name pos:start="1065:40" pos:end="1065:44">islit</name></expr></argument>, <argument pos:start="1065:47" pos:end="1065:49"><expr pos:start="1065:47" pos:end="1065:49"><name pos:start="1065:47" pos:end="1065:49">lit</name></expr></argument>, <argument pos:start="1065:52" pos:end="1065:55"><expr pos:start="1065:52" pos:end="1065:55"><literal type="number" pos:start="1065:52" pos:end="1065:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1067:13" pos:end="1067:18">break;</break>

        <case pos:start="1069:9" pos:end="1069:18">case <expr pos:start="1069:14" pos:end="1069:17"><literal type="number" pos:start="1069:14" pos:end="1069:17">0x7A</literal></expr>:</case>

            <comment type="block" pos:start="1071:13" pos:end="1071:23">/* EXTQH */</comment>

            <expr_stmt pos:start="1073:13" pos:end="1073:57"><expr pos:start="1073:13" pos:end="1073:56"><call pos:start="1073:13" pos:end="1073:56"><name pos:start="1073:13" pos:end="1073:21">gen_ext_h</name><argument_list pos:start="1073:22" pos:end="1073:56">(<argument pos:start="1073:23" pos:end="1073:25"><expr pos:start="1073:23" pos:end="1073:25"><name pos:start="1073:23" pos:end="1073:25">ctx</name></expr></argument>, <argument pos:start="1073:28" pos:end="1073:29"><expr pos:start="1073:28" pos:end="1073:29"><name pos:start="1073:28" pos:end="1073:29">vc</name></expr></argument>, <argument pos:start="1073:32" pos:end="1073:33"><expr pos:start="1073:32" pos:end="1073:33"><name pos:start="1073:32" pos:end="1073:33">va</name></expr></argument>, <argument pos:start="1073:36" pos:end="1073:37"><expr pos:start="1073:36" pos:end="1073:37"><name pos:start="1073:36" pos:end="1073:37">rb</name></expr></argument>, <argument pos:start="1073:40" pos:end="1073:44"><expr pos:start="1073:40" pos:end="1073:44"><name pos:start="1073:40" pos:end="1073:44">islit</name></expr></argument>, <argument pos:start="1073:47" pos:end="1073:49"><expr pos:start="1073:47" pos:end="1073:49"><name pos:start="1073:47" pos:end="1073:49">lit</name></expr></argument>, <argument pos:start="1073:52" pos:end="1073:55"><expr pos:start="1073:52" pos:end="1073:55"><literal type="number" pos:start="1073:52" pos:end="1073:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1075:13" pos:end="1075:18">break;</break>

        <default pos:start="1077:9" pos:end="1077:16">default:</default>

            <goto pos:start="1079:13" pos:end="1079:29">goto <name pos:start="1079:18" pos:end="1079:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1083:9" pos:end="1083:14">break;</break>



    <case pos:start="1087:5" pos:end="1087:14">case <expr pos:start="1087:10" pos:end="1087:13"><literal type="number" pos:start="1087:10" pos:end="1087:13">0x13</literal></expr>:</case>

        <expr_stmt pos:start="1089:9" pos:end="1089:31"><expr pos:start="1089:9" pos:end="1089:30"><name pos:start="1089:9" pos:end="1089:10">vc</name> <operator pos:start="1089:12" pos:end="1089:12">=</operator> <call pos:start="1089:14" pos:end="1089:30"><name pos:start="1089:14" pos:end="1089:21">dest_gpr</name><argument_list pos:start="1089:22" pos:end="1089:30">(<argument pos:start="1089:23" pos:end="1089:25"><expr pos:start="1089:23" pos:end="1089:25"><name pos:start="1089:23" pos:end="1089:25">ctx</name></expr></argument>, <argument pos:start="1089:28" pos:end="1089:29"><expr pos:start="1089:28" pos:end="1089:29"><name pos:start="1089:28" pos:end="1089:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1091:9" pos:end="1091:47"><expr pos:start="1091:9" pos:end="1091:46"><name pos:start="1091:9" pos:end="1091:10">vb</name> <operator pos:start="1091:12" pos:end="1091:12">=</operator> <call pos:start="1091:14" pos:end="1091:46"><name pos:start="1091:14" pos:end="1091:25">load_gpr_lit</name><argument_list pos:start="1091:26" pos:end="1091:46">(<argument pos:start="1091:27" pos:end="1091:29"><expr pos:start="1091:27" pos:end="1091:29"><name pos:start="1091:27" pos:end="1091:29">ctx</name></expr></argument>, <argument pos:start="1091:32" pos:end="1091:33"><expr pos:start="1091:32" pos:end="1091:33"><name pos:start="1091:32" pos:end="1091:33">rb</name></expr></argument>, <argument pos:start="1091:36" pos:end="1091:38"><expr pos:start="1091:36" pos:end="1091:38"><name pos:start="1091:36" pos:end="1091:38">lit</name></expr></argument>, <argument pos:start="1091:41" pos:end="1091:45"><expr pos:start="1091:41" pos:end="1091:45"><name pos:start="1091:41" pos:end="1091:45">islit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1093:9" pos:end="1093:31"><expr pos:start="1093:9" pos:end="1093:30"><name pos:start="1093:9" pos:end="1093:10">va</name> <operator pos:start="1093:12" pos:end="1093:12">=</operator> <call pos:start="1093:14" pos:end="1093:30"><name pos:start="1093:14" pos:end="1093:21">load_gpr</name><argument_list pos:start="1093:22" pos:end="1093:30">(<argument pos:start="1093:23" pos:end="1093:25"><expr pos:start="1093:23" pos:end="1093:25"><name pos:start="1093:23" pos:end="1093:25">ctx</name></expr></argument>, <argument pos:start="1093:28" pos:end="1093:29"><expr pos:start="1093:28" pos:end="1093:29"><name pos:start="1093:28" pos:end="1093:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1095:9" pos:end="1171:9">switch <condition pos:start="1095:16" pos:end="1095:20">(<expr pos:start="1095:17" pos:end="1095:19"><name pos:start="1095:17" pos:end="1095:19">fn7</name></expr>)</condition> <block pos:start="1095:22" pos:end="1171:9">{<block_content pos:start="1097:9" pos:end="1169:29">

        <case pos:start="1097:9" pos:end="1097:18">case <expr pos:start="1097:14" pos:end="1097:17"><literal type="number" pos:start="1097:14" pos:end="1097:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1099:13" pos:end="1099:22">/* MULL */</comment>

            <expr_stmt pos:start="1101:13" pos:end="1101:40"><expr pos:start="1101:13" pos:end="1101:39"><call pos:start="1101:13" pos:end="1101:39"><name pos:start="1101:13" pos:end="1101:27">tcg_gen_mul_i64</name><argument_list pos:start="1101:28" pos:end="1101:39">(<argument pos:start="1101:29" pos:end="1101:30"><expr pos:start="1101:29" pos:end="1101:30"><name pos:start="1101:29" pos:end="1101:30">vc</name></expr></argument>, <argument pos:start="1101:33" pos:end="1101:34"><expr pos:start="1101:33" pos:end="1101:34"><name pos:start="1101:33" pos:end="1101:34">va</name></expr></argument>, <argument pos:start="1101:37" pos:end="1101:38"><expr pos:start="1101:37" pos:end="1101:38"><name pos:start="1101:37" pos:end="1101:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1103:13" pos:end="1103:39"><expr pos:start="1103:13" pos:end="1103:38"><call pos:start="1103:13" pos:end="1103:38"><name pos:start="1103:13" pos:end="1103:30">tcg_gen_ext32s_i64</name><argument_list pos:start="1103:31" pos:end="1103:38">(<argument pos:start="1103:32" pos:end="1103:33"><expr pos:start="1103:32" pos:end="1103:33"><name pos:start="1103:32" pos:end="1103:33">vc</name></expr></argument>, <argument pos:start="1103:36" pos:end="1103:37"><expr pos:start="1103:36" pos:end="1103:37"><name pos:start="1103:36" pos:end="1103:37">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1105:13" pos:end="1105:18">break;</break>

        <case pos:start="1107:9" pos:end="1107:18">case <expr pos:start="1107:14" pos:end="1107:17"><literal type="number" pos:start="1107:14" pos:end="1107:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1109:13" pos:end="1109:22">/* MULQ */</comment>

            <expr_stmt pos:start="1111:13" pos:end="1111:40"><expr pos:start="1111:13" pos:end="1111:39"><call pos:start="1111:13" pos:end="1111:39"><name pos:start="1111:13" pos:end="1111:27">tcg_gen_mul_i64</name><argument_list pos:start="1111:28" pos:end="1111:39">(<argument pos:start="1111:29" pos:end="1111:30"><expr pos:start="1111:29" pos:end="1111:30"><name pos:start="1111:29" pos:end="1111:30">vc</name></expr></argument>, <argument pos:start="1111:33" pos:end="1111:34"><expr pos:start="1111:33" pos:end="1111:34"><name pos:start="1111:33" pos:end="1111:34">va</name></expr></argument>, <argument pos:start="1111:37" pos:end="1111:38"><expr pos:start="1111:37" pos:end="1111:38"><name pos:start="1111:37" pos:end="1111:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1113:13" pos:end="1113:18">break;</break>

        <case pos:start="1115:9" pos:end="1115:18">case <expr pos:start="1115:14" pos:end="1115:17"><literal type="number" pos:start="1115:14" pos:end="1115:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="1117:13" pos:end="1117:23">/* UMULH */</comment>

            <expr_stmt pos:start="1119:13" pos:end="1119:33"><expr pos:start="1119:13" pos:end="1119:32"><name pos:start="1119:13" pos:end="1119:15">tmp</name> <operator pos:start="1119:17" pos:end="1119:17">=</operator> <call pos:start="1119:19" pos:end="1119:32"><name pos:start="1119:19" pos:end="1119:30">tcg_temp_new</name><argument_list pos:start="1119:31" pos:end="1119:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1121:13" pos:end="1121:47"><expr pos:start="1121:13" pos:end="1121:46"><call pos:start="1121:13" pos:end="1121:46"><name pos:start="1121:13" pos:end="1121:29">tcg_gen_mulu2_i64</name><argument_list pos:start="1121:30" pos:end="1121:46">(<argument pos:start="1121:31" pos:end="1121:33"><expr pos:start="1121:31" pos:end="1121:33"><name pos:start="1121:31" pos:end="1121:33">tmp</name></expr></argument>, <argument pos:start="1121:36" pos:end="1121:37"><expr pos:start="1121:36" pos:end="1121:37"><name pos:start="1121:36" pos:end="1121:37">vc</name></expr></argument>, <argument pos:start="1121:40" pos:end="1121:41"><expr pos:start="1121:40" pos:end="1121:41"><name pos:start="1121:40" pos:end="1121:41">va</name></expr></argument>, <argument pos:start="1121:44" pos:end="1121:45"><expr pos:start="1121:44" pos:end="1121:45"><name pos:start="1121:44" pos:end="1121:45">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1123:13" pos:end="1123:31"><expr pos:start="1123:13" pos:end="1123:30"><call pos:start="1123:13" pos:end="1123:30"><name pos:start="1123:13" pos:end="1123:25">tcg_temp_free</name><argument_list pos:start="1123:26" pos:end="1123:30">(<argument pos:start="1123:27" pos:end="1123:29"><expr pos:start="1123:27" pos:end="1123:29"><name pos:start="1123:27" pos:end="1123:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1125:13" pos:end="1125:18">break;</break>

        <case pos:start="1127:9" pos:end="1127:18">case <expr pos:start="1127:14" pos:end="1127:17"><literal type="number" pos:start="1127:14" pos:end="1127:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="1129:13" pos:end="1129:24">/* MULL/V */</comment>

            <expr_stmt pos:start="1131:13" pos:end="1131:33"><expr pos:start="1131:13" pos:end="1131:32"><name pos:start="1131:13" pos:end="1131:15">tmp</name> <operator pos:start="1131:17" pos:end="1131:17">=</operator> <call pos:start="1131:19" pos:end="1131:32"><name pos:start="1131:19" pos:end="1131:30">tcg_temp_new</name><argument_list pos:start="1131:31" pos:end="1131:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1133:13" pos:end="1133:40"><expr pos:start="1133:13" pos:end="1133:39"><call pos:start="1133:13" pos:end="1133:39"><name pos:start="1133:13" pos:end="1133:30">tcg_gen_ext32s_i64</name><argument_list pos:start="1133:31" pos:end="1133:39">(<argument pos:start="1133:32" pos:end="1133:34"><expr pos:start="1133:32" pos:end="1133:34"><name pos:start="1133:32" pos:end="1133:34">tmp</name></expr></argument>, <argument pos:start="1133:37" pos:end="1133:38"><expr pos:start="1133:37" pos:end="1133:38"><name pos:start="1133:37" pos:end="1133:38">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1135:13" pos:end="1135:39"><expr pos:start="1135:13" pos:end="1135:38"><call pos:start="1135:13" pos:end="1135:38"><name pos:start="1135:13" pos:end="1135:30">tcg_gen_ext32s_i64</name><argument_list pos:start="1135:31" pos:end="1135:38">(<argument pos:start="1135:32" pos:end="1135:33"><expr pos:start="1135:32" pos:end="1135:33"><name pos:start="1135:32" pos:end="1135:33">vc</name></expr></argument>, <argument pos:start="1135:36" pos:end="1135:37"><expr pos:start="1135:36" pos:end="1135:37"><name pos:start="1135:36" pos:end="1135:37">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1137:13" pos:end="1137:42"><expr pos:start="1137:13" pos:end="1137:41"><call pos:start="1137:13" pos:end="1137:41"><name pos:start="1137:13" pos:end="1137:27">tcg_gen_mul_i64</name><argument_list pos:start="1137:28" pos:end="1137:41">(<argument pos:start="1137:29" pos:end="1137:31"><expr pos:start="1137:29" pos:end="1137:31"><name pos:start="1137:29" pos:end="1137:31">tmp</name></expr></argument>, <argument pos:start="1137:34" pos:end="1137:36"><expr pos:start="1137:34" pos:end="1137:36"><name pos:start="1137:34" pos:end="1137:36">tmp</name></expr></argument>, <argument pos:start="1137:39" pos:end="1137:40"><expr pos:start="1137:39" pos:end="1137:40"><name pos:start="1137:39" pos:end="1137:40">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1139:13" pos:end="1139:40"><expr pos:start="1139:13" pos:end="1139:39"><call pos:start="1139:13" pos:end="1139:39"><name pos:start="1139:13" pos:end="1139:30">tcg_gen_ext32s_i64</name><argument_list pos:start="1139:31" pos:end="1139:39">(<argument pos:start="1139:32" pos:end="1139:33"><expr pos:start="1139:32" pos:end="1139:33"><name pos:start="1139:32" pos:end="1139:33">vc</name></expr></argument>, <argument pos:start="1139:36" pos:end="1139:38"><expr pos:start="1139:36" pos:end="1139:38"><name pos:start="1139:36" pos:end="1139:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1141:13" pos:end="1141:56"><expr pos:start="1141:13" pos:end="1141:55"><call pos:start="1141:13" pos:end="1141:55"><name pos:start="1141:13" pos:end="1141:37">gen_helper_check_overflow</name><argument_list pos:start="1141:38" pos:end="1141:55">(<argument pos:start="1141:39" pos:end="1141:45"><expr pos:start="1141:39" pos:end="1141:45"><name pos:start="1141:39" pos:end="1141:45">cpu_env</name></expr></argument>, <argument pos:start="1141:48" pos:end="1141:49"><expr pos:start="1141:48" pos:end="1141:49"><name pos:start="1141:48" pos:end="1141:49">vc</name></expr></argument>, <argument pos:start="1141:52" pos:end="1141:54"><expr pos:start="1141:52" pos:end="1141:54"><name pos:start="1141:52" pos:end="1141:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1143:13" pos:end="1143:31"><expr pos:start="1143:13" pos:end="1143:30"><call pos:start="1143:13" pos:end="1143:30"><name pos:start="1143:13" pos:end="1143:25">tcg_temp_free</name><argument_list pos:start="1143:26" pos:end="1143:30">(<argument pos:start="1143:27" pos:end="1143:29"><expr pos:start="1143:27" pos:end="1143:29"><name pos:start="1143:27" pos:end="1143:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1145:13" pos:end="1145:18">break;</break>

        <case pos:start="1147:9" pos:end="1147:18">case <expr pos:start="1147:14" pos:end="1147:17"><literal type="number" pos:start="1147:14" pos:end="1147:17">0x60</literal></expr>:</case>

            <comment type="block" pos:start="1149:13" pos:end="1149:24">/* MULQ/V */</comment>

            <expr_stmt pos:start="1151:13" pos:end="1151:33"><expr pos:start="1151:13" pos:end="1151:32"><name pos:start="1151:13" pos:end="1151:15">tmp</name> <operator pos:start="1151:17" pos:end="1151:17">=</operator> <call pos:start="1151:19" pos:end="1151:32"><name pos:start="1151:19" pos:end="1151:30">tcg_temp_new</name><argument_list pos:start="1151:31" pos:end="1151:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1153:13" pos:end="1153:34"><expr pos:start="1153:13" pos:end="1153:33"><name pos:start="1153:13" pos:end="1153:16">tmp2</name> <operator pos:start="1153:18" pos:end="1153:18">=</operator> <call pos:start="1153:20" pos:end="1153:33"><name pos:start="1153:20" pos:end="1153:31">tcg_temp_new</name><argument_list pos:start="1153:32" pos:end="1153:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1155:13" pos:end="1155:47"><expr pos:start="1155:13" pos:end="1155:46"><call pos:start="1155:13" pos:end="1155:46"><name pos:start="1155:13" pos:end="1155:29">tcg_gen_muls2_i64</name><argument_list pos:start="1155:30" pos:end="1155:46">(<argument pos:start="1155:31" pos:end="1155:32"><expr pos:start="1155:31" pos:end="1155:32"><name pos:start="1155:31" pos:end="1155:32">vc</name></expr></argument>, <argument pos:start="1155:35" pos:end="1155:37"><expr pos:start="1155:35" pos:end="1155:37"><name pos:start="1155:35" pos:end="1155:37">tmp</name></expr></argument>, <argument pos:start="1155:40" pos:end="1155:41"><expr pos:start="1155:40" pos:end="1155:41"><name pos:start="1155:40" pos:end="1155:41">va</name></expr></argument>, <argument pos:start="1155:44" pos:end="1155:45"><expr pos:start="1155:44" pos:end="1155:45"><name pos:start="1155:44" pos:end="1155:45">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1157:13" pos:end="1157:43"><expr pos:start="1157:13" pos:end="1157:42"><call pos:start="1157:13" pos:end="1157:42"><name pos:start="1157:13" pos:end="1157:28">tcg_gen_sari_i64</name><argument_list pos:start="1157:29" pos:end="1157:42">(<argument pos:start="1157:30" pos:end="1157:33"><expr pos:start="1157:30" pos:end="1157:33"><name pos:start="1157:30" pos:end="1157:33">tmp2</name></expr></argument>, <argument pos:start="1157:36" pos:end="1157:37"><expr pos:start="1157:36" pos:end="1157:37"><name pos:start="1157:36" pos:end="1157:37">vc</name></expr></argument>, <argument pos:start="1157:40" pos:end="1157:41"><expr pos:start="1157:40" pos:end="1157:41"><literal type="number" pos:start="1157:40" pos:end="1157:41">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1159:13" pos:end="1159:58"><expr pos:start="1159:13" pos:end="1159:57"><call pos:start="1159:13" pos:end="1159:57"><name pos:start="1159:13" pos:end="1159:37">gen_helper_check_overflow</name><argument_list pos:start="1159:38" pos:end="1159:57">(<argument pos:start="1159:39" pos:end="1159:45"><expr pos:start="1159:39" pos:end="1159:45"><name pos:start="1159:39" pos:end="1159:45">cpu_env</name></expr></argument>, <argument pos:start="1159:48" pos:end="1159:50"><expr pos:start="1159:48" pos:end="1159:50"><name pos:start="1159:48" pos:end="1159:50">tmp</name></expr></argument>, <argument pos:start="1159:53" pos:end="1159:56"><expr pos:start="1159:53" pos:end="1159:56"><name pos:start="1159:53" pos:end="1159:56">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1161:13" pos:end="1161:31"><expr pos:start="1161:13" pos:end="1161:30"><call pos:start="1161:13" pos:end="1161:30"><name pos:start="1161:13" pos:end="1161:25">tcg_temp_free</name><argument_list pos:start="1161:26" pos:end="1161:30">(<argument pos:start="1161:27" pos:end="1161:29"><expr pos:start="1161:27" pos:end="1161:29"><name pos:start="1161:27" pos:end="1161:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1163:13" pos:end="1163:32"><expr pos:start="1163:13" pos:end="1163:31"><call pos:start="1163:13" pos:end="1163:31"><name pos:start="1163:13" pos:end="1163:25">tcg_temp_free</name><argument_list pos:start="1163:26" pos:end="1163:31">(<argument pos:start="1163:27" pos:end="1163:30"><expr pos:start="1163:27" pos:end="1163:30"><name pos:start="1163:27" pos:end="1163:30">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1165:13" pos:end="1165:18">break;</break>

        <default pos:start="1167:9" pos:end="1167:16">default:</default>

            <goto pos:start="1169:13" pos:end="1169:29">goto <name pos:start="1169:18" pos:end="1169:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1173:9" pos:end="1173:14">break;</break>



    <case pos:start="1177:5" pos:end="1177:14">case <expr pos:start="1177:10" pos:end="1177:13"><literal type="number" pos:start="1177:10" pos:end="1177:13">0x14</literal></expr>:</case>

        <expr_stmt pos:start="1179:9" pos:end="1179:27"><expr pos:start="1179:9" pos:end="1179:26"><call pos:start="1179:9" pos:end="1179:26"><name pos:start="1179:9" pos:end="1179:21">REQUIRE_AMASK</name><argument_list pos:start="1179:22" pos:end="1179:26">(<argument pos:start="1179:23" pos:end="1179:25"><expr pos:start="1179:23" pos:end="1179:25"><name pos:start="1179:23" pos:end="1179:25">FIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1181:9" pos:end="1181:31"><expr pos:start="1181:9" pos:end="1181:30"><name pos:start="1181:9" pos:end="1181:10">vc</name> <operator pos:start="1181:12" pos:end="1181:12">=</operator> <call pos:start="1181:14" pos:end="1181:30"><name pos:start="1181:14" pos:end="1181:21">dest_fpr</name><argument_list pos:start="1181:22" pos:end="1181:30">(<argument pos:start="1181:23" pos:end="1181:25"><expr pos:start="1181:23" pos:end="1181:25"><name pos:start="1181:23" pos:end="1181:25">ctx</name></expr></argument>, <argument pos:start="1181:28" pos:end="1181:29"><expr pos:start="1181:28" pos:end="1181:29"><name pos:start="1181:28" pos:end="1181:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1183:9" pos:end="1281:9">switch <condition pos:start="1183:16" pos:end="1183:21">(<expr pos:start="1183:17" pos:end="1183:20"><name pos:start="1183:17" pos:end="1183:20">fpfn</name></expr>)</condition> <block pos:start="1183:23" pos:end="1281:9">{<block_content pos:start="1185:9" pos:end="1279:29"> <comment type="block" pos:start="1183:25" pos:end="1183:41">/* fn11 &amp; 0x3F */</comment>

        <case pos:start="1185:9" pos:end="1185:18">case <expr pos:start="1185:14" pos:end="1185:17"><literal type="number" pos:start="1185:14" pos:end="1185:17">0x04</literal></expr>:</case>

            <comment type="block" pos:start="1187:13" pos:end="1187:23">/* ITOFS */</comment>

            <expr_stmt pos:start="1189:13" pos:end="1189:31"><expr pos:start="1189:13" pos:end="1189:30"><call pos:start="1189:13" pos:end="1189:30"><name pos:start="1189:13" pos:end="1189:26">REQUIRE_REG_31</name><argument_list pos:start="1189:27" pos:end="1189:30">(<argument pos:start="1189:28" pos:end="1189:29"><expr pos:start="1189:28" pos:end="1189:29"><name pos:start="1189:28" pos:end="1189:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1191:13" pos:end="1191:37"><expr pos:start="1191:13" pos:end="1191:36"><name pos:start="1191:13" pos:end="1191:15">t32</name> <operator pos:start="1191:17" pos:end="1191:17">=</operator> <call pos:start="1191:19" pos:end="1191:36"><name pos:start="1191:19" pos:end="1191:34">tcg_temp_new_i32</name><argument_list pos:start="1191:35" pos:end="1191:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1193:13" pos:end="1193:35"><expr pos:start="1193:13" pos:end="1193:34"><name pos:start="1193:13" pos:end="1193:14">va</name> <operator pos:start="1193:16" pos:end="1193:16">=</operator> <call pos:start="1193:18" pos:end="1193:34"><name pos:start="1193:18" pos:end="1193:25">load_gpr</name><argument_list pos:start="1193:26" pos:end="1193:34">(<argument pos:start="1193:27" pos:end="1193:29"><expr pos:start="1193:27" pos:end="1193:29"><name pos:start="1193:27" pos:end="1193:29">ctx</name></expr></argument>, <argument pos:start="1193:32" pos:end="1193:33"><expr pos:start="1193:32" pos:end="1193:33"><name pos:start="1193:32" pos:end="1193:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1195:13" pos:end="1195:43"><expr pos:start="1195:13" pos:end="1195:42"><call pos:start="1195:13" pos:end="1195:42"><name pos:start="1195:13" pos:end="1195:33">tcg_gen_extrl_i64_i32</name><argument_list pos:start="1195:34" pos:end="1195:42">(<argument pos:start="1195:35" pos:end="1195:37"><expr pos:start="1195:35" pos:end="1195:37"><name pos:start="1195:35" pos:end="1195:37">t32</name></expr></argument>, <argument pos:start="1195:40" pos:end="1195:41"><expr pos:start="1195:40" pos:end="1195:41"><name pos:start="1195:40" pos:end="1195:41">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1197:13" pos:end="1197:44"><expr pos:start="1197:13" pos:end="1197:43"><call pos:start="1197:13" pos:end="1197:43"><name pos:start="1197:13" pos:end="1197:34">gen_helper_memory_to_s</name><argument_list pos:start="1197:35" pos:end="1197:43">(<argument pos:start="1197:36" pos:end="1197:37"><expr pos:start="1197:36" pos:end="1197:37"><name pos:start="1197:36" pos:end="1197:37">vc</name></expr></argument>, <argument pos:start="1197:40" pos:end="1197:42"><expr pos:start="1197:40" pos:end="1197:42"><name pos:start="1197:40" pos:end="1197:42">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1199:13" pos:end="1199:35"><expr pos:start="1199:13" pos:end="1199:34"><call pos:start="1199:13" pos:end="1199:34"><name pos:start="1199:13" pos:end="1199:29">tcg_temp_free_i32</name><argument_list pos:start="1199:30" pos:end="1199:34">(<argument pos:start="1199:31" pos:end="1199:33"><expr pos:start="1199:31" pos:end="1199:33"><name pos:start="1199:31" pos:end="1199:33">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1201:13" pos:end="1201:18">break;</break>

        <case pos:start="1203:9" pos:end="1203:18">case <expr pos:start="1203:14" pos:end="1203:17"><literal type="number" pos:start="1203:14" pos:end="1203:17">0x0A</literal></expr>:</case>

            <comment type="block" pos:start="1205:13" pos:end="1205:23">/* SQRTF */</comment>

            <expr_stmt pos:start="1207:13" pos:end="1207:31"><expr pos:start="1207:13" pos:end="1207:30"><call pos:start="1207:13" pos:end="1207:30"><name pos:start="1207:13" pos:end="1207:26">REQUIRE_REG_31</name><argument_list pos:start="1207:27" pos:end="1207:30">(<argument pos:start="1207:28" pos:end="1207:29"><expr pos:start="1207:28" pos:end="1207:29"><name pos:start="1207:28" pos:end="1207:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1209:13" pos:end="1209:35"><expr pos:start="1209:13" pos:end="1209:34"><name pos:start="1209:13" pos:end="1209:14">vb</name> <operator pos:start="1209:16" pos:end="1209:16">=</operator> <call pos:start="1209:18" pos:end="1209:34"><name pos:start="1209:18" pos:end="1209:25">load_fpr</name><argument_list pos:start="1209:26" pos:end="1209:34">(<argument pos:start="1209:27" pos:end="1209:29"><expr pos:start="1209:27" pos:end="1209:29"><name pos:start="1209:27" pos:end="1209:29">ctx</name></expr></argument>, <argument pos:start="1209:32" pos:end="1209:33"><expr pos:start="1209:32" pos:end="1209:33"><name pos:start="1209:32" pos:end="1209:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1211:13" pos:end="1211:46"><expr pos:start="1211:13" pos:end="1211:45"><call pos:start="1211:13" pos:end="1211:45"><name pos:start="1211:13" pos:end="1211:28">gen_helper_sqrtf</name><argument_list pos:start="1211:29" pos:end="1211:45">(<argument pos:start="1211:30" pos:end="1211:31"><expr pos:start="1211:30" pos:end="1211:31"><name pos:start="1211:30" pos:end="1211:31">vc</name></expr></argument>, <argument pos:start="1211:34" pos:end="1211:40"><expr pos:start="1211:34" pos:end="1211:40"><name pos:start="1211:34" pos:end="1211:40">cpu_env</name></expr></argument>, <argument pos:start="1211:43" pos:end="1211:44"><expr pos:start="1211:43" pos:end="1211:44"><name pos:start="1211:43" pos:end="1211:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1213:13" pos:end="1213:18">break;</break>

        <case pos:start="1215:9" pos:end="1215:18">case <expr pos:start="1215:14" pos:end="1215:17"><literal type="number" pos:start="1215:14" pos:end="1215:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="1217:13" pos:end="1217:23">/* SQRTS */</comment>

            <expr_stmt pos:start="1219:13" pos:end="1219:31"><expr pos:start="1219:13" pos:end="1219:30"><call pos:start="1219:13" pos:end="1219:30"><name pos:start="1219:13" pos:end="1219:26">REQUIRE_REG_31</name><argument_list pos:start="1219:27" pos:end="1219:30">(<argument pos:start="1219:28" pos:end="1219:29"><expr pos:start="1219:28" pos:end="1219:29"><name pos:start="1219:28" pos:end="1219:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1221:13" pos:end="1221:41"><expr pos:start="1221:13" pos:end="1221:40"><call pos:start="1221:13" pos:end="1221:40"><name pos:start="1221:13" pos:end="1221:21">gen_sqrts</name><argument_list pos:start="1221:22" pos:end="1221:40">(<argument pos:start="1221:23" pos:end="1221:25"><expr pos:start="1221:23" pos:end="1221:25"><name pos:start="1221:23" pos:end="1221:25">ctx</name></expr></argument>, <argument pos:start="1221:28" pos:end="1221:29"><expr pos:start="1221:28" pos:end="1221:29"><name pos:start="1221:28" pos:end="1221:29">rb</name></expr></argument>, <argument pos:start="1221:32" pos:end="1221:33"><expr pos:start="1221:32" pos:end="1221:33"><name pos:start="1221:32" pos:end="1221:33">rc</name></expr></argument>, <argument pos:start="1221:36" pos:end="1221:39"><expr pos:start="1221:36" pos:end="1221:39"><name pos:start="1221:36" pos:end="1221:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1223:13" pos:end="1223:18">break;</break>

        <case pos:start="1225:9" pos:end="1225:18">case <expr pos:start="1225:14" pos:end="1225:17"><literal type="number" pos:start="1225:14" pos:end="1225:17">0x14</literal></expr>:</case>

            <comment type="block" pos:start="1227:13" pos:end="1227:23">/* ITOFF */</comment>

            <expr_stmt pos:start="1229:13" pos:end="1229:31"><expr pos:start="1229:13" pos:end="1229:30"><call pos:start="1229:13" pos:end="1229:30"><name pos:start="1229:13" pos:end="1229:26">REQUIRE_REG_31</name><argument_list pos:start="1229:27" pos:end="1229:30">(<argument pos:start="1229:28" pos:end="1229:29"><expr pos:start="1229:28" pos:end="1229:29"><name pos:start="1229:28" pos:end="1229:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1231:13" pos:end="1231:37"><expr pos:start="1231:13" pos:end="1231:36"><name pos:start="1231:13" pos:end="1231:15">t32</name> <operator pos:start="1231:17" pos:end="1231:17">=</operator> <call pos:start="1231:19" pos:end="1231:36"><name pos:start="1231:19" pos:end="1231:34">tcg_temp_new_i32</name><argument_list pos:start="1231:35" pos:end="1231:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1233:13" pos:end="1233:35"><expr pos:start="1233:13" pos:end="1233:34"><name pos:start="1233:13" pos:end="1233:14">va</name> <operator pos:start="1233:16" pos:end="1233:16">=</operator> <call pos:start="1233:18" pos:end="1233:34"><name pos:start="1233:18" pos:end="1233:25">load_gpr</name><argument_list pos:start="1233:26" pos:end="1233:34">(<argument pos:start="1233:27" pos:end="1233:29"><expr pos:start="1233:27" pos:end="1233:29"><name pos:start="1233:27" pos:end="1233:29">ctx</name></expr></argument>, <argument pos:start="1233:32" pos:end="1233:33"><expr pos:start="1233:32" pos:end="1233:33"><name pos:start="1233:32" pos:end="1233:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1235:13" pos:end="1235:43"><expr pos:start="1235:13" pos:end="1235:42"><call pos:start="1235:13" pos:end="1235:42"><name pos:start="1235:13" pos:end="1235:33">tcg_gen_extrl_i64_i32</name><argument_list pos:start="1235:34" pos:end="1235:42">(<argument pos:start="1235:35" pos:end="1235:37"><expr pos:start="1235:35" pos:end="1235:37"><name pos:start="1235:35" pos:end="1235:37">t32</name></expr></argument>, <argument pos:start="1235:40" pos:end="1235:41"><expr pos:start="1235:40" pos:end="1235:41"><name pos:start="1235:40" pos:end="1235:41">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1237:13" pos:end="1237:44"><expr pos:start="1237:13" pos:end="1237:43"><call pos:start="1237:13" pos:end="1237:43"><name pos:start="1237:13" pos:end="1237:34">gen_helper_memory_to_f</name><argument_list pos:start="1237:35" pos:end="1237:43">(<argument pos:start="1237:36" pos:end="1237:37"><expr pos:start="1237:36" pos:end="1237:37"><name pos:start="1237:36" pos:end="1237:37">vc</name></expr></argument>, <argument pos:start="1237:40" pos:end="1237:42"><expr pos:start="1237:40" pos:end="1237:42"><name pos:start="1237:40" pos:end="1237:42">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1239:13" pos:end="1239:35"><expr pos:start="1239:13" pos:end="1239:34"><call pos:start="1239:13" pos:end="1239:34"><name pos:start="1239:13" pos:end="1239:29">tcg_temp_free_i32</name><argument_list pos:start="1239:30" pos:end="1239:34">(<argument pos:start="1239:31" pos:end="1239:33"><expr pos:start="1239:31" pos:end="1239:33"><name pos:start="1239:31" pos:end="1239:33">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1241:13" pos:end="1241:18">break;</break>

        <case pos:start="1243:9" pos:end="1243:18">case <expr pos:start="1243:14" pos:end="1243:17"><literal type="number" pos:start="1243:14" pos:end="1243:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="1245:13" pos:end="1245:23">/* ITOFT */</comment>

            <expr_stmt pos:start="1247:13" pos:end="1247:31"><expr pos:start="1247:13" pos:end="1247:30"><call pos:start="1247:13" pos:end="1247:30"><name pos:start="1247:13" pos:end="1247:26">REQUIRE_REG_31</name><argument_list pos:start="1247:27" pos:end="1247:30">(<argument pos:start="1247:28" pos:end="1247:29"><expr pos:start="1247:28" pos:end="1247:29"><name pos:start="1247:28" pos:end="1247:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1249:13" pos:end="1249:35"><expr pos:start="1249:13" pos:end="1249:34"><name pos:start="1249:13" pos:end="1249:14">va</name> <operator pos:start="1249:16" pos:end="1249:16">=</operator> <call pos:start="1249:18" pos:end="1249:34"><name pos:start="1249:18" pos:end="1249:25">load_gpr</name><argument_list pos:start="1249:26" pos:end="1249:34">(<argument pos:start="1249:27" pos:end="1249:29"><expr pos:start="1249:27" pos:end="1249:29"><name pos:start="1249:27" pos:end="1249:29">ctx</name></expr></argument>, <argument pos:start="1249:32" pos:end="1249:33"><expr pos:start="1249:32" pos:end="1249:33"><name pos:start="1249:32" pos:end="1249:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1251:13" pos:end="1251:36"><expr pos:start="1251:13" pos:end="1251:35"><call pos:start="1251:13" pos:end="1251:35"><name pos:start="1251:13" pos:end="1251:27">tcg_gen_mov_i64</name><argument_list pos:start="1251:28" pos:end="1251:35">(<argument pos:start="1251:29" pos:end="1251:30"><expr pos:start="1251:29" pos:end="1251:30"><name pos:start="1251:29" pos:end="1251:30">vc</name></expr></argument>, <argument pos:start="1251:33" pos:end="1251:34"><expr pos:start="1251:33" pos:end="1251:34"><name pos:start="1251:33" pos:end="1251:34">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1253:13" pos:end="1253:18">break;</break>

        <case pos:start="1255:9" pos:end="1255:18">case <expr pos:start="1255:14" pos:end="1255:17"><literal type="number" pos:start="1255:14" pos:end="1255:17">0x2A</literal></expr>:</case>

            <comment type="block" pos:start="1257:13" pos:end="1257:23">/* SQRTG */</comment>

            <expr_stmt pos:start="1259:13" pos:end="1259:31"><expr pos:start="1259:13" pos:end="1259:30"><call pos:start="1259:13" pos:end="1259:30"><name pos:start="1259:13" pos:end="1259:26">REQUIRE_REG_31</name><argument_list pos:start="1259:27" pos:end="1259:30">(<argument pos:start="1259:28" pos:end="1259:29"><expr pos:start="1259:28" pos:end="1259:29"><name pos:start="1259:28" pos:end="1259:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1261:13" pos:end="1261:35"><expr pos:start="1261:13" pos:end="1261:34"><name pos:start="1261:13" pos:end="1261:14">vb</name> <operator pos:start="1261:16" pos:end="1261:16">=</operator> <call pos:start="1261:18" pos:end="1261:34"><name pos:start="1261:18" pos:end="1261:25">load_fpr</name><argument_list pos:start="1261:26" pos:end="1261:34">(<argument pos:start="1261:27" pos:end="1261:29"><expr pos:start="1261:27" pos:end="1261:29"><name pos:start="1261:27" pos:end="1261:29">ctx</name></expr></argument>, <argument pos:start="1261:32" pos:end="1261:33"><expr pos:start="1261:32" pos:end="1261:33"><name pos:start="1261:32" pos:end="1261:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1263:13" pos:end="1263:46"><expr pos:start="1263:13" pos:end="1263:45"><call pos:start="1263:13" pos:end="1263:45"><name pos:start="1263:13" pos:end="1263:28">gen_helper_sqrtg</name><argument_list pos:start="1263:29" pos:end="1263:45">(<argument pos:start="1263:30" pos:end="1263:31"><expr pos:start="1263:30" pos:end="1263:31"><name pos:start="1263:30" pos:end="1263:31">vc</name></expr></argument>, <argument pos:start="1263:34" pos:end="1263:40"><expr pos:start="1263:34" pos:end="1263:40"><name pos:start="1263:34" pos:end="1263:40">cpu_env</name></expr></argument>, <argument pos:start="1263:43" pos:end="1263:44"><expr pos:start="1263:43" pos:end="1263:44"><name pos:start="1263:43" pos:end="1263:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1265:13" pos:end="1265:18">break;</break>

        <case pos:start="1267:9" pos:end="1267:19">case <expr pos:start="1267:14" pos:end="1267:18"><literal type="number" pos:start="1267:14" pos:end="1267:18">0x02B</literal></expr>:</case>

            <comment type="block" pos:start="1269:13" pos:end="1269:23">/* SQRTT */</comment>

            <expr_stmt pos:start="1271:13" pos:end="1271:31"><expr pos:start="1271:13" pos:end="1271:30"><call pos:start="1271:13" pos:end="1271:30"><name pos:start="1271:13" pos:end="1271:26">REQUIRE_REG_31</name><argument_list pos:start="1271:27" pos:end="1271:30">(<argument pos:start="1271:28" pos:end="1271:29"><expr pos:start="1271:28" pos:end="1271:29"><name pos:start="1271:28" pos:end="1271:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1273:13" pos:end="1273:41"><expr pos:start="1273:13" pos:end="1273:40"><call pos:start="1273:13" pos:end="1273:40"><name pos:start="1273:13" pos:end="1273:21">gen_sqrtt</name><argument_list pos:start="1273:22" pos:end="1273:40">(<argument pos:start="1273:23" pos:end="1273:25"><expr pos:start="1273:23" pos:end="1273:25"><name pos:start="1273:23" pos:end="1273:25">ctx</name></expr></argument>, <argument pos:start="1273:28" pos:end="1273:29"><expr pos:start="1273:28" pos:end="1273:29"><name pos:start="1273:28" pos:end="1273:29">rb</name></expr></argument>, <argument pos:start="1273:32" pos:end="1273:33"><expr pos:start="1273:32" pos:end="1273:33"><name pos:start="1273:32" pos:end="1273:33">rc</name></expr></argument>, <argument pos:start="1273:36" pos:end="1273:39"><expr pos:start="1273:36" pos:end="1273:39"><name pos:start="1273:36" pos:end="1273:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1275:13" pos:end="1275:18">break;</break>

        <default pos:start="1277:9" pos:end="1277:16">default:</default>

            <goto pos:start="1279:13" pos:end="1279:29">goto <name pos:start="1279:18" pos:end="1279:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1283:9" pos:end="1283:14">break;</break>



    <case pos:start="1287:5" pos:end="1287:14">case <expr pos:start="1287:10" pos:end="1287:13"><literal type="number" pos:start="1287:10" pos:end="1287:13">0x15</literal></expr>:</case>

        <comment type="block" pos:start="1289:9" pos:end="1289:32">/* VAX floating point */</comment>

        <comment type="block" pos:start="1291:9" pos:end="1291:57">/* XXX: rounding mode and trap are ignored (!) */</comment>

        <expr_stmt pos:start="1293:9" pos:end="1293:31"><expr pos:start="1293:9" pos:end="1293:30"><name pos:start="1293:9" pos:end="1293:10">vc</name> <operator pos:start="1293:12" pos:end="1293:12">=</operator> <call pos:start="1293:14" pos:end="1293:30"><name pos:start="1293:14" pos:end="1293:21">dest_fpr</name><argument_list pos:start="1293:22" pos:end="1293:30">(<argument pos:start="1293:23" pos:end="1293:25"><expr pos:start="1293:23" pos:end="1293:25"><name pos:start="1293:23" pos:end="1293:25">ctx</name></expr></argument>, <argument pos:start="1293:28" pos:end="1293:29"><expr pos:start="1293:28" pos:end="1293:29"><name pos:start="1293:28" pos:end="1293:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1295:9" pos:end="1295:31"><expr pos:start="1295:9" pos:end="1295:30"><name pos:start="1295:9" pos:end="1295:10">vb</name> <operator pos:start="1295:12" pos:end="1295:12">=</operator> <call pos:start="1295:14" pos:end="1295:30"><name pos:start="1295:14" pos:end="1295:21">load_fpr</name><argument_list pos:start="1295:22" pos:end="1295:30">(<argument pos:start="1295:23" pos:end="1295:25"><expr pos:start="1295:23" pos:end="1295:25"><name pos:start="1295:23" pos:end="1295:25">ctx</name></expr></argument>, <argument pos:start="1295:28" pos:end="1295:29"><expr pos:start="1295:28" pos:end="1295:29"><name pos:start="1295:28" pos:end="1295:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1297:9" pos:end="1297:31"><expr pos:start="1297:9" pos:end="1297:30"><name pos:start="1297:9" pos:end="1297:10">va</name> <operator pos:start="1297:12" pos:end="1297:12">=</operator> <call pos:start="1297:14" pos:end="1297:30"><name pos:start="1297:14" pos:end="1297:21">load_fpr</name><argument_list pos:start="1297:22" pos:end="1297:30">(<argument pos:start="1297:23" pos:end="1297:25"><expr pos:start="1297:23" pos:end="1297:25"><name pos:start="1297:23" pos:end="1297:25">ctx</name></expr></argument>, <argument pos:start="1297:28" pos:end="1297:29"><expr pos:start="1297:28" pos:end="1297:29"><name pos:start="1297:28" pos:end="1297:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1299:9" pos:end="1449:9">switch <condition pos:start="1299:16" pos:end="1299:21">(<expr pos:start="1299:17" pos:end="1299:20"><name pos:start="1299:17" pos:end="1299:20">fpfn</name></expr>)</condition> <block pos:start="1299:23" pos:end="1449:9">{<block_content pos:start="1301:9" pos:end="1447:29"> <comment type="block" pos:start="1299:25" pos:end="1299:41">/* fn11 &amp; 0x3F */</comment>

        <case pos:start="1301:9" pos:end="1301:18">case <expr pos:start="1301:14" pos:end="1301:17"><literal type="number" pos:start="1301:14" pos:end="1301:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1303:13" pos:end="1303:22">/* ADDF */</comment>

            <expr_stmt pos:start="1305:13" pos:end="1305:49"><expr pos:start="1305:13" pos:end="1305:48"><call pos:start="1305:13" pos:end="1305:48"><name pos:start="1305:13" pos:end="1305:27">gen_helper_addf</name><argument_list pos:start="1305:28" pos:end="1305:48">(<argument pos:start="1305:29" pos:end="1305:30"><expr pos:start="1305:29" pos:end="1305:30"><name pos:start="1305:29" pos:end="1305:30">vc</name></expr></argument>, <argument pos:start="1305:33" pos:end="1305:39"><expr pos:start="1305:33" pos:end="1305:39"><name pos:start="1305:33" pos:end="1305:39">cpu_env</name></expr></argument>, <argument pos:start="1305:42" pos:end="1305:43"><expr pos:start="1305:42" pos:end="1305:43"><name pos:start="1305:42" pos:end="1305:43">va</name></expr></argument>, <argument pos:start="1305:46" pos:end="1305:47"><expr pos:start="1305:46" pos:end="1305:47"><name pos:start="1305:46" pos:end="1305:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1307:13" pos:end="1307:18">break;</break>

        <case pos:start="1309:9" pos:end="1309:18">case <expr pos:start="1309:14" pos:end="1309:17"><literal type="number" pos:start="1309:14" pos:end="1309:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="1311:13" pos:end="1311:22">/* SUBF */</comment>

            <expr_stmt pos:start="1313:13" pos:end="1313:49"><expr pos:start="1313:13" pos:end="1313:48"><call pos:start="1313:13" pos:end="1313:48"><name pos:start="1313:13" pos:end="1313:27">gen_helper_subf</name><argument_list pos:start="1313:28" pos:end="1313:48">(<argument pos:start="1313:29" pos:end="1313:30"><expr pos:start="1313:29" pos:end="1313:30"><name pos:start="1313:29" pos:end="1313:30">vc</name></expr></argument>, <argument pos:start="1313:33" pos:end="1313:39"><expr pos:start="1313:33" pos:end="1313:39"><name pos:start="1313:33" pos:end="1313:39">cpu_env</name></expr></argument>, <argument pos:start="1313:42" pos:end="1313:43"><expr pos:start="1313:42" pos:end="1313:43"><name pos:start="1313:42" pos:end="1313:43">va</name></expr></argument>, <argument pos:start="1313:46" pos:end="1313:47"><expr pos:start="1313:46" pos:end="1313:47"><name pos:start="1313:46" pos:end="1313:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1315:13" pos:end="1315:18">break;</break>

        <case pos:start="1317:9" pos:end="1317:18">case <expr pos:start="1317:14" pos:end="1317:17"><literal type="number" pos:start="1317:14" pos:end="1317:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1319:13" pos:end="1319:22">/* MULF */</comment>

            <expr_stmt pos:start="1321:13" pos:end="1321:49"><expr pos:start="1321:13" pos:end="1321:48"><call pos:start="1321:13" pos:end="1321:48"><name pos:start="1321:13" pos:end="1321:27">gen_helper_mulf</name><argument_list pos:start="1321:28" pos:end="1321:48">(<argument pos:start="1321:29" pos:end="1321:30"><expr pos:start="1321:29" pos:end="1321:30"><name pos:start="1321:29" pos:end="1321:30">vc</name></expr></argument>, <argument pos:start="1321:33" pos:end="1321:39"><expr pos:start="1321:33" pos:end="1321:39"><name pos:start="1321:33" pos:end="1321:39">cpu_env</name></expr></argument>, <argument pos:start="1321:42" pos:end="1321:43"><expr pos:start="1321:42" pos:end="1321:43"><name pos:start="1321:42" pos:end="1321:43">va</name></expr></argument>, <argument pos:start="1321:46" pos:end="1321:47"><expr pos:start="1321:46" pos:end="1321:47"><name pos:start="1321:46" pos:end="1321:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1323:13" pos:end="1323:18">break;</break>

        <case pos:start="1325:9" pos:end="1325:18">case <expr pos:start="1325:14" pos:end="1325:17"><literal type="number" pos:start="1325:14" pos:end="1325:17">0x03</literal></expr>:</case>

            <comment type="block" pos:start="1327:13" pos:end="1327:22">/* DIVF */</comment>

            <expr_stmt pos:start="1329:13" pos:end="1329:49"><expr pos:start="1329:13" pos:end="1329:48"><call pos:start="1329:13" pos:end="1329:48"><name pos:start="1329:13" pos:end="1329:27">gen_helper_divf</name><argument_list pos:start="1329:28" pos:end="1329:48">(<argument pos:start="1329:29" pos:end="1329:30"><expr pos:start="1329:29" pos:end="1329:30"><name pos:start="1329:29" pos:end="1329:30">vc</name></expr></argument>, <argument pos:start="1329:33" pos:end="1329:39"><expr pos:start="1329:33" pos:end="1329:39"><name pos:start="1329:33" pos:end="1329:39">cpu_env</name></expr></argument>, <argument pos:start="1329:42" pos:end="1329:43"><expr pos:start="1329:42" pos:end="1329:43"><name pos:start="1329:42" pos:end="1329:43">va</name></expr></argument>, <argument pos:start="1329:46" pos:end="1329:47"><expr pos:start="1329:46" pos:end="1329:47"><name pos:start="1329:46" pos:end="1329:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1331:13" pos:end="1331:18">break;</break>

        <case pos:start="1333:9" pos:end="1333:18">case <expr pos:start="1333:14" pos:end="1333:17"><literal type="number" pos:start="1333:14" pos:end="1333:17">0x1E</literal></expr>:</case>

            <comment type="block" pos:start="1335:13" pos:end="1335:31">/* CVTDG -- TODO */</comment>

            <expr_stmt pos:start="1337:13" pos:end="1337:31"><expr pos:start="1337:13" pos:end="1337:30"><call pos:start="1337:13" pos:end="1337:30"><name pos:start="1337:13" pos:end="1337:26">REQUIRE_REG_31</name><argument_list pos:start="1337:27" pos:end="1337:30">(<argument pos:start="1337:28" pos:end="1337:29"><expr pos:start="1337:28" pos:end="1337:29"><name pos:start="1337:28" pos:end="1337:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1339:13" pos:end="1339:29">goto <name pos:start="1339:18" pos:end="1339:28">invalid_opc</name>;</goto>

        <case pos:start="1341:9" pos:end="1341:18">case <expr pos:start="1341:14" pos:end="1341:17"><literal type="number" pos:start="1341:14" pos:end="1341:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1343:13" pos:end="1343:22">/* ADDG */</comment>

            <expr_stmt pos:start="1345:13" pos:end="1345:49"><expr pos:start="1345:13" pos:end="1345:48"><call pos:start="1345:13" pos:end="1345:48"><name pos:start="1345:13" pos:end="1345:27">gen_helper_addg</name><argument_list pos:start="1345:28" pos:end="1345:48">(<argument pos:start="1345:29" pos:end="1345:30"><expr pos:start="1345:29" pos:end="1345:30"><name pos:start="1345:29" pos:end="1345:30">vc</name></expr></argument>, <argument pos:start="1345:33" pos:end="1345:39"><expr pos:start="1345:33" pos:end="1345:39"><name pos:start="1345:33" pos:end="1345:39">cpu_env</name></expr></argument>, <argument pos:start="1345:42" pos:end="1345:43"><expr pos:start="1345:42" pos:end="1345:43"><name pos:start="1345:42" pos:end="1345:43">va</name></expr></argument>, <argument pos:start="1345:46" pos:end="1345:47"><expr pos:start="1345:46" pos:end="1345:47"><name pos:start="1345:46" pos:end="1345:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1347:13" pos:end="1347:18">break;</break>

        <case pos:start="1349:9" pos:end="1349:18">case <expr pos:start="1349:14" pos:end="1349:17"><literal type="number" pos:start="1349:14" pos:end="1349:17">0x21</literal></expr>:</case>

            <comment type="block" pos:start="1351:13" pos:end="1351:22">/* SUBG */</comment>

            <expr_stmt pos:start="1353:13" pos:end="1353:49"><expr pos:start="1353:13" pos:end="1353:48"><call pos:start="1353:13" pos:end="1353:48"><name pos:start="1353:13" pos:end="1353:27">gen_helper_subg</name><argument_list pos:start="1353:28" pos:end="1353:48">(<argument pos:start="1353:29" pos:end="1353:30"><expr pos:start="1353:29" pos:end="1353:30"><name pos:start="1353:29" pos:end="1353:30">vc</name></expr></argument>, <argument pos:start="1353:33" pos:end="1353:39"><expr pos:start="1353:33" pos:end="1353:39"><name pos:start="1353:33" pos:end="1353:39">cpu_env</name></expr></argument>, <argument pos:start="1353:42" pos:end="1353:43"><expr pos:start="1353:42" pos:end="1353:43"><name pos:start="1353:42" pos:end="1353:43">va</name></expr></argument>, <argument pos:start="1353:46" pos:end="1353:47"><expr pos:start="1353:46" pos:end="1353:47"><name pos:start="1353:46" pos:end="1353:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1355:13" pos:end="1355:18">break;</break>

        <case pos:start="1357:9" pos:end="1357:18">case <expr pos:start="1357:14" pos:end="1357:17"><literal type="number" pos:start="1357:14" pos:end="1357:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1359:13" pos:end="1359:22">/* MULG */</comment>

            <expr_stmt pos:start="1361:13" pos:end="1361:49"><expr pos:start="1361:13" pos:end="1361:48"><call pos:start="1361:13" pos:end="1361:48"><name pos:start="1361:13" pos:end="1361:27">gen_helper_mulg</name><argument_list pos:start="1361:28" pos:end="1361:48">(<argument pos:start="1361:29" pos:end="1361:30"><expr pos:start="1361:29" pos:end="1361:30"><name pos:start="1361:29" pos:end="1361:30">vc</name></expr></argument>, <argument pos:start="1361:33" pos:end="1361:39"><expr pos:start="1361:33" pos:end="1361:39"><name pos:start="1361:33" pos:end="1361:39">cpu_env</name></expr></argument>, <argument pos:start="1361:42" pos:end="1361:43"><expr pos:start="1361:42" pos:end="1361:43"><name pos:start="1361:42" pos:end="1361:43">va</name></expr></argument>, <argument pos:start="1361:46" pos:end="1361:47"><expr pos:start="1361:46" pos:end="1361:47"><name pos:start="1361:46" pos:end="1361:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1363:13" pos:end="1363:18">break;</break>

        <case pos:start="1365:9" pos:end="1365:18">case <expr pos:start="1365:14" pos:end="1365:17"><literal type="number" pos:start="1365:14" pos:end="1365:17">0x23</literal></expr>:</case>

            <comment type="block" pos:start="1367:13" pos:end="1367:22">/* DIVG */</comment>

            <expr_stmt pos:start="1369:13" pos:end="1369:49"><expr pos:start="1369:13" pos:end="1369:48"><call pos:start="1369:13" pos:end="1369:48"><name pos:start="1369:13" pos:end="1369:27">gen_helper_divg</name><argument_list pos:start="1369:28" pos:end="1369:48">(<argument pos:start="1369:29" pos:end="1369:30"><expr pos:start="1369:29" pos:end="1369:30"><name pos:start="1369:29" pos:end="1369:30">vc</name></expr></argument>, <argument pos:start="1369:33" pos:end="1369:39"><expr pos:start="1369:33" pos:end="1369:39"><name pos:start="1369:33" pos:end="1369:39">cpu_env</name></expr></argument>, <argument pos:start="1369:42" pos:end="1369:43"><expr pos:start="1369:42" pos:end="1369:43"><name pos:start="1369:42" pos:end="1369:43">va</name></expr></argument>, <argument pos:start="1369:46" pos:end="1369:47"><expr pos:start="1369:46" pos:end="1369:47"><name pos:start="1369:46" pos:end="1369:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1371:13" pos:end="1371:18">break;</break>

        <case pos:start="1373:9" pos:end="1373:18">case <expr pos:start="1373:14" pos:end="1373:17"><literal type="number" pos:start="1373:14" pos:end="1373:17">0x25</literal></expr>:</case>

            <comment type="block" pos:start="1375:13" pos:end="1375:24">/* CMPGEQ */</comment>

            <expr_stmt pos:start="1377:13" pos:end="1377:51"><expr pos:start="1377:13" pos:end="1377:50"><call pos:start="1377:13" pos:end="1377:50"><name pos:start="1377:13" pos:end="1377:29">gen_helper_cmpgeq</name><argument_list pos:start="1377:30" pos:end="1377:50">(<argument pos:start="1377:31" pos:end="1377:32"><expr pos:start="1377:31" pos:end="1377:32"><name pos:start="1377:31" pos:end="1377:32">vc</name></expr></argument>, <argument pos:start="1377:35" pos:end="1377:41"><expr pos:start="1377:35" pos:end="1377:41"><name pos:start="1377:35" pos:end="1377:41">cpu_env</name></expr></argument>, <argument pos:start="1377:44" pos:end="1377:45"><expr pos:start="1377:44" pos:end="1377:45"><name pos:start="1377:44" pos:end="1377:45">va</name></expr></argument>, <argument pos:start="1377:48" pos:end="1377:49"><expr pos:start="1377:48" pos:end="1377:49"><name pos:start="1377:48" pos:end="1377:49">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1379:13" pos:end="1379:18">break;</break>

        <case pos:start="1381:9" pos:end="1381:18">case <expr pos:start="1381:14" pos:end="1381:17"><literal type="number" pos:start="1381:14" pos:end="1381:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1383:13" pos:end="1383:24">/* CMPGLT */</comment>

            <expr_stmt pos:start="1385:13" pos:end="1385:51"><expr pos:start="1385:13" pos:end="1385:50"><call pos:start="1385:13" pos:end="1385:50"><name pos:start="1385:13" pos:end="1385:29">gen_helper_cmpglt</name><argument_list pos:start="1385:30" pos:end="1385:50">(<argument pos:start="1385:31" pos:end="1385:32"><expr pos:start="1385:31" pos:end="1385:32"><name pos:start="1385:31" pos:end="1385:32">vc</name></expr></argument>, <argument pos:start="1385:35" pos:end="1385:41"><expr pos:start="1385:35" pos:end="1385:41"><name pos:start="1385:35" pos:end="1385:41">cpu_env</name></expr></argument>, <argument pos:start="1385:44" pos:end="1385:45"><expr pos:start="1385:44" pos:end="1385:45"><name pos:start="1385:44" pos:end="1385:45">va</name></expr></argument>, <argument pos:start="1385:48" pos:end="1385:49"><expr pos:start="1385:48" pos:end="1385:49"><name pos:start="1385:48" pos:end="1385:49">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1387:13" pos:end="1387:18">break;</break>

        <case pos:start="1389:9" pos:end="1389:18">case <expr pos:start="1389:14" pos:end="1389:17"><literal type="number" pos:start="1389:14" pos:end="1389:17">0x27</literal></expr>:</case>

            <comment type="block" pos:start="1391:13" pos:end="1391:24">/* CMPGLE */</comment>

            <expr_stmt pos:start="1393:13" pos:end="1393:51"><expr pos:start="1393:13" pos:end="1393:50"><call pos:start="1393:13" pos:end="1393:50"><name pos:start="1393:13" pos:end="1393:29">gen_helper_cmpgle</name><argument_list pos:start="1393:30" pos:end="1393:50">(<argument pos:start="1393:31" pos:end="1393:32"><expr pos:start="1393:31" pos:end="1393:32"><name pos:start="1393:31" pos:end="1393:32">vc</name></expr></argument>, <argument pos:start="1393:35" pos:end="1393:41"><expr pos:start="1393:35" pos:end="1393:41"><name pos:start="1393:35" pos:end="1393:41">cpu_env</name></expr></argument>, <argument pos:start="1393:44" pos:end="1393:45"><expr pos:start="1393:44" pos:end="1393:45"><name pos:start="1393:44" pos:end="1393:45">va</name></expr></argument>, <argument pos:start="1393:48" pos:end="1393:49"><expr pos:start="1393:48" pos:end="1393:49"><name pos:start="1393:48" pos:end="1393:49">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1395:13" pos:end="1395:18">break;</break>

        <case pos:start="1397:9" pos:end="1397:18">case <expr pos:start="1397:14" pos:end="1397:17"><literal type="number" pos:start="1397:14" pos:end="1397:17">0x2C</literal></expr>:</case>

            <comment type="block" pos:start="1399:13" pos:end="1399:23">/* CVTGF */</comment>

            <expr_stmt pos:start="1401:13" pos:end="1401:31"><expr pos:start="1401:13" pos:end="1401:30"><call pos:start="1401:13" pos:end="1401:30"><name pos:start="1401:13" pos:end="1401:26">REQUIRE_REG_31</name><argument_list pos:start="1401:27" pos:end="1401:30">(<argument pos:start="1401:28" pos:end="1401:29"><expr pos:start="1401:28" pos:end="1401:29"><name pos:start="1401:28" pos:end="1401:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1403:13" pos:end="1403:46"><expr pos:start="1403:13" pos:end="1403:45"><call pos:start="1403:13" pos:end="1403:45"><name pos:start="1403:13" pos:end="1403:28">gen_helper_cvtgf</name><argument_list pos:start="1403:29" pos:end="1403:45">(<argument pos:start="1403:30" pos:end="1403:31"><expr pos:start="1403:30" pos:end="1403:31"><name pos:start="1403:30" pos:end="1403:31">vc</name></expr></argument>, <argument pos:start="1403:34" pos:end="1403:40"><expr pos:start="1403:34" pos:end="1403:40"><name pos:start="1403:34" pos:end="1403:40">cpu_env</name></expr></argument>, <argument pos:start="1403:43" pos:end="1403:44"><expr pos:start="1403:43" pos:end="1403:44"><name pos:start="1403:43" pos:end="1403:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1405:13" pos:end="1405:18">break;</break>

        <case pos:start="1407:9" pos:end="1407:18">case <expr pos:start="1407:14" pos:end="1407:17"><literal type="number" pos:start="1407:14" pos:end="1407:17">0x2D</literal></expr>:</case>

            <comment type="block" pos:start="1409:13" pos:end="1409:31">/* CVTGD -- TODO */</comment>

            <expr_stmt pos:start="1411:13" pos:end="1411:31"><expr pos:start="1411:13" pos:end="1411:30"><call pos:start="1411:13" pos:end="1411:30"><name pos:start="1411:13" pos:end="1411:26">REQUIRE_REG_31</name><argument_list pos:start="1411:27" pos:end="1411:30">(<argument pos:start="1411:28" pos:end="1411:29"><expr pos:start="1411:28" pos:end="1411:29"><name pos:start="1411:28" pos:end="1411:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1413:13" pos:end="1413:29">goto <name pos:start="1413:18" pos:end="1413:28">invalid_opc</name>;</goto>

        <case pos:start="1415:9" pos:end="1415:18">case <expr pos:start="1415:14" pos:end="1415:17"><literal type="number" pos:start="1415:14" pos:end="1415:17">0x2F</literal></expr>:</case>

            <comment type="block" pos:start="1417:13" pos:end="1417:23">/* CVTGQ */</comment>

            <expr_stmt pos:start="1419:13" pos:end="1419:31"><expr pos:start="1419:13" pos:end="1419:30"><call pos:start="1419:13" pos:end="1419:30"><name pos:start="1419:13" pos:end="1419:26">REQUIRE_REG_31</name><argument_list pos:start="1419:27" pos:end="1419:30">(<argument pos:start="1419:28" pos:end="1419:29"><expr pos:start="1419:28" pos:end="1419:29"><name pos:start="1419:28" pos:end="1419:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1421:13" pos:end="1421:46"><expr pos:start="1421:13" pos:end="1421:45"><call pos:start="1421:13" pos:end="1421:45"><name pos:start="1421:13" pos:end="1421:28">gen_helper_cvtgq</name><argument_list pos:start="1421:29" pos:end="1421:45">(<argument pos:start="1421:30" pos:end="1421:31"><expr pos:start="1421:30" pos:end="1421:31"><name pos:start="1421:30" pos:end="1421:31">vc</name></expr></argument>, <argument pos:start="1421:34" pos:end="1421:40"><expr pos:start="1421:34" pos:end="1421:40"><name pos:start="1421:34" pos:end="1421:40">cpu_env</name></expr></argument>, <argument pos:start="1421:43" pos:end="1421:44"><expr pos:start="1421:43" pos:end="1421:44"><name pos:start="1421:43" pos:end="1421:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1423:13" pos:end="1423:18">break;</break>

        <case pos:start="1425:9" pos:end="1425:18">case <expr pos:start="1425:14" pos:end="1425:17"><literal type="number" pos:start="1425:14" pos:end="1425:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1427:13" pos:end="1427:23">/* CVTQF */</comment>

            <expr_stmt pos:start="1429:13" pos:end="1429:31"><expr pos:start="1429:13" pos:end="1429:30"><call pos:start="1429:13" pos:end="1429:30"><name pos:start="1429:13" pos:end="1429:26">REQUIRE_REG_31</name><argument_list pos:start="1429:27" pos:end="1429:30">(<argument pos:start="1429:28" pos:end="1429:29"><expr pos:start="1429:28" pos:end="1429:29"><name pos:start="1429:28" pos:end="1429:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1431:13" pos:end="1431:46"><expr pos:start="1431:13" pos:end="1431:45"><call pos:start="1431:13" pos:end="1431:45"><name pos:start="1431:13" pos:end="1431:28">gen_helper_cvtqf</name><argument_list pos:start="1431:29" pos:end="1431:45">(<argument pos:start="1431:30" pos:end="1431:31"><expr pos:start="1431:30" pos:end="1431:31"><name pos:start="1431:30" pos:end="1431:31">vc</name></expr></argument>, <argument pos:start="1431:34" pos:end="1431:40"><expr pos:start="1431:34" pos:end="1431:40"><name pos:start="1431:34" pos:end="1431:40">cpu_env</name></expr></argument>, <argument pos:start="1431:43" pos:end="1431:44"><expr pos:start="1431:43" pos:end="1431:44"><name pos:start="1431:43" pos:end="1431:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1433:13" pos:end="1433:18">break;</break>

        <case pos:start="1435:9" pos:end="1435:18">case <expr pos:start="1435:14" pos:end="1435:17"><literal type="number" pos:start="1435:14" pos:end="1435:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="1437:13" pos:end="1437:23">/* CVTQG */</comment>

            <expr_stmt pos:start="1439:13" pos:end="1439:31"><expr pos:start="1439:13" pos:end="1439:30"><call pos:start="1439:13" pos:end="1439:30"><name pos:start="1439:13" pos:end="1439:26">REQUIRE_REG_31</name><argument_list pos:start="1439:27" pos:end="1439:30">(<argument pos:start="1439:28" pos:end="1439:29"><expr pos:start="1439:28" pos:end="1439:29"><name pos:start="1439:28" pos:end="1439:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1441:13" pos:end="1441:46"><expr pos:start="1441:13" pos:end="1441:45"><call pos:start="1441:13" pos:end="1441:45"><name pos:start="1441:13" pos:end="1441:28">gen_helper_cvtqg</name><argument_list pos:start="1441:29" pos:end="1441:45">(<argument pos:start="1441:30" pos:end="1441:31"><expr pos:start="1441:30" pos:end="1441:31"><name pos:start="1441:30" pos:end="1441:31">vc</name></expr></argument>, <argument pos:start="1441:34" pos:end="1441:40"><expr pos:start="1441:34" pos:end="1441:40"><name pos:start="1441:34" pos:end="1441:40">cpu_env</name></expr></argument>, <argument pos:start="1441:43" pos:end="1441:44"><expr pos:start="1441:43" pos:end="1441:44"><name pos:start="1441:43" pos:end="1441:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1443:13" pos:end="1443:18">break;</break>

        <default pos:start="1445:9" pos:end="1445:16">default:</default>

            <goto pos:start="1447:13" pos:end="1447:29">goto <name pos:start="1447:18" pos:end="1447:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1451:9" pos:end="1451:14">break;</break>



    <case pos:start="1455:5" pos:end="1455:14">case <expr pos:start="1455:10" pos:end="1455:13"><literal type="number" pos:start="1455:10" pos:end="1455:13">0x16</literal></expr>:</case>

        <comment type="block" pos:start="1457:9" pos:end="1457:33">/* IEEE floating-point */</comment>

        <switch pos:start="1459:9" pos:end="1611:9">switch <condition pos:start="1459:16" pos:end="1459:21">(<expr pos:start="1459:17" pos:end="1459:20"><name pos:start="1459:17" pos:end="1459:20">fpfn</name></expr>)</condition> <block pos:start="1459:23" pos:end="1611:9">{<block_content pos:start="1461:9" pos:end="1609:29"> <comment type="block" pos:start="1459:25" pos:end="1459:41">/* fn11 &amp; 0x3F */</comment>

        <case pos:start="1461:9" pos:end="1461:18">case <expr pos:start="1461:14" pos:end="1461:17"><literal type="number" pos:start="1461:14" pos:end="1461:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1463:13" pos:end="1463:22">/* ADDS */</comment>

            <expr_stmt pos:start="1465:13" pos:end="1465:44"><expr pos:start="1465:13" pos:end="1465:43"><call pos:start="1465:13" pos:end="1465:43"><name pos:start="1465:13" pos:end="1465:20">gen_adds</name><argument_list pos:start="1465:21" pos:end="1465:43">(<argument pos:start="1465:22" pos:end="1465:24"><expr pos:start="1465:22" pos:end="1465:24"><name pos:start="1465:22" pos:end="1465:24">ctx</name></expr></argument>, <argument pos:start="1465:27" pos:end="1465:28"><expr pos:start="1465:27" pos:end="1465:28"><name pos:start="1465:27" pos:end="1465:28">ra</name></expr></argument>, <argument pos:start="1465:31" pos:end="1465:32"><expr pos:start="1465:31" pos:end="1465:32"><name pos:start="1465:31" pos:end="1465:32">rb</name></expr></argument>, <argument pos:start="1465:35" pos:end="1465:36"><expr pos:start="1465:35" pos:end="1465:36"><name pos:start="1465:35" pos:end="1465:36">rc</name></expr></argument>, <argument pos:start="1465:39" pos:end="1465:42"><expr pos:start="1465:39" pos:end="1465:42"><name pos:start="1465:39" pos:end="1465:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1467:13" pos:end="1467:18">break;</break>

        <case pos:start="1469:9" pos:end="1469:18">case <expr pos:start="1469:14" pos:end="1469:17"><literal type="number" pos:start="1469:14" pos:end="1469:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="1471:13" pos:end="1471:22">/* SUBS */</comment>

            <expr_stmt pos:start="1473:13" pos:end="1473:44"><expr pos:start="1473:13" pos:end="1473:43"><call pos:start="1473:13" pos:end="1473:43"><name pos:start="1473:13" pos:end="1473:20">gen_subs</name><argument_list pos:start="1473:21" pos:end="1473:43">(<argument pos:start="1473:22" pos:end="1473:24"><expr pos:start="1473:22" pos:end="1473:24"><name pos:start="1473:22" pos:end="1473:24">ctx</name></expr></argument>, <argument pos:start="1473:27" pos:end="1473:28"><expr pos:start="1473:27" pos:end="1473:28"><name pos:start="1473:27" pos:end="1473:28">ra</name></expr></argument>, <argument pos:start="1473:31" pos:end="1473:32"><expr pos:start="1473:31" pos:end="1473:32"><name pos:start="1473:31" pos:end="1473:32">rb</name></expr></argument>, <argument pos:start="1473:35" pos:end="1473:36"><expr pos:start="1473:35" pos:end="1473:36"><name pos:start="1473:35" pos:end="1473:36">rc</name></expr></argument>, <argument pos:start="1473:39" pos:end="1473:42"><expr pos:start="1473:39" pos:end="1473:42"><name pos:start="1473:39" pos:end="1473:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1475:13" pos:end="1475:18">break;</break>

        <case pos:start="1477:9" pos:end="1477:18">case <expr pos:start="1477:14" pos:end="1477:17"><literal type="number" pos:start="1477:14" pos:end="1477:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1479:13" pos:end="1479:22">/* MULS */</comment>

            <expr_stmt pos:start="1481:13" pos:end="1481:44"><expr pos:start="1481:13" pos:end="1481:43"><call pos:start="1481:13" pos:end="1481:43"><name pos:start="1481:13" pos:end="1481:20">gen_muls</name><argument_list pos:start="1481:21" pos:end="1481:43">(<argument pos:start="1481:22" pos:end="1481:24"><expr pos:start="1481:22" pos:end="1481:24"><name pos:start="1481:22" pos:end="1481:24">ctx</name></expr></argument>, <argument pos:start="1481:27" pos:end="1481:28"><expr pos:start="1481:27" pos:end="1481:28"><name pos:start="1481:27" pos:end="1481:28">ra</name></expr></argument>, <argument pos:start="1481:31" pos:end="1481:32"><expr pos:start="1481:31" pos:end="1481:32"><name pos:start="1481:31" pos:end="1481:32">rb</name></expr></argument>, <argument pos:start="1481:35" pos:end="1481:36"><expr pos:start="1481:35" pos:end="1481:36"><name pos:start="1481:35" pos:end="1481:36">rc</name></expr></argument>, <argument pos:start="1481:39" pos:end="1481:42"><expr pos:start="1481:39" pos:end="1481:42"><name pos:start="1481:39" pos:end="1481:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1483:13" pos:end="1483:18">break;</break>

        <case pos:start="1485:9" pos:end="1485:18">case <expr pos:start="1485:14" pos:end="1485:17"><literal type="number" pos:start="1485:14" pos:end="1485:17">0x03</literal></expr>:</case>

            <comment type="block" pos:start="1487:13" pos:end="1487:22">/* DIVS */</comment>

            <expr_stmt pos:start="1489:13" pos:end="1489:44"><expr pos:start="1489:13" pos:end="1489:43"><call pos:start="1489:13" pos:end="1489:43"><name pos:start="1489:13" pos:end="1489:20">gen_divs</name><argument_list pos:start="1489:21" pos:end="1489:43">(<argument pos:start="1489:22" pos:end="1489:24"><expr pos:start="1489:22" pos:end="1489:24"><name pos:start="1489:22" pos:end="1489:24">ctx</name></expr></argument>, <argument pos:start="1489:27" pos:end="1489:28"><expr pos:start="1489:27" pos:end="1489:28"><name pos:start="1489:27" pos:end="1489:28">ra</name></expr></argument>, <argument pos:start="1489:31" pos:end="1489:32"><expr pos:start="1489:31" pos:end="1489:32"><name pos:start="1489:31" pos:end="1489:32">rb</name></expr></argument>, <argument pos:start="1489:35" pos:end="1489:36"><expr pos:start="1489:35" pos:end="1489:36"><name pos:start="1489:35" pos:end="1489:36">rc</name></expr></argument>, <argument pos:start="1489:39" pos:end="1489:42"><expr pos:start="1489:39" pos:end="1489:42"><name pos:start="1489:39" pos:end="1489:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1491:13" pos:end="1491:18">break;</break>

        <case pos:start="1493:9" pos:end="1493:18">case <expr pos:start="1493:14" pos:end="1493:17"><literal type="number" pos:start="1493:14" pos:end="1493:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1495:13" pos:end="1495:22">/* ADDT */</comment>

            <expr_stmt pos:start="1497:13" pos:end="1497:44"><expr pos:start="1497:13" pos:end="1497:43"><call pos:start="1497:13" pos:end="1497:43"><name pos:start="1497:13" pos:end="1497:20">gen_addt</name><argument_list pos:start="1497:21" pos:end="1497:43">(<argument pos:start="1497:22" pos:end="1497:24"><expr pos:start="1497:22" pos:end="1497:24"><name pos:start="1497:22" pos:end="1497:24">ctx</name></expr></argument>, <argument pos:start="1497:27" pos:end="1497:28"><expr pos:start="1497:27" pos:end="1497:28"><name pos:start="1497:27" pos:end="1497:28">ra</name></expr></argument>, <argument pos:start="1497:31" pos:end="1497:32"><expr pos:start="1497:31" pos:end="1497:32"><name pos:start="1497:31" pos:end="1497:32">rb</name></expr></argument>, <argument pos:start="1497:35" pos:end="1497:36"><expr pos:start="1497:35" pos:end="1497:36"><name pos:start="1497:35" pos:end="1497:36">rc</name></expr></argument>, <argument pos:start="1497:39" pos:end="1497:42"><expr pos:start="1497:39" pos:end="1497:42"><name pos:start="1497:39" pos:end="1497:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1499:13" pos:end="1499:18">break;</break>

        <case pos:start="1501:9" pos:end="1501:18">case <expr pos:start="1501:14" pos:end="1501:17"><literal type="number" pos:start="1501:14" pos:end="1501:17">0x21</literal></expr>:</case>

            <comment type="block" pos:start="1503:13" pos:end="1503:22">/* SUBT */</comment>

            <expr_stmt pos:start="1505:13" pos:end="1505:44"><expr pos:start="1505:13" pos:end="1505:43"><call pos:start="1505:13" pos:end="1505:43"><name pos:start="1505:13" pos:end="1505:20">gen_subt</name><argument_list pos:start="1505:21" pos:end="1505:43">(<argument pos:start="1505:22" pos:end="1505:24"><expr pos:start="1505:22" pos:end="1505:24"><name pos:start="1505:22" pos:end="1505:24">ctx</name></expr></argument>, <argument pos:start="1505:27" pos:end="1505:28"><expr pos:start="1505:27" pos:end="1505:28"><name pos:start="1505:27" pos:end="1505:28">ra</name></expr></argument>, <argument pos:start="1505:31" pos:end="1505:32"><expr pos:start="1505:31" pos:end="1505:32"><name pos:start="1505:31" pos:end="1505:32">rb</name></expr></argument>, <argument pos:start="1505:35" pos:end="1505:36"><expr pos:start="1505:35" pos:end="1505:36"><name pos:start="1505:35" pos:end="1505:36">rc</name></expr></argument>, <argument pos:start="1505:39" pos:end="1505:42"><expr pos:start="1505:39" pos:end="1505:42"><name pos:start="1505:39" pos:end="1505:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1507:13" pos:end="1507:18">break;</break>

        <case pos:start="1509:9" pos:end="1509:18">case <expr pos:start="1509:14" pos:end="1509:17"><literal type="number" pos:start="1509:14" pos:end="1509:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1511:13" pos:end="1511:22">/* MULT */</comment>

            <expr_stmt pos:start="1513:13" pos:end="1513:44"><expr pos:start="1513:13" pos:end="1513:43"><call pos:start="1513:13" pos:end="1513:43"><name pos:start="1513:13" pos:end="1513:20">gen_mult</name><argument_list pos:start="1513:21" pos:end="1513:43">(<argument pos:start="1513:22" pos:end="1513:24"><expr pos:start="1513:22" pos:end="1513:24"><name pos:start="1513:22" pos:end="1513:24">ctx</name></expr></argument>, <argument pos:start="1513:27" pos:end="1513:28"><expr pos:start="1513:27" pos:end="1513:28"><name pos:start="1513:27" pos:end="1513:28">ra</name></expr></argument>, <argument pos:start="1513:31" pos:end="1513:32"><expr pos:start="1513:31" pos:end="1513:32"><name pos:start="1513:31" pos:end="1513:32">rb</name></expr></argument>, <argument pos:start="1513:35" pos:end="1513:36"><expr pos:start="1513:35" pos:end="1513:36"><name pos:start="1513:35" pos:end="1513:36">rc</name></expr></argument>, <argument pos:start="1513:39" pos:end="1513:42"><expr pos:start="1513:39" pos:end="1513:42"><name pos:start="1513:39" pos:end="1513:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1515:13" pos:end="1515:18">break;</break>

        <case pos:start="1517:9" pos:end="1517:18">case <expr pos:start="1517:14" pos:end="1517:17"><literal type="number" pos:start="1517:14" pos:end="1517:17">0x23</literal></expr>:</case>

            <comment type="block" pos:start="1519:13" pos:end="1519:22">/* DIVT */</comment>

            <expr_stmt pos:start="1521:13" pos:end="1521:44"><expr pos:start="1521:13" pos:end="1521:43"><call pos:start="1521:13" pos:end="1521:43"><name pos:start="1521:13" pos:end="1521:20">gen_divt</name><argument_list pos:start="1521:21" pos:end="1521:43">(<argument pos:start="1521:22" pos:end="1521:24"><expr pos:start="1521:22" pos:end="1521:24"><name pos:start="1521:22" pos:end="1521:24">ctx</name></expr></argument>, <argument pos:start="1521:27" pos:end="1521:28"><expr pos:start="1521:27" pos:end="1521:28"><name pos:start="1521:27" pos:end="1521:28">ra</name></expr></argument>, <argument pos:start="1521:31" pos:end="1521:32"><expr pos:start="1521:31" pos:end="1521:32"><name pos:start="1521:31" pos:end="1521:32">rb</name></expr></argument>, <argument pos:start="1521:35" pos:end="1521:36"><expr pos:start="1521:35" pos:end="1521:36"><name pos:start="1521:35" pos:end="1521:36">rc</name></expr></argument>, <argument pos:start="1521:39" pos:end="1521:42"><expr pos:start="1521:39" pos:end="1521:42"><name pos:start="1521:39" pos:end="1521:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1523:13" pos:end="1523:18">break;</break>

        <case pos:start="1525:9" pos:end="1525:18">case <expr pos:start="1525:14" pos:end="1525:17"><literal type="number" pos:start="1525:14" pos:end="1525:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="1527:13" pos:end="1527:24">/* CMPTUN */</comment>

            <expr_stmt pos:start="1529:13" pos:end="1529:46"><expr pos:start="1529:13" pos:end="1529:45"><call pos:start="1529:13" pos:end="1529:45"><name pos:start="1529:13" pos:end="1529:22">gen_cmptun</name><argument_list pos:start="1529:23" pos:end="1529:45">(<argument pos:start="1529:24" pos:end="1529:26"><expr pos:start="1529:24" pos:end="1529:26"><name pos:start="1529:24" pos:end="1529:26">ctx</name></expr></argument>, <argument pos:start="1529:29" pos:end="1529:30"><expr pos:start="1529:29" pos:end="1529:30"><name pos:start="1529:29" pos:end="1529:30">ra</name></expr></argument>, <argument pos:start="1529:33" pos:end="1529:34"><expr pos:start="1529:33" pos:end="1529:34"><name pos:start="1529:33" pos:end="1529:34">rb</name></expr></argument>, <argument pos:start="1529:37" pos:end="1529:38"><expr pos:start="1529:37" pos:end="1529:38"><name pos:start="1529:37" pos:end="1529:38">rc</name></expr></argument>, <argument pos:start="1529:41" pos:end="1529:44"><expr pos:start="1529:41" pos:end="1529:44"><name pos:start="1529:41" pos:end="1529:44">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1531:13" pos:end="1531:18">break;</break>

        <case pos:start="1533:9" pos:end="1533:18">case <expr pos:start="1533:14" pos:end="1533:17"><literal type="number" pos:start="1533:14" pos:end="1533:17">0x25</literal></expr>:</case>

            <comment type="block" pos:start="1535:13" pos:end="1535:24">/* CMPTEQ */</comment>

            <expr_stmt pos:start="1537:13" pos:end="1537:46"><expr pos:start="1537:13" pos:end="1537:45"><call pos:start="1537:13" pos:end="1537:45"><name pos:start="1537:13" pos:end="1537:22">gen_cmpteq</name><argument_list pos:start="1537:23" pos:end="1537:45">(<argument pos:start="1537:24" pos:end="1537:26"><expr pos:start="1537:24" pos:end="1537:26"><name pos:start="1537:24" pos:end="1537:26">ctx</name></expr></argument>, <argument pos:start="1537:29" pos:end="1537:30"><expr pos:start="1537:29" pos:end="1537:30"><name pos:start="1537:29" pos:end="1537:30">ra</name></expr></argument>, <argument pos:start="1537:33" pos:end="1537:34"><expr pos:start="1537:33" pos:end="1537:34"><name pos:start="1537:33" pos:end="1537:34">rb</name></expr></argument>, <argument pos:start="1537:37" pos:end="1537:38"><expr pos:start="1537:37" pos:end="1537:38"><name pos:start="1537:37" pos:end="1537:38">rc</name></expr></argument>, <argument pos:start="1537:41" pos:end="1537:44"><expr pos:start="1537:41" pos:end="1537:44"><name pos:start="1537:41" pos:end="1537:44">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1539:13" pos:end="1539:18">break;</break>

        <case pos:start="1541:9" pos:end="1541:18">case <expr pos:start="1541:14" pos:end="1541:17"><literal type="number" pos:start="1541:14" pos:end="1541:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1543:13" pos:end="1543:24">/* CMPTLT */</comment>

            <expr_stmt pos:start="1545:13" pos:end="1545:46"><expr pos:start="1545:13" pos:end="1545:45"><call pos:start="1545:13" pos:end="1545:45"><name pos:start="1545:13" pos:end="1545:22">gen_cmptlt</name><argument_list pos:start="1545:23" pos:end="1545:45">(<argument pos:start="1545:24" pos:end="1545:26"><expr pos:start="1545:24" pos:end="1545:26"><name pos:start="1545:24" pos:end="1545:26">ctx</name></expr></argument>, <argument pos:start="1545:29" pos:end="1545:30"><expr pos:start="1545:29" pos:end="1545:30"><name pos:start="1545:29" pos:end="1545:30">ra</name></expr></argument>, <argument pos:start="1545:33" pos:end="1545:34"><expr pos:start="1545:33" pos:end="1545:34"><name pos:start="1545:33" pos:end="1545:34">rb</name></expr></argument>, <argument pos:start="1545:37" pos:end="1545:38"><expr pos:start="1545:37" pos:end="1545:38"><name pos:start="1545:37" pos:end="1545:38">rc</name></expr></argument>, <argument pos:start="1545:41" pos:end="1545:44"><expr pos:start="1545:41" pos:end="1545:44"><name pos:start="1545:41" pos:end="1545:44">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1547:13" pos:end="1547:18">break;</break>

        <case pos:start="1549:9" pos:end="1549:18">case <expr pos:start="1549:14" pos:end="1549:17"><literal type="number" pos:start="1549:14" pos:end="1549:17">0x27</literal></expr>:</case>

            <comment type="block" pos:start="1551:13" pos:end="1551:24">/* CMPTLE */</comment>

            <expr_stmt pos:start="1553:13" pos:end="1553:46"><expr pos:start="1553:13" pos:end="1553:45"><call pos:start="1553:13" pos:end="1553:45"><name pos:start="1553:13" pos:end="1553:22">gen_cmptle</name><argument_list pos:start="1553:23" pos:end="1553:45">(<argument pos:start="1553:24" pos:end="1553:26"><expr pos:start="1553:24" pos:end="1553:26"><name pos:start="1553:24" pos:end="1553:26">ctx</name></expr></argument>, <argument pos:start="1553:29" pos:end="1553:30"><expr pos:start="1553:29" pos:end="1553:30"><name pos:start="1553:29" pos:end="1553:30">ra</name></expr></argument>, <argument pos:start="1553:33" pos:end="1553:34"><expr pos:start="1553:33" pos:end="1553:34"><name pos:start="1553:33" pos:end="1553:34">rb</name></expr></argument>, <argument pos:start="1553:37" pos:end="1553:38"><expr pos:start="1553:37" pos:end="1553:38"><name pos:start="1553:37" pos:end="1553:38">rc</name></expr></argument>, <argument pos:start="1553:41" pos:end="1553:44"><expr pos:start="1553:41" pos:end="1553:44"><name pos:start="1553:41" pos:end="1553:44">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1555:13" pos:end="1555:18">break;</break>

        <case pos:start="1557:9" pos:end="1557:18">case <expr pos:start="1557:14" pos:end="1557:17"><literal type="number" pos:start="1557:14" pos:end="1557:17">0x2C</literal></expr>:</case>

            <expr_stmt pos:start="1559:13" pos:end="1559:31"><expr pos:start="1559:13" pos:end="1559:30"><call pos:start="1559:13" pos:end="1559:30"><name pos:start="1559:13" pos:end="1559:26">REQUIRE_REG_31</name><argument_list pos:start="1559:27" pos:end="1559:30">(<argument pos:start="1559:28" pos:end="1559:29"><expr pos:start="1559:28" pos:end="1559:29"><name pos:start="1559:28" pos:end="1559:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1561:13" pos:end="1573:13"><if pos:start="1561:13" pos:end="1567:13">if <condition pos:start="1561:16" pos:end="1561:47">(<expr pos:start="1561:17" pos:end="1561:46"><name pos:start="1561:17" pos:end="1561:20">fn11</name> <operator pos:start="1561:22" pos:end="1561:23">==</operator> <literal type="number" pos:start="1561:25" pos:end="1561:29">0x2AC</literal> <operator pos:start="1561:31" pos:end="1561:32">||</operator> <name pos:start="1561:34" pos:end="1561:37">fn11</name> <operator pos:start="1561:39" pos:end="1561:40">==</operator> <literal type="number" pos:start="1561:42" pos:end="1561:46">0x6AC</literal></expr>)</condition> <block pos:start="1561:49" pos:end="1567:13">{<block_content pos:start="1565:17" pos:end="1565:45">

                <comment type="block" pos:start="1563:17" pos:end="1563:27">/* CVTST */</comment>

                <expr_stmt pos:start="1565:17" pos:end="1565:45"><expr pos:start="1565:17" pos:end="1565:44"><call pos:start="1565:17" pos:end="1565:44"><name pos:start="1565:17" pos:end="1565:25">gen_cvtst</name><argument_list pos:start="1565:26" pos:end="1565:44">(<argument pos:start="1565:27" pos:end="1565:29"><expr pos:start="1565:27" pos:end="1565:29"><name pos:start="1565:27" pos:end="1565:29">ctx</name></expr></argument>, <argument pos:start="1565:32" pos:end="1565:33"><expr pos:start="1565:32" pos:end="1565:33"><name pos:start="1565:32" pos:end="1565:33">rb</name></expr></argument>, <argument pos:start="1565:36" pos:end="1565:37"><expr pos:start="1565:36" pos:end="1565:37"><name pos:start="1565:36" pos:end="1565:37">rc</name></expr></argument>, <argument pos:start="1565:40" pos:end="1565:43"><expr pos:start="1565:40" pos:end="1565:43"><name pos:start="1565:40" pos:end="1565:43">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1567:15" pos:end="1573:13">else <block pos:start="1567:20" pos:end="1573:13">{<block_content pos:start="1571:17" pos:end="1571:45">

                <comment type="block" pos:start="1569:17" pos:end="1569:27">/* CVTTS */</comment>

                <expr_stmt pos:start="1571:17" pos:end="1571:45"><expr pos:start="1571:17" pos:end="1571:44"><call pos:start="1571:17" pos:end="1571:44"><name pos:start="1571:17" pos:end="1571:25">gen_cvtts</name><argument_list pos:start="1571:26" pos:end="1571:44">(<argument pos:start="1571:27" pos:end="1571:29"><expr pos:start="1571:27" pos:end="1571:29"><name pos:start="1571:27" pos:end="1571:29">ctx</name></expr></argument>, <argument pos:start="1571:32" pos:end="1571:33"><expr pos:start="1571:32" pos:end="1571:33"><name pos:start="1571:32" pos:end="1571:33">rb</name></expr></argument>, <argument pos:start="1571:36" pos:end="1571:37"><expr pos:start="1571:36" pos:end="1571:37"><name pos:start="1571:36" pos:end="1571:37">rc</name></expr></argument>, <argument pos:start="1571:40" pos:end="1571:43"><expr pos:start="1571:40" pos:end="1571:43"><name pos:start="1571:40" pos:end="1571:43">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1575:13" pos:end="1575:18">break;</break>

        <case pos:start="1577:9" pos:end="1577:18">case <expr pos:start="1577:14" pos:end="1577:17"><literal type="number" pos:start="1577:14" pos:end="1577:17">0x2F</literal></expr>:</case>

            <comment type="block" pos:start="1579:13" pos:end="1579:23">/* CVTTQ */</comment>

            <expr_stmt pos:start="1581:13" pos:end="1581:31"><expr pos:start="1581:13" pos:end="1581:30"><call pos:start="1581:13" pos:end="1581:30"><name pos:start="1581:13" pos:end="1581:26">REQUIRE_REG_31</name><argument_list pos:start="1581:27" pos:end="1581:30">(<argument pos:start="1581:28" pos:end="1581:29"><expr pos:start="1581:28" pos:end="1581:29"><name pos:start="1581:28" pos:end="1581:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1583:13" pos:end="1583:41"><expr pos:start="1583:13" pos:end="1583:40"><call pos:start="1583:13" pos:end="1583:40"><name pos:start="1583:13" pos:end="1583:21">gen_cvttq</name><argument_list pos:start="1583:22" pos:end="1583:40">(<argument pos:start="1583:23" pos:end="1583:25"><expr pos:start="1583:23" pos:end="1583:25"><name pos:start="1583:23" pos:end="1583:25">ctx</name></expr></argument>, <argument pos:start="1583:28" pos:end="1583:29"><expr pos:start="1583:28" pos:end="1583:29"><name pos:start="1583:28" pos:end="1583:29">rb</name></expr></argument>, <argument pos:start="1583:32" pos:end="1583:33"><expr pos:start="1583:32" pos:end="1583:33"><name pos:start="1583:32" pos:end="1583:33">rc</name></expr></argument>, <argument pos:start="1583:36" pos:end="1583:39"><expr pos:start="1583:36" pos:end="1583:39"><name pos:start="1583:36" pos:end="1583:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1585:13" pos:end="1585:18">break;</break>

        <case pos:start="1587:9" pos:end="1587:18">case <expr pos:start="1587:14" pos:end="1587:17"><literal type="number" pos:start="1587:14" pos:end="1587:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1589:13" pos:end="1589:23">/* CVTQS */</comment>

            <expr_stmt pos:start="1591:13" pos:end="1591:31"><expr pos:start="1591:13" pos:end="1591:30"><call pos:start="1591:13" pos:end="1591:30"><name pos:start="1591:13" pos:end="1591:26">REQUIRE_REG_31</name><argument_list pos:start="1591:27" pos:end="1591:30">(<argument pos:start="1591:28" pos:end="1591:29"><expr pos:start="1591:28" pos:end="1591:29"><name pos:start="1591:28" pos:end="1591:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1593:13" pos:end="1593:41"><expr pos:start="1593:13" pos:end="1593:40"><call pos:start="1593:13" pos:end="1593:40"><name pos:start="1593:13" pos:end="1593:21">gen_cvtqs</name><argument_list pos:start="1593:22" pos:end="1593:40">(<argument pos:start="1593:23" pos:end="1593:25"><expr pos:start="1593:23" pos:end="1593:25"><name pos:start="1593:23" pos:end="1593:25">ctx</name></expr></argument>, <argument pos:start="1593:28" pos:end="1593:29"><expr pos:start="1593:28" pos:end="1593:29"><name pos:start="1593:28" pos:end="1593:29">rb</name></expr></argument>, <argument pos:start="1593:32" pos:end="1593:33"><expr pos:start="1593:32" pos:end="1593:33"><name pos:start="1593:32" pos:end="1593:33">rc</name></expr></argument>, <argument pos:start="1593:36" pos:end="1593:39"><expr pos:start="1593:36" pos:end="1593:39"><name pos:start="1593:36" pos:end="1593:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1595:13" pos:end="1595:18">break;</break>

        <case pos:start="1597:9" pos:end="1597:18">case <expr pos:start="1597:14" pos:end="1597:17"><literal type="number" pos:start="1597:14" pos:end="1597:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="1599:13" pos:end="1599:23">/* CVTQT */</comment>

            <expr_stmt pos:start="1601:13" pos:end="1601:31"><expr pos:start="1601:13" pos:end="1601:30"><call pos:start="1601:13" pos:end="1601:30"><name pos:start="1601:13" pos:end="1601:26">REQUIRE_REG_31</name><argument_list pos:start="1601:27" pos:end="1601:30">(<argument pos:start="1601:28" pos:end="1601:29"><expr pos:start="1601:28" pos:end="1601:29"><name pos:start="1601:28" pos:end="1601:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1603:13" pos:end="1603:41"><expr pos:start="1603:13" pos:end="1603:40"><call pos:start="1603:13" pos:end="1603:40"><name pos:start="1603:13" pos:end="1603:21">gen_cvtqt</name><argument_list pos:start="1603:22" pos:end="1603:40">(<argument pos:start="1603:23" pos:end="1603:25"><expr pos:start="1603:23" pos:end="1603:25"><name pos:start="1603:23" pos:end="1603:25">ctx</name></expr></argument>, <argument pos:start="1603:28" pos:end="1603:29"><expr pos:start="1603:28" pos:end="1603:29"><name pos:start="1603:28" pos:end="1603:29">rb</name></expr></argument>, <argument pos:start="1603:32" pos:end="1603:33"><expr pos:start="1603:32" pos:end="1603:33"><name pos:start="1603:32" pos:end="1603:33">rc</name></expr></argument>, <argument pos:start="1603:36" pos:end="1603:39"><expr pos:start="1603:36" pos:end="1603:39"><name pos:start="1603:36" pos:end="1603:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1605:13" pos:end="1605:18">break;</break>

        <default pos:start="1607:9" pos:end="1607:16">default:</default>

            <goto pos:start="1609:13" pos:end="1609:29">goto <name pos:start="1609:18" pos:end="1609:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1613:9" pos:end="1613:14">break;</break>



    <case pos:start="1617:5" pos:end="1617:14">case <expr pos:start="1617:10" pos:end="1617:13"><literal type="number" pos:start="1617:10" pos:end="1617:13">0x17</literal></expr>:</case>

        <switch pos:start="1619:9" pos:end="1795:9">switch <condition pos:start="1619:16" pos:end="1619:21">(<expr pos:start="1619:17" pos:end="1619:20"><name pos:start="1619:17" pos:end="1619:20">fn11</name></expr>)</condition> <block pos:start="1619:23" pos:end="1795:9">{<block_content pos:start="1621:9" pos:end="1793:29">

        <case pos:start="1621:9" pos:end="1621:19">case <expr pos:start="1621:14" pos:end="1621:18"><literal type="number" pos:start="1621:14" pos:end="1621:18">0x010</literal></expr>:</case>

            <comment type="block" pos:start="1623:13" pos:end="1623:23">/* CVTLQ */</comment>

            <expr_stmt pos:start="1625:13" pos:end="1625:31"><expr pos:start="1625:13" pos:end="1625:30"><call pos:start="1625:13" pos:end="1625:30"><name pos:start="1625:13" pos:end="1625:26">REQUIRE_REG_31</name><argument_list pos:start="1625:27" pos:end="1625:30">(<argument pos:start="1625:28" pos:end="1625:29"><expr pos:start="1625:28" pos:end="1625:29"><name pos:start="1625:28" pos:end="1625:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1627:13" pos:end="1627:35"><expr pos:start="1627:13" pos:end="1627:34"><name pos:start="1627:13" pos:end="1627:14">vc</name> <operator pos:start="1627:16" pos:end="1627:16">=</operator> <call pos:start="1627:18" pos:end="1627:34"><name pos:start="1627:18" pos:end="1627:25">dest_fpr</name><argument_list pos:start="1627:26" pos:end="1627:34">(<argument pos:start="1627:27" pos:end="1627:29"><expr pos:start="1627:27" pos:end="1627:29"><name pos:start="1627:27" pos:end="1627:29">ctx</name></expr></argument>, <argument pos:start="1627:32" pos:end="1627:33"><expr pos:start="1627:32" pos:end="1627:33"><name pos:start="1627:32" pos:end="1627:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1629:13" pos:end="1629:35"><expr pos:start="1629:13" pos:end="1629:34"><name pos:start="1629:13" pos:end="1629:14">vb</name> <operator pos:start="1629:16" pos:end="1629:16">=</operator> <call pos:start="1629:18" pos:end="1629:34"><name pos:start="1629:18" pos:end="1629:25">load_fpr</name><argument_list pos:start="1629:26" pos:end="1629:34">(<argument pos:start="1629:27" pos:end="1629:29"><expr pos:start="1629:27" pos:end="1629:29"><name pos:start="1629:27" pos:end="1629:29">ctx</name></expr></argument>, <argument pos:start="1629:32" pos:end="1629:33"><expr pos:start="1629:32" pos:end="1629:33"><name pos:start="1629:32" pos:end="1629:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1631:13" pos:end="1631:30"><expr pos:start="1631:13" pos:end="1631:29"><call pos:start="1631:13" pos:end="1631:29"><name pos:start="1631:13" pos:end="1631:21">gen_cvtlq</name><argument_list pos:start="1631:22" pos:end="1631:29">(<argument pos:start="1631:23" pos:end="1631:24"><expr pos:start="1631:23" pos:end="1631:24"><name pos:start="1631:23" pos:end="1631:24">vc</name></expr></argument>, <argument pos:start="1631:27" pos:end="1631:28"><expr pos:start="1631:27" pos:end="1631:28"><name pos:start="1631:27" pos:end="1631:28">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1633:13" pos:end="1633:18">break;</break>

        <case pos:start="1635:9" pos:end="1635:19">case <expr pos:start="1635:14" pos:end="1635:18"><literal type="number" pos:start="1635:14" pos:end="1635:18">0x020</literal></expr>:</case>

            <comment type="block" pos:start="1637:13" pos:end="1637:22">/* CPYS */</comment>

            <if_stmt pos:start="1639:13" pos:end="1663:13"><if pos:start="1639:13" pos:end="1643:13">if <condition pos:start="1639:16" pos:end="1639:25">(<expr pos:start="1639:17" pos:end="1639:24"><name pos:start="1639:17" pos:end="1639:18">rc</name> <operator pos:start="1639:20" pos:end="1639:21">==</operator> <literal type="number" pos:start="1639:23" pos:end="1639:24">31</literal></expr>)</condition> <block pos:start="1639:27" pos:end="1643:13">{<block_content>

                <comment type="block" pos:start="1641:17" pos:end="1641:49">/* Special case CPYS as FNOP.  */</comment>

            </block_content>}</block></if> <else pos:start="1643:15" pos:end="1663:13">else <block pos:start="1643:20" pos:end="1663:13">{<block_content pos:start="1645:17" pos:end="1661:17">

                <expr_stmt pos:start="1645:17" pos:end="1645:39"><expr pos:start="1645:17" pos:end="1645:38"><name pos:start="1645:17" pos:end="1645:18">vc</name> <operator pos:start="1645:20" pos:end="1645:20">=</operator> <call pos:start="1645:22" pos:end="1645:38"><name pos:start="1645:22" pos:end="1645:29">dest_fpr</name><argument_list pos:start="1645:30" pos:end="1645:38">(<argument pos:start="1645:31" pos:end="1645:33"><expr pos:start="1645:31" pos:end="1645:33"><name pos:start="1645:31" pos:end="1645:33">ctx</name></expr></argument>, <argument pos:start="1645:36" pos:end="1645:37"><expr pos:start="1645:36" pos:end="1645:37"><name pos:start="1645:36" pos:end="1645:37">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1647:17" pos:end="1647:39"><expr pos:start="1647:17" pos:end="1647:38"><name pos:start="1647:17" pos:end="1647:18">va</name> <operator pos:start="1647:20" pos:end="1647:20">=</operator> <call pos:start="1647:22" pos:end="1647:38"><name pos:start="1647:22" pos:end="1647:29">load_fpr</name><argument_list pos:start="1647:30" pos:end="1647:38">(<argument pos:start="1647:31" pos:end="1647:33"><expr pos:start="1647:31" pos:end="1647:33"><name pos:start="1647:31" pos:end="1647:33">ctx</name></expr></argument>, <argument pos:start="1647:36" pos:end="1647:37"><expr pos:start="1647:36" pos:end="1647:37"><name pos:start="1647:36" pos:end="1647:37">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1649:17" pos:end="1661:17"><if pos:start="1649:17" pos:end="1655:17">if <condition pos:start="1649:20" pos:end="1649:29">(<expr pos:start="1649:21" pos:end="1649:28"><name pos:start="1649:21" pos:end="1649:22">ra</name> <operator pos:start="1649:24" pos:end="1649:25">==</operator> <name pos:start="1649:27" pos:end="1649:28">rb</name></expr>)</condition> <block pos:start="1649:31" pos:end="1655:17">{<block_content pos:start="1653:21" pos:end="1653:44">

                    <comment type="block" pos:start="1651:21" pos:end="1651:53">/* Special case CPYS as FMOV.  */</comment>

                    <expr_stmt pos:start="1653:21" pos:end="1653:44"><expr pos:start="1653:21" pos:end="1653:43"><call pos:start="1653:21" pos:end="1653:43"><name pos:start="1653:21" pos:end="1653:35">tcg_gen_mov_i64</name><argument_list pos:start="1653:36" pos:end="1653:43">(<argument pos:start="1653:37" pos:end="1653:38"><expr pos:start="1653:37" pos:end="1653:38"><name pos:start="1653:37" pos:end="1653:38">vc</name></expr></argument>, <argument pos:start="1653:41" pos:end="1653:42"><expr pos:start="1653:41" pos:end="1653:42"><name pos:start="1653:41" pos:end="1653:42">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1655:19" pos:end="1661:17">else <block pos:start="1655:24" pos:end="1661:17">{<block_content pos:start="1657:21" pos:end="1659:71">

                    <expr_stmt pos:start="1657:21" pos:end="1657:43"><expr pos:start="1657:21" pos:end="1657:42"><name pos:start="1657:21" pos:end="1657:22">vb</name> <operator pos:start="1657:24" pos:end="1657:24">=</operator> <call pos:start="1657:26" pos:end="1657:42"><name pos:start="1657:26" pos:end="1657:33">load_fpr</name><argument_list pos:start="1657:34" pos:end="1657:42">(<argument pos:start="1657:35" pos:end="1657:37"><expr pos:start="1657:35" pos:end="1657:37"><name pos:start="1657:35" pos:end="1657:37">ctx</name></expr></argument>, <argument pos:start="1657:40" pos:end="1657:41"><expr pos:start="1657:40" pos:end="1657:41"><name pos:start="1657:40" pos:end="1657:41">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1659:21" pos:end="1659:71"><expr pos:start="1659:21" pos:end="1659:70"><call pos:start="1659:21" pos:end="1659:70"><name pos:start="1659:21" pos:end="1659:32">gen_cpy_mask</name><argument_list pos:start="1659:33" pos:end="1659:70">(<argument pos:start="1659:34" pos:end="1659:35"><expr pos:start="1659:34" pos:end="1659:35"><name pos:start="1659:34" pos:end="1659:35">vc</name></expr></argument>, <argument pos:start="1659:38" pos:end="1659:39"><expr pos:start="1659:38" pos:end="1659:39"><name pos:start="1659:38" pos:end="1659:39">va</name></expr></argument>, <argument pos:start="1659:42" pos:end="1659:43"><expr pos:start="1659:42" pos:end="1659:43"><name pos:start="1659:42" pos:end="1659:43">vb</name></expr></argument>, <argument pos:start="1659:46" pos:end="1659:46"><expr pos:start="1659:46" pos:end="1659:46"><literal type="number" pos:start="1659:46" pos:end="1659:46">0</literal></expr></argument>, <argument pos:start="1659:49" pos:end="1659:69"><expr pos:start="1659:49" pos:end="1659:69"><literal type="number" pos:start="1659:49" pos:end="1659:69">0x8000000000000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1665:13" pos:end="1665:18">break;</break>

        <case pos:start="1667:9" pos:end="1667:19">case <expr pos:start="1667:14" pos:end="1667:18"><literal type="number" pos:start="1667:14" pos:end="1667:18">0x021</literal></expr>:</case>

            <comment type="block" pos:start="1669:13" pos:end="1669:23">/* CPYSN */</comment>

            <expr_stmt pos:start="1671:13" pos:end="1671:35"><expr pos:start="1671:13" pos:end="1671:34"><name pos:start="1671:13" pos:end="1671:14">vc</name> <operator pos:start="1671:16" pos:end="1671:16">=</operator> <call pos:start="1671:18" pos:end="1671:34"><name pos:start="1671:18" pos:end="1671:25">dest_fpr</name><argument_list pos:start="1671:26" pos:end="1671:34">(<argument pos:start="1671:27" pos:end="1671:29"><expr pos:start="1671:27" pos:end="1671:29"><name pos:start="1671:27" pos:end="1671:29">ctx</name></expr></argument>, <argument pos:start="1671:32" pos:end="1671:33"><expr pos:start="1671:32" pos:end="1671:33"><name pos:start="1671:32" pos:end="1671:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1673:13" pos:end="1673:35"><expr pos:start="1673:13" pos:end="1673:34"><name pos:start="1673:13" pos:end="1673:14">vb</name> <operator pos:start="1673:16" pos:end="1673:16">=</operator> <call pos:start="1673:18" pos:end="1673:34"><name pos:start="1673:18" pos:end="1673:25">load_fpr</name><argument_list pos:start="1673:26" pos:end="1673:34">(<argument pos:start="1673:27" pos:end="1673:29"><expr pos:start="1673:27" pos:end="1673:29"><name pos:start="1673:27" pos:end="1673:29">ctx</name></expr></argument>, <argument pos:start="1673:32" pos:end="1673:33"><expr pos:start="1673:32" pos:end="1673:33"><name pos:start="1673:32" pos:end="1673:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1675:13" pos:end="1675:35"><expr pos:start="1675:13" pos:end="1675:34"><name pos:start="1675:13" pos:end="1675:14">va</name> <operator pos:start="1675:16" pos:end="1675:16">=</operator> <call pos:start="1675:18" pos:end="1675:34"><name pos:start="1675:18" pos:end="1675:25">load_fpr</name><argument_list pos:start="1675:26" pos:end="1675:34">(<argument pos:start="1675:27" pos:end="1675:29"><expr pos:start="1675:27" pos:end="1675:29"><name pos:start="1675:27" pos:end="1675:29">ctx</name></expr></argument>, <argument pos:start="1675:32" pos:end="1675:33"><expr pos:start="1675:32" pos:end="1675:33"><name pos:start="1675:32" pos:end="1675:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1677:13" pos:end="1677:63"><expr pos:start="1677:13" pos:end="1677:62"><call pos:start="1677:13" pos:end="1677:62"><name pos:start="1677:13" pos:end="1677:24">gen_cpy_mask</name><argument_list pos:start="1677:25" pos:end="1677:62">(<argument pos:start="1677:26" pos:end="1677:27"><expr pos:start="1677:26" pos:end="1677:27"><name pos:start="1677:26" pos:end="1677:27">vc</name></expr></argument>, <argument pos:start="1677:30" pos:end="1677:31"><expr pos:start="1677:30" pos:end="1677:31"><name pos:start="1677:30" pos:end="1677:31">va</name></expr></argument>, <argument pos:start="1677:34" pos:end="1677:35"><expr pos:start="1677:34" pos:end="1677:35"><name pos:start="1677:34" pos:end="1677:35">vb</name></expr></argument>, <argument pos:start="1677:38" pos:end="1677:38"><expr pos:start="1677:38" pos:end="1677:38"><literal type="number" pos:start="1677:38" pos:end="1677:38">1</literal></expr></argument>, <argument pos:start="1677:41" pos:end="1677:61"><expr pos:start="1677:41" pos:end="1677:61"><literal type="number" pos:start="1677:41" pos:end="1677:61">0x8000000000000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1679:13" pos:end="1679:18">break;</break>

        <case pos:start="1681:9" pos:end="1681:19">case <expr pos:start="1681:14" pos:end="1681:18"><literal type="number" pos:start="1681:14" pos:end="1681:18">0x022</literal></expr>:</case>

            <comment type="block" pos:start="1683:13" pos:end="1683:23">/* CPYSE */</comment>

            <expr_stmt pos:start="1685:13" pos:end="1685:35"><expr pos:start="1685:13" pos:end="1685:34"><name pos:start="1685:13" pos:end="1685:14">vc</name> <operator pos:start="1685:16" pos:end="1685:16">=</operator> <call pos:start="1685:18" pos:end="1685:34"><name pos:start="1685:18" pos:end="1685:25">dest_fpr</name><argument_list pos:start="1685:26" pos:end="1685:34">(<argument pos:start="1685:27" pos:end="1685:29"><expr pos:start="1685:27" pos:end="1685:29"><name pos:start="1685:27" pos:end="1685:29">ctx</name></expr></argument>, <argument pos:start="1685:32" pos:end="1685:33"><expr pos:start="1685:32" pos:end="1685:33"><name pos:start="1685:32" pos:end="1685:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1687:13" pos:end="1687:35"><expr pos:start="1687:13" pos:end="1687:34"><name pos:start="1687:13" pos:end="1687:14">vb</name> <operator pos:start="1687:16" pos:end="1687:16">=</operator> <call pos:start="1687:18" pos:end="1687:34"><name pos:start="1687:18" pos:end="1687:25">load_fpr</name><argument_list pos:start="1687:26" pos:end="1687:34">(<argument pos:start="1687:27" pos:end="1687:29"><expr pos:start="1687:27" pos:end="1687:29"><name pos:start="1687:27" pos:end="1687:29">ctx</name></expr></argument>, <argument pos:start="1687:32" pos:end="1687:33"><expr pos:start="1687:32" pos:end="1687:33"><name pos:start="1687:32" pos:end="1687:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1689:13" pos:end="1689:35"><expr pos:start="1689:13" pos:end="1689:34"><name pos:start="1689:13" pos:end="1689:14">va</name> <operator pos:start="1689:16" pos:end="1689:16">=</operator> <call pos:start="1689:18" pos:end="1689:34"><name pos:start="1689:18" pos:end="1689:25">load_fpr</name><argument_list pos:start="1689:26" pos:end="1689:34">(<argument pos:start="1689:27" pos:end="1689:29"><expr pos:start="1689:27" pos:end="1689:29"><name pos:start="1689:27" pos:end="1689:29">ctx</name></expr></argument>, <argument pos:start="1689:32" pos:end="1689:33"><expr pos:start="1689:32" pos:end="1689:33"><name pos:start="1689:32" pos:end="1689:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1691:13" pos:end="1691:63"><expr pos:start="1691:13" pos:end="1691:62"><call pos:start="1691:13" pos:end="1691:62"><name pos:start="1691:13" pos:end="1691:24">gen_cpy_mask</name><argument_list pos:start="1691:25" pos:end="1691:62">(<argument pos:start="1691:26" pos:end="1691:27"><expr pos:start="1691:26" pos:end="1691:27"><name pos:start="1691:26" pos:end="1691:27">vc</name></expr></argument>, <argument pos:start="1691:30" pos:end="1691:31"><expr pos:start="1691:30" pos:end="1691:31"><name pos:start="1691:30" pos:end="1691:31">va</name></expr></argument>, <argument pos:start="1691:34" pos:end="1691:35"><expr pos:start="1691:34" pos:end="1691:35"><name pos:start="1691:34" pos:end="1691:35">vb</name></expr></argument>, <argument pos:start="1691:38" pos:end="1691:38"><expr pos:start="1691:38" pos:end="1691:38"><literal type="number" pos:start="1691:38" pos:end="1691:38">0</literal></expr></argument>, <argument pos:start="1691:41" pos:end="1691:61"><expr pos:start="1691:41" pos:end="1691:61"><literal type="number" pos:start="1691:41" pos:end="1691:61">0xFFF0000000000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1693:13" pos:end="1693:18">break;</break>

        <case pos:start="1695:9" pos:end="1695:19">case <expr pos:start="1695:14" pos:end="1695:18"><literal type="number" pos:start="1695:14" pos:end="1695:18">0x024</literal></expr>:</case>

            <comment type="block" pos:start="1697:13" pos:end="1697:25">/* MT_FPCR */</comment>

            <expr_stmt pos:start="1699:13" pos:end="1699:35"><expr pos:start="1699:13" pos:end="1699:34"><name pos:start="1699:13" pos:end="1699:14">va</name> <operator pos:start="1699:16" pos:end="1699:16">=</operator> <call pos:start="1699:18" pos:end="1699:34"><name pos:start="1699:18" pos:end="1699:25">load_fpr</name><argument_list pos:start="1699:26" pos:end="1699:34">(<argument pos:start="1699:27" pos:end="1699:29"><expr pos:start="1699:27" pos:end="1699:29"><name pos:start="1699:27" pos:end="1699:29">ctx</name></expr></argument>, <argument pos:start="1699:32" pos:end="1699:33"><expr pos:start="1699:32" pos:end="1699:33"><name pos:start="1699:32" pos:end="1699:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1701:13" pos:end="1701:47"><expr pos:start="1701:13" pos:end="1701:46"><call pos:start="1701:13" pos:end="1701:46"><name pos:start="1701:13" pos:end="1701:33">gen_helper_store_fpcr</name><argument_list pos:start="1701:34" pos:end="1701:46">(<argument pos:start="1701:35" pos:end="1701:41"><expr pos:start="1701:35" pos:end="1701:41"><name pos:start="1701:35" pos:end="1701:41">cpu_env</name></expr></argument>, <argument pos:start="1701:44" pos:end="1701:45"><expr pos:start="1701:44" pos:end="1701:45"><name pos:start="1701:44" pos:end="1701:45">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1703:13" pos:end="1711:13"><if pos:start="1703:13" pos:end="1711:13">if <condition pos:start="1703:16" pos:end="1703:40">(<expr pos:start="1703:17" pos:end="1703:39"><name pos:start="1703:17" pos:end="1703:26"><name pos:start="1703:17" pos:end="1703:19">ctx</name><operator pos:start="1703:20" pos:end="1703:21">-&gt;</operator><name pos:start="1703:22" pos:end="1703:26">tb_rm</name></name> <operator pos:start="1703:28" pos:end="1703:29">==</operator> <name pos:start="1703:31" pos:end="1703:39">QUAL_RM_D</name></expr>)</condition> <block pos:start="1703:42" pos:end="1711:13">{<block_content pos:start="1709:17" pos:end="1709:32">

                <comment type="block" pos:start="1705:17" pos:end="1707:61">/* Re-do the copy of the rounding mode to fp_status

                   the next time we use dynamic rounding.  */</comment>

                <expr_stmt pos:start="1709:17" pos:end="1709:32"><expr pos:start="1709:17" pos:end="1709:31"><name pos:start="1709:17" pos:end="1709:26"><name pos:start="1709:17" pos:end="1709:19">ctx</name><operator pos:start="1709:20" pos:end="1709:21">-&gt;</operator><name pos:start="1709:22" pos:end="1709:26">tb_rm</name></name> <operator pos:start="1709:28" pos:end="1709:28">=</operator> <operator pos:start="1709:30" pos:end="1709:30">-</operator><literal type="number" pos:start="1709:31" pos:end="1709:31">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1713:13" pos:end="1713:18">break;</break>

        <case pos:start="1715:9" pos:end="1715:19">case <expr pos:start="1715:14" pos:end="1715:18"><literal type="number" pos:start="1715:14" pos:end="1715:18">0x025</literal></expr>:</case>

            <comment type="block" pos:start="1717:13" pos:end="1717:25">/* MF_FPCR */</comment>

            <expr_stmt pos:start="1719:13" pos:end="1719:35"><expr pos:start="1719:13" pos:end="1719:34"><name pos:start="1719:13" pos:end="1719:14">va</name> <operator pos:start="1719:16" pos:end="1719:16">=</operator> <call pos:start="1719:18" pos:end="1719:34"><name pos:start="1719:18" pos:end="1719:25">dest_fpr</name><argument_list pos:start="1719:26" pos:end="1719:34">(<argument pos:start="1719:27" pos:end="1719:29"><expr pos:start="1719:27" pos:end="1719:29"><name pos:start="1719:27" pos:end="1719:29">ctx</name></expr></argument>, <argument pos:start="1719:32" pos:end="1719:33"><expr pos:start="1719:32" pos:end="1719:33"><name pos:start="1719:32" pos:end="1719:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1721:13" pos:end="1721:46"><expr pos:start="1721:13" pos:end="1721:45"><call pos:start="1721:13" pos:end="1721:45"><name pos:start="1721:13" pos:end="1721:32">gen_helper_load_fpcr</name><argument_list pos:start="1721:33" pos:end="1721:45">(<argument pos:start="1721:34" pos:end="1721:35"><expr pos:start="1721:34" pos:end="1721:35"><name pos:start="1721:34" pos:end="1721:35">va</name></expr></argument>, <argument pos:start="1721:38" pos:end="1721:44"><expr pos:start="1721:38" pos:end="1721:44"><name pos:start="1721:38" pos:end="1721:44">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1723:13" pos:end="1723:18">break;</break>

        <case pos:start="1725:9" pos:end="1725:19">case <expr pos:start="1725:14" pos:end="1725:18"><literal type="number" pos:start="1725:14" pos:end="1725:18">0x02A</literal></expr>:</case>

            <comment type="block" pos:start="1727:13" pos:end="1727:25">/* FCMOVEQ */</comment>

            <expr_stmt pos:start="1729:13" pos:end="1729:52"><expr pos:start="1729:13" pos:end="1729:51"><call pos:start="1729:13" pos:end="1729:51"><name pos:start="1729:13" pos:end="1729:21">gen_fcmov</name><argument_list pos:start="1729:22" pos:end="1729:51">(<argument pos:start="1729:23" pos:end="1729:25"><expr pos:start="1729:23" pos:end="1729:25"><name pos:start="1729:23" pos:end="1729:25">ctx</name></expr></argument>, <argument pos:start="1729:28" pos:end="1729:38"><expr pos:start="1729:28" pos:end="1729:38"><name pos:start="1729:28" pos:end="1729:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="1729:41" pos:end="1729:42"><expr pos:start="1729:41" pos:end="1729:42"><name pos:start="1729:41" pos:end="1729:42">ra</name></expr></argument>, <argument pos:start="1729:45" pos:end="1729:46"><expr pos:start="1729:45" pos:end="1729:46"><name pos:start="1729:45" pos:end="1729:46">rb</name></expr></argument>, <argument pos:start="1729:49" pos:end="1729:50"><expr pos:start="1729:49" pos:end="1729:50"><name pos:start="1729:49" pos:end="1729:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1731:13" pos:end="1731:18">break;</break>

        <case pos:start="1733:9" pos:end="1733:19">case <expr pos:start="1733:14" pos:end="1733:18"><literal type="number" pos:start="1733:14" pos:end="1733:18">0x02B</literal></expr>:</case>

            <comment type="block" pos:start="1735:13" pos:end="1735:25">/* FCMOVNE */</comment>

            <expr_stmt pos:start="1737:13" pos:end="1737:52"><expr pos:start="1737:13" pos:end="1737:51"><call pos:start="1737:13" pos:end="1737:51"><name pos:start="1737:13" pos:end="1737:21">gen_fcmov</name><argument_list pos:start="1737:22" pos:end="1737:51">(<argument pos:start="1737:23" pos:end="1737:25"><expr pos:start="1737:23" pos:end="1737:25"><name pos:start="1737:23" pos:end="1737:25">ctx</name></expr></argument>, <argument pos:start="1737:28" pos:end="1737:38"><expr pos:start="1737:28" pos:end="1737:38"><name pos:start="1737:28" pos:end="1737:38">TCG_COND_NE</name></expr></argument>, <argument pos:start="1737:41" pos:end="1737:42"><expr pos:start="1737:41" pos:end="1737:42"><name pos:start="1737:41" pos:end="1737:42">ra</name></expr></argument>, <argument pos:start="1737:45" pos:end="1737:46"><expr pos:start="1737:45" pos:end="1737:46"><name pos:start="1737:45" pos:end="1737:46">rb</name></expr></argument>, <argument pos:start="1737:49" pos:end="1737:50"><expr pos:start="1737:49" pos:end="1737:50"><name pos:start="1737:49" pos:end="1737:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1739:13" pos:end="1739:18">break;</break>

        <case pos:start="1741:9" pos:end="1741:19">case <expr pos:start="1741:14" pos:end="1741:18"><literal type="number" pos:start="1741:14" pos:end="1741:18">0x02C</literal></expr>:</case>

            <comment type="block" pos:start="1743:13" pos:end="1743:25">/* FCMOVLT */</comment>

            <expr_stmt pos:start="1745:13" pos:end="1745:52"><expr pos:start="1745:13" pos:end="1745:51"><call pos:start="1745:13" pos:end="1745:51"><name pos:start="1745:13" pos:end="1745:21">gen_fcmov</name><argument_list pos:start="1745:22" pos:end="1745:51">(<argument pos:start="1745:23" pos:end="1745:25"><expr pos:start="1745:23" pos:end="1745:25"><name pos:start="1745:23" pos:end="1745:25">ctx</name></expr></argument>, <argument pos:start="1745:28" pos:end="1745:38"><expr pos:start="1745:28" pos:end="1745:38"><name pos:start="1745:28" pos:end="1745:38">TCG_COND_LT</name></expr></argument>, <argument pos:start="1745:41" pos:end="1745:42"><expr pos:start="1745:41" pos:end="1745:42"><name pos:start="1745:41" pos:end="1745:42">ra</name></expr></argument>, <argument pos:start="1745:45" pos:end="1745:46"><expr pos:start="1745:45" pos:end="1745:46"><name pos:start="1745:45" pos:end="1745:46">rb</name></expr></argument>, <argument pos:start="1745:49" pos:end="1745:50"><expr pos:start="1745:49" pos:end="1745:50"><name pos:start="1745:49" pos:end="1745:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1747:13" pos:end="1747:18">break;</break>

        <case pos:start="1749:9" pos:end="1749:19">case <expr pos:start="1749:14" pos:end="1749:18"><literal type="number" pos:start="1749:14" pos:end="1749:18">0x02D</literal></expr>:</case>

            <comment type="block" pos:start="1751:13" pos:end="1751:25">/* FCMOVGE */</comment>

            <expr_stmt pos:start="1753:13" pos:end="1753:52"><expr pos:start="1753:13" pos:end="1753:51"><call pos:start="1753:13" pos:end="1753:51"><name pos:start="1753:13" pos:end="1753:21">gen_fcmov</name><argument_list pos:start="1753:22" pos:end="1753:51">(<argument pos:start="1753:23" pos:end="1753:25"><expr pos:start="1753:23" pos:end="1753:25"><name pos:start="1753:23" pos:end="1753:25">ctx</name></expr></argument>, <argument pos:start="1753:28" pos:end="1753:38"><expr pos:start="1753:28" pos:end="1753:38"><name pos:start="1753:28" pos:end="1753:38">TCG_COND_GE</name></expr></argument>, <argument pos:start="1753:41" pos:end="1753:42"><expr pos:start="1753:41" pos:end="1753:42"><name pos:start="1753:41" pos:end="1753:42">ra</name></expr></argument>, <argument pos:start="1753:45" pos:end="1753:46"><expr pos:start="1753:45" pos:end="1753:46"><name pos:start="1753:45" pos:end="1753:46">rb</name></expr></argument>, <argument pos:start="1753:49" pos:end="1753:50"><expr pos:start="1753:49" pos:end="1753:50"><name pos:start="1753:49" pos:end="1753:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1755:13" pos:end="1755:18">break;</break>

        <case pos:start="1757:9" pos:end="1757:19">case <expr pos:start="1757:14" pos:end="1757:18"><literal type="number" pos:start="1757:14" pos:end="1757:18">0x02E</literal></expr>:</case>

            <comment type="block" pos:start="1759:13" pos:end="1759:25">/* FCMOVLE */</comment>

            <expr_stmt pos:start="1761:13" pos:end="1761:52"><expr pos:start="1761:13" pos:end="1761:51"><call pos:start="1761:13" pos:end="1761:51"><name pos:start="1761:13" pos:end="1761:21">gen_fcmov</name><argument_list pos:start="1761:22" pos:end="1761:51">(<argument pos:start="1761:23" pos:end="1761:25"><expr pos:start="1761:23" pos:end="1761:25"><name pos:start="1761:23" pos:end="1761:25">ctx</name></expr></argument>, <argument pos:start="1761:28" pos:end="1761:38"><expr pos:start="1761:28" pos:end="1761:38"><name pos:start="1761:28" pos:end="1761:38">TCG_COND_LE</name></expr></argument>, <argument pos:start="1761:41" pos:end="1761:42"><expr pos:start="1761:41" pos:end="1761:42"><name pos:start="1761:41" pos:end="1761:42">ra</name></expr></argument>, <argument pos:start="1761:45" pos:end="1761:46"><expr pos:start="1761:45" pos:end="1761:46"><name pos:start="1761:45" pos:end="1761:46">rb</name></expr></argument>, <argument pos:start="1761:49" pos:end="1761:50"><expr pos:start="1761:49" pos:end="1761:50"><name pos:start="1761:49" pos:end="1761:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1763:13" pos:end="1763:18">break;</break>

        <case pos:start="1765:9" pos:end="1765:19">case <expr pos:start="1765:14" pos:end="1765:18"><literal type="number" pos:start="1765:14" pos:end="1765:18">0x02F</literal></expr>:</case>

            <comment type="block" pos:start="1767:13" pos:end="1767:25">/* FCMOVGT */</comment>

            <expr_stmt pos:start="1769:13" pos:end="1769:52"><expr pos:start="1769:13" pos:end="1769:51"><call pos:start="1769:13" pos:end="1769:51"><name pos:start="1769:13" pos:end="1769:21">gen_fcmov</name><argument_list pos:start="1769:22" pos:end="1769:51">(<argument pos:start="1769:23" pos:end="1769:25"><expr pos:start="1769:23" pos:end="1769:25"><name pos:start="1769:23" pos:end="1769:25">ctx</name></expr></argument>, <argument pos:start="1769:28" pos:end="1769:38"><expr pos:start="1769:28" pos:end="1769:38"><name pos:start="1769:28" pos:end="1769:38">TCG_COND_GT</name></expr></argument>, <argument pos:start="1769:41" pos:end="1769:42"><expr pos:start="1769:41" pos:end="1769:42"><name pos:start="1769:41" pos:end="1769:42">ra</name></expr></argument>, <argument pos:start="1769:45" pos:end="1769:46"><expr pos:start="1769:45" pos:end="1769:46"><name pos:start="1769:45" pos:end="1769:46">rb</name></expr></argument>, <argument pos:start="1769:49" pos:end="1769:50"><expr pos:start="1769:49" pos:end="1769:50"><name pos:start="1769:49" pos:end="1769:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1771:13" pos:end="1771:18">break;</break>

        <case pos:start="1773:9" pos:end="1773:19">case <expr pos:start="1773:14" pos:end="1773:18"><literal type="number" pos:start="1773:14" pos:end="1773:18">0x030</literal></expr>:</case> <comment type="block" pos:start="1773:21" pos:end="1773:31">/* CVTQL */</comment>

        <case pos:start="1775:9" pos:end="1775:19">case <expr pos:start="1775:14" pos:end="1775:18"><literal type="number" pos:start="1775:14" pos:end="1775:18">0x130</literal></expr>:</case> <comment type="block" pos:start="1775:21" pos:end="1775:33">/* CVTQL/V */</comment>

        <case pos:start="1777:9" pos:end="1777:19">case <expr pos:start="1777:14" pos:end="1777:18"><literal type="number" pos:start="1777:14" pos:end="1777:18">0x530</literal></expr>:</case> <comment type="block" pos:start="1777:21" pos:end="1777:34">/* CVTQL/SV */</comment>

            <expr_stmt pos:start="1779:13" pos:end="1779:31"><expr pos:start="1779:13" pos:end="1779:30"><call pos:start="1779:13" pos:end="1779:30"><name pos:start="1779:13" pos:end="1779:26">REQUIRE_REG_31</name><argument_list pos:start="1779:27" pos:end="1779:30">(<argument pos:start="1779:28" pos:end="1779:29"><expr pos:start="1779:28" pos:end="1779:29"><name pos:start="1779:28" pos:end="1779:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1781:13" pos:end="1781:35"><expr pos:start="1781:13" pos:end="1781:34"><name pos:start="1781:13" pos:end="1781:14">vc</name> <operator pos:start="1781:16" pos:end="1781:16">=</operator> <call pos:start="1781:18" pos:end="1781:34"><name pos:start="1781:18" pos:end="1781:25">dest_fpr</name><argument_list pos:start="1781:26" pos:end="1781:34">(<argument pos:start="1781:27" pos:end="1781:29"><expr pos:start="1781:27" pos:end="1781:29"><name pos:start="1781:27" pos:end="1781:29">ctx</name></expr></argument>, <argument pos:start="1781:32" pos:end="1781:33"><expr pos:start="1781:32" pos:end="1781:33"><name pos:start="1781:32" pos:end="1781:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1783:13" pos:end="1783:35"><expr pos:start="1783:13" pos:end="1783:34"><name pos:start="1783:13" pos:end="1783:14">vb</name> <operator pos:start="1783:16" pos:end="1783:16">=</operator> <call pos:start="1783:18" pos:end="1783:34"><name pos:start="1783:18" pos:end="1783:25">load_fpr</name><argument_list pos:start="1783:26" pos:end="1783:34">(<argument pos:start="1783:27" pos:end="1783:29"><expr pos:start="1783:27" pos:end="1783:29"><name pos:start="1783:27" pos:end="1783:29">ctx</name></expr></argument>, <argument pos:start="1783:32" pos:end="1783:33"><expr pos:start="1783:32" pos:end="1783:33"><name pos:start="1783:32" pos:end="1783:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1785:13" pos:end="1785:46"><expr pos:start="1785:13" pos:end="1785:45"><call pos:start="1785:13" pos:end="1785:45"><name pos:start="1785:13" pos:end="1785:28">gen_helper_cvtql</name><argument_list pos:start="1785:29" pos:end="1785:45">(<argument pos:start="1785:30" pos:end="1785:31"><expr pos:start="1785:30" pos:end="1785:31"><name pos:start="1785:30" pos:end="1785:31">vc</name></expr></argument>, <argument pos:start="1785:34" pos:end="1785:40"><expr pos:start="1785:34" pos:end="1785:40"><name pos:start="1785:34" pos:end="1785:40">cpu_env</name></expr></argument>, <argument pos:start="1785:43" pos:end="1785:44"><expr pos:start="1785:43" pos:end="1785:44"><name pos:start="1785:43" pos:end="1785:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1787:13" pos:end="1787:39"><expr pos:start="1787:13" pos:end="1787:38"><call pos:start="1787:13" pos:end="1787:38"><name pos:start="1787:13" pos:end="1787:28">gen_fp_exc_raise</name><argument_list pos:start="1787:29" pos:end="1787:38">(<argument pos:start="1787:30" pos:end="1787:31"><expr pos:start="1787:30" pos:end="1787:31"><name pos:start="1787:30" pos:end="1787:31">rc</name></expr></argument>, <argument pos:start="1787:34" pos:end="1787:37"><expr pos:start="1787:34" pos:end="1787:37"><name pos:start="1787:34" pos:end="1787:37">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1789:13" pos:end="1789:18">break;</break>

        <default pos:start="1791:9" pos:end="1791:16">default:</default>

            <goto pos:start="1793:13" pos:end="1793:29">goto <name pos:start="1793:18" pos:end="1793:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1797:9" pos:end="1797:14">break;</break>



    <case pos:start="1801:5" pos:end="1801:14">case <expr pos:start="1801:10" pos:end="1801:13"><literal type="number" pos:start="1801:10" pos:end="1801:13">0x18</literal></expr>:</case>

        <switch pos:start="1803:9" pos:end="1919:9">switch <condition pos:start="1803:16" pos:end="1803:33">(<expr pos:start="1803:17" pos:end="1803:32"><operator pos:start="1803:17" pos:end="1803:17">(</operator><name pos:start="1803:18" pos:end="1803:25">uint16_t</name><operator pos:start="1803:26" pos:end="1803:26">)</operator><name pos:start="1803:27" pos:end="1803:32">disp16</name></expr>)</condition> <block pos:start="1803:35" pos:end="1919:9">{<block_content pos:start="1805:9" pos:end="1917:29">

        <case pos:start="1805:9" pos:end="1805:20">case <expr pos:start="1805:14" pos:end="1805:19"><literal type="number" pos:start="1805:14" pos:end="1805:19">0x0000</literal></expr>:</case>

            <comment type="block" pos:start="1807:13" pos:end="1807:23">/* TRAPB */</comment>

            <comment type="block" pos:start="1809:13" pos:end="1809:25">/* No-op.  */</comment>

            <break pos:start="1811:13" pos:end="1811:18">break;</break>

        <case pos:start="1813:9" pos:end="1813:20">case <expr pos:start="1813:14" pos:end="1813:19"><literal type="number" pos:start="1813:14" pos:end="1813:19">0x0400</literal></expr>:</case>

            <comment type="block" pos:start="1815:13" pos:end="1815:22">/* EXCB */</comment>

            <comment type="block" pos:start="1817:13" pos:end="1817:25">/* No-op.  */</comment>

            <break pos:start="1819:13" pos:end="1819:18">break;</break>

        <case pos:start="1821:9" pos:end="1821:20">case <expr pos:start="1821:14" pos:end="1821:19"><literal type="number" pos:start="1821:14" pos:end="1821:19">0x4000</literal></expr>:</case>

            <comment type="block" pos:start="1823:13" pos:end="1823:20">/* MB */</comment>

            <expr_stmt pos:start="1825:13" pos:end="1825:48"><expr pos:start="1825:13" pos:end="1825:47"><call pos:start="1825:13" pos:end="1825:47"><name pos:start="1825:13" pos:end="1825:22">tcg_gen_mb</name><argument_list pos:start="1825:23" pos:end="1825:47">(<argument pos:start="1825:24" pos:end="1825:46"><expr pos:start="1825:24" pos:end="1825:46"><name pos:start="1825:24" pos:end="1825:33">TCG_MO_ALL</name> <operator pos:start="1825:35" pos:end="1825:35">|</operator> <name pos:start="1825:37" pos:end="1825:46">TCG_BAR_SC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1827:13" pos:end="1827:18">break;</break>

        <case pos:start="1829:9" pos:end="1829:20">case <expr pos:start="1829:14" pos:end="1829:19"><literal type="number" pos:start="1829:14" pos:end="1829:19">0x4400</literal></expr>:</case>

            <comment type="block" pos:start="1831:13" pos:end="1831:21">/* WMB */</comment>

            <expr_stmt pos:start="1833:13" pos:end="1833:50"><expr pos:start="1833:13" pos:end="1833:49"><call pos:start="1833:13" pos:end="1833:49"><name pos:start="1833:13" pos:end="1833:22">tcg_gen_mb</name><argument_list pos:start="1833:23" pos:end="1833:49">(<argument pos:start="1833:24" pos:end="1833:48"><expr pos:start="1833:24" pos:end="1833:48"><name pos:start="1833:24" pos:end="1833:35">TCG_MO_ST_ST</name> <operator pos:start="1833:37" pos:end="1833:37">|</operator> <name pos:start="1833:39" pos:end="1833:48">TCG_BAR_SC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1835:13" pos:end="1835:18">break;</break>

        <case pos:start="1837:9" pos:end="1837:20">case <expr pos:start="1837:14" pos:end="1837:19"><literal type="number" pos:start="1837:14" pos:end="1837:19">0x8000</literal></expr>:</case>

            <comment type="block" pos:start="1839:13" pos:end="1839:23">/* FETCH */</comment>

            <comment type="block" pos:start="1841:13" pos:end="1841:23">/* No-op */</comment>

            <break pos:start="1843:13" pos:end="1843:18">break;</break>

        <case pos:start="1845:9" pos:end="1845:20">case <expr pos:start="1845:14" pos:end="1845:19"><literal type="number" pos:start="1845:14" pos:end="1845:19">0xA000</literal></expr>:</case>

            <comment type="block" pos:start="1847:13" pos:end="1847:25">/* FETCH_M */</comment>

            <comment type="block" pos:start="1849:13" pos:end="1849:23">/* No-op */</comment>

            <break pos:start="1851:13" pos:end="1851:18">break;</break>

        <case pos:start="1853:9" pos:end="1853:20">case <expr pos:start="1853:14" pos:end="1853:19"><literal type="number" pos:start="1853:14" pos:end="1853:19">0xC000</literal></expr>:</case>

            <comment type="block" pos:start="1855:13" pos:end="1855:22">/* RPCC */</comment>

            <expr_stmt pos:start="1857:13" pos:end="1857:35"><expr pos:start="1857:13" pos:end="1857:34"><name pos:start="1857:13" pos:end="1857:14">va</name> <operator pos:start="1857:16" pos:end="1857:16">=</operator> <call pos:start="1857:18" pos:end="1857:34"><name pos:start="1857:18" pos:end="1857:25">dest_gpr</name><argument_list pos:start="1857:26" pos:end="1857:34">(<argument pos:start="1857:27" pos:end="1857:29"><expr pos:start="1857:27" pos:end="1857:29"><name pos:start="1857:27" pos:end="1857:29">ctx</name></expr></argument>, <argument pos:start="1857:32" pos:end="1857:33"><expr pos:start="1857:32" pos:end="1857:33"><name pos:start="1857:32" pos:end="1857:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1859:13" pos:end="1873:13"><if pos:start="1859:13" pos:end="1869:13">if <condition pos:start="1859:16" pos:end="1859:53">(<expr pos:start="1859:17" pos:end="1859:52"><name pos:start="1859:17" pos:end="1859:36"><name pos:start="1859:17" pos:end="1859:19">ctx</name><operator pos:start="1859:20" pos:end="1859:21">-&gt;</operator><name pos:start="1859:22" pos:end="1859:25">base</name><operator pos:start="1859:26" pos:end="1859:26">.</operator><name pos:start="1859:27" pos:end="1859:28">tb</name><operator pos:start="1859:29" pos:end="1859:30">-&gt;</operator><name pos:start="1859:31" pos:end="1859:36">cflags</name></name> <operator pos:start="1859:38" pos:end="1859:38">&amp;</operator> <name pos:start="1859:40" pos:end="1859:52">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="1859:55" pos:end="1869:13">{<block_content pos:start="1861:17" pos:end="1867:37">

                <expr_stmt pos:start="1861:17" pos:end="1861:31"><expr pos:start="1861:17" pos:end="1861:30"><call pos:start="1861:17" pos:end="1861:30"><name pos:start="1861:17" pos:end="1861:28">gen_io_start</name><argument_list pos:start="1861:29" pos:end="1861:30">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1863:17" pos:end="1863:49"><expr pos:start="1863:17" pos:end="1863:48"><call pos:start="1863:17" pos:end="1863:48"><name pos:start="1863:17" pos:end="1863:35">gen_helper_load_pcc</name><argument_list pos:start="1863:36" pos:end="1863:48">(<argument pos:start="1863:37" pos:end="1863:38"><expr pos:start="1863:37" pos:end="1863:38"><name pos:start="1863:37" pos:end="1863:38">va</name></expr></argument>, <argument pos:start="1863:41" pos:end="1863:47"><expr pos:start="1863:41" pos:end="1863:47"><name pos:start="1863:41" pos:end="1863:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1865:17" pos:end="1865:29"><expr pos:start="1865:17" pos:end="1865:28"><call pos:start="1865:17" pos:end="1865:28"><name pos:start="1865:17" pos:end="1865:26">gen_io_end</name><argument_list pos:start="1865:27" pos:end="1865:28">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1867:17" pos:end="1867:37"><expr pos:start="1867:17" pos:end="1867:36"><name pos:start="1867:17" pos:end="1867:19">ret</name> <operator pos:start="1867:21" pos:end="1867:21">=</operator> <name pos:start="1867:23" pos:end="1867:36">DISAS_PC_STALE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1869:15" pos:end="1873:13">else <block pos:start="1869:20" pos:end="1873:13">{<block_content pos:start="1871:17" pos:end="1871:49">

                <expr_stmt pos:start="1871:17" pos:end="1871:49"><expr pos:start="1871:17" pos:end="1871:48"><call pos:start="1871:17" pos:end="1871:48"><name pos:start="1871:17" pos:end="1871:35">gen_helper_load_pcc</name><argument_list pos:start="1871:36" pos:end="1871:48">(<argument pos:start="1871:37" pos:end="1871:38"><expr pos:start="1871:37" pos:end="1871:38"><name pos:start="1871:37" pos:end="1871:38">va</name></expr></argument>, <argument pos:start="1871:41" pos:end="1871:47"><expr pos:start="1871:41" pos:end="1871:47"><name pos:start="1871:41" pos:end="1871:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1875:13" pos:end="1875:18">break;</break>

        <case pos:start="1877:9" pos:end="1877:20">case <expr pos:start="1877:14" pos:end="1877:19"><literal type="number" pos:start="1877:14" pos:end="1877:19">0xE000</literal></expr>:</case>

            <comment type="block" pos:start="1879:13" pos:end="1879:20">/* RC */</comment>

            <expr_stmt pos:start="1881:13" pos:end="1881:31"><expr pos:start="1881:13" pos:end="1881:30"><call pos:start="1881:13" pos:end="1881:30"><name pos:start="1881:13" pos:end="1881:18">gen_rx</name><argument_list pos:start="1881:19" pos:end="1881:30">(<argument pos:start="1881:20" pos:end="1881:22"><expr pos:start="1881:20" pos:end="1881:22"><name pos:start="1881:20" pos:end="1881:22">ctx</name></expr></argument>, <argument pos:start="1881:25" pos:end="1881:26"><expr pos:start="1881:25" pos:end="1881:26"><name pos:start="1881:25" pos:end="1881:26">ra</name></expr></argument>, <argument pos:start="1881:29" pos:end="1881:29"><expr pos:start="1881:29" pos:end="1881:29"><literal type="number" pos:start="1881:29" pos:end="1881:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1883:13" pos:end="1883:18">break;</break>

        <case pos:start="1885:9" pos:end="1885:20">case <expr pos:start="1885:14" pos:end="1885:19"><literal type="number" pos:start="1885:14" pos:end="1885:19">0xE800</literal></expr>:</case>

            <comment type="block" pos:start="1887:13" pos:end="1887:21">/* ECB */</comment>

            <break pos:start="1889:13" pos:end="1889:18">break;</break>

        <case pos:start="1891:9" pos:end="1891:20">case <expr pos:start="1891:14" pos:end="1891:19"><literal type="number" pos:start="1891:14" pos:end="1891:19">0xF000</literal></expr>:</case>

            <comment type="block" pos:start="1893:13" pos:end="1893:20">/* RS */</comment>

            <expr_stmt pos:start="1895:13" pos:end="1895:31"><expr pos:start="1895:13" pos:end="1895:30"><call pos:start="1895:13" pos:end="1895:30"><name pos:start="1895:13" pos:end="1895:18">gen_rx</name><argument_list pos:start="1895:19" pos:end="1895:30">(<argument pos:start="1895:20" pos:end="1895:22"><expr pos:start="1895:20" pos:end="1895:22"><name pos:start="1895:20" pos:end="1895:22">ctx</name></expr></argument>, <argument pos:start="1895:25" pos:end="1895:26"><expr pos:start="1895:25" pos:end="1895:26"><name pos:start="1895:25" pos:end="1895:26">ra</name></expr></argument>, <argument pos:start="1895:29" pos:end="1895:29"><expr pos:start="1895:29" pos:end="1895:29"><literal type="number" pos:start="1895:29" pos:end="1895:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1897:13" pos:end="1897:18">break;</break>

        <case pos:start="1899:9" pos:end="1899:20">case <expr pos:start="1899:14" pos:end="1899:19"><literal type="number" pos:start="1899:14" pos:end="1899:19">0xF800</literal></expr>:</case>

            <comment type="block" pos:start="1901:13" pos:end="1901:22">/* WH64 */</comment>

            <comment type="block" pos:start="1903:13" pos:end="1903:23">/* No-op */</comment>

            <break pos:start="1905:13" pos:end="1905:18">break;</break>

        <case pos:start="1907:9" pos:end="1907:20">case <expr pos:start="1907:14" pos:end="1907:19"><literal type="number" pos:start="1907:14" pos:end="1907:19">0xFC00</literal></expr>:</case>

            <comment type="block" pos:start="1909:13" pos:end="1909:24">/* WH64EN */</comment>

            <comment type="block" pos:start="1911:13" pos:end="1911:23">/* No-op */</comment>

            <break pos:start="1913:13" pos:end="1913:18">break;</break>

        <default pos:start="1915:9" pos:end="1915:16">default:</default>

            <goto pos:start="1917:13" pos:end="1917:29">goto <name pos:start="1917:18" pos:end="1917:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1921:9" pos:end="1921:14">break;</break>



    <case pos:start="1925:5" pos:end="1930:0">case <expr pos:start="1925:10" pos:end="1925:13"><literal type="number" pos:start="1925:10" pos:end="1925:13">0x19</literal></expr>:</case>

        <comment type="block" pos:start="1927:9" pos:end="1927:31">/* HW_MFPR (PALcode) */</comment>

<cpp:ifndef pos:start="1929:1" pos:end="1929:24">#<cpp:directive pos:start="1929:2" pos:end="1929:7">ifndef</cpp:directive> <name pos:start="1929:9" pos:end="1929:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="1931:9" pos:end="1931:43"><expr pos:start="1931:9" pos:end="1931:42"><call pos:start="1931:9" pos:end="1931:42"><name pos:start="1931:9" pos:end="1931:23">REQUIRE_TB_FLAG</name><argument_list pos:start="1931:24" pos:end="1931:42">(<argument pos:start="1931:25" pos:end="1931:41"><expr pos:start="1931:25" pos:end="1931:41"><name pos:start="1931:25" pos:end="1931:41">ENV_FLAG_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1933:9" pos:end="1933:31"><expr pos:start="1933:9" pos:end="1933:30"><name pos:start="1933:9" pos:end="1933:10">va</name> <operator pos:start="1933:12" pos:end="1933:12">=</operator> <call pos:start="1933:14" pos:end="1933:30"><name pos:start="1933:14" pos:end="1933:21">dest_gpr</name><argument_list pos:start="1933:22" pos:end="1933:30">(<argument pos:start="1933:23" pos:end="1933:25"><expr pos:start="1933:23" pos:end="1933:25"><name pos:start="1933:23" pos:end="1933:25">ctx</name></expr></argument>, <argument pos:start="1933:28" pos:end="1933:29"><expr pos:start="1933:28" pos:end="1933:29"><name pos:start="1933:28" pos:end="1933:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1935:9" pos:end="1935:47"><expr pos:start="1935:9" pos:end="1935:46"><name pos:start="1935:9" pos:end="1935:11">ret</name> <operator pos:start="1935:13" pos:end="1935:13">=</operator> <call pos:start="1935:15" pos:end="1935:46"><name pos:start="1935:15" pos:end="1935:22">gen_mfpr</name><argument_list pos:start="1935:23" pos:end="1935:46">(<argument pos:start="1935:24" pos:end="1935:26"><expr pos:start="1935:24" pos:end="1935:26"><name pos:start="1935:24" pos:end="1935:26">ctx</name></expr></argument>, <argument pos:start="1935:29" pos:end="1935:30"><expr pos:start="1935:29" pos:end="1935:30"><name pos:start="1935:29" pos:end="1935:30">va</name></expr></argument>, <argument pos:start="1935:33" pos:end="1935:45"><expr pos:start="1935:33" pos:end="1935:45"><name pos:start="1935:33" pos:end="1935:36">insn</name> <operator pos:start="1935:38" pos:end="1935:38">&amp;</operator> <literal type="number" pos:start="1935:40" pos:end="1935:45">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1937:9" pos:end="1940:0">break;</break>

<cpp:else pos:start="1939:1" pos:end="1939:5">#<cpp:directive pos:start="1939:2" pos:end="1939:5">else</cpp:directive></cpp:else>

        <goto pos:start="1941:9" pos:end="1944:0">goto <name pos:start="1941:14" pos:end="1941:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="1943:1" pos:end="1943:6">#<cpp:directive pos:start="1943:2" pos:end="1943:6">endif</cpp:directive></cpp:endif>



    <case pos:start="1947:5" pos:end="1947:14">case <expr pos:start="1947:10" pos:end="1947:13"><literal type="number" pos:start="1947:10" pos:end="1947:13">0x1A</literal></expr>:</case>

        <comment type="block" pos:start="1949:9" pos:end="1951:75">/* JMP, JSR, RET, JSR_COROUTINE.  These only differ by the branch

           prediction stack action, which of course we don't implement.  */</comment>

        <expr_stmt pos:start="1953:9" pos:end="1953:31"><expr pos:start="1953:9" pos:end="1953:30"><name pos:start="1953:9" pos:end="1953:10">vb</name> <operator pos:start="1953:12" pos:end="1953:12">=</operator> <call pos:start="1953:14" pos:end="1953:30"><name pos:start="1953:14" pos:end="1953:21">load_gpr</name><argument_list pos:start="1953:22" pos:end="1953:30">(<argument pos:start="1953:23" pos:end="1953:25"><expr pos:start="1953:23" pos:end="1953:25"><name pos:start="1953:23" pos:end="1953:25">ctx</name></expr></argument>, <argument pos:start="1953:28" pos:end="1953:29"><expr pos:start="1953:28" pos:end="1953:29"><name pos:start="1953:28" pos:end="1953:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1955:9" pos:end="1955:41"><expr pos:start="1955:9" pos:end="1955:40"><call pos:start="1955:9" pos:end="1955:40"><name pos:start="1955:9" pos:end="1955:24">tcg_gen_andi_i64</name><argument_list pos:start="1955:25" pos:end="1955:40">(<argument pos:start="1955:26" pos:end="1955:31"><expr pos:start="1955:26" pos:end="1955:31"><name pos:start="1955:26" pos:end="1955:31">cpu_pc</name></expr></argument>, <argument pos:start="1955:34" pos:end="1955:35"><expr pos:start="1955:34" pos:end="1955:35"><name pos:start="1955:34" pos:end="1955:35">vb</name></expr></argument>, <argument pos:start="1955:38" pos:end="1955:39"><expr pos:start="1955:38" pos:end="1955:39"><operator pos:start="1955:38" pos:end="1955:38">~</operator><literal type="number" pos:start="1955:39" pos:end="1955:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1957:9" pos:end="1961:9"><if pos:start="1957:9" pos:end="1961:9">if <condition pos:start="1957:12" pos:end="1957:21">(<expr pos:start="1957:13" pos:end="1957:20"><name pos:start="1957:13" pos:end="1957:14">ra</name> <operator pos:start="1957:16" pos:end="1957:17">!=</operator> <literal type="number" pos:start="1957:19" pos:end="1957:20">31</literal></expr>)</condition> <block pos:start="1957:23" pos:end="1961:9">{<block_content pos:start="1959:13" pos:end="1959:61">

            <expr_stmt pos:start="1959:13" pos:end="1959:61"><expr pos:start="1959:13" pos:end="1959:60"><call pos:start="1959:13" pos:end="1959:60"><name pos:start="1959:13" pos:end="1959:28">tcg_gen_movi_i64</name><argument_list pos:start="1959:29" pos:end="1959:60">(<argument pos:start="1959:30" pos:end="1959:40"><expr pos:start="1959:30" pos:end="1959:40"><name pos:start="1959:30" pos:end="1959:40"><name pos:start="1959:30" pos:end="1959:32">ctx</name><operator pos:start="1959:33" pos:end="1959:34">-&gt;</operator><name pos:start="1959:35" pos:end="1959:36">ir</name><index pos:start="1959:37" pos:end="1959:40">[<expr pos:start="1959:38" pos:end="1959:39"><name pos:start="1959:38" pos:end="1959:39">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1959:43" pos:end="1959:59"><expr pos:start="1959:43" pos:end="1959:59"><name pos:start="1959:43" pos:end="1959:59"><name pos:start="1959:43" pos:end="1959:45">ctx</name><operator pos:start="1959:46" pos:end="1959:47">-&gt;</operator><name pos:start="1959:48" pos:end="1959:51">base</name><operator pos:start="1959:52" pos:end="1959:52">.</operator><name pos:start="1959:53" pos:end="1959:59">pc_next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1963:9" pos:end="1963:31"><expr pos:start="1963:9" pos:end="1963:30"><name pos:start="1963:9" pos:end="1963:11">ret</name> <operator pos:start="1963:13" pos:end="1963:13">=</operator> <name pos:start="1963:15" pos:end="1963:30">DISAS_PC_UPDATED</name></expr>;</expr_stmt>

        <break pos:start="1965:9" pos:end="1965:14">break;</break>



    <case pos:start="1969:5" pos:end="1974:0">case <expr pos:start="1969:10" pos:end="1969:13"><literal type="number" pos:start="1969:10" pos:end="1969:13">0x1B</literal></expr>:</case>

        <comment type="block" pos:start="1971:9" pos:end="1971:29">/* HW_LD (PALcode) */</comment>

<cpp:ifndef pos:start="1973:1" pos:end="1973:24">#<cpp:directive pos:start="1973:2" pos:end="1973:7">ifndef</cpp:directive> <name pos:start="1973:9" pos:end="1973:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="1975:9" pos:end="1975:43"><expr pos:start="1975:9" pos:end="1975:42"><call pos:start="1975:9" pos:end="1975:42"><name pos:start="1975:9" pos:end="1975:23">REQUIRE_TB_FLAG</name><argument_list pos:start="1975:24" pos:end="1975:42">(<argument pos:start="1975:25" pos:end="1975:41"><expr pos:start="1975:25" pos:end="1975:41"><name pos:start="1975:25" pos:end="1975:41">ENV_FLAG_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1977:9" pos:end="2118:0">{<block_content pos:start="1979:13" pos:end="2113:18">

            <decl_stmt pos:start="1979:13" pos:end="1979:39"><decl pos:start="1979:13" pos:end="1979:38"><type pos:start="1979:13" pos:end="1979:16"><name pos:start="1979:13" pos:end="1979:16">TCGv</name></type> <name pos:start="1979:18" pos:end="1979:21">addr</name> <init pos:start="1979:23" pos:end="1979:38">= <expr pos:start="1979:25" pos:end="1979:38"><call pos:start="1979:25" pos:end="1979:38"><name pos:start="1979:25" pos:end="1979:36">tcg_temp_new</name><argument_list pos:start="1979:37" pos:end="1979:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="1981:13" pos:end="1981:35"><expr pos:start="1981:13" pos:end="1981:34"><name pos:start="1981:13" pos:end="1981:14">vb</name> <operator pos:start="1981:16" pos:end="1981:16">=</operator> <call pos:start="1981:18" pos:end="1981:34"><name pos:start="1981:18" pos:end="1981:25">load_gpr</name><argument_list pos:start="1981:26" pos:end="1981:34">(<argument pos:start="1981:27" pos:end="1981:29"><expr pos:start="1981:27" pos:end="1981:29"><name pos:start="1981:27" pos:end="1981:29">ctx</name></expr></argument>, <argument pos:start="1981:32" pos:end="1981:33"><expr pos:start="1981:32" pos:end="1981:33"><name pos:start="1981:32" pos:end="1981:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1983:13" pos:end="1983:35"><expr pos:start="1983:13" pos:end="1983:34"><name pos:start="1983:13" pos:end="1983:14">va</name> <operator pos:start="1983:16" pos:end="1983:16">=</operator> <call pos:start="1983:18" pos:end="1983:34"><name pos:start="1983:18" pos:end="1983:25">dest_gpr</name><argument_list pos:start="1983:26" pos:end="1983:34">(<argument pos:start="1983:27" pos:end="1983:29"><expr pos:start="1983:27" pos:end="1983:29"><name pos:start="1983:27" pos:end="1983:29">ctx</name></expr></argument>, <argument pos:start="1983:32" pos:end="1983:33"><expr pos:start="1983:32" pos:end="1983:33"><name pos:start="1983:32" pos:end="1983:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="1987:13" pos:end="1987:47"><expr pos:start="1987:13" pos:end="1987:46"><call pos:start="1987:13" pos:end="1987:46"><name pos:start="1987:13" pos:end="1987:28">tcg_gen_addi_i64</name><argument_list pos:start="1987:29" pos:end="1987:46">(<argument pos:start="1987:30" pos:end="1987:33"><expr pos:start="1987:30" pos:end="1987:33"><name pos:start="1987:30" pos:end="1987:33">addr</name></expr></argument>, <argument pos:start="1987:36" pos:end="1987:37"><expr pos:start="1987:36" pos:end="1987:37"><name pos:start="1987:36" pos:end="1987:37">vb</name></expr></argument>, <argument pos:start="1987:40" pos:end="1987:45"><expr pos:start="1987:40" pos:end="1987:45"><name pos:start="1987:40" pos:end="1987:45">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1989:13" pos:end="2109:13">switch <condition pos:start="1989:20" pos:end="1989:39">(<expr pos:start="1989:21" pos:end="1989:38"><operator pos:start="1989:21" pos:end="1989:21">(</operator><name pos:start="1989:22" pos:end="1989:25">insn</name> <operator pos:start="1989:27" pos:end="1989:28">&gt;&gt;</operator> <literal type="number" pos:start="1989:30" pos:end="1989:31">12</literal><operator pos:start="1989:32" pos:end="1989:32">)</operator> <operator pos:start="1989:34" pos:end="1989:34">&amp;</operator> <literal type="number" pos:start="1989:36" pos:end="1989:38">0xF</literal></expr>)</condition> <block pos:start="1989:41" pos:end="2109:13">{<block_content pos:start="1991:13" pos:end="2107:22">

            <case pos:start="1991:13" pos:end="1991:21">case <expr pos:start="1991:18" pos:end="1991:20"><literal type="number" pos:start="1991:18" pos:end="1991:20">0x0</literal></expr>:</case>

                <comment type="block" pos:start="1993:17" pos:end="1993:57">/* Longword physical access (hw_ldl/p) */</comment>

                <expr_stmt pos:start="1995:17" pos:end="1995:69"><expr pos:start="1995:17" pos:end="1995:68"><call pos:start="1995:17" pos:end="1995:68"><name pos:start="1995:17" pos:end="1995:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="1995:36" pos:end="1995:68">(<argument pos:start="1995:37" pos:end="1995:38"><expr pos:start="1995:37" pos:end="1995:38"><name pos:start="1995:37" pos:end="1995:38">va</name></expr></argument>, <argument pos:start="1995:41" pos:end="1995:44"><expr pos:start="1995:41" pos:end="1995:44"><name pos:start="1995:41" pos:end="1995:44">addr</name></expr></argument>, <argument pos:start="1995:47" pos:end="1995:58"><expr pos:start="1995:47" pos:end="1995:58"><name pos:start="1995:47" pos:end="1995:58">MMU_PHYS_IDX</name></expr></argument>, <argument pos:start="1995:61" pos:end="1995:67"><expr pos:start="1995:61" pos:end="1995:67"><name pos:start="1995:61" pos:end="1995:67">MO_LESL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1997:17" pos:end="1997:22">break;</break>

            <case pos:start="1999:13" pos:end="1999:21">case <expr pos:start="1999:18" pos:end="1999:20"><literal type="number" pos:start="1999:18" pos:end="1999:20">0x1</literal></expr>:</case>

                <comment type="block" pos:start="2001:17" pos:end="2001:57">/* Quadword physical access (hw_ldq/p) */</comment>

                <expr_stmt pos:start="2003:17" pos:end="2003:68"><expr pos:start="2003:17" pos:end="2003:67"><call pos:start="2003:17" pos:end="2003:67"><name pos:start="2003:17" pos:end="2003:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="2003:36" pos:end="2003:67">(<argument pos:start="2003:37" pos:end="2003:38"><expr pos:start="2003:37" pos:end="2003:38"><name pos:start="2003:37" pos:end="2003:38">va</name></expr></argument>, <argument pos:start="2003:41" pos:end="2003:44"><expr pos:start="2003:41" pos:end="2003:44"><name pos:start="2003:41" pos:end="2003:44">addr</name></expr></argument>, <argument pos:start="2003:47" pos:end="2003:58"><expr pos:start="2003:47" pos:end="2003:58"><name pos:start="2003:47" pos:end="2003:58">MMU_PHYS_IDX</name></expr></argument>, <argument pos:start="2003:61" pos:end="2003:66"><expr pos:start="2003:61" pos:end="2003:66"><name pos:start="2003:61" pos:end="2003:66">MO_LEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2005:17" pos:end="2005:22">break;</break>

            <case pos:start="2007:13" pos:end="2007:21">case <expr pos:start="2007:18" pos:end="2007:20"><literal type="number" pos:start="2007:18" pos:end="2007:20">0x2</literal></expr>:</case>

                <comment type="block" pos:start="2009:17" pos:end="2009:69">/* Longword physical access with lock (hw_ldl_l/p) */</comment>

                <expr_stmt pos:start="2011:17" pos:end="2011:55"><expr pos:start="2011:17" pos:end="2011:54"><call pos:start="2011:17" pos:end="2011:54"><name pos:start="2011:17" pos:end="2011:30">gen_qemu_ldl_l</name><argument_list pos:start="2011:31" pos:end="2011:54">(<argument pos:start="2011:32" pos:end="2011:33"><expr pos:start="2011:32" pos:end="2011:33"><name pos:start="2011:32" pos:end="2011:33">va</name></expr></argument>, <argument pos:start="2011:36" pos:end="2011:39"><expr pos:start="2011:36" pos:end="2011:39"><name pos:start="2011:36" pos:end="2011:39">addr</name></expr></argument>, <argument pos:start="2011:42" pos:end="2011:53"><expr pos:start="2011:42" pos:end="2011:53"><name pos:start="2011:42" pos:end="2011:53">MMU_PHYS_IDX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2013:17" pos:end="2013:22">break;</break>

            <case pos:start="2015:13" pos:end="2015:21">case <expr pos:start="2015:18" pos:end="2015:20"><literal type="number" pos:start="2015:18" pos:end="2015:20">0x3</literal></expr>:</case>

                <comment type="block" pos:start="2017:17" pos:end="2017:69">/* Quadword physical access with lock (hw_ldq_l/p) */</comment>

                <expr_stmt pos:start="2019:17" pos:end="2019:55"><expr pos:start="2019:17" pos:end="2019:54"><call pos:start="2019:17" pos:end="2019:54"><name pos:start="2019:17" pos:end="2019:30">gen_qemu_ldq_l</name><argument_list pos:start="2019:31" pos:end="2019:54">(<argument pos:start="2019:32" pos:end="2019:33"><expr pos:start="2019:32" pos:end="2019:33"><name pos:start="2019:32" pos:end="2019:33">va</name></expr></argument>, <argument pos:start="2019:36" pos:end="2019:39"><expr pos:start="2019:36" pos:end="2019:39"><name pos:start="2019:36" pos:end="2019:39">addr</name></expr></argument>, <argument pos:start="2019:42" pos:end="2019:53"><expr pos:start="2019:42" pos:end="2019:53"><name pos:start="2019:42" pos:end="2019:53">MMU_PHYS_IDX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2021:17" pos:end="2021:22">break;</break>

            <case pos:start="2023:13" pos:end="2023:21">case <expr pos:start="2023:18" pos:end="2023:20"><literal type="number" pos:start="2023:18" pos:end="2023:20">0x4</literal></expr>:</case>

                <comment type="block" pos:start="2025:17" pos:end="2025:59">/* Longword virtual PTE fetch (hw_ldl/v) */</comment>

                <goto pos:start="2027:17" pos:end="2027:33">goto <name pos:start="2027:22" pos:end="2027:32">invalid_opc</name>;</goto>

            <case pos:start="2029:13" pos:end="2029:21">case <expr pos:start="2029:18" pos:end="2029:20"><literal type="number" pos:start="2029:18" pos:end="2029:20">0x5</literal></expr>:</case>

                <comment type="block" pos:start="2031:17" pos:end="2031:59">/* Quadword virtual PTE fetch (hw_ldq/v) */</comment>

                <goto pos:start="2033:17" pos:end="2033:33">goto <name pos:start="2033:22" pos:end="2033:32">invalid_opc</name>;</goto>

                <break pos:start="2035:17" pos:end="2035:22">break;</break>

            <case pos:start="2037:13" pos:end="2037:21">case <expr pos:start="2037:18" pos:end="2037:20"><literal type="number" pos:start="2037:18" pos:end="2037:20">0x6</literal></expr>:</case>

                <comment type="block" pos:start="2039:17" pos:end="2039:29">/* Invalid */</comment>

                <goto pos:start="2041:17" pos:end="2041:33">goto <name pos:start="2041:22" pos:end="2041:32">invalid_opc</name>;</goto>

            <case pos:start="2043:13" pos:end="2043:21">case <expr pos:start="2043:18" pos:end="2043:20"><literal type="number" pos:start="2043:18" pos:end="2043:20">0x7</literal></expr>:</case>

                <comment type="block" pos:start="2045:17" pos:end="2045:30">/* Invaliid */</comment>

                <goto pos:start="2047:17" pos:end="2047:33">goto <name pos:start="2047:22" pos:end="2047:32">invalid_opc</name>;</goto>

            <case pos:start="2049:13" pos:end="2049:21">case <expr pos:start="2049:18" pos:end="2049:20"><literal type="number" pos:start="2049:18" pos:end="2049:20">0x8</literal></expr>:</case>

                <comment type="block" pos:start="2051:17" pos:end="2051:54">/* Longword virtual access (hw_ldl) */</comment>

                <goto pos:start="2053:17" pos:end="2053:33">goto <name pos:start="2053:22" pos:end="2053:32">invalid_opc</name>;</goto>

            <case pos:start="2055:13" pos:end="2055:21">case <expr pos:start="2055:18" pos:end="2055:20"><literal type="number" pos:start="2055:18" pos:end="2055:20">0x9</literal></expr>:</case>

                <comment type="block" pos:start="2057:17" pos:end="2057:54">/* Quadword virtual access (hw_ldq) */</comment>

                <goto pos:start="2059:17" pos:end="2059:33">goto <name pos:start="2059:22" pos:end="2059:32">invalid_opc</name>;</goto>

            <case pos:start="2061:13" pos:end="2061:21">case <expr pos:start="2061:18" pos:end="2061:20"><literal type="number" pos:start="2061:18" pos:end="2061:20">0xA</literal></expr>:</case>

                <comment type="block" pos:start="2063:17" pos:end="2063:78">/* Longword virtual access with protection check (hw_ldl/w) */</comment>

                <expr_stmt pos:start="2065:17" pos:end="2065:71"><expr pos:start="2065:17" pos:end="2065:70"><call pos:start="2065:17" pos:end="2065:70"><name pos:start="2065:17" pos:end="2065:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="2065:36" pos:end="2065:70">(<argument pos:start="2065:37" pos:end="2065:38"><expr pos:start="2065:37" pos:end="2065:38"><name pos:start="2065:37" pos:end="2065:38">va</name></expr></argument>, <argument pos:start="2065:41" pos:end="2065:44"><expr pos:start="2065:41" pos:end="2065:44"><name pos:start="2065:41" pos:end="2065:44">addr</name></expr></argument>, <argument pos:start="2065:47" pos:end="2065:60"><expr pos:start="2065:47" pos:end="2065:60"><name pos:start="2065:47" pos:end="2065:60">MMU_KERNEL_IDX</name></expr></argument>, <argument pos:start="2065:63" pos:end="2065:69"><expr pos:start="2065:63" pos:end="2065:69"><name pos:start="2065:63" pos:end="2065:69">MO_LESL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2067:17" pos:end="2067:22">break;</break>

            <case pos:start="2069:13" pos:end="2069:21">case <expr pos:start="2069:18" pos:end="2069:20"><literal type="number" pos:start="2069:18" pos:end="2069:20">0xB</literal></expr>:</case>

                <comment type="block" pos:start="2071:17" pos:end="2071:78">/* Quadword virtual access with protection check (hw_ldq/w) */</comment>

                <expr_stmt pos:start="2073:17" pos:end="2073:70"><expr pos:start="2073:17" pos:end="2073:69"><call pos:start="2073:17" pos:end="2073:69"><name pos:start="2073:17" pos:end="2073:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="2073:36" pos:end="2073:69">(<argument pos:start="2073:37" pos:end="2073:38"><expr pos:start="2073:37" pos:end="2073:38"><name pos:start="2073:37" pos:end="2073:38">va</name></expr></argument>, <argument pos:start="2073:41" pos:end="2073:44"><expr pos:start="2073:41" pos:end="2073:44"><name pos:start="2073:41" pos:end="2073:44">addr</name></expr></argument>, <argument pos:start="2073:47" pos:end="2073:60"><expr pos:start="2073:47" pos:end="2073:60"><name pos:start="2073:47" pos:end="2073:60">MMU_KERNEL_IDX</name></expr></argument>, <argument pos:start="2073:63" pos:end="2073:68"><expr pos:start="2073:63" pos:end="2073:68"><name pos:start="2073:63" pos:end="2073:68">MO_LEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2075:17" pos:end="2075:22">break;</break>

            <case pos:start="2077:13" pos:end="2077:21">case <expr pos:start="2077:18" pos:end="2077:20"><literal type="number" pos:start="2077:18" pos:end="2077:20">0xC</literal></expr>:</case>

                <comment type="block" pos:start="2079:17" pos:end="2079:76">/* Longword virtual access with alt access mode (hw_ldl/a)*/</comment>

                <goto pos:start="2081:17" pos:end="2081:33">goto <name pos:start="2081:22" pos:end="2081:32">invalid_opc</name>;</goto>

            <case pos:start="2083:13" pos:end="2083:21">case <expr pos:start="2083:18" pos:end="2083:20"><literal type="number" pos:start="2083:18" pos:end="2083:20">0xD</literal></expr>:</case>

                <comment type="block" pos:start="2085:17" pos:end="2085:77">/* Quadword virtual access with alt access mode (hw_ldq/a) */</comment>

                <goto pos:start="2087:17" pos:end="2087:33">goto <name pos:start="2087:22" pos:end="2087:32">invalid_opc</name>;</goto>

            <case pos:start="2089:13" pos:end="2089:21">case <expr pos:start="2089:18" pos:end="2089:20"><literal type="number" pos:start="2089:18" pos:end="2089:20">0xE</literal></expr>:</case>

                <comment type="block" pos:start="2091:17" pos:end="2093:51">/* Longword virtual access with alternate access mode and

                   protection checks (hw_ldl/wa) */</comment>

                <expr_stmt pos:start="2095:17" pos:end="2095:69"><expr pos:start="2095:17" pos:end="2095:68"><call pos:start="2095:17" pos:end="2095:68"><name pos:start="2095:17" pos:end="2095:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="2095:36" pos:end="2095:68">(<argument pos:start="2095:37" pos:end="2095:38"><expr pos:start="2095:37" pos:end="2095:38"><name pos:start="2095:37" pos:end="2095:38">va</name></expr></argument>, <argument pos:start="2095:41" pos:end="2095:44"><expr pos:start="2095:41" pos:end="2095:44"><name pos:start="2095:41" pos:end="2095:44">addr</name></expr></argument>, <argument pos:start="2095:47" pos:end="2095:58"><expr pos:start="2095:47" pos:end="2095:58"><name pos:start="2095:47" pos:end="2095:58">MMU_USER_IDX</name></expr></argument>, <argument pos:start="2095:61" pos:end="2095:67"><expr pos:start="2095:61" pos:end="2095:67"><name pos:start="2095:61" pos:end="2095:67">MO_LESL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2097:17" pos:end="2097:22">break;</break>

            <case pos:start="2099:13" pos:end="2099:21">case <expr pos:start="2099:18" pos:end="2099:20"><literal type="number" pos:start="2099:18" pos:end="2099:20">0xF</literal></expr>:</case>

                <comment type="block" pos:start="2101:17" pos:end="2103:51">/* Quadword virtual access with alternate access mode and

                   protection checks (hw_ldq/wa) */</comment>

                <expr_stmt pos:start="2105:17" pos:end="2105:68"><expr pos:start="2105:17" pos:end="2105:67"><call pos:start="2105:17" pos:end="2105:67"><name pos:start="2105:17" pos:end="2105:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="2105:36" pos:end="2105:67">(<argument pos:start="2105:37" pos:end="2105:38"><expr pos:start="2105:37" pos:end="2105:38"><name pos:start="2105:37" pos:end="2105:38">va</name></expr></argument>, <argument pos:start="2105:41" pos:end="2105:44"><expr pos:start="2105:41" pos:end="2105:44"><name pos:start="2105:41" pos:end="2105:44">addr</name></expr></argument>, <argument pos:start="2105:47" pos:end="2105:58"><expr pos:start="2105:47" pos:end="2105:58"><name pos:start="2105:47" pos:end="2105:58">MMU_USER_IDX</name></expr></argument>, <argument pos:start="2105:61" pos:end="2105:66"><expr pos:start="2105:61" pos:end="2105:66"><name pos:start="2105:61" pos:end="2105:66">MO_LEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2107:17" pos:end="2107:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="2111:13" pos:end="2111:32"><expr pos:start="2111:13" pos:end="2111:31"><call pos:start="2111:13" pos:end="2111:31"><name pos:start="2111:13" pos:end="2111:25">tcg_temp_free</name><argument_list pos:start="2111:26" pos:end="2111:31">(<argument pos:start="2111:27" pos:end="2111:30"><expr pos:start="2111:27" pos:end="2111:30"><name pos:start="2111:27" pos:end="2111:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2113:13" pos:end="2113:18">break;</break>

        </block_content>}</block>

<cpp:else pos:start="2117:1" pos:end="2117:5">#<cpp:directive pos:start="2117:2" pos:end="2117:5">else</cpp:directive></cpp:else>

        <goto pos:start="2119:9" pos:end="2122:0">goto <name pos:start="2119:14" pos:end="2119:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="2121:1" pos:end="2121:6">#<cpp:directive pos:start="2121:2" pos:end="2121:6">endif</cpp:directive></cpp:endif>



    <case pos:start="2125:5" pos:end="2125:14">case <expr pos:start="2125:10" pos:end="2125:13"><literal type="number" pos:start="2125:10" pos:end="2125:13">0x1C</literal></expr>:</case>

        <expr_stmt pos:start="2127:9" pos:end="2127:31"><expr pos:start="2127:9" pos:end="2127:30"><name pos:start="2127:9" pos:end="2127:10">vc</name> <operator pos:start="2127:12" pos:end="2127:12">=</operator> <call pos:start="2127:14" pos:end="2127:30"><name pos:start="2127:14" pos:end="2127:21">dest_gpr</name><argument_list pos:start="2127:22" pos:end="2127:30">(<argument pos:start="2127:23" pos:end="2127:25"><expr pos:start="2127:23" pos:end="2127:25"><name pos:start="2127:23" pos:end="2127:25">ctx</name></expr></argument>, <argument pos:start="2127:28" pos:end="2127:29"><expr pos:start="2127:28" pos:end="2127:29"><name pos:start="2127:28" pos:end="2127:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="2129:9" pos:end="2163:9"><if pos:start="2129:9" pos:end="2143:9">if <condition pos:start="2129:12" pos:end="2129:24">(<expr pos:start="2129:13" pos:end="2129:23"><name pos:start="2129:13" pos:end="2129:15">fn7</name> <operator pos:start="2129:17" pos:end="2129:18">==</operator> <literal type="number" pos:start="2129:20" pos:end="2129:23">0x70</literal></expr>)</condition> <block pos:start="2129:26" pos:end="2143:9">{<block_content pos:start="2133:13" pos:end="2141:18">

            <comment type="block" pos:start="2131:13" pos:end="2131:23">/* FTOIT */</comment>

            <expr_stmt pos:start="2133:13" pos:end="2133:31"><expr pos:start="2133:13" pos:end="2133:30"><call pos:start="2133:13" pos:end="2133:30"><name pos:start="2133:13" pos:end="2133:25">REQUIRE_AMASK</name><argument_list pos:start="2133:26" pos:end="2133:30">(<argument pos:start="2133:27" pos:end="2133:29"><expr pos:start="2133:27" pos:end="2133:29"><name pos:start="2133:27" pos:end="2133:29">FIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2135:13" pos:end="2135:31"><expr pos:start="2135:13" pos:end="2135:30"><call pos:start="2135:13" pos:end="2135:30"><name pos:start="2135:13" pos:end="2135:26">REQUIRE_REG_31</name><argument_list pos:start="2135:27" pos:end="2135:30">(<argument pos:start="2135:28" pos:end="2135:29"><expr pos:start="2135:28" pos:end="2135:29"><name pos:start="2135:28" pos:end="2135:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2137:13" pos:end="2137:35"><expr pos:start="2137:13" pos:end="2137:34"><name pos:start="2137:13" pos:end="2137:14">va</name> <operator pos:start="2137:16" pos:end="2137:16">=</operator> <call pos:start="2137:18" pos:end="2137:34"><name pos:start="2137:18" pos:end="2137:25">load_fpr</name><argument_list pos:start="2137:26" pos:end="2137:34">(<argument pos:start="2137:27" pos:end="2137:29"><expr pos:start="2137:27" pos:end="2137:29"><name pos:start="2137:27" pos:end="2137:29">ctx</name></expr></argument>, <argument pos:start="2137:32" pos:end="2137:33"><expr pos:start="2137:32" pos:end="2137:33"><name pos:start="2137:32" pos:end="2137:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2139:13" pos:end="2139:36"><expr pos:start="2139:13" pos:end="2139:35"><call pos:start="2139:13" pos:end="2139:35"><name pos:start="2139:13" pos:end="2139:27">tcg_gen_mov_i64</name><argument_list pos:start="2139:28" pos:end="2139:35">(<argument pos:start="2139:29" pos:end="2139:30"><expr pos:start="2139:29" pos:end="2139:30"><name pos:start="2139:29" pos:end="2139:30">vc</name></expr></argument>, <argument pos:start="2139:33" pos:end="2139:34"><expr pos:start="2139:33" pos:end="2139:34"><name pos:start="2139:33" pos:end="2139:34">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2141:13" pos:end="2141:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="2143:11" pos:end="2163:9">else if <condition pos:start="2143:19" pos:end="2143:31">(<expr pos:start="2143:20" pos:end="2143:30"><name pos:start="2143:20" pos:end="2143:22">fn7</name> <operator pos:start="2143:24" pos:end="2143:25">==</operator> <literal type="number" pos:start="2143:27" pos:end="2143:30">0x78</literal></expr>)</condition> <block pos:start="2143:33" pos:end="2163:9">{<block_content pos:start="2147:13" pos:end="2161:18">

            <comment type="block" pos:start="2145:13" pos:end="2145:23">/* FTOIS */</comment>

            <expr_stmt pos:start="2147:13" pos:end="2147:31"><expr pos:start="2147:13" pos:end="2147:30"><call pos:start="2147:13" pos:end="2147:30"><name pos:start="2147:13" pos:end="2147:25">REQUIRE_AMASK</name><argument_list pos:start="2147:26" pos:end="2147:30">(<argument pos:start="2147:27" pos:end="2147:29"><expr pos:start="2147:27" pos:end="2147:29"><name pos:start="2147:27" pos:end="2147:29">FIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2149:13" pos:end="2149:31"><expr pos:start="2149:13" pos:end="2149:30"><call pos:start="2149:13" pos:end="2149:30"><name pos:start="2149:13" pos:end="2149:26">REQUIRE_REG_31</name><argument_list pos:start="2149:27" pos:end="2149:30">(<argument pos:start="2149:28" pos:end="2149:29"><expr pos:start="2149:28" pos:end="2149:29"><name pos:start="2149:28" pos:end="2149:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2151:13" pos:end="2151:37"><expr pos:start="2151:13" pos:end="2151:36"><name pos:start="2151:13" pos:end="2151:15">t32</name> <operator pos:start="2151:17" pos:end="2151:17">=</operator> <call pos:start="2151:19" pos:end="2151:36"><name pos:start="2151:19" pos:end="2151:34">tcg_temp_new_i32</name><argument_list pos:start="2151:35" pos:end="2151:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2153:13" pos:end="2153:35"><expr pos:start="2153:13" pos:end="2153:34"><name pos:start="2153:13" pos:end="2153:14">va</name> <operator pos:start="2153:16" pos:end="2153:16">=</operator> <call pos:start="2153:18" pos:end="2153:34"><name pos:start="2153:18" pos:end="2153:25">load_fpr</name><argument_list pos:start="2153:26" pos:end="2153:34">(<argument pos:start="2153:27" pos:end="2153:29"><expr pos:start="2153:27" pos:end="2153:29"><name pos:start="2153:27" pos:end="2153:29">ctx</name></expr></argument>, <argument pos:start="2153:32" pos:end="2153:33"><expr pos:start="2153:32" pos:end="2153:33"><name pos:start="2153:32" pos:end="2153:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2155:13" pos:end="2155:44"><expr pos:start="2155:13" pos:end="2155:43"><call pos:start="2155:13" pos:end="2155:43"><name pos:start="2155:13" pos:end="2155:34">gen_helper_s_to_memory</name><argument_list pos:start="2155:35" pos:end="2155:43">(<argument pos:start="2155:36" pos:end="2155:38"><expr pos:start="2155:36" pos:end="2155:38"><name pos:start="2155:36" pos:end="2155:38">t32</name></expr></argument>, <argument pos:start="2155:41" pos:end="2155:42"><expr pos:start="2155:41" pos:end="2155:42"><name pos:start="2155:41" pos:end="2155:42">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2157:13" pos:end="2157:41"><expr pos:start="2157:13" pos:end="2157:40"><call pos:start="2157:13" pos:end="2157:40"><name pos:start="2157:13" pos:end="2157:31">tcg_gen_ext_i32_i64</name><argument_list pos:start="2157:32" pos:end="2157:40">(<argument pos:start="2157:33" pos:end="2157:34"><expr pos:start="2157:33" pos:end="2157:34"><name pos:start="2157:33" pos:end="2157:34">vc</name></expr></argument>, <argument pos:start="2157:37" pos:end="2157:39"><expr pos:start="2157:37" pos:end="2157:39"><name pos:start="2157:37" pos:end="2157:39">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2159:13" pos:end="2159:35"><expr pos:start="2159:13" pos:end="2159:34"><call pos:start="2159:13" pos:end="2159:34"><name pos:start="2159:13" pos:end="2159:29">tcg_temp_free_i32</name><argument_list pos:start="2159:30" pos:end="2159:34">(<argument pos:start="2159:31" pos:end="2159:33"><expr pos:start="2159:31" pos:end="2159:33"><name pos:start="2159:31" pos:end="2159:33">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2161:13" pos:end="2161:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="2167:9" pos:end="2167:47"><expr pos:start="2167:9" pos:end="2167:46"><name pos:start="2167:9" pos:end="2167:10">vb</name> <operator pos:start="2167:12" pos:end="2167:12">=</operator> <call pos:start="2167:14" pos:end="2167:46"><name pos:start="2167:14" pos:end="2167:25">load_gpr_lit</name><argument_list pos:start="2167:26" pos:end="2167:46">(<argument pos:start="2167:27" pos:end="2167:29"><expr pos:start="2167:27" pos:end="2167:29"><name pos:start="2167:27" pos:end="2167:29">ctx</name></expr></argument>, <argument pos:start="2167:32" pos:end="2167:33"><expr pos:start="2167:32" pos:end="2167:33"><name pos:start="2167:32" pos:end="2167:33">rb</name></expr></argument>, <argument pos:start="2167:36" pos:end="2167:38"><expr pos:start="2167:36" pos:end="2167:38"><name pos:start="2167:36" pos:end="2167:38">lit</name></expr></argument>, <argument pos:start="2167:41" pos:end="2167:45"><expr pos:start="2167:41" pos:end="2167:45"><name pos:start="2167:41" pos:end="2167:45">islit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="2169:9" pos:end="2407:9">switch <condition pos:start="2169:16" pos:end="2169:20">(<expr pos:start="2169:17" pos:end="2169:19"><name pos:start="2169:17" pos:end="2169:19">fn7</name></expr>)</condition> <block pos:start="2169:22" pos:end="2407:9">{<block_content pos:start="2171:9" pos:end="2405:29">

        <case pos:start="2171:9" pos:end="2171:18">case <expr pos:start="2171:14" pos:end="2171:17"><literal type="number" pos:start="2171:14" pos:end="2171:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="2173:13" pos:end="2173:23">/* SEXTB */</comment>

            <expr_stmt pos:start="2175:13" pos:end="2175:31"><expr pos:start="2175:13" pos:end="2175:30"><call pos:start="2175:13" pos:end="2175:30"><name pos:start="2175:13" pos:end="2175:25">REQUIRE_AMASK</name><argument_list pos:start="2175:26" pos:end="2175:30">(<argument pos:start="2175:27" pos:end="2175:29"><expr pos:start="2175:27" pos:end="2175:29"><name pos:start="2175:27" pos:end="2175:29">BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2177:13" pos:end="2177:31"><expr pos:start="2177:13" pos:end="2177:30"><call pos:start="2177:13" pos:end="2177:30"><name pos:start="2177:13" pos:end="2177:26">REQUIRE_REG_31</name><argument_list pos:start="2177:27" pos:end="2177:30">(<argument pos:start="2177:28" pos:end="2177:29"><expr pos:start="2177:28" pos:end="2177:29"><name pos:start="2177:28" pos:end="2177:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2179:13" pos:end="2179:38"><expr pos:start="2179:13" pos:end="2179:37"><call pos:start="2179:13" pos:end="2179:37"><name pos:start="2179:13" pos:end="2179:29">tcg_gen_ext8s_i64</name><argument_list pos:start="2179:30" pos:end="2179:37">(<argument pos:start="2179:31" pos:end="2179:32"><expr pos:start="2179:31" pos:end="2179:32"><name pos:start="2179:31" pos:end="2179:32">vc</name></expr></argument>, <argument pos:start="2179:35" pos:end="2179:36"><expr pos:start="2179:35" pos:end="2179:36"><name pos:start="2179:35" pos:end="2179:36">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2181:13" pos:end="2181:18">break;</break>

        <case pos:start="2183:9" pos:end="2183:18">case <expr pos:start="2183:14" pos:end="2183:17"><literal type="number" pos:start="2183:14" pos:end="2183:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="2185:13" pos:end="2185:23">/* SEXTW */</comment>

            <expr_stmt pos:start="2187:13" pos:end="2187:31"><expr pos:start="2187:13" pos:end="2187:30"><call pos:start="2187:13" pos:end="2187:30"><name pos:start="2187:13" pos:end="2187:25">REQUIRE_AMASK</name><argument_list pos:start="2187:26" pos:end="2187:30">(<argument pos:start="2187:27" pos:end="2187:29"><expr pos:start="2187:27" pos:end="2187:29"><name pos:start="2187:27" pos:end="2187:29">BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2189:13" pos:end="2189:31"><expr pos:start="2189:13" pos:end="2189:30"><call pos:start="2189:13" pos:end="2189:30"><name pos:start="2189:13" pos:end="2189:26">REQUIRE_REG_31</name><argument_list pos:start="2189:27" pos:end="2189:30">(<argument pos:start="2189:28" pos:end="2189:29"><expr pos:start="2189:28" pos:end="2189:29"><name pos:start="2189:28" pos:end="2189:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2191:13" pos:end="2191:39"><expr pos:start="2191:13" pos:end="2191:38"><call pos:start="2191:13" pos:end="2191:38"><name pos:start="2191:13" pos:end="2191:30">tcg_gen_ext16s_i64</name><argument_list pos:start="2191:31" pos:end="2191:38">(<argument pos:start="2191:32" pos:end="2191:33"><expr pos:start="2191:32" pos:end="2191:33"><name pos:start="2191:32" pos:end="2191:33">vc</name></expr></argument>, <argument pos:start="2191:36" pos:end="2191:37"><expr pos:start="2191:36" pos:end="2191:37"><name pos:start="2191:36" pos:end="2191:37">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2193:13" pos:end="2193:18">break;</break>

        <case pos:start="2195:9" pos:end="2195:18">case <expr pos:start="2195:14" pos:end="2195:17"><literal type="number" pos:start="2195:14" pos:end="2195:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="2197:13" pos:end="2197:23">/* CTPOP */</comment>

            <expr_stmt pos:start="2199:13" pos:end="2199:31"><expr pos:start="2199:13" pos:end="2199:30"><call pos:start="2199:13" pos:end="2199:30"><name pos:start="2199:13" pos:end="2199:25">REQUIRE_AMASK</name><argument_list pos:start="2199:26" pos:end="2199:30">(<argument pos:start="2199:27" pos:end="2199:29"><expr pos:start="2199:27" pos:end="2199:29"><name pos:start="2199:27" pos:end="2199:29">CIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2201:13" pos:end="2201:31"><expr pos:start="2201:13" pos:end="2201:30"><call pos:start="2201:13" pos:end="2201:30"><name pos:start="2201:13" pos:end="2201:26">REQUIRE_REG_31</name><argument_list pos:start="2201:27" pos:end="2201:30">(<argument pos:start="2201:28" pos:end="2201:29"><expr pos:start="2201:28" pos:end="2201:29"><name pos:start="2201:28" pos:end="2201:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2203:13" pos:end="2203:27"><expr pos:start="2203:13" pos:end="2203:26"><name pos:start="2203:13" pos:end="2203:26">REQUIRE_NO_LIT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="2205:13" pos:end="2205:38"><expr pos:start="2205:13" pos:end="2205:37"><call pos:start="2205:13" pos:end="2205:37"><name pos:start="2205:13" pos:end="2205:29">tcg_gen_ctpop_i64</name><argument_list pos:start="2205:30" pos:end="2205:37">(<argument pos:start="2205:31" pos:end="2205:32"><expr pos:start="2205:31" pos:end="2205:32"><name pos:start="2205:31" pos:end="2205:32">vc</name></expr></argument>, <argument pos:start="2205:35" pos:end="2205:36"><expr pos:start="2205:35" pos:end="2205:36"><name pos:start="2205:35" pos:end="2205:36">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2207:13" pos:end="2207:18">break;</break>

        <case pos:start="2209:9" pos:end="2209:18">case <expr pos:start="2209:14" pos:end="2209:17"><literal type="number" pos:start="2209:14" pos:end="2209:17">0x31</literal></expr>:</case>

            <comment type="block" pos:start="2211:13" pos:end="2211:22">/* PERR */</comment>

            <expr_stmt pos:start="2213:13" pos:end="2213:31"><expr pos:start="2213:13" pos:end="2213:30"><call pos:start="2213:13" pos:end="2213:30"><name pos:start="2213:13" pos:end="2213:25">REQUIRE_AMASK</name><argument_list pos:start="2213:26" pos:end="2213:30">(<argument pos:start="2213:27" pos:end="2213:29"><expr pos:start="2213:27" pos:end="2213:29"><name pos:start="2213:27" pos:end="2213:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2215:13" pos:end="2215:27"><expr pos:start="2215:13" pos:end="2215:26"><name pos:start="2215:13" pos:end="2215:26">REQUIRE_NO_LIT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="2217:13" pos:end="2217:35"><expr pos:start="2217:13" pos:end="2217:34"><name pos:start="2217:13" pos:end="2217:14">va</name> <operator pos:start="2217:16" pos:end="2217:16">=</operator> <call pos:start="2217:18" pos:end="2217:34"><name pos:start="2217:18" pos:end="2217:25">load_gpr</name><argument_list pos:start="2217:26" pos:end="2217:34">(<argument pos:start="2217:27" pos:end="2217:29"><expr pos:start="2217:27" pos:end="2217:29"><name pos:start="2217:27" pos:end="2217:29">ctx</name></expr></argument>, <argument pos:start="2217:32" pos:end="2217:33"><expr pos:start="2217:32" pos:end="2217:33"><name pos:start="2217:32" pos:end="2217:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2219:13" pos:end="2219:40"><expr pos:start="2219:13" pos:end="2219:39"><call pos:start="2219:13" pos:end="2219:39"><name pos:start="2219:13" pos:end="2219:27">gen_helper_perr</name><argument_list pos:start="2219:28" pos:end="2219:39">(<argument pos:start="2219:29" pos:end="2219:30"><expr pos:start="2219:29" pos:end="2219:30"><name pos:start="2219:29" pos:end="2219:30">vc</name></expr></argument>, <argument pos:start="2219:33" pos:end="2219:34"><expr pos:start="2219:33" pos:end="2219:34"><name pos:start="2219:33" pos:end="2219:34">va</name></expr></argument>, <argument pos:start="2219:37" pos:end="2219:38"><expr pos:start="2219:37" pos:end="2219:38"><name pos:start="2219:37" pos:end="2219:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2221:13" pos:end="2221:18">break;</break>

        <case pos:start="2223:9" pos:end="2223:18">case <expr pos:start="2223:14" pos:end="2223:17"><literal type="number" pos:start="2223:14" pos:end="2223:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="2225:13" pos:end="2225:22">/* CTLZ */</comment>

            <expr_stmt pos:start="2227:13" pos:end="2227:31"><expr pos:start="2227:13" pos:end="2227:30"><call pos:start="2227:13" pos:end="2227:30"><name pos:start="2227:13" pos:end="2227:25">REQUIRE_AMASK</name><argument_list pos:start="2227:26" pos:end="2227:30">(<argument pos:start="2227:27" pos:end="2227:29"><expr pos:start="2227:27" pos:end="2227:29"><name pos:start="2227:27" pos:end="2227:29">CIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2229:13" pos:end="2229:31"><expr pos:start="2229:13" pos:end="2229:30"><call pos:start="2229:13" pos:end="2229:30"><name pos:start="2229:13" pos:end="2229:26">REQUIRE_REG_31</name><argument_list pos:start="2229:27" pos:end="2229:30">(<argument pos:start="2229:28" pos:end="2229:29"><expr pos:start="2229:28" pos:end="2229:29"><name pos:start="2229:28" pos:end="2229:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2231:13" pos:end="2231:27"><expr pos:start="2231:13" pos:end="2231:26"><name pos:start="2231:13" pos:end="2231:26">REQUIRE_NO_LIT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="2233:13" pos:end="2233:41"><expr pos:start="2233:13" pos:end="2233:40"><call pos:start="2233:13" pos:end="2233:40"><name pos:start="2233:13" pos:end="2233:28">tcg_gen_clzi_i64</name><argument_list pos:start="2233:29" pos:end="2233:40">(<argument pos:start="2233:30" pos:end="2233:31"><expr pos:start="2233:30" pos:end="2233:31"><name pos:start="2233:30" pos:end="2233:31">vc</name></expr></argument>, <argument pos:start="2233:34" pos:end="2233:35"><expr pos:start="2233:34" pos:end="2233:35"><name pos:start="2233:34" pos:end="2233:35">vb</name></expr></argument>, <argument pos:start="2233:38" pos:end="2233:39"><expr pos:start="2233:38" pos:end="2233:39"><literal type="number" pos:start="2233:38" pos:end="2233:39">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2235:13" pos:end="2235:18">break;</break>

        <case pos:start="2237:9" pos:end="2237:18">case <expr pos:start="2237:14" pos:end="2237:17"><literal type="number" pos:start="2237:14" pos:end="2237:17">0x33</literal></expr>:</case>

            <comment type="block" pos:start="2239:13" pos:end="2239:22">/* CTTZ */</comment>

            <expr_stmt pos:start="2241:13" pos:end="2241:31"><expr pos:start="2241:13" pos:end="2241:30"><call pos:start="2241:13" pos:end="2241:30"><name pos:start="2241:13" pos:end="2241:25">REQUIRE_AMASK</name><argument_list pos:start="2241:26" pos:end="2241:30">(<argument pos:start="2241:27" pos:end="2241:29"><expr pos:start="2241:27" pos:end="2241:29"><name pos:start="2241:27" pos:end="2241:29">CIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2243:13" pos:end="2243:31"><expr pos:start="2243:13" pos:end="2243:30"><call pos:start="2243:13" pos:end="2243:30"><name pos:start="2243:13" pos:end="2243:26">REQUIRE_REG_31</name><argument_list pos:start="2243:27" pos:end="2243:30">(<argument pos:start="2243:28" pos:end="2243:29"><expr pos:start="2243:28" pos:end="2243:29"><name pos:start="2243:28" pos:end="2243:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2245:13" pos:end="2245:27"><expr pos:start="2245:13" pos:end="2245:26"><name pos:start="2245:13" pos:end="2245:26">REQUIRE_NO_LIT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="2247:13" pos:end="2247:41"><expr pos:start="2247:13" pos:end="2247:40"><call pos:start="2247:13" pos:end="2247:40"><name pos:start="2247:13" pos:end="2247:28">tcg_gen_ctzi_i64</name><argument_list pos:start="2247:29" pos:end="2247:40">(<argument pos:start="2247:30" pos:end="2247:31"><expr pos:start="2247:30" pos:end="2247:31"><name pos:start="2247:30" pos:end="2247:31">vc</name></expr></argument>, <argument pos:start="2247:34" pos:end="2247:35"><expr pos:start="2247:34" pos:end="2247:35"><name pos:start="2247:34" pos:end="2247:35">vb</name></expr></argument>, <argument pos:start="2247:38" pos:end="2247:39"><expr pos:start="2247:38" pos:end="2247:39"><literal type="number" pos:start="2247:38" pos:end="2247:39">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2249:13" pos:end="2249:18">break;</break>

        <case pos:start="2251:9" pos:end="2251:18">case <expr pos:start="2251:14" pos:end="2251:17"><literal type="number" pos:start="2251:14" pos:end="2251:17">0x34</literal></expr>:</case>

            <comment type="block" pos:start="2253:13" pos:end="2253:24">/* UNPKBW */</comment>

            <expr_stmt pos:start="2255:13" pos:end="2255:31"><expr pos:start="2255:13" pos:end="2255:30"><call pos:start="2255:13" pos:end="2255:30"><name pos:start="2255:13" pos:end="2255:25">REQUIRE_AMASK</name><argument_list pos:start="2255:26" pos:end="2255:30">(<argument pos:start="2255:27" pos:end="2255:29"><expr pos:start="2255:27" pos:end="2255:29"><name pos:start="2255:27" pos:end="2255:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2257:13" pos:end="2257:31"><expr pos:start="2257:13" pos:end="2257:30"><call pos:start="2257:13" pos:end="2257:30"><name pos:start="2257:13" pos:end="2257:26">REQUIRE_REG_31</name><argument_list pos:start="2257:27" pos:end="2257:30">(<argument pos:start="2257:28" pos:end="2257:29"><expr pos:start="2257:28" pos:end="2257:29"><name pos:start="2257:28" pos:end="2257:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2259:13" pos:end="2259:27"><expr pos:start="2259:13" pos:end="2259:26"><name pos:start="2259:13" pos:end="2259:26">REQUIRE_NO_LIT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="2261:13" pos:end="2261:38"><expr pos:start="2261:13" pos:end="2261:37"><call pos:start="2261:13" pos:end="2261:37"><name pos:start="2261:13" pos:end="2261:29">gen_helper_unpkbw</name><argument_list pos:start="2261:30" pos:end="2261:37">(<argument pos:start="2261:31" pos:end="2261:32"><expr pos:start="2261:31" pos:end="2261:32"><name pos:start="2261:31" pos:end="2261:32">vc</name></expr></argument>, <argument pos:start="2261:35" pos:end="2261:36"><expr pos:start="2261:35" pos:end="2261:36"><name pos:start="2261:35" pos:end="2261:36">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2263:13" pos:end="2263:18">break;</break>

        <case pos:start="2265:9" pos:end="2265:18">case <expr pos:start="2265:14" pos:end="2265:17"><literal type="number" pos:start="2265:14" pos:end="2265:17">0x35</literal></expr>:</case>

            <comment type="block" pos:start="2267:13" pos:end="2267:24">/* UNPKBL */</comment>

            <expr_stmt pos:start="2269:13" pos:end="2269:31"><expr pos:start="2269:13" pos:end="2269:30"><call pos:start="2269:13" pos:end="2269:30"><name pos:start="2269:13" pos:end="2269:25">REQUIRE_AMASK</name><argument_list pos:start="2269:26" pos:end="2269:30">(<argument pos:start="2269:27" pos:end="2269:29"><expr pos:start="2269:27" pos:end="2269:29"><name pos:start="2269:27" pos:end="2269:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2271:13" pos:end="2271:31"><expr pos:start="2271:13" pos:end="2271:30"><call pos:start="2271:13" pos:end="2271:30"><name pos:start="2271:13" pos:end="2271:26">REQUIRE_REG_31</name><argument_list pos:start="2271:27" pos:end="2271:30">(<argument pos:start="2271:28" pos:end="2271:29"><expr pos:start="2271:28" pos:end="2271:29"><name pos:start="2271:28" pos:end="2271:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2273:13" pos:end="2273:27"><expr pos:start="2273:13" pos:end="2273:26"><name pos:start="2273:13" pos:end="2273:26">REQUIRE_NO_LIT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="2275:13" pos:end="2275:38"><expr pos:start="2275:13" pos:end="2275:37"><call pos:start="2275:13" pos:end="2275:37"><name pos:start="2275:13" pos:end="2275:29">gen_helper_unpkbl</name><argument_list pos:start="2275:30" pos:end="2275:37">(<argument pos:start="2275:31" pos:end="2275:32"><expr pos:start="2275:31" pos:end="2275:32"><name pos:start="2275:31" pos:end="2275:32">vc</name></expr></argument>, <argument pos:start="2275:35" pos:end="2275:36"><expr pos:start="2275:35" pos:end="2275:36"><name pos:start="2275:35" pos:end="2275:36">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2277:13" pos:end="2277:18">break;</break>

        <case pos:start="2279:9" pos:end="2279:18">case <expr pos:start="2279:14" pos:end="2279:17"><literal type="number" pos:start="2279:14" pos:end="2279:17">0x36</literal></expr>:</case>

            <comment type="block" pos:start="2281:13" pos:end="2281:22">/* PKWB */</comment>

            <expr_stmt pos:start="2283:13" pos:end="2283:31"><expr pos:start="2283:13" pos:end="2283:30"><call pos:start="2283:13" pos:end="2283:30"><name pos:start="2283:13" pos:end="2283:25">REQUIRE_AMASK</name><argument_list pos:start="2283:26" pos:end="2283:30">(<argument pos:start="2283:27" pos:end="2283:29"><expr pos:start="2283:27" pos:end="2283:29"><name pos:start="2283:27" pos:end="2283:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2285:13" pos:end="2285:31"><expr pos:start="2285:13" pos:end="2285:30"><call pos:start="2285:13" pos:end="2285:30"><name pos:start="2285:13" pos:end="2285:26">REQUIRE_REG_31</name><argument_list pos:start="2285:27" pos:end="2285:30">(<argument pos:start="2285:28" pos:end="2285:29"><expr pos:start="2285:28" pos:end="2285:29"><name pos:start="2285:28" pos:end="2285:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2287:13" pos:end="2287:27"><expr pos:start="2287:13" pos:end="2287:26"><name pos:start="2287:13" pos:end="2287:26">REQUIRE_NO_LIT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="2289:13" pos:end="2289:36"><expr pos:start="2289:13" pos:end="2289:35"><call pos:start="2289:13" pos:end="2289:35"><name pos:start="2289:13" pos:end="2289:27">gen_helper_pkwb</name><argument_list pos:start="2289:28" pos:end="2289:35">(<argument pos:start="2289:29" pos:end="2289:30"><expr pos:start="2289:29" pos:end="2289:30"><name pos:start="2289:29" pos:end="2289:30">vc</name></expr></argument>, <argument pos:start="2289:33" pos:end="2289:34"><expr pos:start="2289:33" pos:end="2289:34"><name pos:start="2289:33" pos:end="2289:34">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2291:13" pos:end="2291:18">break;</break>

        <case pos:start="2293:9" pos:end="2293:18">case <expr pos:start="2293:14" pos:end="2293:17"><literal type="number" pos:start="2293:14" pos:end="2293:17">0x37</literal></expr>:</case>

            <comment type="block" pos:start="2295:13" pos:end="2295:22">/* PKLB */</comment>

            <expr_stmt pos:start="2297:13" pos:end="2297:31"><expr pos:start="2297:13" pos:end="2297:30"><call pos:start="2297:13" pos:end="2297:30"><name pos:start="2297:13" pos:end="2297:25">REQUIRE_AMASK</name><argument_list pos:start="2297:26" pos:end="2297:30">(<argument pos:start="2297:27" pos:end="2297:29"><expr pos:start="2297:27" pos:end="2297:29"><name pos:start="2297:27" pos:end="2297:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2299:13" pos:end="2299:31"><expr pos:start="2299:13" pos:end="2299:30"><call pos:start="2299:13" pos:end="2299:30"><name pos:start="2299:13" pos:end="2299:26">REQUIRE_REG_31</name><argument_list pos:start="2299:27" pos:end="2299:30">(<argument pos:start="2299:28" pos:end="2299:29"><expr pos:start="2299:28" pos:end="2299:29"><name pos:start="2299:28" pos:end="2299:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2301:13" pos:end="2301:27"><expr pos:start="2301:13" pos:end="2301:26"><name pos:start="2301:13" pos:end="2301:26">REQUIRE_NO_LIT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="2303:13" pos:end="2303:36"><expr pos:start="2303:13" pos:end="2303:35"><call pos:start="2303:13" pos:end="2303:35"><name pos:start="2303:13" pos:end="2303:27">gen_helper_pklb</name><argument_list pos:start="2303:28" pos:end="2303:35">(<argument pos:start="2303:29" pos:end="2303:30"><expr pos:start="2303:29" pos:end="2303:30"><name pos:start="2303:29" pos:end="2303:30">vc</name></expr></argument>, <argument pos:start="2303:33" pos:end="2303:34"><expr pos:start="2303:33" pos:end="2303:34"><name pos:start="2303:33" pos:end="2303:34">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2305:13" pos:end="2305:18">break;</break>

        <case pos:start="2307:9" pos:end="2307:18">case <expr pos:start="2307:14" pos:end="2307:17"><literal type="number" pos:start="2307:14" pos:end="2307:17">0x38</literal></expr>:</case>

            <comment type="block" pos:start="2309:13" pos:end="2309:24">/* MINSB8 */</comment>

            <expr_stmt pos:start="2311:13" pos:end="2311:31"><expr pos:start="2311:13" pos:end="2311:30"><call pos:start="2311:13" pos:end="2311:30"><name pos:start="2311:13" pos:end="2311:25">REQUIRE_AMASK</name><argument_list pos:start="2311:26" pos:end="2311:30">(<argument pos:start="2311:27" pos:end="2311:29"><expr pos:start="2311:27" pos:end="2311:29"><name pos:start="2311:27" pos:end="2311:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2313:13" pos:end="2313:35"><expr pos:start="2313:13" pos:end="2313:34"><name pos:start="2313:13" pos:end="2313:14">va</name> <operator pos:start="2313:16" pos:end="2313:16">=</operator> <call pos:start="2313:18" pos:end="2313:34"><name pos:start="2313:18" pos:end="2313:25">load_gpr</name><argument_list pos:start="2313:26" pos:end="2313:34">(<argument pos:start="2313:27" pos:end="2313:29"><expr pos:start="2313:27" pos:end="2313:29"><name pos:start="2313:27" pos:end="2313:29">ctx</name></expr></argument>, <argument pos:start="2313:32" pos:end="2313:33"><expr pos:start="2313:32" pos:end="2313:33"><name pos:start="2313:32" pos:end="2313:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2315:13" pos:end="2315:42"><expr pos:start="2315:13" pos:end="2315:41"><call pos:start="2315:13" pos:end="2315:41"><name pos:start="2315:13" pos:end="2315:29">gen_helper_minsb8</name><argument_list pos:start="2315:30" pos:end="2315:41">(<argument pos:start="2315:31" pos:end="2315:32"><expr pos:start="2315:31" pos:end="2315:32"><name pos:start="2315:31" pos:end="2315:32">vc</name></expr></argument>, <argument pos:start="2315:35" pos:end="2315:36"><expr pos:start="2315:35" pos:end="2315:36"><name pos:start="2315:35" pos:end="2315:36">va</name></expr></argument>, <argument pos:start="2315:39" pos:end="2315:40"><expr pos:start="2315:39" pos:end="2315:40"><name pos:start="2315:39" pos:end="2315:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2317:13" pos:end="2317:18">break;</break>

        <case pos:start="2319:9" pos:end="2319:18">case <expr pos:start="2319:14" pos:end="2319:17"><literal type="number" pos:start="2319:14" pos:end="2319:17">0x39</literal></expr>:</case>

            <comment type="block" pos:start="2321:13" pos:end="2321:24">/* MINSW4 */</comment>

            <expr_stmt pos:start="2323:13" pos:end="2323:31"><expr pos:start="2323:13" pos:end="2323:30"><call pos:start="2323:13" pos:end="2323:30"><name pos:start="2323:13" pos:end="2323:25">REQUIRE_AMASK</name><argument_list pos:start="2323:26" pos:end="2323:30">(<argument pos:start="2323:27" pos:end="2323:29"><expr pos:start="2323:27" pos:end="2323:29"><name pos:start="2323:27" pos:end="2323:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2325:13" pos:end="2325:35"><expr pos:start="2325:13" pos:end="2325:34"><name pos:start="2325:13" pos:end="2325:14">va</name> <operator pos:start="2325:16" pos:end="2325:16">=</operator> <call pos:start="2325:18" pos:end="2325:34"><name pos:start="2325:18" pos:end="2325:25">load_gpr</name><argument_list pos:start="2325:26" pos:end="2325:34">(<argument pos:start="2325:27" pos:end="2325:29"><expr pos:start="2325:27" pos:end="2325:29"><name pos:start="2325:27" pos:end="2325:29">ctx</name></expr></argument>, <argument pos:start="2325:32" pos:end="2325:33"><expr pos:start="2325:32" pos:end="2325:33"><name pos:start="2325:32" pos:end="2325:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2327:13" pos:end="2327:42"><expr pos:start="2327:13" pos:end="2327:41"><call pos:start="2327:13" pos:end="2327:41"><name pos:start="2327:13" pos:end="2327:29">gen_helper_minsw4</name><argument_list pos:start="2327:30" pos:end="2327:41">(<argument pos:start="2327:31" pos:end="2327:32"><expr pos:start="2327:31" pos:end="2327:32"><name pos:start="2327:31" pos:end="2327:32">vc</name></expr></argument>, <argument pos:start="2327:35" pos:end="2327:36"><expr pos:start="2327:35" pos:end="2327:36"><name pos:start="2327:35" pos:end="2327:36">va</name></expr></argument>, <argument pos:start="2327:39" pos:end="2327:40"><expr pos:start="2327:39" pos:end="2327:40"><name pos:start="2327:39" pos:end="2327:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2329:13" pos:end="2329:18">break;</break>

        <case pos:start="2331:9" pos:end="2331:18">case <expr pos:start="2331:14" pos:end="2331:17"><literal type="number" pos:start="2331:14" pos:end="2331:17">0x3A</literal></expr>:</case>

            <comment type="block" pos:start="2333:13" pos:end="2333:24">/* MINUB8 */</comment>

            <expr_stmt pos:start="2335:13" pos:end="2335:31"><expr pos:start="2335:13" pos:end="2335:30"><call pos:start="2335:13" pos:end="2335:30"><name pos:start="2335:13" pos:end="2335:25">REQUIRE_AMASK</name><argument_list pos:start="2335:26" pos:end="2335:30">(<argument pos:start="2335:27" pos:end="2335:29"><expr pos:start="2335:27" pos:end="2335:29"><name pos:start="2335:27" pos:end="2335:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2337:13" pos:end="2337:35"><expr pos:start="2337:13" pos:end="2337:34"><name pos:start="2337:13" pos:end="2337:14">va</name> <operator pos:start="2337:16" pos:end="2337:16">=</operator> <call pos:start="2337:18" pos:end="2337:34"><name pos:start="2337:18" pos:end="2337:25">load_gpr</name><argument_list pos:start="2337:26" pos:end="2337:34">(<argument pos:start="2337:27" pos:end="2337:29"><expr pos:start="2337:27" pos:end="2337:29"><name pos:start="2337:27" pos:end="2337:29">ctx</name></expr></argument>, <argument pos:start="2337:32" pos:end="2337:33"><expr pos:start="2337:32" pos:end="2337:33"><name pos:start="2337:32" pos:end="2337:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2339:13" pos:end="2339:42"><expr pos:start="2339:13" pos:end="2339:41"><call pos:start="2339:13" pos:end="2339:41"><name pos:start="2339:13" pos:end="2339:29">gen_helper_minub8</name><argument_list pos:start="2339:30" pos:end="2339:41">(<argument pos:start="2339:31" pos:end="2339:32"><expr pos:start="2339:31" pos:end="2339:32"><name pos:start="2339:31" pos:end="2339:32">vc</name></expr></argument>, <argument pos:start="2339:35" pos:end="2339:36"><expr pos:start="2339:35" pos:end="2339:36"><name pos:start="2339:35" pos:end="2339:36">va</name></expr></argument>, <argument pos:start="2339:39" pos:end="2339:40"><expr pos:start="2339:39" pos:end="2339:40"><name pos:start="2339:39" pos:end="2339:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2341:13" pos:end="2341:18">break;</break>

        <case pos:start="2343:9" pos:end="2343:18">case <expr pos:start="2343:14" pos:end="2343:17"><literal type="number" pos:start="2343:14" pos:end="2343:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="2345:13" pos:end="2345:24">/* MINUW4 */</comment>

            <expr_stmt pos:start="2347:13" pos:end="2347:31"><expr pos:start="2347:13" pos:end="2347:30"><call pos:start="2347:13" pos:end="2347:30"><name pos:start="2347:13" pos:end="2347:25">REQUIRE_AMASK</name><argument_list pos:start="2347:26" pos:end="2347:30">(<argument pos:start="2347:27" pos:end="2347:29"><expr pos:start="2347:27" pos:end="2347:29"><name pos:start="2347:27" pos:end="2347:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2349:13" pos:end="2349:35"><expr pos:start="2349:13" pos:end="2349:34"><name pos:start="2349:13" pos:end="2349:14">va</name> <operator pos:start="2349:16" pos:end="2349:16">=</operator> <call pos:start="2349:18" pos:end="2349:34"><name pos:start="2349:18" pos:end="2349:25">load_gpr</name><argument_list pos:start="2349:26" pos:end="2349:34">(<argument pos:start="2349:27" pos:end="2349:29"><expr pos:start="2349:27" pos:end="2349:29"><name pos:start="2349:27" pos:end="2349:29">ctx</name></expr></argument>, <argument pos:start="2349:32" pos:end="2349:33"><expr pos:start="2349:32" pos:end="2349:33"><name pos:start="2349:32" pos:end="2349:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2351:13" pos:end="2351:42"><expr pos:start="2351:13" pos:end="2351:41"><call pos:start="2351:13" pos:end="2351:41"><name pos:start="2351:13" pos:end="2351:29">gen_helper_minuw4</name><argument_list pos:start="2351:30" pos:end="2351:41">(<argument pos:start="2351:31" pos:end="2351:32"><expr pos:start="2351:31" pos:end="2351:32"><name pos:start="2351:31" pos:end="2351:32">vc</name></expr></argument>, <argument pos:start="2351:35" pos:end="2351:36"><expr pos:start="2351:35" pos:end="2351:36"><name pos:start="2351:35" pos:end="2351:36">va</name></expr></argument>, <argument pos:start="2351:39" pos:end="2351:40"><expr pos:start="2351:39" pos:end="2351:40"><name pos:start="2351:39" pos:end="2351:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2353:13" pos:end="2353:18">break;</break>

        <case pos:start="2355:9" pos:end="2355:18">case <expr pos:start="2355:14" pos:end="2355:17"><literal type="number" pos:start="2355:14" pos:end="2355:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="2357:13" pos:end="2357:24">/* MAXUB8 */</comment>

            <expr_stmt pos:start="2359:13" pos:end="2359:31"><expr pos:start="2359:13" pos:end="2359:30"><call pos:start="2359:13" pos:end="2359:30"><name pos:start="2359:13" pos:end="2359:25">REQUIRE_AMASK</name><argument_list pos:start="2359:26" pos:end="2359:30">(<argument pos:start="2359:27" pos:end="2359:29"><expr pos:start="2359:27" pos:end="2359:29"><name pos:start="2359:27" pos:end="2359:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2361:13" pos:end="2361:35"><expr pos:start="2361:13" pos:end="2361:34"><name pos:start="2361:13" pos:end="2361:14">va</name> <operator pos:start="2361:16" pos:end="2361:16">=</operator> <call pos:start="2361:18" pos:end="2361:34"><name pos:start="2361:18" pos:end="2361:25">load_gpr</name><argument_list pos:start="2361:26" pos:end="2361:34">(<argument pos:start="2361:27" pos:end="2361:29"><expr pos:start="2361:27" pos:end="2361:29"><name pos:start="2361:27" pos:end="2361:29">ctx</name></expr></argument>, <argument pos:start="2361:32" pos:end="2361:33"><expr pos:start="2361:32" pos:end="2361:33"><name pos:start="2361:32" pos:end="2361:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2363:13" pos:end="2363:42"><expr pos:start="2363:13" pos:end="2363:41"><call pos:start="2363:13" pos:end="2363:41"><name pos:start="2363:13" pos:end="2363:29">gen_helper_maxub8</name><argument_list pos:start="2363:30" pos:end="2363:41">(<argument pos:start="2363:31" pos:end="2363:32"><expr pos:start="2363:31" pos:end="2363:32"><name pos:start="2363:31" pos:end="2363:32">vc</name></expr></argument>, <argument pos:start="2363:35" pos:end="2363:36"><expr pos:start="2363:35" pos:end="2363:36"><name pos:start="2363:35" pos:end="2363:36">va</name></expr></argument>, <argument pos:start="2363:39" pos:end="2363:40"><expr pos:start="2363:39" pos:end="2363:40"><name pos:start="2363:39" pos:end="2363:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2365:13" pos:end="2365:18">break;</break>

        <case pos:start="2367:9" pos:end="2367:18">case <expr pos:start="2367:14" pos:end="2367:17"><literal type="number" pos:start="2367:14" pos:end="2367:17">0x3D</literal></expr>:</case>

            <comment type="block" pos:start="2369:13" pos:end="2369:24">/* MAXUW4 */</comment>

            <expr_stmt pos:start="2371:13" pos:end="2371:31"><expr pos:start="2371:13" pos:end="2371:30"><call pos:start="2371:13" pos:end="2371:30"><name pos:start="2371:13" pos:end="2371:25">REQUIRE_AMASK</name><argument_list pos:start="2371:26" pos:end="2371:30">(<argument pos:start="2371:27" pos:end="2371:29"><expr pos:start="2371:27" pos:end="2371:29"><name pos:start="2371:27" pos:end="2371:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2373:13" pos:end="2373:35"><expr pos:start="2373:13" pos:end="2373:34"><name pos:start="2373:13" pos:end="2373:14">va</name> <operator pos:start="2373:16" pos:end="2373:16">=</operator> <call pos:start="2373:18" pos:end="2373:34"><name pos:start="2373:18" pos:end="2373:25">load_gpr</name><argument_list pos:start="2373:26" pos:end="2373:34">(<argument pos:start="2373:27" pos:end="2373:29"><expr pos:start="2373:27" pos:end="2373:29"><name pos:start="2373:27" pos:end="2373:29">ctx</name></expr></argument>, <argument pos:start="2373:32" pos:end="2373:33"><expr pos:start="2373:32" pos:end="2373:33"><name pos:start="2373:32" pos:end="2373:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2375:13" pos:end="2375:42"><expr pos:start="2375:13" pos:end="2375:41"><call pos:start="2375:13" pos:end="2375:41"><name pos:start="2375:13" pos:end="2375:29">gen_helper_maxuw4</name><argument_list pos:start="2375:30" pos:end="2375:41">(<argument pos:start="2375:31" pos:end="2375:32"><expr pos:start="2375:31" pos:end="2375:32"><name pos:start="2375:31" pos:end="2375:32">vc</name></expr></argument>, <argument pos:start="2375:35" pos:end="2375:36"><expr pos:start="2375:35" pos:end="2375:36"><name pos:start="2375:35" pos:end="2375:36">va</name></expr></argument>, <argument pos:start="2375:39" pos:end="2375:40"><expr pos:start="2375:39" pos:end="2375:40"><name pos:start="2375:39" pos:end="2375:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2377:13" pos:end="2377:18">break;</break>

        <case pos:start="2379:9" pos:end="2379:18">case <expr pos:start="2379:14" pos:end="2379:17"><literal type="number" pos:start="2379:14" pos:end="2379:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="2381:13" pos:end="2381:24">/* MAXSB8 */</comment>

            <expr_stmt pos:start="2383:13" pos:end="2383:31"><expr pos:start="2383:13" pos:end="2383:30"><call pos:start="2383:13" pos:end="2383:30"><name pos:start="2383:13" pos:end="2383:25">REQUIRE_AMASK</name><argument_list pos:start="2383:26" pos:end="2383:30">(<argument pos:start="2383:27" pos:end="2383:29"><expr pos:start="2383:27" pos:end="2383:29"><name pos:start="2383:27" pos:end="2383:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2385:13" pos:end="2385:35"><expr pos:start="2385:13" pos:end="2385:34"><name pos:start="2385:13" pos:end="2385:14">va</name> <operator pos:start="2385:16" pos:end="2385:16">=</operator> <call pos:start="2385:18" pos:end="2385:34"><name pos:start="2385:18" pos:end="2385:25">load_gpr</name><argument_list pos:start="2385:26" pos:end="2385:34">(<argument pos:start="2385:27" pos:end="2385:29"><expr pos:start="2385:27" pos:end="2385:29"><name pos:start="2385:27" pos:end="2385:29">ctx</name></expr></argument>, <argument pos:start="2385:32" pos:end="2385:33"><expr pos:start="2385:32" pos:end="2385:33"><name pos:start="2385:32" pos:end="2385:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2387:13" pos:end="2387:42"><expr pos:start="2387:13" pos:end="2387:41"><call pos:start="2387:13" pos:end="2387:41"><name pos:start="2387:13" pos:end="2387:29">gen_helper_maxsb8</name><argument_list pos:start="2387:30" pos:end="2387:41">(<argument pos:start="2387:31" pos:end="2387:32"><expr pos:start="2387:31" pos:end="2387:32"><name pos:start="2387:31" pos:end="2387:32">vc</name></expr></argument>, <argument pos:start="2387:35" pos:end="2387:36"><expr pos:start="2387:35" pos:end="2387:36"><name pos:start="2387:35" pos:end="2387:36">va</name></expr></argument>, <argument pos:start="2387:39" pos:end="2387:40"><expr pos:start="2387:39" pos:end="2387:40"><name pos:start="2387:39" pos:end="2387:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2389:13" pos:end="2389:18">break;</break>

        <case pos:start="2391:9" pos:end="2391:18">case <expr pos:start="2391:14" pos:end="2391:17"><literal type="number" pos:start="2391:14" pos:end="2391:17">0x3F</literal></expr>:</case>

            <comment type="block" pos:start="2393:13" pos:end="2393:24">/* MAXSW4 */</comment>

            <expr_stmt pos:start="2395:13" pos:end="2395:31"><expr pos:start="2395:13" pos:end="2395:30"><call pos:start="2395:13" pos:end="2395:30"><name pos:start="2395:13" pos:end="2395:25">REQUIRE_AMASK</name><argument_list pos:start="2395:26" pos:end="2395:30">(<argument pos:start="2395:27" pos:end="2395:29"><expr pos:start="2395:27" pos:end="2395:29"><name pos:start="2395:27" pos:end="2395:29">MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2397:13" pos:end="2397:35"><expr pos:start="2397:13" pos:end="2397:34"><name pos:start="2397:13" pos:end="2397:14">va</name> <operator pos:start="2397:16" pos:end="2397:16">=</operator> <call pos:start="2397:18" pos:end="2397:34"><name pos:start="2397:18" pos:end="2397:25">load_gpr</name><argument_list pos:start="2397:26" pos:end="2397:34">(<argument pos:start="2397:27" pos:end="2397:29"><expr pos:start="2397:27" pos:end="2397:29"><name pos:start="2397:27" pos:end="2397:29">ctx</name></expr></argument>, <argument pos:start="2397:32" pos:end="2397:33"><expr pos:start="2397:32" pos:end="2397:33"><name pos:start="2397:32" pos:end="2397:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2399:13" pos:end="2399:42"><expr pos:start="2399:13" pos:end="2399:41"><call pos:start="2399:13" pos:end="2399:41"><name pos:start="2399:13" pos:end="2399:29">gen_helper_maxsw4</name><argument_list pos:start="2399:30" pos:end="2399:41">(<argument pos:start="2399:31" pos:end="2399:32"><expr pos:start="2399:31" pos:end="2399:32"><name pos:start="2399:31" pos:end="2399:32">vc</name></expr></argument>, <argument pos:start="2399:35" pos:end="2399:36"><expr pos:start="2399:35" pos:end="2399:36"><name pos:start="2399:35" pos:end="2399:36">va</name></expr></argument>, <argument pos:start="2399:39" pos:end="2399:40"><expr pos:start="2399:39" pos:end="2399:40"><name pos:start="2399:39" pos:end="2399:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2401:13" pos:end="2401:18">break;</break>

        <default pos:start="2403:9" pos:end="2403:16">default:</default>

            <goto pos:start="2405:13" pos:end="2405:29">goto <name pos:start="2405:18" pos:end="2405:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="2409:9" pos:end="2409:14">break;</break>



    <case pos:start="2413:5" pos:end="2418:0">case <expr pos:start="2413:10" pos:end="2413:13"><literal type="number" pos:start="2413:10" pos:end="2413:13">0x1D</literal></expr>:</case>

        <comment type="block" pos:start="2415:9" pos:end="2415:31">/* HW_MTPR (PALcode) */</comment>

<cpp:ifndef pos:start="2417:1" pos:end="2417:24">#<cpp:directive pos:start="2417:2" pos:end="2417:7">ifndef</cpp:directive> <name pos:start="2417:9" pos:end="2417:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="2419:9" pos:end="2419:43"><expr pos:start="2419:9" pos:end="2419:42"><call pos:start="2419:9" pos:end="2419:42"><name pos:start="2419:9" pos:end="2419:23">REQUIRE_TB_FLAG</name><argument_list pos:start="2419:24" pos:end="2419:42">(<argument pos:start="2419:25" pos:end="2419:41"><expr pos:start="2419:25" pos:end="2419:41"><name pos:start="2419:25" pos:end="2419:41">ENV_FLAG_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2421:9" pos:end="2421:31"><expr pos:start="2421:9" pos:end="2421:30"><name pos:start="2421:9" pos:end="2421:10">vb</name> <operator pos:start="2421:12" pos:end="2421:12">=</operator> <call pos:start="2421:14" pos:end="2421:30"><name pos:start="2421:14" pos:end="2421:21">load_gpr</name><argument_list pos:start="2421:22" pos:end="2421:30">(<argument pos:start="2421:23" pos:end="2421:25"><expr pos:start="2421:23" pos:end="2421:25"><name pos:start="2421:23" pos:end="2421:25">ctx</name></expr></argument>, <argument pos:start="2421:28" pos:end="2421:29"><expr pos:start="2421:28" pos:end="2421:29"><name pos:start="2421:28" pos:end="2421:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2423:9" pos:end="2423:47"><expr pos:start="2423:9" pos:end="2423:46"><name pos:start="2423:9" pos:end="2423:11">ret</name> <operator pos:start="2423:13" pos:end="2423:13">=</operator> <call pos:start="2423:15" pos:end="2423:46"><name pos:start="2423:15" pos:end="2423:22">gen_mtpr</name><argument_list pos:start="2423:23" pos:end="2423:46">(<argument pos:start="2423:24" pos:end="2423:26"><expr pos:start="2423:24" pos:end="2423:26"><name pos:start="2423:24" pos:end="2423:26">ctx</name></expr></argument>, <argument pos:start="2423:29" pos:end="2423:30"><expr pos:start="2423:29" pos:end="2423:30"><name pos:start="2423:29" pos:end="2423:30">vb</name></expr></argument>, <argument pos:start="2423:33" pos:end="2423:45"><expr pos:start="2423:33" pos:end="2423:45"><name pos:start="2423:33" pos:end="2423:36">insn</name> <operator pos:start="2423:38" pos:end="2423:38">&amp;</operator> <literal type="number" pos:start="2423:40" pos:end="2423:45">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2425:9" pos:end="2428:0">break;</break>

<cpp:else pos:start="2427:1" pos:end="2427:5">#<cpp:directive pos:start="2427:2" pos:end="2427:5">else</cpp:directive></cpp:else>

        <goto pos:start="2429:9" pos:end="2432:0">goto <name pos:start="2429:14" pos:end="2429:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="2431:1" pos:end="2431:6">#<cpp:directive pos:start="2431:2" pos:end="2431:6">endif</cpp:directive></cpp:endif>



    <case pos:start="2435:5" pos:end="2440:0">case <expr pos:start="2435:10" pos:end="2435:13"><literal type="number" pos:start="2435:10" pos:end="2435:13">0x1E</literal></expr>:</case>

        <comment type="block" pos:start="2437:9" pos:end="2437:30">/* HW_RET (PALcode) */</comment>

<cpp:ifndef pos:start="2439:1" pos:end="2439:24">#<cpp:directive pos:start="2439:2" pos:end="2439:7">ifndef</cpp:directive> <name pos:start="2439:9" pos:end="2439:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="2441:9" pos:end="2441:43"><expr pos:start="2441:9" pos:end="2441:42"><call pos:start="2441:9" pos:end="2441:42"><name pos:start="2441:9" pos:end="2441:23">REQUIRE_TB_FLAG</name><argument_list pos:start="2441:24" pos:end="2441:42">(<argument pos:start="2441:25" pos:end="2441:41"><expr pos:start="2441:25" pos:end="2441:41"><name pos:start="2441:25" pos:end="2441:41">ENV_FLAG_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="2443:9" pos:end="2459:9"><if pos:start="2443:9" pos:end="2455:9">if <condition pos:start="2443:12" pos:end="2443:21">(<expr pos:start="2443:13" pos:end="2443:20"><name pos:start="2443:13" pos:end="2443:14">rb</name> <operator pos:start="2443:16" pos:end="2443:17">==</operator> <literal type="number" pos:start="2443:19" pos:end="2443:20">31</literal></expr>)</condition> <block pos:start="2443:23" pos:end="2455:9">{<block_content pos:start="2451:13" pos:end="2453:75">

            <comment type="block" pos:start="2445:13" pos:end="2449:63">/* Pre-EV6 CPUs interpreted this as HW_REI, loading the return

               address from EXC_ADDR.  This turns out to be useful for our

               emulation PALcode, so continue to accept it.  */</comment>

            <expr_stmt pos:start="2451:13" pos:end="2451:43"><expr pos:start="2451:13" pos:end="2451:42"><name pos:start="2451:13" pos:end="2451:20"><name pos:start="2451:13" pos:end="2451:15">ctx</name><operator pos:start="2451:16" pos:end="2451:17">-&gt;</operator><name pos:start="2451:18" pos:end="2451:20">lit</name></name> <operator pos:start="2451:22" pos:end="2451:22">=</operator> <name pos:start="2451:24" pos:end="2451:25">vb</name> <operator pos:start="2451:27" pos:end="2451:27">=</operator> <call pos:start="2451:29" pos:end="2451:42"><name pos:start="2451:29" pos:end="2451:40">tcg_temp_new</name><argument_list pos:start="2451:41" pos:end="2451:42">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2453:13" pos:end="2453:75"><expr pos:start="2453:13" pos:end="2453:74"><call pos:start="2453:13" pos:end="2453:74"><name pos:start="2453:13" pos:end="2453:26">tcg_gen_ld_i64</name><argument_list pos:start="2453:27" pos:end="2453:74">(<argument pos:start="2453:28" pos:end="2453:29"><expr pos:start="2453:28" pos:end="2453:29"><name pos:start="2453:28" pos:end="2453:29">vb</name></expr></argument>, <argument pos:start="2453:32" pos:end="2453:38"><expr pos:start="2453:32" pos:end="2453:38"><name pos:start="2453:32" pos:end="2453:38">cpu_env</name></expr></argument>, <argument pos:start="2453:41" pos:end="2453:73"><expr pos:start="2453:41" pos:end="2453:73"><call pos:start="2453:41" pos:end="2453:73"><name pos:start="2453:41" pos:end="2453:48">offsetof</name><argument_list pos:start="2453:49" pos:end="2453:73">(<argument pos:start="2453:50" pos:end="2453:62"><expr pos:start="2453:50" pos:end="2453:62"><name pos:start="2453:50" pos:end="2453:62">CPUAlphaState</name></expr></argument>, <argument pos:start="2453:65" pos:end="2453:72"><expr pos:start="2453:65" pos:end="2453:72"><name pos:start="2453:65" pos:end="2453:72">exc_addr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="2455:11" pos:end="2459:9">else <block pos:start="2455:16" pos:end="2459:9">{<block_content pos:start="2457:13" pos:end="2457:35">

            <expr_stmt pos:start="2457:13" pos:end="2457:35"><expr pos:start="2457:13" pos:end="2457:34"><name pos:start="2457:13" pos:end="2457:14">vb</name> <operator pos:start="2457:16" pos:end="2457:16">=</operator> <call pos:start="2457:18" pos:end="2457:34"><name pos:start="2457:18" pos:end="2457:25">load_gpr</name><argument_list pos:start="2457:26" pos:end="2457:34">(<argument pos:start="2457:27" pos:end="2457:29"><expr pos:start="2457:27" pos:end="2457:29"><name pos:start="2457:27" pos:end="2457:29">ctx</name></expr></argument>, <argument pos:start="2457:32" pos:end="2457:33"><expr pos:start="2457:32" pos:end="2457:33"><name pos:start="2457:32" pos:end="2457:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="2461:9" pos:end="2461:44"><expr pos:start="2461:9" pos:end="2461:43"><call pos:start="2461:9" pos:end="2461:43"><name pos:start="2461:9" pos:end="2461:24">tcg_gen_movi_i64</name><argument_list pos:start="2461:25" pos:end="2461:43">(<argument pos:start="2461:26" pos:end="2461:38"><expr pos:start="2461:26" pos:end="2461:38"><name pos:start="2461:26" pos:end="2461:38">cpu_lock_addr</name></expr></argument>, <argument pos:start="2461:41" pos:end="2461:42"><expr pos:start="2461:41" pos:end="2461:42"><operator pos:start="2461:41" pos:end="2461:41">-</operator><literal type="number" pos:start="2461:42" pos:end="2461:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2463:9" pos:end="2463:29"><expr pos:start="2463:9" pos:end="2463:28"><name pos:start="2463:9" pos:end="2463:11">tmp</name> <operator pos:start="2463:13" pos:end="2463:13">=</operator> <call pos:start="2463:15" pos:end="2463:28"><name pos:start="2463:15" pos:end="2463:26">tcg_temp_new</name><argument_list pos:start="2463:27" pos:end="2463:28">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2465:9" pos:end="2465:33"><expr pos:start="2465:9" pos:end="2465:32"><call pos:start="2465:9" pos:end="2465:32"><name pos:start="2465:9" pos:end="2465:24">tcg_gen_movi_i64</name><argument_list pos:start="2465:25" pos:end="2465:32">(<argument pos:start="2465:26" pos:end="2465:28"><expr pos:start="2465:26" pos:end="2465:28"><name pos:start="2465:26" pos:end="2465:28">tmp</name></expr></argument>, <argument pos:start="2465:31" pos:end="2465:31"><expr pos:start="2465:31" pos:end="2465:31"><literal type="number" pos:start="2465:31" pos:end="2465:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2467:9" pos:end="2467:45"><expr pos:start="2467:9" pos:end="2467:44"><call pos:start="2467:9" pos:end="2467:44"><name pos:start="2467:9" pos:end="2467:20">st_flag_byte</name><argument_list pos:start="2467:21" pos:end="2467:44">(<argument pos:start="2467:22" pos:end="2467:24"><expr pos:start="2467:22" pos:end="2467:24"><name pos:start="2467:22" pos:end="2467:24">tmp</name></expr></argument>, <argument pos:start="2467:27" pos:end="2467:43"><expr pos:start="2467:27" pos:end="2467:43"><name pos:start="2467:27" pos:end="2467:43">ENV_FLAG_RX_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2469:9" pos:end="2469:37"><expr pos:start="2469:9" pos:end="2469:36"><call pos:start="2469:9" pos:end="2469:36"><name pos:start="2469:9" pos:end="2469:24">tcg_gen_andi_i64</name><argument_list pos:start="2469:25" pos:end="2469:36">(<argument pos:start="2469:26" pos:end="2469:28"><expr pos:start="2469:26" pos:end="2469:28"><name pos:start="2469:26" pos:end="2469:28">tmp</name></expr></argument>, <argument pos:start="2469:31" pos:end="2469:32"><expr pos:start="2469:31" pos:end="2469:32"><name pos:start="2469:31" pos:end="2469:32">vb</name></expr></argument>, <argument pos:start="2469:35" pos:end="2469:35"><expr pos:start="2469:35" pos:end="2469:35"><literal type="number" pos:start="2469:35" pos:end="2469:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2471:9" pos:end="2471:46"><expr pos:start="2471:9" pos:end="2471:45"><call pos:start="2471:9" pos:end="2471:45"><name pos:start="2471:9" pos:end="2471:20">st_flag_byte</name><argument_list pos:start="2471:21" pos:end="2471:45">(<argument pos:start="2471:22" pos:end="2471:24"><expr pos:start="2471:22" pos:end="2471:24"><name pos:start="2471:22" pos:end="2471:24">tmp</name></expr></argument>, <argument pos:start="2471:27" pos:end="2471:44"><expr pos:start="2471:27" pos:end="2471:44"><name pos:start="2471:27" pos:end="2471:44">ENV_FLAG_PAL_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2473:9" pos:end="2473:27"><expr pos:start="2473:9" pos:end="2473:26"><call pos:start="2473:9" pos:end="2473:26"><name pos:start="2473:9" pos:end="2473:21">tcg_temp_free</name><argument_list pos:start="2473:22" pos:end="2473:26">(<argument pos:start="2473:23" pos:end="2473:25"><expr pos:start="2473:23" pos:end="2473:25"><name pos:start="2473:23" pos:end="2473:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2475:9" pos:end="2475:41"><expr pos:start="2475:9" pos:end="2475:40"><call pos:start="2475:9" pos:end="2475:40"><name pos:start="2475:9" pos:end="2475:24">tcg_gen_andi_i64</name><argument_list pos:start="2475:25" pos:end="2475:40">(<argument pos:start="2475:26" pos:end="2475:31"><expr pos:start="2475:26" pos:end="2475:31"><name pos:start="2475:26" pos:end="2475:31">cpu_pc</name></expr></argument>, <argument pos:start="2475:34" pos:end="2475:35"><expr pos:start="2475:34" pos:end="2475:35"><name pos:start="2475:34" pos:end="2475:35">vb</name></expr></argument>, <argument pos:start="2475:38" pos:end="2475:39"><expr pos:start="2475:38" pos:end="2475:39"><operator pos:start="2475:38" pos:end="2475:38">~</operator><literal type="number" pos:start="2475:39" pos:end="2475:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="2477:9" pos:end="2477:60">/* Allow interrupts to be recognized right away.  */</comment>

        <expr_stmt pos:start="2479:9" pos:end="2479:39"><expr pos:start="2479:9" pos:end="2479:38"><name pos:start="2479:9" pos:end="2479:11">ret</name> <operator pos:start="2479:13" pos:end="2479:13">=</operator> <name pos:start="2479:15" pos:end="2479:38">DISAS_PC_UPDATED_NOCHAIN</name></expr>;</expr_stmt>

        <break pos:start="2481:9" pos:end="2484:0">break;</break>

<cpp:else pos:start="2483:1" pos:end="2483:5">#<cpp:directive pos:start="2483:2" pos:end="2483:5">else</cpp:directive></cpp:else>

        <goto pos:start="2485:9" pos:end="2488:0">goto <name pos:start="2485:14" pos:end="2485:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="2487:1" pos:end="2487:6">#<cpp:directive pos:start="2487:2" pos:end="2487:6">endif</cpp:directive></cpp:endif>



    <case pos:start="2491:5" pos:end="2496:0">case <expr pos:start="2491:10" pos:end="2491:13"><literal type="number" pos:start="2491:10" pos:end="2491:13">0x1F</literal></expr>:</case>

        <comment type="block" pos:start="2493:9" pos:end="2493:29">/* HW_ST (PALcode) */</comment>

<cpp:ifndef pos:start="2495:1" pos:end="2495:24">#<cpp:directive pos:start="2495:2" pos:end="2495:7">ifndef</cpp:directive> <name pos:start="2495:9" pos:end="2495:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="2497:9" pos:end="2497:43"><expr pos:start="2497:9" pos:end="2497:42"><call pos:start="2497:9" pos:end="2497:42"><name pos:start="2497:9" pos:end="2497:23">REQUIRE_TB_FLAG</name><argument_list pos:start="2497:24" pos:end="2497:42">(<argument pos:start="2497:25" pos:end="2497:41"><expr pos:start="2497:25" pos:end="2497:41"><name pos:start="2497:25" pos:end="2497:41">ENV_FLAG_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2499:9" pos:end="2638:0">{<block_content pos:start="2501:13" pos:end="2633:18">

            <switch pos:start="2501:13" pos:end="2631:13">switch <condition pos:start="2501:20" pos:end="2501:39">(<expr pos:start="2501:21" pos:end="2501:38"><operator pos:start="2501:21" pos:end="2501:21">(</operator><name pos:start="2501:22" pos:end="2501:25">insn</name> <operator pos:start="2501:27" pos:end="2501:28">&gt;&gt;</operator> <literal type="number" pos:start="2501:30" pos:end="2501:31">12</literal><operator pos:start="2501:32" pos:end="2501:32">)</operator> <operator pos:start="2501:34" pos:end="2501:34">&amp;</operator> <literal type="number" pos:start="2501:36" pos:end="2501:38">0xF</literal></expr>)</condition> <block pos:start="2501:41" pos:end="2631:13">{<block_content pos:start="2503:13" pos:end="2629:33">

            <case pos:start="2503:13" pos:end="2503:21">case <expr pos:start="2503:18" pos:end="2503:20"><literal type="number" pos:start="2503:18" pos:end="2503:20">0x0</literal></expr>:</case>

                <comment type="block" pos:start="2505:17" pos:end="2505:46">/* Longword physical access */</comment>

                <expr_stmt pos:start="2507:17" pos:end="2507:39"><expr pos:start="2507:17" pos:end="2507:38"><name pos:start="2507:17" pos:end="2507:18">va</name> <operator pos:start="2507:20" pos:end="2507:20">=</operator> <call pos:start="2507:22" pos:end="2507:38"><name pos:start="2507:22" pos:end="2507:29">load_gpr</name><argument_list pos:start="2507:30" pos:end="2507:38">(<argument pos:start="2507:31" pos:end="2507:33"><expr pos:start="2507:31" pos:end="2507:33"><name pos:start="2507:31" pos:end="2507:33">ctx</name></expr></argument>, <argument pos:start="2507:36" pos:end="2507:37"><expr pos:start="2507:36" pos:end="2507:37"><name pos:start="2507:36" pos:end="2507:37">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2509:17" pos:end="2509:39"><expr pos:start="2509:17" pos:end="2509:38"><name pos:start="2509:17" pos:end="2509:18">vb</name> <operator pos:start="2509:20" pos:end="2509:20">=</operator> <call pos:start="2509:22" pos:end="2509:38"><name pos:start="2509:22" pos:end="2509:29">load_gpr</name><argument_list pos:start="2509:30" pos:end="2509:38">(<argument pos:start="2509:31" pos:end="2509:33"><expr pos:start="2509:31" pos:end="2509:33"><name pos:start="2509:31" pos:end="2509:33">ctx</name></expr></argument>, <argument pos:start="2509:36" pos:end="2509:37"><expr pos:start="2509:36" pos:end="2509:37"><name pos:start="2509:36" pos:end="2509:37">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2511:17" pos:end="2511:37"><expr pos:start="2511:17" pos:end="2511:36"><name pos:start="2511:17" pos:end="2511:19">tmp</name> <operator pos:start="2511:21" pos:end="2511:21">=</operator> <call pos:start="2511:23" pos:end="2511:36"><name pos:start="2511:23" pos:end="2511:34">tcg_temp_new</name><argument_list pos:start="2511:35" pos:end="2511:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2513:17" pos:end="2513:50"><expr pos:start="2513:17" pos:end="2513:49"><call pos:start="2513:17" pos:end="2513:49"><name pos:start="2513:17" pos:end="2513:32">tcg_gen_addi_i64</name><argument_list pos:start="2513:33" pos:end="2513:49">(<argument pos:start="2513:34" pos:end="2513:36"><expr pos:start="2513:34" pos:end="2513:36"><name pos:start="2513:34" pos:end="2513:36">tmp</name></expr></argument>, <argument pos:start="2513:39" pos:end="2513:40"><expr pos:start="2513:39" pos:end="2513:40"><name pos:start="2513:39" pos:end="2513:40">vb</name></expr></argument>, <argument pos:start="2513:43" pos:end="2513:48"><expr pos:start="2513:43" pos:end="2513:48"><name pos:start="2513:43" pos:end="2513:48">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2515:17" pos:end="2515:68"><expr pos:start="2515:17" pos:end="2515:67"><call pos:start="2515:17" pos:end="2515:67"><name pos:start="2515:17" pos:end="2515:35">tcg_gen_qemu_st_i64</name><argument_list pos:start="2515:36" pos:end="2515:67">(<argument pos:start="2515:37" pos:end="2515:38"><expr pos:start="2515:37" pos:end="2515:38"><name pos:start="2515:37" pos:end="2515:38">va</name></expr></argument>, <argument pos:start="2515:41" pos:end="2515:43"><expr pos:start="2515:41" pos:end="2515:43"><name pos:start="2515:41" pos:end="2515:43">tmp</name></expr></argument>, <argument pos:start="2515:46" pos:end="2515:57"><expr pos:start="2515:46" pos:end="2515:57"><name pos:start="2515:46" pos:end="2515:57">MMU_PHYS_IDX</name></expr></argument>, <argument pos:start="2515:60" pos:end="2515:66"><expr pos:start="2515:60" pos:end="2515:66"><name pos:start="2515:60" pos:end="2515:66">MO_LESL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2517:17" pos:end="2517:35"><expr pos:start="2517:17" pos:end="2517:34"><call pos:start="2517:17" pos:end="2517:34"><name pos:start="2517:17" pos:end="2517:29">tcg_temp_free</name><argument_list pos:start="2517:30" pos:end="2517:34">(<argument pos:start="2517:31" pos:end="2517:33"><expr pos:start="2517:31" pos:end="2517:33"><name pos:start="2517:31" pos:end="2517:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2519:17" pos:end="2519:22">break;</break>

            <case pos:start="2521:13" pos:end="2521:21">case <expr pos:start="2521:18" pos:end="2521:20"><literal type="number" pos:start="2521:18" pos:end="2521:20">0x1</literal></expr>:</case>

                <comment type="block" pos:start="2523:17" pos:end="2523:46">/* Quadword physical access */</comment>

                <expr_stmt pos:start="2525:17" pos:end="2525:39"><expr pos:start="2525:17" pos:end="2525:38"><name pos:start="2525:17" pos:end="2525:18">va</name> <operator pos:start="2525:20" pos:end="2525:20">=</operator> <call pos:start="2525:22" pos:end="2525:38"><name pos:start="2525:22" pos:end="2525:29">load_gpr</name><argument_list pos:start="2525:30" pos:end="2525:38">(<argument pos:start="2525:31" pos:end="2525:33"><expr pos:start="2525:31" pos:end="2525:33"><name pos:start="2525:31" pos:end="2525:33">ctx</name></expr></argument>, <argument pos:start="2525:36" pos:end="2525:37"><expr pos:start="2525:36" pos:end="2525:37"><name pos:start="2525:36" pos:end="2525:37">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2527:17" pos:end="2527:39"><expr pos:start="2527:17" pos:end="2527:38"><name pos:start="2527:17" pos:end="2527:18">vb</name> <operator pos:start="2527:20" pos:end="2527:20">=</operator> <call pos:start="2527:22" pos:end="2527:38"><name pos:start="2527:22" pos:end="2527:29">load_gpr</name><argument_list pos:start="2527:30" pos:end="2527:38">(<argument pos:start="2527:31" pos:end="2527:33"><expr pos:start="2527:31" pos:end="2527:33"><name pos:start="2527:31" pos:end="2527:33">ctx</name></expr></argument>, <argument pos:start="2527:36" pos:end="2527:37"><expr pos:start="2527:36" pos:end="2527:37"><name pos:start="2527:36" pos:end="2527:37">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2529:17" pos:end="2529:37"><expr pos:start="2529:17" pos:end="2529:36"><name pos:start="2529:17" pos:end="2529:19">tmp</name> <operator pos:start="2529:21" pos:end="2529:21">=</operator> <call pos:start="2529:23" pos:end="2529:36"><name pos:start="2529:23" pos:end="2529:34">tcg_temp_new</name><argument_list pos:start="2529:35" pos:end="2529:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2531:17" pos:end="2531:50"><expr pos:start="2531:17" pos:end="2531:49"><call pos:start="2531:17" pos:end="2531:49"><name pos:start="2531:17" pos:end="2531:32">tcg_gen_addi_i64</name><argument_list pos:start="2531:33" pos:end="2531:49">(<argument pos:start="2531:34" pos:end="2531:36"><expr pos:start="2531:34" pos:end="2531:36"><name pos:start="2531:34" pos:end="2531:36">tmp</name></expr></argument>, <argument pos:start="2531:39" pos:end="2531:40"><expr pos:start="2531:39" pos:end="2531:40"><name pos:start="2531:39" pos:end="2531:40">vb</name></expr></argument>, <argument pos:start="2531:43" pos:end="2531:48"><expr pos:start="2531:43" pos:end="2531:48"><name pos:start="2531:43" pos:end="2531:48">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2533:17" pos:end="2533:67"><expr pos:start="2533:17" pos:end="2533:66"><call pos:start="2533:17" pos:end="2533:66"><name pos:start="2533:17" pos:end="2533:35">tcg_gen_qemu_st_i64</name><argument_list pos:start="2533:36" pos:end="2533:66">(<argument pos:start="2533:37" pos:end="2533:38"><expr pos:start="2533:37" pos:end="2533:38"><name pos:start="2533:37" pos:end="2533:38">va</name></expr></argument>, <argument pos:start="2533:41" pos:end="2533:43"><expr pos:start="2533:41" pos:end="2533:43"><name pos:start="2533:41" pos:end="2533:43">tmp</name></expr></argument>, <argument pos:start="2533:46" pos:end="2533:57"><expr pos:start="2533:46" pos:end="2533:57"><name pos:start="2533:46" pos:end="2533:57">MMU_PHYS_IDX</name></expr></argument>, <argument pos:start="2533:60" pos:end="2533:65"><expr pos:start="2533:60" pos:end="2533:65"><name pos:start="2533:60" pos:end="2533:65">MO_LEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2535:17" pos:end="2535:35"><expr pos:start="2535:17" pos:end="2535:34"><call pos:start="2535:17" pos:end="2535:34"><name pos:start="2535:17" pos:end="2535:29">tcg_temp_free</name><argument_list pos:start="2535:30" pos:end="2535:34">(<argument pos:start="2535:31" pos:end="2535:33"><expr pos:start="2535:31" pos:end="2535:33"><name pos:start="2535:31" pos:end="2535:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2537:17" pos:end="2537:22">break;</break>

            <case pos:start="2539:13" pos:end="2539:21">case <expr pos:start="2539:18" pos:end="2539:20"><literal type="number" pos:start="2539:18" pos:end="2539:20">0x2</literal></expr>:</case>

                <comment type="block" pos:start="2541:17" pos:end="2541:56">/* Longword physical access with lock */</comment>

                <expr_stmt pos:start="2543:17" pos:end="2545:67"><expr pos:start="2543:17" pos:end="2545:66"><name pos:start="2543:17" pos:end="2543:19">ret</name> <operator pos:start="2543:21" pos:end="2543:21">=</operator> <call pos:start="2543:23" pos:end="2545:66"><name pos:start="2543:23" pos:end="2543:43">gen_store_conditional</name><argument_list pos:start="2543:44" pos:end="2545:66">(<argument pos:start="2543:45" pos:end="2543:47"><expr pos:start="2543:45" pos:end="2543:47"><name pos:start="2543:45" pos:end="2543:47">ctx</name></expr></argument>, <argument pos:start="2543:50" pos:end="2543:51"><expr pos:start="2543:50" pos:end="2543:51"><name pos:start="2543:50" pos:end="2543:51">ra</name></expr></argument>, <argument pos:start="2543:54" pos:end="2543:55"><expr pos:start="2543:54" pos:end="2543:55"><name pos:start="2543:54" pos:end="2543:55">rb</name></expr></argument>, <argument pos:start="2543:58" pos:end="2543:63"><expr pos:start="2543:58" pos:end="2543:63"><name pos:start="2543:58" pos:end="2543:63">disp12</name></expr></argument>,

                                            <argument pos:start="2545:45" pos:end="2545:56"><expr pos:start="2545:45" pos:end="2545:56"><name pos:start="2545:45" pos:end="2545:56">MMU_PHYS_IDX</name></expr></argument>, <argument pos:start="2545:59" pos:end="2545:65"><expr pos:start="2545:59" pos:end="2545:65"><name pos:start="2545:59" pos:end="2545:65">MO_LESL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2547:17" pos:end="2547:22">break;</break>

            <case pos:start="2549:13" pos:end="2549:21">case <expr pos:start="2549:18" pos:end="2549:20"><literal type="number" pos:start="2549:18" pos:end="2549:20">0x3</literal></expr>:</case>

                <comment type="block" pos:start="2551:17" pos:end="2551:56">/* Quadword physical access with lock */</comment>

                <expr_stmt pos:start="2553:17" pos:end="2555:66"><expr pos:start="2553:17" pos:end="2555:65"><name pos:start="2553:17" pos:end="2553:19">ret</name> <operator pos:start="2553:21" pos:end="2553:21">=</operator> <call pos:start="2553:23" pos:end="2555:65"><name pos:start="2553:23" pos:end="2553:43">gen_store_conditional</name><argument_list pos:start="2553:44" pos:end="2555:65">(<argument pos:start="2553:45" pos:end="2553:47"><expr pos:start="2553:45" pos:end="2553:47"><name pos:start="2553:45" pos:end="2553:47">ctx</name></expr></argument>, <argument pos:start="2553:50" pos:end="2553:51"><expr pos:start="2553:50" pos:end="2553:51"><name pos:start="2553:50" pos:end="2553:51">ra</name></expr></argument>, <argument pos:start="2553:54" pos:end="2553:55"><expr pos:start="2553:54" pos:end="2553:55"><name pos:start="2553:54" pos:end="2553:55">rb</name></expr></argument>, <argument pos:start="2553:58" pos:end="2553:63"><expr pos:start="2553:58" pos:end="2553:63"><name pos:start="2553:58" pos:end="2553:63">disp12</name></expr></argument>,

                                            <argument pos:start="2555:45" pos:end="2555:56"><expr pos:start="2555:45" pos:end="2555:56"><name pos:start="2555:45" pos:end="2555:56">MMU_PHYS_IDX</name></expr></argument>, <argument pos:start="2555:59" pos:end="2555:64"><expr pos:start="2555:59" pos:end="2555:64"><name pos:start="2555:59" pos:end="2555:64">MO_LEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2557:17" pos:end="2557:22">break;</break>

            <case pos:start="2559:13" pos:end="2559:21">case <expr pos:start="2559:18" pos:end="2559:20"><literal type="number" pos:start="2559:18" pos:end="2559:20">0x4</literal></expr>:</case>

                <comment type="block" pos:start="2561:17" pos:end="2561:45">/* Longword virtual access */</comment>

                <goto pos:start="2563:17" pos:end="2563:33">goto <name pos:start="2563:22" pos:end="2563:32">invalid_opc</name>;</goto>

            <case pos:start="2565:13" pos:end="2565:21">case <expr pos:start="2565:18" pos:end="2565:20"><literal type="number" pos:start="2565:18" pos:end="2565:20">0x5</literal></expr>:</case>

                <comment type="block" pos:start="2567:17" pos:end="2567:45">/* Quadword virtual access */</comment>

                <goto pos:start="2569:17" pos:end="2569:33">goto <name pos:start="2569:22" pos:end="2569:32">invalid_opc</name>;</goto>

            <case pos:start="2571:13" pos:end="2571:21">case <expr pos:start="2571:18" pos:end="2571:20"><literal type="number" pos:start="2571:18" pos:end="2571:20">0x6</literal></expr>:</case>

                <comment type="block" pos:start="2573:17" pos:end="2573:29">/* Invalid */</comment>

                <goto pos:start="2575:17" pos:end="2575:33">goto <name pos:start="2575:22" pos:end="2575:32">invalid_opc</name>;</goto>

            <case pos:start="2577:13" pos:end="2577:21">case <expr pos:start="2577:18" pos:end="2577:20"><literal type="number" pos:start="2577:18" pos:end="2577:20">0x7</literal></expr>:</case>

                <comment type="block" pos:start="2579:17" pos:end="2579:29">/* Invalid */</comment>

                <goto pos:start="2581:17" pos:end="2581:33">goto <name pos:start="2581:22" pos:end="2581:32">invalid_opc</name>;</goto>

            <case pos:start="2583:13" pos:end="2583:21">case <expr pos:start="2583:18" pos:end="2583:20"><literal type="number" pos:start="2583:18" pos:end="2583:20">0x8</literal></expr>:</case>

                <comment type="block" pos:start="2585:17" pos:end="2585:29">/* Invalid */</comment>

                <goto pos:start="2587:17" pos:end="2587:33">goto <name pos:start="2587:22" pos:end="2587:32">invalid_opc</name>;</goto>

            <case pos:start="2589:13" pos:end="2589:21">case <expr pos:start="2589:18" pos:end="2589:20"><literal type="number" pos:start="2589:18" pos:end="2589:20">0x9</literal></expr>:</case>

                <comment type="block" pos:start="2591:17" pos:end="2591:29">/* Invalid */</comment>

                <goto pos:start="2593:17" pos:end="2593:33">goto <name pos:start="2593:22" pos:end="2593:32">invalid_opc</name>;</goto>

            <case pos:start="2595:13" pos:end="2595:21">case <expr pos:start="2595:18" pos:end="2595:20"><literal type="number" pos:start="2595:18" pos:end="2595:20">0xA</literal></expr>:</case>

                <comment type="block" pos:start="2597:17" pos:end="2597:29">/* Invalid */</comment>

                <goto pos:start="2599:17" pos:end="2599:33">goto <name pos:start="2599:22" pos:end="2599:32">invalid_opc</name>;</goto>

            <case pos:start="2601:13" pos:end="2601:21">case <expr pos:start="2601:18" pos:end="2601:20"><literal type="number" pos:start="2601:18" pos:end="2601:20">0xB</literal></expr>:</case>

                <comment type="block" pos:start="2603:17" pos:end="2603:29">/* Invalid */</comment>

                <goto pos:start="2605:17" pos:end="2605:33">goto <name pos:start="2605:22" pos:end="2605:32">invalid_opc</name>;</goto>

            <case pos:start="2607:13" pos:end="2607:21">case <expr pos:start="2607:18" pos:end="2607:20"><literal type="number" pos:start="2607:18" pos:end="2607:20">0xC</literal></expr>:</case>

                <comment type="block" pos:start="2609:17" pos:end="2609:72">/* Longword virtual access with alternate access mode */</comment>

                <goto pos:start="2611:17" pos:end="2611:33">goto <name pos:start="2611:22" pos:end="2611:32">invalid_opc</name>;</goto>

            <case pos:start="2613:13" pos:end="2613:21">case <expr pos:start="2613:18" pos:end="2613:20"><literal type="number" pos:start="2613:18" pos:end="2613:20">0xD</literal></expr>:</case>

                <comment type="block" pos:start="2615:17" pos:end="2615:72">/* Quadword virtual access with alternate access mode */</comment>

                <goto pos:start="2617:17" pos:end="2617:33">goto <name pos:start="2617:22" pos:end="2617:32">invalid_opc</name>;</goto>

            <case pos:start="2619:13" pos:end="2619:21">case <expr pos:start="2619:18" pos:end="2619:20"><literal type="number" pos:start="2619:18" pos:end="2619:20">0xE</literal></expr>:</case>

                <comment type="block" pos:start="2621:17" pos:end="2621:29">/* Invalid */</comment>

                <goto pos:start="2623:17" pos:end="2623:33">goto <name pos:start="2623:22" pos:end="2623:32">invalid_opc</name>;</goto>

            <case pos:start="2625:13" pos:end="2625:21">case <expr pos:start="2625:18" pos:end="2625:20"><literal type="number" pos:start="2625:18" pos:end="2625:20">0xF</literal></expr>:</case>

                <comment type="block" pos:start="2627:17" pos:end="2627:29">/* Invalid */</comment>

                <goto pos:start="2629:17" pos:end="2629:33">goto <name pos:start="2629:22" pos:end="2629:32">invalid_opc</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="2633:13" pos:end="2633:18">break;</break>

        </block_content>}</block>

<cpp:else pos:start="2637:1" pos:end="2637:5">#<cpp:directive pos:start="2637:2" pos:end="2637:5">else</cpp:directive></cpp:else>

        <goto pos:start="2639:9" pos:end="2642:0">goto <name pos:start="2639:14" pos:end="2639:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="2641:1" pos:end="2641:6">#<cpp:directive pos:start="2641:2" pos:end="2641:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2643:5" pos:end="2643:14">case <expr pos:start="2643:10" pos:end="2643:13"><literal type="number" pos:start="2643:10" pos:end="2643:13">0x20</literal></expr>:</case>

        <comment type="block" pos:start="2645:9" pos:end="2645:17">/* LDF */</comment>

        <expr_stmt pos:start="2647:9" pos:end="2647:63"><expr pos:start="2647:9" pos:end="2647:62"><call pos:start="2647:9" pos:end="2647:62"><name pos:start="2647:9" pos:end="2647:20">gen_load_mem</name><argument_list pos:start="2647:21" pos:end="2647:62">(<argument pos:start="2647:22" pos:end="2647:24"><expr pos:start="2647:22" pos:end="2647:24"><name pos:start="2647:22" pos:end="2647:24">ctx</name></expr></argument>, <argument pos:start="2647:27" pos:end="2647:39"><expr pos:start="2647:27" pos:end="2647:39"><operator pos:start="2647:27" pos:end="2647:27">&amp;</operator><name pos:start="2647:28" pos:end="2647:39">gen_qemu_ldf</name></expr></argument>, <argument pos:start="2647:42" pos:end="2647:43"><expr pos:start="2647:42" pos:end="2647:43"><name pos:start="2647:42" pos:end="2647:43">ra</name></expr></argument>, <argument pos:start="2647:46" pos:end="2647:47"><expr pos:start="2647:46" pos:end="2647:47"><name pos:start="2647:46" pos:end="2647:47">rb</name></expr></argument>, <argument pos:start="2647:50" pos:end="2647:55"><expr pos:start="2647:50" pos:end="2647:55"><name pos:start="2647:50" pos:end="2647:55">disp16</name></expr></argument>, <argument pos:start="2647:58" pos:end="2647:58"><expr pos:start="2647:58" pos:end="2647:58"><literal type="number" pos:start="2647:58" pos:end="2647:58">1</literal></expr></argument>, <argument pos:start="2647:61" pos:end="2647:61"><expr pos:start="2647:61" pos:end="2647:61"><literal type="number" pos:start="2647:61" pos:end="2647:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2649:9" pos:end="2649:14">break;</break>

    <case pos:start="2651:5" pos:end="2651:14">case <expr pos:start="2651:10" pos:end="2651:13"><literal type="number" pos:start="2651:10" pos:end="2651:13">0x21</literal></expr>:</case>

        <comment type="block" pos:start="2653:9" pos:end="2653:17">/* LDG */</comment>

        <expr_stmt pos:start="2655:9" pos:end="2655:63"><expr pos:start="2655:9" pos:end="2655:62"><call pos:start="2655:9" pos:end="2655:62"><name pos:start="2655:9" pos:end="2655:20">gen_load_mem</name><argument_list pos:start="2655:21" pos:end="2655:62">(<argument pos:start="2655:22" pos:end="2655:24"><expr pos:start="2655:22" pos:end="2655:24"><name pos:start="2655:22" pos:end="2655:24">ctx</name></expr></argument>, <argument pos:start="2655:27" pos:end="2655:39"><expr pos:start="2655:27" pos:end="2655:39"><operator pos:start="2655:27" pos:end="2655:27">&amp;</operator><name pos:start="2655:28" pos:end="2655:39">gen_qemu_ldg</name></expr></argument>, <argument pos:start="2655:42" pos:end="2655:43"><expr pos:start="2655:42" pos:end="2655:43"><name pos:start="2655:42" pos:end="2655:43">ra</name></expr></argument>, <argument pos:start="2655:46" pos:end="2655:47"><expr pos:start="2655:46" pos:end="2655:47"><name pos:start="2655:46" pos:end="2655:47">rb</name></expr></argument>, <argument pos:start="2655:50" pos:end="2655:55"><expr pos:start="2655:50" pos:end="2655:55"><name pos:start="2655:50" pos:end="2655:55">disp16</name></expr></argument>, <argument pos:start="2655:58" pos:end="2655:58"><expr pos:start="2655:58" pos:end="2655:58"><literal type="number" pos:start="2655:58" pos:end="2655:58">1</literal></expr></argument>, <argument pos:start="2655:61" pos:end="2655:61"><expr pos:start="2655:61" pos:end="2655:61"><literal type="number" pos:start="2655:61" pos:end="2655:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2657:9" pos:end="2657:14">break;</break>

    <case pos:start="2659:5" pos:end="2659:14">case <expr pos:start="2659:10" pos:end="2659:13"><literal type="number" pos:start="2659:10" pos:end="2659:13">0x22</literal></expr>:</case>

        <comment type="block" pos:start="2661:9" pos:end="2661:17">/* LDS */</comment>

        <expr_stmt pos:start="2663:9" pos:end="2663:63"><expr pos:start="2663:9" pos:end="2663:62"><call pos:start="2663:9" pos:end="2663:62"><name pos:start="2663:9" pos:end="2663:20">gen_load_mem</name><argument_list pos:start="2663:21" pos:end="2663:62">(<argument pos:start="2663:22" pos:end="2663:24"><expr pos:start="2663:22" pos:end="2663:24"><name pos:start="2663:22" pos:end="2663:24">ctx</name></expr></argument>, <argument pos:start="2663:27" pos:end="2663:39"><expr pos:start="2663:27" pos:end="2663:39"><operator pos:start="2663:27" pos:end="2663:27">&amp;</operator><name pos:start="2663:28" pos:end="2663:39">gen_qemu_lds</name></expr></argument>, <argument pos:start="2663:42" pos:end="2663:43"><expr pos:start="2663:42" pos:end="2663:43"><name pos:start="2663:42" pos:end="2663:43">ra</name></expr></argument>, <argument pos:start="2663:46" pos:end="2663:47"><expr pos:start="2663:46" pos:end="2663:47"><name pos:start="2663:46" pos:end="2663:47">rb</name></expr></argument>, <argument pos:start="2663:50" pos:end="2663:55"><expr pos:start="2663:50" pos:end="2663:55"><name pos:start="2663:50" pos:end="2663:55">disp16</name></expr></argument>, <argument pos:start="2663:58" pos:end="2663:58"><expr pos:start="2663:58" pos:end="2663:58"><literal type="number" pos:start="2663:58" pos:end="2663:58">1</literal></expr></argument>, <argument pos:start="2663:61" pos:end="2663:61"><expr pos:start="2663:61" pos:end="2663:61"><literal type="number" pos:start="2663:61" pos:end="2663:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2665:9" pos:end="2665:14">break;</break>

    <case pos:start="2667:5" pos:end="2667:14">case <expr pos:start="2667:10" pos:end="2667:13"><literal type="number" pos:start="2667:10" pos:end="2667:13">0x23</literal></expr>:</case>

        <comment type="block" pos:start="2669:9" pos:end="2669:17">/* LDT */</comment>

        <expr_stmt pos:start="2671:9" pos:end="2671:68"><expr pos:start="2671:9" pos:end="2671:67"><call pos:start="2671:9" pos:end="2671:67"><name pos:start="2671:9" pos:end="2671:20">gen_load_mem</name><argument_list pos:start="2671:21" pos:end="2671:67">(<argument pos:start="2671:22" pos:end="2671:24"><expr pos:start="2671:22" pos:end="2671:24"><name pos:start="2671:22" pos:end="2671:24">ctx</name></expr></argument>, <argument pos:start="2671:27" pos:end="2671:44"><expr pos:start="2671:27" pos:end="2671:44"><operator pos:start="2671:27" pos:end="2671:27">&amp;</operator><name pos:start="2671:28" pos:end="2671:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="2671:47" pos:end="2671:48"><expr pos:start="2671:47" pos:end="2671:48"><name pos:start="2671:47" pos:end="2671:48">ra</name></expr></argument>, <argument pos:start="2671:51" pos:end="2671:52"><expr pos:start="2671:51" pos:end="2671:52"><name pos:start="2671:51" pos:end="2671:52">rb</name></expr></argument>, <argument pos:start="2671:55" pos:end="2671:60"><expr pos:start="2671:55" pos:end="2671:60"><name pos:start="2671:55" pos:end="2671:60">disp16</name></expr></argument>, <argument pos:start="2671:63" pos:end="2671:63"><expr pos:start="2671:63" pos:end="2671:63"><literal type="number" pos:start="2671:63" pos:end="2671:63">1</literal></expr></argument>, <argument pos:start="2671:66" pos:end="2671:66"><expr pos:start="2671:66" pos:end="2671:66"><literal type="number" pos:start="2671:66" pos:end="2671:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2673:9" pos:end="2673:14">break;</break>

    <case pos:start="2675:5" pos:end="2675:14">case <expr pos:start="2675:10" pos:end="2675:13"><literal type="number" pos:start="2675:10" pos:end="2675:13">0x24</literal></expr>:</case>

        <comment type="block" pos:start="2677:9" pos:end="2677:17">/* STF */</comment>

        <expr_stmt pos:start="2679:9" pos:end="2679:64"><expr pos:start="2679:9" pos:end="2679:63"><call pos:start="2679:9" pos:end="2679:63"><name pos:start="2679:9" pos:end="2679:21">gen_store_mem</name><argument_list pos:start="2679:22" pos:end="2679:63">(<argument pos:start="2679:23" pos:end="2679:25"><expr pos:start="2679:23" pos:end="2679:25"><name pos:start="2679:23" pos:end="2679:25">ctx</name></expr></argument>, <argument pos:start="2679:28" pos:end="2679:40"><expr pos:start="2679:28" pos:end="2679:40"><operator pos:start="2679:28" pos:end="2679:28">&amp;</operator><name pos:start="2679:29" pos:end="2679:40">gen_qemu_stf</name></expr></argument>, <argument pos:start="2679:43" pos:end="2679:44"><expr pos:start="2679:43" pos:end="2679:44"><name pos:start="2679:43" pos:end="2679:44">ra</name></expr></argument>, <argument pos:start="2679:47" pos:end="2679:48"><expr pos:start="2679:47" pos:end="2679:48"><name pos:start="2679:47" pos:end="2679:48">rb</name></expr></argument>, <argument pos:start="2679:51" pos:end="2679:56"><expr pos:start="2679:51" pos:end="2679:56"><name pos:start="2679:51" pos:end="2679:56">disp16</name></expr></argument>, <argument pos:start="2679:59" pos:end="2679:59"><expr pos:start="2679:59" pos:end="2679:59"><literal type="number" pos:start="2679:59" pos:end="2679:59">1</literal></expr></argument>, <argument pos:start="2679:62" pos:end="2679:62"><expr pos:start="2679:62" pos:end="2679:62"><literal type="number" pos:start="2679:62" pos:end="2679:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2681:9" pos:end="2681:14">break;</break>

    <case pos:start="2683:5" pos:end="2683:14">case <expr pos:start="2683:10" pos:end="2683:13"><literal type="number" pos:start="2683:10" pos:end="2683:13">0x25</literal></expr>:</case>

        <comment type="block" pos:start="2685:9" pos:end="2685:17">/* STG */</comment>

        <expr_stmt pos:start="2687:9" pos:end="2687:64"><expr pos:start="2687:9" pos:end="2687:63"><call pos:start="2687:9" pos:end="2687:63"><name pos:start="2687:9" pos:end="2687:21">gen_store_mem</name><argument_list pos:start="2687:22" pos:end="2687:63">(<argument pos:start="2687:23" pos:end="2687:25"><expr pos:start="2687:23" pos:end="2687:25"><name pos:start="2687:23" pos:end="2687:25">ctx</name></expr></argument>, <argument pos:start="2687:28" pos:end="2687:40"><expr pos:start="2687:28" pos:end="2687:40"><operator pos:start="2687:28" pos:end="2687:28">&amp;</operator><name pos:start="2687:29" pos:end="2687:40">gen_qemu_stg</name></expr></argument>, <argument pos:start="2687:43" pos:end="2687:44"><expr pos:start="2687:43" pos:end="2687:44"><name pos:start="2687:43" pos:end="2687:44">ra</name></expr></argument>, <argument pos:start="2687:47" pos:end="2687:48"><expr pos:start="2687:47" pos:end="2687:48"><name pos:start="2687:47" pos:end="2687:48">rb</name></expr></argument>, <argument pos:start="2687:51" pos:end="2687:56"><expr pos:start="2687:51" pos:end="2687:56"><name pos:start="2687:51" pos:end="2687:56">disp16</name></expr></argument>, <argument pos:start="2687:59" pos:end="2687:59"><expr pos:start="2687:59" pos:end="2687:59"><literal type="number" pos:start="2687:59" pos:end="2687:59">1</literal></expr></argument>, <argument pos:start="2687:62" pos:end="2687:62"><expr pos:start="2687:62" pos:end="2687:62"><literal type="number" pos:start="2687:62" pos:end="2687:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2689:9" pos:end="2689:14">break;</break>

    <case pos:start="2691:5" pos:end="2691:14">case <expr pos:start="2691:10" pos:end="2691:13"><literal type="number" pos:start="2691:10" pos:end="2691:13">0x26</literal></expr>:</case>

        <comment type="block" pos:start="2693:9" pos:end="2693:17">/* STS */</comment>

        <expr_stmt pos:start="2695:9" pos:end="2695:64"><expr pos:start="2695:9" pos:end="2695:63"><call pos:start="2695:9" pos:end="2695:63"><name pos:start="2695:9" pos:end="2695:21">gen_store_mem</name><argument_list pos:start="2695:22" pos:end="2695:63">(<argument pos:start="2695:23" pos:end="2695:25"><expr pos:start="2695:23" pos:end="2695:25"><name pos:start="2695:23" pos:end="2695:25">ctx</name></expr></argument>, <argument pos:start="2695:28" pos:end="2695:40"><expr pos:start="2695:28" pos:end="2695:40"><operator pos:start="2695:28" pos:end="2695:28">&amp;</operator><name pos:start="2695:29" pos:end="2695:40">gen_qemu_sts</name></expr></argument>, <argument pos:start="2695:43" pos:end="2695:44"><expr pos:start="2695:43" pos:end="2695:44"><name pos:start="2695:43" pos:end="2695:44">ra</name></expr></argument>, <argument pos:start="2695:47" pos:end="2695:48"><expr pos:start="2695:47" pos:end="2695:48"><name pos:start="2695:47" pos:end="2695:48">rb</name></expr></argument>, <argument pos:start="2695:51" pos:end="2695:56"><expr pos:start="2695:51" pos:end="2695:56"><name pos:start="2695:51" pos:end="2695:56">disp16</name></expr></argument>, <argument pos:start="2695:59" pos:end="2695:59"><expr pos:start="2695:59" pos:end="2695:59"><literal type="number" pos:start="2695:59" pos:end="2695:59">1</literal></expr></argument>, <argument pos:start="2695:62" pos:end="2695:62"><expr pos:start="2695:62" pos:end="2695:62"><literal type="number" pos:start="2695:62" pos:end="2695:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2697:9" pos:end="2697:14">break;</break>

    <case pos:start="2699:5" pos:end="2699:14">case <expr pos:start="2699:10" pos:end="2699:13"><literal type="number" pos:start="2699:10" pos:end="2699:13">0x27</literal></expr>:</case>

        <comment type="block" pos:start="2701:9" pos:end="2701:17">/* STT */</comment>

        <expr_stmt pos:start="2703:9" pos:end="2703:69"><expr pos:start="2703:9" pos:end="2703:68"><call pos:start="2703:9" pos:end="2703:68"><name pos:start="2703:9" pos:end="2703:21">gen_store_mem</name><argument_list pos:start="2703:22" pos:end="2703:68">(<argument pos:start="2703:23" pos:end="2703:25"><expr pos:start="2703:23" pos:end="2703:25"><name pos:start="2703:23" pos:end="2703:25">ctx</name></expr></argument>, <argument pos:start="2703:28" pos:end="2703:45"><expr pos:start="2703:28" pos:end="2703:45"><operator pos:start="2703:28" pos:end="2703:28">&amp;</operator><name pos:start="2703:29" pos:end="2703:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="2703:48" pos:end="2703:49"><expr pos:start="2703:48" pos:end="2703:49"><name pos:start="2703:48" pos:end="2703:49">ra</name></expr></argument>, <argument pos:start="2703:52" pos:end="2703:53"><expr pos:start="2703:52" pos:end="2703:53"><name pos:start="2703:52" pos:end="2703:53">rb</name></expr></argument>, <argument pos:start="2703:56" pos:end="2703:61"><expr pos:start="2703:56" pos:end="2703:61"><name pos:start="2703:56" pos:end="2703:61">disp16</name></expr></argument>, <argument pos:start="2703:64" pos:end="2703:64"><expr pos:start="2703:64" pos:end="2703:64"><literal type="number" pos:start="2703:64" pos:end="2703:64">1</literal></expr></argument>, <argument pos:start="2703:67" pos:end="2703:67"><expr pos:start="2703:67" pos:end="2703:67"><literal type="number" pos:start="2703:67" pos:end="2703:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2705:9" pos:end="2705:14">break;</break>

    <case pos:start="2707:5" pos:end="2707:14">case <expr pos:start="2707:10" pos:end="2707:13"><literal type="number" pos:start="2707:10" pos:end="2707:13">0x28</literal></expr>:</case>

        <comment type="block" pos:start="2709:9" pos:end="2709:17">/* LDL */</comment>

        <expr_stmt pos:start="2711:9" pos:end="2711:69"><expr pos:start="2711:9" pos:end="2711:68"><call pos:start="2711:9" pos:end="2711:68"><name pos:start="2711:9" pos:end="2711:20">gen_load_mem</name><argument_list pos:start="2711:21" pos:end="2711:68">(<argument pos:start="2711:22" pos:end="2711:24"><expr pos:start="2711:22" pos:end="2711:24"><name pos:start="2711:22" pos:end="2711:24">ctx</name></expr></argument>, <argument pos:start="2711:27" pos:end="2711:45"><expr pos:start="2711:27" pos:end="2711:45"><operator pos:start="2711:27" pos:end="2711:27">&amp;</operator><name pos:start="2711:28" pos:end="2711:45">tcg_gen_qemu_ld32s</name></expr></argument>, <argument pos:start="2711:48" pos:end="2711:49"><expr pos:start="2711:48" pos:end="2711:49"><name pos:start="2711:48" pos:end="2711:49">ra</name></expr></argument>, <argument pos:start="2711:52" pos:end="2711:53"><expr pos:start="2711:52" pos:end="2711:53"><name pos:start="2711:52" pos:end="2711:53">rb</name></expr></argument>, <argument pos:start="2711:56" pos:end="2711:61"><expr pos:start="2711:56" pos:end="2711:61"><name pos:start="2711:56" pos:end="2711:61">disp16</name></expr></argument>, <argument pos:start="2711:64" pos:end="2711:64"><expr pos:start="2711:64" pos:end="2711:64"><literal type="number" pos:start="2711:64" pos:end="2711:64">0</literal></expr></argument>, <argument pos:start="2711:67" pos:end="2711:67"><expr pos:start="2711:67" pos:end="2711:67"><literal type="number" pos:start="2711:67" pos:end="2711:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2713:9" pos:end="2713:14">break;</break>

    <case pos:start="2715:5" pos:end="2715:14">case <expr pos:start="2715:10" pos:end="2715:13"><literal type="number" pos:start="2715:10" pos:end="2715:13">0x29</literal></expr>:</case>

        <comment type="block" pos:start="2717:9" pos:end="2717:17">/* LDQ */</comment>

        <expr_stmt pos:start="2719:9" pos:end="2719:68"><expr pos:start="2719:9" pos:end="2719:67"><call pos:start="2719:9" pos:end="2719:67"><name pos:start="2719:9" pos:end="2719:20">gen_load_mem</name><argument_list pos:start="2719:21" pos:end="2719:67">(<argument pos:start="2719:22" pos:end="2719:24"><expr pos:start="2719:22" pos:end="2719:24"><name pos:start="2719:22" pos:end="2719:24">ctx</name></expr></argument>, <argument pos:start="2719:27" pos:end="2719:44"><expr pos:start="2719:27" pos:end="2719:44"><operator pos:start="2719:27" pos:end="2719:27">&amp;</operator><name pos:start="2719:28" pos:end="2719:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="2719:47" pos:end="2719:48"><expr pos:start="2719:47" pos:end="2719:48"><name pos:start="2719:47" pos:end="2719:48">ra</name></expr></argument>, <argument pos:start="2719:51" pos:end="2719:52"><expr pos:start="2719:51" pos:end="2719:52"><name pos:start="2719:51" pos:end="2719:52">rb</name></expr></argument>, <argument pos:start="2719:55" pos:end="2719:60"><expr pos:start="2719:55" pos:end="2719:60"><name pos:start="2719:55" pos:end="2719:60">disp16</name></expr></argument>, <argument pos:start="2719:63" pos:end="2719:63"><expr pos:start="2719:63" pos:end="2719:63"><literal type="number" pos:start="2719:63" pos:end="2719:63">0</literal></expr></argument>, <argument pos:start="2719:66" pos:end="2719:66"><expr pos:start="2719:66" pos:end="2719:66"><literal type="number" pos:start="2719:66" pos:end="2719:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2721:9" pos:end="2721:14">break;</break>

    <case pos:start="2723:5" pos:end="2723:14">case <expr pos:start="2723:10" pos:end="2723:13"><literal type="number" pos:start="2723:10" pos:end="2723:13">0x2A</literal></expr>:</case>

        <comment type="block" pos:start="2725:9" pos:end="2725:19">/* LDL_L */</comment>

        <expr_stmt pos:start="2727:9" pos:end="2727:65"><expr pos:start="2727:9" pos:end="2727:64"><call pos:start="2727:9" pos:end="2727:64"><name pos:start="2727:9" pos:end="2727:20">gen_load_mem</name><argument_list pos:start="2727:21" pos:end="2727:64">(<argument pos:start="2727:22" pos:end="2727:24"><expr pos:start="2727:22" pos:end="2727:24"><name pos:start="2727:22" pos:end="2727:24">ctx</name></expr></argument>, <argument pos:start="2727:27" pos:end="2727:41"><expr pos:start="2727:27" pos:end="2727:41"><operator pos:start="2727:27" pos:end="2727:27">&amp;</operator><name pos:start="2727:28" pos:end="2727:41">gen_qemu_ldl_l</name></expr></argument>, <argument pos:start="2727:44" pos:end="2727:45"><expr pos:start="2727:44" pos:end="2727:45"><name pos:start="2727:44" pos:end="2727:45">ra</name></expr></argument>, <argument pos:start="2727:48" pos:end="2727:49"><expr pos:start="2727:48" pos:end="2727:49"><name pos:start="2727:48" pos:end="2727:49">rb</name></expr></argument>, <argument pos:start="2727:52" pos:end="2727:57"><expr pos:start="2727:52" pos:end="2727:57"><name pos:start="2727:52" pos:end="2727:57">disp16</name></expr></argument>, <argument pos:start="2727:60" pos:end="2727:60"><expr pos:start="2727:60" pos:end="2727:60"><literal type="number" pos:start="2727:60" pos:end="2727:60">0</literal></expr></argument>, <argument pos:start="2727:63" pos:end="2727:63"><expr pos:start="2727:63" pos:end="2727:63"><literal type="number" pos:start="2727:63" pos:end="2727:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2729:9" pos:end="2729:14">break;</break>

    <case pos:start="2731:5" pos:end="2731:14">case <expr pos:start="2731:10" pos:end="2731:13"><literal type="number" pos:start="2731:10" pos:end="2731:13">0x2B</literal></expr>:</case>

        <comment type="block" pos:start="2733:9" pos:end="2733:19">/* LDQ_L */</comment>

        <expr_stmt pos:start="2735:9" pos:end="2735:65"><expr pos:start="2735:9" pos:end="2735:64"><call pos:start="2735:9" pos:end="2735:64"><name pos:start="2735:9" pos:end="2735:20">gen_load_mem</name><argument_list pos:start="2735:21" pos:end="2735:64">(<argument pos:start="2735:22" pos:end="2735:24"><expr pos:start="2735:22" pos:end="2735:24"><name pos:start="2735:22" pos:end="2735:24">ctx</name></expr></argument>, <argument pos:start="2735:27" pos:end="2735:41"><expr pos:start="2735:27" pos:end="2735:41"><operator pos:start="2735:27" pos:end="2735:27">&amp;</operator><name pos:start="2735:28" pos:end="2735:41">gen_qemu_ldq_l</name></expr></argument>, <argument pos:start="2735:44" pos:end="2735:45"><expr pos:start="2735:44" pos:end="2735:45"><name pos:start="2735:44" pos:end="2735:45">ra</name></expr></argument>, <argument pos:start="2735:48" pos:end="2735:49"><expr pos:start="2735:48" pos:end="2735:49"><name pos:start="2735:48" pos:end="2735:49">rb</name></expr></argument>, <argument pos:start="2735:52" pos:end="2735:57"><expr pos:start="2735:52" pos:end="2735:57"><name pos:start="2735:52" pos:end="2735:57">disp16</name></expr></argument>, <argument pos:start="2735:60" pos:end="2735:60"><expr pos:start="2735:60" pos:end="2735:60"><literal type="number" pos:start="2735:60" pos:end="2735:60">0</literal></expr></argument>, <argument pos:start="2735:63" pos:end="2735:63"><expr pos:start="2735:63" pos:end="2735:63"><literal type="number" pos:start="2735:63" pos:end="2735:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2737:9" pos:end="2737:14">break;</break>

    <case pos:start="2739:5" pos:end="2739:14">case <expr pos:start="2739:10" pos:end="2739:13"><literal type="number" pos:start="2739:10" pos:end="2739:13">0x2C</literal></expr>:</case>

        <comment type="block" pos:start="2741:9" pos:end="2741:17">/* STL */</comment>

        <expr_stmt pos:start="2743:9" pos:end="2743:69"><expr pos:start="2743:9" pos:end="2743:68"><call pos:start="2743:9" pos:end="2743:68"><name pos:start="2743:9" pos:end="2743:21">gen_store_mem</name><argument_list pos:start="2743:22" pos:end="2743:68">(<argument pos:start="2743:23" pos:end="2743:25"><expr pos:start="2743:23" pos:end="2743:25"><name pos:start="2743:23" pos:end="2743:25">ctx</name></expr></argument>, <argument pos:start="2743:28" pos:end="2743:45"><expr pos:start="2743:28" pos:end="2743:45"><operator pos:start="2743:28" pos:end="2743:28">&amp;</operator><name pos:start="2743:29" pos:end="2743:45">tcg_gen_qemu_st32</name></expr></argument>, <argument pos:start="2743:48" pos:end="2743:49"><expr pos:start="2743:48" pos:end="2743:49"><name pos:start="2743:48" pos:end="2743:49">ra</name></expr></argument>, <argument pos:start="2743:52" pos:end="2743:53"><expr pos:start="2743:52" pos:end="2743:53"><name pos:start="2743:52" pos:end="2743:53">rb</name></expr></argument>, <argument pos:start="2743:56" pos:end="2743:61"><expr pos:start="2743:56" pos:end="2743:61"><name pos:start="2743:56" pos:end="2743:61">disp16</name></expr></argument>, <argument pos:start="2743:64" pos:end="2743:64"><expr pos:start="2743:64" pos:end="2743:64"><literal type="number" pos:start="2743:64" pos:end="2743:64">0</literal></expr></argument>, <argument pos:start="2743:67" pos:end="2743:67"><expr pos:start="2743:67" pos:end="2743:67"><literal type="number" pos:start="2743:67" pos:end="2743:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2745:9" pos:end="2745:14">break;</break>

    <case pos:start="2747:5" pos:end="2747:14">case <expr pos:start="2747:10" pos:end="2747:13"><literal type="number" pos:start="2747:10" pos:end="2747:13">0x2D</literal></expr>:</case>

        <comment type="block" pos:start="2749:9" pos:end="2749:17">/* STQ */</comment>

        <expr_stmt pos:start="2751:9" pos:end="2751:69"><expr pos:start="2751:9" pos:end="2751:68"><call pos:start="2751:9" pos:end="2751:68"><name pos:start="2751:9" pos:end="2751:21">gen_store_mem</name><argument_list pos:start="2751:22" pos:end="2751:68">(<argument pos:start="2751:23" pos:end="2751:25"><expr pos:start="2751:23" pos:end="2751:25"><name pos:start="2751:23" pos:end="2751:25">ctx</name></expr></argument>, <argument pos:start="2751:28" pos:end="2751:45"><expr pos:start="2751:28" pos:end="2751:45"><operator pos:start="2751:28" pos:end="2751:28">&amp;</operator><name pos:start="2751:29" pos:end="2751:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="2751:48" pos:end="2751:49"><expr pos:start="2751:48" pos:end="2751:49"><name pos:start="2751:48" pos:end="2751:49">ra</name></expr></argument>, <argument pos:start="2751:52" pos:end="2751:53"><expr pos:start="2751:52" pos:end="2751:53"><name pos:start="2751:52" pos:end="2751:53">rb</name></expr></argument>, <argument pos:start="2751:56" pos:end="2751:61"><expr pos:start="2751:56" pos:end="2751:61"><name pos:start="2751:56" pos:end="2751:61">disp16</name></expr></argument>, <argument pos:start="2751:64" pos:end="2751:64"><expr pos:start="2751:64" pos:end="2751:64"><literal type="number" pos:start="2751:64" pos:end="2751:64">0</literal></expr></argument>, <argument pos:start="2751:67" pos:end="2751:67"><expr pos:start="2751:67" pos:end="2751:67"><literal type="number" pos:start="2751:67" pos:end="2751:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2753:9" pos:end="2753:14">break;</break>

    <case pos:start="2755:5" pos:end="2755:14">case <expr pos:start="2755:10" pos:end="2755:13"><literal type="number" pos:start="2755:10" pos:end="2755:13">0x2E</literal></expr>:</case>

        <comment type="block" pos:start="2757:9" pos:end="2757:19">/* STL_C */</comment>

        <expr_stmt pos:start="2759:9" pos:end="2761:59"><expr pos:start="2759:9" pos:end="2761:58"><name pos:start="2759:9" pos:end="2759:11">ret</name> <operator pos:start="2759:13" pos:end="2759:13">=</operator> <call pos:start="2759:15" pos:end="2761:58"><name pos:start="2759:15" pos:end="2759:35">gen_store_conditional</name><argument_list pos:start="2759:36" pos:end="2761:58">(<argument pos:start="2759:37" pos:end="2759:39"><expr pos:start="2759:37" pos:end="2759:39"><name pos:start="2759:37" pos:end="2759:39">ctx</name></expr></argument>, <argument pos:start="2759:42" pos:end="2759:43"><expr pos:start="2759:42" pos:end="2759:43"><name pos:start="2759:42" pos:end="2759:43">ra</name></expr></argument>, <argument pos:start="2759:46" pos:end="2759:47"><expr pos:start="2759:46" pos:end="2759:47"><name pos:start="2759:46" pos:end="2759:47">rb</name></expr></argument>, <argument pos:start="2759:50" pos:end="2759:55"><expr pos:start="2759:50" pos:end="2759:55"><name pos:start="2759:50" pos:end="2759:55">disp16</name></expr></argument>,

                                    <argument pos:start="2761:37" pos:end="2761:48"><expr pos:start="2761:37" pos:end="2761:48"><name pos:start="2761:37" pos:end="2761:48"><name pos:start="2761:37" pos:end="2761:39">ctx</name><operator pos:start="2761:40" pos:end="2761:41">-&gt;</operator><name pos:start="2761:42" pos:end="2761:48">mem_idx</name></name></expr></argument>, <argument pos:start="2761:51" pos:end="2761:57"><expr pos:start="2761:51" pos:end="2761:57"><name pos:start="2761:51" pos:end="2761:57">MO_LESL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2763:9" pos:end="2763:14">break;</break>

    <case pos:start="2765:5" pos:end="2765:14">case <expr pos:start="2765:10" pos:end="2765:13"><literal type="number" pos:start="2765:10" pos:end="2765:13">0x2F</literal></expr>:</case>

        <comment type="block" pos:start="2767:9" pos:end="2767:19">/* STQ_C */</comment>

        <expr_stmt pos:start="2769:9" pos:end="2771:58"><expr pos:start="2769:9" pos:end="2771:57"><name pos:start="2769:9" pos:end="2769:11">ret</name> <operator pos:start="2769:13" pos:end="2769:13">=</operator> <call pos:start="2769:15" pos:end="2771:57"><name pos:start="2769:15" pos:end="2769:35">gen_store_conditional</name><argument_list pos:start="2769:36" pos:end="2771:57">(<argument pos:start="2769:37" pos:end="2769:39"><expr pos:start="2769:37" pos:end="2769:39"><name pos:start="2769:37" pos:end="2769:39">ctx</name></expr></argument>, <argument pos:start="2769:42" pos:end="2769:43"><expr pos:start="2769:42" pos:end="2769:43"><name pos:start="2769:42" pos:end="2769:43">ra</name></expr></argument>, <argument pos:start="2769:46" pos:end="2769:47"><expr pos:start="2769:46" pos:end="2769:47"><name pos:start="2769:46" pos:end="2769:47">rb</name></expr></argument>, <argument pos:start="2769:50" pos:end="2769:55"><expr pos:start="2769:50" pos:end="2769:55"><name pos:start="2769:50" pos:end="2769:55">disp16</name></expr></argument>,

                                    <argument pos:start="2771:37" pos:end="2771:48"><expr pos:start="2771:37" pos:end="2771:48"><name pos:start="2771:37" pos:end="2771:48"><name pos:start="2771:37" pos:end="2771:39">ctx</name><operator pos:start="2771:40" pos:end="2771:41">-&gt;</operator><name pos:start="2771:42" pos:end="2771:48">mem_idx</name></name></expr></argument>, <argument pos:start="2771:51" pos:end="2771:56"><expr pos:start="2771:51" pos:end="2771:56"><name pos:start="2771:51" pos:end="2771:56">MO_LEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2773:9" pos:end="2773:14">break;</break>

    <case pos:start="2775:5" pos:end="2775:14">case <expr pos:start="2775:10" pos:end="2775:13"><literal type="number" pos:start="2775:10" pos:end="2775:13">0x30</literal></expr>:</case>

        <comment type="block" pos:start="2777:9" pos:end="2777:16">/* BR */</comment>

        <expr_stmt pos:start="2779:9" pos:end="2779:43"><expr pos:start="2779:9" pos:end="2779:42"><name pos:start="2779:9" pos:end="2779:11">ret</name> <operator pos:start="2779:13" pos:end="2779:13">=</operator> <call pos:start="2779:15" pos:end="2779:42"><name pos:start="2779:15" pos:end="2779:25">gen_bdirect</name><argument_list pos:start="2779:26" pos:end="2779:42">(<argument pos:start="2779:27" pos:end="2779:29"><expr pos:start="2779:27" pos:end="2779:29"><name pos:start="2779:27" pos:end="2779:29">ctx</name></expr></argument>, <argument pos:start="2779:32" pos:end="2779:33"><expr pos:start="2779:32" pos:end="2779:33"><name pos:start="2779:32" pos:end="2779:33">ra</name></expr></argument>, <argument pos:start="2779:36" pos:end="2779:41"><expr pos:start="2779:36" pos:end="2779:41"><name pos:start="2779:36" pos:end="2779:41">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2781:9" pos:end="2781:14">break;</break>

    <case pos:start="2783:5" pos:end="2783:14">case <expr pos:start="2783:10" pos:end="2783:13"><literal type="number" pos:start="2783:10" pos:end="2783:13">0x31</literal></expr>:</case> <comment type="block" pos:start="2783:16" pos:end="2783:25">/* FBEQ */</comment>

        <expr_stmt pos:start="2785:9" pos:end="2785:55"><expr pos:start="2785:9" pos:end="2785:54"><name pos:start="2785:9" pos:end="2785:11">ret</name> <operator pos:start="2785:13" pos:end="2785:13">=</operator> <call pos:start="2785:15" pos:end="2785:54"><name pos:start="2785:15" pos:end="2785:24">gen_fbcond</name><argument_list pos:start="2785:25" pos:end="2785:54">(<argument pos:start="2785:26" pos:end="2785:28"><expr pos:start="2785:26" pos:end="2785:28"><name pos:start="2785:26" pos:end="2785:28">ctx</name></expr></argument>, <argument pos:start="2785:31" pos:end="2785:41"><expr pos:start="2785:31" pos:end="2785:41"><name pos:start="2785:31" pos:end="2785:41">TCG_COND_EQ</name></expr></argument>, <argument pos:start="2785:44" pos:end="2785:45"><expr pos:start="2785:44" pos:end="2785:45"><name pos:start="2785:44" pos:end="2785:45">ra</name></expr></argument>, <argument pos:start="2785:48" pos:end="2785:53"><expr pos:start="2785:48" pos:end="2785:53"><name pos:start="2785:48" pos:end="2785:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2787:9" pos:end="2787:14">break;</break>

    <case pos:start="2789:5" pos:end="2789:14">case <expr pos:start="2789:10" pos:end="2789:13"><literal type="number" pos:start="2789:10" pos:end="2789:13">0x32</literal></expr>:</case> <comment type="block" pos:start="2789:16" pos:end="2789:25">/* FBLT */</comment>

        <expr_stmt pos:start="2791:9" pos:end="2791:55"><expr pos:start="2791:9" pos:end="2791:54"><name pos:start="2791:9" pos:end="2791:11">ret</name> <operator pos:start="2791:13" pos:end="2791:13">=</operator> <call pos:start="2791:15" pos:end="2791:54"><name pos:start="2791:15" pos:end="2791:24">gen_fbcond</name><argument_list pos:start="2791:25" pos:end="2791:54">(<argument pos:start="2791:26" pos:end="2791:28"><expr pos:start="2791:26" pos:end="2791:28"><name pos:start="2791:26" pos:end="2791:28">ctx</name></expr></argument>, <argument pos:start="2791:31" pos:end="2791:41"><expr pos:start="2791:31" pos:end="2791:41"><name pos:start="2791:31" pos:end="2791:41">TCG_COND_LT</name></expr></argument>, <argument pos:start="2791:44" pos:end="2791:45"><expr pos:start="2791:44" pos:end="2791:45"><name pos:start="2791:44" pos:end="2791:45">ra</name></expr></argument>, <argument pos:start="2791:48" pos:end="2791:53"><expr pos:start="2791:48" pos:end="2791:53"><name pos:start="2791:48" pos:end="2791:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2793:9" pos:end="2793:14">break;</break>

    <case pos:start="2795:5" pos:end="2795:14">case <expr pos:start="2795:10" pos:end="2795:13"><literal type="number" pos:start="2795:10" pos:end="2795:13">0x33</literal></expr>:</case> <comment type="block" pos:start="2795:16" pos:end="2795:25">/* FBLE */</comment>

        <expr_stmt pos:start="2797:9" pos:end="2797:55"><expr pos:start="2797:9" pos:end="2797:54"><name pos:start="2797:9" pos:end="2797:11">ret</name> <operator pos:start="2797:13" pos:end="2797:13">=</operator> <call pos:start="2797:15" pos:end="2797:54"><name pos:start="2797:15" pos:end="2797:24">gen_fbcond</name><argument_list pos:start="2797:25" pos:end="2797:54">(<argument pos:start="2797:26" pos:end="2797:28"><expr pos:start="2797:26" pos:end="2797:28"><name pos:start="2797:26" pos:end="2797:28">ctx</name></expr></argument>, <argument pos:start="2797:31" pos:end="2797:41"><expr pos:start="2797:31" pos:end="2797:41"><name pos:start="2797:31" pos:end="2797:41">TCG_COND_LE</name></expr></argument>, <argument pos:start="2797:44" pos:end="2797:45"><expr pos:start="2797:44" pos:end="2797:45"><name pos:start="2797:44" pos:end="2797:45">ra</name></expr></argument>, <argument pos:start="2797:48" pos:end="2797:53"><expr pos:start="2797:48" pos:end="2797:53"><name pos:start="2797:48" pos:end="2797:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2799:9" pos:end="2799:14">break;</break>

    <case pos:start="2801:5" pos:end="2801:14">case <expr pos:start="2801:10" pos:end="2801:13"><literal type="number" pos:start="2801:10" pos:end="2801:13">0x34</literal></expr>:</case>

        <comment type="block" pos:start="2803:9" pos:end="2803:17">/* BSR */</comment>

        <expr_stmt pos:start="2805:9" pos:end="2805:43"><expr pos:start="2805:9" pos:end="2805:42"><name pos:start="2805:9" pos:end="2805:11">ret</name> <operator pos:start="2805:13" pos:end="2805:13">=</operator> <call pos:start="2805:15" pos:end="2805:42"><name pos:start="2805:15" pos:end="2805:25">gen_bdirect</name><argument_list pos:start="2805:26" pos:end="2805:42">(<argument pos:start="2805:27" pos:end="2805:29"><expr pos:start="2805:27" pos:end="2805:29"><name pos:start="2805:27" pos:end="2805:29">ctx</name></expr></argument>, <argument pos:start="2805:32" pos:end="2805:33"><expr pos:start="2805:32" pos:end="2805:33"><name pos:start="2805:32" pos:end="2805:33">ra</name></expr></argument>, <argument pos:start="2805:36" pos:end="2805:41"><expr pos:start="2805:36" pos:end="2805:41"><name pos:start="2805:36" pos:end="2805:41">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2807:9" pos:end="2807:14">break;</break>

    <case pos:start="2809:5" pos:end="2809:14">case <expr pos:start="2809:10" pos:end="2809:13"><literal type="number" pos:start="2809:10" pos:end="2809:13">0x35</literal></expr>:</case> <comment type="block" pos:start="2809:16" pos:end="2809:25">/* FBNE */</comment>

        <expr_stmt pos:start="2811:9" pos:end="2811:55"><expr pos:start="2811:9" pos:end="2811:54"><name pos:start="2811:9" pos:end="2811:11">ret</name> <operator pos:start="2811:13" pos:end="2811:13">=</operator> <call pos:start="2811:15" pos:end="2811:54"><name pos:start="2811:15" pos:end="2811:24">gen_fbcond</name><argument_list pos:start="2811:25" pos:end="2811:54">(<argument pos:start="2811:26" pos:end="2811:28"><expr pos:start="2811:26" pos:end="2811:28"><name pos:start="2811:26" pos:end="2811:28">ctx</name></expr></argument>, <argument pos:start="2811:31" pos:end="2811:41"><expr pos:start="2811:31" pos:end="2811:41"><name pos:start="2811:31" pos:end="2811:41">TCG_COND_NE</name></expr></argument>, <argument pos:start="2811:44" pos:end="2811:45"><expr pos:start="2811:44" pos:end="2811:45"><name pos:start="2811:44" pos:end="2811:45">ra</name></expr></argument>, <argument pos:start="2811:48" pos:end="2811:53"><expr pos:start="2811:48" pos:end="2811:53"><name pos:start="2811:48" pos:end="2811:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2813:9" pos:end="2813:14">break;</break>

    <case pos:start="2815:5" pos:end="2815:14">case <expr pos:start="2815:10" pos:end="2815:13"><literal type="number" pos:start="2815:10" pos:end="2815:13">0x36</literal></expr>:</case> <comment type="block" pos:start="2815:16" pos:end="2815:25">/* FBGE */</comment>

        <expr_stmt pos:start="2817:9" pos:end="2817:55"><expr pos:start="2817:9" pos:end="2817:54"><name pos:start="2817:9" pos:end="2817:11">ret</name> <operator pos:start="2817:13" pos:end="2817:13">=</operator> <call pos:start="2817:15" pos:end="2817:54"><name pos:start="2817:15" pos:end="2817:24">gen_fbcond</name><argument_list pos:start="2817:25" pos:end="2817:54">(<argument pos:start="2817:26" pos:end="2817:28"><expr pos:start="2817:26" pos:end="2817:28"><name pos:start="2817:26" pos:end="2817:28">ctx</name></expr></argument>, <argument pos:start="2817:31" pos:end="2817:41"><expr pos:start="2817:31" pos:end="2817:41"><name pos:start="2817:31" pos:end="2817:41">TCG_COND_GE</name></expr></argument>, <argument pos:start="2817:44" pos:end="2817:45"><expr pos:start="2817:44" pos:end="2817:45"><name pos:start="2817:44" pos:end="2817:45">ra</name></expr></argument>, <argument pos:start="2817:48" pos:end="2817:53"><expr pos:start="2817:48" pos:end="2817:53"><name pos:start="2817:48" pos:end="2817:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2819:9" pos:end="2819:14">break;</break>

    <case pos:start="2821:5" pos:end="2821:14">case <expr pos:start="2821:10" pos:end="2821:13"><literal type="number" pos:start="2821:10" pos:end="2821:13">0x37</literal></expr>:</case> <comment type="block" pos:start="2821:16" pos:end="2821:25">/* FBGT */</comment>

        <expr_stmt pos:start="2823:9" pos:end="2823:55"><expr pos:start="2823:9" pos:end="2823:54"><name pos:start="2823:9" pos:end="2823:11">ret</name> <operator pos:start="2823:13" pos:end="2823:13">=</operator> <call pos:start="2823:15" pos:end="2823:54"><name pos:start="2823:15" pos:end="2823:24">gen_fbcond</name><argument_list pos:start="2823:25" pos:end="2823:54">(<argument pos:start="2823:26" pos:end="2823:28"><expr pos:start="2823:26" pos:end="2823:28"><name pos:start="2823:26" pos:end="2823:28">ctx</name></expr></argument>, <argument pos:start="2823:31" pos:end="2823:41"><expr pos:start="2823:31" pos:end="2823:41"><name pos:start="2823:31" pos:end="2823:41">TCG_COND_GT</name></expr></argument>, <argument pos:start="2823:44" pos:end="2823:45"><expr pos:start="2823:44" pos:end="2823:45"><name pos:start="2823:44" pos:end="2823:45">ra</name></expr></argument>, <argument pos:start="2823:48" pos:end="2823:53"><expr pos:start="2823:48" pos:end="2823:53"><name pos:start="2823:48" pos:end="2823:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2825:9" pos:end="2825:14">break;</break>

    <case pos:start="2827:5" pos:end="2827:14">case <expr pos:start="2827:10" pos:end="2827:13"><literal type="number" pos:start="2827:10" pos:end="2827:13">0x38</literal></expr>:</case>

        <comment type="block" pos:start="2829:9" pos:end="2829:18">/* BLBC */</comment>

        <expr_stmt pos:start="2831:9" pos:end="2831:57"><expr pos:start="2831:9" pos:end="2831:56"><name pos:start="2831:9" pos:end="2831:11">ret</name> <operator pos:start="2831:13" pos:end="2831:13">=</operator> <call pos:start="2831:15" pos:end="2831:56"><name pos:start="2831:15" pos:end="2831:23">gen_bcond</name><argument_list pos:start="2831:24" pos:end="2831:56">(<argument pos:start="2831:25" pos:end="2831:27"><expr pos:start="2831:25" pos:end="2831:27"><name pos:start="2831:25" pos:end="2831:27">ctx</name></expr></argument>, <argument pos:start="2831:30" pos:end="2831:40"><expr pos:start="2831:30" pos:end="2831:40"><name pos:start="2831:30" pos:end="2831:40">TCG_COND_EQ</name></expr></argument>, <argument pos:start="2831:43" pos:end="2831:44"><expr pos:start="2831:43" pos:end="2831:44"><name pos:start="2831:43" pos:end="2831:44">ra</name></expr></argument>, <argument pos:start="2831:47" pos:end="2831:52"><expr pos:start="2831:47" pos:end="2831:52"><name pos:start="2831:47" pos:end="2831:52">disp21</name></expr></argument>, <argument pos:start="2831:55" pos:end="2831:55"><expr pos:start="2831:55" pos:end="2831:55"><literal type="number" pos:start="2831:55" pos:end="2831:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2833:9" pos:end="2833:14">break;</break>

    <case pos:start="2835:5" pos:end="2835:14">case <expr pos:start="2835:10" pos:end="2835:13"><literal type="number" pos:start="2835:10" pos:end="2835:13">0x39</literal></expr>:</case>

        <comment type="block" pos:start="2837:9" pos:end="2837:17">/* BEQ */</comment>

        <expr_stmt pos:start="2839:9" pos:end="2839:57"><expr pos:start="2839:9" pos:end="2839:56"><name pos:start="2839:9" pos:end="2839:11">ret</name> <operator pos:start="2839:13" pos:end="2839:13">=</operator> <call pos:start="2839:15" pos:end="2839:56"><name pos:start="2839:15" pos:end="2839:23">gen_bcond</name><argument_list pos:start="2839:24" pos:end="2839:56">(<argument pos:start="2839:25" pos:end="2839:27"><expr pos:start="2839:25" pos:end="2839:27"><name pos:start="2839:25" pos:end="2839:27">ctx</name></expr></argument>, <argument pos:start="2839:30" pos:end="2839:40"><expr pos:start="2839:30" pos:end="2839:40"><name pos:start="2839:30" pos:end="2839:40">TCG_COND_EQ</name></expr></argument>, <argument pos:start="2839:43" pos:end="2839:44"><expr pos:start="2839:43" pos:end="2839:44"><name pos:start="2839:43" pos:end="2839:44">ra</name></expr></argument>, <argument pos:start="2839:47" pos:end="2839:52"><expr pos:start="2839:47" pos:end="2839:52"><name pos:start="2839:47" pos:end="2839:52">disp21</name></expr></argument>, <argument pos:start="2839:55" pos:end="2839:55"><expr pos:start="2839:55" pos:end="2839:55"><literal type="number" pos:start="2839:55" pos:end="2839:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2841:9" pos:end="2841:14">break;</break>

    <case pos:start="2843:5" pos:end="2843:14">case <expr pos:start="2843:10" pos:end="2843:13"><literal type="number" pos:start="2843:10" pos:end="2843:13">0x3A</literal></expr>:</case>

        <comment type="block" pos:start="2845:9" pos:end="2845:17">/* BLT */</comment>

        <expr_stmt pos:start="2847:9" pos:end="2847:57"><expr pos:start="2847:9" pos:end="2847:56"><name pos:start="2847:9" pos:end="2847:11">ret</name> <operator pos:start="2847:13" pos:end="2847:13">=</operator> <call pos:start="2847:15" pos:end="2847:56"><name pos:start="2847:15" pos:end="2847:23">gen_bcond</name><argument_list pos:start="2847:24" pos:end="2847:56">(<argument pos:start="2847:25" pos:end="2847:27"><expr pos:start="2847:25" pos:end="2847:27"><name pos:start="2847:25" pos:end="2847:27">ctx</name></expr></argument>, <argument pos:start="2847:30" pos:end="2847:40"><expr pos:start="2847:30" pos:end="2847:40"><name pos:start="2847:30" pos:end="2847:40">TCG_COND_LT</name></expr></argument>, <argument pos:start="2847:43" pos:end="2847:44"><expr pos:start="2847:43" pos:end="2847:44"><name pos:start="2847:43" pos:end="2847:44">ra</name></expr></argument>, <argument pos:start="2847:47" pos:end="2847:52"><expr pos:start="2847:47" pos:end="2847:52"><name pos:start="2847:47" pos:end="2847:52">disp21</name></expr></argument>, <argument pos:start="2847:55" pos:end="2847:55"><expr pos:start="2847:55" pos:end="2847:55"><literal type="number" pos:start="2847:55" pos:end="2847:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2849:9" pos:end="2849:14">break;</break>

    <case pos:start="2851:5" pos:end="2851:14">case <expr pos:start="2851:10" pos:end="2851:13"><literal type="number" pos:start="2851:10" pos:end="2851:13">0x3B</literal></expr>:</case>

        <comment type="block" pos:start="2853:9" pos:end="2853:17">/* BLE */</comment>

        <expr_stmt pos:start="2855:9" pos:end="2855:57"><expr pos:start="2855:9" pos:end="2855:56"><name pos:start="2855:9" pos:end="2855:11">ret</name> <operator pos:start="2855:13" pos:end="2855:13">=</operator> <call pos:start="2855:15" pos:end="2855:56"><name pos:start="2855:15" pos:end="2855:23">gen_bcond</name><argument_list pos:start="2855:24" pos:end="2855:56">(<argument pos:start="2855:25" pos:end="2855:27"><expr pos:start="2855:25" pos:end="2855:27"><name pos:start="2855:25" pos:end="2855:27">ctx</name></expr></argument>, <argument pos:start="2855:30" pos:end="2855:40"><expr pos:start="2855:30" pos:end="2855:40"><name pos:start="2855:30" pos:end="2855:40">TCG_COND_LE</name></expr></argument>, <argument pos:start="2855:43" pos:end="2855:44"><expr pos:start="2855:43" pos:end="2855:44"><name pos:start="2855:43" pos:end="2855:44">ra</name></expr></argument>, <argument pos:start="2855:47" pos:end="2855:52"><expr pos:start="2855:47" pos:end="2855:52"><name pos:start="2855:47" pos:end="2855:52">disp21</name></expr></argument>, <argument pos:start="2855:55" pos:end="2855:55"><expr pos:start="2855:55" pos:end="2855:55"><literal type="number" pos:start="2855:55" pos:end="2855:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2857:9" pos:end="2857:14">break;</break>

    <case pos:start="2859:5" pos:end="2859:14">case <expr pos:start="2859:10" pos:end="2859:13"><literal type="number" pos:start="2859:10" pos:end="2859:13">0x3C</literal></expr>:</case>

        <comment type="block" pos:start="2861:9" pos:end="2861:18">/* BLBS */</comment>

        <expr_stmt pos:start="2863:9" pos:end="2863:57"><expr pos:start="2863:9" pos:end="2863:56"><name pos:start="2863:9" pos:end="2863:11">ret</name> <operator pos:start="2863:13" pos:end="2863:13">=</operator> <call pos:start="2863:15" pos:end="2863:56"><name pos:start="2863:15" pos:end="2863:23">gen_bcond</name><argument_list pos:start="2863:24" pos:end="2863:56">(<argument pos:start="2863:25" pos:end="2863:27"><expr pos:start="2863:25" pos:end="2863:27"><name pos:start="2863:25" pos:end="2863:27">ctx</name></expr></argument>, <argument pos:start="2863:30" pos:end="2863:40"><expr pos:start="2863:30" pos:end="2863:40"><name pos:start="2863:30" pos:end="2863:40">TCG_COND_NE</name></expr></argument>, <argument pos:start="2863:43" pos:end="2863:44"><expr pos:start="2863:43" pos:end="2863:44"><name pos:start="2863:43" pos:end="2863:44">ra</name></expr></argument>, <argument pos:start="2863:47" pos:end="2863:52"><expr pos:start="2863:47" pos:end="2863:52"><name pos:start="2863:47" pos:end="2863:52">disp21</name></expr></argument>, <argument pos:start="2863:55" pos:end="2863:55"><expr pos:start="2863:55" pos:end="2863:55"><literal type="number" pos:start="2863:55" pos:end="2863:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2865:9" pos:end="2865:14">break;</break>

    <case pos:start="2867:5" pos:end="2867:14">case <expr pos:start="2867:10" pos:end="2867:13"><literal type="number" pos:start="2867:10" pos:end="2867:13">0x3D</literal></expr>:</case>

        <comment type="block" pos:start="2869:9" pos:end="2869:17">/* BNE */</comment>

        <expr_stmt pos:start="2871:9" pos:end="2871:57"><expr pos:start="2871:9" pos:end="2871:56"><name pos:start="2871:9" pos:end="2871:11">ret</name> <operator pos:start="2871:13" pos:end="2871:13">=</operator> <call pos:start="2871:15" pos:end="2871:56"><name pos:start="2871:15" pos:end="2871:23">gen_bcond</name><argument_list pos:start="2871:24" pos:end="2871:56">(<argument pos:start="2871:25" pos:end="2871:27"><expr pos:start="2871:25" pos:end="2871:27"><name pos:start="2871:25" pos:end="2871:27">ctx</name></expr></argument>, <argument pos:start="2871:30" pos:end="2871:40"><expr pos:start="2871:30" pos:end="2871:40"><name pos:start="2871:30" pos:end="2871:40">TCG_COND_NE</name></expr></argument>, <argument pos:start="2871:43" pos:end="2871:44"><expr pos:start="2871:43" pos:end="2871:44"><name pos:start="2871:43" pos:end="2871:44">ra</name></expr></argument>, <argument pos:start="2871:47" pos:end="2871:52"><expr pos:start="2871:47" pos:end="2871:52"><name pos:start="2871:47" pos:end="2871:52">disp21</name></expr></argument>, <argument pos:start="2871:55" pos:end="2871:55"><expr pos:start="2871:55" pos:end="2871:55"><literal type="number" pos:start="2871:55" pos:end="2871:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2873:9" pos:end="2873:14">break;</break>

    <case pos:start="2875:5" pos:end="2875:14">case <expr pos:start="2875:10" pos:end="2875:13"><literal type="number" pos:start="2875:10" pos:end="2875:13">0x3E</literal></expr>:</case>

        <comment type="block" pos:start="2877:9" pos:end="2877:17">/* BGE */</comment>

        <expr_stmt pos:start="2879:9" pos:end="2879:57"><expr pos:start="2879:9" pos:end="2879:56"><name pos:start="2879:9" pos:end="2879:11">ret</name> <operator pos:start="2879:13" pos:end="2879:13">=</operator> <call pos:start="2879:15" pos:end="2879:56"><name pos:start="2879:15" pos:end="2879:23">gen_bcond</name><argument_list pos:start="2879:24" pos:end="2879:56">(<argument pos:start="2879:25" pos:end="2879:27"><expr pos:start="2879:25" pos:end="2879:27"><name pos:start="2879:25" pos:end="2879:27">ctx</name></expr></argument>, <argument pos:start="2879:30" pos:end="2879:40"><expr pos:start="2879:30" pos:end="2879:40"><name pos:start="2879:30" pos:end="2879:40">TCG_COND_GE</name></expr></argument>, <argument pos:start="2879:43" pos:end="2879:44"><expr pos:start="2879:43" pos:end="2879:44"><name pos:start="2879:43" pos:end="2879:44">ra</name></expr></argument>, <argument pos:start="2879:47" pos:end="2879:52"><expr pos:start="2879:47" pos:end="2879:52"><name pos:start="2879:47" pos:end="2879:52">disp21</name></expr></argument>, <argument pos:start="2879:55" pos:end="2879:55"><expr pos:start="2879:55" pos:end="2879:55"><literal type="number" pos:start="2879:55" pos:end="2879:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2881:9" pos:end="2881:14">break;</break>

    <case pos:start="2883:5" pos:end="2883:14">case <expr pos:start="2883:10" pos:end="2883:13"><literal type="number" pos:start="2883:10" pos:end="2883:13">0x3F</literal></expr>:</case>

        <comment type="block" pos:start="2885:9" pos:end="2885:17">/* BGT */</comment>

        <expr_stmt pos:start="2887:9" pos:end="2887:57"><expr pos:start="2887:9" pos:end="2887:56"><name pos:start="2887:9" pos:end="2887:11">ret</name> <operator pos:start="2887:13" pos:end="2887:13">=</operator> <call pos:start="2887:15" pos:end="2887:56"><name pos:start="2887:15" pos:end="2887:23">gen_bcond</name><argument_list pos:start="2887:24" pos:end="2887:56">(<argument pos:start="2887:25" pos:end="2887:27"><expr pos:start="2887:25" pos:end="2887:27"><name pos:start="2887:25" pos:end="2887:27">ctx</name></expr></argument>, <argument pos:start="2887:30" pos:end="2887:40"><expr pos:start="2887:30" pos:end="2887:40"><name pos:start="2887:30" pos:end="2887:40">TCG_COND_GT</name></expr></argument>, <argument pos:start="2887:43" pos:end="2887:44"><expr pos:start="2887:43" pos:end="2887:44"><name pos:start="2887:43" pos:end="2887:44">ra</name></expr></argument>, <argument pos:start="2887:47" pos:end="2887:52"><expr pos:start="2887:47" pos:end="2887:52"><name pos:start="2887:47" pos:end="2887:52">disp21</name></expr></argument>, <argument pos:start="2887:55" pos:end="2887:55"><expr pos:start="2887:55" pos:end="2887:55"><literal type="number" pos:start="2887:55" pos:end="2887:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2889:9" pos:end="2889:14">break;</break>

    <label pos:start="2891:5" pos:end="2891:16"><name pos:start="2891:5" pos:end="2891:15">invalid_opc</name>:</label>

        <expr_stmt pos:start="2893:9" pos:end="2893:31"><expr pos:start="2893:9" pos:end="2893:30"><name pos:start="2893:9" pos:end="2893:11">ret</name> <operator pos:start="2893:13" pos:end="2893:13">=</operator> <call pos:start="2893:15" pos:end="2893:30"><name pos:start="2893:15" pos:end="2893:25">gen_invalid</name><argument_list pos:start="2893:26" pos:end="2893:30">(<argument pos:start="2893:27" pos:end="2893:29"><expr pos:start="2893:27" pos:end="2893:29"><name pos:start="2893:27" pos:end="2893:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2895:9" pos:end="2895:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="2901:5" pos:end="2901:15">return <expr pos:start="2901:12" pos:end="2901:14"><name pos:start="2901:12" pos:end="2901:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
