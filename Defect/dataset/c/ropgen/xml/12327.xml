<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12327.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:10">RENAME</name></type>(<name pos:start="1:12" pos:end="1:24">swri_resample</name>)<parameter_list pos:start="1:26" pos:end="1:134">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">ResampleContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">c</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:56"><decl pos:start="1:47" pos:end="1:56"><type pos:start="1:47" pos:end="1:56"><name pos:start="1:47" pos:end="1:51">DELEM</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dst</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:74"><decl pos:start="1:59" pos:end="1:74"><type pos:start="1:59" pos:end="1:74"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:69">DELEM</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">src</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:89"><decl pos:start="1:77" pos:end="1:89"><type pos:start="1:77" pos:end="1:89"><name pos:start="1:77" pos:end="1:79">int</name> <modifier pos:start="1:81" pos:end="1:81">*</modifier></type><name pos:start="1:82" pos:end="1:89">consumed</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:103"><decl pos:start="1:92" pos:end="1:103"><type pos:start="1:92" pos:end="1:103"><name pos:start="1:92" pos:end="1:94">int</name></type> <name pos:start="1:96" pos:end="1:103">src_size</name></decl></parameter>, <parameter pos:start="1:106" pos:end="1:117"><decl pos:start="1:106" pos:end="1:117"><type pos:start="1:106" pos:end="1:117"><name pos:start="1:106" pos:end="1:108">int</name></type> <name pos:start="1:110" pos:end="1:117">dst_size</name></decl></parameter>, <parameter pos:start="1:120" pos:end="1:133"><decl pos:start="1:120" pos:end="1:133"><type pos:start="1:120" pos:end="1:133"><name pos:start="1:120" pos:end="1:122">int</name></type> <name pos:start="1:124" pos:end="1:133">update_ctx</name></decl></parameter>)</parameter_list><block pos:start="1:135" pos:end="291:1">{<block_content pos:start="3:5" pos:end="289:21">

    <decl_stmt pos:start="3:5" pos:end="3:21"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:17">dst_index</name></decl>, <decl pos:start="3:20" pos:end="3:20"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:20" pos:end="3:20">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">index</name><init pos:start="5:14" pos:end="5:23">= <expr pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:16">c</name><operator pos:start="5:17" pos:end="5:18">-&gt;</operator><name pos:start="5:19" pos:end="5:23">index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">frac</name><init pos:start="7:13" pos:end="7:21">= <expr pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:15">c</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:21">frac</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">dst_incr_frac</name><init pos:start="9:22" pos:end="9:48">= <expr pos:start="9:24" pos:end="9:48"><name pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:24">c</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:34">dst_incr</name></name> <operator pos:start="9:36" pos:end="9:36">%</operator> <name pos:start="9:38" pos:end="9:48"><name pos:start="9:38" pos:end="9:38">c</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:48">src_incr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">dst_incr</name><init pos:start="11:17" pos:end="11:48">=      <expr pos:start="11:24" pos:end="11:48"><name pos:start="11:24" pos:end="11:34"><name pos:start="11:24" pos:end="11:24">c</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:34">dst_incr</name></name> <operator pos:start="11:36" pos:end="11:36">/</operator> <name pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:38">c</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:48">src_incr</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><call pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:14">av_assert1</name><argument_list pos:start="15:15" pos:end="15:47">(<argument pos:start="15:16" pos:end="15:46"><expr pos:start="15:16" pos:end="15:46"><name pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:16">c</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:30">filter_shift</name></name> <operator pos:start="15:32" pos:end="15:33">==</operator> <name pos:start="15:35" pos:end="15:46">FILTER_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><call pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:14">av_assert1</name><argument_list pos:start="17:15" pos:end="17:46">(<argument pos:start="17:16" pos:end="17:45"><expr pos:start="17:16" pos:end="17:45"><name pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:16">c</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:28">felem_size</name></name> <operator pos:start="17:30" pos:end="17:31">==</operator> <sizeof pos:start="17:33" pos:end="17:45">sizeof<argument_list pos:start="17:39" pos:end="17:45">(<argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">FELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="275:5"><if pos:start="21:5" pos:end="55:5">if <condition pos:start="21:8" pos:end="21:53">(<expr pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:9">c</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:24">filter_length</name></name> <operator pos:start="21:26" pos:end="21:27">==</operator> <literal type="number" pos:start="21:29" pos:end="21:29">1</literal> <operator pos:start="21:31" pos:end="21:32">&amp;&amp;</operator> <name pos:start="21:34" pos:end="21:47"><name pos:start="21:34" pos:end="21:34">c</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:47">phase_shift</name></name> <operator pos:start="21:49" pos:end="21:50">==</operator> <literal type="number" pos:start="21:52" pos:end="21:52">0</literal></expr>)</condition> <block pos:start="21:55" pos:end="55:5">{<block_content pos:start="23:9" pos:end="53:18">

        <decl_stmt pos:start="23:9" pos:end="23:72"><decl pos:start="23:9" pos:end="23:71"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">int64_t</name></type> <name pos:start="23:17" pos:end="23:22">index2</name><init pos:start="23:23" pos:end="23:71">= <expr pos:start="23:25" pos:end="23:71"><operator pos:start="23:25" pos:end="23:25">(</operator><literal type="number" pos:start="23:26" pos:end="23:28">1LL</literal><operator pos:start="23:29" pos:end="23:30">&lt;&lt;</operator><literal type="number" pos:start="23:31" pos:end="23:32">32</literal><operator pos:start="23:33" pos:end="23:33">)</operator><operator pos:start="23:34" pos:end="23:34">*</operator><name pos:start="23:35" pos:end="23:41"><name pos:start="23:35" pos:end="23:35">c</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:41">frac</name></name><operator pos:start="23:42" pos:end="23:42">/</operator><name pos:start="23:43" pos:end="23:53"><name pos:start="23:43" pos:end="23:43">c</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:53">src_incr</name></name> <operator pos:start="23:55" pos:end="23:55">+</operator> <operator pos:start="23:57" pos:end="23:57">(</operator><literal type="number" pos:start="23:58" pos:end="23:60">1LL</literal><operator pos:start="23:61" pos:end="23:62">&lt;&lt;</operator><literal type="number" pos:start="23:63" pos:end="23:64">32</literal><operator pos:start="23:65" pos:end="23:65">)</operator><operator pos:start="23:66" pos:end="23:66">*</operator><name pos:start="23:67" pos:end="23:71">index</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:60"><decl pos:start="25:9" pos:end="25:59"><type pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">int64_t</name></type> <name pos:start="25:17" pos:end="25:20">incr</name><init pos:start="25:21" pos:end="25:59">= <expr pos:start="25:23" pos:end="25:59"><operator pos:start="25:23" pos:end="25:23">(</operator><literal type="number" pos:start="25:24" pos:end="25:26">1LL</literal><operator pos:start="25:27" pos:end="25:28">&lt;&lt;</operator><literal type="number" pos:start="25:29" pos:end="25:30">32</literal><operator pos:start="25:31" pos:end="25:31">)</operator> <operator pos:start="25:33" pos:end="25:33">*</operator> <name pos:start="25:35" pos:end="25:45"><name pos:start="25:35" pos:end="25:35">c</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:45">dst_incr</name></name> <operator pos:start="25:47" pos:end="25:47">/</operator> <name pos:start="25:49" pos:end="25:59"><name pos:start="25:49" pos:end="25:49">c</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:59">src_incr</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:96"><decl pos:start="27:9" pos:end="27:95"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:20">new_size</name> <init pos:start="27:22" pos:end="27:95">= <expr pos:start="27:24" pos:end="27:95"><operator pos:start="27:24" pos:end="27:24">(</operator><name pos:start="27:25" pos:end="27:32">src_size</name> <operator pos:start="27:34" pos:end="27:34">*</operator> <operator pos:start="27:36" pos:end="27:36">(</operator><name pos:start="27:37" pos:end="27:43">int64_t</name><operator pos:start="27:44" pos:end="27:44">)</operator><name pos:start="27:45" pos:end="27:55"><name pos:start="27:45" pos:end="27:45">c</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:55">src_incr</name></name> <operator pos:start="27:57" pos:end="27:57">-</operator> <name pos:start="27:59" pos:end="27:62">frac</name> <operator pos:start="27:64" pos:end="27:64">+</operator> <name pos:start="27:66" pos:end="27:76"><name pos:start="27:66" pos:end="27:66">c</name><operator pos:start="27:67" pos:end="27:68">-&gt;</operator><name pos:start="27:69" pos:end="27:76">dst_incr</name></name> <operator pos:start="27:78" pos:end="27:78">-</operator> <literal type="number" pos:start="27:80" pos:end="27:80">1</literal><operator pos:start="27:81" pos:end="27:81">)</operator> <operator pos:start="27:83" pos:end="27:83">/</operator> <name pos:start="27:85" pos:end="27:95"><name pos:start="27:85" pos:end="27:85">c</name><operator pos:start="27:86" pos:end="27:87">-&gt;</operator><name pos:start="27:88" pos:end="27:95">dst_incr</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:16">dst_size</name><operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:43"><name pos:start="31:19" pos:end="31:23">FFMIN</name><argument_list pos:start="31:24" pos:end="31:43">(<argument pos:start="31:25" pos:end="31:32"><expr pos:start="31:25" pos:end="31:32"><name pos:start="31:25" pos:end="31:32">dst_size</name></expr></argument>, <argument pos:start="31:35" pos:end="31:42"><expr pos:start="31:35" pos:end="31:42"><name pos:start="31:35" pos:end="31:42">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="35:9" pos:end="41:9">for<control pos:start="35:12" pos:end="35:59">(<init pos:start="35:13" pos:end="35:24"><expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:21">dst_index</name><operator pos:start="35:22" pos:end="35:22">=</operator><literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>;</init> <condition pos:start="35:26" pos:end="35:46"><expr pos:start="35:26" pos:end="35:45"><name pos:start="35:26" pos:end="35:34">dst_index</name> <operator pos:start="35:36" pos:end="35:36">&lt;</operator> <name pos:start="35:38" pos:end="35:45">dst_size</name></expr>;</condition> <incr pos:start="35:48" pos:end="35:58"><expr pos:start="35:48" pos:end="35:58"><name pos:start="35:48" pos:end="35:56">dst_index</name><operator pos:start="35:57" pos:end="35:58">++</operator></expr></incr>)</control><block pos:start="35:60" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:27">

            <expr_stmt pos:start="37:13" pos:end="37:45"><expr pos:start="37:13" pos:end="37:44"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:15">dst</name><index pos:start="37:16" pos:end="37:26">[<expr pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:25">dst_index</name></expr>]</index></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:32">src</name><index pos:start="37:33" pos:end="37:44">[<expr pos:start="37:34" pos:end="37:43"><name pos:start="37:34" pos:end="37:39">index2</name><operator pos:start="37:40" pos:end="37:41">&gt;&gt;</operator><literal type="number" pos:start="37:42" pos:end="37:43">32</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:27"><expr pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:18">index2</name> <operator pos:start="39:20" pos:end="39:21">+=</operator> <name pos:start="39:23" pos:end="39:26">incr</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:13">index</name> <operator pos:start="43:15" pos:end="43:16">+=</operator> <name pos:start="43:18" pos:end="43:26">dst_index</name> <operator pos:start="43:28" pos:end="43:28">*</operator> <name pos:start="43:30" pos:end="43:37">dst_incr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:75"><expr pos:start="45:9" pos:end="45:74"><name pos:start="45:9" pos:end="45:13">index</name> <operator pos:start="45:15" pos:end="45:16">+=</operator> <operator pos:start="45:18" pos:end="45:18">(</operator><name pos:start="45:19" pos:end="45:22">frac</name> <operator pos:start="45:24" pos:end="45:24">+</operator> <name pos:start="45:26" pos:end="45:34">dst_index</name> <operator pos:start="45:36" pos:end="45:36">*</operator> <operator pos:start="45:38" pos:end="45:38">(</operator><name pos:start="45:39" pos:end="45:45">int64_t</name><operator pos:start="45:46" pos:end="45:46">)</operator><name pos:start="45:47" pos:end="45:59">dst_incr_frac</name><operator pos:start="45:60" pos:end="45:60">)</operator> <operator pos:start="45:62" pos:end="45:62">/</operator> <name pos:start="45:64" pos:end="45:74"><name pos:start="45:64" pos:end="45:64">c</name><operator pos:start="45:65" pos:end="45:66">-&gt;</operator><name pos:start="45:67" pos:end="45:74">src_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:75"><expr pos:start="47:9" pos:end="47:74"><name pos:start="47:9" pos:end="47:12">frac</name>   <operator pos:start="47:16" pos:end="47:16">=</operator> <operator pos:start="47:18" pos:end="47:18">(</operator><name pos:start="47:19" pos:end="47:22">frac</name> <operator pos:start="47:24" pos:end="47:24">+</operator> <name pos:start="47:26" pos:end="47:34">dst_index</name> <operator pos:start="47:36" pos:end="47:36">*</operator> <operator pos:start="47:38" pos:end="47:38">(</operator><name pos:start="47:39" pos:end="47:45">int64_t</name><operator pos:start="47:46" pos:end="47:46">)</operator><name pos:start="47:47" pos:end="47:59">dst_incr_frac</name><operator pos:start="47:60" pos:end="47:60">)</operator> <operator pos:start="47:62" pos:end="47:62">%</operator> <name pos:start="47:64" pos:end="47:74"><name pos:start="47:64" pos:end="47:64">c</name><operator pos:start="47:65" pos:end="47:66">-&gt;</operator><name pos:start="47:67" pos:end="47:74">src_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><call pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:18">av_assert2</name><argument_list pos:start="49:19" pos:end="49:30">(<argument pos:start="49:20" pos:end="49:29"><expr pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:24">index</name> <operator pos:start="49:26" pos:end="49:27">&gt;=</operator> <literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:17">consumed</name><operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:24">index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:18"><expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:13">index</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <literal type="number" pos:start="53:17" pos:end="53:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="179:5">else if <condition pos:start="55:15" pos:end="55:26">(<expr pos:start="55:16" pos:end="55:25"><name pos:start="55:16" pos:end="55:20">index</name> <operator pos:start="55:22" pos:end="55:23">&gt;=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>)</condition> <block pos:start="55:28" pos:end="179:5">{<block_content pos:start="57:9" pos:end="177:33">

        <decl_stmt pos:start="57:9" pos:end="57:82"><decl pos:start="57:9" pos:end="57:81"><type pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:15">int64_t</name></type> <name pos:start="57:17" pos:end="57:25">end_index</name> <init pos:start="57:27" pos:end="57:81">= <expr pos:start="57:29" pos:end="57:81"><operator pos:start="57:29" pos:end="57:29">(</operator><literal type="number" pos:start="57:30" pos:end="57:34">1LL</literal> <operator pos:start="57:34" pos:end="57:34">+</operator> <name pos:start="57:36" pos:end="57:43">src_size</name> <operator pos:start="57:45" pos:end="57:45">-</operator> <name pos:start="57:47" pos:end="57:62"><name pos:start="57:47" pos:end="57:47">c</name><operator pos:start="57:48" pos:end="57:49">-&gt;</operator><name pos:start="57:50" pos:end="57:62">filter_length</name></name><operator pos:start="57:63" pos:end="57:63">)</operator> <operator pos:start="57:65" pos:end="57:66">&lt;&lt;</operator> <name pos:start="57:68" pos:end="57:81"><name pos:start="57:68" pos:end="57:68">c</name><operator pos:start="57:69" pos:end="57:70">-&gt;</operator><name pos:start="57:71" pos:end="57:81">phase_shift</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:73"><decl pos:start="59:9" pos:end="59:72"><type pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:15">int64_t</name></type> <name pos:start="59:17" pos:end="59:26">delta_frac</name> <init pos:start="59:28" pos:end="59:72">= <expr pos:start="59:30" pos:end="59:72"><operator pos:start="59:30" pos:end="59:30">(</operator><name pos:start="59:31" pos:end="59:39">end_index</name> <operator pos:start="59:41" pos:end="59:41">-</operator> <name pos:start="59:43" pos:end="59:47">index</name><operator pos:start="59:48" pos:end="59:48">)</operator> <operator pos:start="59:50" pos:end="59:50">*</operator> <name pos:start="59:52" pos:end="59:62"><name pos:start="59:52" pos:end="59:52">c</name><operator pos:start="59:53" pos:end="59:54">-&gt;</operator><name pos:start="59:55" pos:end="59:62">src_incr</name></name> <operator pos:start="59:64" pos:end="59:64">-</operator> <name pos:start="59:66" pos:end="59:72"><name pos:start="59:66" pos:end="59:66">c</name><operator pos:start="59:67" pos:end="59:68">-&gt;</operator><name pos:start="59:69" pos:end="59:72">frac</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:67"><decl pos:start="61:9" pos:end="61:66"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:19">delta_n</name> <init pos:start="61:21" pos:end="61:66">= <expr pos:start="61:23" pos:end="61:66"><operator pos:start="61:23" pos:end="61:23">(</operator><name pos:start="61:24" pos:end="61:33">delta_frac</name> <operator pos:start="61:35" pos:end="61:35">+</operator> <name pos:start="61:37" pos:end="61:47"><name pos:start="61:37" pos:end="61:37">c</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:47">dst_incr</name></name> <operator pos:start="61:49" pos:end="61:49">-</operator> <literal type="number" pos:start="61:51" pos:end="61:51">1</literal><operator pos:start="61:52" pos:end="61:52">)</operator> <operator pos:start="61:54" pos:end="61:54">/</operator> <name pos:start="61:56" pos:end="61:66"><name pos:start="61:56" pos:end="61:56">c</name><operator pos:start="61:57" pos:end="61:58">-&gt;</operator><name pos:start="61:59" pos:end="61:66">dst_incr</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:41"><decl pos:start="63:9" pos:end="63:40"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">n</name> <init pos:start="63:15" pos:end="63:40">= <expr pos:start="63:17" pos:end="63:40"><call pos:start="63:17" pos:end="63:40"><name pos:start="63:17" pos:end="63:21">FFMIN</name><argument_list pos:start="63:22" pos:end="63:40">(<argument pos:start="63:23" pos:end="63:30"><expr pos:start="63:23" pos:end="63:30"><name pos:start="63:23" pos:end="63:30">dst_size</name></expr></argument>, <argument pos:start="63:33" pos:end="63:39"><expr pos:start="63:33" pos:end="63:39"><name pos:start="63:33" pos:end="63:39">delta_n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:25"><decl pos:start="65:9" pos:end="65:24"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:24">sample_index</name></decl>;</decl_stmt>



        <if_stmt pos:start="69:9" pos:end="173:9"><if pos:start="69:9" pos:end="119:9">if <condition pos:start="69:12" pos:end="69:23">(<expr pos:start="69:13" pos:end="69:22"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:22"><name pos:start="69:14" pos:end="69:14">c</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:22">linear</name></name></expr>)</condition> <block pos:start="69:25" pos:end="119:9">{<block_content pos:start="71:13" pos:end="117:13">

            <expr_stmt pos:start="71:13" pos:end="71:51"><expr pos:start="71:13" pos:end="71:50"><name pos:start="71:13" pos:end="71:24">sample_index</name> <operator pos:start="71:26" pos:end="71:26">=</operator> <name pos:start="71:28" pos:end="71:32">index</name> <operator pos:start="71:34" pos:end="71:35">&gt;&gt;</operator> <name pos:start="71:37" pos:end="71:50"><name pos:start="71:37" pos:end="71:37">c</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:50">phase_shift</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:35"><expr pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:17">index</name> <operator pos:start="73:19" pos:end="73:20">&amp;=</operator> <name pos:start="73:22" pos:end="73:34"><name pos:start="73:22" pos:end="73:22">c</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:34">phase_mask</name></name></expr>;</expr_stmt>

            <for pos:start="75:13" pos:end="117:13">for <control pos:start="75:17" pos:end="75:59">(<init pos:start="75:18" pos:end="75:31"><expr pos:start="75:18" pos:end="75:30"><name pos:start="75:18" pos:end="75:26">dst_index</name> <operator pos:start="75:28" pos:end="75:28">=</operator> <literal type="number" pos:start="75:30" pos:end="75:30">0</literal></expr>;</init> <condition pos:start="75:33" pos:end="75:46"><expr pos:start="75:33" pos:end="75:45"><name pos:start="75:33" pos:end="75:41">dst_index</name> <operator pos:start="75:43" pos:end="75:43">&lt;</operator> <name pos:start="75:45" pos:end="75:45">n</name></expr>;</condition> <incr pos:start="75:48" pos:end="75:58"><expr pos:start="75:48" pos:end="75:58"><name pos:start="75:48" pos:end="75:56">dst_index</name><operator pos:start="75:57" pos:end="75:58">++</operator></expr></incr>)</control> <block pos:start="75:61" pos:end="117:13">{<block_content pos:start="77:17" pos:end="115:39">

                <decl_stmt pos:start="77:17" pos:end="82:0"><decl pos:start="77:17" pos:end="77:84"><type pos:start="77:17" pos:end="77:23"><name pos:start="77:17" pos:end="77:21">FELEM</name> <modifier pos:start="77:23" pos:end="77:23">*</modifier></type><name pos:start="77:24" pos:end="77:29">filter</name> <init pos:start="77:31" pos:end="77:84">= <expr pos:start="77:33" pos:end="77:84"><operator pos:start="77:33" pos:end="77:33">(</operator><operator pos:start="77:34" pos:end="77:34">(</operator><name pos:start="77:35" pos:end="77:39">FELEM</name> <operator pos:start="77:41" pos:end="77:41">*</operator><operator pos:start="77:42" pos:end="77:42">)</operator> <name pos:start="77:44" pos:end="77:57"><name pos:start="77:44" pos:end="77:44">c</name><operator pos:start="77:45" pos:end="77:46">-&gt;</operator><name pos:start="77:47" pos:end="77:57">filter_bank</name></name><operator pos:start="77:58" pos:end="77:58">)</operator> <operator pos:start="77:60" pos:end="77:60">+</operator> <name pos:start="77:62" pos:end="77:76"><name pos:start="77:62" pos:end="77:62">c</name><operator pos:start="77:63" pos:end="77:64">-&gt;</operator><name pos:start="77:65" pos:end="77:76">filter_alloc</name></name> <operator pos:start="77:78" pos:end="77:78">*</operator> <name pos:start="77:80" pos:end="77:84">index</name></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="81:1" pos:end="81:18">#<cpp:directive pos:start="81:2" pos:end="81:6">ifdef</cpp:directive> <name pos:start="81:8" pos:end="81:18">COMMON_CORE</name></cpp:ifdef>

                <decl_stmt pos:start="83:17" pos:end="87:29"><decl pos:start="83:17" pos:end="87:28"><type pos:start="83:17" pos:end="87:22"><name pos:start="83:17" pos:end="86:0">COMMON_CORE</name>

<cpp:else pos:start="85:1" pos:end="85:5">#<cpp:directive pos:start="85:2" pos:end="85:5">else</cpp:directive></cpp:else>

                <name pos:start="87:17" pos:end="87:22">FELEM2</name></type> <name pos:start="87:24" pos:end="87:26">val</name><init pos:start="87:27" pos:end="87:28">=<expr pos:start="87:28" pos:end="87:28"><literal type="number" pos:start="87:28" pos:end="87:28">0</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="89:17" pos:end="93:17">for <control pos:start="89:21" pos:end="89:54">(<init pos:start="89:22" pos:end="89:27"><expr pos:start="89:22" pos:end="89:26"><name pos:start="89:22" pos:end="89:22">i</name> <operator pos:start="89:24" pos:end="89:24">=</operator> <literal type="number" pos:start="89:26" pos:end="89:26">0</literal></expr>;</init> <condition pos:start="89:29" pos:end="89:49"><expr pos:start="89:29" pos:end="89:48"><name pos:start="89:29" pos:end="89:29">i</name> <operator pos:start="89:31" pos:end="89:31">&lt;</operator> <name pos:start="89:33" pos:end="89:48"><name pos:start="89:33" pos:end="89:33">c</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:48">filter_length</name></name></expr>;</condition> <incr pos:start="89:51" pos:end="89:53"><expr pos:start="89:51" pos:end="89:53"><name pos:start="89:51" pos:end="89:51">i</name><operator pos:start="89:52" pos:end="89:53">++</operator></expr></incr>)</control> <block pos:start="89:56" pos:end="93:17">{<block_content pos:start="91:21" pos:end="91:69">

                    <expr_stmt pos:start="91:21" pos:end="91:69"><expr pos:start="91:21" pos:end="91:68"><name pos:start="91:21" pos:end="91:23">val</name> <operator pos:start="91:25" pos:end="91:26">+=</operator> <name pos:start="91:28" pos:end="91:48"><name pos:start="91:28" pos:end="91:30">src</name><index pos:start="91:31" pos:end="91:48">[<expr pos:start="91:32" pos:end="91:47"><name pos:start="91:32" pos:end="91:43">sample_index</name> <operator pos:start="91:45" pos:end="91:45">+</operator> <name pos:start="91:47" pos:end="91:47">i</name></expr>]</index></name> <operator pos:start="91:50" pos:end="91:50">*</operator> <operator pos:start="91:52" pos:end="91:52">(</operator><name pos:start="91:53" pos:end="91:58">FELEM2</name><operator pos:start="91:59" pos:end="91:59">)</operator><name pos:start="91:60" pos:end="91:68"><name pos:start="91:60" pos:end="91:65">filter</name><index pos:start="91:66" pos:end="91:68">[<expr pos:start="91:67" pos:end="91:67"><name pos:start="91:67" pos:end="91:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="95:17" pos:end="98:0"><expr pos:start="95:17" pos:end="95:40"><call pos:start="95:17" pos:end="95:40"><name pos:start="95:17" pos:end="95:19">OUT</name><argument_list pos:start="95:20" pos:end="95:40">(<argument pos:start="95:21" pos:end="95:34"><expr pos:start="95:21" pos:end="95:34"><name pos:start="95:21" pos:end="95:34"><name pos:start="95:21" pos:end="95:23">dst</name><index pos:start="95:24" pos:end="95:34">[<expr pos:start="95:25" pos:end="95:33"><name pos:start="95:25" pos:end="95:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="95:37" pos:end="95:39"><expr pos:start="95:37" pos:end="95:39"><name pos:start="95:37" pos:end="95:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>



                <expr_stmt pos:start="101:17" pos:end="101:38"><expr pos:start="101:17" pos:end="101:37"><name pos:start="101:17" pos:end="101:20">frac</name> <operator pos:start="101:22" pos:end="101:23">+=</operator> <name pos:start="101:25" pos:end="101:37">dst_incr_frac</name></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:34"><expr pos:start="103:17" pos:end="103:33"><name pos:start="103:17" pos:end="103:21">index</name> <operator pos:start="103:23" pos:end="103:24">+=</operator> <name pos:start="103:26" pos:end="103:33">dst_incr</name></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="111:17"><if pos:start="105:17" pos:end="111:17">if <condition pos:start="105:20" pos:end="105:40">(<expr pos:start="105:21" pos:end="105:39"><name pos:start="105:21" pos:end="105:24">frac</name> <operator pos:start="105:26" pos:end="105:27">&gt;=</operator> <name pos:start="105:29" pos:end="105:39"><name pos:start="105:29" pos:end="105:29">c</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:39">src_incr</name></name></expr>)</condition> <block pos:start="105:42" pos:end="111:17">{<block_content pos:start="107:21" pos:end="109:28">

                    <expr_stmt pos:start="107:21" pos:end="107:40"><expr pos:start="107:21" pos:end="107:39"><name pos:start="107:21" pos:end="107:24">frac</name> <operator pos:start="107:26" pos:end="107:27">-=</operator> <name pos:start="107:29" pos:end="107:39"><name pos:start="107:29" pos:end="107:29">c</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:39">src_incr</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:28"><expr pos:start="109:21" pos:end="109:27"><name pos:start="109:21" pos:end="109:25">index</name><operator pos:start="109:26" pos:end="109:27">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:56"><expr pos:start="113:17" pos:end="113:55"><name pos:start="113:17" pos:end="113:28">sample_index</name> <operator pos:start="113:30" pos:end="113:31">+=</operator> <name pos:start="113:33" pos:end="113:37">index</name> <operator pos:start="113:39" pos:end="113:40">&gt;&gt;</operator> <name pos:start="113:42" pos:end="113:55"><name pos:start="113:42" pos:end="113:42">c</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:55">phase_shift</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:39"><expr pos:start="115:17" pos:end="115:38"><name pos:start="115:17" pos:end="115:21">index</name> <operator pos:start="115:23" pos:end="115:24">&amp;=</operator> <name pos:start="115:26" pos:end="115:38"><name pos:start="115:26" pos:end="115:26">c</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:38">phase_mask</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="173:9">else <block pos:start="119:16" pos:end="173:9">{<block_content pos:start="121:13" pos:end="171:13">

            <expr_stmt pos:start="121:13" pos:end="121:51"><expr pos:start="121:13" pos:end="121:50"><name pos:start="121:13" pos:end="121:24">sample_index</name> <operator pos:start="121:26" pos:end="121:26">=</operator> <name pos:start="121:28" pos:end="121:32">index</name> <operator pos:start="121:34" pos:end="121:35">&gt;&gt;</operator> <name pos:start="121:37" pos:end="121:50"><name pos:start="121:37" pos:end="121:37">c</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:50">phase_shift</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:35"><expr pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:17">index</name> <operator pos:start="123:19" pos:end="123:20">&amp;=</operator> <name pos:start="123:22" pos:end="123:34"><name pos:start="123:22" pos:end="123:22">c</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:34">phase_mask</name></name></expr>;</expr_stmt>

            <for pos:start="125:13" pos:end="171:13">for <control pos:start="125:17" pos:end="125:59">(<init pos:start="125:18" pos:end="125:31"><expr pos:start="125:18" pos:end="125:30"><name pos:start="125:18" pos:end="125:26">dst_index</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>;</init> <condition pos:start="125:33" pos:end="125:46"><expr pos:start="125:33" pos:end="125:45"><name pos:start="125:33" pos:end="125:41">dst_index</name> <operator pos:start="125:43" pos:end="125:43">&lt;</operator> <name pos:start="125:45" pos:end="125:45">n</name></expr>;</condition> <incr pos:start="125:48" pos:end="125:58"><expr pos:start="125:48" pos:end="125:58"><name pos:start="125:48" pos:end="125:56">dst_index</name><operator pos:start="125:57" pos:end="125:58">++</operator></expr></incr>)</control> <block pos:start="125:61" pos:end="171:13">{<block_content pos:start="127:17" pos:end="169:39">

                <decl_stmt pos:start="127:17" pos:end="127:85"><decl pos:start="127:17" pos:end="127:84"><type pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:21">FELEM</name> <modifier pos:start="127:23" pos:end="127:23">*</modifier></type><name pos:start="127:24" pos:end="127:29">filter</name> <init pos:start="127:31" pos:end="127:84">= <expr pos:start="127:33" pos:end="127:84"><operator pos:start="127:33" pos:end="127:33">(</operator><operator pos:start="127:34" pos:end="127:34">(</operator><name pos:start="127:35" pos:end="127:39">FELEM</name> <operator pos:start="127:41" pos:end="127:41">*</operator><operator pos:start="127:42" pos:end="127:42">)</operator> <name pos:start="127:44" pos:end="127:57"><name pos:start="127:44" pos:end="127:44">c</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:57">filter_bank</name></name><operator pos:start="127:58" pos:end="127:58">)</operator> <operator pos:start="127:60" pos:end="127:60">+</operator> <name pos:start="127:62" pos:end="127:76"><name pos:start="127:62" pos:end="127:62">c</name><operator pos:start="127:63" pos:end="127:64">-&gt;</operator><name pos:start="127:65" pos:end="127:76">filter_alloc</name></name> <operator pos:start="127:78" pos:end="127:78">*</operator> <name pos:start="127:80" pos:end="127:84">index</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="129:17" pos:end="134:0"><decl pos:start="129:17" pos:end="129:28"><type pos:start="129:17" pos:end="129:22"><name pos:start="129:17" pos:end="129:22">FELEM2</name></type> <name pos:start="129:24" pos:end="129:26">val</name><init pos:start="129:27" pos:end="129:28">=<expr pos:start="129:28" pos:end="129:28"><literal type="number" pos:start="129:28" pos:end="129:28">0</literal></expr></init></decl>, <decl pos:start="129:31" pos:end="129:36"><type ref="prev" pos:start="129:17" pos:end="129:22"/><name pos:start="129:31" pos:end="129:32">v2</name> <init pos:start="129:34" pos:end="129:36">= <expr pos:start="129:36" pos:end="129:36"><literal type="number" pos:start="129:36" pos:end="129:36">0</literal></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="133:1" pos:end="133:18">#<cpp:directive pos:start="133:2" pos:end="133:6">ifdef</cpp:directive> <name pos:start="133:8" pos:end="133:18">LINEAR_CORE</name></cpp:ifdef>

                <macro pos:start="135:17" pos:end="138:0"><name pos:start="135:17" pos:end="138:0">LINEAR_CORE</name></macro>

<cpp:else pos:start="137:1" pos:end="137:5">#<cpp:directive pos:start="137:2" pos:end="137:5">else</cpp:directive></cpp:else>

                <for pos:start="139:17" pos:end="148:0">for <control pos:start="139:21" pos:end="139:54">(<init pos:start="139:22" pos:end="139:27"><expr pos:start="139:22" pos:end="139:26"><name pos:start="139:22" pos:end="139:22">i</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>;</init> <condition pos:start="139:29" pos:end="139:49"><expr pos:start="139:29" pos:end="139:48"><name pos:start="139:29" pos:end="139:29">i</name> <operator pos:start="139:31" pos:end="139:31">&lt;</operator> <name pos:start="139:33" pos:end="139:48"><name pos:start="139:33" pos:end="139:33">c</name><operator pos:start="139:34" pos:end="139:35">-&gt;</operator><name pos:start="139:36" pos:end="139:48">filter_length</name></name></expr>;</condition> <incr pos:start="139:51" pos:end="139:53"><expr pos:start="139:51" pos:end="139:53"><name pos:start="139:51" pos:end="139:51">i</name><operator pos:start="139:52" pos:end="139:53">++</operator></expr></incr>)</control> <block pos:start="139:56" pos:end="148:0">{<block_content pos:start="141:21" pos:end="143:87">

                    <expr_stmt pos:start="141:21" pos:end="141:69"><expr pos:start="141:21" pos:end="141:68"><name pos:start="141:21" pos:end="141:23">val</name> <operator pos:start="141:25" pos:end="141:26">+=</operator> <name pos:start="141:28" pos:end="141:48"><name pos:start="141:28" pos:end="141:30">src</name><index pos:start="141:31" pos:end="141:48">[<expr pos:start="141:32" pos:end="141:47"><name pos:start="141:32" pos:end="141:43">sample_index</name> <operator pos:start="141:45" pos:end="141:45">+</operator> <name pos:start="141:47" pos:end="141:47">i</name></expr>]</index></name> <operator pos:start="141:50" pos:end="141:50">*</operator> <operator pos:start="141:52" pos:end="141:52">(</operator><name pos:start="141:53" pos:end="141:58">FELEM2</name><operator pos:start="141:59" pos:end="141:59">)</operator><name pos:start="141:60" pos:end="141:68"><name pos:start="141:60" pos:end="141:65">filter</name><index pos:start="141:66" pos:end="141:68">[<expr pos:start="141:67" pos:end="141:67"><name pos:start="141:67" pos:end="141:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:87"><expr pos:start="143:21" pos:end="143:86"><name pos:start="143:21" pos:end="143:22">v2</name>  <operator pos:start="143:25" pos:end="143:26">+=</operator> <name pos:start="143:28" pos:end="143:48"><name pos:start="143:28" pos:end="143:30">src</name><index pos:start="143:31" pos:end="143:48">[<expr pos:start="143:32" pos:end="143:47"><name pos:start="143:32" pos:end="143:43">sample_index</name> <operator pos:start="143:45" pos:end="143:45">+</operator> <name pos:start="143:47" pos:end="143:47">i</name></expr>]</index></name> <operator pos:start="143:50" pos:end="143:50">*</operator> <operator pos:start="143:52" pos:end="143:52">(</operator><name pos:start="143:53" pos:end="143:58">FELEM2</name><operator pos:start="143:59" pos:end="143:59">)</operator><name pos:start="143:60" pos:end="143:86"><name pos:start="143:60" pos:end="143:65">filter</name><index pos:start="143:66" pos:end="143:86">[<expr pos:start="143:67" pos:end="143:85"><name pos:start="143:67" pos:end="143:67">i</name> <operator pos:start="143:69" pos:end="143:69">+</operator> <name pos:start="143:71" pos:end="143:85"><name pos:start="143:71" pos:end="143:71">c</name><operator pos:start="143:72" pos:end="143:73">-&gt;</operator><name pos:start="143:74" pos:end="143:85">filter_alloc</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="149:17" pos:end="149:64"><expr pos:start="149:17" pos:end="149:63"><name pos:start="149:17" pos:end="149:19">val</name> <operator pos:start="149:21" pos:end="149:22">+=</operator> <operator pos:start="149:24" pos:end="149:24">(</operator><name pos:start="149:25" pos:end="149:26">v2</name> <operator pos:start="149:28" pos:end="149:28">-</operator> <name pos:start="149:30" pos:end="149:32">val</name><operator pos:start="149:33" pos:end="149:33">)</operator> <operator pos:start="149:35" pos:end="149:35">*</operator> <operator pos:start="149:37" pos:end="149:37">(</operator><name pos:start="149:38" pos:end="149:43">FELEML</name><operator pos:start="149:44" pos:end="149:44">)</operator> <name pos:start="149:46" pos:end="149:49">frac</name> <operator pos:start="149:51" pos:end="149:51">/</operator> <name pos:start="149:53" pos:end="149:63"><name pos:start="149:53" pos:end="149:53">c</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:63">src_incr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:41"><expr pos:start="151:17" pos:end="151:40"><call pos:start="151:17" pos:end="151:40"><name pos:start="151:17" pos:end="151:19">OUT</name><argument_list pos:start="151:20" pos:end="151:40">(<argument pos:start="151:21" pos:end="151:34"><expr pos:start="151:21" pos:end="151:34"><name pos:start="151:21" pos:end="151:34"><name pos:start="151:21" pos:end="151:23">dst</name><index pos:start="151:24" pos:end="151:34">[<expr pos:start="151:25" pos:end="151:33"><name pos:start="151:25" pos:end="151:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="151:37" pos:end="151:39"><expr pos:start="151:37" pos:end="151:39"><name pos:start="151:37" pos:end="151:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="155:17" pos:end="155:38"><expr pos:start="155:17" pos:end="155:37"><name pos:start="155:17" pos:end="155:20">frac</name> <operator pos:start="155:22" pos:end="155:23">+=</operator> <name pos:start="155:25" pos:end="155:37">dst_incr_frac</name></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:34"><expr pos:start="157:17" pos:end="157:33"><name pos:start="157:17" pos:end="157:21">index</name> <operator pos:start="157:23" pos:end="157:24">+=</operator> <name pos:start="157:26" pos:end="157:33">dst_incr</name></expr>;</expr_stmt>

                <if_stmt pos:start="159:17" pos:end="165:17"><if pos:start="159:17" pos:end="165:17">if <condition pos:start="159:20" pos:end="159:40">(<expr pos:start="159:21" pos:end="159:39"><name pos:start="159:21" pos:end="159:24">frac</name> <operator pos:start="159:26" pos:end="159:27">&gt;=</operator> <name pos:start="159:29" pos:end="159:39"><name pos:start="159:29" pos:end="159:29">c</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:39">src_incr</name></name></expr>)</condition> <block pos:start="159:42" pos:end="165:17">{<block_content pos:start="161:21" pos:end="163:28">

                    <expr_stmt pos:start="161:21" pos:end="161:40"><expr pos:start="161:21" pos:end="161:39"><name pos:start="161:21" pos:end="161:24">frac</name> <operator pos:start="161:26" pos:end="161:27">-=</operator> <name pos:start="161:29" pos:end="161:39"><name pos:start="161:29" pos:end="161:29">c</name><operator pos:start="161:30" pos:end="161:31">-&gt;</operator><name pos:start="161:32" pos:end="161:39">src_incr</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:28"><expr pos:start="163:21" pos:end="163:27"><name pos:start="163:21" pos:end="163:25">index</name><operator pos:start="163:26" pos:end="163:27">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:56"><expr pos:start="167:17" pos:end="167:55"><name pos:start="167:17" pos:end="167:28">sample_index</name> <operator pos:start="167:30" pos:end="167:31">+=</operator> <name pos:start="167:33" pos:end="167:37">index</name> <operator pos:start="167:39" pos:end="167:40">&gt;&gt;</operator> <name pos:start="167:42" pos:end="167:55"><name pos:start="167:42" pos:end="167:42">c</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:55">phase_shift</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:39"><expr pos:start="169:17" pos:end="169:38"><name pos:start="169:17" pos:end="169:21">index</name> <operator pos:start="169:23" pos:end="169:24">&amp;=</operator> <name pos:start="169:26" pos:end="169:38"><name pos:start="169:26" pos:end="169:26">c</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:38">phase_mask</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="177:9" pos:end="177:33"><expr pos:start="177:9" pos:end="177:32"><operator pos:start="177:9" pos:end="177:9">*</operator><name pos:start="177:10" pos:end="177:17">consumed</name> <operator pos:start="177:19" pos:end="177:19">=</operator> <name pos:start="177:21" pos:end="177:32">sample_index</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="179:7" pos:end="275:5">else <block pos:start="179:12" pos:end="275:5">{<block_content pos:start="181:9" pos:end="273:58">

        <decl_stmt pos:start="181:9" pos:end="181:29"><decl pos:start="181:9" pos:end="181:28"><type pos:start="181:9" pos:end="181:11"><name pos:start="181:9" pos:end="181:11">int</name></type> <name pos:start="181:13" pos:end="181:24">sample_index</name> <init pos:start="181:26" pos:end="181:28">= <expr pos:start="181:28" pos:end="181:28"><literal type="number" pos:start="181:28" pos:end="181:28">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="183:9" pos:end="269:9">for<control pos:start="183:12" pos:end="183:59">(<init pos:start="183:13" pos:end="183:24"><expr pos:start="183:13" pos:end="183:23"><name pos:start="183:13" pos:end="183:21">dst_index</name><operator pos:start="183:22" pos:end="183:22">=</operator><literal type="number" pos:start="183:23" pos:end="183:23">0</literal></expr>;</init> <condition pos:start="183:26" pos:end="183:46"><expr pos:start="183:26" pos:end="183:45"><name pos:start="183:26" pos:end="183:34">dst_index</name> <operator pos:start="183:36" pos:end="183:36">&lt;</operator> <name pos:start="183:38" pos:end="183:45">dst_size</name></expr>;</condition> <incr pos:start="183:48" pos:end="183:58"><expr pos:start="183:48" pos:end="183:58"><name pos:start="183:48" pos:end="183:56">dst_index</name><operator pos:start="183:57" pos:end="183:58">++</operator></expr></incr>)</control><block pos:start="183:60" pos:end="269:9">{<block_content pos:start="185:13" pos:end="267:13">

            <decl_stmt pos:start="185:13" pos:end="185:26"><decl pos:start="185:13" pos:end="185:25"><type pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:17">FELEM</name> <modifier pos:start="185:19" pos:end="185:19">*</modifier></type><name pos:start="185:20" pos:end="185:25">filter</name></decl>;</decl_stmt>

            <decl_stmt pos:start="187:13" pos:end="187:25"><decl pos:start="187:13" pos:end="187:24"><type pos:start="187:13" pos:end="187:18"><name pos:start="187:13" pos:end="187:18">FELEM2</name></type> <name pos:start="187:20" pos:end="187:22">val</name><init pos:start="187:23" pos:end="187:24">=<expr pos:start="187:24" pos:end="187:24"><literal type="number" pos:start="187:24" pos:end="187:24">0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="191:13" pos:end="191:52"><expr pos:start="191:13" pos:end="191:51"><name pos:start="191:13" pos:end="191:24">sample_index</name> <operator pos:start="191:26" pos:end="191:27">+=</operator> <name pos:start="191:29" pos:end="191:33">index</name> <operator pos:start="191:35" pos:end="191:36">&gt;&gt;</operator> <name pos:start="191:38" pos:end="191:51"><name pos:start="191:38" pos:end="191:38">c</name><operator pos:start="191:39" pos:end="191:40">-&gt;</operator><name pos:start="191:41" pos:end="191:51">phase_shift</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:35"><expr pos:start="193:13" pos:end="193:34"><name pos:start="193:13" pos:end="193:17">index</name> <operator pos:start="193:19" pos:end="193:20">&amp;=</operator> <name pos:start="193:22" pos:end="193:34"><name pos:start="193:22" pos:end="193:22">c</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:34">phase_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:70"><expr pos:start="195:13" pos:end="195:69"><name pos:start="195:13" pos:end="195:18">filter</name> <operator pos:start="195:20" pos:end="195:20">=</operator> <operator pos:start="195:22" pos:end="195:22">(</operator><operator pos:start="195:23" pos:end="195:23">(</operator><name pos:start="195:24" pos:end="195:28">FELEM</name><operator pos:start="195:29" pos:end="195:29">*</operator><operator pos:start="195:30" pos:end="195:30">)</operator><name pos:start="195:31" pos:end="195:44"><name pos:start="195:31" pos:end="195:31">c</name><operator pos:start="195:32" pos:end="195:33">-&gt;</operator><name pos:start="195:34" pos:end="195:44">filter_bank</name></name><operator pos:start="195:45" pos:end="195:45">)</operator> <operator pos:start="195:47" pos:end="195:47">+</operator> <name pos:start="195:49" pos:end="195:63"><name pos:start="195:49" pos:end="195:49">c</name><operator pos:start="195:50" pos:end="195:51">-&gt;</operator><name pos:start="195:52" pos:end="195:63">filter_alloc</name></name><operator pos:start="195:64" pos:end="195:64">*</operator><name pos:start="195:65" pos:end="195:69">index</name></expr>;</expr_stmt>



            <if_stmt pos:start="199:13" pos:end="253:13"><if pos:start="199:13" pos:end="203:13">if<condition pos:start="199:15" pos:end="199:87">(<expr pos:start="199:16" pos:end="199:86"><name pos:start="199:16" pos:end="199:27">sample_index</name> <operator pos:start="199:29" pos:end="199:29">+</operator> <name pos:start="199:31" pos:end="199:46"><name pos:start="199:31" pos:end="199:31">c</name><operator pos:start="199:32" pos:end="199:33">-&gt;</operator><name pos:start="199:34" pos:end="199:46">filter_length</name></name> <operator pos:start="199:48" pos:end="199:48">&gt;</operator> <name pos:start="199:50" pos:end="199:57">src_size</name> <operator pos:start="199:59" pos:end="199:60">||</operator> <operator pos:start="199:62" pos:end="199:62">-</operator><name pos:start="199:63" pos:end="199:74">sample_index</name> <operator pos:start="199:76" pos:end="199:77">&gt;=</operator> <name pos:start="199:79" pos:end="199:86">src_size</name></expr>)</condition><block pos:start="199:88" pos:end="203:13">{<block_content pos:start="201:17" pos:end="201:22">

                <break pos:start="201:17" pos:end="201:22">break;</break>

            </block_content>}</block></if><if type="elseif" pos:start="203:14" pos:end="211:13">else if<condition pos:start="203:21" pos:end="203:38">(<expr pos:start="203:22" pos:end="203:37"><name pos:start="203:22" pos:end="203:33">sample_index</name> <operator pos:start="203:35" pos:end="203:35">&lt;</operator> <literal type="number" pos:start="203:37" pos:end="203:37">0</literal></expr>)</condition><block pos:start="203:39" pos:end="211:13">{<block_content pos:start="205:17" pos:end="209:41">

                <for pos:start="205:17" pos:end="207:76">for<control pos:start="205:20" pos:end="205:49">(<init pos:start="205:21" pos:end="205:24"><expr pos:start="205:21" pos:end="205:23"><name pos:start="205:21" pos:end="205:21">i</name><operator pos:start="205:22" pos:end="205:22">=</operator><literal type="number" pos:start="205:23" pos:end="205:23">0</literal></expr>;</init> <condition pos:start="205:26" pos:end="205:44"><expr pos:start="205:26" pos:end="205:43"><name pos:start="205:26" pos:end="205:26">i</name><operator pos:start="205:27" pos:end="205:27">&lt;</operator><name pos:start="205:28" pos:end="205:43"><name pos:start="205:28" pos:end="205:28">c</name><operator pos:start="205:29" pos:end="205:30">-&gt;</operator><name pos:start="205:31" pos:end="205:43">filter_length</name></name></expr>;</condition> <incr pos:start="205:46" pos:end="205:48"><expr pos:start="205:46" pos:end="205:48"><name pos:start="205:46" pos:end="205:46">i</name><operator pos:start="205:47" pos:end="205:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="207:21" pos:end="207:76"><block_content pos:start="207:21" pos:end="207:76">

                    <expr_stmt pos:start="207:21" pos:end="207:76"><expr pos:start="207:21" pos:end="207:75"><name pos:start="207:21" pos:end="207:23">val</name> <operator pos:start="207:25" pos:end="207:26">+=</operator> <name pos:start="207:28" pos:end="207:55"><name pos:start="207:28" pos:end="207:30">src</name><index pos:start="207:31" pos:end="207:55">[<expr pos:start="207:32" pos:end="207:54"><call pos:start="207:32" pos:end="207:54"><name pos:start="207:32" pos:end="207:36">FFABS</name><argument_list pos:start="207:37" pos:end="207:54">(<argument pos:start="207:38" pos:end="207:53"><expr pos:start="207:38" pos:end="207:53"><name pos:start="207:38" pos:end="207:49">sample_index</name> <operator pos:start="207:51" pos:end="207:51">+</operator> <name pos:start="207:53" pos:end="207:53">i</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="207:57" pos:end="207:57">*</operator> <operator pos:start="207:59" pos:end="207:59">(</operator><name pos:start="207:60" pos:end="207:65">FELEM2</name><operator pos:start="207:66" pos:end="207:66">)</operator><name pos:start="207:67" pos:end="207:75"><name pos:start="207:67" pos:end="207:72">filter</name><index pos:start="207:73" pos:end="207:75">[<expr pos:start="207:74" pos:end="207:74"><name pos:start="207:74" pos:end="207:74">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="209:17" pos:end="209:41"><expr pos:start="209:17" pos:end="209:40"><call pos:start="209:17" pos:end="209:40"><name pos:start="209:17" pos:end="209:19">OUT</name><argument_list pos:start="209:20" pos:end="209:40">(<argument pos:start="209:21" pos:end="209:34"><expr pos:start="209:21" pos:end="209:34"><name pos:start="209:21" pos:end="209:34"><name pos:start="209:21" pos:end="209:23">dst</name><index pos:start="209:24" pos:end="209:34">[<expr pos:start="209:25" pos:end="209:33"><name pos:start="209:25" pos:end="209:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="209:37" pos:end="209:39"><expr pos:start="209:37" pos:end="209:39"><name pos:start="209:37" pos:end="209:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="211:14" pos:end="235:13">else if<condition pos:start="211:21" pos:end="211:31">(<expr pos:start="211:22" pos:end="211:30"><name pos:start="211:22" pos:end="211:30"><name pos:start="211:22" pos:end="211:22">c</name><operator pos:start="211:23" pos:end="211:24">-&gt;</operator><name pos:start="211:25" pos:end="211:30">linear</name></name></expr>)</condition><block pos:start="211:32" pos:end="235:13">{<block_content pos:start="213:17" pos:end="233:41">

                <decl_stmt pos:start="213:17" pos:end="216:0"><decl pos:start="213:17" pos:end="213:27"><type pos:start="213:17" pos:end="213:22"><name pos:start="213:17" pos:end="213:22">FELEM2</name></type> <name pos:start="213:24" pos:end="213:25">v2</name><init pos:start="213:26" pos:end="213:27">=<expr pos:start="213:27" pos:end="213:27"><literal type="number" pos:start="213:27" pos:end="213:27">0</literal></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="215:1" pos:end="215:18">#<cpp:directive pos:start="215:2" pos:end="215:6">ifdef</cpp:directive> <name pos:start="215:8" pos:end="215:18">LINEAR_CORE</name></cpp:ifdef>

                <macro pos:start="217:17" pos:end="220:0"><name pos:start="217:17" pos:end="220:0">LINEAR_CORE</name></macro>

<cpp:else pos:start="219:1" pos:end="219:5">#<cpp:directive pos:start="219:2" pos:end="219:5">else</cpp:directive></cpp:else>

                <for pos:start="221:17" pos:end="230:0">for<control pos:start="221:20" pos:end="221:49">(<init pos:start="221:21" pos:end="221:24"><expr pos:start="221:21" pos:end="221:23"><name pos:start="221:21" pos:end="221:21">i</name><operator pos:start="221:22" pos:end="221:22">=</operator><literal type="number" pos:start="221:23" pos:end="221:23">0</literal></expr>;</init> <condition pos:start="221:26" pos:end="221:44"><expr pos:start="221:26" pos:end="221:43"><name pos:start="221:26" pos:end="221:26">i</name><operator pos:start="221:27" pos:end="221:27">&lt;</operator><name pos:start="221:28" pos:end="221:43"><name pos:start="221:28" pos:end="221:28">c</name><operator pos:start="221:29" pos:end="221:30">-&gt;</operator><name pos:start="221:31" pos:end="221:43">filter_length</name></name></expr>;</condition> <incr pos:start="221:46" pos:end="221:48"><expr pos:start="221:46" pos:end="221:48"><name pos:start="221:46" pos:end="221:46">i</name><operator pos:start="221:47" pos:end="221:48">++</operator></expr></incr>)</control><block pos:start="221:50" pos:end="230:0">{<block_content pos:start="223:21" pos:end="225:87">

                    <expr_stmt pos:start="223:21" pos:end="223:69"><expr pos:start="223:21" pos:end="223:68"><name pos:start="223:21" pos:end="223:23">val</name> <operator pos:start="223:25" pos:end="223:26">+=</operator> <name pos:start="223:28" pos:end="223:48"><name pos:start="223:28" pos:end="223:30">src</name><index pos:start="223:31" pos:end="223:48">[<expr pos:start="223:32" pos:end="223:47"><name pos:start="223:32" pos:end="223:43">sample_index</name> <operator pos:start="223:45" pos:end="223:45">+</operator> <name pos:start="223:47" pos:end="223:47">i</name></expr>]</index></name> <operator pos:start="223:50" pos:end="223:50">*</operator> <operator pos:start="223:52" pos:end="223:52">(</operator><name pos:start="223:53" pos:end="223:58">FELEM2</name><operator pos:start="223:59" pos:end="223:59">)</operator><name pos:start="223:60" pos:end="223:68"><name pos:start="223:60" pos:end="223:65">filter</name><index pos:start="223:66" pos:end="223:68">[<expr pos:start="223:67" pos:end="223:67"><name pos:start="223:67" pos:end="223:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="225:21" pos:end="225:87"><expr pos:start="225:21" pos:end="225:86"><name pos:start="225:21" pos:end="225:22">v2</name>  <operator pos:start="225:25" pos:end="225:26">+=</operator> <name pos:start="225:28" pos:end="225:48"><name pos:start="225:28" pos:end="225:30">src</name><index pos:start="225:31" pos:end="225:48">[<expr pos:start="225:32" pos:end="225:47"><name pos:start="225:32" pos:end="225:43">sample_index</name> <operator pos:start="225:45" pos:end="225:45">+</operator> <name pos:start="225:47" pos:end="225:47">i</name></expr>]</index></name> <operator pos:start="225:50" pos:end="225:50">*</operator> <operator pos:start="225:52" pos:end="225:52">(</operator><name pos:start="225:53" pos:end="225:58">FELEM2</name><operator pos:start="225:59" pos:end="225:59">)</operator><name pos:start="225:60" pos:end="225:86"><name pos:start="225:60" pos:end="225:65">filter</name><index pos:start="225:66" pos:end="225:86">[<expr pos:start="225:67" pos:end="225:85"><name pos:start="225:67" pos:end="225:67">i</name> <operator pos:start="225:69" pos:end="225:69">+</operator> <name pos:start="225:71" pos:end="225:85"><name pos:start="225:71" pos:end="225:71">c</name><operator pos:start="225:72" pos:end="225:73">-&gt;</operator><name pos:start="225:74" pos:end="225:85">filter_alloc</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

<cpp:endif pos:start="229:1" pos:end="229:6">#<cpp:directive pos:start="229:2" pos:end="229:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="231:17" pos:end="231:57"><expr pos:start="231:17" pos:end="231:56"><name pos:start="231:17" pos:end="231:19">val</name><operator pos:start="231:20" pos:end="231:21">+=</operator><operator pos:start="231:22" pos:end="231:22">(</operator><name pos:start="231:23" pos:end="231:24">v2</name><operator pos:start="231:25" pos:end="231:25">-</operator><name pos:start="231:26" pos:end="231:28">val</name><operator pos:start="231:29" pos:end="231:29">)</operator><operator pos:start="231:30" pos:end="231:30">*</operator><operator pos:start="231:31" pos:end="231:31">(</operator><name pos:start="231:32" pos:end="231:37">FELEML</name><operator pos:start="231:38" pos:end="231:38">)</operator><name pos:start="231:39" pos:end="231:42">frac</name> <operator pos:start="231:44" pos:end="231:44">/</operator> <name pos:start="231:46" pos:end="231:56"><name pos:start="231:46" pos:end="231:46">c</name><operator pos:start="231:47" pos:end="231:48">-&gt;</operator><name pos:start="231:49" pos:end="231:56">src_incr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:41"><expr pos:start="233:17" pos:end="233:40"><call pos:start="233:17" pos:end="233:40"><name pos:start="233:17" pos:end="233:19">OUT</name><argument_list pos:start="233:20" pos:end="233:40">(<argument pos:start="233:21" pos:end="233:34"><expr pos:start="233:21" pos:end="233:34"><name pos:start="233:21" pos:end="233:34"><name pos:start="233:21" pos:end="233:23">dst</name><index pos:start="233:24" pos:end="233:34">[<expr pos:start="233:25" pos:end="233:33"><name pos:start="233:25" pos:end="233:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="233:37" pos:end="233:39"><expr pos:start="233:37" pos:end="233:39"><name pos:start="233:37" pos:end="233:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="235:14" pos:end="253:13">else<block pos:start="235:18" pos:end="253:13">{<block_content pos:start="239:17" pos:end="252:0">

<cpp:ifdef pos:start="237:1" pos:end="237:18">#<cpp:directive pos:start="237:2" pos:end="237:6">ifdef</cpp:directive> <name pos:start="237:8" pos:end="237:18">COMMON_CORE</name></cpp:ifdef>

                <macro pos:start="239:17" pos:end="242:0"><name pos:start="239:17" pos:end="242:0">COMMON_CORE</name></macro>

<cpp:else pos:start="241:1" pos:end="241:5">#<cpp:directive pos:start="241:2" pos:end="241:5">else</cpp:directive></cpp:else>

                <for pos:start="243:17" pos:end="247:17">for<control pos:start="243:20" pos:end="243:49">(<init pos:start="243:21" pos:end="243:24"><expr pos:start="243:21" pos:end="243:23"><name pos:start="243:21" pos:end="243:21">i</name><operator pos:start="243:22" pos:end="243:22">=</operator><literal type="number" pos:start="243:23" pos:end="243:23">0</literal></expr>;</init> <condition pos:start="243:26" pos:end="243:44"><expr pos:start="243:26" pos:end="243:43"><name pos:start="243:26" pos:end="243:26">i</name><operator pos:start="243:27" pos:end="243:27">&lt;</operator><name pos:start="243:28" pos:end="243:43"><name pos:start="243:28" pos:end="243:28">c</name><operator pos:start="243:29" pos:end="243:30">-&gt;</operator><name pos:start="243:31" pos:end="243:43">filter_length</name></name></expr>;</condition> <incr pos:start="243:46" pos:end="243:48"><expr pos:start="243:46" pos:end="243:48"><name pos:start="243:46" pos:end="243:46">i</name><operator pos:start="243:47" pos:end="243:48">++</operator></expr></incr>)</control><block pos:start="243:50" pos:end="247:17">{<block_content pos:start="245:21" pos:end="245:69">

                    <expr_stmt pos:start="245:21" pos:end="245:69"><expr pos:start="245:21" pos:end="245:68"><name pos:start="245:21" pos:end="245:23">val</name> <operator pos:start="245:25" pos:end="245:26">+=</operator> <name pos:start="245:28" pos:end="245:48"><name pos:start="245:28" pos:end="245:30">src</name><index pos:start="245:31" pos:end="245:48">[<expr pos:start="245:32" pos:end="245:47"><name pos:start="245:32" pos:end="245:43">sample_index</name> <operator pos:start="245:45" pos:end="245:45">+</operator> <name pos:start="245:47" pos:end="245:47">i</name></expr>]</index></name> <operator pos:start="245:50" pos:end="245:50">*</operator> <operator pos:start="245:52" pos:end="245:52">(</operator><name pos:start="245:53" pos:end="245:58">FELEM2</name><operator pos:start="245:59" pos:end="245:59">)</operator><name pos:start="245:60" pos:end="245:68"><name pos:start="245:60" pos:end="245:65">filter</name><index pos:start="245:66" pos:end="245:68">[<expr pos:start="245:67" pos:end="245:67"><name pos:start="245:67" pos:end="245:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="249:17" pos:end="252:0"><expr pos:start="249:17" pos:end="249:40"><call pos:start="249:17" pos:end="249:40"><name pos:start="249:17" pos:end="249:19">OUT</name><argument_list pos:start="249:20" pos:end="249:40">(<argument pos:start="249:21" pos:end="249:34"><expr pos:start="249:21" pos:end="249:34"><name pos:start="249:21" pos:end="249:34"><name pos:start="249:21" pos:end="249:23">dst</name><index pos:start="249:24" pos:end="249:34">[<expr pos:start="249:25" pos:end="249:33"><name pos:start="249:25" pos:end="249:33">dst_index</name></expr>]</index></name></expr></argument>, <argument pos:start="249:37" pos:end="249:39"><expr pos:start="249:37" pos:end="249:39"><name pos:start="249:37" pos:end="249:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="251:1" pos:end="251:6">#<cpp:directive pos:start="251:2" pos:end="251:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="257:13" pos:end="257:34"><expr pos:start="257:13" pos:end="257:33"><name pos:start="257:13" pos:end="257:16">frac</name> <operator pos:start="257:18" pos:end="257:19">+=</operator> <name pos:start="257:21" pos:end="257:33">dst_incr_frac</name></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:30"><expr pos:start="259:13" pos:end="259:29"><name pos:start="259:13" pos:end="259:17">index</name> <operator pos:start="259:19" pos:end="259:20">+=</operator> <name pos:start="259:22" pos:end="259:29">dst_incr</name></expr>;</expr_stmt>

            <if_stmt pos:start="261:13" pos:end="267:13"><if pos:start="261:13" pos:end="267:13">if<condition pos:start="261:15" pos:end="261:35">(<expr pos:start="261:16" pos:end="261:34"><name pos:start="261:16" pos:end="261:19">frac</name> <operator pos:start="261:21" pos:end="261:22">&gt;=</operator> <name pos:start="261:24" pos:end="261:34"><name pos:start="261:24" pos:end="261:24">c</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:34">src_incr</name></name></expr>)</condition><block pos:start="261:36" pos:end="267:13">{<block_content pos:start="263:17" pos:end="265:24">

                <expr_stmt pos:start="263:17" pos:end="263:36"><expr pos:start="263:17" pos:end="263:35"><name pos:start="263:17" pos:end="263:20">frac</name> <operator pos:start="263:22" pos:end="263:23">-=</operator> <name pos:start="263:25" pos:end="263:35"><name pos:start="263:25" pos:end="263:25">c</name><operator pos:start="263:26" pos:end="263:27">-&gt;</operator><name pos:start="263:28" pos:end="263:35">src_incr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:24"><expr pos:start="265:17" pos:end="265:23"><name pos:start="265:17" pos:end="265:21">index</name><operator pos:start="265:22" pos:end="265:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="271:9" pos:end="271:42"><expr pos:start="271:9" pos:end="271:41"><operator pos:start="271:9" pos:end="271:9">*</operator><name pos:start="271:10" pos:end="271:17">consumed</name><operator pos:start="271:18" pos:end="271:18">=</operator> <call pos:start="271:20" pos:end="271:41"><name pos:start="271:20" pos:end="271:24">FFMAX</name><argument_list pos:start="271:25" pos:end="271:41">(<argument pos:start="271:26" pos:end="271:37"><expr pos:start="271:26" pos:end="271:37"><name pos:start="271:26" pos:end="271:37">sample_index</name></expr></argument>, <argument pos:start="271:40" pos:end="271:40"><expr pos:start="271:40" pos:end="271:40"><literal type="number" pos:start="271:40" pos:end="271:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:58"><expr pos:start="273:9" pos:end="273:57"><name pos:start="273:9" pos:end="273:13">index</name> <operator pos:start="273:15" pos:end="273:16">+=</operator> <call pos:start="273:18" pos:end="273:39"><name pos:start="273:18" pos:end="273:22">FFMIN</name><argument_list pos:start="273:23" pos:end="273:39">(<argument pos:start="273:24" pos:end="273:35"><expr pos:start="273:24" pos:end="273:35"><name pos:start="273:24" pos:end="273:35">sample_index</name></expr></argument>, <argument pos:start="273:38" pos:end="273:38"><expr pos:start="273:38" pos:end="273:38"><literal type="number" pos:start="273:38" pos:end="273:38">0</literal></expr></argument>)</argument_list></call> <operator pos:start="273:41" pos:end="273:42">&lt;&lt;</operator> <name pos:start="273:44" pos:end="273:57"><name pos:start="273:44" pos:end="273:44">c</name><operator pos:start="273:45" pos:end="273:46">-&gt;</operator><name pos:start="273:47" pos:end="273:57">phase_shift</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="279:5" pos:end="285:5"><if pos:start="279:5" pos:end="285:5">if<condition pos:start="279:7" pos:end="279:18">(<expr pos:start="279:8" pos:end="279:17"><name pos:start="279:8" pos:end="279:17">update_ctx</name></expr>)</condition><block pos:start="279:19" pos:end="285:5">{<block_content pos:start="281:9" pos:end="283:24">

        <expr_stmt pos:start="281:9" pos:end="281:22"><expr pos:start="281:9" pos:end="281:21"><name pos:start="281:9" pos:end="281:15"><name pos:start="281:9" pos:end="281:9">c</name><operator pos:start="281:10" pos:end="281:11">-&gt;</operator><name pos:start="281:12" pos:end="281:15">frac</name></name><operator pos:start="281:16" pos:end="281:16">=</operator> <name pos:start="281:18" pos:end="281:21">frac</name></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:24"><expr pos:start="283:9" pos:end="283:23"><name pos:start="283:9" pos:end="283:16"><name pos:start="283:9" pos:end="283:9">c</name><operator pos:start="283:10" pos:end="283:11">-&gt;</operator><name pos:start="283:12" pos:end="283:16">index</name></name><operator pos:start="283:17" pos:end="283:17">=</operator> <name pos:start="283:19" pos:end="283:23">index</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="289:5" pos:end="289:21">return <expr pos:start="289:12" pos:end="289:20"><name pos:start="289:12" pos:end="289:20">dst_index</name></expr>;</return>

</block_content>}</block></function>
</unit>
