<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1164.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:54">hl_decode_mb_predict_luma</name><parameter_list pos:start="1:55" pos:end="15:78">(<parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:66">H264Context</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:69">h</name></decl></parameter>,

                                                       <parameter pos:start="3:56" pos:end="3:66"><decl pos:start="3:56" pos:end="3:66"><type pos:start="3:56" pos:end="3:66"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:66">mb_type</name></decl></parameter>, <parameter pos:start="3:69" pos:end="3:79"><decl pos:start="3:69" pos:end="3:79"><type pos:start="3:69" pos:end="3:79"><name pos:start="3:69" pos:end="3:71">int</name></type> <name pos:start="3:73" pos:end="3:79">is_h264</name></decl></parameter>,

                                                       <parameter pos:start="5:56" pos:end="5:65"><decl pos:start="5:56" pos:end="5:65"><type pos:start="5:56" pos:end="5:65"><name pos:start="5:56" pos:end="5:58">int</name></type> <name pos:start="5:60" pos:end="5:65">simple</name></decl></parameter>,

                                                       <parameter pos:start="7:56" pos:end="7:75"><decl pos:start="7:56" pos:end="7:75"><type pos:start="7:56" pos:end="7:75"><name pos:start="7:56" pos:end="7:58">int</name></type> <name pos:start="7:60" pos:end="7:75">transform_bypass</name></decl></parameter>,

                                                       <parameter pos:start="9:56" pos:end="9:70"><decl pos:start="9:56" pos:end="9:70"><type pos:start="9:56" pos:end="9:70"><name pos:start="9:56" pos:end="9:58">int</name></type> <name pos:start="9:60" pos:end="9:70">pixel_shift</name></decl></parameter>,

                                                       <parameter pos:start="11:56" pos:end="11:72"><decl pos:start="11:56" pos:end="11:72"><type pos:start="11:56" pos:end="11:72"><name pos:start="11:56" pos:end="11:58">int</name> <modifier pos:start="11:60" pos:end="11:60">*</modifier></type><name pos:start="11:61" pos:end="11:72">block_offset</name></decl></parameter>,

                                                       <parameter pos:start="13:56" pos:end="13:67"><decl pos:start="13:56" pos:end="13:67"><type pos:start="13:56" pos:end="13:67"><name pos:start="13:56" pos:end="13:58">int</name></type> <name pos:start="13:60" pos:end="13:67">linesize</name></decl></parameter>,

                                                       <parameter pos:start="15:56" pos:end="15:70"><decl pos:start="15:56" pos:end="15:70"><type pos:start="15:56" pos:end="15:70"><name pos:start="15:56" pos:end="15:62">uint8_t</name> <modifier pos:start="15:64" pos:end="15:64">*</modifier></type><name pos:start="15:65" pos:end="15:70">dest_y</name></decl></parameter>, <parameter pos:start="15:73" pos:end="15:77"><decl pos:start="15:73" pos:end="15:77"><type pos:start="15:73" pos:end="15:77"><name pos:start="15:73" pos:end="15:75">int</name></type> <name pos:start="15:77" pos:end="15:77">p</name></decl></parameter>)</parameter_list>

<block pos:start="17:1" pos:end="229:1">{<block_content pos:start="19:5" pos:end="227:5">

    <function_decl pos:start="19:5" pos:end="19:63"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">void</name></type> (<modifier pos:start="19:11" pos:end="19:11">*</modifier><name pos:start="19:12" pos:end="19:19">idct_add</name>)<parameter_list pos:start="19:21" pos:end="19:62">(<parameter pos:start="19:22" pos:end="19:33"><decl pos:start="19:22" pos:end="19:33"><type pos:start="19:22" pos:end="19:33"><name pos:start="19:22" pos:end="19:28">uint8_t</name> <modifier pos:start="19:30" pos:end="19:30">*</modifier></type><name pos:start="19:31" pos:end="19:33">dst</name></decl></parameter>, <parameter pos:start="19:36" pos:end="19:49"><decl pos:start="19:36" pos:end="19:49"><type pos:start="19:36" pos:end="19:49"><name pos:start="19:36" pos:end="19:42">int16_t</name> <modifier pos:start="19:44" pos:end="19:44">*</modifier></type><name pos:start="19:45" pos:end="19:49">block</name></decl></parameter>, <parameter pos:start="19:52" pos:end="19:61"><decl pos:start="19:52" pos:end="19:61"><type pos:start="19:52" pos:end="19:61"><name pos:start="19:52" pos:end="19:54">int</name></type> <name pos:start="19:56" pos:end="19:61">stride</name></decl></parameter>)</parameter_list>;</function_decl>

    <function_decl pos:start="21:5" pos:end="21:66"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">void</name></type> (<modifier pos:start="21:11" pos:end="21:11">*</modifier><name pos:start="21:12" pos:end="21:22">idct_dc_add</name>)<parameter_list pos:start="21:24" pos:end="21:65">(<parameter pos:start="21:25" pos:end="21:36"><decl pos:start="21:25" pos:end="21:36"><type pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:31">uint8_t</name> <modifier pos:start="21:33" pos:end="21:33">*</modifier></type><name pos:start="21:34" pos:end="21:36">dst</name></decl></parameter>, <parameter pos:start="21:39" pos:end="21:52"><decl pos:start="21:39" pos:end="21:52"><type pos:start="21:39" pos:end="21:52"><name pos:start="21:39" pos:end="21:45">int16_t</name> <modifier pos:start="21:47" pos:end="21:47">*</modifier></type><name pos:start="21:48" pos:end="21:52">block</name></decl></parameter>, <parameter pos:start="21:55" pos:end="21:64"><decl pos:start="21:55" pos:end="21:64"><type pos:start="21:55" pos:end="21:64"><name pos:start="21:55" pos:end="21:57">int</name></type> <name pos:start="21:59" pos:end="21:64">stride</name></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:58"><decl pos:start="25:5" pos:end="25:57"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:14">qscale</name> <init pos:start="25:16" pos:end="25:57">= <expr pos:start="25:18" pos:end="25:57"><ternary pos:start="25:18" pos:end="25:57"><condition pos:start="25:18" pos:end="25:25"><expr pos:start="25:18" pos:end="25:23"><name pos:start="25:18" pos:end="25:18">p</name> <operator pos:start="25:20" pos:end="25:21">==</operator> <literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr> ?</condition><then pos:start="25:27" pos:end="25:35"> <expr pos:start="25:27" pos:end="25:35"><name pos:start="25:27" pos:end="25:35"><name pos:start="25:27" pos:end="25:27">h</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:35">qscale</name></name></expr> </then><else pos:start="25:37" pos:end="25:57">: <expr pos:start="25:39" pos:end="25:57"><name pos:start="25:39" pos:end="25:57"><name pos:start="25:39" pos:end="25:39">h</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:50">chroma_qp</name><index pos:start="25:51" pos:end="25:57">[<expr pos:start="25:52" pos:end="25:56"><name pos:start="25:52" pos:end="25:52">p</name> <operator pos:start="25:54" pos:end="25:54">-</operator> <literal type="number" pos:start="25:56" pos:end="25:56">1</literal></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:16">block_offset</name> <operator pos:start="27:18" pos:end="27:19">+=</operator> <literal type="number" pos:start="27:21" pos:end="27:22">16</literal> <operator pos:start="27:24" pos:end="27:24">*</operator> <name pos:start="27:26" pos:end="27:26">p</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="227:5"><if pos:start="29:5" pos:end="177:5">if <condition pos:start="29:8" pos:end="29:29">(<expr pos:start="29:9" pos:end="29:28"><call pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:19">IS_INTRA4x4</name><argument_list pos:start="29:20" pos:end="29:28">(<argument pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:27"><name pos:start="29:21" pos:end="29:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:31" pos:end="177:5">{<block_content pos:start="31:9" pos:end="175:9">

        <if_stmt pos:start="31:9" pos:end="175:9"><if pos:start="31:9" pos:end="81:9">if <condition pos:start="31:12" pos:end="31:31">(<expr pos:start="31:13" pos:end="31:30"><call pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:21">IS_8x8DCT</name><argument_list pos:start="31:22" pos:end="31:30">(<argument pos:start="31:23" pos:end="31:29"><expr pos:start="31:23" pos:end="31:29"><name pos:start="31:23" pos:end="31:29">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:33" pos:end="81:9">{<block_content pos:start="33:13" pos:end="79:13">

            <if_stmt pos:start="33:13" pos:end="45:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:33">(<expr pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:32">transform_bypass</name></expr>)</condition> <block pos:start="33:35" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:64">

                <expr_stmt pos:start="35:17" pos:end="37:64"><expr pos:start="35:17" pos:end="37:63"><name pos:start="35:17" pos:end="35:27">idct_dc_add</name> <operator pos:start="35:29" pos:end="35:29">=</operator>

                <name pos:start="37:17" pos:end="37:24">idct_add</name>    <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:63"><name pos:start="37:31" pos:end="37:31">h</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:40">h264dsp</name><operator pos:start="37:41" pos:end="37:41">.</operator><name pos:start="37:42" pos:end="37:63">h264_add_pixels8_clear</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="45:13">else <block pos:start="39:20" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:56">

                <expr_stmt pos:start="41:17" pos:end="41:59"><expr pos:start="41:17" pos:end="41:58"><name pos:start="41:17" pos:end="41:27">idct_dc_add</name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:58"><name pos:start="41:31" pos:end="41:31">h</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:40">h264dsp</name><operator pos:start="41:41" pos:end="41:41">.</operator><name pos:start="41:42" pos:end="41:58">h264_idct8_dc_add</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:56"><expr pos:start="43:17" pos:end="43:55"><name pos:start="43:17" pos:end="43:24">idct_add</name>    <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:55"><name pos:start="43:31" pos:end="43:31">h</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:40">h264dsp</name><operator pos:start="43:41" pos:end="43:41">.</operator><name pos:start="43:42" pos:end="43:55">h264_idct8_add</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <for pos:start="47:13" pos:end="79:13">for <control pos:start="47:17" pos:end="47:39">(<init pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:18">i</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</init> <condition pos:start="47:25" pos:end="47:31"><expr pos:start="47:25" pos:end="47:30"><name pos:start="47:25" pos:end="47:25">i</name> <operator pos:start="47:27" pos:end="47:27">&lt;</operator> <literal type="number" pos:start="47:29" pos:end="47:30">16</literal></expr>;</condition> <incr pos:start="47:33" pos:end="47:38"><expr pos:start="47:33" pos:end="47:38"><name pos:start="47:33" pos:end="47:33">i</name> <operator pos:start="47:35" pos:end="47:36">+=</operator> <literal type="number" pos:start="47:38" pos:end="47:38">4</literal></expr></incr>)</control> <block pos:start="47:41" pos:end="79:13">{<block_content pos:start="49:17" pos:end="77:17">

                <decl_stmt pos:start="49:17" pos:end="49:62"><decl pos:start="49:17" pos:end="49:61"><type pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:23">uint8_t</name> <modifier pos:start="49:25" pos:end="49:25">*</modifier><specifier pos:start="49:26" pos:end="49:30">const</specifier></type> <name pos:start="49:32" pos:end="49:34">ptr</name> <init pos:start="49:36" pos:end="49:61">= <expr pos:start="49:38" pos:end="49:61"><name pos:start="49:38" pos:end="49:43">dest_y</name> <operator pos:start="49:45" pos:end="49:45">+</operator> <name pos:start="49:47" pos:end="49:61"><name pos:start="49:47" pos:end="49:58">block_offset</name><index pos:start="49:59" pos:end="49:61">[<expr pos:start="49:60" pos:end="49:60"><name pos:start="49:60" pos:end="49:60">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="51:17" pos:end="51:75"><decl pos:start="51:17" pos:end="51:74"><type pos:start="51:17" pos:end="51:25"><specifier pos:start="51:17" pos:end="51:21">const</specifier> <name pos:start="51:23" pos:end="51:25">int</name></type> <name pos:start="51:27" pos:end="51:29">dir</name>      <init pos:start="51:36" pos:end="51:74">= <expr pos:start="51:38" pos:end="51:74"><name pos:start="51:38" pos:end="51:74"><name pos:start="51:38" pos:end="51:38">h</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:64">intra4x4_pred_mode_cache</name><index pos:start="51:65" pos:end="51:74">[<expr pos:start="51:66" pos:end="51:73"><name pos:start="51:66" pos:end="51:73"><name pos:start="51:66" pos:end="51:70">scan8</name><index pos:start="51:71" pos:end="51:73">[<expr pos:start="51:72" pos:end="51:72"><name pos:start="51:72" pos:end="51:72">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="53:17" pos:end="77:17"><if pos:start="53:17" pos:end="57:17">if <condition pos:start="53:20" pos:end="53:78">(<expr pos:start="53:21" pos:end="53:77"><name pos:start="53:21" pos:end="53:36">transform_bypass</name> <operator pos:start="53:38" pos:end="53:39">&amp;&amp;</operator> <name pos:start="53:41" pos:end="53:58"><name pos:start="53:41" pos:end="53:41">h</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:46">sps</name><operator pos:start="53:47" pos:end="53:47">.</operator><name pos:start="53:48" pos:end="53:58">profile_idc</name></name> <operator pos:start="53:60" pos:end="53:61">==</operator> <literal type="number" pos:start="53:63" pos:end="53:65">244</literal> <operator pos:start="53:67" pos:end="53:68">&amp;&amp;</operator> <name pos:start="53:70" pos:end="53:72">dir</name> <operator pos:start="53:74" pos:end="53:75">&lt;=</operator> <literal type="number" pos:start="53:77" pos:end="53:77">1</literal></expr>)</condition> <block pos:start="53:80" pos:end="57:17">{<block_content pos:start="55:21" pos:end="55:103">

                    <expr_stmt pos:start="55:21" pos:end="55:103"><expr pos:start="55:21" pos:end="55:102"><name pos:start="55:21" pos:end="55:44"><name pos:start="55:21" pos:end="55:21">h</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:26">hpc</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:39">pred8x8l_add</name><index pos:start="55:40" pos:end="55:44">[<expr pos:start="55:41" pos:end="55:43"><name pos:start="55:41" pos:end="55:43">dir</name></expr>]</index></name><operator pos:start="55:45" pos:end="55:45">(</operator><name pos:start="55:46" pos:end="55:48">ptr</name><operator pos:start="55:49" pos:end="55:49">,</operator> <name pos:start="55:51" pos:end="55:55"><name pos:start="55:51" pos:end="55:51">h</name><operator pos:start="55:52" pos:end="55:53">-&gt;</operator><name pos:start="55:54" pos:end="55:55">mb</name></name> <operator pos:start="55:57" pos:end="55:57">+</operator> <operator pos:start="55:59" pos:end="55:59">(</operator><name pos:start="55:60" pos:end="55:60">i</name> <operator pos:start="55:62" pos:end="55:62">*</operator> <literal type="number" pos:start="55:64" pos:end="55:67">16</literal> <operator pos:start="55:67" pos:end="55:67">+</operator> <name pos:start="55:69" pos:end="55:69">p</name> <operator pos:start="55:71" pos:end="55:71">*</operator> <literal type="number" pos:start="55:73" pos:end="55:75">256</literal> <operator pos:start="55:77" pos:end="55:78">&lt;&lt;</operator> <name pos:start="55:80" pos:end="55:90">pixel_shift</name><operator pos:start="55:91" pos:end="55:91">)</operator><operator pos:start="55:92" pos:end="55:92">,</operator> <name pos:start="55:94" pos:end="55:101">linesize</name><operator pos:start="55:102" pos:end="55:102">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="57:19" pos:end="77:17">else <block pos:start="57:24" pos:end="77:17">{<block_content pos:start="59:21" pos:end="75:21">

                    <decl_stmt pos:start="59:21" pos:end="59:79"><decl pos:start="59:21" pos:end="59:78"><type pos:start="59:21" pos:end="59:29"><specifier pos:start="59:21" pos:end="59:25">const</specifier> <name pos:start="59:27" pos:end="59:29">int</name></type> <name pos:start="59:31" pos:end="59:33">nnz</name> <init pos:start="59:35" pos:end="59:78">= <expr pos:start="59:37" pos:end="59:78"><name pos:start="59:37" pos:end="59:78"><name pos:start="59:37" pos:end="59:37">h</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:59">non_zero_count_cache</name><index pos:start="59:60" pos:end="59:78">[<expr pos:start="59:61" pos:end="59:77"><name pos:start="59:61" pos:end="59:77"><name pos:start="59:61" pos:end="59:65">scan8</name><index pos:start="59:66" pos:end="59:77">[<expr pos:start="59:67" pos:end="59:76"><name pos:start="59:67" pos:end="59:67">i</name> <operator pos:start="59:69" pos:end="59:69">+</operator> <name pos:start="59:71" pos:end="59:71">p</name> <operator pos:start="59:73" pos:end="59:73">*</operator> <literal type="number" pos:start="59:75" pos:end="59:76">16</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="61:21" pos:end="63:98"><expr pos:start="61:21" pos:end="63:97"><name pos:start="61:21" pos:end="61:40"><name pos:start="61:21" pos:end="61:21">h</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:26">hpc</name><operator pos:start="61:27" pos:end="61:27">.</operator><name pos:start="61:28" pos:end="61:35">pred8x8l</name><index pos:start="61:36" pos:end="61:40">[<expr pos:start="61:37" pos:end="61:39"><name pos:start="61:37" pos:end="61:39">dir</name></expr>]</index></name><operator pos:start="61:41" pos:end="61:41">(</operator><name pos:start="61:42" pos:end="61:44">ptr</name><operator pos:start="61:45" pos:end="61:45">,</operator> <operator pos:start="61:47" pos:end="61:47">(</operator><name pos:start="61:48" pos:end="61:75"><name pos:start="61:48" pos:end="61:48">h</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:75">topleft_samples_available</name></name> <operator pos:start="61:77" pos:end="61:78">&lt;&lt;</operator> <name pos:start="61:80" pos:end="61:80">i</name><operator pos:start="61:81" pos:end="61:81">)</operator> <operator pos:start="61:83" pos:end="61:83">&amp;</operator> <literal type="number" pos:start="61:85" pos:end="61:90">0x8000</literal><operator pos:start="61:91" pos:end="61:91">,</operator>

                                         <operator pos:start="63:42" pos:end="63:42">(</operator><name pos:start="63:43" pos:end="63:71"><name pos:start="63:43" pos:end="63:43">h</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:71">topright_samples_available</name></name> <operator pos:start="63:73" pos:end="63:74">&lt;&lt;</operator> <name pos:start="63:76" pos:end="63:76">i</name><operator pos:start="63:77" pos:end="63:77">)</operator> <operator pos:start="63:79" pos:end="63:79">&amp;</operator> <literal type="number" pos:start="63:81" pos:end="63:86">0x4000</literal><operator pos:start="63:87" pos:end="63:87">,</operator> <name pos:start="63:89" pos:end="63:96">linesize</name><operator pos:start="63:97" pos:end="63:97">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="65:21" pos:end="75:21"><if pos:start="65:21" pos:end="75:21">if <condition pos:start="65:24" pos:end="65:28">(<expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:27">nnz</name></expr>)</condition> <block pos:start="65:30" pos:end="75:21">{<block_content pos:start="67:25" pos:end="73:95">

                        <if_stmt pos:start="67:25" pos:end="73:95"><if pos:start="67:25" pos:end="69:98">if <condition pos:start="67:28" pos:end="67:90">(<expr pos:start="67:29" pos:end="67:89"><name pos:start="67:29" pos:end="67:31">nnz</name> <operator pos:start="67:33" pos:end="67:34">==</operator> <literal type="number" pos:start="67:36" pos:end="67:36">1</literal> <operator pos:start="67:38" pos:end="67:39">&amp;&amp;</operator> <call pos:start="67:41" pos:end="67:89"><name pos:start="67:41" pos:end="67:51">dctcoef_get</name><argument_list pos:start="67:52" pos:end="67:89">(<argument pos:start="67:53" pos:end="67:57"><expr pos:start="67:53" pos:end="67:57"><name pos:start="67:53" pos:end="67:57"><name pos:start="67:53" pos:end="67:53">h</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:57">mb</name></name></expr></argument>, <argument pos:start="67:60" pos:end="67:70"><expr pos:start="67:60" pos:end="67:70"><name pos:start="67:60" pos:end="67:70">pixel_shift</name></expr></argument>, <argument pos:start="67:73" pos:end="67:88"><expr pos:start="67:73" pos:end="67:88"><name pos:start="67:73" pos:end="67:73">i</name> <operator pos:start="67:75" pos:end="67:75">*</operator> <literal type="number" pos:start="67:77" pos:end="67:80">16</literal> <operator pos:start="67:80" pos:end="67:80">+</operator> <name pos:start="67:82" pos:end="67:82">p</name> <operator pos:start="67:84" pos:end="67:84">*</operator> <literal type="number" pos:start="67:86" pos:end="67:88">256</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:29" pos:end="69:98"><block_content pos:start="69:29" pos:end="69:98">

                            <expr_stmt pos:start="69:29" pos:end="69:98"><expr pos:start="69:29" pos:end="69:97"><call pos:start="69:29" pos:end="69:97"><name pos:start="69:29" pos:end="69:39">idct_dc_add</name><argument_list pos:start="69:40" pos:end="69:97">(<argument pos:start="69:41" pos:end="69:43"><expr pos:start="69:41" pos:end="69:43"><name pos:start="69:41" pos:end="69:43">ptr</name></expr></argument>, <argument pos:start="69:46" pos:end="69:86"><expr pos:start="69:46" pos:end="69:86"><name pos:start="69:46" pos:end="69:50"><name pos:start="69:46" pos:end="69:46">h</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:50">mb</name></name> <operator pos:start="69:52" pos:end="69:52">+</operator> <operator pos:start="69:54" pos:end="69:54">(</operator><name pos:start="69:55" pos:end="69:55">i</name> <operator pos:start="69:57" pos:end="69:57">*</operator> <literal type="number" pos:start="69:59" pos:end="69:62">16</literal> <operator pos:start="69:62" pos:end="69:62">+</operator> <name pos:start="69:64" pos:end="69:64">p</name> <operator pos:start="69:66" pos:end="69:66">*</operator> <literal type="number" pos:start="69:68" pos:end="69:70">256</literal> <operator pos:start="69:72" pos:end="69:73">&lt;&lt;</operator> <name pos:start="69:75" pos:end="69:85">pixel_shift</name><operator pos:start="69:86" pos:end="69:86">)</operator></expr></argument>, <argument pos:start="69:89" pos:end="69:96"><expr pos:start="69:89" pos:end="69:96"><name pos:start="69:89" pos:end="69:96">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="71:25" pos:end="73:95">else<block type="pseudo" pos:start="73:29" pos:end="73:95"><block_content pos:start="73:29" pos:end="73:95">

                            <expr_stmt pos:start="73:29" pos:end="73:95"><expr pos:start="73:29" pos:end="73:94"><call pos:start="73:29" pos:end="73:94"><name pos:start="73:29" pos:end="73:36">idct_add</name><argument_list pos:start="73:37" pos:end="73:94">(<argument pos:start="73:38" pos:end="73:40"><expr pos:start="73:38" pos:end="73:40"><name pos:start="73:38" pos:end="73:40">ptr</name></expr></argument>, <argument pos:start="73:43" pos:end="73:83"><expr pos:start="73:43" pos:end="73:83"><name pos:start="73:43" pos:end="73:47"><name pos:start="73:43" pos:end="73:43">h</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:47">mb</name></name> <operator pos:start="73:49" pos:end="73:49">+</operator> <operator pos:start="73:51" pos:end="73:51">(</operator><name pos:start="73:52" pos:end="73:52">i</name> <operator pos:start="73:54" pos:end="73:54">*</operator> <literal type="number" pos:start="73:56" pos:end="73:59">16</literal> <operator pos:start="73:59" pos:end="73:59">+</operator> <name pos:start="73:61" pos:end="73:61">p</name> <operator pos:start="73:63" pos:end="73:63">*</operator> <literal type="number" pos:start="73:65" pos:end="73:67">256</literal> <operator pos:start="73:69" pos:end="73:70">&lt;&lt;</operator> <name pos:start="73:72" pos:end="73:82">pixel_shift</name><operator pos:start="73:83" pos:end="73:83">)</operator></expr></argument>, <argument pos:start="73:86" pos:end="73:93"><expr pos:start="73:86" pos:end="73:93"><name pos:start="73:86" pos:end="73:93">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="175:9">else <block pos:start="81:16" pos:end="175:9">{<block_content pos:start="83:13" pos:end="173:13">

            <if_stmt pos:start="83:13" pos:end="95:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:33">(<expr pos:start="83:17" pos:end="83:32"><name pos:start="83:17" pos:end="83:32">transform_bypass</name></expr>)</condition> <block pos:start="83:35" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:65">

                <expr_stmt pos:start="85:17" pos:end="87:65"><expr pos:start="85:17" pos:end="87:64"><name pos:start="85:17" pos:end="85:27">idct_dc_add</name>  <operator pos:start="85:30" pos:end="85:30">=</operator>

                <name pos:start="87:17" pos:end="87:24">idct_add</name>     <operator pos:start="87:30" pos:end="87:30">=</operator> <name pos:start="87:32" pos:end="87:64"><name pos:start="87:32" pos:end="87:32">h</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:41">h264dsp</name><operator pos:start="87:42" pos:end="87:42">.</operator><name pos:start="87:43" pos:end="87:64">h264_add_pixels4_clear</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="95:13">else <block pos:start="89:20" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:55">

                <expr_stmt pos:start="91:17" pos:end="91:58"><expr pos:start="91:17" pos:end="91:57"><name pos:start="91:17" pos:end="91:27">idct_dc_add</name> <operator pos:start="91:29" pos:end="91:29">=</operator> <name pos:start="91:31" pos:end="91:57"><name pos:start="91:31" pos:end="91:31">h</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:40">h264dsp</name><operator pos:start="91:41" pos:end="91:41">.</operator><name pos:start="91:42" pos:end="91:57">h264_idct_dc_add</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:55"><expr pos:start="93:17" pos:end="93:54"><name pos:start="93:17" pos:end="93:24">idct_add</name>    <operator pos:start="93:29" pos:end="93:29">=</operator> <name pos:start="93:31" pos:end="93:54"><name pos:start="93:31" pos:end="93:31">h</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:40">h264dsp</name><operator pos:start="93:41" pos:end="93:41">.</operator><name pos:start="93:42" pos:end="93:54">h264_idct_add</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <for pos:start="97:13" pos:end="173:13">for <control pos:start="97:17" pos:end="97:36">(<init pos:start="97:18" pos:end="97:23"><expr pos:start="97:18" pos:end="97:22"><name pos:start="97:18" pos:end="97:18">i</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <literal type="number" pos:start="97:22" pos:end="97:22">0</literal></expr>;</init> <condition pos:start="97:25" pos:end="97:31"><expr pos:start="97:25" pos:end="97:30"><name pos:start="97:25" pos:end="97:25">i</name> <operator pos:start="97:27" pos:end="97:27">&lt;</operator> <literal type="number" pos:start="97:29" pos:end="97:30">16</literal></expr>;</condition> <incr pos:start="97:33" pos:end="97:35"><expr pos:start="97:33" pos:end="97:35"><name pos:start="97:33" pos:end="97:33">i</name><operator pos:start="97:34" pos:end="97:35">++</operator></expr></incr>)</control> <block pos:start="97:38" pos:end="173:13">{<block_content pos:start="99:17" pos:end="171:17">

                <decl_stmt pos:start="99:17" pos:end="99:62"><decl pos:start="99:17" pos:end="99:61"><type pos:start="99:17" pos:end="99:30"><name pos:start="99:17" pos:end="99:23">uint8_t</name> <modifier pos:start="99:25" pos:end="99:25">*</modifier><specifier pos:start="99:26" pos:end="99:30">const</specifier></type> <name pos:start="99:32" pos:end="99:34">ptr</name> <init pos:start="99:36" pos:end="99:61">= <expr pos:start="99:38" pos:end="99:61"><name pos:start="99:38" pos:end="99:43">dest_y</name> <operator pos:start="99:45" pos:end="99:45">+</operator> <name pos:start="99:47" pos:end="99:61"><name pos:start="99:47" pos:end="99:58">block_offset</name><index pos:start="99:59" pos:end="99:61">[<expr pos:start="99:60" pos:end="99:60"><name pos:start="99:60" pos:end="99:60">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="101:17" pos:end="101:75"><decl pos:start="101:17" pos:end="101:74"><type pos:start="101:17" pos:end="101:25"><specifier pos:start="101:17" pos:end="101:21">const</specifier> <name pos:start="101:23" pos:end="101:25">int</name></type> <name pos:start="101:27" pos:end="101:29">dir</name>      <init pos:start="101:36" pos:end="101:74">= <expr pos:start="101:38" pos:end="101:74"><name pos:start="101:38" pos:end="101:74"><name pos:start="101:38" pos:end="101:38">h</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:64">intra4x4_pred_mode_cache</name><index pos:start="101:65" pos:end="101:74">[<expr pos:start="101:66" pos:end="101:73"><name pos:start="101:66" pos:end="101:73"><name pos:start="101:66" pos:end="101:70">scan8</name><index pos:start="101:71" pos:end="101:73">[<expr pos:start="101:72" pos:end="101:72"><name pos:start="101:72" pos:end="101:72">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="105:17" pos:end="171:17"><if pos:start="105:17" pos:end="109:17">if <condition pos:start="105:20" pos:end="105:78">(<expr pos:start="105:21" pos:end="105:77"><name pos:start="105:21" pos:end="105:36">transform_bypass</name> <operator pos:start="105:38" pos:end="105:39">&amp;&amp;</operator> <name pos:start="105:41" pos:end="105:58"><name pos:start="105:41" pos:end="105:41">h</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:46">sps</name><operator pos:start="105:47" pos:end="105:47">.</operator><name pos:start="105:48" pos:end="105:58">profile_idc</name></name> <operator pos:start="105:60" pos:end="105:61">==</operator> <literal type="number" pos:start="105:63" pos:end="105:65">244</literal> <operator pos:start="105:67" pos:end="105:68">&amp;&amp;</operator> <name pos:start="105:70" pos:end="105:72">dir</name> <operator pos:start="105:74" pos:end="105:75">&lt;=</operator> <literal type="number" pos:start="105:77" pos:end="105:77">1</literal></expr>)</condition> <block pos:start="105:80" pos:end="109:17">{<block_content pos:start="107:21" pos:end="107:102">

                    <expr_stmt pos:start="107:21" pos:end="107:102"><expr pos:start="107:21" pos:end="107:101"><name pos:start="107:21" pos:end="107:43"><name pos:start="107:21" pos:end="107:21">h</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:26">hpc</name><operator pos:start="107:27" pos:end="107:27">.</operator><name pos:start="107:28" pos:end="107:38">pred4x4_add</name><index pos:start="107:39" pos:end="107:43">[<expr pos:start="107:40" pos:end="107:42"><name pos:start="107:40" pos:end="107:42">dir</name></expr>]</index></name><operator pos:start="107:44" pos:end="107:44">(</operator><name pos:start="107:45" pos:end="107:47">ptr</name><operator pos:start="107:48" pos:end="107:48">,</operator> <name pos:start="107:50" pos:end="107:54"><name pos:start="107:50" pos:end="107:50">h</name><operator pos:start="107:51" pos:end="107:52">-&gt;</operator><name pos:start="107:53" pos:end="107:54">mb</name></name> <operator pos:start="107:56" pos:end="107:56">+</operator> <operator pos:start="107:58" pos:end="107:58">(</operator><name pos:start="107:59" pos:end="107:59">i</name> <operator pos:start="107:61" pos:end="107:61">*</operator> <literal type="number" pos:start="107:63" pos:end="107:66">16</literal> <operator pos:start="107:66" pos:end="107:66">+</operator> <name pos:start="107:68" pos:end="107:68">p</name> <operator pos:start="107:70" pos:end="107:70">*</operator> <literal type="number" pos:start="107:72" pos:end="107:74">256</literal> <operator pos:start="107:76" pos:end="107:77">&lt;&lt;</operator> <name pos:start="107:79" pos:end="107:89">pixel_shift</name><operator pos:start="107:90" pos:end="107:90">)</operator><operator pos:start="107:91" pos:end="107:91">,</operator> <name pos:start="107:93" pos:end="107:100">linesize</name><operator pos:start="107:101" pos:end="107:101">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="109:19" pos:end="171:17">else <block pos:start="109:24" pos:end="171:17">{<block_content pos:start="111:21" pos:end="169:21">

                    <decl_stmt pos:start="111:21" pos:end="111:38"><decl pos:start="111:21" pos:end="111:37"><type pos:start="111:21" pos:end="111:29"><name pos:start="111:21" pos:end="111:27">uint8_t</name> <modifier pos:start="111:29" pos:end="111:29">*</modifier></type><name pos:start="111:30" pos:end="111:37">topright</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="113:21" pos:end="113:32"><decl pos:start="113:21" pos:end="113:27"><type pos:start="113:21" pos:end="113:23"><name pos:start="113:21" pos:end="113:23">int</name></type> <name pos:start="113:25" pos:end="113:27">nnz</name></decl>, <decl pos:start="113:30" pos:end="113:31"><type ref="prev" pos:start="113:21" pos:end="113:23"/><name pos:start="113:30" pos:end="113:31">tr</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="115:21" pos:end="115:37"><decl pos:start="115:21" pos:end="115:36"><type pos:start="115:21" pos:end="115:28"><name pos:start="115:21" pos:end="115:28">uint64_t</name></type> <name pos:start="115:30" pos:end="115:36">tr_high</name></decl>;</decl_stmt>

                    <if_stmt pos:start="117:21" pos:end="145:40"><if pos:start="117:21" pos:end="143:21">if <condition pos:start="117:24" pos:end="117:76">(<expr pos:start="117:25" pos:end="117:75"><name pos:start="117:25" pos:end="117:27">dir</name> <operator pos:start="117:29" pos:end="117:30">==</operator> <name pos:start="117:32" pos:end="117:50">DIAG_DOWN_LEFT_PRED</name> <operator pos:start="117:52" pos:end="117:53">||</operator> <name pos:start="117:55" pos:end="117:57">dir</name> <operator pos:start="117:59" pos:end="117:60">==</operator> <name pos:start="117:62" pos:end="117:75">VERT_LEFT_PRED</name></expr>)</condition> <block pos:start="117:78" pos:end="143:21">{<block_content pos:start="119:25" pos:end="141:75">

                        <decl_stmt pos:start="119:25" pos:end="119:97"><decl pos:start="119:25" pos:end="119:96"><type pos:start="119:25" pos:end="119:33"><specifier pos:start="119:25" pos:end="119:29">const</specifier> <name pos:start="119:31" pos:end="119:33">int</name></type> <name pos:start="119:35" pos:end="119:48">topright_avail</name> <init pos:start="119:50" pos:end="119:96">= <expr pos:start="119:52" pos:end="119:96"><operator pos:start="119:52" pos:end="119:52">(</operator><name pos:start="119:53" pos:end="119:81"><name pos:start="119:53" pos:end="119:53">h</name><operator pos:start="119:54" pos:end="119:55">-&gt;</operator><name pos:start="119:56" pos:end="119:81">topright_samples_available</name></name> <operator pos:start="119:83" pos:end="119:84">&lt;&lt;</operator> <name pos:start="119:86" pos:end="119:86">i</name><operator pos:start="119:87" pos:end="119:87">)</operator> <operator pos:start="119:89" pos:end="119:89">&amp;</operator> <literal type="number" pos:start="119:91" pos:end="119:96">0x8000</literal></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="121:25" pos:end="121:75"><expr pos:start="121:25" pos:end="121:74"><call pos:start="121:25" pos:end="121:74"><name pos:start="121:25" pos:end="121:34">av_assert2</name><argument_list pos:start="121:35" pos:end="121:74">(<argument pos:start="121:36" pos:end="121:73"><expr pos:start="121:36" pos:end="121:73"><name pos:start="121:36" pos:end="121:42"><name pos:start="121:36" pos:end="121:36">h</name><operator pos:start="121:37" pos:end="121:38">-&gt;</operator><name pos:start="121:39" pos:end="121:42">mb_y</name></name> <operator pos:start="121:44" pos:end="121:45">||</operator> <name pos:start="121:47" pos:end="121:54">linesize</name> <operator pos:start="121:56" pos:end="121:57">&lt;=</operator> <name pos:start="121:59" pos:end="121:73"><name pos:start="121:59" pos:end="121:70">block_offset</name><index pos:start="121:71" pos:end="121:73">[<expr pos:start="121:72" pos:end="121:72"><name pos:start="121:72" pos:end="121:72">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="123:25" pos:end="141:75"><if pos:start="123:25" pos:end="139:25">if <condition pos:start="123:28" pos:end="123:44">(<expr pos:start="123:29" pos:end="123:43"><operator pos:start="123:29" pos:end="123:29">!</operator><name pos:start="123:30" pos:end="123:43">topright_avail</name></expr>)</condition> <block pos:start="123:46" pos:end="139:25">{<block_content pos:start="125:29" pos:end="137:29">

                            <if_stmt pos:start="125:29" pos:end="137:29"><if pos:start="125:29" pos:end="131:29">if <condition pos:start="125:32" pos:end="125:44">(<expr pos:start="125:33" pos:end="125:43"><name pos:start="125:33" pos:end="125:43">pixel_shift</name></expr>)</condition> <block pos:start="125:46" pos:end="131:29">{<block_content pos:start="127:33" pos:end="129:63">

                                <expr_stmt pos:start="127:33" pos:end="127:103"><expr pos:start="127:33" pos:end="127:102"><name pos:start="127:33" pos:end="127:39">tr_high</name>  <operator pos:start="127:42" pos:end="127:42">=</operator> <operator pos:start="127:44" pos:end="127:44">(</operator><operator pos:start="127:45" pos:end="127:45">(</operator><name pos:start="127:46" pos:end="127:53">uint16_t</name> <operator pos:start="127:55" pos:end="127:55">*</operator><operator pos:start="127:56" pos:end="127:56">)</operator><name pos:start="127:57" pos:end="127:59">ptr</name><operator pos:start="127:60" pos:end="127:60">)</operator><index pos:start="127:61" pos:end="127:78">[<expr pos:start="127:62" pos:end="127:77"><literal type="number" pos:start="127:62" pos:end="127:64">3</literal> <operator pos:start="127:64" pos:end="127:64">-</operator> <name pos:start="127:66" pos:end="127:73">linesize</name> <operator pos:start="127:75" pos:end="127:75">/</operator> <literal type="number" pos:start="127:77" pos:end="127:77">2</literal></expr>]</index> <operator pos:start="127:80" pos:end="127:80">*</operator> <literal type="number" pos:start="127:82" pos:end="127:102">0x0001000100010001ULL</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="129:33" pos:end="129:63"><expr pos:start="129:33" pos:end="129:62"><name pos:start="129:33" pos:end="129:40">topright</name> <operator pos:start="129:42" pos:end="129:42">=</operator> <operator pos:start="129:44" pos:end="129:44">(</operator><name pos:start="129:45" pos:end="129:51">uint8_t</name> <operator pos:start="129:53" pos:end="129:53">*</operator><operator pos:start="129:54" pos:end="129:54">)</operator><operator pos:start="129:55" pos:end="129:55">&amp;</operator><name pos:start="129:56" pos:end="129:62">tr_high</name></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="131:31" pos:end="137:29">else <block pos:start="131:36" pos:end="137:29">{<block_content pos:start="133:33" pos:end="135:58">

                                <expr_stmt pos:start="133:33" pos:end="133:75"><expr pos:start="133:33" pos:end="133:74"><name pos:start="133:33" pos:end="133:34">tr</name>       <operator pos:start="133:42" pos:end="133:42">=</operator> <name pos:start="133:44" pos:end="133:60"><name pos:start="133:44" pos:end="133:46">ptr</name><index pos:start="133:47" pos:end="133:60">[<expr pos:start="133:48" pos:end="133:59"><literal type="number" pos:start="133:48" pos:end="133:50">3</literal> <operator pos:start="133:50" pos:end="133:50">-</operator> <name pos:start="133:52" pos:end="133:59">linesize</name></expr>]</index></name> <operator pos:start="133:62" pos:end="133:62">*</operator> <literal type="number" pos:start="133:64" pos:end="133:74">0x01010101u</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="135:33" pos:end="135:58"><expr pos:start="135:33" pos:end="135:57"><name pos:start="135:33" pos:end="135:40">topright</name> <operator pos:start="135:42" pos:end="135:42">=</operator> <operator pos:start="135:44" pos:end="135:44">(</operator><name pos:start="135:45" pos:end="135:51">uint8_t</name> <operator pos:start="135:53" pos:end="135:53">*</operator><operator pos:start="135:54" pos:end="135:54">)</operator><operator pos:start="135:55" pos:end="135:55">&amp;</operator><name pos:start="135:56" pos:end="135:57">tr</name></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="139:27" pos:end="141:75">else<block type="pseudo" pos:start="141:29" pos:end="141:75"><block_content pos:start="141:29" pos:end="141:75">

                            <expr_stmt pos:start="141:29" pos:end="141:75"><expr pos:start="141:29" pos:end="141:74"><name pos:start="141:29" pos:end="141:36">topright</name> <operator pos:start="141:38" pos:end="141:38">=</operator> <name pos:start="141:40" pos:end="141:42">ptr</name> <operator pos:start="141:44" pos:end="141:44">+</operator> <operator pos:start="141:46" pos:end="141:46">(</operator><literal type="number" pos:start="141:47" pos:end="141:47">4</literal> <operator pos:start="141:49" pos:end="141:50">&lt;&lt;</operator> <name pos:start="141:52" pos:end="141:62">pixel_shift</name><operator pos:start="141:63" pos:end="141:63">)</operator> <operator pos:start="141:65" pos:end="141:65">-</operator> <name pos:start="141:67" pos:end="141:74">linesize</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="143:23" pos:end="145:40">else<block type="pseudo" pos:start="145:25" pos:end="145:40"><block_content pos:start="145:25" pos:end="145:40">

                        <expr_stmt pos:start="145:25" pos:end="145:40"><expr pos:start="145:25" pos:end="145:39"><name pos:start="145:25" pos:end="145:32">topright</name> <operator pos:start="145:34" pos:end="145:34">=</operator> <name pos:start="145:36" pos:end="145:39">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="149:21" pos:end="149:65"><expr pos:start="149:21" pos:end="149:64"><name pos:start="149:21" pos:end="149:39"><name pos:start="149:21" pos:end="149:21">h</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:26">hpc</name><operator pos:start="149:27" pos:end="149:27">.</operator><name pos:start="149:28" pos:end="149:34">pred4x4</name><index pos:start="149:35" pos:end="149:39">[<expr pos:start="149:36" pos:end="149:38"><name pos:start="149:36" pos:end="149:38">dir</name></expr>]</index></name><operator pos:start="149:40" pos:end="149:40">(</operator><name pos:start="149:41" pos:end="149:43">ptr</name><operator pos:start="149:44" pos:end="149:44">,</operator> <name pos:start="149:46" pos:end="149:53">topright</name><operator pos:start="149:54" pos:end="149:54">,</operator> <name pos:start="149:56" pos:end="149:63">linesize</name><operator pos:start="149:64" pos:end="149:64">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:69"><expr pos:start="151:21" pos:end="151:68"><name pos:start="151:21" pos:end="151:23">nnz</name> <operator pos:start="151:25" pos:end="151:25">=</operator> <name pos:start="151:27" pos:end="151:68"><name pos:start="151:27" pos:end="151:27">h</name><operator pos:start="151:28" pos:end="151:29">-&gt;</operator><name pos:start="151:30" pos:end="151:49">non_zero_count_cache</name><index pos:start="151:50" pos:end="151:68">[<expr pos:start="151:51" pos:end="151:67"><name pos:start="151:51" pos:end="151:67"><name pos:start="151:51" pos:end="151:55">scan8</name><index pos:start="151:56" pos:end="151:67">[<expr pos:start="151:57" pos:end="151:66"><name pos:start="151:57" pos:end="151:57">i</name> <operator pos:start="151:59" pos:end="151:59">+</operator> <name pos:start="151:61" pos:end="151:61">p</name> <operator pos:start="151:63" pos:end="151:63">*</operator> <literal type="number" pos:start="151:65" pos:end="151:66">16</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="153:21" pos:end="169:21"><if pos:start="153:21" pos:end="169:21">if <condition pos:start="153:24" pos:end="153:28">(<expr pos:start="153:25" pos:end="153:27"><name pos:start="153:25" pos:end="153:27">nnz</name></expr>)</condition> <block pos:start="153:30" pos:end="169:21">{<block_content pos:start="155:25" pos:end="167:99">

                        <if_stmt pos:start="155:25" pos:end="167:99"><if pos:start="155:25" pos:end="165:25">if <condition pos:start="155:28" pos:end="155:36">(<expr pos:start="155:29" pos:end="155:35"><name pos:start="155:29" pos:end="155:35">is_h264</name></expr>)</condition> <block pos:start="155:38" pos:end="165:25">{<block_content pos:start="157:29" pos:end="163:99">

                            <if_stmt pos:start="157:29" pos:end="163:99"><if pos:start="157:29" pos:end="159:102">if <condition pos:start="157:32" pos:end="157:94">(<expr pos:start="157:33" pos:end="157:93"><name pos:start="157:33" pos:end="157:35">nnz</name> <operator pos:start="157:37" pos:end="157:38">==</operator> <literal type="number" pos:start="157:40" pos:end="157:40">1</literal> <operator pos:start="157:42" pos:end="157:43">&amp;&amp;</operator> <call pos:start="157:45" pos:end="157:93"><name pos:start="157:45" pos:end="157:55">dctcoef_get</name><argument_list pos:start="157:56" pos:end="157:93">(<argument pos:start="157:57" pos:end="157:61"><expr pos:start="157:57" pos:end="157:61"><name pos:start="157:57" pos:end="157:61"><name pos:start="157:57" pos:end="157:57">h</name><operator pos:start="157:58" pos:end="157:59">-&gt;</operator><name pos:start="157:60" pos:end="157:61">mb</name></name></expr></argument>, <argument pos:start="157:64" pos:end="157:74"><expr pos:start="157:64" pos:end="157:74"><name pos:start="157:64" pos:end="157:74">pixel_shift</name></expr></argument>, <argument pos:start="157:77" pos:end="157:92"><expr pos:start="157:77" pos:end="157:92"><name pos:start="157:77" pos:end="157:77">i</name> <operator pos:start="157:79" pos:end="157:79">*</operator> <literal type="number" pos:start="157:81" pos:end="157:84">16</literal> <operator pos:start="157:84" pos:end="157:84">+</operator> <name pos:start="157:86" pos:end="157:86">p</name> <operator pos:start="157:88" pos:end="157:88">*</operator> <literal type="number" pos:start="157:90" pos:end="157:92">256</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="159:33" pos:end="159:102"><block_content pos:start="159:33" pos:end="159:102">

                                <expr_stmt pos:start="159:33" pos:end="159:102"><expr pos:start="159:33" pos:end="159:101"><call pos:start="159:33" pos:end="159:101"><name pos:start="159:33" pos:end="159:43">idct_dc_add</name><argument_list pos:start="159:44" pos:end="159:101">(<argument pos:start="159:45" pos:end="159:47"><expr pos:start="159:45" pos:end="159:47"><name pos:start="159:45" pos:end="159:47">ptr</name></expr></argument>, <argument pos:start="159:50" pos:end="159:90"><expr pos:start="159:50" pos:end="159:90"><name pos:start="159:50" pos:end="159:54"><name pos:start="159:50" pos:end="159:50">h</name><operator pos:start="159:51" pos:end="159:52">-&gt;</operator><name pos:start="159:53" pos:end="159:54">mb</name></name> <operator pos:start="159:56" pos:end="159:56">+</operator> <operator pos:start="159:58" pos:end="159:58">(</operator><name pos:start="159:59" pos:end="159:59">i</name> <operator pos:start="159:61" pos:end="159:61">*</operator> <literal type="number" pos:start="159:63" pos:end="159:66">16</literal> <operator pos:start="159:66" pos:end="159:66">+</operator> <name pos:start="159:68" pos:end="159:68">p</name> <operator pos:start="159:70" pos:end="159:70">*</operator> <literal type="number" pos:start="159:72" pos:end="159:74">256</literal> <operator pos:start="159:76" pos:end="159:77">&lt;&lt;</operator> <name pos:start="159:79" pos:end="159:89">pixel_shift</name><operator pos:start="159:90" pos:end="159:90">)</operator></expr></argument>, <argument pos:start="159:93" pos:end="159:100"><expr pos:start="159:93" pos:end="159:100"><name pos:start="159:93" pos:end="159:100">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="161:29" pos:end="163:99">else<block type="pseudo" pos:start="163:33" pos:end="163:99"><block_content pos:start="163:33" pos:end="163:99">

                                <expr_stmt pos:start="163:33" pos:end="163:99"><expr pos:start="163:33" pos:end="163:98"><call pos:start="163:33" pos:end="163:98"><name pos:start="163:33" pos:end="163:40">idct_add</name><argument_list pos:start="163:41" pos:end="163:98">(<argument pos:start="163:42" pos:end="163:44"><expr pos:start="163:42" pos:end="163:44"><name pos:start="163:42" pos:end="163:44">ptr</name></expr></argument>, <argument pos:start="163:47" pos:end="163:87"><expr pos:start="163:47" pos:end="163:87"><name pos:start="163:47" pos:end="163:51"><name pos:start="163:47" pos:end="163:47">h</name><operator pos:start="163:48" pos:end="163:49">-&gt;</operator><name pos:start="163:50" pos:end="163:51">mb</name></name> <operator pos:start="163:53" pos:end="163:53">+</operator> <operator pos:start="163:55" pos:end="163:55">(</operator><name pos:start="163:56" pos:end="163:56">i</name> <operator pos:start="163:58" pos:end="163:58">*</operator> <literal type="number" pos:start="163:60" pos:end="163:63">16</literal> <operator pos:start="163:63" pos:end="163:63">+</operator> <name pos:start="163:65" pos:end="163:65">p</name> <operator pos:start="163:67" pos:end="163:67">*</operator> <literal type="number" pos:start="163:69" pos:end="163:71">256</literal> <operator pos:start="163:73" pos:end="163:74">&lt;&lt;</operator> <name pos:start="163:76" pos:end="163:86">pixel_shift</name><operator pos:start="163:87" pos:end="163:87">)</operator></expr></argument>, <argument pos:start="163:90" pos:end="163:97"><expr pos:start="163:90" pos:end="163:97"><name pos:start="163:90" pos:end="163:97">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="165:27" pos:end="167:99">else if <condition pos:start="165:35" pos:end="165:55">(<expr pos:start="165:36" pos:end="165:54"><name pos:start="165:36" pos:end="165:54">CONFIG_SVQ3_DECODER</name></expr>)</condition><block type="pseudo" pos:start="167:29" pos:end="167:99"><block_content pos:start="167:29" pos:end="167:99">

                            <expr_stmt pos:start="167:29" pos:end="167:99"><expr pos:start="167:29" pos:end="167:98"><call pos:start="167:29" pos:end="167:98"><name pos:start="167:29" pos:end="167:46">ff_svq3_add_idct_c</name><argument_list pos:start="167:47" pos:end="167:98">(<argument pos:start="167:48" pos:end="167:50"><expr pos:start="167:48" pos:end="167:50"><name pos:start="167:48" pos:end="167:50">ptr</name></expr></argument>, <argument pos:start="167:53" pos:end="167:76"><expr pos:start="167:53" pos:end="167:76"><name pos:start="167:53" pos:end="167:57"><name pos:start="167:53" pos:end="167:53">h</name><operator pos:start="167:54" pos:end="167:55">-&gt;</operator><name pos:start="167:56" pos:end="167:57">mb</name></name> <operator pos:start="167:59" pos:end="167:59">+</operator> <name pos:start="167:61" pos:end="167:61">i</name> <operator pos:start="167:63" pos:end="167:63">*</operator> <literal type="number" pos:start="167:65" pos:end="167:68">16</literal> <operator pos:start="167:68" pos:end="167:68">+</operator> <name pos:start="167:70" pos:end="167:70">p</name> <operator pos:start="167:72" pos:end="167:72">*</operator> <literal type="number" pos:start="167:74" pos:end="167:76">256</literal></expr></argument>, <argument pos:start="167:79" pos:end="167:86"><expr pos:start="167:79" pos:end="167:86"><name pos:start="167:79" pos:end="167:86">linesize</name></expr></argument>, <argument pos:start="167:89" pos:end="167:94"><expr pos:start="167:89" pos:end="167:94"><name pos:start="167:89" pos:end="167:94">qscale</name></expr></argument>, <argument pos:start="167:97" pos:end="167:97"><expr pos:start="167:97" pos:end="167:97"><literal type="number" pos:start="167:97" pos:end="167:97">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="227:5">else <block pos:start="177:12" pos:end="227:5">{<block_content pos:start="179:9" pos:end="225:69">

        <expr_stmt pos:start="179:9" pos:end="179:68"><expr pos:start="179:9" pos:end="179:67"><name pos:start="179:9" pos:end="179:49"><name pos:start="179:9" pos:end="179:9">h</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:14">hpc</name><operator pos:start="179:15" pos:end="179:15">.</operator><name pos:start="179:16" pos:end="179:24">pred16x16</name><index pos:start="179:25" pos:end="179:49">[<expr pos:start="179:26" pos:end="179:48"><name pos:start="179:26" pos:end="179:48"><name pos:start="179:26" pos:end="179:26">h</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:48">intra16x16_pred_mode</name></name></expr>]</index></name><operator pos:start="179:50" pos:end="179:50">(</operator><name pos:start="179:51" pos:end="179:56">dest_y</name><operator pos:start="179:57" pos:end="179:57">,</operator> <name pos:start="179:59" pos:end="179:66">linesize</name><operator pos:start="179:67" pos:end="179:67">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="225:69"><if pos:start="181:9" pos:end="221:9">if <condition pos:start="181:12" pos:end="181:20">(<expr pos:start="181:13" pos:end="181:19"><name pos:start="181:13" pos:end="181:19">is_h264</name></expr>)</condition> <block pos:start="181:22" pos:end="221:9">{<block_content pos:start="183:13" pos:end="219:13">

            <if_stmt pos:start="183:13" pos:end="219:13"><if pos:start="183:13" pos:end="219:13">if <condition pos:start="183:16" pos:end="183:72">(<expr pos:start="183:17" pos:end="183:71"><name pos:start="183:17" pos:end="183:71"><name pos:start="183:17" pos:end="183:17">h</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:39">non_zero_count_cache</name><index pos:start="183:40" pos:end="183:71">[<expr pos:start="183:41" pos:end="183:70"><name pos:start="183:41" pos:end="183:70"><name pos:start="183:41" pos:end="183:45">scan8</name><index pos:start="183:46" pos:end="183:70">[<expr pos:start="183:47" pos:end="183:69"><name pos:start="183:47" pos:end="183:65">LUMA_DC_BLOCK_INDEX</name> <operator pos:start="183:67" pos:end="183:67">+</operator> <name pos:start="183:69" pos:end="183:69">p</name></expr>]</index></name></expr>]</index></name></expr>)</condition> <block pos:start="183:74" pos:end="219:13">{<block_content pos:start="185:17" pos:end="217:17">

                <if_stmt pos:start="185:17" pos:end="217:17"><if pos:start="185:17" pos:end="191:90">if <condition pos:start="185:20" pos:end="185:38">(<expr pos:start="185:21" pos:end="185:37"><operator pos:start="185:21" pos:end="185:21">!</operator><name pos:start="185:22" pos:end="185:37">transform_bypass</name></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="191:90"><block_content pos:start="187:21" pos:end="191:90">

                    <expr_stmt pos:start="187:21" pos:end="191:90"><expr pos:start="187:21" pos:end="191:89"><call pos:start="187:21" pos:end="191:89"><name pos:start="187:21" pos:end="187:56"><name pos:start="187:21" pos:end="187:21">h</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:30">h264dsp</name><operator pos:start="187:31" pos:end="187:31">.</operator><name pos:start="187:32" pos:end="187:56">h264_luma_dc_dequant_idct</name></name><argument_list pos:start="187:57" pos:end="191:89">(<argument pos:start="187:58" pos:end="187:89"><expr pos:start="187:58" pos:end="187:89"><name pos:start="187:58" pos:end="187:62"><name pos:start="187:58" pos:end="187:58">h</name><operator pos:start="187:59" pos:end="187:60">-&gt;</operator><name pos:start="187:61" pos:end="187:62">mb</name></name> <operator pos:start="187:64" pos:end="187:64">+</operator> <operator pos:start="187:66" pos:end="187:66">(</operator><name pos:start="187:67" pos:end="187:67">p</name> <operator pos:start="187:69" pos:end="187:69">*</operator> <literal type="number" pos:start="187:71" pos:end="187:73">256</literal> <operator pos:start="187:75" pos:end="187:76">&lt;&lt;</operator> <name pos:start="187:78" pos:end="187:88">pixel_shift</name><operator pos:start="187:89" pos:end="187:89">)</operator></expr></argument>,

                                                         <argument pos:start="189:58" pos:end="189:73"><expr pos:start="189:58" pos:end="189:73"><name pos:start="189:58" pos:end="189:73"><name pos:start="189:58" pos:end="189:58">h</name><operator pos:start="189:59" pos:end="189:60">-&gt;</operator><name pos:start="189:61" pos:end="189:70">mb_luma_dc</name><index pos:start="189:71" pos:end="189:73">[<expr pos:start="189:72" pos:end="189:72"><name pos:start="189:72" pos:end="189:72">p</name></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="191:58" pos:end="191:88"><expr pos:start="191:58" pos:end="191:88"><name pos:start="191:58" pos:end="191:88"><name pos:start="191:58" pos:end="191:58">h</name><operator pos:start="191:59" pos:end="191:60">-&gt;</operator><name pos:start="191:61" pos:end="191:74">dequant4_coeff</name><index pos:start="191:75" pos:end="191:77">[<expr pos:start="191:76" pos:end="191:76"><name pos:start="191:76" pos:end="191:76">p</name></expr>]</index><index pos:start="191:78" pos:end="191:85">[<expr pos:start="191:79" pos:end="191:84"><name pos:start="191:79" pos:end="191:84">qscale</name></expr>]</index><index pos:start="191:86" pos:end="191:88">[<expr pos:start="191:87" pos:end="191:87"><literal type="number" pos:start="191:87" pos:end="191:87">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="193:17" pos:end="217:17">else <block pos:start="193:22" pos:end="217:17">{<block_content pos:start="195:21" pos:end="215:65">

                    <decl_stmt pos:start="195:21" pos:end="205:22"><decl pos:start="195:21" pos:end="205:21"><type pos:start="195:21" pos:end="195:40"><specifier pos:start="195:21" pos:end="195:26">static</specifier> <specifier pos:start="195:28" pos:end="195:32">const</specifier> <name pos:start="195:34" pos:end="195:40">uint8_t</name></type> <name pos:start="195:42" pos:end="195:55"><name pos:start="195:42" pos:end="195:51">dc_mapping</name><index pos:start="195:52" pos:end="195:55">[<expr pos:start="195:53" pos:end="195:54"><literal type="number" pos:start="195:53" pos:end="195:54">16</literal></expr>]</index></name> <init pos:start="195:57" pos:end="205:21">= <expr pos:start="195:59" pos:end="205:21"><block pos:start="195:59" pos:end="205:21">{

                         <expr pos:start="197:26" pos:end="197:31"><literal type="number" pos:start="197:26" pos:end="197:26">0</literal> <operator pos:start="197:28" pos:end="197:28">*</operator> <literal type="number" pos:start="197:30" pos:end="197:31">16</literal></expr>,  <expr pos:start="197:35" pos:end="197:40"><literal type="number" pos:start="197:35" pos:end="197:35">1</literal> <operator pos:start="197:37" pos:end="197:37">*</operator> <literal type="number" pos:start="197:39" pos:end="197:40">16</literal></expr>,  <expr pos:start="197:44" pos:end="197:49"><literal type="number" pos:start="197:44" pos:end="197:44">4</literal> <operator pos:start="197:46" pos:end="197:46">*</operator> <literal type="number" pos:start="197:48" pos:end="197:49">16</literal></expr>,  <expr pos:start="197:53" pos:end="197:58"><literal type="number" pos:start="197:53" pos:end="197:53">5</literal> <operator pos:start="197:55" pos:end="197:55">*</operator> <literal type="number" pos:start="197:57" pos:end="197:58">16</literal></expr>,

                         <expr pos:start="199:26" pos:end="199:31"><literal type="number" pos:start="199:26" pos:end="199:26">2</literal> <operator pos:start="199:28" pos:end="199:28">*</operator> <literal type="number" pos:start="199:30" pos:end="199:31">16</literal></expr>,  <expr pos:start="199:35" pos:end="199:40"><literal type="number" pos:start="199:35" pos:end="199:35">3</literal> <operator pos:start="199:37" pos:end="199:37">*</operator> <literal type="number" pos:start="199:39" pos:end="199:40">16</literal></expr>,  <expr pos:start="199:44" pos:end="199:49"><literal type="number" pos:start="199:44" pos:end="199:44">6</literal> <operator pos:start="199:46" pos:end="199:46">*</operator> <literal type="number" pos:start="199:48" pos:end="199:49">16</literal></expr>,  <expr pos:start="199:53" pos:end="199:58"><literal type="number" pos:start="199:53" pos:end="199:53">7</literal> <operator pos:start="199:55" pos:end="199:55">*</operator> <literal type="number" pos:start="199:57" pos:end="199:58">16</literal></expr>,

                         <expr pos:start="201:26" pos:end="201:31"><literal type="number" pos:start="201:26" pos:end="201:26">8</literal> <operator pos:start="201:28" pos:end="201:28">*</operator> <literal type="number" pos:start="201:30" pos:end="201:31">16</literal></expr>,  <expr pos:start="201:35" pos:end="201:40"><literal type="number" pos:start="201:35" pos:end="201:35">9</literal> <operator pos:start="201:37" pos:end="201:37">*</operator> <literal type="number" pos:start="201:39" pos:end="201:40">16</literal></expr>, <expr pos:start="201:43" pos:end="201:49"><literal type="number" pos:start="201:43" pos:end="201:44">12</literal> <operator pos:start="201:46" pos:end="201:46">*</operator> <literal type="number" pos:start="201:48" pos:end="201:49">16</literal></expr>, <expr pos:start="201:52" pos:end="201:58"><literal type="number" pos:start="201:52" pos:end="201:53">13</literal> <operator pos:start="201:55" pos:end="201:55">*</operator> <literal type="number" pos:start="201:57" pos:end="201:58">16</literal></expr>,

                        <expr pos:start="203:25" pos:end="203:31"><literal type="number" pos:start="203:25" pos:end="203:26">10</literal> <operator pos:start="203:28" pos:end="203:28">*</operator> <literal type="number" pos:start="203:30" pos:end="203:31">16</literal></expr>, <expr pos:start="203:34" pos:end="203:40"><literal type="number" pos:start="203:34" pos:end="203:35">11</literal> <operator pos:start="203:37" pos:end="203:37">*</operator> <literal type="number" pos:start="203:39" pos:end="203:40">16</literal></expr>, <expr pos:start="203:43" pos:end="203:49"><literal type="number" pos:start="203:43" pos:end="203:44">14</literal> <operator pos:start="203:46" pos:end="203:46">*</operator> <literal type="number" pos:start="203:48" pos:end="203:49">16</literal></expr>, <expr pos:start="203:52" pos:end="203:58"><literal type="number" pos:start="203:52" pos:end="203:53">15</literal> <operator pos:start="203:55" pos:end="203:55">*</operator> <literal type="number" pos:start="203:57" pos:end="203:58">16</literal></expr>

                    }</block></expr></init></decl>;</decl_stmt>

                    <for pos:start="207:21" pos:end="215:65">for <control pos:start="207:25" pos:end="207:44">(<init pos:start="207:26" pos:end="207:31"><expr pos:start="207:26" pos:end="207:30"><name pos:start="207:26" pos:end="207:26">i</name> <operator pos:start="207:28" pos:end="207:28">=</operator> <literal type="number" pos:start="207:30" pos:end="207:30">0</literal></expr>;</init> <condition pos:start="207:33" pos:end="207:39"><expr pos:start="207:33" pos:end="207:38"><name pos:start="207:33" pos:end="207:33">i</name> <operator pos:start="207:35" pos:end="207:35">&lt;</operator> <literal type="number" pos:start="207:37" pos:end="207:38">16</literal></expr>;</condition> <incr pos:start="207:41" pos:end="207:43"><expr pos:start="207:41" pos:end="207:43"><name pos:start="207:41" pos:end="207:41">i</name><operator pos:start="207:42" pos:end="207:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="209:25" pos:end="215:65"><block_content pos:start="209:25" pos:end="215:65">

                        <expr_stmt pos:start="209:25" pos:end="215:65"><expr pos:start="209:25" pos:end="215:64"><call pos:start="209:25" pos:end="215:64"><name pos:start="209:25" pos:end="209:35">dctcoef_set</name><argument_list pos:start="209:36" pos:end="215:64">(<argument pos:start="209:37" pos:end="209:68"><expr pos:start="209:37" pos:end="209:68"><name pos:start="209:37" pos:end="209:41"><name pos:start="209:37" pos:end="209:37">h</name><operator pos:start="209:38" pos:end="209:39">-&gt;</operator><name pos:start="209:40" pos:end="209:41">mb</name></name> <operator pos:start="209:43" pos:end="209:43">+</operator> <operator pos:start="209:45" pos:end="209:45">(</operator><name pos:start="209:46" pos:end="209:46">p</name> <operator pos:start="209:48" pos:end="209:48">*</operator> <literal type="number" pos:start="209:50" pos:end="209:52">256</literal> <operator pos:start="209:54" pos:end="209:55">&lt;&lt;</operator> <name pos:start="209:57" pos:end="209:67">pixel_shift</name><operator pos:start="209:68" pos:end="209:68">)</operator></expr></argument>,

                                    <argument pos:start="211:37" pos:end="211:47"><expr pos:start="211:37" pos:end="211:47"><name pos:start="211:37" pos:end="211:47">pixel_shift</name></expr></argument>, <argument pos:start="211:50" pos:end="211:62"><expr pos:start="211:50" pos:end="211:62"><name pos:start="211:50" pos:end="211:62"><name pos:start="211:50" pos:end="211:59">dc_mapping</name><index pos:start="211:60" pos:end="211:62">[<expr pos:start="211:61" pos:end="211:61"><name pos:start="211:61" pos:end="211:61">i</name></expr>]</index></name></expr></argument>,

                                    <argument pos:start="213:37" pos:end="215:63"><expr pos:start="213:37" pos:end="215:63"><call pos:start="213:37" pos:end="215:63"><name pos:start="213:37" pos:end="213:47">dctcoef_get</name><argument_list pos:start="213:48" pos:end="215:63">(<argument pos:start="213:49" pos:end="213:64"><expr pos:start="213:49" pos:end="213:64"><name pos:start="213:49" pos:end="213:64"><name pos:start="213:49" pos:end="213:49">h</name><operator pos:start="213:50" pos:end="213:51">-&gt;</operator><name pos:start="213:52" pos:end="213:61">mb_luma_dc</name><index pos:start="213:62" pos:end="213:64">[<expr pos:start="213:63" pos:end="213:63"><name pos:start="213:63" pos:end="213:63">p</name></expr>]</index></name></expr></argument>,

                                                <argument pos:start="215:49" pos:end="215:59"><expr pos:start="215:49" pos:end="215:59"><name pos:start="215:49" pos:end="215:59">pixel_shift</name></expr></argument>, <argument pos:start="215:62" pos:end="215:62"><expr pos:start="215:62" pos:end="215:62"><name pos:start="215:62" pos:end="215:62">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="221:11" pos:end="225:69">else if <condition pos:start="221:19" pos:end="221:39">(<expr pos:start="221:20" pos:end="221:38"><name pos:start="221:20" pos:end="221:38">CONFIG_SVQ3_DECODER</name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="225:69"><block_content pos:start="223:13" pos:end="225:69">

            <expr_stmt pos:start="223:13" pos:end="225:69"><expr pos:start="223:13" pos:end="225:68"><call pos:start="223:13" pos:end="225:68"><name pos:start="223:13" pos:end="223:42">ff_svq3_luma_dc_dequant_idct_c</name><argument_list pos:start="223:43" pos:end="225:68">(<argument pos:start="223:44" pos:end="223:58"><expr pos:start="223:44" pos:end="223:58"><name pos:start="223:44" pos:end="223:48"><name pos:start="223:44" pos:end="223:44">h</name><operator pos:start="223:45" pos:end="223:46">-&gt;</operator><name pos:start="223:47" pos:end="223:48">mb</name></name> <operator pos:start="223:50" pos:end="223:50">+</operator> <name pos:start="223:52" pos:end="223:52">p</name> <operator pos:start="223:54" pos:end="223:54">*</operator> <literal type="number" pos:start="223:56" pos:end="223:58">256</literal></expr></argument>,

                                           <argument pos:start="225:44" pos:end="225:59"><expr pos:start="225:44" pos:end="225:59"><name pos:start="225:44" pos:end="225:59"><name pos:start="225:44" pos:end="225:44">h</name><operator pos:start="225:45" pos:end="225:46">-&gt;</operator><name pos:start="225:47" pos:end="225:56">mb_luma_dc</name><index pos:start="225:57" pos:end="225:59">[<expr pos:start="225:58" pos:end="225:58"><name pos:start="225:58" pos:end="225:58">p</name></expr>]</index></name></expr></argument>, <argument pos:start="225:62" pos:end="225:67"><expr pos:start="225:62" pos:end="225:67"><name pos:start="225:62" pos:end="225:67">qscale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
