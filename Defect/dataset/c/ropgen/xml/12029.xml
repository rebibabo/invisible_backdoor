<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12029.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">prepare_input_packet</name><parameter_list pos:start="1:32" pos:end="1:66">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:31"><expr pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:30"><name pos:start="9:11" pos:end="9:22">check_packet</name><argument_list pos:start="9:23" pos:end="9:30">(<argument pos:start="9:24" pos:end="9:24"><expr pos:start="9:24" pos:end="9:24"><name pos:start="9:24" pos:end="9:24">s</name></expr></argument>, <argument pos:start="9:27" pos:end="9:29"><expr pos:start="9:27" pos:end="9:29"><name pos:start="9:27" pos:end="9:29">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="18:0"><if pos:start="11:5" pos:end="18:0">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="18:0"><block_content pos:start="13:9" pos:end="18:0">

        <return pos:start="13:9" pos:end="18:0">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="17:1" pos:end="17:31">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:31"><operator pos:start="17:5" pos:end="17:5">!</operator><name pos:start="17:6" pos:end="17:31">FF_API_COMPUTE_PKT_FIELDS2</name></expr></cpp:if>

    <comment type="block" pos:start="19:5" pos:end="19:33">/* sanitize the timestamps */</comment>

    <if_stmt pos:start="21:5" pos:end="96:0"><if pos:start="21:5" pos:end="96:0">if <condition pos:start="21:8" pos:end="21:50">(<expr pos:start="21:9" pos:end="21:49"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:27"><name pos:start="21:11" pos:end="21:11">s</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:20">oformat</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:27">flags</name></name> <operator pos:start="21:29" pos:end="21:29">&amp;</operator> <name pos:start="21:31" pos:end="21:48">AVFMT_NOTIMESTAMPS</name><operator pos:start="21:49" pos:end="21:49">)</operator></expr>)</condition> <block pos:start="21:52" pos:end="96:0">{<block_content pos:start="23:9" pos:end="91:9">

        <decl_stmt pos:start="23:9" pos:end="23:53"><decl pos:start="23:9" pos:end="23:52"><type pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:16">AVStream</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:20">st</name> <init pos:start="23:22" pos:end="23:52">= <expr pos:start="23:24" pos:end="23:52"><name pos:start="23:24" pos:end="23:52"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:33">streams</name><index pos:start="23:34" pos:end="23:52">[<expr pos:start="23:35" pos:end="23:51"><name pos:start="23:35" pos:end="23:51"><name pos:start="23:35" pos:end="23:37">pkt</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:51">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="27:9" pos:end="29:60">/* when there is no reordering (so dts is equal to pts), but

         * only one of them is set, set the other as well */</comment>

        <if_stmt pos:start="31:9" pos:end="41:9"><if pos:start="31:9" pos:end="41:9">if <condition pos:start="31:12" pos:end="31:35">(<expr pos:start="31:13" pos:end="31:34"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:34"><name pos:start="31:14" pos:end="31:15">st</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:25">internal</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:34">reorder</name></name></expr>)</condition> <block pos:start="31:37" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:36">

            <if_stmt pos:start="33:13" pos:end="35:36"><if pos:start="33:13" pos:end="35:36">if <condition pos:start="33:16" pos:end="33:73">(<expr pos:start="33:17" pos:end="33:72"><name pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:19">pkt</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:24">pts</name></name> <operator pos:start="33:26" pos:end="33:27">==</operator> <name pos:start="33:29" pos:end="33:42">AV_NOPTS_VALUE</name> <operator pos:start="33:44" pos:end="33:45">&amp;&amp;</operator> <name pos:start="33:47" pos:end="33:54"><name pos:start="33:47" pos:end="33:49">pkt</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:54">dts</name></name> <operator pos:start="33:56" pos:end="33:57">!=</operator> <name pos:start="33:59" pos:end="33:72">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:36"><block_content pos:start="35:17" pos:end="35:36">

                <expr_stmt pos:start="35:17" pos:end="35:36"><expr pos:start="35:17" pos:end="35:35"><name pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:19">pkt</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:24">pts</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:30">pkt</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:35">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="37:13" pos:end="39:36"><if pos:start="37:13" pos:end="39:36">if <condition pos:start="37:16" pos:end="37:73">(<expr pos:start="37:17" pos:end="37:72"><name pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">pkt</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:24">dts</name></name> <operator pos:start="37:26" pos:end="37:27">==</operator> <name pos:start="37:29" pos:end="37:42">AV_NOPTS_VALUE</name> <operator pos:start="37:44" pos:end="37:45">&amp;&amp;</operator> <name pos:start="37:47" pos:end="37:54"><name pos:start="37:47" pos:end="37:49">pkt</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:54">pts</name></name> <operator pos:start="37:56" pos:end="37:57">!=</operator> <name pos:start="37:59" pos:end="37:72">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:36"><block_content pos:start="39:17" pos:end="39:36">

                <expr_stmt pos:start="39:17" pos:end="39:36"><expr pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:24"><name pos:start="39:17" pos:end="39:19">pkt</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:24">dts</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:35"><name pos:start="39:28" pos:end="39:30">pkt</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:35">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="45:9" pos:end="45:47">/* check that the timestamps are set */</comment>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:69">(<expr pos:start="47:13" pos:end="47:68"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:15">pkt</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:20">pts</name></name> <operator pos:start="47:22" pos:end="47:23">==</operator> <name pos:start="47:25" pos:end="47:38">AV_NOPTS_VALUE</name> <operator pos:start="47:40" pos:end="47:41">||</operator> <name pos:start="47:43" pos:end="47:50"><name pos:start="47:43" pos:end="47:45">pkt</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:50">dts</name></name> <operator pos:start="47:52" pos:end="47:53">==</operator> <name pos:start="47:55" pos:end="47:68">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="47:71" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:35">

            <expr_stmt pos:start="49:13" pos:end="51:82"><expr pos:start="49:13" pos:end="51:81"><call pos:start="49:13" pos:end="51:81"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="51:81">(<argument pos:start="49:20" pos:end="49:20"><expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">s</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="51:20" pos:end="51:69"><expr pos:start="51:20" pos:end="51:69"><literal type="string" pos:start="51:20" pos:end="51:69">"Timestamps are unset in a packet for stream %d\n"</literal></expr></argument>, <argument pos:start="51:72" pos:end="51:80"><expr pos:start="51:72" pos:end="51:80"><name pos:start="51:72" pos:end="51:80"><name pos:start="51:72" pos:end="51:73">st</name><operator pos:start="51:74" pos:end="51:75">-&gt;</operator><name pos:start="51:76" pos:end="51:80">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:35">return <expr pos:start="53:20" pos:end="53:34"><call pos:start="53:20" pos:end="53:34"><name pos:start="53:20" pos:end="53:26">AVERROR</name><argument_list pos:start="53:27" pos:end="53:34">(<argument pos:start="53:28" pos:end="53:33"><expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="59:9" pos:end="61:37">/* check that the dts are increasing (or at least non-decreasing,

         * if the format allows it */</comment>

        <if_stmt pos:start="63:9" pos:end="79:9"><if pos:start="63:9" pos:end="79:9">if <condition pos:start="63:12" pos:end="67:37">(<expr pos:start="63:13" pos:end="67:36"><name pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:14">st</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:23">cur_dts</name></name> <operator pos:start="63:25" pos:end="63:26">!=</operator> <name pos:start="63:28" pos:end="63:41">AV_NOPTS_VALUE</name> <operator pos:start="63:43" pos:end="63:44">&amp;&amp;</operator>

            <operator pos:start="65:13" pos:end="65:13">(</operator><operator pos:start="65:14" pos:end="65:14">(</operator><operator pos:start="65:15" pos:end="65:15">!</operator><operator pos:start="65:16" pos:end="65:16">(</operator><name pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:26">oformat</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:33">flags</name></name> <operator pos:start="65:35" pos:end="65:35">&amp;</operator> <name pos:start="65:37" pos:end="65:54">AVFMT_TS_NONSTRICT</name><operator pos:start="65:55" pos:end="65:55">)</operator> <operator pos:start="65:57" pos:end="65:58">&amp;&amp;</operator> <name pos:start="65:60" pos:end="65:70"><name pos:start="65:60" pos:end="65:61">st</name><operator pos:start="65:62" pos:end="65:63">-&gt;</operator><name pos:start="65:64" pos:end="65:70">cur_dts</name></name> <operator pos:start="65:72" pos:end="65:73">&gt;=</operator> <name pos:start="65:75" pos:end="65:82"><name pos:start="65:75" pos:end="65:77">pkt</name><operator pos:start="65:78" pos:end="65:79">-&gt;</operator><name pos:start="65:80" pos:end="65:82">dts</name></name><operator pos:start="65:83" pos:end="65:83">)</operator> <operator pos:start="65:85" pos:end="65:86">||</operator>

             <name pos:start="67:14" pos:end="67:24"><name pos:start="67:14" pos:end="67:15">st</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:24">cur_dts</name></name> <operator pos:start="67:26" pos:end="67:26">&gt;</operator> <name pos:start="67:28" pos:end="67:35"><name pos:start="67:28" pos:end="67:30">pkt</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:35">dts</name></name><operator pos:start="67:36" pos:end="67:36">)</operator></expr>)</condition> <block pos:start="67:39" pos:end="79:9">{<block_content pos:start="69:13" pos:end="77:35">

            <expr_stmt pos:start="69:13" pos:end="75:53"><expr pos:start="69:13" pos:end="75:52"><call pos:start="69:13" pos:end="75:52"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="75:52">(<argument pos:start="69:20" pos:end="69:20"><expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">s</name></expr></argument>, <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="71:20" pos:end="73:76"><expr pos:start="71:20" pos:end="73:76"><literal type="string" pos:start="71:20" pos:end="71:80">"Application provided invalid, non monotonically increasing "</literal>

                   <literal type="string" pos:start="73:20" pos:end="73:49">"dts to muxer in stream %d: %"</literal> <name pos:start="73:51" pos:end="73:56">PRId64</name> <literal type="string" pos:start="73:58" pos:end="73:64">" &gt;= %"</literal> <name pos:start="73:66" pos:end="73:71">PRId64</name> <literal type="string" pos:start="73:73" pos:end="73:76">"\n"</literal></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:28"><expr pos:start="75:20" pos:end="75:28"><name pos:start="75:20" pos:end="75:28"><name pos:start="75:20" pos:end="75:21">st</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:28">index</name></name></expr></argument>, <argument pos:start="75:31" pos:end="75:41"><expr pos:start="75:31" pos:end="75:41"><name pos:start="75:31" pos:end="75:41"><name pos:start="75:31" pos:end="75:32">st</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:41">cur_dts</name></name></expr></argument>, <argument pos:start="75:44" pos:end="75:51"><expr pos:start="75:44" pos:end="75:51"><name pos:start="75:44" pos:end="75:51"><name pos:start="75:44" pos:end="75:46">pkt</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:51">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:35">return <expr pos:start="77:20" pos:end="77:34"><call pos:start="77:20" pos:end="77:34"><name pos:start="77:20" pos:end="77:26">AVERROR</name><argument_list pos:start="77:27" pos:end="77:34">(<argument pos:start="77:28" pos:end="77:33"><expr pos:start="77:28" pos:end="77:33"><name pos:start="77:28" pos:end="77:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:32">(<expr pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:15">pkt</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:20">pts</name></name> <operator pos:start="83:22" pos:end="83:22">&lt;</operator> <name pos:start="83:24" pos:end="83:31"><name pos:start="83:24" pos:end="83:26">pkt</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:31">dts</name></name></expr>)</condition> <block pos:start="83:34" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:35">

            <expr_stmt pos:start="85:13" pos:end="87:50"><expr pos:start="85:13" pos:end="87:49"><call pos:start="85:13" pos:end="87:49"><name pos:start="85:13" pos:end="85:18">av_log</name><argument_list pos:start="85:19" pos:end="87:49">(<argument pos:start="85:20" pos:end="85:20"><expr pos:start="85:20" pos:end="85:20"><name pos:start="85:20" pos:end="85:20">s</name></expr></argument>, <argument pos:start="85:23" pos:end="85:34"><expr pos:start="85:23" pos:end="85:34"><name pos:start="85:23" pos:end="85:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:37" pos:end="85:86"><expr pos:start="85:37" pos:end="85:86"><literal type="string" pos:start="85:37" pos:end="85:43">"pts %"</literal> <name pos:start="85:45" pos:end="85:50">PRId64</name> <literal type="string" pos:start="85:52" pos:end="85:61">" &lt; dts %"</literal> <name pos:start="85:63" pos:end="85:68">PRId64</name> <literal type="string" pos:start="85:70" pos:end="85:86">" in stream %d\n"</literal></expr></argument>,

                   <argument pos:start="87:20" pos:end="87:27"><expr pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:22">pkt</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:27">pts</name></name></expr></argument>, <argument pos:start="87:30" pos:end="87:37"><expr pos:start="87:30" pos:end="87:37"><name pos:start="87:30" pos:end="87:37"><name pos:start="87:30" pos:end="87:32">pkt</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:37">dts</name></name></expr></argument>, <argument pos:start="87:40" pos:end="87:48"><expr pos:start="87:40" pos:end="87:48"><name pos:start="87:40" pos:end="87:48"><name pos:start="87:40" pos:end="87:41">st</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:48">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:35">return <expr pos:start="89:20" pos:end="89:34"><call pos:start="89:20" pos:end="89:34"><name pos:start="89:20" pos:end="89:26">AVERROR</name><argument_list pos:start="89:27" pos:end="89:34">(<argument pos:start="89:28" pos:end="89:33"><expr pos:start="89:28" pos:end="89:33"><name pos:start="89:28" pos:end="89:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="95:1" pos:end="95:6">#<cpp:directive pos:start="95:2" pos:end="95:6">endif</cpp:directive></cpp:endif>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
