<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16958.c" pos:tabs="8"><function pos:start="1:1" pos:end="473:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">gen_mipsdsp_add_cmp_pick</name><parameter_list pos:start="1:37" pos:end="5:76">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:49">DisasContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:45">uint32_t</name></type> <name pos:start="3:47" pos:end="3:49">op1</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:63"><decl pos:start="3:52" pos:end="3:63"><type pos:start="3:52" pos:end="3:63"><name pos:start="3:52" pos:end="3:59">uint32_t</name></type> <name pos:start="3:61" pos:end="3:63">op2</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:44"><decl pos:start="5:38" pos:end="5:44"><type pos:start="5:38" pos:end="5:44"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:44">ret</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:52"><decl pos:start="5:47" pos:end="5:52"><type pos:start="5:47" pos:end="5:52"><name pos:start="5:47" pos:end="5:49">int</name></type> <name pos:start="5:51" pos:end="5:52">v1</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:60"><decl pos:start="5:55" pos:end="5:60"><type pos:start="5:55" pos:end="5:60"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:60">v2</name></decl></parameter>, <parameter pos:start="5:63" pos:end="5:75"><decl pos:start="5:63" pos:end="5:75"><type pos:start="5:63" pos:end="5:75"><name pos:start="5:63" pos:end="5:65">int</name></type> <name pos:start="5:67" pos:end="5:75">check_ret</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="473:1">{<block_content pos:start="9:5" pos:end="471:26">

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">opn</name> <init pos:start="9:21" pos:end="9:48">= <expr pos:start="9:23" pos:end="9:48"><literal type="string" pos:start="9:23" pos:end="9:48">"mipsdsp add compare pick"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">TCGv_i32</name></type> <name pos:start="11:14" pos:end="11:15">t0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">TCGv</name></type> <name pos:start="13:10" pos:end="13:11">t1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">TCGv</name></type> <name pos:start="15:10" pos:end="15:13">v1_t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">TCGv</name></type> <name pos:start="17:10" pos:end="17:13">v2_t</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:39">(<expr pos:start="21:9" pos:end="21:38"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:15">==</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal><operator pos:start="21:18" pos:end="21:18">)</operator> <operator pos:start="21:20" pos:end="21:21">&amp;&amp;</operator> <operator pos:start="21:23" pos:end="21:23">(</operator><name pos:start="21:24" pos:end="21:32">check_ret</name> <operator pos:start="21:34" pos:end="21:35">==</operator> <literal type="number" pos:start="21:37" pos:end="21:37">1</literal><operator pos:start="21:38" pos:end="21:38">)</operator></expr>)</condition> <block pos:start="21:41" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <comment type="block" pos:start="23:9" pos:end="23:27">/* Treat as NOP. */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><call pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:18">MIPS_DEBUG</name><argument_list pos:start="25:19" pos:end="25:25">(<argument pos:start="25:20" pos:end="25:24"><expr pos:start="25:20" pos:end="25:24"><literal type="string" pos:start="25:20" pos:end="25:24">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:6">t0</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:27"><name pos:start="33:10" pos:end="33:25">tcg_temp_new_i32</name><argument_list pos:start="33:26" pos:end="33:27">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:6">t1</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:23"><name pos:start="35:10" pos:end="35:21">tcg_temp_new</name><argument_list pos:start="35:22" pos:end="35:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:8">v1_t</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:25"><name pos:start="37:12" pos:end="37:23">tcg_temp_new</name><argument_list pos:start="37:24" pos:end="37:25">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:8">v2_t</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:25"><name pos:start="39:12" pos:end="39:23">tcg_temp_new</name><argument_list pos:start="39:24" pos:end="39:25">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><call pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:16">gen_load_gpr</name><argument_list pos:start="43:17" pos:end="43:26">(<argument pos:start="43:18" pos:end="43:21"><expr pos:start="43:18" pos:end="43:21"><name pos:start="43:18" pos:end="43:21">v1_t</name></expr></argument>, <argument pos:start="43:24" pos:end="43:25"><expr pos:start="43:24" pos:end="43:25"><name pos:start="43:24" pos:end="43:25">v1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><call pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:16">gen_load_gpr</name><argument_list pos:start="45:17" pos:end="45:26">(<argument pos:start="45:18" pos:end="45:21"><expr pos:start="45:18" pos:end="45:21"><name pos:start="45:18" pos:end="45:21">v2_t</name></expr></argument>, <argument pos:start="45:24" pos:end="45:25"><expr pos:start="45:24" pos:end="45:25"><name pos:start="45:24" pos:end="45:25">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="49:5" pos:end="455:5">switch <condition pos:start="49:12" pos:end="49:16">(<expr pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">op1</name></expr>)</condition> <block pos:start="49:18" pos:end="455:5">{<block_content pos:start="51:5" pos:end="454:0">

    <case pos:start="51:5" pos:end="51:24">case <expr pos:start="51:10" pos:end="51:23"><name pos:start="51:10" pos:end="51:23">OPC_APPEND_DSP</name></expr>:</case>

        <switch pos:start="53:9" pos:end="87:9">switch <condition pos:start="53:16" pos:end="53:20">(<expr pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:19">op2</name></expr>)</condition> <block pos:start="53:22" pos:end="87:9">{<block_content pos:start="55:9" pos:end="85:18">

        <case pos:start="55:9" pos:end="55:24">case <expr pos:start="55:14" pos:end="55:23"><name pos:start="55:14" pos:end="55:23">OPC_APPEND</name></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:37"><expr pos:start="57:13" pos:end="57:36"><call pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:28">tcg_gen_movi_i32</name><argument_list pos:start="57:29" pos:end="57:36">(<argument pos:start="57:30" pos:end="57:31"><expr pos:start="57:30" pos:end="57:31"><name pos:start="57:30" pos:end="57:31">t0</name></expr></argument>, <argument pos:start="57:34" pos:end="57:35"><expr pos:start="57:34" pos:end="57:35"><name pos:start="57:34" pos:end="57:35">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:68"><expr pos:start="59:13" pos:end="59:67"><call pos:start="59:13" pos:end="59:67"><name pos:start="59:13" pos:end="59:29">gen_helper_append</name><argument_list pos:start="59:30" pos:end="59:67">(<argument pos:start="59:31" pos:end="59:42"><expr pos:start="59:31" pos:end="59:42"><name pos:start="59:31" pos:end="59:42"><name pos:start="59:31" pos:end="59:37">cpu_gpr</name><index pos:start="59:38" pos:end="59:42">[<expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:41">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="59:45" pos:end="59:56"><expr pos:start="59:45" pos:end="59:56"><name pos:start="59:45" pos:end="59:56"><name pos:start="59:45" pos:end="59:51">cpu_gpr</name><index pos:start="59:52" pos:end="59:56">[<expr pos:start="59:53" pos:end="59:55"><name pos:start="59:53" pos:end="59:55">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="59:59" pos:end="59:62"><expr pos:start="59:59" pos:end="59:62"><name pos:start="59:59" pos:end="59:62">v1_t</name></expr></argument>, <argument pos:start="59:65" pos:end="59:66"><expr pos:start="59:65" pos:end="59:66"><name pos:start="59:65" pos:end="59:66">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <case pos:start="63:9" pos:end="63:25">case <expr pos:start="63:14" pos:end="63:24"><name pos:start="63:14" pos:end="63:24">OPC_PREPEND</name></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="65:37"><expr pos:start="65:13" pos:end="65:36"><call pos:start="65:13" pos:end="65:36"><name pos:start="65:13" pos:end="65:28">tcg_gen_movi_i32</name><argument_list pos:start="65:29" pos:end="65:36">(<argument pos:start="65:30" pos:end="65:31"><expr pos:start="65:30" pos:end="65:31"><name pos:start="65:30" pos:end="65:31">t0</name></expr></argument>, <argument pos:start="65:34" pos:end="65:35"><expr pos:start="65:34" pos:end="65:35"><name pos:start="65:34" pos:end="65:35">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:69"><expr pos:start="67:13" pos:end="67:68"><call pos:start="67:13" pos:end="67:68"><name pos:start="67:13" pos:end="67:30">gen_helper_prepend</name><argument_list pos:start="67:31" pos:end="67:68">(<argument pos:start="67:32" pos:end="67:43"><expr pos:start="67:32" pos:end="67:43"><name pos:start="67:32" pos:end="67:43"><name pos:start="67:32" pos:end="67:38">cpu_gpr</name><index pos:start="67:39" pos:end="67:43">[<expr pos:start="67:40" pos:end="67:42"><name pos:start="67:40" pos:end="67:42">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="67:46" pos:end="67:49"><expr pos:start="67:46" pos:end="67:49"><name pos:start="67:46" pos:end="67:49">v1_t</name></expr></argument>, <argument pos:start="67:52" pos:end="67:63"><expr pos:start="67:52" pos:end="67:63"><name pos:start="67:52" pos:end="67:63"><name pos:start="67:52" pos:end="67:58">cpu_gpr</name><index pos:start="67:59" pos:end="67:63">[<expr pos:start="67:60" pos:end="67:62"><name pos:start="67:60" pos:end="67:62">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="67:66" pos:end="67:67"><expr pos:start="67:66" pos:end="67:67"><name pos:start="67:66" pos:end="67:67">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:24">case <expr pos:start="71:14" pos:end="71:23"><name pos:start="71:14" pos:end="71:23">OPC_BALIGN</name></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:37"><expr pos:start="73:13" pos:end="73:36"><call pos:start="73:13" pos:end="73:36"><name pos:start="73:13" pos:end="73:28">tcg_gen_movi_i32</name><argument_list pos:start="73:29" pos:end="73:36">(<argument pos:start="73:30" pos:end="73:31"><expr pos:start="73:30" pos:end="73:31"><name pos:start="73:30" pos:end="73:31">t0</name></expr></argument>, <argument pos:start="73:34" pos:end="73:35"><expr pos:start="73:34" pos:end="73:35"><name pos:start="73:34" pos:end="73:35">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:68"><expr pos:start="75:13" pos:end="75:67"><call pos:start="75:13" pos:end="75:67"><name pos:start="75:13" pos:end="75:29">gen_helper_balign</name><argument_list pos:start="75:30" pos:end="75:67">(<argument pos:start="75:31" pos:end="75:42"><expr pos:start="75:31" pos:end="75:42"><name pos:start="75:31" pos:end="75:42"><name pos:start="75:31" pos:end="75:37">cpu_gpr</name><index pos:start="75:38" pos:end="75:42">[<expr pos:start="75:39" pos:end="75:41"><name pos:start="75:39" pos:end="75:41">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="75:45" pos:end="75:48"><expr pos:start="75:45" pos:end="75:48"><name pos:start="75:45" pos:end="75:48">v1_t</name></expr></argument>, <argument pos:start="75:51" pos:end="75:62"><expr pos:start="75:51" pos:end="75:62"><name pos:start="75:51" pos:end="75:62"><name pos:start="75:51" pos:end="75:57">cpu_gpr</name><index pos:start="75:58" pos:end="75:62">[<expr pos:start="75:59" pos:end="75:61"><name pos:start="75:59" pos:end="75:61">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="75:65" pos:end="75:66"><expr pos:start="75:65" pos:end="75:66"><name pos:start="75:65" pos:end="75:66">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <default pos:start="79:9" pos:end="79:16">default:</default>            <comment type="block" pos:start="79:29" pos:end="79:39">/* Invid */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:38"><expr pos:start="81:13" pos:end="81:37"><call pos:start="81:13" pos:end="81:37"><name pos:start="81:13" pos:end="81:22">MIPS_INVAL</name><argument_list pos:start="81:23" pos:end="81:37">(<argument pos:start="81:24" pos:end="81:36"><expr pos:start="81:24" pos:end="81:36"><literal type="string" pos:start="81:24" pos:end="81:36">"MASK APPEND"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:45"><expr pos:start="83:13" pos:end="83:44"><call pos:start="83:13" pos:end="83:44"><name pos:start="83:13" pos:end="83:30">generate_exception</name><argument_list pos:start="83:31" pos:end="83:44">(<argument pos:start="83:32" pos:end="83:34"><expr pos:start="83:32" pos:end="83:34"><name pos:start="83:32" pos:end="83:34">ctx</name></expr></argument>, <argument pos:start="83:37" pos:end="83:43"><expr pos:start="83:37" pos:end="83:43"><name pos:start="83:37" pos:end="83:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:28">case <expr pos:start="91:10" pos:end="91:27"><name pos:start="91:10" pos:end="91:27">OPC_CMPU_EQ_QB_DSP</name></expr>:</case>

        <switch pos:start="93:9" pos:end="239:9">switch <condition pos:start="93:16" pos:end="93:20">(<expr pos:start="93:17" pos:end="93:19"><name pos:start="93:17" pos:end="93:19">op2</name></expr>)</condition> <block pos:start="93:22" pos:end="239:9">{<block_content pos:start="95:9" pos:end="237:18">

        <case pos:start="95:9" pos:end="95:28">case <expr pos:start="95:14" pos:end="95:27"><name pos:start="95:14" pos:end="95:27">OPC_CMPU_EQ_QB</name></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:27"><expr pos:start="97:13" pos:end="97:26"><call pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:21">check_dsp</name><argument_list pos:start="97:22" pos:end="97:26">(<argument pos:start="97:23" pos:end="97:25"><expr pos:start="97:23" pos:end="97:25"><name pos:start="97:23" pos:end="97:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:55"><expr pos:start="99:13" pos:end="99:54"><call pos:start="99:13" pos:end="99:54"><name pos:start="99:13" pos:end="99:33">gen_helper_cmpu_eq_qb</name><argument_list pos:start="99:34" pos:end="99:54">(<argument pos:start="99:35" pos:end="99:38"><expr pos:start="99:35" pos:end="99:38"><name pos:start="99:35" pos:end="99:38">v1_t</name></expr></argument>, <argument pos:start="99:41" pos:end="99:44"><expr pos:start="99:41" pos:end="99:44"><name pos:start="99:41" pos:end="99:44">v2_t</name></expr></argument>, <argument pos:start="99:47" pos:end="99:53"><expr pos:start="99:47" pos:end="99:53"><name pos:start="99:47" pos:end="99:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <case pos:start="103:9" pos:end="103:28">case <expr pos:start="103:14" pos:end="103:27"><name pos:start="103:14" pos:end="103:27">OPC_CMPU_LT_QB</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:27"><expr pos:start="105:13" pos:end="105:26"><call pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:21">check_dsp</name><argument_list pos:start="105:22" pos:end="105:26">(<argument pos:start="105:23" pos:end="105:25"><expr pos:start="105:23" pos:end="105:25"><name pos:start="105:23" pos:end="105:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:55"><expr pos:start="107:13" pos:end="107:54"><call pos:start="107:13" pos:end="107:54"><name pos:start="107:13" pos:end="107:33">gen_helper_cmpu_lt_qb</name><argument_list pos:start="107:34" pos:end="107:54">(<argument pos:start="107:35" pos:end="107:38"><expr pos:start="107:35" pos:end="107:38"><name pos:start="107:35" pos:end="107:38">v1_t</name></expr></argument>, <argument pos:start="107:41" pos:end="107:44"><expr pos:start="107:41" pos:end="107:44"><name pos:start="107:41" pos:end="107:44">v2_t</name></expr></argument>, <argument pos:start="107:47" pos:end="107:53"><expr pos:start="107:47" pos:end="107:53"><name pos:start="107:47" pos:end="107:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:28">case <expr pos:start="111:14" pos:end="111:27"><name pos:start="111:14" pos:end="111:27">OPC_CMPU_LE_QB</name></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="113:27"><expr pos:start="113:13" pos:end="113:26"><call pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:21">check_dsp</name><argument_list pos:start="113:22" pos:end="113:26">(<argument pos:start="113:23" pos:end="113:25"><expr pos:start="113:23" pos:end="113:25"><name pos:start="113:23" pos:end="113:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:55"><expr pos:start="115:13" pos:end="115:54"><call pos:start="115:13" pos:end="115:54"><name pos:start="115:13" pos:end="115:33">gen_helper_cmpu_le_qb</name><argument_list pos:start="115:34" pos:end="115:54">(<argument pos:start="115:35" pos:end="115:38"><expr pos:start="115:35" pos:end="115:38"><name pos:start="115:35" pos:end="115:38">v1_t</name></expr></argument>, <argument pos:start="115:41" pos:end="115:44"><expr pos:start="115:41" pos:end="115:44"><name pos:start="115:41" pos:end="115:44">v2_t</name></expr></argument>, <argument pos:start="115:47" pos:end="115:53"><expr pos:start="115:47" pos:end="115:53"><name pos:start="115:47" pos:end="115:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:29">case <expr pos:start="119:14" pos:end="119:28"><name pos:start="119:14" pos:end="119:28">OPC_CMPGU_EQ_QB</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:27"><expr pos:start="121:13" pos:end="121:26"><call pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:21">check_dsp</name><argument_list pos:start="121:22" pos:end="121:26">(<argument pos:start="121:23" pos:end="121:25"><expr pos:start="121:23" pos:end="121:25"><name pos:start="121:23" pos:end="121:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:61"><expr pos:start="123:13" pos:end="123:60"><call pos:start="123:13" pos:end="123:60"><name pos:start="123:13" pos:end="123:34">gen_helper_cmpgu_eq_qb</name><argument_list pos:start="123:35" pos:end="123:60">(<argument pos:start="123:36" pos:end="123:47"><expr pos:start="123:36" pos:end="123:47"><name pos:start="123:36" pos:end="123:47"><name pos:start="123:36" pos:end="123:42">cpu_gpr</name><index pos:start="123:43" pos:end="123:47">[<expr pos:start="123:44" pos:end="123:46"><name pos:start="123:44" pos:end="123:46">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="123:50" pos:end="123:53"><expr pos:start="123:50" pos:end="123:53"><name pos:start="123:50" pos:end="123:53">v1_t</name></expr></argument>, <argument pos:start="123:56" pos:end="123:59"><expr pos:start="123:56" pos:end="123:59"><name pos:start="123:56" pos:end="123:59">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        <case pos:start="127:9" pos:end="127:29">case <expr pos:start="127:14" pos:end="127:28"><name pos:start="127:14" pos:end="127:28">OPC_CMPGU_LT_QB</name></expr>:</case>

            <expr_stmt pos:start="129:13" pos:end="129:27"><expr pos:start="129:13" pos:end="129:26"><call pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:21">check_dsp</name><argument_list pos:start="129:22" pos:end="129:26">(<argument pos:start="129:23" pos:end="129:25"><expr pos:start="129:23" pos:end="129:25"><name pos:start="129:23" pos:end="129:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:61"><expr pos:start="131:13" pos:end="131:60"><call pos:start="131:13" pos:end="131:60"><name pos:start="131:13" pos:end="131:34">gen_helper_cmpgu_lt_qb</name><argument_list pos:start="131:35" pos:end="131:60">(<argument pos:start="131:36" pos:end="131:47"><expr pos:start="131:36" pos:end="131:47"><name pos:start="131:36" pos:end="131:47"><name pos:start="131:36" pos:end="131:42">cpu_gpr</name><index pos:start="131:43" pos:end="131:47">[<expr pos:start="131:44" pos:end="131:46"><name pos:start="131:44" pos:end="131:46">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="131:50" pos:end="131:53"><expr pos:start="131:50" pos:end="131:53"><name pos:start="131:50" pos:end="131:53">v1_t</name></expr></argument>, <argument pos:start="131:56" pos:end="131:59"><expr pos:start="131:56" pos:end="131:59"><name pos:start="131:56" pos:end="131:59">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:29">case <expr pos:start="135:14" pos:end="135:28"><name pos:start="135:14" pos:end="135:28">OPC_CMPGU_LE_QB</name></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:27"><expr pos:start="137:13" pos:end="137:26"><call pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:21">check_dsp</name><argument_list pos:start="137:22" pos:end="137:26">(<argument pos:start="137:23" pos:end="137:25"><expr pos:start="137:23" pos:end="137:25"><name pos:start="137:23" pos:end="137:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:61"><expr pos:start="139:13" pos:end="139:60"><call pos:start="139:13" pos:end="139:60"><name pos:start="139:13" pos:end="139:34">gen_helper_cmpgu_le_qb</name><argument_list pos:start="139:35" pos:end="139:60">(<argument pos:start="139:36" pos:end="139:47"><expr pos:start="139:36" pos:end="139:47"><name pos:start="139:36" pos:end="139:47"><name pos:start="139:36" pos:end="139:42">cpu_gpr</name><index pos:start="139:43" pos:end="139:47">[<expr pos:start="139:44" pos:end="139:46"><name pos:start="139:44" pos:end="139:46">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="139:50" pos:end="139:53"><expr pos:start="139:50" pos:end="139:53"><name pos:start="139:50" pos:end="139:53">v1_t</name></expr></argument>, <argument pos:start="139:56" pos:end="139:59"><expr pos:start="139:56" pos:end="139:59"><name pos:start="139:56" pos:end="139:59">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:30">case <expr pos:start="143:14" pos:end="143:29"><name pos:start="143:14" pos:end="143:29">OPC_CMPGDU_EQ_QB</name></expr>:</case>

            <expr_stmt pos:start="145:13" pos:end="145:29"><expr pos:start="145:13" pos:end="145:28"><call pos:start="145:13" pos:end="145:28"><name pos:start="145:13" pos:end="145:23">check_dspr2</name><argument_list pos:start="145:24" pos:end="145:28">(<argument pos:start="145:25" pos:end="145:27"><expr pos:start="145:25" pos:end="145:27"><name pos:start="145:25" pos:end="145:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:51"><expr pos:start="147:13" pos:end="147:50"><call pos:start="147:13" pos:end="147:50"><name pos:start="147:13" pos:end="147:34">gen_helper_cmpgu_eq_qb</name><argument_list pos:start="147:35" pos:end="147:50">(<argument pos:start="147:36" pos:end="147:37"><expr pos:start="147:36" pos:end="147:37"><name pos:start="147:36" pos:end="147:37">t1</name></expr></argument>, <argument pos:start="147:40" pos:end="147:43"><expr pos:start="147:40" pos:end="147:43"><name pos:start="147:40" pos:end="147:43">v1_t</name></expr></argument>, <argument pos:start="147:46" pos:end="147:49"><expr pos:start="147:46" pos:end="147:49"><name pos:start="147:46" pos:end="147:49">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:45"><expr pos:start="149:13" pos:end="149:44"><call pos:start="149:13" pos:end="149:44"><name pos:start="149:13" pos:end="149:26">tcg_gen_mov_tl</name><argument_list pos:start="149:27" pos:end="149:44">(<argument pos:start="149:28" pos:end="149:39"><expr pos:start="149:28" pos:end="149:39"><name pos:start="149:28" pos:end="149:39"><name pos:start="149:28" pos:end="149:34">cpu_gpr</name><index pos:start="149:35" pos:end="149:39">[<expr pos:start="149:36" pos:end="149:38"><name pos:start="149:36" pos:end="149:38">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="149:42" pos:end="149:43"><expr pos:start="149:42" pos:end="149:43"><name pos:start="149:42" pos:end="149:43">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:66"><expr pos:start="151:13" pos:end="151:65"><call pos:start="151:13" pos:end="151:65"><name pos:start="151:13" pos:end="151:27">tcg_gen_andi_tl</name><argument_list pos:start="151:28" pos:end="151:65">(<argument pos:start="151:29" pos:end="151:39"><expr pos:start="151:29" pos:end="151:39"><name pos:start="151:29" pos:end="151:39">cpu_dspctrl</name></expr></argument>, <argument pos:start="151:42" pos:end="151:52"><expr pos:start="151:42" pos:end="151:52"><name pos:start="151:42" pos:end="151:52">cpu_dspctrl</name></expr></argument>, <argument pos:start="151:55" pos:end="151:64"><expr pos:start="151:55" pos:end="151:64"><literal type="number" pos:start="151:55" pos:end="151:64">0xF0FFFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:40"><expr pos:start="153:13" pos:end="153:39"><call pos:start="153:13" pos:end="153:39"><name pos:start="153:13" pos:end="153:27">tcg_gen_shli_tl</name><argument_list pos:start="153:28" pos:end="153:39">(<argument pos:start="153:29" pos:end="153:30"><expr pos:start="153:29" pos:end="153:30"><name pos:start="153:29" pos:end="153:30">t1</name></expr></argument>, <argument pos:start="153:33" pos:end="153:34"><expr pos:start="153:33" pos:end="153:34"><name pos:start="153:33" pos:end="153:34">t1</name></expr></argument>, <argument pos:start="153:37" pos:end="153:38"><expr pos:start="153:37" pos:end="153:38"><literal type="number" pos:start="153:37" pos:end="153:38">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:56"><expr pos:start="155:13" pos:end="155:55"><call pos:start="155:13" pos:end="155:55"><name pos:start="155:13" pos:end="155:25">tcg_gen_or_tl</name><argument_list pos:start="155:26" pos:end="155:55">(<argument pos:start="155:27" pos:end="155:37"><expr pos:start="155:27" pos:end="155:37"><name pos:start="155:27" pos:end="155:37">cpu_dspctrl</name></expr></argument>, <argument pos:start="155:40" pos:end="155:50"><expr pos:start="155:40" pos:end="155:50"><name pos:start="155:40" pos:end="155:50">cpu_dspctrl</name></expr></argument>, <argument pos:start="155:53" pos:end="155:54"><expr pos:start="155:53" pos:end="155:54"><name pos:start="155:53" pos:end="155:54">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        <case pos:start="159:9" pos:end="159:30">case <expr pos:start="159:14" pos:end="159:29"><name pos:start="159:14" pos:end="159:29">OPC_CMPGDU_LT_QB</name></expr>:</case>

            <expr_stmt pos:start="161:13" pos:end="161:29"><expr pos:start="161:13" pos:end="161:28"><call pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:23">check_dspr2</name><argument_list pos:start="161:24" pos:end="161:28">(<argument pos:start="161:25" pos:end="161:27"><expr pos:start="161:25" pos:end="161:27"><name pos:start="161:25" pos:end="161:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:51"><expr pos:start="163:13" pos:end="163:50"><call pos:start="163:13" pos:end="163:50"><name pos:start="163:13" pos:end="163:34">gen_helper_cmpgu_lt_qb</name><argument_list pos:start="163:35" pos:end="163:50">(<argument pos:start="163:36" pos:end="163:37"><expr pos:start="163:36" pos:end="163:37"><name pos:start="163:36" pos:end="163:37">t1</name></expr></argument>, <argument pos:start="163:40" pos:end="163:43"><expr pos:start="163:40" pos:end="163:43"><name pos:start="163:40" pos:end="163:43">v1_t</name></expr></argument>, <argument pos:start="163:46" pos:end="163:49"><expr pos:start="163:46" pos:end="163:49"><name pos:start="163:46" pos:end="163:49">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:45"><expr pos:start="165:13" pos:end="165:44"><call pos:start="165:13" pos:end="165:44"><name pos:start="165:13" pos:end="165:26">tcg_gen_mov_tl</name><argument_list pos:start="165:27" pos:end="165:44">(<argument pos:start="165:28" pos:end="165:39"><expr pos:start="165:28" pos:end="165:39"><name pos:start="165:28" pos:end="165:39"><name pos:start="165:28" pos:end="165:34">cpu_gpr</name><index pos:start="165:35" pos:end="165:39">[<expr pos:start="165:36" pos:end="165:38"><name pos:start="165:36" pos:end="165:38">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="165:42" pos:end="165:43"><expr pos:start="165:42" pos:end="165:43"><name pos:start="165:42" pos:end="165:43">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:66"><expr pos:start="167:13" pos:end="167:65"><call pos:start="167:13" pos:end="167:65"><name pos:start="167:13" pos:end="167:27">tcg_gen_andi_tl</name><argument_list pos:start="167:28" pos:end="167:65">(<argument pos:start="167:29" pos:end="167:39"><expr pos:start="167:29" pos:end="167:39"><name pos:start="167:29" pos:end="167:39">cpu_dspctrl</name></expr></argument>, <argument pos:start="167:42" pos:end="167:52"><expr pos:start="167:42" pos:end="167:52"><name pos:start="167:42" pos:end="167:52">cpu_dspctrl</name></expr></argument>, <argument pos:start="167:55" pos:end="167:64"><expr pos:start="167:55" pos:end="167:64"><literal type="number" pos:start="167:55" pos:end="167:64">0xF0FFFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:40"><expr pos:start="169:13" pos:end="169:39"><call pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:27">tcg_gen_shli_tl</name><argument_list pos:start="169:28" pos:end="169:39">(<argument pos:start="169:29" pos:end="169:30"><expr pos:start="169:29" pos:end="169:30"><name pos:start="169:29" pos:end="169:30">t1</name></expr></argument>, <argument pos:start="169:33" pos:end="169:34"><expr pos:start="169:33" pos:end="169:34"><name pos:start="169:33" pos:end="169:34">t1</name></expr></argument>, <argument pos:start="169:37" pos:end="169:38"><expr pos:start="169:37" pos:end="169:38"><literal type="number" pos:start="169:37" pos:end="169:38">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:56"><expr pos:start="171:13" pos:end="171:55"><call pos:start="171:13" pos:end="171:55"><name pos:start="171:13" pos:end="171:25">tcg_gen_or_tl</name><argument_list pos:start="171:26" pos:end="171:55">(<argument pos:start="171:27" pos:end="171:37"><expr pos:start="171:27" pos:end="171:37"><name pos:start="171:27" pos:end="171:37">cpu_dspctrl</name></expr></argument>, <argument pos:start="171:40" pos:end="171:50"><expr pos:start="171:40" pos:end="171:50"><name pos:start="171:40" pos:end="171:50">cpu_dspctrl</name></expr></argument>, <argument pos:start="171:53" pos:end="171:54"><expr pos:start="171:53" pos:end="171:54"><name pos:start="171:53" pos:end="171:54">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <case pos:start="175:9" pos:end="175:30">case <expr pos:start="175:14" pos:end="175:29"><name pos:start="175:14" pos:end="175:29">OPC_CMPGDU_LE_QB</name></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:29"><expr pos:start="177:13" pos:end="177:28"><call pos:start="177:13" pos:end="177:28"><name pos:start="177:13" pos:end="177:23">check_dspr2</name><argument_list pos:start="177:24" pos:end="177:28">(<argument pos:start="177:25" pos:end="177:27"><expr pos:start="177:25" pos:end="177:27"><name pos:start="177:25" pos:end="177:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:51"><expr pos:start="179:13" pos:end="179:50"><call pos:start="179:13" pos:end="179:50"><name pos:start="179:13" pos:end="179:34">gen_helper_cmpgu_le_qb</name><argument_list pos:start="179:35" pos:end="179:50">(<argument pos:start="179:36" pos:end="179:37"><expr pos:start="179:36" pos:end="179:37"><name pos:start="179:36" pos:end="179:37">t1</name></expr></argument>, <argument pos:start="179:40" pos:end="179:43"><expr pos:start="179:40" pos:end="179:43"><name pos:start="179:40" pos:end="179:43">v1_t</name></expr></argument>, <argument pos:start="179:46" pos:end="179:49"><expr pos:start="179:46" pos:end="179:49"><name pos:start="179:46" pos:end="179:49">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:45"><expr pos:start="181:13" pos:end="181:44"><call pos:start="181:13" pos:end="181:44"><name pos:start="181:13" pos:end="181:26">tcg_gen_mov_tl</name><argument_list pos:start="181:27" pos:end="181:44">(<argument pos:start="181:28" pos:end="181:39"><expr pos:start="181:28" pos:end="181:39"><name pos:start="181:28" pos:end="181:39"><name pos:start="181:28" pos:end="181:34">cpu_gpr</name><index pos:start="181:35" pos:end="181:39">[<expr pos:start="181:36" pos:end="181:38"><name pos:start="181:36" pos:end="181:38">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="181:42" pos:end="181:43"><expr pos:start="181:42" pos:end="181:43"><name pos:start="181:42" pos:end="181:43">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:66"><expr pos:start="183:13" pos:end="183:65"><call pos:start="183:13" pos:end="183:65"><name pos:start="183:13" pos:end="183:27">tcg_gen_andi_tl</name><argument_list pos:start="183:28" pos:end="183:65">(<argument pos:start="183:29" pos:end="183:39"><expr pos:start="183:29" pos:end="183:39"><name pos:start="183:29" pos:end="183:39">cpu_dspctrl</name></expr></argument>, <argument pos:start="183:42" pos:end="183:52"><expr pos:start="183:42" pos:end="183:52"><name pos:start="183:42" pos:end="183:52">cpu_dspctrl</name></expr></argument>, <argument pos:start="183:55" pos:end="183:64"><expr pos:start="183:55" pos:end="183:64"><literal type="number" pos:start="183:55" pos:end="183:64">0xF0FFFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:40"><expr pos:start="185:13" pos:end="185:39"><call pos:start="185:13" pos:end="185:39"><name pos:start="185:13" pos:end="185:27">tcg_gen_shli_tl</name><argument_list pos:start="185:28" pos:end="185:39">(<argument pos:start="185:29" pos:end="185:30"><expr pos:start="185:29" pos:end="185:30"><name pos:start="185:29" pos:end="185:30">t1</name></expr></argument>, <argument pos:start="185:33" pos:end="185:34"><expr pos:start="185:33" pos:end="185:34"><name pos:start="185:33" pos:end="185:34">t1</name></expr></argument>, <argument pos:start="185:37" pos:end="185:38"><expr pos:start="185:37" pos:end="185:38"><literal type="number" pos:start="185:37" pos:end="185:38">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:56"><expr pos:start="187:13" pos:end="187:55"><call pos:start="187:13" pos:end="187:55"><name pos:start="187:13" pos:end="187:25">tcg_gen_or_tl</name><argument_list pos:start="187:26" pos:end="187:55">(<argument pos:start="187:27" pos:end="187:37"><expr pos:start="187:27" pos:end="187:37"><name pos:start="187:27" pos:end="187:37">cpu_dspctrl</name></expr></argument>, <argument pos:start="187:40" pos:end="187:50"><expr pos:start="187:40" pos:end="187:50"><name pos:start="187:40" pos:end="187:50">cpu_dspctrl</name></expr></argument>, <argument pos:start="187:53" pos:end="187:54"><expr pos:start="187:53" pos:end="187:54"><name pos:start="187:53" pos:end="187:54">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <case pos:start="191:9" pos:end="191:27">case <expr pos:start="191:14" pos:end="191:26"><name pos:start="191:14" pos:end="191:26">OPC_CMP_EQ_PH</name></expr>:</case>

            <expr_stmt pos:start="193:13" pos:end="193:27"><expr pos:start="193:13" pos:end="193:26"><call pos:start="193:13" pos:end="193:26"><name pos:start="193:13" pos:end="193:21">check_dsp</name><argument_list pos:start="193:22" pos:end="193:26">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><name pos:start="193:23" pos:end="193:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:54"><expr pos:start="195:13" pos:end="195:53"><call pos:start="195:13" pos:end="195:53"><name pos:start="195:13" pos:end="195:32">gen_helper_cmp_eq_ph</name><argument_list pos:start="195:33" pos:end="195:53">(<argument pos:start="195:34" pos:end="195:37"><expr pos:start="195:34" pos:end="195:37"><name pos:start="195:34" pos:end="195:37">v1_t</name></expr></argument>, <argument pos:start="195:40" pos:end="195:43"><expr pos:start="195:40" pos:end="195:43"><name pos:start="195:40" pos:end="195:43">v2_t</name></expr></argument>, <argument pos:start="195:46" pos:end="195:52"><expr pos:start="195:46" pos:end="195:52"><name pos:start="195:46" pos:end="195:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="197:13" pos:end="197:18">break;</break>

        <case pos:start="199:9" pos:end="199:27">case <expr pos:start="199:14" pos:end="199:26"><name pos:start="199:14" pos:end="199:26">OPC_CMP_LT_PH</name></expr>:</case>

            <expr_stmt pos:start="201:13" pos:end="201:27"><expr pos:start="201:13" pos:end="201:26"><call pos:start="201:13" pos:end="201:26"><name pos:start="201:13" pos:end="201:21">check_dsp</name><argument_list pos:start="201:22" pos:end="201:26">(<argument pos:start="201:23" pos:end="201:25"><expr pos:start="201:23" pos:end="201:25"><name pos:start="201:23" pos:end="201:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:54"><expr pos:start="203:13" pos:end="203:53"><call pos:start="203:13" pos:end="203:53"><name pos:start="203:13" pos:end="203:32">gen_helper_cmp_lt_ph</name><argument_list pos:start="203:33" pos:end="203:53">(<argument pos:start="203:34" pos:end="203:37"><expr pos:start="203:34" pos:end="203:37"><name pos:start="203:34" pos:end="203:37">v1_t</name></expr></argument>, <argument pos:start="203:40" pos:end="203:43"><expr pos:start="203:40" pos:end="203:43"><name pos:start="203:40" pos:end="203:43">v2_t</name></expr></argument>, <argument pos:start="203:46" pos:end="203:52"><expr pos:start="203:46" pos:end="203:52"><name pos:start="203:46" pos:end="203:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:27">case <expr pos:start="207:14" pos:end="207:26"><name pos:start="207:14" pos:end="207:26">OPC_CMP_LE_PH</name></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="209:27"><expr pos:start="209:13" pos:end="209:26"><call pos:start="209:13" pos:end="209:26"><name pos:start="209:13" pos:end="209:21">check_dsp</name><argument_list pos:start="209:22" pos:end="209:26">(<argument pos:start="209:23" pos:end="209:25"><expr pos:start="209:23" pos:end="209:25"><name pos:start="209:23" pos:end="209:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:54"><expr pos:start="211:13" pos:end="211:53"><call pos:start="211:13" pos:end="211:53"><name pos:start="211:13" pos:end="211:32">gen_helper_cmp_le_ph</name><argument_list pos:start="211:33" pos:end="211:53">(<argument pos:start="211:34" pos:end="211:37"><expr pos:start="211:34" pos:end="211:37"><name pos:start="211:34" pos:end="211:37">v1_t</name></expr></argument>, <argument pos:start="211:40" pos:end="211:43"><expr pos:start="211:40" pos:end="211:43"><name pos:start="211:40" pos:end="211:43">v2_t</name></expr></argument>, <argument pos:start="211:46" pos:end="211:52"><expr pos:start="211:46" pos:end="211:52"><name pos:start="211:46" pos:end="211:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        <case pos:start="215:9" pos:end="215:25">case <expr pos:start="215:14" pos:end="215:24"><name pos:start="215:14" pos:end="215:24">OPC_PICK_QB</name></expr>:</case>

            <expr_stmt pos:start="217:13" pos:end="217:27"><expr pos:start="217:13" pos:end="217:26"><call pos:start="217:13" pos:end="217:26"><name pos:start="217:13" pos:end="217:21">check_dsp</name><argument_list pos:start="217:22" pos:end="217:26">(<argument pos:start="217:23" pos:end="217:25"><expr pos:start="217:23" pos:end="217:25"><name pos:start="217:23" pos:end="217:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:66"><expr pos:start="219:13" pos:end="219:65"><call pos:start="219:13" pos:end="219:65"><name pos:start="219:13" pos:end="219:30">gen_helper_pick_qb</name><argument_list pos:start="219:31" pos:end="219:65">(<argument pos:start="219:32" pos:end="219:43"><expr pos:start="219:32" pos:end="219:43"><name pos:start="219:32" pos:end="219:43"><name pos:start="219:32" pos:end="219:38">cpu_gpr</name><index pos:start="219:39" pos:end="219:43">[<expr pos:start="219:40" pos:end="219:42"><name pos:start="219:40" pos:end="219:42">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="219:46" pos:end="219:49"><expr pos:start="219:46" pos:end="219:49"><name pos:start="219:46" pos:end="219:49">v1_t</name></expr></argument>, <argument pos:start="219:52" pos:end="219:55"><expr pos:start="219:52" pos:end="219:55"><name pos:start="219:52" pos:end="219:55">v2_t</name></expr></argument>, <argument pos:start="219:58" pos:end="219:64"><expr pos:start="219:58" pos:end="219:64"><name pos:start="219:58" pos:end="219:64">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="221:13" pos:end="221:18">break;</break>

        <case pos:start="223:9" pos:end="223:25">case <expr pos:start="223:14" pos:end="223:24"><name pos:start="223:14" pos:end="223:24">OPC_PICK_PH</name></expr>:</case>

            <expr_stmt pos:start="225:13" pos:end="225:27"><expr pos:start="225:13" pos:end="225:26"><call pos:start="225:13" pos:end="225:26"><name pos:start="225:13" pos:end="225:21">check_dsp</name><argument_list pos:start="225:22" pos:end="225:26">(<argument pos:start="225:23" pos:end="225:25"><expr pos:start="225:23" pos:end="225:25"><name pos:start="225:23" pos:end="225:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:66"><expr pos:start="227:13" pos:end="227:65"><call pos:start="227:13" pos:end="227:65"><name pos:start="227:13" pos:end="227:30">gen_helper_pick_ph</name><argument_list pos:start="227:31" pos:end="227:65">(<argument pos:start="227:32" pos:end="227:43"><expr pos:start="227:32" pos:end="227:43"><name pos:start="227:32" pos:end="227:43"><name pos:start="227:32" pos:end="227:38">cpu_gpr</name><index pos:start="227:39" pos:end="227:43">[<expr pos:start="227:40" pos:end="227:42"><name pos:start="227:40" pos:end="227:42">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="227:46" pos:end="227:49"><expr pos:start="227:46" pos:end="227:49"><name pos:start="227:46" pos:end="227:49">v1_t</name></expr></argument>, <argument pos:start="227:52" pos:end="227:55"><expr pos:start="227:52" pos:end="227:55"><name pos:start="227:52" pos:end="227:55">v2_t</name></expr></argument>, <argument pos:start="227:58" pos:end="227:64"><expr pos:start="227:58" pos:end="227:64"><name pos:start="227:58" pos:end="227:64">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="229:13" pos:end="229:18">break;</break>

        <case pos:start="231:9" pos:end="231:27">case <expr pos:start="231:14" pos:end="231:26"><name pos:start="231:14" pos:end="231:26">OPC_PACKRL_PH</name></expr>:</case>

            <expr_stmt pos:start="233:13" pos:end="233:27"><expr pos:start="233:13" pos:end="233:26"><call pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:21">check_dsp</name><argument_list pos:start="233:22" pos:end="233:26">(<argument pos:start="233:23" pos:end="233:25"><expr pos:start="233:23" pos:end="233:25"><name pos:start="233:23" pos:end="233:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:59"><expr pos:start="235:13" pos:end="235:58"><call pos:start="235:13" pos:end="235:58"><name pos:start="235:13" pos:end="235:32">gen_helper_packrl_ph</name><argument_list pos:start="235:33" pos:end="235:58">(<argument pos:start="235:34" pos:end="235:45"><expr pos:start="235:34" pos:end="235:45"><name pos:start="235:34" pos:end="235:45"><name pos:start="235:34" pos:end="235:40">cpu_gpr</name><index pos:start="235:41" pos:end="235:45">[<expr pos:start="235:42" pos:end="235:44"><name pos:start="235:42" pos:end="235:44">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="235:48" pos:end="235:51"><expr pos:start="235:48" pos:end="235:51"><name pos:start="235:48" pos:end="235:51">v1_t</name></expr></argument>, <argument pos:start="235:54" pos:end="235:57"><expr pos:start="235:54" pos:end="235:57"><name pos:start="235:54" pos:end="235:57">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="237:13" pos:end="237:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="241:9" pos:end="244:0">break;</break>

<cpp:ifdef pos:start="243:1" pos:end="243:20">#<cpp:directive pos:start="243:2" pos:end="243:6">ifdef</cpp:directive> <name pos:start="243:8" pos:end="243:20">TARGET_MIPS64</name></cpp:ifdef>

    <case pos:start="245:5" pos:end="245:28">case <expr pos:start="245:10" pos:end="245:27"><name pos:start="245:10" pos:end="245:27">OPC_CMPU_EQ_OB_DSP</name></expr>:</case>

        <switch pos:start="247:9" pos:end="401:9">switch <condition pos:start="247:16" pos:end="247:20">(<expr pos:start="247:17" pos:end="247:19"><name pos:start="247:17" pos:end="247:19">op2</name></expr>)</condition> <block pos:start="247:22" pos:end="401:9">{<block_content pos:start="249:9" pos:end="399:18">

        <case pos:start="249:9" pos:end="249:27">case <expr pos:start="249:14" pos:end="249:26"><name pos:start="249:14" pos:end="249:26">OPC_CMP_EQ_PW</name></expr>:</case>

            <expr_stmt pos:start="251:13" pos:end="251:27"><expr pos:start="251:13" pos:end="251:26"><call pos:start="251:13" pos:end="251:26"><name pos:start="251:13" pos:end="251:21">check_dsp</name><argument_list pos:start="251:22" pos:end="251:26">(<argument pos:start="251:23" pos:end="251:25"><expr pos:start="251:23" pos:end="251:25"><name pos:start="251:23" pos:end="251:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:54"><expr pos:start="253:13" pos:end="253:53"><call pos:start="253:13" pos:end="253:53"><name pos:start="253:13" pos:end="253:32">gen_helper_cmp_eq_pw</name><argument_list pos:start="253:33" pos:end="253:53">(<argument pos:start="253:34" pos:end="253:37"><expr pos:start="253:34" pos:end="253:37"><name pos:start="253:34" pos:end="253:37">v1_t</name></expr></argument>, <argument pos:start="253:40" pos:end="253:43"><expr pos:start="253:40" pos:end="253:43"><name pos:start="253:40" pos:end="253:43">v2_t</name></expr></argument>, <argument pos:start="253:46" pos:end="253:52"><expr pos:start="253:46" pos:end="253:52"><name pos:start="253:46" pos:end="253:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        <case pos:start="257:9" pos:end="257:27">case <expr pos:start="257:14" pos:end="257:26"><name pos:start="257:14" pos:end="257:26">OPC_CMP_LT_PW</name></expr>:</case>

            <expr_stmt pos:start="259:13" pos:end="259:27"><expr pos:start="259:13" pos:end="259:26"><call pos:start="259:13" pos:end="259:26"><name pos:start="259:13" pos:end="259:21">check_dsp</name><argument_list pos:start="259:22" pos:end="259:26">(<argument pos:start="259:23" pos:end="259:25"><expr pos:start="259:23" pos:end="259:25"><name pos:start="259:23" pos:end="259:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:54"><expr pos:start="261:13" pos:end="261:53"><call pos:start="261:13" pos:end="261:53"><name pos:start="261:13" pos:end="261:32">gen_helper_cmp_lt_pw</name><argument_list pos:start="261:33" pos:end="261:53">(<argument pos:start="261:34" pos:end="261:37"><expr pos:start="261:34" pos:end="261:37"><name pos:start="261:34" pos:end="261:37">v1_t</name></expr></argument>, <argument pos:start="261:40" pos:end="261:43"><expr pos:start="261:40" pos:end="261:43"><name pos:start="261:40" pos:end="261:43">v2_t</name></expr></argument>, <argument pos:start="261:46" pos:end="261:52"><expr pos:start="261:46" pos:end="261:52"><name pos:start="261:46" pos:end="261:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="263:13" pos:end="263:18">break;</break>

        <case pos:start="265:9" pos:end="265:27">case <expr pos:start="265:14" pos:end="265:26"><name pos:start="265:14" pos:end="265:26">OPC_CMP_LE_PW</name></expr>:</case>

            <expr_stmt pos:start="267:13" pos:end="267:27"><expr pos:start="267:13" pos:end="267:26"><call pos:start="267:13" pos:end="267:26"><name pos:start="267:13" pos:end="267:21">check_dsp</name><argument_list pos:start="267:22" pos:end="267:26">(<argument pos:start="267:23" pos:end="267:25"><expr pos:start="267:23" pos:end="267:25"><name pos:start="267:23" pos:end="267:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:54"><expr pos:start="269:13" pos:end="269:53"><call pos:start="269:13" pos:end="269:53"><name pos:start="269:13" pos:end="269:32">gen_helper_cmp_le_pw</name><argument_list pos:start="269:33" pos:end="269:53">(<argument pos:start="269:34" pos:end="269:37"><expr pos:start="269:34" pos:end="269:37"><name pos:start="269:34" pos:end="269:37">v1_t</name></expr></argument>, <argument pos:start="269:40" pos:end="269:43"><expr pos:start="269:40" pos:end="269:43"><name pos:start="269:40" pos:end="269:43">v2_t</name></expr></argument>, <argument pos:start="269:46" pos:end="269:52"><expr pos:start="269:46" pos:end="269:52"><name pos:start="269:46" pos:end="269:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="271:13" pos:end="271:18">break;</break>

        <case pos:start="273:9" pos:end="273:27">case <expr pos:start="273:14" pos:end="273:26"><name pos:start="273:14" pos:end="273:26">OPC_CMP_EQ_QH</name></expr>:</case>

            <expr_stmt pos:start="275:13" pos:end="275:27"><expr pos:start="275:13" pos:end="275:26"><call pos:start="275:13" pos:end="275:26"><name pos:start="275:13" pos:end="275:21">check_dsp</name><argument_list pos:start="275:22" pos:end="275:26">(<argument pos:start="275:23" pos:end="275:25"><expr pos:start="275:23" pos:end="275:25"><name pos:start="275:23" pos:end="275:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:54"><expr pos:start="277:13" pos:end="277:53"><call pos:start="277:13" pos:end="277:53"><name pos:start="277:13" pos:end="277:32">gen_helper_cmp_eq_qh</name><argument_list pos:start="277:33" pos:end="277:53">(<argument pos:start="277:34" pos:end="277:37"><expr pos:start="277:34" pos:end="277:37"><name pos:start="277:34" pos:end="277:37">v1_t</name></expr></argument>, <argument pos:start="277:40" pos:end="277:43"><expr pos:start="277:40" pos:end="277:43"><name pos:start="277:40" pos:end="277:43">v2_t</name></expr></argument>, <argument pos:start="277:46" pos:end="277:52"><expr pos:start="277:46" pos:end="277:52"><name pos:start="277:46" pos:end="277:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="279:13" pos:end="279:18">break;</break>

        <case pos:start="281:9" pos:end="281:27">case <expr pos:start="281:14" pos:end="281:26"><name pos:start="281:14" pos:end="281:26">OPC_CMP_LT_QH</name></expr>:</case>

            <expr_stmt pos:start="283:13" pos:end="283:27"><expr pos:start="283:13" pos:end="283:26"><call pos:start="283:13" pos:end="283:26"><name pos:start="283:13" pos:end="283:21">check_dsp</name><argument_list pos:start="283:22" pos:end="283:26">(<argument pos:start="283:23" pos:end="283:25"><expr pos:start="283:23" pos:end="283:25"><name pos:start="283:23" pos:end="283:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:54"><expr pos:start="285:13" pos:end="285:53"><call pos:start="285:13" pos:end="285:53"><name pos:start="285:13" pos:end="285:32">gen_helper_cmp_lt_qh</name><argument_list pos:start="285:33" pos:end="285:53">(<argument pos:start="285:34" pos:end="285:37"><expr pos:start="285:34" pos:end="285:37"><name pos:start="285:34" pos:end="285:37">v1_t</name></expr></argument>, <argument pos:start="285:40" pos:end="285:43"><expr pos:start="285:40" pos:end="285:43"><name pos:start="285:40" pos:end="285:43">v2_t</name></expr></argument>, <argument pos:start="285:46" pos:end="285:52"><expr pos:start="285:46" pos:end="285:52"><name pos:start="285:46" pos:end="285:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="287:13" pos:end="287:18">break;</break>

        <case pos:start="289:9" pos:end="289:27">case <expr pos:start="289:14" pos:end="289:26"><name pos:start="289:14" pos:end="289:26">OPC_CMP_LE_QH</name></expr>:</case>

            <expr_stmt pos:start="291:13" pos:end="291:27"><expr pos:start="291:13" pos:end="291:26"><call pos:start="291:13" pos:end="291:26"><name pos:start="291:13" pos:end="291:21">check_dsp</name><argument_list pos:start="291:22" pos:end="291:26">(<argument pos:start="291:23" pos:end="291:25"><expr pos:start="291:23" pos:end="291:25"><name pos:start="291:23" pos:end="291:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:54"><expr pos:start="293:13" pos:end="293:53"><call pos:start="293:13" pos:end="293:53"><name pos:start="293:13" pos:end="293:32">gen_helper_cmp_le_qh</name><argument_list pos:start="293:33" pos:end="293:53">(<argument pos:start="293:34" pos:end="293:37"><expr pos:start="293:34" pos:end="293:37"><name pos:start="293:34" pos:end="293:37">v1_t</name></expr></argument>, <argument pos:start="293:40" pos:end="293:43"><expr pos:start="293:40" pos:end="293:43"><name pos:start="293:40" pos:end="293:43">v2_t</name></expr></argument>, <argument pos:start="293:46" pos:end="293:52"><expr pos:start="293:46" pos:end="293:52"><name pos:start="293:46" pos:end="293:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="295:13" pos:end="295:18">break;</break>

        <case pos:start="297:9" pos:end="297:30">case <expr pos:start="297:14" pos:end="297:29"><name pos:start="297:14" pos:end="297:29">OPC_CMPGDU_EQ_OB</name></expr>:</case>

            <expr_stmt pos:start="299:13" pos:end="299:29"><expr pos:start="299:13" pos:end="299:28"><call pos:start="299:13" pos:end="299:28"><name pos:start="299:13" pos:end="299:23">check_dspr2</name><argument_list pos:start="299:24" pos:end="299:28">(<argument pos:start="299:25" pos:end="299:27"><expr pos:start="299:25" pos:end="299:27"><name pos:start="299:25" pos:end="299:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:71"><expr pos:start="301:13" pos:end="301:70"><call pos:start="301:13" pos:end="301:70"><name pos:start="301:13" pos:end="301:35">gen_helper_cmpgdu_eq_ob</name><argument_list pos:start="301:36" pos:end="301:70">(<argument pos:start="301:37" pos:end="301:48"><expr pos:start="301:37" pos:end="301:48"><name pos:start="301:37" pos:end="301:48"><name pos:start="301:37" pos:end="301:43">cpu_gpr</name><index pos:start="301:44" pos:end="301:48">[<expr pos:start="301:45" pos:end="301:47"><name pos:start="301:45" pos:end="301:47">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="301:51" pos:end="301:54"><expr pos:start="301:51" pos:end="301:54"><name pos:start="301:51" pos:end="301:54">v1_t</name></expr></argument>, <argument pos:start="301:57" pos:end="301:60"><expr pos:start="301:57" pos:end="301:60"><name pos:start="301:57" pos:end="301:60">v2_t</name></expr></argument>, <argument pos:start="301:63" pos:end="301:69"><expr pos:start="301:63" pos:end="301:69"><name pos:start="301:63" pos:end="301:69">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="303:13" pos:end="303:18">break;</break>

        <case pos:start="305:9" pos:end="305:30">case <expr pos:start="305:14" pos:end="305:29"><name pos:start="305:14" pos:end="305:29">OPC_CMPGDU_LT_OB</name></expr>:</case>

            <expr_stmt pos:start="307:13" pos:end="307:29"><expr pos:start="307:13" pos:end="307:28"><call pos:start="307:13" pos:end="307:28"><name pos:start="307:13" pos:end="307:23">check_dspr2</name><argument_list pos:start="307:24" pos:end="307:28">(<argument pos:start="307:25" pos:end="307:27"><expr pos:start="307:25" pos:end="307:27"><name pos:start="307:25" pos:end="307:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:71"><expr pos:start="309:13" pos:end="309:70"><call pos:start="309:13" pos:end="309:70"><name pos:start="309:13" pos:end="309:35">gen_helper_cmpgdu_lt_ob</name><argument_list pos:start="309:36" pos:end="309:70">(<argument pos:start="309:37" pos:end="309:48"><expr pos:start="309:37" pos:end="309:48"><name pos:start="309:37" pos:end="309:48"><name pos:start="309:37" pos:end="309:43">cpu_gpr</name><index pos:start="309:44" pos:end="309:48">[<expr pos:start="309:45" pos:end="309:47"><name pos:start="309:45" pos:end="309:47">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="309:51" pos:end="309:54"><expr pos:start="309:51" pos:end="309:54"><name pos:start="309:51" pos:end="309:54">v1_t</name></expr></argument>, <argument pos:start="309:57" pos:end="309:60"><expr pos:start="309:57" pos:end="309:60"><name pos:start="309:57" pos:end="309:60">v2_t</name></expr></argument>, <argument pos:start="309:63" pos:end="309:69"><expr pos:start="309:63" pos:end="309:69"><name pos:start="309:63" pos:end="309:69">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="311:13" pos:end="311:18">break;</break>

        <case pos:start="313:9" pos:end="313:30">case <expr pos:start="313:14" pos:end="313:29"><name pos:start="313:14" pos:end="313:29">OPC_CMPGDU_LE_OB</name></expr>:</case>

            <expr_stmt pos:start="315:13" pos:end="315:29"><expr pos:start="315:13" pos:end="315:28"><call pos:start="315:13" pos:end="315:28"><name pos:start="315:13" pos:end="315:23">check_dspr2</name><argument_list pos:start="315:24" pos:end="315:28">(<argument pos:start="315:25" pos:end="315:27"><expr pos:start="315:25" pos:end="315:27"><name pos:start="315:25" pos:end="315:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:71"><expr pos:start="317:13" pos:end="317:70"><call pos:start="317:13" pos:end="317:70"><name pos:start="317:13" pos:end="317:35">gen_helper_cmpgdu_le_ob</name><argument_list pos:start="317:36" pos:end="317:70">(<argument pos:start="317:37" pos:end="317:48"><expr pos:start="317:37" pos:end="317:48"><name pos:start="317:37" pos:end="317:48"><name pos:start="317:37" pos:end="317:43">cpu_gpr</name><index pos:start="317:44" pos:end="317:48">[<expr pos:start="317:45" pos:end="317:47"><name pos:start="317:45" pos:end="317:47">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="317:51" pos:end="317:54"><expr pos:start="317:51" pos:end="317:54"><name pos:start="317:51" pos:end="317:54">v1_t</name></expr></argument>, <argument pos:start="317:57" pos:end="317:60"><expr pos:start="317:57" pos:end="317:60"><name pos:start="317:57" pos:end="317:60">v2_t</name></expr></argument>, <argument pos:start="317:63" pos:end="317:69"><expr pos:start="317:63" pos:end="317:69"><name pos:start="317:63" pos:end="317:69">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="319:13" pos:end="319:18">break;</break>

        <case pos:start="321:9" pos:end="321:29">case <expr pos:start="321:14" pos:end="321:28"><name pos:start="321:14" pos:end="321:28">OPC_CMPGU_EQ_OB</name></expr>:</case>

            <expr_stmt pos:start="323:13" pos:end="323:27"><expr pos:start="323:13" pos:end="323:26"><call pos:start="323:13" pos:end="323:26"><name pos:start="323:13" pos:end="323:21">check_dsp</name><argument_list pos:start="323:22" pos:end="323:26">(<argument pos:start="323:23" pos:end="323:25"><expr pos:start="323:23" pos:end="323:25"><name pos:start="323:23" pos:end="323:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:61"><expr pos:start="325:13" pos:end="325:60"><call pos:start="325:13" pos:end="325:60"><name pos:start="325:13" pos:end="325:34">gen_helper_cmpgu_eq_ob</name><argument_list pos:start="325:35" pos:end="325:60">(<argument pos:start="325:36" pos:end="325:47"><expr pos:start="325:36" pos:end="325:47"><name pos:start="325:36" pos:end="325:47"><name pos:start="325:36" pos:end="325:42">cpu_gpr</name><index pos:start="325:43" pos:end="325:47">[<expr pos:start="325:44" pos:end="325:46"><name pos:start="325:44" pos:end="325:46">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="325:50" pos:end="325:53"><expr pos:start="325:50" pos:end="325:53"><name pos:start="325:50" pos:end="325:53">v1_t</name></expr></argument>, <argument pos:start="325:56" pos:end="325:59"><expr pos:start="325:56" pos:end="325:59"><name pos:start="325:56" pos:end="325:59">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="327:13" pos:end="327:18">break;</break>

        <case pos:start="329:9" pos:end="329:29">case <expr pos:start="329:14" pos:end="329:28"><name pos:start="329:14" pos:end="329:28">OPC_CMPGU_LT_OB</name></expr>:</case>

            <expr_stmt pos:start="331:13" pos:end="331:27"><expr pos:start="331:13" pos:end="331:26"><call pos:start="331:13" pos:end="331:26"><name pos:start="331:13" pos:end="331:21">check_dsp</name><argument_list pos:start="331:22" pos:end="331:26">(<argument pos:start="331:23" pos:end="331:25"><expr pos:start="331:23" pos:end="331:25"><name pos:start="331:23" pos:end="331:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:61"><expr pos:start="333:13" pos:end="333:60"><call pos:start="333:13" pos:end="333:60"><name pos:start="333:13" pos:end="333:34">gen_helper_cmpgu_lt_ob</name><argument_list pos:start="333:35" pos:end="333:60">(<argument pos:start="333:36" pos:end="333:47"><expr pos:start="333:36" pos:end="333:47"><name pos:start="333:36" pos:end="333:47"><name pos:start="333:36" pos:end="333:42">cpu_gpr</name><index pos:start="333:43" pos:end="333:47">[<expr pos:start="333:44" pos:end="333:46"><name pos:start="333:44" pos:end="333:46">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="333:50" pos:end="333:53"><expr pos:start="333:50" pos:end="333:53"><name pos:start="333:50" pos:end="333:53">v1_t</name></expr></argument>, <argument pos:start="333:56" pos:end="333:59"><expr pos:start="333:56" pos:end="333:59"><name pos:start="333:56" pos:end="333:59">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="335:13" pos:end="335:18">break;</break>

        <case pos:start="337:9" pos:end="337:29">case <expr pos:start="337:14" pos:end="337:28"><name pos:start="337:14" pos:end="337:28">OPC_CMPGU_LE_OB</name></expr>:</case>

            <expr_stmt pos:start="339:13" pos:end="339:27"><expr pos:start="339:13" pos:end="339:26"><call pos:start="339:13" pos:end="339:26"><name pos:start="339:13" pos:end="339:21">check_dsp</name><argument_list pos:start="339:22" pos:end="339:26">(<argument pos:start="339:23" pos:end="339:25"><expr pos:start="339:23" pos:end="339:25"><name pos:start="339:23" pos:end="339:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:61"><expr pos:start="341:13" pos:end="341:60"><call pos:start="341:13" pos:end="341:60"><name pos:start="341:13" pos:end="341:34">gen_helper_cmpgu_le_ob</name><argument_list pos:start="341:35" pos:end="341:60">(<argument pos:start="341:36" pos:end="341:47"><expr pos:start="341:36" pos:end="341:47"><name pos:start="341:36" pos:end="341:47"><name pos:start="341:36" pos:end="341:42">cpu_gpr</name><index pos:start="341:43" pos:end="341:47">[<expr pos:start="341:44" pos:end="341:46"><name pos:start="341:44" pos:end="341:46">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="341:50" pos:end="341:53"><expr pos:start="341:50" pos:end="341:53"><name pos:start="341:50" pos:end="341:53">v1_t</name></expr></argument>, <argument pos:start="341:56" pos:end="341:59"><expr pos:start="341:56" pos:end="341:59"><name pos:start="341:56" pos:end="341:59">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="343:13" pos:end="343:18">break;</break>

        <case pos:start="345:9" pos:end="345:28">case <expr pos:start="345:14" pos:end="345:27"><name pos:start="345:14" pos:end="345:27">OPC_CMPU_EQ_OB</name></expr>:</case>

            <expr_stmt pos:start="347:13" pos:end="347:27"><expr pos:start="347:13" pos:end="347:26"><call pos:start="347:13" pos:end="347:26"><name pos:start="347:13" pos:end="347:21">check_dsp</name><argument_list pos:start="347:22" pos:end="347:26">(<argument pos:start="347:23" pos:end="347:25"><expr pos:start="347:23" pos:end="347:25"><name pos:start="347:23" pos:end="347:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:55"><expr pos:start="349:13" pos:end="349:54"><call pos:start="349:13" pos:end="349:54"><name pos:start="349:13" pos:end="349:33">gen_helper_cmpu_eq_ob</name><argument_list pos:start="349:34" pos:end="349:54">(<argument pos:start="349:35" pos:end="349:38"><expr pos:start="349:35" pos:end="349:38"><name pos:start="349:35" pos:end="349:38">v1_t</name></expr></argument>, <argument pos:start="349:41" pos:end="349:44"><expr pos:start="349:41" pos:end="349:44"><name pos:start="349:41" pos:end="349:44">v2_t</name></expr></argument>, <argument pos:start="349:47" pos:end="349:53"><expr pos:start="349:47" pos:end="349:53"><name pos:start="349:47" pos:end="349:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="351:13" pos:end="351:18">break;</break>

        <case pos:start="353:9" pos:end="353:28">case <expr pos:start="353:14" pos:end="353:27"><name pos:start="353:14" pos:end="353:27">OPC_CMPU_LT_OB</name></expr>:</case>

            <expr_stmt pos:start="355:13" pos:end="355:27"><expr pos:start="355:13" pos:end="355:26"><call pos:start="355:13" pos:end="355:26"><name pos:start="355:13" pos:end="355:21">check_dsp</name><argument_list pos:start="355:22" pos:end="355:26">(<argument pos:start="355:23" pos:end="355:25"><expr pos:start="355:23" pos:end="355:25"><name pos:start="355:23" pos:end="355:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="357:13" pos:end="357:55"><expr pos:start="357:13" pos:end="357:54"><call pos:start="357:13" pos:end="357:54"><name pos:start="357:13" pos:end="357:33">gen_helper_cmpu_lt_ob</name><argument_list pos:start="357:34" pos:end="357:54">(<argument pos:start="357:35" pos:end="357:38"><expr pos:start="357:35" pos:end="357:38"><name pos:start="357:35" pos:end="357:38">v1_t</name></expr></argument>, <argument pos:start="357:41" pos:end="357:44"><expr pos:start="357:41" pos:end="357:44"><name pos:start="357:41" pos:end="357:44">v2_t</name></expr></argument>, <argument pos:start="357:47" pos:end="357:53"><expr pos:start="357:47" pos:end="357:53"><name pos:start="357:47" pos:end="357:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="359:13" pos:end="359:18">break;</break>

        <case pos:start="361:9" pos:end="361:28">case <expr pos:start="361:14" pos:end="361:27"><name pos:start="361:14" pos:end="361:27">OPC_CMPU_LE_OB</name></expr>:</case>

            <expr_stmt pos:start="363:13" pos:end="363:27"><expr pos:start="363:13" pos:end="363:26"><call pos:start="363:13" pos:end="363:26"><name pos:start="363:13" pos:end="363:21">check_dsp</name><argument_list pos:start="363:22" pos:end="363:26">(<argument pos:start="363:23" pos:end="363:25"><expr pos:start="363:23" pos:end="363:25"><name pos:start="363:23" pos:end="363:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:55"><expr pos:start="365:13" pos:end="365:54"><call pos:start="365:13" pos:end="365:54"><name pos:start="365:13" pos:end="365:33">gen_helper_cmpu_le_ob</name><argument_list pos:start="365:34" pos:end="365:54">(<argument pos:start="365:35" pos:end="365:38"><expr pos:start="365:35" pos:end="365:38"><name pos:start="365:35" pos:end="365:38">v1_t</name></expr></argument>, <argument pos:start="365:41" pos:end="365:44"><expr pos:start="365:41" pos:end="365:44"><name pos:start="365:41" pos:end="365:44">v2_t</name></expr></argument>, <argument pos:start="365:47" pos:end="365:53"><expr pos:start="365:47" pos:end="365:53"><name pos:start="365:47" pos:end="365:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="367:13" pos:end="367:18">break;</break>

        <case pos:start="369:9" pos:end="369:27">case <expr pos:start="369:14" pos:end="369:26"><name pos:start="369:14" pos:end="369:26">OPC_PACKRL_PW</name></expr>:</case>

            <expr_stmt pos:start="371:13" pos:end="371:27"><expr pos:start="371:13" pos:end="371:26"><call pos:start="371:13" pos:end="371:26"><name pos:start="371:13" pos:end="371:21">check_dsp</name><argument_list pos:start="371:22" pos:end="371:26">(<argument pos:start="371:23" pos:end="371:25"><expr pos:start="371:23" pos:end="371:25"><name pos:start="371:23" pos:end="371:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:59"><expr pos:start="373:13" pos:end="373:58"><call pos:start="373:13" pos:end="373:58"><name pos:start="373:13" pos:end="373:32">gen_helper_packrl_pw</name><argument_list pos:start="373:33" pos:end="373:58">(<argument pos:start="373:34" pos:end="373:45"><expr pos:start="373:34" pos:end="373:45"><name pos:start="373:34" pos:end="373:45"><name pos:start="373:34" pos:end="373:40">cpu_gpr</name><index pos:start="373:41" pos:end="373:45">[<expr pos:start="373:42" pos:end="373:44"><name pos:start="373:42" pos:end="373:44">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="373:48" pos:end="373:51"><expr pos:start="373:48" pos:end="373:51"><name pos:start="373:48" pos:end="373:51">v1_t</name></expr></argument>, <argument pos:start="373:54" pos:end="373:57"><expr pos:start="373:54" pos:end="373:57"><name pos:start="373:54" pos:end="373:57">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="375:13" pos:end="375:18">break;</break>

        <case pos:start="377:9" pos:end="377:25">case <expr pos:start="377:14" pos:end="377:24"><name pos:start="377:14" pos:end="377:24">OPC_PICK_OB</name></expr>:</case>

            <expr_stmt pos:start="379:13" pos:end="379:27"><expr pos:start="379:13" pos:end="379:26"><call pos:start="379:13" pos:end="379:26"><name pos:start="379:13" pos:end="379:21">check_dsp</name><argument_list pos:start="379:22" pos:end="379:26">(<argument pos:start="379:23" pos:end="379:25"><expr pos:start="379:23" pos:end="379:25"><name pos:start="379:23" pos:end="379:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:66"><expr pos:start="381:13" pos:end="381:65"><call pos:start="381:13" pos:end="381:65"><name pos:start="381:13" pos:end="381:30">gen_helper_pick_ob</name><argument_list pos:start="381:31" pos:end="381:65">(<argument pos:start="381:32" pos:end="381:43"><expr pos:start="381:32" pos:end="381:43"><name pos:start="381:32" pos:end="381:43"><name pos:start="381:32" pos:end="381:38">cpu_gpr</name><index pos:start="381:39" pos:end="381:43">[<expr pos:start="381:40" pos:end="381:42"><name pos:start="381:40" pos:end="381:42">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="381:46" pos:end="381:49"><expr pos:start="381:46" pos:end="381:49"><name pos:start="381:46" pos:end="381:49">v1_t</name></expr></argument>, <argument pos:start="381:52" pos:end="381:55"><expr pos:start="381:52" pos:end="381:55"><name pos:start="381:52" pos:end="381:55">v2_t</name></expr></argument>, <argument pos:start="381:58" pos:end="381:64"><expr pos:start="381:58" pos:end="381:64"><name pos:start="381:58" pos:end="381:64">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="383:13" pos:end="383:18">break;</break>

        <case pos:start="385:9" pos:end="385:25">case <expr pos:start="385:14" pos:end="385:24"><name pos:start="385:14" pos:end="385:24">OPC_PICK_PW</name></expr>:</case>

            <expr_stmt pos:start="387:13" pos:end="387:27"><expr pos:start="387:13" pos:end="387:26"><call pos:start="387:13" pos:end="387:26"><name pos:start="387:13" pos:end="387:21">check_dsp</name><argument_list pos:start="387:22" pos:end="387:26">(<argument pos:start="387:23" pos:end="387:25"><expr pos:start="387:23" pos:end="387:25"><name pos:start="387:23" pos:end="387:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:66"><expr pos:start="389:13" pos:end="389:65"><call pos:start="389:13" pos:end="389:65"><name pos:start="389:13" pos:end="389:30">gen_helper_pick_pw</name><argument_list pos:start="389:31" pos:end="389:65">(<argument pos:start="389:32" pos:end="389:43"><expr pos:start="389:32" pos:end="389:43"><name pos:start="389:32" pos:end="389:43"><name pos:start="389:32" pos:end="389:38">cpu_gpr</name><index pos:start="389:39" pos:end="389:43">[<expr pos:start="389:40" pos:end="389:42"><name pos:start="389:40" pos:end="389:42">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="389:46" pos:end="389:49"><expr pos:start="389:46" pos:end="389:49"><name pos:start="389:46" pos:end="389:49">v1_t</name></expr></argument>, <argument pos:start="389:52" pos:end="389:55"><expr pos:start="389:52" pos:end="389:55"><name pos:start="389:52" pos:end="389:55">v2_t</name></expr></argument>, <argument pos:start="389:58" pos:end="389:64"><expr pos:start="389:58" pos:end="389:64"><name pos:start="389:58" pos:end="389:64">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="391:13" pos:end="391:18">break;</break>

        <case pos:start="393:9" pos:end="393:25">case <expr pos:start="393:14" pos:end="393:24"><name pos:start="393:14" pos:end="393:24">OPC_PICK_QH</name></expr>:</case>

            <expr_stmt pos:start="395:13" pos:end="395:27"><expr pos:start="395:13" pos:end="395:26"><call pos:start="395:13" pos:end="395:26"><name pos:start="395:13" pos:end="395:21">check_dsp</name><argument_list pos:start="395:22" pos:end="395:26">(<argument pos:start="395:23" pos:end="395:25"><expr pos:start="395:23" pos:end="395:25"><name pos:start="395:23" pos:end="395:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:66"><expr pos:start="397:13" pos:end="397:65"><call pos:start="397:13" pos:end="397:65"><name pos:start="397:13" pos:end="397:30">gen_helper_pick_qh</name><argument_list pos:start="397:31" pos:end="397:65">(<argument pos:start="397:32" pos:end="397:43"><expr pos:start="397:32" pos:end="397:43"><name pos:start="397:32" pos:end="397:43"><name pos:start="397:32" pos:end="397:38">cpu_gpr</name><index pos:start="397:39" pos:end="397:43">[<expr pos:start="397:40" pos:end="397:42"><name pos:start="397:40" pos:end="397:42">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="397:46" pos:end="397:49"><expr pos:start="397:46" pos:end="397:49"><name pos:start="397:46" pos:end="397:49">v1_t</name></expr></argument>, <argument pos:start="397:52" pos:end="397:55"><expr pos:start="397:52" pos:end="397:55"><name pos:start="397:52" pos:end="397:55">v2_t</name></expr></argument>, <argument pos:start="397:58" pos:end="397:64"><expr pos:start="397:58" pos:end="397:64"><name pos:start="397:58" pos:end="397:64">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="399:13" pos:end="399:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="403:9" pos:end="403:14">break;</break>

    <case pos:start="405:5" pos:end="405:25">case <expr pos:start="405:10" pos:end="405:24"><name pos:start="405:10" pos:end="405:24">OPC_DAPPEND_DSP</name></expr>:</case>

        <switch pos:start="407:9" pos:end="449:9">switch <condition pos:start="407:16" pos:end="407:20">(<expr pos:start="407:17" pos:end="407:19"><name pos:start="407:17" pos:end="407:19">op2</name></expr>)</condition> <block pos:start="407:22" pos:end="449:9">{<block_content pos:start="409:9" pos:end="447:18">

        <case pos:start="409:9" pos:end="409:25">case <expr pos:start="409:14" pos:end="409:24"><name pos:start="409:14" pos:end="409:24">OPC_DAPPEND</name></expr>:</case>

            <expr_stmt pos:start="411:13" pos:end="411:37"><expr pos:start="411:13" pos:end="411:36"><call pos:start="411:13" pos:end="411:36"><name pos:start="411:13" pos:end="411:28">tcg_gen_movi_i32</name><argument_list pos:start="411:29" pos:end="411:36">(<argument pos:start="411:30" pos:end="411:31"><expr pos:start="411:30" pos:end="411:31"><name pos:start="411:30" pos:end="411:31">t0</name></expr></argument>, <argument pos:start="411:34" pos:end="411:35"><expr pos:start="411:34" pos:end="411:35"><name pos:start="411:34" pos:end="411:35">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:69"><expr pos:start="413:13" pos:end="413:68"><call pos:start="413:13" pos:end="413:68"><name pos:start="413:13" pos:end="413:30">gen_helper_dappend</name><argument_list pos:start="413:31" pos:end="413:68">(<argument pos:start="413:32" pos:end="413:43"><expr pos:start="413:32" pos:end="413:43"><name pos:start="413:32" pos:end="413:43"><name pos:start="413:32" pos:end="413:38">cpu_gpr</name><index pos:start="413:39" pos:end="413:43">[<expr pos:start="413:40" pos:end="413:42"><name pos:start="413:40" pos:end="413:42">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="413:46" pos:end="413:49"><expr pos:start="413:46" pos:end="413:49"><name pos:start="413:46" pos:end="413:49">v1_t</name></expr></argument>, <argument pos:start="413:52" pos:end="413:63"><expr pos:start="413:52" pos:end="413:63"><name pos:start="413:52" pos:end="413:63"><name pos:start="413:52" pos:end="413:58">cpu_gpr</name><index pos:start="413:59" pos:end="413:63">[<expr pos:start="413:60" pos:end="413:62"><name pos:start="413:60" pos:end="413:62">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="413:66" pos:end="413:67"><expr pos:start="413:66" pos:end="413:67"><name pos:start="413:66" pos:end="413:67">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="415:13" pos:end="415:18">break;</break>

        <case pos:start="417:9" pos:end="417:26">case <expr pos:start="417:14" pos:end="417:25"><name pos:start="417:14" pos:end="417:25">OPC_PREPENDD</name></expr>:</case>

            <expr_stmt pos:start="419:13" pos:end="419:37"><expr pos:start="419:13" pos:end="419:36"><call pos:start="419:13" pos:end="419:36"><name pos:start="419:13" pos:end="419:28">tcg_gen_movi_i32</name><argument_list pos:start="419:29" pos:end="419:36">(<argument pos:start="419:30" pos:end="419:31"><expr pos:start="419:30" pos:end="419:31"><name pos:start="419:30" pos:end="419:31">t0</name></expr></argument>, <argument pos:start="419:34" pos:end="419:35"><expr pos:start="419:34" pos:end="419:35"><name pos:start="419:34" pos:end="419:35">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:70"><expr pos:start="421:13" pos:end="421:69"><call pos:start="421:13" pos:end="421:69"><name pos:start="421:13" pos:end="421:31">gen_helper_prependd</name><argument_list pos:start="421:32" pos:end="421:69">(<argument pos:start="421:33" pos:end="421:44"><expr pos:start="421:33" pos:end="421:44"><name pos:start="421:33" pos:end="421:44"><name pos:start="421:33" pos:end="421:39">cpu_gpr</name><index pos:start="421:40" pos:end="421:44">[<expr pos:start="421:41" pos:end="421:43"><name pos:start="421:41" pos:end="421:43">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="421:47" pos:end="421:50"><expr pos:start="421:47" pos:end="421:50"><name pos:start="421:47" pos:end="421:50">v1_t</name></expr></argument>, <argument pos:start="421:53" pos:end="421:64"><expr pos:start="421:53" pos:end="421:64"><name pos:start="421:53" pos:end="421:64"><name pos:start="421:53" pos:end="421:59">cpu_gpr</name><index pos:start="421:60" pos:end="421:64">[<expr pos:start="421:61" pos:end="421:63"><name pos:start="421:61" pos:end="421:63">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="421:67" pos:end="421:68"><expr pos:start="421:67" pos:end="421:68"><name pos:start="421:67" pos:end="421:68">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="423:13" pos:end="423:18">break;</break>

        <case pos:start="425:9" pos:end="425:26">case <expr pos:start="425:14" pos:end="425:25"><name pos:start="425:14" pos:end="425:25">OPC_PREPENDW</name></expr>:</case>

            <expr_stmt pos:start="427:13" pos:end="427:37"><expr pos:start="427:13" pos:end="427:36"><call pos:start="427:13" pos:end="427:36"><name pos:start="427:13" pos:end="427:28">tcg_gen_movi_i32</name><argument_list pos:start="427:29" pos:end="427:36">(<argument pos:start="427:30" pos:end="427:31"><expr pos:start="427:30" pos:end="427:31"><name pos:start="427:30" pos:end="427:31">t0</name></expr></argument>, <argument pos:start="427:34" pos:end="427:35"><expr pos:start="427:34" pos:end="427:35"><name pos:start="427:34" pos:end="427:35">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:70"><expr pos:start="429:13" pos:end="429:69"><call pos:start="429:13" pos:end="429:69"><name pos:start="429:13" pos:end="429:31">gen_helper_prependw</name><argument_list pos:start="429:32" pos:end="429:69">(<argument pos:start="429:33" pos:end="429:44"><expr pos:start="429:33" pos:end="429:44"><name pos:start="429:33" pos:end="429:44"><name pos:start="429:33" pos:end="429:39">cpu_gpr</name><index pos:start="429:40" pos:end="429:44">[<expr pos:start="429:41" pos:end="429:43"><name pos:start="429:41" pos:end="429:43">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="429:47" pos:end="429:50"><expr pos:start="429:47" pos:end="429:50"><name pos:start="429:47" pos:end="429:50">v1_t</name></expr></argument>, <argument pos:start="429:53" pos:end="429:64"><expr pos:start="429:53" pos:end="429:64"><name pos:start="429:53" pos:end="429:64"><name pos:start="429:53" pos:end="429:59">cpu_gpr</name><index pos:start="429:60" pos:end="429:64">[<expr pos:start="429:61" pos:end="429:63"><name pos:start="429:61" pos:end="429:63">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="429:67" pos:end="429:68"><expr pos:start="429:67" pos:end="429:68"><name pos:start="429:67" pos:end="429:68">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="431:13" pos:end="431:18">break;</break>

        <case pos:start="433:9" pos:end="433:25">case <expr pos:start="433:14" pos:end="433:24"><name pos:start="433:14" pos:end="433:24">OPC_DBALIGN</name></expr>:</case>

            <expr_stmt pos:start="435:13" pos:end="435:37"><expr pos:start="435:13" pos:end="435:36"><call pos:start="435:13" pos:end="435:36"><name pos:start="435:13" pos:end="435:28">tcg_gen_movi_i32</name><argument_list pos:start="435:29" pos:end="435:36">(<argument pos:start="435:30" pos:end="435:31"><expr pos:start="435:30" pos:end="435:31"><name pos:start="435:30" pos:end="435:31">t0</name></expr></argument>, <argument pos:start="435:34" pos:end="435:35"><expr pos:start="435:34" pos:end="435:35"><name pos:start="435:34" pos:end="435:35">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="437:13" pos:end="437:69"><expr pos:start="437:13" pos:end="437:68"><call pos:start="437:13" pos:end="437:68"><name pos:start="437:13" pos:end="437:30">gen_helper_dbalign</name><argument_list pos:start="437:31" pos:end="437:68">(<argument pos:start="437:32" pos:end="437:43"><expr pos:start="437:32" pos:end="437:43"><name pos:start="437:32" pos:end="437:43"><name pos:start="437:32" pos:end="437:38">cpu_gpr</name><index pos:start="437:39" pos:end="437:43">[<expr pos:start="437:40" pos:end="437:42"><name pos:start="437:40" pos:end="437:42">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="437:46" pos:end="437:49"><expr pos:start="437:46" pos:end="437:49"><name pos:start="437:46" pos:end="437:49">v1_t</name></expr></argument>, <argument pos:start="437:52" pos:end="437:63"><expr pos:start="437:52" pos:end="437:63"><name pos:start="437:52" pos:end="437:63"><name pos:start="437:52" pos:end="437:58">cpu_gpr</name><index pos:start="437:59" pos:end="437:63">[<expr pos:start="437:60" pos:end="437:62"><name pos:start="437:60" pos:end="437:62">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="437:66" pos:end="437:67"><expr pos:start="437:66" pos:end="437:67"><name pos:start="437:66" pos:end="437:67">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="439:13" pos:end="439:18">break;</break>

        <default pos:start="441:9" pos:end="441:16">default:</default>            <comment type="block" pos:start="441:29" pos:end="441:41">/* Invalid */</comment>

            <expr_stmt pos:start="443:13" pos:end="443:39"><expr pos:start="443:13" pos:end="443:38"><call pos:start="443:13" pos:end="443:38"><name pos:start="443:13" pos:end="443:22">MIPS_INVAL</name><argument_list pos:start="443:23" pos:end="443:38">(<argument pos:start="443:24" pos:end="443:37"><expr pos:start="443:24" pos:end="443:37"><literal type="string" pos:start="443:24" pos:end="443:37">"MASK DAPPEND"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="445:13" pos:end="445:45"><expr pos:start="445:13" pos:end="445:44"><call pos:start="445:13" pos:end="445:44"><name pos:start="445:13" pos:end="445:30">generate_exception</name><argument_list pos:start="445:31" pos:end="445:44">(<argument pos:start="445:32" pos:end="445:34"><expr pos:start="445:32" pos:end="445:34"><name pos:start="445:32" pos:end="445:34">ctx</name></expr></argument>, <argument pos:start="445:37" pos:end="445:43"><expr pos:start="445:37" pos:end="445:43"><name pos:start="445:37" pos:end="445:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="447:13" pos:end="447:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="451:9" pos:end="454:0">break;</break>

<cpp:endif pos:start="453:1" pos:end="453:6">#<cpp:directive pos:start="453:2" pos:end="453:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></switch>



    <expr_stmt pos:start="459:5" pos:end="459:26"><expr pos:start="459:5" pos:end="459:25"><call pos:start="459:5" pos:end="459:25"><name pos:start="459:5" pos:end="459:21">tcg_temp_free_i32</name><argument_list pos:start="459:22" pos:end="459:25">(<argument pos:start="459:23" pos:end="459:24"><expr pos:start="459:23" pos:end="459:24"><name pos:start="459:23" pos:end="459:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="461:5" pos:end="461:22"><expr pos:start="461:5" pos:end="461:21"><call pos:start="461:5" pos:end="461:21"><name pos:start="461:5" pos:end="461:17">tcg_temp_free</name><argument_list pos:start="461:18" pos:end="461:21">(<argument pos:start="461:19" pos:end="461:20"><expr pos:start="461:19" pos:end="461:20"><name pos:start="461:19" pos:end="461:20">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="463:5" pos:end="463:24"><expr pos:start="463:5" pos:end="463:23"><call pos:start="463:5" pos:end="463:23"><name pos:start="463:5" pos:end="463:17">tcg_temp_free</name><argument_list pos:start="463:18" pos:end="463:23">(<argument pos:start="463:19" pos:end="463:22"><expr pos:start="463:19" pos:end="463:22"><name pos:start="463:19" pos:end="463:22">v1_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="465:5" pos:end="465:24"><expr pos:start="465:5" pos:end="465:23"><call pos:start="465:5" pos:end="465:23"><name pos:start="465:5" pos:end="465:17">tcg_temp_free</name><argument_list pos:start="465:18" pos:end="465:23">(<argument pos:start="465:19" pos:end="465:22"><expr pos:start="465:19" pos:end="465:22"><name pos:start="465:19" pos:end="465:22">v2_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="469:5" pos:end="469:14"><expr pos:start="469:5" pos:end="469:13"><operator pos:start="469:5" pos:end="469:5">(</operator><name pos:start="469:6" pos:end="469:9">void</name><operator pos:start="469:10" pos:end="469:10">)</operator><name pos:start="469:11" pos:end="469:13">opn</name></expr>;</expr_stmt> <comment type="block" pos:start="469:16" pos:end="469:45">/* avoid a compiler warning */</comment>

    <expr_stmt pos:start="471:5" pos:end="471:26"><expr pos:start="471:5" pos:end="471:25"><call pos:start="471:5" pos:end="471:25"><name pos:start="471:5" pos:end="471:14">MIPS_DEBUG</name><argument_list pos:start="471:15" pos:end="471:25">(<argument pos:start="471:16" pos:end="471:19"><expr pos:start="471:16" pos:end="471:19"><literal type="string" pos:start="471:16" pos:end="471:19">"%s"</literal></expr></argument>, <argument pos:start="471:22" pos:end="471:24"><expr pos:start="471:22" pos:end="471:24"><name pos:start="471:22" pos:end="471:24">opn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
