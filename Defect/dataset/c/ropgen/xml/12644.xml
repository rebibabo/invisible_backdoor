<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12644.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:52">bdrv_co_get_block_status</name><parameter_list pos:start="1:53" pos:end="5:79">(<parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:69">BlockDriverState</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">bs</name></decl></parameter>,

                                                     <parameter pos:start="3:54" pos:end="3:71"><decl pos:start="3:54" pos:end="3:71"><type pos:start="3:54" pos:end="3:71"><name pos:start="3:54" pos:end="3:60">int64_t</name></type> <name pos:start="3:62" pos:end="3:71">sector_num</name></decl></parameter>,

                                                     <parameter pos:start="5:54" pos:end="5:67"><decl pos:start="5:54" pos:end="5:67"><type pos:start="5:54" pos:end="5:67"><name pos:start="5:54" pos:end="5:56">int</name></type> <name pos:start="5:58" pos:end="5:67">nb_sectors</name></decl></parameter>, <parameter pos:start="5:70" pos:end="5:78"><decl pos:start="5:70" pos:end="5:78"><type pos:start="5:70" pos:end="5:78"><name pos:start="5:70" pos:end="5:72">int</name> <modifier pos:start="5:74" pos:end="5:74">*</modifier></type><name pos:start="5:75" pos:end="5:78">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="141:1">{<block_content pos:start="9:5" pos:end="139:15">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:18">length</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:13">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">ret</name></decl>, <decl pos:start="13:18" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:18" pos:end="13:21">ret2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:10">length</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:31"><name pos:start="17:14" pos:end="17:27">bdrv_getlength</name><argument_list pos:start="17:28" pos:end="17:31">(<argument pos:start="17:29" pos:end="17:30"><expr pos:start="17:29" pos:end="17:30"><name pos:start="17:29" pos:end="17:30">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:14">length</name> <operator pos:start="19:16" pos:end="19:16">&lt;</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>)</condition> <block pos:start="19:21" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:22">

        <return pos:start="21:9" pos:end="21:22">return <expr pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:21">length</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:51">(<expr pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:18">sector_num</name> <operator pos:start="27:20" pos:end="27:21">&gt;=</operator> <operator pos:start="27:23" pos:end="27:23">(</operator><name pos:start="27:24" pos:end="27:29">length</name> <operator pos:start="27:31" pos:end="27:32">&gt;&gt;</operator> <name pos:start="27:34" pos:end="27:49">BDRV_SECTOR_BITS</name><operator pos:start="27:50" pos:end="27:50">)</operator></expr>)</condition> <block pos:start="27:53" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:17">

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:13">pnum</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:5">n</name> <operator pos:start="37:7" pos:end="37:7">=</operator> <name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:10">bs</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:25">total_sectors</name></name> <operator pos:start="37:27" pos:end="37:27">-</operator> <name pos:start="37:29" pos:end="37:38">sector_num</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:9">n</name> <operator pos:start="39:11" pos:end="39:11">&lt;</operator> <name pos:start="39:13" pos:end="39:22">nb_sectors</name></expr>)</condition> <block pos:start="39:25" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:23">

        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:18">nb_sectors</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:22">n</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="61:5"><if pos:start="47:5" pos:end="61:5">if <condition pos:start="47:8" pos:end="47:43">(<expr pos:start="47:9" pos:end="47:42"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:42"><name pos:start="47:10" pos:end="47:11">bs</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:16">drv</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:42">bdrv_co_get_block_status</name></name></expr>)</condition> <block pos:start="47:45" pos:end="61:5">{<block_content pos:start="49:9" pos:end="59:19">

        <expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><operator pos:start="49:9" pos:end="49:9">*</operator><name pos:start="49:10" pos:end="49:13">pnum</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:26">nb_sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:29">BDRV_BLOCK_DATA</name></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:35">(<expr pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:14">bs</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:19">drv</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:34">protocol_name</name></name></expr>)</condition> <block pos:start="53:37" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:77">

            <expr_stmt pos:start="55:13" pos:end="55:77"><expr pos:start="55:13" pos:end="55:76"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:18">|=</operator> <name pos:start="55:20" pos:end="55:42">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="55:44" pos:end="55:44">|</operator> <operator pos:start="55:46" pos:end="55:46">(</operator><name pos:start="55:47" pos:end="55:56">sector_num</name> <operator pos:start="55:58" pos:end="55:58">*</operator> <name pos:start="55:60" pos:end="55:75">BDRV_SECTOR_SIZE</name><operator pos:start="55:76" pos:end="55:76">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="59:9" pos:end="59:19">return <expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:78"><expr pos:start="65:5" pos:end="65:77"><name pos:start="65:5" pos:end="65:7">ret</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <call pos:start="65:11" pos:end="65:77"><name pos:start="65:11" pos:end="65:43"><name pos:start="65:11" pos:end="65:12">bs</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:17">drv</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:43">bdrv_co_get_block_status</name></name><argument_list pos:start="65:44" pos:end="65:77">(<argument pos:start="65:45" pos:end="65:46"><expr pos:start="65:45" pos:end="65:46"><name pos:start="65:45" pos:end="65:46">bs</name></expr></argument>, <argument pos:start="65:49" pos:end="65:58"><expr pos:start="65:49" pos:end="65:58"><name pos:start="65:49" pos:end="65:58">sector_num</name></expr></argument>, <argument pos:start="65:61" pos:end="65:70"><expr pos:start="65:61" pos:end="65:70"><name pos:start="65:61" pos:end="65:70">nb_sectors</name></expr></argument>, <argument pos:start="65:73" pos:end="65:76"><expr pos:start="65:73" pos:end="65:76"><name pos:start="65:73" pos:end="65:76">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">&lt;</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>)</condition> <block pos:start="67:18" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:19">

        <expr_stmt pos:start="69:9" pos:end="69:18"><expr pos:start="69:9" pos:end="69:17"><operator pos:start="69:9" pos:end="69:9">*</operator><name pos:start="69:10" pos:end="69:13">pnum</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if <condition pos:start="77:8" pos:end="77:29">(<expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">&amp;</operator> <name pos:start="77:15" pos:end="77:28">BDRV_BLOCK_RAW</name></expr>)</condition> <block pos:start="77:31" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:50">

        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><call pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:14">assert</name><argument_list pos:start="79:15" pos:end="79:45">(<argument pos:start="79:16" pos:end="79:44"><expr pos:start="79:16" pos:end="79:44"><name pos:start="79:16" pos:end="79:18">ret</name> <operator pos:start="79:20" pos:end="79:20">&amp;</operator> <name pos:start="79:22" pos:end="79:44">BDRV_BLOCK_OFFSET_VALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="83:50">return <expr pos:start="81:16" pos:end="83:49"><call pos:start="81:16" pos:end="83:49"><name pos:start="81:16" pos:end="81:36">bdrv_get_block_status</name><argument_list pos:start="81:37" pos:end="83:49">(<argument pos:start="81:38" pos:end="81:45"><expr pos:start="81:38" pos:end="81:45"><name pos:start="81:38" pos:end="81:45"><name pos:start="81:38" pos:end="81:39">bs</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:45">file</name></name></expr></argument>, <argument pos:start="81:48" pos:end="81:70"><expr pos:start="81:48" pos:end="81:70"><name pos:start="81:48" pos:end="81:50">ret</name> <operator pos:start="81:52" pos:end="81:53">&gt;&gt;</operator> <name pos:start="81:55" pos:end="81:70">BDRV_SECTOR_BITS</name></expr></argument>,

                                     <argument pos:start="83:38" pos:end="83:42"><expr pos:start="83:38" pos:end="83:42"><operator pos:start="83:38" pos:end="83:38">*</operator><name pos:start="83:39" pos:end="83:42">pnum</name></expr></argument>, <argument pos:start="83:45" pos:end="83:48"><expr pos:start="83:45" pos:end="83:48"><name pos:start="83:45" pos:end="83:48">pnum</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="109:5"><if pos:start="89:5" pos:end="109:5">if <condition pos:start="89:8" pos:end="89:33">(<expr pos:start="89:9" pos:end="89:32"><operator pos:start="89:9" pos:end="89:9">!</operator><operator pos:start="89:10" pos:end="89:10">(</operator><name pos:start="89:11" pos:end="89:13">ret</name> <operator pos:start="89:15" pos:end="89:15">&amp;</operator> <name pos:start="89:17" pos:end="89:31">BDRV_BLOCK_DATA</name><operator pos:start="89:32" pos:end="89:32">)</operator></expr>)</condition> <block pos:start="89:35" pos:end="109:5">{<block_content pos:start="91:9" pos:end="107:9">

        <if_stmt pos:start="91:9" pos:end="107:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:35">(<expr pos:start="91:13" pos:end="91:34"><call pos:start="91:13" pos:end="91:34"><name pos:start="91:13" pos:end="91:30">bdrv_has_zero_init</name><argument_list pos:start="91:31" pos:end="91:34">(<argument pos:start="91:32" pos:end="91:33"><expr pos:start="91:32" pos:end="91:33"><name pos:start="91:32" pos:end="91:33">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:37" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:35">

            <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:15">ret</name> <operator pos:start="93:17" pos:end="93:18">|=</operator> <name pos:start="93:20" pos:end="93:34">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="95:11" pos:end="107:9">else if <condition pos:start="95:19" pos:end="95:34">(<expr pos:start="95:20" pos:end="95:33"><name pos:start="95:20" pos:end="95:33"><name pos:start="95:20" pos:end="95:21">bs</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:33">backing_hd</name></name></expr>)</condition> <block pos:start="95:36" pos:end="107:9">{<block_content pos:start="97:13" pos:end="105:13">

            <decl_stmt pos:start="97:13" pos:end="97:51"><decl pos:start="97:13" pos:end="97:50"><type pos:start="97:13" pos:end="97:30"><name pos:start="97:13" pos:end="97:28">BlockDriverState</name> <modifier pos:start="97:30" pos:end="97:30">*</modifier></type><name pos:start="97:31" pos:end="97:33">bs2</name> <init pos:start="97:35" pos:end="97:50">= <expr pos:start="97:37" pos:end="97:50"><name pos:start="97:37" pos:end="97:50"><name pos:start="97:37" pos:end="97:38">bs</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:50">backing_hd</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="99:13" pos:end="99:50"><decl pos:start="99:13" pos:end="99:49"><type pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:19">int64_t</name></type> <name pos:start="99:21" pos:end="99:27">length2</name> <init pos:start="99:29" pos:end="99:49">= <expr pos:start="99:31" pos:end="99:49"><call pos:start="99:31" pos:end="99:49"><name pos:start="99:31" pos:end="99:44">bdrv_getlength</name><argument_list pos:start="99:45" pos:end="99:49">(<argument pos:start="99:46" pos:end="99:48"><expr pos:start="99:46" pos:end="99:48"><name pos:start="99:46" pos:end="99:48">bs2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="101:13" pos:end="105:13"><if pos:start="101:13" pos:end="105:13">if <condition pos:start="101:16" pos:end="101:76">(<expr pos:start="101:17" pos:end="101:75"><name pos:start="101:17" pos:end="101:23">length2</name> <operator pos:start="101:25" pos:end="101:26">&gt;=</operator> <literal type="number" pos:start="101:28" pos:end="101:28">0</literal> <operator pos:start="101:30" pos:end="101:31">&amp;&amp;</operator> <name pos:start="101:33" pos:end="101:42">sector_num</name> <operator pos:start="101:44" pos:end="101:45">&gt;=</operator> <operator pos:start="101:47" pos:end="101:47">(</operator><name pos:start="101:48" pos:end="101:54">length2</name> <operator pos:start="101:56" pos:end="101:57">&gt;&gt;</operator> <name pos:start="101:59" pos:end="101:74">BDRV_SECTOR_BITS</name><operator pos:start="101:75" pos:end="101:75">)</operator></expr>)</condition> <block pos:start="101:78" pos:end="105:13">{<block_content pos:start="103:17" pos:end="103:39">

                <expr_stmt pos:start="103:17" pos:end="103:39"><expr pos:start="103:17" pos:end="103:38"><name pos:start="103:17" pos:end="103:19">ret</name> <operator pos:start="103:21" pos:end="103:22">|=</operator> <name pos:start="103:24" pos:end="103:38">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="135:5"><if pos:start="113:5" pos:end="135:5">if <condition pos:start="113:8" pos:end="117:40">(<expr pos:start="113:9" pos:end="117:39"><name pos:start="113:9" pos:end="113:16"><name pos:start="113:9" pos:end="113:10">bs</name><operator pos:start="113:11" pos:end="113:12">-&gt;</operator><name pos:start="113:13" pos:end="113:16">file</name></name> <operator pos:start="113:18" pos:end="113:19">&amp;&amp;</operator>

        <operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:12">ret</name> <operator pos:start="115:14" pos:end="115:14">&amp;</operator> <name pos:start="115:16" pos:end="115:30">BDRV_BLOCK_DATA</name><operator pos:start="115:31" pos:end="115:31">)</operator> <operator pos:start="115:33" pos:end="115:34">&amp;&amp;</operator> <operator pos:start="115:36" pos:end="115:36">!</operator><operator pos:start="115:37" pos:end="115:37">(</operator><name pos:start="115:38" pos:end="115:40">ret</name> <operator pos:start="115:42" pos:end="115:42">&amp;</operator> <name pos:start="115:44" pos:end="115:58">BDRV_BLOCK_ZERO</name><operator pos:start="115:59" pos:end="115:59">)</operator> <operator pos:start="115:61" pos:end="115:62">&amp;&amp;</operator>

        <operator pos:start="117:9" pos:end="117:9">(</operator><name pos:start="117:10" pos:end="117:12">ret</name> <operator pos:start="117:14" pos:end="117:14">&amp;</operator> <name pos:start="117:16" pos:end="117:38">BDRV_BLOCK_OFFSET_VALID</name><operator pos:start="117:39" pos:end="117:39">)</operator></expr>)</condition> <block pos:start="117:42" pos:end="135:5">{<block_content pos:start="119:9" pos:end="133:9">

        <expr_stmt pos:start="119:9" pos:end="121:53"><expr pos:start="119:9" pos:end="121:52"><name pos:start="119:9" pos:end="119:12">ret2</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <call pos:start="119:16" pos:end="121:52"><name pos:start="119:16" pos:end="119:39">bdrv_co_get_block_status</name><argument_list pos:start="119:40" pos:end="121:52">(<argument pos:start="119:41" pos:end="119:48"><expr pos:start="119:41" pos:end="119:48"><name pos:start="119:41" pos:end="119:48"><name pos:start="119:41" pos:end="119:42">bs</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:48">file</name></name></expr></argument>, <argument pos:start="119:51" pos:end="119:73"><expr pos:start="119:51" pos:end="119:73"><name pos:start="119:51" pos:end="119:53">ret</name> <operator pos:start="119:55" pos:end="119:56">&gt;&gt;</operator> <name pos:start="119:58" pos:end="119:73">BDRV_SECTOR_BITS</name></expr></argument>,

                                        <argument pos:start="121:41" pos:end="121:45"><expr pos:start="121:41" pos:end="121:45"><operator pos:start="121:41" pos:end="121:41">*</operator><name pos:start="121:42" pos:end="121:45">pnum</name></expr></argument>, <argument pos:start="121:48" pos:end="121:51"><expr pos:start="121:48" pos:end="121:51"><name pos:start="121:48" pos:end="121:51">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="133:9"><if pos:start="123:9" pos:end="133:9">if <condition pos:start="123:12" pos:end="123:22">(<expr pos:start="123:13" pos:end="123:21"><name pos:start="123:13" pos:end="123:16">ret2</name> <operator pos:start="123:18" pos:end="123:19">&gt;=</operator> <literal type="number" pos:start="123:21" pos:end="123:21">0</literal></expr>)</condition> <block pos:start="123:24" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:44">

            <comment type="block" pos:start="125:13" pos:end="129:15">/* Ignore errors.  This is just providing extra information, it

             * is useful but not necessary.

             */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:44"><expr pos:start="131:13" pos:end="131:43"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:18">|=</operator> <operator pos:start="131:20" pos:end="131:20">(</operator><name pos:start="131:21" pos:end="131:24">ret2</name> <operator pos:start="131:26" pos:end="131:26">&amp;</operator> <name pos:start="131:28" pos:end="131:42">BDRV_BLOCK_ZERO</name><operator pos:start="131:43" pos:end="131:43">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="139:5" pos:end="139:15">return <expr pos:start="139:12" pos:end="139:14"><name pos:start="139:12" pos:end="139:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
