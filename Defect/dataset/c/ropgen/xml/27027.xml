<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27027.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bdrv_co_do_ioctl</name><parameter_list pos:start="1:28" pos:end="1:69">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:57"><decl pos:start="1:51" pos:end="1:57"><type pos:start="1:51" pos:end="1:57"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:57">req</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:63">void</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:18">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">BlockDriver</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">drv</name> <init pos:start="5:22" pos:end="5:30">= <expr pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:30">drv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">BdrvTrackedRequest</name></type> <name pos:start="7:24" pos:end="7:34">tracked_req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="13:6"><decl pos:start="9:5" pos:end="13:5"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:25">CoroutineIOCompletion</name></type> <name pos:start="9:27" pos:end="9:28">co</name> <init pos:start="9:30" pos:end="13:5">= <expr pos:start="9:32" pos:end="13:5"><block pos:start="9:32" pos:end="13:5">{

        <expr pos:start="11:9" pos:end="11:42"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:18">coroutine</name> <operator pos:start="11:20" pos:end="11:20">=</operator> <call pos:start="11:22" pos:end="11:42"><name pos:start="11:22" pos:end="11:40">qemu_coroutine_self</name><argument_list pos:start="11:41" pos:end="11:42">()</argument_list></call></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">BlockAIOCB</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:19">acb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:70"><expr pos:start="19:5" pos:end="19:69"><call pos:start="19:5" pos:end="19:69"><name pos:start="19:5" pos:end="19:25">tracked_request_begin</name><argument_list pos:start="19:26" pos:end="19:69">(<argument pos:start="19:27" pos:end="19:38"><expr pos:start="19:27" pos:end="19:38"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:38">tracked_req</name></expr></argument>, <argument pos:start="19:41" pos:end="19:42"><expr pos:start="19:41" pos:end="19:42"><name pos:start="19:41" pos:end="19:42">bs</name></expr></argument>, <argument pos:start="19:45" pos:end="19:45"><expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">0</literal></expr></argument>, <argument pos:start="19:48" pos:end="19:48"><expr pos:start="19:48" pos:end="19:48"><literal type="number" pos:start="19:48" pos:end="19:48">0</literal></expr></argument>, <argument pos:start="19:51" pos:end="19:68"><expr pos:start="19:51" pos:end="19:68"><name pos:start="19:51" pos:end="19:68">BDRV_TRACKED_IOCTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:37">(<expr pos:start="21:9" pos:end="21:36"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:12">drv</name> <operator pos:start="21:14" pos:end="21:15">||</operator> <operator pos:start="21:17" pos:end="21:17">!</operator><name pos:start="21:18" pos:end="21:36"><name pos:start="21:18" pos:end="21:20">drv</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:36">bdrv_aio_ioctl</name></name></expr>)</condition> <block pos:start="21:39" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:17">

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:10">co</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:14">ret</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <operator pos:start="23:18" pos:end="23:18">-</operator><name pos:start="23:19" pos:end="23:25">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="25:9" pos:end="25:17">goto <name pos:start="25:14" pos:end="25:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:73"><expr pos:start="31:5" pos:end="31:72"><name pos:start="31:5" pos:end="31:7">acb</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:72"><name pos:start="31:11" pos:end="31:29"><name pos:start="31:11" pos:end="31:13">drv</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:29">bdrv_aio_ioctl</name></name><argument_list pos:start="31:30" pos:end="31:72">(<argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">bs</name></expr></argument>, <argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">req</name></expr></argument>, <argument pos:start="31:40" pos:end="31:42"><expr pos:start="31:40" pos:end="31:42"><name pos:start="31:40" pos:end="31:42">buf</name></expr></argument>, <argument pos:start="31:45" pos:end="31:66"><expr pos:start="31:45" pos:end="31:66"><name pos:start="31:45" pos:end="31:66">bdrv_co_io_em_complete</name></expr></argument>, <argument pos:start="31:69" pos:end="31:71"><expr pos:start="31:69" pos:end="31:71"><operator pos:start="31:69" pos:end="31:69">&amp;</operator><name pos:start="31:70" pos:end="31:71">co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="45:5"><if pos:start="33:5" pos:end="45:5">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:12">acb</name></expr>)</condition> <block pos:start="33:15" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:35">

        <decl_stmt pos:start="35:9" pos:end="35:74"><decl pos:start="35:9" pos:end="35:73"><type pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:31">BdrvIoctlCompletionData</name> <modifier pos:start="35:33" pos:end="35:33">*</modifier></type><name pos:start="35:34" pos:end="35:37">data</name> <init pos:start="35:39" pos:end="35:73">= <expr pos:start="35:41" pos:end="35:73"><call pos:start="35:41" pos:end="35:73"><name pos:start="35:41" pos:end="35:45">g_new</name><argument_list pos:start="35:46" pos:end="35:73">(<argument pos:start="35:47" pos:end="35:69"><expr pos:start="35:47" pos:end="35:69"><name pos:start="35:47" pos:end="35:69">BdrvIoctlCompletionData</name></expr></argument>, <argument pos:start="35:72" pos:end="35:72"><expr pos:start="35:72" pos:end="35:72"><literal type="number" pos:start="35:72" pos:end="35:72">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="39:56"><expr pos:start="37:9" pos:end="39:55"><name pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:12">data</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:16">bh</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="39:55"><name pos:start="37:20" pos:end="37:29">aio_bh_new</name><argument_list pos:start="37:30" pos:end="39:55">(<argument pos:start="37:31" pos:end="37:54"><expr pos:start="37:31" pos:end="37:54"><call pos:start="37:31" pos:end="37:54"><name pos:start="37:31" pos:end="37:50">bdrv_get_aio_context</name><argument_list pos:start="37:51" pos:end="37:54">(<argument pos:start="37:52" pos:end="37:53"><expr pos:start="37:52" pos:end="37:53"><name pos:start="37:52" pos:end="37:53">bs</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="39:33" pos:end="39:48"><expr pos:start="39:33" pos:end="39:48"><name pos:start="39:33" pos:end="39:48">bdrv_ioctl_bh_cb</name></expr></argument>, <argument pos:start="39:51" pos:end="39:54"><expr pos:start="39:51" pos:end="39:54"><name pos:start="39:51" pos:end="39:54">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:12">data</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:16">co</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <operator pos:start="41:20" pos:end="41:20">&amp;</operator><name pos:start="41:21" pos:end="41:22">co</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:24">qemu_bh_schedule</name><argument_list pos:start="43:25" pos:end="43:34">(<argument pos:start="43:26" pos:end="43:33"><expr pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:29">data</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:33">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><call pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:24">qemu_coroutine_yield</name><argument_list pos:start="47:25" pos:end="47:26">()</argument_list></call></expr>;</expr_stmt>

<label pos:start="49:1" pos:end="49:4"><name pos:start="49:1" pos:end="49:3">out</name>:</label>

    <expr_stmt pos:start="51:5" pos:end="51:38"><expr pos:start="51:5" pos:end="51:37"><call pos:start="51:5" pos:end="51:37"><name pos:start="51:5" pos:end="51:23">tracked_request_end</name><argument_list pos:start="51:24" pos:end="51:37">(<argument pos:start="51:25" pos:end="51:36"><expr pos:start="51:25" pos:end="51:36"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:36">tracked_req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:18">return <expr pos:start="53:12" pos:end="53:17"><name pos:start="53:12" pos:end="53:17"><name pos:start="53:12" pos:end="53:13">co</name><operator pos:start="53:14" pos:end="53:14">.</operator><name pos:start="53:15" pos:end="53:17">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
