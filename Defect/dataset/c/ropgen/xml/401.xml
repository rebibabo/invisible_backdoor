<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/401.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">virtio_ccw_set_vqs</name><parameter_list pos:start="1:30" pos:end="3:55">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">SubchDev</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">sch</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:62"><decl pos:start="1:46" pos:end="1:62"><type pos:start="1:46" pos:end="1:62"><name pos:start="1:46" pos:end="1:56">VqInfoBlock</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">info</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:54"><decl pos:start="3:31" pos:end="3:54"><type pos:start="3:31" pos:end="3:54"><name pos:start="3:31" pos:end="3:47">VqInfoBlockLegacy</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:54">linfo</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:13">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:49">= <expr pos:start="7:26" pos:end="7:49"><call pos:start="7:26" pos:end="7:49"><name pos:start="7:26" pos:end="7:44">virtio_ccw_get_vdev</name><argument_list pos:start="7:45" pos:end="7:49">(<argument pos:start="7:46" pos:end="7:48"><expr pos:start="7:46" pos:end="7:48"><name pos:start="7:46" pos:end="7:48">sch</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:18">index</name> <init pos:start="9:20" pos:end="9:54">= <expr pos:start="9:22" pos:end="9:54"><ternary pos:start="9:22" pos:end="9:54"><condition pos:start="9:22" pos:end="9:27"><expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">info</name></expr> ?</condition><then pos:start="9:29" pos:end="9:39"> <expr pos:start="9:29" pos:end="9:39"><name pos:start="9:29" pos:end="9:39"><name pos:start="9:29" pos:end="9:32">info</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:39">index</name></name></expr> </then><else pos:start="9:41" pos:end="9:54">: <expr pos:start="9:43" pos:end="9:54"><name pos:start="9:43" pos:end="9:54"><name pos:start="9:43" pos:end="9:47">linfo</name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:54">index</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:16">num</name> <init pos:start="11:18" pos:end="11:48">= <expr pos:start="11:20" pos:end="11:48"><ternary pos:start="11:20" pos:end="11:48"><condition pos:start="11:20" pos:end="11:25"><expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">info</name></expr> ?</condition><then pos:start="11:27" pos:end="11:35"> <expr pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:30">info</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:35">num</name></name></expr> </then><else pos:start="11:37" pos:end="11:48">: <expr pos:start="11:39" pos:end="11:48"><name pos:start="11:39" pos:end="11:48"><name pos:start="11:39" pos:end="11:43">linfo</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:48">num</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:53"><decl pos:start="13:5" pos:end="13:52"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:17">desc</name> <init pos:start="13:19" pos:end="13:52">= <expr pos:start="13:21" pos:end="13:52"><ternary pos:start="13:21" pos:end="13:52"><condition pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">info</name></expr> ?</condition><then pos:start="13:28" pos:end="13:37"> <expr pos:start="13:28" pos:end="13:37"><name pos:start="13:28" pos:end="13:37"><name pos:start="13:28" pos:end="13:31">info</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:37">desc</name></name></expr> </then><else pos:start="13:39" pos:end="13:52">: <expr pos:start="13:41" pos:end="13:52"><name pos:start="13:41" pos:end="13:52"><name pos:start="13:41" pos:end="13:45">linfo</name><operator pos:start="13:46" pos:end="13:47">-&gt;</operator><name pos:start="13:48" pos:end="13:52">queue</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:38">(<expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:13">index</name> <operator pos:start="17:15" pos:end="17:16">&gt;=</operator> <name pos:start="17:18" pos:end="17:37">VIRTIO_CCW_QUEUE_MAX</name></expr>)</condition> <block pos:start="17:40" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:23">

        <return pos:start="19:9" pos:end="19:23">return <expr pos:start="19:16" pos:end="19:22"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:58">/* Current code in virtio.c relies on 4K alignment. */</comment>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:48">(<expr pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:13">linfo</name> <operator pos:start="27:15" pos:end="27:16">&amp;&amp;</operator> <name pos:start="27:18" pos:end="27:21">desc</name> <operator pos:start="27:23" pos:end="27:24">&amp;&amp;</operator> <operator pos:start="27:26" pos:end="27:26">(</operator><name pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:31">linfo</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:38">align</name></name> <operator pos:start="27:40" pos:end="27:41">!=</operator> <literal type="number" pos:start="27:43" pos:end="27:46">4096</literal><operator pos:start="27:47" pos:end="27:47">)</operator></expr>)</condition> <block pos:start="27:50" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:14">(<expr pos:start="35:9" pos:end="35:13"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:13">vdev</name></expr>)</condition> <block pos:start="35:16" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:23">

        <return pos:start="37:9" pos:end="37:23">return <expr pos:start="37:16" pos:end="37:22"><operator pos:start="37:16" pos:end="37:16">-</operator><name pos:start="37:17" pos:end="37:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:13">(<expr pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:12">info</name></expr>)</condition> <block pos:start="43:15" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:75">

        <expr_stmt pos:start="45:9" pos:end="45:75"><expr pos:start="45:9" pos:end="45:74"><call pos:start="45:9" pos:end="45:74"><name pos:start="45:9" pos:end="45:30">virtio_queue_set_rings</name><argument_list pos:start="45:31" pos:end="45:74">(<argument pos:start="45:32" pos:end="45:35"><expr pos:start="45:32" pos:end="45:35"><name pos:start="45:32" pos:end="45:35">vdev</name></expr></argument>, <argument pos:start="45:38" pos:end="45:42"><expr pos:start="45:38" pos:end="45:42"><name pos:start="45:38" pos:end="45:42">index</name></expr></argument>, <argument pos:start="45:45" pos:end="45:48"><expr pos:start="45:45" pos:end="45:48"><name pos:start="45:45" pos:end="45:48">desc</name></expr></argument>, <argument pos:start="45:51" pos:end="45:61"><expr pos:start="45:51" pos:end="45:61"><name pos:start="45:51" pos:end="45:61"><name pos:start="45:51" pos:end="45:54">info</name><operator pos:start="45:55" pos:end="45:56">-&gt;</operator><name pos:start="45:57" pos:end="45:61">avail</name></name></expr></argument>, <argument pos:start="45:64" pos:end="45:73"><expr pos:start="45:64" pos:end="45:73"><name pos:start="45:64" pos:end="45:73"><name pos:start="45:64" pos:end="45:67">info</name><operator pos:start="45:68" pos:end="45:69">-&gt;</operator><name pos:start="45:70" pos:end="45:73">used</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:49">

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><call pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:29">virtio_queue_set_addr</name><argument_list pos:start="49:30" pos:end="49:48">(<argument pos:start="49:31" pos:end="49:34"><expr pos:start="49:31" pos:end="49:34"><name pos:start="49:31" pos:end="49:34">vdev</name></expr></argument>, <argument pos:start="49:37" pos:end="49:41"><expr pos:start="49:37" pos:end="49:41"><name pos:start="49:37" pos:end="49:41">index</name></expr></argument>, <argument pos:start="49:44" pos:end="49:47"><expr pos:start="49:44" pos:end="49:47"><name pos:start="49:44" pos:end="49:47">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="53:5" pos:end="85:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:14">(<expr pos:start="53:9" pos:end="53:13"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:13">desc</name></expr>)</condition> <block pos:start="53:16" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:63">

        <expr_stmt pos:start="55:9" pos:end="55:63"><expr pos:start="55:9" pos:end="55:62"><call pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:31">virtio_queue_set_vector</name><argument_list pos:start="55:32" pos:end="55:62">(<argument pos:start="55:33" pos:end="55:36"><expr pos:start="55:33" pos:end="55:36"><name pos:start="55:33" pos:end="55:36">vdev</name></expr></argument>, <argument pos:start="55:39" pos:end="55:43"><expr pos:start="55:39" pos:end="55:43"><name pos:start="55:39" pos:end="55:43">index</name></expr></argument>, <argument pos:start="55:46" pos:end="55:61"><expr pos:start="55:46" pos:end="55:61"><name pos:start="55:46" pos:end="55:61">VIRTIO_NO_VECTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="85:5">else <block pos:start="57:12" pos:end="85:5">{<block_content pos:start="59:9" pos:end="83:52">

        <if_stmt pos:start="59:9" pos:end="79:9"><if pos:start="59:9" pos:end="73:9">if <condition pos:start="59:12" pos:end="59:17">(<expr pos:start="59:13" pos:end="59:16"><name pos:start="59:13" pos:end="59:16">info</name></expr>)</condition> <block pos:start="59:19" pos:end="73:9">{<block_content pos:start="63:13" pos:end="71:51">

            <comment type="block" pos:start="61:13" pos:end="61:57">/* virtio-1 allows changing the ring size. */</comment>

            <if_stmt pos:start="63:13" pos:end="69:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:60">(<expr pos:start="63:17" pos:end="63:59"><call pos:start="63:17" pos:end="63:53"><name pos:start="63:17" pos:end="63:40">virtio_queue_get_max_num</name><argument_list pos:start="63:41" pos:end="63:53">(<argument pos:start="63:42" pos:end="63:45"><expr pos:start="63:42" pos:end="63:45"><name pos:start="63:42" pos:end="63:45">vdev</name></expr></argument>, <argument pos:start="63:48" pos:end="63:52"><expr pos:start="63:48" pos:end="63:52"><name pos:start="63:48" pos:end="63:52">index</name></expr></argument>)</argument_list></call> <operator pos:start="63:55" pos:end="63:55">&lt;</operator> <name pos:start="63:57" pos:end="63:59">num</name></expr>)</condition> <block pos:start="63:62" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:31">

                <comment type="block" pos:start="65:17" pos:end="65:59">/* Fail if we exceed the maximum number. */</comment>

                <return pos:start="67:17" pos:end="67:31">return <expr pos:start="67:24" pos:end="67:30"><operator pos:start="67:24" pos:end="67:24">-</operator><name pos:start="67:25" pos:end="67:30">EINVAL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:51"><expr pos:start="71:13" pos:end="71:50"><call pos:start="71:13" pos:end="71:50"><name pos:start="71:13" pos:end="71:32">virtio_queue_set_num</name><argument_list pos:start="71:33" pos:end="71:50">(<argument pos:start="71:34" pos:end="71:37"><expr pos:start="71:34" pos:end="71:37"><name pos:start="71:34" pos:end="71:37">vdev</name></expr></argument>, <argument pos:start="71:40" pos:end="71:44"><expr pos:start="71:40" pos:end="71:44"><name pos:start="71:40" pos:end="71:44">index</name></expr></argument>, <argument pos:start="71:47" pos:end="71:49"><expr pos:start="71:47" pos:end="71:49"><name pos:start="71:47" pos:end="71:49">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="73:11" pos:end="79:9">else if <condition pos:start="73:19" pos:end="73:59">(<expr pos:start="73:20" pos:end="73:58"><call pos:start="73:20" pos:end="73:52"><name pos:start="73:20" pos:end="73:39">virtio_queue_get_num</name><argument_list pos:start="73:40" pos:end="73:52">(<argument pos:start="73:41" pos:end="73:44"><expr pos:start="73:41" pos:end="73:44"><name pos:start="73:41" pos:end="73:44">vdev</name></expr></argument>, <argument pos:start="73:47" pos:end="73:51"><expr pos:start="73:47" pos:end="73:51"><name pos:start="73:47" pos:end="73:51">index</name></expr></argument>)</argument_list></call> <operator pos:start="73:54" pos:end="73:54">&gt;</operator> <name pos:start="73:56" pos:end="73:58">num</name></expr>)</condition> <block pos:start="73:61" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:27">

            <comment type="block" pos:start="75:13" pos:end="75:59">/* Fail if we don't have a big enough queue. */</comment>

            <return pos:start="77:13" pos:end="77:27">return <expr pos:start="77:20" pos:end="77:26"><operator pos:start="77:20" pos:end="77:20">-</operator><name pos:start="77:21" pos:end="77:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="81:9" pos:end="81:76">/* We ignore possible increased num for legacy for compatibility. */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:52"><expr pos:start="83:9" pos:end="83:51"><call pos:start="83:9" pos:end="83:51"><name pos:start="83:9" pos:end="83:31">virtio_queue_set_vector</name><argument_list pos:start="83:32" pos:end="83:51">(<argument pos:start="83:33" pos:end="83:36"><expr pos:start="83:33" pos:end="83:36"><name pos:start="83:33" pos:end="83:36">vdev</name></expr></argument>, <argument pos:start="83:39" pos:end="83:43"><expr pos:start="83:39" pos:end="83:43"><name pos:start="83:39" pos:end="83:43">index</name></expr></argument>, <argument pos:start="83:46" pos:end="83:50"><expr pos:start="83:46" pos:end="83:50"><name pos:start="83:46" pos:end="83:50">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="87:5" pos:end="87:54">/* tell notify handler in case of config change */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:47"><expr pos:start="89:5" pos:end="89:46"><name pos:start="89:5" pos:end="89:23"><name pos:start="89:5" pos:end="89:8">vdev</name><operator pos:start="89:9" pos:end="89:10">-&gt;</operator><name pos:start="89:11" pos:end="89:23">config_vector</name></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:46">VIRTIO_CCW_QUEUE_MAX</name></expr>;</expr_stmt>

    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
