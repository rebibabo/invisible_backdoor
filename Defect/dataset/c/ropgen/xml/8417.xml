<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8417.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:21">helper_addlv</name><parameter_list pos:start="1:22" pos:end="1:69">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:35">CPUAlphaState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">env</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:50">uint64_t</name></type> <name pos:start="1:52" pos:end="1:54">op1</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:64">uint64_t</name></type> <name pos:start="1:66" pos:end="1:68">op2</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:15">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">tmp</name> <init pos:start="5:18" pos:end="5:22">= <expr pos:start="5:20" pos:end="5:22"><name pos:start="5:20" pos:end="5:22">op1</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:7">op1</name> <operator pos:start="7:9" pos:end="7:9">=</operator> <operator pos:start="7:11" pos:end="7:11">(</operator><name pos:start="7:12" pos:end="7:19">uint32_t</name><operator pos:start="7:20" pos:end="7:20">)</operator><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:24">op1</name> <operator pos:start="7:26" pos:end="7:26">+</operator> <name pos:start="7:28" pos:end="7:30">op2</name><operator pos:start="7:31" pos:end="7:31">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:67">(<expr pos:start="9:9" pos:end="9:66"><call pos:start="9:9" pos:end="9:66"><name pos:start="9:9" pos:end="9:16">unlikely</name><argument_list pos:start="9:17" pos:end="9:66">(<argument pos:start="9:18" pos:end="9:65"><expr pos:start="9:18" pos:end="9:65"><operator pos:start="9:18" pos:end="9:18">(</operator><name pos:start="9:19" pos:end="9:21">tmp</name> <operator pos:start="9:23" pos:end="9:23">^</operator> <name pos:start="9:25" pos:end="9:27">op2</name> <operator pos:start="9:29" pos:end="9:29">^</operator> <operator pos:start="9:31" pos:end="9:31">(</operator><operator pos:start="9:32" pos:end="9:32">-</operator><literal type="number" pos:start="9:33" pos:end="9:35">1UL</literal><operator pos:start="9:36" pos:end="9:36">)</operator><operator pos:start="9:37" pos:end="9:37">)</operator> <operator pos:start="9:39" pos:end="9:39">&amp;</operator> <operator pos:start="9:41" pos:end="9:41">(</operator><name pos:start="9:42" pos:end="9:44">tmp</name> <operator pos:start="9:46" pos:end="9:46">^</operator> <name pos:start="9:48" pos:end="9:50">op1</name><operator pos:start="9:51" pos:end="9:51">)</operator> <operator pos:start="9:53" pos:end="9:53">&amp;</operator> <operator pos:start="9:55" pos:end="9:55">(</operator><literal type="number" pos:start="9:56" pos:end="9:58">1UL</literal> <operator pos:start="9:60" pos:end="9:61">&lt;&lt;</operator> <literal type="number" pos:start="9:63" pos:end="9:64">31</literal><operator pos:start="9:65" pos:end="9:65">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:69" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:47">

        <expr_stmt pos:start="11:9" pos:end="11:47"><expr pos:start="11:9" pos:end="11:46"><call pos:start="11:9" pos:end="11:46"><name pos:start="11:9" pos:end="11:18">arith_excp</name><argument_list pos:start="11:19" pos:end="11:46">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">env</name></expr></argument>, <argument pos:start="11:25" pos:end="11:31"><expr pos:start="11:25" pos:end="11:31"><call pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:29">GETPC</name><argument_list pos:start="11:30" pos:end="11:31">()</argument_list></call></expr></argument>, <argument pos:start="11:34" pos:end="11:42"><expr pos:start="11:34" pos:end="11:42"><name pos:start="11:34" pos:end="11:42">EXC_M_IOV</name></expr></argument>, <argument pos:start="11:45" pos:end="11:45"><expr pos:start="11:45" pos:end="11:45"><literal type="number" pos:start="11:45" pos:end="11:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="15:5" pos:end="15:15">return <expr pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:14">op1</name></expr>;</return>

</block_content>}</block></function>
</unit>
