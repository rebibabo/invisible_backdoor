<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/184.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">main_loop_wait</name><parameter_list pos:start="1:20" pos:end="1:32">(<parameter pos:start="1:21" pos:end="1:31"><decl pos:start="1:21" pos:end="1:31"><type pos:start="1:21" pos:end="1:23"><name pos:start="1:21" pos:end="1:23">int</name></type> <name pos:start="1:25" pos:end="1:31">timeout</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="175:19">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">IOHandlerRecord</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ioh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">fd_set</name></type> <name pos:start="7:12" pos:end="7:15">rfds</name></decl>, <decl pos:start="7:18" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:18" pos:end="7:21">wfds</name></decl>, <decl pos:start="7:24" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:24" pos:end="7:27">xfds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:17">nfds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:18">timeval</name></name></type> <name pos:start="11:20" pos:end="11:21">tv</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><call pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:26">qemu_bh_update_timeout</name><argument_list pos:start="15:27" pos:end="15:36">(<argument pos:start="15:28" pos:end="15:35"><expr pos:start="15:28" pos:end="15:35"><operator pos:start="15:28" pos:end="15:28">&amp;</operator><name pos:start="15:29" pos:end="15:35">timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><call pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:23">host_main_loop_wait</name><argument_list pos:start="19:24" pos:end="19:33">(<argument pos:start="19:25" pos:end="19:32"><expr pos:start="19:25" pos:end="19:32"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:32">timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:25">/* poll any events */</comment>

    <comment type="block" pos:start="25:5" pos:end="25:56">/* XXX: separate device handlers from system ones */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:8">nfds</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <operator pos:start="27:12" pos:end="27:12">-</operator><literal type="number" pos:start="27:13" pos:end="27:13">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><call pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:11">FD_ZERO</name><argument_list pos:start="29:12" pos:end="29:18">(<argument pos:start="29:13" pos:end="29:17"><expr pos:start="29:13" pos:end="29:17"><operator pos:start="29:13" pos:end="29:13">&amp;</operator><name pos:start="29:14" pos:end="29:17">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><call pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:11">FD_ZERO</name><argument_list pos:start="31:12" pos:end="31:18">(<argument pos:start="31:13" pos:end="31:17"><expr pos:start="31:13" pos:end="31:17"><operator pos:start="31:13" pos:end="31:13">&amp;</operator><name pos:start="31:14" pos:end="31:17">wfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><call pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:11">FD_ZERO</name><argument_list pos:start="33:12" pos:end="33:18">(<argument pos:start="33:13" pos:end="33:17"><expr pos:start="33:13" pos:end="33:17"><operator pos:start="33:13" pos:end="33:13">&amp;</operator><name pos:start="33:14" pos:end="33:17">xfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="65:5">for<control pos:start="35:8" pos:end="35:61">(<init pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:11">ioh</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:30">first_io_handler</name></expr>;</init> <condition pos:start="35:33" pos:end="35:44"><expr pos:start="35:33" pos:end="35:43"><name pos:start="35:33" pos:end="35:35">ioh</name> <operator pos:start="35:37" pos:end="35:38">!=</operator> <name pos:start="35:40" pos:end="35:43">NULL</name></expr>;</condition> <incr pos:start="35:46" pos:end="35:60"><expr pos:start="35:46" pos:end="35:60"><name pos:start="35:46" pos:end="35:48">ioh</name> <operator pos:start="35:50" pos:end="35:50">=</operator> <name pos:start="35:52" pos:end="35:60"><name pos:start="35:52" pos:end="35:54">ioh</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:60">next</name></name></expr></incr>)</control> <block pos:start="35:63" pos:end="65:5">{<block_content pos:start="37:9" pos:end="63:9">

        <if_stmt pos:start="37:9" pos:end="39:21"><if pos:start="37:9" pos:end="39:21">if <condition pos:start="37:12" pos:end="37:25">(<expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:15">ioh</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:24">deleted</name></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <continue pos:start="39:13" pos:end="39:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="53:9"><if pos:start="41:9" pos:end="53:9">if <condition pos:start="41:12" pos:end="45:50">(<expr pos:start="41:13" pos:end="45:49"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:15">ioh</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:24">fd_read</name></name> <operator pos:start="41:26" pos:end="41:27">&amp;&amp;</operator>

            <operator pos:start="43:13" pos:end="43:13">(</operator><operator pos:start="43:14" pos:end="43:14">!</operator><name pos:start="43:15" pos:end="43:31"><name pos:start="43:15" pos:end="43:17">ioh</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:31">fd_read_poll</name></name> <operator pos:start="43:33" pos:end="43:34">||</operator>

             <call pos:start="45:14" pos:end="45:43"><name pos:start="45:14" pos:end="45:30"><name pos:start="45:14" pos:end="45:16">ioh</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:30">fd_read_poll</name></name><argument_list pos:start="45:31" pos:end="45:43">(<argument pos:start="45:32" pos:end="45:42"><expr pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:34">ioh</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:42">opaque</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:45" pos:end="45:46">!=</operator> <literal type="number" pos:start="45:48" pos:end="45:48">0</literal><operator pos:start="45:49" pos:end="45:49">)</operator></expr>)</condition> <block pos:start="45:52" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:31">

            <expr_stmt pos:start="47:13" pos:end="47:35"><expr pos:start="47:13" pos:end="47:34"><call pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:18">FD_SET</name><argument_list pos:start="47:19" pos:end="47:34">(<argument pos:start="47:20" pos:end="47:26"><expr pos:start="47:20" pos:end="47:26"><name pos:start="47:20" pos:end="47:26"><name pos:start="47:20" pos:end="47:22">ioh</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:26">fd</name></name></expr></argument>, <argument pos:start="47:29" pos:end="47:33"><expr pos:start="47:29" pos:end="47:33"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:33">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="51:31"><if pos:start="49:13" pos:end="51:31">if <condition pos:start="49:16" pos:end="49:31">(<expr pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:23"><name pos:start="49:17" pos:end="49:19">ioh</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:23">fd</name></name> <operator pos:start="49:25" pos:end="49:25">&gt;</operator> <name pos:start="49:27" pos:end="49:30">nfds</name></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:31"><block_content pos:start="51:17" pos:end="51:31">

                <expr_stmt pos:start="51:17" pos:end="51:31"><expr pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:20">nfds</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:30"><name pos:start="51:24" pos:end="51:26">ioh</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:30">fd</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:26">(<expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:15">ioh</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:25">fd_write</name></name></expr>)</condition> <block pos:start="55:28" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:31">

            <expr_stmt pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:34"><call pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:18">FD_SET</name><argument_list pos:start="57:19" pos:end="57:34">(<argument pos:start="57:20" pos:end="57:26"><expr pos:start="57:20" pos:end="57:26"><name pos:start="57:20" pos:end="57:26"><name pos:start="57:20" pos:end="57:22">ioh</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:26">fd</name></name></expr></argument>, <argument pos:start="57:29" pos:end="57:33"><expr pos:start="57:29" pos:end="57:33"><operator pos:start="57:29" pos:end="57:29">&amp;</operator><name pos:start="57:30" pos:end="57:33">wfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="61:31"><if pos:start="59:13" pos:end="61:31">if <condition pos:start="59:16" pos:end="59:31">(<expr pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:23"><name pos:start="59:17" pos:end="59:19">ioh</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:23">fd</name></name> <operator pos:start="59:25" pos:end="59:25">&gt;</operator> <name pos:start="59:27" pos:end="59:30">nfds</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:31"><block_content pos:start="61:17" pos:end="61:31">

                <expr_stmt pos:start="61:17" pos:end="61:31"><expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:20">nfds</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:30"><name pos:start="61:24" pos:end="61:26">ioh</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:30">fd</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:6">tv</name><operator pos:start="69:7" pos:end="69:7">.</operator><name pos:start="69:8" pos:end="69:13">tv_sec</name></name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:23">timeout</name> <operator pos:start="69:25" pos:end="69:25">/</operator> <literal type="number" pos:start="69:27" pos:end="69:30">1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:41"><expr pos:start="71:5" pos:end="71:40"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:6">tv</name><operator pos:start="71:7" pos:end="71:7">.</operator><name pos:start="71:8" pos:end="71:14">tv_usec</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <operator pos:start="71:18" pos:end="71:18">(</operator><name pos:start="71:19" pos:end="71:25">timeout</name> <operator pos:start="71:27" pos:end="71:27">%</operator> <literal type="number" pos:start="71:29" pos:end="71:32">1000</literal><operator pos:start="71:33" pos:end="71:33">)</operator> <operator pos:start="71:35" pos:end="71:35">*</operator> <literal type="number" pos:start="71:37" pos:end="71:40">1000</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:50"><expr pos:start="75:5" pos:end="75:49"><call pos:start="75:5" pos:end="75:49"><name pos:start="75:5" pos:end="75:21">slirp_select_fill</name><argument_list pos:start="75:22" pos:end="75:49">(<argument pos:start="75:23" pos:end="75:27"><expr pos:start="75:23" pos:end="75:27"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:27">nfds</name></expr></argument>, <argument pos:start="75:30" pos:end="75:34"><expr pos:start="75:30" pos:end="75:34"><operator pos:start="75:30" pos:end="75:30">&amp;</operator><name pos:start="75:31" pos:end="75:34">rfds</name></expr></argument>, <argument pos:start="75:37" pos:end="75:41"><expr pos:start="75:37" pos:end="75:41"><operator pos:start="75:37" pos:end="75:37">&amp;</operator><name pos:start="75:38" pos:end="75:41">wfds</name></expr></argument>, <argument pos:start="75:44" pos:end="75:48"><expr pos:start="75:44" pos:end="75:48"><operator pos:start="75:44" pos:end="75:44">&amp;</operator><name pos:start="75:45" pos:end="75:48">xfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:33"><expr pos:start="79:5" pos:end="79:32"><call pos:start="79:5" pos:end="79:32"><name pos:start="79:5" pos:end="79:30">qemu_mutex_unlock_iothread</name><argument_list pos:start="79:31" pos:end="79:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:7">ret</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:52"><name pos:start="81:11" pos:end="81:16">select</name><argument_list pos:start="81:17" pos:end="81:52">(<argument pos:start="81:18" pos:end="81:25"><expr pos:start="81:18" pos:end="81:25"><name pos:start="81:18" pos:end="81:21">nfds</name> <operator pos:start="81:23" pos:end="81:23">+</operator> <literal type="number" pos:start="81:25" pos:end="81:25">1</literal></expr></argument>, <argument pos:start="81:28" pos:end="81:32"><expr pos:start="81:28" pos:end="81:32"><operator pos:start="81:28" pos:end="81:28">&amp;</operator><name pos:start="81:29" pos:end="81:32">rfds</name></expr></argument>, <argument pos:start="81:35" pos:end="81:39"><expr pos:start="81:35" pos:end="81:39"><operator pos:start="81:35" pos:end="81:35">&amp;</operator><name pos:start="81:36" pos:end="81:39">wfds</name></expr></argument>, <argument pos:start="81:42" pos:end="81:46"><expr pos:start="81:42" pos:end="81:46"><operator pos:start="81:42" pos:end="81:42">&amp;</operator><name pos:start="81:43" pos:end="81:46">xfds</name></expr></argument>, <argument pos:start="81:49" pos:end="81:51"><expr pos:start="81:49" pos:end="81:51"><operator pos:start="81:49" pos:end="81:49">&amp;</operator><name pos:start="81:50" pos:end="81:51">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:31"><expr pos:start="83:5" pos:end="83:30"><call pos:start="83:5" pos:end="83:30"><name pos:start="83:5" pos:end="83:28">qemu_mutex_lock_iothread</name><argument_list pos:start="83:29" pos:end="83:30">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="129:5"><if pos:start="85:5" pos:end="129:5">if <condition pos:start="85:8" pos:end="85:16">(<expr pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">&gt;</operator> <literal type="number" pos:start="85:15" pos:end="85:15">0</literal></expr>)</condition> <block pos:start="85:18" pos:end="129:5">{<block_content pos:start="87:9" pos:end="127:9">

        <decl_stmt pos:start="87:9" pos:end="87:31"><decl pos:start="87:9" pos:end="87:30"><type pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:23">IOHandlerRecord</name> <modifier pos:start="87:25" pos:end="87:25">*</modifier><modifier pos:start="87:26" pos:end="87:26">*</modifier></type><name pos:start="87:27" pos:end="87:30">pioh</name></decl>;</decl_stmt>



        <for pos:start="91:9" pos:end="105:9">for<control pos:start="91:12" pos:end="91:65">(<init pos:start="91:13" pos:end="91:35"><expr pos:start="91:13" pos:end="91:34"><name pos:start="91:13" pos:end="91:15">ioh</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:34">first_io_handler</name></expr>;</init> <condition pos:start="91:37" pos:end="91:48"><expr pos:start="91:37" pos:end="91:47"><name pos:start="91:37" pos:end="91:39">ioh</name> <operator pos:start="91:41" pos:end="91:42">!=</operator> <name pos:start="91:44" pos:end="91:47">NULL</name></expr>;</condition> <incr pos:start="91:50" pos:end="91:64"><expr pos:start="91:50" pos:end="91:64"><name pos:start="91:50" pos:end="91:52">ioh</name> <operator pos:start="91:54" pos:end="91:54">=</operator> <name pos:start="91:56" pos:end="91:64"><name pos:start="91:56" pos:end="91:58">ioh</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:64">next</name></name></expr></incr>)</control> <block pos:start="91:67" pos:end="105:9">{<block_content pos:start="93:13" pos:end="103:13">

            <if_stmt pos:start="93:13" pos:end="97:13"><if pos:start="93:13" pos:end="97:13">if <condition pos:start="93:16" pos:end="93:74">(<expr pos:start="93:17" pos:end="93:73"><operator pos:start="93:17" pos:end="93:17">!</operator><name pos:start="93:18" pos:end="93:29"><name pos:start="93:18" pos:end="93:20">ioh</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:29">deleted</name></name> <operator pos:start="93:31" pos:end="93:32">&amp;&amp;</operator> <name pos:start="93:34" pos:end="93:45"><name pos:start="93:34" pos:end="93:36">ioh</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:45">fd_read</name></name> <operator pos:start="93:47" pos:end="93:48">&amp;&amp;</operator> <call pos:start="93:50" pos:end="93:73"><name pos:start="93:50" pos:end="93:57">FD_ISSET</name><argument_list pos:start="93:58" pos:end="93:73">(<argument pos:start="93:59" pos:end="93:65"><expr pos:start="93:59" pos:end="93:65"><name pos:start="93:59" pos:end="93:65"><name pos:start="93:59" pos:end="93:61">ioh</name><operator pos:start="93:62" pos:end="93:63">-&gt;</operator><name pos:start="93:64" pos:end="93:65">fd</name></name></expr></argument>, <argument pos:start="93:68" pos:end="93:72"><expr pos:start="93:68" pos:end="93:72"><operator pos:start="93:68" pos:end="93:68">&amp;</operator><name pos:start="93:69" pos:end="93:72">rfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:76" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:42">

                <expr_stmt pos:start="95:17" pos:end="95:42"><expr pos:start="95:17" pos:end="95:41"><call pos:start="95:17" pos:end="95:41"><name pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:19">ioh</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:28">fd_read</name></name><argument_list pos:start="95:29" pos:end="95:41">(<argument pos:start="95:30" pos:end="95:40"><expr pos:start="95:30" pos:end="95:40"><name pos:start="95:30" pos:end="95:40"><name pos:start="95:30" pos:end="95:32">ioh</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:40">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="99:13" pos:end="103:13"><if pos:start="99:13" pos:end="103:13">if <condition pos:start="99:16" pos:end="99:75">(<expr pos:start="99:17" pos:end="99:74"><operator pos:start="99:17" pos:end="99:17">!</operator><name pos:start="99:18" pos:end="99:29"><name pos:start="99:18" pos:end="99:20">ioh</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:29">deleted</name></name> <operator pos:start="99:31" pos:end="99:32">&amp;&amp;</operator> <name pos:start="99:34" pos:end="99:46"><name pos:start="99:34" pos:end="99:36">ioh</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:46">fd_write</name></name> <operator pos:start="99:48" pos:end="99:49">&amp;&amp;</operator> <call pos:start="99:51" pos:end="99:74"><name pos:start="99:51" pos:end="99:58">FD_ISSET</name><argument_list pos:start="99:59" pos:end="99:74">(<argument pos:start="99:60" pos:end="99:66"><expr pos:start="99:60" pos:end="99:66"><name pos:start="99:60" pos:end="99:66"><name pos:start="99:60" pos:end="99:62">ioh</name><operator pos:start="99:63" pos:end="99:64">-&gt;</operator><name pos:start="99:65" pos:end="99:66">fd</name></name></expr></argument>, <argument pos:start="99:69" pos:end="99:73"><expr pos:start="99:69" pos:end="99:73"><operator pos:start="99:69" pos:end="99:69">&amp;</operator><name pos:start="99:70" pos:end="99:73">wfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:77" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:43">

                <expr_stmt pos:start="101:17" pos:end="101:43"><expr pos:start="101:17" pos:end="101:42"><call pos:start="101:17" pos:end="101:42"><name pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:19">ioh</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:29">fd_write</name></name><argument_list pos:start="101:30" pos:end="101:42">(<argument pos:start="101:31" pos:end="101:41"><expr pos:start="101:31" pos:end="101:41"><name pos:start="101:31" pos:end="101:41"><name pos:start="101:31" pos:end="101:33">ioh</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:41">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



	<comment type="block" pos:start="109:9" pos:end="109:40">/* remove deleted IO handlers */</comment>

	<expr_stmt pos:start="111:9" pos:end="111:33"><expr pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:12">pioh</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <operator pos:start="111:16" pos:end="111:16">&amp;</operator><name pos:start="111:17" pos:end="111:32">first_io_handler</name></expr>;</expr_stmt>

	<while pos:start="113:9" pos:end="127:9">while <condition pos:start="113:15" pos:end="113:21">(<expr pos:start="113:16" pos:end="113:20"><operator pos:start="113:16" pos:end="113:16">*</operator><name pos:start="113:17" pos:end="113:20">pioh</name></expr>)</condition> <block pos:start="113:23" pos:end="127:9">{<block_content pos:start="115:13" pos:end="125:34">

            <expr_stmt pos:start="115:13" pos:end="115:24"><expr pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:15">ioh</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <operator pos:start="115:19" pos:end="115:19">*</operator><name pos:start="115:20" pos:end="115:23">pioh</name></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="125:34"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="117:29">(<expr pos:start="117:17" pos:end="117:28"><name pos:start="117:17" pos:end="117:28"><name pos:start="117:17" pos:end="117:19">ioh</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:28">deleted</name></name></expr>)</condition> <block pos:start="117:31" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:31">

                <expr_stmt pos:start="119:17" pos:end="119:34"><expr pos:start="119:17" pos:end="119:33"><operator pos:start="119:17" pos:end="119:17">*</operator><name pos:start="119:18" pos:end="119:21">pioh</name> <operator pos:start="119:23" pos:end="119:23">=</operator> <name pos:start="119:25" pos:end="119:33"><name pos:start="119:25" pos:end="119:27">ioh</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:33">next</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:31"><expr pos:start="121:17" pos:end="121:30"><call pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:25">qemu_free</name><argument_list pos:start="121:26" pos:end="121:30">(<argument pos:start="121:27" pos:end="121:29"><expr pos:start="121:27" pos:end="121:29"><name pos:start="121:27" pos:end="121:29">ioh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="123:15" pos:end="125:34">else<block type="pseudo" pos:start="125:17" pos:end="125:34"><block_content pos:start="125:17" pos:end="125:34">

                <expr_stmt pos:start="125:17" pos:end="125:34"><expr pos:start="125:17" pos:end="125:33"><name pos:start="125:17" pos:end="125:20">pioh</name> <operator pos:start="125:22" pos:end="125:22">=</operator> <operator pos:start="125:24" pos:end="125:24">&amp;</operator><name pos:start="125:25" pos:end="125:33"><name pos:start="125:25" pos:end="125:27">ioh</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:33">next</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:54"><expr pos:start="133:5" pos:end="133:53"><call pos:start="133:5" pos:end="133:53"><name pos:start="133:5" pos:end="133:21">slirp_select_poll</name><argument_list pos:start="133:22" pos:end="133:53">(<argument pos:start="133:23" pos:end="133:27"><expr pos:start="133:23" pos:end="133:27"><operator pos:start="133:23" pos:end="133:23">&amp;</operator><name pos:start="133:24" pos:end="133:27">rfds</name></expr></argument>, <argument pos:start="133:30" pos:end="133:34"><expr pos:start="133:30" pos:end="133:34"><operator pos:start="133:30" pos:end="133:30">&amp;</operator><name pos:start="133:31" pos:end="133:34">wfds</name></expr></argument>, <argument pos:start="133:37" pos:end="133:41"><expr pos:start="133:37" pos:end="133:41"><operator pos:start="133:37" pos:end="133:37">&amp;</operator><name pos:start="133:38" pos:end="133:41">xfds</name></expr></argument>, <argument pos:start="133:44" pos:end="133:52"><expr pos:start="133:44" pos:end="133:52"><operator pos:start="133:44" pos:end="133:44">(</operator><name pos:start="133:45" pos:end="133:47">ret</name> <operator pos:start="133:49" pos:end="133:49">&lt;</operator> <literal type="number" pos:start="133:51" pos:end="133:51">0</literal><operator pos:start="133:52" pos:end="133:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:38">/* rearm timer, if not periodic */</comment>

    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:48">(<expr pos:start="139:9" pos:end="139:47"><name pos:start="139:9" pos:end="139:26"><name pos:start="139:9" pos:end="139:19">alarm_timer</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:26">flags</name></name> <operator pos:start="139:28" pos:end="139:28">&amp;</operator> <name pos:start="139:30" pos:end="139:47">ALARM_FLAG_EXPIRED</name></expr>)</condition> <block pos:start="139:50" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:44">

        <expr_stmt pos:start="141:9" pos:end="141:50"><expr pos:start="141:9" pos:end="141:49"><name pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:19">alarm_timer</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:26">flags</name></name> <operator pos:start="141:28" pos:end="141:29">&amp;=</operator> <operator pos:start="141:31" pos:end="141:31">~</operator><name pos:start="141:32" pos:end="141:49">ALARM_FLAG_EXPIRED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:44"><expr pos:start="143:9" pos:end="143:43"><call pos:start="143:9" pos:end="143:43"><name pos:start="143:9" pos:end="143:30">qemu_rearm_alarm_timer</name><argument_list pos:start="143:31" pos:end="143:43">(<argument pos:start="143:32" pos:end="143:42"><expr pos:start="143:32" pos:end="143:42"><name pos:start="143:32" pos:end="143:42">alarm_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:24">/* vm time timers */</comment>

    <if_stmt pos:start="151:5" pos:end="159:5"><if pos:start="151:5" pos:end="159:5">if <condition pos:start="151:8" pos:end="151:19">(<expr pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:18">vm_running</name></expr>)</condition> <block pos:start="151:21" pos:end="159:5">{<block_content pos:start="153:9" pos:end="157:42">

        <if_stmt pos:start="153:9" pos:end="157:42"><if pos:start="153:9" pos:end="157:42">if <condition pos:start="153:12" pos:end="153:79">(<expr pos:start="153:13" pos:end="153:78"><operator pos:start="153:13" pos:end="153:13">!</operator><name pos:start="153:14" pos:end="153:20">cur_cpu</name> <operator pos:start="153:22" pos:end="153:23">||</operator> <call pos:start="153:25" pos:end="153:78"><name pos:start="153:25" pos:end="153:30">likely</name><argument_list pos:start="153:31" pos:end="153:78">(<argument pos:start="153:32" pos:end="153:77"><expr pos:start="153:32" pos:end="153:77"><operator pos:start="153:32" pos:end="153:32">!</operator><operator pos:start="153:33" pos:end="153:33">(</operator><name pos:start="153:34" pos:end="153:60"><name pos:start="153:34" pos:end="153:40">cur_cpu</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:60">singlestep_enabled</name></name> <operator pos:start="153:62" pos:end="153:62">&amp;</operator> <name pos:start="153:64" pos:end="153:76">SSTEP_NOTIMER</name><operator pos:start="153:77" pos:end="153:77">)</operator></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="157:42"><block_content pos:start="155:13" pos:end="157:42">

            <expr_stmt pos:start="155:13" pos:end="157:42"><expr pos:start="155:13" pos:end="157:41"><call pos:start="155:13" pos:end="157:41"><name pos:start="155:13" pos:end="155:27">qemu_run_timers</name><argument_list pos:start="155:28" pos:end="157:41">(<argument pos:start="155:29" pos:end="155:62"><expr pos:start="155:29" pos:end="155:62"><operator pos:start="155:29" pos:end="155:29">&amp;</operator><name pos:start="155:30" pos:end="155:62"><name pos:start="155:30" pos:end="155:42">active_timers</name><index pos:start="155:43" pos:end="155:62">[<expr pos:start="155:44" pos:end="155:61"><name pos:start="155:44" pos:end="155:61">QEMU_TIMER_VIRTUAL</name></expr>]</index></name></expr></argument>,

                <argument pos:start="157:17" pos:end="157:40"><expr pos:start="157:17" pos:end="157:40"><call pos:start="157:17" pos:end="157:40"><name pos:start="157:17" pos:end="157:30">qemu_get_clock</name><argument_list pos:start="157:31" pos:end="157:40">(<argument pos:start="157:32" pos:end="157:39"><expr pos:start="157:32" pos:end="157:39"><name pos:start="157:32" pos:end="157:39">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="163:5" pos:end="163:26">/* real time timers */</comment>

    <expr_stmt pos:start="165:5" pos:end="167:46"><expr pos:start="165:5" pos:end="167:45"><call pos:start="165:5" pos:end="167:45"><name pos:start="165:5" pos:end="165:19">qemu_run_timers</name><argument_list pos:start="165:20" pos:end="167:45">(<argument pos:start="165:21" pos:end="165:55"><expr pos:start="165:21" pos:end="165:55"><operator pos:start="165:21" pos:end="165:21">&amp;</operator><name pos:start="165:22" pos:end="165:55"><name pos:start="165:22" pos:end="165:34">active_timers</name><index pos:start="165:35" pos:end="165:55">[<expr pos:start="165:36" pos:end="165:54"><name pos:start="165:36" pos:end="165:54">QEMU_TIMER_REALTIME</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="167:21" pos:end="167:44"><expr pos:start="167:21" pos:end="167:44"><call pos:start="167:21" pos:end="167:44"><name pos:start="167:21" pos:end="167:34">qemu_get_clock</name><argument_list pos:start="167:35" pos:end="167:44">(<argument pos:start="167:36" pos:end="167:43"><expr pos:start="167:36" pos:end="167:43"><name pos:start="167:36" pos:end="167:43">rt_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="171:5" pos:end="173:16">/* Check bottom-halves last in case any of the earlier events triggered

       them.  */</comment>

    <expr_stmt pos:start="175:5" pos:end="175:19"><expr pos:start="175:5" pos:end="175:18"><call pos:start="175:5" pos:end="175:18"><name pos:start="175:5" pos:end="175:16">qemu_bh_poll</name><argument_list pos:start="175:17" pos:end="175:18">()</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
