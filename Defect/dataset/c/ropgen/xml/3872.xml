<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3872.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">adx_encode</name><parameter_list pos:start="1:23" pos:end="3:45">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:31">unsigned</name> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">adx</name></decl></parameter>,<parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:53">short</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">wav</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:44"><decl pos:start="3:24" pos:end="3:44"><type pos:start="3:24" pos:end="3:44"><name pos:start="3:24" pos:end="3:38">ADXChannelState</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">prev</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:5">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">scale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">s0</name></decl>,<decl pos:start="11:12" pos:end="11:13"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:13">s1</name></decl>,<decl pos:start="11:15" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:16">s2</name></decl>,<decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:18">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">max</name><init pos:start="13:12" pos:end="13:13">=<expr pos:start="13:13" pos:end="13:13"><literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">min</name><init pos:start="15:12" pos:end="15:13">=<expr pos:start="15:13" pos:end="15:13"><literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:12">data</name><index pos:start="17:13" pos:end="17:16">[<expr pos:start="17:14" pos:end="17:15"><literal type="number" pos:start="17:14" pos:end="17:15">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:6">s1</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:13">prev</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:17">s1</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:6">s2</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:13">prev</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:17">s2</name></name></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="41:5">for<control pos:start="25:8" pos:end="25:21">(<init pos:start="25:9" pos:end="25:12"><expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:9">i</name><operator pos:start="25:10" pos:end="25:10">=</operator><literal type="number" pos:start="25:11" pos:end="25:11">0</literal></expr>;</init><condition pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:13">i</name><operator pos:start="25:14" pos:end="25:14">&lt;</operator><literal type="number" pos:start="25:15" pos:end="25:16">32</literal></expr>;</condition><incr pos:start="25:18" pos:end="25:20"><expr pos:start="25:18" pos:end="25:20"><name pos:start="25:18" pos:end="25:18">i</name><operator pos:start="25:19" pos:end="25:20">++</operator></expr></incr>)</control> <block pos:start="25:23" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:16">

        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:10">s0</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:19"><name pos:start="27:14" pos:end="27:16">wav</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:9">d</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <operator pos:start="29:13" pos:end="29:13">(</operator><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:16">s0</name><operator pos:start="29:17" pos:end="29:18">&lt;&lt;</operator><literal type="number" pos:start="29:19" pos:end="29:20">14</literal><operator pos:start="29:21" pos:end="29:21">)</operator> <operator pos:start="29:23" pos:end="29:23">-</operator> <name pos:start="29:25" pos:end="29:30">SCALE1</name><operator pos:start="29:31" pos:end="29:31">*</operator><name pos:start="29:32" pos:end="29:33">s1</name> <operator pos:start="29:35" pos:end="29:35">+</operator> <name pos:start="29:37" pos:end="29:42">SCALE2</name><operator pos:start="29:43" pos:end="29:43">*</operator><name pos:start="29:44" pos:end="29:45">s2</name><operator pos:start="29:46" pos:end="29:46">)</operator><operator pos:start="29:47" pos:end="29:47">/</operator><name pos:start="29:48" pos:end="29:54">BASEVOL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:18"><expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:12">data</name><index pos:start="31:13" pos:end="31:15">[<expr pos:start="31:14" pos:end="31:14"><name pos:start="31:14" pos:end="31:14">i</name></expr>]</index></name><operator pos:start="31:16" pos:end="31:16">=</operator><name pos:start="31:17" pos:end="31:17">d</name></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="33:25"><if pos:start="33:9" pos:end="33:25">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:15">max</name><operator pos:start="33:16" pos:end="33:16">&lt;</operator><name pos:start="33:17" pos:end="33:17">d</name></expr>)</condition><block type="pseudo" pos:start="33:20" pos:end="33:25"><block_content pos:start="33:20" pos:end="33:25"> <expr_stmt pos:start="33:20" pos:end="33:25"><expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:22">max</name><operator pos:start="33:23" pos:end="33:23">=</operator><name pos:start="33:24" pos:end="33:24">d</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="35:25"><if pos:start="35:9" pos:end="35:25">if <condition pos:start="35:12" pos:end="35:18">(<expr pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:15">min</name><operator pos:start="35:16" pos:end="35:16">&gt;</operator><name pos:start="35:17" pos:end="35:17">d</name></expr>)</condition><block type="pseudo" pos:start="35:20" pos:end="35:25"><block_content pos:start="35:20" pos:end="35:25"> <expr_stmt pos:start="35:20" pos:end="35:25"><expr pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:22">min</name><operator pos:start="35:23" pos:end="35:23">=</operator><name pos:start="35:24" pos:end="35:24">d</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:10">s2</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:15">s1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:10">s1</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:15">s0</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="43:5" pos:end="43:18"><expr pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:8">prev</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:12">s1</name></name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:17">s1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:18"><expr pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:8">prev</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:12">s2</name></name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:17">s2</name></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:16">/* -8..+7 */</comment>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:25">(<expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:11">max</name><operator pos:start="53:12" pos:end="53:13">==</operator><literal type="number" pos:start="53:14" pos:end="53:14">0</literal> <operator pos:start="53:16" pos:end="53:17">&amp;&amp;</operator> <name pos:start="53:19" pos:end="53:21">min</name><operator pos:start="53:22" pos:end="53:23">==</operator><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>)</condition> <block pos:start="53:27" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:15">

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><call pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:14">memset</name><argument_list pos:start="55:15" pos:end="55:24">(<argument pos:start="55:16" pos:end="55:18"><expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">adx</name></expr></argument>,<argument pos:start="55:20" pos:end="55:20"><expr pos:start="55:20" pos:end="55:20"><literal type="number" pos:start="55:20" pos:end="55:20">0</literal></expr></argument>,<argument pos:start="55:22" pos:end="55:23"><expr pos:start="55:22" pos:end="55:23"><literal type="number" pos:start="55:22" pos:end="55:23">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="65:24"><if pos:start="63:5" pos:end="63:36">if <condition pos:start="63:8" pos:end="63:21">(<expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:11">max</name><operator pos:start="63:12" pos:end="63:12">/</operator><literal type="number" pos:start="63:13" pos:end="63:13">7</literal><operator pos:start="63:14" pos:end="63:14">&gt;</operator><operator pos:start="63:15" pos:end="63:15">-</operator><name pos:start="63:16" pos:end="63:18">min</name><operator pos:start="63:19" pos:end="63:19">/</operator><literal type="number" pos:start="63:20" pos:end="63:20">8</literal></expr>)</condition><block type="pseudo" pos:start="63:23" pos:end="63:36"><block_content pos:start="63:23" pos:end="63:36"> <expr_stmt pos:start="63:23" pos:end="63:36"><expr pos:start="63:23" pos:end="63:35"><name pos:start="63:23" pos:end="63:27">scale</name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:33">max</name><operator pos:start="63:34" pos:end="63:34">/</operator><literal type="number" pos:start="63:35" pos:end="63:35">7</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="65:5" pos:end="65:24">else<block type="pseudo" pos:start="65:10" pos:end="65:24"><block_content pos:start="65:10" pos:end="65:24"> <expr_stmt pos:start="65:10" pos:end="65:24"><expr pos:start="65:10" pos:end="65:23"><name pos:start="65:10" pos:end="65:14">scale</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <operator pos:start="65:18" pos:end="65:18">-</operator><name pos:start="65:19" pos:end="65:21">min</name><operator pos:start="65:22" pos:end="65:22">/</operator><literal type="number" pos:start="65:23" pos:end="65:23">8</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="69:5" pos:end="69:26"><if pos:start="69:5" pos:end="69:26">if <condition pos:start="69:8" pos:end="69:17">(<expr pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:13">scale</name><operator pos:start="69:14" pos:end="69:15">==</operator><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>)</condition><block type="pseudo" pos:start="69:19" pos:end="69:26"><block_content pos:start="69:19" pos:end="69:26"> <expr_stmt pos:start="69:19" pos:end="69:26"><expr pos:start="69:19" pos:end="69:25"><name pos:start="69:19" pos:end="69:23">scale</name><operator pos:start="69:24" pos:end="69:24">=</operator><literal type="number" pos:start="69:25" pos:end="69:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:24"><expr pos:start="73:5" pos:end="73:23"><call pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:11">AV_WB16</name><argument_list pos:start="73:12" pos:end="73:23">(<argument pos:start="73:13" pos:end="73:15"><expr pos:start="73:13" pos:end="73:15"><name pos:start="73:13" pos:end="73:15">adx</name></expr></argument>, <argument pos:start="73:18" pos:end="73:22"><expr pos:start="73:18" pos:end="73:22"><name pos:start="73:18" pos:end="73:22">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="77:5" pos:end="81:5">for<control pos:start="77:8" pos:end="77:21">(<init pos:start="77:9" pos:end="77:12"><expr pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:9">i</name><operator pos:start="77:10" pos:end="77:10">=</operator><literal type="number" pos:start="77:11" pos:end="77:11">0</literal></expr>;</init><condition pos:start="77:13" pos:end="77:17"><expr pos:start="77:13" pos:end="77:16"><name pos:start="77:13" pos:end="77:13">i</name><operator pos:start="77:14" pos:end="77:14">&lt;</operator><literal type="number" pos:start="77:15" pos:end="77:16">16</literal></expr>;</condition><incr pos:start="77:18" pos:end="77:20"><expr pos:start="77:18" pos:end="77:20"><name pos:start="77:18" pos:end="77:18">i</name><operator pos:start="77:19" pos:end="77:20">++</operator></expr></incr>)</control> <block pos:start="77:23" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:70">

        <expr_stmt pos:start="79:9" pos:end="79:70"><expr pos:start="79:9" pos:end="79:69"><name pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:11">adx</name><index pos:start="79:12" pos:end="79:16">[<expr pos:start="79:13" pos:end="79:15"><name pos:start="79:13" pos:end="79:13">i</name><operator pos:start="79:14" pos:end="79:14">+</operator><literal type="number" pos:start="79:15" pos:end="79:15">2</literal></expr>]</index></name> <operator pos:start="79:18" pos:end="79:18">=</operator> <operator pos:start="79:20" pos:end="79:20">(</operator><operator pos:start="79:21" pos:end="79:21">(</operator><name pos:start="79:22" pos:end="79:30"><name pos:start="79:22" pos:end="79:25">data</name><index pos:start="79:26" pos:end="79:30">[<expr pos:start="79:27" pos:end="79:29"><name pos:start="79:27" pos:end="79:27">i</name><operator pos:start="79:28" pos:end="79:28">*</operator><literal type="number" pos:start="79:29" pos:end="79:29">2</literal></expr>]</index></name><operator pos:start="79:31" pos:end="79:31">/</operator><name pos:start="79:32" pos:end="79:36">scale</name><operator pos:start="79:37" pos:end="79:37">)</operator><operator pos:start="79:38" pos:end="79:39">&lt;&lt;</operator><literal type="number" pos:start="79:40" pos:end="79:40">4</literal><operator pos:start="79:41" pos:end="79:41">)</operator> <operator pos:start="79:43" pos:end="79:43">|</operator> <operator pos:start="79:45" pos:end="79:45">(</operator><operator pos:start="79:46" pos:end="79:46">(</operator><name pos:start="79:47" pos:end="79:57"><name pos:start="79:47" pos:end="79:50">data</name><index pos:start="79:51" pos:end="79:57">[<expr pos:start="79:52" pos:end="79:56"><name pos:start="79:52" pos:end="79:52">i</name><operator pos:start="79:53" pos:end="79:53">*</operator><literal type="number" pos:start="79:54" pos:end="79:55">2</literal><operator pos:start="79:55" pos:end="79:55">+</operator><literal type="number" pos:start="79:56" pos:end="79:56">1</literal></expr>]</index></name><operator pos:start="79:58" pos:end="79:58">/</operator><name pos:start="79:59" pos:end="79:63">scale</name><operator pos:start="79:64" pos:end="79:64">)</operator><operator pos:start="79:65" pos:end="79:65">&amp;</operator><literal type="number" pos:start="79:66" pos:end="79:68">0xf</literal><operator pos:start="79:69" pos:end="79:69">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
