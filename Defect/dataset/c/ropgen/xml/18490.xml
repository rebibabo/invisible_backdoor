<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18490.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">musb_rx_packet_complete</name><parameter_list pos:start="1:36" pos:end="1:68">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:45">USBPacket</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">packey</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:67">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="165:1">{<block_content pos:start="9:5" pos:end="163:34">

    <comment type="block" pos:start="5:5" pos:end="7:63">/* Unfortunately we can't use packey-&gt;devep because that's the remote

     * endpoint number and may be different than our local.  */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MUSBEndPoint</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:20">ep</name> <init pos:start="9:22" pos:end="9:46">= <expr pos:start="9:24" pos:end="9:46"><operator pos:start="9:24" pos:end="9:24">(</operator><name pos:start="9:25" pos:end="9:36">MUSBEndPoint</name> <operator pos:start="9:38" pos:end="9:38">*</operator><operator pos:start="9:39" pos:end="9:39">)</operator> <name pos:start="9:41" pos:end="9:46">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">epnum</name> <init pos:start="11:15" pos:end="11:25">= <expr pos:start="11:17" pos:end="11:25"><name pos:start="11:17" pos:end="11:25"><name pos:start="11:17" pos:end="11:18">ep</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:25">epnum</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">MUSBState</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:16">s</name> <init pos:start="13:18" pos:end="13:27">= <expr pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:21">ep</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:27">musb</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:6">ep</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:17">fifostart</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">1</literal></expr>]</index></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="24:0"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:6">ep</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:15">fifolen</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>]</index></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="23:1" pos:end="23:16">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:16">CLEAR_NAK</name></cpp:ifdef>

    <if_stmt pos:start="25:5" pos:end="40:0"><if pos:start="25:5" pos:end="40:0">if <condition pos:start="25:8" pos:end="25:37">(<expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:10">ep</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:18">status</name><index pos:start="25:19" pos:end="25:21">[<expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">1</literal></expr>]</index></name> <operator pos:start="25:23" pos:end="25:24">!=</operator> <name pos:start="25:26" pos:end="25:36">USB_RET_NAK</name></expr>)</condition> <block pos:start="25:39" pos:end="40:0">{<block_content pos:start="29:9" pos:end="36:0">

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:10">ep</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:15">csr</name><index pos:start="29:16" pos:end="29:18">[<expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>]</index></name> <operator pos:start="29:20" pos:end="29:21">&amp;=</operator> <operator pos:start="29:23" pos:end="29:23">~</operator><name pos:start="29:24" pos:end="29:43">MGC_M_RXCSR_H_REQPKT</name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="36:0"><if pos:start="31:9" pos:end="36:0">if <condition pos:start="31:12" pos:end="31:19">(<expr pos:start="31:13" pos:end="31:18"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:18">epnum</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="36:0"><block_content pos:start="33:13" pos:end="36:0">

            <expr_stmt pos:start="33:13" pos:end="36:0"><expr pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:14">ep</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:19">csr</name><index pos:start="33:20" pos:end="33:22">[<expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>]</index></name> <operator pos:start="33:24" pos:end="33:25">&amp;=</operator> <operator pos:start="33:27" pos:end="33:27">~</operator><name pos:start="33:28" pos:end="33:46">MGC_M_CSR0_H_REQPKT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="35:1" pos:end="35:16">#<cpp:directive pos:start="35:2" pos:end="35:6">ifdef</cpp:directive> <name pos:start="35:8" pos:end="35:16">CLEAR_NAK</name></cpp:ifdef>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="43:5" pos:end="43:54">/* Clear all of the imaginable error bits first */</comment>

    <expr_stmt pos:start="45:5" pos:end="47:43"><expr pos:start="45:5" pos:end="47:42"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:6">ep</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:11">csr</name><index pos:start="45:12" pos:end="45:14">[<expr pos:start="45:13" pos:end="45:13"><literal type="number" pos:start="45:13" pos:end="45:13">1</literal></expr>]</index></name> <operator pos:start="45:16" pos:end="45:17">&amp;=</operator> <operator pos:start="45:19" pos:end="45:19">~</operator><operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:39">MGC_M_RXCSR_H_ERROR</name> <operator pos:start="45:41" pos:end="45:41">|</operator> <name pos:start="45:43" pos:end="45:63">MGC_M_RXCSR_H_RXSTALL</name> <operator pos:start="45:65" pos:end="45:65">|</operator>

                    <name pos:start="47:21" pos:end="47:41">MGC_M_RXCSR_DATAERROR</name><operator pos:start="47:42" pos:end="47:42">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="53:72"><if pos:start="49:5" pos:end="53:72">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:14">epnum</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="53:72"><block_content pos:start="51:9" pos:end="53:72">

        <expr_stmt pos:start="51:9" pos:end="53:72"><expr pos:start="51:9" pos:end="53:71"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:10">ep</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:15">csr</name><index pos:start="51:16" pos:end="51:18">[<expr pos:start="51:17" pos:end="51:17"><literal type="number" pos:start="51:17" pos:end="51:17">0</literal></expr>]</index></name> <operator pos:start="51:20" pos:end="51:21">&amp;=</operator> <operator pos:start="51:23" pos:end="51:23">~</operator><operator pos:start="51:24" pos:end="51:24">(</operator><name pos:start="51:25" pos:end="51:42">MGC_M_CSR0_H_ERROR</name> <operator pos:start="51:44" pos:end="51:44">|</operator> <name pos:start="51:46" pos:end="51:65">MGC_M_CSR0_H_RXSTALL</name> <operator pos:start="51:67" pos:end="51:67">|</operator>

                        <name pos:start="53:25" pos:end="53:47">MGC_M_CSR0_H_NAKTIMEOUT</name> <operator pos:start="53:49" pos:end="53:49">|</operator> <name pos:start="53:51" pos:end="53:70">MGC_M_CSR0_H_NO_PING</name><operator pos:start="53:71" pos:end="53:71">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="71:5"><if pos:start="57:5" pos:end="71:5">if <condition pos:start="57:8" pos:end="57:39">(<expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:10">ep</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:18">status</name><index pos:start="57:19" pos:end="57:21">[<expr pos:start="57:20" pos:end="57:20"><literal type="number" pos:start="57:20" pos:end="57:20">1</literal></expr>]</index></name> <operator pos:start="57:23" pos:end="57:24">==</operator> <name pos:start="57:26" pos:end="57:38">USB_RET_STALL</name></expr>)</condition> <block pos:start="57:41" pos:end="71:5">{<block_content pos:start="59:9" pos:end="69:47">

        <expr_stmt pos:start="59:9" pos:end="59:26"><expr pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:10">ep</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:18">status</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">1</literal></expr>]</index></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:24"><expr pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:14">packey</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:19">len</name></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:44"><expr pos:start="65:9" pos:end="65:43"><name pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:10">ep</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:15">csr</name><index pos:start="65:16" pos:end="65:18">[<expr pos:start="65:17" pos:end="65:17"><literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>]</index></name> <operator pos:start="65:20" pos:end="65:21">|=</operator> <name pos:start="65:23" pos:end="65:43">MGC_M_RXCSR_H_RXSTALL</name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:47"><if pos:start="67:9" pos:end="69:47">if <condition pos:start="67:12" pos:end="67:19">(<expr pos:start="67:13" pos:end="67:18"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:18">epnum</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:47"><block_content pos:start="69:13" pos:end="69:47">

            <expr_stmt pos:start="69:13" pos:end="69:47"><expr pos:start="69:13" pos:end="69:46"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:14">ep</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:19">csr</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr>]</index></name> <operator pos:start="69:24" pos:end="69:25">|=</operator> <name pos:start="69:27" pos:end="69:46">MGC_M_CSR0_H_RXSTALL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="99:5"><if pos:start="75:5" pos:end="99:5">if <condition pos:start="75:8" pos:end="75:37">(<expr pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:10">ep</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:18">status</name><index pos:start="75:19" pos:end="75:21">[<expr pos:start="75:20" pos:end="75:20"><literal type="number" pos:start="75:20" pos:end="75:20">1</literal></expr>]</index></name> <operator pos:start="75:23" pos:end="75:24">==</operator> <name pos:start="75:26" pos:end="75:36">USB_RET_NAK</name></expr>)</condition> <block pos:start="75:39" pos:end="99:5">{<block_content pos:start="77:9" pos:end="97:50">

        <expr_stmt pos:start="77:9" pos:end="77:26"><expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:10">ep</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:18">status</name><index pos:start="77:19" pos:end="77:21">[<expr pos:start="77:20" pos:end="77:20"><literal type="number" pos:start="77:20" pos:end="77:20">1</literal></expr>]</index></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <literal type="number" pos:start="77:25" pos:end="77:25">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="81:9" pos:end="83:42">/* NAK timeouts are only generated in Bulk transfers and

         * Data-errors in Isochronous.  */</comment>

        <if_stmt pos:start="85:9" pos:end="89:69"><if pos:start="85:9" pos:end="89:69">if <condition pos:start="85:12" pos:end="85:29">(<expr pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:14">ep</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:25">interrupt</name><index pos:start="85:26" pos:end="85:28">[<expr pos:start="85:27" pos:end="85:27"><literal type="number" pos:start="85:27" pos:end="85:27">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="89:69"><block_content pos:start="87:13" pos:end="89:69">

            <return pos:start="87:13" pos:end="89:69">return <expr pos:start="87:20" pos:end="89:68"><call pos:start="87:20" pos:end="89:68"><name pos:start="87:20" pos:end="87:30">musb_packet</name><argument_list pos:start="87:31" pos:end="89:68">(<argument pos:start="87:32" pos:end="87:32"><expr pos:start="87:32" pos:end="87:32"><name pos:start="87:32" pos:end="87:32">s</name></expr></argument>, <argument pos:start="87:35" pos:end="87:36"><expr pos:start="87:35" pos:end="87:36"><name pos:start="87:35" pos:end="87:36">ep</name></expr></argument>, <argument pos:start="87:39" pos:end="87:43"><expr pos:start="87:39" pos:end="87:43"><name pos:start="87:39" pos:end="87:43">epnum</name></expr></argument>, <argument pos:start="87:46" pos:end="87:57"><expr pos:start="87:46" pos:end="87:57"><name pos:start="87:46" pos:end="87:57">USB_TOKEN_IN</name></expr></argument>,

                            <argument pos:start="89:29" pos:end="89:39"><expr pos:start="89:29" pos:end="89:39"><name pos:start="89:29" pos:end="89:39"><name pos:start="89:29" pos:end="89:34">packey</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:39">len</name></name></expr></argument>, <argument pos:start="89:42" pos:end="89:64"><expr pos:start="89:42" pos:end="89:64"><name pos:start="89:42" pos:end="89:64">musb_rx_packet_complete</name></expr></argument>, <argument pos:start="89:67" pos:end="89:67"><expr pos:start="89:67" pos:end="89:67"><literal type="number" pos:start="89:67" pos:end="89:67">1</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:44"><expr pos:start="93:9" pos:end="93:43"><name pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:10">ep</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:15">csr</name><index pos:start="93:16" pos:end="93:18">[<expr pos:start="93:17" pos:end="93:17"><literal type="number" pos:start="93:17" pos:end="93:17">1</literal></expr>]</index></name> <operator pos:start="93:20" pos:end="93:21">|=</operator> <name pos:start="93:23" pos:end="93:43">MGC_M_RXCSR_DATAERROR</name></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="97:50"><if pos:start="95:9" pos:end="97:50">if <condition pos:start="95:12" pos:end="95:19">(<expr pos:start="95:13" pos:end="95:18"><operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:18">epnum</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:50"><block_content pos:start="97:13" pos:end="97:50">

            <expr_stmt pos:start="97:13" pos:end="97:50"><expr pos:start="97:13" pos:end="97:49"><name pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:14">ep</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:19">csr</name><index pos:start="97:20" pos:end="97:22">[<expr pos:start="97:21" pos:end="97:21"><literal type="number" pos:start="97:21" pos:end="97:21">0</literal></expr>]</index></name> <operator pos:start="97:24" pos:end="97:25">|=</operator> <name pos:start="97:27" pos:end="97:49">MGC_M_CSR0_H_NAKTIMEOUT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="131:5"><if pos:start="103:5" pos:end="131:5">if <condition pos:start="103:8" pos:end="103:26">(<expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:10">ep</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:18">status</name><index pos:start="103:19" pos:end="103:21">[<expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">1</literal></expr>]</index></name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <literal type="number" pos:start="103:25" pos:end="103:25">0</literal></expr>)</condition> <block pos:start="103:28" pos:end="131:5">{<block_content pos:start="105:9" pos:end="129:15">

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:44">(<expr pos:start="105:13" pos:end="105:43"><name pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:14">ep</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:22">status</name><index pos:start="105:23" pos:end="105:25">[<expr pos:start="105:24" pos:end="105:24"><literal type="number" pos:start="105:24" pos:end="105:24">1</literal></expr>]</index></name> <operator pos:start="105:27" pos:end="105:28">==</operator> <name pos:start="105:30" pos:end="105:43">USB_RET_BABBLE</name></expr>)</condition> <block pos:start="105:46" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:19">

            <expr_stmt pos:start="107:13" pos:end="107:53"><expr pos:start="107:13" pos:end="107:52"><call pos:start="107:13" pos:end="107:52"><name pos:start="107:13" pos:end="107:25">musb_intr_set</name><argument_list pos:start="107:26" pos:end="107:52">(<argument pos:start="107:27" pos:end="107:27"><expr pos:start="107:27" pos:end="107:27"><name pos:start="107:27" pos:end="107:27">s</name></expr></argument>, <argument pos:start="107:30" pos:end="107:48"><expr pos:start="107:30" pos:end="107:48"><name pos:start="107:30" pos:end="107:48">musb_irq_rst_babble</name></expr></argument>, <argument pos:start="107:51" pos:end="107:51"><expr pos:start="107:51" pos:end="107:51"><literal type="number" pos:start="107:51" pos:end="107:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="115:9" pos:end="117:43">/* Pretend we've tried three times already and failed (in

         * case of a control transfer).  */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:42"><expr pos:start="119:9" pos:end="119:41"><name pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:10">ep</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:15">csr</name><index pos:start="119:16" pos:end="119:18">[<expr pos:start="119:17" pos:end="119:17"><literal type="number" pos:start="119:17" pos:end="119:17">1</literal></expr>]</index></name> <operator pos:start="119:20" pos:end="119:21">|=</operator> <name pos:start="119:23" pos:end="119:41">MGC_M_RXCSR_H_ERROR</name></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:45"><if pos:start="121:9" pos:end="123:45">if <condition pos:start="121:12" pos:end="121:19">(<expr pos:start="121:13" pos:end="121:18"><operator pos:start="121:13" pos:end="121:13">!</operator><name pos:start="121:14" pos:end="121:18">epnum</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:45"><block_content pos:start="123:13" pos:end="123:45">

            <expr_stmt pos:start="123:13" pos:end="123:45"><expr pos:start="123:13" pos:end="123:44"><name pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:14">ep</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:19">csr</name><index pos:start="123:20" pos:end="123:22">[<expr pos:start="123:21" pos:end="123:21"><literal type="number" pos:start="123:21" pos:end="123:21">0</literal></expr>]</index></name> <operator pos:start="123:24" pos:end="123:25">|=</operator> <name pos:start="123:27" pos:end="123:44">MGC_M_CSR0_H_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:38"><expr pos:start="127:9" pos:end="127:37"><call pos:start="127:9" pos:end="127:37"><name pos:start="127:9" pos:end="127:24">musb_rx_intr_set</name><argument_list pos:start="127:25" pos:end="127:37">(<argument pos:start="127:26" pos:end="127:26"><expr pos:start="127:26" pos:end="127:26"><name pos:start="127:26" pos:end="127:26">s</name></expr></argument>, <argument pos:start="127:29" pos:end="127:33"><expr pos:start="127:29" pos:end="127:33"><name pos:start="127:29" pos:end="127:33">epnum</name></expr></argument>, <argument pos:start="127:36" pos:end="127:36"><expr pos:start="127:36" pos:end="127:36"><literal type="number" pos:start="127:36" pos:end="127:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="129:9" pos:end="129:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="133:5" pos:end="133:63">/* TODO: check len for over/underruns of an OUT packet?  */</comment>

    <comment type="block" pos:start="135:5" pos:end="135:57">/* TODO: perhaps make use of e-&gt;ext_size[1] here.  */</comment>



    <expr_stmt pos:start="139:5" pos:end="139:32"><expr pos:start="139:5" pos:end="139:31"><name pos:start="139:5" pos:end="139:15"><name pos:start="139:5" pos:end="139:10">packey</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:15">len</name></name> <operator pos:start="139:17" pos:end="139:17">=</operator> <name pos:start="139:19" pos:end="139:31"><name pos:start="139:19" pos:end="139:20">ep</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:28">status</name><index pos:start="139:29" pos:end="139:31">[<expr pos:start="139:30" pos:end="139:30"><literal type="number" pos:start="139:30" pos:end="139:30">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="143:5" pos:end="157:5"><if pos:start="143:5" pos:end="157:5">if <condition pos:start="143:8" pos:end="143:72">(<expr pos:start="143:9" pos:end="143:71"><operator pos:start="143:9" pos:end="143:9">!</operator><operator pos:start="143:10" pos:end="143:10">(</operator><name pos:start="143:11" pos:end="143:20"><name pos:start="143:11" pos:end="143:12">ep</name><operator pos:start="143:13" pos:end="143:14">-&gt;</operator><name pos:start="143:15" pos:end="143:17">csr</name><index pos:start="143:18" pos:end="143:20">[<expr pos:start="143:19" pos:end="143:19"><literal type="number" pos:start="143:19" pos:end="143:19">1</literal></expr>]</index></name> <operator pos:start="143:22" pos:end="143:22">&amp;</operator> <operator pos:start="143:24" pos:end="143:24">(</operator><name pos:start="143:25" pos:end="143:45">MGC_M_RXCSR_H_RXSTALL</name> <operator pos:start="143:47" pos:end="143:47">|</operator> <name pos:start="143:49" pos:end="143:69">MGC_M_RXCSR_DATAERROR</name><operator pos:start="143:70" pos:end="143:70">)</operator><operator pos:start="143:71" pos:end="143:71">)</operator></expr>)</condition> <block pos:start="143:74" pos:end="157:5">{<block_content pos:start="145:9" pos:end="153:34">

        <expr_stmt pos:start="145:9" pos:end="145:66"><expr pos:start="145:9" pos:end="145:65"><name pos:start="145:9" pos:end="145:18"><name pos:start="145:9" pos:end="145:10">ep</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:15">csr</name><index pos:start="145:16" pos:end="145:18">[<expr pos:start="145:17" pos:end="145:17"><literal type="number" pos:start="145:17" pos:end="145:17">1</literal></expr>]</index></name> <operator pos:start="145:20" pos:end="145:21">|=</operator> <name pos:start="145:23" pos:end="145:42">MGC_M_RXCSR_FIFOFULL</name> <operator pos:start="145:44" pos:end="145:44">|</operator> <name pos:start="145:46" pos:end="145:65">MGC_M_RXCSR_RXPKTRDY</name></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:46"><if pos:start="147:9" pos:end="149:46">if <condition pos:start="147:12" pos:end="147:19">(<expr pos:start="147:13" pos:end="147:18"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:18">epnum</name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:46"><block_content pos:start="149:13" pos:end="149:46">

            <expr_stmt pos:start="149:13" pos:end="149:46"><expr pos:start="149:13" pos:end="149:45"><name pos:start="149:13" pos:end="149:22"><name pos:start="149:13" pos:end="149:14">ep</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:19">csr</name><index pos:start="149:20" pos:end="149:22">[<expr pos:start="149:21" pos:end="149:21"><literal type="number" pos:start="149:21" pos:end="149:21">0</literal></expr>]</index></name> <operator pos:start="149:24" pos:end="149:25">|=</operator> <name pos:start="149:27" pos:end="149:45">MGC_M_CSR0_RXPKTRDY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:34"><expr pos:start="153:9" pos:end="153:33"><name pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:10">ep</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:19">rxcount</name></name> <operator pos:start="153:21" pos:end="153:21">=</operator> <name pos:start="153:23" pos:end="153:33"><name pos:start="153:23" pos:end="153:28">packey</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:33">len</name></name></expr>;</expr_stmt> <comment type="block" pos:start="153:36" pos:end="153:76">/* XXX: MIN(packey-&gt;len, ep-&gt;maxp[1]); */</comment>

        <comment type="block" pos:start="155:9" pos:end="155:57">/* In DMA mode: assert DMA request for this EP */</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:43">/* Only if DMA has not been asserted */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:34"><expr pos:start="163:5" pos:end="163:33"><call pos:start="163:5" pos:end="163:33"><name pos:start="163:5" pos:end="163:20">musb_rx_intr_set</name><argument_list pos:start="163:21" pos:end="163:33">(<argument pos:start="163:22" pos:end="163:22"><expr pos:start="163:22" pos:end="163:22"><name pos:start="163:22" pos:end="163:22">s</name></expr></argument>, <argument pos:start="163:25" pos:end="163:29"><expr pos:start="163:25" pos:end="163:29"><name pos:start="163:25" pos:end="163:29">epnum</name></expr></argument>, <argument pos:start="163:32" pos:end="163:32"><expr pos:start="163:32" pos:end="163:32"><literal type="number" pos:start="163:32" pos:end="163:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
