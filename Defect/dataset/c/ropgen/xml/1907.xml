<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1907.c" pos:tabs="8"><function pos:start="1:1" pos:end="303:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">to_json</name><parameter_list pos:start="1:20" pos:end="1:77">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:33">QObject</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">obj</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:47">QString</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">str</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:64">pretty</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:76">indent</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="303:1">{<block_content pos:start="5:5" pos:end="301:5">

    <switch pos:start="5:5" pos:end="301:5">switch <condition pos:start="5:12" pos:end="5:30">(<expr pos:start="5:13" pos:end="5:29"><call pos:start="5:13" pos:end="5:29"><name pos:start="5:13" pos:end="5:24">qobject_type</name><argument_list pos:start="5:25" pos:end="5:29">(<argument pos:start="5:26" pos:end="5:28"><expr pos:start="5:26" pos:end="5:28"><name pos:start="5:26" pos:end="5:28">obj</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:32" pos:end="301:5">{<block_content pos:start="7:5" pos:end="299:14">

    <case pos:start="7:5" pos:end="7:20">case <expr pos:start="7:10" pos:end="7:19"><name pos:start="7:10" pos:end="7:19">QTYPE_QINT</name></expr>:</case> <block pos:start="7:22" pos:end="21:5">{<block_content pos:start="9:9" pos:end="19:14">

        <decl_stmt pos:start="9:9" pos:end="9:41"><decl pos:start="9:9" pos:end="9:40"><type pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:12">QInt</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">val</name> <init pos:start="9:19" pos:end="9:40">= <expr pos:start="9:21" pos:end="9:40"><call pos:start="9:21" pos:end="9:40"><name pos:start="9:21" pos:end="9:35">qobject_to_qint</name><argument_list pos:start="9:36" pos:end="9:40">(<argument pos:start="9:37" pos:end="9:39"><expr pos:start="9:37" pos:end="9:39"><name pos:start="9:37" pos:end="9:39">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:26"><decl pos:start="11:9" pos:end="11:25"><type pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">char</name></type> <name pos:start="11:14" pos:end="11:25"><name pos:start="11:14" pos:end="11:19">buffer</name><index pos:start="11:20" pos:end="11:25">[<expr pos:start="11:21" pos:end="11:24"><literal type="number" pos:start="11:21" pos:end="11:24">1024</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="15:9" pos:end="15:72"><expr pos:start="15:9" pos:end="15:71"><call pos:start="15:9" pos:end="15:71"><name pos:start="15:9" pos:end="15:16">snprintf</name><argument_list pos:start="15:17" pos:end="15:71">(<argument pos:start="15:18" pos:end="15:23"><expr pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:23">buffer</name></expr></argument>, <argument pos:start="15:26" pos:end="15:39"><expr pos:start="15:26" pos:end="15:39"><sizeof pos:start="15:26" pos:end="15:39">sizeof<argument_list pos:start="15:32" pos:end="15:39">(<argument pos:start="15:33" pos:end="15:38"><expr pos:start="15:33" pos:end="15:38"><name pos:start="15:33" pos:end="15:38">buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="15:42" pos:end="15:51"><expr pos:start="15:42" pos:end="15:51"><literal type="string" pos:start="15:42" pos:end="15:44">"%"</literal> <name pos:start="15:46" pos:end="15:51">PRId64</name></expr></argument>, <argument pos:start="15:54" pos:end="15:70"><expr pos:start="15:54" pos:end="15:70"><call pos:start="15:54" pos:end="15:70"><name pos:start="15:54" pos:end="15:65">qint_get_int</name><argument_list pos:start="15:66" pos:end="15:70">(<argument pos:start="15:67" pos:end="15:69"><expr pos:start="15:67" pos:end="15:69"><name pos:start="15:67" pos:end="15:69">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:36"><expr pos:start="17:9" pos:end="17:35"><call pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:22">qstring_append</name><argument_list pos:start="17:23" pos:end="17:35">(<argument pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:26">str</name></expr></argument>, <argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:34">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    </block_content>}</block>

    <case pos:start="23:5" pos:end="23:23">case <expr pos:start="23:10" pos:end="23:22"><name pos:start="23:10" pos:end="23:22">QTYPE_QSTRING</name></expr>:</case> <block pos:start="23:25" pos:end="157:5">{<block_content pos:start="25:9" pos:end="155:14">

        <decl_stmt pos:start="25:9" pos:end="25:47"><decl pos:start="25:9" pos:end="25:46"><type pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:15">QString</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:20">val</name> <init pos:start="25:22" pos:end="25:46">= <expr pos:start="25:24" pos:end="25:46"><call pos:start="25:24" pos:end="25:46"><name pos:start="25:24" pos:end="25:41">qobject_to_qstring</name><argument_list pos:start="25:42" pos:end="25:46">(<argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:24"><decl pos:start="27:9" pos:end="27:23"><type pos:start="27:9" pos:end="27:20"><specifier pos:start="27:9" pos:end="27:13">const</specifier> <name pos:start="27:15" pos:end="27:18">char</name> <modifier pos:start="27:20" pos:end="27:20">*</modifier></type><name pos:start="27:21" pos:end="27:23">ptr</name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:11">ptr</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:34"><name pos:start="31:15" pos:end="31:29">qstring_get_str</name><argument_list pos:start="31:30" pos:end="31:34">(<argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:33">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><call pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:22">qstring_append</name><argument_list pos:start="33:23" pos:end="33:33">(<argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">str</name></expr></argument>, <argument pos:start="33:29" pos:end="33:32"><expr pos:start="33:29" pos:end="33:32"><literal type="string" pos:start="33:29" pos:end="33:32">"\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="35:9" pos:end="151:9">while <condition pos:start="35:15" pos:end="35:20">(<expr pos:start="35:16" pos:end="35:19"><operator pos:start="35:16" pos:end="35:16">*</operator><name pos:start="35:17" pos:end="35:19">ptr</name></expr>)</condition> <block pos:start="35:22" pos:end="151:9">{<block_content pos:start="37:13" pos:end="149:18">

            <if_stmt pos:start="37:13" pos:end="147:17"><if pos:start="37:13" pos:end="61:13">if <condition pos:start="37:16" pos:end="39:51">(<expr pos:start="37:17" pos:end="39:50"><operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:23"><name pos:start="37:18" pos:end="37:20">ptr</name><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>]</index></name> <operator pos:start="37:25" pos:end="37:25">&amp;</operator> <literal type="number" pos:start="37:27" pos:end="37:30">0xE0</literal><operator pos:start="37:31" pos:end="37:31">)</operator> <operator pos:start="37:33" pos:end="37:34">==</operator> <literal type="number" pos:start="37:36" pos:end="37:39">0xE0</literal> <operator pos:start="37:41" pos:end="37:42">&amp;&amp;</operator>

                <operator pos:start="39:17" pos:end="39:17">(</operator><name pos:start="39:18" pos:end="39:23"><name pos:start="39:18" pos:end="39:20">ptr</name><index pos:start="39:21" pos:end="39:23">[<expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">1</literal></expr>]</index></name> <operator pos:start="39:25" pos:end="39:25">&amp;</operator> <literal type="number" pos:start="39:27" pos:end="39:30">0x80</literal><operator pos:start="39:31" pos:end="39:31">)</operator> <operator pos:start="39:33" pos:end="39:34">&amp;&amp;</operator> <operator pos:start="39:36" pos:end="39:36">(</operator><name pos:start="39:37" pos:end="39:42"><name pos:start="39:37" pos:end="39:39">ptr</name><index pos:start="39:40" pos:end="39:42">[<expr pos:start="39:41" pos:end="39:41"><literal type="number" pos:start="39:41" pos:end="39:41">2</literal></expr>]</index></name> <operator pos:start="39:44" pos:end="39:44">&amp;</operator> <literal type="number" pos:start="39:46" pos:end="39:49">0x80</literal><operator pos:start="39:50" pos:end="39:50">)</operator></expr>)</condition> <block pos:start="39:53" pos:end="61:13">{<block_content pos:start="41:17" pos:end="59:44">

                <decl_stmt pos:start="41:17" pos:end="41:31"><decl pos:start="41:17" pos:end="41:30"><type pos:start="41:17" pos:end="41:24"><name pos:start="41:17" pos:end="41:24">uint16_t</name></type> <name pos:start="41:26" pos:end="41:30">wchar</name></decl>;</decl_stmt>

                <decl_stmt pos:start="43:17" pos:end="43:31"><decl pos:start="43:17" pos:end="43:30"><type pos:start="43:17" pos:end="43:20"><name pos:start="43:17" pos:end="43:20">char</name></type> <name pos:start="43:22" pos:end="43:30"><name pos:start="43:22" pos:end="43:27">escape</name><index pos:start="43:28" pos:end="43:30">[<expr pos:start="43:29" pos:end="43:29"><literal type="number" pos:start="43:29" pos:end="43:29">7</literal></expr>]</index></name></decl>;</decl_stmt>



                <expr_stmt pos:start="47:17" pos:end="47:47"><expr pos:start="47:17" pos:end="47:46"><name pos:start="47:17" pos:end="47:21">wchar</name>  <operator pos:start="47:24" pos:end="47:24">=</operator> <operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:32"><name pos:start="47:27" pos:end="47:29">ptr</name><index pos:start="47:30" pos:end="47:32">[<expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr>]</index></name> <operator pos:start="47:34" pos:end="47:34">&amp;</operator> <literal type="number" pos:start="47:36" pos:end="47:39">0x0F</literal><operator pos:start="47:40" pos:end="47:40">)</operator> <operator pos:start="47:42" pos:end="47:43">&lt;&lt;</operator> <literal type="number" pos:start="47:45" pos:end="47:46">12</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:46"><expr pos:start="49:17" pos:end="49:45"><name pos:start="49:17" pos:end="49:21">wchar</name> <operator pos:start="49:23" pos:end="49:24">|=</operator> <operator pos:start="49:26" pos:end="49:26">(</operator><name pos:start="49:27" pos:end="49:32"><name pos:start="49:27" pos:end="49:29">ptr</name><index pos:start="49:30" pos:end="49:32">[<expr pos:start="49:31" pos:end="49:31"><literal type="number" pos:start="49:31" pos:end="49:31">1</literal></expr>]</index></name> <operator pos:start="49:34" pos:end="49:34">&amp;</operator> <literal type="number" pos:start="49:36" pos:end="49:39">0x3F</literal><operator pos:start="49:40" pos:end="49:40">)</operator> <operator pos:start="49:42" pos:end="49:43">&lt;&lt;</operator> <literal type="number" pos:start="49:45" pos:end="49:45">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:41"><expr pos:start="51:17" pos:end="51:40"><name pos:start="51:17" pos:end="51:21">wchar</name> <operator pos:start="51:23" pos:end="51:24">|=</operator> <operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:32"><name pos:start="51:27" pos:end="51:29">ptr</name><index pos:start="51:30" pos:end="51:32">[<expr pos:start="51:31" pos:end="51:31"><literal type="number" pos:start="51:31" pos:end="51:31">2</literal></expr>]</index></name> <operator pos:start="51:34" pos:end="51:34">&amp;</operator> <literal type="number" pos:start="51:36" pos:end="51:39">0x3F</literal><operator pos:start="51:40" pos:end="51:40">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:25"><expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:19">ptr</name> <operator pos:start="53:21" pos:end="53:22">+=</operator> <literal type="number" pos:start="53:24" pos:end="53:24">2</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="57:17" pos:end="57:67"><expr pos:start="57:17" pos:end="57:66"><call pos:start="57:17" pos:end="57:66"><name pos:start="57:17" pos:end="57:24">snprintf</name><argument_list pos:start="57:25" pos:end="57:66">(<argument pos:start="57:26" pos:end="57:31"><expr pos:start="57:26" pos:end="57:31"><name pos:start="57:26" pos:end="57:31">escape</name></expr></argument>, <argument pos:start="57:34" pos:end="57:47"><expr pos:start="57:34" pos:end="57:47"><sizeof pos:start="57:34" pos:end="57:47">sizeof<argument_list pos:start="57:40" pos:end="57:47">(<argument pos:start="57:41" pos:end="57:46"><expr pos:start="57:41" pos:end="57:46"><name pos:start="57:41" pos:end="57:46">escape</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="57:50" pos:end="57:58"><expr pos:start="57:50" pos:end="57:58"><literal type="string" pos:start="57:50" pos:end="57:58">"\\u%04X"</literal></expr></argument>, <argument pos:start="57:61" pos:end="57:65"><expr pos:start="57:61" pos:end="57:65"><name pos:start="57:61" pos:end="57:65">wchar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:44"><expr pos:start="59:17" pos:end="59:43"><call pos:start="59:17" pos:end="59:43"><name pos:start="59:17" pos:end="59:30">qstring_append</name><argument_list pos:start="59:31" pos:end="59:43">(<argument pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><name pos:start="59:32" pos:end="59:34">str</name></expr></argument>, <argument pos:start="59:37" pos:end="59:42"><expr pos:start="59:37" pos:end="59:42"><name pos:start="59:37" pos:end="59:42">escape</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="61:15" pos:end="81:13">else if <condition pos:start="61:23" pos:end="61:66">(<expr pos:start="61:24" pos:end="61:65"><operator pos:start="61:24" pos:end="61:24">(</operator><name pos:start="61:25" pos:end="61:30"><name pos:start="61:25" pos:end="61:27">ptr</name><index pos:start="61:28" pos:end="61:30">[<expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">0</literal></expr>]</index></name> <operator pos:start="61:32" pos:end="61:32">&amp;</operator> <literal type="number" pos:start="61:34" pos:end="61:37">0xE0</literal><operator pos:start="61:38" pos:end="61:38">)</operator> <operator pos:start="61:40" pos:end="61:41">==</operator> <literal type="number" pos:start="61:43" pos:end="61:46">0xC0</literal> <operator pos:start="61:48" pos:end="61:49">&amp;&amp;</operator> <operator pos:start="61:51" pos:end="61:51">(</operator><name pos:start="61:52" pos:end="61:57"><name pos:start="61:52" pos:end="61:54">ptr</name><index pos:start="61:55" pos:end="61:57">[<expr pos:start="61:56" pos:end="61:56"><literal type="number" pos:start="61:56" pos:end="61:56">1</literal></expr>]</index></name> <operator pos:start="61:59" pos:end="61:59">&amp;</operator> <literal type="number" pos:start="61:61" pos:end="61:64">0x80</literal><operator pos:start="61:65" pos:end="61:65">)</operator></expr>)</condition> <block pos:start="61:68" pos:end="81:13">{<block_content pos:start="63:17" pos:end="79:44">

                <decl_stmt pos:start="63:17" pos:end="63:31"><decl pos:start="63:17" pos:end="63:30"><type pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:24">uint16_t</name></type> <name pos:start="63:26" pos:end="63:30">wchar</name></decl>;</decl_stmt>

                <decl_stmt pos:start="65:17" pos:end="65:31"><decl pos:start="65:17" pos:end="65:30"><type pos:start="65:17" pos:end="65:20"><name pos:start="65:17" pos:end="65:20">char</name></type> <name pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:27">escape</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><literal type="number" pos:start="65:29" pos:end="65:29">7</literal></expr>]</index></name></decl>;</decl_stmt>



                <expr_stmt pos:start="69:17" pos:end="69:46"><expr pos:start="69:17" pos:end="69:45"><name pos:start="69:17" pos:end="69:21">wchar</name>  <operator pos:start="69:24" pos:end="69:24">=</operator> <operator pos:start="69:26" pos:end="69:26">(</operator><name pos:start="69:27" pos:end="69:32"><name pos:start="69:27" pos:end="69:29">ptr</name><index pos:start="69:30" pos:end="69:32">[<expr pos:start="69:31" pos:end="69:31"><literal type="number" pos:start="69:31" pos:end="69:31">0</literal></expr>]</index></name> <operator pos:start="69:34" pos:end="69:34">&amp;</operator> <literal type="number" pos:start="69:36" pos:end="69:39">0x1F</literal><operator pos:start="69:40" pos:end="69:40">)</operator> <operator pos:start="69:42" pos:end="69:43">&lt;&lt;</operator> <literal type="number" pos:start="69:45" pos:end="69:45">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:41"><expr pos:start="71:17" pos:end="71:40"><name pos:start="71:17" pos:end="71:21">wchar</name> <operator pos:start="71:23" pos:end="71:24">|=</operator> <operator pos:start="71:26" pos:end="71:26">(</operator><name pos:start="71:27" pos:end="71:32"><name pos:start="71:27" pos:end="71:29">ptr</name><index pos:start="71:30" pos:end="71:32">[<expr pos:start="71:31" pos:end="71:31"><literal type="number" pos:start="71:31" pos:end="71:31">1</literal></expr>]</index></name> <operator pos:start="71:34" pos:end="71:34">&amp;</operator> <literal type="number" pos:start="71:36" pos:end="71:39">0x3F</literal><operator pos:start="71:40" pos:end="71:40">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:22"><expr pos:start="73:17" pos:end="73:21"><name pos:start="73:17" pos:end="73:19">ptr</name><operator pos:start="73:20" pos:end="73:21">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="77:17" pos:end="77:67"><expr pos:start="77:17" pos:end="77:66"><call pos:start="77:17" pos:end="77:66"><name pos:start="77:17" pos:end="77:24">snprintf</name><argument_list pos:start="77:25" pos:end="77:66">(<argument pos:start="77:26" pos:end="77:31"><expr pos:start="77:26" pos:end="77:31"><name pos:start="77:26" pos:end="77:31">escape</name></expr></argument>, <argument pos:start="77:34" pos:end="77:47"><expr pos:start="77:34" pos:end="77:47"><sizeof pos:start="77:34" pos:end="77:47">sizeof<argument_list pos:start="77:40" pos:end="77:47">(<argument pos:start="77:41" pos:end="77:46"><expr pos:start="77:41" pos:end="77:46"><name pos:start="77:41" pos:end="77:46">escape</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="77:50" pos:end="77:58"><expr pos:start="77:50" pos:end="77:58"><literal type="string" pos:start="77:50" pos:end="77:58">"\\u%04X"</literal></expr></argument>, <argument pos:start="77:61" pos:end="77:65"><expr pos:start="77:61" pos:end="77:65"><name pos:start="77:61" pos:end="77:65">wchar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:44"><expr pos:start="79:17" pos:end="79:43"><call pos:start="79:17" pos:end="79:43"><name pos:start="79:17" pos:end="79:30">qstring_append</name><argument_list pos:start="79:31" pos:end="79:43">(<argument pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><name pos:start="79:32" pos:end="79:34">str</name></expr></argument>, <argument pos:start="79:37" pos:end="79:42"><expr pos:start="79:37" pos:end="79:42"><name pos:start="79:37" pos:end="79:42">escape</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="81:15" pos:end="147:17">else<block type="pseudo" pos:start="81:20" pos:end="147:17"><block_content pos:start="81:20" pos:end="147:17"> <switch pos:start="81:20" pos:end="147:17">switch <condition pos:start="81:27" pos:end="81:34">(<expr pos:start="81:28" pos:end="81:33"><name pos:start="81:28" pos:end="81:33"><name pos:start="81:28" pos:end="81:30">ptr</name><index pos:start="81:31" pos:end="81:33">[<expr pos:start="81:32" pos:end="81:32"><literal type="number" pos:start="81:32" pos:end="81:32">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="81:36" pos:end="147:17">{<block_content pos:start="83:17" pos:end="145:17">

                <case pos:start="83:17" pos:end="83:26">case <expr pos:start="83:22" pos:end="83:25"><literal type="char" pos:start="83:22" pos:end="83:25">'\"'</literal></expr>:</case>

                    <expr_stmt pos:start="85:21" pos:end="85:48"><expr pos:start="85:21" pos:end="85:47"><call pos:start="85:21" pos:end="85:47"><name pos:start="85:21" pos:end="85:34">qstring_append</name><argument_list pos:start="85:35" pos:end="85:47">(<argument pos:start="85:36" pos:end="85:38"><expr pos:start="85:36" pos:end="85:38"><name pos:start="85:36" pos:end="85:38">str</name></expr></argument>, <argument pos:start="85:41" pos:end="85:46"><expr pos:start="85:41" pos:end="85:46"><literal type="string" pos:start="85:41" pos:end="85:46">"\\\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="87:21" pos:end="87:26">break;</break>

                <case pos:start="89:17" pos:end="89:26">case <expr pos:start="89:22" pos:end="89:25"><literal type="char" pos:start="89:22" pos:end="89:25">'\\'</literal></expr>:</case>

                    <expr_stmt pos:start="91:21" pos:end="91:48"><expr pos:start="91:21" pos:end="91:47"><call pos:start="91:21" pos:end="91:47"><name pos:start="91:21" pos:end="91:34">qstring_append</name><argument_list pos:start="91:35" pos:end="91:47">(<argument pos:start="91:36" pos:end="91:38"><expr pos:start="91:36" pos:end="91:38"><name pos:start="91:36" pos:end="91:38">str</name></expr></argument>, <argument pos:start="91:41" pos:end="91:46"><expr pos:start="91:41" pos:end="91:46"><literal type="string" pos:start="91:41" pos:end="91:46">"\\\\"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="93:21" pos:end="93:26">break;</break>

                <case pos:start="95:17" pos:end="95:26">case <expr pos:start="95:22" pos:end="95:25"><literal type="char" pos:start="95:22" pos:end="95:25">'\b'</literal></expr>:</case>

                    <expr_stmt pos:start="97:21" pos:end="97:47"><expr pos:start="97:21" pos:end="97:46"><call pos:start="97:21" pos:end="97:46"><name pos:start="97:21" pos:end="97:34">qstring_append</name><argument_list pos:start="97:35" pos:end="97:46">(<argument pos:start="97:36" pos:end="97:38"><expr pos:start="97:36" pos:end="97:38"><name pos:start="97:36" pos:end="97:38">str</name></expr></argument>, <argument pos:start="97:41" pos:end="97:45"><expr pos:start="97:41" pos:end="97:45"><literal type="string" pos:start="97:41" pos:end="97:45">"\\b"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="99:21" pos:end="99:26">break;</break>

                <case pos:start="101:17" pos:end="101:26">case <expr pos:start="101:22" pos:end="101:25"><literal type="char" pos:start="101:22" pos:end="101:25">'\f'</literal></expr>:</case>

                    <expr_stmt pos:start="103:21" pos:end="103:47"><expr pos:start="103:21" pos:end="103:46"><call pos:start="103:21" pos:end="103:46"><name pos:start="103:21" pos:end="103:34">qstring_append</name><argument_list pos:start="103:35" pos:end="103:46">(<argument pos:start="103:36" pos:end="103:38"><expr pos:start="103:36" pos:end="103:38"><name pos:start="103:36" pos:end="103:38">str</name></expr></argument>, <argument pos:start="103:41" pos:end="103:45"><expr pos:start="103:41" pos:end="103:45"><literal type="string" pos:start="103:41" pos:end="103:45">"\\f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="105:21" pos:end="105:26">break;</break>

                <case pos:start="107:17" pos:end="107:26">case <expr pos:start="107:22" pos:end="107:25"><literal type="char" pos:start="107:22" pos:end="107:25">'\n'</literal></expr>:</case>

                    <expr_stmt pos:start="109:21" pos:end="109:47"><expr pos:start="109:21" pos:end="109:46"><call pos:start="109:21" pos:end="109:46"><name pos:start="109:21" pos:end="109:34">qstring_append</name><argument_list pos:start="109:35" pos:end="109:46">(<argument pos:start="109:36" pos:end="109:38"><expr pos:start="109:36" pos:end="109:38"><name pos:start="109:36" pos:end="109:38">str</name></expr></argument>, <argument pos:start="109:41" pos:end="109:45"><expr pos:start="109:41" pos:end="109:45"><literal type="string" pos:start="109:41" pos:end="109:45">"\\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="111:21" pos:end="111:26">break;</break>

                <case pos:start="113:17" pos:end="113:26">case <expr pos:start="113:22" pos:end="113:25"><literal type="char" pos:start="113:22" pos:end="113:25">'\r'</literal></expr>:</case>

                    <expr_stmt pos:start="115:21" pos:end="115:47"><expr pos:start="115:21" pos:end="115:46"><call pos:start="115:21" pos:end="115:46"><name pos:start="115:21" pos:end="115:34">qstring_append</name><argument_list pos:start="115:35" pos:end="115:46">(<argument pos:start="115:36" pos:end="115:38"><expr pos:start="115:36" pos:end="115:38"><name pos:start="115:36" pos:end="115:38">str</name></expr></argument>, <argument pos:start="115:41" pos:end="115:45"><expr pos:start="115:41" pos:end="115:45"><literal type="string" pos:start="115:41" pos:end="115:45">"\\r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="117:21" pos:end="117:26">break;</break>

                <case pos:start="119:17" pos:end="119:26">case <expr pos:start="119:22" pos:end="119:25"><literal type="char" pos:start="119:22" pos:end="119:25">'\t'</literal></expr>:</case>

                    <expr_stmt pos:start="121:21" pos:end="121:47"><expr pos:start="121:21" pos:end="121:46"><call pos:start="121:21" pos:end="121:46"><name pos:start="121:21" pos:end="121:34">qstring_append</name><argument_list pos:start="121:35" pos:end="121:46">(<argument pos:start="121:36" pos:end="121:38"><expr pos:start="121:36" pos:end="121:38"><name pos:start="121:36" pos:end="121:38">str</name></expr></argument>, <argument pos:start="121:41" pos:end="121:45"><expr pos:start="121:41" pos:end="121:45"><literal type="string" pos:start="121:41" pos:end="121:45">"\\t"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="123:21" pos:end="123:26">break;</break>

                <default pos:start="125:17" pos:end="125:24">default:</default> <block pos:start="125:26" pos:end="145:17">{<block_content pos:start="127:21" pos:end="143:26">

                    <if_stmt pos:start="127:21" pos:end="141:21"><if pos:start="127:21" pos:end="135:21">if <condition pos:start="127:24" pos:end="127:39">(<expr pos:start="127:25" pos:end="127:38"><name pos:start="127:25" pos:end="127:30"><name pos:start="127:25" pos:end="127:27">ptr</name><index pos:start="127:28" pos:end="127:30">[<expr pos:start="127:29" pos:end="127:29"><literal type="number" pos:start="127:29" pos:end="127:29">0</literal></expr>]</index></name> <operator pos:start="127:32" pos:end="127:33">&lt;=</operator> <literal type="number" pos:start="127:35" pos:end="127:38">0x1F</literal></expr>)</condition> <block pos:start="127:41" pos:end="135:21">{<block_content pos:start="129:25" pos:end="133:52">

                        <decl_stmt pos:start="129:25" pos:end="129:39"><decl pos:start="129:25" pos:end="129:38"><type pos:start="129:25" pos:end="129:28"><name pos:start="129:25" pos:end="129:28">char</name></type> <name pos:start="129:30" pos:end="129:38"><name pos:start="129:30" pos:end="129:35">escape</name><index pos:start="129:36" pos:end="129:38">[<expr pos:start="129:37" pos:end="129:37"><literal type="number" pos:start="129:37" pos:end="129:37">7</literal></expr>]</index></name></decl>;</decl_stmt>

                        <expr_stmt pos:start="131:25" pos:end="131:76"><expr pos:start="131:25" pos:end="131:75"><call pos:start="131:25" pos:end="131:75"><name pos:start="131:25" pos:end="131:32">snprintf</name><argument_list pos:start="131:33" pos:end="131:75">(<argument pos:start="131:34" pos:end="131:39"><expr pos:start="131:34" pos:end="131:39"><name pos:start="131:34" pos:end="131:39">escape</name></expr></argument>, <argument pos:start="131:42" pos:end="131:55"><expr pos:start="131:42" pos:end="131:55"><sizeof pos:start="131:42" pos:end="131:55">sizeof<argument_list pos:start="131:48" pos:end="131:55">(<argument pos:start="131:49" pos:end="131:54"><expr pos:start="131:49" pos:end="131:54"><name pos:start="131:49" pos:end="131:54">escape</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="131:58" pos:end="131:66"><expr pos:start="131:58" pos:end="131:66"><literal type="string" pos:start="131:58" pos:end="131:66">"\\u%04X"</literal></expr></argument>, <argument pos:start="131:69" pos:end="131:74"><expr pos:start="131:69" pos:end="131:74"><name pos:start="131:69" pos:end="131:74"><name pos:start="131:69" pos:end="131:71">ptr</name><index pos:start="131:72" pos:end="131:74">[<expr pos:start="131:73" pos:end="131:73"><literal type="number" pos:start="131:73" pos:end="131:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="133:25" pos:end="133:52"><expr pos:start="133:25" pos:end="133:51"><call pos:start="133:25" pos:end="133:51"><name pos:start="133:25" pos:end="133:38">qstring_append</name><argument_list pos:start="133:39" pos:end="133:51">(<argument pos:start="133:40" pos:end="133:42"><expr pos:start="133:40" pos:end="133:42"><name pos:start="133:40" pos:end="133:42">str</name></expr></argument>, <argument pos:start="133:45" pos:end="133:50"><expr pos:start="133:45" pos:end="133:50"><name pos:start="133:45" pos:end="133:50">escape</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="135:23" pos:end="141:21">else <block pos:start="135:28" pos:end="141:21">{<block_content pos:start="137:25" pos:end="139:49">

                        <decl_stmt pos:start="137:25" pos:end="137:52"><decl pos:start="137:25" pos:end="137:51"><type pos:start="137:25" pos:end="137:28"><name pos:start="137:25" pos:end="137:28">char</name></type> <name pos:start="137:30" pos:end="137:35"><name pos:start="137:30" pos:end="137:32">buf</name><index pos:start="137:33" pos:end="137:35">[<expr pos:start="137:34" pos:end="137:34"><literal type="number" pos:start="137:34" pos:end="137:34">2</literal></expr>]</index></name> <init pos:start="137:37" pos:end="137:51">= <expr pos:start="137:39" pos:end="137:51"><block pos:start="137:39" pos:end="137:51">{ <expr pos:start="137:41" pos:end="137:46"><name pos:start="137:41" pos:end="137:46"><name pos:start="137:41" pos:end="137:43">ptr</name><index pos:start="137:44" pos:end="137:46">[<expr pos:start="137:45" pos:end="137:45"><literal type="number" pos:start="137:45" pos:end="137:45">0</literal></expr>]</index></name></expr>, <expr pos:start="137:49" pos:end="137:49"><literal type="number" pos:start="137:49" pos:end="137:49">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="139:25" pos:end="139:49"><expr pos:start="139:25" pos:end="139:48"><call pos:start="139:25" pos:end="139:48"><name pos:start="139:25" pos:end="139:38">qstring_append</name><argument_list pos:start="139:39" pos:end="139:48">(<argument pos:start="139:40" pos:end="139:42"><expr pos:start="139:40" pos:end="139:42"><name pos:start="139:40" pos:end="139:42">str</name></expr></argument>, <argument pos:start="139:45" pos:end="139:47"><expr pos:start="139:45" pos:end="139:47"><name pos:start="139:45" pos:end="139:47">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="143:21" pos:end="143:26">break;</break>

                </block_content>}</block>

                </block_content>}</block></switch></block_content></block></else></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:18"><expr pos:start="149:13" pos:end="149:17"><name pos:start="149:13" pos:end="149:15">ptr</name><operator pos:start="149:16" pos:end="149:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="153:9" pos:end="153:34"><expr pos:start="153:9" pos:end="153:33"><call pos:start="153:9" pos:end="153:33"><name pos:start="153:9" pos:end="153:22">qstring_append</name><argument_list pos:start="153:23" pos:end="153:33">(<argument pos:start="153:24" pos:end="153:26"><expr pos:start="153:24" pos:end="153:26"><name pos:start="153:24" pos:end="153:26">str</name></expr></argument>, <argument pos:start="153:29" pos:end="153:32"><expr pos:start="153:29" pos:end="153:32"><literal type="string" pos:start="153:29" pos:end="153:32">"\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="155:9" pos:end="155:14">break;</break>

    </block_content>}</block>

    <case pos:start="159:5" pos:end="159:21">case <expr pos:start="159:10" pos:end="159:20"><name pos:start="159:10" pos:end="159:20">QTYPE_QDICT</name></expr>:</case> <block pos:start="159:23" pos:end="195:5">{<block_content pos:start="161:9" pos:end="193:14">

        <decl_stmt pos:start="161:9" pos:end="161:26"><decl pos:start="161:9" pos:end="161:25"><type pos:start="161:9" pos:end="161:23"><name pos:start="161:9" pos:end="161:23">ToJsonIterState</name></type> <name pos:start="161:25" pos:end="161:25">s</name></decl>;</decl_stmt>

        <decl_stmt pos:start="163:9" pos:end="163:43"><decl pos:start="163:9" pos:end="163:42"><type pos:start="163:9" pos:end="163:15"><name pos:start="163:9" pos:end="163:13">QDict</name> <modifier pos:start="163:15" pos:end="163:15">*</modifier></type><name pos:start="163:16" pos:end="163:18">val</name> <init pos:start="163:20" pos:end="163:42">= <expr pos:start="163:22" pos:end="163:42"><call pos:start="163:22" pos:end="163:42"><name pos:start="163:22" pos:end="163:37">qobject_to_qdict</name><argument_list pos:start="163:38" pos:end="163:42">(<argument pos:start="163:39" pos:end="163:41"><expr pos:start="163:39" pos:end="163:41"><name pos:start="163:39" pos:end="163:41">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:20"><expr pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:15"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:10">.</operator><name pos:start="167:11" pos:end="167:15">count</name></name> <operator pos:start="167:17" pos:end="167:17">=</operator> <literal type="number" pos:start="167:19" pos:end="167:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:20"><expr pos:start="169:9" pos:end="169:19"><name pos:start="169:9" pos:end="169:13"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:10">.</operator><name pos:start="169:11" pos:end="169:13">str</name></name> <operator pos:start="169:15" pos:end="169:15">=</operator> <name pos:start="169:17" pos:end="169:19">str</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:30"><expr pos:start="171:9" pos:end="171:29"><name pos:start="171:9" pos:end="171:16"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:10">.</operator><name pos:start="171:11" pos:end="171:16">indent</name></name> <operator pos:start="171:18" pos:end="171:18">=</operator> <name pos:start="171:20" pos:end="171:25">indent</name> <operator pos:start="171:27" pos:end="171:27">+</operator> <literal type="number" pos:start="171:29" pos:end="171:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:26"><expr pos:start="173:9" pos:end="173:25"><name pos:start="173:9" pos:end="173:16"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:10">.</operator><name pos:start="173:11" pos:end="173:16">pretty</name></name> <operator pos:start="173:18" pos:end="173:18">=</operator> <name pos:start="173:20" pos:end="173:25">pretty</name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:33"><expr pos:start="175:9" pos:end="175:32"><call pos:start="175:9" pos:end="175:32"><name pos:start="175:9" pos:end="175:22">qstring_append</name><argument_list pos:start="175:23" pos:end="175:32">(<argument pos:start="175:24" pos:end="175:26"><expr pos:start="175:24" pos:end="175:26"><name pos:start="175:24" pos:end="175:26">str</name></expr></argument>, <argument pos:start="175:29" pos:end="175:31"><expr pos:start="175:29" pos:end="175:31"><literal type="string" pos:start="175:29" pos:end="175:31">"{"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:47"><expr pos:start="177:9" pos:end="177:46"><call pos:start="177:9" pos:end="177:46"><name pos:start="177:9" pos:end="177:18">qdict_iter</name><argument_list pos:start="177:19" pos:end="177:46">(<argument pos:start="177:20" pos:end="177:22"><expr pos:start="177:20" pos:end="177:22"><name pos:start="177:20" pos:end="177:22">val</name></expr></argument>, <argument pos:start="177:25" pos:end="177:41"><expr pos:start="177:25" pos:end="177:41"><name pos:start="177:25" pos:end="177:41">to_json_dict_iter</name></expr></argument>, <argument pos:start="177:44" pos:end="177:45"><expr pos:start="177:44" pos:end="177:45"><operator pos:start="177:44" pos:end="177:44">&amp;</operator><name pos:start="177:45" pos:end="177:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="189:9"><if pos:start="179:9" pos:end="189:9">if <condition pos:start="179:12" pos:end="179:19">(<expr pos:start="179:13" pos:end="179:18"><name pos:start="179:13" pos:end="179:18">pretty</name></expr>)</condition> <block pos:start="179:21" pos:end="189:9">{<block_content pos:start="181:13" pos:end="187:44">

            <decl_stmt pos:start="181:13" pos:end="181:18"><decl pos:start="181:13" pos:end="181:17"><type pos:start="181:13" pos:end="181:15"><name pos:start="181:13" pos:end="181:15">int</name></type> <name pos:start="181:17" pos:end="181:17">j</name></decl>;</decl_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:38"><expr pos:start="183:13" pos:end="183:37"><call pos:start="183:13" pos:end="183:37"><name pos:start="183:13" pos:end="183:26">qstring_append</name><argument_list pos:start="183:27" pos:end="183:37">(<argument pos:start="183:28" pos:end="183:30"><expr pos:start="183:28" pos:end="183:30"><name pos:start="183:28" pos:end="183:30">str</name></expr></argument>, <argument pos:start="183:33" pos:end="183:36"><expr pos:start="183:33" pos:end="183:36"><literal type="string" pos:start="183:33" pos:end="183:36">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="185:13" pos:end="187:44">for <control pos:start="185:17" pos:end="185:42">(<init pos:start="185:18" pos:end="185:24"><expr pos:start="185:18" pos:end="185:22"><name pos:start="185:18" pos:end="185:18">j</name> <operator pos:start="185:20" pos:end="185:20">=</operator> <literal type="number" pos:start="185:22" pos:end="185:22">0</literal></expr> ;</init> <condition pos:start="185:26" pos:end="185:37"><expr pos:start="185:26" pos:end="185:35"><name pos:start="185:26" pos:end="185:26">j</name> <operator pos:start="185:28" pos:end="185:28">&lt;</operator> <name pos:start="185:30" pos:end="185:35">indent</name></expr> ;</condition> <incr pos:start="185:39" pos:end="185:41"><expr pos:start="185:39" pos:end="185:41"><name pos:start="185:39" pos:end="185:39">j</name><operator pos:start="185:40" pos:end="185:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="187:17" pos:end="187:44"><block_content pos:start="187:17" pos:end="187:44">

                <expr_stmt pos:start="187:17" pos:end="187:44"><expr pos:start="187:17" pos:end="187:43"><call pos:start="187:17" pos:end="187:43"><name pos:start="187:17" pos:end="187:30">qstring_append</name><argument_list pos:start="187:31" pos:end="187:43">(<argument pos:start="187:32" pos:end="187:34"><expr pos:start="187:32" pos:end="187:34"><name pos:start="187:32" pos:end="187:34">str</name></expr></argument>, <argument pos:start="187:37" pos:end="187:42"><expr pos:start="187:37" pos:end="187:42"><literal type="string" pos:start="187:37" pos:end="187:42">"    "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:33"><expr pos:start="191:9" pos:end="191:32"><call pos:start="191:9" pos:end="191:32"><name pos:start="191:9" pos:end="191:22">qstring_append</name><argument_list pos:start="191:23" pos:end="191:32">(<argument pos:start="191:24" pos:end="191:26"><expr pos:start="191:24" pos:end="191:26"><name pos:start="191:24" pos:end="191:26">str</name></expr></argument>, <argument pos:start="191:29" pos:end="191:31"><expr pos:start="191:29" pos:end="191:31"><literal type="string" pos:start="191:29" pos:end="191:31">"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    </block_content>}</block>

    <case pos:start="197:5" pos:end="197:21">case <expr pos:start="197:10" pos:end="197:20"><name pos:start="197:10" pos:end="197:20">QTYPE_QLIST</name></expr>:</case> <block pos:start="197:23" pos:end="233:5">{<block_content pos:start="199:9" pos:end="231:14">

        <decl_stmt pos:start="199:9" pos:end="199:26"><decl pos:start="199:9" pos:end="199:25"><type pos:start="199:9" pos:end="199:23"><name pos:start="199:9" pos:end="199:23">ToJsonIterState</name></type> <name pos:start="199:25" pos:end="199:25">s</name></decl>;</decl_stmt>

        <decl_stmt pos:start="201:9" pos:end="201:43"><decl pos:start="201:9" pos:end="201:42"><type pos:start="201:9" pos:end="201:15"><name pos:start="201:9" pos:end="201:13">QList</name> <modifier pos:start="201:15" pos:end="201:15">*</modifier></type><name pos:start="201:16" pos:end="201:18">val</name> <init pos:start="201:20" pos:end="201:42">= <expr pos:start="201:22" pos:end="201:42"><call pos:start="201:22" pos:end="201:42"><name pos:start="201:22" pos:end="201:37">qobject_to_qlist</name><argument_list pos:start="201:38" pos:end="201:42">(<argument pos:start="201:39" pos:end="201:41"><expr pos:start="201:39" pos:end="201:41"><name pos:start="201:39" pos:end="201:41">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="205:9" pos:end="205:20"><expr pos:start="205:9" pos:end="205:19"><name pos:start="205:9" pos:end="205:15"><name pos:start="205:9" pos:end="205:9">s</name><operator pos:start="205:10" pos:end="205:10">.</operator><name pos:start="205:11" pos:end="205:15">count</name></name> <operator pos:start="205:17" pos:end="205:17">=</operator> <literal type="number" pos:start="205:19" pos:end="205:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:20"><expr pos:start="207:9" pos:end="207:19"><name pos:start="207:9" pos:end="207:13"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:10">.</operator><name pos:start="207:11" pos:end="207:13">str</name></name> <operator pos:start="207:15" pos:end="207:15">=</operator> <name pos:start="207:17" pos:end="207:19">str</name></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:30"><expr pos:start="209:9" pos:end="209:29"><name pos:start="209:9" pos:end="209:16"><name pos:start="209:9" pos:end="209:9">s</name><operator pos:start="209:10" pos:end="209:10">.</operator><name pos:start="209:11" pos:end="209:16">indent</name></name> <operator pos:start="209:18" pos:end="209:18">=</operator> <name pos:start="209:20" pos:end="209:25">indent</name> <operator pos:start="209:27" pos:end="209:27">+</operator> <literal type="number" pos:start="209:29" pos:end="209:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:26"><expr pos:start="211:9" pos:end="211:25"><name pos:start="211:9" pos:end="211:16"><name pos:start="211:9" pos:end="211:9">s</name><operator pos:start="211:10" pos:end="211:10">.</operator><name pos:start="211:11" pos:end="211:16">pretty</name></name> <operator pos:start="211:18" pos:end="211:18">=</operator> <name pos:start="211:20" pos:end="211:25">pretty</name></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:33"><expr pos:start="213:9" pos:end="213:32"><call pos:start="213:9" pos:end="213:32"><name pos:start="213:9" pos:end="213:22">qstring_append</name><argument_list pos:start="213:23" pos:end="213:32">(<argument pos:start="213:24" pos:end="213:26"><expr pos:start="213:24" pos:end="213:26"><name pos:start="213:24" pos:end="213:26">str</name></expr></argument>, <argument pos:start="213:29" pos:end="213:31"><expr pos:start="213:29" pos:end="213:31"><literal type="string" pos:start="213:29" pos:end="213:31">"["</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:55"><expr pos:start="215:9" pos:end="215:54"><call pos:start="215:9" pos:end="215:54"><name pos:start="215:9" pos:end="215:18">qlist_iter</name><argument_list pos:start="215:19" pos:end="215:54">(<argument pos:start="215:20" pos:end="215:22"><expr pos:start="215:20" pos:end="215:22"><name pos:start="215:20" pos:end="215:22">val</name></expr></argument>, <argument pos:start="215:25" pos:end="215:49"><expr pos:start="215:25" pos:end="215:49"><operator pos:start="215:25" pos:end="215:25">(</operator><name pos:start="215:26" pos:end="215:29">void</name> <operator pos:start="215:31" pos:end="215:31">*</operator><operator pos:start="215:32" pos:end="215:32">)</operator><name pos:start="215:33" pos:end="215:49">to_json_list_iter</name></expr></argument>, <argument pos:start="215:52" pos:end="215:53"><expr pos:start="215:52" pos:end="215:53"><operator pos:start="215:52" pos:end="215:52">&amp;</operator><name pos:start="215:53" pos:end="215:53">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="217:9" pos:end="227:9"><if pos:start="217:9" pos:end="227:9">if <condition pos:start="217:12" pos:end="217:19">(<expr pos:start="217:13" pos:end="217:18"><name pos:start="217:13" pos:end="217:18">pretty</name></expr>)</condition> <block pos:start="217:21" pos:end="227:9">{<block_content pos:start="219:13" pos:end="225:44">

            <decl_stmt pos:start="219:13" pos:end="219:18"><decl pos:start="219:13" pos:end="219:17"><type pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:15">int</name></type> <name pos:start="219:17" pos:end="219:17">j</name></decl>;</decl_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:38"><expr pos:start="221:13" pos:end="221:37"><call pos:start="221:13" pos:end="221:37"><name pos:start="221:13" pos:end="221:26">qstring_append</name><argument_list pos:start="221:27" pos:end="221:37">(<argument pos:start="221:28" pos:end="221:30"><expr pos:start="221:28" pos:end="221:30"><name pos:start="221:28" pos:end="221:30">str</name></expr></argument>, <argument pos:start="221:33" pos:end="221:36"><expr pos:start="221:33" pos:end="221:36"><literal type="string" pos:start="221:33" pos:end="221:36">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="223:13" pos:end="225:44">for <control pos:start="223:17" pos:end="223:42">(<init pos:start="223:18" pos:end="223:24"><expr pos:start="223:18" pos:end="223:22"><name pos:start="223:18" pos:end="223:18">j</name> <operator pos:start="223:20" pos:end="223:20">=</operator> <literal type="number" pos:start="223:22" pos:end="223:22">0</literal></expr> ;</init> <condition pos:start="223:26" pos:end="223:37"><expr pos:start="223:26" pos:end="223:35"><name pos:start="223:26" pos:end="223:26">j</name> <operator pos:start="223:28" pos:end="223:28">&lt;</operator> <name pos:start="223:30" pos:end="223:35">indent</name></expr> ;</condition> <incr pos:start="223:39" pos:end="223:41"><expr pos:start="223:39" pos:end="223:41"><name pos:start="223:39" pos:end="223:39">j</name><operator pos:start="223:40" pos:end="223:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="225:17" pos:end="225:44"><block_content pos:start="225:17" pos:end="225:44">

                <expr_stmt pos:start="225:17" pos:end="225:44"><expr pos:start="225:17" pos:end="225:43"><call pos:start="225:17" pos:end="225:43"><name pos:start="225:17" pos:end="225:30">qstring_append</name><argument_list pos:start="225:31" pos:end="225:43">(<argument pos:start="225:32" pos:end="225:34"><expr pos:start="225:32" pos:end="225:34"><name pos:start="225:32" pos:end="225:34">str</name></expr></argument>, <argument pos:start="225:37" pos:end="225:42"><expr pos:start="225:37" pos:end="225:42"><literal type="string" pos:start="225:37" pos:end="225:42">"    "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:33"><expr pos:start="229:9" pos:end="229:32"><call pos:start="229:9" pos:end="229:32"><name pos:start="229:9" pos:end="229:22">qstring_append</name><argument_list pos:start="229:23" pos:end="229:32">(<argument pos:start="229:24" pos:end="229:26"><expr pos:start="229:24" pos:end="229:26"><name pos:start="229:24" pos:end="229:26">str</name></expr></argument>, <argument pos:start="229:29" pos:end="229:31"><expr pos:start="229:29" pos:end="229:31"><literal type="string" pos:start="229:29" pos:end="229:31">"]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    </block_content>}</block>

    <case pos:start="235:5" pos:end="235:22">case <expr pos:start="235:10" pos:end="235:21"><name pos:start="235:10" pos:end="235:21">QTYPE_QFLOAT</name></expr>:</case> <block pos:start="235:24" pos:end="271:5">{<block_content pos:start="237:9" pos:end="269:14">

        <decl_stmt pos:start="237:9" pos:end="237:45"><decl pos:start="237:9" pos:end="237:44"><type pos:start="237:9" pos:end="237:16"><name pos:start="237:9" pos:end="237:14">QFloat</name> <modifier pos:start="237:16" pos:end="237:16">*</modifier></type><name pos:start="237:17" pos:end="237:19">val</name> <init pos:start="237:21" pos:end="237:44">= <expr pos:start="237:23" pos:end="237:44"><call pos:start="237:23" pos:end="237:44"><name pos:start="237:23" pos:end="237:39">qobject_to_qfloat</name><argument_list pos:start="237:40" pos:end="237:44">(<argument pos:start="237:41" pos:end="237:43"><expr pos:start="237:41" pos:end="237:43"><name pos:start="237:41" pos:end="237:43">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="239:9" pos:end="239:26"><decl pos:start="239:9" pos:end="239:25"><type pos:start="239:9" pos:end="239:12"><name pos:start="239:9" pos:end="239:12">char</name></type> <name pos:start="239:14" pos:end="239:25"><name pos:start="239:14" pos:end="239:19">buffer</name><index pos:start="239:20" pos:end="239:25">[<expr pos:start="239:21" pos:end="239:24"><literal type="number" pos:start="239:21" pos:end="239:24">1024</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="241:9" pos:end="241:16"><decl pos:start="241:9" pos:end="241:15"><type pos:start="241:9" pos:end="241:11"><name pos:start="241:9" pos:end="241:11">int</name></type> <name pos:start="241:13" pos:end="241:15">len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="245:9" pos:end="245:77"><expr pos:start="245:9" pos:end="245:76"><name pos:start="245:9" pos:end="245:11">len</name> <operator pos:start="245:13" pos:end="245:13">=</operator> <call pos:start="245:15" pos:end="245:76"><name pos:start="245:15" pos:end="245:22">snprintf</name><argument_list pos:start="245:23" pos:end="245:76">(<argument pos:start="245:24" pos:end="245:29"><expr pos:start="245:24" pos:end="245:29"><name pos:start="245:24" pos:end="245:29">buffer</name></expr></argument>, <argument pos:start="245:32" pos:end="245:45"><expr pos:start="245:32" pos:end="245:45"><sizeof pos:start="245:32" pos:end="245:45">sizeof<argument_list pos:start="245:38" pos:end="245:45">(<argument pos:start="245:39" pos:end="245:44"><expr pos:start="245:39" pos:end="245:44"><name pos:start="245:39" pos:end="245:44">buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="245:48" pos:end="245:51"><expr pos:start="245:48" pos:end="245:51"><literal type="string" pos:start="245:48" pos:end="245:51">"%f"</literal></expr></argument>, <argument pos:start="245:54" pos:end="245:75"><expr pos:start="245:54" pos:end="245:75"><call pos:start="245:54" pos:end="245:75"><name pos:start="245:54" pos:end="245:70">qfloat_get_double</name><argument_list pos:start="245:71" pos:end="245:75">(<argument pos:start="245:72" pos:end="245:74"><expr pos:start="245:72" pos:end="245:74"><name pos:start="245:72" pos:end="245:74">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="247:9" pos:end="251:9">while <condition pos:start="247:15" pos:end="247:49">(<expr pos:start="247:16" pos:end="247:48"><name pos:start="247:16" pos:end="247:18">len</name> <operator pos:start="247:20" pos:end="247:20">&gt;</operator> <literal type="number" pos:start="247:22" pos:end="247:22">0</literal> <operator pos:start="247:24" pos:end="247:25">&amp;&amp;</operator> <name pos:start="247:27" pos:end="247:41"><name pos:start="247:27" pos:end="247:32">buffer</name><index pos:start="247:33" pos:end="247:41">[<expr pos:start="247:34" pos:end="247:40"><name pos:start="247:34" pos:end="247:36">len</name> <operator pos:start="247:38" pos:end="247:38">-</operator> <literal type="number" pos:start="247:40" pos:end="247:40">1</literal></expr>]</index></name> <operator pos:start="247:43" pos:end="247:44">==</operator> <literal type="char" pos:start="247:46" pos:end="247:48">'0'</literal></expr>)</condition> <block pos:start="247:51" pos:end="251:9">{<block_content pos:start="249:13" pos:end="249:18">

            <expr_stmt pos:start="249:13" pos:end="249:18"><expr pos:start="249:13" pos:end="249:17"><name pos:start="249:13" pos:end="249:15">len</name><operator pos:start="249:16" pos:end="249:17">--</operator></expr>;</expr_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="255:9" pos:end="263:9"><if pos:start="255:9" pos:end="259:9">if <condition pos:start="255:12" pos:end="255:42">(<expr pos:start="255:13" pos:end="255:41"><name pos:start="255:13" pos:end="255:15">len</name> <operator pos:start="255:17" pos:end="255:18">&amp;&amp;</operator> <name pos:start="255:20" pos:end="255:34"><name pos:start="255:20" pos:end="255:25">buffer</name><index pos:start="255:26" pos:end="255:34">[<expr pos:start="255:27" pos:end="255:33"><name pos:start="255:27" pos:end="255:29">len</name> <operator pos:start="255:31" pos:end="255:31">-</operator> <literal type="number" pos:start="255:33" pos:end="255:33">1</literal></expr>]</index></name> <operator pos:start="255:36" pos:end="255:37">==</operator> <literal type="char" pos:start="255:39" pos:end="255:41">'.'</literal></expr>)</condition> <block pos:start="255:44" pos:end="259:9">{<block_content pos:start="257:13" pos:end="257:32">

            <expr_stmt pos:start="257:13" pos:end="257:32"><expr pos:start="257:13" pos:end="257:31"><name pos:start="257:13" pos:end="257:27"><name pos:start="257:13" pos:end="257:18">buffer</name><index pos:start="257:19" pos:end="257:27">[<expr pos:start="257:20" pos:end="257:26"><name pos:start="257:20" pos:end="257:22">len</name> <operator pos:start="257:24" pos:end="257:24">-</operator> <literal type="number" pos:start="257:26" pos:end="257:26">1</literal></expr>]</index></name> <operator pos:start="257:29" pos:end="257:29">=</operator> <literal type="number" pos:start="257:31" pos:end="257:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="259:11" pos:end="263:9">else <block pos:start="259:16" pos:end="263:9">{<block_content pos:start="261:13" pos:end="261:28">

            <expr_stmt pos:start="261:13" pos:end="261:28"><expr pos:start="261:13" pos:end="261:27"><name pos:start="261:13" pos:end="261:23"><name pos:start="261:13" pos:end="261:18">buffer</name><index pos:start="261:19" pos:end="261:23">[<expr pos:start="261:20" pos:end="261:22"><name pos:start="261:20" pos:end="261:22">len</name></expr>]</index></name> <operator pos:start="261:25" pos:end="261:25">=</operator> <literal type="number" pos:start="261:27" pos:end="261:27">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        

        <expr_stmt pos:start="267:9" pos:end="267:36"><expr pos:start="267:9" pos:end="267:35"><call pos:start="267:9" pos:end="267:35"><name pos:start="267:9" pos:end="267:22">qstring_append</name><argument_list pos:start="267:23" pos:end="267:35">(<argument pos:start="267:24" pos:end="267:26"><expr pos:start="267:24" pos:end="267:26"><name pos:start="267:24" pos:end="267:26">str</name></expr></argument>, <argument pos:start="267:29" pos:end="267:34"><expr pos:start="267:29" pos:end="267:34"><name pos:start="267:29" pos:end="267:34">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="269:9" pos:end="269:14">break;</break>

    </block_content>}</block>

    <case pos:start="273:5" pos:end="273:21">case <expr pos:start="273:10" pos:end="273:20"><name pos:start="273:10" pos:end="273:20">QTYPE_QBOOL</name></expr>:</case> <block pos:start="273:23" pos:end="291:5">{<block_content pos:start="275:9" pos:end="289:14">

        <decl_stmt pos:start="275:9" pos:end="275:43"><decl pos:start="275:9" pos:end="275:42"><type pos:start="275:9" pos:end="275:15"><name pos:start="275:9" pos:end="275:13">QBool</name> <modifier pos:start="275:15" pos:end="275:15">*</modifier></type><name pos:start="275:16" pos:end="275:18">val</name> <init pos:start="275:20" pos:end="275:42">= <expr pos:start="275:22" pos:end="275:42"><call pos:start="275:22" pos:end="275:42"><name pos:start="275:22" pos:end="275:37">qobject_to_qbool</name><argument_list pos:start="275:38" pos:end="275:42">(<argument pos:start="275:39" pos:end="275:41"><expr pos:start="275:39" pos:end="275:41"><name pos:start="275:39" pos:end="275:41">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="279:9" pos:end="287:9"><if pos:start="279:9" pos:end="283:9">if <condition pos:start="279:12" pos:end="279:31">(<expr pos:start="279:13" pos:end="279:30"><call pos:start="279:13" pos:end="279:30"><name pos:start="279:13" pos:end="279:25">qbool_get_int</name><argument_list pos:start="279:26" pos:end="279:30">(<argument pos:start="279:27" pos:end="279:29"><expr pos:start="279:27" pos:end="279:29"><name pos:start="279:27" pos:end="279:29">val</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="279:33" pos:end="283:9">{<block_content pos:start="281:13" pos:end="281:40">

            <expr_stmt pos:start="281:13" pos:end="281:40"><expr pos:start="281:13" pos:end="281:39"><call pos:start="281:13" pos:end="281:39"><name pos:start="281:13" pos:end="281:26">qstring_append</name><argument_list pos:start="281:27" pos:end="281:39">(<argument pos:start="281:28" pos:end="281:30"><expr pos:start="281:28" pos:end="281:30"><name pos:start="281:28" pos:end="281:30">str</name></expr></argument>, <argument pos:start="281:33" pos:end="281:38"><expr pos:start="281:33" pos:end="281:38"><literal type="string" pos:start="281:33" pos:end="281:38">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="283:11" pos:end="287:9">else <block pos:start="283:16" pos:end="287:9">{<block_content pos:start="285:13" pos:end="285:41">

            <expr_stmt pos:start="285:13" pos:end="285:41"><expr pos:start="285:13" pos:end="285:40"><call pos:start="285:13" pos:end="285:40"><name pos:start="285:13" pos:end="285:26">qstring_append</name><argument_list pos:start="285:27" pos:end="285:40">(<argument pos:start="285:28" pos:end="285:30"><expr pos:start="285:28" pos:end="285:30"><name pos:start="285:28" pos:end="285:30">str</name></expr></argument>, <argument pos:start="285:33" pos:end="285:39"><expr pos:start="285:33" pos:end="285:39"><literal type="string" pos:start="285:33" pos:end="285:39">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="289:9" pos:end="289:14">break;</break>

    </block_content>}</block>

    <case pos:start="293:5" pos:end="293:22">case <expr pos:start="293:10" pos:end="293:21"><name pos:start="293:10" pos:end="293:21">QTYPE_QERROR</name></expr>:</case>

        <comment type="block" pos:start="295:9" pos:end="295:44">/* XXX: should QError be emitted? */</comment>

    <case pos:start="297:5" pos:end="297:20">case <expr pos:start="297:10" pos:end="297:19"><name pos:start="297:10" pos:end="297:19">QTYPE_NONE</name></expr>:</case>

        <break pos:start="299:9" pos:end="299:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
