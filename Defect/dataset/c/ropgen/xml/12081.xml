<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12081.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">swf_read_header</name><parameter_list pos:start="1:27" pos:end="1:70">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:69"><decl pos:start="1:48" pos:end="1:69"><type pos:start="1:48" pos:end="1:69"><name pos:start="1:48" pos:end="1:65">AVFormatParameters</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">pb</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">nbits</name></decl>, <decl pos:start="7:16" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:18">len</name></decl>, <decl pos:start="7:21" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:30">frame_rate</name></decl>, <decl pos:start="7:33" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:33" pos:end="7:35">tag</name></decl>, <decl pos:start="7:38" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:38" pos:end="7:38">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:65">(<expr pos:start="13:9" pos:end="13:64"><operator pos:start="13:9" pos:end="13:9">(</operator><call pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:17">get_be32</name><argument_list pos:start="13:18" pos:end="13:21">(<argument pos:start="13:19" pos:end="13:20"><expr pos:start="13:19" pos:end="13:20"><name pos:start="13:19" pos:end="13:20">pb</name></expr></argument>)</argument_list></call> <operator pos:start="13:23" pos:end="13:23">&amp;</operator> <literal type="number" pos:start="13:25" pos:end="13:34">0xffffff00</literal><operator pos:start="13:35" pos:end="13:35">)</operator> <operator pos:start="13:37" pos:end="13:38">!=</operator> <call pos:start="13:40" pos:end="13:64"><name pos:start="13:40" pos:end="13:46">MKBETAG</name><argument_list pos:start="13:47" pos:end="13:64">(<argument pos:start="13:48" pos:end="13:50"><expr pos:start="13:48" pos:end="13:50"><literal type="char" pos:start="13:48" pos:end="13:50">'F'</literal></expr></argument>, <argument pos:start="13:53" pos:end="13:55"><expr pos:start="13:53" pos:end="13:55"><literal type="char" pos:start="13:53" pos:end="13:55">'W'</literal></expr></argument>, <argument pos:start="13:58" pos:end="13:60"><expr pos:start="13:58" pos:end="13:60"><literal type="char" pos:start="13:58" pos:end="13:60">'S'</literal></expr></argument>, <argument pos:start="13:63" pos:end="13:63"><expr pos:start="13:63" pos:end="13:63"><literal type="number" pos:start="13:63" pos:end="13:63">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:19">EIO</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><call pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">get_le32</name><argument_list pos:start="17:13" pos:end="17:16">(<argument pos:start="17:14" pos:end="17:15"><expr pos:start="17:14" pos:end="17:15"><name pos:start="17:14" pos:end="17:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:29">/* skip rectangle size */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:9">nbits</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:20">get_byte</name><argument_list pos:start="21:21" pos:end="21:24">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">pb</name></expr></argument>)</argument_list></call> <operator pos:start="21:26" pos:end="21:27">&gt;&gt;</operator> <literal type="number" pos:start="21:29" pos:end="21:29">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:7">len</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <operator pos:start="23:11" pos:end="23:11">(</operator><literal type="number" pos:start="23:12" pos:end="23:12">4</literal> <operator pos:start="23:14" pos:end="23:14">*</operator> <name pos:start="23:16" pos:end="23:20">nbits</name> <operator pos:start="23:22" pos:end="23:22">-</operator> <literal type="number" pos:start="23:24" pos:end="23:26">3</literal> <operator pos:start="23:26" pos:end="23:26">+</operator> <literal type="number" pos:start="23:28" pos:end="23:28">7</literal><operator pos:start="23:29" pos:end="23:29">)</operator> <operator pos:start="23:31" pos:end="23:31">/</operator> <literal type="number" pos:start="23:33" pos:end="23:33">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><call pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:13">url_fskip</name><argument_list pos:start="25:14" pos:end="25:22">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>, <argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:14">frame_rate</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:29"><name pos:start="27:18" pos:end="27:25">get_le16</name><argument_list pos:start="27:26" pos:end="27:29">(<argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><name pos:start="27:27" pos:end="27:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><call pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:12">get_le16</name><argument_list pos:start="29:13" pos:end="29:16">(<argument pos:start="29:14" pos:end="29:15"><expr pos:start="29:14" pos:end="29:15"><name pos:start="29:14" pos:end="29:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:19" pos:end="29:35">/* frame count */</comment>



    <for pos:start="33:5" pos:end="123:5">for<control pos:start="33:8" pos:end="33:11">(<init pos:start="33:9" pos:end="33:9">;</init><condition pos:start="33:10" pos:end="33:10">;</condition><incr/>)</control> <block pos:start="33:13" pos:end="123:5">{<block_content pos:start="35:9" pos:end="121:9">

        <expr_stmt pos:start="35:9" pos:end="35:36"><expr pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:11">tag</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:35"><name pos:start="35:15" pos:end="35:25">get_swf_tag</name><argument_list pos:start="35:26" pos:end="35:35">(<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">pb</name></expr></argument>, <argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><operator pos:start="35:31" pos:end="35:31">&amp;</operator><name pos:start="35:32" pos:end="35:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">tag</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition> <block pos:start="37:22" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:24">

            <expr_stmt pos:start="39:13" pos:end="39:59"><expr pos:start="39:13" pos:end="39:58"><call pos:start="39:13" pos:end="39:58"><name pos:start="39:13" pos:end="39:19">fprintf</name><argument_list pos:start="39:20" pos:end="39:58">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26">stderr</name></expr></argument>, <argument pos:start="39:29" pos:end="39:57"><expr pos:start="39:29" pos:end="39:57"><literal type="string" pos:start="39:29" pos:end="39:57">"No streaming found in SWF\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:24">return <expr pos:start="41:20" pos:end="41:23"><operator pos:start="41:20" pos:end="41:20">-</operator><name pos:start="41:21" pos:end="41:23">EIO</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="121:9"><if pos:start="45:9" pos:end="117:9">if <condition pos:start="45:12" pos:end="45:34">(<expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:15">tag</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <name pos:start="45:20" pos:end="45:33">TAG_STREAMHEAD</name></expr>)</condition> <block pos:start="45:36" pos:end="117:9">{<block_content pos:start="49:13" pos:end="115:13">

            <comment type="block" pos:start="47:13" pos:end="47:33">/* streaming found */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:25"><expr pos:start="49:13" pos:end="49:24"><call pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:20">get_byte</name><argument_list pos:start="49:21" pos:end="49:24">(<argument pos:start="49:22" pos:end="49:23"><expr pos:start="49:22" pos:end="49:23"><name pos:start="49:22" pos:end="49:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:29"><expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:13">v</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:24">get_byte</name><argument_list pos:start="51:25" pos:end="51:28">(<argument pos:start="51:26" pos:end="51:27"><expr pos:start="51:26" pos:end="51:27"><name pos:start="51:26" pos:end="51:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:25"><expr pos:start="53:13" pos:end="53:24"><call pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:20">get_le16</name><argument_list pos:start="53:21" pos:end="53:24">(<argument pos:start="53:22" pos:end="53:23"><expr pos:start="53:22" pos:end="53:23"><name pos:start="53:22" pos:end="53:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="57:36"><if pos:start="55:13" pos:end="57:36">if <condition pos:start="55:16" pos:end="55:23">(<expr pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:19">len</name><operator pos:start="55:20" pos:end="55:21">!=</operator><literal type="number" pos:start="55:22" pos:end="55:22">4</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:36"><block_content pos:start="57:17" pos:end="57:36">

                <expr_stmt pos:start="57:17" pos:end="57:36"><expr pos:start="57:17" pos:end="57:35"><call pos:start="57:17" pos:end="57:35"><name pos:start="57:17" pos:end="57:25">url_fskip</name><argument_list pos:start="57:26" pos:end="57:35">(<argument pos:start="57:27" pos:end="57:28"><expr pos:start="57:27" pos:end="57:28"><name pos:start="57:27" pos:end="57:28">pb</name></expr></argument>,<argument pos:start="57:30" pos:end="57:34"><expr pos:start="57:30" pos:end="57:34"><name pos:start="57:30" pos:end="57:32">len</name><operator pos:start="57:33" pos:end="57:33">-</operator><literal type="number" pos:start="57:34" pos:end="57:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="59:13" pos:end="59:44">/* if mp3 streaming found, OK */</comment>

            <if_stmt pos:start="61:13" pos:end="115:13"><if pos:start="61:13" pos:end="115:13">if <condition pos:start="61:16" pos:end="61:32">(<expr pos:start="61:17" pos:end="61:31"><operator pos:start="61:17" pos:end="61:17">(</operator><name pos:start="61:18" pos:end="61:18">v</name> <operator pos:start="61:20" pos:end="61:20">&amp;</operator> <literal type="number" pos:start="61:22" pos:end="61:25">0x20</literal><operator pos:start="61:26" pos:end="61:26">)</operator> <operator pos:start="61:28" pos:end="61:29">!=</operator> <literal type="number" pos:start="61:31" pos:end="61:31">0</literal></expr>)</condition> <block pos:start="61:34" pos:end="115:13">{<block_content pos:start="63:17" pos:end="113:22">

                <expr_stmt pos:start="63:17" pos:end="63:41"><expr pos:start="63:17" pos:end="63:40"><name pos:start="63:17" pos:end="63:18">st</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:40"><name pos:start="63:22" pos:end="63:34">av_new_stream</name><argument_list pos:start="63:35" pos:end="63:40">(<argument pos:start="63:36" pos:end="63:36"><expr pos:start="63:36" pos:end="63:36"><name pos:start="63:36" pos:end="63:36">s</name></expr></argument>, <argument pos:start="63:39" pos:end="63:39"><expr pos:start="63:39" pos:end="63:39"><literal type="number" pos:start="63:39" pos:end="63:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="65:17" pos:end="67:35"><if pos:start="65:17" pos:end="67:35">if <condition pos:start="65:20" pos:end="65:24">(<expr pos:start="65:21" pos:end="65:23"><operator pos:start="65:21" pos:end="65:21">!</operator><name pos:start="65:22" pos:end="65:23">st</name></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:35"><block_content pos:start="67:21" pos:end="67:35">

                    <return pos:start="67:21" pos:end="67:35">return <expr pos:start="67:28" pos:end="67:34"><operator pos:start="67:28" pos:end="67:28">-</operator><name pos:start="67:29" pos:end="67:34">ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>



                <if_stmt pos:start="71:17" pos:end="77:43"><if pos:start="71:17" pos:end="73:43">if <condition pos:start="71:20" pos:end="71:29">(<expr pos:start="71:21" pos:end="71:28"><name pos:start="71:21" pos:end="71:21">v</name> <operator pos:start="71:23" pos:end="71:23">&amp;</operator> <literal type="number" pos:start="71:25" pos:end="71:28">0x01</literal></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:43"><block_content pos:start="73:21" pos:end="73:43">

                    <expr_stmt pos:start="73:21" pos:end="73:43"><expr pos:start="73:21" pos:end="73:42"><name pos:start="73:21" pos:end="73:38"><name pos:start="73:21" pos:end="73:22">st</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:29">codec</name><operator pos:start="73:30" pos:end="73:30">.</operator><name pos:start="73:31" pos:end="73:38">channels</name></name> <operator pos:start="73:40" pos:end="73:40">=</operator> <literal type="number" pos:start="73:42" pos:end="73:42">2</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="75:17" pos:end="77:43">else<block type="pseudo" pos:start="77:21" pos:end="77:43"><block_content pos:start="77:21" pos:end="77:43">

                    <expr_stmt pos:start="77:21" pos:end="77:43"><expr pos:start="77:21" pos:end="77:42"><name pos:start="77:21" pos:end="77:38"><name pos:start="77:21" pos:end="77:22">st</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:29">codec</name><operator pos:start="77:30" pos:end="77:30">.</operator><name pos:start="77:31" pos:end="77:38">channels</name></name> <operator pos:start="77:40" pos:end="77:40">=</operator> <literal type="number" pos:start="77:42" pos:end="77:42">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <switch pos:start="81:17" pos:end="107:17">switch<condition pos:start="81:23" pos:end="81:38">(<expr pos:start="81:24" pos:end="81:37"><operator pos:start="81:24" pos:end="81:24">(</operator><name pos:start="81:25" pos:end="81:25">v</name><operator pos:start="81:26" pos:end="81:27">&gt;&gt;</operator> <literal type="number" pos:start="81:29" pos:end="81:29">2</literal><operator pos:start="81:30" pos:end="81:30">)</operator> <operator pos:start="81:32" pos:end="81:32">&amp;</operator> <literal type="number" pos:start="81:34" pos:end="81:37">0x03</literal></expr>)</condition> <block pos:start="81:40" pos:end="107:17">{<block_content pos:start="83:17" pos:end="105:32">

                <case pos:start="83:17" pos:end="83:23">case <expr pos:start="83:22" pos:end="83:22"><literal type="number" pos:start="83:22" pos:end="83:22">1</literal></expr>:</case>

                    <expr_stmt pos:start="85:21" pos:end="85:50"><expr pos:start="85:21" pos:end="85:49"><name pos:start="85:21" pos:end="85:41"><name pos:start="85:21" pos:end="85:22">st</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:29">codec</name><operator pos:start="85:30" pos:end="85:30">.</operator><name pos:start="85:31" pos:end="85:41">sample_rate</name></name> <operator pos:start="85:43" pos:end="85:43">=</operator> <literal type="number" pos:start="85:45" pos:end="85:49">11025</literal></expr>;</expr_stmt>

                    <break pos:start="87:21" pos:end="87:26">break;</break>

                <case pos:start="89:17" pos:end="89:23">case <expr pos:start="89:22" pos:end="89:22"><literal type="number" pos:start="89:22" pos:end="89:22">2</literal></expr>:</case>

                    <expr_stmt pos:start="91:21" pos:end="91:50"><expr pos:start="91:21" pos:end="91:49"><name pos:start="91:21" pos:end="91:41"><name pos:start="91:21" pos:end="91:22">st</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:29">codec</name><operator pos:start="91:30" pos:end="91:30">.</operator><name pos:start="91:31" pos:end="91:41">sample_rate</name></name> <operator pos:start="91:43" pos:end="91:43">=</operator> <literal type="number" pos:start="91:45" pos:end="91:49">22050</literal></expr>;</expr_stmt>

                    <break pos:start="93:21" pos:end="93:26">break;</break>

                <case pos:start="95:17" pos:end="95:23">case <expr pos:start="95:22" pos:end="95:22"><literal type="number" pos:start="95:22" pos:end="95:22">3</literal></expr>:</case>

                    <expr_stmt pos:start="97:21" pos:end="97:50"><expr pos:start="97:21" pos:end="97:49"><name pos:start="97:21" pos:end="97:41"><name pos:start="97:21" pos:end="97:22">st</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:29">codec</name><operator pos:start="97:30" pos:end="97:30">.</operator><name pos:start="97:31" pos:end="97:41">sample_rate</name></name> <operator pos:start="97:43" pos:end="97:43">=</operator> <literal type="number" pos:start="97:45" pos:end="97:49">44100</literal></expr>;</expr_stmt>

                    <break pos:start="99:21" pos:end="99:26">break;</break>

                <default pos:start="101:17" pos:end="101:24">default:</default>

                    <expr_stmt pos:start="103:21" pos:end="103:32"><expr pos:start="103:21" pos:end="103:31"><call pos:start="103:21" pos:end="103:31"><name pos:start="103:21" pos:end="103:27">av_free</name><argument_list pos:start="103:28" pos:end="103:31">(<argument pos:start="103:29" pos:end="103:30"><expr pos:start="103:29" pos:end="103:30"><name pos:start="103:29" pos:end="103:30">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="105:21" pos:end="105:32">return <expr pos:start="105:28" pos:end="105:31"><operator pos:start="105:28" pos:end="105:28">-</operator><name pos:start="105:29" pos:end="105:31">EIO</name></expr>;</return>

                </block_content>}</block></switch>

                <expr_stmt pos:start="109:17" pos:end="109:56"><expr pos:start="109:17" pos:end="109:55"><name pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:18">st</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:25">codec</name><operator pos:start="109:26" pos:end="109:26">.</operator><name pos:start="109:27" pos:end="109:36">codec_type</name></name> <operator pos:start="109:38" pos:end="109:38">=</operator> <name pos:start="109:40" pos:end="109:55">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:50"><expr pos:start="111:17" pos:end="111:49"><name pos:start="111:17" pos:end="111:34"><name pos:start="111:17" pos:end="111:18">st</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:25">codec</name><operator pos:start="111:26" pos:end="111:26">.</operator><name pos:start="111:27" pos:end="111:34">codec_id</name></name> <operator pos:start="111:36" pos:end="111:36">=</operator> <name pos:start="111:38" pos:end="111:49">CODEC_ID_MP2</name></expr>;</expr_stmt>

                <break pos:start="113:17" pos:end="113:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="117:11" pos:end="121:9">else <block pos:start="117:16" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:31">

            <expr_stmt pos:start="119:13" pos:end="119:31"><expr pos:start="119:13" pos:end="119:30"><call pos:start="119:13" pos:end="119:30"><name pos:start="119:13" pos:end="119:21">url_fskip</name><argument_list pos:start="119:22" pos:end="119:30">(<argument pos:start="119:23" pos:end="119:24"><expr pos:start="119:23" pos:end="119:24"><name pos:start="119:23" pos:end="119:24">pb</name></expr></argument>, <argument pos:start="119:27" pos:end="119:29"><expr pos:start="119:27" pos:end="119:29"><name pos:start="119:27" pos:end="119:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
