<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1233.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">map_page</name><parameter_list pos:start="1:21" pos:end="1:67">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:28">uint8_t</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier><modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">ptr</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:44">uint64_t</name></type> <name pos:start="1:46" pos:end="1:49">addr</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:59">uint32_t</name></type> <name pos:start="1:61" pos:end="1:66">wanted</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22">target_phys_addr_t</name></type> <name pos:start="5:24" pos:end="5:26">len</name> <init pos:start="5:28" pos:end="5:35">= <expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35">wanted</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:13">(<expr pos:start="9:9" pos:end="9:12"><operator pos:start="9:9" pos:end="9:9">*</operator><name pos:start="9:10" pos:end="9:12">ptr</name></expr>)</condition> <block pos:start="9:15" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:53">

        <expr_stmt pos:start="11:9" pos:end="11:53"><expr pos:start="11:9" pos:end="11:52"><call pos:start="11:9" pos:end="11:52"><name pos:start="11:9" pos:end="11:33">cpu_physical_memory_unmap</name><argument_list pos:start="11:34" pos:end="11:52">(<argument pos:start="11:35" pos:end="11:38"><expr pos:start="11:35" pos:end="11:38"><operator pos:start="11:35" pos:end="11:35">*</operator><name pos:start="11:36" pos:end="11:38">ptr</name></expr></argument>, <argument pos:start="11:41" pos:end="11:43"><expr pos:start="11:41" pos:end="11:43"><name pos:start="11:41" pos:end="11:43">len</name></expr></argument>, <argument pos:start="11:46" pos:end="11:46"><expr pos:start="11:46" pos:end="11:46"><literal type="number" pos:start="11:46" pos:end="11:46">1</literal></expr></argument>, <argument pos:start="11:49" pos:end="11:51"><expr pos:start="11:49" pos:end="11:51"><name pos:start="11:49" pos:end="11:51">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:8">ptr</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:49"><name pos:start="17:12" pos:end="17:34">cpu_physical_memory_map</name><argument_list pos:start="17:35" pos:end="17:49">(<argument pos:start="17:36" pos:end="17:39"><expr pos:start="17:36" pos:end="17:39"><name pos:start="17:36" pos:end="17:39">addr</name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><operator pos:start="17:42" pos:end="17:42">&amp;</operator><name pos:start="17:43" pos:end="17:45">len</name></expr></argument>, <argument pos:start="17:48" pos:end="17:48"><expr pos:start="17:48" pos:end="17:48"><literal type="number" pos:start="17:48" pos:end="17:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <name pos:start="19:15" pos:end="19:20">wanted</name></expr>)</condition> <block pos:start="19:23" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:20">

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><call pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:33">cpu_physical_memory_unmap</name><argument_list pos:start="21:34" pos:end="21:52">(<argument pos:start="21:35" pos:end="21:38"><expr pos:start="21:35" pos:end="21:38"><operator pos:start="21:35" pos:end="21:35">*</operator><name pos:start="21:36" pos:end="21:38">ptr</name></expr></argument>, <argument pos:start="21:41" pos:end="21:43"><expr pos:start="21:41" pos:end="21:43"><name pos:start="21:41" pos:end="21:43">len</name></expr></argument>, <argument pos:start="21:46" pos:end="21:46"><expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">1</literal></expr></argument>, <argument pos:start="21:49" pos:end="21:51"><expr pos:start="21:49" pos:end="21:51"><name pos:start="21:49" pos:end="21:51">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:20"><expr pos:start="23:9" pos:end="23:19"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:12">ptr</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
