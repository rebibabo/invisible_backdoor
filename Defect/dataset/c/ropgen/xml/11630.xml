<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11630.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">block_crypto_create_generic</name><parameter_list pos:start="1:39" pos:end="7:52">(<parameter pos:start="1:40" pos:end="1:64"><decl pos:start="1:40" pos:end="1:64"><type pos:start="1:40" pos:end="1:64"><name pos:start="1:40" pos:end="1:57">QCryptoBlockFormat</name></type> <name pos:start="1:59" pos:end="1:64">format</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:59"><decl pos:start="3:40" pos:end="3:59"><type pos:start="3:40" pos:end="3:59"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:49">char</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:59">filename</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:53"><decl pos:start="5:40" pos:end="5:53"><type pos:start="5:40" pos:end="5:53"><name pos:start="5:40" pos:end="5:47">QemuOpts</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:53">opts</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:51"><decl pos:start="7:40" pos:end="7:51"><type pos:start="7:40" pos:end="7:51"><name pos:start="7:40" pos:end="7:44">Error</name> <modifier pos:start="7:46" pos:end="7:46">*</modifier><modifier pos:start="7:47" pos:end="7:47">*</modifier></type><name pos:start="7:48" pos:end="7:51">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="75:1">{<block_content pos:start="11:5" pos:end="73:15">

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:21">= <expr pos:start="11:15" pos:end="11:21"><operator pos:start="11:15" pos:end="11:15">-</operator><name pos:start="11:16" pos:end="11:21">EINVAL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:29">QCryptoBlockCreateOptions</name> <modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:42">create_opts</name> <init pos:start="13:44" pos:end="13:49">= <expr pos:start="13:46" pos:end="13:49"><name pos:start="13:46" pos:end="13:49">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">QCryptoBlock</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:24">crypto</name> <init pos:start="15:26" pos:end="15:31">= <expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="27:6"><decl pos:start="17:5" pos:end="27:5"><type pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:32">BlockCryptoCreateData</name></name></type> <name pos:start="17:34" pos:end="17:37">data</name> <init pos:start="17:39" pos:end="27:5">= <expr pos:start="17:41" pos:end="27:5"><block pos:start="17:41" pos:end="27:5">{

        <expr pos:start="19:9" pos:end="21:42"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:13">size</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="21:42"><name pos:start="19:17" pos:end="19:24">ROUND_UP</name><argument_list pos:start="19:25" pos:end="21:42">(<argument pos:start="19:26" pos:end="19:71"><expr pos:start="19:26" pos:end="19:71"><call pos:start="19:26" pos:end="19:71"><name pos:start="19:26" pos:end="19:46">qemu_opt_get_size_del</name><argument_list pos:start="19:47" pos:end="19:71">(<argument pos:start="19:48" pos:end="19:51"><expr pos:start="19:48" pos:end="19:51"><name pos:start="19:48" pos:end="19:51">opts</name></expr></argument>, <argument pos:start="19:54" pos:end="19:67"><expr pos:start="19:54" pos:end="19:67"><name pos:start="19:54" pos:end="19:67">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="19:70" pos:end="19:70"><expr pos:start="19:70" pos:end="19:70"><literal type="number" pos:start="19:70" pos:end="19:70">0</literal></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="21:26" pos:end="21:41"><expr pos:start="21:26" pos:end="21:41"><name pos:start="21:26" pos:end="21:41">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:13">opts</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:20">opts</name></expr>,

        <expr pos:start="25:9" pos:end="25:28"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:17">filename</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:28">filename</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:68"><expr pos:start="31:5" pos:end="31:67"><name pos:start="31:5" pos:end="31:15">create_opts</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:67"><name pos:start="31:19" pos:end="31:47">block_crypto_create_opts_init</name><argument_list pos:start="31:48" pos:end="31:67">(<argument pos:start="31:49" pos:end="31:54"><expr pos:start="31:49" pos:end="31:54"><name pos:start="31:49" pos:end="31:54">format</name></expr></argument>, <argument pos:start="31:57" pos:end="31:60"><expr pos:start="31:57" pos:end="31:60"><name pos:start="31:57" pos:end="31:60">opts</name></expr></argument>, <argument pos:start="31:63" pos:end="31:66"><expr pos:start="31:63" pos:end="31:66"><name pos:start="31:63" pos:end="31:66">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:21">(<expr pos:start="33:9" pos:end="33:20"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:20">create_opts</name></expr>)</condition> <block pos:start="33:23" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="49:40"><expr pos:start="41:5" pos:end="49:39"><name pos:start="41:5" pos:end="41:10">crypto</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="49:39"><name pos:start="41:14" pos:end="41:33">qcrypto_block_create</name><argument_list pos:start="41:34" pos:end="49:39">(<argument pos:start="41:35" pos:end="41:45"><expr pos:start="41:35" pos:end="41:45"><name pos:start="41:35" pos:end="41:45">create_opts</name></expr></argument>,

                                  <argument pos:start="43:35" pos:end="43:56"><expr pos:start="43:35" pos:end="43:56"><name pos:start="43:35" pos:end="43:56">block_crypto_init_func</name></expr></argument>,

                                  <argument pos:start="45:35" pos:end="45:57"><expr pos:start="45:35" pos:end="45:57"><name pos:start="45:35" pos:end="45:57">block_crypto_write_func</name></expr></argument>,

                                  <argument pos:start="47:35" pos:end="47:39"><expr pos:start="47:35" pos:end="47:39"><operator pos:start="47:35" pos:end="47:35">&amp;</operator><name pos:start="47:36" pos:end="47:39">data</name></expr></argument>,

                                  <argument pos:start="49:35" pos:end="49:38"><expr pos:start="49:35" pos:end="49:38"><name pos:start="49:35" pos:end="49:38">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:15">crypto</name></expr>)</condition> <block pos:start="53:18" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:21">

        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">-</operator><name pos:start="55:16" pos:end="55:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:21">goto <name pos:start="57:14" pos:end="57:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:12"><expr pos:start="63:5" pos:end="63:11"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <literal type="number" pos:start="63:11" pos:end="63:11">0</literal></expr>;</expr_stmt>

 <label pos:start="65:2" pos:end="65:9"><name pos:start="65:2" pos:end="65:8">cleanup</name>:</label>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><call pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:22">qcrypto_block_free</name><argument_list pos:start="67:23" pos:end="67:30">(<argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><name pos:start="67:24" pos:end="67:29">crypto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><call pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:13">blk_unref</name><argument_list pos:start="69:14" pos:end="69:23">(<argument pos:start="69:15" pos:end="69:22"><expr pos:start="69:15" pos:end="69:22"><name pos:start="69:15" pos:end="69:22"><name pos:start="69:15" pos:end="69:18">data</name><operator pos:start="69:19" pos:end="69:19">.</operator><name pos:start="69:20" pos:end="69:22">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:53"><expr pos:start="71:5" pos:end="71:52"><call pos:start="71:5" pos:end="71:52"><name pos:start="71:5" pos:end="71:39">qapi_free_QCryptoBlockCreateOptions</name><argument_list pos:start="71:40" pos:end="71:52">(<argument pos:start="71:41" pos:end="71:51"><expr pos:start="71:41" pos:end="71:51"><name pos:start="71:41" pos:end="71:51">create_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
