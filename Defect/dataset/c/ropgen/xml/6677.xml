<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6677.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">QemuOptsList</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:30">qemu_opts_append</name><parameter_list pos:start="1:31" pos:end="3:50">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:43">QemuOptsList</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dst</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:43">QemuOptsList</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">list</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:15">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:19">num_opts</name></decl>, <decl pos:start="7:22" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:22" pos:end="7:33">num_dst_opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">QemuOptDesc</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:18">need_init</name> <init pos:start="11:20" pos:end="11:26">= <expr pos:start="11:22" pos:end="11:26"><name pos:start="11:22" pos:end="11:26">false</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:13">list</name></expr>)</condition> <block pos:start="15:16" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">dst</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="27:7">/* If dst is NULL, after realloc, some area of dst should be initialized

     * before adding options to it.

     */</comment>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:13">(<expr pos:start="29:9" pos:end="29:12"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:12">dst</name></expr>)</condition> <block pos:start="29:15" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:25">

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:17">need_init</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:24">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:12">num_opts</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:35"><name pos:start="37:16" pos:end="37:30">count_opts_list</name><argument_list pos:start="37:31" pos:end="37:35">(<argument pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:34">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:16">num_dst_opts</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:27">num_opts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:12">num_opts</name> <operator pos:start="41:14" pos:end="41:15">+=</operator> <call pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:31">count_opts_list</name><argument_list pos:start="41:32" pos:end="41:37">(<argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:36">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:58"><expr pos:start="43:5" pos:end="45:57"><name pos:start="43:5" pos:end="43:7">dst</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="45:57"><name pos:start="43:11" pos:end="43:19">g_realloc</name><argument_list pos:start="43:20" pos:end="45:57">(<argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">dst</name></expr></argument>, <argument pos:start="43:26" pos:end="45:56"><expr pos:start="43:26" pos:end="45:56"><sizeof pos:start="43:26" pos:end="43:45">sizeof<argument_list pos:start="43:32" pos:end="43:45">(<argument pos:start="43:33" pos:end="43:44"><expr pos:start="43:33" pos:end="43:44"><name pos:start="43:33" pos:end="43:44">QemuOptsList</name></expr></argument>)</argument_list></sizeof> <operator pos:start="43:47" pos:end="43:47">+</operator>

                    <operator pos:start="45:21" pos:end="45:21">(</operator><name pos:start="45:22" pos:end="45:29">num_opts</name> <operator pos:start="45:31" pos:end="45:31">+</operator> <literal type="number" pos:start="45:33" pos:end="45:33">1</literal><operator pos:start="45:34" pos:end="45:34">)</operator> <operator pos:start="45:36" pos:end="45:36">*</operator> <sizeof pos:start="45:38" pos:end="45:56">sizeof<argument_list pos:start="45:44" pos:end="45:56">(<argument pos:start="45:45" pos:end="45:55"><expr pos:start="45:45" pos:end="45:55"><name pos:start="45:45" pos:end="45:55">QemuOptDesc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:18">(<expr pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:17">need_init</name></expr>)</condition> <block pos:start="47:20" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:33">

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:11">dst</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:17">name</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:24">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:37"><expr pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:11">dst</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:29">implied_opt_name</name></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <name pos:start="51:33" pos:end="51:36">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><call pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:19">QTAILQ_INIT</name><argument_list pos:start="53:20" pos:end="53:31">(<argument pos:start="53:21" pos:end="53:30"><expr pos:start="53:21" pos:end="53:30"><operator pos:start="53:21" pos:end="53:21">&amp;</operator><name pos:start="53:22" pos:end="53:30"><name pos:start="53:22" pos:end="53:24">dst</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:30">head</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:11">dst</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:24">merge_lists</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <name pos:start="55:28" pos:end="55:32">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:40"><expr pos:start="59:5" pos:end="59:39"><name pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:7">dst</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:13">desc</name><index pos:start="59:14" pos:end="59:27">[<expr pos:start="59:15" pos:end="59:26"><name pos:start="59:15" pos:end="59:26">num_dst_opts</name></expr>]</index></name><operator pos:start="59:28" pos:end="59:28">.</operator><name pos:start="59:29" pos:end="59:32">name</name> <operator pos:start="59:34" pos:end="59:34">=</operator> <name pos:start="59:36" pos:end="59:39">NULL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:40">/* append list-&gt;desc to dst-&gt;desc */</comment>

    <if_stmt pos:start="65:5" pos:end="83:5"><if pos:start="65:5" pos:end="83:5">if <condition pos:start="65:8" pos:end="65:13">(<expr pos:start="65:9" pos:end="65:12"><name pos:start="65:9" pos:end="65:12">list</name></expr>)</condition> <block pos:start="65:15" pos:end="83:5">{<block_content pos:start="67:9" pos:end="81:9">

        <expr_stmt pos:start="67:9" pos:end="67:26"><expr pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:12">desc</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <name pos:start="67:16" pos:end="67:25"><name pos:start="67:16" pos:end="67:19">list</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:25">desc</name></name></expr>;</expr_stmt>

        <while pos:start="69:9" pos:end="81:9">while <condition pos:start="69:15" pos:end="69:34">(<expr pos:start="69:16" pos:end="69:33"><name pos:start="69:16" pos:end="69:19">desc</name> <operator pos:start="69:21" pos:end="69:22">&amp;&amp;</operator> <name pos:start="69:24" pos:end="69:33"><name pos:start="69:24" pos:end="69:27">desc</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:33">name</name></name></expr>)</condition> <block pos:start="69:36" pos:end="81:9">{<block_content pos:start="71:13" pos:end="79:19">

            <if_stmt pos:start="71:13" pos:end="77:13"><if pos:start="71:13" pos:end="77:13">if <condition pos:start="71:16" pos:end="71:65">(<expr pos:start="71:17" pos:end="71:64"><call pos:start="71:17" pos:end="71:56"><name pos:start="71:17" pos:end="71:33">find_desc_by_name</name><argument_list pos:start="71:34" pos:end="71:56">(<argument pos:start="71:35" pos:end="71:43"><expr pos:start="71:35" pos:end="71:43"><name pos:start="71:35" pos:end="71:43"><name pos:start="71:35" pos:end="71:37">dst</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:43">desc</name></name></expr></argument>, <argument pos:start="71:46" pos:end="71:55"><expr pos:start="71:46" pos:end="71:55"><name pos:start="71:46" pos:end="71:55"><name pos:start="71:46" pos:end="71:49">desc</name><operator pos:start="71:50" pos:end="71:51">-&gt;</operator><name pos:start="71:52" pos:end="71:55">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="71:58" pos:end="71:59">==</operator> <name pos:start="71:61" pos:end="71:64">NULL</name></expr>)</condition> <block pos:start="71:67" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:52">

                <expr_stmt pos:start="73:17" pos:end="73:50"><expr pos:start="73:17" pos:end="73:49"><name pos:start="73:17" pos:end="73:41"><name pos:start="73:17" pos:end="73:19">dst</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:25">desc</name><index pos:start="73:26" pos:end="73:41">[<expr pos:start="73:27" pos:end="73:40"><name pos:start="73:27" pos:end="73:38">num_dst_opts</name><operator pos:start="73:39" pos:end="73:40">++</operator></expr>]</index></name> <operator pos:start="73:43" pos:end="73:43">=</operator> <operator pos:start="73:45" pos:end="73:45">*</operator><name pos:start="73:46" pos:end="73:49">desc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:52"><expr pos:start="75:17" pos:end="75:51"><name pos:start="75:17" pos:end="75:39"><name pos:start="75:17" pos:end="75:19">dst</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:25">desc</name><index pos:start="75:26" pos:end="75:39">[<expr pos:start="75:27" pos:end="75:38"><name pos:start="75:27" pos:end="75:38">num_dst_opts</name></expr>]</index></name><operator pos:start="75:40" pos:end="75:40">.</operator><name pos:start="75:41" pos:end="75:44">name</name> <operator pos:start="75:46" pos:end="75:46">=</operator> <name pos:start="75:48" pos:end="75:51">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:19"><expr pos:start="79:13" pos:end="79:18"><name pos:start="79:13" pos:end="79:16">desc</name><operator pos:start="79:17" pos:end="79:18">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">dst</name></expr>;</return>

</block_content>}</block></function>
</unit>
