<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4659.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">force_sigsegv</name><parameter_list pos:start="1:26" pos:end="1:37">(<parameter pos:start="1:27" pos:end="1:36"><decl pos:start="1:27" pos:end="1:36"><type pos:start="1:27" pos:end="1:29"><name pos:start="1:27" pos:end="1:29">int</name></type> <name pos:start="1:31" pos:end="1:36">oldsig</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:58">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cpu</name> <init pos:start="5:19" pos:end="5:30">= <expr pos:start="5:21" pos:end="5:30"><name pos:start="5:21" pos:end="5:30">thread_cpu</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">CPUArchState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">env</name> <init pos:start="7:23" pos:end="7:36">= <expr pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">env_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">target_siginfo_t</name></type> <name pos:start="9:22" pos:end="9:25">info</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:14">oldsig</name> <operator pos:start="13:16" pos:end="13:17">==</operator> <name pos:start="13:19" pos:end="13:25">SIGSEGV</name></expr>)</condition> <block pos:start="13:28" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:62">

        <comment type="block" pos:start="15:9" pos:end="19:11">/* Make sure we don't try to deliver the signal again; this will

         * end up with handle_pending_signal() calling force_sig().

         */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:62"><expr pos:start="21:9" pos:end="21:61"><name pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:20">sigact_table</name><index pos:start="21:21" pos:end="21:32">[<expr pos:start="21:22" pos:end="21:31"><name pos:start="21:22" pos:end="21:27">oldsig</name> <operator pos:start="21:29" pos:end="21:29">-</operator> <literal type="number" pos:start="21:31" pos:end="21:31">1</literal></expr>]</index></name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:44">_sa_handler</name> <operator pos:start="21:46" pos:end="21:46">=</operator> <name pos:start="21:48" pos:end="21:61">TARGET_SIG_DFL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:8">info</name><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:17">si_signo</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:34">TARGET_SIGSEGV</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:8">info</name><operator pos:start="27:9" pos:end="27:9">.</operator><name pos:start="27:10" pos:end="27:17">si_errno</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:8">info</name><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:16">si_code</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:35">TARGET_SI_KERNEL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:8">info</name><operator pos:start="31:9" pos:end="31:9">.</operator><name pos:start="31:10" pos:end="31:18">_sifields</name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:24">_kill</name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:29">_pid</name></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:8">info</name><operator pos:start="33:9" pos:end="33:9">.</operator><name pos:start="33:10" pos:end="33:18">_sifields</name><operator pos:start="33:19" pos:end="33:19">.</operator><name pos:start="33:20" pos:end="33:24">_kill</name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:29">_uid</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <literal type="number" pos:start="33:33" pos:end="33:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><call pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:16">queue_signal</name><argument_list pos:start="35:17" pos:end="35:57">(<argument pos:start="35:18" pos:end="35:20"><expr pos:start="35:18" pos:end="35:20"><name pos:start="35:18" pos:end="35:20">env</name></expr></argument>, <argument pos:start="35:23" pos:end="35:35"><expr pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:26">info</name><operator pos:start="35:27" pos:end="35:27">.</operator><name pos:start="35:28" pos:end="35:35">si_signo</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:49"><expr pos:start="35:38" pos:end="35:49"><name pos:start="35:38" pos:end="35:49">QEMU_SI_KILL</name></expr></argument>, <argument pos:start="35:52" pos:end="35:56"><expr pos:start="35:52" pos:end="35:56"><operator pos:start="35:52" pos:end="35:52">&amp;</operator><name pos:start="35:53" pos:end="35:56">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
