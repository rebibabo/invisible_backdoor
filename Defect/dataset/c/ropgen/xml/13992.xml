<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13992.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">vscsi_srp_direct_data</name><parameter_list pos:start="1:33" pos:end="3:60">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">VSCSIState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:57">vscsi_req</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">req</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">buf</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:59"><decl pos:start="3:48" pos:end="3:59"><type pos:start="3:48" pos:end="3:59"><name pos:start="3:48" pos:end="3:55">uint32_t</name></type> <name pos:start="3:57" pos:end="3:59">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:16">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:25">srp_direct_buf</name></name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:29">md</name> <init pos:start="7:31" pos:end="7:45">= <expr pos:start="7:33" pos:end="7:45"><name pos:start="7:33" pos:end="7:45"><name pos:start="7:33" pos:end="7:35">req</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:45">cur_desc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">llen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:54"><expr pos:start="15:5" pos:end="17:53"><call pos:start="15:5" pos:end="17:53"><name pos:start="15:5" pos:end="15:11">dprintf</name><argument_list pos:start="15:12" pos:end="17:53">(<argument pos:start="15:13" pos:end="15:73"><expr pos:start="15:13" pos:end="15:73"><literal type="string" pos:start="15:13" pos:end="15:73">"VSCSI: direct segment 0x%x bytes, va=0x%llx desc len=0x%x\n"</literal></expr></argument>,

            <argument pos:start="17:13" pos:end="17:15"><expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">len</name></expr></argument>, <argument pos:start="17:18" pos:end="17:43"><expr pos:start="17:18" pos:end="17:43"><operator pos:start="17:18" pos:end="17:18">(</operator><name pos:start="17:19" pos:end="17:26">unsigned</name> <name pos:start="17:28" pos:end="17:31">long</name> <name pos:start="17:33" pos:end="17:36">long</name><operator pos:start="17:37" pos:end="17:37">)</operator><name pos:start="17:38" pos:end="17:43"><name pos:start="17:38" pos:end="17:39">md</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:43">va</name></name></expr></argument>, <argument pos:start="17:46" pos:end="17:52"><expr pos:start="17:46" pos:end="17:52"><name pos:start="17:46" pos:end="17:52"><name pos:start="17:46" pos:end="17:47">md</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:52">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:8">llen</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:28"><name pos:start="21:12" pos:end="21:14">MIN</name><argument_list pos:start="21:15" pos:end="21:28">(<argument pos:start="21:16" pos:end="21:18"><expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">len</name></expr></argument>, <argument pos:start="21:21" pos:end="21:27"><expr pos:start="21:21" pos:end="21:27"><name pos:start="21:21" pos:end="21:27"><name pos:start="21:21" pos:end="21:22">md</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:27">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:12">llen</name></expr>)</condition> <block pos:start="23:15" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:9">

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:25">(<expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:15">req</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:24">writing</name></name></expr>)</condition> <block pos:start="25:27" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:65"> <comment type="block" pos:start="25:29" pos:end="25:75">/* writing = to device = reading from memory */</comment>

            <expr_stmt pos:start="27:13" pos:end="27:65"><expr pos:start="27:13" pos:end="27:64"><name pos:start="27:13" pos:end="27:14">rc</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:64"><name pos:start="27:18" pos:end="27:35">spapr_tce_dma_read</name><argument_list pos:start="27:36" pos:end="27:64">(<argument pos:start="27:37" pos:end="27:44"><expr pos:start="27:37" pos:end="27:44"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:44"><name pos:start="27:38" pos:end="27:38">s</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:44">vdev</name></name></expr></argument>, <argument pos:start="27:47" pos:end="27:52"><expr pos:start="27:47" pos:end="27:52"><name pos:start="27:47" pos:end="27:52"><name pos:start="27:47" pos:end="27:48">md</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:52">va</name></name></expr></argument>, <argument pos:start="27:55" pos:end="27:57"><expr pos:start="27:55" pos:end="27:57"><name pos:start="27:55" pos:end="27:57">buf</name></expr></argument>, <argument pos:start="27:60" pos:end="27:63"><expr pos:start="27:60" pos:end="27:63"><name pos:start="27:60" pos:end="27:63">llen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="33:9">else <block pos:start="29:16" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:66">

            <expr_stmt pos:start="31:13" pos:end="31:66"><expr pos:start="31:13" pos:end="31:65"><name pos:start="31:13" pos:end="31:14">rc</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:65"><name pos:start="31:18" pos:end="31:36">spapr_tce_dma_write</name><argument_list pos:start="31:37" pos:end="31:65">(<argument pos:start="31:38" pos:end="31:45"><expr pos:start="31:38" pos:end="31:45"><operator pos:start="31:38" pos:end="31:38">&amp;</operator><name pos:start="31:39" pos:end="31:45"><name pos:start="31:39" pos:end="31:39">s</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:45">vdev</name></name></expr></argument>, <argument pos:start="31:48" pos:end="31:53"><expr pos:start="31:48" pos:end="31:53"><name pos:start="31:48" pos:end="31:53"><name pos:start="31:48" pos:end="31:49">md</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:53">va</name></name></expr></argument>, <argument pos:start="31:56" pos:end="31:58"><expr pos:start="31:56" pos:end="31:58"><name pos:start="31:56" pos:end="31:58">buf</name></expr></argument>, <argument pos:start="31:61" pos:end="31:64"><expr pos:start="31:61" pos:end="31:64"><name pos:start="31:61" pos:end="31:64">llen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:20"><expr pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:6">md</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:11">len</name></name> <operator pos:start="37:13" pos:end="37:14">-=</operator> <name pos:start="37:16" pos:end="37:19">llen</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:6">md</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:10">va</name></name> <operator pos:start="39:12" pos:end="39:13">+=</operator> <name pos:start="39:15" pos:end="39:18">llen</name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:11">(<expr pos:start="43:9" pos:end="43:10"><name pos:start="43:9" pos:end="43:10">rc</name></expr>)</condition> <block pos:start="43:13" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:18">

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:16">return <expr pos:start="49:12" pos:end="49:15"><name pos:start="49:12" pos:end="49:15">llen</name></expr>;</return>

</block_content>}</block></function>
</unit>
