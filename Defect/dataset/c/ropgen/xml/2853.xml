<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2853.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">ivshmem_check_memdev_is_busy</name><parameter_list pos:start="1:41" pos:end="3:67">(<parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:47">Object</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">obj</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">name</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:52"><decl pos:start="3:42" pos:end="3:52"><type pos:start="3:42" pos:end="3:52"><name pos:start="3:42" pos:end="3:47">Object</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:52">val</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:66"><decl pos:start="3:55" pos:end="3:66"><type pos:start="3:55" pos:end="3:66"><name pos:start="3:55" pos:end="3:59">Error</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier><modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:66">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="21:1">{<block_content pos:start="7:5" pos:end="19:5">

    <if_stmt pos:start="7:5" pos:end="19:5"><if pos:start="7:5" pos:end="15:5">if <condition pos:start="7:8" pos:end="7:59">(<expr pos:start="7:9" pos:end="7:58"><call pos:start="7:9" pos:end="7:58"><name pos:start="7:9" pos:end="7:37">host_memory_backend_is_mapped</name><argument_list pos:start="7:38" pos:end="7:58">(<argument pos:start="7:39" pos:end="7:57"><expr pos:start="7:39" pos:end="7:57"><call pos:start="7:39" pos:end="7:57"><name pos:start="7:39" pos:end="7:52">MEMORY_BACKEND</name><argument_list pos:start="7:53" pos:end="7:57">(<argument pos:start="7:54" pos:end="7:56"><expr pos:start="7:54" pos:end="7:56"><name pos:start="7:54" pos:end="7:56">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:61" pos:end="15:5">{<block_content pos:start="9:9" pos:end="13:21">

        <decl_stmt pos:start="9:9" pos:end="9:62"><decl pos:start="9:9" pos:end="9:61"><type pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:12">char</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">path</name> <init pos:start="9:20" pos:end="9:61">= <expr pos:start="9:22" pos:end="9:61"><call pos:start="9:22" pos:end="9:61"><name pos:start="9:22" pos:end="9:56">object_get_canonical_path_component</name><argument_list pos:start="9:57" pos:end="9:61">(<argument pos:start="9:58" pos:end="9:60"><expr pos:start="9:58" pos:end="9:60"><name pos:start="9:58" pos:end="9:60">val</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:68"><expr pos:start="11:9" pos:end="11:67"><call pos:start="11:9" pos:end="11:67"><name pos:start="11:9" pos:end="11:18">error_setg</name><argument_list pos:start="11:19" pos:end="11:67">(<argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">errp</name></expr></argument>, <argument pos:start="11:26" pos:end="11:60"><expr pos:start="11:26" pos:end="11:60"><literal type="string" pos:start="11:26" pos:end="11:60">"can't use already busy memdev: %s"</literal></expr></argument>, <argument pos:start="11:63" pos:end="11:66"><expr pos:start="11:63" pos:end="11:66"><name pos:start="11:63" pos:end="11:66">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:21"><expr pos:start="13:9" pos:end="13:20"><call pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:14">g_free</name><argument_list pos:start="13:15" pos:end="13:20">(<argument pos:start="13:16" pos:end="13:19"><expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:70">

        <expr_stmt pos:start="17:9" pos:end="17:70"><expr pos:start="17:9" pos:end="17:69"><call pos:start="17:9" pos:end="17:69"><name pos:start="17:9" pos:end="17:47">qdev_prop_allow_set_link_before_realize</name><argument_list pos:start="17:48" pos:end="17:69">(<argument pos:start="17:49" pos:end="17:51"><expr pos:start="17:49" pos:end="17:51"><name pos:start="17:49" pos:end="17:51">obj</name></expr></argument>, <argument pos:start="17:54" pos:end="17:57"><expr pos:start="17:54" pos:end="17:57"><name pos:start="17:54" pos:end="17:57">name</name></expr></argument>, <argument pos:start="17:60" pos:end="17:62"><expr pos:start="17:60" pos:end="17:62"><name pos:start="17:60" pos:end="17:62">val</name></expr></argument>, <argument pos:start="17:65" pos:end="17:68"><expr pos:start="17:65" pos:end="17:68"><name pos:start="17:65" pos:end="17:68">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
