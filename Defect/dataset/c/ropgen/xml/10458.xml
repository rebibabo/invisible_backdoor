<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10458.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:35">calculate_mode_score</name><parameter_list pos:start="1:36" pos:end="1:134">(<parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:53">CinepakEncContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:74"><decl pos:start="1:59" pos:end="1:74"><type pos:start="1:59" pos:end="1:74"><name pos:start="1:59" pos:end="1:69">CinepakMode</name></type> <name pos:start="1:71" pos:end="1:74">mode</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:81"><decl pos:start="1:77" pos:end="1:81"><type pos:start="1:77" pos:end="1:81"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:81">h</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:94"><decl pos:start="1:84" pos:end="1:94"><type pos:start="1:84" pos:end="1:94"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:94">v1_size</name></decl></parameter>, <parameter pos:start="1:97" pos:end="1:107"><decl pos:start="1:97" pos:end="1:107"><type pos:start="1:97" pos:end="1:107"><name pos:start="1:97" pos:end="1:99">int</name></type> <name pos:start="1:101" pos:end="1:107">v4_size</name></decl></parameter>, <parameter pos:start="1:110" pos:end="1:115"><decl pos:start="1:110" pos:end="1:115"><type pos:start="1:110" pos:end="1:115"><name pos:start="1:110" pos:end="1:112">int</name></type> <name pos:start="1:114" pos:end="1:115">v4</name></decl></parameter>, <parameter pos:start="1:118" pos:end="1:133"><decl pos:start="1:118" pos:end="1:133"><type pos:start="1:118" pos:end="1:133"><name pos:start="1:118" pos:end="1:127">strip_info</name> <modifier pos:start="1:129" pos:end="1:129">*</modifier></type><name pos:start="1:130" pos:end="1:133">info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:15">

    <comment type="line" pos:start="5:5" pos:end="5:53">//score = FF_LAMBDA_SCALE * error + lambda * bits</comment>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">entry_size</name> <init pos:start="9:20" pos:end="9:61">= <expr pos:start="9:22" pos:end="9:61"><ternary pos:start="9:22" pos:end="9:61"><condition pos:start="9:22" pos:end="9:55"><expr pos:start="9:22" pos:end="9:53"><name pos:start="9:22" pos:end="9:31"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:31">pix_fmt</name></name> <operator pos:start="9:33" pos:end="9:34">==</operator> <name pos:start="9:36" pos:end="9:53">AV_PIX_FMT_YUV420P</name></expr> ?</condition><then pos:start="9:57" pos:end="9:57"> <expr pos:start="9:57" pos:end="9:57"><literal type="number" pos:start="9:57" pos:end="9:57">6</literal></expr> </then><else pos:start="9:59" pos:end="9:61">: <expr pos:start="9:61" pos:end="9:61"><literal type="number" pos:start="9:61" pos:end="9:61">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">mb_count</name> <init pos:start="11:18" pos:end="11:37">= <expr pos:start="11:20" pos:end="11:37"><name pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:23">w</name></name> <operator pos:start="11:25" pos:end="11:25">*</operator> <name pos:start="11:27" pos:end="11:27">h</name> <operator pos:start="11:29" pos:end="11:29">/</operator> <name pos:start="11:31" pos:end="11:37">MB_AREA</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">mb_info</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:15">mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:18">score1</name></decl>, <decl pos:start="15:21" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:21" pos:end="15:26">score2</name></decl>, <decl pos:start="15:29" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:29" pos:end="15:34">score3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="21:43"><decl pos:start="17:5" pos:end="21:42"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:15">ret</name> <init pos:start="17:17" pos:end="21:42">= <expr pos:start="17:19" pos:end="21:42"><name pos:start="17:19" pos:end="17:27"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:27">lambda</name></name> <operator pos:start="17:29" pos:end="17:29">*</operator> <operator pos:start="17:31" pos:end="17:31">(</operator><operator pos:start="17:32" pos:end="17:32">(</operator><ternary pos:start="17:33" pos:end="17:86"><condition pos:start="17:33" pos:end="17:41"><expr pos:start="17:33" pos:end="17:39"><name pos:start="17:33" pos:end="17:39">v1_size</name></expr> ?</condition><then pos:start="17:43" pos:end="17:82"> <expr pos:start="17:43" pos:end="17:82"><name pos:start="17:43" pos:end="17:59">CHUNK_HEADER_SIZE</name> <operator pos:start="17:61" pos:end="17:61">+</operator> <name pos:start="17:63" pos:end="17:69">v1_size</name> <operator pos:start="17:71" pos:end="17:71">*</operator> <name pos:start="17:73" pos:end="17:82">entry_size</name></expr> </then><else pos:start="17:84" pos:end="17:86">: <expr pos:start="17:86" pos:end="17:86"><literal type="number" pos:start="17:86" pos:end="17:86">0</literal></expr></else></ternary><operator pos:start="17:87" pos:end="17:87">)</operator> <operator pos:start="17:89" pos:end="17:89">+</operator>

                   <operator pos:start="19:20" pos:end="19:20">(</operator><ternary pos:start="19:21" pos:end="19:74"><condition pos:start="19:21" pos:end="19:29"><expr pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:27">v4_size</name></expr> ?</condition><then pos:start="19:31" pos:end="19:70"> <expr pos:start="19:31" pos:end="19:70"><name pos:start="19:31" pos:end="19:47">CHUNK_HEADER_SIZE</name> <operator pos:start="19:49" pos:end="19:49">+</operator> <name pos:start="19:51" pos:end="19:57">v4_size</name> <operator pos:start="19:59" pos:end="19:59">*</operator> <name pos:start="19:61" pos:end="19:70">entry_size</name></expr> </then><else pos:start="19:72" pos:end="19:74">: <expr pos:start="19:74" pos:end="19:74"><literal type="number" pos:start="19:74" pos:end="19:74">0</literal></expr></else></ternary><operator pos:start="19:75" pos:end="19:75">)</operator> <operator pos:start="19:77" pos:end="19:77">+</operator>

                   <name pos:start="21:20" pos:end="21:36">CHUNK_HEADER_SIZE</name><operator pos:start="21:37" pos:end="21:37">)</operator> <operator pos:start="21:39" pos:end="21:40">&lt;&lt;</operator> <literal type="number" pos:start="21:42" pos:end="21:42">3</literal></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="25:5" pos:end="25:112">//av_log(s-&gt;avctx, AV_LOG_INFO, "sizes %3i %3i -&gt; %9li score mb_count %i", v1_size, v4_size, ret, mb_count);</comment>



    <switch pos:start="29:5" pos:end="131:5">switch<condition pos:start="29:11" pos:end="29:16">(<expr pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:15">mode</name></expr>)</condition> <block pos:start="29:18" pos:end="131:5">{<block_content pos:start="31:5" pos:end="129:14">

    <case pos:start="31:5" pos:end="31:22">case <expr pos:start="31:10" pos:end="31:21"><name pos:start="31:10" pos:end="31:21">MODE_V1_ONLY</name></expr>:</case>

        <comment type="line" pos:start="33:9" pos:end="33:25">//one byte per MB</comment>

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:14">+=</operator> <name pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:24">lambda</name></name> <operator pos:start="35:26" pos:end="35:26">*</operator> <literal type="number" pos:start="35:28" pos:end="35:28">8</literal> <operator pos:start="35:30" pos:end="35:30">*</operator> <name pos:start="35:32" pos:end="35:39">mb_count</name></expr>;</expr_stmt>



        <for pos:start="39:9" pos:end="47:9">for<control pos:start="39:12" pos:end="39:37">(<init pos:start="39:13" pos:end="39:18"><expr pos:start="39:13" pos:end="39:17"><name pos:start="39:13" pos:end="39:13">x</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr>;</init> <condition pos:start="39:20" pos:end="39:32"><expr pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:20">x</name> <operator pos:start="39:22" pos:end="39:22">&lt;</operator> <name pos:start="39:24" pos:end="39:31">mb_count</name></expr>;</condition> <incr pos:start="39:34" pos:end="39:36"><expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:34">x</name><operator pos:start="39:35" pos:end="39:36">++</operator></expr></incr>)</control> <block pos:start="39:39" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:39">

            <expr_stmt pos:start="41:13" pos:end="41:27"><expr pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:14">mb</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:26"><name pos:start="41:19" pos:end="41:19">s</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">mb</name><index pos:start="41:24" pos:end="41:26">[<expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">x</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:50"><expr pos:start="43:13" pos:end="43:49"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:18">+=</operator> <name pos:start="43:20" pos:end="43:34">FF_LAMBDA_SCALE</name> <operator pos:start="43:36" pos:end="43:36">*</operator> <name pos:start="43:38" pos:end="43:49"><name pos:start="43:38" pos:end="43:39">mb</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:49">v1_error</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:39"><expr pos:start="45:13" pos:end="45:38"><name pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:14">mb</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:29">best_encoding</name></name> <operator pos:start="45:31" pos:end="45:31">=</operator> <name pos:start="45:33" pos:end="45:38">ENC_V1</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:20">case <expr pos:start="53:10" pos:end="53:19"><name pos:start="53:10" pos:end="53:19">MODE_V1_V4</name></expr>:</case>

        <comment type="line" pos:start="55:9" pos:end="55:29">//9 or 33 bits per MB</comment>

        <for pos:start="57:9" pos:end="81:9">for<control pos:start="57:12" pos:end="57:37">(<init pos:start="57:13" pos:end="57:18"><expr pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:13">x</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr>;</init> <condition pos:start="57:20" pos:end="57:32"><expr pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:20">x</name> <operator pos:start="57:22" pos:end="57:22">&lt;</operator> <name pos:start="57:24" pos:end="57:31">mb_count</name></expr>;</condition> <incr pos:start="57:34" pos:end="57:36"><expr pos:start="57:34" pos:end="57:36"><name pos:start="57:34" pos:end="57:34">x</name><operator pos:start="57:35" pos:end="57:36">++</operator></expr></incr>)</control> <block pos:start="57:39" pos:end="81:9">{<block_content pos:start="59:13" pos:end="79:13">

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:14">mb</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <operator pos:start="59:18" pos:end="59:18">&amp;</operator><name pos:start="59:19" pos:end="59:26"><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:23">mb</name><index pos:start="59:24" pos:end="59:26">[<expr pos:start="59:25" pos:end="59:25"><name pos:start="59:25" pos:end="59:25">x</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:69"><expr pos:start="61:13" pos:end="61:68"><name pos:start="61:13" pos:end="61:18">score1</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:30"><name pos:start="61:22" pos:end="61:22">s</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:30">lambda</name></name> <operator pos:start="61:32" pos:end="61:32">*</operator> <literal type="number" pos:start="61:34" pos:end="61:37">9</literal>  <operator pos:start="61:37" pos:end="61:37">+</operator> <name pos:start="61:39" pos:end="61:53">FF_LAMBDA_SCALE</name> <operator pos:start="61:55" pos:end="61:55">*</operator> <name pos:start="61:57" pos:end="61:68"><name pos:start="61:57" pos:end="61:58">mb</name><operator pos:start="61:59" pos:end="61:60">-&gt;</operator><name pos:start="61:61" pos:end="61:68">v1_error</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:73"><expr pos:start="63:13" pos:end="63:72"><name pos:start="63:13" pos:end="63:18">score2</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:30"><name pos:start="63:22" pos:end="63:22">s</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:30">lambda</name></name> <operator pos:start="63:32" pos:end="63:32">*</operator> <literal type="number" pos:start="63:34" pos:end="63:37">33</literal> <operator pos:start="63:37" pos:end="63:37">+</operator> <name pos:start="63:39" pos:end="63:53">FF_LAMBDA_SCALE</name> <operator pos:start="63:55" pos:end="63:55">*</operator> <name pos:start="63:57" pos:end="63:72"><name pos:start="63:57" pos:end="63:58">mb</name><operator pos:start="63:59" pos:end="63:60">-&gt;</operator><name pos:start="63:61" pos:end="63:68">v4_error</name><index pos:start="63:69" pos:end="63:72">[<expr pos:start="63:70" pos:end="63:71"><name pos:start="63:70" pos:end="63:71">v4</name></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="67:13" pos:end="79:13"><if pos:start="67:13" pos:end="73:13">if<condition pos:start="67:15" pos:end="67:32">(<expr pos:start="67:16" pos:end="67:31"><name pos:start="67:16" pos:end="67:21">score1</name> <operator pos:start="67:23" pos:end="67:24">&lt;=</operator> <name pos:start="67:26" pos:end="67:31">score2</name></expr>)</condition> <block pos:start="67:34" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:43">

                <expr_stmt pos:start="69:17" pos:end="69:30"><expr pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:19">ret</name> <operator pos:start="69:21" pos:end="69:22">+=</operator> <name pos:start="69:24" pos:end="69:29">score1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:43"><expr pos:start="71:17" pos:end="71:42"><name pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:18">mb</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:33">best_encoding</name></name> <operator pos:start="71:35" pos:end="71:35">=</operator> <name pos:start="71:37" pos:end="71:42">ENC_V1</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="73:15" pos:end="79:13">else <block pos:start="73:20" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:43">

                <expr_stmt pos:start="75:17" pos:end="75:30"><expr pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:19">ret</name> <operator pos:start="75:21" pos:end="75:22">+=</operator> <name pos:start="75:24" pos:end="75:29">score2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:43"><expr pos:start="77:17" pos:end="77:42"><name pos:start="77:17" pos:end="77:33"><name pos:start="77:17" pos:end="77:18">mb</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:33">best_encoding</name></name> <operator pos:start="77:35" pos:end="77:35">=</operator> <name pos:start="77:37" pos:end="77:42">ENC_V4</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>



        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:17">case <expr pos:start="87:10" pos:end="87:16"><name pos:start="87:10" pos:end="87:16">MODE_MC</name></expr>:</case>

        <comment type="line" pos:start="89:9" pos:end="89:33">//1, 10 or 34 bits per MB</comment>

        <for pos:start="91:9" pos:end="125:9">for<control pos:start="91:12" pos:end="91:37">(<init pos:start="91:13" pos:end="91:18"><expr pos:start="91:13" pos:end="91:17"><name pos:start="91:13" pos:end="91:13">x</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <literal type="number" pos:start="91:17" pos:end="91:17">0</literal></expr>;</init> <condition pos:start="91:20" pos:end="91:32"><expr pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:20">x</name> <operator pos:start="91:22" pos:end="91:22">&lt;</operator> <name pos:start="91:24" pos:end="91:31">mb_count</name></expr>;</condition> <incr pos:start="91:34" pos:end="91:36"><expr pos:start="91:34" pos:end="91:36"><name pos:start="91:34" pos:end="91:34">x</name><operator pos:start="91:35" pos:end="91:36">++</operator></expr></incr>)</control> <block pos:start="91:39" pos:end="125:9">{<block_content pos:start="93:13" pos:end="123:13">

            <expr_stmt pos:start="93:13" pos:end="93:27"><expr pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:14">mb</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <operator pos:start="93:18" pos:end="93:18">&amp;</operator><name pos:start="93:19" pos:end="93:26"><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:23">mb</name><index pos:start="93:24" pos:end="93:26">[<expr pos:start="93:25" pos:end="93:25"><name pos:start="93:25" pos:end="93:25">x</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:71"><expr pos:start="95:13" pos:end="95:70"><name pos:start="95:13" pos:end="95:18">score1</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <name pos:start="95:22" pos:end="95:30"><name pos:start="95:22" pos:end="95:22">s</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:30">lambda</name></name> <operator pos:start="95:32" pos:end="95:32">*</operator> <literal type="number" pos:start="95:34" pos:end="95:37">1</literal>  <operator pos:start="95:37" pos:end="95:37">+</operator> <name pos:start="95:39" pos:end="95:53">FF_LAMBDA_SCALE</name> <operator pos:start="95:55" pos:end="95:55">*</operator> <name pos:start="95:57" pos:end="95:70"><name pos:start="95:57" pos:end="95:58">mb</name><operator pos:start="95:59" pos:end="95:60">-&gt;</operator><name pos:start="95:61" pos:end="95:70">skip_error</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:69"><expr pos:start="97:13" pos:end="97:68"><name pos:start="97:13" pos:end="97:18">score2</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <name pos:start="97:22" pos:end="97:30"><name pos:start="97:22" pos:end="97:22">s</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:30">lambda</name></name> <operator pos:start="97:32" pos:end="97:32">*</operator> <literal type="number" pos:start="97:34" pos:end="97:37">10</literal> <operator pos:start="97:37" pos:end="97:37">+</operator> <name pos:start="97:39" pos:end="97:53">FF_LAMBDA_SCALE</name> <operator pos:start="97:55" pos:end="97:55">*</operator> <name pos:start="97:57" pos:end="97:68"><name pos:start="97:57" pos:end="97:58">mb</name><operator pos:start="97:59" pos:end="97:60">-&gt;</operator><name pos:start="97:61" pos:end="97:68">v1_error</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:73"><expr pos:start="99:13" pos:end="99:72"><name pos:start="99:13" pos:end="99:18">score3</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <name pos:start="99:22" pos:end="99:30"><name pos:start="99:22" pos:end="99:22">s</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:30">lambda</name></name> <operator pos:start="99:32" pos:end="99:32">*</operator> <literal type="number" pos:start="99:34" pos:end="99:37">34</literal> <operator pos:start="99:37" pos:end="99:37">+</operator> <name pos:start="99:39" pos:end="99:53">FF_LAMBDA_SCALE</name> <operator pos:start="99:55" pos:end="99:55">*</operator> <name pos:start="99:57" pos:end="99:72"><name pos:start="99:57" pos:end="99:58">mb</name><operator pos:start="99:59" pos:end="99:60">-&gt;</operator><name pos:start="99:61" pos:end="99:68">v4_error</name><index pos:start="99:69" pos:end="99:72">[<expr pos:start="99:70" pos:end="99:71"><name pos:start="99:70" pos:end="99:71">v4</name></expr>]</index></name></expr>;</expr_stmt>





            <if_stmt pos:start="105:13" pos:end="123:13"><if pos:start="105:13" pos:end="111:13">if<condition pos:start="105:15" pos:end="105:52">(<expr pos:start="105:16" pos:end="105:51"><name pos:start="105:16" pos:end="105:21">score1</name> <operator pos:start="105:23" pos:end="105:24">&lt;=</operator> <name pos:start="105:26" pos:end="105:31">score2</name> <operator pos:start="105:33" pos:end="105:34">&amp;&amp;</operator> <name pos:start="105:36" pos:end="105:41">score1</name> <operator pos:start="105:43" pos:end="105:44">&lt;=</operator> <name pos:start="105:46" pos:end="105:51">score3</name></expr>)</condition> <block pos:start="105:54" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:45">

                <expr_stmt pos:start="107:17" pos:end="107:30"><expr pos:start="107:17" pos:end="107:29"><name pos:start="107:17" pos:end="107:19">ret</name> <operator pos:start="107:21" pos:end="107:22">+=</operator> <name pos:start="107:24" pos:end="107:29">score1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:45"><expr pos:start="109:17" pos:end="109:44"><name pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:18">mb</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:33">best_encoding</name></name> <operator pos:start="109:35" pos:end="109:35">=</operator> <name pos:start="109:37" pos:end="109:44">ENC_SKIP</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="111:15" pos:end="117:13">else if<condition pos:start="111:22" pos:end="111:59">(<expr pos:start="111:23" pos:end="111:58"><name pos:start="111:23" pos:end="111:28">score2</name> <operator pos:start="111:30" pos:end="111:31">&lt;=</operator> <name pos:start="111:33" pos:end="111:38">score1</name> <operator pos:start="111:40" pos:end="111:41">&amp;&amp;</operator> <name pos:start="111:43" pos:end="111:48">score2</name> <operator pos:start="111:50" pos:end="111:51">&lt;=</operator> <name pos:start="111:53" pos:end="111:58">score3</name></expr>)</condition> <block pos:start="111:61" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:43">

                <expr_stmt pos:start="113:17" pos:end="113:30"><expr pos:start="113:17" pos:end="113:29"><name pos:start="113:17" pos:end="113:19">ret</name> <operator pos:start="113:21" pos:end="113:22">+=</operator> <name pos:start="113:24" pos:end="113:29">score2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:43"><expr pos:start="115:17" pos:end="115:42"><name pos:start="115:17" pos:end="115:33"><name pos:start="115:17" pos:end="115:18">mb</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:33">best_encoding</name></name> <operator pos:start="115:35" pos:end="115:35">=</operator> <name pos:start="115:37" pos:end="115:42">ENC_V1</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="117:15" pos:end="123:13">else <block pos:start="117:20" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:43">

                <expr_stmt pos:start="119:17" pos:end="119:30"><expr pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:19">ret</name> <operator pos:start="119:21" pos:end="119:22">+=</operator> <name pos:start="119:24" pos:end="119:29">score3</name></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:43"><expr pos:start="121:17" pos:end="121:42"><name pos:start="121:17" pos:end="121:33"><name pos:start="121:17" pos:end="121:18">mb</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:33">best_encoding</name></name> <operator pos:start="121:35" pos:end="121:35">=</operator> <name pos:start="121:37" pos:end="121:42">ENC_V4</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>



        <break pos:start="129:9" pos:end="129:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="135:5" pos:end="135:15">return <expr pos:start="135:12" pos:end="135:14"><name pos:start="135:12" pos:end="135:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
