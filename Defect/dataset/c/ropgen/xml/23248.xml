<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23248.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">tcg_profile_snapshot</name><parameter_list pos:start="1:26" pos:end="1:70">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:36">TCGProfile</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">prof</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:48">bool</name></type> <name pos:start="1:50" pos:end="1:57">counters</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:63">bool</name></type> <name pos:start="1:65" pos:end="1:69">table</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:18">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="65:5">for <control pos:start="9:9" pos:end="9:36">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:31"><expr pos:start="9:17" pos:end="9:30"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:30">n_tcg_ctxs</name></expr>;</condition> <incr pos:start="9:33" pos:end="9:35"><expr pos:start="9:33" pos:end="9:35"><name pos:start="9:33" pos:end="9:33">i</name><operator pos:start="9:34" pos:end="9:35">++</operator></expr></incr>)</control> <block pos:start="9:38" pos:end="65:5">{<block_content pos:start="11:9" pos:end="63:9">

        <decl_stmt pos:start="11:9" pos:end="11:52"><decl pos:start="11:9" pos:end="11:51"><type pos:start="11:9" pos:end="11:26"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:24">TCGProfile</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:30">orig</name> <init pos:start="11:32" pos:end="11:51">= <expr pos:start="11:34" pos:end="11:51"><operator pos:start="11:34" pos:end="11:34">&amp;</operator><name pos:start="11:35" pos:end="11:45"><name pos:start="11:35" pos:end="11:42">tcg_ctxs</name><index pos:start="11:43" pos:end="11:45">[<expr pos:start="11:44" pos:end="11:44"><name pos:start="11:44" pos:end="11:44">i</name></expr>]</index></name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:51">prof</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="15:9" pos:end="49:9"><if pos:start="15:9" pos:end="49:9">if <condition pos:start="15:12" pos:end="15:21">(<expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:20">counters</name></expr>)</condition> <block pos:start="15:23" pos:end="49:9">{<block_content pos:start="17:13" pos:end="47:47">

            <expr_stmt pos:start="17:13" pos:end="17:44"><expr pos:start="17:13" pos:end="17:43"><call pos:start="17:13" pos:end="17:43"><name pos:start="17:13" pos:end="17:20">PROF_ADD</name><argument_list pos:start="17:21" pos:end="17:43">(<argument pos:start="17:22" pos:end="17:25"><expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">prof</name></expr></argument>, <argument pos:start="17:28" pos:end="17:31"><expr pos:start="17:28" pos:end="17:31"><name pos:start="17:28" pos:end="17:31">orig</name></expr></argument>, <argument pos:start="17:34" pos:end="17:42"><expr pos:start="17:34" pos:end="17:42"><name pos:start="17:34" pos:end="17:42">tb_count1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:43"><expr pos:start="19:13" pos:end="19:42"><call pos:start="19:13" pos:end="19:42"><name pos:start="19:13" pos:end="19:20">PROF_ADD</name><argument_list pos:start="19:21" pos:end="19:42">(<argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">prof</name></expr></argument>, <argument pos:start="19:28" pos:end="19:31"><expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">orig</name></expr></argument>, <argument pos:start="19:34" pos:end="19:41"><expr pos:start="19:34" pos:end="19:41"><name pos:start="19:34" pos:end="19:41">tb_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:43"><expr pos:start="21:13" pos:end="21:42"><call pos:start="21:13" pos:end="21:42"><name pos:start="21:13" pos:end="21:20">PROF_ADD</name><argument_list pos:start="21:21" pos:end="21:42">(<argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">prof</name></expr></argument>, <argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">orig</name></expr></argument>, <argument pos:start="21:34" pos:end="21:41"><expr pos:start="21:34" pos:end="21:41"><name pos:start="21:34" pos:end="21:41">op_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:47"><expr pos:start="23:13" pos:end="23:46"><call pos:start="23:13" pos:end="23:46"><name pos:start="23:13" pos:end="23:20">PROF_MAX</name><argument_list pos:start="23:21" pos:end="23:46">(<argument pos:start="23:22" pos:end="23:25"><expr pos:start="23:22" pos:end="23:25"><name pos:start="23:22" pos:end="23:25">prof</name></expr></argument>, <argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">orig</name></expr></argument>, <argument pos:start="23:34" pos:end="23:45"><expr pos:start="23:34" pos:end="23:45"><name pos:start="23:34" pos:end="23:45">op_count_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:45"><expr pos:start="25:13" pos:end="25:44"><call pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:20">PROF_ADD</name><argument_list pos:start="25:21" pos:end="25:44">(<argument pos:start="25:22" pos:end="25:25"><expr pos:start="25:22" pos:end="25:25"><name pos:start="25:22" pos:end="25:25">prof</name></expr></argument>, <argument pos:start="25:28" pos:end="25:31"><expr pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:31">orig</name></expr></argument>, <argument pos:start="25:34" pos:end="25:43"><expr pos:start="25:34" pos:end="25:43"><name pos:start="25:34" pos:end="25:43">temp_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:49"><expr pos:start="27:13" pos:end="27:48"><call pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:20">PROF_MAX</name><argument_list pos:start="27:21" pos:end="27:48">(<argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:25">prof</name></expr></argument>, <argument pos:start="27:28" pos:end="27:31"><expr pos:start="27:28" pos:end="27:31"><name pos:start="27:28" pos:end="27:31">orig</name></expr></argument>, <argument pos:start="27:34" pos:end="27:47"><expr pos:start="27:34" pos:end="27:47"><name pos:start="27:34" pos:end="27:47">temp_count_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:47"><expr pos:start="29:13" pos:end="29:46"><call pos:start="29:13" pos:end="29:46"><name pos:start="29:13" pos:end="29:20">PROF_ADD</name><argument_list pos:start="29:21" pos:end="29:46">(<argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><name pos:start="29:22" pos:end="29:25">prof</name></expr></argument>, <argument pos:start="29:28" pos:end="29:31"><expr pos:start="29:28" pos:end="29:31"><name pos:start="29:28" pos:end="29:31">orig</name></expr></argument>, <argument pos:start="29:34" pos:end="29:45"><expr pos:start="29:34" pos:end="29:45"><name pos:start="29:34" pos:end="29:45">del_op_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:46"><expr pos:start="31:13" pos:end="31:45"><call pos:start="31:13" pos:end="31:45"><name pos:start="31:13" pos:end="31:20">PROF_ADD</name><argument_list pos:start="31:21" pos:end="31:45">(<argument pos:start="31:22" pos:end="31:25"><expr pos:start="31:22" pos:end="31:25"><name pos:start="31:22" pos:end="31:25">prof</name></expr></argument>, <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">orig</name></expr></argument>, <argument pos:start="31:34" pos:end="31:44"><expr pos:start="31:34" pos:end="31:44"><name pos:start="31:34" pos:end="31:44">code_in_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:47"><expr pos:start="33:13" pos:end="33:46"><call pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:20">PROF_ADD</name><argument_list pos:start="33:21" pos:end="33:46">(<argument pos:start="33:22" pos:end="33:25"><expr pos:start="33:22" pos:end="33:25"><name pos:start="33:22" pos:end="33:25">prof</name></expr></argument>, <argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><name pos:start="33:28" pos:end="33:31">orig</name></expr></argument>, <argument pos:start="33:34" pos:end="33:45"><expr pos:start="33:34" pos:end="33:45"><name pos:start="33:34" pos:end="33:45">code_out_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:49"><expr pos:start="35:13" pos:end="35:48"><call pos:start="35:13" pos:end="35:48"><name pos:start="35:13" pos:end="35:20">PROF_ADD</name><argument_list pos:start="35:21" pos:end="35:48">(<argument pos:start="35:22" pos:end="35:25"><expr pos:start="35:22" pos:end="35:25"><name pos:start="35:22" pos:end="35:25">prof</name></expr></argument>, <argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">orig</name></expr></argument>, <argument pos:start="35:34" pos:end="35:47"><expr pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:47">search_out_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:46"><expr pos:start="37:13" pos:end="37:45"><call pos:start="37:13" pos:end="37:45"><name pos:start="37:13" pos:end="37:20">PROF_ADD</name><argument_list pos:start="37:21" pos:end="37:45">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">prof</name></expr></argument>, <argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:31">orig</name></expr></argument>, <argument pos:start="37:34" pos:end="37:44"><expr pos:start="37:34" pos:end="37:44"><name pos:start="37:34" pos:end="37:44">interm_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:44"><expr pos:start="39:13" pos:end="39:43"><call pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:20">PROF_ADD</name><argument_list pos:start="39:21" pos:end="39:43">(<argument pos:start="39:22" pos:end="39:25"><expr pos:start="39:22" pos:end="39:25"><name pos:start="39:22" pos:end="39:25">prof</name></expr></argument>, <argument pos:start="39:28" pos:end="39:31"><expr pos:start="39:28" pos:end="39:31"><name pos:start="39:28" pos:end="39:31">orig</name></expr></argument>, <argument pos:start="39:34" pos:end="39:42"><expr pos:start="39:34" pos:end="39:42"><name pos:start="39:34" pos:end="39:42">code_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:42"><expr pos:start="41:13" pos:end="41:41"><call pos:start="41:13" pos:end="41:41"><name pos:start="41:13" pos:end="41:20">PROF_ADD</name><argument_list pos:start="41:21" pos:end="41:41">(<argument pos:start="41:22" pos:end="41:25"><expr pos:start="41:22" pos:end="41:25"><name pos:start="41:22" pos:end="41:25">prof</name></expr></argument>, <argument pos:start="41:28" pos:end="41:31"><expr pos:start="41:28" pos:end="41:31"><name pos:start="41:28" pos:end="41:31">orig</name></expr></argument>, <argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:40">la_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><call pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:20">PROF_ADD</name><argument_list pos:start="43:21" pos:end="43:42">(<argument pos:start="43:22" pos:end="43:25"><expr pos:start="43:22" pos:end="43:25"><name pos:start="43:22" pos:end="43:25">prof</name></expr></argument>, <argument pos:start="43:28" pos:end="43:31"><expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">orig</name></expr></argument>, <argument pos:start="43:34" pos:end="43:41"><expr pos:start="43:34" pos:end="43:41"><name pos:start="43:34" pos:end="43:41">opt_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:48"><expr pos:start="45:13" pos:end="45:47"><call pos:start="45:13" pos:end="45:47"><name pos:start="45:13" pos:end="45:20">PROF_ADD</name><argument_list pos:start="45:21" pos:end="45:47">(<argument pos:start="45:22" pos:end="45:25"><expr pos:start="45:22" pos:end="45:25"><name pos:start="45:22" pos:end="45:25">prof</name></expr></argument>, <argument pos:start="45:28" pos:end="45:31"><expr pos:start="45:28" pos:end="45:31"><name pos:start="45:28" pos:end="45:31">orig</name></expr></argument>, <argument pos:start="45:34" pos:end="45:46"><expr pos:start="45:34" pos:end="45:46"><name pos:start="45:34" pos:end="45:46">restore_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:47"><expr pos:start="47:13" pos:end="47:46"><call pos:start="47:13" pos:end="47:46"><name pos:start="47:13" pos:end="47:20">PROF_ADD</name><argument_list pos:start="47:21" pos:end="47:46">(<argument pos:start="47:22" pos:end="47:25"><expr pos:start="47:22" pos:end="47:25"><name pos:start="47:22" pos:end="47:25">prof</name></expr></argument>, <argument pos:start="47:28" pos:end="47:31"><expr pos:start="47:28" pos:end="47:31"><name pos:start="47:28" pos:end="47:31">orig</name></expr></argument>, <argument pos:start="47:34" pos:end="47:45"><expr pos:start="47:34" pos:end="47:45"><name pos:start="47:34" pos:end="47:45">restore_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="63:9"><if pos:start="51:9" pos:end="63:9">if <condition pos:start="51:12" pos:end="51:18">(<expr pos:start="51:13" pos:end="51:17"><name pos:start="51:13" pos:end="51:17">table</name></expr>)</condition> <block pos:start="51:20" pos:end="63:9">{<block_content pos:start="53:13" pos:end="61:13">

            <decl_stmt pos:start="53:13" pos:end="53:18"><decl pos:start="53:13" pos:end="53:17"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:17">i</name></decl>;</decl_stmt>



            <for pos:start="57:13" pos:end="61:13">for <control pos:start="57:17" pos:end="57:40">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">i</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:35"><expr pos:start="57:25" pos:end="57:34"><name pos:start="57:25" pos:end="57:25">i</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <name pos:start="57:29" pos:end="57:34">NB_OPS</name></expr>;</condition> <incr pos:start="57:37" pos:end="57:39"><expr pos:start="57:37" pos:end="57:39"><name pos:start="57:37" pos:end="57:37">i</name><operator pos:start="57:38" pos:end="57:39">++</operator></expr></incr>)</control> <block pos:start="57:42" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:56">

                <expr_stmt pos:start="59:17" pos:end="59:56"><expr pos:start="59:17" pos:end="59:55"><call pos:start="59:17" pos:end="59:55"><name pos:start="59:17" pos:end="59:24">PROF_ADD</name><argument_list pos:start="59:25" pos:end="59:55">(<argument pos:start="59:26" pos:end="59:29"><expr pos:start="59:26" pos:end="59:29"><name pos:start="59:26" pos:end="59:29">prof</name></expr></argument>, <argument pos:start="59:32" pos:end="59:35"><expr pos:start="59:32" pos:end="59:35"><name pos:start="59:32" pos:end="59:35">orig</name></expr></argument>, <argument pos:start="59:38" pos:end="59:54"><expr pos:start="59:38" pos:end="59:54"><name pos:start="59:38" pos:end="59:54"><name pos:start="59:38" pos:end="59:51">table_op_count</name><index pos:start="59:52" pos:end="59:54">[<expr pos:start="59:53" pos:end="59:53"><name pos:start="59:53" pos:end="59:53">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
