<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1417.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">rac_normalise</name><parameter_list pos:start="1:26" pos:end="1:40">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:36">RangeCoder</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <for pos:start="5:5" pos:end="27:5">for <control pos:start="5:9" pos:end="5:12">(<init pos:start="5:10" pos:end="5:10">;</init><condition pos:start="5:11" pos:end="5:11">;</condition><incr/>)</control> <block pos:start="5:14" pos:end="27:5">{<block_content pos:start="7:9" pos:end="25:19">

        <expr_stmt pos:start="7:9" pos:end="7:23"><expr pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:16"><name pos:start="7:9" pos:end="7:9">c</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:16">range</name></name> <operator pos:start="7:18" pos:end="7:20">&lt;&lt;=</operator> <literal type="number" pos:start="7:22" pos:end="7:22">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:23"><expr pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:9">c</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:14">low</name></name>   <operator pos:start="9:18" pos:end="9:20">&lt;&lt;=</operator> <literal type="number" pos:start="9:22" pos:end="9:22">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="11:9" pos:end="21:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:32">(<expr pos:start="11:13" pos:end="11:31"><name pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:13">c</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:18">src</name></name> <operator pos:start="11:20" pos:end="11:20">&lt;</operator> <name pos:start="11:22" pos:end="11:31"><name pos:start="11:22" pos:end="11:22">c</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:31">src_end</name></name></expr>)</condition> <block pos:start="11:34" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:32">

            <expr_stmt pos:start="13:13" pos:end="13:32"><expr pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:13">c</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">low</name></name> <operator pos:start="13:20" pos:end="13:21">|=</operator> <operator pos:start="13:23" pos:end="13:23">*</operator><name pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:24">c</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:29">src</name></name><operator pos:start="13:30" pos:end="13:31">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="15:11" pos:end="21:9">else if <condition pos:start="15:19" pos:end="15:27">(<expr pos:start="15:20" pos:end="15:26"><operator pos:start="15:20" pos:end="15:20">!</operator><name pos:start="15:21" pos:end="15:26"><name pos:start="15:21" pos:end="15:21">c</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:26">low</name></name></expr>)</condition> <block pos:start="15:29" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:19">

            <expr_stmt pos:start="17:13" pos:end="17:29"><expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:13">c</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:24">got_error</name></name> <operator pos:start="17:26" pos:end="17:26">=</operator> <literal type="number" pos:start="17:28" pos:end="17:28">1</literal></expr>;</expr_stmt>

            <return pos:start="19:13" pos:end="19:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="25:19"><if pos:start="23:9" pos:end="25:19">if <condition pos:start="23:12" pos:end="23:35">(<expr pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:13">c</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">range</name></name> <operator pos:start="23:22" pos:end="23:23">&gt;=</operator> <name pos:start="23:25" pos:end="23:34">RAC_BOTTOM</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:19"><block_content pos:start="25:13" pos:end="25:19">

            <return pos:start="25:13" pos:end="25:19">return;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
