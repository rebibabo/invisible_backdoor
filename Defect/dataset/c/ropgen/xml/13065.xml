<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13065.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:38">avpriv_dca_parse_core_frame_header</name><parameter_list pos:start="1:39" pos:end="1:91">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:60"><name pos:start="1:40" pos:end="1:57">DCACoreFrameHeader</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">h</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:80"><decl pos:start="1:63" pos:end="1:80"><type pos:start="1:63" pos:end="1:80"><specifier pos:start="1:63" pos:end="1:67">const</specifier> <name pos:start="1:69" pos:end="1:75">uint8_t</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:80">buf</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:90"><decl pos:start="1:83" pos:end="1:90"><type pos:start="1:83" pos:end="1:90"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:90">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:50">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">GetBitContext</name></type> <name pos:start="5:19" pos:end="5:20">gb</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:43"><if pos:start="9:5" pos:end="11:43">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><call pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:22">init_get_bits8</name><argument_list pos:start="9:23" pos:end="9:38">(<argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:26">gb</name></expr></argument>, <argument pos:start="9:29" pos:end="9:31"><expr pos:start="9:29" pos:end="9:31"><name pos:start="9:29" pos:end="9:31">buf</name></expr></argument>, <argument pos:start="9:34" pos:end="9:37"><expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">size</name></expr></argument>)</argument_list></call> <operator pos:start="9:40" pos:end="9:40">&lt;</operator> <literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:43"><block_content pos:start="11:9" pos:end="11:43">

        <return pos:start="11:9" pos:end="11:43">return <expr pos:start="11:16" pos:end="11:42"><name pos:start="11:16" pos:end="11:42">DCA_PARSE_ERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="15:5" pos:end="15:50">return <expr pos:start="15:12" pos:end="15:49"><call pos:start="15:12" pos:end="15:49"><name pos:start="15:12" pos:end="15:41">ff_dca_parse_core_frame_header</name><argument_list pos:start="15:42" pos:end="15:49">(<argument pos:start="15:43" pos:end="15:43"><expr pos:start="15:43" pos:end="15:43"><name pos:start="15:43" pos:end="15:43">h</name></expr></argument>, <argument pos:start="15:46" pos:end="15:48"><expr pos:start="15:46" pos:end="15:48"><operator pos:start="15:46" pos:end="15:46">&amp;</operator><name pos:start="15:47" pos:end="15:48">gb</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
