<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12961.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">img_create</name><parameter_list pos:start="1:22" pos:end="1:44">(<parameter pos:start="1:23" pos:end="1:30"><decl pos:start="1:23" pos:end="1:30"><type pos:start="1:23" pos:end="1:30"><name pos:start="1:23" pos:end="1:25">int</name></type> <name pos:start="1:27" pos:end="1:30">argc</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">c</name></decl>, <decl pos:start="5:12" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:21">img_size</name> <init pos:start="7:23" pos:end="7:26">= <expr pos:start="7:25" pos:end="7:26"><operator pos:start="7:25" pos:end="7:25">-</operator><literal type="number" pos:start="7:26" pos:end="7:26">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">fmt</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><literal type="string" pos:start="9:23" pos:end="9:27">"raw"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:24">base_fmt</name> <init pos:start="11:26" pos:end="11:31">= <expr pos:start="11:28" pos:end="11:31"><name pos:start="11:28" pos:end="11:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:24">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:29">base_filename</name> <init pos:start="15:31" pos:end="15:36">= <expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:17">options</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">NULL</name></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="83:5">for<control pos:start="21:8" pos:end="21:11">(<init pos:start="21:9" pos:end="21:9">;</init><condition pos:start="21:10" pos:end="21:10">;</condition><incr/>)</control> <block pos:start="21:13" pos:end="83:5">{<block_content pos:start="23:9" pos:end="81:9">

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:9">c</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:45"><name pos:start="23:13" pos:end="23:18">getopt</name><argument_list pos:start="23:19" pos:end="23:45">(<argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">argc</name></expr></argument>, <argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">argv</name></expr></argument>, <argument pos:start="23:32" pos:end="23:44"><expr pos:start="23:32" pos:end="23:44"><literal type="string" pos:start="23:32" pos:end="23:44">"F:b:f:he6o:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:13">c</name> <operator pos:start="25:15" pos:end="25:16">==</operator> <operator pos:start="25:18" pos:end="25:18">-</operator><literal type="number" pos:start="25:19" pos:end="25:19">1</literal></expr>)</condition> <block pos:start="25:22" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="31:9" pos:end="81:9">switch<condition pos:start="31:15" pos:end="31:17">(<expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">c</name></expr>)</condition> <block pos:start="31:19" pos:end="81:9">{<block_content pos:start="33:9" pos:end="79:18">

        <case pos:start="33:9" pos:end="33:17">case <expr pos:start="33:14" pos:end="33:16"><literal type="char" pos:start="33:14" pos:end="33:16">'?'</literal></expr>:</case>

        <case pos:start="35:9" pos:end="35:17">case <expr pos:start="35:14" pos:end="35:16"><literal type="char" pos:start="35:14" pos:end="35:16">'h'</literal></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:19"><expr pos:start="37:13" pos:end="37:18"><call pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:16">help</name><argument_list pos:start="37:17" pos:end="37:18">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:17">case <expr pos:start="41:14" pos:end="41:16"><literal type="char" pos:start="41:14" pos:end="41:16">'F'</literal></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:30"><expr pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:20">base_fmt</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:29">optarg</name></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:17">case <expr pos:start="47:14" pos:end="47:16"><literal type="char" pos:start="47:14" pos:end="47:16">'b'</literal></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:25">base_filename</name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:34">optarg</name></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:17">case <expr pos:start="53:14" pos:end="53:16"><literal type="char" pos:start="53:14" pos:end="53:16">'f'</literal></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:15">fmt</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:24">optarg</name></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="char" pos:start="59:14" pos:end="59:16">'e'</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="63:43"><expr pos:start="61:13" pos:end="63:42"><call pos:start="61:13" pos:end="63:42"><name pos:start="61:13" pos:end="61:24">error_report</name><argument_list pos:start="61:25" pos:end="63:42">(<argument pos:start="61:26" pos:end="63:41"><expr pos:start="61:26" pos:end="63:41"><literal type="string" pos:start="61:26" pos:end="61:68">"option -e is deprecated, please use \'-o "</literal>

                  <literal type="string" pos:start="63:19" pos:end="63:41">"encryption\' instead!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:21">return <expr pos:start="65:20" pos:end="65:20"><literal type="number" pos:start="65:20" pos:end="65:20">1</literal></expr>;</return>

        <case pos:start="67:9" pos:end="67:17">case <expr pos:start="67:14" pos:end="67:16"><literal type="char" pos:start="67:14" pos:end="67:16">'6'</literal></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="71:40"><expr pos:start="69:13" pos:end="71:39"><call pos:start="69:13" pos:end="71:39"><name pos:start="69:13" pos:end="69:24">error_report</name><argument_list pos:start="69:25" pos:end="71:39">(<argument pos:start="69:26" pos:end="71:38"><expr pos:start="69:26" pos:end="71:38"><literal type="string" pos:start="69:26" pos:end="69:68">"option -6 is deprecated, please use \'-o "</literal>

                  <literal type="string" pos:start="71:19" pos:end="71:38">"compat6\' instead!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:21">return <expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">1</literal></expr>;</return>

        <case pos:start="75:9" pos:end="75:17">case <expr pos:start="75:14" pos:end="75:16"><literal type="char" pos:start="75:14" pos:end="75:16">'o'</literal></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:29"><expr pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:19">options</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <name pos:start="77:23" pos:end="77:28">optarg</name></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <comment type="block" pos:start="87:5" pos:end="87:26">/* Get the filename */</comment>

    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:23">(<expr pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:14">optind</name> <operator pos:start="89:16" pos:end="89:17">&gt;=</operator> <name pos:start="89:19" pos:end="89:22">argc</name></expr>)</condition> <block pos:start="89:25" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:15">

        <expr_stmt pos:start="91:9" pos:end="91:15"><expr pos:start="91:9" pos:end="91:14"><call pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:12">help</name><argument_list pos:start="91:13" pos:end="91:14">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:30"><expr pos:start="95:5" pos:end="95:29"><name pos:start="95:5" pos:end="95:12">filename</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <name pos:start="95:16" pos:end="95:29"><name pos:start="95:16" pos:end="95:19">argv</name><index pos:start="95:20" pos:end="95:29">[<expr pos:start="95:21" pos:end="95:28"><name pos:start="95:21" pos:end="95:26">optind</name><operator pos:start="95:27" pos:end="95:28">++</operator></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:38">/* Get image size, if specified */</comment>

    <if_stmt pos:start="101:5" pos:end="125:5"><if pos:start="101:5" pos:end="125:5">if <condition pos:start="101:8" pos:end="101:22">(<expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:14">optind</name> <operator pos:start="101:16" pos:end="101:16">&lt;</operator> <name pos:start="101:18" pos:end="101:21">argc</name></expr>)</condition> <block pos:start="101:24" pos:end="125:5">{<block_content pos:start="103:9" pos:end="123:34">

        <decl_stmt pos:start="103:9" pos:end="103:21"><decl pos:start="103:9" pos:end="103:20"><type pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:15">int64_t</name></type> <name pos:start="103:17" pos:end="103:20">sval</name></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:18"><decl pos:start="105:9" pos:end="105:17"><type pos:start="105:9" pos:end="105:14"><name pos:start="105:9" pos:end="105:12">char</name> <modifier pos:start="105:14" pos:end="105:14">*</modifier></type><name pos:start="105:15" pos:end="105:17">end</name></decl>;</decl_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:73"><expr pos:start="107:9" pos:end="107:72"><name pos:start="107:9" pos:end="107:12">sval</name> <operator pos:start="107:14" pos:end="107:14">=</operator> <call pos:start="107:16" pos:end="107:72"><name pos:start="107:16" pos:end="107:29">strtosz_suffix</name><argument_list pos:start="107:30" pos:end="107:72">(<argument pos:start="107:31" pos:end="107:44"><expr pos:start="107:31" pos:end="107:44"><name pos:start="107:31" pos:end="107:44"><name pos:start="107:31" pos:end="107:34">argv</name><index pos:start="107:35" pos:end="107:44">[<expr pos:start="107:36" pos:end="107:43"><name pos:start="107:36" pos:end="107:41">optind</name><operator pos:start="107:42" pos:end="107:43">++</operator></expr>]</index></name></expr></argument>, <argument pos:start="107:47" pos:end="107:50"><expr pos:start="107:47" pos:end="107:50"><operator pos:start="107:47" pos:end="107:47">&amp;</operator><name pos:start="107:48" pos:end="107:50">end</name></expr></argument>, <argument pos:start="107:53" pos:end="107:71"><expr pos:start="107:53" pos:end="107:71"><name pos:start="107:53" pos:end="107:71">STRTOSZ_DEFSUFFIX_B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="121:9"><if pos:start="109:9" pos:end="121:9">if <condition pos:start="109:12" pos:end="109:29">(<expr pos:start="109:13" pos:end="109:28"><name pos:start="109:13" pos:end="109:16">sval</name> <operator pos:start="109:18" pos:end="109:18">&lt;</operator> <literal type="number" pos:start="109:20" pos:end="109:20">0</literal> <operator pos:start="109:22" pos:end="109:23">||</operator> <operator pos:start="109:25" pos:end="109:25">*</operator><name pos:start="109:26" pos:end="109:28">end</name></expr>)</condition> <block pos:start="109:31" pos:end="121:9">{<block_content pos:start="111:13" pos:end="119:21">

            <expr_stmt pos:start="111:13" pos:end="113:37"><expr pos:start="111:13" pos:end="113:36"><call pos:start="111:13" pos:end="113:36"><name pos:start="111:13" pos:end="111:24">error_report</name><argument_list pos:start="111:25" pos:end="113:36">(<argument pos:start="111:26" pos:end="113:35"><expr pos:start="111:26" pos:end="113:35"><literal type="string" pos:start="111:26" pos:end="111:80">"Invalid image size specified! You may use k, M, G or "</literal>

                  <literal type="string" pos:start="113:19" pos:end="113:35">"T suffixes for "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:75"><expr pos:start="115:13" pos:end="115:74"><call pos:start="115:13" pos:end="115:74"><name pos:start="115:13" pos:end="115:24">error_report</name><argument_list pos:start="115:25" pos:end="115:74">(<argument pos:start="115:26" pos:end="115:73"><expr pos:start="115:26" pos:end="115:73"><literal type="string" pos:start="115:26" pos:end="115:73">"kilobytes, megabytes, gigabytes and terabytes."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:21"><expr pos:start="117:13" pos:end="117:20"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <operator pos:start="117:19" pos:end="117:19">-</operator><literal type="number" pos:start="117:20" pos:end="117:20">1</literal></expr>;</expr_stmt>

            <goto pos:start="119:13" pos:end="119:21">goto <name pos:start="119:18" pos:end="119:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:34"><expr pos:start="123:9" pos:end="123:33"><name pos:start="123:9" pos:end="123:16">img_size</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <operator pos:start="123:20" pos:end="123:20">(</operator><name pos:start="123:21" pos:end="123:28">uint64_t</name><operator pos:start="123:29" pos:end="123:29">)</operator><name pos:start="123:30" pos:end="123:33">sval</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="129:5" pos:end="135:5"><if pos:start="129:5" pos:end="135:5">if <condition pos:start="129:8" pos:end="129:41">(<expr pos:start="129:9" pos:end="129:40"><name pos:start="129:9" pos:end="129:15">options</name> <operator pos:start="129:17" pos:end="129:18">&amp;&amp;</operator> <operator pos:start="129:20" pos:end="129:20">!</operator><call pos:start="129:21" pos:end="129:40"><name pos:start="129:21" pos:end="129:26">strcmp</name><argument_list pos:start="129:27" pos:end="129:40">(<argument pos:start="129:28" pos:end="129:34"><expr pos:start="129:28" pos:end="129:34"><name pos:start="129:28" pos:end="129:34">options</name></expr></argument>, <argument pos:start="129:37" pos:end="129:39"><expr pos:start="129:37" pos:end="129:39"><literal type="string" pos:start="129:37" pos:end="129:39">"?"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:43" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:17">

        <expr_stmt pos:start="131:9" pos:end="131:53"><expr pos:start="131:9" pos:end="131:52"><name pos:start="131:9" pos:end="131:11">ret</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <call pos:start="131:15" pos:end="131:52"><name pos:start="131:15" pos:end="131:37">print_block_option_help</name><argument_list pos:start="131:38" pos:end="131:52">(<argument pos:start="131:39" pos:end="131:46"><expr pos:start="131:39" pos:end="131:46"><name pos:start="131:39" pos:end="131:46">filename</name></expr></argument>, <argument pos:start="131:49" pos:end="131:51"><expr pos:start="131:49" pos:end="131:51"><name pos:start="131:49" pos:end="131:51">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="133:9" pos:end="133:17">goto <name pos:start="133:14" pos:end="133:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="141:59"><expr pos:start="139:5" pos:end="141:58"><name pos:start="139:5" pos:end="139:7">ret</name> <operator pos:start="139:9" pos:end="139:9">=</operator> <call pos:start="139:11" pos:end="141:58"><name pos:start="139:11" pos:end="139:25">bdrv_img_create</name><argument_list pos:start="139:26" pos:end="141:58">(<argument pos:start="139:27" pos:end="139:34"><expr pos:start="139:27" pos:end="139:34"><name pos:start="139:27" pos:end="139:34">filename</name></expr></argument>, <argument pos:start="139:37" pos:end="139:39"><expr pos:start="139:37" pos:end="139:39"><name pos:start="139:37" pos:end="139:39">fmt</name></expr></argument>, <argument pos:start="139:42" pos:end="139:54"><expr pos:start="139:42" pos:end="139:54"><name pos:start="139:42" pos:end="139:54">base_filename</name></expr></argument>, <argument pos:start="139:57" pos:end="139:64"><expr pos:start="139:57" pos:end="139:64"><name pos:start="139:57" pos:end="139:64">base_fmt</name></expr></argument>,

                          <argument pos:start="141:27" pos:end="141:33"><expr pos:start="141:27" pos:end="141:33"><name pos:start="141:27" pos:end="141:33">options</name></expr></argument>, <argument pos:start="141:36" pos:end="141:43"><expr pos:start="141:36" pos:end="141:43"><name pos:start="141:36" pos:end="141:43">img_size</name></expr></argument>, <argument pos:start="141:46" pos:end="141:57"><expr pos:start="141:46" pos:end="141:57"><name pos:start="141:46" pos:end="141:57">BDRV_O_FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="143:1" pos:end="143:4"><name pos:start="143:1" pos:end="143:3">out</name>:</label>

    <if_stmt pos:start="145:5" pos:end="149:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:12">(<expr pos:start="145:9" pos:end="145:11"><name pos:start="145:9" pos:end="145:11">ret</name></expr>)</condition> <block pos:start="145:14" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:17">

        <return pos:start="147:9" pos:end="147:17">return <expr pos:start="147:16" pos:end="147:16"><literal type="number" pos:start="147:16" pos:end="147:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="151:5" pos:end="151:13">return <expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
