<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15538.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:17">dec_b</name><parameter_list pos:start="1:18" pos:end="1:35">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:32"><name pos:start="1:19" pos:end="1:30">DisasContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:28">

    <if_stmt pos:start="5:5" pos:end="21:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:23">(<expr pos:start="5:9" pos:end="5:22"><name pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:10">dc</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:14">r0</name></name> <operator pos:start="5:16" pos:end="5:17">==</operator> <name pos:start="5:19" pos:end="5:22">R_RA</name></expr>)</condition> <block pos:start="5:25" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:25">

        <expr_stmt pos:start="7:9" pos:end="7:25"><expr pos:start="7:9" pos:end="7:24"><call pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:15">LOG_DIS</name><argument_list pos:start="7:16" pos:end="7:24">(<argument pos:start="7:17" pos:end="7:23"><expr pos:start="7:17" pos:end="7:23"><literal type="string" pos:start="7:17" pos:end="7:23">"ret\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="9:7" pos:end="13:5">else if <condition pos:start="9:15" pos:end="9:30">(<expr pos:start="9:16" pos:end="9:29"><name pos:start="9:16" pos:end="9:21"><name pos:start="9:16" pos:end="9:17">dc</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:21">r0</name></name> <operator pos:start="9:23" pos:end="9:24">==</operator> <name pos:start="9:26" pos:end="9:29">R_EA</name></expr>)</condition> <block pos:start="9:32" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:26">

        <expr_stmt pos:start="11:9" pos:end="11:26"><expr pos:start="11:9" pos:end="11:25"><call pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:15">LOG_DIS</name><argument_list pos:start="11:16" pos:end="11:25">(<argument pos:start="11:17" pos:end="11:24"><expr pos:start="11:17" pos:end="11:24"><literal type="string" pos:start="11:17" pos:end="11:24">"eret\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="17:5">else if <condition pos:start="13:15" pos:end="13:30">(<expr pos:start="13:16" pos:end="13:29"><name pos:start="13:16" pos:end="13:21"><name pos:start="13:16" pos:end="13:17">dc</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:21">r0</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <name pos:start="13:26" pos:end="13:29">R_BA</name></expr>)</condition> <block pos:start="13:32" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:26">

        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><call pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:15">LOG_DIS</name><argument_list pos:start="15:16" pos:end="15:25">(<argument pos:start="15:17" pos:end="15:24"><expr pos:start="15:17" pos:end="15:24"><literal type="string" pos:start="15:17" pos:end="15:24">"bret\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="21:5">else <block pos:start="17:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:35">

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:15">LOG_DIS</name><argument_list pos:start="19:16" pos:end="19:34">(<argument pos:start="19:17" pos:end="19:25"><expr pos:start="19:17" pos:end="19:25"><literal type="string" pos:start="19:17" pos:end="19:25">"b r%d\n"</literal></expr></argument>, <argument pos:start="19:28" pos:end="19:33"><expr pos:start="19:28" pos:end="19:33"><name pos:start="19:28" pos:end="19:33"><name pos:start="19:28" pos:end="19:29">dc</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:33">r0</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:42">/* restore IE.IE in case of an eret */</comment>

    <if_stmt pos:start="27:5" pos:end="63:5"><if pos:start="27:5" pos:end="45:5">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:10">dc</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:14">r0</name></name> <operator pos:start="27:16" pos:end="27:17">==</operator> <name pos:start="27:19" pos:end="27:22">R_EA</name></expr>)</condition> <block pos:start="27:25" pos:end="45:5">{<block_content pos:start="29:9" pos:end="43:26">

        <decl_stmt pos:start="29:9" pos:end="29:33"><decl pos:start="29:9" pos:end="29:32"><type pos:start="29:9" pos:end="29:12"><name pos:start="29:9" pos:end="29:12">TCGv</name></type> <name pos:start="29:14" pos:end="29:15">t0</name> <init pos:start="29:17" pos:end="29:32">= <expr pos:start="29:19" pos:end="29:32"><call pos:start="29:19" pos:end="29:32"><name pos:start="29:19" pos:end="29:30">tcg_temp_new</name><argument_list pos:start="29:31" pos:end="29:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:33"><decl pos:start="31:9" pos:end="31:32"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:14">l1</name> <init pos:start="31:16" pos:end="31:32">= <expr pos:start="31:18" pos:end="31:32"><call pos:start="31:18" pos:end="31:32"><name pos:start="31:18" pos:end="31:30">gen_new_label</name><argument_list pos:start="31:31" pos:end="31:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><call pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:23">tcg_gen_andi_tl</name><argument_list pos:start="33:24" pos:end="33:43">(<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><name pos:start="33:25" pos:end="33:26">t0</name></expr></argument>, <argument pos:start="33:29" pos:end="33:34"><expr pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:34">cpu_ie</name></expr></argument>, <argument pos:start="33:37" pos:end="33:42"><expr pos:start="33:37" pos:end="33:42"><name pos:start="33:37" pos:end="33:42">IE_EIE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><call pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:22">tcg_gen_ori_tl</name><argument_list pos:start="35:23" pos:end="35:45">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">cpu_ie</name></expr></argument>, <argument pos:start="35:32" pos:end="35:37"><expr pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:37">cpu_ie</name></expr></argument>, <argument pos:start="35:40" pos:end="35:44"><expr pos:start="35:40" pos:end="35:44"><name pos:start="35:40" pos:end="35:44">IE_IE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><call pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:26">tcg_gen_brcondi_tl</name><argument_list pos:start="37:27" pos:end="37:55">(<argument pos:start="37:28" pos:end="37:38"><expr pos:start="37:28" pos:end="37:38"><name pos:start="37:28" pos:end="37:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="37:41" pos:end="37:42"><expr pos:start="37:41" pos:end="37:42"><name pos:start="37:41" pos:end="37:42">t0</name></expr></argument>, <argument pos:start="37:45" pos:end="37:50"><expr pos:start="37:45" pos:end="37:50"><name pos:start="37:45" pos:end="37:50">IE_EIE</name></expr></argument>, <argument pos:start="37:53" pos:end="37:54"><expr pos:start="37:53" pos:end="37:54"><name pos:start="37:53" pos:end="37:54">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:48"><expr pos:start="39:9" pos:end="39:47"><call pos:start="39:9" pos:end="39:47"><name pos:start="39:9" pos:end="39:23">tcg_gen_andi_tl</name><argument_list pos:start="39:24" pos:end="39:47">(<argument pos:start="39:25" pos:end="39:30"><expr pos:start="39:25" pos:end="39:30"><name pos:start="39:25" pos:end="39:30">cpu_ie</name></expr></argument>, <argument pos:start="39:33" pos:end="39:38"><expr pos:start="39:33" pos:end="39:38"><name pos:start="39:33" pos:end="39:38">cpu_ie</name></expr></argument>, <argument pos:start="39:41" pos:end="39:46"><expr pos:start="39:41" pos:end="39:46"><operator pos:start="39:41" pos:end="39:41">~</operator><name pos:start="39:42" pos:end="39:46">IE_IE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><call pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:21">gen_set_label</name><argument_list pos:start="41:22" pos:end="41:25">(<argument pos:start="41:23" pos:end="41:24"><expr pos:start="41:23" pos:end="41:24"><name pos:start="41:23" pos:end="41:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><call pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:21">tcg_temp_free</name><argument_list pos:start="43:22" pos:end="43:25">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><name pos:start="43:23" pos:end="43:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="63:5">else if <condition pos:start="45:15" pos:end="45:30">(<expr pos:start="45:16" pos:end="45:29"><name pos:start="45:16" pos:end="45:21"><name pos:start="45:16" pos:end="45:17">dc</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:21">r0</name></name> <operator pos:start="45:23" pos:end="45:24">==</operator> <name pos:start="45:26" pos:end="45:29">R_BA</name></expr>)</condition> <block pos:start="45:32" pos:end="63:5">{<block_content pos:start="47:9" pos:end="61:26">

        <decl_stmt pos:start="47:9" pos:end="47:33"><decl pos:start="47:9" pos:end="47:32"><type pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:12">TCGv</name></type> <name pos:start="47:14" pos:end="47:15">t0</name> <init pos:start="47:17" pos:end="47:32">= <expr pos:start="47:19" pos:end="47:32"><call pos:start="47:19" pos:end="47:32"><name pos:start="47:19" pos:end="47:30">tcg_temp_new</name><argument_list pos:start="47:31" pos:end="47:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:33"><decl pos:start="49:9" pos:end="49:32"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:14">l1</name> <init pos:start="49:16" pos:end="49:32">= <expr pos:start="49:18" pos:end="49:32"><call pos:start="49:18" pos:end="49:32"><name pos:start="49:18" pos:end="49:30">gen_new_label</name><argument_list pos:start="49:31" pos:end="49:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><call pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:23">tcg_gen_andi_tl</name><argument_list pos:start="51:24" pos:end="51:43">(<argument pos:start="51:25" pos:end="51:26"><expr pos:start="51:25" pos:end="51:26"><name pos:start="51:25" pos:end="51:26">t0</name></expr></argument>, <argument pos:start="51:29" pos:end="51:34"><expr pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:34">cpu_ie</name></expr></argument>, <argument pos:start="51:37" pos:end="51:42"><expr pos:start="51:37" pos:end="51:42"><name pos:start="51:37" pos:end="51:42">IE_BIE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><call pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:22">tcg_gen_ori_tl</name><argument_list pos:start="53:23" pos:end="53:45">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">cpu_ie</name></expr></argument>, <argument pos:start="53:32" pos:end="53:37"><expr pos:start="53:32" pos:end="53:37"><name pos:start="53:32" pos:end="53:37">cpu_ie</name></expr></argument>, <argument pos:start="53:40" pos:end="53:44"><expr pos:start="53:40" pos:end="53:44"><name pos:start="53:40" pos:end="53:44">IE_IE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:56"><expr pos:start="55:9" pos:end="55:55"><call pos:start="55:9" pos:end="55:55"><name pos:start="55:9" pos:end="55:26">tcg_gen_brcondi_tl</name><argument_list pos:start="55:27" pos:end="55:55">(<argument pos:start="55:28" pos:end="55:38"><expr pos:start="55:28" pos:end="55:38"><name pos:start="55:28" pos:end="55:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="55:41" pos:end="55:42"><expr pos:start="55:41" pos:end="55:42"><name pos:start="55:41" pos:end="55:42">t0</name></expr></argument>, <argument pos:start="55:45" pos:end="55:50"><expr pos:start="55:45" pos:end="55:50"><name pos:start="55:45" pos:end="55:50">IE_BIE</name></expr></argument>, <argument pos:start="55:53" pos:end="55:54"><expr pos:start="55:53" pos:end="55:54"><name pos:start="55:53" pos:end="55:54">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:48"><expr pos:start="57:9" pos:end="57:47"><call pos:start="57:9" pos:end="57:47"><name pos:start="57:9" pos:end="57:23">tcg_gen_andi_tl</name><argument_list pos:start="57:24" pos:end="57:47">(<argument pos:start="57:25" pos:end="57:30"><expr pos:start="57:25" pos:end="57:30"><name pos:start="57:25" pos:end="57:30">cpu_ie</name></expr></argument>, <argument pos:start="57:33" pos:end="57:38"><expr pos:start="57:33" pos:end="57:38"><name pos:start="57:33" pos:end="57:38">cpu_ie</name></expr></argument>, <argument pos:start="57:41" pos:end="57:46"><expr pos:start="57:41" pos:end="57:46"><operator pos:start="57:41" pos:end="57:41">~</operator><name pos:start="57:42" pos:end="57:46">IE_IE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:26"><expr pos:start="59:9" pos:end="59:25"><call pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:21">gen_set_label</name><argument_list pos:start="59:22" pos:end="59:25">(<argument pos:start="59:23" pos:end="59:24"><expr pos:start="59:23" pos:end="59:24"><name pos:start="59:23" pos:end="59:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><call pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:21">tcg_temp_free</name><argument_list pos:start="61:22" pos:end="61:25">(<argument pos:start="61:23" pos:end="61:24"><expr pos:start="61:23" pos:end="61:24"><name pos:start="61:23" pos:end="61:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:42"><expr pos:start="65:5" pos:end="65:41"><call pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:18">tcg_gen_mov_tl</name><argument_list pos:start="65:19" pos:end="65:41">(<argument pos:start="65:20" pos:end="65:25"><expr pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:25">cpu_pc</name></expr></argument>, <argument pos:start="65:28" pos:end="65:40"><expr pos:start="65:28" pos:end="65:40"><name pos:start="65:28" pos:end="65:40"><name pos:start="65:28" pos:end="65:32">cpu_R</name><index pos:start="65:33" pos:end="65:40">[<expr pos:start="65:34" pos:end="65:39"><name pos:start="65:34" pos:end="65:39"><name pos:start="65:34" pos:end="65:35">dc</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:39">r0</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:28"><expr pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:6">dc</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:14">is_jmp</name></name> <operator pos:start="69:16" pos:end="69:16">=</operator> <name pos:start="69:18" pos:end="69:27">DISAS_JUMP</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
