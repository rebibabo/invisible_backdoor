<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13630.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">au_read_header</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:20">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:19">id</name></decl>, <decl pos:start="11:22" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:22" pos:end="11:29">channels</name></decl>, <decl pos:start="11:32" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:32" pos:end="11:35">rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">bps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:8">enum</name> <name pos:start="15:10" pos:end="15:18">AVCodecID</name></name></type> <name pos:start="15:20" pos:end="15:24">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">st</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:29">/* check ".snd" header */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:7">tag</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:23"><name pos:start="23:11" pos:end="23:19">avio_rl32</name><argument_list pos:start="23:20" pos:end="23:23">(<argument pos:start="23:21" pos:end="23:22"><expr pos:start="23:21" pos:end="23:22"><name pos:start="23:21" pos:end="23:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:41">(<expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:11">tag</name> <operator pos:start="25:13" pos:end="25:14">!=</operator> <call pos:start="25:16" pos:end="25:40"><name pos:start="25:16" pos:end="25:20">MKTAG</name><argument_list pos:start="25:21" pos:end="25:40">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><literal type="char" pos:start="25:22" pos:end="25:24">'.'</literal></expr></argument>, <argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><literal type="char" pos:start="25:27" pos:end="25:29">'s'</literal></expr></argument>, <argument pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><literal type="char" pos:start="25:32" pos:end="25:34">'n'</literal></expr></argument>, <argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><literal type="char" pos:start="25:37" pos:end="25:39">'d'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:8">size</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:24"><name pos:start="29:12" pos:end="29:20">avio_rb32</name><argument_list pos:start="29:21" pos:end="29:24">(<argument pos:start="29:22" pos:end="29:23"><expr pos:start="29:22" pos:end="29:23"><name pos:start="29:22" pos:end="29:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:27" pos:end="29:43">/* header size */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><call pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:13">avio_rb32</name><argument_list pos:start="31:14" pos:end="31:17">(<argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><name pos:start="31:15" pos:end="31:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:20" pos:end="31:34">/* data size */</comment>



    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:6">id</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:18">avio_rb32</name><argument_list pos:start="35:19" pos:end="35:22">(<argument pos:start="35:20" pos:end="35:21"><expr pos:start="35:20" pos:end="35:21"><name pos:start="35:20" pos:end="35:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:8">rate</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:24"><name pos:start="37:12" pos:end="37:20">avio_rb32</name><argument_list pos:start="37:21" pos:end="37:24">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:12">channels</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:28"><name pos:start="39:16" pos:end="39:24">avio_rb32</name><argument_list pos:start="39:25" pos:end="39:28">(<argument pos:start="39:26" pos:end="39:27"><expr pos:start="39:26" pos:end="39:27"><name pos:start="39:26" pos:end="39:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:9">codec</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:46"><name pos:start="43:13" pos:end="43:27">ff_codec_get_id</name><argument_list pos:start="43:28" pos:end="43:46">(<argument pos:start="43:29" pos:end="43:41"><expr pos:start="43:29" pos:end="43:41"><name pos:start="43:29" pos:end="43:41">codec_au_tags</name></expr></argument>, <argument pos:start="43:44" pos:end="43:45"><expr pos:start="43:44" pos:end="43:45"><name pos:start="43:44" pos:end="43:45">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:34">(<expr pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:13">codec</name> <operator pos:start="47:15" pos:end="47:16">==</operator> <name pos:start="47:18" pos:end="47:33">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="47:36" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:36">

        <expr_stmt pos:start="49:9" pos:end="49:79"><expr pos:start="49:9" pos:end="49:78"><call pos:start="49:9" pos:end="49:78"><name pos:start="49:9" pos:end="49:29">av_log_ask_for_sample</name><argument_list pos:start="49:30" pos:end="49:78">(<argument pos:start="49:31" pos:end="49:31"><expr pos:start="49:31" pos:end="49:31"><name pos:start="49:31" pos:end="49:31">s</name></expr></argument>, <argument pos:start="49:34" pos:end="49:73"><expr pos:start="49:34" pos:end="49:73"><literal type="string" pos:start="49:34" pos:end="49:73">"unknown or unsupported codec tag: %d\n"</literal></expr></argument>, <argument pos:start="49:76" pos:end="49:77"><expr pos:start="49:76" pos:end="49:77"><name pos:start="49:76" pos:end="49:77">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:36">return <expr pos:start="51:16" pos:end="51:35"><name pos:start="51:16" pos:end="51:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:7">bps</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:39"><name pos:start="57:11" pos:end="57:32">av_get_bits_per_sample</name><argument_list pos:start="57:33" pos:end="57:39">(<argument pos:start="57:34" pos:end="57:38"><expr pos:start="57:34" pos:end="57:38"><name pos:start="57:34" pos:end="57:38">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:13">(<expr pos:start="59:9" pos:end="59:12"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:12">bps</name></expr>)</condition> <block pos:start="59:15" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:36">

        <expr_stmt pos:start="61:9" pos:end="61:74"><expr pos:start="61:9" pos:end="61:73"><call pos:start="61:9" pos:end="61:73"><name pos:start="61:9" pos:end="61:29">av_log_ask_for_sample</name><argument_list pos:start="61:30" pos:end="61:73">(<argument pos:start="61:31" pos:end="61:31"><expr pos:start="61:31" pos:end="61:31"><name pos:start="61:31" pos:end="61:31">s</name></expr></argument>, <argument pos:start="61:34" pos:end="61:72"><expr pos:start="61:34" pos:end="61:72"><literal type="string" pos:start="61:34" pos:end="61:72">"could not determine bits per sample\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:36">return <expr pos:start="63:16" pos:end="63:35"><name pos:start="63:16" pos:end="63:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:39">(<expr pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:16">channels</name> <operator pos:start="69:18" pos:end="69:19">==</operator> <literal type="number" pos:start="69:21" pos:end="69:21">0</literal> <operator pos:start="69:23" pos:end="69:24">||</operator> <name pos:start="69:26" pos:end="69:33">channels</name> <operator pos:start="69:35" pos:end="69:35">&gt;</operator> <literal type="number" pos:start="69:37" pos:end="69:38">64</literal></expr>)</condition> <block pos:start="69:41" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:35">

        <expr_stmt pos:start="71:9" pos:end="71:77"><expr pos:start="71:9" pos:end="71:76"><call pos:start="71:9" pos:end="71:76"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:76">(<argument pos:start="71:16" pos:end="71:16"><expr pos:start="71:16" pos:end="71:16"><name pos:start="71:16" pos:end="71:16">s</name></expr></argument>, <argument pos:start="71:19" pos:end="71:30"><expr pos:start="71:19" pos:end="71:30"><name pos:start="71:19" pos:end="71:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:33" pos:end="71:65"><expr pos:start="71:33" pos:end="71:65"><literal type="string" pos:start="71:33" pos:end="71:65">"Invalid number of channels %d\n"</literal></expr></argument>, <argument pos:start="71:68" pos:end="71:75"><expr pos:start="71:68" pos:end="71:75"><name pos:start="71:68" pos:end="71:75">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:35">return <expr pos:start="73:16" pos:end="73:34"><name pos:start="73:16" pos:end="73:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:19">(<expr pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:12">size</name> <operator pos:start="79:14" pos:end="79:15">&gt;=</operator> <literal type="number" pos:start="79:17" pos:end="79:18">24</literal></expr>)</condition> <block pos:start="79:21" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:33">

        <comment type="block" pos:start="81:9" pos:end="81:30">/* skip unused data */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><call pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:17">avio_skip</name><argument_list pos:start="83:18" pos:end="83:32">(<argument pos:start="83:19" pos:end="83:20"><expr pos:start="83:19" pos:end="83:20"><name pos:start="83:19" pos:end="83:20">pb</name></expr></argument>, <argument pos:start="83:23" pos:end="83:31"><expr pos:start="83:23" pos:end="83:31"><name pos:start="83:23" pos:end="83:26">size</name> <operator pos:start="83:28" pos:end="83:28">-</operator> <literal type="number" pos:start="83:30" pos:end="83:31">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:48">/* now we are ready: build format streams */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:38"><expr pos:start="91:5" pos:end="91:37"><name pos:start="91:5" pos:end="91:6">st</name> <operator pos:start="91:8" pos:end="91:8">=</operator> <call pos:start="91:10" pos:end="91:37"><name pos:start="91:10" pos:end="91:28">avformat_new_stream</name><argument_list pos:start="91:29" pos:end="91:37">(<argument pos:start="91:30" pos:end="91:30"><expr pos:start="91:30" pos:end="91:30"><name pos:start="91:30" pos:end="91:30">s</name></expr></argument>, <argument pos:start="91:33" pos:end="91:36"><expr pos:start="91:33" pos:end="91:36"><name pos:start="91:33" pos:end="91:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:18"><if pos:start="93:5" pos:end="95:18">if <condition pos:start="93:8" pos:end="93:12">(<expr pos:start="93:9" pos:end="93:11"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:11">st</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:18"><block_content pos:start="95:9" pos:end="95:18">

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:47"><expr pos:start="97:5" pos:end="97:46"><name pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:6">st</name><operator pos:start="97:7" pos:end="97:8">-&gt;</operator><name pos:start="97:9" pos:end="97:13">codec</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:25">codec_type</name></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <name pos:start="97:29" pos:end="97:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:30"><expr pos:start="99:5" pos:end="99:29"><name pos:start="99:5" pos:end="99:24"><name pos:start="99:5" pos:end="99:6">st</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:13">codec</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:24">codec_tag</name></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <name pos:start="99:28" pos:end="99:29">id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:32"><expr pos:start="101:5" pos:end="101:31"><name pos:start="101:5" pos:end="101:23"><name pos:start="101:5" pos:end="101:6">st</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:13">codec</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:23">codec_id</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:31">codec</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:35"><expr pos:start="103:5" pos:end="103:34"><name pos:start="103:5" pos:end="103:23"><name pos:start="103:5" pos:end="103:6">st</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:13">codec</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:23">channels</name></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:34">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:34"><expr pos:start="105:5" pos:end="105:33"><name pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:6">st</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:13">codec</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:26">sample_rate</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:33">rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:51"><expr pos:start="107:5" pos:end="107:50"><name pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:6">st</name><operator pos:start="107:7" pos:end="107:8">-&gt;</operator><name pos:start="107:9" pos:end="107:13">codec</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:23">bit_rate</name></name>    <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:37">channels</name> <operator pos:start="107:39" pos:end="107:39">*</operator> <name pos:start="107:41" pos:end="107:44">rate</name> <operator pos:start="107:46" pos:end="107:46">*</operator> <name pos:start="107:48" pos:end="107:50">bps</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:49"><expr pos:start="109:5" pos:end="109:48"><name pos:start="109:5" pos:end="109:26"><name pos:start="109:5" pos:end="109:6">st</name><operator pos:start="109:7" pos:end="109:8">-&gt;</operator><name pos:start="109:9" pos:end="109:13">codec</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:26">block_align</name></name> <operator pos:start="109:28" pos:end="109:28">=</operator> <name pos:start="109:30" pos:end="109:37">channels</name> <operator pos:start="109:39" pos:end="109:39">*</operator> <name pos:start="109:41" pos:end="109:43">bps</name> <operator pos:start="109:45" pos:end="109:46">&gt;&gt;</operator> <literal type="number" pos:start="109:48" pos:end="109:48">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:41"><expr pos:start="111:5" pos:end="111:40"><call pos:start="111:5" pos:end="111:40"><name pos:start="111:5" pos:end="111:23">avpriv_set_pts_info</name><argument_list pos:start="111:24" pos:end="111:40">(<argument pos:start="111:25" pos:end="111:26"><expr pos:start="111:25" pos:end="111:26"><name pos:start="111:25" pos:end="111:26">st</name></expr></argument>, <argument pos:start="111:29" pos:end="111:30"><expr pos:start="111:29" pos:end="111:30"><literal type="number" pos:start="111:29" pos:end="111:30">64</literal></expr></argument>, <argument pos:start="111:33" pos:end="111:33"><expr pos:start="111:33" pos:end="111:33"><literal type="number" pos:start="111:33" pos:end="111:33">1</literal></expr></argument>, <argument pos:start="111:36" pos:end="111:39"><expr pos:start="111:36" pos:end="111:39"><name pos:start="111:36" pos:end="111:39">rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
