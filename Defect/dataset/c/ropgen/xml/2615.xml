<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2615.c" pos:tabs="8"><function pos:start="1:1" pos:end="2911:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">disas_arm_insn</name><parameter_list pos:start="1:27" pos:end="1:62">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:39">DisasContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:52">unsigned</name> <name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:61">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2911:1">{<block_content pos:start="5:5" pos:end="2909:5">

    <decl_stmt pos:start="5:5" pos:end="5:62"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:21">cond</name></decl>, <decl pos:start="5:24" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:24" pos:end="5:26">val</name></decl>, <decl pos:start="5:29" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:29" pos:end="5:31">op1</name></decl>, <decl pos:start="5:34" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:34" pos:end="5:34">i</name></decl>, <decl pos:start="5:37" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:37" pos:end="5:41">shift</name></decl>, <decl pos:start="5:44" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:44" pos:end="5:45">rm</name></decl>, <decl pos:start="5:48" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:48" pos:end="5:49">rs</name></decl>, <decl pos:start="5:52" pos:end="5:53"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:52" pos:end="5:53">rn</name></decl>, <decl pos:start="5:56" pos:end="5:57"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:56" pos:end="5:57">rd</name></decl>, <decl pos:start="5:60" pos:end="5:61"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:60" pos:end="5:61">sh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i32</name></type> <name pos:start="7:14" pos:end="7:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">TCGv_i32</name></type> <name pos:start="9:14" pos:end="9:17">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">TCGv_i32</name></type> <name pos:start="11:14" pos:end="11:17">tmp3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">TCGv_i32</name></type> <name pos:start="13:14" pos:end="13:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">TCGv_i64</name></type> <name pos:start="15:14" pos:end="15:18">tmp64</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:48">/* M variants do not implement ARM mode.  */</comment>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:41">(<expr pos:start="21:9" pos:end="21:40"><call pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:22">arm_dc_feature</name><argument_list pos:start="21:23" pos:end="21:40">(<argument pos:start="21:24" pos:end="21:24"><expr pos:start="21:24" pos:end="21:24"><name pos:start="21:24" pos:end="21:24">s</name></expr></argument>, <argument pos:start="21:27" pos:end="21:39"><expr pos:start="21:27" pos:end="21:39"><name pos:start="21:27" pos:end="21:39">ARM_FEATURE_M</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:43" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:24">

        <goto pos:start="23:9" pos:end="23:24">goto <name pos:start="23:14" pos:end="23:23">illegal_op</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:8">cond</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <name pos:start="27:12" pos:end="27:15">insn</name> <operator pos:start="27:17" pos:end="27:18">&gt;&gt;</operator> <literal type="number" pos:start="27:20" pos:end="27:21">28</literal></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="427:5"><if pos:start="29:5" pos:end="427:5">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:12">cond</name> <operator pos:start="29:14" pos:end="29:15">==</operator> <literal type="number" pos:start="29:17" pos:end="29:19">0xf</literal></expr>)</condition><block pos:start="29:21" pos:end="427:5">{<block_content pos:start="39:9" pos:end="425:24">

        <comment type="block" pos:start="31:9" pos:end="37:11">/* In ARMv3 and v4 the NV condition is UNPREDICTABLE; we

         * choose to UNDEF. In ARMv5 and above the space is used

         * for miscellaneous unconditional instructions.

         */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><call pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:12">ARCH</name><argument_list pos:start="39:13" pos:end="39:15">(<argument pos:start="39:14" pos:end="39:14"><expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:42">/* Unconditional instructions.  */</comment>

        <if_stmt pos:start="45:9" pos:end="65:9"><if pos:start="45:9" pos:end="65:9">if <condition pos:start="45:12" pos:end="45:36">(<expr pos:start="45:13" pos:end="45:35"><operator pos:start="45:13" pos:end="45:13">(</operator><operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:18">insn</name> <operator pos:start="45:20" pos:end="45:21">&gt;&gt;</operator> <literal type="number" pos:start="45:23" pos:end="45:24">25</literal><operator pos:start="45:25" pos:end="45:25">)</operator> <operator pos:start="45:27" pos:end="45:27">&amp;</operator> <literal type="number" pos:start="45:29" pos:end="45:29">7</literal><operator pos:start="45:30" pos:end="45:30">)</operator> <operator pos:start="45:32" pos:end="45:33">==</operator> <literal type="number" pos:start="45:35" pos:end="45:35">1</literal></expr>)</condition> <block pos:start="45:38" pos:end="65:9">{<block_content pos:start="49:13" pos:end="63:19">

            <comment type="block" pos:start="47:13" pos:end="47:40">/* NEON Data processing.  */</comment>

            <if_stmt pos:start="49:13" pos:end="53:13"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:53">(<expr pos:start="49:17" pos:end="49:52"><operator pos:start="49:17" pos:end="49:17">!</operator><call pos:start="49:18" pos:end="49:52"><name pos:start="49:18" pos:end="49:31">arm_dc_feature</name><argument_list pos:start="49:32" pos:end="49:52">(<argument pos:start="49:33" pos:end="49:33"><expr pos:start="49:33" pos:end="49:33"><name pos:start="49:33" pos:end="49:33">s</name></expr></argument>, <argument pos:start="49:36" pos:end="49:51"><expr pos:start="49:36" pos:end="49:51"><name pos:start="49:36" pos:end="49:51">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:55" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:32">

                <goto pos:start="51:17" pos:end="51:32">goto <name pos:start="51:22" pos:end="51:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="57:13" pos:end="61:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:46">(<expr pos:start="57:17" pos:end="57:45"><call pos:start="57:17" pos:end="57:45"><name pos:start="57:17" pos:end="57:36">disas_neon_data_insn</name><argument_list pos:start="57:37" pos:end="57:45">(<argument pos:start="57:38" pos:end="57:38"><expr pos:start="57:38" pos:end="57:38"><name pos:start="57:38" pos:end="57:38">s</name></expr></argument>, <argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:44">insn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:48" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:32">

                <goto pos:start="59:17" pos:end="59:32">goto <name pos:start="59:22" pos:end="59:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="63:13" pos:end="63:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="87:9"><if pos:start="67:9" pos:end="87:9">if <condition pos:start="67:12" pos:end="67:46">(<expr pos:start="67:13" pos:end="67:45"><operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:17">insn</name> <operator pos:start="67:19" pos:end="67:19">&amp;</operator> <literal type="number" pos:start="67:21" pos:end="67:30">0x0f100000</literal><operator pos:start="67:31" pos:end="67:31">)</operator> <operator pos:start="67:33" pos:end="67:34">==</operator> <literal type="number" pos:start="67:36" pos:end="67:45">0x04000000</literal></expr>)</condition> <block pos:start="67:48" pos:end="87:9">{<block_content pos:start="71:13" pos:end="85:19">

            <comment type="block" pos:start="69:13" pos:end="69:35">/* NEON load/store.  */</comment>

            <if_stmt pos:start="71:13" pos:end="75:13"><if pos:start="71:13" pos:end="75:13">if <condition pos:start="71:16" pos:end="71:53">(<expr pos:start="71:17" pos:end="71:52"><operator pos:start="71:17" pos:end="71:17">!</operator><call pos:start="71:18" pos:end="71:52"><name pos:start="71:18" pos:end="71:31">arm_dc_feature</name><argument_list pos:start="71:32" pos:end="71:52">(<argument pos:start="71:33" pos:end="71:33"><expr pos:start="71:33" pos:end="71:33"><name pos:start="71:33" pos:end="71:33">s</name></expr></argument>, <argument pos:start="71:36" pos:end="71:51"><expr pos:start="71:36" pos:end="71:51"><name pos:start="71:36" pos:end="71:51">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:55" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:32">

                <goto pos:start="73:17" pos:end="73:32">goto <name pos:start="73:22" pos:end="73:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="79:13" pos:end="83:13"><if pos:start="79:13" pos:end="83:13">if <condition pos:start="79:16" pos:end="79:44">(<expr pos:start="79:17" pos:end="79:43"><call pos:start="79:17" pos:end="79:43"><name pos:start="79:17" pos:end="79:34">disas_neon_ls_insn</name><argument_list pos:start="79:35" pos:end="79:43">(<argument pos:start="79:36" pos:end="79:36"><expr pos:start="79:36" pos:end="79:36"><name pos:start="79:36" pos:end="79:36">s</name></expr></argument>, <argument pos:start="79:39" pos:end="79:42"><expr pos:start="79:39" pos:end="79:42"><name pos:start="79:39" pos:end="79:42">insn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:46" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:32">

                <goto pos:start="81:17" pos:end="81:32">goto <name pos:start="81:22" pos:end="81:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="85:13" pos:end="85:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="101:9"><if pos:start="89:9" pos:end="101:9">if <condition pos:start="89:12" pos:end="89:46">(<expr pos:start="89:13" pos:end="89:45"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:17">insn</name> <operator pos:start="89:19" pos:end="89:19">&amp;</operator> <literal type="number" pos:start="89:21" pos:end="89:30">0x0f000e10</literal><operator pos:start="89:31" pos:end="89:31">)</operator> <operator pos:start="89:33" pos:end="89:34">==</operator> <literal type="number" pos:start="89:36" pos:end="89:45">0x0e000a00</literal></expr>)</condition> <block pos:start="89:48" pos:end="101:9">{<block_content pos:start="93:13" pos:end="99:19">

            <comment type="block" pos:start="91:13" pos:end="91:23">/* VFP.  */</comment>

            <if_stmt pos:start="93:13" pos:end="97:13"><if pos:start="93:13" pos:end="97:13">if <condition pos:start="93:16" pos:end="93:40">(<expr pos:start="93:17" pos:end="93:39"><call pos:start="93:17" pos:end="93:39"><name pos:start="93:17" pos:end="93:30">disas_vfp_insn</name><argument_list pos:start="93:31" pos:end="93:39">(<argument pos:start="93:32" pos:end="93:32"><expr pos:start="93:32" pos:end="93:32"><name pos:start="93:32" pos:end="93:32">s</name></expr></argument>, <argument pos:start="93:35" pos:end="93:38"><expr pos:start="93:35" pos:end="93:38"><name pos:start="93:35" pos:end="93:38">insn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:42" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:32">

                <goto pos:start="95:17" pos:end="95:32">goto <name pos:start="95:22" pos:end="95:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="99:13" pos:end="99:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="125:9"><if pos:start="103:9" pos:end="125:9">if <condition pos:start="103:12" pos:end="105:48">(<expr pos:start="103:13" pos:end="105:47"><operator pos:start="103:13" pos:end="103:13">(</operator><operator pos:start="103:14" pos:end="103:14">(</operator><name pos:start="103:15" pos:end="103:18">insn</name> <operator pos:start="103:20" pos:end="103:20">&amp;</operator> <literal type="number" pos:start="103:22" pos:end="103:31">0x0f30f000</literal><operator pos:start="103:32" pos:end="103:32">)</operator> <operator pos:start="103:34" pos:end="103:35">==</operator> <literal type="number" pos:start="103:37" pos:end="103:46">0x0510f000</literal><operator pos:start="103:47" pos:end="103:47">)</operator> <operator pos:start="103:49" pos:end="103:50">||</operator>

            <operator pos:start="105:13" pos:end="105:13">(</operator><operator pos:start="105:14" pos:end="105:14">(</operator><name pos:start="105:15" pos:end="105:18">insn</name> <operator pos:start="105:20" pos:end="105:20">&amp;</operator> <literal type="number" pos:start="105:22" pos:end="105:31">0x0f30f010</literal><operator pos:start="105:32" pos:end="105:32">)</operator> <operator pos:start="105:34" pos:end="105:35">==</operator> <literal type="number" pos:start="105:37" pos:end="105:46">0x0710f000</literal><operator pos:start="105:47" pos:end="105:47">)</operator></expr>)</condition> <block pos:start="105:50" pos:end="125:9">{<block_content pos:start="107:13" pos:end="123:19">

            <if_stmt pos:start="107:13" pos:end="117:13"><if pos:start="107:13" pos:end="117:13">if <condition pos:start="107:16" pos:end="107:40">(<expr pos:start="107:17" pos:end="107:39"><operator pos:start="107:17" pos:end="107:17">(</operator><name pos:start="107:18" pos:end="107:21">insn</name> <operator pos:start="107:23" pos:end="107:23">&amp;</operator> <operator pos:start="107:25" pos:end="107:25">(</operator><literal type="number" pos:start="107:26" pos:end="107:26">1</literal> <operator pos:start="107:28" pos:end="107:29">&lt;&lt;</operator> <literal type="number" pos:start="107:31" pos:end="107:32">22</literal><operator pos:start="107:33" pos:end="107:33">)</operator><operator pos:start="107:34" pos:end="107:34">)</operator> <operator pos:start="107:36" pos:end="107:37">==</operator> <literal type="number" pos:start="107:39" pos:end="107:39">0</literal></expr>)</condition> <block pos:start="107:42" pos:end="117:13">{<block_content pos:start="111:17" pos:end="115:17">

                <comment type="block" pos:start="109:17" pos:end="109:32">/* PLDW; v7MP */</comment>

                <if_stmt pos:start="111:17" pos:end="115:17"><if pos:start="111:17" pos:end="115:17">if <condition pos:start="111:20" pos:end="111:57">(<expr pos:start="111:21" pos:end="111:56"><operator pos:start="111:21" pos:end="111:21">!</operator><call pos:start="111:22" pos:end="111:56"><name pos:start="111:22" pos:end="111:35">arm_dc_feature</name><argument_list pos:start="111:36" pos:end="111:56">(<argument pos:start="111:37" pos:end="111:37"><expr pos:start="111:37" pos:end="111:37"><name pos:start="111:37" pos:end="111:37">s</name></expr></argument>, <argument pos:start="111:40" pos:end="111:55"><expr pos:start="111:40" pos:end="111:55"><name pos:start="111:40" pos:end="111:55">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:59" pos:end="115:17">{<block_content pos:start="113:21" pos:end="113:36">

                    <goto pos:start="113:21" pos:end="113:36">goto <name pos:start="113:26" pos:end="113:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="119:13" pos:end="119:38">/* Otherwise PLD; v5TE+ */</comment>

            <expr_stmt pos:start="121:13" pos:end="121:22"><expr pos:start="121:13" pos:end="121:21"><call pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:16">ARCH</name><argument_list pos:start="121:17" pos:end="121:21">(<argument pos:start="121:18" pos:end="121:20"><expr pos:start="121:18" pos:end="121:20"><literal type="number" pos:start="121:18" pos:end="121:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="123:13" pos:end="123:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="127:9" pos:end="135:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="129:48">(<expr pos:start="127:13" pos:end="129:47"><operator pos:start="127:13" pos:end="127:13">(</operator><operator pos:start="127:14" pos:end="127:14">(</operator><name pos:start="127:15" pos:end="127:18">insn</name> <operator pos:start="127:20" pos:end="127:20">&amp;</operator> <literal type="number" pos:start="127:22" pos:end="127:31">0x0f70f000</literal><operator pos:start="127:32" pos:end="127:32">)</operator> <operator pos:start="127:34" pos:end="127:35">==</operator> <literal type="number" pos:start="127:37" pos:end="127:46">0x0450f000</literal><operator pos:start="127:47" pos:end="127:47">)</operator> <operator pos:start="127:49" pos:end="127:50">||</operator>

            <operator pos:start="129:13" pos:end="129:13">(</operator><operator pos:start="129:14" pos:end="129:14">(</operator><name pos:start="129:15" pos:end="129:18">insn</name> <operator pos:start="129:20" pos:end="129:20">&amp;</operator> <literal type="number" pos:start="129:22" pos:end="129:31">0x0f70f010</literal><operator pos:start="129:32" pos:end="129:32">)</operator> <operator pos:start="129:34" pos:end="129:35">==</operator> <literal type="number" pos:start="129:37" pos:end="129:46">0x0650f000</literal><operator pos:start="129:47" pos:end="129:47">)</operator></expr>)</condition> <block pos:start="129:50" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:19">

            <expr_stmt pos:start="131:13" pos:end="131:20"><expr pos:start="131:13" pos:end="131:19"><call pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:16">ARCH</name><argument_list pos:start="131:17" pos:end="131:19">(<argument pos:start="131:18" pos:end="131:18"><expr pos:start="131:18" pos:end="131:18"><literal type="number" pos:start="131:18" pos:end="131:18">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:19">return;</return> <comment type="block" pos:start="133:21" pos:end="133:33">/* PLI; V7 */</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="149:9"><if pos:start="137:9" pos:end="149:9">if <condition pos:start="137:12" pos:end="139:48">(<expr pos:start="137:13" pos:end="139:47"><operator pos:start="137:13" pos:end="137:13">(</operator><operator pos:start="137:14" pos:end="137:14">(</operator><name pos:start="137:15" pos:end="137:18">insn</name> <operator pos:start="137:20" pos:end="137:20">&amp;</operator> <literal type="number" pos:start="137:22" pos:end="137:31">0x0f700000</literal><operator pos:start="137:32" pos:end="137:32">)</operator> <operator pos:start="137:34" pos:end="137:35">==</operator> <literal type="number" pos:start="137:37" pos:end="137:46">0x04100000</literal><operator pos:start="137:47" pos:end="137:47">)</operator> <operator pos:start="137:49" pos:end="137:50">||</operator>

            <operator pos:start="139:13" pos:end="139:13">(</operator><operator pos:start="139:14" pos:end="139:14">(</operator><name pos:start="139:15" pos:end="139:18">insn</name> <operator pos:start="139:20" pos:end="139:20">&amp;</operator> <literal type="number" pos:start="139:22" pos:end="139:31">0x0f700010</literal><operator pos:start="139:32" pos:end="139:32">)</operator> <operator pos:start="139:34" pos:end="139:35">==</operator> <literal type="number" pos:start="139:37" pos:end="139:46">0x06100000</literal><operator pos:start="139:47" pos:end="139:47">)</operator></expr>)</condition> <block pos:start="139:50" pos:end="149:9">{<block_content pos:start="141:13" pos:end="147:19">

            <if_stmt pos:start="141:13" pos:end="145:13"><if pos:start="141:13" pos:end="145:13">if <condition pos:start="141:16" pos:end="141:53">(<expr pos:start="141:17" pos:end="141:52"><operator pos:start="141:17" pos:end="141:17">!</operator><call pos:start="141:18" pos:end="141:52"><name pos:start="141:18" pos:end="141:31">arm_dc_feature</name><argument_list pos:start="141:32" pos:end="141:52">(<argument pos:start="141:33" pos:end="141:33"><expr pos:start="141:33" pos:end="141:33"><name pos:start="141:33" pos:end="141:33">s</name></expr></argument>, <argument pos:start="141:36" pos:end="141:51"><expr pos:start="141:36" pos:end="141:51"><name pos:start="141:36" pos:end="141:51">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:55" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:32">

                <goto pos:start="143:17" pos:end="143:32">goto <name pos:start="143:22" pos:end="143:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="147:13" pos:end="147:19">return;</return> <comment type="block" pos:start="147:21" pos:end="147:65">/* v7MP: Unallocated memory hint: must NOP */</comment>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="153:9" pos:end="423:9"><if pos:start="153:9" pos:end="171:9">if <condition pos:start="153:12" pos:end="153:46">(<expr pos:start="153:13" pos:end="153:45"><operator pos:start="153:13" pos:end="153:13">(</operator><name pos:start="153:14" pos:end="153:17">insn</name> <operator pos:start="153:19" pos:end="153:19">&amp;</operator> <literal type="number" pos:start="153:21" pos:end="153:30">0x0ffffdff</literal><operator pos:start="153:31" pos:end="153:31">)</operator> <operator pos:start="153:33" pos:end="153:34">==</operator> <literal type="number" pos:start="153:36" pos:end="153:45">0x01010000</literal></expr>)</condition> <block pos:start="153:48" pos:end="171:9">{<block_content pos:start="155:13" pos:end="169:19">

            <expr_stmt pos:start="155:13" pos:end="155:20"><expr pos:start="155:13" pos:end="155:19"><call pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:16">ARCH</name><argument_list pos:start="155:17" pos:end="155:19">(<argument pos:start="155:18" pos:end="155:18"><expr pos:start="155:18" pos:end="155:18"><literal type="number" pos:start="155:18" pos:end="155:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="157:13" pos:end="157:24">/* setend */</comment>

            <if_stmt pos:start="159:13" pos:end="167:13"><if pos:start="159:13" pos:end="167:13">if <condition pos:start="159:16" pos:end="159:51">(<expr pos:start="159:17" pos:end="159:50"><operator pos:start="159:17" pos:end="159:17">(</operator><operator pos:start="159:18" pos:end="159:18">(</operator><name pos:start="159:19" pos:end="159:22">insn</name> <operator pos:start="159:24" pos:end="159:25">&gt;&gt;</operator> <literal type="number" pos:start="159:27" pos:end="159:27">9</literal><operator pos:start="159:28" pos:end="159:28">)</operator> <operator pos:start="159:30" pos:end="159:30">&amp;</operator> <literal type="number" pos:start="159:32" pos:end="159:32">1</literal><operator pos:start="159:33" pos:end="159:33">)</operator> <operator pos:start="159:35" pos:end="159:36">!=</operator> <name pos:start="159:38" pos:end="159:50"><name pos:start="159:38" pos:end="159:38">s</name><operator pos:start="159:39" pos:end="159:40">-&gt;</operator><name pos:start="159:41" pos:end="159:50">bswap_code</name></name></expr>)</condition> <block pos:start="159:53" pos:end="167:13">{<block_content pos:start="163:17" pos:end="165:32">

                <comment type="block" pos:start="161:17" pos:end="161:67">/* Dynamic endianness switching not implemented. */</comment>

                <expr_stmt pos:start="163:17" pos:end="163:72"><expr pos:start="163:17" pos:end="163:71"><call pos:start="163:17" pos:end="163:71"><name pos:start="163:17" pos:end="163:29">qemu_log_mask</name><argument_list pos:start="163:30" pos:end="163:71">(<argument pos:start="163:31" pos:end="163:39"><expr pos:start="163:31" pos:end="163:39"><name pos:start="163:31" pos:end="163:39">LOG_UNIMP</name></expr></argument>, <argument pos:start="163:42" pos:end="163:70"><expr pos:start="163:42" pos:end="163:70"><literal type="string" pos:start="163:42" pos:end="163:70">"arm: unimplemented setend\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="165:17" pos:end="165:32">goto <name pos:start="165:22" pos:end="165:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="169:13" pos:end="169:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="171:11" pos:end="213:9">else if <condition pos:start="171:19" pos:end="171:53">(<expr pos:start="171:20" pos:end="171:52"><operator pos:start="171:20" pos:end="171:20">(</operator><name pos:start="171:21" pos:end="171:24">insn</name> <operator pos:start="171:26" pos:end="171:26">&amp;</operator> <literal type="number" pos:start="171:28" pos:end="171:37">0x0fffff00</literal><operator pos:start="171:38" pos:end="171:38">)</operator> <operator pos:start="171:40" pos:end="171:41">==</operator> <literal type="number" pos:start="171:43" pos:end="171:52">0x057ff000</literal></expr>)</condition> <block pos:start="171:55" pos:end="213:9">{<block_content pos:start="173:13" pos:end="211:13">

            <switch pos:start="173:13" pos:end="211:13">switch <condition pos:start="173:20" pos:end="173:38">(<expr pos:start="173:21" pos:end="173:37"><operator pos:start="173:21" pos:end="173:21">(</operator><name pos:start="173:22" pos:end="173:25">insn</name> <operator pos:start="173:27" pos:end="173:28">&gt;&gt;</operator> <literal type="number" pos:start="173:30" pos:end="173:30">4</literal><operator pos:start="173:31" pos:end="173:31">)</operator> <operator pos:start="173:33" pos:end="173:33">&amp;</operator> <literal type="number" pos:start="173:35" pos:end="173:37">0xf</literal></expr>)</condition> <block pos:start="173:40" pos:end="211:13">{<block_content pos:start="175:13" pos:end="209:32">

            <case pos:start="175:13" pos:end="175:19">case <expr pos:start="175:18" pos:end="175:18"><literal type="number" pos:start="175:18" pos:end="175:18">1</literal></expr>:</case> <comment type="block" pos:start="175:21" pos:end="175:31">/* clrex */</comment>

                <expr_stmt pos:start="177:17" pos:end="177:25"><expr pos:start="177:17" pos:end="177:24"><call pos:start="177:17" pos:end="177:24"><name pos:start="177:17" pos:end="177:20">ARCH</name><argument_list pos:start="177:21" pos:end="177:24">(<argument pos:start="177:22" pos:end="177:23"><expr pos:start="177:22" pos:end="177:23"><literal type="number" pos:start="177:22" pos:end="177:23">6K</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:29"><expr pos:start="179:17" pos:end="179:28"><call pos:start="179:17" pos:end="179:28"><name pos:start="179:17" pos:end="179:25">gen_clrex</name><argument_list pos:start="179:26" pos:end="179:28">(<argument pos:start="179:27" pos:end="179:27"><expr pos:start="179:27" pos:end="179:27"><name pos:start="179:27" pos:end="179:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="181:17" pos:end="181:23">return;</return>

            <case pos:start="183:13" pos:end="183:19">case <expr pos:start="183:18" pos:end="183:18"><literal type="number" pos:start="183:18" pos:end="183:18">4</literal></expr>:</case> <comment type="block" pos:start="183:21" pos:end="183:29">/* dsb */</comment>

            <case pos:start="185:13" pos:end="185:19">case <expr pos:start="185:18" pos:end="185:18"><literal type="number" pos:start="185:18" pos:end="185:18">5</literal></expr>:</case> <comment type="block" pos:start="185:21" pos:end="185:29">/* dmb */</comment>

                <expr_stmt pos:start="187:17" pos:end="187:24"><expr pos:start="187:17" pos:end="187:23"><call pos:start="187:17" pos:end="187:23"><name pos:start="187:17" pos:end="187:20">ARCH</name><argument_list pos:start="187:21" pos:end="187:23">(<argument pos:start="187:22" pos:end="187:22"><expr pos:start="187:22" pos:end="187:22"><literal type="number" pos:start="187:22" pos:end="187:22">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="189:17" pos:end="189:68">/* We don't emulate caches so these are a no-op.  */</comment>

                <return pos:start="191:17" pos:end="191:23">return;</return>

            <case pos:start="193:13" pos:end="193:19">case <expr pos:start="193:18" pos:end="193:18"><literal type="number" pos:start="193:18" pos:end="193:18">6</literal></expr>:</case> <comment type="block" pos:start="193:21" pos:end="193:29">/* isb */</comment>

                <comment type="block" pos:start="195:17" pos:end="201:19">/* We need to break the TB after this insn to execute

                 * self-modifying code correctly and also to take

                 * any pending interrupts immediately.

                 */</comment>

                <expr_stmt pos:start="203:17" pos:end="203:33"><expr pos:start="203:17" pos:end="203:32"><call pos:start="203:17" pos:end="203:32"><name pos:start="203:17" pos:end="203:29">gen_lookup_tb</name><argument_list pos:start="203:30" pos:end="203:32">(<argument pos:start="203:31" pos:end="203:31"><expr pos:start="203:31" pos:end="203:31"><name pos:start="203:31" pos:end="203:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="205:17" pos:end="205:23">return;</return>

            <default pos:start="207:13" pos:end="207:20">default:</default>

                <goto pos:start="209:17" pos:end="209:32">goto <name pos:start="209:22" pos:end="209:31">illegal_op</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="213:11" pos:end="229:9">else if <condition pos:start="213:19" pos:end="213:53">(<expr pos:start="213:20" pos:end="213:52"><operator pos:start="213:20" pos:end="213:20">(</operator><name pos:start="213:21" pos:end="213:24">insn</name> <operator pos:start="213:26" pos:end="213:26">&amp;</operator> <literal type="number" pos:start="213:28" pos:end="213:37">0x0e5fffe0</literal><operator pos:start="213:38" pos:end="213:38">)</operator> <operator pos:start="213:40" pos:end="213:41">==</operator> <literal type="number" pos:start="213:43" pos:end="213:52">0x084d0500</literal></expr>)</condition> <block pos:start="213:55" pos:end="229:9">{<block_content pos:start="217:13" pos:end="227:19">

            <comment type="block" pos:start="215:13" pos:end="215:21">/* srs */</comment>

            <if_stmt pos:start="217:13" pos:end="221:13"><if pos:start="217:13" pos:end="221:13">if <condition pos:start="217:16" pos:end="217:27">(<expr pos:start="217:17" pos:end="217:26"><call pos:start="217:17" pos:end="217:26"><name pos:start="217:17" pos:end="217:23">IS_USER</name><argument_list pos:start="217:24" pos:end="217:26">(<argument pos:start="217:25" pos:end="217:25"><expr pos:start="217:25" pos:end="217:25"><name pos:start="217:25" pos:end="217:25">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="217:29" pos:end="221:13">{<block_content pos:start="219:17" pos:end="219:32">

                <goto pos:start="219:17" pos:end="219:32">goto <name pos:start="219:22" pos:end="219:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:20"><expr pos:start="223:13" pos:end="223:19"><call pos:start="223:13" pos:end="223:19"><name pos:start="223:13" pos:end="223:16">ARCH</name><argument_list pos:start="223:17" pos:end="223:19">(<argument pos:start="223:18" pos:end="223:18"><expr pos:start="223:18" pos:end="223:18"><literal type="number" pos:start="223:18" pos:end="223:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:74"><expr pos:start="225:13" pos:end="225:73"><call pos:start="225:13" pos:end="225:73"><name pos:start="225:13" pos:end="225:19">gen_srs</name><argument_list pos:start="225:20" pos:end="225:73">(<argument pos:start="225:21" pos:end="225:21"><expr pos:start="225:21" pos:end="225:21"><name pos:start="225:21" pos:end="225:21">s</name></expr></argument>, <argument pos:start="225:24" pos:end="225:36"><expr pos:start="225:24" pos:end="225:36"><operator pos:start="225:24" pos:end="225:24">(</operator><name pos:start="225:25" pos:end="225:28">insn</name> <operator pos:start="225:30" pos:end="225:30">&amp;</operator> <literal type="number" pos:start="225:32" pos:end="225:35">0x1f</literal><operator pos:start="225:36" pos:end="225:36">)</operator></expr></argument>, <argument pos:start="225:39" pos:end="225:54"><expr pos:start="225:39" pos:end="225:54"><operator pos:start="225:39" pos:end="225:39">(</operator><name pos:start="225:40" pos:end="225:43">insn</name> <operator pos:start="225:45" pos:end="225:46">&gt;&gt;</operator> <literal type="number" pos:start="225:48" pos:end="225:49">23</literal><operator pos:start="225:50" pos:end="225:50">)</operator> <operator pos:start="225:52" pos:end="225:52">&amp;</operator> <literal type="number" pos:start="225:54" pos:end="225:54">3</literal></expr></argument>, <argument pos:start="225:57" pos:end="225:72"><expr pos:start="225:57" pos:end="225:72"><name pos:start="225:57" pos:end="225:60">insn</name> <operator pos:start="225:62" pos:end="225:62">&amp;</operator> <operator pos:start="225:64" pos:end="225:64">(</operator><literal type="number" pos:start="225:65" pos:end="225:65">1</literal> <operator pos:start="225:67" pos:end="225:68">&lt;&lt;</operator> <literal type="number" pos:start="225:70" pos:end="225:71">21</literal><operator pos:start="225:72" pos:end="225:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="227:13" pos:end="227:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="229:11" pos:end="311:9">else if <condition pos:start="229:19" pos:end="229:53">(<expr pos:start="229:20" pos:end="229:52"><operator pos:start="229:20" pos:end="229:20">(</operator><name pos:start="229:21" pos:end="229:24">insn</name> <operator pos:start="229:26" pos:end="229:26">&amp;</operator> <literal type="number" pos:start="229:28" pos:end="229:37">0x0e50ffe0</literal><operator pos:start="229:38" pos:end="229:38">)</operator> <operator pos:start="229:40" pos:end="229:41">==</operator> <literal type="number" pos:start="229:43" pos:end="229:52">0x08100a00</literal></expr>)</condition> <block pos:start="229:55" pos:end="311:9">{<block_content pos:start="233:13" pos:end="309:19">

            <comment type="block" pos:start="231:13" pos:end="231:21">/* rfe */</comment>

            <decl_stmt pos:start="233:13" pos:end="233:27"><decl pos:start="233:13" pos:end="233:26"><type pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:19">int32_t</name></type> <name pos:start="233:21" pos:end="233:26">offset</name></decl>;</decl_stmt>

            <if_stmt pos:start="235:13" pos:end="237:32"><if pos:start="235:13" pos:end="237:32">if <condition pos:start="235:16" pos:end="235:27">(<expr pos:start="235:17" pos:end="235:26"><call pos:start="235:17" pos:end="235:26"><name pos:start="235:17" pos:end="235:23">IS_USER</name><argument_list pos:start="235:24" pos:end="235:26">(<argument pos:start="235:25" pos:end="235:25"><expr pos:start="235:25" pos:end="235:25"><name pos:start="235:25" pos:end="235:25">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="237:17" pos:end="237:32"><block_content pos:start="237:17" pos:end="237:32">

                <goto pos:start="237:17" pos:end="237:32">goto <name pos:start="237:22" pos:end="237:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:20"><expr pos:start="239:13" pos:end="239:19"><call pos:start="239:13" pos:end="239:19"><name pos:start="239:13" pos:end="239:16">ARCH</name><argument_list pos:start="239:17" pos:end="239:19">(<argument pos:start="239:18" pos:end="239:18"><expr pos:start="239:18" pos:end="239:18"><literal type="number" pos:start="239:18" pos:end="239:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:36"><expr pos:start="241:13" pos:end="241:35"><name pos:start="241:13" pos:end="241:14">rn</name> <operator pos:start="241:16" pos:end="241:16">=</operator> <operator pos:start="241:18" pos:end="241:18">(</operator><name pos:start="241:19" pos:end="241:22">insn</name> <operator pos:start="241:24" pos:end="241:25">&gt;&gt;</operator> <literal type="number" pos:start="241:27" pos:end="241:28">16</literal><operator pos:start="241:29" pos:end="241:29">)</operator> <operator pos:start="241:31" pos:end="241:31">&amp;</operator> <literal type="number" pos:start="241:33" pos:end="241:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:35"><expr pos:start="243:13" pos:end="243:34"><name pos:start="243:13" pos:end="243:16">addr</name> <operator pos:start="243:18" pos:end="243:18">=</operator> <call pos:start="243:20" pos:end="243:34"><name pos:start="243:20" pos:end="243:27">load_reg</name><argument_list pos:start="243:28" pos:end="243:34">(<argument pos:start="243:29" pos:end="243:29"><expr pos:start="243:29" pos:end="243:29"><name pos:start="243:29" pos:end="243:29">s</name></expr></argument>, <argument pos:start="243:32" pos:end="243:33"><expr pos:start="243:32" pos:end="243:33"><name pos:start="243:32" pos:end="243:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:33"><expr pos:start="245:13" pos:end="245:32"><name pos:start="245:13" pos:end="245:13">i</name> <operator pos:start="245:15" pos:end="245:15">=</operator> <operator pos:start="245:17" pos:end="245:17">(</operator><name pos:start="245:18" pos:end="245:21">insn</name> <operator pos:start="245:23" pos:end="245:24">&gt;&gt;</operator> <literal type="number" pos:start="245:26" pos:end="245:27">23</literal><operator pos:start="245:28" pos:end="245:28">)</operator> <operator pos:start="245:30" pos:end="245:30">&amp;</operator> <literal type="number" pos:start="245:32" pos:end="245:32">3</literal></expr>;</expr_stmt>

            <switch pos:start="247:13" pos:end="259:13">switch <condition pos:start="247:20" pos:end="247:22">(<expr pos:start="247:21" pos:end="247:21"><name pos:start="247:21" pos:end="247:21">i</name></expr>)</condition> <block pos:start="247:24" pos:end="259:13">{<block_content pos:start="249:13" pos:end="257:29">

            <case pos:start="249:13" pos:end="249:19">case <expr pos:start="249:18" pos:end="249:18"><literal type="number" pos:start="249:18" pos:end="249:18">0</literal></expr>:</case> <expr_stmt pos:start="249:21" pos:end="249:32"><expr pos:start="249:21" pos:end="249:31"><name pos:start="249:21" pos:end="249:26">offset</name> <operator pos:start="249:28" pos:end="249:28">=</operator> <operator pos:start="249:30" pos:end="249:30">-</operator><literal type="number" pos:start="249:31" pos:end="249:31">4</literal></expr>;</expr_stmt> <break pos:start="249:34" pos:end="249:39">break;</break> <comment type="block" pos:start="249:41" pos:end="249:48">/* DA */</comment>

            <case pos:start="251:13" pos:end="251:19">case <expr pos:start="251:18" pos:end="251:18"><literal type="number" pos:start="251:18" pos:end="251:18">1</literal></expr>:</case> <expr_stmt pos:start="251:21" pos:end="251:31"><expr pos:start="251:21" pos:end="251:30"><name pos:start="251:21" pos:end="251:26">offset</name> <operator pos:start="251:28" pos:end="251:28">=</operator> <literal type="number" pos:start="251:30" pos:end="251:30">0</literal></expr>;</expr_stmt> <break pos:start="251:33" pos:end="251:38">break;</break> <comment type="block" pos:start="251:40" pos:end="251:47">/* IA */</comment>

            <case pos:start="253:13" pos:end="253:19">case <expr pos:start="253:18" pos:end="253:18"><literal type="number" pos:start="253:18" pos:end="253:18">2</literal></expr>:</case> <expr_stmt pos:start="253:21" pos:end="253:32"><expr pos:start="253:21" pos:end="253:31"><name pos:start="253:21" pos:end="253:26">offset</name> <operator pos:start="253:28" pos:end="253:28">=</operator> <operator pos:start="253:30" pos:end="253:30">-</operator><literal type="number" pos:start="253:31" pos:end="253:31">8</literal></expr>;</expr_stmt> <break pos:start="253:34" pos:end="253:39">break;</break> <comment type="block" pos:start="253:41" pos:end="253:48">/* DB */</comment>

            <case pos:start="255:13" pos:end="255:19">case <expr pos:start="255:18" pos:end="255:18"><literal type="number" pos:start="255:18" pos:end="255:18">3</literal></expr>:</case> <expr_stmt pos:start="255:21" pos:end="255:31"><expr pos:start="255:21" pos:end="255:30"><name pos:start="255:21" pos:end="255:26">offset</name> <operator pos:start="255:28" pos:end="255:28">=</operator> <literal type="number" pos:start="255:30" pos:end="255:30">4</literal></expr>;</expr_stmt> <break pos:start="255:33" pos:end="255:38">break;</break> <comment type="block" pos:start="255:40" pos:end="255:47">/* IB */</comment>

            <default pos:start="257:13" pos:end="257:20">default:</default> <expr_stmt pos:start="257:22" pos:end="257:29"><expr pos:start="257:22" pos:end="257:28"><call pos:start="257:22" pos:end="257:28"><name pos:start="257:22" pos:end="257:26">abort</name><argument_list pos:start="257:27" pos:end="257:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <if_stmt pos:start="261:13" pos:end="263:53"><if pos:start="261:13" pos:end="263:53">if <condition pos:start="261:16" pos:end="261:23">(<expr pos:start="261:17" pos:end="261:22"><name pos:start="261:17" pos:end="261:22">offset</name></expr>)</condition><block type="pseudo" pos:start="263:17" pos:end="263:53"><block_content pos:start="263:17" pos:end="263:53">

                <expr_stmt pos:start="263:17" pos:end="263:53"><expr pos:start="263:17" pos:end="263:52"><call pos:start="263:17" pos:end="263:52"><name pos:start="263:17" pos:end="263:32">tcg_gen_addi_i32</name><argument_list pos:start="263:33" pos:end="263:52">(<argument pos:start="263:34" pos:end="263:37"><expr pos:start="263:34" pos:end="263:37"><name pos:start="263:34" pos:end="263:37">addr</name></expr></argument>, <argument pos:start="263:40" pos:end="263:43"><expr pos:start="263:40" pos:end="263:43"><name pos:start="263:40" pos:end="263:43">addr</name></expr></argument>, <argument pos:start="263:46" pos:end="263:51"><expr pos:start="263:46" pos:end="263:51"><name pos:start="263:46" pos:end="263:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="265:13" pos:end="265:55">/* Load PC into tmp and CPSR into tmp2.  */</comment>

            <expr_stmt pos:start="267:13" pos:end="267:37"><expr pos:start="267:13" pos:end="267:36"><name pos:start="267:13" pos:end="267:15">tmp</name> <operator pos:start="267:17" pos:end="267:17">=</operator> <call pos:start="267:19" pos:end="267:36"><name pos:start="267:19" pos:end="267:34">tcg_temp_new_i32</name><argument_list pos:start="267:35" pos:end="267:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:56"><expr pos:start="269:13" pos:end="269:55"><call pos:start="269:13" pos:end="269:55"><name pos:start="269:13" pos:end="269:26">gen_aa32_ld32u</name><argument_list pos:start="269:27" pos:end="269:55">(<argument pos:start="269:28" pos:end="269:30"><expr pos:start="269:28" pos:end="269:30"><name pos:start="269:28" pos:end="269:30">tmp</name></expr></argument>, <argument pos:start="269:33" pos:end="269:36"><expr pos:start="269:33" pos:end="269:36"><name pos:start="269:33" pos:end="269:36">addr</name></expr></argument>, <argument pos:start="269:39" pos:end="269:54"><expr pos:start="269:39" pos:end="269:54"><call pos:start="269:39" pos:end="269:54"><name pos:start="269:39" pos:end="269:51">get_mem_index</name><argument_list pos:start="269:52" pos:end="269:54">(<argument pos:start="269:53" pos:end="269:53"><expr pos:start="269:53" pos:end="269:53"><name pos:start="269:53" pos:end="269:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:44"><expr pos:start="271:13" pos:end="271:43"><call pos:start="271:13" pos:end="271:43"><name pos:start="271:13" pos:end="271:28">tcg_gen_addi_i32</name><argument_list pos:start="271:29" pos:end="271:43">(<argument pos:start="271:30" pos:end="271:33"><expr pos:start="271:30" pos:end="271:33"><name pos:start="271:30" pos:end="271:33">addr</name></expr></argument>, <argument pos:start="271:36" pos:end="271:39"><expr pos:start="271:36" pos:end="271:39"><name pos:start="271:36" pos:end="271:39">addr</name></expr></argument>, <argument pos:start="271:42" pos:end="271:42"><expr pos:start="271:42" pos:end="271:42"><literal type="number" pos:start="271:42" pos:end="271:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:38"><expr pos:start="273:13" pos:end="273:37"><name pos:start="273:13" pos:end="273:16">tmp2</name> <operator pos:start="273:18" pos:end="273:18">=</operator> <call pos:start="273:20" pos:end="273:37"><name pos:start="273:20" pos:end="273:35">tcg_temp_new_i32</name><argument_list pos:start="273:36" pos:end="273:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:57"><expr pos:start="275:13" pos:end="275:56"><call pos:start="275:13" pos:end="275:56"><name pos:start="275:13" pos:end="275:26">gen_aa32_ld32u</name><argument_list pos:start="275:27" pos:end="275:56">(<argument pos:start="275:28" pos:end="275:31"><expr pos:start="275:28" pos:end="275:31"><name pos:start="275:28" pos:end="275:31">tmp2</name></expr></argument>, <argument pos:start="275:34" pos:end="275:37"><expr pos:start="275:34" pos:end="275:37"><name pos:start="275:34" pos:end="275:37">addr</name></expr></argument>, <argument pos:start="275:40" pos:end="275:55"><expr pos:start="275:40" pos:end="275:55"><call pos:start="275:40" pos:end="275:55"><name pos:start="275:40" pos:end="275:52">get_mem_index</name><argument_list pos:start="275:53" pos:end="275:55">(<argument pos:start="275:54" pos:end="275:54"><expr pos:start="275:54" pos:end="275:54"><name pos:start="275:54" pos:end="275:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="277:13" pos:end="305:13"><if pos:start="277:13" pos:end="301:13">if <condition pos:start="277:16" pos:end="277:33">(<expr pos:start="277:17" pos:end="277:32"><name pos:start="277:17" pos:end="277:20">insn</name> <operator pos:start="277:22" pos:end="277:22">&amp;</operator> <operator pos:start="277:24" pos:end="277:24">(</operator><literal type="number" pos:start="277:25" pos:end="277:25">1</literal> <operator pos:start="277:27" pos:end="277:28">&lt;&lt;</operator> <literal type="number" pos:start="277:30" pos:end="277:31">21</literal><operator pos:start="277:32" pos:end="277:32">)</operator></expr>)</condition> <block pos:start="277:35" pos:end="301:13">{<block_content pos:start="281:17" pos:end="299:39">

                <comment type="block" pos:start="279:17" pos:end="279:38">/* Base writeback.  */</comment>

                <switch pos:start="281:17" pos:end="293:17">switch <condition pos:start="281:24" pos:end="281:26">(<expr pos:start="281:25" pos:end="281:25"><name pos:start="281:25" pos:end="281:25">i</name></expr>)</condition> <block pos:start="281:28" pos:end="293:17">{<block_content pos:start="283:17" pos:end="291:33">

                <case pos:start="283:17" pos:end="283:23">case <expr pos:start="283:22" pos:end="283:22"><literal type="number" pos:start="283:22" pos:end="283:22">0</literal></expr>:</case> <expr_stmt pos:start="283:25" pos:end="283:36"><expr pos:start="283:25" pos:end="283:35"><name pos:start="283:25" pos:end="283:30">offset</name> <operator pos:start="283:32" pos:end="283:32">=</operator> <operator pos:start="283:34" pos:end="283:34">-</operator><literal type="number" pos:start="283:35" pos:end="283:35">8</literal></expr>;</expr_stmt> <break pos:start="283:38" pos:end="283:43">break;</break>

                <case pos:start="285:17" pos:end="285:23">case <expr pos:start="285:22" pos:end="285:22"><literal type="number" pos:start="285:22" pos:end="285:22">1</literal></expr>:</case> <expr_stmt pos:start="285:25" pos:end="285:35"><expr pos:start="285:25" pos:end="285:34"><name pos:start="285:25" pos:end="285:30">offset</name> <operator pos:start="285:32" pos:end="285:32">=</operator> <literal type="number" pos:start="285:34" pos:end="285:34">4</literal></expr>;</expr_stmt> <break pos:start="285:37" pos:end="285:42">break;</break>

                <case pos:start="287:17" pos:end="287:23">case <expr pos:start="287:22" pos:end="287:22"><literal type="number" pos:start="287:22" pos:end="287:22">2</literal></expr>:</case> <expr_stmt pos:start="287:25" pos:end="287:36"><expr pos:start="287:25" pos:end="287:35"><name pos:start="287:25" pos:end="287:30">offset</name> <operator pos:start="287:32" pos:end="287:32">=</operator> <operator pos:start="287:34" pos:end="287:34">-</operator><literal type="number" pos:start="287:35" pos:end="287:35">4</literal></expr>;</expr_stmt> <break pos:start="287:38" pos:end="287:43">break;</break>

                <case pos:start="289:17" pos:end="289:23">case <expr pos:start="289:22" pos:end="289:22"><literal type="number" pos:start="289:22" pos:end="289:22">3</literal></expr>:</case> <expr_stmt pos:start="289:25" pos:end="289:35"><expr pos:start="289:25" pos:end="289:34"><name pos:start="289:25" pos:end="289:30">offset</name> <operator pos:start="289:32" pos:end="289:32">=</operator> <literal type="number" pos:start="289:34" pos:end="289:34">0</literal></expr>;</expr_stmt> <break pos:start="289:37" pos:end="289:42">break;</break>

                <default pos:start="291:17" pos:end="291:24">default:</default> <expr_stmt pos:start="291:26" pos:end="291:33"><expr pos:start="291:26" pos:end="291:32"><call pos:start="291:26" pos:end="291:32"><name pos:start="291:26" pos:end="291:30">abort</name><argument_list pos:start="291:31" pos:end="291:32">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>

                <if_stmt pos:start="295:17" pos:end="297:57"><if pos:start="295:17" pos:end="297:57">if <condition pos:start="295:20" pos:end="295:27">(<expr pos:start="295:21" pos:end="295:26"><name pos:start="295:21" pos:end="295:26">offset</name></expr>)</condition><block type="pseudo" pos:start="297:21" pos:end="297:57"><block_content pos:start="297:21" pos:end="297:57">

                    <expr_stmt pos:start="297:21" pos:end="297:57"><expr pos:start="297:21" pos:end="297:56"><call pos:start="297:21" pos:end="297:56"><name pos:start="297:21" pos:end="297:36">tcg_gen_addi_i32</name><argument_list pos:start="297:37" pos:end="297:56">(<argument pos:start="297:38" pos:end="297:41"><expr pos:start="297:38" pos:end="297:41"><name pos:start="297:38" pos:end="297:41">addr</name></expr></argument>, <argument pos:start="297:44" pos:end="297:47"><expr pos:start="297:44" pos:end="297:47"><name pos:start="297:44" pos:end="297:47">addr</name></expr></argument>, <argument pos:start="297:50" pos:end="297:55"><expr pos:start="297:50" pos:end="297:55"><name pos:start="297:50" pos:end="297:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:39"><expr pos:start="299:17" pos:end="299:38"><call pos:start="299:17" pos:end="299:38"><name pos:start="299:17" pos:end="299:25">store_reg</name><argument_list pos:start="299:26" pos:end="299:38">(<argument pos:start="299:27" pos:end="299:27"><expr pos:start="299:27" pos:end="299:27"><name pos:start="299:27" pos:end="299:27">s</name></expr></argument>, <argument pos:start="299:30" pos:end="299:31"><expr pos:start="299:30" pos:end="299:31"><name pos:start="299:30" pos:end="299:31">rn</name></expr></argument>, <argument pos:start="299:34" pos:end="299:37"><expr pos:start="299:34" pos:end="299:37"><name pos:start="299:34" pos:end="299:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="301:15" pos:end="305:13">else <block pos:start="301:20" pos:end="305:13">{<block_content pos:start="303:17" pos:end="303:40">

                <expr_stmt pos:start="303:17" pos:end="303:40"><expr pos:start="303:17" pos:end="303:39"><call pos:start="303:17" pos:end="303:39"><name pos:start="303:17" pos:end="303:33">tcg_temp_free_i32</name><argument_list pos:start="303:34" pos:end="303:39">(<argument pos:start="303:35" pos:end="303:38"><expr pos:start="303:35" pos:end="303:38"><name pos:start="303:35" pos:end="303:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:34"><expr pos:start="307:13" pos:end="307:33"><call pos:start="307:13" pos:end="307:33"><name pos:start="307:13" pos:end="307:19">gen_rfe</name><argument_list pos:start="307:20" pos:end="307:33">(<argument pos:start="307:21" pos:end="307:21"><expr pos:start="307:21" pos:end="307:21"><name pos:start="307:21" pos:end="307:21">s</name></expr></argument>, <argument pos:start="307:24" pos:end="307:26"><expr pos:start="307:24" pos:end="307:26"><name pos:start="307:24" pos:end="307:26">tmp</name></expr></argument>, <argument pos:start="307:29" pos:end="307:32"><expr pos:start="307:29" pos:end="307:32"><name pos:start="307:29" pos:end="307:32">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="309:13" pos:end="309:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="311:11" pos:end="345:9">else if <condition pos:start="311:19" pos:end="311:53">(<expr pos:start="311:20" pos:end="311:52"><operator pos:start="311:20" pos:end="311:20">(</operator><name pos:start="311:21" pos:end="311:24">insn</name> <operator pos:start="311:26" pos:end="311:26">&amp;</operator> <literal type="number" pos:start="311:28" pos:end="311:37">0x0e000000</literal><operator pos:start="311:38" pos:end="311:38">)</operator> <operator pos:start="311:40" pos:end="311:41">==</operator> <literal type="number" pos:start="311:43" pos:end="311:52">0x0a000000</literal></expr>)</condition> <block pos:start="311:55" pos:end="345:9">{<block_content pos:start="315:13" pos:end="343:19">

            <comment type="block" pos:start="313:13" pos:end="313:64">/* branch link and change to thumb (blx &lt;offset&gt;) */</comment>

            <decl_stmt pos:start="315:13" pos:end="315:27"><decl pos:start="315:13" pos:end="315:26"><type pos:start="315:13" pos:end="315:19"><name pos:start="315:13" pos:end="315:19">int32_t</name></type> <name pos:start="315:21" pos:end="315:26">offset</name></decl>;</decl_stmt>



            <expr_stmt pos:start="319:13" pos:end="319:34"><expr pos:start="319:13" pos:end="319:33"><name pos:start="319:13" pos:end="319:15">val</name> <operator pos:start="319:17" pos:end="319:17">=</operator> <operator pos:start="319:19" pos:end="319:19">(</operator><name pos:start="319:20" pos:end="319:27">uint32_t</name><operator pos:start="319:28" pos:end="319:28">)</operator><name pos:start="319:29" pos:end="319:33"><name pos:start="319:29" pos:end="319:29">s</name><operator pos:start="319:30" pos:end="319:31">-&gt;</operator><name pos:start="319:32" pos:end="319:33">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:37"><expr pos:start="321:13" pos:end="321:36"><name pos:start="321:13" pos:end="321:15">tmp</name> <operator pos:start="321:17" pos:end="321:17">=</operator> <call pos:start="321:19" pos:end="321:36"><name pos:start="321:19" pos:end="321:34">tcg_temp_new_i32</name><argument_list pos:start="321:35" pos:end="321:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:39"><expr pos:start="323:13" pos:end="323:38"><call pos:start="323:13" pos:end="323:38"><name pos:start="323:13" pos:end="323:28">tcg_gen_movi_i32</name><argument_list pos:start="323:29" pos:end="323:38">(<argument pos:start="323:30" pos:end="323:32"><expr pos:start="323:30" pos:end="323:32"><name pos:start="323:30" pos:end="323:32">tmp</name></expr></argument>, <argument pos:start="323:35" pos:end="323:37"><expr pos:start="323:35" pos:end="323:37"><name pos:start="323:35" pos:end="323:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:34"><expr pos:start="325:13" pos:end="325:33"><call pos:start="325:13" pos:end="325:33"><name pos:start="325:13" pos:end="325:21">store_reg</name><argument_list pos:start="325:22" pos:end="325:33">(<argument pos:start="325:23" pos:end="325:23"><expr pos:start="325:23" pos:end="325:23"><name pos:start="325:23" pos:end="325:23">s</name></expr></argument>, <argument pos:start="325:26" pos:end="325:27"><expr pos:start="325:26" pos:end="325:27"><literal type="number" pos:start="325:26" pos:end="325:27">14</literal></expr></argument>, <argument pos:start="325:30" pos:end="325:32"><expr pos:start="325:30" pos:end="325:32"><name pos:start="325:30" pos:end="325:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="327:13" pos:end="327:47">/* Sign-extend the 24-bit offset */</comment>

            <expr_stmt pos:start="329:13" pos:end="329:49"><expr pos:start="329:13" pos:end="329:48"><name pos:start="329:13" pos:end="329:18">offset</name> <operator pos:start="329:20" pos:end="329:20">=</operator> <operator pos:start="329:22" pos:end="329:22">(</operator><operator pos:start="329:23" pos:end="329:23">(</operator><operator pos:start="329:24" pos:end="329:24">(</operator><name pos:start="329:25" pos:end="329:31">int32_t</name><operator pos:start="329:32" pos:end="329:32">)</operator><name pos:start="329:33" pos:end="329:36">insn</name><operator pos:start="329:37" pos:end="329:37">)</operator> <operator pos:start="329:39" pos:end="329:40">&lt;&lt;</operator> <literal type="number" pos:start="329:42" pos:end="329:42">8</literal><operator pos:start="329:43" pos:end="329:43">)</operator> <operator pos:start="329:45" pos:end="329:46">&gt;&gt;</operator> <literal type="number" pos:start="329:48" pos:end="329:48">8</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="331:13" pos:end="331:54">/* offset * 4 + bit24 * 2 + (thumb bit) */</comment>

            <expr_stmt pos:start="333:13" pos:end="333:58"><expr pos:start="333:13" pos:end="333:57"><name pos:start="333:13" pos:end="333:15">val</name> <operator pos:start="333:17" pos:end="333:18">+=</operator> <operator pos:start="333:20" pos:end="333:20">(</operator><name pos:start="333:21" pos:end="333:26">offset</name> <operator pos:start="333:28" pos:end="333:29">&lt;&lt;</operator> <literal type="number" pos:start="333:31" pos:end="333:31">2</literal><operator pos:start="333:32" pos:end="333:32">)</operator> <operator pos:start="333:34" pos:end="333:34">|</operator> <operator pos:start="333:36" pos:end="333:36">(</operator><operator pos:start="333:37" pos:end="333:37">(</operator><name pos:start="333:38" pos:end="333:41">insn</name> <operator pos:start="333:43" pos:end="333:44">&gt;&gt;</operator> <literal type="number" pos:start="333:46" pos:end="333:47">23</literal><operator pos:start="333:48" pos:end="333:48">)</operator> <operator pos:start="333:50" pos:end="333:50">&amp;</operator> <literal type="number" pos:start="333:52" pos:end="333:52">2</literal><operator pos:start="333:53" pos:end="333:53">)</operator> <operator pos:start="333:55" pos:end="333:55">|</operator> <literal type="number" pos:start="333:57" pos:end="333:57">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="335:13" pos:end="335:33">/* pipeline offset */</comment>

            <expr_stmt pos:start="337:13" pos:end="337:21"><expr pos:start="337:13" pos:end="337:20"><name pos:start="337:13" pos:end="337:15">val</name> <operator pos:start="337:17" pos:end="337:18">+=</operator> <literal type="number" pos:start="337:20" pos:end="337:20">4</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="339:13" pos:end="339:77">/* protected by ARCH(5); above, near the start of uncond block */</comment>

            <expr_stmt pos:start="341:13" pos:end="341:30"><expr pos:start="341:13" pos:end="341:29"><call pos:start="341:13" pos:end="341:29"><name pos:start="341:13" pos:end="341:21">gen_bx_im</name><argument_list pos:start="341:22" pos:end="341:29">(<argument pos:start="341:23" pos:end="341:23"><expr pos:start="341:23" pos:end="341:23"><name pos:start="341:23" pos:end="341:23">s</name></expr></argument>, <argument pos:start="341:26" pos:end="341:28"><expr pos:start="341:26" pos:end="341:28"><name pos:start="341:26" pos:end="341:28">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="343:13" pos:end="343:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="345:11" pos:end="363:9">else if <condition pos:start="345:19" pos:end="345:53">(<expr pos:start="345:20" pos:end="345:52"><operator pos:start="345:20" pos:end="345:20">(</operator><name pos:start="345:21" pos:end="345:24">insn</name> <operator pos:start="345:26" pos:end="345:26">&amp;</operator> <literal type="number" pos:start="345:28" pos:end="345:37">0x0e000f00</literal><operator pos:start="345:38" pos:end="345:38">)</operator> <operator pos:start="345:40" pos:end="345:41">==</operator> <literal type="number" pos:start="345:43" pos:end="345:52">0x0c000100</literal></expr>)</condition> <block pos:start="345:55" pos:end="363:9">{<block_content pos:start="347:13" pos:end="361:13">

            <if_stmt pos:start="347:13" pos:end="361:13"><if pos:start="347:13" pos:end="361:13">if <condition pos:start="347:16" pos:end="347:54">(<expr pos:start="347:17" pos:end="347:53"><call pos:start="347:17" pos:end="347:53"><name pos:start="347:17" pos:end="347:30">arm_dc_feature</name><argument_list pos:start="347:31" pos:end="347:53">(<argument pos:start="347:32" pos:end="347:32"><expr pos:start="347:32" pos:end="347:32"><name pos:start="347:32" pos:end="347:32">s</name></expr></argument>, <argument pos:start="347:35" pos:end="347:52"><expr pos:start="347:35" pos:end="347:52"><name pos:start="347:35" pos:end="347:52">ARM_FEATURE_IWMMXT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="347:56" pos:end="361:13">{<block_content pos:start="351:17" pos:end="359:17">

                <comment type="block" pos:start="349:17" pos:end="349:48">/* iWMMXt register transfer.  */</comment>

                <if_stmt pos:start="351:17" pos:end="359:17"><if pos:start="351:17" pos:end="359:17">if <condition pos:start="351:20" pos:end="351:49">(<expr pos:start="351:21" pos:end="351:48"><call pos:start="351:21" pos:end="351:48"><name pos:start="351:21" pos:end="351:29">extract32</name><argument_list pos:start="351:30" pos:end="351:48">(<argument pos:start="351:31" pos:end="351:41"><expr pos:start="351:31" pos:end="351:41"><name pos:start="351:31" pos:end="351:41"><name pos:start="351:31" pos:end="351:31">s</name><operator pos:start="351:32" pos:end="351:33">-&gt;</operator><name pos:start="351:34" pos:end="351:41">c15_cpar</name></name></expr></argument>, <argument pos:start="351:44" pos:end="351:44"><expr pos:start="351:44" pos:end="351:44"><literal type="number" pos:start="351:44" pos:end="351:44">1</literal></expr></argument>, <argument pos:start="351:47" pos:end="351:47"><expr pos:start="351:47" pos:end="351:47"><literal type="number" pos:start="351:47" pos:end="351:47">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="351:51" pos:end="359:17">{<block_content pos:start="353:21" pos:end="357:21">

                    <if_stmt pos:start="353:21" pos:end="357:21"><if pos:start="353:21" pos:end="357:21">if <condition pos:start="353:24" pos:end="353:52">(<expr pos:start="353:25" pos:end="353:51"><operator pos:start="353:25" pos:end="353:25">!</operator><call pos:start="353:26" pos:end="353:51"><name pos:start="353:26" pos:end="353:42">disas_iwmmxt_insn</name><argument_list pos:start="353:43" pos:end="353:51">(<argument pos:start="353:44" pos:end="353:44"><expr pos:start="353:44" pos:end="353:44"><name pos:start="353:44" pos:end="353:44">s</name></expr></argument>, <argument pos:start="353:47" pos:end="353:50"><expr pos:start="353:47" pos:end="353:50"><name pos:start="353:47" pos:end="353:50">insn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="353:54" pos:end="357:21">{<block_content pos:start="355:25" pos:end="355:31">

                        <return pos:start="355:25" pos:end="355:31">return;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="363:11" pos:end="369:9">else if <condition pos:start="363:19" pos:end="363:53">(<expr pos:start="363:20" pos:end="363:52"><operator pos:start="363:20" pos:end="363:20">(</operator><name pos:start="363:21" pos:end="363:24">insn</name> <operator pos:start="363:26" pos:end="363:26">&amp;</operator> <literal type="number" pos:start="363:28" pos:end="363:37">0x0fe00000</literal><operator pos:start="363:38" pos:end="363:38">)</operator> <operator pos:start="363:40" pos:end="363:41">==</operator> <literal type="number" pos:start="363:43" pos:end="363:52">0x0c400000</literal></expr>)</condition> <block pos:start="363:55" pos:end="369:9">{<block_content pos:start="367:13" pos:end="367:22">

            <comment type="block" pos:start="365:13" pos:end="365:56">/* Coprocessor double register transfer.  */</comment>

            <expr_stmt pos:start="367:13" pos:end="367:22"><expr pos:start="367:13" pos:end="367:21"><call pos:start="367:13" pos:end="367:21"><name pos:start="367:13" pos:end="367:16">ARCH</name><argument_list pos:start="367:17" pos:end="367:21">(<argument pos:start="367:18" pos:end="367:20"><expr pos:start="367:18" pos:end="367:20"><literal type="number" pos:start="367:18" pos:end="367:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="369:11" pos:end="373:9">else if <condition pos:start="369:19" pos:end="369:53">(<expr pos:start="369:20" pos:end="369:52"><operator pos:start="369:20" pos:end="369:20">(</operator><name pos:start="369:21" pos:end="369:24">insn</name> <operator pos:start="369:26" pos:end="369:26">&amp;</operator> <literal type="number" pos:start="369:28" pos:end="369:37">0x0f000010</literal><operator pos:start="369:38" pos:end="369:38">)</operator> <operator pos:start="369:40" pos:end="369:41">==</operator> <literal type="number" pos:start="369:43" pos:end="369:52">0x0e000010</literal></expr>)</condition> <block pos:start="369:55" pos:end="373:9">{<block_content>

            <comment type="block" pos:start="371:13" pos:end="371:60">/* Additional coprocessor register transfer.  */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="373:11" pos:end="423:9">else if <condition pos:start="373:19" pos:end="373:53">(<expr pos:start="373:20" pos:end="373:52"><operator pos:start="373:20" pos:end="373:20">(</operator><name pos:start="373:21" pos:end="373:24">insn</name> <operator pos:start="373:26" pos:end="373:26">&amp;</operator> <literal type="number" pos:start="373:28" pos:end="373:37">0x0ff10020</literal><operator pos:start="373:38" pos:end="373:38">)</operator> <operator pos:start="373:40" pos:end="373:41">==</operator> <literal type="number" pos:start="373:43" pos:end="373:52">0x01000000</literal></expr>)</condition> <block pos:start="373:55" pos:end="423:9">{<block_content pos:start="375:13" pos:end="421:19">

            <decl_stmt pos:start="375:13" pos:end="375:26"><decl pos:start="375:13" pos:end="375:25"><type pos:start="375:13" pos:end="375:20"><name pos:start="375:13" pos:end="375:20">uint32_t</name></type> <name pos:start="375:22" pos:end="375:25">mask</name></decl>;</decl_stmt>

            <decl_stmt pos:start="377:13" pos:end="377:25"><decl pos:start="377:13" pos:end="377:24"><type pos:start="377:13" pos:end="377:20"><name pos:start="377:13" pos:end="377:20">uint32_t</name></type> <name pos:start="377:22" pos:end="377:24">val</name></decl>;</decl_stmt>

            <comment type="block" pos:start="379:13" pos:end="379:34">/* cps (privileged) */</comment>

            <if_stmt pos:start="381:13" pos:end="383:23"><if pos:start="381:13" pos:end="383:23">if <condition pos:start="381:16" pos:end="381:27">(<expr pos:start="381:17" pos:end="381:26"><call pos:start="381:17" pos:end="381:26"><name pos:start="381:17" pos:end="381:23">IS_USER</name><argument_list pos:start="381:24" pos:end="381:26">(<argument pos:start="381:25" pos:end="381:25"><expr pos:start="381:25" pos:end="381:25"><name pos:start="381:25" pos:end="381:25">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="383:17" pos:end="383:23"><block_content pos:start="383:17" pos:end="383:23">

                <return pos:start="383:17" pos:end="383:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="385:13" pos:end="385:27"><expr pos:start="385:13" pos:end="385:26"><name pos:start="385:13" pos:end="385:16">mask</name> <operator pos:start="385:18" pos:end="385:18">=</operator> <name pos:start="385:20" pos:end="385:22">val</name> <operator pos:start="385:24" pos:end="385:24">=</operator> <literal type="number" pos:start="385:26" pos:end="385:26">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="387:13" pos:end="405:13"><if pos:start="387:13" pos:end="405:13">if <condition pos:start="387:16" pos:end="387:33">(<expr pos:start="387:17" pos:end="387:32"><name pos:start="387:17" pos:end="387:20">insn</name> <operator pos:start="387:22" pos:end="387:22">&amp;</operator> <operator pos:start="387:24" pos:end="387:24">(</operator><literal type="number" pos:start="387:25" pos:end="387:25">1</literal> <operator pos:start="387:27" pos:end="387:28">&lt;&lt;</operator> <literal type="number" pos:start="387:30" pos:end="387:31">19</literal><operator pos:start="387:32" pos:end="387:32">)</operator></expr>)</condition> <block pos:start="387:35" pos:end="405:13">{<block_content pos:start="389:17" pos:end="403:32">

                <if_stmt pos:start="389:17" pos:end="391:35"><if pos:start="389:17" pos:end="391:35">if <condition pos:start="389:20" pos:end="389:36">(<expr pos:start="389:21" pos:end="389:35"><name pos:start="389:21" pos:end="389:24">insn</name> <operator pos:start="389:26" pos:end="389:26">&amp;</operator> <operator pos:start="389:28" pos:end="389:28">(</operator><literal type="number" pos:start="389:29" pos:end="389:29">1</literal> <operator pos:start="389:31" pos:end="389:32">&lt;&lt;</operator> <literal type="number" pos:start="389:34" pos:end="389:34">8</literal><operator pos:start="389:35" pos:end="389:35">)</operator></expr>)</condition><block type="pseudo" pos:start="391:21" pos:end="391:35"><block_content pos:start="391:21" pos:end="391:35">

                    <expr_stmt pos:start="391:21" pos:end="391:35"><expr pos:start="391:21" pos:end="391:34"><name pos:start="391:21" pos:end="391:24">mask</name> <operator pos:start="391:26" pos:end="391:27">|=</operator> <name pos:start="391:29" pos:end="391:34">CPSR_A</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="393:17" pos:end="395:35"><if pos:start="393:17" pos:end="395:35">if <condition pos:start="393:20" pos:end="393:36">(<expr pos:start="393:21" pos:end="393:35"><name pos:start="393:21" pos:end="393:24">insn</name> <operator pos:start="393:26" pos:end="393:26">&amp;</operator> <operator pos:start="393:28" pos:end="393:28">(</operator><literal type="number" pos:start="393:29" pos:end="393:29">1</literal> <operator pos:start="393:31" pos:end="393:32">&lt;&lt;</operator> <literal type="number" pos:start="393:34" pos:end="393:34">7</literal><operator pos:start="393:35" pos:end="393:35">)</operator></expr>)</condition><block type="pseudo" pos:start="395:21" pos:end="395:35"><block_content pos:start="395:21" pos:end="395:35">

                    <expr_stmt pos:start="395:21" pos:end="395:35"><expr pos:start="395:21" pos:end="395:34"><name pos:start="395:21" pos:end="395:24">mask</name> <operator pos:start="395:26" pos:end="395:27">|=</operator> <name pos:start="395:29" pos:end="395:34">CPSR_I</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="397:17" pos:end="399:35"><if pos:start="397:17" pos:end="399:35">if <condition pos:start="397:20" pos:end="397:36">(<expr pos:start="397:21" pos:end="397:35"><name pos:start="397:21" pos:end="397:24">insn</name> <operator pos:start="397:26" pos:end="397:26">&amp;</operator> <operator pos:start="397:28" pos:end="397:28">(</operator><literal type="number" pos:start="397:29" pos:end="397:29">1</literal> <operator pos:start="397:31" pos:end="397:32">&lt;&lt;</operator> <literal type="number" pos:start="397:34" pos:end="397:34">6</literal><operator pos:start="397:35" pos:end="397:35">)</operator></expr>)</condition><block type="pseudo" pos:start="399:21" pos:end="399:35"><block_content pos:start="399:21" pos:end="399:35">

                    <expr_stmt pos:start="399:21" pos:end="399:35"><expr pos:start="399:21" pos:end="399:34"><name pos:start="399:21" pos:end="399:24">mask</name> <operator pos:start="399:26" pos:end="399:27">|=</operator> <name pos:start="399:29" pos:end="399:34">CPSR_F</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="401:17" pos:end="403:32"><if pos:start="401:17" pos:end="403:32">if <condition pos:start="401:20" pos:end="401:37">(<expr pos:start="401:21" pos:end="401:36"><name pos:start="401:21" pos:end="401:24">insn</name> <operator pos:start="401:26" pos:end="401:26">&amp;</operator> <operator pos:start="401:28" pos:end="401:28">(</operator><literal type="number" pos:start="401:29" pos:end="401:29">1</literal> <operator pos:start="401:31" pos:end="401:32">&lt;&lt;</operator> <literal type="number" pos:start="401:34" pos:end="401:35">18</literal><operator pos:start="401:36" pos:end="401:36">)</operator></expr>)</condition><block type="pseudo" pos:start="403:21" pos:end="403:32"><block_content pos:start="403:21" pos:end="403:32">

                    <expr_stmt pos:start="403:21" pos:end="403:32"><expr pos:start="403:21" pos:end="403:31"><name pos:start="403:21" pos:end="403:23">val</name> <operator pos:start="403:25" pos:end="403:26">|=</operator> <name pos:start="403:28" pos:end="403:31">mask</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="407:13" pos:end="413:13"><if pos:start="407:13" pos:end="413:13">if <condition pos:start="407:16" pos:end="407:33">(<expr pos:start="407:17" pos:end="407:32"><name pos:start="407:17" pos:end="407:20">insn</name> <operator pos:start="407:22" pos:end="407:22">&amp;</operator> <operator pos:start="407:24" pos:end="407:24">(</operator><literal type="number" pos:start="407:25" pos:end="407:25">1</literal> <operator pos:start="407:27" pos:end="407:28">&lt;&lt;</operator> <literal type="number" pos:start="407:30" pos:end="407:31">17</literal><operator pos:start="407:32" pos:end="407:32">)</operator></expr>)</condition> <block pos:start="407:35" pos:end="413:13">{<block_content pos:start="409:17" pos:end="411:37">

                <expr_stmt pos:start="409:17" pos:end="409:31"><expr pos:start="409:17" pos:end="409:30"><name pos:start="409:17" pos:end="409:20">mask</name> <operator pos:start="409:22" pos:end="409:23">|=</operator> <name pos:start="409:25" pos:end="409:30">CPSR_M</name></expr>;</expr_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:37"><expr pos:start="411:17" pos:end="411:36"><name pos:start="411:17" pos:end="411:19">val</name> <operator pos:start="411:21" pos:end="411:22">|=</operator> <operator pos:start="411:24" pos:end="411:24">(</operator><name pos:start="411:25" pos:end="411:28">insn</name> <operator pos:start="411:30" pos:end="411:30">&amp;</operator> <literal type="number" pos:start="411:32" pos:end="411:35">0x1f</literal><operator pos:start="411:36" pos:end="411:36">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="415:13" pos:end="419:13"><if pos:start="415:13" pos:end="419:13">if <condition pos:start="415:16" pos:end="415:21">(<expr pos:start="415:17" pos:end="415:20"><name pos:start="415:17" pos:end="415:20">mask</name></expr>)</condition> <block pos:start="415:23" pos:end="419:13">{<block_content pos:start="417:17" pos:end="417:48">

                <expr_stmt pos:start="417:17" pos:end="417:48"><expr pos:start="417:17" pos:end="417:47"><call pos:start="417:17" pos:end="417:47"><name pos:start="417:17" pos:end="417:30">gen_set_psr_im</name><argument_list pos:start="417:31" pos:end="417:47">(<argument pos:start="417:32" pos:end="417:32"><expr pos:start="417:32" pos:end="417:32"><name pos:start="417:32" pos:end="417:32">s</name></expr></argument>, <argument pos:start="417:35" pos:end="417:38"><expr pos:start="417:35" pos:end="417:38"><name pos:start="417:35" pos:end="417:38">mask</name></expr></argument>, <argument pos:start="417:41" pos:end="417:41"><expr pos:start="417:41" pos:end="417:41"><literal type="number" pos:start="417:41" pos:end="417:41">0</literal></expr></argument>, <argument pos:start="417:44" pos:end="417:46"><expr pos:start="417:44" pos:end="417:46"><name pos:start="417:44" pos:end="417:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="421:13" pos:end="421:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="425:9" pos:end="425:24">goto <name pos:start="425:14" pos:end="425:23">illegal_op</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="429:5" pos:end="441:5"><if pos:start="429:5" pos:end="441:5">if <condition pos:start="429:8" pos:end="429:20">(<expr pos:start="429:9" pos:end="429:19"><name pos:start="429:9" pos:end="429:12">cond</name> <operator pos:start="429:14" pos:end="429:15">!=</operator> <literal type="number" pos:start="429:17" pos:end="429:19">0xe</literal></expr>)</condition> <block pos:start="429:22" pos:end="441:5">{<block_content pos:start="435:9" pos:end="439:23">

        <comment type="block" pos:start="431:9" pos:end="433:30">/* if not always execute, we generate a conditional jump to

           next instruction */</comment>

        <expr_stmt pos:start="435:9" pos:end="435:39"><expr pos:start="435:9" pos:end="435:38"><name pos:start="435:9" pos:end="435:20"><name pos:start="435:9" pos:end="435:9">s</name><operator pos:start="435:10" pos:end="435:11">-&gt;</operator><name pos:start="435:12" pos:end="435:20">condlabel</name></name> <operator pos:start="435:22" pos:end="435:22">=</operator> <call pos:start="435:24" pos:end="435:38"><name pos:start="435:24" pos:end="435:36">gen_new_label</name><argument_list pos:start="435:37" pos:end="435:38">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="437:9" pos:end="437:48"><expr pos:start="437:9" pos:end="437:47"><call pos:start="437:9" pos:end="437:47"><name pos:start="437:9" pos:end="437:23">arm_gen_test_cc</name><argument_list pos:start="437:24" pos:end="437:47">(<argument pos:start="437:25" pos:end="437:32"><expr pos:start="437:25" pos:end="437:32"><name pos:start="437:25" pos:end="437:28">cond</name> <operator pos:start="437:30" pos:end="437:30">^</operator> <literal type="number" pos:start="437:32" pos:end="437:32">1</literal></expr></argument>, <argument pos:start="437:35" pos:end="437:46"><expr pos:start="437:35" pos:end="437:46"><name pos:start="437:35" pos:end="437:46"><name pos:start="437:35" pos:end="437:35">s</name><operator pos:start="437:36" pos:end="437:37">-&gt;</operator><name pos:start="437:38" pos:end="437:46">condlabel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:23"><expr pos:start="439:9" pos:end="439:22"><name pos:start="439:9" pos:end="439:18"><name pos:start="439:9" pos:end="439:9">s</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:18">condjmp</name></name> <operator pos:start="439:20" pos:end="439:20">=</operator> <literal type="number" pos:start="439:22" pos:end="439:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="443:5" pos:end="2909:5"><if pos:start="443:5" pos:end="511:5">if <condition pos:start="443:8" pos:end="443:42">(<expr pos:start="443:9" pos:end="443:41"><operator pos:start="443:9" pos:end="443:9">(</operator><name pos:start="443:10" pos:end="443:13">insn</name> <operator pos:start="443:15" pos:end="443:15">&amp;</operator> <literal type="number" pos:start="443:17" pos:end="443:26">0x0f900000</literal><operator pos:start="443:27" pos:end="443:27">)</operator> <operator pos:start="443:29" pos:end="443:30">==</operator> <literal type="number" pos:start="443:32" pos:end="443:41">0x03000000</literal></expr>)</condition> <block pos:start="443:44" pos:end="511:5">{<block_content pos:start="445:9" pos:end="509:9">

        <if_stmt pos:start="445:9" pos:end="509:9"><if pos:start="445:9" pos:end="475:9">if <condition pos:start="445:12" pos:end="445:36">(<expr pos:start="445:13" pos:end="445:35"><operator pos:start="445:13" pos:end="445:13">(</operator><name pos:start="445:14" pos:end="445:17">insn</name> <operator pos:start="445:19" pos:end="445:19">&amp;</operator> <operator pos:start="445:21" pos:end="445:21">(</operator><literal type="number" pos:start="445:22" pos:end="445:22">1</literal> <operator pos:start="445:24" pos:end="445:25">&lt;&lt;</operator> <literal type="number" pos:start="445:27" pos:end="445:28">21</literal><operator pos:start="445:29" pos:end="445:29">)</operator><operator pos:start="445:30" pos:end="445:30">)</operator> <operator pos:start="445:32" pos:end="445:33">==</operator> <literal type="number" pos:start="445:35" pos:end="445:35">0</literal></expr>)</condition> <block pos:start="445:38" pos:end="475:9">{<block_content pos:start="447:13" pos:end="473:34">

            <expr_stmt pos:start="447:13" pos:end="447:22"><expr pos:start="447:13" pos:end="447:21"><call pos:start="447:13" pos:end="447:21"><name pos:start="447:13" pos:end="447:16">ARCH</name><argument_list pos:start="447:17" pos:end="447:21">(<argument pos:start="447:18" pos:end="447:20"><expr pos:start="447:18" pos:end="447:20"><literal type="number" pos:start="447:18" pos:end="447:20">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:36"><expr pos:start="449:13" pos:end="449:35"><name pos:start="449:13" pos:end="449:14">rd</name> <operator pos:start="449:16" pos:end="449:16">=</operator> <operator pos:start="449:18" pos:end="449:18">(</operator><name pos:start="449:19" pos:end="449:22">insn</name> <operator pos:start="449:24" pos:end="449:25">&gt;&gt;</operator> <literal type="number" pos:start="449:27" pos:end="449:28">12</literal><operator pos:start="449:29" pos:end="449:29">)</operator> <operator pos:start="449:31" pos:end="449:31">&amp;</operator> <literal type="number" pos:start="449:33" pos:end="449:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:58"><expr pos:start="451:13" pos:end="451:57"><name pos:start="451:13" pos:end="451:15">val</name> <operator pos:start="451:17" pos:end="451:17">=</operator> <operator pos:start="451:19" pos:end="451:19">(</operator><operator pos:start="451:20" pos:end="451:20">(</operator><name pos:start="451:21" pos:end="451:24">insn</name> <operator pos:start="451:26" pos:end="451:27">&gt;&gt;</operator> <literal type="number" pos:start="451:29" pos:end="451:29">4</literal><operator pos:start="451:30" pos:end="451:30">)</operator> <operator pos:start="451:32" pos:end="451:32">&amp;</operator> <literal type="number" pos:start="451:34" pos:end="451:39">0xf000</literal><operator pos:start="451:40" pos:end="451:40">)</operator> <operator pos:start="451:42" pos:end="451:42">|</operator> <operator pos:start="451:44" pos:end="451:44">(</operator><name pos:start="451:45" pos:end="451:48">insn</name> <operator pos:start="451:50" pos:end="451:50">&amp;</operator> <literal type="number" pos:start="451:52" pos:end="451:56">0xfff</literal><operator pos:start="451:57" pos:end="451:57">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="453:13" pos:end="471:13"><if pos:start="453:13" pos:end="461:13">if <condition pos:start="453:16" pos:end="453:40">(<expr pos:start="453:17" pos:end="453:39"><operator pos:start="453:17" pos:end="453:17">(</operator><name pos:start="453:18" pos:end="453:21">insn</name> <operator pos:start="453:23" pos:end="453:23">&amp;</operator> <operator pos:start="453:25" pos:end="453:25">(</operator><literal type="number" pos:start="453:26" pos:end="453:26">1</literal> <operator pos:start="453:28" pos:end="453:29">&lt;&lt;</operator> <literal type="number" pos:start="453:31" pos:end="453:32">22</literal><operator pos:start="453:33" pos:end="453:33">)</operator><operator pos:start="453:34" pos:end="453:34">)</operator> <operator pos:start="453:36" pos:end="453:37">==</operator> <literal type="number" pos:start="453:39" pos:end="453:39">0</literal></expr>)</condition> <block pos:start="453:42" pos:end="461:13">{<block_content pos:start="457:17" pos:end="459:43">

                <comment type="block" pos:start="455:17" pos:end="455:26">/* MOVW */</comment>

                <expr_stmt pos:start="457:17" pos:end="457:41"><expr pos:start="457:17" pos:end="457:40"><name pos:start="457:17" pos:end="457:19">tmp</name> <operator pos:start="457:21" pos:end="457:21">=</operator> <call pos:start="457:23" pos:end="457:40"><name pos:start="457:23" pos:end="457:38">tcg_temp_new_i32</name><argument_list pos:start="457:39" pos:end="457:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="459:17" pos:end="459:43"><expr pos:start="459:17" pos:end="459:42"><call pos:start="459:17" pos:end="459:42"><name pos:start="459:17" pos:end="459:32">tcg_gen_movi_i32</name><argument_list pos:start="459:33" pos:end="459:42">(<argument pos:start="459:34" pos:end="459:36"><expr pos:start="459:34" pos:end="459:36"><name pos:start="459:34" pos:end="459:36">tmp</name></expr></argument>, <argument pos:start="459:39" pos:end="459:41"><expr pos:start="459:39" pos:end="459:41"><name pos:start="459:39" pos:end="459:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="461:15" pos:end="471:13">else <block pos:start="461:20" pos:end="471:13">{<block_content pos:start="465:17" pos:end="469:53">

                <comment type="block" pos:start="463:17" pos:end="463:26">/* MOVT */</comment>

                <expr_stmt pos:start="465:17" pos:end="465:38"><expr pos:start="465:17" pos:end="465:37"><name pos:start="465:17" pos:end="465:19">tmp</name> <operator pos:start="465:21" pos:end="465:21">=</operator> <call pos:start="465:23" pos:end="465:37"><name pos:start="465:23" pos:end="465:30">load_reg</name><argument_list pos:start="465:31" pos:end="465:37">(<argument pos:start="465:32" pos:end="465:32"><expr pos:start="465:32" pos:end="465:32"><name pos:start="465:32" pos:end="465:32">s</name></expr></argument>, <argument pos:start="465:35" pos:end="465:36"><expr pos:start="465:35" pos:end="465:36"><name pos:start="465:35" pos:end="465:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="467:17" pos:end="467:45"><expr pos:start="467:17" pos:end="467:44"><call pos:start="467:17" pos:end="467:44"><name pos:start="467:17" pos:end="467:34">tcg_gen_ext16u_i32</name><argument_list pos:start="467:35" pos:end="467:44">(<argument pos:start="467:36" pos:end="467:38"><expr pos:start="467:36" pos:end="467:38"><name pos:start="467:36" pos:end="467:38">tmp</name></expr></argument>, <argument pos:start="467:41" pos:end="467:43"><expr pos:start="467:41" pos:end="467:43"><name pos:start="467:41" pos:end="467:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="469:17" pos:end="469:53"><expr pos:start="469:17" pos:end="469:52"><call pos:start="469:17" pos:end="469:52"><name pos:start="469:17" pos:end="469:31">tcg_gen_ori_i32</name><argument_list pos:start="469:32" pos:end="469:52">(<argument pos:start="469:33" pos:end="469:35"><expr pos:start="469:33" pos:end="469:35"><name pos:start="469:33" pos:end="469:35">tmp</name></expr></argument>, <argument pos:start="469:38" pos:end="469:40"><expr pos:start="469:38" pos:end="469:40"><name pos:start="469:38" pos:end="469:40">tmp</name></expr></argument>, <argument pos:start="469:43" pos:end="469:51"><expr pos:start="469:43" pos:end="469:51"><name pos:start="469:43" pos:end="469:45">val</name> <operator pos:start="469:47" pos:end="469:48">&lt;&lt;</operator> <literal type="number" pos:start="469:50" pos:end="469:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="473:13" pos:end="473:34"><expr pos:start="473:13" pos:end="473:33"><call pos:start="473:13" pos:end="473:33"><name pos:start="473:13" pos:end="473:21">store_reg</name><argument_list pos:start="473:22" pos:end="473:33">(<argument pos:start="473:23" pos:end="473:23"><expr pos:start="473:23" pos:end="473:23"><name pos:start="473:23" pos:end="473:23">s</name></expr></argument>, <argument pos:start="473:26" pos:end="473:27"><expr pos:start="473:26" pos:end="473:27"><name pos:start="473:26" pos:end="473:27">rd</name></expr></argument>, <argument pos:start="473:30" pos:end="473:32"><expr pos:start="473:30" pos:end="473:32"><name pos:start="473:30" pos:end="473:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="475:11" pos:end="509:9">else <block pos:start="475:16" pos:end="509:9">{<block_content pos:start="477:13" pos:end="507:13">

            <if_stmt pos:start="477:13" pos:end="479:32"><if pos:start="477:13" pos:end="479:32">if <condition pos:start="477:16" pos:end="477:44">(<expr pos:start="477:17" pos:end="477:43"><operator pos:start="477:17" pos:end="477:17">(</operator><operator pos:start="477:18" pos:end="477:18">(</operator><name pos:start="477:19" pos:end="477:22">insn</name> <operator pos:start="477:24" pos:end="477:25">&gt;&gt;</operator> <literal type="number" pos:start="477:27" pos:end="477:28">12</literal><operator pos:start="477:29" pos:end="477:29">)</operator> <operator pos:start="477:31" pos:end="477:31">&amp;</operator> <literal type="number" pos:start="477:33" pos:end="477:35">0xf</literal><operator pos:start="477:36" pos:end="477:36">)</operator> <operator pos:start="477:38" pos:end="477:39">!=</operator> <literal type="number" pos:start="477:41" pos:end="477:43">0xf</literal></expr>)</condition><block type="pseudo" pos:start="479:17" pos:end="479:32"><block_content pos:start="479:17" pos:end="479:32">

                <goto pos:start="479:17" pos:end="479:32">goto <name pos:start="479:22" pos:end="479:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="481:13" pos:end="507:13"><if pos:start="481:13" pos:end="485:13">if <condition pos:start="481:16" pos:end="481:42">(<expr pos:start="481:17" pos:end="481:41"><operator pos:start="481:17" pos:end="481:17">(</operator><operator pos:start="481:18" pos:end="481:18">(</operator><name pos:start="481:19" pos:end="481:22">insn</name> <operator pos:start="481:24" pos:end="481:25">&gt;&gt;</operator> <literal type="number" pos:start="481:27" pos:end="481:28">16</literal><operator pos:start="481:29" pos:end="481:29">)</operator> <operator pos:start="481:31" pos:end="481:31">&amp;</operator> <literal type="number" pos:start="481:33" pos:end="481:35">0xf</literal><operator pos:start="481:36" pos:end="481:36">)</operator> <operator pos:start="481:38" pos:end="481:39">==</operator> <literal type="number" pos:start="481:41" pos:end="481:41">0</literal></expr>)</condition> <block pos:start="481:44" pos:end="485:13">{<block_content pos:start="483:17" pos:end="483:45">

                <expr_stmt pos:start="483:17" pos:end="483:45"><expr pos:start="483:17" pos:end="483:44"><call pos:start="483:17" pos:end="483:44"><name pos:start="483:17" pos:end="483:28">gen_nop_hint</name><argument_list pos:start="483:29" pos:end="483:44">(<argument pos:start="483:30" pos:end="483:30"><expr pos:start="483:30" pos:end="483:30"><name pos:start="483:30" pos:end="483:30">s</name></expr></argument>, <argument pos:start="483:33" pos:end="483:43"><expr pos:start="483:33" pos:end="483:43"><name pos:start="483:33" pos:end="483:36">insn</name> <operator pos:start="483:38" pos:end="483:38">&amp;</operator> <literal type="number" pos:start="483:40" pos:end="483:43">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="485:15" pos:end="507:13">else <block pos:start="485:20" pos:end="507:13">{<block_content pos:start="489:17" pos:end="505:17">

                <comment type="block" pos:start="487:17" pos:end="487:38">/* CPSR = immediate */</comment>

                <expr_stmt pos:start="489:17" pos:end="489:34"><expr pos:start="489:17" pos:end="489:33"><name pos:start="489:17" pos:end="489:19">val</name> <operator pos:start="489:21" pos:end="489:21">=</operator> <name pos:start="489:23" pos:end="489:26">insn</name> <operator pos:start="489:28" pos:end="489:28">&amp;</operator> <literal type="number" pos:start="489:30" pos:end="489:33">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="491:17" pos:end="491:48"><expr pos:start="491:17" pos:end="491:47"><name pos:start="491:17" pos:end="491:21">shift</name> <operator pos:start="491:23" pos:end="491:23">=</operator> <operator pos:start="491:25" pos:end="491:25">(</operator><operator pos:start="491:26" pos:end="491:26">(</operator><name pos:start="491:27" pos:end="491:30">insn</name> <operator pos:start="491:32" pos:end="491:33">&gt;&gt;</operator> <literal type="number" pos:start="491:35" pos:end="491:35">8</literal><operator pos:start="491:36" pos:end="491:36">)</operator> <operator pos:start="491:38" pos:end="491:38">&amp;</operator> <literal type="number" pos:start="491:40" pos:end="491:42">0xf</literal><operator pos:start="491:43" pos:end="491:43">)</operator> <operator pos:start="491:45" pos:end="491:45">*</operator> <literal type="number" pos:start="491:47" pos:end="491:47">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="493:17" pos:end="495:65"><if pos:start="493:17" pos:end="495:65">if <condition pos:start="493:20" pos:end="493:26">(<expr pos:start="493:21" pos:end="493:25"><name pos:start="493:21" pos:end="493:25">shift</name></expr>)</condition><block type="pseudo" pos:start="495:21" pos:end="495:65"><block_content pos:start="495:21" pos:end="495:65">

                    <expr_stmt pos:start="495:21" pos:end="495:65"><expr pos:start="495:21" pos:end="495:64"><name pos:start="495:21" pos:end="495:23">val</name> <operator pos:start="495:25" pos:end="495:25">=</operator> <operator pos:start="495:27" pos:end="495:27">(</operator><name pos:start="495:28" pos:end="495:30">val</name> <operator pos:start="495:32" pos:end="495:33">&gt;&gt;</operator> <name pos:start="495:35" pos:end="495:39">shift</name><operator pos:start="495:40" pos:end="495:40">)</operator> <operator pos:start="495:42" pos:end="495:42">|</operator> <operator pos:start="495:44" pos:end="495:44">(</operator><name pos:start="495:45" pos:end="495:47">val</name> <operator pos:start="495:49" pos:end="495:50">&lt;&lt;</operator> <operator pos:start="495:52" pos:end="495:52">(</operator><literal type="number" pos:start="495:53" pos:end="495:56">32</literal> <operator pos:start="495:56" pos:end="495:56">-</operator> <name pos:start="495:58" pos:end="495:62">shift</name><operator pos:start="495:63" pos:end="495:63">)</operator><operator pos:start="495:64" pos:end="495:64">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="497:17" pos:end="497:46"><expr pos:start="497:17" pos:end="497:45"><name pos:start="497:17" pos:end="497:17">i</name> <operator pos:start="497:19" pos:end="497:19">=</operator> <operator pos:start="497:21" pos:end="497:21">(</operator><operator pos:start="497:22" pos:end="497:22">(</operator><name pos:start="497:23" pos:end="497:26">insn</name> <operator pos:start="497:28" pos:end="497:28">&amp;</operator> <operator pos:start="497:30" pos:end="497:30">(</operator><literal type="number" pos:start="497:31" pos:end="497:31">1</literal> <operator pos:start="497:33" pos:end="497:34">&lt;&lt;</operator> <literal type="number" pos:start="497:36" pos:end="497:37">22</literal><operator pos:start="497:38" pos:end="497:38">)</operator><operator pos:start="497:39" pos:end="497:39">)</operator> <operator pos:start="497:41" pos:end="497:42">!=</operator> <literal type="number" pos:start="497:44" pos:end="497:44">0</literal><operator pos:start="497:45" pos:end="497:45">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="499:17" pos:end="505:17"><if pos:start="499:17" pos:end="505:17">if <condition pos:start="499:20" pos:end="501:43">(<expr pos:start="499:21" pos:end="501:42"><call pos:start="499:21" pos:end="501:42"><name pos:start="499:21" pos:end="499:34">gen_set_psr_im</name><argument_list pos:start="499:35" pos:end="501:42">(<argument pos:start="499:36" pos:end="499:36"><expr pos:start="499:36" pos:end="499:36"><name pos:start="499:36" pos:end="499:36">s</name></expr></argument>, <argument pos:start="499:39" pos:end="499:72"><expr pos:start="499:39" pos:end="499:72"><call pos:start="499:39" pos:end="499:72"><name pos:start="499:39" pos:end="499:46">msr_mask</name><argument_list pos:start="499:47" pos:end="499:72">(<argument pos:start="499:48" pos:end="499:48"><expr pos:start="499:48" pos:end="499:48"><name pos:start="499:48" pos:end="499:48">s</name></expr></argument>, <argument pos:start="499:51" pos:end="499:68"><expr pos:start="499:51" pos:end="499:68"><operator pos:start="499:51" pos:end="499:51">(</operator><name pos:start="499:52" pos:end="499:55">insn</name> <operator pos:start="499:57" pos:end="499:58">&gt;&gt;</operator> <literal type="number" pos:start="499:60" pos:end="499:61">16</literal><operator pos:start="499:62" pos:end="499:62">)</operator> <operator pos:start="499:64" pos:end="499:64">&amp;</operator> <literal type="number" pos:start="499:66" pos:end="499:68">0xf</literal></expr></argument>, <argument pos:start="499:71" pos:end="499:71"><expr pos:start="499:71" pos:end="499:71"><name pos:start="499:71" pos:end="499:71">i</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="501:36" pos:end="501:36"><expr pos:start="501:36" pos:end="501:36"><name pos:start="501:36" pos:end="501:36">i</name></expr></argument>, <argument pos:start="501:39" pos:end="501:41"><expr pos:start="501:39" pos:end="501:41"><name pos:start="501:39" pos:end="501:41">val</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="501:45" pos:end="505:17">{<block_content pos:start="503:21" pos:end="503:36">

                    <goto pos:start="503:21" pos:end="503:36">goto <name pos:start="503:26" pos:end="503:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="511:7" pos:end="915:5">else if <condition pos:start="511:15" pos:end="513:52">(<expr pos:start="511:16" pos:end="513:51"><operator pos:start="511:16" pos:end="511:16">(</operator><name pos:start="511:17" pos:end="511:20">insn</name> <operator pos:start="511:22" pos:end="511:22">&amp;</operator> <literal type="number" pos:start="511:24" pos:end="511:33">0x0f900000</literal><operator pos:start="511:34" pos:end="511:34">)</operator> <operator pos:start="511:36" pos:end="511:37">==</operator> <literal type="number" pos:start="511:39" pos:end="511:48">0x01000000</literal>

               <operator pos:start="513:16" pos:end="513:17">&amp;&amp;</operator> <operator pos:start="513:19" pos:end="513:19">(</operator><name pos:start="513:20" pos:end="513:23">insn</name> <operator pos:start="513:25" pos:end="513:25">&amp;</operator> <literal type="number" pos:start="513:27" pos:end="513:36">0x00000090</literal><operator pos:start="513:37" pos:end="513:37">)</operator> <operator pos:start="513:39" pos:end="513:40">!=</operator> <literal type="number" pos:start="513:42" pos:end="513:51">0x00000090</literal></expr>)</condition> <block pos:start="513:54" pos:end="915:5">{<block_content pos:start="517:9" pos:end="913:9">

        <comment type="block" pos:start="515:9" pos:end="515:40">/* miscellaneous instructions */</comment>

        <expr_stmt pos:start="517:9" pos:end="517:31"><expr pos:start="517:9" pos:end="517:30"><name pos:start="517:9" pos:end="517:11">op1</name> <operator pos:start="517:13" pos:end="517:13">=</operator> <operator pos:start="517:15" pos:end="517:15">(</operator><name pos:start="517:16" pos:end="517:19">insn</name> <operator pos:start="517:21" pos:end="517:22">&gt;&gt;</operator> <literal type="number" pos:start="517:24" pos:end="517:25">21</literal><operator pos:start="517:26" pos:end="517:26">)</operator> <operator pos:start="517:28" pos:end="517:28">&amp;</operator> <literal type="number" pos:start="517:30" pos:end="517:30">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="519:9" pos:end="519:31"><expr pos:start="519:9" pos:end="519:30"><name pos:start="519:9" pos:end="519:10">sh</name> <operator pos:start="519:12" pos:end="519:12">=</operator> <operator pos:start="519:14" pos:end="519:14">(</operator><name pos:start="519:15" pos:end="519:18">insn</name> <operator pos:start="519:20" pos:end="519:21">&gt;&gt;</operator> <literal type="number" pos:start="519:23" pos:end="519:23">4</literal><operator pos:start="519:24" pos:end="519:24">)</operator> <operator pos:start="519:26" pos:end="519:26">&amp;</operator> <literal type="number" pos:start="519:28" pos:end="519:30">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="521:9" pos:end="521:24"><expr pos:start="521:9" pos:end="521:23"><name pos:start="521:9" pos:end="521:10">rm</name> <operator pos:start="521:12" pos:end="521:12">=</operator> <name pos:start="521:14" pos:end="521:17">insn</name> <operator pos:start="521:19" pos:end="521:19">&amp;</operator> <literal type="number" pos:start="521:21" pos:end="521:23">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="523:9" pos:end="913:9">switch <condition pos:start="523:16" pos:end="523:19">(<expr pos:start="523:17" pos:end="523:18"><name pos:start="523:17" pos:end="523:18">sh</name></expr>)</condition> <block pos:start="523:21" pos:end="913:9">{<block_content pos:start="525:9" pos:end="911:28">

        <case pos:start="525:9" pos:end="525:17">case <expr pos:start="525:14" pos:end="525:16"><literal type="number" pos:start="525:14" pos:end="525:16">0x0</literal></expr>:</case> <comment type="block" pos:start="525:19" pos:end="525:52">/* move program status register */</comment>

            <if_stmt pos:start="527:13" pos:end="563:13"><if pos:start="527:13" pos:end="539:13">if <condition pos:start="527:16" pos:end="527:24">(<expr pos:start="527:17" pos:end="527:23"><name pos:start="527:17" pos:end="527:19">op1</name> <operator pos:start="527:21" pos:end="527:21">&amp;</operator> <literal type="number" pos:start="527:23" pos:end="527:23">1</literal></expr>)</condition> <block pos:start="527:26" pos:end="539:13">{<block_content pos:start="531:17" pos:end="537:36">

                <comment type="block" pos:start="529:17" pos:end="529:31">/* PSR = reg */</comment>

                <expr_stmt pos:start="531:17" pos:end="531:38"><expr pos:start="531:17" pos:end="531:37"><name pos:start="531:17" pos:end="531:19">tmp</name> <operator pos:start="531:21" pos:end="531:21">=</operator> <call pos:start="531:23" pos:end="531:37"><name pos:start="531:23" pos:end="531:30">load_reg</name><argument_list pos:start="531:31" pos:end="531:37">(<argument pos:start="531:32" pos:end="531:32"><expr pos:start="531:32" pos:end="531:32"><name pos:start="531:32" pos:end="531:32">s</name></expr></argument>, <argument pos:start="531:35" pos:end="531:36"><expr pos:start="531:35" pos:end="531:36"><name pos:start="531:35" pos:end="531:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="533:17" pos:end="533:37"><expr pos:start="533:17" pos:end="533:36"><name pos:start="533:17" pos:end="533:17">i</name> <operator pos:start="533:19" pos:end="533:19">=</operator> <operator pos:start="533:21" pos:end="533:21">(</operator><operator pos:start="533:22" pos:end="533:22">(</operator><name pos:start="533:23" pos:end="533:25">op1</name> <operator pos:start="533:27" pos:end="533:27">&amp;</operator> <literal type="number" pos:start="533:29" pos:end="533:29">2</literal><operator pos:start="533:30" pos:end="533:30">)</operator> <operator pos:start="533:32" pos:end="533:33">!=</operator> <literal type="number" pos:start="533:35" pos:end="533:35">0</literal><operator pos:start="533:36" pos:end="533:36">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="535:17" pos:end="537:36"><if pos:start="535:17" pos:end="537:36">if <condition pos:start="535:20" pos:end="535:79">(<expr pos:start="535:21" pos:end="535:78"><call pos:start="535:21" pos:end="535:78"><name pos:start="535:21" pos:end="535:31">gen_set_psr</name><argument_list pos:start="535:32" pos:end="535:78">(<argument pos:start="535:33" pos:end="535:33"><expr pos:start="535:33" pos:end="535:33"><name pos:start="535:33" pos:end="535:33">s</name></expr></argument>, <argument pos:start="535:36" pos:end="535:69"><expr pos:start="535:36" pos:end="535:69"><call pos:start="535:36" pos:end="535:69"><name pos:start="535:36" pos:end="535:43">msr_mask</name><argument_list pos:start="535:44" pos:end="535:69">(<argument pos:start="535:45" pos:end="535:45"><expr pos:start="535:45" pos:end="535:45"><name pos:start="535:45" pos:end="535:45">s</name></expr></argument>, <argument pos:start="535:48" pos:end="535:65"><expr pos:start="535:48" pos:end="535:65"><operator pos:start="535:48" pos:end="535:48">(</operator><name pos:start="535:49" pos:end="535:52">insn</name> <operator pos:start="535:54" pos:end="535:55">&gt;&gt;</operator> <literal type="number" pos:start="535:57" pos:end="535:58">16</literal><operator pos:start="535:59" pos:end="535:59">)</operator> <operator pos:start="535:61" pos:end="535:61">&amp;</operator> <literal type="number" pos:start="535:63" pos:end="535:65">0xf</literal></expr></argument>, <argument pos:start="535:68" pos:end="535:68"><expr pos:start="535:68" pos:end="535:68"><name pos:start="535:68" pos:end="535:68">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="535:72" pos:end="535:72"><expr pos:start="535:72" pos:end="535:72"><name pos:start="535:72" pos:end="535:72">i</name></expr></argument>, <argument pos:start="535:75" pos:end="535:77"><expr pos:start="535:75" pos:end="535:77"><name pos:start="535:75" pos:end="535:77">tmp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="537:21" pos:end="537:36"><block_content pos:start="537:21" pos:end="537:36">

                    <goto pos:start="537:21" pos:end="537:36">goto <name pos:start="537:26" pos:end="537:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="539:15" pos:end="563:13">else <block pos:start="539:20" pos:end="563:13">{<block_content pos:start="543:17" pos:end="561:38">

                <comment type="block" pos:start="541:17" pos:end="541:31">/* reg = PSR */</comment>

                <expr_stmt pos:start="543:17" pos:end="543:40"><expr pos:start="543:17" pos:end="543:39"><name pos:start="543:17" pos:end="543:18">rd</name> <operator pos:start="543:20" pos:end="543:20">=</operator> <operator pos:start="543:22" pos:end="543:22">(</operator><name pos:start="543:23" pos:end="543:26">insn</name> <operator pos:start="543:28" pos:end="543:29">&gt;&gt;</operator> <literal type="number" pos:start="543:31" pos:end="543:32">12</literal><operator pos:start="543:33" pos:end="543:33">)</operator> <operator pos:start="543:35" pos:end="543:35">&amp;</operator> <literal type="number" pos:start="543:37" pos:end="543:39">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="545:17" pos:end="559:17"><if pos:start="545:17" pos:end="553:17">if <condition pos:start="545:20" pos:end="545:28">(<expr pos:start="545:21" pos:end="545:27"><name pos:start="545:21" pos:end="545:23">op1</name> <operator pos:start="545:25" pos:end="545:25">&amp;</operator> <literal type="number" pos:start="545:27" pos:end="545:27">2</literal></expr>)</condition> <block pos:start="545:30" pos:end="553:17">{<block_content pos:start="547:21" pos:end="551:47">

                    <if_stmt pos:start="547:21" pos:end="549:40"><if pos:start="547:21" pos:end="549:40">if <condition pos:start="547:24" pos:end="547:35">(<expr pos:start="547:25" pos:end="547:34"><call pos:start="547:25" pos:end="547:34"><name pos:start="547:25" pos:end="547:31">IS_USER</name><argument_list pos:start="547:32" pos:end="547:34">(<argument pos:start="547:33" pos:end="547:33"><expr pos:start="547:33" pos:end="547:33"><name pos:start="547:33" pos:end="547:33">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="549:25" pos:end="549:40"><block_content pos:start="549:25" pos:end="549:40">

                        <goto pos:start="549:25" pos:end="549:40">goto <name pos:start="549:30" pos:end="549:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="551:21" pos:end="551:47"><expr pos:start="551:21" pos:end="551:46"><name pos:start="551:21" pos:end="551:23">tmp</name> <operator pos:start="551:25" pos:end="551:25">=</operator> <call pos:start="551:27" pos:end="551:46"><name pos:start="551:27" pos:end="551:40">load_cpu_field</name><argument_list pos:start="551:41" pos:end="551:46">(<argument pos:start="551:42" pos:end="551:45"><expr pos:start="551:42" pos:end="551:45"><name pos:start="551:42" pos:end="551:45">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="553:19" pos:end="559:17">else <block pos:start="553:24" pos:end="559:17">{<block_content pos:start="555:21" pos:end="557:55">

                    <expr_stmt pos:start="555:21" pos:end="555:45"><expr pos:start="555:21" pos:end="555:44"><name pos:start="555:21" pos:end="555:23">tmp</name> <operator pos:start="555:25" pos:end="555:25">=</operator> <call pos:start="555:27" pos:end="555:44"><name pos:start="555:27" pos:end="555:42">tcg_temp_new_i32</name><argument_list pos:start="555:43" pos:end="555:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="557:21" pos:end="557:55"><expr pos:start="557:21" pos:end="557:54"><call pos:start="557:21" pos:end="557:54"><name pos:start="557:21" pos:end="557:40">gen_helper_cpsr_read</name><argument_list pos:start="557:41" pos:end="557:54">(<argument pos:start="557:42" pos:end="557:44"><expr pos:start="557:42" pos:end="557:44"><name pos:start="557:42" pos:end="557:44">tmp</name></expr></argument>, <argument pos:start="557:47" pos:end="557:53"><expr pos:start="557:47" pos:end="557:53"><name pos:start="557:47" pos:end="557:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="561:17" pos:end="561:38"><expr pos:start="561:17" pos:end="561:37"><call pos:start="561:17" pos:end="561:37"><name pos:start="561:17" pos:end="561:25">store_reg</name><argument_list pos:start="561:26" pos:end="561:37">(<argument pos:start="561:27" pos:end="561:27"><expr pos:start="561:27" pos:end="561:27"><name pos:start="561:27" pos:end="561:27">s</name></expr></argument>, <argument pos:start="561:30" pos:end="561:31"><expr pos:start="561:30" pos:end="561:31"><name pos:start="561:30" pos:end="561:31">rd</name></expr></argument>, <argument pos:start="561:34" pos:end="561:36"><expr pos:start="561:34" pos:end="561:36"><name pos:start="561:34" pos:end="561:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="565:13" pos:end="565:18">break;</break>

        <case pos:start="567:9" pos:end="567:17">case <expr pos:start="567:14" pos:end="567:16"><literal type="number" pos:start="567:14" pos:end="567:16">0x1</literal></expr>:</case>

            <if_stmt pos:start="569:13" pos:end="597:13"><if pos:start="569:13" pos:end="579:13">if <condition pos:start="569:16" pos:end="569:25">(<expr pos:start="569:17" pos:end="569:24"><name pos:start="569:17" pos:end="569:19">op1</name> <operator pos:start="569:21" pos:end="569:22">==</operator> <literal type="number" pos:start="569:24" pos:end="569:24">1</literal></expr>)</condition> <block pos:start="569:27" pos:end="579:13">{<block_content pos:start="573:17" pos:end="577:31">

                <comment type="block" pos:start="571:17" pos:end="571:50">/* branch/exchange thumb (bx).  */</comment>

                <expr_stmt pos:start="573:17" pos:end="573:25"><expr pos:start="573:17" pos:end="573:24"><call pos:start="573:17" pos:end="573:24"><name pos:start="573:17" pos:end="573:20">ARCH</name><argument_list pos:start="573:21" pos:end="573:24">(<argument pos:start="573:22" pos:end="573:23"><expr pos:start="573:22" pos:end="573:23"><literal type="number" pos:start="573:22" pos:end="573:23">4T</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="575:17" pos:end="575:38"><expr pos:start="575:17" pos:end="575:37"><name pos:start="575:17" pos:end="575:19">tmp</name> <operator pos:start="575:21" pos:end="575:21">=</operator> <call pos:start="575:23" pos:end="575:37"><name pos:start="575:23" pos:end="575:30">load_reg</name><argument_list pos:start="575:31" pos:end="575:37">(<argument pos:start="575:32" pos:end="575:32"><expr pos:start="575:32" pos:end="575:32"><name pos:start="575:32" pos:end="575:32">s</name></expr></argument>, <argument pos:start="575:35" pos:end="575:36"><expr pos:start="575:35" pos:end="575:36"><name pos:start="575:35" pos:end="575:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="577:17" pos:end="577:31"><expr pos:start="577:17" pos:end="577:30"><call pos:start="577:17" pos:end="577:30"><name pos:start="577:17" pos:end="577:22">gen_bx</name><argument_list pos:start="577:23" pos:end="577:30">(<argument pos:start="577:24" pos:end="577:24"><expr pos:start="577:24" pos:end="577:24"><name pos:start="577:24" pos:end="577:24">s</name></expr></argument>, <argument pos:start="577:27" pos:end="577:29"><expr pos:start="577:27" pos:end="577:29"><name pos:start="577:27" pos:end="577:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="579:15" pos:end="593:13">else if <condition pos:start="579:23" pos:end="579:32">(<expr pos:start="579:24" pos:end="579:31"><name pos:start="579:24" pos:end="579:26">op1</name> <operator pos:start="579:28" pos:end="579:29">==</operator> <literal type="number" pos:start="579:31" pos:end="579:31">3</literal></expr>)</condition> <block pos:start="579:34" pos:end="593:13">{<block_content pos:start="583:17" pos:end="591:38">

                <comment type="block" pos:start="581:17" pos:end="581:25">/* clz */</comment>

                <expr_stmt pos:start="583:17" pos:end="583:24"><expr pos:start="583:17" pos:end="583:23"><call pos:start="583:17" pos:end="583:23"><name pos:start="583:17" pos:end="583:20">ARCH</name><argument_list pos:start="583:21" pos:end="583:23">(<argument pos:start="583:22" pos:end="583:22"><expr pos:start="583:22" pos:end="583:22"><literal type="number" pos:start="583:22" pos:end="583:22">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="585:17" pos:end="585:40"><expr pos:start="585:17" pos:end="585:39"><name pos:start="585:17" pos:end="585:18">rd</name> <operator pos:start="585:20" pos:end="585:20">=</operator> <operator pos:start="585:22" pos:end="585:22">(</operator><name pos:start="585:23" pos:end="585:26">insn</name> <operator pos:start="585:28" pos:end="585:29">&gt;&gt;</operator> <literal type="number" pos:start="585:31" pos:end="585:32">12</literal><operator pos:start="585:33" pos:end="585:33">)</operator> <operator pos:start="585:35" pos:end="585:35">&amp;</operator> <literal type="number" pos:start="585:37" pos:end="585:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="587:17" pos:end="587:38"><expr pos:start="587:17" pos:end="587:37"><name pos:start="587:17" pos:end="587:19">tmp</name> <operator pos:start="587:21" pos:end="587:21">=</operator> <call pos:start="587:23" pos:end="587:37"><name pos:start="587:23" pos:end="587:30">load_reg</name><argument_list pos:start="587:31" pos:end="587:37">(<argument pos:start="587:32" pos:end="587:32"><expr pos:start="587:32" pos:end="587:32"><name pos:start="587:32" pos:end="587:32">s</name></expr></argument>, <argument pos:start="587:35" pos:end="587:36"><expr pos:start="587:35" pos:end="587:36"><name pos:start="587:35" pos:end="587:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="589:17" pos:end="589:41"><expr pos:start="589:17" pos:end="589:40"><call pos:start="589:17" pos:end="589:40"><name pos:start="589:17" pos:end="589:30">gen_helper_clz</name><argument_list pos:start="589:31" pos:end="589:40">(<argument pos:start="589:32" pos:end="589:34"><expr pos:start="589:32" pos:end="589:34"><name pos:start="589:32" pos:end="589:34">tmp</name></expr></argument>, <argument pos:start="589:37" pos:end="589:39"><expr pos:start="589:37" pos:end="589:39"><name pos:start="589:37" pos:end="589:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="591:17" pos:end="591:38"><expr pos:start="591:17" pos:end="591:37"><call pos:start="591:17" pos:end="591:37"><name pos:start="591:17" pos:end="591:25">store_reg</name><argument_list pos:start="591:26" pos:end="591:37">(<argument pos:start="591:27" pos:end="591:27"><expr pos:start="591:27" pos:end="591:27"><name pos:start="591:27" pos:end="591:27">s</name></expr></argument>, <argument pos:start="591:30" pos:end="591:31"><expr pos:start="591:30" pos:end="591:31"><name pos:start="591:30" pos:end="591:31">rd</name></expr></argument>, <argument pos:start="591:34" pos:end="591:36"><expr pos:start="591:34" pos:end="591:36"><name pos:start="591:34" pos:end="591:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="593:15" pos:end="597:13">else <block pos:start="593:20" pos:end="597:13">{<block_content pos:start="595:17" pos:end="595:32">

                <goto pos:start="595:17" pos:end="595:32">goto <name pos:start="595:22" pos:end="595:31">illegal_op</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="599:13" pos:end="599:18">break;</break>

        <case pos:start="601:9" pos:end="601:17">case <expr pos:start="601:14" pos:end="601:16"><literal type="number" pos:start="601:14" pos:end="601:16">0x2</literal></expr>:</case>

            <if_stmt pos:start="603:13" pos:end="617:13"><if pos:start="603:13" pos:end="613:13">if <condition pos:start="603:16" pos:end="603:25">(<expr pos:start="603:17" pos:end="603:24"><name pos:start="603:17" pos:end="603:19">op1</name> <operator pos:start="603:21" pos:end="603:22">==</operator> <literal type="number" pos:start="603:24" pos:end="603:24">1</literal></expr>)</condition> <block pos:start="603:27" pos:end="613:13">{<block_content pos:start="605:17" pos:end="611:31">

                <expr_stmt pos:start="605:17" pos:end="605:25"><expr pos:start="605:17" pos:end="605:24"><call pos:start="605:17" pos:end="605:24"><name pos:start="605:17" pos:end="605:20">ARCH</name><argument_list pos:start="605:21" pos:end="605:24">(<argument pos:start="605:22" pos:end="605:23"><expr pos:start="605:22" pos:end="605:23"><literal type="number" pos:start="605:22" pos:end="605:23">5J</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="605:27" pos:end="605:35">/* bxj */</comment>

                <comment type="block" pos:start="607:17" pos:end="607:63">/* Trivial implementation equivalent to bx.  */</comment>

                <expr_stmt pos:start="609:17" pos:end="609:38"><expr pos:start="609:17" pos:end="609:37"><name pos:start="609:17" pos:end="609:19">tmp</name> <operator pos:start="609:21" pos:end="609:21">=</operator> <call pos:start="609:23" pos:end="609:37"><name pos:start="609:23" pos:end="609:30">load_reg</name><argument_list pos:start="609:31" pos:end="609:37">(<argument pos:start="609:32" pos:end="609:32"><expr pos:start="609:32" pos:end="609:32"><name pos:start="609:32" pos:end="609:32">s</name></expr></argument>, <argument pos:start="609:35" pos:end="609:36"><expr pos:start="609:35" pos:end="609:36"><name pos:start="609:35" pos:end="609:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="611:17" pos:end="611:31"><expr pos:start="611:17" pos:end="611:30"><call pos:start="611:17" pos:end="611:30"><name pos:start="611:17" pos:end="611:22">gen_bx</name><argument_list pos:start="611:23" pos:end="611:30">(<argument pos:start="611:24" pos:end="611:24"><expr pos:start="611:24" pos:end="611:24"><name pos:start="611:24" pos:end="611:24">s</name></expr></argument>, <argument pos:start="611:27" pos:end="611:29"><expr pos:start="611:27" pos:end="611:29"><name pos:start="611:27" pos:end="611:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="613:15" pos:end="617:13">else <block pos:start="613:20" pos:end="617:13">{<block_content pos:start="615:17" pos:end="615:32">

                <goto pos:start="615:17" pos:end="615:32">goto <name pos:start="615:22" pos:end="615:31">illegal_op</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="619:13" pos:end="619:18">break;</break>

        <case pos:start="621:9" pos:end="621:17">case <expr pos:start="621:14" pos:end="621:16"><literal type="number" pos:start="621:14" pos:end="621:16">0x3</literal></expr>:</case>

            <if_stmt pos:start="623:13" pos:end="625:30"><if pos:start="623:13" pos:end="625:30">if <condition pos:start="623:16" pos:end="623:25">(<expr pos:start="623:17" pos:end="623:24"><name pos:start="623:17" pos:end="623:19">op1</name> <operator pos:start="623:21" pos:end="623:22">!=</operator> <literal type="number" pos:start="623:24" pos:end="623:24">1</literal></expr>)</condition><block type="pseudo" pos:start="625:15" pos:end="625:30"><block_content pos:start="625:15" pos:end="625:30">

              <goto pos:start="625:15" pos:end="625:30">goto <name pos:start="625:20" pos:end="625:29">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <expr_stmt pos:start="629:13" pos:end="629:20"><expr pos:start="629:13" pos:end="629:19"><call pos:start="629:13" pos:end="629:19"><name pos:start="629:13" pos:end="629:16">ARCH</name><argument_list pos:start="629:17" pos:end="629:19">(<argument pos:start="629:18" pos:end="629:18"><expr pos:start="629:18" pos:end="629:18"><literal type="number" pos:start="629:18" pos:end="629:18">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="631:13" pos:end="631:50">/* branch link/exchange thumb (blx) */</comment>

            <expr_stmt pos:start="633:13" pos:end="633:34"><expr pos:start="633:13" pos:end="633:33"><name pos:start="633:13" pos:end="633:15">tmp</name> <operator pos:start="633:17" pos:end="633:17">=</operator> <call pos:start="633:19" pos:end="633:33"><name pos:start="633:19" pos:end="633:26">load_reg</name><argument_list pos:start="633:27" pos:end="633:33">(<argument pos:start="633:28" pos:end="633:28"><expr pos:start="633:28" pos:end="633:28"><name pos:start="633:28" pos:end="633:28">s</name></expr></argument>, <argument pos:start="633:31" pos:end="633:32"><expr pos:start="633:31" pos:end="633:32"><name pos:start="633:31" pos:end="633:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="635:13" pos:end="635:38"><expr pos:start="635:13" pos:end="635:37"><name pos:start="635:13" pos:end="635:16">tmp2</name> <operator pos:start="635:18" pos:end="635:18">=</operator> <call pos:start="635:20" pos:end="635:37"><name pos:start="635:20" pos:end="635:35">tcg_temp_new_i32</name><argument_list pos:start="635:36" pos:end="635:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:42"><expr pos:start="637:13" pos:end="637:41"><call pos:start="637:13" pos:end="637:41"><name pos:start="637:13" pos:end="637:28">tcg_gen_movi_i32</name><argument_list pos:start="637:29" pos:end="637:41">(<argument pos:start="637:30" pos:end="637:33"><expr pos:start="637:30" pos:end="637:33"><name pos:start="637:30" pos:end="637:33">tmp2</name></expr></argument>, <argument pos:start="637:36" pos:end="637:40"><expr pos:start="637:36" pos:end="637:40"><name pos:start="637:36" pos:end="637:40"><name pos:start="637:36" pos:end="637:36">s</name><operator pos:start="637:37" pos:end="637:38">-&gt;</operator><name pos:start="637:39" pos:end="637:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:35"><expr pos:start="639:13" pos:end="639:34"><call pos:start="639:13" pos:end="639:34"><name pos:start="639:13" pos:end="639:21">store_reg</name><argument_list pos:start="639:22" pos:end="639:34">(<argument pos:start="639:23" pos:end="639:23"><expr pos:start="639:23" pos:end="639:23"><name pos:start="639:23" pos:end="639:23">s</name></expr></argument>, <argument pos:start="639:26" pos:end="639:27"><expr pos:start="639:26" pos:end="639:27"><literal type="number" pos:start="639:26" pos:end="639:27">14</literal></expr></argument>, <argument pos:start="639:30" pos:end="639:33"><expr pos:start="639:30" pos:end="639:33"><name pos:start="639:30" pos:end="639:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="641:13" pos:end="641:27"><expr pos:start="641:13" pos:end="641:26"><call pos:start="641:13" pos:end="641:26"><name pos:start="641:13" pos:end="641:18">gen_bx</name><argument_list pos:start="641:19" pos:end="641:26">(<argument pos:start="641:20" pos:end="641:20"><expr pos:start="641:20" pos:end="641:20"><name pos:start="641:20" pos:end="641:20">s</name></expr></argument>, <argument pos:start="641:23" pos:end="641:25"><expr pos:start="641:23" pos:end="641:25"><name pos:start="641:23" pos:end="641:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="643:13" pos:end="643:18">break;</break>

        <case pos:start="645:9" pos:end="645:17">case <expr pos:start="645:14" pos:end="645:16"><literal type="number" pos:start="645:14" pos:end="645:16">0x4</literal></expr>:</case>

        <block pos:start="647:9" pos:end="713:9">{<block_content pos:start="651:13" pos:end="711:18">

            <comment type="block" pos:start="649:13" pos:end="649:30">/* crc32/crc32c */</comment>

            <decl_stmt pos:start="651:13" pos:end="651:47"><decl pos:start="651:13" pos:end="651:46"><type pos:start="651:13" pos:end="651:20"><name pos:start="651:13" pos:end="651:20">uint32_t</name></type> <name pos:start="651:22" pos:end="651:22">c</name> <init pos:start="651:24" pos:end="651:46">= <expr pos:start="651:26" pos:end="651:46"><call pos:start="651:26" pos:end="651:46"><name pos:start="651:26" pos:end="651:34">extract32</name><argument_list pos:start="651:35" pos:end="651:46">(<argument pos:start="651:36" pos:end="651:39"><expr pos:start="651:36" pos:end="651:39"><name pos:start="651:36" pos:end="651:39">insn</name></expr></argument>, <argument pos:start="651:42" pos:end="651:42"><expr pos:start="651:42" pos:end="651:42"><literal type="number" pos:start="651:42" pos:end="651:42">8</literal></expr></argument>, <argument pos:start="651:45" pos:end="651:45"><expr pos:start="651:45" pos:end="651:45"><literal type="number" pos:start="651:45" pos:end="651:45">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="655:13" pos:end="661:15">/* Check this CPU supports ARMv8 CRC instructions.

             * op1 == 3 is UNPREDICTABLE but handle as UNDEFINED.

             * Bits 8, 10 and 11 should be zero.

             */</comment>

            <if_stmt pos:start="663:13" pos:end="669:13"><if pos:start="663:13" pos:end="669:13">if <condition pos:start="663:16" pos:end="665:31">(<expr pos:start="663:17" pos:end="665:30"><operator pos:start="663:17" pos:end="663:17">!</operator><call pos:start="663:18" pos:end="663:51"><name pos:start="663:18" pos:end="663:31">arm_dc_feature</name><argument_list pos:start="663:32" pos:end="663:51">(<argument pos:start="663:33" pos:end="663:33"><expr pos:start="663:33" pos:end="663:33"><name pos:start="663:33" pos:end="663:33">s</name></expr></argument>, <argument pos:start="663:36" pos:end="663:50"><expr pos:start="663:36" pos:end="663:50"><name pos:start="663:36" pos:end="663:50">ARM_FEATURE_CRC</name></expr></argument>)</argument_list></call> <operator pos:start="663:53" pos:end="663:54">||</operator> <name pos:start="663:56" pos:end="663:58">op1</name> <operator pos:start="663:60" pos:end="663:61">==</operator> <literal type="number" pos:start="663:63" pos:end="663:65">0x3</literal> <operator pos:start="663:67" pos:end="663:68">||</operator>

                <operator pos:start="665:17" pos:end="665:17">(</operator><name pos:start="665:18" pos:end="665:18">c</name> <operator pos:start="665:20" pos:end="665:20">&amp;</operator> <literal type="number" pos:start="665:22" pos:end="665:24">0xd</literal><operator pos:start="665:25" pos:end="665:25">)</operator> <operator pos:start="665:27" pos:end="665:28">!=</operator> <literal type="number" pos:start="665:30" pos:end="665:30">0</literal></expr>)</condition> <block pos:start="665:33" pos:end="669:13">{<block_content pos:start="667:17" pos:end="667:32">

                <goto pos:start="667:17" pos:end="667:32">goto <name pos:start="667:22" pos:end="667:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="673:13" pos:end="673:40"><expr pos:start="673:13" pos:end="673:39"><name pos:start="673:13" pos:end="673:14">rn</name> <operator pos:start="673:16" pos:end="673:16">=</operator> <call pos:start="673:18" pos:end="673:39"><name pos:start="673:18" pos:end="673:26">extract32</name><argument_list pos:start="673:27" pos:end="673:39">(<argument pos:start="673:28" pos:end="673:31"><expr pos:start="673:28" pos:end="673:31"><name pos:start="673:28" pos:end="673:31">insn</name></expr></argument>, <argument pos:start="673:34" pos:end="673:35"><expr pos:start="673:34" pos:end="673:35"><literal type="number" pos:start="673:34" pos:end="673:35">16</literal></expr></argument>, <argument pos:start="673:38" pos:end="673:38"><expr pos:start="673:38" pos:end="673:38"><literal type="number" pos:start="673:38" pos:end="673:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="675:13" pos:end="675:40"><expr pos:start="675:13" pos:end="675:39"><name pos:start="675:13" pos:end="675:14">rd</name> <operator pos:start="675:16" pos:end="675:16">=</operator> <call pos:start="675:18" pos:end="675:39"><name pos:start="675:18" pos:end="675:26">extract32</name><argument_list pos:start="675:27" pos:end="675:39">(<argument pos:start="675:28" pos:end="675:31"><expr pos:start="675:28" pos:end="675:31"><name pos:start="675:28" pos:end="675:31">insn</name></expr></argument>, <argument pos:start="675:34" pos:end="675:35"><expr pos:start="675:34" pos:end="675:35"><literal type="number" pos:start="675:34" pos:end="675:35">12</literal></expr></argument>, <argument pos:start="675:38" pos:end="675:38"><expr pos:start="675:38" pos:end="675:38"><literal type="number" pos:start="675:38" pos:end="675:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="679:13" pos:end="679:34"><expr pos:start="679:13" pos:end="679:33"><name pos:start="679:13" pos:end="679:15">tmp</name> <operator pos:start="679:17" pos:end="679:17">=</operator> <call pos:start="679:19" pos:end="679:33"><name pos:start="679:19" pos:end="679:26">load_reg</name><argument_list pos:start="679:27" pos:end="679:33">(<argument pos:start="679:28" pos:end="679:28"><expr pos:start="679:28" pos:end="679:28"><name pos:start="679:28" pos:end="679:28">s</name></expr></argument>, <argument pos:start="679:31" pos:end="679:32"><expr pos:start="679:31" pos:end="679:32"><name pos:start="679:31" pos:end="679:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="681:13" pos:end="681:35"><expr pos:start="681:13" pos:end="681:34"><name pos:start="681:13" pos:end="681:16">tmp2</name> <operator pos:start="681:18" pos:end="681:18">=</operator> <call pos:start="681:20" pos:end="681:34"><name pos:start="681:20" pos:end="681:27">load_reg</name><argument_list pos:start="681:28" pos:end="681:34">(<argument pos:start="681:29" pos:end="681:29"><expr pos:start="681:29" pos:end="681:29"><name pos:start="681:29" pos:end="681:29">s</name></expr></argument>, <argument pos:start="681:32" pos:end="681:33"><expr pos:start="681:32" pos:end="681:33"><name pos:start="681:32" pos:end="681:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="683:13" pos:end="691:13"><if pos:start="683:13" pos:end="687:13">if <condition pos:start="683:16" pos:end="683:25">(<expr pos:start="683:17" pos:end="683:24"><name pos:start="683:17" pos:end="683:19">op1</name> <operator pos:start="683:21" pos:end="683:22">==</operator> <literal type="number" pos:start="683:24" pos:end="683:24">0</literal></expr>)</condition> <block pos:start="683:27" pos:end="687:13">{<block_content pos:start="685:17" pos:end="685:51">

                <expr_stmt pos:start="685:17" pos:end="685:51"><expr pos:start="685:17" pos:end="685:50"><call pos:start="685:17" pos:end="685:50"><name pos:start="685:17" pos:end="685:32">tcg_gen_andi_i32</name><argument_list pos:start="685:33" pos:end="685:50">(<argument pos:start="685:34" pos:end="685:37"><expr pos:start="685:34" pos:end="685:37"><name pos:start="685:34" pos:end="685:37">tmp2</name></expr></argument>, <argument pos:start="685:40" pos:end="685:43"><expr pos:start="685:40" pos:end="685:43"><name pos:start="685:40" pos:end="685:43">tmp2</name></expr></argument>, <argument pos:start="685:46" pos:end="685:49"><expr pos:start="685:46" pos:end="685:49"><literal type="number" pos:start="685:46" pos:end="685:49">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="687:15" pos:end="691:13">else if <condition pos:start="687:23" pos:end="687:32">(<expr pos:start="687:24" pos:end="687:31"><name pos:start="687:24" pos:end="687:26">op1</name> <operator pos:start="687:28" pos:end="687:29">==</operator> <literal type="number" pos:start="687:31" pos:end="687:31">1</literal></expr>)</condition> <block pos:start="687:34" pos:end="691:13">{<block_content pos:start="689:17" pos:end="689:53">

                <expr_stmt pos:start="689:17" pos:end="689:53"><expr pos:start="689:17" pos:end="689:52"><call pos:start="689:17" pos:end="689:52"><name pos:start="689:17" pos:end="689:32">tcg_gen_andi_i32</name><argument_list pos:start="689:33" pos:end="689:52">(<argument pos:start="689:34" pos:end="689:37"><expr pos:start="689:34" pos:end="689:37"><name pos:start="689:34" pos:end="689:37">tmp2</name></expr></argument>, <argument pos:start="689:40" pos:end="689:43"><expr pos:start="689:40" pos:end="689:43"><name pos:start="689:40" pos:end="689:43">tmp2</name></expr></argument>, <argument pos:start="689:46" pos:end="689:51"><expr pos:start="689:46" pos:end="689:51"><literal type="number" pos:start="689:46" pos:end="689:51">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="693:13" pos:end="693:43"><expr pos:start="693:13" pos:end="693:42"><name pos:start="693:13" pos:end="693:16">tmp3</name> <operator pos:start="693:18" pos:end="693:18">=</operator> <call pos:start="693:20" pos:end="693:42"><name pos:start="693:20" pos:end="693:32">tcg_const_i32</name><argument_list pos:start="693:33" pos:end="693:42">(<argument pos:start="693:34" pos:end="693:41"><expr pos:start="693:34" pos:end="693:41"><literal type="number" pos:start="693:34" pos:end="693:34">1</literal> <operator pos:start="693:36" pos:end="693:37">&lt;&lt;</operator> <name pos:start="693:39" pos:end="693:41">op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="695:13" pos:end="703:13"><if pos:start="695:13" pos:end="699:13">if <condition pos:start="695:16" pos:end="695:24">(<expr pos:start="695:17" pos:end="695:23"><name pos:start="695:17" pos:end="695:17">c</name> <operator pos:start="695:19" pos:end="695:19">&amp;</operator> <literal type="number" pos:start="695:21" pos:end="695:23">0x2</literal></expr>)</condition> <block pos:start="695:26" pos:end="699:13">{<block_content pos:start="697:17" pos:end="697:56">

                <expr_stmt pos:start="697:17" pos:end="697:56"><expr pos:start="697:17" pos:end="697:55"><call pos:start="697:17" pos:end="697:55"><name pos:start="697:17" pos:end="697:33">gen_helper_crc32c</name><argument_list pos:start="697:34" pos:end="697:55">(<argument pos:start="697:35" pos:end="697:37"><expr pos:start="697:35" pos:end="697:37"><name pos:start="697:35" pos:end="697:37">tmp</name></expr></argument>, <argument pos:start="697:40" pos:end="697:42"><expr pos:start="697:40" pos:end="697:42"><name pos:start="697:40" pos:end="697:42">tmp</name></expr></argument>, <argument pos:start="697:45" pos:end="697:48"><expr pos:start="697:45" pos:end="697:48"><name pos:start="697:45" pos:end="697:48">tmp2</name></expr></argument>, <argument pos:start="697:51" pos:end="697:54"><expr pos:start="697:51" pos:end="697:54"><name pos:start="697:51" pos:end="697:54">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="699:15" pos:end="703:13">else <block pos:start="699:20" pos:end="703:13">{<block_content pos:start="701:17" pos:end="701:55">

                <expr_stmt pos:start="701:17" pos:end="701:55"><expr pos:start="701:17" pos:end="701:54"><call pos:start="701:17" pos:end="701:54"><name pos:start="701:17" pos:end="701:32">gen_helper_crc32</name><argument_list pos:start="701:33" pos:end="701:54">(<argument pos:start="701:34" pos:end="701:36"><expr pos:start="701:34" pos:end="701:36"><name pos:start="701:34" pos:end="701:36">tmp</name></expr></argument>, <argument pos:start="701:39" pos:end="701:41"><expr pos:start="701:39" pos:end="701:41"><name pos:start="701:39" pos:end="701:41">tmp</name></expr></argument>, <argument pos:start="701:44" pos:end="701:47"><expr pos:start="701:44" pos:end="701:47"><name pos:start="701:44" pos:end="701:47">tmp2</name></expr></argument>, <argument pos:start="701:50" pos:end="701:53"><expr pos:start="701:50" pos:end="701:53"><name pos:start="701:50" pos:end="701:53">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="705:13" pos:end="705:36"><expr pos:start="705:13" pos:end="705:35"><call pos:start="705:13" pos:end="705:35"><name pos:start="705:13" pos:end="705:29">tcg_temp_free_i32</name><argument_list pos:start="705:30" pos:end="705:35">(<argument pos:start="705:31" pos:end="705:34"><expr pos:start="705:31" pos:end="705:34"><name pos:start="705:31" pos:end="705:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="707:13" pos:end="707:36"><expr pos:start="707:13" pos:end="707:35"><call pos:start="707:13" pos:end="707:35"><name pos:start="707:13" pos:end="707:29">tcg_temp_free_i32</name><argument_list pos:start="707:30" pos:end="707:35">(<argument pos:start="707:31" pos:end="707:34"><expr pos:start="707:31" pos:end="707:34"><name pos:start="707:31" pos:end="707:34">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="709:13" pos:end="709:34"><expr pos:start="709:13" pos:end="709:33"><call pos:start="709:13" pos:end="709:33"><name pos:start="709:13" pos:end="709:21">store_reg</name><argument_list pos:start="709:22" pos:end="709:33">(<argument pos:start="709:23" pos:end="709:23"><expr pos:start="709:23" pos:end="709:23"><name pos:start="709:23" pos:end="709:23">s</name></expr></argument>, <argument pos:start="709:26" pos:end="709:27"><expr pos:start="709:26" pos:end="709:27"><name pos:start="709:26" pos:end="709:27">rd</name></expr></argument>, <argument pos:start="709:30" pos:end="709:32"><expr pos:start="709:30" pos:end="709:32"><name pos:start="709:30" pos:end="709:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="711:13" pos:end="711:18">break;</break>

        </block_content>}</block>

        <case pos:start="715:9" pos:end="715:17">case <expr pos:start="715:14" pos:end="715:16"><literal type="number" pos:start="715:14" pos:end="715:16">0x5</literal></expr>:</case> <comment type="block" pos:start="715:19" pos:end="715:47">/* saturating add/subtract */</comment>

            <expr_stmt pos:start="717:13" pos:end="717:22"><expr pos:start="717:13" pos:end="717:21"><call pos:start="717:13" pos:end="717:21"><name pos:start="717:13" pos:end="717:16">ARCH</name><argument_list pos:start="717:17" pos:end="717:21">(<argument pos:start="717:18" pos:end="717:20"><expr pos:start="717:18" pos:end="717:20"><literal type="number" pos:start="717:18" pos:end="717:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="719:13" pos:end="719:36"><expr pos:start="719:13" pos:end="719:35"><name pos:start="719:13" pos:end="719:14">rd</name> <operator pos:start="719:16" pos:end="719:16">=</operator> <operator pos:start="719:18" pos:end="719:18">(</operator><name pos:start="719:19" pos:end="719:22">insn</name> <operator pos:start="719:24" pos:end="719:25">&gt;&gt;</operator> <literal type="number" pos:start="719:27" pos:end="719:28">12</literal><operator pos:start="719:29" pos:end="719:29">)</operator> <operator pos:start="719:31" pos:end="719:31">&amp;</operator> <literal type="number" pos:start="719:33" pos:end="719:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="721:13" pos:end="721:36"><expr pos:start="721:13" pos:end="721:35"><name pos:start="721:13" pos:end="721:14">rn</name> <operator pos:start="721:16" pos:end="721:16">=</operator> <operator pos:start="721:18" pos:end="721:18">(</operator><name pos:start="721:19" pos:end="721:22">insn</name> <operator pos:start="721:24" pos:end="721:25">&gt;&gt;</operator> <literal type="number" pos:start="721:27" pos:end="721:28">16</literal><operator pos:start="721:29" pos:end="721:29">)</operator> <operator pos:start="721:31" pos:end="721:31">&amp;</operator> <literal type="number" pos:start="721:33" pos:end="721:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="723:13" pos:end="723:34"><expr pos:start="723:13" pos:end="723:33"><name pos:start="723:13" pos:end="723:15">tmp</name> <operator pos:start="723:17" pos:end="723:17">=</operator> <call pos:start="723:19" pos:end="723:33"><name pos:start="723:19" pos:end="723:26">load_reg</name><argument_list pos:start="723:27" pos:end="723:33">(<argument pos:start="723:28" pos:end="723:28"><expr pos:start="723:28" pos:end="723:28"><name pos:start="723:28" pos:end="723:28">s</name></expr></argument>, <argument pos:start="723:31" pos:end="723:32"><expr pos:start="723:31" pos:end="723:32"><name pos:start="723:31" pos:end="723:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="725:13" pos:end="725:35"><expr pos:start="725:13" pos:end="725:34"><name pos:start="725:13" pos:end="725:16">tmp2</name> <operator pos:start="725:18" pos:end="725:18">=</operator> <call pos:start="725:20" pos:end="725:34"><name pos:start="725:20" pos:end="725:27">load_reg</name><argument_list pos:start="725:28" pos:end="725:34">(<argument pos:start="725:29" pos:end="725:29"><expr pos:start="725:29" pos:end="725:29"><name pos:start="725:29" pos:end="725:29">s</name></expr></argument>, <argument pos:start="725:32" pos:end="725:33"><expr pos:start="725:32" pos:end="725:33"><name pos:start="725:32" pos:end="725:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="727:13" pos:end="729:64"><if pos:start="727:13" pos:end="729:64">if <condition pos:start="727:16" pos:end="727:24">(<expr pos:start="727:17" pos:end="727:23"><name pos:start="727:17" pos:end="727:19">op1</name> <operator pos:start="727:21" pos:end="727:21">&amp;</operator> <literal type="number" pos:start="727:23" pos:end="727:23">2</literal></expr>)</condition><block type="pseudo" pos:start="729:17" pos:end="729:64"><block_content pos:start="729:17" pos:end="729:64">

                <expr_stmt pos:start="729:17" pos:end="729:64"><expr pos:start="729:17" pos:end="729:63"><call pos:start="729:17" pos:end="729:63"><name pos:start="729:17" pos:end="729:42">gen_helper_double_saturate</name><argument_list pos:start="729:43" pos:end="729:63">(<argument pos:start="729:44" pos:end="729:47"><expr pos:start="729:44" pos:end="729:47"><name pos:start="729:44" pos:end="729:47">tmp2</name></expr></argument>, <argument pos:start="729:50" pos:end="729:56"><expr pos:start="729:50" pos:end="729:56"><name pos:start="729:50" pos:end="729:56">cpu_env</name></expr></argument>, <argument pos:start="729:59" pos:end="729:62"><expr pos:start="729:59" pos:end="729:62"><name pos:start="729:59" pos:end="729:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="731:13" pos:end="737:65"><if pos:start="731:13" pos:end="733:65">if <condition pos:start="731:16" pos:end="731:24">(<expr pos:start="731:17" pos:end="731:23"><name pos:start="731:17" pos:end="731:19">op1</name> <operator pos:start="731:21" pos:end="731:21">&amp;</operator> <literal type="number" pos:start="731:23" pos:end="731:23">1</literal></expr>)</condition><block type="pseudo" pos:start="733:17" pos:end="733:65"><block_content pos:start="733:17" pos:end="733:65">

                <expr_stmt pos:start="733:17" pos:end="733:65"><expr pos:start="733:17" pos:end="733:64"><call pos:start="733:17" pos:end="733:64"><name pos:start="733:17" pos:end="733:39">gen_helper_sub_saturate</name><argument_list pos:start="733:40" pos:end="733:64">(<argument pos:start="733:41" pos:end="733:43"><expr pos:start="733:41" pos:end="733:43"><name pos:start="733:41" pos:end="733:43">tmp</name></expr></argument>, <argument pos:start="733:46" pos:end="733:52"><expr pos:start="733:46" pos:end="733:52"><name pos:start="733:46" pos:end="733:52">cpu_env</name></expr></argument>, <argument pos:start="733:55" pos:end="733:57"><expr pos:start="733:55" pos:end="733:57"><name pos:start="733:55" pos:end="733:57">tmp</name></expr></argument>, <argument pos:start="733:60" pos:end="733:63"><expr pos:start="733:60" pos:end="733:63"><name pos:start="733:60" pos:end="733:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="735:13" pos:end="737:65">else<block type="pseudo" pos:start="737:17" pos:end="737:65"><block_content pos:start="737:17" pos:end="737:65">

                <expr_stmt pos:start="737:17" pos:end="737:65"><expr pos:start="737:17" pos:end="737:64"><call pos:start="737:17" pos:end="737:64"><name pos:start="737:17" pos:end="737:39">gen_helper_add_saturate</name><argument_list pos:start="737:40" pos:end="737:64">(<argument pos:start="737:41" pos:end="737:43"><expr pos:start="737:41" pos:end="737:43"><name pos:start="737:41" pos:end="737:43">tmp</name></expr></argument>, <argument pos:start="737:46" pos:end="737:52"><expr pos:start="737:46" pos:end="737:52"><name pos:start="737:46" pos:end="737:52">cpu_env</name></expr></argument>, <argument pos:start="737:55" pos:end="737:57"><expr pos:start="737:55" pos:end="737:57"><name pos:start="737:55" pos:end="737:57">tmp</name></expr></argument>, <argument pos:start="737:60" pos:end="737:63"><expr pos:start="737:60" pos:end="737:63"><name pos:start="737:60" pos:end="737:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="739:13" pos:end="739:36"><expr pos:start="739:13" pos:end="739:35"><call pos:start="739:13" pos:end="739:35"><name pos:start="739:13" pos:end="739:29">tcg_temp_free_i32</name><argument_list pos:start="739:30" pos:end="739:35">(<argument pos:start="739:31" pos:end="739:34"><expr pos:start="739:31" pos:end="739:34"><name pos:start="739:31" pos:end="739:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="741:13" pos:end="741:34"><expr pos:start="741:13" pos:end="741:33"><call pos:start="741:13" pos:end="741:33"><name pos:start="741:13" pos:end="741:21">store_reg</name><argument_list pos:start="741:22" pos:end="741:33">(<argument pos:start="741:23" pos:end="741:23"><expr pos:start="741:23" pos:end="741:23"><name pos:start="741:23" pos:end="741:23">s</name></expr></argument>, <argument pos:start="741:26" pos:end="741:27"><expr pos:start="741:26" pos:end="741:27"><name pos:start="741:26" pos:end="741:27">rd</name></expr></argument>, <argument pos:start="741:30" pos:end="741:32"><expr pos:start="741:30" pos:end="741:32"><name pos:start="741:30" pos:end="741:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="743:13" pos:end="743:18">break;</break>

        <case pos:start="745:9" pos:end="745:15">case <expr pos:start="745:14" pos:end="745:14"><literal type="number" pos:start="745:14" pos:end="745:14">7</literal></expr>:</case>

        <block pos:start="747:9" pos:end="807:9">{<block_content pos:start="749:13" pos:end="805:18">

            <decl_stmt pos:start="749:13" pos:end="749:78"><decl pos:start="749:13" pos:end="749:77"><type pos:start="749:13" pos:end="749:15"><name pos:start="749:13" pos:end="749:15">int</name></type> <name pos:start="749:17" pos:end="749:21">imm16</name> <init pos:start="749:23" pos:end="749:77">= <expr pos:start="749:25" pos:end="749:77"><call pos:start="749:25" pos:end="749:45"><name pos:start="749:25" pos:end="749:33">extract32</name><argument_list pos:start="749:34" pos:end="749:45">(<argument pos:start="749:35" pos:end="749:38"><expr pos:start="749:35" pos:end="749:38"><name pos:start="749:35" pos:end="749:38">insn</name></expr></argument>, <argument pos:start="749:41" pos:end="749:41"><expr pos:start="749:41" pos:end="749:41"><literal type="number" pos:start="749:41" pos:end="749:41">0</literal></expr></argument>, <argument pos:start="749:44" pos:end="749:44"><expr pos:start="749:44" pos:end="749:44"><literal type="number" pos:start="749:44" pos:end="749:44">4</literal></expr></argument>)</argument_list></call> <operator pos:start="749:47" pos:end="749:47">|</operator> <operator pos:start="749:49" pos:end="749:49">(</operator><call pos:start="749:50" pos:end="749:71"><name pos:start="749:50" pos:end="749:58">extract32</name><argument_list pos:start="749:59" pos:end="749:71">(<argument pos:start="749:60" pos:end="749:63"><expr pos:start="749:60" pos:end="749:63"><name pos:start="749:60" pos:end="749:63">insn</name></expr></argument>, <argument pos:start="749:66" pos:end="749:66"><expr pos:start="749:66" pos:end="749:66"><literal type="number" pos:start="749:66" pos:end="749:66">8</literal></expr></argument>, <argument pos:start="749:69" pos:end="749:70"><expr pos:start="749:69" pos:end="749:70"><literal type="number" pos:start="749:69" pos:end="749:70">12</literal></expr></argument>)</argument_list></call> <operator pos:start="749:73" pos:end="749:74">&lt;&lt;</operator> <literal type="number" pos:start="749:76" pos:end="749:76">4</literal><operator pos:start="749:77" pos:end="749:77">)</operator></expr></init></decl>;</decl_stmt>

            <switch pos:start="751:13" pos:end="803:13">switch <condition pos:start="751:20" pos:end="751:24">(<expr pos:start="751:21" pos:end="751:23"><name pos:start="751:21" pos:end="751:23">op1</name></expr>)</condition> <block pos:start="751:26" pos:end="803:13">{<block_content pos:start="753:13" pos:end="801:32">

            <case pos:start="753:13" pos:end="753:19">case <expr pos:start="753:18" pos:end="753:18"><literal type="number" pos:start="753:18" pos:end="753:18">1</literal></expr>:</case>

                <comment type="block" pos:start="755:17" pos:end="755:26">/* bkpt */</comment>

                <expr_stmt pos:start="757:17" pos:end="757:24"><expr pos:start="757:17" pos:end="757:23"><call pos:start="757:17" pos:end="757:23"><name pos:start="757:17" pos:end="757:20">ARCH</name><argument_list pos:start="757:21" pos:end="757:23">(<argument pos:start="757:22" pos:end="757:22"><expr pos:start="757:22" pos:end="757:22"><literal type="number" pos:start="757:22" pos:end="757:22">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="759:17" pos:end="763:60"><expr pos:start="759:17" pos:end="763:59"><call pos:start="759:17" pos:end="763:59"><name pos:start="759:17" pos:end="759:34">gen_exception_insn</name><argument_list pos:start="759:35" pos:end="763:59">(<argument pos:start="759:36" pos:end="759:36"><expr pos:start="759:36" pos:end="759:36"><name pos:start="759:36" pos:end="759:36">s</name></expr></argument>, <argument pos:start="759:39" pos:end="759:39"><expr pos:start="759:39" pos:end="759:39"><literal type="number" pos:start="759:39" pos:end="759:39">4</literal></expr></argument>, <argument pos:start="759:42" pos:end="759:50"><expr pos:start="759:42" pos:end="759:50"><name pos:start="759:42" pos:end="759:50">EXCP_BKPT</name></expr></argument>,

                                   <argument pos:start="761:36" pos:end="761:62"><expr pos:start="761:36" pos:end="761:62"><call pos:start="761:36" pos:end="761:62"><name pos:start="761:36" pos:end="761:48">syn_aa32_bkpt</name><argument_list pos:start="761:49" pos:end="761:62">(<argument pos:start="761:50" pos:end="761:54"><expr pos:start="761:50" pos:end="761:54"><name pos:start="761:50" pos:end="761:54">imm16</name></expr></argument>, <argument pos:start="761:57" pos:end="761:61"><expr pos:start="761:57" pos:end="761:61"><name pos:start="761:57" pos:end="761:61">false</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="763:36" pos:end="763:58"><expr pos:start="763:36" pos:end="763:58"><call pos:start="763:36" pos:end="763:58"><name pos:start="763:36" pos:end="763:55">default_exception_el</name><argument_list pos:start="763:56" pos:end="763:58">(<argument pos:start="763:57" pos:end="763:57"><expr pos:start="763:57" pos:end="763:57"><name pos:start="763:57" pos:end="763:57">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="765:17" pos:end="765:22">break;</break>

            <case pos:start="767:13" pos:end="767:19">case <expr pos:start="767:18" pos:end="767:18"><literal type="number" pos:start="767:18" pos:end="767:18">2</literal></expr>:</case>

                <comment type="block" pos:start="769:17" pos:end="769:42">/* Hypervisor call (v7) */</comment>

                <expr_stmt pos:start="771:17" pos:end="771:24"><expr pos:start="771:17" pos:end="771:23"><call pos:start="771:17" pos:end="771:23"><name pos:start="771:17" pos:end="771:20">ARCH</name><argument_list pos:start="771:21" pos:end="771:23">(<argument pos:start="771:22" pos:end="771:22"><expr pos:start="771:22" pos:end="771:22"><literal type="number" pos:start="771:22" pos:end="771:22">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="773:17" pos:end="777:17"><if pos:start="773:17" pos:end="777:17">if <condition pos:start="773:20" pos:end="773:31">(<expr pos:start="773:21" pos:end="773:30"><call pos:start="773:21" pos:end="773:30"><name pos:start="773:21" pos:end="773:27">IS_USER</name><argument_list pos:start="773:28" pos:end="773:30">(<argument pos:start="773:29" pos:end="773:29"><expr pos:start="773:29" pos:end="773:29"><name pos:start="773:29" pos:end="773:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="773:33" pos:end="777:17">{<block_content pos:start="775:21" pos:end="775:36">

                    <goto pos:start="775:21" pos:end="775:36">goto <name pos:start="775:26" pos:end="775:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="779:17" pos:end="779:34"><expr pos:start="779:17" pos:end="779:33"><call pos:start="779:17" pos:end="779:33"><name pos:start="779:17" pos:end="779:23">gen_hvc</name><argument_list pos:start="779:24" pos:end="779:33">(<argument pos:start="779:25" pos:end="779:25"><expr pos:start="779:25" pos:end="779:25"><name pos:start="779:25" pos:end="779:25">s</name></expr></argument>, <argument pos:start="779:28" pos:end="779:32"><expr pos:start="779:28" pos:end="779:32"><name pos:start="779:28" pos:end="779:32">imm16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="781:17" pos:end="781:22">break;</break>

            <case pos:start="783:13" pos:end="783:19">case <expr pos:start="783:18" pos:end="783:18"><literal type="number" pos:start="783:18" pos:end="783:18">3</literal></expr>:</case>

                <comment type="block" pos:start="785:17" pos:end="785:47">/* Secure monitor call (v6+) */</comment>

                <expr_stmt pos:start="787:17" pos:end="787:25"><expr pos:start="787:17" pos:end="787:24"><call pos:start="787:17" pos:end="787:24"><name pos:start="787:17" pos:end="787:20">ARCH</name><argument_list pos:start="787:21" pos:end="787:24">(<argument pos:start="787:22" pos:end="787:23"><expr pos:start="787:22" pos:end="787:23"><literal type="number" pos:start="787:22" pos:end="787:23">6K</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="789:17" pos:end="793:17"><if pos:start="789:17" pos:end="793:17">if <condition pos:start="789:20" pos:end="789:31">(<expr pos:start="789:21" pos:end="789:30"><call pos:start="789:21" pos:end="789:30"><name pos:start="789:21" pos:end="789:27">IS_USER</name><argument_list pos:start="789:28" pos:end="789:30">(<argument pos:start="789:29" pos:end="789:29"><expr pos:start="789:29" pos:end="789:29"><name pos:start="789:29" pos:end="789:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="789:33" pos:end="793:17">{<block_content pos:start="791:21" pos:end="791:36">

                    <goto pos:start="791:21" pos:end="791:36">goto <name pos:start="791:26" pos:end="791:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="795:17" pos:end="795:27"><expr pos:start="795:17" pos:end="795:26"><call pos:start="795:17" pos:end="795:26"><name pos:start="795:17" pos:end="795:23">gen_smc</name><argument_list pos:start="795:24" pos:end="795:26">(<argument pos:start="795:25" pos:end="795:25"><expr pos:start="795:25" pos:end="795:25"><name pos:start="795:25" pos:end="795:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="797:17" pos:end="797:22">break;</break>

            <default pos:start="799:13" pos:end="799:20">default:</default>

                <goto pos:start="801:17" pos:end="801:32">goto <name pos:start="801:22" pos:end="801:31">illegal_op</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="805:13" pos:end="805:18">break;</break>

        </block_content>}</block>

        <case pos:start="809:9" pos:end="809:17">case <expr pos:start="809:14" pos:end="809:16"><literal type="number" pos:start="809:14" pos:end="809:16">0x8</literal></expr>:</case> <comment type="block" pos:start="809:19" pos:end="809:39">/* signed multiply */</comment>

        <case pos:start="811:9" pos:end="811:17">case <expr pos:start="811:14" pos:end="811:16"><literal type="number" pos:start="811:14" pos:end="811:16">0xa</literal></expr>:</case>

        <case pos:start="813:9" pos:end="813:17">case <expr pos:start="813:14" pos:end="813:16"><literal type="number" pos:start="813:14" pos:end="813:16">0xc</literal></expr>:</case>

        <case pos:start="815:9" pos:end="815:17">case <expr pos:start="815:14" pos:end="815:16"><literal type="number" pos:start="815:14" pos:end="815:16">0xe</literal></expr>:</case>

            <expr_stmt pos:start="817:13" pos:end="817:22"><expr pos:start="817:13" pos:end="817:21"><call pos:start="817:13" pos:end="817:21"><name pos:start="817:13" pos:end="817:16">ARCH</name><argument_list pos:start="817:17" pos:end="817:21">(<argument pos:start="817:18" pos:end="817:20"><expr pos:start="817:18" pos:end="817:20"><literal type="number" pos:start="817:18" pos:end="817:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="819:13" pos:end="819:35"><expr pos:start="819:13" pos:end="819:34"><name pos:start="819:13" pos:end="819:14">rs</name> <operator pos:start="819:16" pos:end="819:16">=</operator> <operator pos:start="819:18" pos:end="819:18">(</operator><name pos:start="819:19" pos:end="819:22">insn</name> <operator pos:start="819:24" pos:end="819:25">&gt;&gt;</operator> <literal type="number" pos:start="819:27" pos:end="819:27">8</literal><operator pos:start="819:28" pos:end="819:28">)</operator> <operator pos:start="819:30" pos:end="819:30">&amp;</operator> <literal type="number" pos:start="819:32" pos:end="819:34">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="821:13" pos:end="821:36"><expr pos:start="821:13" pos:end="821:35"><name pos:start="821:13" pos:end="821:14">rn</name> <operator pos:start="821:16" pos:end="821:16">=</operator> <operator pos:start="821:18" pos:end="821:18">(</operator><name pos:start="821:19" pos:end="821:22">insn</name> <operator pos:start="821:24" pos:end="821:25">&gt;&gt;</operator> <literal type="number" pos:start="821:27" pos:end="821:28">12</literal><operator pos:start="821:29" pos:end="821:29">)</operator> <operator pos:start="821:31" pos:end="821:31">&amp;</operator> <literal type="number" pos:start="821:33" pos:end="821:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="823:13" pos:end="823:36"><expr pos:start="823:13" pos:end="823:35"><name pos:start="823:13" pos:end="823:14">rd</name> <operator pos:start="823:16" pos:end="823:16">=</operator> <operator pos:start="823:18" pos:end="823:18">(</operator><name pos:start="823:19" pos:end="823:22">insn</name> <operator pos:start="823:24" pos:end="823:25">&gt;&gt;</operator> <literal type="number" pos:start="823:27" pos:end="823:28">16</literal><operator pos:start="823:29" pos:end="823:29">)</operator> <operator pos:start="823:31" pos:end="823:31">&amp;</operator> <literal type="number" pos:start="823:33" pos:end="823:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="825:13" pos:end="905:13"><if pos:start="825:13" pos:end="863:13">if <condition pos:start="825:16" pos:end="825:25">(<expr pos:start="825:17" pos:end="825:24"><name pos:start="825:17" pos:end="825:19">op1</name> <operator pos:start="825:21" pos:end="825:22">==</operator> <literal type="number" pos:start="825:24" pos:end="825:24">1</literal></expr>)</condition> <block pos:start="825:27" pos:end="863:13">{<block_content pos:start="829:17" pos:end="861:38">

                <comment type="block" pos:start="827:17" pos:end="827:37">/* (32 * 16) &gt;&gt; 16 */</comment>

                <expr_stmt pos:start="829:17" pos:end="829:38"><expr pos:start="829:17" pos:end="829:37"><name pos:start="829:17" pos:end="829:19">tmp</name> <operator pos:start="829:21" pos:end="829:21">=</operator> <call pos:start="829:23" pos:end="829:37"><name pos:start="829:23" pos:end="829:30">load_reg</name><argument_list pos:start="829:31" pos:end="829:37">(<argument pos:start="829:32" pos:end="829:32"><expr pos:start="829:32" pos:end="829:32"><name pos:start="829:32" pos:end="829:32">s</name></expr></argument>, <argument pos:start="829:35" pos:end="829:36"><expr pos:start="829:35" pos:end="829:36"><name pos:start="829:35" pos:end="829:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="831:17" pos:end="831:39"><expr pos:start="831:17" pos:end="831:38"><name pos:start="831:17" pos:end="831:20">tmp2</name> <operator pos:start="831:22" pos:end="831:22">=</operator> <call pos:start="831:24" pos:end="831:38"><name pos:start="831:24" pos:end="831:31">load_reg</name><argument_list pos:start="831:32" pos:end="831:38">(<argument pos:start="831:33" pos:end="831:33"><expr pos:start="831:33" pos:end="831:33"><name pos:start="831:33" pos:end="831:33">s</name></expr></argument>, <argument pos:start="831:36" pos:end="831:37"><expr pos:start="831:36" pos:end="831:37"><name pos:start="831:36" pos:end="831:37">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="833:17" pos:end="839:35"><if pos:start="833:17" pos:end="835:53">if <condition pos:start="833:20" pos:end="833:27">(<expr pos:start="833:21" pos:end="833:26"><name pos:start="833:21" pos:end="833:22">sh</name> <operator pos:start="833:24" pos:end="833:24">&amp;</operator> <literal type="number" pos:start="833:26" pos:end="833:26">4</literal></expr>)</condition><block type="pseudo" pos:start="835:21" pos:end="835:53"><block_content pos:start="835:21" pos:end="835:53">

                    <expr_stmt pos:start="835:21" pos:end="835:53"><expr pos:start="835:21" pos:end="835:52"><call pos:start="835:21" pos:end="835:52"><name pos:start="835:21" pos:end="835:36">tcg_gen_sari_i32</name><argument_list pos:start="835:37" pos:end="835:52">(<argument pos:start="835:38" pos:end="835:41"><expr pos:start="835:38" pos:end="835:41"><name pos:start="835:38" pos:end="835:41">tmp2</name></expr></argument>, <argument pos:start="835:44" pos:end="835:47"><expr pos:start="835:44" pos:end="835:47"><name pos:start="835:44" pos:end="835:47">tmp2</name></expr></argument>, <argument pos:start="835:50" pos:end="835:51"><expr pos:start="835:50" pos:end="835:51"><literal type="number" pos:start="835:50" pos:end="835:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="837:17" pos:end="839:35">else<block type="pseudo" pos:start="839:21" pos:end="839:35"><block_content pos:start="839:21" pos:end="839:35">

                    <expr_stmt pos:start="839:21" pos:end="839:35"><expr pos:start="839:21" pos:end="839:34"><call pos:start="839:21" pos:end="839:34"><name pos:start="839:21" pos:end="839:28">gen_sxth</name><argument_list pos:start="839:29" pos:end="839:34">(<argument pos:start="839:30" pos:end="839:33"><expr pos:start="839:30" pos:end="839:33"><name pos:start="839:30" pos:end="839:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="841:17" pos:end="841:52"><expr pos:start="841:17" pos:end="841:51"><name pos:start="841:17" pos:end="841:21">tmp64</name> <operator pos:start="841:23" pos:end="841:23">=</operator> <call pos:start="841:25" pos:end="841:51"><name pos:start="841:25" pos:end="841:40">gen_muls_i64_i32</name><argument_list pos:start="841:41" pos:end="841:51">(<argument pos:start="841:42" pos:end="841:44"><expr pos:start="841:42" pos:end="841:44"><name pos:start="841:42" pos:end="841:44">tmp</name></expr></argument>, <argument pos:start="841:47" pos:end="841:50"><expr pos:start="841:47" pos:end="841:50"><name pos:start="841:47" pos:end="841:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="843:17" pos:end="843:51"><expr pos:start="843:17" pos:end="843:50"><call pos:start="843:17" pos:end="843:50"><name pos:start="843:17" pos:end="843:32">tcg_gen_shri_i64</name><argument_list pos:start="843:33" pos:end="843:50">(<argument pos:start="843:34" pos:end="843:38"><expr pos:start="843:34" pos:end="843:38"><name pos:start="843:34" pos:end="843:38">tmp64</name></expr></argument>, <argument pos:start="843:41" pos:end="843:45"><expr pos:start="843:41" pos:end="843:45"><name pos:start="843:41" pos:end="843:45">tmp64</name></expr></argument>, <argument pos:start="843:48" pos:end="843:49"><expr pos:start="843:48" pos:end="843:49"><literal type="number" pos:start="843:48" pos:end="843:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="845:17" pos:end="845:41"><expr pos:start="845:17" pos:end="845:40"><name pos:start="845:17" pos:end="845:19">tmp</name> <operator pos:start="845:21" pos:end="845:21">=</operator> <call pos:start="845:23" pos:end="845:40"><name pos:start="845:23" pos:end="845:38">tcg_temp_new_i32</name><argument_list pos:start="845:39" pos:end="845:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="847:17" pos:end="847:50"><expr pos:start="847:17" pos:end="847:49"><call pos:start="847:17" pos:end="847:49"><name pos:start="847:17" pos:end="847:37">tcg_gen_extrl_i64_i32</name><argument_list pos:start="847:38" pos:end="847:49">(<argument pos:start="847:39" pos:end="847:41"><expr pos:start="847:39" pos:end="847:41"><name pos:start="847:39" pos:end="847:41">tmp</name></expr></argument>, <argument pos:start="847:44" pos:end="847:48"><expr pos:start="847:44" pos:end="847:48"><name pos:start="847:44" pos:end="847:48">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="849:17" pos:end="849:41"><expr pos:start="849:17" pos:end="849:40"><call pos:start="849:17" pos:end="849:40"><name pos:start="849:17" pos:end="849:33">tcg_temp_free_i64</name><argument_list pos:start="849:34" pos:end="849:40">(<argument pos:start="849:35" pos:end="849:39"><expr pos:start="849:35" pos:end="849:39"><name pos:start="849:35" pos:end="849:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="851:17" pos:end="859:17"><if pos:start="851:17" pos:end="859:17">if <condition pos:start="851:20" pos:end="851:34">(<expr pos:start="851:21" pos:end="851:33"><operator pos:start="851:21" pos:end="851:21">(</operator><name pos:start="851:22" pos:end="851:23">sh</name> <operator pos:start="851:25" pos:end="851:25">&amp;</operator> <literal type="number" pos:start="851:27" pos:end="851:27">2</literal><operator pos:start="851:28" pos:end="851:28">)</operator> <operator pos:start="851:30" pos:end="851:31">==</operator> <literal type="number" pos:start="851:33" pos:end="851:33">0</literal></expr>)</condition> <block pos:start="851:36" pos:end="859:17">{<block_content pos:start="853:21" pos:end="857:44">

                    <expr_stmt pos:start="853:21" pos:end="853:43"><expr pos:start="853:21" pos:end="853:42"><name pos:start="853:21" pos:end="853:24">tmp2</name> <operator pos:start="853:26" pos:end="853:26">=</operator> <call pos:start="853:28" pos:end="853:42"><name pos:start="853:28" pos:end="853:35">load_reg</name><argument_list pos:start="853:36" pos:end="853:42">(<argument pos:start="853:37" pos:end="853:37"><expr pos:start="853:37" pos:end="853:37"><name pos:start="853:37" pos:end="853:37">s</name></expr></argument>, <argument pos:start="853:40" pos:end="853:41"><expr pos:start="853:40" pos:end="853:41"><name pos:start="853:40" pos:end="853:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="855:21" pos:end="855:65"><expr pos:start="855:21" pos:end="855:64"><call pos:start="855:21" pos:end="855:64"><name pos:start="855:21" pos:end="855:39">gen_helper_add_setq</name><argument_list pos:start="855:40" pos:end="855:64">(<argument pos:start="855:41" pos:end="855:43"><expr pos:start="855:41" pos:end="855:43"><name pos:start="855:41" pos:end="855:43">tmp</name></expr></argument>, <argument pos:start="855:46" pos:end="855:52"><expr pos:start="855:46" pos:end="855:52"><name pos:start="855:46" pos:end="855:52">cpu_env</name></expr></argument>, <argument pos:start="855:55" pos:end="855:57"><expr pos:start="855:55" pos:end="855:57"><name pos:start="855:55" pos:end="855:57">tmp</name></expr></argument>, <argument pos:start="855:60" pos:end="855:63"><expr pos:start="855:60" pos:end="855:63"><name pos:start="855:60" pos:end="855:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="857:21" pos:end="857:44"><expr pos:start="857:21" pos:end="857:43"><call pos:start="857:21" pos:end="857:43"><name pos:start="857:21" pos:end="857:37">tcg_temp_free_i32</name><argument_list pos:start="857:38" pos:end="857:43">(<argument pos:start="857:39" pos:end="857:42"><expr pos:start="857:39" pos:end="857:42"><name pos:start="857:39" pos:end="857:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="861:17" pos:end="861:38"><expr pos:start="861:17" pos:end="861:37"><call pos:start="861:17" pos:end="861:37"><name pos:start="861:17" pos:end="861:25">store_reg</name><argument_list pos:start="861:26" pos:end="861:37">(<argument pos:start="861:27" pos:end="861:27"><expr pos:start="861:27" pos:end="861:27"><name pos:start="861:27" pos:end="861:27">s</name></expr></argument>, <argument pos:start="861:30" pos:end="861:31"><expr pos:start="861:30" pos:end="861:31"><name pos:start="861:30" pos:end="861:31">rd</name></expr></argument>, <argument pos:start="861:34" pos:end="861:36"><expr pos:start="861:34" pos:end="861:36"><name pos:start="861:34" pos:end="861:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="863:15" pos:end="905:13">else <block pos:start="863:20" pos:end="905:13">{<block_content pos:start="867:17" pos:end="903:17">

                <comment type="block" pos:start="865:17" pos:end="865:29">/* 16 * 16 */</comment>

                <expr_stmt pos:start="867:17" pos:end="867:38"><expr pos:start="867:17" pos:end="867:37"><name pos:start="867:17" pos:end="867:19">tmp</name> <operator pos:start="867:21" pos:end="867:21">=</operator> <call pos:start="867:23" pos:end="867:37"><name pos:start="867:23" pos:end="867:30">load_reg</name><argument_list pos:start="867:31" pos:end="867:37">(<argument pos:start="867:32" pos:end="867:32"><expr pos:start="867:32" pos:end="867:32"><name pos:start="867:32" pos:end="867:32">s</name></expr></argument>, <argument pos:start="867:35" pos:end="867:36"><expr pos:start="867:35" pos:end="867:36"><name pos:start="867:35" pos:end="867:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="869:17" pos:end="869:39"><expr pos:start="869:17" pos:end="869:38"><name pos:start="869:17" pos:end="869:20">tmp2</name> <operator pos:start="869:22" pos:end="869:22">=</operator> <call pos:start="869:24" pos:end="869:38"><name pos:start="869:24" pos:end="869:31">load_reg</name><argument_list pos:start="869:32" pos:end="869:38">(<argument pos:start="869:33" pos:end="869:33"><expr pos:start="869:33" pos:end="869:33"><name pos:start="869:33" pos:end="869:33">s</name></expr></argument>, <argument pos:start="869:36" pos:end="869:37"><expr pos:start="869:36" pos:end="869:37"><name pos:start="869:36" pos:end="869:37">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="871:17" pos:end="871:53"><expr pos:start="871:17" pos:end="871:52"><call pos:start="871:17" pos:end="871:52"><name pos:start="871:17" pos:end="871:25">gen_mulxy</name><argument_list pos:start="871:26" pos:end="871:52">(<argument pos:start="871:27" pos:end="871:29"><expr pos:start="871:27" pos:end="871:29"><name pos:start="871:27" pos:end="871:29">tmp</name></expr></argument>, <argument pos:start="871:32" pos:end="871:35"><expr pos:start="871:32" pos:end="871:35"><name pos:start="871:32" pos:end="871:35">tmp2</name></expr></argument>, <argument pos:start="871:38" pos:end="871:43"><expr pos:start="871:38" pos:end="871:43"><name pos:start="871:38" pos:end="871:39">sh</name> <operator pos:start="871:41" pos:end="871:41">&amp;</operator> <literal type="number" pos:start="871:43" pos:end="871:43">2</literal></expr></argument>, <argument pos:start="871:46" pos:end="871:51"><expr pos:start="871:46" pos:end="871:51"><name pos:start="871:46" pos:end="871:47">sh</name> <operator pos:start="871:49" pos:end="871:49">&amp;</operator> <literal type="number" pos:start="871:51" pos:end="871:51">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="873:17" pos:end="873:40"><expr pos:start="873:17" pos:end="873:39"><call pos:start="873:17" pos:end="873:39"><name pos:start="873:17" pos:end="873:33">tcg_temp_free_i32</name><argument_list pos:start="873:34" pos:end="873:39">(<argument pos:start="873:35" pos:end="873:38"><expr pos:start="873:35" pos:end="873:38"><name pos:start="873:35" pos:end="873:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="875:17" pos:end="903:17"><if pos:start="875:17" pos:end="889:17">if <condition pos:start="875:20" pos:end="875:29">(<expr pos:start="875:21" pos:end="875:28"><name pos:start="875:21" pos:end="875:23">op1</name> <operator pos:start="875:25" pos:end="875:26">==</operator> <literal type="number" pos:start="875:28" pos:end="875:28">2</literal></expr>)</condition> <block pos:start="875:31" pos:end="889:17">{<block_content pos:start="877:21" pos:end="887:45">

                    <expr_stmt pos:start="877:21" pos:end="877:47"><expr pos:start="877:21" pos:end="877:46"><name pos:start="877:21" pos:end="877:25">tmp64</name> <operator pos:start="877:27" pos:end="877:27">=</operator> <call pos:start="877:29" pos:end="877:46"><name pos:start="877:29" pos:end="877:44">tcg_temp_new_i64</name><argument_list pos:start="877:45" pos:end="877:46">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="879:21" pos:end="879:52"><expr pos:start="879:21" pos:end="879:51"><call pos:start="879:21" pos:end="879:51"><name pos:start="879:21" pos:end="879:39">tcg_gen_ext_i32_i64</name><argument_list pos:start="879:40" pos:end="879:51">(<argument pos:start="879:41" pos:end="879:45"><expr pos:start="879:41" pos:end="879:45"><name pos:start="879:41" pos:end="879:45">tmp64</name></expr></argument>, <argument pos:start="879:48" pos:end="879:50"><expr pos:start="879:48" pos:end="879:50"><name pos:start="879:48" pos:end="879:50">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="881:21" pos:end="881:43"><expr pos:start="881:21" pos:end="881:42"><call pos:start="881:21" pos:end="881:42"><name pos:start="881:21" pos:end="881:37">tcg_temp_free_i32</name><argument_list pos:start="881:38" pos:end="881:42">(<argument pos:start="881:39" pos:end="881:41"><expr pos:start="881:39" pos:end="881:41"><name pos:start="881:39" pos:end="881:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="883:21" pos:end="883:47"><expr pos:start="883:21" pos:end="883:46"><call pos:start="883:21" pos:end="883:46"><name pos:start="883:21" pos:end="883:28">gen_addq</name><argument_list pos:start="883:29" pos:end="883:46">(<argument pos:start="883:30" pos:end="883:30"><expr pos:start="883:30" pos:end="883:30"><name pos:start="883:30" pos:end="883:30">s</name></expr></argument>, <argument pos:start="883:33" pos:end="883:37"><expr pos:start="883:33" pos:end="883:37"><name pos:start="883:33" pos:end="883:37">tmp64</name></expr></argument>, <argument pos:start="883:40" pos:end="883:41"><expr pos:start="883:40" pos:end="883:41"><name pos:start="883:40" pos:end="883:41">rn</name></expr></argument>, <argument pos:start="883:44" pos:end="883:45"><expr pos:start="883:44" pos:end="883:45"><name pos:start="883:44" pos:end="883:45">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="885:21" pos:end="885:53"><expr pos:start="885:21" pos:end="885:52"><call pos:start="885:21" pos:end="885:52"><name pos:start="885:21" pos:end="885:34">gen_storeq_reg</name><argument_list pos:start="885:35" pos:end="885:52">(<argument pos:start="885:36" pos:end="885:36"><expr pos:start="885:36" pos:end="885:36"><name pos:start="885:36" pos:end="885:36">s</name></expr></argument>, <argument pos:start="885:39" pos:end="885:40"><expr pos:start="885:39" pos:end="885:40"><name pos:start="885:39" pos:end="885:40">rn</name></expr></argument>, <argument pos:start="885:43" pos:end="885:44"><expr pos:start="885:43" pos:end="885:44"><name pos:start="885:43" pos:end="885:44">rd</name></expr></argument>, <argument pos:start="885:47" pos:end="885:51"><expr pos:start="885:47" pos:end="885:51"><name pos:start="885:47" pos:end="885:51">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="887:21" pos:end="887:45"><expr pos:start="887:21" pos:end="887:44"><call pos:start="887:21" pos:end="887:44"><name pos:start="887:21" pos:end="887:37">tcg_temp_free_i64</name><argument_list pos:start="887:38" pos:end="887:44">(<argument pos:start="887:39" pos:end="887:43"><expr pos:start="887:39" pos:end="887:43"><name pos:start="887:39" pos:end="887:43">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="889:19" pos:end="903:17">else <block pos:start="889:24" pos:end="903:17">{<block_content pos:start="891:21" pos:end="901:42">

                    <if_stmt pos:start="891:21" pos:end="899:21"><if pos:start="891:21" pos:end="899:21">if <condition pos:start="891:24" pos:end="891:33">(<expr pos:start="891:25" pos:end="891:32"><name pos:start="891:25" pos:end="891:27">op1</name> <operator pos:start="891:29" pos:end="891:30">==</operator> <literal type="number" pos:start="891:32" pos:end="891:32">0</literal></expr>)</condition> <block pos:start="891:35" pos:end="899:21">{<block_content pos:start="893:25" pos:end="897:48">

                        <expr_stmt pos:start="893:25" pos:end="893:47"><expr pos:start="893:25" pos:end="893:46"><name pos:start="893:25" pos:end="893:28">tmp2</name> <operator pos:start="893:30" pos:end="893:30">=</operator> <call pos:start="893:32" pos:end="893:46"><name pos:start="893:32" pos:end="893:39">load_reg</name><argument_list pos:start="893:40" pos:end="893:46">(<argument pos:start="893:41" pos:end="893:41"><expr pos:start="893:41" pos:end="893:41"><name pos:start="893:41" pos:end="893:41">s</name></expr></argument>, <argument pos:start="893:44" pos:end="893:45"><expr pos:start="893:44" pos:end="893:45"><name pos:start="893:44" pos:end="893:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="895:25" pos:end="895:69"><expr pos:start="895:25" pos:end="895:68"><call pos:start="895:25" pos:end="895:68"><name pos:start="895:25" pos:end="895:43">gen_helper_add_setq</name><argument_list pos:start="895:44" pos:end="895:68">(<argument pos:start="895:45" pos:end="895:47"><expr pos:start="895:45" pos:end="895:47"><name pos:start="895:45" pos:end="895:47">tmp</name></expr></argument>, <argument pos:start="895:50" pos:end="895:56"><expr pos:start="895:50" pos:end="895:56"><name pos:start="895:50" pos:end="895:56">cpu_env</name></expr></argument>, <argument pos:start="895:59" pos:end="895:61"><expr pos:start="895:59" pos:end="895:61"><name pos:start="895:59" pos:end="895:61">tmp</name></expr></argument>, <argument pos:start="895:64" pos:end="895:67"><expr pos:start="895:64" pos:end="895:67"><name pos:start="895:64" pos:end="895:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="897:25" pos:end="897:48"><expr pos:start="897:25" pos:end="897:47"><call pos:start="897:25" pos:end="897:47"><name pos:start="897:25" pos:end="897:41">tcg_temp_free_i32</name><argument_list pos:start="897:42" pos:end="897:47">(<argument pos:start="897:43" pos:end="897:46"><expr pos:start="897:43" pos:end="897:46"><name pos:start="897:43" pos:end="897:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="901:21" pos:end="901:42"><expr pos:start="901:21" pos:end="901:41"><call pos:start="901:21" pos:end="901:41"><name pos:start="901:21" pos:end="901:29">store_reg</name><argument_list pos:start="901:30" pos:end="901:41">(<argument pos:start="901:31" pos:end="901:31"><expr pos:start="901:31" pos:end="901:31"><name pos:start="901:31" pos:end="901:31">s</name></expr></argument>, <argument pos:start="901:34" pos:end="901:35"><expr pos:start="901:34" pos:end="901:35"><name pos:start="901:34" pos:end="901:35">rd</name></expr></argument>, <argument pos:start="901:38" pos:end="901:40"><expr pos:start="901:38" pos:end="901:40"><name pos:start="901:38" pos:end="901:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="907:13" pos:end="907:18">break;</break>

        <default pos:start="909:9" pos:end="909:16">default:</default>

            <goto pos:start="911:13" pos:end="911:28">goto <name pos:start="911:18" pos:end="911:27">illegal_op</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="915:7" pos:end="1277:5">else if <condition pos:start="915:15" pos:end="919:50">(<expr pos:start="915:16" pos:end="919:49"><operator pos:start="915:16" pos:end="915:16">(</operator><operator pos:start="915:17" pos:end="915:17">(</operator><name pos:start="915:18" pos:end="915:21">insn</name> <operator pos:start="915:23" pos:end="915:23">&amp;</operator> <literal type="number" pos:start="915:25" pos:end="915:34">0x0e000000</literal><operator pos:start="915:35" pos:end="915:35">)</operator> <operator pos:start="915:37" pos:end="915:38">==</operator> <literal type="number" pos:start="915:40" pos:end="915:40">0</literal> <operator pos:start="915:42" pos:end="915:43">&amp;&amp;</operator>

                <operator pos:start="917:17" pos:end="917:17">(</operator><name pos:start="917:18" pos:end="917:21">insn</name> <operator pos:start="917:23" pos:end="917:23">&amp;</operator> <literal type="number" pos:start="917:25" pos:end="917:34">0x00000090</literal><operator pos:start="917:35" pos:end="917:35">)</operator> <operator pos:start="917:37" pos:end="917:38">!=</operator> <literal type="number" pos:start="917:40" pos:end="917:43">0x90</literal><operator pos:start="917:44" pos:end="917:44">)</operator> <operator pos:start="917:46" pos:end="917:47">||</operator>

               <operator pos:start="919:16" pos:end="919:16">(</operator><operator pos:start="919:17" pos:end="919:17">(</operator><name pos:start="919:18" pos:end="919:21">insn</name> <operator pos:start="919:23" pos:end="919:23">&amp;</operator> <literal type="number" pos:start="919:25" pos:end="919:34">0x0e000000</literal><operator pos:start="919:35" pos:end="919:35">)</operator> <operator pos:start="919:37" pos:end="919:38">==</operator> <operator pos:start="919:40" pos:end="919:40">(</operator><literal type="number" pos:start="919:41" pos:end="919:41">1</literal> <operator pos:start="919:43" pos:end="919:44">&lt;&lt;</operator> <literal type="number" pos:start="919:46" pos:end="919:47">25</literal><operator pos:start="919:48" pos:end="919:48">)</operator><operator pos:start="919:49" pos:end="919:49">)</operator></expr>)</condition> <block pos:start="919:52" pos:end="1277:5">{<block_content pos:start="921:9" pos:end="1275:9">

        <decl_stmt pos:start="921:9" pos:end="921:38"><decl pos:start="921:9" pos:end="921:18"><type pos:start="921:9" pos:end="921:11"><name pos:start="921:9" pos:end="921:11">int</name></type> <name pos:start="921:13" pos:end="921:18">set_cc</name></decl>, <decl pos:start="921:21" pos:end="921:28"><type ref="prev" pos:start="921:9" pos:end="921:11"/><name pos:start="921:21" pos:end="921:28">logic_cc</name></decl>, <decl pos:start="921:31" pos:end="921:37"><type ref="prev" pos:start="921:9" pos:end="921:11"/><name pos:start="921:31" pos:end="921:37">shiftop</name></decl>;</decl_stmt>



        <expr_stmt pos:start="925:9" pos:end="925:33"><expr pos:start="925:9" pos:end="925:32"><name pos:start="925:9" pos:end="925:11">op1</name> <operator pos:start="925:13" pos:end="925:13">=</operator> <operator pos:start="925:15" pos:end="925:15">(</operator><name pos:start="925:16" pos:end="925:19">insn</name> <operator pos:start="925:21" pos:end="925:22">&gt;&gt;</operator> <literal type="number" pos:start="925:24" pos:end="925:25">21</literal><operator pos:start="925:26" pos:end="925:26">)</operator> <operator pos:start="925:28" pos:end="925:28">&amp;</operator> <literal type="number" pos:start="925:30" pos:end="925:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="927:9" pos:end="927:34"><expr pos:start="927:9" pos:end="927:33"><name pos:start="927:9" pos:end="927:14">set_cc</name> <operator pos:start="927:16" pos:end="927:16">=</operator> <operator pos:start="927:18" pos:end="927:18">(</operator><name pos:start="927:19" pos:end="927:22">insn</name> <operator pos:start="927:24" pos:end="927:25">&gt;&gt;</operator> <literal type="number" pos:start="927:27" pos:end="927:28">20</literal><operator pos:start="927:29" pos:end="927:29">)</operator> <operator pos:start="927:31" pos:end="927:31">&amp;</operator> <literal type="number" pos:start="927:33" pos:end="927:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="929:9" pos:end="929:48"><expr pos:start="929:9" pos:end="929:47"><name pos:start="929:9" pos:end="929:16">logic_cc</name> <operator pos:start="929:18" pos:end="929:18">=</operator> <name pos:start="929:20" pos:end="929:38"><name pos:start="929:20" pos:end="929:33">table_logic_cc</name><index pos:start="929:34" pos:end="929:38">[<expr pos:start="929:35" pos:end="929:37"><name pos:start="929:35" pos:end="929:37">op1</name></expr>]</index></name> <operator pos:start="929:40" pos:end="929:40">&amp;</operator> <name pos:start="929:42" pos:end="929:47">set_cc</name></expr>;</expr_stmt>



        <comment type="block" pos:start="933:9" pos:end="933:41">/* data processing instruction */</comment>

        <if_stmt pos:start="935:9" pos:end="985:9"><if pos:start="935:9" pos:end="959:9">if <condition pos:start="935:12" pos:end="935:29">(<expr pos:start="935:13" pos:end="935:28"><name pos:start="935:13" pos:end="935:16">insn</name> <operator pos:start="935:18" pos:end="935:18">&amp;</operator> <operator pos:start="935:20" pos:end="935:20">(</operator><literal type="number" pos:start="935:21" pos:end="935:21">1</literal> <operator pos:start="935:23" pos:end="935:24">&lt;&lt;</operator> <literal type="number" pos:start="935:26" pos:end="935:27">25</literal><operator pos:start="935:28" pos:end="935:28">)</operator></expr>)</condition> <block pos:start="935:31" pos:end="959:9">{<block_content pos:start="939:13" pos:end="957:13">

            <comment type="block" pos:start="937:13" pos:end="937:35">/* immediate operand */</comment>

            <expr_stmt pos:start="939:13" pos:end="939:30"><expr pos:start="939:13" pos:end="939:29"><name pos:start="939:13" pos:end="939:15">val</name> <operator pos:start="939:17" pos:end="939:17">=</operator> <name pos:start="939:19" pos:end="939:22">insn</name> <operator pos:start="939:24" pos:end="939:24">&amp;</operator> <literal type="number" pos:start="939:26" pos:end="939:29">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="941:13" pos:end="941:44"><expr pos:start="941:13" pos:end="941:43"><name pos:start="941:13" pos:end="941:17">shift</name> <operator pos:start="941:19" pos:end="941:19">=</operator> <operator pos:start="941:21" pos:end="941:21">(</operator><operator pos:start="941:22" pos:end="941:22">(</operator><name pos:start="941:23" pos:end="941:26">insn</name> <operator pos:start="941:28" pos:end="941:29">&gt;&gt;</operator> <literal type="number" pos:start="941:31" pos:end="941:31">8</literal><operator pos:start="941:32" pos:end="941:32">)</operator> <operator pos:start="941:34" pos:end="941:34">&amp;</operator> <literal type="number" pos:start="941:36" pos:end="941:38">0xf</literal><operator pos:start="941:39" pos:end="941:39">)</operator> <operator pos:start="941:41" pos:end="941:41">*</operator> <literal type="number" pos:start="941:43" pos:end="941:43">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="943:13" pos:end="947:13"><if pos:start="943:13" pos:end="947:13">if <condition pos:start="943:16" pos:end="943:22">(<expr pos:start="943:17" pos:end="943:21"><name pos:start="943:17" pos:end="943:21">shift</name></expr>)</condition> <block pos:start="943:24" pos:end="947:13">{<block_content pos:start="945:17" pos:end="945:61">

                <expr_stmt pos:start="945:17" pos:end="945:61"><expr pos:start="945:17" pos:end="945:60"><name pos:start="945:17" pos:end="945:19">val</name> <operator pos:start="945:21" pos:end="945:21">=</operator> <operator pos:start="945:23" pos:end="945:23">(</operator><name pos:start="945:24" pos:end="945:26">val</name> <operator pos:start="945:28" pos:end="945:29">&gt;&gt;</operator> <name pos:start="945:31" pos:end="945:35">shift</name><operator pos:start="945:36" pos:end="945:36">)</operator> <operator pos:start="945:38" pos:end="945:38">|</operator> <operator pos:start="945:40" pos:end="945:40">(</operator><name pos:start="945:41" pos:end="945:43">val</name> <operator pos:start="945:45" pos:end="945:46">&lt;&lt;</operator> <operator pos:start="945:48" pos:end="945:48">(</operator><literal type="number" pos:start="945:49" pos:end="945:52">32</literal> <operator pos:start="945:52" pos:end="945:52">-</operator> <name pos:start="945:54" pos:end="945:58">shift</name><operator pos:start="945:59" pos:end="945:59">)</operator><operator pos:start="945:60" pos:end="945:60">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="949:13" pos:end="949:38"><expr pos:start="949:13" pos:end="949:37"><name pos:start="949:13" pos:end="949:16">tmp2</name> <operator pos:start="949:18" pos:end="949:18">=</operator> <call pos:start="949:20" pos:end="949:37"><name pos:start="949:20" pos:end="949:35">tcg_temp_new_i32</name><argument_list pos:start="949:36" pos:end="949:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="951:13" pos:end="951:40"><expr pos:start="951:13" pos:end="951:39"><call pos:start="951:13" pos:end="951:39"><name pos:start="951:13" pos:end="951:28">tcg_gen_movi_i32</name><argument_list pos:start="951:29" pos:end="951:39">(<argument pos:start="951:30" pos:end="951:33"><expr pos:start="951:30" pos:end="951:33"><name pos:start="951:30" pos:end="951:33">tmp2</name></expr></argument>, <argument pos:start="951:36" pos:end="951:38"><expr pos:start="951:36" pos:end="951:38"><name pos:start="951:36" pos:end="951:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="953:13" pos:end="957:13"><if pos:start="953:13" pos:end="957:13">if <condition pos:start="953:16" pos:end="953:34">(<expr pos:start="953:17" pos:end="953:33"><name pos:start="953:17" pos:end="953:24">logic_cc</name> <operator pos:start="953:26" pos:end="953:27">&amp;&amp;</operator> <name pos:start="953:29" pos:end="953:33">shift</name></expr>)</condition> <block pos:start="953:36" pos:end="957:13">{<block_content pos:start="955:17" pos:end="955:39">

                <expr_stmt pos:start="955:17" pos:end="955:39"><expr pos:start="955:17" pos:end="955:38"><call pos:start="955:17" pos:end="955:38"><name pos:start="955:17" pos:end="955:32">gen_set_CF_bit31</name><argument_list pos:start="955:33" pos:end="955:38">(<argument pos:start="955:34" pos:end="955:37"><expr pos:start="955:34" pos:end="955:37"><name pos:start="955:34" pos:end="955:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="959:11" pos:end="985:9">else <block pos:start="959:16" pos:end="985:9">{<block_content pos:start="963:13" pos:end="983:13">

            <comment type="block" pos:start="961:13" pos:end="961:26">/* register */</comment>

            <expr_stmt pos:start="963:13" pos:end="963:30"><expr pos:start="963:13" pos:end="963:29"><name pos:start="963:13" pos:end="963:14">rm</name> <operator pos:start="963:16" pos:end="963:16">=</operator> <operator pos:start="963:18" pos:end="963:18">(</operator><name pos:start="963:19" pos:end="963:22">insn</name><operator pos:start="963:23" pos:end="963:23">)</operator> <operator pos:start="963:25" pos:end="963:25">&amp;</operator> <literal type="number" pos:start="963:27" pos:end="963:29">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="965:13" pos:end="965:35"><expr pos:start="965:13" pos:end="965:34"><name pos:start="965:13" pos:end="965:16">tmp2</name> <operator pos:start="965:18" pos:end="965:18">=</operator> <call pos:start="965:20" pos:end="965:34"><name pos:start="965:20" pos:end="965:27">load_reg</name><argument_list pos:start="965:28" pos:end="965:34">(<argument pos:start="965:29" pos:end="965:29"><expr pos:start="965:29" pos:end="965:29"><name pos:start="965:29" pos:end="965:29">s</name></expr></argument>, <argument pos:start="965:32" pos:end="965:33"><expr pos:start="965:32" pos:end="965:33"><name pos:start="965:32" pos:end="965:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="967:13" pos:end="967:38"><expr pos:start="967:13" pos:end="967:37"><name pos:start="967:13" pos:end="967:19">shiftop</name> <operator pos:start="967:21" pos:end="967:21">=</operator> <operator pos:start="967:23" pos:end="967:23">(</operator><name pos:start="967:24" pos:end="967:27">insn</name> <operator pos:start="967:29" pos:end="967:30">&gt;&gt;</operator> <literal type="number" pos:start="967:32" pos:end="967:32">5</literal><operator pos:start="967:33" pos:end="967:33">)</operator> <operator pos:start="967:35" pos:end="967:35">&amp;</operator> <literal type="number" pos:start="967:37" pos:end="967:37">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="969:13" pos:end="983:13"><if pos:start="969:13" pos:end="975:13">if <condition pos:start="969:16" pos:end="969:35">(<expr pos:start="969:17" pos:end="969:34"><operator pos:start="969:17" pos:end="969:17">!</operator><operator pos:start="969:18" pos:end="969:18">(</operator><name pos:start="969:19" pos:end="969:22">insn</name> <operator pos:start="969:24" pos:end="969:24">&amp;</operator> <operator pos:start="969:26" pos:end="969:26">(</operator><literal type="number" pos:start="969:27" pos:end="969:27">1</literal> <operator pos:start="969:29" pos:end="969:30">&lt;&lt;</operator> <literal type="number" pos:start="969:32" pos:end="969:32">4</literal><operator pos:start="969:33" pos:end="969:33">)</operator><operator pos:start="969:34" pos:end="969:34">)</operator></expr>)</condition> <block pos:start="969:37" pos:end="975:13">{<block_content pos:start="971:17" pos:end="973:65">

                <expr_stmt pos:start="971:17" pos:end="971:43"><expr pos:start="971:17" pos:end="971:42"><name pos:start="971:17" pos:end="971:21">shift</name> <operator pos:start="971:23" pos:end="971:23">=</operator> <operator pos:start="971:25" pos:end="971:25">(</operator><name pos:start="971:26" pos:end="971:29">insn</name> <operator pos:start="971:31" pos:end="971:32">&gt;&gt;</operator> <literal type="number" pos:start="971:34" pos:end="971:34">7</literal><operator pos:start="971:35" pos:end="971:35">)</operator> <operator pos:start="971:37" pos:end="971:37">&amp;</operator> <literal type="number" pos:start="971:39" pos:end="971:42">0x1f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="973:17" pos:end="973:65"><expr pos:start="973:17" pos:end="973:64"><call pos:start="973:17" pos:end="973:64"><name pos:start="973:17" pos:end="973:32">gen_arm_shift_im</name><argument_list pos:start="973:33" pos:end="973:64">(<argument pos:start="973:34" pos:end="973:37"><expr pos:start="973:34" pos:end="973:37"><name pos:start="973:34" pos:end="973:37">tmp2</name></expr></argument>, <argument pos:start="973:40" pos:end="973:46"><expr pos:start="973:40" pos:end="973:46"><name pos:start="973:40" pos:end="973:46">shiftop</name></expr></argument>, <argument pos:start="973:49" pos:end="973:53"><expr pos:start="973:49" pos:end="973:53"><name pos:start="973:49" pos:end="973:53">shift</name></expr></argument>, <argument pos:start="973:56" pos:end="973:63"><expr pos:start="973:56" pos:end="973:63"><name pos:start="973:56" pos:end="973:63">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="975:15" pos:end="983:13">else <block pos:start="975:20" pos:end="983:13">{<block_content pos:start="977:17" pos:end="981:64">

                <expr_stmt pos:start="977:17" pos:end="977:39"><expr pos:start="977:17" pos:end="977:38"><name pos:start="977:17" pos:end="977:18">rs</name> <operator pos:start="977:20" pos:end="977:20">=</operator> <operator pos:start="977:22" pos:end="977:22">(</operator><name pos:start="977:23" pos:end="977:26">insn</name> <operator pos:start="977:28" pos:end="977:29">&gt;&gt;</operator> <literal type="number" pos:start="977:31" pos:end="977:31">8</literal><operator pos:start="977:32" pos:end="977:32">)</operator> <operator pos:start="977:34" pos:end="977:34">&amp;</operator> <literal type="number" pos:start="977:36" pos:end="977:38">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="979:17" pos:end="979:38"><expr pos:start="979:17" pos:end="979:37"><name pos:start="979:17" pos:end="979:19">tmp</name> <operator pos:start="979:21" pos:end="979:21">=</operator> <call pos:start="979:23" pos:end="979:37"><name pos:start="979:23" pos:end="979:30">load_reg</name><argument_list pos:start="979:31" pos:end="979:37">(<argument pos:start="979:32" pos:end="979:32"><expr pos:start="979:32" pos:end="979:32"><name pos:start="979:32" pos:end="979:32">s</name></expr></argument>, <argument pos:start="979:35" pos:end="979:36"><expr pos:start="979:35" pos:end="979:36"><name pos:start="979:35" pos:end="979:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="981:17" pos:end="981:64"><expr pos:start="981:17" pos:end="981:63"><call pos:start="981:17" pos:end="981:63"><name pos:start="981:17" pos:end="981:33">gen_arm_shift_reg</name><argument_list pos:start="981:34" pos:end="981:63">(<argument pos:start="981:35" pos:end="981:38"><expr pos:start="981:35" pos:end="981:38"><name pos:start="981:35" pos:end="981:38">tmp2</name></expr></argument>, <argument pos:start="981:41" pos:end="981:47"><expr pos:start="981:41" pos:end="981:47"><name pos:start="981:41" pos:end="981:47">shiftop</name></expr></argument>, <argument pos:start="981:50" pos:end="981:52"><expr pos:start="981:50" pos:end="981:52"><name pos:start="981:50" pos:end="981:52">tmp</name></expr></argument>, <argument pos:start="981:55" pos:end="981:62"><expr pos:start="981:55" pos:end="981:62"><name pos:start="981:55" pos:end="981:62">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="987:9" pos:end="997:9"><if pos:start="987:9" pos:end="993:9">if <condition pos:start="987:12" pos:end="987:39">(<expr pos:start="987:13" pos:end="987:38"><name pos:start="987:13" pos:end="987:15">op1</name> <operator pos:start="987:17" pos:end="987:18">!=</operator> <literal type="number" pos:start="987:20" pos:end="987:23">0x0f</literal> <operator pos:start="987:25" pos:end="987:26">&amp;&amp;</operator> <name pos:start="987:28" pos:end="987:30">op1</name> <operator pos:start="987:32" pos:end="987:33">!=</operator> <literal type="number" pos:start="987:35" pos:end="987:38">0x0d</literal></expr>)</condition> <block pos:start="987:41" pos:end="993:9">{<block_content pos:start="989:13" pos:end="991:34">

            <expr_stmt pos:start="989:13" pos:end="989:36"><expr pos:start="989:13" pos:end="989:35"><name pos:start="989:13" pos:end="989:14">rn</name> <operator pos:start="989:16" pos:end="989:16">=</operator> <operator pos:start="989:18" pos:end="989:18">(</operator><name pos:start="989:19" pos:end="989:22">insn</name> <operator pos:start="989:24" pos:end="989:25">&gt;&gt;</operator> <literal type="number" pos:start="989:27" pos:end="989:28">16</literal><operator pos:start="989:29" pos:end="989:29">)</operator> <operator pos:start="989:31" pos:end="989:31">&amp;</operator> <literal type="number" pos:start="989:33" pos:end="989:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="991:13" pos:end="991:34"><expr pos:start="991:13" pos:end="991:33"><name pos:start="991:13" pos:end="991:15">tmp</name> <operator pos:start="991:17" pos:end="991:17">=</operator> <call pos:start="991:19" pos:end="991:33"><name pos:start="991:19" pos:end="991:26">load_reg</name><argument_list pos:start="991:27" pos:end="991:33">(<argument pos:start="991:28" pos:end="991:28"><expr pos:start="991:28" pos:end="991:28"><name pos:start="991:28" pos:end="991:28">s</name></expr></argument>, <argument pos:start="991:31" pos:end="991:32"><expr pos:start="991:31" pos:end="991:32"><name pos:start="991:31" pos:end="991:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="993:11" pos:end="997:9">else <block pos:start="993:16" pos:end="997:9">{<block_content pos:start="995:13" pos:end="995:33">

            <expr_stmt pos:start="995:13" pos:end="995:33"><expr pos:start="995:13" pos:end="995:32"><call pos:start="995:13" pos:end="995:32"><name pos:start="995:13" pos:end="995:27">TCGV_UNUSED_I32</name><argument_list pos:start="995:28" pos:end="995:32">(<argument pos:start="995:29" pos:end="995:31"><expr pos:start="995:29" pos:end="995:31"><name pos:start="995:29" pos:end="995:31">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="999:9" pos:end="999:32"><expr pos:start="999:9" pos:end="999:31"><name pos:start="999:9" pos:end="999:10">rd</name> <operator pos:start="999:12" pos:end="999:12">=</operator> <operator pos:start="999:14" pos:end="999:14">(</operator><name pos:start="999:15" pos:end="999:18">insn</name> <operator pos:start="999:20" pos:end="999:21">&gt;&gt;</operator> <literal type="number" pos:start="999:23" pos:end="999:24">12</literal><operator pos:start="999:25" pos:end="999:25">)</operator> <operator pos:start="999:27" pos:end="999:27">&amp;</operator> <literal type="number" pos:start="999:29" pos:end="999:31">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="1001:9" pos:end="1269:9">switch<condition pos:start="1001:15" pos:end="1001:19">(<expr pos:start="1001:16" pos:end="1001:18"><name pos:start="1001:16" pos:end="1001:18">op1</name></expr>)</condition> <block pos:start="1001:21" pos:end="1269:9">{<block_content pos:start="1003:9" pos:end="1267:18">

        <case pos:start="1003:9" pos:end="1003:18">case <expr pos:start="1003:14" pos:end="1003:17"><literal type="number" pos:start="1003:14" pos:end="1003:17">0x00</literal></expr>:</case>

            <expr_stmt pos:start="1005:13" pos:end="1005:44"><expr pos:start="1005:13" pos:end="1005:43"><call pos:start="1005:13" pos:end="1005:43"><name pos:start="1005:13" pos:end="1005:27">tcg_gen_and_i32</name><argument_list pos:start="1005:28" pos:end="1005:43">(<argument pos:start="1005:29" pos:end="1005:31"><expr pos:start="1005:29" pos:end="1005:31"><name pos:start="1005:29" pos:end="1005:31">tmp</name></expr></argument>, <argument pos:start="1005:34" pos:end="1005:36"><expr pos:start="1005:34" pos:end="1005:36"><name pos:start="1005:34" pos:end="1005:36">tmp</name></expr></argument>, <argument pos:start="1005:39" pos:end="1005:42"><expr pos:start="1005:39" pos:end="1005:42"><name pos:start="1005:39" pos:end="1005:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1007:13" pos:end="1011:13"><if pos:start="1007:13" pos:end="1011:13">if <condition pos:start="1007:16" pos:end="1007:25">(<expr pos:start="1007:17" pos:end="1007:24"><name pos:start="1007:17" pos:end="1007:24">logic_cc</name></expr>)</condition> <block pos:start="1007:27" pos:end="1011:13">{<block_content pos:start="1009:17" pos:end="1009:34">

                <expr_stmt pos:start="1009:17" pos:end="1009:34"><expr pos:start="1009:17" pos:end="1009:33"><call pos:start="1009:17" pos:end="1009:33"><name pos:start="1009:17" pos:end="1009:28">gen_logic_CC</name><argument_list pos:start="1009:29" pos:end="1009:33">(<argument pos:start="1009:30" pos:end="1009:32"><expr pos:start="1009:30" pos:end="1009:32"><name pos:start="1009:30" pos:end="1009:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1013:13" pos:end="1013:37"><expr pos:start="1013:13" pos:end="1013:36"><call pos:start="1013:13" pos:end="1013:36"><name pos:start="1013:13" pos:end="1013:24">store_reg_bx</name><argument_list pos:start="1013:25" pos:end="1013:36">(<argument pos:start="1013:26" pos:end="1013:26"><expr pos:start="1013:26" pos:end="1013:26"><name pos:start="1013:26" pos:end="1013:26">s</name></expr></argument>, <argument pos:start="1013:29" pos:end="1013:30"><expr pos:start="1013:29" pos:end="1013:30"><name pos:start="1013:29" pos:end="1013:30">rd</name></expr></argument>, <argument pos:start="1013:33" pos:end="1013:35"><expr pos:start="1013:33" pos:end="1013:35"><name pos:start="1013:33" pos:end="1013:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1015:13" pos:end="1015:18">break;</break>

        <case pos:start="1017:9" pos:end="1017:18">case <expr pos:start="1017:14" pos:end="1017:17"><literal type="number" pos:start="1017:14" pos:end="1017:17">0x01</literal></expr>:</case>

            <expr_stmt pos:start="1019:13" pos:end="1019:44"><expr pos:start="1019:13" pos:end="1019:43"><call pos:start="1019:13" pos:end="1019:43"><name pos:start="1019:13" pos:end="1019:27">tcg_gen_xor_i32</name><argument_list pos:start="1019:28" pos:end="1019:43">(<argument pos:start="1019:29" pos:end="1019:31"><expr pos:start="1019:29" pos:end="1019:31"><name pos:start="1019:29" pos:end="1019:31">tmp</name></expr></argument>, <argument pos:start="1019:34" pos:end="1019:36"><expr pos:start="1019:34" pos:end="1019:36"><name pos:start="1019:34" pos:end="1019:36">tmp</name></expr></argument>, <argument pos:start="1019:39" pos:end="1019:42"><expr pos:start="1019:39" pos:end="1019:42"><name pos:start="1019:39" pos:end="1019:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1021:13" pos:end="1025:13"><if pos:start="1021:13" pos:end="1025:13">if <condition pos:start="1021:16" pos:end="1021:25">(<expr pos:start="1021:17" pos:end="1021:24"><name pos:start="1021:17" pos:end="1021:24">logic_cc</name></expr>)</condition> <block pos:start="1021:27" pos:end="1025:13">{<block_content pos:start="1023:17" pos:end="1023:34">

                <expr_stmt pos:start="1023:17" pos:end="1023:34"><expr pos:start="1023:17" pos:end="1023:33"><call pos:start="1023:17" pos:end="1023:33"><name pos:start="1023:17" pos:end="1023:28">gen_logic_CC</name><argument_list pos:start="1023:29" pos:end="1023:33">(<argument pos:start="1023:30" pos:end="1023:32"><expr pos:start="1023:30" pos:end="1023:32"><name pos:start="1023:30" pos:end="1023:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1027:13" pos:end="1027:37"><expr pos:start="1027:13" pos:end="1027:36"><call pos:start="1027:13" pos:end="1027:36"><name pos:start="1027:13" pos:end="1027:24">store_reg_bx</name><argument_list pos:start="1027:25" pos:end="1027:36">(<argument pos:start="1027:26" pos:end="1027:26"><expr pos:start="1027:26" pos:end="1027:26"><name pos:start="1027:26" pos:end="1027:26">s</name></expr></argument>, <argument pos:start="1027:29" pos:end="1027:30"><expr pos:start="1027:29" pos:end="1027:30"><name pos:start="1027:29" pos:end="1027:30">rd</name></expr></argument>, <argument pos:start="1027:33" pos:end="1027:35"><expr pos:start="1027:33" pos:end="1027:35"><name pos:start="1027:33" pos:end="1027:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1029:13" pos:end="1029:18">break;</break>

        <case pos:start="1031:9" pos:end="1031:18">case <expr pos:start="1031:14" pos:end="1031:17"><literal type="number" pos:start="1031:14" pos:end="1031:17">0x02</literal></expr>:</case>

            <if_stmt pos:start="1033:13" pos:end="1061:13"><if pos:start="1033:13" pos:end="1047:13">if <condition pos:start="1033:16" pos:end="1033:35">(<expr pos:start="1033:17" pos:end="1033:34"><name pos:start="1033:17" pos:end="1033:22">set_cc</name> <operator pos:start="1033:24" pos:end="1033:25">&amp;&amp;</operator> <name pos:start="1033:27" pos:end="1033:28">rd</name> <operator pos:start="1033:30" pos:end="1033:31">==</operator> <literal type="number" pos:start="1033:33" pos:end="1033:34">15</literal></expr>)</condition> <block pos:start="1033:37" pos:end="1047:13">{<block_content pos:start="1037:17" pos:end="1045:45">

                <comment type="block" pos:start="1035:17" pos:end="1035:66">/* SUBS r15, ... is used for exception return.  */</comment>

                <if_stmt pos:start="1037:17" pos:end="1041:17"><if pos:start="1037:17" pos:end="1041:17">if <condition pos:start="1037:20" pos:end="1037:31">(<expr pos:start="1037:21" pos:end="1037:30"><call pos:start="1037:21" pos:end="1037:30"><name pos:start="1037:21" pos:end="1037:27">IS_USER</name><argument_list pos:start="1037:28" pos:end="1037:30">(<argument pos:start="1037:29" pos:end="1037:29"><expr pos:start="1037:29" pos:end="1037:29"><name pos:start="1037:29" pos:end="1037:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1037:33" pos:end="1041:17">{<block_content pos:start="1039:21" pos:end="1039:36">

                    <goto pos:start="1039:21" pos:end="1039:36">goto <name pos:start="1039:26" pos:end="1039:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1043:17" pos:end="1043:43"><expr pos:start="1043:17" pos:end="1043:42"><call pos:start="1043:17" pos:end="1043:42"><name pos:start="1043:17" pos:end="1043:26">gen_sub_CC</name><argument_list pos:start="1043:27" pos:end="1043:42">(<argument pos:start="1043:28" pos:end="1043:30"><expr pos:start="1043:28" pos:end="1043:30"><name pos:start="1043:28" pos:end="1043:30">tmp</name></expr></argument>, <argument pos:start="1043:33" pos:end="1043:35"><expr pos:start="1043:33" pos:end="1043:35"><name pos:start="1043:33" pos:end="1043:35">tmp</name></expr></argument>, <argument pos:start="1043:38" pos:end="1043:41"><expr pos:start="1043:38" pos:end="1043:41"><name pos:start="1043:38" pos:end="1043:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1045:17" pos:end="1045:45"><expr pos:start="1045:17" pos:end="1045:44"><call pos:start="1045:17" pos:end="1045:44"><name pos:start="1045:17" pos:end="1045:36">gen_exception_return</name><argument_list pos:start="1045:37" pos:end="1045:44">(<argument pos:start="1045:38" pos:end="1045:38"><expr pos:start="1045:38" pos:end="1045:38"><name pos:start="1045:38" pos:end="1045:38">s</name></expr></argument>, <argument pos:start="1045:41" pos:end="1045:43"><expr pos:start="1045:41" pos:end="1045:43"><name pos:start="1045:41" pos:end="1045:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1047:15" pos:end="1061:13">else <block pos:start="1047:20" pos:end="1061:13">{<block_content pos:start="1049:17" pos:end="1059:41">

                <if_stmt pos:start="1049:17" pos:end="1057:17"><if pos:start="1049:17" pos:end="1053:17">if <condition pos:start="1049:20" pos:end="1049:27">(<expr pos:start="1049:21" pos:end="1049:26"><name pos:start="1049:21" pos:end="1049:26">set_cc</name></expr>)</condition> <block pos:start="1049:29" pos:end="1053:17">{<block_content pos:start="1051:21" pos:end="1051:47">

                    <expr_stmt pos:start="1051:21" pos:end="1051:47"><expr pos:start="1051:21" pos:end="1051:46"><call pos:start="1051:21" pos:end="1051:46"><name pos:start="1051:21" pos:end="1051:30">gen_sub_CC</name><argument_list pos:start="1051:31" pos:end="1051:46">(<argument pos:start="1051:32" pos:end="1051:34"><expr pos:start="1051:32" pos:end="1051:34"><name pos:start="1051:32" pos:end="1051:34">tmp</name></expr></argument>, <argument pos:start="1051:37" pos:end="1051:39"><expr pos:start="1051:37" pos:end="1051:39"><name pos:start="1051:37" pos:end="1051:39">tmp</name></expr></argument>, <argument pos:start="1051:42" pos:end="1051:45"><expr pos:start="1051:42" pos:end="1051:45"><name pos:start="1051:42" pos:end="1051:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1053:19" pos:end="1057:17">else <block pos:start="1053:24" pos:end="1057:17">{<block_content pos:start="1055:21" pos:end="1055:52">

                    <expr_stmt pos:start="1055:21" pos:end="1055:52"><expr pos:start="1055:21" pos:end="1055:51"><call pos:start="1055:21" pos:end="1055:51"><name pos:start="1055:21" pos:end="1055:35">tcg_gen_sub_i32</name><argument_list pos:start="1055:36" pos:end="1055:51">(<argument pos:start="1055:37" pos:end="1055:39"><expr pos:start="1055:37" pos:end="1055:39"><name pos:start="1055:37" pos:end="1055:39">tmp</name></expr></argument>, <argument pos:start="1055:42" pos:end="1055:44"><expr pos:start="1055:42" pos:end="1055:44"><name pos:start="1055:42" pos:end="1055:44">tmp</name></expr></argument>, <argument pos:start="1055:47" pos:end="1055:50"><expr pos:start="1055:47" pos:end="1055:50"><name pos:start="1055:47" pos:end="1055:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1059:17" pos:end="1059:41"><expr pos:start="1059:17" pos:end="1059:40"><call pos:start="1059:17" pos:end="1059:40"><name pos:start="1059:17" pos:end="1059:28">store_reg_bx</name><argument_list pos:start="1059:29" pos:end="1059:40">(<argument pos:start="1059:30" pos:end="1059:30"><expr pos:start="1059:30" pos:end="1059:30"><name pos:start="1059:30" pos:end="1059:30">s</name></expr></argument>, <argument pos:start="1059:33" pos:end="1059:34"><expr pos:start="1059:33" pos:end="1059:34"><name pos:start="1059:33" pos:end="1059:34">rd</name></expr></argument>, <argument pos:start="1059:37" pos:end="1059:39"><expr pos:start="1059:37" pos:end="1059:39"><name pos:start="1059:37" pos:end="1059:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1063:13" pos:end="1063:18">break;</break>

        <case pos:start="1065:9" pos:end="1065:18">case <expr pos:start="1065:14" pos:end="1065:17"><literal type="number" pos:start="1065:14" pos:end="1065:17">0x03</literal></expr>:</case>

            <if_stmt pos:start="1067:13" pos:end="1075:13"><if pos:start="1067:13" pos:end="1071:13">if <condition pos:start="1067:16" pos:end="1067:23">(<expr pos:start="1067:17" pos:end="1067:22"><name pos:start="1067:17" pos:end="1067:22">set_cc</name></expr>)</condition> <block pos:start="1067:25" pos:end="1071:13">{<block_content pos:start="1069:17" pos:end="1069:43">

                <expr_stmt pos:start="1069:17" pos:end="1069:43"><expr pos:start="1069:17" pos:end="1069:42"><call pos:start="1069:17" pos:end="1069:42"><name pos:start="1069:17" pos:end="1069:26">gen_sub_CC</name><argument_list pos:start="1069:27" pos:end="1069:42">(<argument pos:start="1069:28" pos:end="1069:30"><expr pos:start="1069:28" pos:end="1069:30"><name pos:start="1069:28" pos:end="1069:30">tmp</name></expr></argument>, <argument pos:start="1069:33" pos:end="1069:36"><expr pos:start="1069:33" pos:end="1069:36"><name pos:start="1069:33" pos:end="1069:36">tmp2</name></expr></argument>, <argument pos:start="1069:39" pos:end="1069:41"><expr pos:start="1069:39" pos:end="1069:41"><name pos:start="1069:39" pos:end="1069:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1071:15" pos:end="1075:13">else <block pos:start="1071:20" pos:end="1075:13">{<block_content pos:start="1073:17" pos:end="1073:48">

                <expr_stmt pos:start="1073:17" pos:end="1073:48"><expr pos:start="1073:17" pos:end="1073:47"><call pos:start="1073:17" pos:end="1073:47"><name pos:start="1073:17" pos:end="1073:31">tcg_gen_sub_i32</name><argument_list pos:start="1073:32" pos:end="1073:47">(<argument pos:start="1073:33" pos:end="1073:35"><expr pos:start="1073:33" pos:end="1073:35"><name pos:start="1073:33" pos:end="1073:35">tmp</name></expr></argument>, <argument pos:start="1073:38" pos:end="1073:41"><expr pos:start="1073:38" pos:end="1073:41"><name pos:start="1073:38" pos:end="1073:41">tmp2</name></expr></argument>, <argument pos:start="1073:44" pos:end="1073:46"><expr pos:start="1073:44" pos:end="1073:46"><name pos:start="1073:44" pos:end="1073:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1077:13" pos:end="1077:37"><expr pos:start="1077:13" pos:end="1077:36"><call pos:start="1077:13" pos:end="1077:36"><name pos:start="1077:13" pos:end="1077:24">store_reg_bx</name><argument_list pos:start="1077:25" pos:end="1077:36">(<argument pos:start="1077:26" pos:end="1077:26"><expr pos:start="1077:26" pos:end="1077:26"><name pos:start="1077:26" pos:end="1077:26">s</name></expr></argument>, <argument pos:start="1077:29" pos:end="1077:30"><expr pos:start="1077:29" pos:end="1077:30"><name pos:start="1077:29" pos:end="1077:30">rd</name></expr></argument>, <argument pos:start="1077:33" pos:end="1077:35"><expr pos:start="1077:33" pos:end="1077:35"><name pos:start="1077:33" pos:end="1077:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1079:13" pos:end="1079:18">break;</break>

        <case pos:start="1081:9" pos:end="1081:18">case <expr pos:start="1081:14" pos:end="1081:17"><literal type="number" pos:start="1081:14" pos:end="1081:17">0x04</literal></expr>:</case>

            <if_stmt pos:start="1083:13" pos:end="1091:13"><if pos:start="1083:13" pos:end="1087:13">if <condition pos:start="1083:16" pos:end="1083:23">(<expr pos:start="1083:17" pos:end="1083:22"><name pos:start="1083:17" pos:end="1083:22">set_cc</name></expr>)</condition> <block pos:start="1083:25" pos:end="1087:13">{<block_content pos:start="1085:17" pos:end="1085:43">

                <expr_stmt pos:start="1085:17" pos:end="1085:43"><expr pos:start="1085:17" pos:end="1085:42"><call pos:start="1085:17" pos:end="1085:42"><name pos:start="1085:17" pos:end="1085:26">gen_add_CC</name><argument_list pos:start="1085:27" pos:end="1085:42">(<argument pos:start="1085:28" pos:end="1085:30"><expr pos:start="1085:28" pos:end="1085:30"><name pos:start="1085:28" pos:end="1085:30">tmp</name></expr></argument>, <argument pos:start="1085:33" pos:end="1085:35"><expr pos:start="1085:33" pos:end="1085:35"><name pos:start="1085:33" pos:end="1085:35">tmp</name></expr></argument>, <argument pos:start="1085:38" pos:end="1085:41"><expr pos:start="1085:38" pos:end="1085:41"><name pos:start="1085:38" pos:end="1085:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1087:15" pos:end="1091:13">else <block pos:start="1087:20" pos:end="1091:13">{<block_content pos:start="1089:17" pos:end="1089:48">

                <expr_stmt pos:start="1089:17" pos:end="1089:48"><expr pos:start="1089:17" pos:end="1089:47"><call pos:start="1089:17" pos:end="1089:47"><name pos:start="1089:17" pos:end="1089:31">tcg_gen_add_i32</name><argument_list pos:start="1089:32" pos:end="1089:47">(<argument pos:start="1089:33" pos:end="1089:35"><expr pos:start="1089:33" pos:end="1089:35"><name pos:start="1089:33" pos:end="1089:35">tmp</name></expr></argument>, <argument pos:start="1089:38" pos:end="1089:40"><expr pos:start="1089:38" pos:end="1089:40"><name pos:start="1089:38" pos:end="1089:40">tmp</name></expr></argument>, <argument pos:start="1089:43" pos:end="1089:46"><expr pos:start="1089:43" pos:end="1089:46"><name pos:start="1089:43" pos:end="1089:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1093:13" pos:end="1093:37"><expr pos:start="1093:13" pos:end="1093:36"><call pos:start="1093:13" pos:end="1093:36"><name pos:start="1093:13" pos:end="1093:24">store_reg_bx</name><argument_list pos:start="1093:25" pos:end="1093:36">(<argument pos:start="1093:26" pos:end="1093:26"><expr pos:start="1093:26" pos:end="1093:26"><name pos:start="1093:26" pos:end="1093:26">s</name></expr></argument>, <argument pos:start="1093:29" pos:end="1093:30"><expr pos:start="1093:29" pos:end="1093:30"><name pos:start="1093:29" pos:end="1093:30">rd</name></expr></argument>, <argument pos:start="1093:33" pos:end="1093:35"><expr pos:start="1093:33" pos:end="1093:35"><name pos:start="1093:33" pos:end="1093:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1095:13" pos:end="1095:18">break;</break>

        <case pos:start="1097:9" pos:end="1097:18">case <expr pos:start="1097:14" pos:end="1097:17"><literal type="number" pos:start="1097:14" pos:end="1097:17">0x05</literal></expr>:</case>

            <if_stmt pos:start="1099:13" pos:end="1107:13"><if pos:start="1099:13" pos:end="1103:13">if <condition pos:start="1099:16" pos:end="1099:23">(<expr pos:start="1099:17" pos:end="1099:22"><name pos:start="1099:17" pos:end="1099:22">set_cc</name></expr>)</condition> <block pos:start="1099:25" pos:end="1103:13">{<block_content pos:start="1101:17" pos:end="1101:43">

                <expr_stmt pos:start="1101:17" pos:end="1101:43"><expr pos:start="1101:17" pos:end="1101:42"><call pos:start="1101:17" pos:end="1101:42"><name pos:start="1101:17" pos:end="1101:26">gen_adc_CC</name><argument_list pos:start="1101:27" pos:end="1101:42">(<argument pos:start="1101:28" pos:end="1101:30"><expr pos:start="1101:28" pos:end="1101:30"><name pos:start="1101:28" pos:end="1101:30">tmp</name></expr></argument>, <argument pos:start="1101:33" pos:end="1101:35"><expr pos:start="1101:33" pos:end="1101:35"><name pos:start="1101:33" pos:end="1101:35">tmp</name></expr></argument>, <argument pos:start="1101:38" pos:end="1101:41"><expr pos:start="1101:38" pos:end="1101:41"><name pos:start="1101:38" pos:end="1101:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1103:15" pos:end="1107:13">else <block pos:start="1103:20" pos:end="1107:13">{<block_content pos:start="1105:17" pos:end="1105:46">

                <expr_stmt pos:start="1105:17" pos:end="1105:46"><expr pos:start="1105:17" pos:end="1105:45"><call pos:start="1105:17" pos:end="1105:45"><name pos:start="1105:17" pos:end="1105:29">gen_add_carry</name><argument_list pos:start="1105:30" pos:end="1105:45">(<argument pos:start="1105:31" pos:end="1105:33"><expr pos:start="1105:31" pos:end="1105:33"><name pos:start="1105:31" pos:end="1105:33">tmp</name></expr></argument>, <argument pos:start="1105:36" pos:end="1105:38"><expr pos:start="1105:36" pos:end="1105:38"><name pos:start="1105:36" pos:end="1105:38">tmp</name></expr></argument>, <argument pos:start="1105:41" pos:end="1105:44"><expr pos:start="1105:41" pos:end="1105:44"><name pos:start="1105:41" pos:end="1105:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1109:13" pos:end="1109:37"><expr pos:start="1109:13" pos:end="1109:36"><call pos:start="1109:13" pos:end="1109:36"><name pos:start="1109:13" pos:end="1109:24">store_reg_bx</name><argument_list pos:start="1109:25" pos:end="1109:36">(<argument pos:start="1109:26" pos:end="1109:26"><expr pos:start="1109:26" pos:end="1109:26"><name pos:start="1109:26" pos:end="1109:26">s</name></expr></argument>, <argument pos:start="1109:29" pos:end="1109:30"><expr pos:start="1109:29" pos:end="1109:30"><name pos:start="1109:29" pos:end="1109:30">rd</name></expr></argument>, <argument pos:start="1109:33" pos:end="1109:35"><expr pos:start="1109:33" pos:end="1109:35"><name pos:start="1109:33" pos:end="1109:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1111:13" pos:end="1111:18">break;</break>

        <case pos:start="1113:9" pos:end="1113:18">case <expr pos:start="1113:14" pos:end="1113:17"><literal type="number" pos:start="1113:14" pos:end="1113:17">0x06</literal></expr>:</case>

            <if_stmt pos:start="1115:13" pos:end="1123:13"><if pos:start="1115:13" pos:end="1119:13">if <condition pos:start="1115:16" pos:end="1115:23">(<expr pos:start="1115:17" pos:end="1115:22"><name pos:start="1115:17" pos:end="1115:22">set_cc</name></expr>)</condition> <block pos:start="1115:25" pos:end="1119:13">{<block_content pos:start="1117:17" pos:end="1117:43">

                <expr_stmt pos:start="1117:17" pos:end="1117:43"><expr pos:start="1117:17" pos:end="1117:42"><call pos:start="1117:17" pos:end="1117:42"><name pos:start="1117:17" pos:end="1117:26">gen_sbc_CC</name><argument_list pos:start="1117:27" pos:end="1117:42">(<argument pos:start="1117:28" pos:end="1117:30"><expr pos:start="1117:28" pos:end="1117:30"><name pos:start="1117:28" pos:end="1117:30">tmp</name></expr></argument>, <argument pos:start="1117:33" pos:end="1117:35"><expr pos:start="1117:33" pos:end="1117:35"><name pos:start="1117:33" pos:end="1117:35">tmp</name></expr></argument>, <argument pos:start="1117:38" pos:end="1117:41"><expr pos:start="1117:38" pos:end="1117:41"><name pos:start="1117:38" pos:end="1117:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1119:15" pos:end="1123:13">else <block pos:start="1119:20" pos:end="1123:13">{<block_content pos:start="1121:17" pos:end="1121:46">

                <expr_stmt pos:start="1121:17" pos:end="1121:46"><expr pos:start="1121:17" pos:end="1121:45"><call pos:start="1121:17" pos:end="1121:45"><name pos:start="1121:17" pos:end="1121:29">gen_sub_carry</name><argument_list pos:start="1121:30" pos:end="1121:45">(<argument pos:start="1121:31" pos:end="1121:33"><expr pos:start="1121:31" pos:end="1121:33"><name pos:start="1121:31" pos:end="1121:33">tmp</name></expr></argument>, <argument pos:start="1121:36" pos:end="1121:38"><expr pos:start="1121:36" pos:end="1121:38"><name pos:start="1121:36" pos:end="1121:38">tmp</name></expr></argument>, <argument pos:start="1121:41" pos:end="1121:44"><expr pos:start="1121:41" pos:end="1121:44"><name pos:start="1121:41" pos:end="1121:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1125:13" pos:end="1125:37"><expr pos:start="1125:13" pos:end="1125:36"><call pos:start="1125:13" pos:end="1125:36"><name pos:start="1125:13" pos:end="1125:24">store_reg_bx</name><argument_list pos:start="1125:25" pos:end="1125:36">(<argument pos:start="1125:26" pos:end="1125:26"><expr pos:start="1125:26" pos:end="1125:26"><name pos:start="1125:26" pos:end="1125:26">s</name></expr></argument>, <argument pos:start="1125:29" pos:end="1125:30"><expr pos:start="1125:29" pos:end="1125:30"><name pos:start="1125:29" pos:end="1125:30">rd</name></expr></argument>, <argument pos:start="1125:33" pos:end="1125:35"><expr pos:start="1125:33" pos:end="1125:35"><name pos:start="1125:33" pos:end="1125:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1127:13" pos:end="1127:18">break;</break>

        <case pos:start="1129:9" pos:end="1129:18">case <expr pos:start="1129:14" pos:end="1129:17"><literal type="number" pos:start="1129:14" pos:end="1129:17">0x07</literal></expr>:</case>

            <if_stmt pos:start="1131:13" pos:end="1139:13"><if pos:start="1131:13" pos:end="1135:13">if <condition pos:start="1131:16" pos:end="1131:23">(<expr pos:start="1131:17" pos:end="1131:22"><name pos:start="1131:17" pos:end="1131:22">set_cc</name></expr>)</condition> <block pos:start="1131:25" pos:end="1135:13">{<block_content pos:start="1133:17" pos:end="1133:43">

                <expr_stmt pos:start="1133:17" pos:end="1133:43"><expr pos:start="1133:17" pos:end="1133:42"><call pos:start="1133:17" pos:end="1133:42"><name pos:start="1133:17" pos:end="1133:26">gen_sbc_CC</name><argument_list pos:start="1133:27" pos:end="1133:42">(<argument pos:start="1133:28" pos:end="1133:30"><expr pos:start="1133:28" pos:end="1133:30"><name pos:start="1133:28" pos:end="1133:30">tmp</name></expr></argument>, <argument pos:start="1133:33" pos:end="1133:36"><expr pos:start="1133:33" pos:end="1133:36"><name pos:start="1133:33" pos:end="1133:36">tmp2</name></expr></argument>, <argument pos:start="1133:39" pos:end="1133:41"><expr pos:start="1133:39" pos:end="1133:41"><name pos:start="1133:39" pos:end="1133:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1135:15" pos:end="1139:13">else <block pos:start="1135:20" pos:end="1139:13">{<block_content pos:start="1137:17" pos:end="1137:46">

                <expr_stmt pos:start="1137:17" pos:end="1137:46"><expr pos:start="1137:17" pos:end="1137:45"><call pos:start="1137:17" pos:end="1137:45"><name pos:start="1137:17" pos:end="1137:29">gen_sub_carry</name><argument_list pos:start="1137:30" pos:end="1137:45">(<argument pos:start="1137:31" pos:end="1137:33"><expr pos:start="1137:31" pos:end="1137:33"><name pos:start="1137:31" pos:end="1137:33">tmp</name></expr></argument>, <argument pos:start="1137:36" pos:end="1137:39"><expr pos:start="1137:36" pos:end="1137:39"><name pos:start="1137:36" pos:end="1137:39">tmp2</name></expr></argument>, <argument pos:start="1137:42" pos:end="1137:44"><expr pos:start="1137:42" pos:end="1137:44"><name pos:start="1137:42" pos:end="1137:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1141:13" pos:end="1141:37"><expr pos:start="1141:13" pos:end="1141:36"><call pos:start="1141:13" pos:end="1141:36"><name pos:start="1141:13" pos:end="1141:24">store_reg_bx</name><argument_list pos:start="1141:25" pos:end="1141:36">(<argument pos:start="1141:26" pos:end="1141:26"><expr pos:start="1141:26" pos:end="1141:26"><name pos:start="1141:26" pos:end="1141:26">s</name></expr></argument>, <argument pos:start="1141:29" pos:end="1141:30"><expr pos:start="1141:29" pos:end="1141:30"><name pos:start="1141:29" pos:end="1141:30">rd</name></expr></argument>, <argument pos:start="1141:33" pos:end="1141:35"><expr pos:start="1141:33" pos:end="1141:35"><name pos:start="1141:33" pos:end="1141:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1143:13" pos:end="1143:18">break;</break>

        <case pos:start="1145:9" pos:end="1145:18">case <expr pos:start="1145:14" pos:end="1145:17"><literal type="number" pos:start="1145:14" pos:end="1145:17">0x08</literal></expr>:</case>

            <if_stmt pos:start="1147:13" pos:end="1153:13"><if pos:start="1147:13" pos:end="1153:13">if <condition pos:start="1147:16" pos:end="1147:23">(<expr pos:start="1147:17" pos:end="1147:22"><name pos:start="1147:17" pos:end="1147:22">set_cc</name></expr>)</condition> <block pos:start="1147:25" pos:end="1153:13">{<block_content pos:start="1149:17" pos:end="1151:34">

                <expr_stmt pos:start="1149:17" pos:end="1149:48"><expr pos:start="1149:17" pos:end="1149:47"><call pos:start="1149:17" pos:end="1149:47"><name pos:start="1149:17" pos:end="1149:31">tcg_gen_and_i32</name><argument_list pos:start="1149:32" pos:end="1149:47">(<argument pos:start="1149:33" pos:end="1149:35"><expr pos:start="1149:33" pos:end="1149:35"><name pos:start="1149:33" pos:end="1149:35">tmp</name></expr></argument>, <argument pos:start="1149:38" pos:end="1149:40"><expr pos:start="1149:38" pos:end="1149:40"><name pos:start="1149:38" pos:end="1149:40">tmp</name></expr></argument>, <argument pos:start="1149:43" pos:end="1149:46"><expr pos:start="1149:43" pos:end="1149:46"><name pos:start="1149:43" pos:end="1149:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1151:17" pos:end="1151:34"><expr pos:start="1151:17" pos:end="1151:33"><call pos:start="1151:17" pos:end="1151:33"><name pos:start="1151:17" pos:end="1151:28">gen_logic_CC</name><argument_list pos:start="1151:29" pos:end="1151:33">(<argument pos:start="1151:30" pos:end="1151:32"><expr pos:start="1151:30" pos:end="1151:32"><name pos:start="1151:30" pos:end="1151:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1155:13" pos:end="1155:35"><expr pos:start="1155:13" pos:end="1155:34"><call pos:start="1155:13" pos:end="1155:34"><name pos:start="1155:13" pos:end="1155:29">tcg_temp_free_i32</name><argument_list pos:start="1155:30" pos:end="1155:34">(<argument pos:start="1155:31" pos:end="1155:33"><expr pos:start="1155:31" pos:end="1155:33"><name pos:start="1155:31" pos:end="1155:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1157:13" pos:end="1157:18">break;</break>

        <case pos:start="1159:9" pos:end="1159:18">case <expr pos:start="1159:14" pos:end="1159:17"><literal type="number" pos:start="1159:14" pos:end="1159:17">0x09</literal></expr>:</case>

            <if_stmt pos:start="1161:13" pos:end="1167:13"><if pos:start="1161:13" pos:end="1167:13">if <condition pos:start="1161:16" pos:end="1161:23">(<expr pos:start="1161:17" pos:end="1161:22"><name pos:start="1161:17" pos:end="1161:22">set_cc</name></expr>)</condition> <block pos:start="1161:25" pos:end="1167:13">{<block_content pos:start="1163:17" pos:end="1165:34">

                <expr_stmt pos:start="1163:17" pos:end="1163:48"><expr pos:start="1163:17" pos:end="1163:47"><call pos:start="1163:17" pos:end="1163:47"><name pos:start="1163:17" pos:end="1163:31">tcg_gen_xor_i32</name><argument_list pos:start="1163:32" pos:end="1163:47">(<argument pos:start="1163:33" pos:end="1163:35"><expr pos:start="1163:33" pos:end="1163:35"><name pos:start="1163:33" pos:end="1163:35">tmp</name></expr></argument>, <argument pos:start="1163:38" pos:end="1163:40"><expr pos:start="1163:38" pos:end="1163:40"><name pos:start="1163:38" pos:end="1163:40">tmp</name></expr></argument>, <argument pos:start="1163:43" pos:end="1163:46"><expr pos:start="1163:43" pos:end="1163:46"><name pos:start="1163:43" pos:end="1163:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1165:17" pos:end="1165:34"><expr pos:start="1165:17" pos:end="1165:33"><call pos:start="1165:17" pos:end="1165:33"><name pos:start="1165:17" pos:end="1165:28">gen_logic_CC</name><argument_list pos:start="1165:29" pos:end="1165:33">(<argument pos:start="1165:30" pos:end="1165:32"><expr pos:start="1165:30" pos:end="1165:32"><name pos:start="1165:30" pos:end="1165:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1169:13" pos:end="1169:35"><expr pos:start="1169:13" pos:end="1169:34"><call pos:start="1169:13" pos:end="1169:34"><name pos:start="1169:13" pos:end="1169:29">tcg_temp_free_i32</name><argument_list pos:start="1169:30" pos:end="1169:34">(<argument pos:start="1169:31" pos:end="1169:33"><expr pos:start="1169:31" pos:end="1169:33"><name pos:start="1169:31" pos:end="1169:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1171:13" pos:end="1171:18">break;</break>

        <case pos:start="1173:9" pos:end="1173:18">case <expr pos:start="1173:14" pos:end="1173:17"><literal type="number" pos:start="1173:14" pos:end="1173:17">0x0a</literal></expr>:</case>

            <if_stmt pos:start="1175:13" pos:end="1179:13"><if pos:start="1175:13" pos:end="1179:13">if <condition pos:start="1175:16" pos:end="1175:23">(<expr pos:start="1175:17" pos:end="1175:22"><name pos:start="1175:17" pos:end="1175:22">set_cc</name></expr>)</condition> <block pos:start="1175:25" pos:end="1179:13">{<block_content pos:start="1177:17" pos:end="1177:43">

                <expr_stmt pos:start="1177:17" pos:end="1177:43"><expr pos:start="1177:17" pos:end="1177:42"><call pos:start="1177:17" pos:end="1177:42"><name pos:start="1177:17" pos:end="1177:26">gen_sub_CC</name><argument_list pos:start="1177:27" pos:end="1177:42">(<argument pos:start="1177:28" pos:end="1177:30"><expr pos:start="1177:28" pos:end="1177:30"><name pos:start="1177:28" pos:end="1177:30">tmp</name></expr></argument>, <argument pos:start="1177:33" pos:end="1177:35"><expr pos:start="1177:33" pos:end="1177:35"><name pos:start="1177:33" pos:end="1177:35">tmp</name></expr></argument>, <argument pos:start="1177:38" pos:end="1177:41"><expr pos:start="1177:38" pos:end="1177:41"><name pos:start="1177:38" pos:end="1177:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1181:13" pos:end="1181:35"><expr pos:start="1181:13" pos:end="1181:34"><call pos:start="1181:13" pos:end="1181:34"><name pos:start="1181:13" pos:end="1181:29">tcg_temp_free_i32</name><argument_list pos:start="1181:30" pos:end="1181:34">(<argument pos:start="1181:31" pos:end="1181:33"><expr pos:start="1181:31" pos:end="1181:33"><name pos:start="1181:31" pos:end="1181:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1183:13" pos:end="1183:18">break;</break>

        <case pos:start="1185:9" pos:end="1185:18">case <expr pos:start="1185:14" pos:end="1185:17"><literal type="number" pos:start="1185:14" pos:end="1185:17">0x0b</literal></expr>:</case>

            <if_stmt pos:start="1187:13" pos:end="1191:13"><if pos:start="1187:13" pos:end="1191:13">if <condition pos:start="1187:16" pos:end="1187:23">(<expr pos:start="1187:17" pos:end="1187:22"><name pos:start="1187:17" pos:end="1187:22">set_cc</name></expr>)</condition> <block pos:start="1187:25" pos:end="1191:13">{<block_content pos:start="1189:17" pos:end="1189:43">

                <expr_stmt pos:start="1189:17" pos:end="1189:43"><expr pos:start="1189:17" pos:end="1189:42"><call pos:start="1189:17" pos:end="1189:42"><name pos:start="1189:17" pos:end="1189:26">gen_add_CC</name><argument_list pos:start="1189:27" pos:end="1189:42">(<argument pos:start="1189:28" pos:end="1189:30"><expr pos:start="1189:28" pos:end="1189:30"><name pos:start="1189:28" pos:end="1189:30">tmp</name></expr></argument>, <argument pos:start="1189:33" pos:end="1189:35"><expr pos:start="1189:33" pos:end="1189:35"><name pos:start="1189:33" pos:end="1189:35">tmp</name></expr></argument>, <argument pos:start="1189:38" pos:end="1189:41"><expr pos:start="1189:38" pos:end="1189:41"><name pos:start="1189:38" pos:end="1189:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1193:13" pos:end="1193:35"><expr pos:start="1193:13" pos:end="1193:34"><call pos:start="1193:13" pos:end="1193:34"><name pos:start="1193:13" pos:end="1193:29">tcg_temp_free_i32</name><argument_list pos:start="1193:30" pos:end="1193:34">(<argument pos:start="1193:31" pos:end="1193:33"><expr pos:start="1193:31" pos:end="1193:33"><name pos:start="1193:31" pos:end="1193:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1195:13" pos:end="1195:18">break;</break>

        <case pos:start="1197:9" pos:end="1197:18">case <expr pos:start="1197:14" pos:end="1197:17"><literal type="number" pos:start="1197:14" pos:end="1197:17">0x0c</literal></expr>:</case>

            <expr_stmt pos:start="1199:13" pos:end="1199:43"><expr pos:start="1199:13" pos:end="1199:42"><call pos:start="1199:13" pos:end="1199:42"><name pos:start="1199:13" pos:end="1199:26">tcg_gen_or_i32</name><argument_list pos:start="1199:27" pos:end="1199:42">(<argument pos:start="1199:28" pos:end="1199:30"><expr pos:start="1199:28" pos:end="1199:30"><name pos:start="1199:28" pos:end="1199:30">tmp</name></expr></argument>, <argument pos:start="1199:33" pos:end="1199:35"><expr pos:start="1199:33" pos:end="1199:35"><name pos:start="1199:33" pos:end="1199:35">tmp</name></expr></argument>, <argument pos:start="1199:38" pos:end="1199:41"><expr pos:start="1199:38" pos:end="1199:41"><name pos:start="1199:38" pos:end="1199:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1201:13" pos:end="1205:13"><if pos:start="1201:13" pos:end="1205:13">if <condition pos:start="1201:16" pos:end="1201:25">(<expr pos:start="1201:17" pos:end="1201:24"><name pos:start="1201:17" pos:end="1201:24">logic_cc</name></expr>)</condition> <block pos:start="1201:27" pos:end="1205:13">{<block_content pos:start="1203:17" pos:end="1203:34">

                <expr_stmt pos:start="1203:17" pos:end="1203:34"><expr pos:start="1203:17" pos:end="1203:33"><call pos:start="1203:17" pos:end="1203:33"><name pos:start="1203:17" pos:end="1203:28">gen_logic_CC</name><argument_list pos:start="1203:29" pos:end="1203:33">(<argument pos:start="1203:30" pos:end="1203:32"><expr pos:start="1203:30" pos:end="1203:32"><name pos:start="1203:30" pos:end="1203:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1207:13" pos:end="1207:37"><expr pos:start="1207:13" pos:end="1207:36"><call pos:start="1207:13" pos:end="1207:36"><name pos:start="1207:13" pos:end="1207:24">store_reg_bx</name><argument_list pos:start="1207:25" pos:end="1207:36">(<argument pos:start="1207:26" pos:end="1207:26"><expr pos:start="1207:26" pos:end="1207:26"><name pos:start="1207:26" pos:end="1207:26">s</name></expr></argument>, <argument pos:start="1207:29" pos:end="1207:30"><expr pos:start="1207:29" pos:end="1207:30"><name pos:start="1207:29" pos:end="1207:30">rd</name></expr></argument>, <argument pos:start="1207:33" pos:end="1207:35"><expr pos:start="1207:33" pos:end="1207:35"><name pos:start="1207:33" pos:end="1207:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1209:13" pos:end="1209:18">break;</break>

        <case pos:start="1211:9" pos:end="1211:18">case <expr pos:start="1211:14" pos:end="1211:17"><literal type="number" pos:start="1211:14" pos:end="1211:17">0x0d</literal></expr>:</case>

            <if_stmt pos:start="1213:13" pos:end="1235:13"><if pos:start="1213:13" pos:end="1225:13">if <condition pos:start="1213:16" pos:end="1213:37">(<expr pos:start="1213:17" pos:end="1213:36"><name pos:start="1213:17" pos:end="1213:24">logic_cc</name> <operator pos:start="1213:26" pos:end="1213:27">&amp;&amp;</operator> <name pos:start="1213:29" pos:end="1213:30">rd</name> <operator pos:start="1213:32" pos:end="1213:33">==</operator> <literal type="number" pos:start="1213:35" pos:end="1213:36">15</literal></expr>)</condition> <block pos:start="1213:39" pos:end="1225:13">{<block_content pos:start="1217:17" pos:end="1223:46">

                <comment type="block" pos:start="1215:17" pos:end="1215:66">/* MOVS r15, ... is used for exception return.  */</comment>

                <if_stmt pos:start="1217:17" pos:end="1221:17"><if pos:start="1217:17" pos:end="1221:17">if <condition pos:start="1217:20" pos:end="1217:31">(<expr pos:start="1217:21" pos:end="1217:30"><call pos:start="1217:21" pos:end="1217:30"><name pos:start="1217:21" pos:end="1217:27">IS_USER</name><argument_list pos:start="1217:28" pos:end="1217:30">(<argument pos:start="1217:29" pos:end="1217:29"><expr pos:start="1217:29" pos:end="1217:29"><name pos:start="1217:29" pos:end="1217:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1217:33" pos:end="1221:17">{<block_content pos:start="1219:21" pos:end="1219:36">

                    <goto pos:start="1219:21" pos:end="1219:36">goto <name pos:start="1219:26" pos:end="1219:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1223:17" pos:end="1223:46"><expr pos:start="1223:17" pos:end="1223:45"><call pos:start="1223:17" pos:end="1223:45"><name pos:start="1223:17" pos:end="1223:36">gen_exception_return</name><argument_list pos:start="1223:37" pos:end="1223:45">(<argument pos:start="1223:38" pos:end="1223:38"><expr pos:start="1223:38" pos:end="1223:38"><name pos:start="1223:38" pos:end="1223:38">s</name></expr></argument>, <argument pos:start="1223:41" pos:end="1223:44"><expr pos:start="1223:41" pos:end="1223:44"><name pos:start="1223:41" pos:end="1223:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1225:15" pos:end="1235:13">else <block pos:start="1225:20" pos:end="1235:13">{<block_content pos:start="1227:17" pos:end="1233:42">

                <if_stmt pos:start="1227:17" pos:end="1231:17"><if pos:start="1227:17" pos:end="1231:17">if <condition pos:start="1227:20" pos:end="1227:29">(<expr pos:start="1227:21" pos:end="1227:28"><name pos:start="1227:21" pos:end="1227:28">logic_cc</name></expr>)</condition> <block pos:start="1227:31" pos:end="1231:17">{<block_content pos:start="1229:21" pos:end="1229:39">

                    <expr_stmt pos:start="1229:21" pos:end="1229:39"><expr pos:start="1229:21" pos:end="1229:38"><call pos:start="1229:21" pos:end="1229:38"><name pos:start="1229:21" pos:end="1229:32">gen_logic_CC</name><argument_list pos:start="1229:33" pos:end="1229:38">(<argument pos:start="1229:34" pos:end="1229:37"><expr pos:start="1229:34" pos:end="1229:37"><name pos:start="1229:34" pos:end="1229:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1233:17" pos:end="1233:42"><expr pos:start="1233:17" pos:end="1233:41"><call pos:start="1233:17" pos:end="1233:41"><name pos:start="1233:17" pos:end="1233:28">store_reg_bx</name><argument_list pos:start="1233:29" pos:end="1233:41">(<argument pos:start="1233:30" pos:end="1233:30"><expr pos:start="1233:30" pos:end="1233:30"><name pos:start="1233:30" pos:end="1233:30">s</name></expr></argument>, <argument pos:start="1233:33" pos:end="1233:34"><expr pos:start="1233:33" pos:end="1233:34"><name pos:start="1233:33" pos:end="1233:34">rd</name></expr></argument>, <argument pos:start="1233:37" pos:end="1233:40"><expr pos:start="1233:37" pos:end="1233:40"><name pos:start="1233:37" pos:end="1233:40">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1237:13" pos:end="1237:18">break;</break>

        <case pos:start="1239:9" pos:end="1239:18">case <expr pos:start="1239:14" pos:end="1239:17"><literal type="number" pos:start="1239:14" pos:end="1239:17">0x0e</literal></expr>:</case>

            <expr_stmt pos:start="1241:13" pos:end="1241:45"><expr pos:start="1241:13" pos:end="1241:44"><call pos:start="1241:13" pos:end="1241:44"><name pos:start="1241:13" pos:end="1241:28">tcg_gen_andc_i32</name><argument_list pos:start="1241:29" pos:end="1241:44">(<argument pos:start="1241:30" pos:end="1241:32"><expr pos:start="1241:30" pos:end="1241:32"><name pos:start="1241:30" pos:end="1241:32">tmp</name></expr></argument>, <argument pos:start="1241:35" pos:end="1241:37"><expr pos:start="1241:35" pos:end="1241:37"><name pos:start="1241:35" pos:end="1241:37">tmp</name></expr></argument>, <argument pos:start="1241:40" pos:end="1241:43"><expr pos:start="1241:40" pos:end="1241:43"><name pos:start="1241:40" pos:end="1241:43">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1243:13" pos:end="1247:13"><if pos:start="1243:13" pos:end="1247:13">if <condition pos:start="1243:16" pos:end="1243:25">(<expr pos:start="1243:17" pos:end="1243:24"><name pos:start="1243:17" pos:end="1243:24">logic_cc</name></expr>)</condition> <block pos:start="1243:27" pos:end="1247:13">{<block_content pos:start="1245:17" pos:end="1245:34">

                <expr_stmt pos:start="1245:17" pos:end="1245:34"><expr pos:start="1245:17" pos:end="1245:33"><call pos:start="1245:17" pos:end="1245:33"><name pos:start="1245:17" pos:end="1245:28">gen_logic_CC</name><argument_list pos:start="1245:29" pos:end="1245:33">(<argument pos:start="1245:30" pos:end="1245:32"><expr pos:start="1245:30" pos:end="1245:32"><name pos:start="1245:30" pos:end="1245:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1249:13" pos:end="1249:37"><expr pos:start="1249:13" pos:end="1249:36"><call pos:start="1249:13" pos:end="1249:36"><name pos:start="1249:13" pos:end="1249:24">store_reg_bx</name><argument_list pos:start="1249:25" pos:end="1249:36">(<argument pos:start="1249:26" pos:end="1249:26"><expr pos:start="1249:26" pos:end="1249:26"><name pos:start="1249:26" pos:end="1249:26">s</name></expr></argument>, <argument pos:start="1249:29" pos:end="1249:30"><expr pos:start="1249:29" pos:end="1249:30"><name pos:start="1249:29" pos:end="1249:30">rd</name></expr></argument>, <argument pos:start="1249:33" pos:end="1249:35"><expr pos:start="1249:33" pos:end="1249:35"><name pos:start="1249:33" pos:end="1249:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1251:13" pos:end="1251:18">break;</break>

        <default pos:start="1253:9" pos:end="1253:16">default:</default>

        <case pos:start="1255:9" pos:end="1255:18">case <expr pos:start="1255:14" pos:end="1255:17"><literal type="number" pos:start="1255:14" pos:end="1255:17">0x0f</literal></expr>:</case>

            <expr_stmt pos:start="1257:13" pos:end="1257:40"><expr pos:start="1257:13" pos:end="1257:39"><call pos:start="1257:13" pos:end="1257:39"><name pos:start="1257:13" pos:end="1257:27">tcg_gen_not_i32</name><argument_list pos:start="1257:28" pos:end="1257:39">(<argument pos:start="1257:29" pos:end="1257:32"><expr pos:start="1257:29" pos:end="1257:32"><name pos:start="1257:29" pos:end="1257:32">tmp2</name></expr></argument>, <argument pos:start="1257:35" pos:end="1257:38"><expr pos:start="1257:35" pos:end="1257:38"><name pos:start="1257:35" pos:end="1257:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1259:13" pos:end="1263:13"><if pos:start="1259:13" pos:end="1263:13">if <condition pos:start="1259:16" pos:end="1259:25">(<expr pos:start="1259:17" pos:end="1259:24"><name pos:start="1259:17" pos:end="1259:24">logic_cc</name></expr>)</condition> <block pos:start="1259:27" pos:end="1263:13">{<block_content pos:start="1261:17" pos:end="1261:35">

                <expr_stmt pos:start="1261:17" pos:end="1261:35"><expr pos:start="1261:17" pos:end="1261:34"><call pos:start="1261:17" pos:end="1261:34"><name pos:start="1261:17" pos:end="1261:28">gen_logic_CC</name><argument_list pos:start="1261:29" pos:end="1261:34">(<argument pos:start="1261:30" pos:end="1261:33"><expr pos:start="1261:30" pos:end="1261:33"><name pos:start="1261:30" pos:end="1261:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1265:13" pos:end="1265:38"><expr pos:start="1265:13" pos:end="1265:37"><call pos:start="1265:13" pos:end="1265:37"><name pos:start="1265:13" pos:end="1265:24">store_reg_bx</name><argument_list pos:start="1265:25" pos:end="1265:37">(<argument pos:start="1265:26" pos:end="1265:26"><expr pos:start="1265:26" pos:end="1265:26"><name pos:start="1265:26" pos:end="1265:26">s</name></expr></argument>, <argument pos:start="1265:29" pos:end="1265:30"><expr pos:start="1265:29" pos:end="1265:30"><name pos:start="1265:29" pos:end="1265:30">rd</name></expr></argument>, <argument pos:start="1265:33" pos:end="1265:36"><expr pos:start="1265:33" pos:end="1265:36"><name pos:start="1265:33" pos:end="1265:36">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1267:13" pos:end="1267:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="1271:9" pos:end="1275:9"><if pos:start="1271:9" pos:end="1275:9">if <condition pos:start="1271:12" pos:end="1271:39">(<expr pos:start="1271:13" pos:end="1271:38"><name pos:start="1271:13" pos:end="1271:15">op1</name> <operator pos:start="1271:17" pos:end="1271:18">!=</operator> <literal type="number" pos:start="1271:20" pos:end="1271:23">0x0f</literal> <operator pos:start="1271:25" pos:end="1271:26">&amp;&amp;</operator> <name pos:start="1271:28" pos:end="1271:30">op1</name> <operator pos:start="1271:32" pos:end="1271:33">!=</operator> <literal type="number" pos:start="1271:35" pos:end="1271:38">0x0d</literal></expr>)</condition> <block pos:start="1271:41" pos:end="1275:9">{<block_content pos:start="1273:13" pos:end="1273:36">

            <expr_stmt pos:start="1273:13" pos:end="1273:36"><expr pos:start="1273:13" pos:end="1273:35"><call pos:start="1273:13" pos:end="1273:35"><name pos:start="1273:13" pos:end="1273:29">tcg_temp_free_i32</name><argument_list pos:start="1273:30" pos:end="1273:35">(<argument pos:start="1273:31" pos:end="1273:34"><expr pos:start="1273:31" pos:end="1273:34"><name pos:start="1273:31" pos:end="1273:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="1277:7" pos:end="2909:5">else <block pos:start="1277:12" pos:end="2909:5">{<block_content pos:start="1281:9" pos:end="2907:9">

        <comment type="block" pos:start="1279:9" pos:end="1279:32">/* other instructions */</comment>

        <expr_stmt pos:start="1281:9" pos:end="1281:33"><expr pos:start="1281:9" pos:end="1281:32"><name pos:start="1281:9" pos:end="1281:11">op1</name> <operator pos:start="1281:13" pos:end="1281:13">=</operator> <operator pos:start="1281:15" pos:end="1281:15">(</operator><name pos:start="1281:16" pos:end="1281:19">insn</name> <operator pos:start="1281:21" pos:end="1281:22">&gt;&gt;</operator> <literal type="number" pos:start="1281:24" pos:end="1281:25">24</literal><operator pos:start="1281:26" pos:end="1281:26">)</operator> <operator pos:start="1281:28" pos:end="1281:28">&amp;</operator> <literal type="number" pos:start="1281:30" pos:end="1281:32">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="1283:9" pos:end="2907:9">switch<condition pos:start="1283:15" pos:end="1283:19">(<expr pos:start="1283:16" pos:end="1283:18"><name pos:start="1283:16" pos:end="1283:18">op1</name></expr>)</condition> <block pos:start="1283:21" pos:end="2907:9">{<block_content pos:start="1285:9" pos:end="2905:18">

        <case pos:start="1285:9" pos:end="1285:17">case <expr pos:start="1285:14" pos:end="1285:16"><literal type="number" pos:start="1285:14" pos:end="1285:16">0x0</literal></expr>:</case>

        <case pos:start="1287:9" pos:end="1287:17">case <expr pos:start="1287:14" pos:end="1287:16"><literal type="number" pos:start="1287:14" pos:end="1287:16">0x1</literal></expr>:</case>

            <comment type="block" pos:start="1289:13" pos:end="1289:47">/* multiplies, extra load/stores */</comment>

            <expr_stmt pos:start="1291:13" pos:end="1291:33"><expr pos:start="1291:13" pos:end="1291:32"><name pos:start="1291:13" pos:end="1291:14">sh</name> <operator pos:start="1291:16" pos:end="1291:16">=</operator> <operator pos:start="1291:18" pos:end="1291:18">(</operator><name pos:start="1291:19" pos:end="1291:22">insn</name> <operator pos:start="1291:24" pos:end="1291:25">&gt;&gt;</operator> <literal type="number" pos:start="1291:27" pos:end="1291:27">5</literal><operator pos:start="1291:28" pos:end="1291:28">)</operator> <operator pos:start="1291:30" pos:end="1291:30">&amp;</operator> <literal type="number" pos:start="1291:32" pos:end="1291:32">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1293:13" pos:end="1853:13"><if pos:start="1293:13" pos:end="1685:13">if <condition pos:start="1293:16" pos:end="1293:24">(<expr pos:start="1293:17" pos:end="1293:23"><name pos:start="1293:17" pos:end="1293:18">sh</name> <operator pos:start="1293:20" pos:end="1293:21">==</operator> <literal type="number" pos:start="1293:23" pos:end="1293:23">0</literal></expr>)</condition> <block pos:start="1293:26" pos:end="1685:13">{<block_content pos:start="1295:17" pos:end="1683:17">

                <if_stmt pos:start="1295:17" pos:end="1683:17"><if pos:start="1295:17" pos:end="1427:17">if <condition pos:start="1295:20" pos:end="1295:31">(<expr pos:start="1295:21" pos:end="1295:30"><name pos:start="1295:21" pos:end="1295:23">op1</name> <operator pos:start="1295:25" pos:end="1295:26">==</operator> <literal type="number" pos:start="1295:28" pos:end="1295:30">0x0</literal></expr>)</condition> <block pos:start="1295:33" pos:end="1427:17">{<block_content pos:start="1297:21" pos:end="1425:21">

                    <expr_stmt pos:start="1297:21" pos:end="1297:44"><expr pos:start="1297:21" pos:end="1297:43"><name pos:start="1297:21" pos:end="1297:22">rd</name> <operator pos:start="1297:24" pos:end="1297:24">=</operator> <operator pos:start="1297:26" pos:end="1297:26">(</operator><name pos:start="1297:27" pos:end="1297:30">insn</name> <operator pos:start="1297:32" pos:end="1297:33">&gt;&gt;</operator> <literal type="number" pos:start="1297:35" pos:end="1297:36">16</literal><operator pos:start="1297:37" pos:end="1297:37">)</operator> <operator pos:start="1297:39" pos:end="1297:39">&amp;</operator> <literal type="number" pos:start="1297:41" pos:end="1297:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1299:21" pos:end="1299:44"><expr pos:start="1299:21" pos:end="1299:43"><name pos:start="1299:21" pos:end="1299:22">rn</name> <operator pos:start="1299:24" pos:end="1299:24">=</operator> <operator pos:start="1299:26" pos:end="1299:26">(</operator><name pos:start="1299:27" pos:end="1299:30">insn</name> <operator pos:start="1299:32" pos:end="1299:33">&gt;&gt;</operator> <literal type="number" pos:start="1299:35" pos:end="1299:36">12</literal><operator pos:start="1299:37" pos:end="1299:37">)</operator> <operator pos:start="1299:39" pos:end="1299:39">&amp;</operator> <literal type="number" pos:start="1299:41" pos:end="1299:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1301:21" pos:end="1301:43"><expr pos:start="1301:21" pos:end="1301:42"><name pos:start="1301:21" pos:end="1301:22">rs</name> <operator pos:start="1301:24" pos:end="1301:24">=</operator> <operator pos:start="1301:26" pos:end="1301:26">(</operator><name pos:start="1301:27" pos:end="1301:30">insn</name> <operator pos:start="1301:32" pos:end="1301:33">&gt;&gt;</operator> <literal type="number" pos:start="1301:35" pos:end="1301:35">8</literal><operator pos:start="1301:36" pos:end="1301:36">)</operator> <operator pos:start="1301:38" pos:end="1301:38">&amp;</operator> <literal type="number" pos:start="1301:40" pos:end="1301:42">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1303:21" pos:end="1303:38"><expr pos:start="1303:21" pos:end="1303:37"><name pos:start="1303:21" pos:end="1303:22">rm</name> <operator pos:start="1303:24" pos:end="1303:24">=</operator> <operator pos:start="1303:26" pos:end="1303:26">(</operator><name pos:start="1303:27" pos:end="1303:30">insn</name><operator pos:start="1303:31" pos:end="1303:31">)</operator> <operator pos:start="1303:33" pos:end="1303:33">&amp;</operator> <literal type="number" pos:start="1303:35" pos:end="1303:37">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1305:21" pos:end="1305:45"><expr pos:start="1305:21" pos:end="1305:44"><name pos:start="1305:21" pos:end="1305:23">op1</name> <operator pos:start="1305:25" pos:end="1305:25">=</operator> <operator pos:start="1305:27" pos:end="1305:27">(</operator><name pos:start="1305:28" pos:end="1305:31">insn</name> <operator pos:start="1305:33" pos:end="1305:34">&gt;&gt;</operator> <literal type="number" pos:start="1305:36" pos:end="1305:37">20</literal><operator pos:start="1305:38" pos:end="1305:38">)</operator> <operator pos:start="1305:40" pos:end="1305:40">&amp;</operator> <literal type="number" pos:start="1305:42" pos:end="1305:44">0xf</literal></expr>;</expr_stmt>

                    <switch pos:start="1307:21" pos:end="1425:21">switch <condition pos:start="1307:28" pos:end="1307:32">(<expr pos:start="1307:29" pos:end="1307:31"><name pos:start="1307:29" pos:end="1307:31">op1</name></expr>)</condition> <block pos:start="1307:34" pos:end="1425:21">{<block_content pos:start="1309:21" pos:end="1423:40">

                    <case pos:start="1309:21" pos:end="1309:27">case <expr pos:start="1309:26" pos:end="1309:26"><literal type="number" pos:start="1309:26" pos:end="1309:26">0</literal></expr>:</case> <case pos:start="1309:29" pos:end="1309:35">case <expr pos:start="1309:34" pos:end="1309:34"><literal type="number" pos:start="1309:34" pos:end="1309:34">1</literal></expr>:</case> <case pos:start="1309:37" pos:end="1309:43">case <expr pos:start="1309:42" pos:end="1309:42"><literal type="number" pos:start="1309:42" pos:end="1309:42">2</literal></expr>:</case> <case pos:start="1309:45" pos:end="1309:51">case <expr pos:start="1309:50" pos:end="1309:50"><literal type="number" pos:start="1309:50" pos:end="1309:50">3</literal></expr>:</case> <case pos:start="1309:53" pos:end="1309:59">case <expr pos:start="1309:58" pos:end="1309:58"><literal type="number" pos:start="1309:58" pos:end="1309:58">6</literal></expr>:</case>

                        <comment type="block" pos:start="1311:25" pos:end="1311:40">/* 32 bit mul */</comment>

                        <expr_stmt pos:start="1313:25" pos:end="1313:46"><expr pos:start="1313:25" pos:end="1313:45"><name pos:start="1313:25" pos:end="1313:27">tmp</name> <operator pos:start="1313:29" pos:end="1313:29">=</operator> <call pos:start="1313:31" pos:end="1313:45"><name pos:start="1313:31" pos:end="1313:38">load_reg</name><argument_list pos:start="1313:39" pos:end="1313:45">(<argument pos:start="1313:40" pos:end="1313:40"><expr pos:start="1313:40" pos:end="1313:40"><name pos:start="1313:40" pos:end="1313:40">s</name></expr></argument>, <argument pos:start="1313:43" pos:end="1313:44"><expr pos:start="1313:43" pos:end="1313:44"><name pos:start="1313:43" pos:end="1313:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1315:25" pos:end="1315:47"><expr pos:start="1315:25" pos:end="1315:46"><name pos:start="1315:25" pos:end="1315:28">tmp2</name> <operator pos:start="1315:30" pos:end="1315:30">=</operator> <call pos:start="1315:32" pos:end="1315:46"><name pos:start="1315:32" pos:end="1315:39">load_reg</name><argument_list pos:start="1315:40" pos:end="1315:46">(<argument pos:start="1315:41" pos:end="1315:41"><expr pos:start="1315:41" pos:end="1315:41"><name pos:start="1315:41" pos:end="1315:41">s</name></expr></argument>, <argument pos:start="1315:44" pos:end="1315:45"><expr pos:start="1315:44" pos:end="1315:45"><name pos:start="1315:44" pos:end="1315:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1317:25" pos:end="1317:56"><expr pos:start="1317:25" pos:end="1317:55"><call pos:start="1317:25" pos:end="1317:55"><name pos:start="1317:25" pos:end="1317:39">tcg_gen_mul_i32</name><argument_list pos:start="1317:40" pos:end="1317:55">(<argument pos:start="1317:41" pos:end="1317:43"><expr pos:start="1317:41" pos:end="1317:43"><name pos:start="1317:41" pos:end="1317:43">tmp</name></expr></argument>, <argument pos:start="1317:46" pos:end="1317:48"><expr pos:start="1317:46" pos:end="1317:48"><name pos:start="1317:46" pos:end="1317:48">tmp</name></expr></argument>, <argument pos:start="1317:51" pos:end="1317:54"><expr pos:start="1317:51" pos:end="1317:54"><name pos:start="1317:51" pos:end="1317:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1319:25" pos:end="1319:48"><expr pos:start="1319:25" pos:end="1319:47"><call pos:start="1319:25" pos:end="1319:47"><name pos:start="1319:25" pos:end="1319:41">tcg_temp_free_i32</name><argument_list pos:start="1319:42" pos:end="1319:47">(<argument pos:start="1319:43" pos:end="1319:46"><expr pos:start="1319:43" pos:end="1319:46"><name pos:start="1319:43" pos:end="1319:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1321:25" pos:end="1343:25"><if pos:start="1321:25" pos:end="1333:25">if <condition pos:start="1321:28" pos:end="1321:45">(<expr pos:start="1321:29" pos:end="1321:44"><name pos:start="1321:29" pos:end="1321:32">insn</name> <operator pos:start="1321:34" pos:end="1321:34">&amp;</operator> <operator pos:start="1321:36" pos:end="1321:36">(</operator><literal type="number" pos:start="1321:37" pos:end="1321:37">1</literal> <operator pos:start="1321:39" pos:end="1321:40">&lt;&lt;</operator> <literal type="number" pos:start="1321:42" pos:end="1321:43">22</literal><operator pos:start="1321:44" pos:end="1321:44">)</operator></expr>)</condition> <block pos:start="1321:47" pos:end="1333:25">{<block_content pos:start="1325:29" pos:end="1331:52">

                            <comment type="block" pos:start="1323:29" pos:end="1323:48">/* Subtract (mls) */</comment>

                            <expr_stmt pos:start="1325:29" pos:end="1325:38"><expr pos:start="1325:29" pos:end="1325:37"><call pos:start="1325:29" pos:end="1325:37"><name pos:start="1325:29" pos:end="1325:32">ARCH</name><argument_list pos:start="1325:33" pos:end="1325:37">(<argument pos:start="1325:34" pos:end="1325:36"><expr pos:start="1325:34" pos:end="1325:36"><literal type="number" pos:start="1325:34" pos:end="1325:36">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1327:29" pos:end="1327:51"><expr pos:start="1327:29" pos:end="1327:50"><name pos:start="1327:29" pos:end="1327:32">tmp2</name> <operator pos:start="1327:34" pos:end="1327:34">=</operator> <call pos:start="1327:36" pos:end="1327:50"><name pos:start="1327:36" pos:end="1327:43">load_reg</name><argument_list pos:start="1327:44" pos:end="1327:50">(<argument pos:start="1327:45" pos:end="1327:45"><expr pos:start="1327:45" pos:end="1327:45"><name pos:start="1327:45" pos:end="1327:45">s</name></expr></argument>, <argument pos:start="1327:48" pos:end="1327:49"><expr pos:start="1327:48" pos:end="1327:49"><name pos:start="1327:48" pos:end="1327:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1329:29" pos:end="1329:60"><expr pos:start="1329:29" pos:end="1329:59"><call pos:start="1329:29" pos:end="1329:59"><name pos:start="1329:29" pos:end="1329:43">tcg_gen_sub_i32</name><argument_list pos:start="1329:44" pos:end="1329:59">(<argument pos:start="1329:45" pos:end="1329:47"><expr pos:start="1329:45" pos:end="1329:47"><name pos:start="1329:45" pos:end="1329:47">tmp</name></expr></argument>, <argument pos:start="1329:50" pos:end="1329:53"><expr pos:start="1329:50" pos:end="1329:53"><name pos:start="1329:50" pos:end="1329:53">tmp2</name></expr></argument>, <argument pos:start="1329:56" pos:end="1329:58"><expr pos:start="1329:56" pos:end="1329:58"><name pos:start="1329:56" pos:end="1329:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1331:29" pos:end="1331:52"><expr pos:start="1331:29" pos:end="1331:51"><call pos:start="1331:29" pos:end="1331:51"><name pos:start="1331:29" pos:end="1331:45">tcg_temp_free_i32</name><argument_list pos:start="1331:46" pos:end="1331:51">(<argument pos:start="1331:47" pos:end="1331:50"><expr pos:start="1331:47" pos:end="1331:50"><name pos:start="1331:47" pos:end="1331:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="1333:27" pos:end="1343:25">else if <condition pos:start="1333:35" pos:end="1333:52">(<expr pos:start="1333:36" pos:end="1333:51"><name pos:start="1333:36" pos:end="1333:39">insn</name> <operator pos:start="1333:41" pos:end="1333:41">&amp;</operator> <operator pos:start="1333:43" pos:end="1333:43">(</operator><literal type="number" pos:start="1333:44" pos:end="1333:44">1</literal> <operator pos:start="1333:46" pos:end="1333:47">&lt;&lt;</operator> <literal type="number" pos:start="1333:49" pos:end="1333:50">21</literal><operator pos:start="1333:51" pos:end="1333:51">)</operator></expr>)</condition> <block pos:start="1333:54" pos:end="1343:25">{<block_content pos:start="1337:29" pos:end="1341:52">

                            <comment type="block" pos:start="1335:29" pos:end="1335:37">/* Add */</comment>

                            <expr_stmt pos:start="1337:29" pos:end="1337:51"><expr pos:start="1337:29" pos:end="1337:50"><name pos:start="1337:29" pos:end="1337:32">tmp2</name> <operator pos:start="1337:34" pos:end="1337:34">=</operator> <call pos:start="1337:36" pos:end="1337:50"><name pos:start="1337:36" pos:end="1337:43">load_reg</name><argument_list pos:start="1337:44" pos:end="1337:50">(<argument pos:start="1337:45" pos:end="1337:45"><expr pos:start="1337:45" pos:end="1337:45"><name pos:start="1337:45" pos:end="1337:45">s</name></expr></argument>, <argument pos:start="1337:48" pos:end="1337:49"><expr pos:start="1337:48" pos:end="1337:49"><name pos:start="1337:48" pos:end="1337:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1339:29" pos:end="1339:60"><expr pos:start="1339:29" pos:end="1339:59"><call pos:start="1339:29" pos:end="1339:59"><name pos:start="1339:29" pos:end="1339:43">tcg_gen_add_i32</name><argument_list pos:start="1339:44" pos:end="1339:59">(<argument pos:start="1339:45" pos:end="1339:47"><expr pos:start="1339:45" pos:end="1339:47"><name pos:start="1339:45" pos:end="1339:47">tmp</name></expr></argument>, <argument pos:start="1339:50" pos:end="1339:52"><expr pos:start="1339:50" pos:end="1339:52"><name pos:start="1339:50" pos:end="1339:52">tmp</name></expr></argument>, <argument pos:start="1339:55" pos:end="1339:58"><expr pos:start="1339:55" pos:end="1339:58"><name pos:start="1339:55" pos:end="1339:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1341:29" pos:end="1341:52"><expr pos:start="1341:29" pos:end="1341:51"><call pos:start="1341:29" pos:end="1341:51"><name pos:start="1341:29" pos:end="1341:45">tcg_temp_free_i32</name><argument_list pos:start="1341:46" pos:end="1341:51">(<argument pos:start="1341:47" pos:end="1341:50"><expr pos:start="1341:47" pos:end="1341:50"><name pos:start="1341:47" pos:end="1341:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1345:25" pos:end="1347:46"><if pos:start="1345:25" pos:end="1347:46">if <condition pos:start="1345:28" pos:end="1345:45">(<expr pos:start="1345:29" pos:end="1345:44"><name pos:start="1345:29" pos:end="1345:32">insn</name> <operator pos:start="1345:34" pos:end="1345:34">&amp;</operator> <operator pos:start="1345:36" pos:end="1345:36">(</operator><literal type="number" pos:start="1345:37" pos:end="1345:37">1</literal> <operator pos:start="1345:39" pos:end="1345:40">&lt;&lt;</operator> <literal type="number" pos:start="1345:42" pos:end="1345:43">20</literal><operator pos:start="1345:44" pos:end="1345:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1347:29" pos:end="1347:46"><block_content pos:start="1347:29" pos:end="1347:46">

                            <expr_stmt pos:start="1347:29" pos:end="1347:46"><expr pos:start="1347:29" pos:end="1347:45"><call pos:start="1347:29" pos:end="1347:45"><name pos:start="1347:29" pos:end="1347:40">gen_logic_CC</name><argument_list pos:start="1347:41" pos:end="1347:45">(<argument pos:start="1347:42" pos:end="1347:44"><expr pos:start="1347:42" pos:end="1347:44"><name pos:start="1347:42" pos:end="1347:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1349:25" pos:end="1349:46"><expr pos:start="1349:25" pos:end="1349:45"><call pos:start="1349:25" pos:end="1349:45"><name pos:start="1349:25" pos:end="1349:33">store_reg</name><argument_list pos:start="1349:34" pos:end="1349:45">(<argument pos:start="1349:35" pos:end="1349:35"><expr pos:start="1349:35" pos:end="1349:35"><name pos:start="1349:35" pos:end="1349:35">s</name></expr></argument>, <argument pos:start="1349:38" pos:end="1349:39"><expr pos:start="1349:38" pos:end="1349:39"><name pos:start="1349:38" pos:end="1349:39">rd</name></expr></argument>, <argument pos:start="1349:42" pos:end="1349:44"><expr pos:start="1349:42" pos:end="1349:44"><name pos:start="1349:42" pos:end="1349:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1351:25" pos:end="1351:30">break;</break>

                    <case pos:start="1353:21" pos:end="1353:27">case <expr pos:start="1353:26" pos:end="1353:26"><literal type="number" pos:start="1353:26" pos:end="1353:26">4</literal></expr>:</case>

                        <comment type="block" pos:start="1355:25" pos:end="1355:66">/* 64 bit mul double accumulate (UMAAL) */</comment>

                        <expr_stmt pos:start="1357:25" pos:end="1357:32"><expr pos:start="1357:25" pos:end="1357:31"><call pos:start="1357:25" pos:end="1357:31"><name pos:start="1357:25" pos:end="1357:28">ARCH</name><argument_list pos:start="1357:29" pos:end="1357:31">(<argument pos:start="1357:30" pos:end="1357:30"><expr pos:start="1357:30" pos:end="1357:30"><literal type="number" pos:start="1357:30" pos:end="1357:30">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1359:25" pos:end="1359:46"><expr pos:start="1359:25" pos:end="1359:45"><name pos:start="1359:25" pos:end="1359:27">tmp</name> <operator pos:start="1359:29" pos:end="1359:29">=</operator> <call pos:start="1359:31" pos:end="1359:45"><name pos:start="1359:31" pos:end="1359:38">load_reg</name><argument_list pos:start="1359:39" pos:end="1359:45">(<argument pos:start="1359:40" pos:end="1359:40"><expr pos:start="1359:40" pos:end="1359:40"><name pos:start="1359:40" pos:end="1359:40">s</name></expr></argument>, <argument pos:start="1359:43" pos:end="1359:44"><expr pos:start="1359:43" pos:end="1359:44"><name pos:start="1359:43" pos:end="1359:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1361:25" pos:end="1361:47"><expr pos:start="1361:25" pos:end="1361:46"><name pos:start="1361:25" pos:end="1361:28">tmp2</name> <operator pos:start="1361:30" pos:end="1361:30">=</operator> <call pos:start="1361:32" pos:end="1361:46"><name pos:start="1361:32" pos:end="1361:39">load_reg</name><argument_list pos:start="1361:40" pos:end="1361:46">(<argument pos:start="1361:41" pos:end="1361:41"><expr pos:start="1361:41" pos:end="1361:41"><name pos:start="1361:41" pos:end="1361:41">s</name></expr></argument>, <argument pos:start="1361:44" pos:end="1361:45"><expr pos:start="1361:44" pos:end="1361:45"><name pos:start="1361:44" pos:end="1361:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1363:25" pos:end="1363:60"><expr pos:start="1363:25" pos:end="1363:59"><name pos:start="1363:25" pos:end="1363:29">tmp64</name> <operator pos:start="1363:31" pos:end="1363:31">=</operator> <call pos:start="1363:33" pos:end="1363:59"><name pos:start="1363:33" pos:end="1363:48">gen_mulu_i64_i32</name><argument_list pos:start="1363:49" pos:end="1363:59">(<argument pos:start="1363:50" pos:end="1363:52"><expr pos:start="1363:50" pos:end="1363:52"><name pos:start="1363:50" pos:end="1363:52">tmp</name></expr></argument>, <argument pos:start="1363:55" pos:end="1363:58"><expr pos:start="1363:55" pos:end="1363:58"><name pos:start="1363:55" pos:end="1363:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1365:25" pos:end="1365:50"><expr pos:start="1365:25" pos:end="1365:49"><call pos:start="1365:25" pos:end="1365:49"><name pos:start="1365:25" pos:end="1365:35">gen_addq_lo</name><argument_list pos:start="1365:36" pos:end="1365:49">(<argument pos:start="1365:37" pos:end="1365:37"><expr pos:start="1365:37" pos:end="1365:37"><name pos:start="1365:37" pos:end="1365:37">s</name></expr></argument>, <argument pos:start="1365:40" pos:end="1365:44"><expr pos:start="1365:40" pos:end="1365:44"><name pos:start="1365:40" pos:end="1365:44">tmp64</name></expr></argument>, <argument pos:start="1365:47" pos:end="1365:48"><expr pos:start="1365:47" pos:end="1365:48"><name pos:start="1365:47" pos:end="1365:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1367:25" pos:end="1367:50"><expr pos:start="1367:25" pos:end="1367:49"><call pos:start="1367:25" pos:end="1367:49"><name pos:start="1367:25" pos:end="1367:35">gen_addq_lo</name><argument_list pos:start="1367:36" pos:end="1367:49">(<argument pos:start="1367:37" pos:end="1367:37"><expr pos:start="1367:37" pos:end="1367:37"><name pos:start="1367:37" pos:end="1367:37">s</name></expr></argument>, <argument pos:start="1367:40" pos:end="1367:44"><expr pos:start="1367:40" pos:end="1367:44"><name pos:start="1367:40" pos:end="1367:44">tmp64</name></expr></argument>, <argument pos:start="1367:47" pos:end="1367:48"><expr pos:start="1367:47" pos:end="1367:48"><name pos:start="1367:47" pos:end="1367:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1369:25" pos:end="1369:57"><expr pos:start="1369:25" pos:end="1369:56"><call pos:start="1369:25" pos:end="1369:56"><name pos:start="1369:25" pos:end="1369:38">gen_storeq_reg</name><argument_list pos:start="1369:39" pos:end="1369:56">(<argument pos:start="1369:40" pos:end="1369:40"><expr pos:start="1369:40" pos:end="1369:40"><name pos:start="1369:40" pos:end="1369:40">s</name></expr></argument>, <argument pos:start="1369:43" pos:end="1369:44"><expr pos:start="1369:43" pos:end="1369:44"><name pos:start="1369:43" pos:end="1369:44">rn</name></expr></argument>, <argument pos:start="1369:47" pos:end="1369:48"><expr pos:start="1369:47" pos:end="1369:48"><name pos:start="1369:47" pos:end="1369:48">rd</name></expr></argument>, <argument pos:start="1369:51" pos:end="1369:55"><expr pos:start="1369:51" pos:end="1369:55"><name pos:start="1369:51" pos:end="1369:55">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1371:25" pos:end="1371:49"><expr pos:start="1371:25" pos:end="1371:48"><call pos:start="1371:25" pos:end="1371:48"><name pos:start="1371:25" pos:end="1371:41">tcg_temp_free_i64</name><argument_list pos:start="1371:42" pos:end="1371:48">(<argument pos:start="1371:43" pos:end="1371:47"><expr pos:start="1371:43" pos:end="1371:47"><name pos:start="1371:43" pos:end="1371:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1373:25" pos:end="1373:30">break;</break>

                    <case pos:start="1375:21" pos:end="1375:27">case <expr pos:start="1375:26" pos:end="1375:26"><literal type="number" pos:start="1375:26" pos:end="1375:26">8</literal></expr>:</case> <case pos:start="1375:29" pos:end="1375:35">case <expr pos:start="1375:34" pos:end="1375:34"><literal type="number" pos:start="1375:34" pos:end="1375:34">9</literal></expr>:</case> <case pos:start="1375:37" pos:end="1375:44">case <expr pos:start="1375:42" pos:end="1375:43"><literal type="number" pos:start="1375:42" pos:end="1375:43">10</literal></expr>:</case> <case pos:start="1375:46" pos:end="1375:53">case <expr pos:start="1375:51" pos:end="1375:52"><literal type="number" pos:start="1375:51" pos:end="1375:52">11</literal></expr>:</case>

                    <case pos:start="1377:21" pos:end="1377:28">case <expr pos:start="1377:26" pos:end="1377:27"><literal type="number" pos:start="1377:26" pos:end="1377:27">12</literal></expr>:</case> <case pos:start="1377:30" pos:end="1377:37">case <expr pos:start="1377:35" pos:end="1377:36"><literal type="number" pos:start="1377:35" pos:end="1377:36">13</literal></expr>:</case> <case pos:start="1377:39" pos:end="1377:46">case <expr pos:start="1377:44" pos:end="1377:45"><literal type="number" pos:start="1377:44" pos:end="1377:45">14</literal></expr>:</case> <case pos:start="1377:48" pos:end="1377:55">case <expr pos:start="1377:53" pos:end="1377:54"><literal type="number" pos:start="1377:53" pos:end="1377:54">15</literal></expr>:</case>

                        <comment type="block" pos:start="1379:25" pos:end="1379:69">/* 64 bit mul: UMULL, UMLAL, SMULL, SMLAL. */</comment>

                        <expr_stmt pos:start="1381:25" pos:end="1381:46"><expr pos:start="1381:25" pos:end="1381:45"><name pos:start="1381:25" pos:end="1381:27">tmp</name> <operator pos:start="1381:29" pos:end="1381:29">=</operator> <call pos:start="1381:31" pos:end="1381:45"><name pos:start="1381:31" pos:end="1381:38">load_reg</name><argument_list pos:start="1381:39" pos:end="1381:45">(<argument pos:start="1381:40" pos:end="1381:40"><expr pos:start="1381:40" pos:end="1381:40"><name pos:start="1381:40" pos:end="1381:40">s</name></expr></argument>, <argument pos:start="1381:43" pos:end="1381:44"><expr pos:start="1381:43" pos:end="1381:44"><name pos:start="1381:43" pos:end="1381:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1383:25" pos:end="1383:47"><expr pos:start="1383:25" pos:end="1383:46"><name pos:start="1383:25" pos:end="1383:28">tmp2</name> <operator pos:start="1383:30" pos:end="1383:30">=</operator> <call pos:start="1383:32" pos:end="1383:46"><name pos:start="1383:32" pos:end="1383:39">load_reg</name><argument_list pos:start="1383:40" pos:end="1383:46">(<argument pos:start="1383:41" pos:end="1383:41"><expr pos:start="1383:41" pos:end="1383:41"><name pos:start="1383:41" pos:end="1383:41">s</name></expr></argument>, <argument pos:start="1383:44" pos:end="1383:45"><expr pos:start="1383:44" pos:end="1383:45"><name pos:start="1383:44" pos:end="1383:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1385:25" pos:end="1393:25"><if pos:start="1385:25" pos:end="1389:25">if <condition pos:start="1385:28" pos:end="1385:45">(<expr pos:start="1385:29" pos:end="1385:44"><name pos:start="1385:29" pos:end="1385:32">insn</name> <operator pos:start="1385:34" pos:end="1385:34">&amp;</operator> <operator pos:start="1385:36" pos:end="1385:36">(</operator><literal type="number" pos:start="1385:37" pos:end="1385:37">1</literal> <operator pos:start="1385:39" pos:end="1385:40">&lt;&lt;</operator> <literal type="number" pos:start="1385:42" pos:end="1385:43">22</literal><operator pos:start="1385:44" pos:end="1385:44">)</operator></expr>)</condition> <block pos:start="1385:47" pos:end="1389:25">{<block_content pos:start="1387:29" pos:end="1387:68">

                            <expr_stmt pos:start="1387:29" pos:end="1387:68"><expr pos:start="1387:29" pos:end="1387:67"><call pos:start="1387:29" pos:end="1387:67"><name pos:start="1387:29" pos:end="1387:45">tcg_gen_muls2_i32</name><argument_list pos:start="1387:46" pos:end="1387:67">(<argument pos:start="1387:47" pos:end="1387:49"><expr pos:start="1387:47" pos:end="1387:49"><name pos:start="1387:47" pos:end="1387:49">tmp</name></expr></argument>, <argument pos:start="1387:52" pos:end="1387:55"><expr pos:start="1387:52" pos:end="1387:55"><name pos:start="1387:52" pos:end="1387:55">tmp2</name></expr></argument>, <argument pos:start="1387:58" pos:end="1387:60"><expr pos:start="1387:58" pos:end="1387:60"><name pos:start="1387:58" pos:end="1387:60">tmp</name></expr></argument>, <argument pos:start="1387:63" pos:end="1387:66"><expr pos:start="1387:63" pos:end="1387:66"><name pos:start="1387:63" pos:end="1387:66">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1389:27" pos:end="1393:25">else <block pos:start="1389:32" pos:end="1393:25">{<block_content pos:start="1391:29" pos:end="1391:68">

                            <expr_stmt pos:start="1391:29" pos:end="1391:68"><expr pos:start="1391:29" pos:end="1391:67"><call pos:start="1391:29" pos:end="1391:67"><name pos:start="1391:29" pos:end="1391:45">tcg_gen_mulu2_i32</name><argument_list pos:start="1391:46" pos:end="1391:67">(<argument pos:start="1391:47" pos:end="1391:49"><expr pos:start="1391:47" pos:end="1391:49"><name pos:start="1391:47" pos:end="1391:49">tmp</name></expr></argument>, <argument pos:start="1391:52" pos:end="1391:55"><expr pos:start="1391:52" pos:end="1391:55"><name pos:start="1391:52" pos:end="1391:55">tmp2</name></expr></argument>, <argument pos:start="1391:58" pos:end="1391:60"><expr pos:start="1391:58" pos:end="1391:60"><name pos:start="1391:58" pos:end="1391:60">tmp</name></expr></argument>, <argument pos:start="1391:63" pos:end="1391:66"><expr pos:start="1391:63" pos:end="1391:66"><name pos:start="1391:63" pos:end="1391:66">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="1395:25" pos:end="1407:25"><if pos:start="1395:25" pos:end="1407:25">if <condition pos:start="1395:28" pos:end="1395:45">(<expr pos:start="1395:29" pos:end="1395:44"><name pos:start="1395:29" pos:end="1395:32">insn</name> <operator pos:start="1395:34" pos:end="1395:34">&amp;</operator> <operator pos:start="1395:36" pos:end="1395:36">(</operator><literal type="number" pos:start="1395:37" pos:end="1395:37">1</literal> <operator pos:start="1395:39" pos:end="1395:40">&lt;&lt;</operator> <literal type="number" pos:start="1395:42" pos:end="1395:43">21</literal><operator pos:start="1395:44" pos:end="1395:44">)</operator></expr>)</condition> <block pos:start="1395:47" pos:end="1407:25">{<block_content pos:start="1397:29" pos:end="1405:50"> <comment type="block" pos:start="1395:49" pos:end="1395:69">/* mult accumulate */</comment>

                            <decl_stmt pos:start="1397:29" pos:end="1397:58"><decl pos:start="1397:29" pos:end="1397:57"><type pos:start="1397:29" pos:end="1397:36"><name pos:start="1397:29" pos:end="1397:36">TCGv_i32</name></type> <name pos:start="1397:38" pos:end="1397:39">al</name> <init pos:start="1397:41" pos:end="1397:57">= <expr pos:start="1397:43" pos:end="1397:57"><call pos:start="1397:43" pos:end="1397:57"><name pos:start="1397:43" pos:end="1397:50">load_reg</name><argument_list pos:start="1397:51" pos:end="1397:57">(<argument pos:start="1397:52" pos:end="1397:52"><expr pos:start="1397:52" pos:end="1397:52"><name pos:start="1397:52" pos:end="1397:52">s</name></expr></argument>, <argument pos:start="1397:55" pos:end="1397:56"><expr pos:start="1397:55" pos:end="1397:56"><name pos:start="1397:55" pos:end="1397:56">rn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="1399:29" pos:end="1399:58"><decl pos:start="1399:29" pos:end="1399:57"><type pos:start="1399:29" pos:end="1399:36"><name pos:start="1399:29" pos:end="1399:36">TCGv_i32</name></type> <name pos:start="1399:38" pos:end="1399:39">ah</name> <init pos:start="1399:41" pos:end="1399:57">= <expr pos:start="1399:43" pos:end="1399:57"><call pos:start="1399:43" pos:end="1399:57"><name pos:start="1399:43" pos:end="1399:50">load_reg</name><argument_list pos:start="1399:51" pos:end="1399:57">(<argument pos:start="1399:52" pos:end="1399:52"><expr pos:start="1399:52" pos:end="1399:52"><name pos:start="1399:52" pos:end="1399:52">s</name></expr></argument>, <argument pos:start="1399:55" pos:end="1399:56"><expr pos:start="1399:55" pos:end="1399:56"><name pos:start="1399:55" pos:end="1399:56">rd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="1401:29" pos:end="1401:75"><expr pos:start="1401:29" pos:end="1401:74"><call pos:start="1401:29" pos:end="1401:74"><name pos:start="1401:29" pos:end="1401:44">tcg_gen_add2_i32</name><argument_list pos:start="1401:45" pos:end="1401:74">(<argument pos:start="1401:46" pos:end="1401:48"><expr pos:start="1401:46" pos:end="1401:48"><name pos:start="1401:46" pos:end="1401:48">tmp</name></expr></argument>, <argument pos:start="1401:51" pos:end="1401:54"><expr pos:start="1401:51" pos:end="1401:54"><name pos:start="1401:51" pos:end="1401:54">tmp2</name></expr></argument>, <argument pos:start="1401:57" pos:end="1401:59"><expr pos:start="1401:57" pos:end="1401:59"><name pos:start="1401:57" pos:end="1401:59">tmp</name></expr></argument>, <argument pos:start="1401:62" pos:end="1401:65"><expr pos:start="1401:62" pos:end="1401:65"><name pos:start="1401:62" pos:end="1401:65">tmp2</name></expr></argument>, <argument pos:start="1401:68" pos:end="1401:69"><expr pos:start="1401:68" pos:end="1401:69"><name pos:start="1401:68" pos:end="1401:69">al</name></expr></argument>, <argument pos:start="1401:72" pos:end="1401:73"><expr pos:start="1401:72" pos:end="1401:73"><name pos:start="1401:72" pos:end="1401:73">ah</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1403:29" pos:end="1403:50"><expr pos:start="1403:29" pos:end="1403:49"><call pos:start="1403:29" pos:end="1403:49"><name pos:start="1403:29" pos:end="1403:45">tcg_temp_free_i32</name><argument_list pos:start="1403:46" pos:end="1403:49">(<argument pos:start="1403:47" pos:end="1403:48"><expr pos:start="1403:47" pos:end="1403:48"><name pos:start="1403:47" pos:end="1403:48">al</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1405:29" pos:end="1405:50"><expr pos:start="1405:29" pos:end="1405:49"><call pos:start="1405:29" pos:end="1405:49"><name pos:start="1405:29" pos:end="1405:45">tcg_temp_free_i32</name><argument_list pos:start="1405:46" pos:end="1405:49">(<argument pos:start="1405:47" pos:end="1405:48"><expr pos:start="1405:47" pos:end="1405:48"><name pos:start="1405:47" pos:end="1405:48">ah</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1409:25" pos:end="1413:25"><if pos:start="1409:25" pos:end="1413:25">if <condition pos:start="1409:28" pos:end="1409:45">(<expr pos:start="1409:29" pos:end="1409:44"><name pos:start="1409:29" pos:end="1409:32">insn</name> <operator pos:start="1409:34" pos:end="1409:34">&amp;</operator> <operator pos:start="1409:36" pos:end="1409:36">(</operator><literal type="number" pos:start="1409:37" pos:end="1409:37">1</literal> <operator pos:start="1409:39" pos:end="1409:40">&lt;&lt;</operator> <literal type="number" pos:start="1409:42" pos:end="1409:43">20</literal><operator pos:start="1409:44" pos:end="1409:44">)</operator></expr>)</condition> <block pos:start="1409:47" pos:end="1413:25">{<block_content pos:start="1411:29" pos:end="1411:53">

                            <expr_stmt pos:start="1411:29" pos:end="1411:53"><expr pos:start="1411:29" pos:end="1411:52"><call pos:start="1411:29" pos:end="1411:52"><name pos:start="1411:29" pos:end="1411:41">gen_logicq_cc</name><argument_list pos:start="1411:42" pos:end="1411:52">(<argument pos:start="1411:43" pos:end="1411:45"><expr pos:start="1411:43" pos:end="1411:45"><name pos:start="1411:43" pos:end="1411:45">tmp</name></expr></argument>, <argument pos:start="1411:48" pos:end="1411:51"><expr pos:start="1411:48" pos:end="1411:51"><name pos:start="1411:48" pos:end="1411:51">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1415:25" pos:end="1415:46"><expr pos:start="1415:25" pos:end="1415:45"><call pos:start="1415:25" pos:end="1415:45"><name pos:start="1415:25" pos:end="1415:33">store_reg</name><argument_list pos:start="1415:34" pos:end="1415:45">(<argument pos:start="1415:35" pos:end="1415:35"><expr pos:start="1415:35" pos:end="1415:35"><name pos:start="1415:35" pos:end="1415:35">s</name></expr></argument>, <argument pos:start="1415:38" pos:end="1415:39"><expr pos:start="1415:38" pos:end="1415:39"><name pos:start="1415:38" pos:end="1415:39">rn</name></expr></argument>, <argument pos:start="1415:42" pos:end="1415:44"><expr pos:start="1415:42" pos:end="1415:44"><name pos:start="1415:42" pos:end="1415:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1417:25" pos:end="1417:47"><expr pos:start="1417:25" pos:end="1417:46"><call pos:start="1417:25" pos:end="1417:46"><name pos:start="1417:25" pos:end="1417:33">store_reg</name><argument_list pos:start="1417:34" pos:end="1417:46">(<argument pos:start="1417:35" pos:end="1417:35"><expr pos:start="1417:35" pos:end="1417:35"><name pos:start="1417:35" pos:end="1417:35">s</name></expr></argument>, <argument pos:start="1417:38" pos:end="1417:39"><expr pos:start="1417:38" pos:end="1417:39"><name pos:start="1417:38" pos:end="1417:39">rd</name></expr></argument>, <argument pos:start="1417:42" pos:end="1417:45"><expr pos:start="1417:42" pos:end="1417:45"><name pos:start="1417:42" pos:end="1417:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1419:25" pos:end="1419:30">break;</break>

                    <default pos:start="1421:21" pos:end="1421:28">default:</default>

                        <goto pos:start="1423:25" pos:end="1423:40">goto <name pos:start="1423:30" pos:end="1423:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                </block_content>}</block></if> <else pos:start="1427:19" pos:end="1683:17">else <block pos:start="1427:24" pos:end="1683:17">{<block_content pos:start="1429:21" pos:end="1681:21">

                    <expr_stmt pos:start="1429:21" pos:end="1429:44"><expr pos:start="1429:21" pos:end="1429:43"><name pos:start="1429:21" pos:end="1429:22">rn</name> <operator pos:start="1429:24" pos:end="1429:24">=</operator> <operator pos:start="1429:26" pos:end="1429:26">(</operator><name pos:start="1429:27" pos:end="1429:30">insn</name> <operator pos:start="1429:32" pos:end="1429:33">&gt;&gt;</operator> <literal type="number" pos:start="1429:35" pos:end="1429:36">16</literal><operator pos:start="1429:37" pos:end="1429:37">)</operator> <operator pos:start="1429:39" pos:end="1429:39">&amp;</operator> <literal type="number" pos:start="1429:41" pos:end="1429:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1431:21" pos:end="1431:44"><expr pos:start="1431:21" pos:end="1431:43"><name pos:start="1431:21" pos:end="1431:22">rd</name> <operator pos:start="1431:24" pos:end="1431:24">=</operator> <operator pos:start="1431:26" pos:end="1431:26">(</operator><name pos:start="1431:27" pos:end="1431:30">insn</name> <operator pos:start="1431:32" pos:end="1431:33">&gt;&gt;</operator> <literal type="number" pos:start="1431:35" pos:end="1431:36">12</literal><operator pos:start="1431:37" pos:end="1431:37">)</operator> <operator pos:start="1431:39" pos:end="1431:39">&amp;</operator> <literal type="number" pos:start="1431:41" pos:end="1431:43">0xf</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1433:21" pos:end="1681:21"><if pos:start="1433:21" pos:end="1641:21">if <condition pos:start="1433:24" pos:end="1433:41">(<expr pos:start="1433:25" pos:end="1433:40"><name pos:start="1433:25" pos:end="1433:28">insn</name> <operator pos:start="1433:30" pos:end="1433:30">&amp;</operator> <operator pos:start="1433:32" pos:end="1433:32">(</operator><literal type="number" pos:start="1433:33" pos:end="1433:33">1</literal> <operator pos:start="1433:35" pos:end="1433:36">&lt;&lt;</operator> <literal type="number" pos:start="1433:38" pos:end="1433:39">23</literal><operator pos:start="1433:40" pos:end="1433:40">)</operator></expr>)</condition> <block pos:start="1433:43" pos:end="1641:21">{<block_content pos:start="1437:25" pos:end="1639:48">

                        <comment type="block" pos:start="1435:25" pos:end="1435:50">/* load/store exclusive */</comment>

                        <decl_stmt pos:start="1437:25" pos:end="1437:50"><decl pos:start="1437:25" pos:end="1437:49"><type pos:start="1437:25" pos:end="1437:27"><name pos:start="1437:25" pos:end="1437:27">int</name></type> <name pos:start="1437:29" pos:end="1437:31">op2</name> <init pos:start="1437:33" pos:end="1437:49">= <expr pos:start="1437:35" pos:end="1437:49"><operator pos:start="1437:35" pos:end="1437:35">(</operator><name pos:start="1437:36" pos:end="1437:39">insn</name> <operator pos:start="1437:41" pos:end="1437:42">&gt;&gt;</operator> <literal type="number" pos:start="1437:44" pos:end="1437:44">8</literal><operator pos:start="1437:45" pos:end="1437:45">)</operator> <operator pos:start="1437:47" pos:end="1437:47">&amp;</operator> <literal type="number" pos:start="1437:49" pos:end="1437:49">3</literal></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1439:25" pos:end="1439:49"><expr pos:start="1439:25" pos:end="1439:48"><name pos:start="1439:25" pos:end="1439:27">op1</name> <operator pos:start="1439:29" pos:end="1439:29">=</operator> <operator pos:start="1439:31" pos:end="1439:31">(</operator><name pos:start="1439:32" pos:end="1439:35">insn</name> <operator pos:start="1439:37" pos:end="1439:38">&gt;&gt;</operator> <literal type="number" pos:start="1439:40" pos:end="1439:41">21</literal><operator pos:start="1439:42" pos:end="1439:42">)</operator> <operator pos:start="1439:44" pos:end="1439:44">&amp;</operator> <literal type="number" pos:start="1439:46" pos:end="1439:48">0x3</literal></expr>;</expr_stmt>



                        <switch pos:start="1443:25" pos:end="1481:25">switch <condition pos:start="1443:32" pos:end="1443:36">(<expr pos:start="1443:33" pos:end="1443:35"><name pos:start="1443:33" pos:end="1443:35">op2</name></expr>)</condition> <block pos:start="1443:38" pos:end="1481:25">{<block_content pos:start="1445:25" pos:end="1479:34">

                        <case pos:start="1445:25" pos:end="1445:31">case <expr pos:start="1445:30" pos:end="1445:30"><literal type="number" pos:start="1445:30" pos:end="1445:30">0</literal></expr>:</case> <comment type="block" pos:start="1445:33" pos:end="1445:45">/* lda/stl */</comment>

                            <if_stmt pos:start="1447:29" pos:end="1451:29"><if pos:start="1447:29" pos:end="1451:29">if <condition pos:start="1447:32" pos:end="1447:41">(<expr pos:start="1447:33" pos:end="1447:40"><name pos:start="1447:33" pos:end="1447:35">op1</name> <operator pos:start="1447:37" pos:end="1447:38">==</operator> <literal type="number" pos:start="1447:40" pos:end="1447:40">1</literal></expr>)</condition> <block pos:start="1447:43" pos:end="1451:29">{<block_content pos:start="1449:33" pos:end="1449:48">

                                <goto pos:start="1449:33" pos:end="1449:48">goto <name pos:start="1449:38" pos:end="1449:47">illegal_op</name>;</goto>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="1453:29" pos:end="1453:36"><expr pos:start="1453:29" pos:end="1453:35"><call pos:start="1453:29" pos:end="1453:35"><name pos:start="1453:29" pos:end="1453:32">ARCH</name><argument_list pos:start="1453:33" pos:end="1453:35">(<argument pos:start="1453:34" pos:end="1453:34"><expr pos:start="1453:34" pos:end="1453:34"><literal type="number" pos:start="1453:34" pos:end="1453:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="1455:29" pos:end="1455:34">break;</break>

                        <case pos:start="1457:25" pos:end="1457:31">case <expr pos:start="1457:30" pos:end="1457:30"><literal type="number" pos:start="1457:30" pos:end="1457:30">1</literal></expr>:</case> <comment type="block" pos:start="1457:33" pos:end="1457:46">/* reserved */</comment>

                            <goto pos:start="1459:29" pos:end="1459:44">goto <name pos:start="1459:34" pos:end="1459:43">illegal_op</name>;</goto>

                        <case pos:start="1461:25" pos:end="1461:31">case <expr pos:start="1461:30" pos:end="1461:30"><literal type="number" pos:start="1461:30" pos:end="1461:30">2</literal></expr>:</case> <comment type="block" pos:start="1461:33" pos:end="1461:49">/* ldaex/stlex */</comment>

                            <expr_stmt pos:start="1463:29" pos:end="1463:36"><expr pos:start="1463:29" pos:end="1463:35"><call pos:start="1463:29" pos:end="1463:35"><name pos:start="1463:29" pos:end="1463:32">ARCH</name><argument_list pos:start="1463:33" pos:end="1463:35">(<argument pos:start="1463:34" pos:end="1463:34"><expr pos:start="1463:34" pos:end="1463:34"><literal type="number" pos:start="1463:34" pos:end="1463:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="1465:29" pos:end="1465:34">break;</break>

                        <case pos:start="1467:25" pos:end="1467:31">case <expr pos:start="1467:30" pos:end="1467:30"><literal type="number" pos:start="1467:30" pos:end="1467:30">3</literal></expr>:</case> <comment type="block" pos:start="1467:33" pos:end="1467:49">/* ldrex/strex */</comment>

                            <if_stmt pos:start="1469:29" pos:end="1477:29"><if pos:start="1469:29" pos:end="1473:29">if <condition pos:start="1469:32" pos:end="1469:36">(<expr pos:start="1469:33" pos:end="1469:35"><name pos:start="1469:33" pos:end="1469:35">op1</name></expr>)</condition> <block pos:start="1469:38" pos:end="1473:29">{<block_content pos:start="1471:33" pos:end="1471:41">

                                <expr_stmt pos:start="1471:33" pos:end="1471:41"><expr pos:start="1471:33" pos:end="1471:40"><call pos:start="1471:33" pos:end="1471:40"><name pos:start="1471:33" pos:end="1471:36">ARCH</name><argument_list pos:start="1471:37" pos:end="1471:40">(<argument pos:start="1471:38" pos:end="1471:39"><expr pos:start="1471:38" pos:end="1471:39"><literal type="number" pos:start="1471:38" pos:end="1471:39">6K</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1473:31" pos:end="1477:29">else <block pos:start="1473:36" pos:end="1477:29">{<block_content pos:start="1475:33" pos:end="1475:40">

                                <expr_stmt pos:start="1475:33" pos:end="1475:40"><expr pos:start="1475:33" pos:end="1475:39"><call pos:start="1475:33" pos:end="1475:39"><name pos:start="1475:33" pos:end="1475:36">ARCH</name><argument_list pos:start="1475:37" pos:end="1475:39">(<argument pos:start="1475:38" pos:end="1475:38"><expr pos:start="1475:38" pos:end="1475:38"><literal type="number" pos:start="1475:38" pos:end="1475:38">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <break pos:start="1479:29" pos:end="1479:34">break;</break>

                        </block_content>}</block></switch>



                        <expr_stmt pos:start="1485:25" pos:end="1485:56"><expr pos:start="1485:25" pos:end="1485:55"><name pos:start="1485:25" pos:end="1485:28">addr</name> <operator pos:start="1485:30" pos:end="1485:30">=</operator> <call pos:start="1485:32" pos:end="1485:55"><name pos:start="1485:32" pos:end="1485:53">tcg_temp_local_new_i32</name><argument_list pos:start="1485:54" pos:end="1485:55">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1487:25" pos:end="1487:50"><expr pos:start="1487:25" pos:end="1487:49"><call pos:start="1487:25" pos:end="1487:49"><name pos:start="1487:25" pos:end="1487:36">load_reg_var</name><argument_list pos:start="1487:37" pos:end="1487:49">(<argument pos:start="1487:38" pos:end="1487:38"><expr pos:start="1487:38" pos:end="1487:38"><name pos:start="1487:38" pos:end="1487:38">s</name></expr></argument>, <argument pos:start="1487:41" pos:end="1487:44"><expr pos:start="1487:41" pos:end="1487:44"><name pos:start="1487:41" pos:end="1487:44">addr</name></expr></argument>, <argument pos:start="1487:47" pos:end="1487:48"><expr pos:start="1487:47" pos:end="1487:48"><name pos:start="1487:47" pos:end="1487:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <comment type="block" pos:start="1491:25" pos:end="1495:38">/* Since the emulation does not have barriers,

                           the acquire/release semantics need no special

                           handling */</comment>

                        <if_stmt pos:start="1497:25" pos:end="1637:25"><if pos:start="1497:25" pos:end="1567:25">if <condition pos:start="1497:28" pos:end="1497:37">(<expr pos:start="1497:29" pos:end="1497:36"><name pos:start="1497:29" pos:end="1497:31">op2</name> <operator pos:start="1497:33" pos:end="1497:34">==</operator> <literal type="number" pos:start="1497:36" pos:end="1497:36">0</literal></expr>)</condition> <block pos:start="1497:39" pos:end="1567:25">{<block_content pos:start="1499:29" pos:end="1565:29">

                            <if_stmt pos:start="1499:29" pos:end="1565:29"><if pos:start="1499:29" pos:end="1531:29">if <condition pos:start="1499:32" pos:end="1499:49">(<expr pos:start="1499:33" pos:end="1499:48"><name pos:start="1499:33" pos:end="1499:36">insn</name> <operator pos:start="1499:38" pos:end="1499:38">&amp;</operator> <operator pos:start="1499:40" pos:end="1499:40">(</operator><literal type="number" pos:start="1499:41" pos:end="1499:41">1</literal> <operator pos:start="1499:43" pos:end="1499:44">&lt;&lt;</operator> <literal type="number" pos:start="1499:46" pos:end="1499:47">20</literal><operator pos:start="1499:48" pos:end="1499:48">)</operator></expr>)</condition> <block pos:start="1499:51" pos:end="1531:29">{<block_content pos:start="1501:33" pos:end="1529:54">

                                <expr_stmt pos:start="1501:33" pos:end="1501:57"><expr pos:start="1501:33" pos:end="1501:56"><name pos:start="1501:33" pos:end="1501:35">tmp</name> <operator pos:start="1501:37" pos:end="1501:37">=</operator> <call pos:start="1501:39" pos:end="1501:56"><name pos:start="1501:39" pos:end="1501:54">tcg_temp_new_i32</name><argument_list pos:start="1501:55" pos:end="1501:56">()</argument_list></call></expr>;</expr_stmt>

                                <switch pos:start="1503:33" pos:end="1527:33">switch <condition pos:start="1503:40" pos:end="1503:44">(<expr pos:start="1503:41" pos:end="1503:43"><name pos:start="1503:41" pos:end="1503:43">op1</name></expr>)</condition> <block pos:start="1503:46" pos:end="1527:33">{<block_content pos:start="1505:33" pos:end="1525:44">

                                <case pos:start="1505:33" pos:end="1505:39">case <expr pos:start="1505:38" pos:end="1505:38"><literal type="number" pos:start="1505:38" pos:end="1505:38">0</literal></expr>:</case> <comment type="block" pos:start="1505:41" pos:end="1505:49">/* lda */</comment>

                                    <expr_stmt pos:start="1507:37" pos:end="1507:80"><expr pos:start="1507:37" pos:end="1507:79"><call pos:start="1507:37" pos:end="1507:79"><name pos:start="1507:37" pos:end="1507:50">gen_aa32_ld32u</name><argument_list pos:start="1507:51" pos:end="1507:79">(<argument pos:start="1507:52" pos:end="1507:54"><expr pos:start="1507:52" pos:end="1507:54"><name pos:start="1507:52" pos:end="1507:54">tmp</name></expr></argument>, <argument pos:start="1507:57" pos:end="1507:60"><expr pos:start="1507:57" pos:end="1507:60"><name pos:start="1507:57" pos:end="1507:60">addr</name></expr></argument>, <argument pos:start="1507:63" pos:end="1507:78"><expr pos:start="1507:63" pos:end="1507:78"><call pos:start="1507:63" pos:end="1507:78"><name pos:start="1507:63" pos:end="1507:75">get_mem_index</name><argument_list pos:start="1507:76" pos:end="1507:78">(<argument pos:start="1507:77" pos:end="1507:77"><expr pos:start="1507:77" pos:end="1507:77"><name pos:start="1507:77" pos:end="1507:77">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1509:37" pos:end="1509:42">break;</break>

                                <case pos:start="1511:33" pos:end="1511:39">case <expr pos:start="1511:38" pos:end="1511:38"><literal type="number" pos:start="1511:38" pos:end="1511:38">2</literal></expr>:</case> <comment type="block" pos:start="1511:41" pos:end="1511:50">/* ldab */</comment>

                                    <expr_stmt pos:start="1513:37" pos:end="1513:79"><expr pos:start="1513:37" pos:end="1513:78"><call pos:start="1513:37" pos:end="1513:78"><name pos:start="1513:37" pos:end="1513:49">gen_aa32_ld8u</name><argument_list pos:start="1513:50" pos:end="1513:78">(<argument pos:start="1513:51" pos:end="1513:53"><expr pos:start="1513:51" pos:end="1513:53"><name pos:start="1513:51" pos:end="1513:53">tmp</name></expr></argument>, <argument pos:start="1513:56" pos:end="1513:59"><expr pos:start="1513:56" pos:end="1513:59"><name pos:start="1513:56" pos:end="1513:59">addr</name></expr></argument>, <argument pos:start="1513:62" pos:end="1513:77"><expr pos:start="1513:62" pos:end="1513:77"><call pos:start="1513:62" pos:end="1513:77"><name pos:start="1513:62" pos:end="1513:74">get_mem_index</name><argument_list pos:start="1513:75" pos:end="1513:77">(<argument pos:start="1513:76" pos:end="1513:76"><expr pos:start="1513:76" pos:end="1513:76"><name pos:start="1513:76" pos:end="1513:76">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1515:37" pos:end="1515:42">break;</break>

                                <case pos:start="1517:33" pos:end="1517:39">case <expr pos:start="1517:38" pos:end="1517:38"><literal type="number" pos:start="1517:38" pos:end="1517:38">3</literal></expr>:</case> <comment type="block" pos:start="1517:41" pos:end="1517:50">/* ldah */</comment>

                                    <expr_stmt pos:start="1519:37" pos:end="1519:80"><expr pos:start="1519:37" pos:end="1519:79"><call pos:start="1519:37" pos:end="1519:79"><name pos:start="1519:37" pos:end="1519:50">gen_aa32_ld16u</name><argument_list pos:start="1519:51" pos:end="1519:79">(<argument pos:start="1519:52" pos:end="1519:54"><expr pos:start="1519:52" pos:end="1519:54"><name pos:start="1519:52" pos:end="1519:54">tmp</name></expr></argument>, <argument pos:start="1519:57" pos:end="1519:60"><expr pos:start="1519:57" pos:end="1519:60"><name pos:start="1519:57" pos:end="1519:60">addr</name></expr></argument>, <argument pos:start="1519:63" pos:end="1519:78"><expr pos:start="1519:63" pos:end="1519:78"><call pos:start="1519:63" pos:end="1519:78"><name pos:start="1519:63" pos:end="1519:75">get_mem_index</name><argument_list pos:start="1519:76" pos:end="1519:78">(<argument pos:start="1519:77" pos:end="1519:77"><expr pos:start="1519:77" pos:end="1519:77"><name pos:start="1519:77" pos:end="1519:77">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1521:37" pos:end="1521:42">break;</break>

                                <default pos:start="1523:33" pos:end="1523:40">default:</default>

                                    <expr_stmt pos:start="1525:37" pos:end="1525:44"><expr pos:start="1525:37" pos:end="1525:43"><call pos:start="1525:37" pos:end="1525:43"><name pos:start="1525:37" pos:end="1525:41">abort</name><argument_list pos:start="1525:42" pos:end="1525:43">()</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></switch>

                                <expr_stmt pos:start="1529:33" pos:end="1529:54"><expr pos:start="1529:33" pos:end="1529:53"><call pos:start="1529:33" pos:end="1529:53"><name pos:start="1529:33" pos:end="1529:41">store_reg</name><argument_list pos:start="1529:42" pos:end="1529:53">(<argument pos:start="1529:43" pos:end="1529:43"><expr pos:start="1529:43" pos:end="1529:43"><name pos:start="1529:43" pos:end="1529:43">s</name></expr></argument>, <argument pos:start="1529:46" pos:end="1529:47"><expr pos:start="1529:46" pos:end="1529:47"><name pos:start="1529:46" pos:end="1529:47">rd</name></expr></argument>, <argument pos:start="1529:50" pos:end="1529:52"><expr pos:start="1529:50" pos:end="1529:52"><name pos:start="1529:50" pos:end="1529:52">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1531:31" pos:end="1565:29">else <block pos:start="1531:36" pos:end="1565:29">{<block_content pos:start="1533:33" pos:end="1563:55">

                                <expr_stmt pos:start="1533:33" pos:end="1533:48"><expr pos:start="1533:33" pos:end="1533:47"><name pos:start="1533:33" pos:end="1533:34">rm</name> <operator pos:start="1533:36" pos:end="1533:36">=</operator> <name pos:start="1533:38" pos:end="1533:41">insn</name> <operator pos:start="1533:43" pos:end="1533:43">&amp;</operator> <literal type="number" pos:start="1533:45" pos:end="1533:47">0xf</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="1535:33" pos:end="1535:54"><expr pos:start="1535:33" pos:end="1535:53"><name pos:start="1535:33" pos:end="1535:35">tmp</name> <operator pos:start="1535:37" pos:end="1535:37">=</operator> <call pos:start="1535:39" pos:end="1535:53"><name pos:start="1535:39" pos:end="1535:46">load_reg</name><argument_list pos:start="1535:47" pos:end="1535:53">(<argument pos:start="1535:48" pos:end="1535:48"><expr pos:start="1535:48" pos:end="1535:48"><name pos:start="1535:48" pos:end="1535:48">s</name></expr></argument>, <argument pos:start="1535:51" pos:end="1535:52"><expr pos:start="1535:51" pos:end="1535:52"><name pos:start="1535:51" pos:end="1535:52">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <switch pos:start="1537:33" pos:end="1561:33">switch <condition pos:start="1537:40" pos:end="1537:44">(<expr pos:start="1537:41" pos:end="1537:43"><name pos:start="1537:41" pos:end="1537:43">op1</name></expr>)</condition> <block pos:start="1537:46" pos:end="1561:33">{<block_content pos:start="1539:33" pos:end="1559:44">

                                <case pos:start="1539:33" pos:end="1539:39">case <expr pos:start="1539:38" pos:end="1539:38"><literal type="number" pos:start="1539:38" pos:end="1539:38">0</literal></expr>:</case> <comment type="block" pos:start="1539:41" pos:end="1539:49">/* stl */</comment>

                                    <expr_stmt pos:start="1541:37" pos:end="1541:79"><expr pos:start="1541:37" pos:end="1541:78"><call pos:start="1541:37" pos:end="1541:78"><name pos:start="1541:37" pos:end="1541:49">gen_aa32_st32</name><argument_list pos:start="1541:50" pos:end="1541:78">(<argument pos:start="1541:51" pos:end="1541:53"><expr pos:start="1541:51" pos:end="1541:53"><name pos:start="1541:51" pos:end="1541:53">tmp</name></expr></argument>, <argument pos:start="1541:56" pos:end="1541:59"><expr pos:start="1541:56" pos:end="1541:59"><name pos:start="1541:56" pos:end="1541:59">addr</name></expr></argument>, <argument pos:start="1541:62" pos:end="1541:77"><expr pos:start="1541:62" pos:end="1541:77"><call pos:start="1541:62" pos:end="1541:77"><name pos:start="1541:62" pos:end="1541:74">get_mem_index</name><argument_list pos:start="1541:75" pos:end="1541:77">(<argument pos:start="1541:76" pos:end="1541:76"><expr pos:start="1541:76" pos:end="1541:76"><name pos:start="1541:76" pos:end="1541:76">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1543:37" pos:end="1543:42">break;</break>

                                <case pos:start="1545:33" pos:end="1545:39">case <expr pos:start="1545:38" pos:end="1545:38"><literal type="number" pos:start="1545:38" pos:end="1545:38">2</literal></expr>:</case> <comment type="block" pos:start="1545:41" pos:end="1545:50">/* stlb */</comment>

                                    <expr_stmt pos:start="1547:37" pos:end="1547:78"><expr pos:start="1547:37" pos:end="1547:77"><call pos:start="1547:37" pos:end="1547:77"><name pos:start="1547:37" pos:end="1547:48">gen_aa32_st8</name><argument_list pos:start="1547:49" pos:end="1547:77">(<argument pos:start="1547:50" pos:end="1547:52"><expr pos:start="1547:50" pos:end="1547:52"><name pos:start="1547:50" pos:end="1547:52">tmp</name></expr></argument>, <argument pos:start="1547:55" pos:end="1547:58"><expr pos:start="1547:55" pos:end="1547:58"><name pos:start="1547:55" pos:end="1547:58">addr</name></expr></argument>, <argument pos:start="1547:61" pos:end="1547:76"><expr pos:start="1547:61" pos:end="1547:76"><call pos:start="1547:61" pos:end="1547:76"><name pos:start="1547:61" pos:end="1547:73">get_mem_index</name><argument_list pos:start="1547:74" pos:end="1547:76">(<argument pos:start="1547:75" pos:end="1547:75"><expr pos:start="1547:75" pos:end="1547:75"><name pos:start="1547:75" pos:end="1547:75">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1549:37" pos:end="1549:42">break;</break>

                                <case pos:start="1551:33" pos:end="1551:39">case <expr pos:start="1551:38" pos:end="1551:38"><literal type="number" pos:start="1551:38" pos:end="1551:38">3</literal></expr>:</case> <comment type="block" pos:start="1551:41" pos:end="1551:50">/* stlh */</comment>

                                    <expr_stmt pos:start="1553:37" pos:end="1553:79"><expr pos:start="1553:37" pos:end="1553:78"><call pos:start="1553:37" pos:end="1553:78"><name pos:start="1553:37" pos:end="1553:49">gen_aa32_st16</name><argument_list pos:start="1553:50" pos:end="1553:78">(<argument pos:start="1553:51" pos:end="1553:53"><expr pos:start="1553:51" pos:end="1553:53"><name pos:start="1553:51" pos:end="1553:53">tmp</name></expr></argument>, <argument pos:start="1553:56" pos:end="1553:59"><expr pos:start="1553:56" pos:end="1553:59"><name pos:start="1553:56" pos:end="1553:59">addr</name></expr></argument>, <argument pos:start="1553:62" pos:end="1553:77"><expr pos:start="1553:62" pos:end="1553:77"><call pos:start="1553:62" pos:end="1553:77"><name pos:start="1553:62" pos:end="1553:74">get_mem_index</name><argument_list pos:start="1553:75" pos:end="1553:77">(<argument pos:start="1553:76" pos:end="1553:76"><expr pos:start="1553:76" pos:end="1553:76"><name pos:start="1553:76" pos:end="1553:76">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1555:37" pos:end="1555:42">break;</break>

                                <default pos:start="1557:33" pos:end="1557:40">default:</default>

                                    <expr_stmt pos:start="1559:37" pos:end="1559:44"><expr pos:start="1559:37" pos:end="1559:43"><call pos:start="1559:37" pos:end="1559:43"><name pos:start="1559:37" pos:end="1559:41">abort</name><argument_list pos:start="1559:42" pos:end="1559:43">()</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></switch>

                                <expr_stmt pos:start="1563:33" pos:end="1563:55"><expr pos:start="1563:33" pos:end="1563:54"><call pos:start="1563:33" pos:end="1563:54"><name pos:start="1563:33" pos:end="1563:49">tcg_temp_free_i32</name><argument_list pos:start="1563:50" pos:end="1563:54">(<argument pos:start="1563:51" pos:end="1563:53"><expr pos:start="1563:51" pos:end="1563:53"><name pos:start="1563:51" pos:end="1563:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="1567:27" pos:end="1601:25">else if <condition pos:start="1567:35" pos:end="1567:52">(<expr pos:start="1567:36" pos:end="1567:51"><name pos:start="1567:36" pos:end="1567:39">insn</name> <operator pos:start="1567:41" pos:end="1567:41">&amp;</operator> <operator pos:start="1567:43" pos:end="1567:43">(</operator><literal type="number" pos:start="1567:44" pos:end="1567:44">1</literal> <operator pos:start="1567:46" pos:end="1567:47">&lt;&lt;</operator> <literal type="number" pos:start="1567:49" pos:end="1567:50">20</literal><operator pos:start="1567:51" pos:end="1567:51">)</operator></expr>)</condition> <block pos:start="1567:54" pos:end="1601:25">{<block_content pos:start="1569:29" pos:end="1599:29">

                            <switch pos:start="1569:29" pos:end="1599:29">switch <condition pos:start="1569:36" pos:end="1569:40">(<expr pos:start="1569:37" pos:end="1569:39"><name pos:start="1569:37" pos:end="1569:39">op1</name></expr>)</condition> <block pos:start="1569:42" pos:end="1599:29">{<block_content pos:start="1571:29" pos:end="1597:40">

                            <case pos:start="1571:29" pos:end="1571:35">case <expr pos:start="1571:34" pos:end="1571:34"><literal type="number" pos:start="1571:34" pos:end="1571:34">0</literal></expr>:</case> <comment type="block" pos:start="1571:37" pos:end="1571:47">/* ldrex */</comment>

                                <expr_stmt pos:start="1573:33" pos:end="1573:71"><expr pos:start="1573:33" pos:end="1573:70"><call pos:start="1573:33" pos:end="1573:70"><name pos:start="1573:33" pos:end="1573:50">gen_load_exclusive</name><argument_list pos:start="1573:51" pos:end="1573:70">(<argument pos:start="1573:52" pos:end="1573:52"><expr pos:start="1573:52" pos:end="1573:52"><name pos:start="1573:52" pos:end="1573:52">s</name></expr></argument>, <argument pos:start="1573:55" pos:end="1573:56"><expr pos:start="1573:55" pos:end="1573:56"><name pos:start="1573:55" pos:end="1573:56">rd</name></expr></argument>, <argument pos:start="1573:59" pos:end="1573:60"><expr pos:start="1573:59" pos:end="1573:60"><literal type="number" pos:start="1573:59" pos:end="1573:60">15</literal></expr></argument>, <argument pos:start="1573:63" pos:end="1573:66"><expr pos:start="1573:63" pos:end="1573:66"><name pos:start="1573:63" pos:end="1573:66">addr</name></expr></argument>, <argument pos:start="1573:69" pos:end="1573:69"><expr pos:start="1573:69" pos:end="1573:69"><literal type="number" pos:start="1573:69" pos:end="1573:69">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1575:33" pos:end="1575:38">break;</break>

                            <case pos:start="1577:29" pos:end="1577:35">case <expr pos:start="1577:34" pos:end="1577:34"><literal type="number" pos:start="1577:34" pos:end="1577:34">1</literal></expr>:</case> <comment type="block" pos:start="1577:37" pos:end="1577:48">/* ldrexd */</comment>

                                <expr_stmt pos:start="1579:33" pos:end="1579:75"><expr pos:start="1579:33" pos:end="1579:74"><call pos:start="1579:33" pos:end="1579:74"><name pos:start="1579:33" pos:end="1579:50">gen_load_exclusive</name><argument_list pos:start="1579:51" pos:end="1579:74">(<argument pos:start="1579:52" pos:end="1579:52"><expr pos:start="1579:52" pos:end="1579:52"><name pos:start="1579:52" pos:end="1579:52">s</name></expr></argument>, <argument pos:start="1579:55" pos:end="1579:56"><expr pos:start="1579:55" pos:end="1579:56"><name pos:start="1579:55" pos:end="1579:56">rd</name></expr></argument>, <argument pos:start="1579:59" pos:end="1579:64"><expr pos:start="1579:59" pos:end="1579:64"><name pos:start="1579:59" pos:end="1579:60">rd</name> <operator pos:start="1579:62" pos:end="1579:62">+</operator> <literal type="number" pos:start="1579:64" pos:end="1579:64">1</literal></expr></argument>, <argument pos:start="1579:67" pos:end="1579:70"><expr pos:start="1579:67" pos:end="1579:70"><name pos:start="1579:67" pos:end="1579:70">addr</name></expr></argument>, <argument pos:start="1579:73" pos:end="1579:73"><expr pos:start="1579:73" pos:end="1579:73"><literal type="number" pos:start="1579:73" pos:end="1579:73">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1581:33" pos:end="1581:38">break;</break>

                            <case pos:start="1583:29" pos:end="1583:35">case <expr pos:start="1583:34" pos:end="1583:34"><literal type="number" pos:start="1583:34" pos:end="1583:34">2</literal></expr>:</case> <comment type="block" pos:start="1583:37" pos:end="1583:48">/* ldrexb */</comment>

                                <expr_stmt pos:start="1585:33" pos:end="1585:71"><expr pos:start="1585:33" pos:end="1585:70"><call pos:start="1585:33" pos:end="1585:70"><name pos:start="1585:33" pos:end="1585:50">gen_load_exclusive</name><argument_list pos:start="1585:51" pos:end="1585:70">(<argument pos:start="1585:52" pos:end="1585:52"><expr pos:start="1585:52" pos:end="1585:52"><name pos:start="1585:52" pos:end="1585:52">s</name></expr></argument>, <argument pos:start="1585:55" pos:end="1585:56"><expr pos:start="1585:55" pos:end="1585:56"><name pos:start="1585:55" pos:end="1585:56">rd</name></expr></argument>, <argument pos:start="1585:59" pos:end="1585:60"><expr pos:start="1585:59" pos:end="1585:60"><literal type="number" pos:start="1585:59" pos:end="1585:60">15</literal></expr></argument>, <argument pos:start="1585:63" pos:end="1585:66"><expr pos:start="1585:63" pos:end="1585:66"><name pos:start="1585:63" pos:end="1585:66">addr</name></expr></argument>, <argument pos:start="1585:69" pos:end="1585:69"><expr pos:start="1585:69" pos:end="1585:69"><literal type="number" pos:start="1585:69" pos:end="1585:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1587:33" pos:end="1587:38">break;</break>

                            <case pos:start="1589:29" pos:end="1589:35">case <expr pos:start="1589:34" pos:end="1589:34"><literal type="number" pos:start="1589:34" pos:end="1589:34">3</literal></expr>:</case> <comment type="block" pos:start="1589:37" pos:end="1589:48">/* ldrexh */</comment>

                                <expr_stmt pos:start="1591:33" pos:end="1591:71"><expr pos:start="1591:33" pos:end="1591:70"><call pos:start="1591:33" pos:end="1591:70"><name pos:start="1591:33" pos:end="1591:50">gen_load_exclusive</name><argument_list pos:start="1591:51" pos:end="1591:70">(<argument pos:start="1591:52" pos:end="1591:52"><expr pos:start="1591:52" pos:end="1591:52"><name pos:start="1591:52" pos:end="1591:52">s</name></expr></argument>, <argument pos:start="1591:55" pos:end="1591:56"><expr pos:start="1591:55" pos:end="1591:56"><name pos:start="1591:55" pos:end="1591:56">rd</name></expr></argument>, <argument pos:start="1591:59" pos:end="1591:60"><expr pos:start="1591:59" pos:end="1591:60"><literal type="number" pos:start="1591:59" pos:end="1591:60">15</literal></expr></argument>, <argument pos:start="1591:63" pos:end="1591:66"><expr pos:start="1591:63" pos:end="1591:66"><name pos:start="1591:63" pos:end="1591:66">addr</name></expr></argument>, <argument pos:start="1591:69" pos:end="1591:69"><expr pos:start="1591:69" pos:end="1591:69"><literal type="number" pos:start="1591:69" pos:end="1591:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1593:33" pos:end="1593:38">break;</break>

                            <default pos:start="1595:29" pos:end="1595:36">default:</default>

                                <expr_stmt pos:start="1597:33" pos:end="1597:40"><expr pos:start="1597:33" pos:end="1597:39"><call pos:start="1597:33" pos:end="1597:39"><name pos:start="1597:33" pos:end="1597:37">abort</name><argument_list pos:start="1597:38" pos:end="1597:39">()</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></switch>

                        </block_content>}</block></if> <else pos:start="1601:27" pos:end="1637:25">else <block pos:start="1601:32" pos:end="1637:25">{<block_content pos:start="1603:29" pos:end="1635:29">

                            <expr_stmt pos:start="1603:29" pos:end="1603:44"><expr pos:start="1603:29" pos:end="1603:43"><name pos:start="1603:29" pos:end="1603:30">rm</name> <operator pos:start="1603:32" pos:end="1603:32">=</operator> <name pos:start="1603:34" pos:end="1603:37">insn</name> <operator pos:start="1603:39" pos:end="1603:39">&amp;</operator> <literal type="number" pos:start="1603:41" pos:end="1603:43">0xf</literal></expr>;</expr_stmt>

                            <switch pos:start="1605:29" pos:end="1635:29">switch <condition pos:start="1605:36" pos:end="1605:40">(<expr pos:start="1605:37" pos:end="1605:39"><name pos:start="1605:37" pos:end="1605:39">op1</name></expr>)</condition> <block pos:start="1605:42" pos:end="1635:29">{<block_content pos:start="1607:29" pos:end="1633:40">

                            <case pos:start="1607:29" pos:end="1607:35">case <expr pos:start="1607:34" pos:end="1607:34"><literal type="number" pos:start="1607:34" pos:end="1607:34">0</literal></expr>:</case>  <comment type="block" pos:start="1607:38" pos:end="1607:49">/*  strex */</comment>

                                <expr_stmt pos:start="1609:33" pos:end="1609:76"><expr pos:start="1609:33" pos:end="1609:75"><call pos:start="1609:33" pos:end="1609:75"><name pos:start="1609:33" pos:end="1609:51">gen_store_exclusive</name><argument_list pos:start="1609:52" pos:end="1609:75">(<argument pos:start="1609:53" pos:end="1609:53"><expr pos:start="1609:53" pos:end="1609:53"><name pos:start="1609:53" pos:end="1609:53">s</name></expr></argument>, <argument pos:start="1609:56" pos:end="1609:57"><expr pos:start="1609:56" pos:end="1609:57"><name pos:start="1609:56" pos:end="1609:57">rd</name></expr></argument>, <argument pos:start="1609:60" pos:end="1609:61"><expr pos:start="1609:60" pos:end="1609:61"><name pos:start="1609:60" pos:end="1609:61">rm</name></expr></argument>, <argument pos:start="1609:64" pos:end="1609:65"><expr pos:start="1609:64" pos:end="1609:65"><literal type="number" pos:start="1609:64" pos:end="1609:65">15</literal></expr></argument>, <argument pos:start="1609:68" pos:end="1609:71"><expr pos:start="1609:68" pos:end="1609:71"><name pos:start="1609:68" pos:end="1609:71">addr</name></expr></argument>, <argument pos:start="1609:74" pos:end="1609:74"><expr pos:start="1609:74" pos:end="1609:74"><literal type="number" pos:start="1609:74" pos:end="1609:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1611:33" pos:end="1611:38">break;</break>

                            <case pos:start="1613:29" pos:end="1613:35">case <expr pos:start="1613:34" pos:end="1613:34"><literal type="number" pos:start="1613:34" pos:end="1613:34">1</literal></expr>:</case> <comment type="block" pos:start="1613:37" pos:end="1613:49">/*  strexd */</comment>

                                <expr_stmt pos:start="1615:33" pos:end="1615:80"><expr pos:start="1615:33" pos:end="1615:79"><call pos:start="1615:33" pos:end="1615:79"><name pos:start="1615:33" pos:end="1615:51">gen_store_exclusive</name><argument_list pos:start="1615:52" pos:end="1615:79">(<argument pos:start="1615:53" pos:end="1615:53"><expr pos:start="1615:53" pos:end="1615:53"><name pos:start="1615:53" pos:end="1615:53">s</name></expr></argument>, <argument pos:start="1615:56" pos:end="1615:57"><expr pos:start="1615:56" pos:end="1615:57"><name pos:start="1615:56" pos:end="1615:57">rd</name></expr></argument>, <argument pos:start="1615:60" pos:end="1615:61"><expr pos:start="1615:60" pos:end="1615:61"><name pos:start="1615:60" pos:end="1615:61">rm</name></expr></argument>, <argument pos:start="1615:64" pos:end="1615:69"><expr pos:start="1615:64" pos:end="1615:69"><name pos:start="1615:64" pos:end="1615:65">rm</name> <operator pos:start="1615:67" pos:end="1615:67">+</operator> <literal type="number" pos:start="1615:69" pos:end="1615:69">1</literal></expr></argument>, <argument pos:start="1615:72" pos:end="1615:75"><expr pos:start="1615:72" pos:end="1615:75"><name pos:start="1615:72" pos:end="1615:75">addr</name></expr></argument>, <argument pos:start="1615:78" pos:end="1615:78"><expr pos:start="1615:78" pos:end="1615:78"><literal type="number" pos:start="1615:78" pos:end="1615:78">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1617:33" pos:end="1617:38">break;</break>

                            <case pos:start="1619:29" pos:end="1619:35">case <expr pos:start="1619:34" pos:end="1619:34"><literal type="number" pos:start="1619:34" pos:end="1619:34">2</literal></expr>:</case> <comment type="block" pos:start="1619:37" pos:end="1619:49">/*  strexb */</comment>

                                <expr_stmt pos:start="1621:33" pos:end="1621:76"><expr pos:start="1621:33" pos:end="1621:75"><call pos:start="1621:33" pos:end="1621:75"><name pos:start="1621:33" pos:end="1621:51">gen_store_exclusive</name><argument_list pos:start="1621:52" pos:end="1621:75">(<argument pos:start="1621:53" pos:end="1621:53"><expr pos:start="1621:53" pos:end="1621:53"><name pos:start="1621:53" pos:end="1621:53">s</name></expr></argument>, <argument pos:start="1621:56" pos:end="1621:57"><expr pos:start="1621:56" pos:end="1621:57"><name pos:start="1621:56" pos:end="1621:57">rd</name></expr></argument>, <argument pos:start="1621:60" pos:end="1621:61"><expr pos:start="1621:60" pos:end="1621:61"><name pos:start="1621:60" pos:end="1621:61">rm</name></expr></argument>, <argument pos:start="1621:64" pos:end="1621:65"><expr pos:start="1621:64" pos:end="1621:65"><literal type="number" pos:start="1621:64" pos:end="1621:65">15</literal></expr></argument>, <argument pos:start="1621:68" pos:end="1621:71"><expr pos:start="1621:68" pos:end="1621:71"><name pos:start="1621:68" pos:end="1621:71">addr</name></expr></argument>, <argument pos:start="1621:74" pos:end="1621:74"><expr pos:start="1621:74" pos:end="1621:74"><literal type="number" pos:start="1621:74" pos:end="1621:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1623:33" pos:end="1623:38">break;</break>

                            <case pos:start="1625:29" pos:end="1625:35">case <expr pos:start="1625:34" pos:end="1625:34"><literal type="number" pos:start="1625:34" pos:end="1625:34">3</literal></expr>:</case> <comment type="block" pos:start="1625:37" pos:end="1625:48">/* strexh */</comment>

                                <expr_stmt pos:start="1627:33" pos:end="1627:76"><expr pos:start="1627:33" pos:end="1627:75"><call pos:start="1627:33" pos:end="1627:75"><name pos:start="1627:33" pos:end="1627:51">gen_store_exclusive</name><argument_list pos:start="1627:52" pos:end="1627:75">(<argument pos:start="1627:53" pos:end="1627:53"><expr pos:start="1627:53" pos:end="1627:53"><name pos:start="1627:53" pos:end="1627:53">s</name></expr></argument>, <argument pos:start="1627:56" pos:end="1627:57"><expr pos:start="1627:56" pos:end="1627:57"><name pos:start="1627:56" pos:end="1627:57">rd</name></expr></argument>, <argument pos:start="1627:60" pos:end="1627:61"><expr pos:start="1627:60" pos:end="1627:61"><name pos:start="1627:60" pos:end="1627:61">rm</name></expr></argument>, <argument pos:start="1627:64" pos:end="1627:65"><expr pos:start="1627:64" pos:end="1627:65"><literal type="number" pos:start="1627:64" pos:end="1627:65">15</literal></expr></argument>, <argument pos:start="1627:68" pos:end="1627:71"><expr pos:start="1627:68" pos:end="1627:71"><name pos:start="1627:68" pos:end="1627:71">addr</name></expr></argument>, <argument pos:start="1627:74" pos:end="1627:74"><expr pos:start="1627:74" pos:end="1627:74"><literal type="number" pos:start="1627:74" pos:end="1627:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1629:33" pos:end="1629:38">break;</break>

                            <default pos:start="1631:29" pos:end="1631:36">default:</default>

                                <expr_stmt pos:start="1633:33" pos:end="1633:40"><expr pos:start="1633:33" pos:end="1633:39"><call pos:start="1633:33" pos:end="1633:39"><name pos:start="1633:33" pos:end="1633:37">abort</name><argument_list pos:start="1633:38" pos:end="1633:39">()</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></switch>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1639:25" pos:end="1639:48"><expr pos:start="1639:25" pos:end="1639:47"><call pos:start="1639:25" pos:end="1639:47"><name pos:start="1639:25" pos:end="1639:41">tcg_temp_free_i32</name><argument_list pos:start="1639:42" pos:end="1639:47">(<argument pos:start="1639:43" pos:end="1639:46"><expr pos:start="1639:43" pos:end="1639:46"><name pos:start="1639:43" pos:end="1639:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1641:23" pos:end="1681:21">else <block pos:start="1641:28" pos:end="1681:21">{<block_content pos:start="1645:25" pos:end="1679:47">

                        <comment type="block" pos:start="1643:25" pos:end="1643:45">/* SWP instruction */</comment>

                        <expr_stmt pos:start="1645:25" pos:end="1645:42"><expr pos:start="1645:25" pos:end="1645:41"><name pos:start="1645:25" pos:end="1645:26">rm</name> <operator pos:start="1645:28" pos:end="1645:28">=</operator> <operator pos:start="1645:30" pos:end="1645:30">(</operator><name pos:start="1645:31" pos:end="1645:34">insn</name><operator pos:start="1645:35" pos:end="1645:35">)</operator> <operator pos:start="1645:37" pos:end="1645:37">&amp;</operator> <literal type="number" pos:start="1645:39" pos:end="1645:41">0xf</literal></expr>;</expr_stmt>



                        <comment type="block" pos:start="1649:25" pos:end="1653:52">/* ??? This is not really atomic.  However we know

                           we never have multiple CPUs running in parallel,

                           so it is good enough.  */</comment>

                        <expr_stmt pos:start="1655:25" pos:end="1655:47"><expr pos:start="1655:25" pos:end="1655:46"><name pos:start="1655:25" pos:end="1655:28">addr</name> <operator pos:start="1655:30" pos:end="1655:30">=</operator> <call pos:start="1655:32" pos:end="1655:46"><name pos:start="1655:32" pos:end="1655:39">load_reg</name><argument_list pos:start="1655:40" pos:end="1655:46">(<argument pos:start="1655:41" pos:end="1655:41"><expr pos:start="1655:41" pos:end="1655:41"><name pos:start="1655:41" pos:end="1655:41">s</name></expr></argument>, <argument pos:start="1655:44" pos:end="1655:45"><expr pos:start="1655:44" pos:end="1655:45"><name pos:start="1655:44" pos:end="1655:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1657:25" pos:end="1657:46"><expr pos:start="1657:25" pos:end="1657:45"><name pos:start="1657:25" pos:end="1657:27">tmp</name> <operator pos:start="1657:29" pos:end="1657:29">=</operator> <call pos:start="1657:31" pos:end="1657:45"><name pos:start="1657:31" pos:end="1657:38">load_reg</name><argument_list pos:start="1657:39" pos:end="1657:45">(<argument pos:start="1657:40" pos:end="1657:40"><expr pos:start="1657:40" pos:end="1657:40"><name pos:start="1657:40" pos:end="1657:40">s</name></expr></argument>, <argument pos:start="1657:43" pos:end="1657:44"><expr pos:start="1657:43" pos:end="1657:44"><name pos:start="1657:43" pos:end="1657:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1659:25" pos:end="1659:50"><expr pos:start="1659:25" pos:end="1659:49"><name pos:start="1659:25" pos:end="1659:28">tmp2</name> <operator pos:start="1659:30" pos:end="1659:30">=</operator> <call pos:start="1659:32" pos:end="1659:49"><name pos:start="1659:32" pos:end="1659:47">tcg_temp_new_i32</name><argument_list pos:start="1659:48" pos:end="1659:49">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1661:25" pos:end="1673:25"><if pos:start="1661:25" pos:end="1667:25">if <condition pos:start="1661:28" pos:end="1661:45">(<expr pos:start="1661:29" pos:end="1661:44"><name pos:start="1661:29" pos:end="1661:32">insn</name> <operator pos:start="1661:34" pos:end="1661:34">&amp;</operator> <operator pos:start="1661:36" pos:end="1661:36">(</operator><literal type="number" pos:start="1661:37" pos:end="1661:37">1</literal> <operator pos:start="1661:39" pos:end="1661:40">&lt;&lt;</operator> <literal type="number" pos:start="1661:42" pos:end="1661:43">22</literal><operator pos:start="1661:44" pos:end="1661:44">)</operator></expr>)</condition> <block pos:start="1661:47" pos:end="1667:25">{<block_content pos:start="1663:29" pos:end="1665:70">

                            <expr_stmt pos:start="1663:29" pos:end="1663:72"><expr pos:start="1663:29" pos:end="1663:71"><call pos:start="1663:29" pos:end="1663:71"><name pos:start="1663:29" pos:end="1663:41">gen_aa32_ld8u</name><argument_list pos:start="1663:42" pos:end="1663:71">(<argument pos:start="1663:43" pos:end="1663:46"><expr pos:start="1663:43" pos:end="1663:46"><name pos:start="1663:43" pos:end="1663:46">tmp2</name></expr></argument>, <argument pos:start="1663:49" pos:end="1663:52"><expr pos:start="1663:49" pos:end="1663:52"><name pos:start="1663:49" pos:end="1663:52">addr</name></expr></argument>, <argument pos:start="1663:55" pos:end="1663:70"><expr pos:start="1663:55" pos:end="1663:70"><call pos:start="1663:55" pos:end="1663:70"><name pos:start="1663:55" pos:end="1663:67">get_mem_index</name><argument_list pos:start="1663:68" pos:end="1663:70">(<argument pos:start="1663:69" pos:end="1663:69"><expr pos:start="1663:69" pos:end="1663:69"><name pos:start="1663:69" pos:end="1663:69">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1665:29" pos:end="1665:70"><expr pos:start="1665:29" pos:end="1665:69"><call pos:start="1665:29" pos:end="1665:69"><name pos:start="1665:29" pos:end="1665:40">gen_aa32_st8</name><argument_list pos:start="1665:41" pos:end="1665:69">(<argument pos:start="1665:42" pos:end="1665:44"><expr pos:start="1665:42" pos:end="1665:44"><name pos:start="1665:42" pos:end="1665:44">tmp</name></expr></argument>, <argument pos:start="1665:47" pos:end="1665:50"><expr pos:start="1665:47" pos:end="1665:50"><name pos:start="1665:47" pos:end="1665:50">addr</name></expr></argument>, <argument pos:start="1665:53" pos:end="1665:68"><expr pos:start="1665:53" pos:end="1665:68"><call pos:start="1665:53" pos:end="1665:68"><name pos:start="1665:53" pos:end="1665:65">get_mem_index</name><argument_list pos:start="1665:66" pos:end="1665:68">(<argument pos:start="1665:67" pos:end="1665:67"><expr pos:start="1665:67" pos:end="1665:67"><name pos:start="1665:67" pos:end="1665:67">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1667:27" pos:end="1673:25">else <block pos:start="1667:32" pos:end="1673:25">{<block_content pos:start="1669:29" pos:end="1671:71">

                            <expr_stmt pos:start="1669:29" pos:end="1669:73"><expr pos:start="1669:29" pos:end="1669:72"><call pos:start="1669:29" pos:end="1669:72"><name pos:start="1669:29" pos:end="1669:42">gen_aa32_ld32u</name><argument_list pos:start="1669:43" pos:end="1669:72">(<argument pos:start="1669:44" pos:end="1669:47"><expr pos:start="1669:44" pos:end="1669:47"><name pos:start="1669:44" pos:end="1669:47">tmp2</name></expr></argument>, <argument pos:start="1669:50" pos:end="1669:53"><expr pos:start="1669:50" pos:end="1669:53"><name pos:start="1669:50" pos:end="1669:53">addr</name></expr></argument>, <argument pos:start="1669:56" pos:end="1669:71"><expr pos:start="1669:56" pos:end="1669:71"><call pos:start="1669:56" pos:end="1669:71"><name pos:start="1669:56" pos:end="1669:68">get_mem_index</name><argument_list pos:start="1669:69" pos:end="1669:71">(<argument pos:start="1669:70" pos:end="1669:70"><expr pos:start="1669:70" pos:end="1669:70"><name pos:start="1669:70" pos:end="1669:70">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1671:29" pos:end="1671:71"><expr pos:start="1671:29" pos:end="1671:70"><call pos:start="1671:29" pos:end="1671:70"><name pos:start="1671:29" pos:end="1671:41">gen_aa32_st32</name><argument_list pos:start="1671:42" pos:end="1671:70">(<argument pos:start="1671:43" pos:end="1671:45"><expr pos:start="1671:43" pos:end="1671:45"><name pos:start="1671:43" pos:end="1671:45">tmp</name></expr></argument>, <argument pos:start="1671:48" pos:end="1671:51"><expr pos:start="1671:48" pos:end="1671:51"><name pos:start="1671:48" pos:end="1671:51">addr</name></expr></argument>, <argument pos:start="1671:54" pos:end="1671:69"><expr pos:start="1671:54" pos:end="1671:69"><call pos:start="1671:54" pos:end="1671:69"><name pos:start="1671:54" pos:end="1671:66">get_mem_index</name><argument_list pos:start="1671:67" pos:end="1671:69">(<argument pos:start="1671:68" pos:end="1671:68"><expr pos:start="1671:68" pos:end="1671:68"><name pos:start="1671:68" pos:end="1671:68">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1675:25" pos:end="1675:47"><expr pos:start="1675:25" pos:end="1675:46"><call pos:start="1675:25" pos:end="1675:46"><name pos:start="1675:25" pos:end="1675:41">tcg_temp_free_i32</name><argument_list pos:start="1675:42" pos:end="1675:46">(<argument pos:start="1675:43" pos:end="1675:45"><expr pos:start="1675:43" pos:end="1675:45"><name pos:start="1675:43" pos:end="1675:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1677:25" pos:end="1677:48"><expr pos:start="1677:25" pos:end="1677:47"><call pos:start="1677:25" pos:end="1677:47"><name pos:start="1677:25" pos:end="1677:41">tcg_temp_free_i32</name><argument_list pos:start="1677:42" pos:end="1677:47">(<argument pos:start="1677:43" pos:end="1677:46"><expr pos:start="1677:43" pos:end="1677:46"><name pos:start="1677:43" pos:end="1677:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1679:25" pos:end="1679:47"><expr pos:start="1679:25" pos:end="1679:46"><call pos:start="1679:25" pos:end="1679:46"><name pos:start="1679:25" pos:end="1679:33">store_reg</name><argument_list pos:start="1679:34" pos:end="1679:46">(<argument pos:start="1679:35" pos:end="1679:35"><expr pos:start="1679:35" pos:end="1679:35"><name pos:start="1679:35" pos:end="1679:35">s</name></expr></argument>, <argument pos:start="1679:38" pos:end="1679:39"><expr pos:start="1679:38" pos:end="1679:39"><name pos:start="1679:38" pos:end="1679:39">rd</name></expr></argument>, <argument pos:start="1679:42" pos:end="1679:45"><expr pos:start="1679:42" pos:end="1679:45"><name pos:start="1679:42" pos:end="1679:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1685:15" pos:end="1853:13">else <block pos:start="1685:20" pos:end="1853:13">{<block_content pos:start="1687:17" pos:end="1851:17">

                <decl_stmt pos:start="1687:17" pos:end="1687:35"><decl pos:start="1687:17" pos:end="1687:34"><type pos:start="1687:17" pos:end="1687:19"><name pos:start="1687:17" pos:end="1687:19">int</name></type> <name pos:start="1687:21" pos:end="1687:34">address_offset</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1689:17" pos:end="1689:45"><decl pos:start="1689:17" pos:end="1689:44"><type pos:start="1689:17" pos:end="1689:20"><name pos:start="1689:17" pos:end="1689:20">bool</name></type> <name pos:start="1689:22" pos:end="1689:25">load</name> <init pos:start="1689:27" pos:end="1689:44">= <expr pos:start="1689:29" pos:end="1689:44"><name pos:start="1689:29" pos:end="1689:32">insn</name> <operator pos:start="1689:34" pos:end="1689:34">&amp;</operator> <operator pos:start="1689:36" pos:end="1689:36">(</operator><literal type="number" pos:start="1689:37" pos:end="1689:37">1</literal> <operator pos:start="1689:39" pos:end="1689:40">&lt;&lt;</operator> <literal type="number" pos:start="1689:42" pos:end="1689:43">20</literal><operator pos:start="1689:44" pos:end="1689:44">)</operator></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1691:17" pos:end="1691:40"><decl pos:start="1691:17" pos:end="1691:39"><type pos:start="1691:17" pos:end="1691:20"><name pos:start="1691:17" pos:end="1691:20">bool</name></type> <name pos:start="1691:22" pos:end="1691:31">doubleword</name> <init pos:start="1691:33" pos:end="1691:39">= <expr pos:start="1691:35" pos:end="1691:39"><name pos:start="1691:35" pos:end="1691:39">false</name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="1693:17" pos:end="1693:37">/* Misc load/store */</comment>

                <expr_stmt pos:start="1695:17" pos:end="1695:40"><expr pos:start="1695:17" pos:end="1695:39"><name pos:start="1695:17" pos:end="1695:18">rn</name> <operator pos:start="1695:20" pos:end="1695:20">=</operator> <operator pos:start="1695:22" pos:end="1695:22">(</operator><name pos:start="1695:23" pos:end="1695:26">insn</name> <operator pos:start="1695:28" pos:end="1695:29">&gt;&gt;</operator> <literal type="number" pos:start="1695:31" pos:end="1695:32">16</literal><operator pos:start="1695:33" pos:end="1695:33">)</operator> <operator pos:start="1695:35" pos:end="1695:35">&amp;</operator> <literal type="number" pos:start="1695:37" pos:end="1695:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1697:17" pos:end="1697:40"><expr pos:start="1697:17" pos:end="1697:39"><name pos:start="1697:17" pos:end="1697:18">rd</name> <operator pos:start="1697:20" pos:end="1697:20">=</operator> <operator pos:start="1697:22" pos:end="1697:22">(</operator><name pos:start="1697:23" pos:end="1697:26">insn</name> <operator pos:start="1697:28" pos:end="1697:29">&gt;&gt;</operator> <literal type="number" pos:start="1697:31" pos:end="1697:32">12</literal><operator pos:start="1697:33" pos:end="1697:33">)</operator> <operator pos:start="1697:35" pos:end="1697:35">&amp;</operator> <literal type="number" pos:start="1697:37" pos:end="1697:39">0xf</literal></expr>;</expr_stmt>



                <if_stmt pos:start="1701:17" pos:end="1719:17"><if pos:start="1701:17" pos:end="1719:17">if <condition pos:start="1701:20" pos:end="1701:38">(<expr pos:start="1701:21" pos:end="1701:37"><operator pos:start="1701:21" pos:end="1701:21">!</operator><name pos:start="1701:22" pos:end="1701:25">load</name> <operator pos:start="1701:27" pos:end="1701:28">&amp;&amp;</operator> <operator pos:start="1701:30" pos:end="1701:30">(</operator><name pos:start="1701:31" pos:end="1701:32">sh</name> <operator pos:start="1701:34" pos:end="1701:34">&amp;</operator> <literal type="number" pos:start="1701:36" pos:end="1701:36">2</literal><operator pos:start="1701:37" pos:end="1701:37">)</operator></expr>)</condition> <block pos:start="1701:40" pos:end="1719:17">{<block_content pos:start="1705:21" pos:end="1717:38">

                    <comment type="block" pos:start="1703:21" pos:end="1703:36">/* doubleword */</comment>

                    <expr_stmt pos:start="1705:21" pos:end="1705:30"><expr pos:start="1705:21" pos:end="1705:29"><call pos:start="1705:21" pos:end="1705:29"><name pos:start="1705:21" pos:end="1705:24">ARCH</name><argument_list pos:start="1705:25" pos:end="1705:29">(<argument pos:start="1705:26" pos:end="1705:28"><expr pos:start="1705:26" pos:end="1705:28"><literal type="number" pos:start="1705:26" pos:end="1705:28">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="1707:21" pos:end="1713:21"><if pos:start="1707:21" pos:end="1713:21">if <condition pos:start="1707:24" pos:end="1707:31">(<expr pos:start="1707:25" pos:end="1707:30"><name pos:start="1707:25" pos:end="1707:26">rd</name> <operator pos:start="1707:28" pos:end="1707:28">&amp;</operator> <literal type="number" pos:start="1707:30" pos:end="1707:30">1</literal></expr>)</condition> <block pos:start="1707:33" pos:end="1713:21">{<block_content pos:start="1711:25" pos:end="1711:40">

                        <comment type="block" pos:start="1709:25" pos:end="1709:63">/* UNPREDICTABLE; we choose to UNDEF */</comment>

                        <goto pos:start="1711:25" pos:end="1711:40">goto <name pos:start="1711:30" pos:end="1711:39">illegal_op</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="1715:21" pos:end="1715:41"><expr pos:start="1715:21" pos:end="1715:40"><name pos:start="1715:21" pos:end="1715:24">load</name> <operator pos:start="1715:26" pos:end="1715:26">=</operator> <operator pos:start="1715:28" pos:end="1715:28">(</operator><name pos:start="1715:29" pos:end="1715:30">sh</name> <operator pos:start="1715:32" pos:end="1715:32">&amp;</operator> <literal type="number" pos:start="1715:34" pos:end="1715:34">1</literal><operator pos:start="1715:35" pos:end="1715:35">)</operator> <operator pos:start="1715:37" pos:end="1715:38">==</operator> <literal type="number" pos:start="1715:40" pos:end="1715:40">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1717:21" pos:end="1717:38"><expr pos:start="1717:21" pos:end="1717:37"><name pos:start="1717:21" pos:end="1717:30">doubleword</name> <operator pos:start="1717:32" pos:end="1717:32">=</operator> <name pos:start="1717:34" pos:end="1717:37">true</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="1723:17" pos:end="1723:39"><expr pos:start="1723:17" pos:end="1723:38"><name pos:start="1723:17" pos:end="1723:20">addr</name> <operator pos:start="1723:22" pos:end="1723:22">=</operator> <call pos:start="1723:24" pos:end="1723:38"><name pos:start="1723:24" pos:end="1723:31">load_reg</name><argument_list pos:start="1723:32" pos:end="1723:38">(<argument pos:start="1723:33" pos:end="1723:33"><expr pos:start="1723:33" pos:end="1723:33"><name pos:start="1723:33" pos:end="1723:33">s</name></expr></argument>, <argument pos:start="1723:36" pos:end="1723:37"><expr pos:start="1723:36" pos:end="1723:37"><name pos:start="1723:36" pos:end="1723:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1725:17" pos:end="1727:59"><if pos:start="1725:17" pos:end="1727:59">if <condition pos:start="1725:20" pos:end="1725:37">(<expr pos:start="1725:21" pos:end="1725:36"><name pos:start="1725:21" pos:end="1725:24">insn</name> <operator pos:start="1725:26" pos:end="1725:26">&amp;</operator> <operator pos:start="1725:28" pos:end="1725:28">(</operator><literal type="number" pos:start="1725:29" pos:end="1725:29">1</literal> <operator pos:start="1725:31" pos:end="1725:32">&lt;&lt;</operator> <literal type="number" pos:start="1725:34" pos:end="1725:35">24</literal><operator pos:start="1725:36" pos:end="1725:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1727:21" pos:end="1727:59"><block_content pos:start="1727:21" pos:end="1727:59">

                    <expr_stmt pos:start="1727:21" pos:end="1727:59"><expr pos:start="1727:21" pos:end="1727:58"><call pos:start="1727:21" pos:end="1727:58"><name pos:start="1727:21" pos:end="1727:40">gen_add_datah_offset</name><argument_list pos:start="1727:41" pos:end="1727:58">(<argument pos:start="1727:42" pos:end="1727:42"><expr pos:start="1727:42" pos:end="1727:42"><name pos:start="1727:42" pos:end="1727:42">s</name></expr></argument>, <argument pos:start="1727:45" pos:end="1727:48"><expr pos:start="1727:45" pos:end="1727:48"><name pos:start="1727:45" pos:end="1727:48">insn</name></expr></argument>, <argument pos:start="1727:51" pos:end="1727:51"><expr pos:start="1727:51" pos:end="1727:51"><literal type="number" pos:start="1727:51" pos:end="1727:51">0</literal></expr></argument>, <argument pos:start="1727:54" pos:end="1727:57"><expr pos:start="1727:54" pos:end="1727:57"><name pos:start="1727:54" pos:end="1727:57">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1729:17" pos:end="1729:35"><expr pos:start="1729:17" pos:end="1729:34"><name pos:start="1729:17" pos:end="1729:30">address_offset</name> <operator pos:start="1729:32" pos:end="1729:32">=</operator> <literal type="number" pos:start="1729:34" pos:end="1729:34">0</literal></expr>;</expr_stmt>



                <if_stmt pos:start="1733:17" pos:end="1815:17"><if pos:start="1733:17" pos:end="1775:17">if <condition pos:start="1733:20" pos:end="1733:31">(<expr pos:start="1733:21" pos:end="1733:30"><name pos:start="1733:21" pos:end="1733:30">doubleword</name></expr>)</condition> <block pos:start="1733:33" pos:end="1775:17">{<block_content pos:start="1735:21" pos:end="1773:40">

                    <if_stmt pos:start="1735:21" pos:end="1771:21"><if pos:start="1735:21" pos:end="1753:21">if <condition pos:start="1735:24" pos:end="1735:30">(<expr pos:start="1735:25" pos:end="1735:29"><operator pos:start="1735:25" pos:end="1735:25">!</operator><name pos:start="1735:26" pos:end="1735:29">load</name></expr>)</condition> <block pos:start="1735:32" pos:end="1753:21">{<block_content pos:start="1739:25" pos:end="1751:47">

                        <comment type="block" pos:start="1737:25" pos:end="1737:35">/* store */</comment>

                        <expr_stmt pos:start="1739:25" pos:end="1739:46"><expr pos:start="1739:25" pos:end="1739:45"><name pos:start="1739:25" pos:end="1739:27">tmp</name> <operator pos:start="1739:29" pos:end="1739:29">=</operator> <call pos:start="1739:31" pos:end="1739:45"><name pos:start="1739:31" pos:end="1739:38">load_reg</name><argument_list pos:start="1739:39" pos:end="1739:45">(<argument pos:start="1739:40" pos:end="1739:40"><expr pos:start="1739:40" pos:end="1739:40"><name pos:start="1739:40" pos:end="1739:40">s</name></expr></argument>, <argument pos:start="1739:43" pos:end="1739:44"><expr pos:start="1739:43" pos:end="1739:44"><name pos:start="1739:43" pos:end="1739:44">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1741:25" pos:end="1741:67"><expr pos:start="1741:25" pos:end="1741:66"><call pos:start="1741:25" pos:end="1741:66"><name pos:start="1741:25" pos:end="1741:37">gen_aa32_st32</name><argument_list pos:start="1741:38" pos:end="1741:66">(<argument pos:start="1741:39" pos:end="1741:41"><expr pos:start="1741:39" pos:end="1741:41"><name pos:start="1741:39" pos:end="1741:41">tmp</name></expr></argument>, <argument pos:start="1741:44" pos:end="1741:47"><expr pos:start="1741:44" pos:end="1741:47"><name pos:start="1741:44" pos:end="1741:47">addr</name></expr></argument>, <argument pos:start="1741:50" pos:end="1741:65"><expr pos:start="1741:50" pos:end="1741:65"><call pos:start="1741:50" pos:end="1741:65"><name pos:start="1741:50" pos:end="1741:62">get_mem_index</name><argument_list pos:start="1741:63" pos:end="1741:65">(<argument pos:start="1741:64" pos:end="1741:64"><expr pos:start="1741:64" pos:end="1741:64"><name pos:start="1741:64" pos:end="1741:64">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1743:25" pos:end="1743:47"><expr pos:start="1743:25" pos:end="1743:46"><call pos:start="1743:25" pos:end="1743:46"><name pos:start="1743:25" pos:end="1743:41">tcg_temp_free_i32</name><argument_list pos:start="1743:42" pos:end="1743:46">(<argument pos:start="1743:43" pos:end="1743:45"><expr pos:start="1743:43" pos:end="1743:45"><name pos:start="1743:43" pos:end="1743:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1745:25" pos:end="1745:56"><expr pos:start="1745:25" pos:end="1745:55"><call pos:start="1745:25" pos:end="1745:55"><name pos:start="1745:25" pos:end="1745:40">tcg_gen_addi_i32</name><argument_list pos:start="1745:41" pos:end="1745:55">(<argument pos:start="1745:42" pos:end="1745:45"><expr pos:start="1745:42" pos:end="1745:45"><name pos:start="1745:42" pos:end="1745:45">addr</name></expr></argument>, <argument pos:start="1745:48" pos:end="1745:51"><expr pos:start="1745:48" pos:end="1745:51"><name pos:start="1745:48" pos:end="1745:51">addr</name></expr></argument>, <argument pos:start="1745:54" pos:end="1745:54"><expr pos:start="1745:54" pos:end="1745:54"><literal type="number" pos:start="1745:54" pos:end="1745:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1747:25" pos:end="1747:50"><expr pos:start="1747:25" pos:end="1747:49"><name pos:start="1747:25" pos:end="1747:27">tmp</name> <operator pos:start="1747:29" pos:end="1747:29">=</operator> <call pos:start="1747:31" pos:end="1747:49"><name pos:start="1747:31" pos:end="1747:38">load_reg</name><argument_list pos:start="1747:39" pos:end="1747:49">(<argument pos:start="1747:40" pos:end="1747:40"><expr pos:start="1747:40" pos:end="1747:40"><name pos:start="1747:40" pos:end="1747:40">s</name></expr></argument>, <argument pos:start="1747:43" pos:end="1747:48"><expr pos:start="1747:43" pos:end="1747:48"><name pos:start="1747:43" pos:end="1747:44">rd</name> <operator pos:start="1747:46" pos:end="1747:46">+</operator> <literal type="number" pos:start="1747:48" pos:end="1747:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1749:25" pos:end="1749:67"><expr pos:start="1749:25" pos:end="1749:66"><call pos:start="1749:25" pos:end="1749:66"><name pos:start="1749:25" pos:end="1749:37">gen_aa32_st32</name><argument_list pos:start="1749:38" pos:end="1749:66">(<argument pos:start="1749:39" pos:end="1749:41"><expr pos:start="1749:39" pos:end="1749:41"><name pos:start="1749:39" pos:end="1749:41">tmp</name></expr></argument>, <argument pos:start="1749:44" pos:end="1749:47"><expr pos:start="1749:44" pos:end="1749:47"><name pos:start="1749:44" pos:end="1749:47">addr</name></expr></argument>, <argument pos:start="1749:50" pos:end="1749:65"><expr pos:start="1749:50" pos:end="1749:65"><call pos:start="1749:50" pos:end="1749:65"><name pos:start="1749:50" pos:end="1749:62">get_mem_index</name><argument_list pos:start="1749:63" pos:end="1749:65">(<argument pos:start="1749:64" pos:end="1749:64"><expr pos:start="1749:64" pos:end="1749:64"><name pos:start="1749:64" pos:end="1749:64">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1751:25" pos:end="1751:47"><expr pos:start="1751:25" pos:end="1751:46"><call pos:start="1751:25" pos:end="1751:46"><name pos:start="1751:25" pos:end="1751:41">tcg_temp_free_i32</name><argument_list pos:start="1751:42" pos:end="1751:46">(<argument pos:start="1751:43" pos:end="1751:45"><expr pos:start="1751:43" pos:end="1751:45"><name pos:start="1751:43" pos:end="1751:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1753:23" pos:end="1771:21">else <block pos:start="1753:28" pos:end="1771:21">{<block_content pos:start="1757:25" pos:end="1769:29">

                        <comment type="block" pos:start="1755:25" pos:end="1755:34">/* load */</comment>

                        <expr_stmt pos:start="1757:25" pos:end="1757:49"><expr pos:start="1757:25" pos:end="1757:48"><name pos:start="1757:25" pos:end="1757:27">tmp</name> <operator pos:start="1757:29" pos:end="1757:29">=</operator> <call pos:start="1757:31" pos:end="1757:48"><name pos:start="1757:31" pos:end="1757:46">tcg_temp_new_i32</name><argument_list pos:start="1757:47" pos:end="1757:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1759:25" pos:end="1759:68"><expr pos:start="1759:25" pos:end="1759:67"><call pos:start="1759:25" pos:end="1759:67"><name pos:start="1759:25" pos:end="1759:38">gen_aa32_ld32u</name><argument_list pos:start="1759:39" pos:end="1759:67">(<argument pos:start="1759:40" pos:end="1759:42"><expr pos:start="1759:40" pos:end="1759:42"><name pos:start="1759:40" pos:end="1759:42">tmp</name></expr></argument>, <argument pos:start="1759:45" pos:end="1759:48"><expr pos:start="1759:45" pos:end="1759:48"><name pos:start="1759:45" pos:end="1759:48">addr</name></expr></argument>, <argument pos:start="1759:51" pos:end="1759:66"><expr pos:start="1759:51" pos:end="1759:66"><call pos:start="1759:51" pos:end="1759:66"><name pos:start="1759:51" pos:end="1759:63">get_mem_index</name><argument_list pos:start="1759:64" pos:end="1759:66">(<argument pos:start="1759:65" pos:end="1759:65"><expr pos:start="1759:65" pos:end="1759:65"><name pos:start="1759:65" pos:end="1759:65">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1761:25" pos:end="1761:46"><expr pos:start="1761:25" pos:end="1761:45"><call pos:start="1761:25" pos:end="1761:45"><name pos:start="1761:25" pos:end="1761:33">store_reg</name><argument_list pos:start="1761:34" pos:end="1761:45">(<argument pos:start="1761:35" pos:end="1761:35"><expr pos:start="1761:35" pos:end="1761:35"><name pos:start="1761:35" pos:end="1761:35">s</name></expr></argument>, <argument pos:start="1761:38" pos:end="1761:39"><expr pos:start="1761:38" pos:end="1761:39"><name pos:start="1761:38" pos:end="1761:39">rd</name></expr></argument>, <argument pos:start="1761:42" pos:end="1761:44"><expr pos:start="1761:42" pos:end="1761:44"><name pos:start="1761:42" pos:end="1761:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1763:25" pos:end="1763:56"><expr pos:start="1763:25" pos:end="1763:55"><call pos:start="1763:25" pos:end="1763:55"><name pos:start="1763:25" pos:end="1763:40">tcg_gen_addi_i32</name><argument_list pos:start="1763:41" pos:end="1763:55">(<argument pos:start="1763:42" pos:end="1763:45"><expr pos:start="1763:42" pos:end="1763:45"><name pos:start="1763:42" pos:end="1763:45">addr</name></expr></argument>, <argument pos:start="1763:48" pos:end="1763:51"><expr pos:start="1763:48" pos:end="1763:51"><name pos:start="1763:48" pos:end="1763:51">addr</name></expr></argument>, <argument pos:start="1763:54" pos:end="1763:54"><expr pos:start="1763:54" pos:end="1763:54"><literal type="number" pos:start="1763:54" pos:end="1763:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1765:25" pos:end="1765:49"><expr pos:start="1765:25" pos:end="1765:48"><name pos:start="1765:25" pos:end="1765:27">tmp</name> <operator pos:start="1765:29" pos:end="1765:29">=</operator> <call pos:start="1765:31" pos:end="1765:48"><name pos:start="1765:31" pos:end="1765:46">tcg_temp_new_i32</name><argument_list pos:start="1765:47" pos:end="1765:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1767:25" pos:end="1767:68"><expr pos:start="1767:25" pos:end="1767:67"><call pos:start="1767:25" pos:end="1767:67"><name pos:start="1767:25" pos:end="1767:38">gen_aa32_ld32u</name><argument_list pos:start="1767:39" pos:end="1767:67">(<argument pos:start="1767:40" pos:end="1767:42"><expr pos:start="1767:40" pos:end="1767:42"><name pos:start="1767:40" pos:end="1767:42">tmp</name></expr></argument>, <argument pos:start="1767:45" pos:end="1767:48"><expr pos:start="1767:45" pos:end="1767:48"><name pos:start="1767:45" pos:end="1767:48">addr</name></expr></argument>, <argument pos:start="1767:51" pos:end="1767:66"><expr pos:start="1767:51" pos:end="1767:66"><call pos:start="1767:51" pos:end="1767:66"><name pos:start="1767:51" pos:end="1767:63">get_mem_index</name><argument_list pos:start="1767:64" pos:end="1767:66">(<argument pos:start="1767:65" pos:end="1767:65"><expr pos:start="1767:65" pos:end="1767:65"><name pos:start="1767:65" pos:end="1767:65">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1769:25" pos:end="1769:29"><expr pos:start="1769:25" pos:end="1769:28"><name pos:start="1769:25" pos:end="1769:26">rd</name><operator pos:start="1769:27" pos:end="1769:28">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1773:21" pos:end="1773:40"><expr pos:start="1773:21" pos:end="1773:39"><name pos:start="1773:21" pos:end="1773:34">address_offset</name> <operator pos:start="1773:36" pos:end="1773:36">=</operator> <operator pos:start="1773:38" pos:end="1773:38">-</operator><literal type="number" pos:start="1773:39" pos:end="1773:39">4</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1775:19" pos:end="1805:17">else if <condition pos:start="1775:27" pos:end="1775:32">(<expr pos:start="1775:28" pos:end="1775:31"><name pos:start="1775:28" pos:end="1775:31">load</name></expr>)</condition> <block pos:start="1775:34" pos:end="1805:17">{<block_content pos:start="1779:21" pos:end="1803:21">

                    <comment type="block" pos:start="1777:21" pos:end="1777:30">/* load */</comment>

                    <expr_stmt pos:start="1779:21" pos:end="1779:45"><expr pos:start="1779:21" pos:end="1779:44"><name pos:start="1779:21" pos:end="1779:23">tmp</name> <operator pos:start="1779:25" pos:end="1779:25">=</operator> <call pos:start="1779:27" pos:end="1779:44"><name pos:start="1779:27" pos:end="1779:42">tcg_temp_new_i32</name><argument_list pos:start="1779:43" pos:end="1779:44">()</argument_list></call></expr>;</expr_stmt>

                    <switch pos:start="1781:21" pos:end="1803:21">switch <condition pos:start="1781:28" pos:end="1781:31">(<expr pos:start="1781:29" pos:end="1781:30"><name pos:start="1781:29" pos:end="1781:30">sh</name></expr>)</condition> <block pos:start="1781:33" pos:end="1803:21">{<block_content pos:start="1783:21" pos:end="1801:30">

                    <case pos:start="1783:21" pos:end="1783:27">case <expr pos:start="1783:26" pos:end="1783:26"><literal type="number" pos:start="1783:26" pos:end="1783:26">1</literal></expr>:</case>

                        <expr_stmt pos:start="1785:25" pos:end="1785:68"><expr pos:start="1785:25" pos:end="1785:67"><call pos:start="1785:25" pos:end="1785:67"><name pos:start="1785:25" pos:end="1785:38">gen_aa32_ld16u</name><argument_list pos:start="1785:39" pos:end="1785:67">(<argument pos:start="1785:40" pos:end="1785:42"><expr pos:start="1785:40" pos:end="1785:42"><name pos:start="1785:40" pos:end="1785:42">tmp</name></expr></argument>, <argument pos:start="1785:45" pos:end="1785:48"><expr pos:start="1785:45" pos:end="1785:48"><name pos:start="1785:45" pos:end="1785:48">addr</name></expr></argument>, <argument pos:start="1785:51" pos:end="1785:66"><expr pos:start="1785:51" pos:end="1785:66"><call pos:start="1785:51" pos:end="1785:66"><name pos:start="1785:51" pos:end="1785:63">get_mem_index</name><argument_list pos:start="1785:64" pos:end="1785:66">(<argument pos:start="1785:65" pos:end="1785:65"><expr pos:start="1785:65" pos:end="1785:65"><name pos:start="1785:65" pos:end="1785:65">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1787:25" pos:end="1787:30">break;</break>

                    <case pos:start="1789:21" pos:end="1789:27">case <expr pos:start="1789:26" pos:end="1789:26"><literal type="number" pos:start="1789:26" pos:end="1789:26">2</literal></expr>:</case>

                        <expr_stmt pos:start="1791:25" pos:end="1791:67"><expr pos:start="1791:25" pos:end="1791:66"><call pos:start="1791:25" pos:end="1791:66"><name pos:start="1791:25" pos:end="1791:37">gen_aa32_ld8s</name><argument_list pos:start="1791:38" pos:end="1791:66">(<argument pos:start="1791:39" pos:end="1791:41"><expr pos:start="1791:39" pos:end="1791:41"><name pos:start="1791:39" pos:end="1791:41">tmp</name></expr></argument>, <argument pos:start="1791:44" pos:end="1791:47"><expr pos:start="1791:44" pos:end="1791:47"><name pos:start="1791:44" pos:end="1791:47">addr</name></expr></argument>, <argument pos:start="1791:50" pos:end="1791:65"><expr pos:start="1791:50" pos:end="1791:65"><call pos:start="1791:50" pos:end="1791:65"><name pos:start="1791:50" pos:end="1791:62">get_mem_index</name><argument_list pos:start="1791:63" pos:end="1791:65">(<argument pos:start="1791:64" pos:end="1791:64"><expr pos:start="1791:64" pos:end="1791:64"><name pos:start="1791:64" pos:end="1791:64">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1793:25" pos:end="1793:30">break;</break>

                    <default pos:start="1795:21" pos:end="1795:28">default:</default>

                    <case pos:start="1797:21" pos:end="1797:27">case <expr pos:start="1797:26" pos:end="1797:26"><literal type="number" pos:start="1797:26" pos:end="1797:26">3</literal></expr>:</case>

                        <expr_stmt pos:start="1799:25" pos:end="1799:68"><expr pos:start="1799:25" pos:end="1799:67"><call pos:start="1799:25" pos:end="1799:67"><name pos:start="1799:25" pos:end="1799:38">gen_aa32_ld16s</name><argument_list pos:start="1799:39" pos:end="1799:67">(<argument pos:start="1799:40" pos:end="1799:42"><expr pos:start="1799:40" pos:end="1799:42"><name pos:start="1799:40" pos:end="1799:42">tmp</name></expr></argument>, <argument pos:start="1799:45" pos:end="1799:48"><expr pos:start="1799:45" pos:end="1799:48"><name pos:start="1799:45" pos:end="1799:48">addr</name></expr></argument>, <argument pos:start="1799:51" pos:end="1799:66"><expr pos:start="1799:51" pos:end="1799:66"><call pos:start="1799:51" pos:end="1799:66"><name pos:start="1799:51" pos:end="1799:63">get_mem_index</name><argument_list pos:start="1799:64" pos:end="1799:66">(<argument pos:start="1799:65" pos:end="1799:65"><expr pos:start="1799:65" pos:end="1799:65"><name pos:start="1799:65" pos:end="1799:65">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1801:25" pos:end="1801:30">break;</break>

                    </block_content>}</block></switch>

                </block_content>}</block></if> <else pos:start="1805:19" pos:end="1815:17">else <block pos:start="1805:24" pos:end="1815:17">{<block_content pos:start="1809:21" pos:end="1813:43">

                    <comment type="block" pos:start="1807:21" pos:end="1807:31">/* store */</comment>

                    <expr_stmt pos:start="1809:21" pos:end="1809:42"><expr pos:start="1809:21" pos:end="1809:41"><name pos:start="1809:21" pos:end="1809:23">tmp</name> <operator pos:start="1809:25" pos:end="1809:25">=</operator> <call pos:start="1809:27" pos:end="1809:41"><name pos:start="1809:27" pos:end="1809:34">load_reg</name><argument_list pos:start="1809:35" pos:end="1809:41">(<argument pos:start="1809:36" pos:end="1809:36"><expr pos:start="1809:36" pos:end="1809:36"><name pos:start="1809:36" pos:end="1809:36">s</name></expr></argument>, <argument pos:start="1809:39" pos:end="1809:40"><expr pos:start="1809:39" pos:end="1809:40"><name pos:start="1809:39" pos:end="1809:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1811:21" pos:end="1811:63"><expr pos:start="1811:21" pos:end="1811:62"><call pos:start="1811:21" pos:end="1811:62"><name pos:start="1811:21" pos:end="1811:33">gen_aa32_st16</name><argument_list pos:start="1811:34" pos:end="1811:62">(<argument pos:start="1811:35" pos:end="1811:37"><expr pos:start="1811:35" pos:end="1811:37"><name pos:start="1811:35" pos:end="1811:37">tmp</name></expr></argument>, <argument pos:start="1811:40" pos:end="1811:43"><expr pos:start="1811:40" pos:end="1811:43"><name pos:start="1811:40" pos:end="1811:43">addr</name></expr></argument>, <argument pos:start="1811:46" pos:end="1811:61"><expr pos:start="1811:46" pos:end="1811:61"><call pos:start="1811:46" pos:end="1811:61"><name pos:start="1811:46" pos:end="1811:58">get_mem_index</name><argument_list pos:start="1811:59" pos:end="1811:61">(<argument pos:start="1811:60" pos:end="1811:60"><expr pos:start="1811:60" pos:end="1811:60"><name pos:start="1811:60" pos:end="1811:60">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1813:21" pos:end="1813:43"><expr pos:start="1813:21" pos:end="1813:42"><call pos:start="1813:21" pos:end="1813:42"><name pos:start="1813:21" pos:end="1813:37">tcg_temp_free_i32</name><argument_list pos:start="1813:38" pos:end="1813:42">(<argument pos:start="1813:39" pos:end="1813:41"><expr pos:start="1813:39" pos:end="1813:41"><name pos:start="1813:39" pos:end="1813:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <comment type="block" pos:start="1817:17" pos:end="1823:63">/* Perform base writeback before the loaded value to

                   ensure correct behavior with overlapping index registers.

                   ldrd with base writeback is undefined if the

                   destination and index registers overlap.  */</comment>

                <if_stmt pos:start="1825:17" pos:end="1843:17"><if pos:start="1825:17" pos:end="1831:17">if <condition pos:start="1825:20" pos:end="1825:40">(<expr pos:start="1825:21" pos:end="1825:39"><operator pos:start="1825:21" pos:end="1825:21">!</operator><operator pos:start="1825:22" pos:end="1825:22">(</operator><name pos:start="1825:23" pos:end="1825:26">insn</name> <operator pos:start="1825:28" pos:end="1825:28">&amp;</operator> <operator pos:start="1825:30" pos:end="1825:30">(</operator><literal type="number" pos:start="1825:31" pos:end="1825:31">1</literal> <operator pos:start="1825:33" pos:end="1825:34">&lt;&lt;</operator> <literal type="number" pos:start="1825:36" pos:end="1825:37">24</literal><operator pos:start="1825:38" pos:end="1825:38">)</operator><operator pos:start="1825:39" pos:end="1825:39">)</operator></expr>)</condition> <block pos:start="1825:42" pos:end="1831:17">{<block_content pos:start="1827:21" pos:end="1829:43">

                    <expr_stmt pos:start="1827:21" pos:end="1827:72"><expr pos:start="1827:21" pos:end="1827:71"><call pos:start="1827:21" pos:end="1827:71"><name pos:start="1827:21" pos:end="1827:40">gen_add_datah_offset</name><argument_list pos:start="1827:41" pos:end="1827:71">(<argument pos:start="1827:42" pos:end="1827:42"><expr pos:start="1827:42" pos:end="1827:42"><name pos:start="1827:42" pos:end="1827:42">s</name></expr></argument>, <argument pos:start="1827:45" pos:end="1827:48"><expr pos:start="1827:45" pos:end="1827:48"><name pos:start="1827:45" pos:end="1827:48">insn</name></expr></argument>, <argument pos:start="1827:51" pos:end="1827:64"><expr pos:start="1827:51" pos:end="1827:64"><name pos:start="1827:51" pos:end="1827:64">address_offset</name></expr></argument>, <argument pos:start="1827:67" pos:end="1827:70"><expr pos:start="1827:67" pos:end="1827:70"><name pos:start="1827:67" pos:end="1827:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1829:21" pos:end="1829:43"><expr pos:start="1829:21" pos:end="1829:42"><call pos:start="1829:21" pos:end="1829:42"><name pos:start="1829:21" pos:end="1829:29">store_reg</name><argument_list pos:start="1829:30" pos:end="1829:42">(<argument pos:start="1829:31" pos:end="1829:31"><expr pos:start="1829:31" pos:end="1829:31"><name pos:start="1829:31" pos:end="1829:31">s</name></expr></argument>, <argument pos:start="1829:34" pos:end="1829:35"><expr pos:start="1829:34" pos:end="1829:35"><name pos:start="1829:34" pos:end="1829:35">rn</name></expr></argument>, <argument pos:start="1829:38" pos:end="1829:41"><expr pos:start="1829:38" pos:end="1829:41"><name pos:start="1829:38" pos:end="1829:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1831:19" pos:end="1839:17">else if <condition pos:start="1831:27" pos:end="1831:44">(<expr pos:start="1831:28" pos:end="1831:43"><name pos:start="1831:28" pos:end="1831:31">insn</name> <operator pos:start="1831:33" pos:end="1831:33">&amp;</operator> <operator pos:start="1831:35" pos:end="1831:35">(</operator><literal type="number" pos:start="1831:36" pos:end="1831:36">1</literal> <operator pos:start="1831:38" pos:end="1831:39">&lt;&lt;</operator> <literal type="number" pos:start="1831:41" pos:end="1831:42">21</literal><operator pos:start="1831:43" pos:end="1831:43">)</operator></expr>)</condition> <block pos:start="1831:46" pos:end="1839:17">{<block_content pos:start="1833:21" pos:end="1837:43">

                    <if_stmt pos:start="1833:21" pos:end="1835:69"><if pos:start="1833:21" pos:end="1835:69">if <condition pos:start="1833:24" pos:end="1833:39">(<expr pos:start="1833:25" pos:end="1833:38"><name pos:start="1833:25" pos:end="1833:38">address_offset</name></expr>)</condition><block type="pseudo" pos:start="1835:25" pos:end="1835:69"><block_content pos:start="1835:25" pos:end="1835:69">

                        <expr_stmt pos:start="1835:25" pos:end="1835:69"><expr pos:start="1835:25" pos:end="1835:68"><call pos:start="1835:25" pos:end="1835:68"><name pos:start="1835:25" pos:end="1835:40">tcg_gen_addi_i32</name><argument_list pos:start="1835:41" pos:end="1835:68">(<argument pos:start="1835:42" pos:end="1835:45"><expr pos:start="1835:42" pos:end="1835:45"><name pos:start="1835:42" pos:end="1835:45">addr</name></expr></argument>, <argument pos:start="1835:48" pos:end="1835:51"><expr pos:start="1835:48" pos:end="1835:51"><name pos:start="1835:48" pos:end="1835:51">addr</name></expr></argument>, <argument pos:start="1835:54" pos:end="1835:67"><expr pos:start="1835:54" pos:end="1835:67"><name pos:start="1835:54" pos:end="1835:67">address_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1837:21" pos:end="1837:43"><expr pos:start="1837:21" pos:end="1837:42"><call pos:start="1837:21" pos:end="1837:42"><name pos:start="1837:21" pos:end="1837:29">store_reg</name><argument_list pos:start="1837:30" pos:end="1837:42">(<argument pos:start="1837:31" pos:end="1837:31"><expr pos:start="1837:31" pos:end="1837:31"><name pos:start="1837:31" pos:end="1837:31">s</name></expr></argument>, <argument pos:start="1837:34" pos:end="1837:35"><expr pos:start="1837:34" pos:end="1837:35"><name pos:start="1837:34" pos:end="1837:35">rn</name></expr></argument>, <argument pos:start="1837:38" pos:end="1837:41"><expr pos:start="1837:38" pos:end="1837:41"><name pos:start="1837:38" pos:end="1837:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1839:19" pos:end="1843:17">else <block pos:start="1839:24" pos:end="1843:17">{<block_content pos:start="1841:21" pos:end="1841:44">

                    <expr_stmt pos:start="1841:21" pos:end="1841:44"><expr pos:start="1841:21" pos:end="1841:43"><call pos:start="1841:21" pos:end="1841:43"><name pos:start="1841:21" pos:end="1841:37">tcg_temp_free_i32</name><argument_list pos:start="1841:38" pos:end="1841:43">(<argument pos:start="1841:39" pos:end="1841:42"><expr pos:start="1841:39" pos:end="1841:42"><name pos:start="1841:39" pos:end="1841:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1845:17" pos:end="1851:17"><if pos:start="1845:17" pos:end="1851:17">if <condition pos:start="1845:20" pos:end="1845:25">(<expr pos:start="1845:21" pos:end="1845:24"><name pos:start="1845:21" pos:end="1845:24">load</name></expr>)</condition> <block pos:start="1845:27" pos:end="1851:17">{<block_content pos:start="1849:21" pos:end="1849:42">

                    <comment type="block" pos:start="1847:21" pos:end="1847:45">/* Complete the load.  */</comment>

                    <expr_stmt pos:start="1849:21" pos:end="1849:42"><expr pos:start="1849:21" pos:end="1849:41"><call pos:start="1849:21" pos:end="1849:41"><name pos:start="1849:21" pos:end="1849:29">store_reg</name><argument_list pos:start="1849:30" pos:end="1849:41">(<argument pos:start="1849:31" pos:end="1849:31"><expr pos:start="1849:31" pos:end="1849:31"><name pos:start="1849:31" pos:end="1849:31">s</name></expr></argument>, <argument pos:start="1849:34" pos:end="1849:35"><expr pos:start="1849:34" pos:end="1849:35"><name pos:start="1849:34" pos:end="1849:35">rd</name></expr></argument>, <argument pos:start="1849:38" pos:end="1849:40"><expr pos:start="1849:38" pos:end="1849:40"><name pos:start="1849:38" pos:end="1849:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1855:13" pos:end="1855:18">break;</break>

        <case pos:start="1857:9" pos:end="1857:17">case <expr pos:start="1857:14" pos:end="1857:16"><literal type="number" pos:start="1857:14" pos:end="1857:16">0x4</literal></expr>:</case>

        <case pos:start="1859:9" pos:end="1859:17">case <expr pos:start="1859:14" pos:end="1859:16"><literal type="number" pos:start="1859:14" pos:end="1859:16">0x5</literal></expr>:</case>

            <goto pos:start="1861:13" pos:end="1861:25">goto <name pos:start="1861:18" pos:end="1861:24">do_ldst</name>;</goto>

        <case pos:start="1863:9" pos:end="1863:17">case <expr pos:start="1863:14" pos:end="1863:16"><literal type="number" pos:start="1863:14" pos:end="1863:16">0x6</literal></expr>:</case>

        <case pos:start="1865:9" pos:end="1865:17">case <expr pos:start="1865:14" pos:end="1865:16"><literal type="number" pos:start="1865:14" pos:end="1865:16">0x7</literal></expr>:</case>

            <if_stmt pos:start="1867:13" pos:end="2463:13"><if pos:start="1867:13" pos:end="2463:13">if <condition pos:start="1867:16" pos:end="1867:32">(<expr pos:start="1867:17" pos:end="1867:31"><name pos:start="1867:17" pos:end="1867:20">insn</name> <operator pos:start="1867:22" pos:end="1867:22">&amp;</operator> <operator pos:start="1867:24" pos:end="1867:24">(</operator><literal type="number" pos:start="1867:25" pos:end="1867:25">1</literal> <operator pos:start="1867:27" pos:end="1867:28">&lt;&lt;</operator> <literal type="number" pos:start="1867:30" pos:end="1867:30">4</literal><operator pos:start="1867:31" pos:end="1867:31">)</operator></expr>)</condition> <block pos:start="1867:34" pos:end="2463:13">{<block_content pos:start="1869:17" pos:end="2461:22">

                <expr_stmt pos:start="1869:17" pos:end="1869:24"><expr pos:start="1869:17" pos:end="1869:23"><call pos:start="1869:17" pos:end="1869:23"><name pos:start="1869:17" pos:end="1869:20">ARCH</name><argument_list pos:start="1869:21" pos:end="1869:23">(<argument pos:start="1869:22" pos:end="1869:22"><expr pos:start="1869:22" pos:end="1869:22"><literal type="number" pos:start="1869:22" pos:end="1869:22">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="1871:17" pos:end="1871:48">/* Armv6 Media instructions.  */</comment>

                <expr_stmt pos:start="1873:17" pos:end="1873:32"><expr pos:start="1873:17" pos:end="1873:31"><name pos:start="1873:17" pos:end="1873:18">rm</name> <operator pos:start="1873:20" pos:end="1873:20">=</operator> <name pos:start="1873:22" pos:end="1873:25">insn</name> <operator pos:start="1873:27" pos:end="1873:27">&amp;</operator> <literal type="number" pos:start="1873:29" pos:end="1873:31">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1875:17" pos:end="1875:40"><expr pos:start="1875:17" pos:end="1875:39"><name pos:start="1875:17" pos:end="1875:18">rn</name> <operator pos:start="1875:20" pos:end="1875:20">=</operator> <operator pos:start="1875:22" pos:end="1875:22">(</operator><name pos:start="1875:23" pos:end="1875:26">insn</name> <operator pos:start="1875:28" pos:end="1875:29">&gt;&gt;</operator> <literal type="number" pos:start="1875:31" pos:end="1875:32">16</literal><operator pos:start="1875:33" pos:end="1875:33">)</operator> <operator pos:start="1875:35" pos:end="1875:35">&amp;</operator> <literal type="number" pos:start="1875:37" pos:end="1875:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1877:17" pos:end="1877:40"><expr pos:start="1877:17" pos:end="1877:39"><name pos:start="1877:17" pos:end="1877:18">rd</name> <operator pos:start="1877:20" pos:end="1877:20">=</operator> <operator pos:start="1877:22" pos:end="1877:22">(</operator><name pos:start="1877:23" pos:end="1877:26">insn</name> <operator pos:start="1877:28" pos:end="1877:29">&gt;&gt;</operator> <literal type="number" pos:start="1877:31" pos:end="1877:32">12</literal><operator pos:start="1877:33" pos:end="1877:33">)</operator> <operator pos:start="1877:35" pos:end="1877:35">&amp;</operator> <literal type="number" pos:start="1877:37" pos:end="1877:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1879:17" pos:end="1879:39"><expr pos:start="1879:17" pos:end="1879:38"><name pos:start="1879:17" pos:end="1879:18">rs</name> <operator pos:start="1879:20" pos:end="1879:20">=</operator> <operator pos:start="1879:22" pos:end="1879:22">(</operator><name pos:start="1879:23" pos:end="1879:26">insn</name> <operator pos:start="1879:28" pos:end="1879:29">&gt;&gt;</operator> <literal type="number" pos:start="1879:31" pos:end="1879:31">8</literal><operator pos:start="1879:32" pos:end="1879:32">)</operator> <operator pos:start="1879:34" pos:end="1879:34">&amp;</operator> <literal type="number" pos:start="1879:36" pos:end="1879:38">0xf</literal></expr>;</expr_stmt>

                <switch pos:start="1881:17" pos:end="2459:17">switch <condition pos:start="1881:24" pos:end="1881:41">(<expr pos:start="1881:25" pos:end="1881:40"><operator pos:start="1881:25" pos:end="1881:25">(</operator><name pos:start="1881:26" pos:end="1881:29">insn</name> <operator pos:start="1881:31" pos:end="1881:32">&gt;&gt;</operator> <literal type="number" pos:start="1881:34" pos:end="1881:35">23</literal><operator pos:start="1881:36" pos:end="1881:36">)</operator> <operator pos:start="1881:38" pos:end="1881:38">&amp;</operator> <literal type="number" pos:start="1881:40" pos:end="1881:40">3</literal></expr>)</condition> <block pos:start="1881:43" pos:end="2459:17">{<block_content pos:start="1883:17" pos:end="2457:26">

                <case pos:start="1883:17" pos:end="1883:23">case <expr pos:start="1883:22" pos:end="1883:22"><literal type="number" pos:start="1883:22" pos:end="1883:22">0</literal></expr>:</case> <comment type="block" pos:start="1883:25" pos:end="1883:53">/* Parallel add/subtract.  */</comment>

                    <expr_stmt pos:start="1885:21" pos:end="1885:43"><expr pos:start="1885:21" pos:end="1885:42"><name pos:start="1885:21" pos:end="1885:23">op1</name> <operator pos:start="1885:25" pos:end="1885:25">=</operator> <operator pos:start="1885:27" pos:end="1885:27">(</operator><name pos:start="1885:28" pos:end="1885:31">insn</name> <operator pos:start="1885:33" pos:end="1885:34">&gt;&gt;</operator> <literal type="number" pos:start="1885:36" pos:end="1885:37">20</literal><operator pos:start="1885:38" pos:end="1885:38">)</operator> <operator pos:start="1885:40" pos:end="1885:40">&amp;</operator> <literal type="number" pos:start="1885:42" pos:end="1885:42">7</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1887:21" pos:end="1887:42"><expr pos:start="1887:21" pos:end="1887:41"><name pos:start="1887:21" pos:end="1887:23">tmp</name> <operator pos:start="1887:25" pos:end="1887:25">=</operator> <call pos:start="1887:27" pos:end="1887:41"><name pos:start="1887:27" pos:end="1887:34">load_reg</name><argument_list pos:start="1887:35" pos:end="1887:41">(<argument pos:start="1887:36" pos:end="1887:36"><expr pos:start="1887:36" pos:end="1887:36"><name pos:start="1887:36" pos:end="1887:36">s</name></expr></argument>, <argument pos:start="1887:39" pos:end="1887:40"><expr pos:start="1887:39" pos:end="1887:40"><name pos:start="1887:39" pos:end="1887:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1889:21" pos:end="1889:43"><expr pos:start="1889:21" pos:end="1889:42"><name pos:start="1889:21" pos:end="1889:24">tmp2</name> <operator pos:start="1889:26" pos:end="1889:26">=</operator> <call pos:start="1889:28" pos:end="1889:42"><name pos:start="1889:28" pos:end="1889:35">load_reg</name><argument_list pos:start="1889:36" pos:end="1889:42">(<argument pos:start="1889:37" pos:end="1889:37"><expr pos:start="1889:37" pos:end="1889:37"><name pos:start="1889:37" pos:end="1889:37">s</name></expr></argument>, <argument pos:start="1889:40" pos:end="1889:41"><expr pos:start="1889:40" pos:end="1889:41"><name pos:start="1889:40" pos:end="1889:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1891:21" pos:end="1891:41"><expr pos:start="1891:21" pos:end="1891:40"><name pos:start="1891:21" pos:end="1891:22">sh</name> <operator pos:start="1891:24" pos:end="1891:24">=</operator> <operator pos:start="1891:26" pos:end="1891:26">(</operator><name pos:start="1891:27" pos:end="1891:30">insn</name> <operator pos:start="1891:32" pos:end="1891:33">&gt;&gt;</operator> <literal type="number" pos:start="1891:35" pos:end="1891:35">5</literal><operator pos:start="1891:36" pos:end="1891:36">)</operator> <operator pos:start="1891:38" pos:end="1891:38">&amp;</operator> <literal type="number" pos:start="1891:40" pos:end="1891:40">7</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1893:21" pos:end="1895:40"><if pos:start="1893:21" pos:end="1895:40">if <condition pos:start="1893:24" pos:end="1893:61">(<expr pos:start="1893:25" pos:end="1893:60"><operator pos:start="1893:25" pos:end="1893:25">(</operator><name pos:start="1893:26" pos:end="1893:28">op1</name> <operator pos:start="1893:30" pos:end="1893:30">&amp;</operator> <literal type="number" pos:start="1893:32" pos:end="1893:32">3</literal><operator pos:start="1893:33" pos:end="1893:33">)</operator> <operator pos:start="1893:35" pos:end="1893:36">==</operator> <literal type="number" pos:start="1893:38" pos:end="1893:38">0</literal> <operator pos:start="1893:40" pos:end="1893:41">||</operator> <name pos:start="1893:43" pos:end="1893:44">sh</name> <operator pos:start="1893:46" pos:end="1893:47">==</operator> <literal type="number" pos:start="1893:49" pos:end="1893:49">5</literal> <operator pos:start="1893:51" pos:end="1893:52">||</operator> <name pos:start="1893:54" pos:end="1893:55">sh</name> <operator pos:start="1893:57" pos:end="1893:58">==</operator> <literal type="number" pos:start="1893:60" pos:end="1893:60">6</literal></expr>)</condition><block type="pseudo" pos:start="1895:25" pos:end="1895:40"><block_content pos:start="1895:25" pos:end="1895:40">

                        <goto pos:start="1895:25" pos:end="1895:40">goto <name pos:start="1895:30" pos:end="1895:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1897:21" pos:end="1897:64"><expr pos:start="1897:21" pos:end="1897:63"><call pos:start="1897:21" pos:end="1897:63"><name pos:start="1897:21" pos:end="1897:43">gen_arm_parallel_addsub</name><argument_list pos:start="1897:44" pos:end="1897:63">(<argument pos:start="1897:45" pos:end="1897:47"><expr pos:start="1897:45" pos:end="1897:47"><name pos:start="1897:45" pos:end="1897:47">op1</name></expr></argument>, <argument pos:start="1897:50" pos:end="1897:51"><expr pos:start="1897:50" pos:end="1897:51"><name pos:start="1897:50" pos:end="1897:51">sh</name></expr></argument>, <argument pos:start="1897:54" pos:end="1897:56"><expr pos:start="1897:54" pos:end="1897:56"><name pos:start="1897:54" pos:end="1897:56">tmp</name></expr></argument>, <argument pos:start="1897:59" pos:end="1897:62"><expr pos:start="1897:59" pos:end="1897:62"><name pos:start="1897:59" pos:end="1897:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1899:21" pos:end="1899:44"><expr pos:start="1899:21" pos:end="1899:43"><call pos:start="1899:21" pos:end="1899:43"><name pos:start="1899:21" pos:end="1899:37">tcg_temp_free_i32</name><argument_list pos:start="1899:38" pos:end="1899:43">(<argument pos:start="1899:39" pos:end="1899:42"><expr pos:start="1899:39" pos:end="1899:42"><name pos:start="1899:39" pos:end="1899:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1901:21" pos:end="1901:42"><expr pos:start="1901:21" pos:end="1901:41"><call pos:start="1901:21" pos:end="1901:41"><name pos:start="1901:21" pos:end="1901:29">store_reg</name><argument_list pos:start="1901:30" pos:end="1901:41">(<argument pos:start="1901:31" pos:end="1901:31"><expr pos:start="1901:31" pos:end="1901:31"><name pos:start="1901:31" pos:end="1901:31">s</name></expr></argument>, <argument pos:start="1901:34" pos:end="1901:35"><expr pos:start="1901:34" pos:end="1901:35"><name pos:start="1901:34" pos:end="1901:35">rd</name></expr></argument>, <argument pos:start="1901:38" pos:end="1901:40"><expr pos:start="1901:38" pos:end="1901:40"><name pos:start="1901:38" pos:end="1901:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1903:21" pos:end="1903:26">break;</break>

                <case pos:start="1905:17" pos:end="1905:23">case <expr pos:start="1905:22" pos:end="1905:22"><literal type="number" pos:start="1905:22" pos:end="1905:22">1</literal></expr>:</case>

                    <if_stmt pos:start="1907:21" pos:end="2123:21"><if pos:start="1907:21" pos:end="1951:21">if <condition pos:start="1907:24" pos:end="1907:49">(<expr pos:start="1907:25" pos:end="1907:48"><operator pos:start="1907:25" pos:end="1907:25">(</operator><name pos:start="1907:26" pos:end="1907:29">insn</name> <operator pos:start="1907:31" pos:end="1907:31">&amp;</operator> <literal type="number" pos:start="1907:33" pos:end="1907:42">0x00700020</literal><operator pos:start="1907:43" pos:end="1907:43">)</operator> <operator pos:start="1907:45" pos:end="1907:46">==</operator> <literal type="number" pos:start="1907:48" pos:end="1907:48">0</literal></expr>)</condition> <block pos:start="1907:51" pos:end="1951:21">{<block_content pos:start="1911:25" pos:end="1949:46">

                        <comment type="block" pos:start="1909:25" pos:end="1909:45">/* Halfword pack.  */</comment>

                        <expr_stmt pos:start="1911:25" pos:end="1911:46"><expr pos:start="1911:25" pos:end="1911:45"><name pos:start="1911:25" pos:end="1911:27">tmp</name> <operator pos:start="1911:29" pos:end="1911:29">=</operator> <call pos:start="1911:31" pos:end="1911:45"><name pos:start="1911:31" pos:end="1911:38">load_reg</name><argument_list pos:start="1911:39" pos:end="1911:45">(<argument pos:start="1911:40" pos:end="1911:40"><expr pos:start="1911:40" pos:end="1911:40"><name pos:start="1911:40" pos:end="1911:40">s</name></expr></argument>, <argument pos:start="1911:43" pos:end="1911:44"><expr pos:start="1911:43" pos:end="1911:44"><name pos:start="1911:43" pos:end="1911:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1913:25" pos:end="1913:47"><expr pos:start="1913:25" pos:end="1913:46"><name pos:start="1913:25" pos:end="1913:28">tmp2</name> <operator pos:start="1913:30" pos:end="1913:30">=</operator> <call pos:start="1913:32" pos:end="1913:46"><name pos:start="1913:32" pos:end="1913:39">load_reg</name><argument_list pos:start="1913:40" pos:end="1913:46">(<argument pos:start="1913:41" pos:end="1913:41"><expr pos:start="1913:41" pos:end="1913:41"><name pos:start="1913:41" pos:end="1913:41">s</name></expr></argument>, <argument pos:start="1913:44" pos:end="1913:45"><expr pos:start="1913:44" pos:end="1913:45"><name pos:start="1913:44" pos:end="1913:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1915:25" pos:end="1915:51"><expr pos:start="1915:25" pos:end="1915:50"><name pos:start="1915:25" pos:end="1915:29">shift</name> <operator pos:start="1915:31" pos:end="1915:31">=</operator> <operator pos:start="1915:33" pos:end="1915:33">(</operator><name pos:start="1915:34" pos:end="1915:37">insn</name> <operator pos:start="1915:39" pos:end="1915:40">&gt;&gt;</operator> <literal type="number" pos:start="1915:42" pos:end="1915:42">7</literal><operator pos:start="1915:43" pos:end="1915:43">)</operator> <operator pos:start="1915:45" pos:end="1915:45">&amp;</operator> <literal type="number" pos:start="1915:47" pos:end="1915:50">0x1f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1917:25" pos:end="1943:25"><if pos:start="1917:25" pos:end="1931:25">if <condition pos:start="1917:28" pos:end="1917:44">(<expr pos:start="1917:29" pos:end="1917:43"><name pos:start="1917:29" pos:end="1917:32">insn</name> <operator pos:start="1917:34" pos:end="1917:34">&amp;</operator> <operator pos:start="1917:36" pos:end="1917:36">(</operator><literal type="number" pos:start="1917:37" pos:end="1917:37">1</literal> <operator pos:start="1917:39" pos:end="1917:40">&lt;&lt;</operator> <literal type="number" pos:start="1917:42" pos:end="1917:42">6</literal><operator pos:start="1917:43" pos:end="1917:43">)</operator></expr>)</condition> <block pos:start="1917:46" pos:end="1931:25">{<block_content pos:start="1921:29" pos:end="1929:59">

                            <comment type="block" pos:start="1919:29" pos:end="1919:39">/* pkhtb */</comment>

                            <if_stmt pos:start="1921:29" pos:end="1923:43"><if pos:start="1921:29" pos:end="1923:43">if <condition pos:start="1921:32" pos:end="1921:43">(<expr pos:start="1921:33" pos:end="1921:42"><name pos:start="1921:33" pos:end="1921:37">shift</name> <operator pos:start="1921:39" pos:end="1921:40">==</operator> <literal type="number" pos:start="1921:42" pos:end="1921:42">0</literal></expr>)</condition><block type="pseudo" pos:start="1923:33" pos:end="1923:43"><block_content pos:start="1923:33" pos:end="1923:43">

                                <expr_stmt pos:start="1923:33" pos:end="1923:43"><expr pos:start="1923:33" pos:end="1923:42"><name pos:start="1923:33" pos:end="1923:37">shift</name> <operator pos:start="1923:39" pos:end="1923:39">=</operator> <literal type="number" pos:start="1923:41" pos:end="1923:42">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1925:29" pos:end="1925:64"><expr pos:start="1925:29" pos:end="1925:63"><call pos:start="1925:29" pos:end="1925:63"><name pos:start="1925:29" pos:end="1925:44">tcg_gen_sari_i32</name><argument_list pos:start="1925:45" pos:end="1925:63">(<argument pos:start="1925:46" pos:end="1925:49"><expr pos:start="1925:46" pos:end="1925:49"><name pos:start="1925:46" pos:end="1925:49">tmp2</name></expr></argument>, <argument pos:start="1925:52" pos:end="1925:55"><expr pos:start="1925:52" pos:end="1925:55"><name pos:start="1925:52" pos:end="1925:55">tmp2</name></expr></argument>, <argument pos:start="1925:58" pos:end="1925:62"><expr pos:start="1925:58" pos:end="1925:62"><name pos:start="1925:58" pos:end="1925:62">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1927:29" pos:end="1927:67"><expr pos:start="1927:29" pos:end="1927:66"><call pos:start="1927:29" pos:end="1927:66"><name pos:start="1927:29" pos:end="1927:44">tcg_gen_andi_i32</name><argument_list pos:start="1927:45" pos:end="1927:66">(<argument pos:start="1927:46" pos:end="1927:48"><expr pos:start="1927:46" pos:end="1927:48"><name pos:start="1927:46" pos:end="1927:48">tmp</name></expr></argument>, <argument pos:start="1927:51" pos:end="1927:53"><expr pos:start="1927:51" pos:end="1927:53"><name pos:start="1927:51" pos:end="1927:53">tmp</name></expr></argument>, <argument pos:start="1927:56" pos:end="1927:65"><expr pos:start="1927:56" pos:end="1927:65"><literal type="number" pos:start="1927:56" pos:end="1927:65">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1929:29" pos:end="1929:59"><expr pos:start="1929:29" pos:end="1929:58"><call pos:start="1929:29" pos:end="1929:58"><name pos:start="1929:29" pos:end="1929:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1929:47" pos:end="1929:58">(<argument pos:start="1929:48" pos:end="1929:51"><expr pos:start="1929:48" pos:end="1929:51"><name pos:start="1929:48" pos:end="1929:51">tmp2</name></expr></argument>, <argument pos:start="1929:54" pos:end="1929:57"><expr pos:start="1929:54" pos:end="1929:57"><name pos:start="1929:54" pos:end="1929:57">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1931:27" pos:end="1943:25">else <block pos:start="1931:32" pos:end="1943:25">{<block_content pos:start="1935:29" pos:end="1941:69">

                            <comment type="block" pos:start="1933:29" pos:end="1933:39">/* pkhbt */</comment>

                            <if_stmt pos:start="1935:29" pos:end="1937:68"><if pos:start="1935:29" pos:end="1937:68">if <condition pos:start="1935:32" pos:end="1935:38">(<expr pos:start="1935:33" pos:end="1935:37"><name pos:start="1935:33" pos:end="1935:37">shift</name></expr>)</condition><block type="pseudo" pos:start="1937:33" pos:end="1937:68"><block_content pos:start="1937:33" pos:end="1937:68">

                                <expr_stmt pos:start="1937:33" pos:end="1937:68"><expr pos:start="1937:33" pos:end="1937:67"><call pos:start="1937:33" pos:end="1937:67"><name pos:start="1937:33" pos:end="1937:48">tcg_gen_shli_i32</name><argument_list pos:start="1937:49" pos:end="1937:67">(<argument pos:start="1937:50" pos:end="1937:53"><expr pos:start="1937:50" pos:end="1937:53"><name pos:start="1937:50" pos:end="1937:53">tmp2</name></expr></argument>, <argument pos:start="1937:56" pos:end="1937:59"><expr pos:start="1937:56" pos:end="1937:59"><name pos:start="1937:56" pos:end="1937:59">tmp2</name></expr></argument>, <argument pos:start="1937:62" pos:end="1937:66"><expr pos:start="1937:62" pos:end="1937:66"><name pos:start="1937:62" pos:end="1937:66">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1939:29" pos:end="1939:57"><expr pos:start="1939:29" pos:end="1939:56"><call pos:start="1939:29" pos:end="1939:56"><name pos:start="1939:29" pos:end="1939:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1939:47" pos:end="1939:56">(<argument pos:start="1939:48" pos:end="1939:50"><expr pos:start="1939:48" pos:end="1939:50"><name pos:start="1939:48" pos:end="1939:50">tmp</name></expr></argument>, <argument pos:start="1939:53" pos:end="1939:55"><expr pos:start="1939:53" pos:end="1939:55"><name pos:start="1939:53" pos:end="1939:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1941:29" pos:end="1941:69"><expr pos:start="1941:29" pos:end="1941:68"><call pos:start="1941:29" pos:end="1941:68"><name pos:start="1941:29" pos:end="1941:44">tcg_gen_andi_i32</name><argument_list pos:start="1941:45" pos:end="1941:68">(<argument pos:start="1941:46" pos:end="1941:49"><expr pos:start="1941:46" pos:end="1941:49"><name pos:start="1941:46" pos:end="1941:49">tmp2</name></expr></argument>, <argument pos:start="1941:52" pos:end="1941:55"><expr pos:start="1941:52" pos:end="1941:55"><name pos:start="1941:52" pos:end="1941:55">tmp2</name></expr></argument>, <argument pos:start="1941:58" pos:end="1941:67"><expr pos:start="1941:58" pos:end="1941:67"><literal type="number" pos:start="1941:58" pos:end="1941:67">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1945:25" pos:end="1945:55"><expr pos:start="1945:25" pos:end="1945:54"><call pos:start="1945:25" pos:end="1945:54"><name pos:start="1945:25" pos:end="1945:38">tcg_gen_or_i32</name><argument_list pos:start="1945:39" pos:end="1945:54">(<argument pos:start="1945:40" pos:end="1945:42"><expr pos:start="1945:40" pos:end="1945:42"><name pos:start="1945:40" pos:end="1945:42">tmp</name></expr></argument>, <argument pos:start="1945:45" pos:end="1945:47"><expr pos:start="1945:45" pos:end="1945:47"><name pos:start="1945:45" pos:end="1945:47">tmp</name></expr></argument>, <argument pos:start="1945:50" pos:end="1945:53"><expr pos:start="1945:50" pos:end="1945:53"><name pos:start="1945:50" pos:end="1945:53">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1947:25" pos:end="1947:48"><expr pos:start="1947:25" pos:end="1947:47"><call pos:start="1947:25" pos:end="1947:47"><name pos:start="1947:25" pos:end="1947:41">tcg_temp_free_i32</name><argument_list pos:start="1947:42" pos:end="1947:47">(<argument pos:start="1947:43" pos:end="1947:46"><expr pos:start="1947:43" pos:end="1947:46"><name pos:start="1947:43" pos:end="1947:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1949:25" pos:end="1949:46"><expr pos:start="1949:25" pos:end="1949:45"><call pos:start="1949:25" pos:end="1949:45"><name pos:start="1949:25" pos:end="1949:33">store_reg</name><argument_list pos:start="1949:34" pos:end="1949:45">(<argument pos:start="1949:35" pos:end="1949:35"><expr pos:start="1949:35" pos:end="1949:35"><name pos:start="1949:35" pos:end="1949:35">s</name></expr></argument>, <argument pos:start="1949:38" pos:end="1949:39"><expr pos:start="1949:38" pos:end="1949:39"><name pos:start="1949:38" pos:end="1949:39">rd</name></expr></argument>, <argument pos:start="1949:42" pos:end="1949:44"><expr pos:start="1949:42" pos:end="1949:44"><name pos:start="1949:42" pos:end="1949:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1951:23" pos:end="1989:21">else if <condition pos:start="1951:31" pos:end="1951:65">(<expr pos:start="1951:32" pos:end="1951:64"><operator pos:start="1951:32" pos:end="1951:32">(</operator><name pos:start="1951:33" pos:end="1951:36">insn</name> <operator pos:start="1951:38" pos:end="1951:38">&amp;</operator> <literal type="number" pos:start="1951:40" pos:end="1951:49">0x00200020</literal><operator pos:start="1951:50" pos:end="1951:50">)</operator> <operator pos:start="1951:52" pos:end="1951:53">==</operator> <literal type="number" pos:start="1951:55" pos:end="1951:64">0x00200000</literal></expr>)</condition> <block pos:start="1951:67" pos:end="1989:21">{<block_content pos:start="1955:25" pos:end="1987:46">

                        <comment type="block" pos:start="1953:25" pos:end="1953:37">/* [us]sat */</comment>

                        <expr_stmt pos:start="1955:25" pos:end="1955:46"><expr pos:start="1955:25" pos:end="1955:45"><name pos:start="1955:25" pos:end="1955:27">tmp</name> <operator pos:start="1955:29" pos:end="1955:29">=</operator> <call pos:start="1955:31" pos:end="1955:45"><name pos:start="1955:31" pos:end="1955:38">load_reg</name><argument_list pos:start="1955:39" pos:end="1955:45">(<argument pos:start="1955:40" pos:end="1955:40"><expr pos:start="1955:40" pos:end="1955:40"><name pos:start="1955:40" pos:end="1955:40">s</name></expr></argument>, <argument pos:start="1955:43" pos:end="1955:44"><expr pos:start="1955:43" pos:end="1955:44"><name pos:start="1955:43" pos:end="1955:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1957:25" pos:end="1957:51"><expr pos:start="1957:25" pos:end="1957:50"><name pos:start="1957:25" pos:end="1957:29">shift</name> <operator pos:start="1957:31" pos:end="1957:31">=</operator> <operator pos:start="1957:33" pos:end="1957:33">(</operator><name pos:start="1957:34" pos:end="1957:37">insn</name> <operator pos:start="1957:39" pos:end="1957:40">&gt;&gt;</operator> <literal type="number" pos:start="1957:42" pos:end="1957:42">7</literal><operator pos:start="1957:43" pos:end="1957:43">)</operator> <operator pos:start="1957:45" pos:end="1957:45">&amp;</operator> <literal type="number" pos:start="1957:47" pos:end="1957:50">0x1f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1959:25" pos:end="1971:25"><if pos:start="1959:25" pos:end="1967:25">if <condition pos:start="1959:28" pos:end="1959:44">(<expr pos:start="1959:29" pos:end="1959:43"><name pos:start="1959:29" pos:end="1959:32">insn</name> <operator pos:start="1959:34" pos:end="1959:34">&amp;</operator> <operator pos:start="1959:36" pos:end="1959:36">(</operator><literal type="number" pos:start="1959:37" pos:end="1959:37">1</literal> <operator pos:start="1959:39" pos:end="1959:40">&lt;&lt;</operator> <literal type="number" pos:start="1959:42" pos:end="1959:42">6</literal><operator pos:start="1959:43" pos:end="1959:43">)</operator></expr>)</condition> <block pos:start="1959:46" pos:end="1967:25">{<block_content pos:start="1961:29" pos:end="1965:62">

                            <if_stmt pos:start="1961:29" pos:end="1963:43"><if pos:start="1961:29" pos:end="1963:43">if <condition pos:start="1961:32" pos:end="1961:43">(<expr pos:start="1961:33" pos:end="1961:42"><name pos:start="1961:33" pos:end="1961:37">shift</name> <operator pos:start="1961:39" pos:end="1961:40">==</operator> <literal type="number" pos:start="1961:42" pos:end="1961:42">0</literal></expr>)</condition><block type="pseudo" pos:start="1963:33" pos:end="1963:43"><block_content pos:start="1963:33" pos:end="1963:43">

                                <expr_stmt pos:start="1963:33" pos:end="1963:43"><expr pos:start="1963:33" pos:end="1963:42"><name pos:start="1963:33" pos:end="1963:37">shift</name> <operator pos:start="1963:39" pos:end="1963:39">=</operator> <literal type="number" pos:start="1963:41" pos:end="1963:42">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1965:29" pos:end="1965:62"><expr pos:start="1965:29" pos:end="1965:61"><call pos:start="1965:29" pos:end="1965:61"><name pos:start="1965:29" pos:end="1965:44">tcg_gen_sari_i32</name><argument_list pos:start="1965:45" pos:end="1965:61">(<argument pos:start="1965:46" pos:end="1965:48"><expr pos:start="1965:46" pos:end="1965:48"><name pos:start="1965:46" pos:end="1965:48">tmp</name></expr></argument>, <argument pos:start="1965:51" pos:end="1965:53"><expr pos:start="1965:51" pos:end="1965:53"><name pos:start="1965:51" pos:end="1965:53">tmp</name></expr></argument>, <argument pos:start="1965:56" pos:end="1965:60"><expr pos:start="1965:56" pos:end="1965:60"><name pos:start="1965:56" pos:end="1965:60">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1967:27" pos:end="1971:25">else <block pos:start="1967:32" pos:end="1971:25">{<block_content pos:start="1969:29" pos:end="1969:62">

                            <expr_stmt pos:start="1969:29" pos:end="1969:62"><expr pos:start="1969:29" pos:end="1969:61"><call pos:start="1969:29" pos:end="1969:61"><name pos:start="1969:29" pos:end="1969:44">tcg_gen_shli_i32</name><argument_list pos:start="1969:45" pos:end="1969:61">(<argument pos:start="1969:46" pos:end="1969:48"><expr pos:start="1969:46" pos:end="1969:48"><name pos:start="1969:46" pos:end="1969:48">tmp</name></expr></argument>, <argument pos:start="1969:51" pos:end="1969:53"><expr pos:start="1969:51" pos:end="1969:53"><name pos:start="1969:51" pos:end="1969:53">tmp</name></expr></argument>, <argument pos:start="1969:56" pos:end="1969:60"><expr pos:start="1969:56" pos:end="1969:60"><name pos:start="1969:56" pos:end="1969:60">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1973:25" pos:end="1973:49"><expr pos:start="1973:25" pos:end="1973:48"><name pos:start="1973:25" pos:end="1973:26">sh</name> <operator pos:start="1973:28" pos:end="1973:28">=</operator> <operator pos:start="1973:30" pos:end="1973:30">(</operator><name pos:start="1973:31" pos:end="1973:34">insn</name> <operator pos:start="1973:36" pos:end="1973:37">&gt;&gt;</operator> <literal type="number" pos:start="1973:39" pos:end="1973:40">16</literal><operator pos:start="1973:41" pos:end="1973:41">)</operator> <operator pos:start="1973:43" pos:end="1973:43">&amp;</operator> <literal type="number" pos:start="1973:45" pos:end="1973:48">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1975:25" pos:end="1975:49"><expr pos:start="1975:25" pos:end="1975:48"><name pos:start="1975:25" pos:end="1975:28">tmp2</name> <operator pos:start="1975:30" pos:end="1975:30">=</operator> <call pos:start="1975:32" pos:end="1975:48"><name pos:start="1975:32" pos:end="1975:44">tcg_const_i32</name><argument_list pos:start="1975:45" pos:end="1975:48">(<argument pos:start="1975:46" pos:end="1975:47"><expr pos:start="1975:46" pos:end="1975:47"><name pos:start="1975:46" pos:end="1975:47">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1977:25" pos:end="1983:67"><if pos:start="1977:25" pos:end="1979:67">if <condition pos:start="1977:28" pos:end="1977:45">(<expr pos:start="1977:29" pos:end="1977:44"><name pos:start="1977:29" pos:end="1977:32">insn</name> <operator pos:start="1977:34" pos:end="1977:34">&amp;</operator> <operator pos:start="1977:36" pos:end="1977:36">(</operator><literal type="number" pos:start="1977:37" pos:end="1977:37">1</literal> <operator pos:start="1977:39" pos:end="1977:40">&lt;&lt;</operator> <literal type="number" pos:start="1977:42" pos:end="1977:43">22</literal><operator pos:start="1977:44" pos:end="1977:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1979:27" pos:end="1979:67"><block_content pos:start="1979:27" pos:end="1979:67">

                          <expr_stmt pos:start="1979:27" pos:end="1979:67"><expr pos:start="1979:27" pos:end="1979:66"><call pos:start="1979:27" pos:end="1979:66"><name pos:start="1979:27" pos:end="1979:41">gen_helper_usat</name><argument_list pos:start="1979:42" pos:end="1979:66">(<argument pos:start="1979:43" pos:end="1979:45"><expr pos:start="1979:43" pos:end="1979:45"><name pos:start="1979:43" pos:end="1979:45">tmp</name></expr></argument>, <argument pos:start="1979:48" pos:end="1979:54"><expr pos:start="1979:48" pos:end="1979:54"><name pos:start="1979:48" pos:end="1979:54">cpu_env</name></expr></argument>, <argument pos:start="1979:57" pos:end="1979:59"><expr pos:start="1979:57" pos:end="1979:59"><name pos:start="1979:57" pos:end="1979:59">tmp</name></expr></argument>, <argument pos:start="1979:62" pos:end="1979:65"><expr pos:start="1979:62" pos:end="1979:65"><name pos:start="1979:62" pos:end="1979:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1981:25" pos:end="1983:67">else<block type="pseudo" pos:start="1983:27" pos:end="1983:67"><block_content pos:start="1983:27" pos:end="1983:67">

                          <expr_stmt pos:start="1983:27" pos:end="1983:67"><expr pos:start="1983:27" pos:end="1983:66"><call pos:start="1983:27" pos:end="1983:66"><name pos:start="1983:27" pos:end="1983:41">gen_helper_ssat</name><argument_list pos:start="1983:42" pos:end="1983:66">(<argument pos:start="1983:43" pos:end="1983:45"><expr pos:start="1983:43" pos:end="1983:45"><name pos:start="1983:43" pos:end="1983:45">tmp</name></expr></argument>, <argument pos:start="1983:48" pos:end="1983:54"><expr pos:start="1983:48" pos:end="1983:54"><name pos:start="1983:48" pos:end="1983:54">cpu_env</name></expr></argument>, <argument pos:start="1983:57" pos:end="1983:59"><expr pos:start="1983:57" pos:end="1983:59"><name pos:start="1983:57" pos:end="1983:59">tmp</name></expr></argument>, <argument pos:start="1983:62" pos:end="1983:65"><expr pos:start="1983:62" pos:end="1983:65"><name pos:start="1983:62" pos:end="1983:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1985:25" pos:end="1985:48"><expr pos:start="1985:25" pos:end="1985:47"><call pos:start="1985:25" pos:end="1985:47"><name pos:start="1985:25" pos:end="1985:41">tcg_temp_free_i32</name><argument_list pos:start="1985:42" pos:end="1985:47">(<argument pos:start="1985:43" pos:end="1985:46"><expr pos:start="1985:43" pos:end="1985:46"><name pos:start="1985:43" pos:end="1985:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1987:25" pos:end="1987:46"><expr pos:start="1987:25" pos:end="1987:45"><call pos:start="1987:25" pos:end="1987:45"><name pos:start="1987:25" pos:end="1987:33">store_reg</name><argument_list pos:start="1987:34" pos:end="1987:45">(<argument pos:start="1987:35" pos:end="1987:35"><expr pos:start="1987:35" pos:end="1987:35"><name pos:start="1987:35" pos:end="1987:35">s</name></expr></argument>, <argument pos:start="1987:38" pos:end="1987:39"><expr pos:start="1987:38" pos:end="1987:39"><name pos:start="1987:38" pos:end="1987:39">rd</name></expr></argument>, <argument pos:start="1987:42" pos:end="1987:44"><expr pos:start="1987:42" pos:end="1987:44"><name pos:start="1987:42" pos:end="1987:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1989:23" pos:end="2011:21">else if <condition pos:start="1989:31" pos:end="1989:65">(<expr pos:start="1989:32" pos:end="1989:64"><operator pos:start="1989:32" pos:end="1989:32">(</operator><name pos:start="1989:33" pos:end="1989:36">insn</name> <operator pos:start="1989:38" pos:end="1989:38">&amp;</operator> <literal type="number" pos:start="1989:40" pos:end="1989:49">0x00300fe0</literal><operator pos:start="1989:50" pos:end="1989:50">)</operator> <operator pos:start="1989:52" pos:end="1989:53">==</operator> <literal type="number" pos:start="1989:55" pos:end="1989:64">0x00200f20</literal></expr>)</condition> <block pos:start="1989:67" pos:end="2011:21">{<block_content pos:start="1993:25" pos:end="2009:46">

                        <comment type="block" pos:start="1991:25" pos:end="1991:39">/* [us]sat16 */</comment>

                        <expr_stmt pos:start="1993:25" pos:end="1993:46"><expr pos:start="1993:25" pos:end="1993:45"><name pos:start="1993:25" pos:end="1993:27">tmp</name> <operator pos:start="1993:29" pos:end="1993:29">=</operator> <call pos:start="1993:31" pos:end="1993:45"><name pos:start="1993:31" pos:end="1993:38">load_reg</name><argument_list pos:start="1993:39" pos:end="1993:45">(<argument pos:start="1993:40" pos:end="1993:40"><expr pos:start="1993:40" pos:end="1993:40"><name pos:start="1993:40" pos:end="1993:40">s</name></expr></argument>, <argument pos:start="1993:43" pos:end="1993:44"><expr pos:start="1993:43" pos:end="1993:44"><name pos:start="1993:43" pos:end="1993:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1995:25" pos:end="1995:49"><expr pos:start="1995:25" pos:end="1995:48"><name pos:start="1995:25" pos:end="1995:26">sh</name> <operator pos:start="1995:28" pos:end="1995:28">=</operator> <operator pos:start="1995:30" pos:end="1995:30">(</operator><name pos:start="1995:31" pos:end="1995:34">insn</name> <operator pos:start="1995:36" pos:end="1995:37">&gt;&gt;</operator> <literal type="number" pos:start="1995:39" pos:end="1995:40">16</literal><operator pos:start="1995:41" pos:end="1995:41">)</operator> <operator pos:start="1995:43" pos:end="1995:43">&amp;</operator> <literal type="number" pos:start="1995:45" pos:end="1995:48">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1997:25" pos:end="1997:49"><expr pos:start="1997:25" pos:end="1997:48"><name pos:start="1997:25" pos:end="1997:28">tmp2</name> <operator pos:start="1997:30" pos:end="1997:30">=</operator> <call pos:start="1997:32" pos:end="1997:48"><name pos:start="1997:32" pos:end="1997:44">tcg_const_i32</name><argument_list pos:start="1997:45" pos:end="1997:48">(<argument pos:start="1997:46" pos:end="1997:47"><expr pos:start="1997:46" pos:end="1997:47"><name pos:start="1997:46" pos:end="1997:47">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1999:25" pos:end="2005:69"><if pos:start="1999:25" pos:end="2001:69">if <condition pos:start="1999:28" pos:end="1999:45">(<expr pos:start="1999:29" pos:end="1999:44"><name pos:start="1999:29" pos:end="1999:32">insn</name> <operator pos:start="1999:34" pos:end="1999:34">&amp;</operator> <operator pos:start="1999:36" pos:end="1999:36">(</operator><literal type="number" pos:start="1999:37" pos:end="1999:37">1</literal> <operator pos:start="1999:39" pos:end="1999:40">&lt;&lt;</operator> <literal type="number" pos:start="1999:42" pos:end="1999:43">22</literal><operator pos:start="1999:44" pos:end="1999:44">)</operator></expr>)</condition><block type="pseudo" pos:start="2001:27" pos:end="2001:69"><block_content pos:start="2001:27" pos:end="2001:69">

                          <expr_stmt pos:start="2001:27" pos:end="2001:69"><expr pos:start="2001:27" pos:end="2001:68"><call pos:start="2001:27" pos:end="2001:68"><name pos:start="2001:27" pos:end="2001:43">gen_helper_usat16</name><argument_list pos:start="2001:44" pos:end="2001:68">(<argument pos:start="2001:45" pos:end="2001:47"><expr pos:start="2001:45" pos:end="2001:47"><name pos:start="2001:45" pos:end="2001:47">tmp</name></expr></argument>, <argument pos:start="2001:50" pos:end="2001:56"><expr pos:start="2001:50" pos:end="2001:56"><name pos:start="2001:50" pos:end="2001:56">cpu_env</name></expr></argument>, <argument pos:start="2001:59" pos:end="2001:61"><expr pos:start="2001:59" pos:end="2001:61"><name pos:start="2001:59" pos:end="2001:61">tmp</name></expr></argument>, <argument pos:start="2001:64" pos:end="2001:67"><expr pos:start="2001:64" pos:end="2001:67"><name pos:start="2001:64" pos:end="2001:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="2003:25" pos:end="2005:69">else<block type="pseudo" pos:start="2005:27" pos:end="2005:69"><block_content pos:start="2005:27" pos:end="2005:69">

                          <expr_stmt pos:start="2005:27" pos:end="2005:69"><expr pos:start="2005:27" pos:end="2005:68"><call pos:start="2005:27" pos:end="2005:68"><name pos:start="2005:27" pos:end="2005:43">gen_helper_ssat16</name><argument_list pos:start="2005:44" pos:end="2005:68">(<argument pos:start="2005:45" pos:end="2005:47"><expr pos:start="2005:45" pos:end="2005:47"><name pos:start="2005:45" pos:end="2005:47">tmp</name></expr></argument>, <argument pos:start="2005:50" pos:end="2005:56"><expr pos:start="2005:50" pos:end="2005:56"><name pos:start="2005:50" pos:end="2005:56">cpu_env</name></expr></argument>, <argument pos:start="2005:59" pos:end="2005:61"><expr pos:start="2005:59" pos:end="2005:61"><name pos:start="2005:59" pos:end="2005:61">tmp</name></expr></argument>, <argument pos:start="2005:64" pos:end="2005:67"><expr pos:start="2005:64" pos:end="2005:67"><name pos:start="2005:64" pos:end="2005:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="2007:25" pos:end="2007:48"><expr pos:start="2007:25" pos:end="2007:47"><call pos:start="2007:25" pos:end="2007:47"><name pos:start="2007:25" pos:end="2007:41">tcg_temp_free_i32</name><argument_list pos:start="2007:42" pos:end="2007:47">(<argument pos:start="2007:43" pos:end="2007:46"><expr pos:start="2007:43" pos:end="2007:46"><name pos:start="2007:43" pos:end="2007:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2009:25" pos:end="2009:46"><expr pos:start="2009:25" pos:end="2009:45"><call pos:start="2009:25" pos:end="2009:45"><name pos:start="2009:25" pos:end="2009:33">store_reg</name><argument_list pos:start="2009:34" pos:end="2009:45">(<argument pos:start="2009:35" pos:end="2009:35"><expr pos:start="2009:35" pos:end="2009:35"><name pos:start="2009:35" pos:end="2009:35">s</name></expr></argument>, <argument pos:start="2009:38" pos:end="2009:39"><expr pos:start="2009:38" pos:end="2009:39"><name pos:start="2009:38" pos:end="2009:39">rd</name></expr></argument>, <argument pos:start="2009:42" pos:end="2009:44"><expr pos:start="2009:42" pos:end="2009:44"><name pos:start="2009:42" pos:end="2009:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="2011:23" pos:end="2031:21">else if <condition pos:start="2011:31" pos:end="2011:65">(<expr pos:start="2011:32" pos:end="2011:64"><operator pos:start="2011:32" pos:end="2011:32">(</operator><name pos:start="2011:33" pos:end="2011:36">insn</name> <operator pos:start="2011:38" pos:end="2011:38">&amp;</operator> <literal type="number" pos:start="2011:40" pos:end="2011:49">0x00700fe0</literal><operator pos:start="2011:50" pos:end="2011:50">)</operator> <operator pos:start="2011:52" pos:end="2011:53">==</operator> <literal type="number" pos:start="2011:55" pos:end="2011:64">0x00000fa0</literal></expr>)</condition> <block pos:start="2011:67" pos:end="2031:21">{<block_content pos:start="2015:25" pos:end="2029:46">

                        <comment type="block" pos:start="2013:25" pos:end="2013:44">/* Select bytes.  */</comment>

                        <expr_stmt pos:start="2015:25" pos:end="2015:46"><expr pos:start="2015:25" pos:end="2015:45"><name pos:start="2015:25" pos:end="2015:27">tmp</name> <operator pos:start="2015:29" pos:end="2015:29">=</operator> <call pos:start="2015:31" pos:end="2015:45"><name pos:start="2015:31" pos:end="2015:38">load_reg</name><argument_list pos:start="2015:39" pos:end="2015:45">(<argument pos:start="2015:40" pos:end="2015:40"><expr pos:start="2015:40" pos:end="2015:40"><name pos:start="2015:40" pos:end="2015:40">s</name></expr></argument>, <argument pos:start="2015:43" pos:end="2015:44"><expr pos:start="2015:43" pos:end="2015:44"><name pos:start="2015:43" pos:end="2015:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2017:25" pos:end="2017:47"><expr pos:start="2017:25" pos:end="2017:46"><name pos:start="2017:25" pos:end="2017:28">tmp2</name> <operator pos:start="2017:30" pos:end="2017:30">=</operator> <call pos:start="2017:32" pos:end="2017:46"><name pos:start="2017:32" pos:end="2017:39">load_reg</name><argument_list pos:start="2017:40" pos:end="2017:46">(<argument pos:start="2017:41" pos:end="2017:41"><expr pos:start="2017:41" pos:end="2017:41"><name pos:start="2017:41" pos:end="2017:41">s</name></expr></argument>, <argument pos:start="2017:44" pos:end="2017:45"><expr pos:start="2017:44" pos:end="2017:45"><name pos:start="2017:44" pos:end="2017:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2019:25" pos:end="2019:50"><expr pos:start="2019:25" pos:end="2019:49"><name pos:start="2019:25" pos:end="2019:28">tmp3</name> <operator pos:start="2019:30" pos:end="2019:30">=</operator> <call pos:start="2019:32" pos:end="2019:49"><name pos:start="2019:32" pos:end="2019:47">tcg_temp_new_i32</name><argument_list pos:start="2019:48" pos:end="2019:49">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2021:25" pos:end="2021:81"><expr pos:start="2021:25" pos:end="2021:80"><call pos:start="2021:25" pos:end="2021:80"><name pos:start="2021:25" pos:end="2021:38">tcg_gen_ld_i32</name><argument_list pos:start="2021:39" pos:end="2021:80">(<argument pos:start="2021:40" pos:end="2021:43"><expr pos:start="2021:40" pos:end="2021:43"><name pos:start="2021:40" pos:end="2021:43">tmp3</name></expr></argument>, <argument pos:start="2021:46" pos:end="2021:52"><expr pos:start="2021:46" pos:end="2021:52"><name pos:start="2021:46" pos:end="2021:52">cpu_env</name></expr></argument>, <argument pos:start="2021:55" pos:end="2021:79"><expr pos:start="2021:55" pos:end="2021:79"><call pos:start="2021:55" pos:end="2021:79"><name pos:start="2021:55" pos:end="2021:62">offsetof</name><argument_list pos:start="2021:63" pos:end="2021:79">(<argument pos:start="2021:64" pos:end="2021:74"><expr pos:start="2021:64" pos:end="2021:74"><name pos:start="2021:64" pos:end="2021:74">CPUARMState</name></expr></argument>, <argument pos:start="2021:77" pos:end="2021:78"><expr pos:start="2021:77" pos:end="2021:78"><name pos:start="2021:77" pos:end="2021:78">GE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2023:25" pos:end="2023:67"><expr pos:start="2023:25" pos:end="2023:66"><call pos:start="2023:25" pos:end="2023:66"><name pos:start="2023:25" pos:end="2023:44">gen_helper_sel_flags</name><argument_list pos:start="2023:45" pos:end="2023:66">(<argument pos:start="2023:46" pos:end="2023:48"><expr pos:start="2023:46" pos:end="2023:48"><name pos:start="2023:46" pos:end="2023:48">tmp</name></expr></argument>, <argument pos:start="2023:51" pos:end="2023:54"><expr pos:start="2023:51" pos:end="2023:54"><name pos:start="2023:51" pos:end="2023:54">tmp3</name></expr></argument>, <argument pos:start="2023:57" pos:end="2023:59"><expr pos:start="2023:57" pos:end="2023:59"><name pos:start="2023:57" pos:end="2023:59">tmp</name></expr></argument>, <argument pos:start="2023:62" pos:end="2023:65"><expr pos:start="2023:62" pos:end="2023:65"><name pos:start="2023:62" pos:end="2023:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2025:25" pos:end="2025:48"><expr pos:start="2025:25" pos:end="2025:47"><call pos:start="2025:25" pos:end="2025:47"><name pos:start="2025:25" pos:end="2025:41">tcg_temp_free_i32</name><argument_list pos:start="2025:42" pos:end="2025:47">(<argument pos:start="2025:43" pos:end="2025:46"><expr pos:start="2025:43" pos:end="2025:46"><name pos:start="2025:43" pos:end="2025:46">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2027:25" pos:end="2027:48"><expr pos:start="2027:25" pos:end="2027:47"><call pos:start="2027:25" pos:end="2027:47"><name pos:start="2027:25" pos:end="2027:41">tcg_temp_free_i32</name><argument_list pos:start="2027:42" pos:end="2027:47">(<argument pos:start="2027:43" pos:end="2027:46"><expr pos:start="2027:43" pos:end="2027:46"><name pos:start="2027:43" pos:end="2027:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2029:25" pos:end="2029:46"><expr pos:start="2029:25" pos:end="2029:45"><call pos:start="2029:25" pos:end="2029:45"><name pos:start="2029:25" pos:end="2029:33">store_reg</name><argument_list pos:start="2029:34" pos:end="2029:45">(<argument pos:start="2029:35" pos:end="2029:35"><expr pos:start="2029:35" pos:end="2029:35"><name pos:start="2029:35" pos:end="2029:35">s</name></expr></argument>, <argument pos:start="2029:38" pos:end="2029:39"><expr pos:start="2029:38" pos:end="2029:39"><name pos:start="2029:38" pos:end="2029:39">rd</name></expr></argument>, <argument pos:start="2029:42" pos:end="2029:44"><expr pos:start="2029:42" pos:end="2029:44"><name pos:start="2029:42" pos:end="2029:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="2031:23" pos:end="2085:21">else if <condition pos:start="2031:31" pos:end="2031:65">(<expr pos:start="2031:32" pos:end="2031:64"><operator pos:start="2031:32" pos:end="2031:32">(</operator><name pos:start="2031:33" pos:end="2031:36">insn</name> <operator pos:start="2031:38" pos:end="2031:38">&amp;</operator> <literal type="number" pos:start="2031:40" pos:end="2031:49">0x000003e0</literal><operator pos:start="2031:50" pos:end="2031:50">)</operator> <operator pos:start="2031:52" pos:end="2031:53">==</operator> <literal type="number" pos:start="2031:55" pos:end="2031:64">0x00000060</literal></expr>)</condition> <block pos:start="2031:67" pos:end="2085:21">{<block_content pos:start="2033:25" pos:end="2083:46">

                        <expr_stmt pos:start="2033:25" pos:end="2033:46"><expr pos:start="2033:25" pos:end="2033:45"><name pos:start="2033:25" pos:end="2033:27">tmp</name> <operator pos:start="2033:29" pos:end="2033:29">=</operator> <call pos:start="2033:31" pos:end="2033:45"><name pos:start="2033:31" pos:end="2033:38">load_reg</name><argument_list pos:start="2033:39" pos:end="2033:45">(<argument pos:start="2033:40" pos:end="2033:40"><expr pos:start="2033:40" pos:end="2033:40"><name pos:start="2033:40" pos:end="2033:40">s</name></expr></argument>, <argument pos:start="2033:43" pos:end="2033:44"><expr pos:start="2033:43" pos:end="2033:44"><name pos:start="2033:43" pos:end="2033:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2035:25" pos:end="2035:49"><expr pos:start="2035:25" pos:end="2035:48"><name pos:start="2035:25" pos:end="2035:29">shift</name> <operator pos:start="2035:31" pos:end="2035:31">=</operator> <operator pos:start="2035:33" pos:end="2035:33">(</operator><name pos:start="2035:34" pos:end="2035:37">insn</name> <operator pos:start="2035:39" pos:end="2035:40">&gt;&gt;</operator> <literal type="number" pos:start="2035:42" pos:end="2035:43">10</literal><operator pos:start="2035:44" pos:end="2035:44">)</operator> <operator pos:start="2035:46" pos:end="2035:46">&amp;</operator> <literal type="number" pos:start="2035:48" pos:end="2035:48">3</literal></expr>;</expr_stmt>

                        <comment type="block" pos:start="2037:25" pos:end="2039:61">/* ??? In many cases it's not necessary to do a

                           rotate, a shift is sufficient.  */</comment>

                        <if_stmt pos:start="2041:25" pos:end="2043:67"><if pos:start="2041:25" pos:end="2043:67">if <condition pos:start="2041:28" pos:end="2041:39">(<expr pos:start="2041:29" pos:end="2041:38"><name pos:start="2041:29" pos:end="2041:33">shift</name> <operator pos:start="2041:35" pos:end="2041:36">!=</operator> <literal type="number" pos:start="2041:38" pos:end="2041:38">0</literal></expr>)</condition><block type="pseudo" pos:start="2043:29" pos:end="2043:67"><block_content pos:start="2043:29" pos:end="2043:67">

                            <expr_stmt pos:start="2043:29" pos:end="2043:67"><expr pos:start="2043:29" pos:end="2043:66"><call pos:start="2043:29" pos:end="2043:66"><name pos:start="2043:29" pos:end="2043:45">tcg_gen_rotri_i32</name><argument_list pos:start="2043:46" pos:end="2043:66">(<argument pos:start="2043:47" pos:end="2043:49"><expr pos:start="2043:47" pos:end="2043:49"><name pos:start="2043:47" pos:end="2043:49">tmp</name></expr></argument>, <argument pos:start="2043:52" pos:end="2043:54"><expr pos:start="2043:52" pos:end="2043:54"><name pos:start="2043:52" pos:end="2043:54">tmp</name></expr></argument>, <argument pos:start="2043:57" pos:end="2043:65"><expr pos:start="2043:57" pos:end="2043:65"><name pos:start="2043:57" pos:end="2043:61">shift</name> <operator pos:start="2043:63" pos:end="2043:63">*</operator> <literal type="number" pos:start="2043:65" pos:end="2043:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="2045:25" pos:end="2045:47"><expr pos:start="2045:25" pos:end="2045:46"><name pos:start="2045:25" pos:end="2045:27">op1</name> <operator pos:start="2045:29" pos:end="2045:29">=</operator> <operator pos:start="2045:31" pos:end="2045:31">(</operator><name pos:start="2045:32" pos:end="2045:35">insn</name> <operator pos:start="2045:37" pos:end="2045:38">&gt;&gt;</operator> <literal type="number" pos:start="2045:40" pos:end="2045:41">20</literal><operator pos:start="2045:42" pos:end="2045:42">)</operator> <operator pos:start="2045:44" pos:end="2045:44">&amp;</operator> <literal type="number" pos:start="2045:46" pos:end="2045:46">7</literal></expr>;</expr_stmt>

                        <switch pos:start="2047:25" pos:end="2063:25">switch <condition pos:start="2047:32" pos:end="2047:36">(<expr pos:start="2047:33" pos:end="2047:35"><name pos:start="2047:33" pos:end="2047:35">op1</name></expr>)</condition> <block pos:start="2047:38" pos:end="2063:25">{<block_content pos:start="2049:25" pos:end="2061:49">

                        <case pos:start="2049:25" pos:end="2049:31">case <expr pos:start="2049:30" pos:end="2049:30"><literal type="number" pos:start="2049:30" pos:end="2049:30">0</literal></expr>:</case> <expr_stmt pos:start="2049:33" pos:end="2049:48"><expr pos:start="2049:33" pos:end="2049:47"><call pos:start="2049:33" pos:end="2049:47"><name pos:start="2049:33" pos:end="2049:42">gen_sxtb16</name><argument_list pos:start="2049:43" pos:end="2049:47">(<argument pos:start="2049:44" pos:end="2049:46"><expr pos:start="2049:44" pos:end="2049:46"><name pos:start="2049:44" pos:end="2049:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <break pos:start="2049:51" pos:end="2049:56">break;</break>

                        <case pos:start="2051:25" pos:end="2051:31">case <expr pos:start="2051:30" pos:end="2051:30"><literal type="number" pos:start="2051:30" pos:end="2051:30">2</literal></expr>:</case> <expr_stmt pos:start="2051:33" pos:end="2051:46"><expr pos:start="2051:33" pos:end="2051:45"><call pos:start="2051:33" pos:end="2051:45"><name pos:start="2051:33" pos:end="2051:40">gen_sxtb</name><argument_list pos:start="2051:41" pos:end="2051:45">(<argument pos:start="2051:42" pos:end="2051:44"><expr pos:start="2051:42" pos:end="2051:44"><name pos:start="2051:42" pos:end="2051:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="2051:51" pos:end="2051:56">break;</break>

                        <case pos:start="2053:25" pos:end="2053:31">case <expr pos:start="2053:30" pos:end="2053:30"><literal type="number" pos:start="2053:30" pos:end="2053:30">3</literal></expr>:</case> <expr_stmt pos:start="2053:33" pos:end="2053:46"><expr pos:start="2053:33" pos:end="2053:45"><call pos:start="2053:33" pos:end="2053:45"><name pos:start="2053:33" pos:end="2053:40">gen_sxth</name><argument_list pos:start="2053:41" pos:end="2053:45">(<argument pos:start="2053:42" pos:end="2053:44"><expr pos:start="2053:42" pos:end="2053:44"><name pos:start="2053:42" pos:end="2053:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="2053:51" pos:end="2053:56">break;</break>

                        <case pos:start="2055:25" pos:end="2055:31">case <expr pos:start="2055:30" pos:end="2055:30"><literal type="number" pos:start="2055:30" pos:end="2055:30">4</literal></expr>:</case> <expr_stmt pos:start="2055:33" pos:end="2055:48"><expr pos:start="2055:33" pos:end="2055:47"><call pos:start="2055:33" pos:end="2055:47"><name pos:start="2055:33" pos:end="2055:42">gen_uxtb16</name><argument_list pos:start="2055:43" pos:end="2055:47">(<argument pos:start="2055:44" pos:end="2055:46"><expr pos:start="2055:44" pos:end="2055:46"><name pos:start="2055:44" pos:end="2055:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <break pos:start="2055:51" pos:end="2055:56">break;</break>

                        <case pos:start="2057:25" pos:end="2057:31">case <expr pos:start="2057:30" pos:end="2057:30"><literal type="number" pos:start="2057:30" pos:end="2057:30">6</literal></expr>:</case> <expr_stmt pos:start="2057:33" pos:end="2057:46"><expr pos:start="2057:33" pos:end="2057:45"><call pos:start="2057:33" pos:end="2057:45"><name pos:start="2057:33" pos:end="2057:40">gen_uxtb</name><argument_list pos:start="2057:41" pos:end="2057:45">(<argument pos:start="2057:42" pos:end="2057:44"><expr pos:start="2057:42" pos:end="2057:44"><name pos:start="2057:42" pos:end="2057:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="2057:51" pos:end="2057:56">break;</break>

                        <case pos:start="2059:25" pos:end="2059:31">case <expr pos:start="2059:30" pos:end="2059:30"><literal type="number" pos:start="2059:30" pos:end="2059:30">7</literal></expr>:</case> <expr_stmt pos:start="2059:33" pos:end="2059:46"><expr pos:start="2059:33" pos:end="2059:45"><call pos:start="2059:33" pos:end="2059:45"><name pos:start="2059:33" pos:end="2059:40">gen_uxth</name><argument_list pos:start="2059:41" pos:end="2059:45">(<argument pos:start="2059:42" pos:end="2059:44"><expr pos:start="2059:42" pos:end="2059:44"><name pos:start="2059:42" pos:end="2059:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="2059:51" pos:end="2059:56">break;</break>

                        <default pos:start="2061:25" pos:end="2061:32">default:</default> <goto pos:start="2061:34" pos:end="2061:49">goto <name pos:start="2061:39" pos:end="2061:48">illegal_op</name>;</goto>

                        </block_content>}</block></switch>

                        <if_stmt pos:start="2065:25" pos:end="2081:25"><if pos:start="2065:25" pos:end="2081:25">if <condition pos:start="2065:28" pos:end="2065:37">(<expr pos:start="2065:29" pos:end="2065:36"><name pos:start="2065:29" pos:end="2065:30">rn</name> <operator pos:start="2065:32" pos:end="2065:33">!=</operator> <literal type="number" pos:start="2065:35" pos:end="2065:36">15</literal></expr>)</condition> <block pos:start="2065:39" pos:end="2081:25">{<block_content pos:start="2067:29" pos:end="2079:29">

                            <expr_stmt pos:start="2067:29" pos:end="2067:51"><expr pos:start="2067:29" pos:end="2067:50"><name pos:start="2067:29" pos:end="2067:32">tmp2</name> <operator pos:start="2067:34" pos:end="2067:34">=</operator> <call pos:start="2067:36" pos:end="2067:50"><name pos:start="2067:36" pos:end="2067:43">load_reg</name><argument_list pos:start="2067:44" pos:end="2067:50">(<argument pos:start="2067:45" pos:end="2067:45"><expr pos:start="2067:45" pos:end="2067:45"><name pos:start="2067:45" pos:end="2067:45">s</name></expr></argument>, <argument pos:start="2067:48" pos:end="2067:49"><expr pos:start="2067:48" pos:end="2067:49"><name pos:start="2067:48" pos:end="2067:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2069:29" pos:end="2079:29"><if pos:start="2069:29" pos:end="2073:29">if <condition pos:start="2069:32" pos:end="2069:47">(<expr pos:start="2069:33" pos:end="2069:46"><operator pos:start="2069:33" pos:end="2069:33">(</operator><name pos:start="2069:34" pos:end="2069:36">op1</name> <operator pos:start="2069:38" pos:end="2069:38">&amp;</operator> <literal type="number" pos:start="2069:40" pos:end="2069:40">3</literal><operator pos:start="2069:41" pos:end="2069:41">)</operator> <operator pos:start="2069:43" pos:end="2069:44">==</operator> <literal type="number" pos:start="2069:46" pos:end="2069:46">0</literal></expr>)</condition> <block pos:start="2069:49" pos:end="2073:29">{<block_content pos:start="2071:33" pos:end="2071:53">

                                <expr_stmt pos:start="2071:33" pos:end="2071:53"><expr pos:start="2071:33" pos:end="2071:52"><call pos:start="2071:33" pos:end="2071:52"><name pos:start="2071:33" pos:end="2071:41">gen_add16</name><argument_list pos:start="2071:42" pos:end="2071:52">(<argument pos:start="2071:43" pos:end="2071:45"><expr pos:start="2071:43" pos:end="2071:45"><name pos:start="2071:43" pos:end="2071:45">tmp</name></expr></argument>, <argument pos:start="2071:48" pos:end="2071:51"><expr pos:start="2071:48" pos:end="2071:51"><name pos:start="2071:48" pos:end="2071:51">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2073:31" pos:end="2079:29">else <block pos:start="2073:36" pos:end="2079:29">{<block_content pos:start="2075:33" pos:end="2077:56">

                                <expr_stmt pos:start="2075:33" pos:end="2075:64"><expr pos:start="2075:33" pos:end="2075:63"><call pos:start="2075:33" pos:end="2075:63"><name pos:start="2075:33" pos:end="2075:47">tcg_gen_add_i32</name><argument_list pos:start="2075:48" pos:end="2075:63">(<argument pos:start="2075:49" pos:end="2075:51"><expr pos:start="2075:49" pos:end="2075:51"><name pos:start="2075:49" pos:end="2075:51">tmp</name></expr></argument>, <argument pos:start="2075:54" pos:end="2075:56"><expr pos:start="2075:54" pos:end="2075:56"><name pos:start="2075:54" pos:end="2075:56">tmp</name></expr></argument>, <argument pos:start="2075:59" pos:end="2075:62"><expr pos:start="2075:59" pos:end="2075:62"><name pos:start="2075:59" pos:end="2075:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2077:33" pos:end="2077:56"><expr pos:start="2077:33" pos:end="2077:55"><call pos:start="2077:33" pos:end="2077:55"><name pos:start="2077:33" pos:end="2077:49">tcg_temp_free_i32</name><argument_list pos:start="2077:50" pos:end="2077:55">(<argument pos:start="2077:51" pos:end="2077:54"><expr pos:start="2077:51" pos:end="2077:54"><name pos:start="2077:51" pos:end="2077:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2083:25" pos:end="2083:46"><expr pos:start="2083:25" pos:end="2083:45"><call pos:start="2083:25" pos:end="2083:45"><name pos:start="2083:25" pos:end="2083:33">store_reg</name><argument_list pos:start="2083:34" pos:end="2083:45">(<argument pos:start="2083:35" pos:end="2083:35"><expr pos:start="2083:35" pos:end="2083:35"><name pos:start="2083:35" pos:end="2083:35">s</name></expr></argument>, <argument pos:start="2083:38" pos:end="2083:39"><expr pos:start="2083:38" pos:end="2083:39"><name pos:start="2083:38" pos:end="2083:39">rd</name></expr></argument>, <argument pos:start="2083:42" pos:end="2083:44"><expr pos:start="2083:42" pos:end="2083:44"><name pos:start="2083:42" pos:end="2083:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="2085:23" pos:end="2119:21">else if <condition pos:start="2085:31" pos:end="2085:65">(<expr pos:start="2085:32" pos:end="2085:64"><operator pos:start="2085:32" pos:end="2085:32">(</operator><name pos:start="2085:33" pos:end="2085:36">insn</name> <operator pos:start="2085:38" pos:end="2085:38">&amp;</operator> <literal type="number" pos:start="2085:40" pos:end="2085:49">0x003f0f60</literal><operator pos:start="2085:50" pos:end="2085:50">)</operator> <operator pos:start="2085:52" pos:end="2085:53">==</operator> <literal type="number" pos:start="2085:55" pos:end="2085:64">0x003f0f20</literal></expr>)</condition> <block pos:start="2085:67" pos:end="2119:21">{<block_content pos:start="2089:25" pos:end="2117:46">

                        <comment type="block" pos:start="2087:25" pos:end="2087:33">/* rev */</comment>

                        <expr_stmt pos:start="2089:25" pos:end="2089:46"><expr pos:start="2089:25" pos:end="2089:45"><name pos:start="2089:25" pos:end="2089:27">tmp</name> <operator pos:start="2089:29" pos:end="2089:29">=</operator> <call pos:start="2089:31" pos:end="2089:45"><name pos:start="2089:31" pos:end="2089:38">load_reg</name><argument_list pos:start="2089:39" pos:end="2089:45">(<argument pos:start="2089:40" pos:end="2089:40"><expr pos:start="2089:40" pos:end="2089:40"><name pos:start="2089:40" pos:end="2089:40">s</name></expr></argument>, <argument pos:start="2089:43" pos:end="2089:44"><expr pos:start="2089:43" pos:end="2089:44"><name pos:start="2089:43" pos:end="2089:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2091:25" pos:end="2115:25"><if pos:start="2091:25" pos:end="2105:25">if <condition pos:start="2091:28" pos:end="2091:45">(<expr pos:start="2091:29" pos:end="2091:44"><name pos:start="2091:29" pos:end="2091:32">insn</name> <operator pos:start="2091:34" pos:end="2091:34">&amp;</operator> <operator pos:start="2091:36" pos:end="2091:36">(</operator><literal type="number" pos:start="2091:37" pos:end="2091:37">1</literal> <operator pos:start="2091:39" pos:end="2091:40">&lt;&lt;</operator> <literal type="number" pos:start="2091:42" pos:end="2091:43">22</literal><operator pos:start="2091:44" pos:end="2091:44">)</operator></expr>)</condition> <block pos:start="2091:47" pos:end="2105:25">{<block_content pos:start="2093:29" pos:end="2103:29">

                            <if_stmt pos:start="2093:29" pos:end="2103:29"><if pos:start="2093:29" pos:end="2097:29">if <condition pos:start="2093:32" pos:end="2093:48">(<expr pos:start="2093:33" pos:end="2093:47"><name pos:start="2093:33" pos:end="2093:36">insn</name> <operator pos:start="2093:38" pos:end="2093:38">&amp;</operator> <operator pos:start="2093:40" pos:end="2093:40">(</operator><literal type="number" pos:start="2093:41" pos:end="2093:41">1</literal> <operator pos:start="2093:43" pos:end="2093:44">&lt;&lt;</operator> <literal type="number" pos:start="2093:46" pos:end="2093:46">7</literal><operator pos:start="2093:47" pos:end="2093:47">)</operator></expr>)</condition> <block pos:start="2093:50" pos:end="2097:29">{<block_content pos:start="2095:33" pos:end="2095:47">

                                <expr_stmt pos:start="2095:33" pos:end="2095:47"><expr pos:start="2095:33" pos:end="2095:46"><call pos:start="2095:33" pos:end="2095:46"><name pos:start="2095:33" pos:end="2095:41">gen_revsh</name><argument_list pos:start="2095:42" pos:end="2095:46">(<argument pos:start="2095:43" pos:end="2095:45"><expr pos:start="2095:43" pos:end="2095:45"><name pos:start="2095:43" pos:end="2095:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2097:31" pos:end="2103:29">else <block pos:start="2097:36" pos:end="2103:29">{<block_content pos:start="2099:33" pos:end="2101:58">

                                <expr_stmt pos:start="2099:33" pos:end="2099:42"><expr pos:start="2099:33" pos:end="2099:41"><call pos:start="2099:33" pos:end="2099:41"><name pos:start="2099:33" pos:end="2099:36">ARCH</name><argument_list pos:start="2099:37" pos:end="2099:41">(<argument pos:start="2099:38" pos:end="2099:40"><expr pos:start="2099:38" pos:end="2099:40"><literal type="number" pos:start="2099:38" pos:end="2099:40">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2101:33" pos:end="2101:58"><expr pos:start="2101:33" pos:end="2101:57"><call pos:start="2101:33" pos:end="2101:57"><name pos:start="2101:33" pos:end="2101:47">gen_helper_rbit</name><argument_list pos:start="2101:48" pos:end="2101:57">(<argument pos:start="2101:49" pos:end="2101:51"><expr pos:start="2101:49" pos:end="2101:51"><name pos:start="2101:49" pos:end="2101:51">tmp</name></expr></argument>, <argument pos:start="2101:54" pos:end="2101:56"><expr pos:start="2101:54" pos:end="2101:56"><name pos:start="2101:54" pos:end="2101:56">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="2105:27" pos:end="2115:25">else <block pos:start="2105:32" pos:end="2115:25">{<block_content pos:start="2107:29" pos:end="2113:62">

                            <if_stmt pos:start="2107:29" pos:end="2113:62"><if pos:start="2107:29" pos:end="2109:47">if <condition pos:start="2107:32" pos:end="2107:48">(<expr pos:start="2107:33" pos:end="2107:47"><name pos:start="2107:33" pos:end="2107:36">insn</name> <operator pos:start="2107:38" pos:end="2107:38">&amp;</operator> <operator pos:start="2107:40" pos:end="2107:40">(</operator><literal type="number" pos:start="2107:41" pos:end="2107:41">1</literal> <operator pos:start="2107:43" pos:end="2107:44">&lt;&lt;</operator> <literal type="number" pos:start="2107:46" pos:end="2107:46">7</literal><operator pos:start="2107:47" pos:end="2107:47">)</operator></expr>)</condition><block type="pseudo" pos:start="2109:33" pos:end="2109:47"><block_content pos:start="2109:33" pos:end="2109:47">

                                <expr_stmt pos:start="2109:33" pos:end="2109:47"><expr pos:start="2109:33" pos:end="2109:46"><call pos:start="2109:33" pos:end="2109:46"><name pos:start="2109:33" pos:end="2109:41">gen_rev16</name><argument_list pos:start="2109:42" pos:end="2109:46">(<argument pos:start="2109:43" pos:end="2109:45"><expr pos:start="2109:43" pos:end="2109:45"><name pos:start="2109:43" pos:end="2109:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="2111:29" pos:end="2113:62">else<block type="pseudo" pos:start="2113:33" pos:end="2113:62"><block_content pos:start="2113:33" pos:end="2113:62">

                                <expr_stmt pos:start="2113:33" pos:end="2113:62"><expr pos:start="2113:33" pos:end="2113:61"><call pos:start="2113:33" pos:end="2113:61"><name pos:start="2113:33" pos:end="2113:51">tcg_gen_bswap32_i32</name><argument_list pos:start="2113:52" pos:end="2113:61">(<argument pos:start="2113:53" pos:end="2113:55"><expr pos:start="2113:53" pos:end="2113:55"><name pos:start="2113:53" pos:end="2113:55">tmp</name></expr></argument>, <argument pos:start="2113:58" pos:end="2113:60"><expr pos:start="2113:58" pos:end="2113:60"><name pos:start="2113:58" pos:end="2113:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="2117:25" pos:end="2117:46"><expr pos:start="2117:25" pos:end="2117:45"><call pos:start="2117:25" pos:end="2117:45"><name pos:start="2117:25" pos:end="2117:33">store_reg</name><argument_list pos:start="2117:34" pos:end="2117:45">(<argument pos:start="2117:35" pos:end="2117:35"><expr pos:start="2117:35" pos:end="2117:35"><name pos:start="2117:35" pos:end="2117:35">s</name></expr></argument>, <argument pos:start="2117:38" pos:end="2117:39"><expr pos:start="2117:38" pos:end="2117:39"><name pos:start="2117:38" pos:end="2117:39">rd</name></expr></argument>, <argument pos:start="2117:42" pos:end="2117:44"><expr pos:start="2117:42" pos:end="2117:44"><name pos:start="2117:42" pos:end="2117:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2119:23" pos:end="2123:21">else <block pos:start="2119:28" pos:end="2123:21">{<block_content pos:start="2121:25" pos:end="2121:40">

                        <goto pos:start="2121:25" pos:end="2121:40">goto <name pos:start="2121:30" pos:end="2121:39">illegal_op</name>;</goto>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="2125:21" pos:end="2125:26">break;</break>

                <case pos:start="2127:17" pos:end="2127:23">case <expr pos:start="2127:22" pos:end="2127:22"><literal type="number" pos:start="2127:22" pos:end="2127:22">2</literal></expr>:</case> <comment type="block" pos:start="2127:25" pos:end="2127:51">/* Multiplies (Type 3).  */</comment>

                    <switch pos:start="2129:21" pos:end="2335:21">switch <condition pos:start="2129:28" pos:end="2129:47">(<expr pos:start="2129:29" pos:end="2129:46"><operator pos:start="2129:29" pos:end="2129:29">(</operator><name pos:start="2129:30" pos:end="2129:33">insn</name> <operator pos:start="2129:35" pos:end="2129:36">&gt;&gt;</operator> <literal type="number" pos:start="2129:38" pos:end="2129:39">20</literal><operator pos:start="2129:40" pos:end="2129:40">)</operator> <operator pos:start="2129:42" pos:end="2129:42">&amp;</operator> <literal type="number" pos:start="2129:44" pos:end="2129:46">0x7</literal></expr>)</condition> <block pos:start="2129:49" pos:end="2335:21">{<block_content pos:start="2131:21" pos:end="2333:40">

                    <case pos:start="2131:21" pos:end="2131:27">case <expr pos:start="2131:26" pos:end="2131:26"><literal type="number" pos:start="2131:26" pos:end="2131:26">5</literal></expr>:</case>

                        <if_stmt pos:start="2133:25" pos:end="2139:25"><if pos:start="2133:25" pos:end="2139:25">if <condition pos:start="2133:28" pos:end="2133:60">(<expr pos:start="2133:29" pos:end="2133:59"><operator pos:start="2133:29" pos:end="2133:29">(</operator><operator pos:start="2133:30" pos:end="2133:30">(</operator><name pos:start="2133:31" pos:end="2133:34">insn</name> <operator pos:start="2133:36" pos:end="2133:37">&gt;&gt;</operator> <literal type="number" pos:start="2133:39" pos:end="2133:39">6</literal><operator pos:start="2133:40" pos:end="2133:40">)</operator> <operator pos:start="2133:42" pos:end="2133:42">^</operator> <operator pos:start="2133:44" pos:end="2133:44">(</operator><name pos:start="2133:45" pos:end="2133:48">insn</name> <operator pos:start="2133:50" pos:end="2133:51">&gt;&gt;</operator> <literal type="number" pos:start="2133:53" pos:end="2133:53">7</literal><operator pos:start="2133:54" pos:end="2133:54">)</operator><operator pos:start="2133:55" pos:end="2133:55">)</operator> <operator pos:start="2133:57" pos:end="2133:57">&amp;</operator> <literal type="number" pos:start="2133:59" pos:end="2133:59">1</literal></expr>)</condition> <block pos:start="2133:62" pos:end="2139:25">{<block_content pos:start="2137:29" pos:end="2137:44">

                            <comment type="block" pos:start="2135:29" pos:end="2135:60">/* op2 not 00x or 11x : UNDEF */</comment>

                            <goto pos:start="2137:29" pos:end="2137:44">goto <name pos:start="2137:34" pos:end="2137:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <comment type="block" pos:start="2141:25" pos:end="2143:51">/* Signed multiply most significant [accumulate].

                           (SMMUL, SMMLA, SMMLS) */</comment>

                        <expr_stmt pos:start="2145:25" pos:end="2145:46"><expr pos:start="2145:25" pos:end="2145:45"><name pos:start="2145:25" pos:end="2145:27">tmp</name> <operator pos:start="2145:29" pos:end="2145:29">=</operator> <call pos:start="2145:31" pos:end="2145:45"><name pos:start="2145:31" pos:end="2145:38">load_reg</name><argument_list pos:start="2145:39" pos:end="2145:45">(<argument pos:start="2145:40" pos:end="2145:40"><expr pos:start="2145:40" pos:end="2145:40"><name pos:start="2145:40" pos:end="2145:40">s</name></expr></argument>, <argument pos:start="2145:43" pos:end="2145:44"><expr pos:start="2145:43" pos:end="2145:44"><name pos:start="2145:43" pos:end="2145:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2147:25" pos:end="2147:47"><expr pos:start="2147:25" pos:end="2147:46"><name pos:start="2147:25" pos:end="2147:28">tmp2</name> <operator pos:start="2147:30" pos:end="2147:30">=</operator> <call pos:start="2147:32" pos:end="2147:46"><name pos:start="2147:32" pos:end="2147:39">load_reg</name><argument_list pos:start="2147:40" pos:end="2147:46">(<argument pos:start="2147:41" pos:end="2147:41"><expr pos:start="2147:41" pos:end="2147:41"><name pos:start="2147:41" pos:end="2147:41">s</name></expr></argument>, <argument pos:start="2147:44" pos:end="2147:45"><expr pos:start="2147:44" pos:end="2147:45"><name pos:start="2147:44" pos:end="2147:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2149:25" pos:end="2149:60"><expr pos:start="2149:25" pos:end="2149:59"><name pos:start="2149:25" pos:end="2149:29">tmp64</name> <operator pos:start="2149:31" pos:end="2149:31">=</operator> <call pos:start="2149:33" pos:end="2149:59"><name pos:start="2149:33" pos:end="2149:48">gen_muls_i64_i32</name><argument_list pos:start="2149:49" pos:end="2149:59">(<argument pos:start="2149:50" pos:end="2149:52"><expr pos:start="2149:50" pos:end="2149:52"><name pos:start="2149:50" pos:end="2149:52">tmp</name></expr></argument>, <argument pos:start="2149:55" pos:end="2149:58"><expr pos:start="2149:55" pos:end="2149:58"><name pos:start="2149:55" pos:end="2149:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="2153:25" pos:end="2167:25"><if pos:start="2153:25" pos:end="2167:25">if <condition pos:start="2153:28" pos:end="2153:37">(<expr pos:start="2153:29" pos:end="2153:36"><name pos:start="2153:29" pos:end="2153:30">rd</name> <operator pos:start="2153:32" pos:end="2153:33">!=</operator> <literal type="number" pos:start="2153:35" pos:end="2153:36">15</literal></expr>)</condition> <block pos:start="2153:39" pos:end="2167:25">{<block_content pos:start="2155:29" pos:end="2165:29">

                            <expr_stmt pos:start="2155:29" pos:end="2155:50"><expr pos:start="2155:29" pos:end="2155:49"><name pos:start="2155:29" pos:end="2155:31">tmp</name> <operator pos:start="2155:33" pos:end="2155:33">=</operator> <call pos:start="2155:35" pos:end="2155:49"><name pos:start="2155:35" pos:end="2155:42">load_reg</name><argument_list pos:start="2155:43" pos:end="2155:49">(<argument pos:start="2155:44" pos:end="2155:44"><expr pos:start="2155:44" pos:end="2155:44"><name pos:start="2155:44" pos:end="2155:44">s</name></expr></argument>, <argument pos:start="2155:47" pos:end="2155:48"><expr pos:start="2155:47" pos:end="2155:48"><name pos:start="2155:47" pos:end="2155:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2157:29" pos:end="2165:29"><if pos:start="2157:29" pos:end="2161:29">if <condition pos:start="2157:32" pos:end="2157:48">(<expr pos:start="2157:33" pos:end="2157:47"><name pos:start="2157:33" pos:end="2157:36">insn</name> <operator pos:start="2157:38" pos:end="2157:38">&amp;</operator> <operator pos:start="2157:40" pos:end="2157:40">(</operator><literal type="number" pos:start="2157:41" pos:end="2157:41">1</literal> <operator pos:start="2157:43" pos:end="2157:44">&lt;&lt;</operator> <literal type="number" pos:start="2157:46" pos:end="2157:46">6</literal><operator pos:start="2157:47" pos:end="2157:47">)</operator></expr>)</condition> <block pos:start="2157:50" pos:end="2161:29">{<block_content pos:start="2159:33" pos:end="2159:65">

                                <expr_stmt pos:start="2159:33" pos:end="2159:65"><expr pos:start="2159:33" pos:end="2159:64"><name pos:start="2159:33" pos:end="2159:37">tmp64</name> <operator pos:start="2159:39" pos:end="2159:39">=</operator> <call pos:start="2159:41" pos:end="2159:64"><name pos:start="2159:41" pos:end="2159:52">gen_subq_msw</name><argument_list pos:start="2159:53" pos:end="2159:64">(<argument pos:start="2159:54" pos:end="2159:58"><expr pos:start="2159:54" pos:end="2159:58"><name pos:start="2159:54" pos:end="2159:58">tmp64</name></expr></argument>, <argument pos:start="2159:61" pos:end="2159:63"><expr pos:start="2159:61" pos:end="2159:63"><name pos:start="2159:61" pos:end="2159:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2161:31" pos:end="2165:29">else <block pos:start="2161:36" pos:end="2165:29">{<block_content pos:start="2163:33" pos:end="2163:65">

                                <expr_stmt pos:start="2163:33" pos:end="2163:65"><expr pos:start="2163:33" pos:end="2163:64"><name pos:start="2163:33" pos:end="2163:37">tmp64</name> <operator pos:start="2163:39" pos:end="2163:39">=</operator> <call pos:start="2163:41" pos:end="2163:64"><name pos:start="2163:41" pos:end="2163:52">gen_addq_msw</name><argument_list pos:start="2163:53" pos:end="2163:64">(<argument pos:start="2163:54" pos:end="2163:58"><expr pos:start="2163:54" pos:end="2163:58"><name pos:start="2163:54" pos:end="2163:58">tmp64</name></expr></argument>, <argument pos:start="2163:61" pos:end="2163:63"><expr pos:start="2163:61" pos:end="2163:63"><name pos:start="2163:61" pos:end="2163:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="2169:25" pos:end="2173:25"><if pos:start="2169:25" pos:end="2173:25">if <condition pos:start="2169:28" pos:end="2169:44">(<expr pos:start="2169:29" pos:end="2169:43"><name pos:start="2169:29" pos:end="2169:32">insn</name> <operator pos:start="2169:34" pos:end="2169:34">&amp;</operator> <operator pos:start="2169:36" pos:end="2169:36">(</operator><literal type="number" pos:start="2169:37" pos:end="2169:37">1</literal> <operator pos:start="2169:39" pos:end="2169:40">&lt;&lt;</operator> <literal type="number" pos:start="2169:42" pos:end="2169:42">5</literal><operator pos:start="2169:43" pos:end="2169:43">)</operator></expr>)</condition> <block pos:start="2169:46" pos:end="2173:25">{<block_content pos:start="2171:29" pos:end="2171:72">

                            <expr_stmt pos:start="2171:29" pos:end="2171:72"><expr pos:start="2171:29" pos:end="2171:71"><call pos:start="2171:29" pos:end="2171:71"><name pos:start="2171:29" pos:end="2171:44">tcg_gen_addi_i64</name><argument_list pos:start="2171:45" pos:end="2171:71">(<argument pos:start="2171:46" pos:end="2171:50"><expr pos:start="2171:46" pos:end="2171:50"><name pos:start="2171:46" pos:end="2171:50">tmp64</name></expr></argument>, <argument pos:start="2171:53" pos:end="2171:57"><expr pos:start="2171:53" pos:end="2171:57"><name pos:start="2171:53" pos:end="2171:57">tmp64</name></expr></argument>, <argument pos:start="2171:60" pos:end="2171:70"><expr pos:start="2171:60" pos:end="2171:70"><literal type="number" pos:start="2171:60" pos:end="2171:70">0x80000000u</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2175:25" pos:end="2175:59"><expr pos:start="2175:25" pos:end="2175:58"><call pos:start="2175:25" pos:end="2175:58"><name pos:start="2175:25" pos:end="2175:40">tcg_gen_shri_i64</name><argument_list pos:start="2175:41" pos:end="2175:58">(<argument pos:start="2175:42" pos:end="2175:46"><expr pos:start="2175:42" pos:end="2175:46"><name pos:start="2175:42" pos:end="2175:46">tmp64</name></expr></argument>, <argument pos:start="2175:49" pos:end="2175:53"><expr pos:start="2175:49" pos:end="2175:53"><name pos:start="2175:49" pos:end="2175:53">tmp64</name></expr></argument>, <argument pos:start="2175:56" pos:end="2175:57"><expr pos:start="2175:56" pos:end="2175:57"><literal type="number" pos:start="2175:56" pos:end="2175:57">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2177:25" pos:end="2177:49"><expr pos:start="2177:25" pos:end="2177:48"><name pos:start="2177:25" pos:end="2177:27">tmp</name> <operator pos:start="2177:29" pos:end="2177:29">=</operator> <call pos:start="2177:31" pos:end="2177:48"><name pos:start="2177:31" pos:end="2177:46">tcg_temp_new_i32</name><argument_list pos:start="2177:47" pos:end="2177:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2179:25" pos:end="2179:58"><expr pos:start="2179:25" pos:end="2179:57"><call pos:start="2179:25" pos:end="2179:57"><name pos:start="2179:25" pos:end="2179:45">tcg_gen_extrl_i64_i32</name><argument_list pos:start="2179:46" pos:end="2179:57">(<argument pos:start="2179:47" pos:end="2179:49"><expr pos:start="2179:47" pos:end="2179:49"><name pos:start="2179:47" pos:end="2179:49">tmp</name></expr></argument>, <argument pos:start="2179:52" pos:end="2179:56"><expr pos:start="2179:52" pos:end="2179:56"><name pos:start="2179:52" pos:end="2179:56">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2181:25" pos:end="2181:49"><expr pos:start="2181:25" pos:end="2181:48"><call pos:start="2181:25" pos:end="2181:48"><name pos:start="2181:25" pos:end="2181:41">tcg_temp_free_i64</name><argument_list pos:start="2181:42" pos:end="2181:48">(<argument pos:start="2181:43" pos:end="2181:47"><expr pos:start="2181:43" pos:end="2181:47"><name pos:start="2181:43" pos:end="2181:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2183:25" pos:end="2183:46"><expr pos:start="2183:25" pos:end="2183:45"><call pos:start="2183:25" pos:end="2183:45"><name pos:start="2183:25" pos:end="2183:33">store_reg</name><argument_list pos:start="2183:34" pos:end="2183:45">(<argument pos:start="2183:35" pos:end="2183:35"><expr pos:start="2183:35" pos:end="2183:35"><name pos:start="2183:35" pos:end="2183:35">s</name></expr></argument>, <argument pos:start="2183:38" pos:end="2183:39"><expr pos:start="2183:38" pos:end="2183:39"><name pos:start="2183:38" pos:end="2183:39">rn</name></expr></argument>, <argument pos:start="2183:42" pos:end="2183:44"><expr pos:start="2183:42" pos:end="2183:44"><name pos:start="2183:42" pos:end="2183:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2185:25" pos:end="2185:30">break;</break>

                    <case pos:start="2187:21" pos:end="2187:27">case <expr pos:start="2187:26" pos:end="2187:26"><literal type="number" pos:start="2187:26" pos:end="2187:26">0</literal></expr>:</case>

                    <case pos:start="2189:21" pos:end="2189:27">case <expr pos:start="2189:26" pos:end="2189:26"><literal type="number" pos:start="2189:26" pos:end="2189:26">4</literal></expr>:</case>

                        <comment type="block" pos:start="2191:25" pos:end="2191:72">/* SMLAD, SMUAD, SMLSD, SMUSD, SMLALD, SMLSLD */</comment>

                        <if_stmt pos:start="2193:25" pos:end="2197:25"><if pos:start="2193:25" pos:end="2197:25">if <condition pos:start="2193:28" pos:end="2193:44">(<expr pos:start="2193:29" pos:end="2193:43"><name pos:start="2193:29" pos:end="2193:32">insn</name> <operator pos:start="2193:34" pos:end="2193:34">&amp;</operator> <operator pos:start="2193:36" pos:end="2193:36">(</operator><literal type="number" pos:start="2193:37" pos:end="2193:37">1</literal> <operator pos:start="2193:39" pos:end="2193:40">&lt;&lt;</operator> <literal type="number" pos:start="2193:42" pos:end="2193:42">7</literal><operator pos:start="2193:43" pos:end="2193:43">)</operator></expr>)</condition> <block pos:start="2193:46" pos:end="2197:25">{<block_content pos:start="2195:29" pos:end="2195:44">

                            <goto pos:start="2195:29" pos:end="2195:44">goto <name pos:start="2195:34" pos:end="2195:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2199:25" pos:end="2199:46"><expr pos:start="2199:25" pos:end="2199:45"><name pos:start="2199:25" pos:end="2199:27">tmp</name> <operator pos:start="2199:29" pos:end="2199:29">=</operator> <call pos:start="2199:31" pos:end="2199:45"><name pos:start="2199:31" pos:end="2199:38">load_reg</name><argument_list pos:start="2199:39" pos:end="2199:45">(<argument pos:start="2199:40" pos:end="2199:40"><expr pos:start="2199:40" pos:end="2199:40"><name pos:start="2199:40" pos:end="2199:40">s</name></expr></argument>, <argument pos:start="2199:43" pos:end="2199:44"><expr pos:start="2199:43" pos:end="2199:44"><name pos:start="2199:43" pos:end="2199:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2201:25" pos:end="2201:47"><expr pos:start="2201:25" pos:end="2201:46"><name pos:start="2201:25" pos:end="2201:28">tmp2</name> <operator pos:start="2201:30" pos:end="2201:30">=</operator> <call pos:start="2201:32" pos:end="2201:46"><name pos:start="2201:32" pos:end="2201:39">load_reg</name><argument_list pos:start="2201:40" pos:end="2201:46">(<argument pos:start="2201:41" pos:end="2201:41"><expr pos:start="2201:41" pos:end="2201:41"><name pos:start="2201:41" pos:end="2201:41">s</name></expr></argument>, <argument pos:start="2201:44" pos:end="2201:45"><expr pos:start="2201:44" pos:end="2201:45"><name pos:start="2201:44" pos:end="2201:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2203:25" pos:end="2205:48"><if pos:start="2203:25" pos:end="2205:48">if <condition pos:start="2203:28" pos:end="2203:44">(<expr pos:start="2203:29" pos:end="2203:43"><name pos:start="2203:29" pos:end="2203:32">insn</name> <operator pos:start="2203:34" pos:end="2203:34">&amp;</operator> <operator pos:start="2203:36" pos:end="2203:36">(</operator><literal type="number" pos:start="2203:37" pos:end="2203:37">1</literal> <operator pos:start="2203:39" pos:end="2203:40">&lt;&lt;</operator> <literal type="number" pos:start="2203:42" pos:end="2203:42">5</literal><operator pos:start="2203:43" pos:end="2203:43">)</operator></expr>)</condition><block type="pseudo" pos:start="2205:29" pos:end="2205:48"><block_content pos:start="2205:29" pos:end="2205:48">

                            <expr_stmt pos:start="2205:29" pos:end="2205:48"><expr pos:start="2205:29" pos:end="2205:47"><call pos:start="2205:29" pos:end="2205:47"><name pos:start="2205:29" pos:end="2205:41">gen_swap_half</name><argument_list pos:start="2205:42" pos:end="2205:47">(<argument pos:start="2205:43" pos:end="2205:46"><expr pos:start="2205:43" pos:end="2205:46"><name pos:start="2205:43" pos:end="2205:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="2207:25" pos:end="2207:49"><expr pos:start="2207:25" pos:end="2207:48"><call pos:start="2207:25" pos:end="2207:48"><name pos:start="2207:25" pos:end="2207:37">gen_smul_dual</name><argument_list pos:start="2207:38" pos:end="2207:48">(<argument pos:start="2207:39" pos:end="2207:41"><expr pos:start="2207:39" pos:end="2207:41"><name pos:start="2207:39" pos:end="2207:41">tmp</name></expr></argument>, <argument pos:start="2207:44" pos:end="2207:47"><expr pos:start="2207:44" pos:end="2207:47"><name pos:start="2207:44" pos:end="2207:47">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2209:25" pos:end="2289:25"><if pos:start="2209:25" pos:end="2247:25">if <condition pos:start="2209:28" pos:end="2209:45">(<expr pos:start="2209:29" pos:end="2209:44"><name pos:start="2209:29" pos:end="2209:32">insn</name> <operator pos:start="2209:34" pos:end="2209:34">&amp;</operator> <operator pos:start="2209:36" pos:end="2209:36">(</operator><literal type="number" pos:start="2209:37" pos:end="2209:37">1</literal> <operator pos:start="2209:39" pos:end="2209:40">&lt;&lt;</operator> <literal type="number" pos:start="2209:42" pos:end="2209:43">22</literal><operator pos:start="2209:44" pos:end="2209:44">)</operator></expr>)</condition> <block pos:start="2209:47" pos:end="2247:25">{<block_content pos:start="2213:29" pos:end="2245:53">

                            <comment type="block" pos:start="2211:29" pos:end="2211:48">/* smlald, smlsld */</comment>

                            <decl_stmt pos:start="2213:29" pos:end="2213:45"><decl pos:start="2213:29" pos:end="2213:44"><type pos:start="2213:29" pos:end="2213:36"><name pos:start="2213:29" pos:end="2213:36">TCGv_i64</name></type> <name pos:start="2213:38" pos:end="2213:44">tmp64_2</name></decl>;</decl_stmt>



                            <expr_stmt pos:start="2217:29" pos:end="2217:55"><expr pos:start="2217:29" pos:end="2217:54"><name pos:start="2217:29" pos:end="2217:33">tmp64</name> <operator pos:start="2217:35" pos:end="2217:35">=</operator> <call pos:start="2217:37" pos:end="2217:54"><name pos:start="2217:37" pos:end="2217:52">tcg_temp_new_i64</name><argument_list pos:start="2217:53" pos:end="2217:54">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2219:29" pos:end="2219:57"><expr pos:start="2219:29" pos:end="2219:56"><name pos:start="2219:29" pos:end="2219:35">tmp64_2</name> <operator pos:start="2219:37" pos:end="2219:37">=</operator> <call pos:start="2219:39" pos:end="2219:56"><name pos:start="2219:39" pos:end="2219:54">tcg_temp_new_i64</name><argument_list pos:start="2219:55" pos:end="2219:56">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2221:29" pos:end="2221:60"><expr pos:start="2221:29" pos:end="2221:59"><call pos:start="2221:29" pos:end="2221:59"><name pos:start="2221:29" pos:end="2221:47">tcg_gen_ext_i32_i64</name><argument_list pos:start="2221:48" pos:end="2221:59">(<argument pos:start="2221:49" pos:end="2221:53"><expr pos:start="2221:49" pos:end="2221:53"><name pos:start="2221:49" pos:end="2221:53">tmp64</name></expr></argument>, <argument pos:start="2221:56" pos:end="2221:58"><expr pos:start="2221:56" pos:end="2221:58"><name pos:start="2221:56" pos:end="2221:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2223:29" pos:end="2223:63"><expr pos:start="2223:29" pos:end="2223:62"><call pos:start="2223:29" pos:end="2223:62"><name pos:start="2223:29" pos:end="2223:47">tcg_gen_ext_i32_i64</name><argument_list pos:start="2223:48" pos:end="2223:62">(<argument pos:start="2223:49" pos:end="2223:55"><expr pos:start="2223:49" pos:end="2223:55"><name pos:start="2223:49" pos:end="2223:55">tmp64_2</name></expr></argument>, <argument pos:start="2223:58" pos:end="2223:61"><expr pos:start="2223:58" pos:end="2223:61"><name pos:start="2223:58" pos:end="2223:61">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2225:29" pos:end="2225:51"><expr pos:start="2225:29" pos:end="2225:50"><call pos:start="2225:29" pos:end="2225:50"><name pos:start="2225:29" pos:end="2225:45">tcg_temp_free_i32</name><argument_list pos:start="2225:46" pos:end="2225:50">(<argument pos:start="2225:47" pos:end="2225:49"><expr pos:start="2225:47" pos:end="2225:49"><name pos:start="2225:47" pos:end="2225:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2227:29" pos:end="2227:52"><expr pos:start="2227:29" pos:end="2227:51"><call pos:start="2227:29" pos:end="2227:51"><name pos:start="2227:29" pos:end="2227:45">tcg_temp_free_i32</name><argument_list pos:start="2227:46" pos:end="2227:51">(<argument pos:start="2227:47" pos:end="2227:50"><expr pos:start="2227:47" pos:end="2227:50"><name pos:start="2227:47" pos:end="2227:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2229:29" pos:end="2237:29"><if pos:start="2229:29" pos:end="2233:29">if <condition pos:start="2229:32" pos:end="2229:48">(<expr pos:start="2229:33" pos:end="2229:47"><name pos:start="2229:33" pos:end="2229:36">insn</name> <operator pos:start="2229:38" pos:end="2229:38">&amp;</operator> <operator pos:start="2229:40" pos:end="2229:40">(</operator><literal type="number" pos:start="2229:41" pos:end="2229:41">1</literal> <operator pos:start="2229:43" pos:end="2229:44">&lt;&lt;</operator> <literal type="number" pos:start="2229:46" pos:end="2229:46">6</literal><operator pos:start="2229:47" pos:end="2229:47">)</operator></expr>)</condition> <block pos:start="2229:50" pos:end="2233:29">{<block_content pos:start="2231:33" pos:end="2231:71">

                                <expr_stmt pos:start="2231:33" pos:end="2231:71"><expr pos:start="2231:33" pos:end="2231:70"><call pos:start="2231:33" pos:end="2231:70"><name pos:start="2231:33" pos:end="2231:47">tcg_gen_sub_i64</name><argument_list pos:start="2231:48" pos:end="2231:70">(<argument pos:start="2231:49" pos:end="2231:53"><expr pos:start="2231:49" pos:end="2231:53"><name pos:start="2231:49" pos:end="2231:53">tmp64</name></expr></argument>, <argument pos:start="2231:56" pos:end="2231:60"><expr pos:start="2231:56" pos:end="2231:60"><name pos:start="2231:56" pos:end="2231:60">tmp64</name></expr></argument>, <argument pos:start="2231:63" pos:end="2231:69"><expr pos:start="2231:63" pos:end="2231:69"><name pos:start="2231:63" pos:end="2231:69">tmp64_2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2233:31" pos:end="2237:29">else <block pos:start="2233:36" pos:end="2237:29">{<block_content pos:start="2235:33" pos:end="2235:71">

                                <expr_stmt pos:start="2235:33" pos:end="2235:71"><expr pos:start="2235:33" pos:end="2235:70"><call pos:start="2235:33" pos:end="2235:70"><name pos:start="2235:33" pos:end="2235:47">tcg_gen_add_i64</name><argument_list pos:start="2235:48" pos:end="2235:70">(<argument pos:start="2235:49" pos:end="2235:53"><expr pos:start="2235:49" pos:end="2235:53"><name pos:start="2235:49" pos:end="2235:53">tmp64</name></expr></argument>, <argument pos:start="2235:56" pos:end="2235:60"><expr pos:start="2235:56" pos:end="2235:60"><name pos:start="2235:56" pos:end="2235:60">tmp64</name></expr></argument>, <argument pos:start="2235:63" pos:end="2235:69"><expr pos:start="2235:63" pos:end="2235:69"><name pos:start="2235:63" pos:end="2235:69">tmp64_2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2239:29" pos:end="2239:55"><expr pos:start="2239:29" pos:end="2239:54"><call pos:start="2239:29" pos:end="2239:54"><name pos:start="2239:29" pos:end="2239:45">tcg_temp_free_i64</name><argument_list pos:start="2239:46" pos:end="2239:54">(<argument pos:start="2239:47" pos:end="2239:53"><expr pos:start="2239:47" pos:end="2239:53"><name pos:start="2239:47" pos:end="2239:53">tmp64_2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2241:29" pos:end="2241:55"><expr pos:start="2241:29" pos:end="2241:54"><call pos:start="2241:29" pos:end="2241:54"><name pos:start="2241:29" pos:end="2241:36">gen_addq</name><argument_list pos:start="2241:37" pos:end="2241:54">(<argument pos:start="2241:38" pos:end="2241:38"><expr pos:start="2241:38" pos:end="2241:38"><name pos:start="2241:38" pos:end="2241:38">s</name></expr></argument>, <argument pos:start="2241:41" pos:end="2241:45"><expr pos:start="2241:41" pos:end="2241:45"><name pos:start="2241:41" pos:end="2241:45">tmp64</name></expr></argument>, <argument pos:start="2241:48" pos:end="2241:49"><expr pos:start="2241:48" pos:end="2241:49"><name pos:start="2241:48" pos:end="2241:49">rd</name></expr></argument>, <argument pos:start="2241:52" pos:end="2241:53"><expr pos:start="2241:52" pos:end="2241:53"><name pos:start="2241:52" pos:end="2241:53">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2243:29" pos:end="2243:61"><expr pos:start="2243:29" pos:end="2243:60"><call pos:start="2243:29" pos:end="2243:60"><name pos:start="2243:29" pos:end="2243:42">gen_storeq_reg</name><argument_list pos:start="2243:43" pos:end="2243:60">(<argument pos:start="2243:44" pos:end="2243:44"><expr pos:start="2243:44" pos:end="2243:44"><name pos:start="2243:44" pos:end="2243:44">s</name></expr></argument>, <argument pos:start="2243:47" pos:end="2243:48"><expr pos:start="2243:47" pos:end="2243:48"><name pos:start="2243:47" pos:end="2243:48">rd</name></expr></argument>, <argument pos:start="2243:51" pos:end="2243:52"><expr pos:start="2243:51" pos:end="2243:52"><name pos:start="2243:51" pos:end="2243:52">rn</name></expr></argument>, <argument pos:start="2243:55" pos:end="2243:59"><expr pos:start="2243:55" pos:end="2243:59"><name pos:start="2243:55" pos:end="2243:59">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2245:29" pos:end="2245:53"><expr pos:start="2245:29" pos:end="2245:52"><call pos:start="2245:29" pos:end="2245:52"><name pos:start="2245:29" pos:end="2245:45">tcg_temp_free_i64</name><argument_list pos:start="2245:46" pos:end="2245:52">(<argument pos:start="2245:47" pos:end="2245:51"><expr pos:start="2245:47" pos:end="2245:51"><name pos:start="2245:47" pos:end="2245:51">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="2247:27" pos:end="2289:25">else <block pos:start="2247:32" pos:end="2289:25">{<block_content pos:start="2251:29" pos:end="2287:50">

                            <comment type="block" pos:start="2249:29" pos:end="2249:60">/* smuad, smusd, smlad, smlsd */</comment>

                            <if_stmt pos:start="2251:29" pos:end="2271:29"><if pos:start="2251:29" pos:end="2257:29">if <condition pos:start="2251:32" pos:end="2251:48">(<expr pos:start="2251:33" pos:end="2251:47"><name pos:start="2251:33" pos:end="2251:36">insn</name> <operator pos:start="2251:38" pos:end="2251:38">&amp;</operator> <operator pos:start="2251:40" pos:end="2251:40">(</operator><literal type="number" pos:start="2251:41" pos:end="2251:41">1</literal> <operator pos:start="2251:43" pos:end="2251:44">&lt;&lt;</operator> <literal type="number" pos:start="2251:46" pos:end="2251:46">6</literal><operator pos:start="2251:47" pos:end="2251:47">)</operator></expr>)</condition> <block pos:start="2251:50" pos:end="2257:29">{<block_content pos:start="2255:33" pos:end="2255:64">

                                <comment type="block" pos:start="2253:33" pos:end="2253:71">/* This subtraction cannot overflow. */</comment>

                                <expr_stmt pos:start="2255:33" pos:end="2255:64"><expr pos:start="2255:33" pos:end="2255:63"><call pos:start="2255:33" pos:end="2255:63"><name pos:start="2255:33" pos:end="2255:47">tcg_gen_sub_i32</name><argument_list pos:start="2255:48" pos:end="2255:63">(<argument pos:start="2255:49" pos:end="2255:51"><expr pos:start="2255:49" pos:end="2255:51"><name pos:start="2255:49" pos:end="2255:51">tmp</name></expr></argument>, <argument pos:start="2255:54" pos:end="2255:56"><expr pos:start="2255:54" pos:end="2255:56"><name pos:start="2255:54" pos:end="2255:56">tmp</name></expr></argument>, <argument pos:start="2255:59" pos:end="2255:62"><expr pos:start="2255:59" pos:end="2255:62"><name pos:start="2255:59" pos:end="2255:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2257:31" pos:end="2271:29">else <block pos:start="2257:36" pos:end="2271:29">{<block_content pos:start="2269:33" pos:end="2269:77">

                                <comment type="block" pos:start="2259:33" pos:end="2267:35">/* This addition cannot overflow 32 bits;

                                 * however it may overflow considered as a

                                 * signed operation, in which case we must set

                                 * the Q flag.

                                 */</comment>

                                <expr_stmt pos:start="2269:33" pos:end="2269:77"><expr pos:start="2269:33" pos:end="2269:76"><call pos:start="2269:33" pos:end="2269:76"><name pos:start="2269:33" pos:end="2269:51">gen_helper_add_setq</name><argument_list pos:start="2269:52" pos:end="2269:76">(<argument pos:start="2269:53" pos:end="2269:55"><expr pos:start="2269:53" pos:end="2269:55"><name pos:start="2269:53" pos:end="2269:55">tmp</name></expr></argument>, <argument pos:start="2269:58" pos:end="2269:64"><expr pos:start="2269:58" pos:end="2269:64"><name pos:start="2269:58" pos:end="2269:64">cpu_env</name></expr></argument>, <argument pos:start="2269:67" pos:end="2269:69"><expr pos:start="2269:67" pos:end="2269:69"><name pos:start="2269:67" pos:end="2269:69">tmp</name></expr></argument>, <argument pos:start="2269:72" pos:end="2269:75"><expr pos:start="2269:72" pos:end="2269:75"><name pos:start="2269:72" pos:end="2269:75">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2273:29" pos:end="2273:52"><expr pos:start="2273:29" pos:end="2273:51"><call pos:start="2273:29" pos:end="2273:51"><name pos:start="2273:29" pos:end="2273:45">tcg_temp_free_i32</name><argument_list pos:start="2273:46" pos:end="2273:51">(<argument pos:start="2273:47" pos:end="2273:50"><expr pos:start="2273:47" pos:end="2273:50"><name pos:start="2273:47" pos:end="2273:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2275:29" pos:end="2285:31"><if pos:start="2275:29" pos:end="2285:31">if <condition pos:start="2275:32" pos:end="2275:41">(<expr pos:start="2275:33" pos:end="2275:40"><name pos:start="2275:33" pos:end="2275:34">rd</name> <operator pos:start="2275:36" pos:end="2275:37">!=</operator> <literal type="number" pos:start="2275:39" pos:end="2275:40">15</literal></expr>)</condition>

                              <block pos:start="2277:31" pos:end="2285:31">{<block_content pos:start="2279:33" pos:end="2283:56">

                                <expr_stmt pos:start="2279:33" pos:end="2279:55"><expr pos:start="2279:33" pos:end="2279:54"><name pos:start="2279:33" pos:end="2279:36">tmp2</name> <operator pos:start="2279:38" pos:end="2279:38">=</operator> <call pos:start="2279:40" pos:end="2279:54"><name pos:start="2279:40" pos:end="2279:47">load_reg</name><argument_list pos:start="2279:48" pos:end="2279:54">(<argument pos:start="2279:49" pos:end="2279:49"><expr pos:start="2279:49" pos:end="2279:49"><name pos:start="2279:49" pos:end="2279:49">s</name></expr></argument>, <argument pos:start="2279:52" pos:end="2279:53"><expr pos:start="2279:52" pos:end="2279:53"><name pos:start="2279:52" pos:end="2279:53">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2281:33" pos:end="2281:77"><expr pos:start="2281:33" pos:end="2281:76"><call pos:start="2281:33" pos:end="2281:76"><name pos:start="2281:33" pos:end="2281:51">gen_helper_add_setq</name><argument_list pos:start="2281:52" pos:end="2281:76">(<argument pos:start="2281:53" pos:end="2281:55"><expr pos:start="2281:53" pos:end="2281:55"><name pos:start="2281:53" pos:end="2281:55">tmp</name></expr></argument>, <argument pos:start="2281:58" pos:end="2281:64"><expr pos:start="2281:58" pos:end="2281:64"><name pos:start="2281:58" pos:end="2281:64">cpu_env</name></expr></argument>, <argument pos:start="2281:67" pos:end="2281:69"><expr pos:start="2281:67" pos:end="2281:69"><name pos:start="2281:67" pos:end="2281:69">tmp</name></expr></argument>, <argument pos:start="2281:72" pos:end="2281:75"><expr pos:start="2281:72" pos:end="2281:75"><name pos:start="2281:72" pos:end="2281:75">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2283:33" pos:end="2283:56"><expr pos:start="2283:33" pos:end="2283:55"><call pos:start="2283:33" pos:end="2283:55"><name pos:start="2283:33" pos:end="2283:49">tcg_temp_free_i32</name><argument_list pos:start="2283:50" pos:end="2283:55">(<argument pos:start="2283:51" pos:end="2283:54"><expr pos:start="2283:51" pos:end="2283:54"><name pos:start="2283:51" pos:end="2283:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                              </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="2287:29" pos:end="2287:50"><expr pos:start="2287:29" pos:end="2287:49"><call pos:start="2287:29" pos:end="2287:49"><name pos:start="2287:29" pos:end="2287:37">store_reg</name><argument_list pos:start="2287:38" pos:end="2287:49">(<argument pos:start="2287:39" pos:end="2287:39"><expr pos:start="2287:39" pos:end="2287:39"><name pos:start="2287:39" pos:end="2287:39">s</name></expr></argument>, <argument pos:start="2287:42" pos:end="2287:43"><expr pos:start="2287:42" pos:end="2287:43"><name pos:start="2287:42" pos:end="2287:43">rn</name></expr></argument>, <argument pos:start="2287:46" pos:end="2287:48"><expr pos:start="2287:46" pos:end="2287:48"><name pos:start="2287:46" pos:end="2287:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <break pos:start="2291:25" pos:end="2291:30">break;</break>

                    <case pos:start="2293:21" pos:end="2293:27">case <expr pos:start="2293:26" pos:end="2293:26"><literal type="number" pos:start="2293:26" pos:end="2293:26">1</literal></expr>:</case>

                    <case pos:start="2295:21" pos:end="2295:27">case <expr pos:start="2295:26" pos:end="2295:26"><literal type="number" pos:start="2295:26" pos:end="2295:26">3</literal></expr>:</case>

                        <comment type="block" pos:start="2297:25" pos:end="2297:40">/* SDIV, UDIV */</comment>

                        <if_stmt pos:start="2299:25" pos:end="2303:25"><if pos:start="2299:25" pos:end="2303:25">if <condition pos:start="2299:28" pos:end="2299:68">(<expr pos:start="2299:29" pos:end="2299:67"><operator pos:start="2299:29" pos:end="2299:29">!</operator><call pos:start="2299:30" pos:end="2299:67"><name pos:start="2299:30" pos:end="2299:43">arm_dc_feature</name><argument_list pos:start="2299:44" pos:end="2299:67">(<argument pos:start="2299:45" pos:end="2299:45"><expr pos:start="2299:45" pos:end="2299:45"><name pos:start="2299:45" pos:end="2299:45">s</name></expr></argument>, <argument pos:start="2299:48" pos:end="2299:66"><expr pos:start="2299:48" pos:end="2299:66"><name pos:start="2299:48" pos:end="2299:66">ARM_FEATURE_ARM_DIV</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2299:70" pos:end="2303:25">{<block_content pos:start="2301:29" pos:end="2301:44">

                            <goto pos:start="2301:29" pos:end="2301:44">goto <name pos:start="2301:34" pos:end="2301:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="2305:25" pos:end="2309:25"><if pos:start="2305:25" pos:end="2309:25">if <condition pos:start="2305:28" pos:end="2305:60">(<expr pos:start="2305:29" pos:end="2305:59"><operator pos:start="2305:29" pos:end="2305:29">(</operator><operator pos:start="2305:30" pos:end="2305:30">(</operator><name pos:start="2305:31" pos:end="2305:34">insn</name> <operator pos:start="2305:36" pos:end="2305:37">&gt;&gt;</operator> <literal type="number" pos:start="2305:39" pos:end="2305:39">5</literal><operator pos:start="2305:40" pos:end="2305:40">)</operator> <operator pos:start="2305:42" pos:end="2305:42">&amp;</operator> <literal type="number" pos:start="2305:44" pos:end="2305:44">7</literal><operator pos:start="2305:45" pos:end="2305:45">)</operator> <operator pos:start="2305:47" pos:end="2305:48">||</operator> <operator pos:start="2305:50" pos:end="2305:50">(</operator><name pos:start="2305:51" pos:end="2305:52">rd</name> <operator pos:start="2305:54" pos:end="2305:55">!=</operator> <literal type="number" pos:start="2305:57" pos:end="2305:58">15</literal><operator pos:start="2305:59" pos:end="2305:59">)</operator></expr>)</condition> <block pos:start="2305:62" pos:end="2309:25">{<block_content pos:start="2307:29" pos:end="2307:44">

                            <goto pos:start="2307:29" pos:end="2307:44">goto <name pos:start="2307:34" pos:end="2307:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2311:25" pos:end="2311:46"><expr pos:start="2311:25" pos:end="2311:45"><name pos:start="2311:25" pos:end="2311:27">tmp</name> <operator pos:start="2311:29" pos:end="2311:29">=</operator> <call pos:start="2311:31" pos:end="2311:45"><name pos:start="2311:31" pos:end="2311:38">load_reg</name><argument_list pos:start="2311:39" pos:end="2311:45">(<argument pos:start="2311:40" pos:end="2311:40"><expr pos:start="2311:40" pos:end="2311:40"><name pos:start="2311:40" pos:end="2311:40">s</name></expr></argument>, <argument pos:start="2311:43" pos:end="2311:44"><expr pos:start="2311:43" pos:end="2311:44"><name pos:start="2311:43" pos:end="2311:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2313:25" pos:end="2313:47"><expr pos:start="2313:25" pos:end="2313:46"><name pos:start="2313:25" pos:end="2313:28">tmp2</name> <operator pos:start="2313:30" pos:end="2313:30">=</operator> <call pos:start="2313:32" pos:end="2313:46"><name pos:start="2313:32" pos:end="2313:39">load_reg</name><argument_list pos:start="2313:40" pos:end="2313:46">(<argument pos:start="2313:41" pos:end="2313:41"><expr pos:start="2313:41" pos:end="2313:41"><name pos:start="2313:41" pos:end="2313:41">s</name></expr></argument>, <argument pos:start="2313:44" pos:end="2313:45"><expr pos:start="2313:44" pos:end="2313:45"><name pos:start="2313:44" pos:end="2313:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2315:25" pos:end="2323:25"><if pos:start="2315:25" pos:end="2319:25">if <condition pos:start="2315:28" pos:end="2315:45">(<expr pos:start="2315:29" pos:end="2315:44"><name pos:start="2315:29" pos:end="2315:32">insn</name> <operator pos:start="2315:34" pos:end="2315:34">&amp;</operator> <operator pos:start="2315:36" pos:end="2315:36">(</operator><literal type="number" pos:start="2315:37" pos:end="2315:37">1</literal> <operator pos:start="2315:39" pos:end="2315:40">&lt;&lt;</operator> <literal type="number" pos:start="2315:42" pos:end="2315:43">21</literal><operator pos:start="2315:44" pos:end="2315:44">)</operator></expr>)</condition> <block pos:start="2315:47" pos:end="2319:25">{<block_content pos:start="2317:29" pos:end="2317:60">

                            <expr_stmt pos:start="2317:29" pos:end="2317:60"><expr pos:start="2317:29" pos:end="2317:59"><call pos:start="2317:29" pos:end="2317:59"><name pos:start="2317:29" pos:end="2317:43">gen_helper_udiv</name><argument_list pos:start="2317:44" pos:end="2317:59">(<argument pos:start="2317:45" pos:end="2317:47"><expr pos:start="2317:45" pos:end="2317:47"><name pos:start="2317:45" pos:end="2317:47">tmp</name></expr></argument>, <argument pos:start="2317:50" pos:end="2317:52"><expr pos:start="2317:50" pos:end="2317:52"><name pos:start="2317:50" pos:end="2317:52">tmp</name></expr></argument>, <argument pos:start="2317:55" pos:end="2317:58"><expr pos:start="2317:55" pos:end="2317:58"><name pos:start="2317:55" pos:end="2317:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="2319:27" pos:end="2323:25">else <block pos:start="2319:32" pos:end="2323:25">{<block_content pos:start="2321:29" pos:end="2321:60">

                            <expr_stmt pos:start="2321:29" pos:end="2321:60"><expr pos:start="2321:29" pos:end="2321:59"><call pos:start="2321:29" pos:end="2321:59"><name pos:start="2321:29" pos:end="2321:43">gen_helper_sdiv</name><argument_list pos:start="2321:44" pos:end="2321:59">(<argument pos:start="2321:45" pos:end="2321:47"><expr pos:start="2321:45" pos:end="2321:47"><name pos:start="2321:45" pos:end="2321:47">tmp</name></expr></argument>, <argument pos:start="2321:50" pos:end="2321:52"><expr pos:start="2321:50" pos:end="2321:52"><name pos:start="2321:50" pos:end="2321:52">tmp</name></expr></argument>, <argument pos:start="2321:55" pos:end="2321:58"><expr pos:start="2321:55" pos:end="2321:58"><name pos:start="2321:55" pos:end="2321:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="2325:25" pos:end="2325:48"><expr pos:start="2325:25" pos:end="2325:47"><call pos:start="2325:25" pos:end="2325:47"><name pos:start="2325:25" pos:end="2325:41">tcg_temp_free_i32</name><argument_list pos:start="2325:42" pos:end="2325:47">(<argument pos:start="2325:43" pos:end="2325:46"><expr pos:start="2325:43" pos:end="2325:46"><name pos:start="2325:43" pos:end="2325:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2327:25" pos:end="2327:46"><expr pos:start="2327:25" pos:end="2327:45"><call pos:start="2327:25" pos:end="2327:45"><name pos:start="2327:25" pos:end="2327:33">store_reg</name><argument_list pos:start="2327:34" pos:end="2327:45">(<argument pos:start="2327:35" pos:end="2327:35"><expr pos:start="2327:35" pos:end="2327:35"><name pos:start="2327:35" pos:end="2327:35">s</name></expr></argument>, <argument pos:start="2327:38" pos:end="2327:39"><expr pos:start="2327:38" pos:end="2327:39"><name pos:start="2327:38" pos:end="2327:39">rn</name></expr></argument>, <argument pos:start="2327:42" pos:end="2327:44"><expr pos:start="2327:42" pos:end="2327:44"><name pos:start="2327:42" pos:end="2327:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2329:25" pos:end="2329:30">break;</break>

                    <default pos:start="2331:21" pos:end="2331:28">default:</default>

                        <goto pos:start="2333:25" pos:end="2333:40">goto <name pos:start="2333:30" pos:end="2333:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                    <break pos:start="2337:21" pos:end="2337:26">break;</break>

                <case pos:start="2339:17" pos:end="2339:23">case <expr pos:start="2339:22" pos:end="2339:22"><literal type="number" pos:start="2339:22" pos:end="2339:22">3</literal></expr>:</case>

                    <expr_stmt pos:start="2341:21" pos:end="2341:68"><expr pos:start="2341:21" pos:end="2341:67"><name pos:start="2341:21" pos:end="2341:23">op1</name> <operator pos:start="2341:25" pos:end="2341:25">=</operator> <operator pos:start="2341:27" pos:end="2341:27">(</operator><operator pos:start="2341:28" pos:end="2341:28">(</operator><name pos:start="2341:29" pos:end="2341:32">insn</name> <operator pos:start="2341:34" pos:end="2341:35">&gt;&gt;</operator> <literal type="number" pos:start="2341:37" pos:end="2341:38">17</literal><operator pos:start="2341:39" pos:end="2341:39">)</operator> <operator pos:start="2341:41" pos:end="2341:41">&amp;</operator> <literal type="number" pos:start="2341:43" pos:end="2341:46">0x38</literal><operator pos:start="2341:47" pos:end="2341:47">)</operator> <operator pos:start="2341:49" pos:end="2341:49">|</operator> <operator pos:start="2341:51" pos:end="2341:51">(</operator><operator pos:start="2341:52" pos:end="2341:52">(</operator><name pos:start="2341:53" pos:end="2341:56">insn</name> <operator pos:start="2341:58" pos:end="2341:59">&gt;&gt;</operator> <literal type="number" pos:start="2341:61" pos:end="2341:61">5</literal><operator pos:start="2341:62" pos:end="2341:62">)</operator> <operator pos:start="2341:64" pos:end="2341:64">&amp;</operator> <literal type="number" pos:start="2341:66" pos:end="2341:66">7</literal><operator pos:start="2341:67" pos:end="2341:67">)</operator></expr>;</expr_stmt>

                    <switch pos:start="2343:21" pos:end="2455:21">switch <condition pos:start="2343:28" pos:end="2343:32">(<expr pos:start="2343:29" pos:end="2343:31"><name pos:start="2343:29" pos:end="2343:31">op1</name></expr>)</condition> <block pos:start="2343:34" pos:end="2455:21">{<block_content pos:start="2345:21" pos:end="2453:40">

                    <case pos:start="2345:21" pos:end="2345:27">case <expr pos:start="2345:26" pos:end="2345:26"><literal type="number" pos:start="2345:26" pos:end="2345:26">0</literal></expr>:</case> <comment type="block" pos:start="2345:29" pos:end="2345:72">/* Unsigned sum of absolute differences.  */</comment>

                        <expr_stmt pos:start="2347:25" pos:end="2347:32"><expr pos:start="2347:25" pos:end="2347:31"><call pos:start="2347:25" pos:end="2347:31"><name pos:start="2347:25" pos:end="2347:28">ARCH</name><argument_list pos:start="2347:29" pos:end="2347:31">(<argument pos:start="2347:30" pos:end="2347:30"><expr pos:start="2347:30" pos:end="2347:30"><literal type="number" pos:start="2347:30" pos:end="2347:30">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2349:25" pos:end="2349:46"><expr pos:start="2349:25" pos:end="2349:45"><name pos:start="2349:25" pos:end="2349:27">tmp</name> <operator pos:start="2349:29" pos:end="2349:29">=</operator> <call pos:start="2349:31" pos:end="2349:45"><name pos:start="2349:31" pos:end="2349:38">load_reg</name><argument_list pos:start="2349:39" pos:end="2349:45">(<argument pos:start="2349:40" pos:end="2349:40"><expr pos:start="2349:40" pos:end="2349:40"><name pos:start="2349:40" pos:end="2349:40">s</name></expr></argument>, <argument pos:start="2349:43" pos:end="2349:44"><expr pos:start="2349:43" pos:end="2349:44"><name pos:start="2349:43" pos:end="2349:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2351:25" pos:end="2351:47"><expr pos:start="2351:25" pos:end="2351:46"><name pos:start="2351:25" pos:end="2351:28">tmp2</name> <operator pos:start="2351:30" pos:end="2351:30">=</operator> <call pos:start="2351:32" pos:end="2351:46"><name pos:start="2351:32" pos:end="2351:39">load_reg</name><argument_list pos:start="2351:40" pos:end="2351:46">(<argument pos:start="2351:41" pos:end="2351:41"><expr pos:start="2351:41" pos:end="2351:41"><name pos:start="2351:41" pos:end="2351:41">s</name></expr></argument>, <argument pos:start="2351:44" pos:end="2351:45"><expr pos:start="2351:44" pos:end="2351:45"><name pos:start="2351:44" pos:end="2351:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2353:25" pos:end="2353:57"><expr pos:start="2353:25" pos:end="2353:56"><call pos:start="2353:25" pos:end="2353:56"><name pos:start="2353:25" pos:end="2353:40">gen_helper_usad8</name><argument_list pos:start="2353:41" pos:end="2353:56">(<argument pos:start="2353:42" pos:end="2353:44"><expr pos:start="2353:42" pos:end="2353:44"><name pos:start="2353:42" pos:end="2353:44">tmp</name></expr></argument>, <argument pos:start="2353:47" pos:end="2353:49"><expr pos:start="2353:47" pos:end="2353:49"><name pos:start="2353:47" pos:end="2353:49">tmp</name></expr></argument>, <argument pos:start="2353:52" pos:end="2353:55"><expr pos:start="2353:52" pos:end="2353:55"><name pos:start="2353:52" pos:end="2353:55">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2355:25" pos:end="2355:48"><expr pos:start="2355:25" pos:end="2355:47"><call pos:start="2355:25" pos:end="2355:47"><name pos:start="2355:25" pos:end="2355:41">tcg_temp_free_i32</name><argument_list pos:start="2355:42" pos:end="2355:47">(<argument pos:start="2355:43" pos:end="2355:46"><expr pos:start="2355:43" pos:end="2355:46"><name pos:start="2355:43" pos:end="2355:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2357:25" pos:end="2365:25"><if pos:start="2357:25" pos:end="2365:25">if <condition pos:start="2357:28" pos:end="2357:37">(<expr pos:start="2357:29" pos:end="2357:36"><name pos:start="2357:29" pos:end="2357:30">rd</name> <operator pos:start="2357:32" pos:end="2357:33">!=</operator> <literal type="number" pos:start="2357:35" pos:end="2357:36">15</literal></expr>)</condition> <block pos:start="2357:39" pos:end="2365:25">{<block_content pos:start="2359:29" pos:end="2363:52">

                            <expr_stmt pos:start="2359:29" pos:end="2359:51"><expr pos:start="2359:29" pos:end="2359:50"><name pos:start="2359:29" pos:end="2359:32">tmp2</name> <operator pos:start="2359:34" pos:end="2359:34">=</operator> <call pos:start="2359:36" pos:end="2359:50"><name pos:start="2359:36" pos:end="2359:43">load_reg</name><argument_list pos:start="2359:44" pos:end="2359:50">(<argument pos:start="2359:45" pos:end="2359:45"><expr pos:start="2359:45" pos:end="2359:45"><name pos:start="2359:45" pos:end="2359:45">s</name></expr></argument>, <argument pos:start="2359:48" pos:end="2359:49"><expr pos:start="2359:48" pos:end="2359:49"><name pos:start="2359:48" pos:end="2359:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2361:29" pos:end="2361:60"><expr pos:start="2361:29" pos:end="2361:59"><call pos:start="2361:29" pos:end="2361:59"><name pos:start="2361:29" pos:end="2361:43">tcg_gen_add_i32</name><argument_list pos:start="2361:44" pos:end="2361:59">(<argument pos:start="2361:45" pos:end="2361:47"><expr pos:start="2361:45" pos:end="2361:47"><name pos:start="2361:45" pos:end="2361:47">tmp</name></expr></argument>, <argument pos:start="2361:50" pos:end="2361:52"><expr pos:start="2361:50" pos:end="2361:52"><name pos:start="2361:50" pos:end="2361:52">tmp</name></expr></argument>, <argument pos:start="2361:55" pos:end="2361:58"><expr pos:start="2361:55" pos:end="2361:58"><name pos:start="2361:55" pos:end="2361:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2363:29" pos:end="2363:52"><expr pos:start="2363:29" pos:end="2363:51"><call pos:start="2363:29" pos:end="2363:51"><name pos:start="2363:29" pos:end="2363:45">tcg_temp_free_i32</name><argument_list pos:start="2363:46" pos:end="2363:51">(<argument pos:start="2363:47" pos:end="2363:50"><expr pos:start="2363:47" pos:end="2363:50"><name pos:start="2363:47" pos:end="2363:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2367:25" pos:end="2367:46"><expr pos:start="2367:25" pos:end="2367:45"><call pos:start="2367:25" pos:end="2367:45"><name pos:start="2367:25" pos:end="2367:33">store_reg</name><argument_list pos:start="2367:34" pos:end="2367:45">(<argument pos:start="2367:35" pos:end="2367:35"><expr pos:start="2367:35" pos:end="2367:35"><name pos:start="2367:35" pos:end="2367:35">s</name></expr></argument>, <argument pos:start="2367:38" pos:end="2367:39"><expr pos:start="2367:38" pos:end="2367:39"><name pos:start="2367:38" pos:end="2367:39">rn</name></expr></argument>, <argument pos:start="2367:42" pos:end="2367:44"><expr pos:start="2367:42" pos:end="2367:44"><name pos:start="2367:42" pos:end="2367:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2369:25" pos:end="2369:30">break;</break>

                    <case pos:start="2371:21" pos:end="2371:30">case <expr pos:start="2371:26" pos:end="2371:29"><literal type="number" pos:start="2371:26" pos:end="2371:29">0x20</literal></expr>:</case> <case pos:start="2371:32" pos:end="2371:41">case <expr pos:start="2371:37" pos:end="2371:40"><literal type="number" pos:start="2371:37" pos:end="2371:40">0x24</literal></expr>:</case> <case pos:start="2371:43" pos:end="2371:52">case <expr pos:start="2371:48" pos:end="2371:51"><literal type="number" pos:start="2371:48" pos:end="2371:51">0x28</literal></expr>:</case> <case pos:start="2371:54" pos:end="2371:63">case <expr pos:start="2371:59" pos:end="2371:62"><literal type="number" pos:start="2371:59" pos:end="2371:62">0x2c</literal></expr>:</case>

                        <comment type="block" pos:start="2373:25" pos:end="2373:53">/* Bitfield insert/clear.  */</comment>

                        <expr_stmt pos:start="2375:25" pos:end="2375:34"><expr pos:start="2375:25" pos:end="2375:33"><call pos:start="2375:25" pos:end="2375:33"><name pos:start="2375:25" pos:end="2375:28">ARCH</name><argument_list pos:start="2375:29" pos:end="2375:33">(<argument pos:start="2375:30" pos:end="2375:32"><expr pos:start="2375:30" pos:end="2375:32"><literal type="number" pos:start="2375:30" pos:end="2375:32">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2377:25" pos:end="2377:51"><expr pos:start="2377:25" pos:end="2377:50"><name pos:start="2377:25" pos:end="2377:29">shift</name> <operator pos:start="2377:31" pos:end="2377:31">=</operator> <operator pos:start="2377:33" pos:end="2377:33">(</operator><name pos:start="2377:34" pos:end="2377:37">insn</name> <operator pos:start="2377:39" pos:end="2377:40">&gt;&gt;</operator> <literal type="number" pos:start="2377:42" pos:end="2377:42">7</literal><operator pos:start="2377:43" pos:end="2377:43">)</operator> <operator pos:start="2377:45" pos:end="2377:45">&amp;</operator> <literal type="number" pos:start="2377:47" pos:end="2377:50">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2379:25" pos:end="2379:48"><expr pos:start="2379:25" pos:end="2379:47"><name pos:start="2379:25" pos:end="2379:25">i</name> <operator pos:start="2379:27" pos:end="2379:27">=</operator> <operator pos:start="2379:29" pos:end="2379:29">(</operator><name pos:start="2379:30" pos:end="2379:33">insn</name> <operator pos:start="2379:35" pos:end="2379:36">&gt;&gt;</operator> <literal type="number" pos:start="2379:38" pos:end="2379:39">16</literal><operator pos:start="2379:40" pos:end="2379:40">)</operator> <operator pos:start="2379:42" pos:end="2379:42">&amp;</operator> <literal type="number" pos:start="2379:44" pos:end="2379:47">0x1f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="2381:25" pos:end="2387:25"><if pos:start="2381:25" pos:end="2387:25">if <condition pos:start="2381:28" pos:end="2381:38">(<expr pos:start="2381:29" pos:end="2381:37"><name pos:start="2381:29" pos:end="2381:29">i</name> <operator pos:start="2381:31" pos:end="2381:31">&lt;</operator> <name pos:start="2381:33" pos:end="2381:37">shift</name></expr>)</condition> <block pos:start="2381:40" pos:end="2387:25">{<block_content pos:start="2385:29" pos:end="2385:44">

                            <comment type="block" pos:start="2383:29" pos:end="2383:67">/* UNPREDICTABLE; we choose to UNDEF */</comment>

                            <goto pos:start="2385:29" pos:end="2385:44">goto <name pos:start="2385:34" pos:end="2385:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2389:25" pos:end="2389:42"><expr pos:start="2389:25" pos:end="2389:41"><name pos:start="2389:25" pos:end="2389:25">i</name> <operator pos:start="2389:27" pos:end="2389:27">=</operator> <name pos:start="2389:29" pos:end="2389:29">i</name> <operator pos:start="2389:31" pos:end="2389:31">+</operator> <literal type="number" pos:start="2389:33" pos:end="2389:35">1</literal> <operator pos:start="2389:35" pos:end="2389:35">-</operator> <name pos:start="2389:37" pos:end="2389:41">shift</name></expr>;</expr_stmt>

                        <if_stmt pos:start="2391:25" pos:end="2401:25"><if pos:start="2391:25" pos:end="2397:25">if <condition pos:start="2391:28" pos:end="2391:37">(<expr pos:start="2391:29" pos:end="2391:36"><name pos:start="2391:29" pos:end="2391:30">rm</name> <operator pos:start="2391:32" pos:end="2391:33">==</operator> <literal type="number" pos:start="2391:35" pos:end="2391:36">15</literal></expr>)</condition> <block pos:start="2391:39" pos:end="2397:25">{<block_content pos:start="2393:29" pos:end="2395:53">

                            <expr_stmt pos:start="2393:29" pos:end="2393:53"><expr pos:start="2393:29" pos:end="2393:52"><name pos:start="2393:29" pos:end="2393:31">tmp</name> <operator pos:start="2393:33" pos:end="2393:33">=</operator> <call pos:start="2393:35" pos:end="2393:52"><name pos:start="2393:35" pos:end="2393:50">tcg_temp_new_i32</name><argument_list pos:start="2393:51" pos:end="2393:52">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2395:29" pos:end="2395:53"><expr pos:start="2395:29" pos:end="2395:52"><call pos:start="2395:29" pos:end="2395:52"><name pos:start="2395:29" pos:end="2395:44">tcg_gen_movi_i32</name><argument_list pos:start="2395:45" pos:end="2395:52">(<argument pos:start="2395:46" pos:end="2395:48"><expr pos:start="2395:46" pos:end="2395:48"><name pos:start="2395:46" pos:end="2395:48">tmp</name></expr></argument>, <argument pos:start="2395:51" pos:end="2395:51"><expr pos:start="2395:51" pos:end="2395:51"><literal type="number" pos:start="2395:51" pos:end="2395:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="2397:27" pos:end="2401:25">else <block pos:start="2397:32" pos:end="2401:25">{<block_content pos:start="2399:29" pos:end="2399:50">

                            <expr_stmt pos:start="2399:29" pos:end="2399:50"><expr pos:start="2399:29" pos:end="2399:49"><name pos:start="2399:29" pos:end="2399:31">tmp</name> <operator pos:start="2399:33" pos:end="2399:33">=</operator> <call pos:start="2399:35" pos:end="2399:49"><name pos:start="2399:35" pos:end="2399:42">load_reg</name><argument_list pos:start="2399:43" pos:end="2399:49">(<argument pos:start="2399:44" pos:end="2399:44"><expr pos:start="2399:44" pos:end="2399:44"><name pos:start="2399:44" pos:end="2399:44">s</name></expr></argument>, <argument pos:start="2399:47" pos:end="2399:48"><expr pos:start="2399:47" pos:end="2399:48"><name pos:start="2399:47" pos:end="2399:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="2403:25" pos:end="2411:25"><if pos:start="2403:25" pos:end="2411:25">if <condition pos:start="2403:28" pos:end="2403:36">(<expr pos:start="2403:29" pos:end="2403:35"><name pos:start="2403:29" pos:end="2403:29">i</name> <operator pos:start="2403:31" pos:end="2403:32">!=</operator> <literal type="number" pos:start="2403:34" pos:end="2403:35">32</literal></expr>)</condition> <block pos:start="2403:38" pos:end="2411:25">{<block_content pos:start="2405:29" pos:end="2409:52">

                            <expr_stmt pos:start="2405:29" pos:end="2405:51"><expr pos:start="2405:29" pos:end="2405:50"><name pos:start="2405:29" pos:end="2405:32">tmp2</name> <operator pos:start="2405:34" pos:end="2405:34">=</operator> <call pos:start="2405:36" pos:end="2405:50"><name pos:start="2405:36" pos:end="2405:43">load_reg</name><argument_list pos:start="2405:44" pos:end="2405:50">(<argument pos:start="2405:45" pos:end="2405:45"><expr pos:start="2405:45" pos:end="2405:45"><name pos:start="2405:45" pos:end="2405:45">s</name></expr></argument>, <argument pos:start="2405:48" pos:end="2405:49"><expr pos:start="2405:48" pos:end="2405:49"><name pos:start="2405:48" pos:end="2405:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2407:29" pos:end="2407:74"><expr pos:start="2407:29" pos:end="2407:73"><call pos:start="2407:29" pos:end="2407:73"><name pos:start="2407:29" pos:end="2407:47">tcg_gen_deposit_i32</name><argument_list pos:start="2407:48" pos:end="2407:73">(<argument pos:start="2407:49" pos:end="2407:51"><expr pos:start="2407:49" pos:end="2407:51"><name pos:start="2407:49" pos:end="2407:51">tmp</name></expr></argument>, <argument pos:start="2407:54" pos:end="2407:57"><expr pos:start="2407:54" pos:end="2407:57"><name pos:start="2407:54" pos:end="2407:57">tmp2</name></expr></argument>, <argument pos:start="2407:60" pos:end="2407:62"><expr pos:start="2407:60" pos:end="2407:62"><name pos:start="2407:60" pos:end="2407:62">tmp</name></expr></argument>, <argument pos:start="2407:65" pos:end="2407:69"><expr pos:start="2407:65" pos:end="2407:69"><name pos:start="2407:65" pos:end="2407:69">shift</name></expr></argument>, <argument pos:start="2407:72" pos:end="2407:72"><expr pos:start="2407:72" pos:end="2407:72"><name pos:start="2407:72" pos:end="2407:72">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2409:29" pos:end="2409:52"><expr pos:start="2409:29" pos:end="2409:51"><call pos:start="2409:29" pos:end="2409:51"><name pos:start="2409:29" pos:end="2409:45">tcg_temp_free_i32</name><argument_list pos:start="2409:46" pos:end="2409:51">(<argument pos:start="2409:47" pos:end="2409:50"><expr pos:start="2409:47" pos:end="2409:50"><name pos:start="2409:47" pos:end="2409:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2413:25" pos:end="2413:46"><expr pos:start="2413:25" pos:end="2413:45"><call pos:start="2413:25" pos:end="2413:45"><name pos:start="2413:25" pos:end="2413:33">store_reg</name><argument_list pos:start="2413:34" pos:end="2413:45">(<argument pos:start="2413:35" pos:end="2413:35"><expr pos:start="2413:35" pos:end="2413:35"><name pos:start="2413:35" pos:end="2413:35">s</name></expr></argument>, <argument pos:start="2413:38" pos:end="2413:39"><expr pos:start="2413:38" pos:end="2413:39"><name pos:start="2413:38" pos:end="2413:39">rd</name></expr></argument>, <argument pos:start="2413:42" pos:end="2413:44"><expr pos:start="2413:42" pos:end="2413:44"><name pos:start="2413:42" pos:end="2413:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2415:25" pos:end="2415:30">break;</break>

                    <case pos:start="2417:21" pos:end="2417:30">case <expr pos:start="2417:26" pos:end="2417:29"><literal type="number" pos:start="2417:26" pos:end="2417:29">0x12</literal></expr>:</case> <case pos:start="2417:32" pos:end="2417:41">case <expr pos:start="2417:37" pos:end="2417:40"><literal type="number" pos:start="2417:37" pos:end="2417:40">0x16</literal></expr>:</case> <case pos:start="2417:43" pos:end="2417:52">case <expr pos:start="2417:48" pos:end="2417:51"><literal type="number" pos:start="2417:48" pos:end="2417:51">0x1a</literal></expr>:</case> <case pos:start="2417:54" pos:end="2417:63">case <expr pos:start="2417:59" pos:end="2417:62"><literal type="number" pos:start="2417:59" pos:end="2417:62">0x1e</literal></expr>:</case> <comment type="block" pos:start="2417:65" pos:end="2417:74">/* sbfx */</comment>

                    <case pos:start="2419:21" pos:end="2419:30">case <expr pos:start="2419:26" pos:end="2419:29"><literal type="number" pos:start="2419:26" pos:end="2419:29">0x32</literal></expr>:</case> <case pos:start="2419:32" pos:end="2419:41">case <expr pos:start="2419:37" pos:end="2419:40"><literal type="number" pos:start="2419:37" pos:end="2419:40">0x36</literal></expr>:</case> <case pos:start="2419:43" pos:end="2419:52">case <expr pos:start="2419:48" pos:end="2419:51"><literal type="number" pos:start="2419:48" pos:end="2419:51">0x3a</literal></expr>:</case> <case pos:start="2419:54" pos:end="2419:63">case <expr pos:start="2419:59" pos:end="2419:62"><literal type="number" pos:start="2419:59" pos:end="2419:62">0x3e</literal></expr>:</case> <comment type="block" pos:start="2419:65" pos:end="2419:74">/* ubfx */</comment>

                        <expr_stmt pos:start="2421:25" pos:end="2421:34"><expr pos:start="2421:25" pos:end="2421:33"><call pos:start="2421:25" pos:end="2421:33"><name pos:start="2421:25" pos:end="2421:28">ARCH</name><argument_list pos:start="2421:29" pos:end="2421:33">(<argument pos:start="2421:30" pos:end="2421:32"><expr pos:start="2421:30" pos:end="2421:32"><literal type="number" pos:start="2421:30" pos:end="2421:32">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2423:25" pos:end="2423:46"><expr pos:start="2423:25" pos:end="2423:45"><name pos:start="2423:25" pos:end="2423:27">tmp</name> <operator pos:start="2423:29" pos:end="2423:29">=</operator> <call pos:start="2423:31" pos:end="2423:45"><name pos:start="2423:31" pos:end="2423:38">load_reg</name><argument_list pos:start="2423:39" pos:end="2423:45">(<argument pos:start="2423:40" pos:end="2423:40"><expr pos:start="2423:40" pos:end="2423:40"><name pos:start="2423:40" pos:end="2423:40">s</name></expr></argument>, <argument pos:start="2423:43" pos:end="2423:44"><expr pos:start="2423:43" pos:end="2423:44"><name pos:start="2423:43" pos:end="2423:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2425:25" pos:end="2425:51"><expr pos:start="2425:25" pos:end="2425:50"><name pos:start="2425:25" pos:end="2425:29">shift</name> <operator pos:start="2425:31" pos:end="2425:31">=</operator> <operator pos:start="2425:33" pos:end="2425:33">(</operator><name pos:start="2425:34" pos:end="2425:37">insn</name> <operator pos:start="2425:39" pos:end="2425:40">&gt;&gt;</operator> <literal type="number" pos:start="2425:42" pos:end="2425:42">7</literal><operator pos:start="2425:43" pos:end="2425:43">)</operator> <operator pos:start="2425:45" pos:end="2425:45">&amp;</operator> <literal type="number" pos:start="2425:47" pos:end="2425:50">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2427:25" pos:end="2427:54"><expr pos:start="2427:25" pos:end="2427:53"><name pos:start="2427:25" pos:end="2427:25">i</name> <operator pos:start="2427:27" pos:end="2427:27">=</operator> <operator pos:start="2427:29" pos:end="2427:29">(</operator><operator pos:start="2427:30" pos:end="2427:30">(</operator><name pos:start="2427:31" pos:end="2427:34">insn</name> <operator pos:start="2427:36" pos:end="2427:37">&gt;&gt;</operator> <literal type="number" pos:start="2427:39" pos:end="2427:40">16</literal><operator pos:start="2427:41" pos:end="2427:41">)</operator> <operator pos:start="2427:43" pos:end="2427:43">&amp;</operator> <literal type="number" pos:start="2427:45" pos:end="2427:48">0x1f</literal><operator pos:start="2427:49" pos:end="2427:49">)</operator> <operator pos:start="2427:51" pos:end="2427:51">+</operator> <literal type="number" pos:start="2427:53" pos:end="2427:53">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="2429:25" pos:end="2431:44"><if pos:start="2429:25" pos:end="2431:44">if <condition pos:start="2429:28" pos:end="2429:43">(<expr pos:start="2429:29" pos:end="2429:42"><name pos:start="2429:29" pos:end="2429:33">shift</name> <operator pos:start="2429:35" pos:end="2429:35">+</operator> <name pos:start="2429:37" pos:end="2429:37">i</name> <operator pos:start="2429:39" pos:end="2429:39">&gt;</operator> <literal type="number" pos:start="2429:41" pos:end="2429:42">32</literal></expr>)</condition><block type="pseudo" pos:start="2431:29" pos:end="2431:44"><block_content pos:start="2431:29" pos:end="2431:44">

                            <goto pos:start="2431:29" pos:end="2431:44">goto <name pos:start="2431:34" pos:end="2431:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="2433:25" pos:end="2445:25"><if pos:start="2433:25" pos:end="2445:25">if <condition pos:start="2433:28" pos:end="2433:35">(<expr pos:start="2433:29" pos:end="2433:34"><name pos:start="2433:29" pos:end="2433:29">i</name> <operator pos:start="2433:31" pos:end="2433:31">&lt;</operator> <literal type="number" pos:start="2433:33" pos:end="2433:34">32</literal></expr>)</condition> <block pos:start="2433:37" pos:end="2445:25">{<block_content pos:start="2435:29" pos:end="2443:29">

                            <if_stmt pos:start="2435:29" pos:end="2443:29"><if pos:start="2435:29" pos:end="2439:29">if <condition pos:start="2435:32" pos:end="2435:43">(<expr pos:start="2435:33" pos:end="2435:42"><name pos:start="2435:33" pos:end="2435:35">op1</name> <operator pos:start="2435:37" pos:end="2435:37">&amp;</operator> <literal type="number" pos:start="2435:39" pos:end="2435:42">0x20</literal></expr>)</condition> <block pos:start="2435:45" pos:end="2439:29">{<block_content pos:start="2437:33" pos:end="2437:68">

                                <expr_stmt pos:start="2437:33" pos:end="2437:68"><expr pos:start="2437:33" pos:end="2437:67"><call pos:start="2437:33" pos:end="2437:67"><name pos:start="2437:33" pos:end="2437:40">gen_ubfx</name><argument_list pos:start="2437:41" pos:end="2437:67">(<argument pos:start="2437:42" pos:end="2437:44"><expr pos:start="2437:42" pos:end="2437:44"><name pos:start="2437:42" pos:end="2437:44">tmp</name></expr></argument>, <argument pos:start="2437:47" pos:end="2437:51"><expr pos:start="2437:47" pos:end="2437:51"><name pos:start="2437:47" pos:end="2437:51">shift</name></expr></argument>, <argument pos:start="2437:54" pos:end="2437:66"><expr pos:start="2437:54" pos:end="2437:66"><operator pos:start="2437:54" pos:end="2437:54">(</operator><literal type="number" pos:start="2437:55" pos:end="2437:56">1u</literal> <operator pos:start="2437:58" pos:end="2437:59">&lt;&lt;</operator> <name pos:start="2437:61" pos:end="2437:61">i</name><operator pos:start="2437:62" pos:end="2437:62">)</operator> <operator pos:start="2437:64" pos:end="2437:64">-</operator> <literal type="number" pos:start="2437:66" pos:end="2437:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2439:31" pos:end="2443:29">else <block pos:start="2439:36" pos:end="2443:29">{<block_content pos:start="2441:33" pos:end="2441:56">

                                <expr_stmt pos:start="2441:33" pos:end="2441:56"><expr pos:start="2441:33" pos:end="2441:55"><call pos:start="2441:33" pos:end="2441:55"><name pos:start="2441:33" pos:end="2441:40">gen_sbfx</name><argument_list pos:start="2441:41" pos:end="2441:55">(<argument pos:start="2441:42" pos:end="2441:44"><expr pos:start="2441:42" pos:end="2441:44"><name pos:start="2441:42" pos:end="2441:44">tmp</name></expr></argument>, <argument pos:start="2441:47" pos:end="2441:51"><expr pos:start="2441:47" pos:end="2441:51"><name pos:start="2441:47" pos:end="2441:51">shift</name></expr></argument>, <argument pos:start="2441:54" pos:end="2441:54"><expr pos:start="2441:54" pos:end="2441:54"><name pos:start="2441:54" pos:end="2441:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2447:25" pos:end="2447:46"><expr pos:start="2447:25" pos:end="2447:45"><call pos:start="2447:25" pos:end="2447:45"><name pos:start="2447:25" pos:end="2447:33">store_reg</name><argument_list pos:start="2447:34" pos:end="2447:45">(<argument pos:start="2447:35" pos:end="2447:35"><expr pos:start="2447:35" pos:end="2447:35"><name pos:start="2447:35" pos:end="2447:35">s</name></expr></argument>, <argument pos:start="2447:38" pos:end="2447:39"><expr pos:start="2447:38" pos:end="2447:39"><name pos:start="2447:38" pos:end="2447:39">rd</name></expr></argument>, <argument pos:start="2447:42" pos:end="2447:44"><expr pos:start="2447:42" pos:end="2447:44"><name pos:start="2447:42" pos:end="2447:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2449:25" pos:end="2449:30">break;</break>

                    <default pos:start="2451:21" pos:end="2451:28">default:</default>

                        <goto pos:start="2453:25" pos:end="2453:40">goto <name pos:start="2453:30" pos:end="2453:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                    <break pos:start="2457:21" pos:end="2457:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="2461:17" pos:end="2461:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <label pos:start="2465:9" pos:end="2465:16"><name pos:start="2465:9" pos:end="2465:15">do_ldst</name>:</label>

            <comment type="block" pos:start="2467:13" pos:end="2473:15">/* Check for undefined extension instructions

             * per the ARM Bible IE:

             * xxxx 0111 1111 xxxx  xxxx xxxx 1111 xxxx

             */</comment>

            <expr_stmt pos:start="2475:13" pos:end="2475:42"><expr pos:start="2475:13" pos:end="2475:41"><name pos:start="2475:13" pos:end="2475:14">sh</name> <operator pos:start="2475:16" pos:end="2475:16">=</operator> <operator pos:start="2475:18" pos:end="2475:18">(</operator><literal type="number" pos:start="2475:19" pos:end="2475:21">0xf</literal> <operator pos:start="2475:23" pos:end="2475:24">&lt;&lt;</operator> <literal type="number" pos:start="2475:26" pos:end="2475:27">20</literal><operator pos:start="2475:28" pos:end="2475:28">)</operator> <operator pos:start="2475:30" pos:end="2475:30">|</operator> <operator pos:start="2475:32" pos:end="2475:32">(</operator><literal type="number" pos:start="2475:33" pos:end="2475:35">0xf</literal> <operator pos:start="2475:37" pos:end="2475:38">&lt;&lt;</operator> <literal type="number" pos:start="2475:40" pos:end="2475:40">4</literal><operator pos:start="2475:41" pos:end="2475:41">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="2477:13" pos:end="2483:13"><if pos:start="2477:13" pos:end="2483:13">if <condition pos:start="2477:16" pos:end="2477:50">(<expr pos:start="2477:17" pos:end="2477:49"><name pos:start="2477:17" pos:end="2477:19">op1</name> <operator pos:start="2477:21" pos:end="2477:22">==</operator> <literal type="number" pos:start="2477:24" pos:end="2477:26">0x7</literal> <operator pos:start="2477:28" pos:end="2477:29">&amp;&amp;</operator> <operator pos:start="2477:31" pos:end="2477:31">(</operator><operator pos:start="2477:32" pos:end="2477:32">(</operator><name pos:start="2477:33" pos:end="2477:36">insn</name> <operator pos:start="2477:38" pos:end="2477:38">&amp;</operator> <name pos:start="2477:40" pos:end="2477:41">sh</name><operator pos:start="2477:42" pos:end="2477:42">)</operator> <operator pos:start="2477:44" pos:end="2477:45">==</operator> <name pos:start="2477:47" pos:end="2477:48">sh</name><operator pos:start="2477:49" pos:end="2477:49">)</operator></expr>)</condition>

            <block pos:start="2479:13" pos:end="2483:13">{<block_content pos:start="2481:17" pos:end="2481:32">

                <goto pos:start="2481:17" pos:end="2481:32">goto <name pos:start="2481:22" pos:end="2481:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="2485:13" pos:end="2485:38">/* load/store byte/word */</comment>

            <expr_stmt pos:start="2487:13" pos:end="2487:36"><expr pos:start="2487:13" pos:end="2487:35"><name pos:start="2487:13" pos:end="2487:14">rn</name> <operator pos:start="2487:16" pos:end="2487:16">=</operator> <operator pos:start="2487:18" pos:end="2487:18">(</operator><name pos:start="2487:19" pos:end="2487:22">insn</name> <operator pos:start="2487:24" pos:end="2487:25">&gt;&gt;</operator> <literal type="number" pos:start="2487:27" pos:end="2487:28">16</literal><operator pos:start="2487:29" pos:end="2487:29">)</operator> <operator pos:start="2487:31" pos:end="2487:31">&amp;</operator> <literal type="number" pos:start="2487:33" pos:end="2487:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="2489:13" pos:end="2489:36"><expr pos:start="2489:13" pos:end="2489:35"><name pos:start="2489:13" pos:end="2489:14">rd</name> <operator pos:start="2489:16" pos:end="2489:16">=</operator> <operator pos:start="2489:18" pos:end="2489:18">(</operator><name pos:start="2489:19" pos:end="2489:22">insn</name> <operator pos:start="2489:24" pos:end="2489:25">&gt;&gt;</operator> <literal type="number" pos:start="2489:27" pos:end="2489:28">12</literal><operator pos:start="2489:29" pos:end="2489:29">)</operator> <operator pos:start="2489:31" pos:end="2489:31">&amp;</operator> <literal type="number" pos:start="2489:33" pos:end="2489:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="2491:13" pos:end="2491:35"><expr pos:start="2491:13" pos:end="2491:34"><name pos:start="2491:13" pos:end="2491:16">tmp2</name> <operator pos:start="2491:18" pos:end="2491:18">=</operator> <call pos:start="2491:20" pos:end="2491:34"><name pos:start="2491:20" pos:end="2491:27">load_reg</name><argument_list pos:start="2491:28" pos:end="2491:34">(<argument pos:start="2491:29" pos:end="2491:29"><expr pos:start="2491:29" pos:end="2491:29"><name pos:start="2491:29" pos:end="2491:29">s</name></expr></argument>, <argument pos:start="2491:32" pos:end="2491:33"><expr pos:start="2491:32" pos:end="2491:33"><name pos:start="2491:32" pos:end="2491:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2493:13" pos:end="2503:13"><if pos:start="2493:13" pos:end="2499:13">if <condition pos:start="2493:16" pos:end="2493:50">(<expr pos:start="2493:17" pos:end="2493:49"><operator pos:start="2493:17" pos:end="2493:17">(</operator><name pos:start="2493:18" pos:end="2493:21">insn</name> <operator pos:start="2493:23" pos:end="2493:23">&amp;</operator> <literal type="number" pos:start="2493:25" pos:end="2493:34">0x01200000</literal><operator pos:start="2493:35" pos:end="2493:35">)</operator> <operator pos:start="2493:37" pos:end="2493:38">==</operator> <literal type="number" pos:start="2493:40" pos:end="2493:49">0x00200000</literal></expr>)</condition> <block pos:start="2493:52" pos:end="2499:13">{<block_content pos:start="2497:17" pos:end="2497:46">

                <comment type="block" pos:start="2495:17" pos:end="2495:31">/* ldrt/strt */</comment>

                <expr_stmt pos:start="2497:17" pos:end="2497:46"><expr pos:start="2497:17" pos:end="2497:45"><name pos:start="2497:17" pos:end="2497:17">i</name> <operator pos:start="2497:19" pos:end="2497:19">=</operator> <call pos:start="2497:21" pos:end="2497:45"><name pos:start="2497:21" pos:end="2497:42">get_a32_user_mem_index</name><argument_list pos:start="2497:43" pos:end="2497:45">(<argument pos:start="2497:44" pos:end="2497:44"><expr pos:start="2497:44" pos:end="2497:44"><name pos:start="2497:44" pos:end="2497:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2499:15" pos:end="2503:13">else <block pos:start="2499:20" pos:end="2503:13">{<block_content pos:start="2501:17" pos:end="2501:37">

                <expr_stmt pos:start="2501:17" pos:end="2501:37"><expr pos:start="2501:17" pos:end="2501:36"><name pos:start="2501:17" pos:end="2501:17">i</name> <operator pos:start="2501:19" pos:end="2501:19">=</operator> <call pos:start="2501:21" pos:end="2501:36"><name pos:start="2501:21" pos:end="2501:33">get_mem_index</name><argument_list pos:start="2501:34" pos:end="2501:36">(<argument pos:start="2501:35" pos:end="2501:35"><expr pos:start="2501:35" pos:end="2501:35"><name pos:start="2501:35" pos:end="2501:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="2505:13" pos:end="2507:51"><if pos:start="2505:13" pos:end="2507:51">if <condition pos:start="2505:16" pos:end="2505:33">(<expr pos:start="2505:17" pos:end="2505:32"><name pos:start="2505:17" pos:end="2505:20">insn</name> <operator pos:start="2505:22" pos:end="2505:22">&amp;</operator> <operator pos:start="2505:24" pos:end="2505:24">(</operator><literal type="number" pos:start="2505:25" pos:end="2505:25">1</literal> <operator pos:start="2505:27" pos:end="2505:28">&lt;&lt;</operator> <literal type="number" pos:start="2505:30" pos:end="2505:31">24</literal><operator pos:start="2505:32" pos:end="2505:32">)</operator></expr>)</condition><block type="pseudo" pos:start="2507:17" pos:end="2507:51"><block_content pos:start="2507:17" pos:end="2507:51">

                <expr_stmt pos:start="2507:17" pos:end="2507:51"><expr pos:start="2507:17" pos:end="2507:50"><call pos:start="2507:17" pos:end="2507:50"><name pos:start="2507:17" pos:end="2507:35">gen_add_data_offset</name><argument_list pos:start="2507:36" pos:end="2507:50">(<argument pos:start="2507:37" pos:end="2507:37"><expr pos:start="2507:37" pos:end="2507:37"><name pos:start="2507:37" pos:end="2507:37">s</name></expr></argument>, <argument pos:start="2507:40" pos:end="2507:43"><expr pos:start="2507:40" pos:end="2507:43"><name pos:start="2507:40" pos:end="2507:43">insn</name></expr></argument>, <argument pos:start="2507:46" pos:end="2507:49"><expr pos:start="2507:46" pos:end="2507:49"><name pos:start="2507:46" pos:end="2507:49">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="2509:13" pos:end="2543:13"><if pos:start="2509:13" pos:end="2525:13">if <condition pos:start="2509:16" pos:end="2509:33">(<expr pos:start="2509:17" pos:end="2509:32"><name pos:start="2509:17" pos:end="2509:20">insn</name> <operator pos:start="2509:22" pos:end="2509:22">&amp;</operator> <operator pos:start="2509:24" pos:end="2509:24">(</operator><literal type="number" pos:start="2509:25" pos:end="2509:25">1</literal> <operator pos:start="2509:27" pos:end="2509:28">&lt;&lt;</operator> <literal type="number" pos:start="2509:30" pos:end="2509:31">20</literal><operator pos:start="2509:32" pos:end="2509:32">)</operator></expr>)</condition> <block pos:start="2509:35" pos:end="2525:13">{<block_content pos:start="2513:17" pos:end="2523:17">

                <comment type="block" pos:start="2511:17" pos:end="2511:26">/* load */</comment>

                <expr_stmt pos:start="2513:17" pos:end="2513:41"><expr pos:start="2513:17" pos:end="2513:40"><name pos:start="2513:17" pos:end="2513:19">tmp</name> <operator pos:start="2513:21" pos:end="2513:21">=</operator> <call pos:start="2513:23" pos:end="2513:40"><name pos:start="2513:23" pos:end="2513:38">tcg_temp_new_i32</name><argument_list pos:start="2513:39" pos:end="2513:40">()</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2515:17" pos:end="2523:17"><if pos:start="2515:17" pos:end="2519:17">if <condition pos:start="2515:20" pos:end="2515:37">(<expr pos:start="2515:21" pos:end="2515:36"><name pos:start="2515:21" pos:end="2515:24">insn</name> <operator pos:start="2515:26" pos:end="2515:26">&amp;</operator> <operator pos:start="2515:28" pos:end="2515:28">(</operator><literal type="number" pos:start="2515:29" pos:end="2515:29">1</literal> <operator pos:start="2515:31" pos:end="2515:32">&lt;&lt;</operator> <literal type="number" pos:start="2515:34" pos:end="2515:35">22</literal><operator pos:start="2515:36" pos:end="2515:36">)</operator></expr>)</condition> <block pos:start="2515:39" pos:end="2519:17">{<block_content pos:start="2517:21" pos:end="2517:48">

                    <expr_stmt pos:start="2517:21" pos:end="2517:48"><expr pos:start="2517:21" pos:end="2517:47"><call pos:start="2517:21" pos:end="2517:47"><name pos:start="2517:21" pos:end="2517:33">gen_aa32_ld8u</name><argument_list pos:start="2517:34" pos:end="2517:47">(<argument pos:start="2517:35" pos:end="2517:37"><expr pos:start="2517:35" pos:end="2517:37"><name pos:start="2517:35" pos:end="2517:37">tmp</name></expr></argument>, <argument pos:start="2517:40" pos:end="2517:43"><expr pos:start="2517:40" pos:end="2517:43"><name pos:start="2517:40" pos:end="2517:43">tmp2</name></expr></argument>, <argument pos:start="2517:46" pos:end="2517:46"><expr pos:start="2517:46" pos:end="2517:46"><name pos:start="2517:46" pos:end="2517:46">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2519:19" pos:end="2523:17">else <block pos:start="2519:24" pos:end="2523:17">{<block_content pos:start="2521:21" pos:end="2521:49">

                    <expr_stmt pos:start="2521:21" pos:end="2521:49"><expr pos:start="2521:21" pos:end="2521:48"><call pos:start="2521:21" pos:end="2521:48"><name pos:start="2521:21" pos:end="2521:34">gen_aa32_ld32u</name><argument_list pos:start="2521:35" pos:end="2521:48">(<argument pos:start="2521:36" pos:end="2521:38"><expr pos:start="2521:36" pos:end="2521:38"><name pos:start="2521:36" pos:end="2521:38">tmp</name></expr></argument>, <argument pos:start="2521:41" pos:end="2521:44"><expr pos:start="2521:41" pos:end="2521:44"><name pos:start="2521:41" pos:end="2521:44">tmp2</name></expr></argument>, <argument pos:start="2521:47" pos:end="2521:47"><expr pos:start="2521:47" pos:end="2521:47"><name pos:start="2521:47" pos:end="2521:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="2525:15" pos:end="2543:13">else <block pos:start="2525:20" pos:end="2543:13">{<block_content pos:start="2529:17" pos:end="2541:39">

                <comment type="block" pos:start="2527:17" pos:end="2527:27">/* store */</comment>

                <expr_stmt pos:start="2529:17" pos:end="2529:38"><expr pos:start="2529:17" pos:end="2529:37"><name pos:start="2529:17" pos:end="2529:19">tmp</name> <operator pos:start="2529:21" pos:end="2529:21">=</operator> <call pos:start="2529:23" pos:end="2529:37"><name pos:start="2529:23" pos:end="2529:30">load_reg</name><argument_list pos:start="2529:31" pos:end="2529:37">(<argument pos:start="2529:32" pos:end="2529:32"><expr pos:start="2529:32" pos:end="2529:32"><name pos:start="2529:32" pos:end="2529:32">s</name></expr></argument>, <argument pos:start="2529:35" pos:end="2529:36"><expr pos:start="2529:35" pos:end="2529:36"><name pos:start="2529:35" pos:end="2529:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2531:17" pos:end="2539:17"><if pos:start="2531:17" pos:end="2535:17">if <condition pos:start="2531:20" pos:end="2531:37">(<expr pos:start="2531:21" pos:end="2531:36"><name pos:start="2531:21" pos:end="2531:24">insn</name> <operator pos:start="2531:26" pos:end="2531:26">&amp;</operator> <operator pos:start="2531:28" pos:end="2531:28">(</operator><literal type="number" pos:start="2531:29" pos:end="2531:29">1</literal> <operator pos:start="2531:31" pos:end="2531:32">&lt;&lt;</operator> <literal type="number" pos:start="2531:34" pos:end="2531:35">22</literal><operator pos:start="2531:36" pos:end="2531:36">)</operator></expr>)</condition> <block pos:start="2531:39" pos:end="2535:17">{<block_content pos:start="2533:21" pos:end="2533:47">

                    <expr_stmt pos:start="2533:21" pos:end="2533:47"><expr pos:start="2533:21" pos:end="2533:46"><call pos:start="2533:21" pos:end="2533:46"><name pos:start="2533:21" pos:end="2533:32">gen_aa32_st8</name><argument_list pos:start="2533:33" pos:end="2533:46">(<argument pos:start="2533:34" pos:end="2533:36"><expr pos:start="2533:34" pos:end="2533:36"><name pos:start="2533:34" pos:end="2533:36">tmp</name></expr></argument>, <argument pos:start="2533:39" pos:end="2533:42"><expr pos:start="2533:39" pos:end="2533:42"><name pos:start="2533:39" pos:end="2533:42">tmp2</name></expr></argument>, <argument pos:start="2533:45" pos:end="2533:45"><expr pos:start="2533:45" pos:end="2533:45"><name pos:start="2533:45" pos:end="2533:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2535:19" pos:end="2539:17">else <block pos:start="2535:24" pos:end="2539:17">{<block_content pos:start="2537:21" pos:end="2537:48">

                    <expr_stmt pos:start="2537:21" pos:end="2537:48"><expr pos:start="2537:21" pos:end="2537:47"><call pos:start="2537:21" pos:end="2537:47"><name pos:start="2537:21" pos:end="2537:33">gen_aa32_st32</name><argument_list pos:start="2537:34" pos:end="2537:47">(<argument pos:start="2537:35" pos:end="2537:37"><expr pos:start="2537:35" pos:end="2537:37"><name pos:start="2537:35" pos:end="2537:37">tmp</name></expr></argument>, <argument pos:start="2537:40" pos:end="2537:43"><expr pos:start="2537:40" pos:end="2537:43"><name pos:start="2537:40" pos:end="2537:43">tmp2</name></expr></argument>, <argument pos:start="2537:46" pos:end="2537:46"><expr pos:start="2537:46" pos:end="2537:46"><name pos:start="2537:46" pos:end="2537:46">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="2541:17" pos:end="2541:39"><expr pos:start="2541:17" pos:end="2541:38"><call pos:start="2541:17" pos:end="2541:38"><name pos:start="2541:17" pos:end="2541:33">tcg_temp_free_i32</name><argument_list pos:start="2541:34" pos:end="2541:38">(<argument pos:start="2541:35" pos:end="2541:37"><expr pos:start="2541:35" pos:end="2541:37"><name pos:start="2541:35" pos:end="2541:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="2545:13" pos:end="2559:13"><if pos:start="2545:13" pos:end="2551:13">if <condition pos:start="2545:16" pos:end="2545:36">(<expr pos:start="2545:17" pos:end="2545:35"><operator pos:start="2545:17" pos:end="2545:17">!</operator><operator pos:start="2545:18" pos:end="2545:18">(</operator><name pos:start="2545:19" pos:end="2545:22">insn</name> <operator pos:start="2545:24" pos:end="2545:24">&amp;</operator> <operator pos:start="2545:26" pos:end="2545:26">(</operator><literal type="number" pos:start="2545:27" pos:end="2545:27">1</literal> <operator pos:start="2545:29" pos:end="2545:30">&lt;&lt;</operator> <literal type="number" pos:start="2545:32" pos:end="2545:33">24</literal><operator pos:start="2545:34" pos:end="2545:34">)</operator><operator pos:start="2545:35" pos:end="2545:35">)</operator></expr>)</condition> <block pos:start="2545:38" pos:end="2551:13">{<block_content pos:start="2547:17" pos:end="2549:39">

                <expr_stmt pos:start="2547:17" pos:end="2547:51"><expr pos:start="2547:17" pos:end="2547:50"><call pos:start="2547:17" pos:end="2547:50"><name pos:start="2547:17" pos:end="2547:35">gen_add_data_offset</name><argument_list pos:start="2547:36" pos:end="2547:50">(<argument pos:start="2547:37" pos:end="2547:37"><expr pos:start="2547:37" pos:end="2547:37"><name pos:start="2547:37" pos:end="2547:37">s</name></expr></argument>, <argument pos:start="2547:40" pos:end="2547:43"><expr pos:start="2547:40" pos:end="2547:43"><name pos:start="2547:40" pos:end="2547:43">insn</name></expr></argument>, <argument pos:start="2547:46" pos:end="2547:49"><expr pos:start="2547:46" pos:end="2547:49"><name pos:start="2547:46" pos:end="2547:49">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2549:17" pos:end="2549:39"><expr pos:start="2549:17" pos:end="2549:38"><call pos:start="2549:17" pos:end="2549:38"><name pos:start="2549:17" pos:end="2549:25">store_reg</name><argument_list pos:start="2549:26" pos:end="2549:38">(<argument pos:start="2549:27" pos:end="2549:27"><expr pos:start="2549:27" pos:end="2549:27"><name pos:start="2549:27" pos:end="2549:27">s</name></expr></argument>, <argument pos:start="2549:30" pos:end="2549:31"><expr pos:start="2549:30" pos:end="2549:31"><name pos:start="2549:30" pos:end="2549:31">rn</name></expr></argument>, <argument pos:start="2549:34" pos:end="2549:37"><expr pos:start="2549:34" pos:end="2549:37"><name pos:start="2549:34" pos:end="2549:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="2551:15" pos:end="2555:13">else if <condition pos:start="2551:23" pos:end="2551:40">(<expr pos:start="2551:24" pos:end="2551:39"><name pos:start="2551:24" pos:end="2551:27">insn</name> <operator pos:start="2551:29" pos:end="2551:29">&amp;</operator> <operator pos:start="2551:31" pos:end="2551:31">(</operator><literal type="number" pos:start="2551:32" pos:end="2551:32">1</literal> <operator pos:start="2551:34" pos:end="2551:35">&lt;&lt;</operator> <literal type="number" pos:start="2551:37" pos:end="2551:38">21</literal><operator pos:start="2551:39" pos:end="2551:39">)</operator></expr>)</condition> <block pos:start="2551:42" pos:end="2555:13">{<block_content pos:start="2553:17" pos:end="2553:39">

                <expr_stmt pos:start="2553:17" pos:end="2553:39"><expr pos:start="2553:17" pos:end="2553:38"><call pos:start="2553:17" pos:end="2553:38"><name pos:start="2553:17" pos:end="2553:25">store_reg</name><argument_list pos:start="2553:26" pos:end="2553:38">(<argument pos:start="2553:27" pos:end="2553:27"><expr pos:start="2553:27" pos:end="2553:27"><name pos:start="2553:27" pos:end="2553:27">s</name></expr></argument>, <argument pos:start="2553:30" pos:end="2553:31"><expr pos:start="2553:30" pos:end="2553:31"><name pos:start="2553:30" pos:end="2553:31">rn</name></expr></argument>, <argument pos:start="2553:34" pos:end="2553:37"><expr pos:start="2553:34" pos:end="2553:37"><name pos:start="2553:34" pos:end="2553:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2555:15" pos:end="2559:13">else <block pos:start="2555:20" pos:end="2559:13">{<block_content pos:start="2557:17" pos:end="2557:40">

                <expr_stmt pos:start="2557:17" pos:end="2557:40"><expr pos:start="2557:17" pos:end="2557:39"><call pos:start="2557:17" pos:end="2557:39"><name pos:start="2557:17" pos:end="2557:33">tcg_temp_free_i32</name><argument_list pos:start="2557:34" pos:end="2557:39">(<argument pos:start="2557:35" pos:end="2557:38"><expr pos:start="2557:35" pos:end="2557:38"><name pos:start="2557:35" pos:end="2557:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="2561:13" pos:end="2567:13"><if pos:start="2561:13" pos:end="2567:13">if <condition pos:start="2561:16" pos:end="2561:33">(<expr pos:start="2561:17" pos:end="2561:32"><name pos:start="2561:17" pos:end="2561:20">insn</name> <operator pos:start="2561:22" pos:end="2561:22">&amp;</operator> <operator pos:start="2561:24" pos:end="2561:24">(</operator><literal type="number" pos:start="2561:25" pos:end="2561:25">1</literal> <operator pos:start="2561:27" pos:end="2561:28">&lt;&lt;</operator> <literal type="number" pos:start="2561:30" pos:end="2561:31">20</literal><operator pos:start="2561:32" pos:end="2561:32">)</operator></expr>)</condition> <block pos:start="2561:35" pos:end="2567:13">{<block_content pos:start="2565:17" pos:end="2565:48">

                <comment type="block" pos:start="2563:17" pos:end="2563:41">/* Complete the load.  */</comment>

                <expr_stmt pos:start="2565:17" pos:end="2565:48"><expr pos:start="2565:17" pos:end="2565:47"><call pos:start="2565:17" pos:end="2565:47"><name pos:start="2565:17" pos:end="2565:35">store_reg_from_load</name><argument_list pos:start="2565:36" pos:end="2565:47">(<argument pos:start="2565:37" pos:end="2565:37"><expr pos:start="2565:37" pos:end="2565:37"><name pos:start="2565:37" pos:end="2565:37">s</name></expr></argument>, <argument pos:start="2565:40" pos:end="2565:41"><expr pos:start="2565:40" pos:end="2565:41"><name pos:start="2565:40" pos:end="2565:41">rd</name></expr></argument>, <argument pos:start="2565:44" pos:end="2565:46"><expr pos:start="2565:44" pos:end="2565:46"><name pos:start="2565:44" pos:end="2565:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2569:13" pos:end="2569:18">break;</break>

        <case pos:start="2571:9" pos:end="2571:18">case <expr pos:start="2571:14" pos:end="2571:17"><literal type="number" pos:start="2571:14" pos:end="2571:17">0x08</literal></expr>:</case>

        <case pos:start="2573:9" pos:end="2573:18">case <expr pos:start="2573:14" pos:end="2573:17"><literal type="number" pos:start="2573:14" pos:end="2573:17">0x09</literal></expr>:</case>

            <block pos:start="2575:13" pos:end="2821:13">{<block_content pos:start="2577:17" pos:end="2819:17">

                <decl_stmt pos:start="2577:17" pos:end="2577:38"><decl pos:start="2577:17" pos:end="2577:21"><type pos:start="2577:17" pos:end="2577:19"><name pos:start="2577:17" pos:end="2577:19">int</name></type> <name pos:start="2577:21" pos:end="2577:21">j</name></decl>, <decl pos:start="2577:24" pos:end="2577:24"><type ref="prev" pos:start="2577:17" pos:end="2577:19"/><name pos:start="2577:24" pos:end="2577:24">n</name></decl>, <decl pos:start="2577:27" pos:end="2577:37"><type ref="prev" pos:start="2577:17" pos:end="2577:19"/><name pos:start="2577:27" pos:end="2577:37">loaded_base</name></decl>;</decl_stmt>

                <decl_stmt pos:start="2579:17" pos:end="2579:40"><decl pos:start="2579:17" pos:end="2579:39"><type pos:start="2579:17" pos:end="2579:20"><name pos:start="2579:17" pos:end="2579:20">bool</name></type> <name pos:start="2579:22" pos:end="2579:31">exc_return</name> <init pos:start="2579:33" pos:end="2579:39">= <expr pos:start="2579:35" pos:end="2579:39"><name pos:start="2579:35" pos:end="2579:39">false</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="2581:17" pos:end="2581:54"><decl pos:start="2581:17" pos:end="2581:53"><type pos:start="2581:17" pos:end="2581:20"><name pos:start="2581:17" pos:end="2581:20">bool</name></type> <name pos:start="2581:22" pos:end="2581:28">is_load</name> <init pos:start="2581:30" pos:end="2581:53">= <expr pos:start="2581:32" pos:end="2581:53"><call pos:start="2581:32" pos:end="2581:53"><name pos:start="2581:32" pos:end="2581:40">extract32</name><argument_list pos:start="2581:41" pos:end="2581:53">(<argument pos:start="2581:42" pos:end="2581:45"><expr pos:start="2581:42" pos:end="2581:45"><name pos:start="2581:42" pos:end="2581:45">insn</name></expr></argument>, <argument pos:start="2581:48" pos:end="2581:49"><expr pos:start="2581:48" pos:end="2581:49"><literal type="number" pos:start="2581:48" pos:end="2581:49">20</literal></expr></argument>, <argument pos:start="2581:52" pos:end="2581:52"><expr pos:start="2581:52" pos:end="2581:52"><literal type="number" pos:start="2581:52" pos:end="2581:52">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="2583:17" pos:end="2583:34"><decl pos:start="2583:17" pos:end="2583:33"><type pos:start="2583:17" pos:end="2583:20"><name pos:start="2583:17" pos:end="2583:20">bool</name></type> <name pos:start="2583:22" pos:end="2583:25">user</name> <init pos:start="2583:27" pos:end="2583:33">= <expr pos:start="2583:29" pos:end="2583:33"><name pos:start="2583:29" pos:end="2583:33">false</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="2585:17" pos:end="2585:36"><decl pos:start="2585:17" pos:end="2585:35"><type pos:start="2585:17" pos:end="2585:24"><name pos:start="2585:17" pos:end="2585:24">TCGv_i32</name></type> <name pos:start="2585:26" pos:end="2585:35">loaded_var</name></decl>;</decl_stmt>

                <comment type="block" pos:start="2587:17" pos:end="2587:47">/* load/store multiple words */</comment>

                <comment type="block" pos:start="2589:17" pos:end="2589:59">/* XXX: store correct base if write back */</comment>

                <if_stmt pos:start="2591:17" pos:end="2611:17"><if pos:start="2591:17" pos:end="2611:17">if <condition pos:start="2591:20" pos:end="2591:37">(<expr pos:start="2591:21" pos:end="2591:36"><name pos:start="2591:21" pos:end="2591:24">insn</name> <operator pos:start="2591:26" pos:end="2591:26">&amp;</operator> <operator pos:start="2591:28" pos:end="2591:28">(</operator><literal type="number" pos:start="2591:29" pos:end="2591:29">1</literal> <operator pos:start="2591:31" pos:end="2591:32">&lt;&lt;</operator> <literal type="number" pos:start="2591:34" pos:end="2591:35">22</literal><operator pos:start="2591:36" pos:end="2591:36">)</operator></expr>)</condition> <block pos:start="2591:39" pos:end="2611:17">{<block_content pos:start="2595:21" pos:end="2609:21">

                    <comment type="block" pos:start="2593:21" pos:end="2593:75">/* LDM (user), LDM (exception return) and STM (user) */</comment>

                    <if_stmt pos:start="2595:21" pos:end="2597:40"><if pos:start="2595:21" pos:end="2597:40">if <condition pos:start="2595:24" pos:end="2595:35">(<expr pos:start="2595:25" pos:end="2595:34"><call pos:start="2595:25" pos:end="2595:34"><name pos:start="2595:25" pos:end="2595:31">IS_USER</name><argument_list pos:start="2595:32" pos:end="2595:34">(<argument pos:start="2595:33" pos:end="2595:33"><expr pos:start="2595:33" pos:end="2595:33"><name pos:start="2595:33" pos:end="2595:33">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2597:25" pos:end="2597:40"><block_content pos:start="2597:25" pos:end="2597:40">

                        <goto pos:start="2597:25" pos:end="2597:40">goto <name pos:start="2597:30" pos:end="2597:39">illegal_op</name>;</goto></block_content></block></if></if_stmt> <comment type="block" pos:start="2597:42" pos:end="2597:77">/* only usable in supervisor mode */</comment>



                    <if_stmt pos:start="2601:21" pos:end="2609:21"><if pos:start="2601:21" pos:end="2605:21">if <condition pos:start="2601:24" pos:end="2601:58">(<expr pos:start="2601:25" pos:end="2601:57"><name pos:start="2601:25" pos:end="2601:31">is_load</name> <operator pos:start="2601:33" pos:end="2601:34">&amp;&amp;</operator> <call pos:start="2601:36" pos:end="2601:57"><name pos:start="2601:36" pos:end="2601:44">extract32</name><argument_list pos:start="2601:45" pos:end="2601:57">(<argument pos:start="2601:46" pos:end="2601:49"><expr pos:start="2601:46" pos:end="2601:49"><name pos:start="2601:46" pos:end="2601:49">insn</name></expr></argument>, <argument pos:start="2601:52" pos:end="2601:53"><expr pos:start="2601:52" pos:end="2601:53"><literal type="number" pos:start="2601:52" pos:end="2601:53">15</literal></expr></argument>, <argument pos:start="2601:56" pos:end="2601:56"><expr pos:start="2601:56" pos:end="2601:56"><literal type="number" pos:start="2601:56" pos:end="2601:56">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2601:60" pos:end="2605:21">{<block_content pos:start="2603:25" pos:end="2603:42">

                        <expr_stmt pos:start="2603:25" pos:end="2603:42"><expr pos:start="2603:25" pos:end="2603:41"><name pos:start="2603:25" pos:end="2603:34">exc_return</name> <operator pos:start="2603:36" pos:end="2603:36">=</operator> <name pos:start="2603:38" pos:end="2603:41">true</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2605:23" pos:end="2609:21">else <block pos:start="2605:28" pos:end="2609:21">{<block_content pos:start="2607:25" pos:end="2607:36">

                        <expr_stmt pos:start="2607:25" pos:end="2607:36"><expr pos:start="2607:25" pos:end="2607:35"><name pos:start="2607:25" pos:end="2607:28">user</name> <operator pos:start="2607:30" pos:end="2607:30">=</operator> <name pos:start="2607:32" pos:end="2607:35">true</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="2613:17" pos:end="2613:40"><expr pos:start="2613:17" pos:end="2613:39"><name pos:start="2613:17" pos:end="2613:18">rn</name> <operator pos:start="2613:20" pos:end="2613:20">=</operator> <operator pos:start="2613:22" pos:end="2613:22">(</operator><name pos:start="2613:23" pos:end="2613:26">insn</name> <operator pos:start="2613:28" pos:end="2613:29">&gt;&gt;</operator> <literal type="number" pos:start="2613:31" pos:end="2613:32">16</literal><operator pos:start="2613:33" pos:end="2613:33">)</operator> <operator pos:start="2613:35" pos:end="2613:35">&amp;</operator> <literal type="number" pos:start="2613:37" pos:end="2613:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2615:17" pos:end="2615:39"><expr pos:start="2615:17" pos:end="2615:38"><name pos:start="2615:17" pos:end="2615:20">addr</name> <operator pos:start="2615:22" pos:end="2615:22">=</operator> <call pos:start="2615:24" pos:end="2615:38"><name pos:start="2615:24" pos:end="2615:31">load_reg</name><argument_list pos:start="2615:32" pos:end="2615:38">(<argument pos:start="2615:33" pos:end="2615:33"><expr pos:start="2615:33" pos:end="2615:33"><name pos:start="2615:33" pos:end="2615:33">s</name></expr></argument>, <argument pos:start="2615:36" pos:end="2615:37"><expr pos:start="2615:36" pos:end="2615:37"><name pos:start="2615:36" pos:end="2615:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="2619:17" pos:end="2619:40">/* compute total size */</comment>

                <expr_stmt pos:start="2621:17" pos:end="2621:32"><expr pos:start="2621:17" pos:end="2621:31"><name pos:start="2621:17" pos:end="2621:27">loaded_base</name> <operator pos:start="2621:29" pos:end="2621:29">=</operator> <literal type="number" pos:start="2621:31" pos:end="2621:31">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2623:17" pos:end="2623:44"><expr pos:start="2623:17" pos:end="2623:43"><call pos:start="2623:17" pos:end="2623:43"><name pos:start="2623:17" pos:end="2623:31">TCGV_UNUSED_I32</name><argument_list pos:start="2623:32" pos:end="2623:43">(<argument pos:start="2623:33" pos:end="2623:42"><expr pos:start="2623:33" pos:end="2623:42"><name pos:start="2623:33" pos:end="2623:42">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2625:17" pos:end="2625:22"><expr pos:start="2625:17" pos:end="2625:21"><name pos:start="2625:17" pos:end="2625:17">n</name> <operator pos:start="2625:19" pos:end="2625:19">=</operator> <literal type="number" pos:start="2625:21" pos:end="2625:21">0</literal></expr>;</expr_stmt>

                <for pos:start="2627:17" pos:end="2633:17">for<control pos:start="2627:20" pos:end="2627:33">(<init pos:start="2627:21" pos:end="2627:24"><expr pos:start="2627:21" pos:end="2627:23"><name pos:start="2627:21" pos:end="2627:21">i</name><operator pos:start="2627:22" pos:end="2627:22">=</operator><literal type="number" pos:start="2627:23" pos:end="2627:23">0</literal></expr>;</init><condition pos:start="2627:25" pos:end="2627:29"><expr pos:start="2627:25" pos:end="2627:28"><name pos:start="2627:25" pos:end="2627:25">i</name><operator pos:start="2627:26" pos:end="2627:26">&lt;</operator><literal type="number" pos:start="2627:27" pos:end="2627:28">16</literal></expr>;</condition><incr pos:start="2627:30" pos:end="2627:32"><expr pos:start="2627:30" pos:end="2627:32"><name pos:start="2627:30" pos:end="2627:30">i</name><operator pos:start="2627:31" pos:end="2627:32">++</operator></expr></incr>)</control> <block pos:start="2627:35" pos:end="2633:17">{<block_content pos:start="2629:21" pos:end="2631:28">

                    <if_stmt pos:start="2629:21" pos:end="2631:28"><if pos:start="2629:21" pos:end="2631:28">if <condition pos:start="2629:24" pos:end="2629:40">(<expr pos:start="2629:25" pos:end="2629:39"><name pos:start="2629:25" pos:end="2629:28">insn</name> <operator pos:start="2629:30" pos:end="2629:30">&amp;</operator> <operator pos:start="2629:32" pos:end="2629:32">(</operator><literal type="number" pos:start="2629:33" pos:end="2629:33">1</literal> <operator pos:start="2629:35" pos:end="2629:36">&lt;&lt;</operator> <name pos:start="2629:38" pos:end="2629:38">i</name><operator pos:start="2629:39" pos:end="2629:39">)</operator></expr>)</condition><block type="pseudo" pos:start="2631:25" pos:end="2631:28"><block_content pos:start="2631:25" pos:end="2631:28">

                        <expr_stmt pos:start="2631:25" pos:end="2631:28"><expr pos:start="2631:25" pos:end="2631:27"><name pos:start="2631:25" pos:end="2631:25">n</name><operator pos:start="2631:26" pos:end="2631:27">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <comment type="block" pos:start="2635:17" pos:end="2635:53">/* XXX: test invalid n == 0 case ? */</comment>

                <if_stmt pos:start="2637:17" pos:end="2669:17"><if pos:start="2637:17" pos:end="2651:17">if <condition pos:start="2637:20" pos:end="2637:37">(<expr pos:start="2637:21" pos:end="2637:36"><name pos:start="2637:21" pos:end="2637:24">insn</name> <operator pos:start="2637:26" pos:end="2637:26">&amp;</operator> <operator pos:start="2637:28" pos:end="2637:28">(</operator><literal type="number" pos:start="2637:29" pos:end="2637:29">1</literal> <operator pos:start="2637:31" pos:end="2637:32">&lt;&lt;</operator> <literal type="number" pos:start="2637:34" pos:end="2637:35">23</literal><operator pos:start="2637:36" pos:end="2637:36">)</operator></expr>)</condition> <block pos:start="2637:39" pos:end="2651:17">{<block_content pos:start="2639:21" pos:end="2649:21">

                    <if_stmt pos:start="2639:21" pos:end="2649:21"><if pos:start="2639:21" pos:end="2645:21">if <condition pos:start="2639:24" pos:end="2639:41">(<expr pos:start="2639:25" pos:end="2639:40"><name pos:start="2639:25" pos:end="2639:28">insn</name> <operator pos:start="2639:30" pos:end="2639:30">&amp;</operator> <operator pos:start="2639:32" pos:end="2639:32">(</operator><literal type="number" pos:start="2639:33" pos:end="2639:33">1</literal> <operator pos:start="2639:35" pos:end="2639:36">&lt;&lt;</operator> <literal type="number" pos:start="2639:38" pos:end="2639:39">24</literal><operator pos:start="2639:40" pos:end="2639:40">)</operator></expr>)</condition> <block pos:start="2639:43" pos:end="2645:21">{<block_content pos:start="2643:25" pos:end="2643:56">

                        <comment type="block" pos:start="2641:25" pos:end="2641:43">/* pre increment */</comment>

                        <expr_stmt pos:start="2643:25" pos:end="2643:56"><expr pos:start="2643:25" pos:end="2643:55"><call pos:start="2643:25" pos:end="2643:55"><name pos:start="2643:25" pos:end="2643:40">tcg_gen_addi_i32</name><argument_list pos:start="2643:41" pos:end="2643:55">(<argument pos:start="2643:42" pos:end="2643:45"><expr pos:start="2643:42" pos:end="2643:45"><name pos:start="2643:42" pos:end="2643:45">addr</name></expr></argument>, <argument pos:start="2643:48" pos:end="2643:51"><expr pos:start="2643:48" pos:end="2643:51"><name pos:start="2643:48" pos:end="2643:51">addr</name></expr></argument>, <argument pos:start="2643:54" pos:end="2643:54"><expr pos:start="2643:54" pos:end="2643:54"><literal type="number" pos:start="2643:54" pos:end="2643:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2645:23" pos:end="2649:21">else <block pos:start="2645:28" pos:end="2649:21">{<block_content>

                        <comment type="block" pos:start="2647:25" pos:end="2647:44">/* post increment */</comment>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="2651:19" pos:end="2669:17">else <block pos:start="2651:24" pos:end="2669:17">{<block_content pos:start="2653:21" pos:end="2667:21">

                    <if_stmt pos:start="2653:21" pos:end="2667:21"><if pos:start="2653:21" pos:end="2659:21">if <condition pos:start="2653:24" pos:end="2653:41">(<expr pos:start="2653:25" pos:end="2653:40"><name pos:start="2653:25" pos:end="2653:28">insn</name> <operator pos:start="2653:30" pos:end="2653:30">&amp;</operator> <operator pos:start="2653:32" pos:end="2653:32">(</operator><literal type="number" pos:start="2653:33" pos:end="2653:33">1</literal> <operator pos:start="2653:35" pos:end="2653:36">&lt;&lt;</operator> <literal type="number" pos:start="2653:38" pos:end="2653:39">24</literal><operator pos:start="2653:40" pos:end="2653:40">)</operator></expr>)</condition> <block pos:start="2653:43" pos:end="2659:21">{<block_content pos:start="2657:25" pos:end="2657:63">

                        <comment type="block" pos:start="2655:25" pos:end="2655:43">/* pre decrement */</comment>

                        <expr_stmt pos:start="2657:25" pos:end="2657:63"><expr pos:start="2657:25" pos:end="2657:62"><call pos:start="2657:25" pos:end="2657:62"><name pos:start="2657:25" pos:end="2657:40">tcg_gen_addi_i32</name><argument_list pos:start="2657:41" pos:end="2657:62">(<argument pos:start="2657:42" pos:end="2657:45"><expr pos:start="2657:42" pos:end="2657:45"><name pos:start="2657:42" pos:end="2657:45">addr</name></expr></argument>, <argument pos:start="2657:48" pos:end="2657:51"><expr pos:start="2657:48" pos:end="2657:51"><name pos:start="2657:48" pos:end="2657:51">addr</name></expr></argument>, <argument pos:start="2657:54" pos:end="2657:61"><expr pos:start="2657:54" pos:end="2657:61"><operator pos:start="2657:54" pos:end="2657:54">-</operator><operator pos:start="2657:55" pos:end="2657:55">(</operator><name pos:start="2657:56" pos:end="2657:56">n</name> <operator pos:start="2657:58" pos:end="2657:58">*</operator> <literal type="number" pos:start="2657:60" pos:end="2657:60">4</literal><operator pos:start="2657:61" pos:end="2657:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2659:23" pos:end="2667:21">else <block pos:start="2659:28" pos:end="2667:21">{<block_content pos:start="2663:25" pos:end="2665:69">

                        <comment type="block" pos:start="2661:25" pos:end="2661:44">/* post decrement */</comment>

                        <if_stmt pos:start="2663:25" pos:end="2665:69"><if pos:start="2663:25" pos:end="2665:69">if <condition pos:start="2663:28" pos:end="2663:35">(<expr pos:start="2663:29" pos:end="2663:34"><name pos:start="2663:29" pos:end="2663:29">n</name> <operator pos:start="2663:31" pos:end="2663:32">!=</operator> <literal type="number" pos:start="2663:34" pos:end="2663:34">1</literal></expr>)</condition><block type="pseudo" pos:start="2665:25" pos:end="2665:69"><block_content pos:start="2665:25" pos:end="2665:69">

                        <expr_stmt pos:start="2665:25" pos:end="2665:69"><expr pos:start="2665:25" pos:end="2665:68"><call pos:start="2665:25" pos:end="2665:68"><name pos:start="2665:25" pos:end="2665:40">tcg_gen_addi_i32</name><argument_list pos:start="2665:41" pos:end="2665:68">(<argument pos:start="2665:42" pos:end="2665:45"><expr pos:start="2665:42" pos:end="2665:45"><name pos:start="2665:42" pos:end="2665:45">addr</name></expr></argument>, <argument pos:start="2665:48" pos:end="2665:51"><expr pos:start="2665:48" pos:end="2665:51"><name pos:start="2665:48" pos:end="2665:51">addr</name></expr></argument>, <argument pos:start="2665:54" pos:end="2665:67"><expr pos:start="2665:54" pos:end="2665:67"><operator pos:start="2665:54" pos:end="2665:54">-</operator><operator pos:start="2665:55" pos:end="2665:55">(</operator><operator pos:start="2665:56" pos:end="2665:56">(</operator><name pos:start="2665:57" pos:end="2665:57">n</name> <operator pos:start="2665:59" pos:end="2665:59">-</operator> <literal type="number" pos:start="2665:61" pos:end="2665:61">1</literal><operator pos:start="2665:62" pos:end="2665:62">)</operator> <operator pos:start="2665:64" pos:end="2665:64">*</operator> <literal type="number" pos:start="2665:66" pos:end="2665:66">4</literal><operator pos:start="2665:67" pos:end="2665:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="2671:17" pos:end="2671:22"><expr pos:start="2671:17" pos:end="2671:21"><name pos:start="2671:17" pos:end="2671:17">j</name> <operator pos:start="2671:19" pos:end="2671:19">=</operator> <literal type="number" pos:start="2671:21" pos:end="2671:21">0</literal></expr>;</expr_stmt>

                <for pos:start="2673:17" pos:end="2753:17">for<control pos:start="2673:20" pos:end="2673:33">(<init pos:start="2673:21" pos:end="2673:24"><expr pos:start="2673:21" pos:end="2673:23"><name pos:start="2673:21" pos:end="2673:21">i</name><operator pos:start="2673:22" pos:end="2673:22">=</operator><literal type="number" pos:start="2673:23" pos:end="2673:23">0</literal></expr>;</init><condition pos:start="2673:25" pos:end="2673:29"><expr pos:start="2673:25" pos:end="2673:28"><name pos:start="2673:25" pos:end="2673:25">i</name><operator pos:start="2673:26" pos:end="2673:26">&lt;</operator><literal type="number" pos:start="2673:27" pos:end="2673:28">16</literal></expr>;</condition><incr pos:start="2673:30" pos:end="2673:32"><expr pos:start="2673:30" pos:end="2673:32"><name pos:start="2673:30" pos:end="2673:30">i</name><operator pos:start="2673:31" pos:end="2673:32">++</operator></expr></incr>)</control> <block pos:start="2673:35" pos:end="2753:17">{<block_content pos:start="2675:21" pos:end="2751:21">

                    <if_stmt pos:start="2675:21" pos:end="2751:21"><if pos:start="2675:21" pos:end="2751:21">if <condition pos:start="2675:24" pos:end="2675:40">(<expr pos:start="2675:25" pos:end="2675:39"><name pos:start="2675:25" pos:end="2675:28">insn</name> <operator pos:start="2675:30" pos:end="2675:30">&amp;</operator> <operator pos:start="2675:32" pos:end="2675:32">(</operator><literal type="number" pos:start="2675:33" pos:end="2675:33">1</literal> <operator pos:start="2675:35" pos:end="2675:36">&lt;&lt;</operator> <name pos:start="2675:38" pos:end="2675:38">i</name><operator pos:start="2675:39" pos:end="2675:39">)</operator></expr>)</condition> <block pos:start="2675:42" pos:end="2751:21">{<block_content pos:start="2677:25" pos:end="2749:60">

                        <if_stmt pos:start="2677:25" pos:end="2741:25"><if pos:start="2677:25" pos:end="2707:25">if <condition pos:start="2677:28" pos:end="2677:36">(<expr pos:start="2677:29" pos:end="2677:35"><name pos:start="2677:29" pos:end="2677:35">is_load</name></expr>)</condition> <block pos:start="2677:38" pos:end="2707:25">{<block_content pos:start="2681:29" pos:end="2705:29">

                            <comment type="block" pos:start="2679:29" pos:end="2679:38">/* load */</comment>

                            <expr_stmt pos:start="2681:29" pos:end="2681:53"><expr pos:start="2681:29" pos:end="2681:52"><name pos:start="2681:29" pos:end="2681:31">tmp</name> <operator pos:start="2681:33" pos:end="2681:33">=</operator> <call pos:start="2681:35" pos:end="2681:52"><name pos:start="2681:35" pos:end="2681:50">tcg_temp_new_i32</name><argument_list pos:start="2681:51" pos:end="2681:52">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2683:29" pos:end="2683:72"><expr pos:start="2683:29" pos:end="2683:71"><call pos:start="2683:29" pos:end="2683:71"><name pos:start="2683:29" pos:end="2683:42">gen_aa32_ld32u</name><argument_list pos:start="2683:43" pos:end="2683:71">(<argument pos:start="2683:44" pos:end="2683:46"><expr pos:start="2683:44" pos:end="2683:46"><name pos:start="2683:44" pos:end="2683:46">tmp</name></expr></argument>, <argument pos:start="2683:49" pos:end="2683:52"><expr pos:start="2683:49" pos:end="2683:52"><name pos:start="2683:49" pos:end="2683:52">addr</name></expr></argument>, <argument pos:start="2683:55" pos:end="2683:70"><expr pos:start="2683:55" pos:end="2683:70"><call pos:start="2683:55" pos:end="2683:70"><name pos:start="2683:55" pos:end="2683:67">get_mem_index</name><argument_list pos:start="2683:68" pos:end="2683:70">(<argument pos:start="2683:69" pos:end="2683:69"><expr pos:start="2683:69" pos:end="2683:69"><name pos:start="2683:69" pos:end="2683:69">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2685:29" pos:end="2705:29"><if pos:start="2685:29" pos:end="2695:29">if <condition pos:start="2685:32" pos:end="2685:37">(<expr pos:start="2685:33" pos:end="2685:36"><name pos:start="2685:33" pos:end="2685:36">user</name></expr>)</condition> <block pos:start="2685:39" pos:end="2695:29">{<block_content pos:start="2687:33" pos:end="2693:55">

                                <expr_stmt pos:start="2687:33" pos:end="2687:56"><expr pos:start="2687:33" pos:end="2687:55"><name pos:start="2687:33" pos:end="2687:36">tmp2</name> <operator pos:start="2687:38" pos:end="2687:38">=</operator> <call pos:start="2687:40" pos:end="2687:55"><name pos:start="2687:40" pos:end="2687:52">tcg_const_i32</name><argument_list pos:start="2687:53" pos:end="2687:55">(<argument pos:start="2687:54" pos:end="2687:54"><expr pos:start="2687:54" pos:end="2687:54"><name pos:start="2687:54" pos:end="2687:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2689:33" pos:end="2689:76"><expr pos:start="2689:33" pos:end="2689:75"><call pos:start="2689:33" pos:end="2689:75"><name pos:start="2689:33" pos:end="2689:55">gen_helper_set_user_reg</name><argument_list pos:start="2689:56" pos:end="2689:75">(<argument pos:start="2689:57" pos:end="2689:63"><expr pos:start="2689:57" pos:end="2689:63"><name pos:start="2689:57" pos:end="2689:63">cpu_env</name></expr></argument>, <argument pos:start="2689:66" pos:end="2689:69"><expr pos:start="2689:66" pos:end="2689:69"><name pos:start="2689:66" pos:end="2689:69">tmp2</name></expr></argument>, <argument pos:start="2689:72" pos:end="2689:74"><expr pos:start="2689:72" pos:end="2689:74"><name pos:start="2689:72" pos:end="2689:74">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2691:33" pos:end="2691:56"><expr pos:start="2691:33" pos:end="2691:55"><call pos:start="2691:33" pos:end="2691:55"><name pos:start="2691:33" pos:end="2691:49">tcg_temp_free_i32</name><argument_list pos:start="2691:50" pos:end="2691:55">(<argument pos:start="2691:51" pos:end="2691:54"><expr pos:start="2691:51" pos:end="2691:54"><name pos:start="2691:51" pos:end="2691:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2693:33" pos:end="2693:55"><expr pos:start="2693:33" pos:end="2693:54"><call pos:start="2693:33" pos:end="2693:54"><name pos:start="2693:33" pos:end="2693:49">tcg_temp_free_i32</name><argument_list pos:start="2693:50" pos:end="2693:54">(<argument pos:start="2693:51" pos:end="2693:53"><expr pos:start="2693:51" pos:end="2693:53"><name pos:start="2693:51" pos:end="2693:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <if type="elseif" pos:start="2695:31" pos:end="2701:29">else if <condition pos:start="2695:39" pos:end="2695:47">(<expr pos:start="2695:40" pos:end="2695:46"><name pos:start="2695:40" pos:end="2695:40">i</name> <operator pos:start="2695:42" pos:end="2695:43">==</operator> <name pos:start="2695:45" pos:end="2695:46">rn</name></expr>)</condition> <block pos:start="2695:49" pos:end="2701:29">{<block_content pos:start="2697:33" pos:end="2699:48">

                                <expr_stmt pos:start="2697:33" pos:end="2697:49"><expr pos:start="2697:33" pos:end="2697:48"><name pos:start="2697:33" pos:end="2697:42">loaded_var</name> <operator pos:start="2697:44" pos:end="2697:44">=</operator> <name pos:start="2697:46" pos:end="2697:48">tmp</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="2699:33" pos:end="2699:48"><expr pos:start="2699:33" pos:end="2699:47"><name pos:start="2699:33" pos:end="2699:43">loaded_base</name> <operator pos:start="2699:45" pos:end="2699:45">=</operator> <literal type="number" pos:start="2699:47" pos:end="2699:47">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2701:31" pos:end="2705:29">else <block pos:start="2701:36" pos:end="2705:29">{<block_content pos:start="2703:33" pos:end="2703:63">

                                <expr_stmt pos:start="2703:33" pos:end="2703:63"><expr pos:start="2703:33" pos:end="2703:62"><call pos:start="2703:33" pos:end="2703:62"><name pos:start="2703:33" pos:end="2703:51">store_reg_from_load</name><argument_list pos:start="2703:52" pos:end="2703:62">(<argument pos:start="2703:53" pos:end="2703:53"><expr pos:start="2703:53" pos:end="2703:53"><name pos:start="2703:53" pos:end="2703:53">s</name></expr></argument>, <argument pos:start="2703:56" pos:end="2703:56"><expr pos:start="2703:56" pos:end="2703:56"><name pos:start="2703:56" pos:end="2703:56">i</name></expr></argument>, <argument pos:start="2703:59" pos:end="2703:61"><expr pos:start="2703:59" pos:end="2703:61"><name pos:start="2703:59" pos:end="2703:61">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="2707:27" pos:end="2741:25">else <block pos:start="2707:32" pos:end="2741:25">{<block_content pos:start="2711:29" pos:end="2739:51">

                            <comment type="block" pos:start="2709:29" pos:end="2709:39">/* store */</comment>

                            <if_stmt pos:start="2711:29" pos:end="2735:29"><if pos:start="2711:29" pos:end="2721:29">if <condition pos:start="2711:32" pos:end="2711:40">(<expr pos:start="2711:33" pos:end="2711:39"><name pos:start="2711:33" pos:end="2711:33">i</name> <operator pos:start="2711:35" pos:end="2711:36">==</operator> <literal type="number" pos:start="2711:38" pos:end="2711:39">15</literal></expr>)</condition> <block pos:start="2711:42" pos:end="2721:29">{<block_content pos:start="2715:33" pos:end="2719:59">

                                <comment type="block" pos:start="2713:33" pos:end="2713:64">/* special case: r15 = PC + 8 */</comment>

                                <expr_stmt pos:start="2715:33" pos:end="2715:54"><expr pos:start="2715:33" pos:end="2715:53"><name pos:start="2715:33" pos:end="2715:35">val</name> <operator pos:start="2715:37" pos:end="2715:37">=</operator> <operator pos:start="2715:39" pos:end="2715:39">(</operator><name pos:start="2715:40" pos:end="2715:43">long</name><operator pos:start="2715:44" pos:end="2715:44">)</operator><name pos:start="2715:45" pos:end="2715:49"><name pos:start="2715:45" pos:end="2715:45">s</name><operator pos:start="2715:46" pos:end="2715:47">-&gt;</operator><name pos:start="2715:48" pos:end="2715:49">pc</name></name> <operator pos:start="2715:51" pos:end="2715:51">+</operator> <literal type="number" pos:start="2715:53" pos:end="2715:53">4</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="2717:33" pos:end="2717:57"><expr pos:start="2717:33" pos:end="2717:56"><name pos:start="2717:33" pos:end="2717:35">tmp</name> <operator pos:start="2717:37" pos:end="2717:37">=</operator> <call pos:start="2717:39" pos:end="2717:56"><name pos:start="2717:39" pos:end="2717:54">tcg_temp_new_i32</name><argument_list pos:start="2717:55" pos:end="2717:56">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2719:33" pos:end="2719:59"><expr pos:start="2719:33" pos:end="2719:58"><call pos:start="2719:33" pos:end="2719:58"><name pos:start="2719:33" pos:end="2719:48">tcg_gen_movi_i32</name><argument_list pos:start="2719:49" pos:end="2719:58">(<argument pos:start="2719:50" pos:end="2719:52"><expr pos:start="2719:50" pos:end="2719:52"><name pos:start="2719:50" pos:end="2719:52">tmp</name></expr></argument>, <argument pos:start="2719:55" pos:end="2719:57"><expr pos:start="2719:55" pos:end="2719:57"><name pos:start="2719:55" pos:end="2719:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <if type="elseif" pos:start="2721:31" pos:end="2731:29">else if <condition pos:start="2721:39" pos:end="2721:44">(<expr pos:start="2721:40" pos:end="2721:43"><name pos:start="2721:40" pos:end="2721:43">user</name></expr>)</condition> <block pos:start="2721:46" pos:end="2731:29">{<block_content pos:start="2723:33" pos:end="2729:56">

                                <expr_stmt pos:start="2723:33" pos:end="2723:57"><expr pos:start="2723:33" pos:end="2723:56"><name pos:start="2723:33" pos:end="2723:35">tmp</name> <operator pos:start="2723:37" pos:end="2723:37">=</operator> <call pos:start="2723:39" pos:end="2723:56"><name pos:start="2723:39" pos:end="2723:54">tcg_temp_new_i32</name><argument_list pos:start="2723:55" pos:end="2723:56">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2725:33" pos:end="2725:56"><expr pos:start="2725:33" pos:end="2725:55"><name pos:start="2725:33" pos:end="2725:36">tmp2</name> <operator pos:start="2725:38" pos:end="2725:38">=</operator> <call pos:start="2725:40" pos:end="2725:55"><name pos:start="2725:40" pos:end="2725:52">tcg_const_i32</name><argument_list pos:start="2725:53" pos:end="2725:55">(<argument pos:start="2725:54" pos:end="2725:54"><expr pos:start="2725:54" pos:end="2725:54"><name pos:start="2725:54" pos:end="2725:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2727:33" pos:end="2727:76"><expr pos:start="2727:33" pos:end="2727:75"><call pos:start="2727:33" pos:end="2727:75"><name pos:start="2727:33" pos:end="2727:55">gen_helper_get_user_reg</name><argument_list pos:start="2727:56" pos:end="2727:75">(<argument pos:start="2727:57" pos:end="2727:59"><expr pos:start="2727:57" pos:end="2727:59"><name pos:start="2727:57" pos:end="2727:59">tmp</name></expr></argument>, <argument pos:start="2727:62" pos:end="2727:68"><expr pos:start="2727:62" pos:end="2727:68"><name pos:start="2727:62" pos:end="2727:68">cpu_env</name></expr></argument>, <argument pos:start="2727:71" pos:end="2727:74"><expr pos:start="2727:71" pos:end="2727:74"><name pos:start="2727:71" pos:end="2727:74">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2729:33" pos:end="2729:56"><expr pos:start="2729:33" pos:end="2729:55"><call pos:start="2729:33" pos:end="2729:55"><name pos:start="2729:33" pos:end="2729:49">tcg_temp_free_i32</name><argument_list pos:start="2729:50" pos:end="2729:55">(<argument pos:start="2729:51" pos:end="2729:54"><expr pos:start="2729:51" pos:end="2729:54"><name pos:start="2729:51" pos:end="2729:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2731:31" pos:end="2735:29">else <block pos:start="2731:36" pos:end="2735:29">{<block_content pos:start="2733:33" pos:end="2733:53">

                                <expr_stmt pos:start="2733:33" pos:end="2733:53"><expr pos:start="2733:33" pos:end="2733:52"><name pos:start="2733:33" pos:end="2733:35">tmp</name> <operator pos:start="2733:37" pos:end="2733:37">=</operator> <call pos:start="2733:39" pos:end="2733:52"><name pos:start="2733:39" pos:end="2733:46">load_reg</name><argument_list pos:start="2733:47" pos:end="2733:52">(<argument pos:start="2733:48" pos:end="2733:48"><expr pos:start="2733:48" pos:end="2733:48"><name pos:start="2733:48" pos:end="2733:48">s</name></expr></argument>, <argument pos:start="2733:51" pos:end="2733:51"><expr pos:start="2733:51" pos:end="2733:51"><name pos:start="2733:51" pos:end="2733:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2737:29" pos:end="2737:71"><expr pos:start="2737:29" pos:end="2737:70"><call pos:start="2737:29" pos:end="2737:70"><name pos:start="2737:29" pos:end="2737:41">gen_aa32_st32</name><argument_list pos:start="2737:42" pos:end="2737:70">(<argument pos:start="2737:43" pos:end="2737:45"><expr pos:start="2737:43" pos:end="2737:45"><name pos:start="2737:43" pos:end="2737:45">tmp</name></expr></argument>, <argument pos:start="2737:48" pos:end="2737:51"><expr pos:start="2737:48" pos:end="2737:51"><name pos:start="2737:48" pos:end="2737:51">addr</name></expr></argument>, <argument pos:start="2737:54" pos:end="2737:69"><expr pos:start="2737:54" pos:end="2737:69"><call pos:start="2737:54" pos:end="2737:69"><name pos:start="2737:54" pos:end="2737:66">get_mem_index</name><argument_list pos:start="2737:67" pos:end="2737:69">(<argument pos:start="2737:68" pos:end="2737:68"><expr pos:start="2737:68" pos:end="2737:68"><name pos:start="2737:68" pos:end="2737:68">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2739:29" pos:end="2739:51"><expr pos:start="2739:29" pos:end="2739:50"><call pos:start="2739:29" pos:end="2739:50"><name pos:start="2739:29" pos:end="2739:45">tcg_temp_free_i32</name><argument_list pos:start="2739:46" pos:end="2739:50">(<argument pos:start="2739:47" pos:end="2739:49"><expr pos:start="2739:47" pos:end="2739:49"><name pos:start="2739:47" pos:end="2739:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="2743:25" pos:end="2743:28"><expr pos:start="2743:25" pos:end="2743:27"><name pos:start="2743:25" pos:end="2743:25">j</name><operator pos:start="2743:26" pos:end="2743:27">++</operator></expr>;</expr_stmt>

                        <comment type="block" pos:start="2745:25" pos:end="2745:68">/* no need to add after the last transfer */</comment>

                        <if_stmt pos:start="2747:25" pos:end="2749:60"><if pos:start="2747:25" pos:end="2749:60">if <condition pos:start="2747:28" pos:end="2747:35">(<expr pos:start="2747:29" pos:end="2747:34"><name pos:start="2747:29" pos:end="2747:29">j</name> <operator pos:start="2747:31" pos:end="2747:32">!=</operator> <name pos:start="2747:34" pos:end="2747:34">n</name></expr>)</condition><block type="pseudo" pos:start="2749:29" pos:end="2749:60"><block_content pos:start="2749:29" pos:end="2749:60">

                            <expr_stmt pos:start="2749:29" pos:end="2749:60"><expr pos:start="2749:29" pos:end="2749:59"><call pos:start="2749:29" pos:end="2749:59"><name pos:start="2749:29" pos:end="2749:44">tcg_gen_addi_i32</name><argument_list pos:start="2749:45" pos:end="2749:59">(<argument pos:start="2749:46" pos:end="2749:49"><expr pos:start="2749:46" pos:end="2749:49"><name pos:start="2749:46" pos:end="2749:49">addr</name></expr></argument>, <argument pos:start="2749:52" pos:end="2749:55"><expr pos:start="2749:52" pos:end="2749:55"><name pos:start="2749:52" pos:end="2749:55">addr</name></expr></argument>, <argument pos:start="2749:58" pos:end="2749:58"><expr pos:start="2749:58" pos:end="2749:58"><literal type="number" pos:start="2749:58" pos:end="2749:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="2755:17" pos:end="2799:17"><if pos:start="2755:17" pos:end="2795:17">if <condition pos:start="2755:20" pos:end="2755:37">(<expr pos:start="2755:21" pos:end="2755:36"><name pos:start="2755:21" pos:end="2755:24">insn</name> <operator pos:start="2755:26" pos:end="2755:26">&amp;</operator> <operator pos:start="2755:28" pos:end="2755:28">(</operator><literal type="number" pos:start="2755:29" pos:end="2755:29">1</literal> <operator pos:start="2755:31" pos:end="2755:32">&lt;&lt;</operator> <literal type="number" pos:start="2755:34" pos:end="2755:35">21</literal><operator pos:start="2755:36" pos:end="2755:36">)</operator></expr>)</condition> <block pos:start="2755:39" pos:end="2795:17">{<block_content pos:start="2759:21" pos:end="2793:43">

                    <comment type="block" pos:start="2757:21" pos:end="2757:36">/* write back */</comment>

                    <if_stmt pos:start="2759:21" pos:end="2791:21"><if pos:start="2759:21" pos:end="2773:21">if <condition pos:start="2759:24" pos:end="2759:41">(<expr pos:start="2759:25" pos:end="2759:40"><name pos:start="2759:25" pos:end="2759:28">insn</name> <operator pos:start="2759:30" pos:end="2759:30">&amp;</operator> <operator pos:start="2759:32" pos:end="2759:32">(</operator><literal type="number" pos:start="2759:33" pos:end="2759:33">1</literal> <operator pos:start="2759:35" pos:end="2759:36">&lt;&lt;</operator> <literal type="number" pos:start="2759:38" pos:end="2759:39">23</literal><operator pos:start="2759:40" pos:end="2759:40">)</operator></expr>)</condition> <block pos:start="2759:43" pos:end="2773:21">{<block_content pos:start="2761:25" pos:end="2771:25">

                        <if_stmt pos:start="2761:25" pos:end="2771:25"><if pos:start="2761:25" pos:end="2765:25">if <condition pos:start="2761:28" pos:end="2761:45">(<expr pos:start="2761:29" pos:end="2761:44"><name pos:start="2761:29" pos:end="2761:32">insn</name> <operator pos:start="2761:34" pos:end="2761:34">&amp;</operator> <operator pos:start="2761:36" pos:end="2761:36">(</operator><literal type="number" pos:start="2761:37" pos:end="2761:37">1</literal> <operator pos:start="2761:39" pos:end="2761:40">&lt;&lt;</operator> <literal type="number" pos:start="2761:42" pos:end="2761:43">24</literal><operator pos:start="2761:44" pos:end="2761:44">)</operator></expr>)</condition> <block pos:start="2761:47" pos:end="2765:25">{<block_content>

                            <comment type="block" pos:start="2763:29" pos:end="2763:47">/* pre increment */</comment>

                        </block_content>}</block></if> <else pos:start="2765:27" pos:end="2771:25">else <block pos:start="2765:32" pos:end="2771:25">{<block_content pos:start="2769:29" pos:end="2769:60">

                            <comment type="block" pos:start="2767:29" pos:end="2767:48">/* post increment */</comment>

                            <expr_stmt pos:start="2769:29" pos:end="2769:60"><expr pos:start="2769:29" pos:end="2769:59"><call pos:start="2769:29" pos:end="2769:59"><name pos:start="2769:29" pos:end="2769:44">tcg_gen_addi_i32</name><argument_list pos:start="2769:45" pos:end="2769:59">(<argument pos:start="2769:46" pos:end="2769:49"><expr pos:start="2769:46" pos:end="2769:49"><name pos:start="2769:46" pos:end="2769:49">addr</name></expr></argument>, <argument pos:start="2769:52" pos:end="2769:55"><expr pos:start="2769:52" pos:end="2769:55"><name pos:start="2769:52" pos:end="2769:55">addr</name></expr></argument>, <argument pos:start="2769:58" pos:end="2769:58"><expr pos:start="2769:58" pos:end="2769:58"><literal type="number" pos:start="2769:58" pos:end="2769:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="2773:23" pos:end="2791:21">else <block pos:start="2773:28" pos:end="2791:21">{<block_content pos:start="2775:25" pos:end="2789:25">

                        <if_stmt pos:start="2775:25" pos:end="2789:25"><if pos:start="2775:25" pos:end="2783:25">if <condition pos:start="2775:28" pos:end="2775:45">(<expr pos:start="2775:29" pos:end="2775:44"><name pos:start="2775:29" pos:end="2775:32">insn</name> <operator pos:start="2775:34" pos:end="2775:34">&amp;</operator> <operator pos:start="2775:36" pos:end="2775:36">(</operator><literal type="number" pos:start="2775:37" pos:end="2775:37">1</literal> <operator pos:start="2775:39" pos:end="2775:40">&lt;&lt;</operator> <literal type="number" pos:start="2775:42" pos:end="2775:43">24</literal><operator pos:start="2775:44" pos:end="2775:44">)</operator></expr>)</condition> <block pos:start="2775:47" pos:end="2783:25">{<block_content pos:start="2779:29" pos:end="2781:77">

                            <comment type="block" pos:start="2777:29" pos:end="2777:47">/* pre decrement */</comment>

                            <if_stmt pos:start="2779:29" pos:end="2781:77"><if pos:start="2779:29" pos:end="2781:77">if <condition pos:start="2779:32" pos:end="2779:39">(<expr pos:start="2779:33" pos:end="2779:38"><name pos:start="2779:33" pos:end="2779:33">n</name> <operator pos:start="2779:35" pos:end="2779:36">!=</operator> <literal type="number" pos:start="2779:38" pos:end="2779:38">1</literal></expr>)</condition><block type="pseudo" pos:start="2781:33" pos:end="2781:77"><block_content pos:start="2781:33" pos:end="2781:77">

                                <expr_stmt pos:start="2781:33" pos:end="2781:77"><expr pos:start="2781:33" pos:end="2781:76"><call pos:start="2781:33" pos:end="2781:76"><name pos:start="2781:33" pos:end="2781:48">tcg_gen_addi_i32</name><argument_list pos:start="2781:49" pos:end="2781:76">(<argument pos:start="2781:50" pos:end="2781:53"><expr pos:start="2781:50" pos:end="2781:53"><name pos:start="2781:50" pos:end="2781:53">addr</name></expr></argument>, <argument pos:start="2781:56" pos:end="2781:59"><expr pos:start="2781:56" pos:end="2781:59"><name pos:start="2781:56" pos:end="2781:59">addr</name></expr></argument>, <argument pos:start="2781:62" pos:end="2781:75"><expr pos:start="2781:62" pos:end="2781:75"><operator pos:start="2781:62" pos:end="2781:62">-</operator><operator pos:start="2781:63" pos:end="2781:63">(</operator><operator pos:start="2781:64" pos:end="2781:64">(</operator><name pos:start="2781:65" pos:end="2781:65">n</name> <operator pos:start="2781:67" pos:end="2781:67">-</operator> <literal type="number" pos:start="2781:69" pos:end="2781:69">1</literal><operator pos:start="2781:70" pos:end="2781:70">)</operator> <operator pos:start="2781:72" pos:end="2781:72">*</operator> <literal type="number" pos:start="2781:74" pos:end="2781:74">4</literal><operator pos:start="2781:75" pos:end="2781:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="2783:27" pos:end="2789:25">else <block pos:start="2783:32" pos:end="2789:25">{<block_content pos:start="2787:29" pos:end="2787:67">

                            <comment type="block" pos:start="2785:29" pos:end="2785:48">/* post decrement */</comment>

                            <expr_stmt pos:start="2787:29" pos:end="2787:67"><expr pos:start="2787:29" pos:end="2787:66"><call pos:start="2787:29" pos:end="2787:66"><name pos:start="2787:29" pos:end="2787:44">tcg_gen_addi_i32</name><argument_list pos:start="2787:45" pos:end="2787:66">(<argument pos:start="2787:46" pos:end="2787:49"><expr pos:start="2787:46" pos:end="2787:49"><name pos:start="2787:46" pos:end="2787:49">addr</name></expr></argument>, <argument pos:start="2787:52" pos:end="2787:55"><expr pos:start="2787:52" pos:end="2787:55"><name pos:start="2787:52" pos:end="2787:55">addr</name></expr></argument>, <argument pos:start="2787:58" pos:end="2787:65"><expr pos:start="2787:58" pos:end="2787:65"><operator pos:start="2787:58" pos:end="2787:58">-</operator><operator pos:start="2787:59" pos:end="2787:59">(</operator><name pos:start="2787:60" pos:end="2787:60">n</name> <operator pos:start="2787:62" pos:end="2787:62">*</operator> <literal type="number" pos:start="2787:64" pos:end="2787:64">4</literal><operator pos:start="2787:65" pos:end="2787:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="2793:21" pos:end="2793:43"><expr pos:start="2793:21" pos:end="2793:42"><call pos:start="2793:21" pos:end="2793:42"><name pos:start="2793:21" pos:end="2793:29">store_reg</name><argument_list pos:start="2793:30" pos:end="2793:42">(<argument pos:start="2793:31" pos:end="2793:31"><expr pos:start="2793:31" pos:end="2793:31"><name pos:start="2793:31" pos:end="2793:31">s</name></expr></argument>, <argument pos:start="2793:34" pos:end="2793:35"><expr pos:start="2793:34" pos:end="2793:35"><name pos:start="2793:34" pos:end="2793:35">rn</name></expr></argument>, <argument pos:start="2793:38" pos:end="2793:41"><expr pos:start="2793:38" pos:end="2793:41"><name pos:start="2793:38" pos:end="2793:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2795:19" pos:end="2799:17">else <block pos:start="2795:24" pos:end="2799:17">{<block_content pos:start="2797:21" pos:end="2797:44">

                    <expr_stmt pos:start="2797:21" pos:end="2797:44"><expr pos:start="2797:21" pos:end="2797:43"><call pos:start="2797:21" pos:end="2797:43"><name pos:start="2797:21" pos:end="2797:37">tcg_temp_free_i32</name><argument_list pos:start="2797:38" pos:end="2797:43">(<argument pos:start="2797:39" pos:end="2797:42"><expr pos:start="2797:39" pos:end="2797:42"><name pos:start="2797:39" pos:end="2797:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="2801:17" pos:end="2805:17"><if pos:start="2801:17" pos:end="2805:17">if <condition pos:start="2801:20" pos:end="2801:32">(<expr pos:start="2801:21" pos:end="2801:31"><name pos:start="2801:21" pos:end="2801:31">loaded_base</name></expr>)</condition> <block pos:start="2801:34" pos:end="2805:17">{<block_content pos:start="2803:21" pos:end="2803:49">

                    <expr_stmt pos:start="2803:21" pos:end="2803:49"><expr pos:start="2803:21" pos:end="2803:48"><call pos:start="2803:21" pos:end="2803:48"><name pos:start="2803:21" pos:end="2803:29">store_reg</name><argument_list pos:start="2803:30" pos:end="2803:48">(<argument pos:start="2803:31" pos:end="2803:31"><expr pos:start="2803:31" pos:end="2803:31"><name pos:start="2803:31" pos:end="2803:31">s</name></expr></argument>, <argument pos:start="2803:34" pos:end="2803:35"><expr pos:start="2803:34" pos:end="2803:35"><name pos:start="2803:34" pos:end="2803:35">rn</name></expr></argument>, <argument pos:start="2803:38" pos:end="2803:47"><expr pos:start="2803:38" pos:end="2803:47"><name pos:start="2803:38" pos:end="2803:47">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="2807:17" pos:end="2819:17"><if pos:start="2807:17" pos:end="2819:17">if <condition pos:start="2807:20" pos:end="2807:31">(<expr pos:start="2807:21" pos:end="2807:30"><name pos:start="2807:21" pos:end="2807:30">exc_return</name></expr>)</condition> <block pos:start="2807:33" pos:end="2819:17">{<block_content pos:start="2811:21" pos:end="2817:45">

                    <comment type="block" pos:start="2809:21" pos:end="2809:50">/* Restore CPSR from SPSR.  */</comment>

                    <expr_stmt pos:start="2811:21" pos:end="2811:47"><expr pos:start="2811:21" pos:end="2811:46"><name pos:start="2811:21" pos:end="2811:23">tmp</name> <operator pos:start="2811:25" pos:end="2811:25">=</operator> <call pos:start="2811:27" pos:end="2811:46"><name pos:start="2811:27" pos:end="2811:40">load_cpu_field</name><argument_list pos:start="2811:41" pos:end="2811:46">(<argument pos:start="2811:42" pos:end="2811:45"><expr pos:start="2811:42" pos:end="2811:45"><name pos:start="2811:42" pos:end="2811:45">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2813:21" pos:end="2813:54"><expr pos:start="2813:21" pos:end="2813:53"><call pos:start="2813:21" pos:end="2813:53"><name pos:start="2813:21" pos:end="2813:32">gen_set_cpsr</name><argument_list pos:start="2813:33" pos:end="2813:53">(<argument pos:start="2813:34" pos:end="2813:36"><expr pos:start="2813:34" pos:end="2813:36"><name pos:start="2813:34" pos:end="2813:36">tmp</name></expr></argument>, <argument pos:start="2813:39" pos:end="2813:52"><expr pos:start="2813:39" pos:end="2813:52"><name pos:start="2813:39" pos:end="2813:52">CPSR_ERET_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2815:21" pos:end="2815:43"><expr pos:start="2815:21" pos:end="2815:42"><call pos:start="2815:21" pos:end="2815:42"><name pos:start="2815:21" pos:end="2815:37">tcg_temp_free_i32</name><argument_list pos:start="2815:38" pos:end="2815:42">(<argument pos:start="2815:39" pos:end="2815:41"><expr pos:start="2815:39" pos:end="2815:41"><name pos:start="2815:39" pos:end="2815:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2817:21" pos:end="2817:45"><expr pos:start="2817:21" pos:end="2817:44"><name pos:start="2817:21" pos:end="2817:29"><name pos:start="2817:21" pos:end="2817:21">s</name><operator pos:start="2817:22" pos:end="2817:23">-&gt;</operator><name pos:start="2817:24" pos:end="2817:29">is_jmp</name></name> <operator pos:start="2817:31" pos:end="2817:31">=</operator> <name pos:start="2817:33" pos:end="2817:44">DISAS_UPDATE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="2823:13" pos:end="2823:18">break;</break>

        <case pos:start="2825:9" pos:end="2825:17">case <expr pos:start="2825:14" pos:end="2825:16"><literal type="number" pos:start="2825:14" pos:end="2825:16">0xa</literal></expr>:</case>

        <case pos:start="2827:9" pos:end="2827:17">case <expr pos:start="2827:14" pos:end="2827:16"><literal type="number" pos:start="2827:14" pos:end="2827:16">0xb</literal></expr>:</case>

            <block pos:start="2829:13" pos:end="2855:13">{<block_content pos:start="2831:17" pos:end="2853:32">

                <decl_stmt pos:start="2831:17" pos:end="2831:31"><decl pos:start="2831:17" pos:end="2831:30"><type pos:start="2831:17" pos:end="2831:23"><name pos:start="2831:17" pos:end="2831:23">int32_t</name></type> <name pos:start="2831:25" pos:end="2831:30">offset</name></decl>;</decl_stmt>



                <comment type="block" pos:start="2835:17" pos:end="2835:39">/* branch (and link) */</comment>

                <expr_stmt pos:start="2837:17" pos:end="2837:37"><expr pos:start="2837:17" pos:end="2837:36"><name pos:start="2837:17" pos:end="2837:19">val</name> <operator pos:start="2837:21" pos:end="2837:21">=</operator> <operator pos:start="2837:23" pos:end="2837:23">(</operator><name pos:start="2837:24" pos:end="2837:30">int32_t</name><operator pos:start="2837:31" pos:end="2837:31">)</operator><name pos:start="2837:32" pos:end="2837:36"><name pos:start="2837:32" pos:end="2837:32">s</name><operator pos:start="2837:33" pos:end="2837:34">-&gt;</operator><name pos:start="2837:35" pos:end="2837:36">pc</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="2839:17" pos:end="2847:17"><if pos:start="2839:17" pos:end="2847:17">if <condition pos:start="2839:20" pos:end="2839:37">(<expr pos:start="2839:21" pos:end="2839:36"><name pos:start="2839:21" pos:end="2839:24">insn</name> <operator pos:start="2839:26" pos:end="2839:26">&amp;</operator> <operator pos:start="2839:28" pos:end="2839:28">(</operator><literal type="number" pos:start="2839:29" pos:end="2839:29">1</literal> <operator pos:start="2839:31" pos:end="2839:32">&lt;&lt;</operator> <literal type="number" pos:start="2839:34" pos:end="2839:35">24</literal><operator pos:start="2839:36" pos:end="2839:36">)</operator></expr>)</condition> <block pos:start="2839:39" pos:end="2847:17">{<block_content pos:start="2841:21" pos:end="2845:42">

                    <expr_stmt pos:start="2841:21" pos:end="2841:45"><expr pos:start="2841:21" pos:end="2841:44"><name pos:start="2841:21" pos:end="2841:23">tmp</name> <operator pos:start="2841:25" pos:end="2841:25">=</operator> <call pos:start="2841:27" pos:end="2841:44"><name pos:start="2841:27" pos:end="2841:42">tcg_temp_new_i32</name><argument_list pos:start="2841:43" pos:end="2841:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2843:21" pos:end="2843:47"><expr pos:start="2843:21" pos:end="2843:46"><call pos:start="2843:21" pos:end="2843:46"><name pos:start="2843:21" pos:end="2843:36">tcg_gen_movi_i32</name><argument_list pos:start="2843:37" pos:end="2843:46">(<argument pos:start="2843:38" pos:end="2843:40"><expr pos:start="2843:38" pos:end="2843:40"><name pos:start="2843:38" pos:end="2843:40">tmp</name></expr></argument>, <argument pos:start="2843:43" pos:end="2843:45"><expr pos:start="2843:43" pos:end="2843:45"><name pos:start="2843:43" pos:end="2843:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2845:21" pos:end="2845:42"><expr pos:start="2845:21" pos:end="2845:41"><call pos:start="2845:21" pos:end="2845:41"><name pos:start="2845:21" pos:end="2845:29">store_reg</name><argument_list pos:start="2845:30" pos:end="2845:41">(<argument pos:start="2845:31" pos:end="2845:31"><expr pos:start="2845:31" pos:end="2845:31"><name pos:start="2845:31" pos:end="2845:31">s</name></expr></argument>, <argument pos:start="2845:34" pos:end="2845:35"><expr pos:start="2845:34" pos:end="2845:35"><literal type="number" pos:start="2845:34" pos:end="2845:35">14</literal></expr></argument>, <argument pos:start="2845:38" pos:end="2845:40"><expr pos:start="2845:38" pos:end="2845:40"><name pos:start="2845:38" pos:end="2845:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="2849:17" pos:end="2849:54"><expr pos:start="2849:17" pos:end="2849:53"><name pos:start="2849:17" pos:end="2849:22">offset</name> <operator pos:start="2849:24" pos:end="2849:24">=</operator> <call pos:start="2849:26" pos:end="2849:53"><name pos:start="2849:26" pos:end="2849:35">sextract32</name><argument_list pos:start="2849:36" pos:end="2849:53">(<argument pos:start="2849:37" pos:end="2849:45"><expr pos:start="2849:37" pos:end="2849:45"><name pos:start="2849:37" pos:end="2849:40">insn</name> <operator pos:start="2849:42" pos:end="2849:43">&lt;&lt;</operator> <literal type="number" pos:start="2849:45" pos:end="2849:45">2</literal></expr></argument>, <argument pos:start="2849:48" pos:end="2849:48"><expr pos:start="2849:48" pos:end="2849:48"><literal type="number" pos:start="2849:48" pos:end="2849:48">0</literal></expr></argument>, <argument pos:start="2849:51" pos:end="2849:52"><expr pos:start="2849:51" pos:end="2849:52"><literal type="number" pos:start="2849:51" pos:end="2849:52">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2851:17" pos:end="2851:34"><expr pos:start="2851:17" pos:end="2851:33"><name pos:start="2851:17" pos:end="2851:19">val</name> <operator pos:start="2851:21" pos:end="2851:22">+=</operator> <name pos:start="2851:24" pos:end="2851:29">offset</name> <operator pos:start="2851:31" pos:end="2851:31">+</operator> <literal type="number" pos:start="2851:33" pos:end="2851:33">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2853:17" pos:end="2853:32"><expr pos:start="2853:17" pos:end="2853:31"><call pos:start="2853:17" pos:end="2853:31"><name pos:start="2853:17" pos:end="2853:23">gen_jmp</name><argument_list pos:start="2853:24" pos:end="2853:31">(<argument pos:start="2853:25" pos:end="2853:25"><expr pos:start="2853:25" pos:end="2853:25"><name pos:start="2853:25" pos:end="2853:25">s</name></expr></argument>, <argument pos:start="2853:28" pos:end="2853:30"><expr pos:start="2853:28" pos:end="2853:30"><name pos:start="2853:28" pos:end="2853:30">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="2857:13" pos:end="2857:18">break;</break>

        <case pos:start="2859:9" pos:end="2859:17">case <expr pos:start="2859:14" pos:end="2859:16"><literal type="number" pos:start="2859:14" pos:end="2859:16">0xc</literal></expr>:</case>

        <case pos:start="2861:9" pos:end="2861:17">case <expr pos:start="2861:14" pos:end="2861:16"><literal type="number" pos:start="2861:14" pos:end="2861:16">0xd</literal></expr>:</case>

        <case pos:start="2863:9" pos:end="2863:17">case <expr pos:start="2863:14" pos:end="2863:16"><literal type="number" pos:start="2863:14" pos:end="2863:16">0xe</literal></expr>:</case>

            <if_stmt pos:start="2865:13" pos:end="2881:13"><if pos:start="2865:13" pos:end="2875:13">if <condition pos:start="2865:16" pos:end="2865:42">(<expr pos:start="2865:17" pos:end="2865:41"><operator pos:start="2865:17" pos:end="2865:17">(</operator><operator pos:start="2865:18" pos:end="2865:18">(</operator><name pos:start="2865:19" pos:end="2865:22">insn</name> <operator pos:start="2865:24" pos:end="2865:25">&gt;&gt;</operator> <literal type="number" pos:start="2865:27" pos:end="2865:27">8</literal><operator pos:start="2865:28" pos:end="2865:28">)</operator> <operator pos:start="2865:30" pos:end="2865:30">&amp;</operator> <literal type="number" pos:start="2865:32" pos:end="2865:34">0xe</literal><operator pos:start="2865:35" pos:end="2865:35">)</operator> <operator pos:start="2865:37" pos:end="2865:38">==</operator> <literal type="number" pos:start="2865:40" pos:end="2865:41">10</literal></expr>)</condition> <block pos:start="2865:44" pos:end="2875:13">{<block_content pos:start="2869:17" pos:end="2873:17">

                <comment type="block" pos:start="2867:17" pos:end="2867:27">/* VFP.  */</comment>

                <if_stmt pos:start="2869:17" pos:end="2873:17"><if pos:start="2869:17" pos:end="2873:17">if <condition pos:start="2869:20" pos:end="2869:44">(<expr pos:start="2869:21" pos:end="2869:43"><call pos:start="2869:21" pos:end="2869:43"><name pos:start="2869:21" pos:end="2869:34">disas_vfp_insn</name><argument_list pos:start="2869:35" pos:end="2869:43">(<argument pos:start="2869:36" pos:end="2869:36"><expr pos:start="2869:36" pos:end="2869:36"><name pos:start="2869:36" pos:end="2869:36">s</name></expr></argument>, <argument pos:start="2869:39" pos:end="2869:42"><expr pos:start="2869:39" pos:end="2869:42"><name pos:start="2869:39" pos:end="2869:42">insn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2869:46" pos:end="2873:17">{<block_content pos:start="2871:21" pos:end="2871:36">

                    <goto pos:start="2871:21" pos:end="2871:36">goto <name pos:start="2871:26" pos:end="2871:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="2875:15" pos:end="2881:13">else if <condition pos:start="2875:23" pos:end="2875:50">(<expr pos:start="2875:24" pos:end="2875:49"><call pos:start="2875:24" pos:end="2875:49"><name pos:start="2875:24" pos:end="2875:40">disas_coproc_insn</name><argument_list pos:start="2875:41" pos:end="2875:49">(<argument pos:start="2875:42" pos:end="2875:42"><expr pos:start="2875:42" pos:end="2875:42"><name pos:start="2875:42" pos:end="2875:42">s</name></expr></argument>, <argument pos:start="2875:45" pos:end="2875:48"><expr pos:start="2875:45" pos:end="2875:48"><name pos:start="2875:45" pos:end="2875:48">insn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2875:52" pos:end="2881:13">{<block_content pos:start="2879:17" pos:end="2879:32">

                <comment type="block" pos:start="2877:17" pos:end="2877:35">/* Coprocessor.  */</comment>

                <goto pos:start="2879:17" pos:end="2879:32">goto <name pos:start="2879:22" pos:end="2879:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2883:13" pos:end="2883:18">break;</break>

        <case pos:start="2885:9" pos:end="2885:17">case <expr pos:start="2885:14" pos:end="2885:16"><literal type="number" pos:start="2885:14" pos:end="2885:16">0xf</literal></expr>:</case>

            <comment type="block" pos:start="2887:13" pos:end="2887:21">/* swi */</comment>

            <expr_stmt pos:start="2889:13" pos:end="2889:36"><expr pos:start="2889:13" pos:end="2889:35"><call pos:start="2889:13" pos:end="2889:35"><name pos:start="2889:13" pos:end="2889:25">gen_set_pc_im</name><argument_list pos:start="2889:26" pos:end="2889:35">(<argument pos:start="2889:27" pos:end="2889:27"><expr pos:start="2889:27" pos:end="2889:27"><name pos:start="2889:27" pos:end="2889:27">s</name></expr></argument>, <argument pos:start="2889:30" pos:end="2889:34"><expr pos:start="2889:30" pos:end="2889:34"><name pos:start="2889:30" pos:end="2889:34"><name pos:start="2889:30" pos:end="2889:30">s</name><operator pos:start="2889:31" pos:end="2889:32">-&gt;</operator><name pos:start="2889:33" pos:end="2889:34">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2891:13" pos:end="2891:48"><expr pos:start="2891:13" pos:end="2891:47"><name pos:start="2891:13" pos:end="2891:22"><name pos:start="2891:13" pos:end="2891:13">s</name><operator pos:start="2891:14" pos:end="2891:15">-&gt;</operator><name pos:start="2891:16" pos:end="2891:22">svc_imm</name></name> <operator pos:start="2891:24" pos:end="2891:24">=</operator> <call pos:start="2891:26" pos:end="2891:47"><name pos:start="2891:26" pos:end="2891:34">extract32</name><argument_list pos:start="2891:35" pos:end="2891:47">(<argument pos:start="2891:36" pos:end="2891:39"><expr pos:start="2891:36" pos:end="2891:39"><name pos:start="2891:36" pos:end="2891:39">insn</name></expr></argument>, <argument pos:start="2891:42" pos:end="2891:42"><expr pos:start="2891:42" pos:end="2891:42"><literal type="number" pos:start="2891:42" pos:end="2891:42">0</literal></expr></argument>, <argument pos:start="2891:45" pos:end="2891:46"><expr pos:start="2891:45" pos:end="2891:46"><literal type="number" pos:start="2891:45" pos:end="2891:46">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2893:13" pos:end="2893:34"><expr pos:start="2893:13" pos:end="2893:33"><name pos:start="2893:13" pos:end="2893:21"><name pos:start="2893:13" pos:end="2893:13">s</name><operator pos:start="2893:14" pos:end="2893:15">-&gt;</operator><name pos:start="2893:16" pos:end="2893:21">is_jmp</name></name> <operator pos:start="2893:23" pos:end="2893:23">=</operator> <name pos:start="2893:25" pos:end="2893:33">DISAS_SWI</name></expr>;</expr_stmt>

            <break pos:start="2895:13" pos:end="2895:18">break;</break>

        <default pos:start="2897:9" pos:end="2897:16">default:</default>

        <label pos:start="2899:9" pos:end="2899:19"><name pos:start="2899:9" pos:end="2899:18">illegal_op</name>:</label>

            <expr_stmt pos:start="2901:13" pos:end="2903:56"><expr pos:start="2901:13" pos:end="2903:55"><call pos:start="2901:13" pos:end="2903:55"><name pos:start="2901:13" pos:end="2901:30">gen_exception_insn</name><argument_list pos:start="2901:31" pos:end="2903:55">(<argument pos:start="2901:32" pos:end="2901:32"><expr pos:start="2901:32" pos:end="2901:32"><name pos:start="2901:32" pos:end="2901:32">s</name></expr></argument>, <argument pos:start="2901:35" pos:end="2901:35"><expr pos:start="2901:35" pos:end="2901:35"><literal type="number" pos:start="2901:35" pos:end="2901:35">4</literal></expr></argument>, <argument pos:start="2901:38" pos:end="2901:46"><expr pos:start="2901:38" pos:end="2901:46"><name pos:start="2901:38" pos:end="2901:46">EXCP_UDEF</name></expr></argument>, <argument pos:start="2901:49" pos:end="2901:67"><expr pos:start="2901:49" pos:end="2901:67"><call pos:start="2901:49" pos:end="2901:67"><name pos:start="2901:49" pos:end="2901:65">syn_uncategorized</name><argument_list pos:start="2901:66" pos:end="2901:67">()</argument_list></call></expr></argument>,

                               <argument pos:start="2903:32" pos:end="2903:54"><expr pos:start="2903:32" pos:end="2903:54"><call pos:start="2903:32" pos:end="2903:54"><name pos:start="2903:32" pos:end="2903:51">default_exception_el</name><argument_list pos:start="2903:52" pos:end="2903:54">(<argument pos:start="2903:53" pos:end="2903:53"><expr pos:start="2903:53" pos:end="2903:53"><name pos:start="2903:53" pos:end="2903:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2905:13" pos:end="2905:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
