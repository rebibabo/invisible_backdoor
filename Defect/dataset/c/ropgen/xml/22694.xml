<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22694.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">cmv_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:38"><decl pos:start="2:29" pos:end="2:38"><type pos:start="2:29" pos:end="2:38"><name pos:start="2:29" pos:end="2:32">void</name> <modifier pos:start="2:34" pos:end="2:34">*</modifier></type><name pos:start="2:35" pos:end="2:38">data</name></decl></parameter>, <parameter pos:start="2:41" pos:end="2:54"><decl pos:start="2:41" pos:end="2:54"><type pos:start="2:41" pos:end="2:54"><name pos:start="2:41" pos:end="2:43">int</name> <modifier pos:start="2:45" pos:end="2:45">*</modifier></type><name pos:start="2:46" pos:end="2:54">data_size</name></decl></parameter>,
                            <parameter pos:start="3:29" pos:end="3:43"><decl pos:start="3:29" pos:end="3:43"><type pos:start="3:29" pos:end="3:43"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="40:1">{<block_content pos:start="5:5" pos:end="39:20">
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:16">buf_size</name> <init pos:start="6:18" pos:end="6:30">= <expr pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:24">avpkt</name><operator pos:start="6:25" pos:end="6:26">-&gt;</operator><name pos:start="6:27" pos:end="6:30">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">CmvContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:44"><decl pos:start="8:5" pos:end="8:43"><type pos:start="8:5" pos:end="8:19"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:17">uint8_t</name> <modifier pos:start="8:19" pos:end="8:19">*</modifier></type><name pos:start="8:20" pos:end="8:26">buf_end</name> <init pos:start="8:28" pos:end="8:43">= <expr pos:start="8:30" pos:end="8:43"><name pos:start="8:30" pos:end="8:32">buf</name> <operator pos:start="8:34" pos:end="8:34">+</operator> <name pos:start="8:36" pos:end="8:43">buf_size</name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="9:5" pos:end="12:5"><if pos:start="9:5" pos:end="12:5">if <condition pos:start="9:8" pos:end="9:55">(<expr pos:start="9:9" pos:end="9:54"><call pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:15">AV_RL32</name><argument_list pos:start="9:16" pos:end="9:20">(<argument pos:start="9:17" pos:end="9:19"><expr pos:start="9:17" pos:end="9:19"><name pos:start="9:17" pos:end="9:19">buf</name></expr></argument>)</argument_list></call><operator pos:start="9:21" pos:end="9:22">==</operator><name pos:start="9:23" pos:end="9:30">MVIh_TAG</name><operator pos:start="9:31" pos:end="9:32">||</operator><call pos:start="9:33" pos:end="9:44"><name pos:start="9:33" pos:end="9:39">AV_RB32</name><argument_list pos:start="9:40" pos:end="9:44">(<argument pos:start="9:41" pos:end="9:43"><expr pos:start="9:41" pos:end="9:43"><name pos:start="9:41" pos:end="9:43">buf</name></expr></argument>)</argument_list></call><operator pos:start="9:45" pos:end="9:46">==</operator><name pos:start="9:47" pos:end="9:54">MVIh_TAG</name></expr>)</condition> <block pos:start="9:57" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:24">
        <expr_stmt pos:start="10:9" pos:end="10:61"><expr pos:start="10:9" pos:end="10:60"><call pos:start="10:9" pos:end="10:60"><name pos:start="10:9" pos:end="10:26">cmv_process_header</name><argument_list pos:start="10:27" pos:end="10:60">(<argument pos:start="10:28" pos:end="10:28"><expr pos:start="10:28" pos:end="10:28"><name pos:start="10:28" pos:end="10:28">s</name></expr></argument>, <argument pos:start="10:31" pos:end="10:50"><expr pos:start="10:31" pos:end="10:50"><name pos:start="10:31" pos:end="10:33">buf</name><operator pos:start="10:34" pos:end="10:34">+</operator><name pos:start="10:35" pos:end="10:50">EA_PREAMBLE_SIZE</name></expr></argument>, <argument pos:start="10:53" pos:end="10:59"><expr pos:start="10:53" pos:end="10:59"><name pos:start="10:53" pos:end="10:59">buf_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="11:9" pos:end="11:24">return <expr pos:start="11:16" pos:end="11:23"><name pos:start="11:16" pos:end="11:23">buf_size</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="13:5" pos:end="14:18"><if pos:start="13:5" pos:end="14:18">if <condition pos:start="13:8" pos:end="13:62">(<expr pos:start="13:9" pos:end="13:61"><call pos:start="13:9" pos:end="13:61"><name pos:start="13:9" pos:end="13:27">av_image_check_size</name><argument_list pos:start="13:28" pos:end="13:61">(<argument pos:start="13:29" pos:end="13:36"><expr pos:start="13:29" pos:end="13:36"><name pos:start="13:29" pos:end="13:36"><name pos:start="13:29" pos:end="13:29">s</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:36">width</name></name></expr></argument>, <argument pos:start="13:39" pos:end="13:47"><expr pos:start="13:39" pos:end="13:47"><name pos:start="13:39" pos:end="13:47"><name pos:start="13:39" pos:end="13:39">s</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:47">height</name></name></expr></argument>, <argument pos:start="13:50" pos:end="13:50"><expr pos:start="13:50" pos:end="13:50"><literal type="number" pos:start="13:50" pos:end="13:50">0</literal></expr></argument>, <argument pos:start="13:53" pos:end="13:60"><expr pos:start="13:53" pos:end="13:60"><name pos:start="13:53" pos:end="13:60"><name pos:start="13:53" pos:end="13:53">s</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:60">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="14:9" pos:end="14:18"><block_content pos:start="14:9" pos:end="14:18">
        <return pos:start="14:9" pos:end="14:18">return <expr pos:start="14:16" pos:end="14:17"><operator pos:start="14:16" pos:end="14:16">-</operator><literal type="number" pos:start="14:17" pos:end="14:17">1</literal></expr>;</return></block_content></block></if></if_stmt>
    <comment type="block" pos:start="15:5" pos:end="15:17">/* shuffle */</comment>
    <if_stmt pos:start="16:5" pos:end="17:54"><if pos:start="16:5" pos:end="17:54">if <condition pos:start="16:8" pos:end="16:31">(<expr pos:start="16:9" pos:end="16:30"><name pos:start="16:9" pos:end="16:30"><name pos:start="16:9" pos:end="16:9">s</name><operator pos:start="16:10" pos:end="16:11">-&gt;</operator><name pos:start="16:12" pos:end="16:22">last2_frame</name><operator pos:start="16:23" pos:end="16:23">.</operator><name pos:start="16:24" pos:end="16:27">data</name><index pos:start="16:28" pos:end="16:30">[<expr pos:start="16:29" pos:end="16:29"><literal type="number" pos:start="16:29" pos:end="16:29">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:54"><block_content pos:start="17:9" pos:end="17:54">
        <expr_stmt pos:start="17:9" pos:end="17:54"><expr pos:start="17:9" pos:end="17:53"><call pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:13">avctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:29">release_buffer</name></name><argument_list pos:start="17:30" pos:end="17:53">(<argument pos:start="17:31" pos:end="17:35"><expr pos:start="17:31" pos:end="17:35"><name pos:start="17:31" pos:end="17:35">avctx</name></expr></argument>, <argument pos:start="17:38" pos:end="17:52"><expr pos:start="17:38" pos:end="17:52"><operator pos:start="17:38" pos:end="17:38">&amp;</operator><name pos:start="17:39" pos:end="17:52"><name pos:start="17:39" pos:end="17:39">s</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:52">last2_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:51"><expr pos:start="18:5" pos:end="18:50"><call pos:start="18:5" pos:end="18:50"><name pos:start="18:5" pos:end="18:10">FFSWAP</name><argument_list pos:start="18:11" pos:end="18:50">(<argument pos:start="18:12" pos:end="18:18"><expr pos:start="18:12" pos:end="18:18"><name pos:start="18:12" pos:end="18:18">AVFrame</name></expr></argument>, <argument pos:start="18:21" pos:end="18:33"><expr pos:start="18:21" pos:end="18:33"><name pos:start="18:21" pos:end="18:33"><name pos:start="18:21" pos:end="18:21">s</name><operator pos:start="18:22" pos:end="18:23">-&gt;</operator><name pos:start="18:24" pos:end="18:33">last_frame</name></name></expr></argument>, <argument pos:start="18:36" pos:end="18:49"><expr pos:start="18:36" pos:end="18:49"><name pos:start="18:36" pos:end="18:49"><name pos:start="18:36" pos:end="18:36">s</name><operator pos:start="18:37" pos:end="18:38">-&gt;</operator><name pos:start="18:39" pos:end="18:49">last2_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><call pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:10">FFSWAP</name><argument_list pos:start="19:11" pos:end="19:44">(<argument pos:start="19:12" pos:end="19:18"><expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:18">AVFrame</name></expr></argument>, <argument pos:start="19:21" pos:end="19:28"><expr pos:start="19:21" pos:end="19:28"><name pos:start="19:21" pos:end="19:28"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:28">frame</name></name></expr></argument>, <argument pos:start="19:31" pos:end="19:43"><expr pos:start="19:31" pos:end="19:43"><name pos:start="19:31" pos:end="19:43"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:43">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:27"><expr pos:start="20:5" pos:end="20:26"><name pos:start="20:5" pos:end="20:22"><name pos:start="20:5" pos:end="20:5">s</name><operator pos:start="20:6" pos:end="20:7">-&gt;</operator><name pos:start="20:8" pos:end="20:12">frame</name><operator pos:start="20:13" pos:end="20:13">.</operator><name pos:start="20:14" pos:end="20:22">reference</name></name> <operator pos:start="20:24" pos:end="20:24">=</operator> <literal type="number" pos:start="20:26" pos:end="20:26">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">frame</name><operator pos:start="21:13" pos:end="21:13">.</operator><name pos:start="21:14" pos:end="21:25">buffer_hints</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <name pos:start="21:29" pos:end="21:49">FF_BUFFER_HINTS_VALID</name></expr>;</expr_stmt>
    <if_stmt pos:start="22:5" pos:end="25:5"><if pos:start="22:5" pos:end="25:5">if <condition pos:start="22:8" pos:end="22:46">(<expr pos:start="22:9" pos:end="22:45"><call pos:start="22:9" pos:end="22:43"><name pos:start="22:9" pos:end="22:25"><name pos:start="22:9" pos:end="22:13">avctx</name><operator pos:start="22:14" pos:end="22:15">-&gt;</operator><name pos:start="22:16" pos:end="22:25">get_buffer</name></name><argument_list pos:start="22:26" pos:end="22:43">(<argument pos:start="22:27" pos:end="22:31"><expr pos:start="22:27" pos:end="22:31"><name pos:start="22:27" pos:end="22:31">avctx</name></expr></argument>, <argument pos:start="22:34" pos:end="22:42"><expr pos:start="22:34" pos:end="22:42"><operator pos:start="22:34" pos:end="22:34">&amp;</operator><name pos:start="22:35" pos:end="22:42"><name pos:start="22:35" pos:end="22:35">s</name><operator pos:start="22:36" pos:end="22:37">-&gt;</operator><name pos:start="22:38" pos:end="22:42">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="22:44" pos:end="22:44">&lt;</operator><literal type="number" pos:start="22:45" pos:end="22:45">0</literal></expr>)</condition> <block pos:start="22:48" pos:end="25:5">{<block_content pos:start="23:9" pos:end="24:18">
        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><call pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:60">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:59"><expr pos:start="23:37" pos:end="23:59"><literal type="string" pos:start="23:37" pos:end="23:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="24:9" pos:end="24:18">return <expr pos:start="24:16" pos:end="24:17"><operator pos:start="24:16" pos:end="24:16">-</operator><literal type="number" pos:start="24:17" pos:end="24:17">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:57"><expr pos:start="26:5" pos:end="26:56"><call pos:start="26:5" pos:end="26:56"><name pos:start="26:5" pos:end="26:10">memcpy</name><argument_list pos:start="26:11" pos:end="26:56">(<argument pos:start="26:12" pos:end="26:27"><expr pos:start="26:12" pos:end="26:27"><name pos:start="26:12" pos:end="26:27"><name pos:start="26:12" pos:end="26:12">s</name><operator pos:start="26:13" pos:end="26:14">-&gt;</operator><name pos:start="26:15" pos:end="26:19">frame</name><operator pos:start="26:20" pos:end="26:20">.</operator><name pos:start="26:21" pos:end="26:24">data</name><index pos:start="26:25" pos:end="26:27">[<expr pos:start="26:26" pos:end="26:26"><literal type="number" pos:start="26:26" pos:end="26:26">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="26:30" pos:end="26:39"><expr pos:start="26:30" pos:end="26:39"><name pos:start="26:30" pos:end="26:39"><name pos:start="26:30" pos:end="26:30">s</name><operator pos:start="26:31" pos:end="26:32">-&gt;</operator><name pos:start="26:33" pos:end="26:39">palette</name></name></expr></argument>, <argument pos:start="26:42" pos:end="26:55"><expr pos:start="26:42" pos:end="26:55"><name pos:start="26:42" pos:end="26:55">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:7">buf</name> <operator pos:start="27:9" pos:end="27:10">+=</operator> <name pos:start="27:12" pos:end="27:27">EA_PREAMBLE_SIZE</name></expr>;</expr_stmt>
    <if_stmt pos:start="28:5" pos:end="36:5"><if pos:start="28:5" pos:end="32:5">if <condition pos:start="28:8" pos:end="28:19">(<expr pos:start="28:9" pos:end="28:18"><operator pos:start="28:9" pos:end="28:9">(</operator><name pos:start="28:10" pos:end="28:15"><name pos:start="28:10" pos:end="28:12">buf</name><index pos:start="28:13" pos:end="28:15">[<expr pos:start="28:14" pos:end="28:14"><literal type="number" pos:start="28:14" pos:end="28:14">0</literal></expr>]</index></name><operator pos:start="28:16" pos:end="28:16">&amp;</operator><literal type="number" pos:start="28:17" pos:end="28:17">1</literal><operator pos:start="28:18" pos:end="28:18">)</operator></expr>)</condition> <block pos:start="28:21" pos:end="32:5">{<block_content pos:start="29:9" pos:end="31:47">  <comment type="line" pos:start="28:24" pos:end="28:33">// subtype</comment>
        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:24">cmv_decode_inter</name><argument_list pos:start="29:25" pos:end="29:43">(<argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><name pos:start="29:26" pos:end="29:26">s</name></expr></argument>, <argument pos:start="29:29" pos:end="29:33"><expr pos:start="29:29" pos:end="29:33"><name pos:start="29:29" pos:end="29:31">buf</name><operator pos:start="29:32" pos:end="29:32">+</operator><literal type="number" pos:start="29:33" pos:end="29:33">2</literal></expr></argument>, <argument pos:start="29:36" pos:end="29:42"><expr pos:start="29:36" pos:end="29:42"><name pos:start="29:36" pos:end="29:42">buf_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:31"><expr pos:start="30:9" pos:end="30:30"><name pos:start="30:9" pos:end="30:26"><name pos:start="30:9" pos:end="30:9">s</name><operator pos:start="30:10" pos:end="30:11">-&gt;</operator><name pos:start="30:12" pos:end="30:16">frame</name><operator pos:start="30:17" pos:end="30:17">.</operator><name pos:start="30:18" pos:end="30:26">key_frame</name></name> <operator pos:start="30:28" pos:end="30:28">=</operator> <literal type="number" pos:start="30:30" pos:end="30:30">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">frame</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:26">pict_type</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="32:6" pos:end="36:5">else<block pos:start="32:10" pos:end="36:5">{<block_content pos:start="33:9" pos:end="35:44">
        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">frame</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:26">key_frame</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <literal type="number" pos:start="33:30" pos:end="33:30">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:47"><expr pos:start="34:9" pos:end="34:46"><name pos:start="34:9" pos:end="34:26"><name pos:start="34:9" pos:end="34:9">s</name><operator pos:start="34:10" pos:end="34:11">-&gt;</operator><name pos:start="34:12" pos:end="34:16">frame</name><operator pos:start="34:17" pos:end="34:17">.</operator><name pos:start="34:18" pos:end="34:26">pict_type</name></name> <operator pos:start="34:28" pos:end="34:28">=</operator> <name pos:start="34:30" pos:end="34:46">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><call pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:24">cmv_decode_intra</name><argument_list pos:start="35:25" pos:end="35:43">(<argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">s</name></expr></argument>, <argument pos:start="35:29" pos:end="35:33"><expr pos:start="35:29" pos:end="35:33"><name pos:start="35:29" pos:end="35:31">buf</name><operator pos:start="35:32" pos:end="35:32">+</operator><literal type="number" pos:start="35:33" pos:end="35:33">2</literal></expr></argument>, <argument pos:start="35:36" pos:end="35:42"><expr pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:42">buf_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><operator pos:start="37:5" pos:end="37:5">*</operator><name pos:start="37:6" pos:end="37:14">data_size</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <sizeof pos:start="37:18" pos:end="37:32">sizeof<argument_list pos:start="37:24" pos:end="37:32">(<argument pos:start="37:25" pos:end="37:31"><expr pos:start="37:25" pos:end="37:31"><name pos:start="37:25" pos:end="37:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:31"><expr pos:start="38:5" pos:end="38:30"><operator pos:start="38:5" pos:end="38:5">*</operator><operator pos:start="38:6" pos:end="38:6">(</operator><name pos:start="38:7" pos:end="38:13">AVFrame</name><operator pos:start="38:14" pos:end="38:14">*</operator><operator pos:start="38:15" pos:end="38:15">)</operator><name pos:start="38:16" pos:end="38:19">data</name> <operator pos:start="38:21" pos:end="38:21">=</operator> <name pos:start="38:23" pos:end="38:30"><name pos:start="38:23" pos:end="38:23">s</name><operator pos:start="38:24" pos:end="38:25">-&gt;</operator><name pos:start="38:26" pos:end="38:30">frame</name></name></expr>;</expr_stmt>
    <return pos:start="39:5" pos:end="39:20">return <expr pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:19">buf_size</name></expr>;</return>
</block_content>}</block></function></unit>
