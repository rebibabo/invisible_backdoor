<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9164.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">aac_parse_packet</name><parameter_list pos:start="1:28" pos:end="7:38">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:70"><decl pos:start="1:51" pos:end="1:70"><type pos:start="1:51" pos:end="1:70"><name pos:start="1:51" pos:end="1:64">PayloadContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:36">AVStream</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:40">st</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">AVPacket</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:55">pkt</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:76"><decl pos:start="3:58" pos:end="3:76"><type pos:start="3:58" pos:end="3:76"><name pos:start="3:58" pos:end="3:65">uint32_t</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:76">timestamp</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:46"><decl pos:start="5:29" pos:end="5:46"><type pos:start="5:29" pos:end="5:46"><specifier pos:start="5:29" pos:end="5:33">const</specifier> <name pos:start="5:35" pos:end="5:41">uint8_t</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:46">buf</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:55"><decl pos:start="5:49" pos:end="5:55"><type pos:start="5:49" pos:end="5:55"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:55">len</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:69"><decl pos:start="5:58" pos:end="5:69"><type pos:start="5:58" pos:end="5:69"><name pos:start="5:58" pos:end="5:65">uint16_t</name></type> <name pos:start="5:67" pos:end="5:69">seq</name></decl></parameter>,

                            <parameter pos:start="7:29" pos:end="7:37"><decl pos:start="7:29" pos:end="7:37"><type pos:start="7:29" pos:end="7:37"><name pos:start="7:29" pos:end="7:31">int</name></type> <name pos:start="7:33" pos:end="7:37">flags</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="41:1">{<block_content pos:start="11:5" pos:end="39:13">

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:36">(<expr pos:start="13:9" pos:end="13:35"><call pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:24">rtp_parse_mp4_au</name><argument_list pos:start="13:25" pos:end="13:35">(<argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">data</name></expr></argument>, <argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:7">buf</name> <operator pos:start="19:9" pos:end="19:10">+=</operator> <name pos:start="19:12" pos:end="19:40"><name pos:start="19:12" pos:end="19:15">data</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:40">au_headers_length_bytes</name></name> <operator pos:start="19:42" pos:end="19:42">+</operator> <literal type="number" pos:start="19:44" pos:end="19:44">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:7">len</name> <operator pos:start="21:9" pos:end="21:10">-=</operator> <name pos:start="21:12" pos:end="21:40"><name pos:start="21:12" pos:end="21:15">data</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:40">au_headers_length_bytes</name></name> <operator pos:start="21:42" pos:end="21:42">+</operator> <literal type="number" pos:start="21:44" pos:end="21:44">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="27:36">/* XXX: Fixme we only handle the case where rtp_parse_mp4_au define

                    one au_header */</comment>

    <if_stmt pos:start="29:5" pos:end="31:19"><if pos:start="29:5" pos:end="31:19">if <condition pos:start="29:8" pos:end="29:65">(<expr pos:start="29:9" pos:end="29:64"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">ret</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:59"><name pos:start="29:16" pos:end="29:28">av_new_packet</name><argument_list pos:start="29:29" pos:end="29:59">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">pkt</name></expr></argument>, <argument pos:start="29:35" pos:end="29:58"><expr pos:start="29:35" pos:end="29:58"><name pos:start="29:35" pos:end="29:53"><name pos:start="29:35" pos:end="29:38">data</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:50">au_headers</name><index pos:start="29:51" pos:end="29:53">[<expr pos:start="29:52" pos:end="29:52"><literal type="number" pos:start="29:52" pos:end="29:52">0</literal></expr>]</index></name><operator pos:start="29:54" pos:end="29:54">.</operator><name pos:start="29:55" pos:end="29:58">size</name></expr></argument>)</argument_list></call><operator pos:start="29:60" pos:end="29:60">)</operator> <operator pos:start="29:62" pos:end="29:62">&lt;</operator> <literal type="number" pos:start="29:64" pos:end="29:64">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:53"><expr pos:start="33:5" pos:end="33:52"><call pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:10">memcpy</name><argument_list pos:start="33:11" pos:end="33:52">(<argument pos:start="33:12" pos:end="33:20"><expr pos:start="33:12" pos:end="33:20"><name pos:start="33:12" pos:end="33:20"><name pos:start="33:12" pos:end="33:14">pkt</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:20">data</name></name></expr></argument>, <argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:25">buf</name></expr></argument>, <argument pos:start="33:28" pos:end="33:51"><expr pos:start="33:28" pos:end="33:51"><name pos:start="33:28" pos:end="33:46"><name pos:start="33:28" pos:end="33:31">data</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:43">au_headers</name><index pos:start="33:44" pos:end="33:46">[<expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">0</literal></expr>]</index></name><operator pos:start="33:47" pos:end="33:47">.</operator><name pos:start="33:48" pos:end="33:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:7">pkt</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:21">stream_index</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:33"><name pos:start="37:25" pos:end="37:26">st</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:33">index</name></name></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
