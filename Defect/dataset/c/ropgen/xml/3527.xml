<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3527.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mpeg_field_start</name><parameter_list pos:start="1:28" pos:end="1:46">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:42">MpegEncContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list><block pos:start="1:47" pos:end="97:1">{<block_content pos:start="3:5" pos:end="95:13">

    <decl_stmt pos:start="3:5" pos:end="3:36"><decl pos:start="3:5" pos:end="3:35"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">AVCodecContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:25">avctx</name><init pos:start="3:26" pos:end="3:35">= <expr pos:start="3:28" pos:end="3:35"><name pos:start="3:28" pos:end="3:35"><name pos:start="3:28" pos:end="3:28">s</name><operator pos:start="3:29" pos:end="3:30">-&gt;</operator><name pos:start="3:31" pos:end="3:35">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">Mpeg1Context</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">s1</name> <init pos:start="5:22" pos:end="5:39">= <expr pos:start="5:24" pos:end="5:39"><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:36">Mpeg1Context</name><operator pos:start="5:37" pos:end="5:37">*</operator><operator pos:start="5:38" pos:end="5:38">)</operator><name pos:start="5:39" pos:end="5:39">s</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:30">/* start frame decoding */</comment>

    <if_stmt pos:start="11:5" pos:end="82:0"><if pos:start="11:5" pos:end="51:5">if<condition pos:start="11:7" pos:end="11:58">(<expr pos:start="11:8" pos:end="11:57"><name pos:start="11:8" pos:end="11:21"><name pos:start="11:8" pos:end="11:8">s</name><operator pos:start="11:9" pos:end="11:10">-&gt;</operator><name pos:start="11:11" pos:end="11:21">first_field</name></name> <operator pos:start="11:23" pos:end="11:24">||</operator> <name pos:start="11:26" pos:end="11:45"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:45">picture_structure</name></name><operator pos:start="11:46" pos:end="11:47">==</operator><name pos:start="11:48" pos:end="11:57">PICT_FRAME</name></expr>)</condition><block pos:start="11:59" pos:end="51:5">{<block_content pos:start="13:9" pos:end="49:56">

        <if_stmt pos:start="13:9" pos:end="15:22"><if pos:start="13:9" pos:end="15:22">if<condition pos:start="13:11" pos:end="13:41">(<expr pos:start="13:12" pos:end="13:40"><call pos:start="13:12" pos:end="13:36"><name pos:start="13:12" pos:end="13:26">MPV_frame_start</name><argument_list pos:start="13:27" pos:end="13:36">(<argument pos:start="13:28" pos:end="13:28"><expr pos:start="13:28" pos:end="13:28"><name pos:start="13:28" pos:end="13:28">s</name></expr></argument>, <argument pos:start="13:31" pos:end="13:35"><expr pos:start="13:31" pos:end="13:35"><name pos:start="13:31" pos:end="13:35">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="13:38" pos:end="13:38">&lt;</operator> <literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:22"><block_content pos:start="15:13" pos:end="15:22">

            <return pos:start="15:13" pos:end="15:22">return <expr pos:start="15:20" pos:end="15:21"><operator pos:start="15:20" pos:end="15:20">-</operator><literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:25">ff_er_frame_start</name><argument_list pos:start="19:26" pos:end="19:28">(<argument pos:start="19:27" pos:end="19:27"><expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="23:9" pos:end="23:53">/* first check if we must repeat the frame */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:30">current_picture_ptr</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:43">repeat_pict</name></name> <operator pos:start="25:45" pos:end="25:45">=</operator> <literal type="number" pos:start="25:47" pos:end="25:47">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="45:9"><if pos:start="27:9" pos:end="45:9">if <condition pos:start="27:12" pos:end="27:34">(<expr pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:33">repeat_first_field</name></name></expr>)</condition> <block pos:start="27:36" pos:end="45:9">{<block_content pos:start="29:13" pos:end="43:13">

            <if_stmt pos:start="29:13" pos:end="43:13"><if pos:start="29:13" pos:end="39:13">if <condition pos:start="29:16" pos:end="29:40">(<expr pos:start="29:17" pos:end="29:39"><name pos:start="29:17" pos:end="29:39"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:39">progressive_sequence</name></name></expr>)</condition> <block pos:start="29:42" pos:end="39:13">{<block_content pos:start="31:17" pos:end="37:60">

                <if_stmt pos:start="31:17" pos:end="37:60"><if pos:start="31:17" pos:end="33:60">if <condition pos:start="31:20" pos:end="31:39">(<expr pos:start="31:21" pos:end="31:38"><name pos:start="31:21" pos:end="31:38"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:38">top_field_first</name></name></expr>)</condition><block type="pseudo" pos:start="33:21" pos:end="33:60"><block_content pos:start="33:21" pos:end="33:60">

                    <expr_stmt pos:start="33:21" pos:end="33:60"><expr pos:start="33:21" pos:end="33:59"><name pos:start="33:21" pos:end="33:55"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:42">current_picture_ptr</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:55">repeat_pict</name></name> <operator pos:start="33:57" pos:end="33:57">=</operator> <literal type="number" pos:start="33:59" pos:end="33:59">4</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="35:17" pos:end="37:60">else<block type="pseudo" pos:start="37:21" pos:end="37:60"><block_content pos:start="37:21" pos:end="37:60">

                    <expr_stmt pos:start="37:21" pos:end="37:60"><expr pos:start="37:21" pos:end="37:59"><name pos:start="37:21" pos:end="37:55"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:42">current_picture_ptr</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:55">repeat_pict</name></name> <operator pos:start="37:57" pos:end="37:57">=</operator> <literal type="number" pos:start="37:59" pos:end="37:59">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="39:15" pos:end="43:13">else if <condition pos:start="39:23" pos:end="39:44">(<expr pos:start="39:24" pos:end="39:43"><name pos:start="39:24" pos:end="39:43"><name pos:start="39:24" pos:end="39:24">s</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:43">progressive_frame</name></name></expr>)</condition> <block pos:start="39:46" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:56">

                <expr_stmt pos:start="41:17" pos:end="41:56"><expr pos:start="41:17" pos:end="41:55"><name pos:start="41:17" pos:end="41:51"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:38">current_picture_ptr</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:51">repeat_pict</name></name> <operator pos:start="41:53" pos:end="41:53">=</operator> <literal type="number" pos:start="41:55" pos:end="41:55">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:56"><expr pos:start="49:9" pos:end="49:55"><operator pos:start="49:9" pos:end="49:9">*</operator><name pos:start="49:10" pos:end="49:41"><name pos:start="49:10" pos:end="49:10">s</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:31">current_picture_ptr</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:41">pan_scan</name></name><operator pos:start="49:42" pos:end="49:42">=</operator> <name pos:start="49:44" pos:end="49:55"><name pos:start="49:44" pos:end="49:45">s1</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:55">pan_scan</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="51:6" pos:end="82:0">else<block pos:start="51:10" pos:end="82:0">{<block_content pos:start="53:13" pos:end="77:13"> <comment type="line" pos:start="51:12" pos:end="51:25">//second field</comment>

            <decl_stmt pos:start="53:13" pos:end="53:18"><decl pos:start="53:13" pos:end="53:17"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:17">i</name></decl>;</decl_stmt>



            <if_stmt pos:start="57:13" pos:end="63:13"><if pos:start="57:13" pos:end="63:13">if<condition pos:start="57:15" pos:end="57:39">(<expr pos:start="57:16" pos:end="57:38"><operator pos:start="57:16" pos:end="57:16">!</operator><name pos:start="57:17" pos:end="57:38"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:38">current_picture_ptr</name></name></expr>)</condition><block pos:start="57:40" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:26">

                <expr_stmt pos:start="59:17" pos:end="59:72"><expr pos:start="59:17" pos:end="59:71"><call pos:start="59:17" pos:end="59:71"><name pos:start="59:17" pos:end="59:22">av_log</name><argument_list pos:start="59:23" pos:end="59:71">(<argument pos:start="59:24" pos:end="59:31"><expr pos:start="59:24" pos:end="59:31"><name pos:start="59:24" pos:end="59:31"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:31">avctx</name></name></expr></argument>, <argument pos:start="59:34" pos:end="59:45"><expr pos:start="59:34" pos:end="59:45"><name pos:start="59:34" pos:end="59:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:48" pos:end="59:70"><expr pos:start="59:48" pos:end="59:70"><literal type="string" pos:start="59:48" pos:end="59:70">"first field missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="61:17" pos:end="61:26">return <expr pos:start="61:24" pos:end="61:25"><operator pos:start="61:24" pos:end="61:24">-</operator><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <for pos:start="67:13" pos:end="77:13">for<control pos:start="67:16" pos:end="67:30">(<init pos:start="67:17" pos:end="67:20"><expr pos:start="67:17" pos:end="67:19"><name pos:start="67:17" pos:end="67:17">i</name><operator pos:start="67:18" pos:end="67:18">=</operator><literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>;</init> <condition pos:start="67:22" pos:end="67:25"><expr pos:start="67:22" pos:end="67:24"><name pos:start="67:22" pos:end="67:22">i</name><operator pos:start="67:23" pos:end="67:23">&lt;</operator><literal type="number" pos:start="67:24" pos:end="67:24">4</literal></expr>;</condition> <incr pos:start="67:27" pos:end="67:29"><expr pos:start="67:27" pos:end="67:29"><name pos:start="67:27" pos:end="67:27">i</name><operator pos:start="67:28" pos:end="67:29">++</operator></expr></incr>)</control><block pos:start="67:31" pos:end="77:13">{<block_content pos:start="69:17" pos:end="75:17">

                <expr_stmt pos:start="69:17" pos:end="69:77"><expr pos:start="69:17" pos:end="69:76"><name pos:start="69:17" pos:end="69:42"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:34">current_picture</name><operator pos:start="69:35" pos:end="69:35">.</operator><name pos:start="69:36" pos:end="69:39">data</name><index pos:start="69:40" pos:end="69:42">[<expr pos:start="69:41" pos:end="69:41"><name pos:start="69:41" pos:end="69:41">i</name></expr>]</index></name> <operator pos:start="69:44" pos:end="69:44">=</operator> <name pos:start="69:46" pos:end="69:76"><name pos:start="69:46" pos:end="69:46">s</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:67">current_picture_ptr</name><operator pos:start="69:68" pos:end="69:69">-&gt;</operator><name pos:start="69:70" pos:end="69:73">data</name><index pos:start="69:74" pos:end="69:76">[<expr pos:start="69:75" pos:end="69:75"><name pos:start="69:75" pos:end="69:75">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="75:17"><if pos:start="71:17" pos:end="75:17">if<condition pos:start="71:19" pos:end="71:61">(<expr pos:start="71:20" pos:end="71:60"><name pos:start="71:20" pos:end="71:39"><name pos:start="71:20" pos:end="71:20">s</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:39">picture_structure</name></name> <operator pos:start="71:41" pos:end="71:42">==</operator> <name pos:start="71:44" pos:end="71:60">PICT_BOTTOM_FIELD</name></expr>)</condition><block pos:start="71:62" pos:end="75:17">{<block_content pos:start="73:21" pos:end="73:86">

                    <expr_stmt pos:start="73:21" pos:end="73:86"><expr pos:start="73:21" pos:end="73:85"><name pos:start="73:21" pos:end="73:46"><name pos:start="73:21" pos:end="73:21">s</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:38">current_picture</name><operator pos:start="73:39" pos:end="73:39">.</operator><name pos:start="73:40" pos:end="73:43">data</name><index pos:start="73:44" pos:end="73:46">[<expr pos:start="73:45" pos:end="73:45"><name pos:start="73:45" pos:end="73:45">i</name></expr>]</index></name> <operator pos:start="73:48" pos:end="73:49">+=</operator> <name pos:start="73:51" pos:end="73:85"><name pos:start="73:51" pos:end="73:51">s</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:72">current_picture_ptr</name><operator pos:start="73:73" pos:end="73:74">-&gt;</operator><name pos:start="73:75" pos:end="73:82">linesize</name><index pos:start="73:83" pos:end="73:85">[<expr pos:start="73:84" pos:end="73:84"><name pos:start="73:84" pos:end="73:84">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

<cpp:if pos:start="81:1" pos:end="81:28">#<cpp:directive pos:start="81:2" pos:end="81:3">if</cpp:directive> <expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:28">CONFIG_MPEG_XVMC_DECODER</name></expr></cpp:if>

<comment type="line" pos:start="83:1" pos:end="83:47">// MPV_frame_start will call this function too,</comment>

<comment type="line" pos:start="85:1" pos:end="85:40">// but we need to call it on every field</comment>

    <if_stmt pos:start="87:5" pos:end="92:0"><if pos:start="87:5" pos:end="92:0">if<condition pos:start="87:7" pos:end="87:35">(<expr pos:start="87:8" pos:end="87:34"><name pos:start="87:8" pos:end="87:34"><name pos:start="87:8" pos:end="87:8">s</name><operator pos:start="87:9" pos:end="87:10">-&gt;</operator><name pos:start="87:11" pos:end="87:15">avctx</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:34">xvmc_acceleration</name></name></expr>)</condition><block type="pseudo" pos:start="89:10" pos:end="92:0"><block_content pos:start="89:10" pos:end="92:0">

         <expr_stmt pos:start="89:10" pos:end="92:0"><expr pos:start="89:10" pos:end="89:37"><call pos:start="89:10" pos:end="89:37"><name pos:start="89:10" pos:end="89:28">ff_xvmc_field_start</name><argument_list pos:start="89:29" pos:end="89:37">(<argument pos:start="89:30" pos:end="89:30"><expr pos:start="89:30" pos:end="89:30"><name pos:start="89:30" pos:end="89:30">s</name></expr></argument>,<argument pos:start="89:32" pos:end="89:36"><expr pos:start="89:32" pos:end="89:36"><name pos:start="89:32" pos:end="89:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="91:1" pos:end="91:6">#<cpp:directive pos:start="91:2" pos:end="91:6">endif</cpp:directive></cpp:endif>



    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
