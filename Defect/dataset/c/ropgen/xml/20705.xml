<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20705.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">vfio_populate_device</name><parameter_list pos:start="1:32" pos:end="1:53">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:42">VFIODevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:52">vbasedev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:15">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">VFIOINTp</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">intp</name></decl>, <decl pos:start="5:21" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:14"><modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name> <init pos:start="7:16" pos:end="7:19">= <expr pos:start="7:18" pos:end="7:19"><operator pos:start="7:18" pos:end="7:18">-</operator><literal type="number" pos:start="7:19" pos:end="7:19">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="11:61"><decl pos:start="9:5" pos:end="11:60"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">VFIOPlatformDevice</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:28">vdev</name> <init pos:start="9:30" pos:end="11:60">=

        <expr pos:start="11:9" pos:end="11:60"><call pos:start="11:9" pos:end="11:60"><name pos:start="11:9" pos:end="11:20">container_of</name><argument_list pos:start="11:21" pos:end="11:60">(<argument pos:start="11:22" pos:end="11:29"><expr pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:29">vbasedev</name></expr></argument>, <argument pos:start="11:32" pos:end="11:49"><expr pos:start="11:32" pos:end="11:49"><name pos:start="11:32" pos:end="11:49">VFIOPlatformDevice</name></expr></argument>, <argument pos:start="11:52" pos:end="11:59"><expr pos:start="11:52" pos:end="11:59"><name pos:start="11:52" pos:end="11:59">vbasedev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:56">(<expr pos:start="15:9" pos:end="15:55"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:25"><name pos:start="15:11" pos:end="15:18">vbasedev</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:25">flags</name></name> <operator pos:start="15:27" pos:end="15:27">&amp;</operator> <name pos:start="15:29" pos:end="15:54">VFIO_DEVICE_FLAGS_PLATFORM</name><operator pos:start="15:55" pos:end="15:55">)</operator></expr>)</condition> <block pos:start="15:58" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:19">

        <expr_stmt pos:start="17:9" pos:end="17:63"><expr pos:start="17:9" pos:end="17:62"><call pos:start="17:9" pos:end="17:62"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="17:62">(<argument pos:start="17:22" pos:end="17:61"><expr pos:start="17:22" pos:end="17:61"><literal type="string" pos:start="17:22" pos:end="17:61">"vfio: Um, this isn't a platform device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:64"><expr pos:start="25:5" pos:end="25:63"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:8">vdev</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:17">regions</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="25:63"><name pos:start="25:21" pos:end="25:26">g_new0</name><argument_list pos:start="25:27" pos:end="25:63">(<argument pos:start="25:28" pos:end="25:39"><expr pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:37">VFIORegion</name> <operator pos:start="25:39" pos:end="25:39">*</operator></expr></argument>, <argument pos:start="25:42" pos:end="25:62"><expr pos:start="25:42" pos:end="25:62"><name pos:start="25:42" pos:end="25:62"><name pos:start="25:42" pos:end="25:49">vbasedev</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:62">num_regions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="75:5">for <control pos:start="29:9" pos:end="29:47">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:42"><expr pos:start="29:17" pos:end="29:41"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:41"><name pos:start="29:21" pos:end="29:28">vbasedev</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:41">num_regions</name></name></expr>;</condition> <incr pos:start="29:44" pos:end="29:46"><expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:44">i</name><operator pos:start="29:45" pos:end="29:46">++</operator></expr></incr>)</control> <block pos:start="29:49" pos:end="75:5">{<block_content pos:start="31:9" pos:end="73:59">

        <decl_stmt pos:start="31:9" pos:end="31:73"><decl pos:start="31:9" pos:end="31:72"><type pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:14">struct</name> <name pos:start="31:16" pos:end="31:31">vfio_region_info</name></name></type> <name pos:start="31:33" pos:end="31:40">reg_info</name> <init pos:start="31:42" pos:end="31:72">= <expr pos:start="31:44" pos:end="31:72"><block pos:start="31:44" pos:end="31:72">{ <expr pos:start="31:46" pos:end="31:70"><operator pos:start="31:46" pos:end="31:46">.</operator><name pos:start="31:47" pos:end="31:51">argsz</name> <operator pos:start="31:53" pos:end="31:53">=</operator> sizeof<operator pos:start="31:61" pos:end="31:61">(</operator><name pos:start="31:62" pos:end="31:69">reg_info</name><operator pos:start="31:70" pos:end="31:70">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:24"><decl pos:start="33:9" pos:end="33:23"><type pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:18">VFIORegion</name> <modifier pos:start="33:20" pos:end="33:20">*</modifier></type><name pos:start="33:21" pos:end="33:23">ptr</name></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:57"><expr pos:start="37:9" pos:end="37:56"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:12">vdev</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:21">regions</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">i</name></expr>]</index></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:56"><name pos:start="37:28" pos:end="37:36">g_malloc0</name><argument_list pos:start="37:37" pos:end="37:56">(<argument pos:start="37:38" pos:end="37:55"><expr pos:start="37:38" pos:end="37:55"><sizeof pos:start="37:38" pos:end="37:55">sizeof<argument_list pos:start="37:44" pos:end="37:55">(<argument pos:start="37:45" pos:end="37:54"><expr pos:start="37:45" pos:end="37:54"><name pos:start="37:45" pos:end="37:54">VFIORegion</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:11">ptr</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:30"><name pos:start="39:15" pos:end="39:18">vdev</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:27">regions</name><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><name pos:start="39:29" pos:end="39:29">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:27"><expr pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:16">reg_info</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:22">index</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:26">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:74"><expr pos:start="43:9" pos:end="43:73"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:73"><name pos:start="43:15" pos:end="43:19">ioctl</name><argument_list pos:start="43:20" pos:end="43:73">(<argument pos:start="43:21" pos:end="43:32"><expr pos:start="43:21" pos:end="43:32"><name pos:start="43:21" pos:end="43:32"><name pos:start="43:21" pos:end="43:28">vbasedev</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:32">fd</name></name></expr></argument>, <argument pos:start="43:35" pos:end="43:61"><expr pos:start="43:35" pos:end="43:61"><name pos:start="43:35" pos:end="43:61">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="43:64" pos:end="43:72"><expr pos:start="43:64" pos:end="43:72"><operator pos:start="43:64" pos:end="43:64">&amp;</operator><name pos:start="43:65" pos:end="43:72">reg_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:16">(<expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">ret</name></expr>)</condition> <block pos:start="45:18" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:27">

            <expr_stmt pos:start="47:13" pos:end="47:70"><expr pos:start="47:13" pos:end="47:69"><call pos:start="47:13" pos:end="47:69"><name pos:start="47:13" pos:end="47:24">error_report</name><argument_list pos:start="47:25" pos:end="47:69">(<argument pos:start="47:26" pos:end="47:65"><expr pos:start="47:26" pos:end="47:65"><literal type="string" pos:start="47:26" pos:end="47:65">"vfio: Error getting region %d info: %m"</literal></expr></argument>, <argument pos:start="47:68" pos:end="47:68"><expr pos:start="47:68" pos:end="47:68"><name pos:start="47:68" pos:end="47:68">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:27">goto <name pos:start="49:18" pos:end="49:26">reg_error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:11">ptr</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:18">flags</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:35"><name pos:start="53:22" pos:end="53:29">reg_info</name><operator pos:start="53:30" pos:end="53:30">.</operator><name pos:start="53:31" pos:end="53:35">flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">ptr</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">size</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:33"><name pos:start="55:21" pos:end="55:28">reg_info</name><operator pos:start="55:29" pos:end="55:29">.</operator><name pos:start="55:30" pos:end="55:33">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:11">ptr</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:22">fd_offset</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:40"><name pos:start="57:26" pos:end="57:33">reg_info</name><operator pos:start="57:34" pos:end="57:34">.</operator><name pos:start="57:35" pos:end="57:40">offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:20"><expr pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ptr</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:15">nr</name></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:19">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:11">ptr</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:21">vbasedev</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:32">vbasedev</name></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="73:59"><expr pos:start="65:9" pos:end="73:58"><call pos:start="65:9" pos:end="73:58"><name pos:start="65:9" pos:end="65:44">trace_vfio_platform_populate_regions</name><argument_list pos:start="65:45" pos:end="73:58">(<argument pos:start="65:46" pos:end="65:52"><expr pos:start="65:46" pos:end="65:52"><name pos:start="65:46" pos:end="65:52"><name pos:start="65:46" pos:end="65:48">ptr</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:52">nr</name></name></expr></argument>,

                            <argument pos:start="67:29" pos:end="67:53"><expr pos:start="67:29" pos:end="67:53"><operator pos:start="67:29" pos:end="67:29">(</operator><name pos:start="67:30" pos:end="67:37">unsigned</name> <name pos:start="67:39" pos:end="67:42">long</name><operator pos:start="67:43" pos:end="67:43">)</operator><name pos:start="67:44" pos:end="67:53"><name pos:start="67:44" pos:end="67:46">ptr</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:53">flags</name></name></expr></argument>,

                            <argument pos:start="69:29" pos:end="69:52"><expr pos:start="69:29" pos:end="69:52"><operator pos:start="69:29" pos:end="69:29">(</operator><name pos:start="69:30" pos:end="69:37">unsigned</name> <name pos:start="69:39" pos:end="69:42">long</name><operator pos:start="69:43" pos:end="69:43">)</operator><name pos:start="69:44" pos:end="69:52"><name pos:start="69:44" pos:end="69:46">ptr</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:52">size</name></name></expr></argument>,

                            <argument pos:start="71:29" pos:end="71:45"><expr pos:start="71:29" pos:end="71:45"><name pos:start="71:29" pos:end="71:45"><name pos:start="71:29" pos:end="71:31">ptr</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:41">vbasedev</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:45">fd</name></name></expr></argument>,

                            <argument pos:start="73:29" pos:end="73:57"><expr pos:start="73:29" pos:end="73:57"><operator pos:start="73:29" pos:end="73:29">(</operator><name pos:start="73:30" pos:end="73:37">unsigned</name> <name pos:start="73:39" pos:end="73:42">long</name><operator pos:start="73:43" pos:end="73:43">)</operator><name pos:start="73:44" pos:end="73:57"><name pos:start="73:44" pos:end="73:46">ptr</name><operator pos:start="73:47" pos:end="73:48">-&gt;</operator><name pos:start="73:49" pos:end="73:57">fd_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="79:5" pos:end="81:65"><expr pos:start="79:5" pos:end="81:64"><name pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:8">vdev</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:20">mmap_timer</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="81:64"><name pos:start="79:24" pos:end="79:35">timer_new_ms</name><argument_list pos:start="79:36" pos:end="81:64">(<argument pos:start="79:37" pos:end="79:54"><expr pos:start="79:37" pos:end="79:54"><name pos:start="79:37" pos:end="79:54">QEMU_CLOCK_VIRTUAL</name></expr></argument>,

                                    <argument pos:start="81:37" pos:end="81:57"><expr pos:start="81:37" pos:end="81:57"><name pos:start="81:37" pos:end="81:57">vfio_intp_mmap_enable</name></expr></argument>, <argument pos:start="81:60" pos:end="81:63"><expr pos:start="81:60" pos:end="81:63"><name pos:start="81:60" pos:end="81:63">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:45"><expr pos:start="85:5" pos:end="85:44"><call pos:start="85:5" pos:end="85:44"><name pos:start="85:5" pos:end="85:17">QSIMPLEQ_INIT</name><argument_list pos:start="85:18" pos:end="85:44">(<argument pos:start="85:19" pos:end="85:43"><expr pos:start="85:19" pos:end="85:43"><operator pos:start="85:19" pos:end="85:19">&amp;</operator><name pos:start="85:20" pos:end="85:43"><name pos:start="85:20" pos:end="85:23">vdev</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:43">pending_intp_queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="89:5" pos:end="127:5">for <control pos:start="89:9" pos:end="89:44">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:39"><expr pos:start="89:17" pos:end="89:38"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:38"><name pos:start="89:21" pos:end="89:28">vbasedev</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:38">num_irqs</name></name></expr>;</condition> <incr pos:start="89:41" pos:end="89:43"><expr pos:start="89:41" pos:end="89:43"><name pos:start="89:41" pos:end="89:41">i</name><operator pos:start="89:42" pos:end="89:43">++</operator></expr></incr>)</control> <block pos:start="89:46" pos:end="127:5">{<block_content pos:start="91:9" pos:end="125:9">

        <decl_stmt pos:start="91:9" pos:end="91:60"><decl pos:start="91:9" pos:end="91:59"><type pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:14">struct</name> <name pos:start="91:16" pos:end="91:28">vfio_irq_info</name></name></type> <name pos:start="91:30" pos:end="91:32">irq</name> <init pos:start="91:34" pos:end="91:59">= <expr pos:start="91:36" pos:end="91:59"><block pos:start="91:36" pos:end="91:59">{ <expr pos:start="91:38" pos:end="91:57"><operator pos:start="91:38" pos:end="91:38">.</operator><name pos:start="91:39" pos:end="91:43">argsz</name> <operator pos:start="91:45" pos:end="91:45">=</operator> sizeof<operator pos:start="91:53" pos:end="91:53">(</operator><name pos:start="91:54" pos:end="91:56">irq</name><operator pos:start="91:57" pos:end="91:57">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:22"><expr pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:11">irq</name><operator pos:start="95:12" pos:end="95:12">.</operator><name pos:start="95:13" pos:end="95:17">index</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:21">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:66"><expr pos:start="97:9" pos:end="97:65"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <call pos:start="97:15" pos:end="97:65"><name pos:start="97:15" pos:end="97:19">ioctl</name><argument_list pos:start="97:20" pos:end="97:65">(<argument pos:start="97:21" pos:end="97:32"><expr pos:start="97:21" pos:end="97:32"><name pos:start="97:21" pos:end="97:32"><name pos:start="97:21" pos:end="97:28">vbasedev</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:32">fd</name></name></expr></argument>, <argument pos:start="97:35" pos:end="97:58"><expr pos:start="97:35" pos:end="97:58"><name pos:start="97:35" pos:end="97:58">VFIO_DEVICE_GET_IRQ_INFO</name></expr></argument>, <argument pos:start="97:61" pos:end="97:64"><expr pos:start="97:61" pos:end="97:64"><operator pos:start="97:61" pos:end="97:61">&amp;</operator><name pos:start="97:62" pos:end="97:64">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="125:9"><if pos:start="99:9" pos:end="107:9">if <condition pos:start="99:12" pos:end="99:16">(<expr pos:start="99:13" pos:end="99:15"><name pos:start="99:13" pos:end="99:15">ret</name></expr>)</condition> <block pos:start="99:18" pos:end="107:9">{<block_content pos:start="101:13" pos:end="105:25">

            <expr_stmt pos:start="101:13" pos:end="103:41"><expr pos:start="101:13" pos:end="103:40"><call pos:start="101:13" pos:end="103:40"><name pos:start="101:13" pos:end="101:24">error_printf</name><argument_list pos:start="101:25" pos:end="103:40">(<argument pos:start="101:26" pos:end="101:65"><expr pos:start="101:26" pos:end="101:65"><literal type="string" pos:start="101:26" pos:end="101:65">"vfio: error getting device %s irq info"</literal></expr></argument>,

                         <argument pos:start="103:26" pos:end="103:39"><expr pos:start="103:26" pos:end="103:39"><name pos:start="103:26" pos:end="103:39"><name pos:start="103:26" pos:end="103:33">vbasedev</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:39">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="105:13" pos:end="105:25">goto <name pos:start="105:18" pos:end="105:24">irq_err</name>;</goto>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="125:9">else <block pos:start="107:16" pos:end="125:9">{<block_content pos:start="109:13" pos:end="123:13">

            <expr_stmt pos:start="109:13" pos:end="113:63"><expr pos:start="109:13" pos:end="113:62"><call pos:start="109:13" pos:end="113:62"><name pos:start="109:13" pos:end="109:51">trace_vfio_platform_populate_interrupts</name><argument_list pos:start="109:52" pos:end="113:62">(<argument pos:start="109:53" pos:end="109:61"><expr pos:start="109:53" pos:end="109:61"><name pos:start="109:53" pos:end="109:61"><name pos:start="109:53" pos:end="109:55">irq</name><operator pos:start="109:56" pos:end="109:56">.</operator><name pos:start="109:57" pos:end="109:61">index</name></name></expr></argument>,

                                                    <argument pos:start="111:53" pos:end="111:61"><expr pos:start="111:53" pos:end="111:61"><name pos:start="111:53" pos:end="111:61"><name pos:start="111:53" pos:end="111:55">irq</name><operator pos:start="111:56" pos:end="111:56">.</operator><name pos:start="111:57" pos:end="111:61">count</name></name></expr></argument>,

                                                    <argument pos:start="113:53" pos:end="113:61"><expr pos:start="113:53" pos:end="113:61"><name pos:start="113:53" pos:end="113:61"><name pos:start="113:53" pos:end="113:55">irq</name><operator pos:start="113:56" pos:end="113:56">.</operator><name pos:start="113:57" pos:end="113:61">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:49"><expr pos:start="115:13" pos:end="115:48"><name pos:start="115:13" pos:end="115:16">intp</name> <operator pos:start="115:18" pos:end="115:18">=</operator> <call pos:start="115:20" pos:end="115:48"><name pos:start="115:20" pos:end="115:33">vfio_init_intp</name><argument_list pos:start="115:34" pos:end="115:48">(<argument pos:start="115:35" pos:end="115:42"><expr pos:start="115:35" pos:end="115:42"><name pos:start="115:35" pos:end="115:42">vbasedev</name></expr></argument>, <argument pos:start="115:45" pos:end="115:47"><expr pos:start="115:45" pos:end="115:47"><name pos:start="115:45" pos:end="115:47">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="123:13"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="117:22">(<expr pos:start="117:17" pos:end="117:21"><operator pos:start="117:17" pos:end="117:17">!</operator><name pos:start="117:18" pos:end="117:21">intp</name></expr>)</condition> <block pos:start="117:24" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:29">

                <expr_stmt pos:start="119:17" pos:end="119:68"><expr pos:start="119:17" pos:end="119:67"><call pos:start="119:17" pos:end="119:67"><name pos:start="119:17" pos:end="119:28">error_report</name><argument_list pos:start="119:29" pos:end="119:67">(<argument pos:start="119:30" pos:end="119:63"><expr pos:start="119:30" pos:end="119:63"><literal type="string" pos:start="119:30" pos:end="119:63">"vfio: Error installing IRQ %d up"</literal></expr></argument>, <argument pos:start="119:66" pos:end="119:66"><expr pos:start="119:66" pos:end="119:66"><name pos:start="119:66" pos:end="119:66">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="121:17" pos:end="121:29">goto <name pos:start="121:22" pos:end="121:28">irq_err</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

<label pos:start="131:1" pos:end="131:8"><name pos:start="131:1" pos:end="131:7">irq_err</name>:</label>

    <expr_stmt pos:start="133:5" pos:end="133:32"><expr pos:start="133:5" pos:end="133:31"><call pos:start="133:5" pos:end="133:31"><name pos:start="133:5" pos:end="133:13">timer_del</name><argument_list pos:start="133:14" pos:end="133:31">(<argument pos:start="133:15" pos:end="133:30"><expr pos:start="133:15" pos:end="133:30"><name pos:start="133:15" pos:end="133:30"><name pos:start="133:15" pos:end="133:18">vdev</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:30">mmap_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="135:5" pos:end="135:57"><name pos:start="135:5" pos:end="135:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="135:23" pos:end="135:57">(<argument pos:start="135:24" pos:end="135:27">intp</argument>, <argument pos:start="135:30" pos:end="135:45">&amp;vdev-&gt;intp_list</argument>, <argument pos:start="135:48" pos:end="135:51">next</argument>, <argument pos:start="135:54" pos:end="135:56">tmp</argument>)</argument_list></macro> <block pos:start="135:59" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:21">

        <expr_stmt pos:start="137:9" pos:end="137:33"><expr pos:start="137:9" pos:end="137:32"><call pos:start="137:9" pos:end="137:32"><name pos:start="137:9" pos:end="137:20">QLIST_REMOVE</name><argument_list pos:start="137:21" pos:end="137:32">(<argument pos:start="137:22" pos:end="137:25"><expr pos:start="137:22" pos:end="137:25"><name pos:start="137:22" pos:end="137:25">intp</name></expr></argument>, <argument pos:start="137:28" pos:end="137:31"><expr pos:start="137:28" pos:end="137:31"><name pos:start="137:28" pos:end="137:31">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:21"><expr pos:start="139:9" pos:end="139:20"><call pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:14">g_free</name><argument_list pos:start="139:15" pos:end="139:20">(<argument pos:start="139:16" pos:end="139:19"><expr pos:start="139:16" pos:end="139:19"><name pos:start="139:16" pos:end="139:19">intp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<label pos:start="143:1" pos:end="143:10"><name pos:start="143:1" pos:end="143:9">reg_error</name>:</label>

    <for pos:start="145:5" pos:end="149:5">for <control pos:start="145:9" pos:end="145:47">(<init pos:start="145:10" pos:end="145:15"><expr pos:start="145:10" pos:end="145:14"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">0</literal></expr>;</init> <condition pos:start="145:17" pos:end="145:42"><expr pos:start="145:17" pos:end="145:41"><name pos:start="145:17" pos:end="145:17">i</name> <operator pos:start="145:19" pos:end="145:19">&lt;</operator> <name pos:start="145:21" pos:end="145:41"><name pos:start="145:21" pos:end="145:28">vbasedev</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:41">num_regions</name></name></expr>;</condition> <incr pos:start="145:44" pos:end="145:46"><expr pos:start="145:44" pos:end="145:46"><name pos:start="145:44" pos:end="145:44">i</name><operator pos:start="145:45" pos:end="145:46">++</operator></expr></incr>)</control> <block pos:start="145:49" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:33">

        <expr_stmt pos:start="147:9" pos:end="147:33"><expr pos:start="147:9" pos:end="147:32"><call pos:start="147:9" pos:end="147:32"><name pos:start="147:9" pos:end="147:14">g_free</name><argument_list pos:start="147:15" pos:end="147:32">(<argument pos:start="147:16" pos:end="147:31"><expr pos:start="147:16" pos:end="147:31"><name pos:start="147:16" pos:end="147:31"><name pos:start="147:16" pos:end="147:19">vdev</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:28">regions</name><index pos:start="147:29" pos:end="147:31">[<expr pos:start="147:30" pos:end="147:30"><name pos:start="147:30" pos:end="147:30">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="151:5" pos:end="151:26"><expr pos:start="151:5" pos:end="151:25"><call pos:start="151:5" pos:end="151:25"><name pos:start="151:5" pos:end="151:10">g_free</name><argument_list pos:start="151:11" pos:end="151:25">(<argument pos:start="151:12" pos:end="151:24"><expr pos:start="151:12" pos:end="151:24"><name pos:start="151:12" pos:end="151:24"><name pos:start="151:12" pos:end="151:15">vdev</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:24">regions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="153:5" pos:end="153:15">return <expr pos:start="153:12" pos:end="153:14"><name pos:start="153:12" pos:end="153:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
