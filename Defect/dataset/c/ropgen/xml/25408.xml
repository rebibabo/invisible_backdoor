<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25408.c" pos:tabs="8"><function pos:start="1:1" pos:end="138:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">rscc_decode_frame</name><parameter_list pos:start="1:29" pos:end="2:69">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,
                                     <parameter pos:start="2:38" pos:end="2:51"><decl pos:start="2:38" pos:end="2:51"><type pos:start="2:38" pos:end="2:51"><name pos:start="2:38" pos:end="2:40">int</name> <modifier pos:start="2:42" pos:end="2:42">*</modifier></type><name pos:start="2:43" pos:end="2:51">got_frame</name></decl></parameter>, <parameter pos:start="2:54" pos:end="2:68"><decl pos:start="2:54" pos:end="2:68"><type pos:start="2:54" pos:end="2:68"><name pos:start="2:54" pos:end="2:61">AVPacket</name> <modifier pos:start="2:63" pos:end="2:63">*</modifier></type><name pos:start="2:64" pos:end="2:68">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="138:15">{<block_content pos:start="4:5" pos:end="138:15">
    <decl_stmt pos:start="4:5" pos:end="4:40"><decl pos:start="4:5" pos:end="4:39"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:15">RsccContext</name> <modifier pos:start="4:17" pos:end="4:17">*</modifier></type><name pos:start="4:18" pos:end="4:20">ctx</name> <init pos:start="4:22" pos:end="4:39">= <expr pos:start="4:24" pos:end="4:39"><name pos:start="4:24" pos:end="4:39"><name pos:start="4:24" pos:end="4:28">avctx</name><operator pos:start="4:29" pos:end="4:30">-&gt;</operator><name pos:start="4:31" pos:end="4:39">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">GetByteContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">gbc</name> <init pos:start="5:25" pos:end="5:35">= <expr pos:start="5:27" pos:end="5:35"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:35"><name pos:start="5:28" pos:end="5:30">ctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:35">gbc</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:29"><decl pos:start="6:5" pos:end="6:28"><type pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:18">GetByteContext</name></type> <name pos:start="6:20" pos:end="6:28">tiles_gbc</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">frame</name> <init pos:start="7:20" pos:end="7:25">= <expr pos:start="7:22" pos:end="7:25"><name pos:start="7:22" pos:end="7:25">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:32"><decl pos:start="8:5" pos:end="8:25"><type pos:start="8:5" pos:end="8:19"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:17">uint8_t</name> <modifier pos:start="8:19" pos:end="8:19">*</modifier></type><name pos:start="8:20" pos:end="8:25">pixels</name></decl>, <decl pos:start="8:28" pos:end="8:31"><type ref="prev" pos:start="8:5" pos:end="8:19"><modifier pos:start="8:28" pos:end="8:28">*</modifier></type><name pos:start="8:29" pos:end="8:31">raw</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:27">inflated_tiles</name> <init pos:start="9:29" pos:end="9:34">= <expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:46"><decl pos:start="10:5" pos:end="10:16"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:16">tiles_nb</name></decl>, <decl pos:start="10:19" pos:end="10:29"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:19" pos:end="10:29">packed_size</name></decl>, <decl pos:start="10:32" pos:end="10:45"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:32" pos:end="10:41">pixel_size</name> <init pos:start="10:43" pos:end="10:45">= <expr pos:start="10:45" pos:end="10:45"><literal type="number" pos:start="10:45" pos:end="10:45">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:52"><expr pos:start="12:5" pos:end="12:51"><call pos:start="12:5" pos:end="12:51"><name pos:start="12:5" pos:end="12:20">bytestream2_init</name><argument_list pos:start="12:21" pos:end="12:51">(<argument pos:start="12:22" pos:end="12:24"><expr pos:start="12:22" pos:end="12:24"><name pos:start="12:22" pos:end="12:24">gbc</name></expr></argument>, <argument pos:start="12:27" pos:end="12:37"><expr pos:start="12:27" pos:end="12:37"><name pos:start="12:27" pos:end="12:37"><name pos:start="12:27" pos:end="12:31">avpkt</name><operator pos:start="12:32" pos:end="12:33">-&gt;</operator><name pos:start="12:34" pos:end="12:37">data</name></name></expr></argument>, <argument pos:start="12:40" pos:end="12:50"><expr pos:start="12:40" pos:end="12:50"><name pos:start="12:40" pos:end="12:50"><name pos:start="12:40" pos:end="12:44">avpkt</name><operator pos:start="12:45" pos:end="12:46">-&gt;</operator><name pos:start="12:47" pos:end="12:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="13:5" pos:end="13:20">/* Size check */</comment>
    <if_stmt pos:start="14:5" pos:end="138:15"><if pos:start="14:5" pos:end="138:15">if <condition pos:start="14:8" pos:end="14:45">(<expr pos:start="14:9" pos:end="14:44"><call pos:start="14:9" pos:end="14:39"><name pos:start="14:9" pos:end="14:34">bytestream2_get_bytes_left</name><argument_list pos:start="14:35" pos:end="14:39">(<argument pos:start="14:36" pos:end="14:38"><expr pos:start="14:36" pos:end="14:38"><name pos:start="14:36" pos:end="14:38">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="14:41" pos:end="14:41">&lt;</operator> <literal type="number" pos:start="14:43" pos:end="14:44">12</literal></expr>)</condition> <block pos:start="14:47" pos:end="138:15">{<block_content pos:start="15:9" pos:end="138:15">
        <expr_stmt pos:start="15:9" pos:end="15:76"><expr pos:start="15:9" pos:end="15:75"><call pos:start="15:9" pos:end="15:75"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:75">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:37" pos:end="15:61"><expr pos:start="15:37" pos:end="15:61"><literal type="string" pos:start="15:37" pos:end="15:61">"Packet too small (%d)\n"</literal></expr></argument>, <argument pos:start="15:64" pos:end="15:74"><expr pos:start="15:64" pos:end="15:74"><name pos:start="15:64" pos:end="15:74"><name pos:start="15:64" pos:end="15:68">avpkt</name><operator pos:start="15:69" pos:end="15:70">-&gt;</operator><name pos:start="15:71" pos:end="15:74">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="16:9" pos:end="16:35">return <expr pos:start="16:16" pos:end="16:34"><name pos:start="16:16" pos:end="16:34">AVERROR_INVALIDDATA</name></expr>;</return>
    <comment type="block" pos:start="17:5" pos:end="17:54">/* Read number of tiles, and allocate the array */</comment>
    <expr_stmt pos:start="18:5" pos:end="18:41"><expr pos:start="18:5" pos:end="18:40"><name pos:start="18:5" pos:end="18:12">tiles_nb</name> <operator pos:start="18:14" pos:end="18:14">=</operator> <call pos:start="18:16" pos:end="18:40"><name pos:start="18:16" pos:end="18:35">bytestream2_get_le16</name><argument_list pos:start="18:36" pos:end="18:40">(<argument pos:start="18:37" pos:end="18:39"><expr pos:start="18:37" pos:end="18:39"><name pos:start="18:37" pos:end="18:39">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="20:51"><expr pos:start="19:5" pos:end="20:50"><call pos:start="19:5" pos:end="20:50"><name pos:start="19:5" pos:end="19:18">av_fast_malloc</name><argument_list pos:start="19:19" pos:end="20:50">(<argument pos:start="19:20" pos:end="19:30"><expr pos:start="19:20" pos:end="19:30"><operator pos:start="19:20" pos:end="19:20">&amp;</operator><name pos:start="19:21" pos:end="19:30"><name pos:start="19:21" pos:end="19:23">ctx</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:30">tiles</name></name></expr></argument>, <argument pos:start="19:33" pos:end="19:48"><expr pos:start="19:33" pos:end="19:48"><operator pos:start="19:33" pos:end="19:33">&amp;</operator><name pos:start="19:34" pos:end="19:48"><name pos:start="19:34" pos:end="19:36">ctx</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:48">tiles_size</name></name></expr></argument>,
                   <argument pos:start="20:20" pos:end="20:49"><expr pos:start="20:20" pos:end="20:49"><name pos:start="20:20" pos:end="20:27">tiles_nb</name> <operator pos:start="20:29" pos:end="20:29">*</operator> <sizeof pos:start="20:31" pos:end="20:49">sizeof<argument_list pos:start="20:37" pos:end="20:49">(<argument pos:start="20:38" pos:end="20:48"><expr pos:start="20:38" pos:end="20:48"><operator pos:start="20:38" pos:end="20:38">*</operator><name pos:start="20:39" pos:end="20:48"><name pos:start="20:39" pos:end="20:41">ctx</name><operator pos:start="20:42" pos:end="20:43">-&gt;</operator><name pos:start="20:44" pos:end="20:48">tiles</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="138:15"><if pos:start="21:5" pos:end="138:15">if <condition pos:start="21:8" pos:end="21:20">(<expr pos:start="21:9" pos:end="21:19"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:19"><name pos:start="21:10" pos:end="21:12">ctx</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:19">tiles</name></name></expr>)</condition> <block pos:start="21:22" pos:end="138:15">{<block_content pos:start="22:9" pos:end="138:15">
        <expr_stmt pos:start="22:9" pos:end="22:30"><expr pos:start="22:9" pos:end="22:29"><name pos:start="22:9" pos:end="22:11">ret</name> <operator pos:start="22:13" pos:end="22:13">=</operator> <call pos:start="22:15" pos:end="22:29"><name pos:start="22:15" pos:end="22:21">AVERROR</name><argument_list pos:start="22:22" pos:end="22:29">(<argument pos:start="22:23" pos:end="22:28"><expr pos:start="22:23" pos:end="22:28"><name pos:start="22:23" pos:end="22:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:68"><expr pos:start="23:5" pos:end="23:67"><call pos:start="23:5" pos:end="23:67"><name pos:start="23:5" pos:end="23:10">av_log</name><argument_list pos:start="23:11" pos:end="23:67">(<argument pos:start="23:12" pos:end="23:16"><expr pos:start="23:12" pos:end="23:16"><name pos:start="23:12" pos:end="23:16">avctx</name></expr></argument>, <argument pos:start="23:19" pos:end="23:30"><expr pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="23:33" pos:end="23:56"><expr pos:start="23:33" pos:end="23:56"><literal type="string" pos:start="23:33" pos:end="23:56">"Frame with %d tiles.\n"</literal></expr></argument>, <argument pos:start="23:59" pos:end="23:66"><expr pos:start="23:59" pos:end="23:66"><name pos:start="23:59" pos:end="23:66">tiles_nb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="24:5" pos:end="26:71">/* When there are more than 5 tiles, they are packed together with
     * a size header. When that size does not match the number of tiles
     * times the tile size, it means it needs to be inflated as well */</comment>
    <if_stmt pos:start="27:5" pos:end="138:15"><if pos:start="27:5" pos:end="138:15">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:16">tiles_nb</name> <operator pos:start="27:18" pos:end="27:18">&gt;</operator> <literal type="number" pos:start="27:20" pos:end="27:20">5</literal></expr>)</condition> <block pos:start="27:23" pos:end="138:15">{<block_content pos:start="28:9" pos:end="138:15">
        <decl_stmt pos:start="28:9" pos:end="28:33"><decl pos:start="28:9" pos:end="28:32"><type pos:start="28:9" pos:end="28:14"><name pos:start="28:9" pos:end="28:14">uLongf</name></type> <name pos:start="28:16" pos:end="28:32">packed_tiles_size</name></decl>;</decl_stmt>
        <if_stmt pos:start="29:9" pos:end="32:58"><if pos:start="29:9" pos:end="30:58">if <condition pos:start="29:12" pos:end="29:26">(<expr pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:20">tiles_nb</name> <operator pos:start="29:22" pos:end="29:22">&lt;</operator> <literal type="number" pos:start="29:24" pos:end="29:25">32</literal></expr>)</condition><block type="pseudo" pos:start="30:13" pos:end="30:58"><block_content pos:start="30:13" pos:end="30:58">
            <expr_stmt pos:start="30:13" pos:end="30:58"><expr pos:start="30:13" pos:end="30:57"><name pos:start="30:13" pos:end="30:29">packed_tiles_size</name> <operator pos:start="30:31" pos:end="30:31">=</operator> <call pos:start="30:33" pos:end="30:57"><name pos:start="30:33" pos:end="30:52">bytestream2_get_byte</name><argument_list pos:start="30:53" pos:end="30:57">(<argument pos:start="30:54" pos:end="30:56"><expr pos:start="30:54" pos:end="30:56"><name pos:start="30:54" pos:end="30:56">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="31:9" pos:end="32:58">else<block type="pseudo" pos:start="32:13" pos:end="32:58"><block_content pos:start="32:13" pos:end="32:58">
            <expr_stmt pos:start="32:13" pos:end="32:58"><expr pos:start="32:13" pos:end="32:57"><name pos:start="32:13" pos:end="32:29">packed_tiles_size</name> <operator pos:start="32:31" pos:end="32:31">=</operator> <call pos:start="32:33" pos:end="32:57"><name pos:start="32:33" pos:end="32:52">bytestream2_get_le16</name><argument_list pos:start="32:53" pos:end="32:57">(<argument pos:start="32:54" pos:end="32:56"><expr pos:start="32:54" pos:end="32:56"><name pos:start="32:54" pos:end="32:56">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:73"><expr pos:start="33:9" pos:end="33:72"><call pos:start="33:9" pos:end="33:72"><name pos:start="33:9" pos:end="33:15">ff_dlog</name><argument_list pos:start="33:16" pos:end="33:72">(<argument pos:start="33:17" pos:end="33:21"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:21">avctx</name></expr></argument>, <argument pos:start="33:24" pos:end="33:52"><expr pos:start="33:24" pos:end="33:52"><literal type="string" pos:start="33:24" pos:end="33:52">"packed tiles of size %lu.\n"</literal></expr></argument>, <argument pos:start="33:55" pos:end="33:71"><expr pos:start="33:55" pos:end="33:71"><name pos:start="33:55" pos:end="33:71">packed_tiles_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="34:9" pos:end="34:78">/* If necessary, uncompress tiles, and hijack the bytestream reader */</comment>
        <if_stmt pos:start="35:9" pos:end="138:15"><if pos:start="35:9" pos:end="138:15">if <condition pos:start="35:12" pos:end="35:54">(<expr pos:start="35:13" pos:end="35:53"><name pos:start="35:13" pos:end="35:29">packed_tiles_size</name> <operator pos:start="35:31" pos:end="35:32">!=</operator> <name pos:start="35:34" pos:end="35:41">tiles_nb</name> <operator pos:start="35:43" pos:end="35:43">*</operator> <name pos:start="35:45" pos:end="35:53">TILE_SIZE</name></expr>)</condition> <block pos:start="35:56" pos:end="138:15">{<block_content pos:start="36:13" pos:end="138:15">
            <decl_stmt pos:start="36:13" pos:end="36:49"><decl pos:start="36:13" pos:end="36:48"><type pos:start="36:13" pos:end="36:18"><name pos:start="36:13" pos:end="36:18">uLongf</name></type> <name pos:start="36:20" pos:end="36:25">length</name> <init pos:start="36:27" pos:end="36:48">= <expr pos:start="36:29" pos:end="36:48"><name pos:start="36:29" pos:end="36:36">tiles_nb</name> <operator pos:start="36:38" pos:end="36:38">*</operator> <name pos:start="36:40" pos:end="36:48">TILE_SIZE</name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="37:13" pos:end="37:47"><expr pos:start="37:13" pos:end="37:46"><name pos:start="37:13" pos:end="37:26">inflated_tiles</name> <operator pos:start="37:28" pos:end="37:28">=</operator> <call pos:start="37:30" pos:end="37:46"><name pos:start="37:30" pos:end="37:38">av_malloc</name><argument_list pos:start="37:39" pos:end="37:46">(<argument pos:start="37:40" pos:end="37:45"><expr pos:start="37:40" pos:end="37:45"><name pos:start="37:40" pos:end="37:45">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="38:13" pos:end="138:15"><if pos:start="38:13" pos:end="138:15">if <condition pos:start="38:16" pos:end="38:32">(<expr pos:start="38:17" pos:end="38:31"><operator pos:start="38:17" pos:end="38:17">!</operator><name pos:start="38:18" pos:end="38:31">inflated_tiles</name></expr>)</condition> <block pos:start="38:34" pos:end="138:15">{<block_content pos:start="39:17" pos:end="138:15">
                <expr_stmt pos:start="39:17" pos:end="39:38"><expr pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:19">ret</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:37"><name pos:start="39:23" pos:end="39:29">AVERROR</name><argument_list pos:start="39:30" pos:end="39:37">(<argument pos:start="39:31" pos:end="39:36"><expr pos:start="39:31" pos:end="39:36"><name pos:start="39:31" pos:end="39:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="40:13" pos:end="41:61"><expr pos:start="40:13" pos:end="41:60"><name pos:start="40:13" pos:end="40:15">ret</name> <operator pos:start="40:17" pos:end="40:17">=</operator> <call pos:start="40:19" pos:end="41:60"><name pos:start="40:19" pos:end="40:28">uncompress</name><argument_list pos:start="40:29" pos:end="41:60">(<argument pos:start="40:30" pos:end="40:43"><expr pos:start="40:30" pos:end="40:43"><name pos:start="40:30" pos:end="40:43">inflated_tiles</name></expr></argument>, <argument pos:start="40:46" pos:end="40:52"><expr pos:start="40:46" pos:end="40:52"><operator pos:start="40:46" pos:end="40:46">&amp;</operator><name pos:start="40:47" pos:end="40:52">length</name></expr></argument>,
                             <argument pos:start="41:30" pos:end="41:40"><expr pos:start="41:30" pos:end="41:40"><name pos:start="41:30" pos:end="41:40"><name pos:start="41:30" pos:end="41:32">gbc</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:40">buffer</name></name></expr></argument>, <argument pos:start="41:43" pos:end="41:59"><expr pos:start="41:43" pos:end="41:59"><name pos:start="41:43" pos:end="41:59">packed_tiles_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="42:13" pos:end="138:15"><if pos:start="42:13" pos:end="138:15">if <condition pos:start="42:16" pos:end="42:20">(<expr pos:start="42:17" pos:end="42:19"><name pos:start="42:17" pos:end="42:19">ret</name></expr>)</condition> <block pos:start="42:22" pos:end="138:15">{<block_content pos:start="43:17" pos:end="138:15">
                <expr_stmt pos:start="43:17" pos:end="43:77"><expr pos:start="43:17" pos:end="43:76"><call pos:start="43:17" pos:end="43:76"><name pos:start="43:17" pos:end="43:22">av_log</name><argument_list pos:start="43:23" pos:end="43:76">(<argument pos:start="43:24" pos:end="43:28"><expr pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:28">avctx</name></expr></argument>, <argument pos:start="43:31" pos:end="43:42"><expr pos:start="43:31" pos:end="43:42"><name pos:start="43:31" pos:end="43:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:45" pos:end="43:70"><expr pos:start="43:45" pos:end="43:70"><literal type="string" pos:start="43:45" pos:end="43:70">"Tile deflate error %d.\n"</literal></expr></argument>, <argument pos:start="43:73" pos:end="43:75"><expr pos:start="43:73" pos:end="43:75"><name pos:start="43:73" pos:end="43:75">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="44:17" pos:end="44:38"><expr pos:start="44:17" pos:end="44:37"><name pos:start="44:17" pos:end="44:19">ret</name> <operator pos:start="44:21" pos:end="44:21">=</operator> <name pos:start="44:23" pos:end="44:37">AVERROR_UNKNOWN</name></expr>;</expr_stmt>
            <comment type="block" pos:start="45:13" pos:end="46:66">/* Skip the compressed tile section in the main byte reader,
             * and point it to read the newly uncompressed data */</comment>
            <expr_stmt pos:start="47:13" pos:end="47:53"><expr pos:start="47:13" pos:end="47:52"><call pos:start="47:13" pos:end="47:52"><name pos:start="47:13" pos:end="47:28">bytestream2_skip</name><argument_list pos:start="47:29" pos:end="47:52">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">gbc</name></expr></argument>, <argument pos:start="47:35" pos:end="47:51"><expr pos:start="47:35" pos:end="47:51"><name pos:start="47:35" pos:end="47:51">packed_tiles_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="48:13" pos:end="48:65"><expr pos:start="48:13" pos:end="48:64"><call pos:start="48:13" pos:end="48:64"><name pos:start="48:13" pos:end="48:28">bytestream2_init</name><argument_list pos:start="48:29" pos:end="48:64">(<argument pos:start="48:30" pos:end="48:39"><expr pos:start="48:30" pos:end="48:39"><operator pos:start="48:30" pos:end="48:30">&amp;</operator><name pos:start="48:31" pos:end="48:39">tiles_gbc</name></expr></argument>, <argument pos:start="48:42" pos:end="48:55"><expr pos:start="48:42" pos:end="48:55"><name pos:start="48:42" pos:end="48:55">inflated_tiles</name></expr></argument>, <argument pos:start="48:58" pos:end="48:63"><expr pos:start="48:58" pos:end="48:63"><name pos:start="48:58" pos:end="48:63">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:15">gbc</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <operator pos:start="49:19" pos:end="49:19">&amp;</operator><name pos:start="49:20" pos:end="49:28">tiles_gbc</name></expr>;</expr_stmt>
    <comment type="block" pos:start="50:5" pos:end="50:78">/* Fill in array of tiles, keeping track of how many pixels are updated */</comment>
    <for pos:start="51:5" pos:end="138:15">for <control pos:start="51:9" pos:end="51:34">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:29"><expr pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:28">tiles_nb</name></expr>;</condition> <incr pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><name pos:start="51:31" pos:end="51:31">i</name><operator pos:start="51:32" pos:end="51:33">++</operator></expr></incr>)</control> <block pos:start="51:36" pos:end="138:15">{<block_content pos:start="52:9" pos:end="138:15">
        <expr_stmt pos:start="52:9" pos:end="52:52"><expr pos:start="52:9" pos:end="52:51"><name pos:start="52:9" pos:end="52:21"><name pos:start="52:9" pos:end="52:11">ctx</name><operator pos:start="52:12" pos:end="52:13">-&gt;</operator><name pos:start="52:14" pos:end="52:18">tiles</name><index pos:start="52:19" pos:end="52:21">[<expr pos:start="52:20" pos:end="52:20"><name pos:start="52:20" pos:end="52:20">i</name></expr>]</index></name><operator pos:start="52:22" pos:end="52:22">.</operator><name pos:start="52:23" pos:end="52:23">x</name> <operator pos:start="52:25" pos:end="52:25">=</operator> <call pos:start="52:27" pos:end="52:51"><name pos:start="52:27" pos:end="52:46">bytestream2_get_le16</name><argument_list pos:start="52:47" pos:end="52:51">(<argument pos:start="52:48" pos:end="52:50"><expr pos:start="52:48" pos:end="52:50"><name pos:start="52:48" pos:end="52:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="53:9" pos:end="53:52"><expr pos:start="53:9" pos:end="53:51"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:11">ctx</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:18">tiles</name><index pos:start="53:19" pos:end="53:21">[<expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">i</name></expr>]</index></name><operator pos:start="53:22" pos:end="53:22">.</operator><name pos:start="53:23" pos:end="53:23">w</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <call pos:start="53:27" pos:end="53:51"><name pos:start="53:27" pos:end="53:46">bytestream2_get_le16</name><argument_list pos:start="53:47" pos:end="53:51">(<argument pos:start="53:48" pos:end="53:50"><expr pos:start="53:48" pos:end="53:50"><name pos:start="53:48" pos:end="53:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="54:9" pos:end="54:52"><expr pos:start="54:9" pos:end="54:51"><name pos:start="54:9" pos:end="54:21"><name pos:start="54:9" pos:end="54:11">ctx</name><operator pos:start="54:12" pos:end="54:13">-&gt;</operator><name pos:start="54:14" pos:end="54:18">tiles</name><index pos:start="54:19" pos:end="54:21">[<expr pos:start="54:20" pos:end="54:20"><name pos:start="54:20" pos:end="54:20">i</name></expr>]</index></name><operator pos:start="54:22" pos:end="54:22">.</operator><name pos:start="54:23" pos:end="54:23">y</name> <operator pos:start="54:25" pos:end="54:25">=</operator> <call pos:start="54:27" pos:end="54:51"><name pos:start="54:27" pos:end="54:46">bytestream2_get_le16</name><argument_list pos:start="54:47" pos:end="54:51">(<argument pos:start="54:48" pos:end="54:50"><expr pos:start="54:48" pos:end="54:50"><name pos:start="54:48" pos:end="54:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="55:9" pos:end="55:52"><expr pos:start="55:9" pos:end="55:51"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:18">tiles</name><index pos:start="55:19" pos:end="55:21">[<expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">i</name></expr>]</index></name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:23">h</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <call pos:start="55:27" pos:end="55:51"><name pos:start="55:27" pos:end="55:46">bytestream2_get_le16</name><argument_list pos:start="55:47" pos:end="55:51">(<argument pos:start="55:48" pos:end="55:50"><expr pos:start="55:48" pos:end="55:50"><name pos:start="55:48" pos:end="55:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="56:9" pos:end="56:78"><expr pos:start="56:9" pos:end="56:77"><name pos:start="56:9" pos:end="56:18">pixel_size</name> <operator pos:start="56:20" pos:end="56:21">+=</operator> <name pos:start="56:23" pos:end="56:35"><name pos:start="56:23" pos:end="56:25">ctx</name><operator pos:start="56:26" pos:end="56:27">-&gt;</operator><name pos:start="56:28" pos:end="56:32">tiles</name><index pos:start="56:33" pos:end="56:35">[<expr pos:start="56:34" pos:end="56:34"><name pos:start="56:34" pos:end="56:34">i</name></expr>]</index></name><operator pos:start="56:36" pos:end="56:36">.</operator><name pos:start="56:37" pos:end="56:37">w</name> <operator pos:start="56:39" pos:end="56:39">*</operator> <name pos:start="56:41" pos:end="56:53"><name pos:start="56:41" pos:end="56:43">ctx</name><operator pos:start="56:44" pos:end="56:45">-&gt;</operator><name pos:start="56:46" pos:end="56:50">tiles</name><index pos:start="56:51" pos:end="56:53">[<expr pos:start="56:52" pos:end="56:52"><name pos:start="56:52" pos:end="56:52">i</name></expr>]</index></name><operator pos:start="56:54" pos:end="56:54">.</operator><name pos:start="56:55" pos:end="56:55">h</name> <operator pos:start="56:57" pos:end="56:57">*</operator> <name pos:start="56:59" pos:end="56:77"><name pos:start="56:59" pos:end="56:61">ctx</name><operator pos:start="56:62" pos:end="56:63">-&gt;</operator><name pos:start="56:64" pos:end="56:77">component_size</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="59:50"><expr pos:start="57:9" pos:end="59:49"><call pos:start="57:9" pos:end="59:49"><name pos:start="57:9" pos:end="57:15">ff_dlog</name><argument_list pos:start="57:16" pos:end="59:49">(<argument pos:start="57:17" pos:end="57:21"><expr pos:start="57:17" pos:end="57:21"><name pos:start="57:17" pos:end="57:21">avctx</name></expr></argument>, <argument pos:start="57:24" pos:end="57:53"><expr pos:start="57:24" pos:end="57:53"><literal type="string" pos:start="57:24" pos:end="57:53">"tile %d orig(%d,%d) %dx%d.\n"</literal></expr></argument>, <argument pos:start="57:56" pos:end="57:56"><expr pos:start="57:56" pos:end="57:56"><name pos:start="57:56" pos:end="57:56">i</name></expr></argument>,
                <argument pos:start="58:17" pos:end="58:31"><expr pos:start="58:17" pos:end="58:31"><name pos:start="58:17" pos:end="58:29"><name pos:start="58:17" pos:end="58:19">ctx</name><operator pos:start="58:20" pos:end="58:21">-&gt;</operator><name pos:start="58:22" pos:end="58:26">tiles</name><index pos:start="58:27" pos:end="58:29">[<expr pos:start="58:28" pos:end="58:28"><name pos:start="58:28" pos:end="58:28">i</name></expr>]</index></name><operator pos:start="58:30" pos:end="58:30">.</operator><name pos:start="58:31" pos:end="58:31">x</name></expr></argument>, <argument pos:start="58:34" pos:end="58:48"><expr pos:start="58:34" pos:end="58:48"><name pos:start="58:34" pos:end="58:46"><name pos:start="58:34" pos:end="58:36">ctx</name><operator pos:start="58:37" pos:end="58:38">-&gt;</operator><name pos:start="58:39" pos:end="58:43">tiles</name><index pos:start="58:44" pos:end="58:46">[<expr pos:start="58:45" pos:end="58:45"><name pos:start="58:45" pos:end="58:45">i</name></expr>]</index></name><operator pos:start="58:47" pos:end="58:47">.</operator><name pos:start="58:48" pos:end="58:48">y</name></expr></argument>,
                <argument pos:start="59:17" pos:end="59:31"><expr pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:19">ctx</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:26">tiles</name><index pos:start="59:27" pos:end="59:29">[<expr pos:start="59:28" pos:end="59:28"><name pos:start="59:28" pos:end="59:28">i</name></expr>]</index></name><operator pos:start="59:30" pos:end="59:30">.</operator><name pos:start="59:31" pos:end="59:31">w</name></expr></argument>, <argument pos:start="59:34" pos:end="59:48"><expr pos:start="59:34" pos:end="59:48"><name pos:start="59:34" pos:end="59:46"><name pos:start="59:34" pos:end="59:36">ctx</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:43">tiles</name><index pos:start="59:44" pos:end="59:46">[<expr pos:start="59:45" pos:end="59:45"><name pos:start="59:45" pos:end="59:45">i</name></expr>]</index></name><operator pos:start="59:47" pos:end="59:47">.</operator><name pos:start="59:48" pos:end="59:48">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="60:9" pos:end="138:15"><if pos:start="60:9" pos:end="65:9">if <condition pos:start="60:12" pos:end="60:57">(<expr pos:start="60:13" pos:end="60:56"><name pos:start="60:13" pos:end="60:25"><name pos:start="60:13" pos:end="60:15">ctx</name><operator pos:start="60:16" pos:end="60:17">-&gt;</operator><name pos:start="60:18" pos:end="60:22">tiles</name><index pos:start="60:23" pos:end="60:25">[<expr pos:start="60:24" pos:end="60:24"><name pos:start="60:24" pos:end="60:24">i</name></expr>]</index></name><operator pos:start="60:26" pos:end="60:26">.</operator><name pos:start="60:27" pos:end="60:27">w</name> <operator pos:start="60:29" pos:end="60:30">==</operator> <literal type="number" pos:start="60:32" pos:end="60:32">0</literal> <operator pos:start="60:34" pos:end="60:35">||</operator> <name pos:start="60:37" pos:end="60:49"><name pos:start="60:37" pos:end="60:39">ctx</name><operator pos:start="60:40" pos:end="60:41">-&gt;</operator><name pos:start="60:42" pos:end="60:46">tiles</name><index pos:start="60:47" pos:end="60:49">[<expr pos:start="60:48" pos:end="60:48"><name pos:start="60:48" pos:end="60:48">i</name></expr>]</index></name><operator pos:start="60:50" pos:end="60:50">.</operator><name pos:start="60:51" pos:end="60:51">h</name> <operator pos:start="60:53" pos:end="60:54">==</operator> <literal type="number" pos:start="60:56" pos:end="60:56">0</literal></expr>)</condition> <block pos:start="60:59" pos:end="65:9">{<block_content pos:start="61:13" pos:end="64:53">
            <expr_stmt pos:start="61:13" pos:end="64:53"><expr pos:start="61:13" pos:end="64:52"><call pos:start="61:13" pos:end="64:52"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="64:52">(<argument pos:start="61:20" pos:end="61:24"><expr pos:start="61:20" pos:end="61:24"><name pos:start="61:20" pos:end="61:24">avctx</name></expr></argument>, <argument pos:start="61:27" pos:end="61:38"><expr pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:38">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="62:20" pos:end="62:66"><expr pos:start="62:20" pos:end="62:66"><literal type="string" pos:start="62:20" pos:end="62:66">"invalid tile %d at (%d.%d) with size %dx%d.\n"</literal></expr></argument>, <argument pos:start="62:69" pos:end="62:69"><expr pos:start="62:69" pos:end="62:69"><name pos:start="62:69" pos:end="62:69">i</name></expr></argument>,
                   <argument pos:start="63:20" pos:end="63:34"><expr pos:start="63:20" pos:end="63:34"><name pos:start="63:20" pos:end="63:32"><name pos:start="63:20" pos:end="63:22">ctx</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:29">tiles</name><index pos:start="63:30" pos:end="63:32">[<expr pos:start="63:31" pos:end="63:31"><name pos:start="63:31" pos:end="63:31">i</name></expr>]</index></name><operator pos:start="63:33" pos:end="63:33">.</operator><name pos:start="63:34" pos:end="63:34">x</name></expr></argument>, <argument pos:start="63:37" pos:end="63:51"><expr pos:start="63:37" pos:end="63:51"><name pos:start="63:37" pos:end="63:49"><name pos:start="63:37" pos:end="63:39">ctx</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:46">tiles</name><index pos:start="63:47" pos:end="63:49">[<expr pos:start="63:48" pos:end="63:48"><name pos:start="63:48" pos:end="63:48">i</name></expr>]</index></name><operator pos:start="63:50" pos:end="63:50">.</operator><name pos:start="63:51" pos:end="63:51">y</name></expr></argument>,
                   <argument pos:start="64:20" pos:end="64:34"><expr pos:start="64:20" pos:end="64:34"><name pos:start="64:20" pos:end="64:32"><name pos:start="64:20" pos:end="64:22">ctx</name><operator pos:start="64:23" pos:end="64:24">-&gt;</operator><name pos:start="64:25" pos:end="64:29">tiles</name><index pos:start="64:30" pos:end="64:32">[<expr pos:start="64:31" pos:end="64:31"><name pos:start="64:31" pos:end="64:31">i</name></expr>]</index></name><operator pos:start="64:33" pos:end="64:33">.</operator><name pos:start="64:34" pos:end="64:34">w</name></expr></argument>, <argument pos:start="64:37" pos:end="64:51"><expr pos:start="64:37" pos:end="64:51"><name pos:start="64:37" pos:end="64:49"><name pos:start="64:37" pos:end="64:39">ctx</name><operator pos:start="64:40" pos:end="64:41">-&gt;</operator><name pos:start="64:42" pos:end="64:46">tiles</name><index pos:start="64:47" pos:end="64:49">[<expr pos:start="64:48" pos:end="64:48"><name pos:start="64:48" pos:end="64:48">i</name></expr>]</index></name><operator pos:start="64:50" pos:end="64:50">.</operator><name pos:start="64:51" pos:end="64:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="138:15">else if <condition pos:start="65:19" pos:end="66:69">(<expr pos:start="65:20" pos:end="66:68"><name pos:start="65:20" pos:end="65:32"><name pos:start="65:20" pos:end="65:22">ctx</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:29">tiles</name><index pos:start="65:30" pos:end="65:32">[<expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">i</name></expr>]</index></name><operator pos:start="65:33" pos:end="65:33">.</operator><name pos:start="65:34" pos:end="65:34">x</name> <operator pos:start="65:36" pos:end="65:36">+</operator> <name pos:start="65:38" pos:end="65:50"><name pos:start="65:38" pos:end="65:40">ctx</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:47">tiles</name><index pos:start="65:48" pos:end="65:50">[<expr pos:start="65:49" pos:end="65:49"><name pos:start="65:49" pos:end="65:49">i</name></expr>]</index></name><operator pos:start="65:51" pos:end="65:51">.</operator><name pos:start="65:52" pos:end="65:52">w</name> <operator pos:start="65:54" pos:end="65:54">&gt;</operator> <name pos:start="65:56" pos:end="65:67"><name pos:start="65:56" pos:end="65:60">avctx</name><operator pos:start="65:61" pos:end="65:62">-&gt;</operator><name pos:start="65:63" pos:end="65:67">width</name></name> <operator pos:start="65:69" pos:end="65:70">||</operator>
                   <name pos:start="66:20" pos:end="66:32"><name pos:start="66:20" pos:end="66:22">ctx</name><operator pos:start="66:23" pos:end="66:24">-&gt;</operator><name pos:start="66:25" pos:end="66:29">tiles</name><index pos:start="66:30" pos:end="66:32">[<expr pos:start="66:31" pos:end="66:31"><name pos:start="66:31" pos:end="66:31">i</name></expr>]</index></name><operator pos:start="66:33" pos:end="66:33">.</operator><name pos:start="66:34" pos:end="66:34">y</name> <operator pos:start="66:36" pos:end="66:36">+</operator> <name pos:start="66:38" pos:end="66:50"><name pos:start="66:38" pos:end="66:40">ctx</name><operator pos:start="66:41" pos:end="66:42">-&gt;</operator><name pos:start="66:43" pos:end="66:47">tiles</name><index pos:start="66:48" pos:end="66:50">[<expr pos:start="66:49" pos:end="66:49"><name pos:start="66:49" pos:end="66:49">i</name></expr>]</index></name><operator pos:start="66:51" pos:end="66:51">.</operator><name pos:start="66:52" pos:end="66:52">h</name> <operator pos:start="66:54" pos:end="66:54">&gt;</operator> <name pos:start="66:56" pos:end="66:68"><name pos:start="66:56" pos:end="66:60">avctx</name><operator pos:start="66:61" pos:end="66:62">-&gt;</operator><name pos:start="66:63" pos:end="66:68">height</name></name></expr>)</condition> <block pos:start="66:71" pos:end="138:15">{<block_content pos:start="67:13" pos:end="138:15">
            <expr_stmt pos:start="67:13" pos:end="70:53"><expr pos:start="67:13" pos:end="70:52"><call pos:start="67:13" pos:end="70:52"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="70:52">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">avctx</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="68:20" pos:end="68:72"><expr pos:start="68:20" pos:end="68:72"><literal type="string" pos:start="68:20" pos:end="68:72">"out of bounds tile %d at (%d.%d) with size %dx%d.\n"</literal></expr></argument>, <argument pos:start="68:75" pos:end="68:75"><expr pos:start="68:75" pos:end="68:75"><name pos:start="68:75" pos:end="68:75">i</name></expr></argument>,
                   <argument pos:start="69:20" pos:end="69:34"><expr pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:32"><name pos:start="69:20" pos:end="69:22">ctx</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:29">tiles</name><index pos:start="69:30" pos:end="69:32">[<expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">i</name></expr>]</index></name><operator pos:start="69:33" pos:end="69:33">.</operator><name pos:start="69:34" pos:end="69:34">x</name></expr></argument>, <argument pos:start="69:37" pos:end="69:51"><expr pos:start="69:37" pos:end="69:51"><name pos:start="69:37" pos:end="69:49"><name pos:start="69:37" pos:end="69:39">ctx</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:46">tiles</name><index pos:start="69:47" pos:end="69:49">[<expr pos:start="69:48" pos:end="69:48"><name pos:start="69:48" pos:end="69:48">i</name></expr>]</index></name><operator pos:start="69:50" pos:end="69:50">.</operator><name pos:start="69:51" pos:end="69:51">y</name></expr></argument>,
                   <argument pos:start="70:20" pos:end="70:34"><expr pos:start="70:20" pos:end="70:34"><name pos:start="70:20" pos:end="70:32"><name pos:start="70:20" pos:end="70:22">ctx</name><operator pos:start="70:23" pos:end="70:24">-&gt;</operator><name pos:start="70:25" pos:end="70:29">tiles</name><index pos:start="70:30" pos:end="70:32">[<expr pos:start="70:31" pos:end="70:31"><name pos:start="70:31" pos:end="70:31">i</name></expr>]</index></name><operator pos:start="70:33" pos:end="70:33">.</operator><name pos:start="70:34" pos:end="70:34">w</name></expr></argument>, <argument pos:start="70:37" pos:end="70:51"><expr pos:start="70:37" pos:end="70:51"><name pos:start="70:37" pos:end="70:49"><name pos:start="70:37" pos:end="70:39">ctx</name><operator pos:start="70:40" pos:end="70:41">-&gt;</operator><name pos:start="70:42" pos:end="70:46">tiles</name><index pos:start="70:47" pos:end="70:49">[<expr pos:start="70:48" pos:end="70:48"><name pos:start="70:48" pos:end="70:48">i</name></expr>]</index></name><operator pos:start="70:50" pos:end="70:50">.</operator><name pos:start="70:51" pos:end="70:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="71:5" pos:end="71:62">/* Reset the reader in case it had been modified before */</comment>
    <expr_stmt pos:start="72:5" pos:end="72:20"><expr pos:start="72:5" pos:end="72:19"><name pos:start="72:5" pos:end="72:7">gbc</name> <operator pos:start="72:9" pos:end="72:9">=</operator> <operator pos:start="72:11" pos:end="72:11">&amp;</operator><name pos:start="72:12" pos:end="72:19"><name pos:start="72:12" pos:end="72:14">ctx</name><operator pos:start="72:15" pos:end="72:16">-&gt;</operator><name pos:start="72:17" pos:end="72:19">gbc</name></name></expr>;</expr_stmt>
    <comment type="block" pos:start="73:5" pos:end="73:55">/* Extract how much pixel data the tiles contain */</comment>
    <if_stmt pos:start="74:5" pos:end="81:48"><if pos:start="74:5" pos:end="75:48">if <condition pos:start="74:8" pos:end="74:27">(<expr pos:start="74:9" pos:end="74:26"><name pos:start="74:9" pos:end="74:18">pixel_size</name> <operator pos:start="74:20" pos:end="74:20">&lt;</operator> <literal type="number" pos:start="74:22" pos:end="74:26">0x100</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:48"><block_content pos:start="75:9" pos:end="75:48">
        <expr_stmt pos:start="75:9" pos:end="75:48"><expr pos:start="75:9" pos:end="75:47"><name pos:start="75:9" pos:end="75:19">packed_size</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:47"><name pos:start="75:23" pos:end="75:42">bytestream2_get_byte</name><argument_list pos:start="75:43" pos:end="75:47">(<argument pos:start="75:44" pos:end="75:46"><expr pos:start="75:44" pos:end="75:46"><name pos:start="75:44" pos:end="75:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="76:5" pos:end="77:48">else if <condition pos:start="76:13" pos:end="76:34">(<expr pos:start="76:14" pos:end="76:33"><name pos:start="76:14" pos:end="76:23">pixel_size</name> <operator pos:start="76:25" pos:end="76:25">&lt;</operator> <literal type="number" pos:start="76:27" pos:end="76:33">0x10000</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:48"><block_content pos:start="77:9" pos:end="77:48">
        <expr_stmt pos:start="77:9" pos:end="77:48"><expr pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:19">packed_size</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:47"><name pos:start="77:23" pos:end="77:42">bytestream2_get_le16</name><argument_list pos:start="77:43" pos:end="77:47">(<argument pos:start="77:44" pos:end="77:46"><expr pos:start="77:44" pos:end="77:46"><name pos:start="77:44" pos:end="77:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="78:5" pos:end="79:48">else if <condition pos:start="78:13" pos:end="78:36">(<expr pos:start="78:14" pos:end="78:35"><name pos:start="78:14" pos:end="78:23">pixel_size</name> <operator pos:start="78:25" pos:end="78:25">&lt;</operator> <literal type="number" pos:start="78:27" pos:end="78:35">0x1000000</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:48"><block_content pos:start="79:9" pos:end="79:48">
        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:19">packed_size</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <call pos:start="79:23" pos:end="79:47"><name pos:start="79:23" pos:end="79:42">bytestream2_get_le24</name><argument_list pos:start="79:43" pos:end="79:47">(<argument pos:start="79:44" pos:end="79:46"><expr pos:start="79:44" pos:end="79:46"><name pos:start="79:44" pos:end="79:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="80:5" pos:end="81:48">else<block type="pseudo" pos:start="81:9" pos:end="81:48"><block_content pos:start="81:9" pos:end="81:48">
        <expr_stmt pos:start="81:9" pos:end="81:48"><expr pos:start="81:9" pos:end="81:47"><name pos:start="81:9" pos:end="81:19">packed_size</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <call pos:start="81:23" pos:end="81:47"><name pos:start="81:23" pos:end="81:42">bytestream2_get_le32</name><argument_list pos:start="81:43" pos:end="81:47">(<argument pos:start="81:44" pos:end="81:46"><expr pos:start="81:44" pos:end="81:46"><name pos:start="81:44" pos:end="81:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="82:5" pos:end="82:79"><expr pos:start="82:5" pos:end="82:78"><call pos:start="82:5" pos:end="82:78"><name pos:start="82:5" pos:end="82:11">ff_dlog</name><argument_list pos:start="82:12" pos:end="82:78">(<argument pos:start="82:13" pos:end="82:17"><expr pos:start="82:13" pos:end="82:17"><name pos:start="82:13" pos:end="82:17">avctx</name></expr></argument>, <argument pos:start="82:20" pos:end="82:52"><expr pos:start="82:20" pos:end="82:52"><literal type="string" pos:start="82:20" pos:end="82:52">"pixel_size %d packed_size %d.\n"</literal></expr></argument>, <argument pos:start="82:55" pos:end="82:64"><expr pos:start="82:55" pos:end="82:64"><name pos:start="82:55" pos:end="82:64">pixel_size</name></expr></argument>, <argument pos:start="82:67" pos:end="82:77"><expr pos:start="82:67" pos:end="82:77"><name pos:start="82:67" pos:end="82:77">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="83:5" pos:end="138:15"><if pos:start="83:5" pos:end="138:15">if <condition pos:start="83:8" pos:end="83:24">(<expr pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:19">packed_size</name> <operator pos:start="83:21" pos:end="83:21">&lt;</operator> <literal type="number" pos:start="83:23" pos:end="83:23">0</literal></expr>)</condition> <block pos:start="83:26" pos:end="138:15">{<block_content pos:start="84:9" pos:end="138:15">
        <expr_stmt pos:start="84:9" pos:end="84:75"><expr pos:start="84:9" pos:end="84:74"><call pos:start="84:9" pos:end="84:74"><name pos:start="84:9" pos:end="84:14">av_log</name><argument_list pos:start="84:15" pos:end="84:74">(<argument pos:start="84:16" pos:end="84:20"><expr pos:start="84:16" pos:end="84:20"><name pos:start="84:16" pos:end="84:20">avctx</name></expr></argument>, <argument pos:start="84:23" pos:end="84:34"><expr pos:start="84:23" pos:end="84:34"><name pos:start="84:23" pos:end="84:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="84:37" pos:end="84:60"><expr pos:start="84:37" pos:end="84:60"><literal type="string" pos:start="84:37" pos:end="84:60">"Invalid tile size %d\n"</literal></expr></argument>, <argument pos:start="84:63" pos:end="84:73"><expr pos:start="84:63" pos:end="84:73"><name pos:start="84:63" pos:end="84:73">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="85:5" pos:end="85:59">/* Get pixels buffer, it may be deflated or just raw */</comment>
    <if_stmt pos:start="86:5" pos:end="138:15"><if pos:start="86:5" pos:end="138:15">if <condition pos:start="86:8" pos:end="86:34">(<expr pos:start="86:9" pos:end="86:33"><name pos:start="86:9" pos:end="86:18">pixel_size</name> <operator pos:start="86:20" pos:end="86:21">==</operator> <name pos:start="86:23" pos:end="86:33">packed_size</name></expr>)</condition> <block pos:start="86:36" pos:end="138:15">{<block_content pos:start="87:9" pos:end="138:15">
        <if_stmt pos:start="87:9" pos:end="138:15"><if pos:start="87:9" pos:end="90:5">if <condition pos:start="87:12" pos:end="87:57">(<expr pos:start="87:13" pos:end="87:56"><call pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:38">bytestream2_get_bytes_left</name><argument_list pos:start="87:39" pos:end="87:43">(<argument pos:start="87:40" pos:end="87:42"><expr pos:start="87:40" pos:end="87:42"><name pos:start="87:40" pos:end="87:42">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="87:45" pos:end="87:45">&lt;</operator> <name pos:start="87:47" pos:end="87:56">pixel_size</name></expr>)</condition> <block pos:start="87:59" pos:end="90:5">{<block_content pos:start="88:13" pos:end="89:29">
            <expr_stmt pos:start="88:13" pos:end="88:83"><expr pos:start="88:13" pos:end="88:82"><call pos:start="88:13" pos:end="88:82"><name pos:start="88:13" pos:end="88:18">av_log</name><argument_list pos:start="88:19" pos:end="88:82">(<argument pos:start="88:20" pos:end="88:24"><expr pos:start="88:20" pos:end="88:24"><name pos:start="88:20" pos:end="88:24">avctx</name></expr></argument>, <argument pos:start="88:27" pos:end="88:38"><expr pos:start="88:27" pos:end="88:38"><name pos:start="88:27" pos:end="88:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="88:41" pos:end="88:69"><expr pos:start="88:41" pos:end="88:69"><literal type="string" pos:start="88:41" pos:end="88:69">"Insufficient input for %d\n"</literal></expr></argument>, <argument pos:start="88:72" pos:end="88:81"><expr pos:start="88:72" pos:end="88:81"><name pos:start="88:72" pos:end="88:81">pixel_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:14">pixels</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:28"><name pos:start="89:18" pos:end="89:20">gbc</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:28">buffer</name></name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="90:7" pos:end="138:15">else <block pos:start="90:12" pos:end="138:15">{<block_content pos:start="91:9" pos:end="138:15">
        <decl_stmt pos:start="91:9" pos:end="91:40"><decl pos:start="91:9" pos:end="91:39"><type pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:14">uLongf</name></type> <name pos:start="91:16" pos:end="91:18">len</name> <init pos:start="91:20" pos:end="91:39">= <expr pos:start="91:22" pos:end="91:39"><name pos:start="91:22" pos:end="91:39"><name pos:start="91:22" pos:end="91:24">ctx</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:39">inflated_size</name></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="92:9" pos:end="138:15"><if pos:start="92:9" pos:end="138:15">if <condition pos:start="92:12" pos:end="92:58">(<expr pos:start="92:13" pos:end="92:57"><call pos:start="92:13" pos:end="92:43"><name pos:start="92:13" pos:end="92:38">bytestream2_get_bytes_left</name><argument_list pos:start="92:39" pos:end="92:43">(<argument pos:start="92:40" pos:end="92:42"><expr pos:start="92:40" pos:end="92:42"><name pos:start="92:40" pos:end="92:42">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="92:45" pos:end="92:45">&lt;</operator> <name pos:start="92:47" pos:end="92:57">packed_size</name></expr>)</condition> <block pos:start="92:60" pos:end="138:15">{<block_content pos:start="93:13" pos:end="138:15">
            <expr_stmt pos:start="93:13" pos:end="93:84"><expr pos:start="93:13" pos:end="93:83"><call pos:start="93:13" pos:end="93:83"><name pos:start="93:13" pos:end="93:18">av_log</name><argument_list pos:start="93:19" pos:end="93:83">(<argument pos:start="93:20" pos:end="93:24"><expr pos:start="93:20" pos:end="93:24"><name pos:start="93:20" pos:end="93:24">avctx</name></expr></argument>, <argument pos:start="93:27" pos:end="93:38"><expr pos:start="93:27" pos:end="93:38"><name pos:start="93:27" pos:end="93:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:41" pos:end="93:69"><expr pos:start="93:41" pos:end="93:69"><literal type="string" pos:start="93:41" pos:end="93:69">"Insufficient input for %d\n"</literal></expr></argument>, <argument pos:start="93:72" pos:end="93:82"><expr pos:start="93:72" pos:end="93:82"><name pos:start="93:72" pos:end="93:82">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="94:9" pos:end="94:76"><expr pos:start="94:9" pos:end="94:75"><name pos:start="94:9" pos:end="94:11">ret</name> <operator pos:start="94:13" pos:end="94:13">=</operator> <call pos:start="94:15" pos:end="94:75"><name pos:start="94:15" pos:end="94:24">uncompress</name><argument_list pos:start="94:25" pos:end="94:75">(<argument pos:start="94:26" pos:end="94:42"><expr pos:start="94:26" pos:end="94:42"><name pos:start="94:26" pos:end="94:42"><name pos:start="94:26" pos:end="94:28">ctx</name><operator pos:start="94:29" pos:end="94:30">-&gt;</operator><name pos:start="94:31" pos:end="94:42">inflated_buf</name></name></expr></argument>, <argument pos:start="94:45" pos:end="94:48"><expr pos:start="94:45" pos:end="94:48"><operator pos:start="94:45" pos:end="94:45">&amp;</operator><name pos:start="94:46" pos:end="94:48">len</name></expr></argument>, <argument pos:start="94:51" pos:end="94:61"><expr pos:start="94:51" pos:end="94:61"><name pos:start="94:51" pos:end="94:61"><name pos:start="94:51" pos:end="94:53">gbc</name><operator pos:start="94:54" pos:end="94:55">-&gt;</operator><name pos:start="94:56" pos:end="94:61">buffer</name></name></expr></argument>, <argument pos:start="94:64" pos:end="94:74"><expr pos:start="94:64" pos:end="94:74"><name pos:start="94:64" pos:end="94:74">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="95:9" pos:end="138:15"><if pos:start="95:9" pos:end="138:15">if <condition pos:start="95:12" pos:end="95:16">(<expr pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:15">ret</name></expr>)</condition> <block pos:start="95:18" pos:end="138:15">{<block_content pos:start="96:13" pos:end="138:15">
            <expr_stmt pos:start="96:13" pos:end="96:74"><expr pos:start="96:13" pos:end="96:73"><call pos:start="96:13" pos:end="96:73"><name pos:start="96:13" pos:end="96:18">av_log</name><argument_list pos:start="96:19" pos:end="96:73">(<argument pos:start="96:20" pos:end="96:24"><expr pos:start="96:20" pos:end="96:24"><name pos:start="96:20" pos:end="96:24">avctx</name></expr></argument>, <argument pos:start="96:27" pos:end="96:38"><expr pos:start="96:27" pos:end="96:38"><name pos:start="96:27" pos:end="96:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="96:41" pos:end="96:67"><expr pos:start="96:41" pos:end="96:67"><literal type="string" pos:start="96:41" pos:end="96:67">"Pixel deflate error %d.\n"</literal></expr></argument>, <argument pos:start="96:70" pos:end="96:72"><expr pos:start="96:70" pos:end="96:72"><name pos:start="96:70" pos:end="96:72">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="97:13" pos:end="97:34"><expr pos:start="97:13" pos:end="97:33"><name pos:start="97:13" pos:end="97:15">ret</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:33">AVERROR_UNKNOWN</name></expr>;</expr_stmt>
        <expr_stmt pos:start="98:9" pos:end="98:35"><expr pos:start="98:9" pos:end="98:34"><name pos:start="98:9" pos:end="98:14">pixels</name> <operator pos:start="98:16" pos:end="98:16">=</operator> <name pos:start="98:18" pos:end="98:34"><name pos:start="98:18" pos:end="98:20">ctx</name><operator pos:start="98:21" pos:end="98:22">-&gt;</operator><name pos:start="98:23" pos:end="98:34">inflated_buf</name></name></expr>;</expr_stmt>
    <comment type="block" pos:start="99:5" pos:end="99:30">/* Allocate when needed */</comment>
    <expr_stmt pos:start="100:5" pos:end="100:49"><expr pos:start="100:5" pos:end="100:48"><name pos:start="100:5" pos:end="100:7">ret</name> <operator pos:start="100:9" pos:end="100:9">=</operator> <call pos:start="100:11" pos:end="100:48"><name pos:start="100:11" pos:end="100:25">ff_reget_buffer</name><argument_list pos:start="100:26" pos:end="100:48">(<argument pos:start="100:27" pos:end="100:31"><expr pos:start="100:27" pos:end="100:31"><name pos:start="100:27" pos:end="100:31">avctx</name></expr></argument>, <argument pos:start="100:34" pos:end="100:47"><expr pos:start="100:34" pos:end="100:47"><name pos:start="100:34" pos:end="100:47"><name pos:start="100:34" pos:end="100:36">ctx</name><operator pos:start="100:37" pos:end="100:38">-&gt;</operator><name pos:start="100:39" pos:end="100:47">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="101:5" pos:end="103:17"><if pos:start="101:5" pos:end="103:17">if <condition pos:start="101:8" pos:end="101:16">(<expr pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">&lt;</operator> <literal type="number" pos:start="101:15" pos:end="101:15">0</literal></expr>)</condition><block type="pseudo" pos:start="103:5" pos:end="103:17"><block_content pos:start="103:5" pos:end="103:17">
    <comment type="block" pos:start="102:5" pos:end="102:73">/* Pointer to actual pixels, will be updated when data is consumed */</comment>
    <expr_stmt pos:start="103:5" pos:end="103:17"><expr pos:start="103:5" pos:end="103:16"><name pos:start="103:5" pos:end="103:7">raw</name> <operator pos:start="103:9" pos:end="103:9">=</operator> <name pos:start="103:11" pos:end="103:16">pixels</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <for pos:start="104:5" pos:end="138:15">for <control pos:start="104:9" pos:end="104:34">(<init pos:start="104:10" pos:end="104:15"><expr pos:start="104:10" pos:end="104:14"><name pos:start="104:10" pos:end="104:10">i</name> <operator pos:start="104:12" pos:end="104:12">=</operator> <literal type="number" pos:start="104:14" pos:end="104:14">0</literal></expr>;</init> <condition pos:start="104:17" pos:end="104:29"><expr pos:start="104:17" pos:end="104:28"><name pos:start="104:17" pos:end="104:17">i</name> <operator pos:start="104:19" pos:end="104:19">&lt;</operator> <name pos:start="104:21" pos:end="104:28">tiles_nb</name></expr>;</condition> <incr pos:start="104:31" pos:end="104:33"><expr pos:start="104:31" pos:end="104:33"><name pos:start="104:31" pos:end="104:31">i</name><operator pos:start="104:32" pos:end="104:33">++</operator></expr></incr>)</control> <block pos:start="104:36" pos:end="138:15">{<block_content pos:start="105:9" pos:end="138:15">
        <decl_stmt pos:start="105:9" pos:end="107:61"><decl pos:start="105:9" pos:end="107:60"><type pos:start="105:9" pos:end="105:17"><name pos:start="105:9" pos:end="105:15">uint8_t</name> <modifier pos:start="105:17" pos:end="105:17">*</modifier></type><name pos:start="105:18" pos:end="105:20">dst</name> <init pos:start="105:22" pos:end="107:60">= <expr pos:start="105:24" pos:end="107:60"><name pos:start="105:24" pos:end="105:46"><name pos:start="105:24" pos:end="105:26">ctx</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:37">reference</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:43">data</name><index pos:start="105:44" pos:end="105:46">[<expr pos:start="105:45" pos:end="105:45"><literal type="number" pos:start="105:45" pos:end="105:45">0</literal></expr>]</index></name> <operator pos:start="105:48" pos:end="105:48">+</operator> <name pos:start="105:50" pos:end="105:76"><name pos:start="105:50" pos:end="105:52">ctx</name><operator pos:start="105:53" pos:end="105:54">-&gt;</operator><name pos:start="105:55" pos:end="105:63">reference</name><operator pos:start="105:64" pos:end="105:65">-&gt;</operator><name pos:start="105:66" pos:end="105:73">linesize</name><index pos:start="105:74" pos:end="105:76">[<expr pos:start="105:75" pos:end="105:75"><literal type="number" pos:start="105:75" pos:end="105:75">0</literal></expr>]</index></name> <operator pos:start="105:78" pos:end="105:78">*</operator>
                       <operator pos:start="106:24" pos:end="106:24">(</operator><name pos:start="106:25" pos:end="106:37"><name pos:start="106:25" pos:end="106:29">avctx</name><operator pos:start="106:30" pos:end="106:31">-&gt;</operator><name pos:start="106:32" pos:end="106:37">height</name></name> <operator pos:start="106:39" pos:end="106:39">-</operator> <name pos:start="106:41" pos:end="106:53"><name pos:start="106:41" pos:end="106:43">ctx</name><operator pos:start="106:44" pos:end="106:45">-&gt;</operator><name pos:start="106:46" pos:end="106:50">tiles</name><index pos:start="106:51" pos:end="106:53">[<expr pos:start="106:52" pos:end="106:52"><name pos:start="106:52" pos:end="106:52">i</name></expr>]</index></name><operator pos:start="106:54" pos:end="106:54">.</operator><name pos:start="106:55" pos:end="106:55">y</name> <operator pos:start="106:57" pos:end="106:57">-</operator> <literal type="number" pos:start="106:59" pos:end="106:59">1</literal><operator pos:start="106:60" pos:end="106:60">)</operator> <operator pos:start="106:62" pos:end="106:62">+</operator>
                       <name pos:start="107:24" pos:end="107:36"><name pos:start="107:24" pos:end="107:26">ctx</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:33">tiles</name><index pos:start="107:34" pos:end="107:36">[<expr pos:start="107:35" pos:end="107:35"><name pos:start="107:35" pos:end="107:35">i</name></expr>]</index></name><operator pos:start="107:37" pos:end="107:37">.</operator><name pos:start="107:38" pos:end="107:38">x</name> <operator pos:start="107:40" pos:end="107:40">*</operator> <name pos:start="107:42" pos:end="107:60"><name pos:start="107:42" pos:end="107:44">ctx</name><operator pos:start="107:45" pos:end="107:46">-&gt;</operator><name pos:start="107:47" pos:end="107:60">component_size</name></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="108:9" pos:end="111:45"><expr pos:start="108:9" pos:end="111:44"><call pos:start="108:9" pos:end="111:44"><name pos:start="108:9" pos:end="108:27">av_image_copy_plane</name><argument_list pos:start="108:28" pos:end="111:44">(<argument pos:start="108:29" pos:end="108:31"><expr pos:start="108:29" pos:end="108:31"><name pos:start="108:29" pos:end="108:31">dst</name></expr></argument>, <argument pos:start="108:34" pos:end="108:65"><expr pos:start="108:34" pos:end="108:65"><operator pos:start="108:34" pos:end="108:34">-</operator><literal type="number" pos:start="108:35" pos:end="108:35">1</literal> <operator pos:start="108:37" pos:end="108:37">*</operator> <name pos:start="108:39" pos:end="108:65"><name pos:start="108:39" pos:end="108:41">ctx</name><operator pos:start="108:42" pos:end="108:43">-&gt;</operator><name pos:start="108:44" pos:end="108:52">reference</name><operator pos:start="108:53" pos:end="108:54">-&gt;</operator><name pos:start="108:55" pos:end="108:62">linesize</name><index pos:start="108:63" pos:end="108:65">[<expr pos:start="108:64" pos:end="108:64"><literal type="number" pos:start="108:64" pos:end="108:64">0</literal></expr>]</index></name></expr></argument>,
                            <argument pos:start="109:29" pos:end="109:31"><expr pos:start="109:29" pos:end="109:31"><name pos:start="109:29" pos:end="109:31">raw</name></expr></argument>, <argument pos:start="109:34" pos:end="109:70"><expr pos:start="109:34" pos:end="109:70"><name pos:start="109:34" pos:end="109:46"><name pos:start="109:34" pos:end="109:36">ctx</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:43">tiles</name><index pos:start="109:44" pos:end="109:46">[<expr pos:start="109:45" pos:end="109:45"><name pos:start="109:45" pos:end="109:45">i</name></expr>]</index></name><operator pos:start="109:47" pos:end="109:47">.</operator><name pos:start="109:48" pos:end="109:48">w</name> <operator pos:start="109:50" pos:end="109:50">*</operator> <name pos:start="109:52" pos:end="109:70"><name pos:start="109:52" pos:end="109:54">ctx</name><operator pos:start="109:55" pos:end="109:56">-&gt;</operator><name pos:start="109:57" pos:end="109:70">component_size</name></name></expr></argument>,
                            <argument pos:start="110:29" pos:end="110:65"><expr pos:start="110:29" pos:end="110:65"><name pos:start="110:29" pos:end="110:41"><name pos:start="110:29" pos:end="110:31">ctx</name><operator pos:start="110:32" pos:end="110:33">-&gt;</operator><name pos:start="110:34" pos:end="110:38">tiles</name><index pos:start="110:39" pos:end="110:41">[<expr pos:start="110:40" pos:end="110:40"><name pos:start="110:40" pos:end="110:40">i</name></expr>]</index></name><operator pos:start="110:42" pos:end="110:42">.</operator><name pos:start="110:43" pos:end="110:43">w</name> <operator pos:start="110:45" pos:end="110:45">*</operator> <name pos:start="110:47" pos:end="110:65"><name pos:start="110:47" pos:end="110:49">ctx</name><operator pos:start="110:50" pos:end="110:51">-&gt;</operator><name pos:start="110:52" pos:end="110:65">component_size</name></name></expr></argument>,
                            <argument pos:start="111:29" pos:end="111:43"><expr pos:start="111:29" pos:end="111:43"><name pos:start="111:29" pos:end="111:41"><name pos:start="111:29" pos:end="111:31">ctx</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:38">tiles</name><index pos:start="111:39" pos:end="111:41">[<expr pos:start="111:40" pos:end="111:40"><name pos:start="111:40" pos:end="111:40">i</name></expr>]</index></name><operator pos:start="111:42" pos:end="111:42">.</operator><name pos:start="111:43" pos:end="111:43">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="112:9" pos:end="112:71"><expr pos:start="112:9" pos:end="112:70"><name pos:start="112:9" pos:end="112:11">raw</name> <operator pos:start="112:13" pos:end="112:14">+=</operator> <name pos:start="112:16" pos:end="112:28"><name pos:start="112:16" pos:end="112:18">ctx</name><operator pos:start="112:19" pos:end="112:20">-&gt;</operator><name pos:start="112:21" pos:end="112:25">tiles</name><index pos:start="112:26" pos:end="112:28">[<expr pos:start="112:27" pos:end="112:27"><name pos:start="112:27" pos:end="112:27">i</name></expr>]</index></name><operator pos:start="112:29" pos:end="112:29">.</operator><name pos:start="112:30" pos:end="112:30">w</name> <operator pos:start="112:32" pos:end="112:32">*</operator> <name pos:start="112:34" pos:end="112:52"><name pos:start="112:34" pos:end="112:36">ctx</name><operator pos:start="112:37" pos:end="112:38">-&gt;</operator><name pos:start="112:39" pos:end="112:52">component_size</name></name> <operator pos:start="112:54" pos:end="112:54">*</operator> <name pos:start="112:56" pos:end="112:68"><name pos:start="112:56" pos:end="112:58">ctx</name><operator pos:start="112:59" pos:end="112:60">-&gt;</operator><name pos:start="112:61" pos:end="112:65">tiles</name><index pos:start="112:66" pos:end="112:68">[<expr pos:start="112:67" pos:end="112:67"><name pos:start="112:67" pos:end="112:67">i</name></expr>]</index></name><operator pos:start="112:69" pos:end="112:69">.</operator><name pos:start="112:70" pos:end="112:70">h</name></expr>;</expr_stmt>
    <comment type="block" pos:start="113:5" pos:end="113:37">/* Frame is ready to be output */</comment>
    <expr_stmt pos:start="114:5" pos:end="114:46"><expr pos:start="114:5" pos:end="114:45"><name pos:start="114:5" pos:end="114:7">ret</name> <operator pos:start="114:9" pos:end="114:9">=</operator> <call pos:start="114:11" pos:end="114:45"><name pos:start="114:11" pos:end="114:22">av_frame_ref</name><argument_list pos:start="114:23" pos:end="114:45">(<argument pos:start="114:24" pos:end="114:28"><expr pos:start="114:24" pos:end="114:28"><name pos:start="114:24" pos:end="114:28">frame</name></expr></argument>, <argument pos:start="114:31" pos:end="114:44"><expr pos:start="114:31" pos:end="114:44"><name pos:start="114:31" pos:end="114:44"><name pos:start="114:31" pos:end="114:33">ctx</name><operator pos:start="114:34" pos:end="114:35">-&gt;</operator><name pos:start="114:36" pos:end="114:44">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="115:5" pos:end="138:15"><if pos:start="115:5" pos:end="138:15">if <condition pos:start="115:8" pos:end="115:16">(<expr pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">&lt;</operator> <literal type="number" pos:start="115:15" pos:end="115:15">0</literal></expr>)</condition><block type="pseudo" pos:start="117:5" pos:end="138:15"><block_content pos:start="117:5" pos:end="138:15">
    <comment type="block" pos:start="116:5" pos:end="116:78">/* Keyframe when the number of pixels updated matches the whole surface */</comment>
    <if_stmt pos:start="117:5" pos:end="138:15"><if pos:start="117:5" pos:end="120:5">if <condition pos:start="117:8" pos:end="117:41">(<expr pos:start="117:9" pos:end="117:40"><name pos:start="117:9" pos:end="117:18">pixel_size</name> <operator pos:start="117:20" pos:end="117:21">==</operator> <name pos:start="117:23" pos:end="117:40"><name pos:start="117:23" pos:end="117:25">ctx</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:40">inflated_size</name></name></expr>)</condition> <block pos:start="117:43" pos:end="120:5">{<block_content pos:start="118:9" pos:end="119:29">
        <expr_stmt pos:start="118:9" pos:end="118:45"><expr pos:start="118:9" pos:end="118:44"><name pos:start="118:9" pos:end="118:24"><name pos:start="118:9" pos:end="118:13">frame</name><operator pos:start="118:14" pos:end="118:15">-&gt;</operator><name pos:start="118:16" pos:end="118:24">pict_type</name></name> <operator pos:start="118:26" pos:end="118:26">=</operator> <name pos:start="118:28" pos:end="118:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
        <expr_stmt pos:start="119:9" pos:end="119:29"><expr pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:13">frame</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:24">key_frame</name></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <literal type="number" pos:start="119:28" pos:end="119:28">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="120:7" pos:end="138:15">else <block pos:start="120:12" pos:end="138:15">{<block_content pos:start="121:9" pos:end="138:15">
        <expr_stmt pos:start="121:9" pos:end="121:45"><expr pos:start="121:9" pos:end="121:44"><name pos:start="121:9" pos:end="121:24"><name pos:start="121:9" pos:end="121:13">frame</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:24">pict_type</name></name> <operator pos:start="121:26" pos:end="121:26">=</operator> <name pos:start="121:28" pos:end="121:44">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>
    <comment type="block" pos:start="122:5" pos:end="122:26">/* Palette handling */</comment>
    <if_stmt pos:start="123:5" pos:end="138:15"><if pos:start="123:5" pos:end="138:15">if <condition pos:start="123:8" pos:end="123:42">(<expr pos:start="123:9" pos:end="123:41"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:13">avctx</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:22">pix_fmt</name></name> <operator pos:start="123:24" pos:end="123:25">==</operator> <name pos:start="123:27" pos:end="123:41">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="123:44" pos:end="138:15">{<block_content pos:start="124:9" pos:end="138:15">
        <decl_stmt pos:start="124:9" pos:end="124:17"><decl pos:start="124:9" pos:end="124:16"><type pos:start="124:9" pos:end="124:11"><name pos:start="124:9" pos:end="124:11">int</name></type> <name pos:start="124:13" pos:end="124:16">size</name></decl>;</decl_stmt>
        <decl_stmt pos:start="125:9" pos:end="127:64"><decl pos:start="125:9" pos:end="127:63"><type pos:start="125:9" pos:end="125:23"><specifier pos:start="125:9" pos:end="125:13">const</specifier> <name pos:start="125:15" pos:end="125:21">uint8_t</name> <modifier pos:start="125:23" pos:end="125:23">*</modifier></type><name pos:start="125:24" pos:end="125:30">palette</name> <init pos:start="125:32" pos:end="127:63">= <expr pos:start="125:34" pos:end="127:63"><call pos:start="125:34" pos:end="127:63"><name pos:start="125:34" pos:end="125:56">av_packet_get_side_data</name><argument_list pos:start="125:57" pos:end="127:63">(<argument pos:start="125:58" pos:end="125:62"><expr pos:start="125:58" pos:end="125:62"><name pos:start="125:58" pos:end="125:62">avpkt</name></expr></argument>,
                                                         <argument pos:start="126:58" pos:end="126:76"><expr pos:start="126:58" pos:end="126:76"><name pos:start="126:58" pos:end="126:76">AV_PKT_DATA_PALETTE</name></expr></argument>,
                                                         <argument pos:start="127:58" pos:end="127:62"><expr pos:start="127:58" pos:end="127:62"><operator pos:start="127:58" pos:end="127:58">&amp;</operator><name pos:start="127:59" pos:end="127:62">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="128:9" pos:end="138:15"><if pos:start="128:9" pos:end="131:9">if <condition pos:start="128:12" pos:end="128:46">(<expr pos:start="128:13" pos:end="128:45"><name pos:start="128:13" pos:end="128:19">palette</name> <operator pos:start="128:21" pos:end="128:22">&amp;&amp;</operator> <name pos:start="128:24" pos:end="128:27">size</name> <operator pos:start="128:29" pos:end="128:30">==</operator> <name pos:start="128:32" pos:end="128:45">AVPALETTE_SIZE</name></expr>)</condition> <block pos:start="128:48" pos:end="131:9">{<block_content pos:start="129:13" pos:end="130:58">
            <expr_stmt pos:start="129:13" pos:end="129:43"><expr pos:start="129:13" pos:end="129:42"><name pos:start="129:13" pos:end="129:38"><name pos:start="129:13" pos:end="129:17">frame</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:38">palette_has_changed</name></name> <operator pos:start="129:40" pos:end="129:40">=</operator> <literal type="number" pos:start="129:42" pos:end="129:42">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="130:13" pos:end="130:58"><expr pos:start="130:13" pos:end="130:57"><call pos:start="130:13" pos:end="130:57"><name pos:start="130:13" pos:end="130:18">memcpy</name><argument_list pos:start="130:19" pos:end="130:57">(<argument pos:start="130:20" pos:end="130:31"><expr pos:start="130:20" pos:end="130:31"><name pos:start="130:20" pos:end="130:31"><name pos:start="130:20" pos:end="130:22">ctx</name><operator pos:start="130:23" pos:end="130:24">-&gt;</operator><name pos:start="130:25" pos:end="130:31">palette</name></name></expr></argument>, <argument pos:start="130:34" pos:end="130:40"><expr pos:start="130:34" pos:end="130:40"><name pos:start="130:34" pos:end="130:40">palette</name></expr></argument>, <argument pos:start="130:43" pos:end="130:56"><expr pos:start="130:43" pos:end="130:56"><name pos:start="130:43" pos:end="130:56">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="131:11" pos:end="138:15">else if <condition pos:start="131:19" pos:end="131:27">(<expr pos:start="131:20" pos:end="131:26"><name pos:start="131:20" pos:end="131:26">palette</name></expr>)</condition> <block pos:start="131:29" pos:end="138:15">{<block_content pos:start="132:13" pos:end="138:15">
            <expr_stmt pos:start="132:13" pos:end="132:76"><expr pos:start="132:13" pos:end="132:75"><call pos:start="132:13" pos:end="132:75"><name pos:start="132:13" pos:end="132:18">av_log</name><argument_list pos:start="132:19" pos:end="132:75">(<argument pos:start="132:20" pos:end="132:24"><expr pos:start="132:20" pos:end="132:24"><name pos:start="132:20" pos:end="132:24">avctx</name></expr></argument>, <argument pos:start="132:27" pos:end="132:38"><expr pos:start="132:27" pos:end="132:38"><name pos:start="132:27" pos:end="132:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="132:41" pos:end="132:68"><expr pos:start="132:41" pos:end="132:68"><literal type="string" pos:start="132:41" pos:end="132:68">"Palette size %d is wrong\n"</literal></expr></argument>, <argument pos:start="132:71" pos:end="132:74"><expr pos:start="132:71" pos:end="132:74"><name pos:start="132:71" pos:end="132:74">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="133:9" pos:end="133:62"><expr pos:start="133:9" pos:end="133:61"><call pos:start="133:9" pos:end="133:61"><name pos:start="133:9" pos:end="133:14">memcpy</name> <argument_list pos:start="133:16" pos:end="133:61">(<argument pos:start="133:17" pos:end="133:30"><expr pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:21">frame</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:27">data</name><index pos:start="133:28" pos:end="133:30">[<expr pos:start="133:29" pos:end="133:29"><literal type="number" pos:start="133:29" pos:end="133:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="133:33" pos:end="133:44"><expr pos:start="133:33" pos:end="133:44"><name pos:start="133:33" pos:end="133:44"><name pos:start="133:33" pos:end="133:35">ctx</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:44">palette</name></name></expr></argument>, <argument pos:start="133:47" pos:end="133:60"><expr pos:start="133:47" pos:end="133:60"><name pos:start="133:47" pos:end="133:60">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="134:5" pos:end="134:19"><expr pos:start="134:5" pos:end="134:18"><operator pos:start="134:5" pos:end="134:5">*</operator><name pos:start="134:6" pos:end="134:14">got_frame</name> <operator pos:start="134:16" pos:end="134:16">=</operator> <literal type="number" pos:start="134:18" pos:end="134:18">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="135:5" pos:end="135:22"><expr pos:start="135:5" pos:end="135:21"><name pos:start="135:5" pos:end="135:7">ret</name> <operator pos:start="135:9" pos:end="135:9">=</operator> <name pos:start="135:11" pos:end="135:21"><name pos:start="135:11" pos:end="135:15">avpkt</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:21">size</name></name></expr>;</expr_stmt>
<label pos:start="136:1" pos:end="136:4"><name pos:start="136:1" pos:end="136:3">end</name>:</label>
    <expr_stmt pos:start="137:5" pos:end="137:28"><expr pos:start="137:5" pos:end="137:27"><call pos:start="137:5" pos:end="137:27"><name pos:start="137:5" pos:end="137:11">av_free</name><argument_list pos:start="137:12" pos:end="137:27">(<argument pos:start="137:13" pos:end="137:26"><expr pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:26">inflated_tiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="138:5" pos:end="138:15">return <expr pos:start="138:12" pos:end="138:14"><name pos:start="138:12" pos:end="138:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
