<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4293.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">iommu_mem_writew</name><parameter_list pos:start="1:29" pos:end="3:42">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:66">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:37">uint32_t</name></type> <name pos:start="3:39" pos:end="3:41">val</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="7:5" pos:end="147:5">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">IOMMUState</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:26">= <expr pos:start="7:21" pos:end="7:26"><name pos:start="7:21" pos:end="7:26">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">target_phys_addr_t</name></type> <name pos:start="9:24" pos:end="9:28">saddr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:9">saddr</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:17">addr</name> <operator pos:start="13:19" pos:end="13:19">-</operator> <name pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:27">addr</name></name><operator pos:start="13:28" pos:end="13:28">)</operator> <operator pos:start="13:30" pos:end="13:31">&gt;&gt;</operator> <literal type="number" pos:start="13:33" pos:end="13:33">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:53"><expr pos:start="15:5" pos:end="15:52"><call pos:start="15:5" pos:end="15:52"><name pos:start="15:5" pos:end="15:11">DPRINTF</name><argument_list pos:start="15:12" pos:end="15:52">(<argument pos:start="15:13" pos:end="15:34"><expr pos:start="15:13" pos:end="15:34"><literal type="string" pos:start="15:13" pos:end="15:34">"write reg[%d] = %x\n"</literal></expr></argument>, <argument pos:start="15:37" pos:end="15:46"><expr pos:start="15:37" pos:end="15:46"><operator pos:start="15:37" pos:end="15:37">(</operator><name pos:start="15:38" pos:end="15:40">int</name><operator pos:start="15:41" pos:end="15:41">)</operator><name pos:start="15:42" pos:end="15:46">saddr</name></expr></argument>, <argument pos:start="15:49" pos:end="15:51"><expr pos:start="15:49" pos:end="15:51"><name pos:start="15:49" pos:end="15:51">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="147:5">switch <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">saddr</name></expr>)</condition> <block pos:start="17:20" pos:end="147:5">{<block_content pos:start="19:5" pos:end="145:14">

    <case pos:start="19:5" pos:end="19:20">case <expr pos:start="19:10" pos:end="19:19"><name pos:start="19:10" pos:end="19:19">IOMMU_CTRL</name></expr>:</case>

        <switch pos:start="21:9" pos:end="73:9">switch <condition pos:start="21:16" pos:end="21:38">(<expr pos:start="21:17" pos:end="21:37"><name pos:start="21:17" pos:end="21:19">val</name> <operator pos:start="21:21" pos:end="21:21">&amp;</operator> <name pos:start="21:23" pos:end="21:37">IOMMU_CTRL_RNGE</name></expr>)</condition> <block pos:start="21:40" pos:end="73:9">{<block_content pos:start="23:9" pos:end="71:18">

        <case pos:start="23:9" pos:end="23:29">case <expr pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:28">IOMMU_RNGE_16MB</name></expr>:</case>

            <expr_stmt pos:start="25:13" pos:end="25:47"><expr pos:start="25:13" pos:end="25:46"><name pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">iostart</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <literal type="number" pos:start="25:26" pos:end="25:46">0xffffffffff000000ULL</literal></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:29">case <expr pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:28">IOMMU_RNGE_32MB</name></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:47"><expr pos:start="31:13" pos:end="31:46"><name pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:22">iostart</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <literal type="number" pos:start="31:26" pos:end="31:46">0xfffffffffe000000ULL</literal></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:29">case <expr pos:start="35:14" pos:end="35:28"><name pos:start="35:14" pos:end="35:28">IOMMU_RNGE_64MB</name></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:47"><expr pos:start="37:13" pos:end="37:46"><name pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:22">iostart</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:46">0xfffffffffc000000ULL</literal></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:30">case <expr pos:start="41:14" pos:end="41:29"><name pos:start="41:14" pos:end="41:29">IOMMU_RNGE_128MB</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:47"><expr pos:start="43:13" pos:end="43:46"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">iostart</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:46">0xfffffffff8000000ULL</literal></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:30">case <expr pos:start="47:14" pos:end="47:29"><name pos:start="47:14" pos:end="47:29">IOMMU_RNGE_256MB</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:47"><expr pos:start="49:13" pos:end="49:46"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">iostart</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <literal type="number" pos:start="49:26" pos:end="49:46">0xfffffffff0000000ULL</literal></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:30">case <expr pos:start="53:14" pos:end="53:29"><name pos:start="53:14" pos:end="53:29">IOMMU_RNGE_512MB</name></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:47"><expr pos:start="55:13" pos:end="55:46"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">iostart</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <literal type="number" pos:start="55:26" pos:end="55:46">0xffffffffe0000000ULL</literal></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:28">case <expr pos:start="59:14" pos:end="59:27"><name pos:start="59:14" pos:end="59:27">IOMMU_RNGE_1GB</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:47"><expr pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:22">iostart</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <literal type="number" pos:start="61:26" pos:end="61:46">0xffffffffc0000000ULL</literal></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <default pos:start="65:9" pos:end="65:16">default:</default>

        <case pos:start="67:9" pos:end="67:28">case <expr pos:start="67:14" pos:end="67:27"><name pos:start="67:14" pos:end="67:27">IOMMU_RNGE_2GB</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:47"><expr pos:start="69:13" pos:end="69:46"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:22">iostart</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <literal type="number" pos:start="69:26" pos:end="69:46">0xffffffff80000000ULL</literal></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="75:9" pos:end="75:62"><expr pos:start="75:9" pos:end="75:61"><call pos:start="75:9" pos:end="75:61"><name pos:start="75:9" pos:end="75:15">DPRINTF</name><argument_list pos:start="75:16" pos:end="75:61">(<argument pos:start="75:17" pos:end="75:48"><expr pos:start="75:17" pos:end="75:48"><literal type="string" pos:start="75:17" pos:end="75:28">"iostart = "</literal> <name pos:start="75:30" pos:end="75:43">TARGET_FMT_plx</name> <literal type="string" pos:start="75:45" pos:end="75:48">"\n"</literal></expr></argument>, <argument pos:start="75:51" pos:end="75:60"><expr pos:start="75:51" pos:end="75:60"><name pos:start="75:51" pos:end="75:60"><name pos:start="75:51" pos:end="75:51">s</name><operator pos:start="75:52" pos:end="75:53">-&gt;</operator><name pos:start="75:54" pos:end="75:60">iostart</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:64"><expr pos:start="77:9" pos:end="77:63"><name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">regs</name><index pos:start="77:16" pos:end="77:22">[<expr pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:21">saddr</name></expr>]</index></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <operator pos:start="77:26" pos:end="77:26">(</operator><operator pos:start="77:27" pos:end="77:27">(</operator><name pos:start="77:28" pos:end="77:30">val</name> <operator pos:start="77:32" pos:end="77:32">&amp;</operator> <name pos:start="77:34" pos:end="77:48">IOMMU_CTRL_MASK</name><operator pos:start="77:49" pos:end="77:49">)</operator> <operator pos:start="77:51" pos:end="77:51">|</operator> <name pos:start="77:53" pos:end="77:62"><name pos:start="77:53" pos:end="77:53">s</name><operator pos:start="77:54" pos:end="77:55">-&gt;</operator><name pos:start="77:56" pos:end="77:62">version</name></name><operator pos:start="77:63" pos:end="77:63">)</operator></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:20">case <expr pos:start="81:10" pos:end="81:19"><name pos:start="81:10" pos:end="81:19">IOMMU_BASE</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:15">regs</name><index pos:start="83:16" pos:end="83:22">[<expr pos:start="83:17" pos:end="83:21"><name pos:start="83:17" pos:end="83:21">saddr</name></expr>]</index></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:28">val</name> <operator pos:start="83:30" pos:end="83:30">&amp;</operator> <name pos:start="83:32" pos:end="83:46">IOMMU_BASE_MASK</name></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:24">case <expr pos:start="87:10" pos:end="87:23"><name pos:start="87:10" pos:end="87:23">IOMMU_TLBFLUSH</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:39"><expr pos:start="89:9" pos:end="89:38"><call pos:start="89:9" pos:end="89:38"><name pos:start="89:9" pos:end="89:15">DPRINTF</name><argument_list pos:start="89:16" pos:end="89:38">(<argument pos:start="89:17" pos:end="89:32"><expr pos:start="89:17" pos:end="89:32"><literal type="string" pos:start="89:17" pos:end="89:32">"tlb flush %x\n"</literal></expr></argument>, <argument pos:start="89:35" pos:end="89:37"><expr pos:start="89:35" pos:end="89:37"><name pos:start="89:35" pos:end="89:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:51"><expr pos:start="91:9" pos:end="91:50"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:15">regs</name><index pos:start="91:16" pos:end="91:22">[<expr pos:start="91:17" pos:end="91:21"><name pos:start="91:17" pos:end="91:21">saddr</name></expr>]</index></name> <operator pos:start="91:24" pos:end="91:24">=</operator> <name pos:start="91:26" pos:end="91:28">val</name> <operator pos:start="91:30" pos:end="91:30">&amp;</operator> <name pos:start="91:32" pos:end="91:50">IOMMU_TLBFLUSH_MASK</name></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:23">case <expr pos:start="95:10" pos:end="95:22"><name pos:start="95:10" pos:end="95:22">IOMMU_PGFLUSH</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:40"><expr pos:start="97:9" pos:end="97:39"><call pos:start="97:9" pos:end="97:39"><name pos:start="97:9" pos:end="97:15">DPRINTF</name><argument_list pos:start="97:16" pos:end="97:39">(<argument pos:start="97:17" pos:end="97:33"><expr pos:start="97:17" pos:end="97:33"><literal type="string" pos:start="97:17" pos:end="97:33">"page flush %x\n"</literal></expr></argument>, <argument pos:start="97:36" pos:end="97:38"><expr pos:start="97:36" pos:end="97:38"><name pos:start="97:36" pos:end="97:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:50"><expr pos:start="99:9" pos:end="99:49"><name pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:15">regs</name><index pos:start="99:16" pos:end="99:22">[<expr pos:start="99:17" pos:end="99:21"><name pos:start="99:17" pos:end="99:21">saddr</name></expr>]</index></name> <operator pos:start="99:24" pos:end="99:24">=</operator> <name pos:start="99:26" pos:end="99:28">val</name> <operator pos:start="99:30" pos:end="99:30">&amp;</operator> <name pos:start="99:32" pos:end="99:49">IOMMU_PGFLUSH_MASK</name></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:20">case <expr pos:start="103:10" pos:end="103:19"><name pos:start="103:10" pos:end="103:19">IOMMU_AFAR</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:29"><expr pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:15">regs</name><index pos:start="105:16" pos:end="105:22">[<expr pos:start="105:17" pos:end="105:21"><name pos:start="105:17" pos:end="105:21">saddr</name></expr>]</index></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:28">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:31"><expr pos:start="107:9" pos:end="107:30"><call pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:22">qemu_irq_lower</name><argument_list pos:start="107:23" pos:end="107:30">(<argument pos:start="107:24" pos:end="107:29"><expr pos:start="107:24" pos:end="107:29"><name pos:start="107:24" pos:end="107:29"><name pos:start="107:24" pos:end="107:24">s</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:29">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:20">case <expr pos:start="111:10" pos:end="111:19"><name pos:start="111:10" pos:end="111:19">IOMMU_AFSR</name></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="113:67"><expr pos:start="113:9" pos:end="113:66"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:15">regs</name><index pos:start="113:16" pos:end="113:22">[<expr pos:start="113:17" pos:end="113:21"><name pos:start="113:17" pos:end="113:21">saddr</name></expr>]</index></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <operator pos:start="113:26" pos:end="113:26">(</operator><name pos:start="113:27" pos:end="113:29">val</name> <operator pos:start="113:31" pos:end="113:31">&amp;</operator> <name pos:start="113:33" pos:end="113:47">IOMMU_AFSR_MASK</name><operator pos:start="113:48" pos:end="113:48">)</operator> <operator pos:start="113:50" pos:end="113:50">|</operator> <name pos:start="113:52" pos:end="113:66">IOMMU_AFSR_RESV</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:31"><expr pos:start="115:9" pos:end="115:30"><call pos:start="115:9" pos:end="115:30"><name pos:start="115:9" pos:end="115:22">qemu_irq_lower</name><argument_list pos:start="115:23" pos:end="115:30">(<argument pos:start="115:24" pos:end="115:29"><expr pos:start="115:24" pos:end="115:29"><name pos:start="115:24" pos:end="115:29"><name pos:start="115:24" pos:end="115:24">s</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:29">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:22">case <expr pos:start="119:10" pos:end="119:21"><name pos:start="119:10" pos:end="119:21">IOMMU_SBCFG0</name></expr>:</case>

    <case pos:start="121:5" pos:end="121:22">case <expr pos:start="121:10" pos:end="121:21"><name pos:start="121:10" pos:end="121:21">IOMMU_SBCFG1</name></expr>:</case>

    <case pos:start="123:5" pos:end="123:22">case <expr pos:start="123:10" pos:end="123:21"><name pos:start="123:10" pos:end="123:21">IOMMU_SBCFG2</name></expr>:</case>

    <case pos:start="125:5" pos:end="125:22">case <expr pos:start="125:10" pos:end="125:21"><name pos:start="125:10" pos:end="125:21">IOMMU_SBCFG3</name></expr>:</case>

        <expr_stmt pos:start="127:9" pos:end="127:48"><expr pos:start="127:9" pos:end="127:47"><name pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:15">regs</name><index pos:start="127:16" pos:end="127:22">[<expr pos:start="127:17" pos:end="127:21"><name pos:start="127:17" pos:end="127:21">saddr</name></expr>]</index></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <name pos:start="127:26" pos:end="127:28">val</name> <operator pos:start="127:30" pos:end="127:30">&amp;</operator> <name pos:start="127:32" pos:end="127:47">IOMMU_SBCFG_MASK</name></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    <case pos:start="131:5" pos:end="131:21">case <expr pos:start="131:10" pos:end="131:20"><name pos:start="131:10" pos:end="131:20">IOMMU_ARBEN</name></expr>:</case>

        <comment type="line" pos:start="133:9" pos:end="133:66">// XXX implement SBus probing: fault when reading unmapped</comment>

        <comment type="line" pos:start="135:9" pos:end="135:65">// addresses, fault cause and address stored to MMU/IOMMU</comment>

        <expr_stmt pos:start="137:9" pos:end="137:62"><expr pos:start="137:9" pos:end="137:61"><name pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:15">regs</name><index pos:start="137:16" pos:end="137:22">[<expr pos:start="137:17" pos:end="137:21"><name pos:start="137:17" pos:end="137:21">saddr</name></expr>]</index></name> <operator pos:start="137:24" pos:end="137:24">=</operator> <operator pos:start="137:26" pos:end="137:26">(</operator><name pos:start="137:27" pos:end="137:29">val</name> <operator pos:start="137:31" pos:end="137:31">&amp;</operator> <name pos:start="137:33" pos:end="137:48">IOMMU_ARBEN_MASK</name><operator pos:start="137:49" pos:end="137:49">)</operator> <operator pos:start="137:51" pos:end="137:51">|</operator> <name pos:start="137:53" pos:end="137:61">IOMMU_MID</name></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <default pos:start="141:5" pos:end="141:12">default:</default>

        <expr_stmt pos:start="143:9" pos:end="143:29"><expr pos:start="143:9" pos:end="143:28"><name pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:15">regs</name><index pos:start="143:16" pos:end="143:22">[<expr pos:start="143:17" pos:end="143:21"><name pos:start="143:17" pos:end="143:21">saddr</name></expr>]</index></name> <operator pos:start="143:24" pos:end="143:24">=</operator> <name pos:start="143:26" pos:end="143:28">val</name></expr>;</expr_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
