<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22727.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">size_t</name></type> <name pos:start="1:15" pos:end="1:34">stream_process_s2mem</name><parameter_list pos:start="1:35" pos:end="3:61">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:41">struct</name> <name pos:start="1:43" pos:end="1:48">Stream</name></name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:61">unsigned</name> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">buf</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:45"><decl pos:start="3:36" pos:end="3:45"><type pos:start="3:36" pos:end="3:45"><name pos:start="3:36" pos:end="3:41">size_t</name></type> <name pos:start="3:43" pos:end="3:45">len</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:60"><decl pos:start="3:48" pos:end="3:60"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:55">uint32_t</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:60">app</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="111:15">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:19">prev_d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:22">rxlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:14">pos</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">sof</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:45">(<expr pos:start="17:9" pos:end="17:44"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:26"><name pos:start="17:10" pos:end="17:23">stream_running</name><argument_list pos:start="17:24" pos:end="17:26">(<argument pos:start="17:25" pos:end="17:25"><expr pos:start="17:25" pos:end="17:25"><name pos:start="17:25" pos:end="17:25">s</name></expr></argument>)</argument_list></call> <operator pos:start="17:28" pos:end="17:29">||</operator> <call pos:start="17:31" pos:end="17:44"><name pos:start="17:31" pos:end="17:41">stream_idle</name><argument_list pos:start="17:42" pos:end="17:44">(<argument pos:start="17:43" pos:end="17:43"><expr pos:start="17:43" pos:end="17:43"><name pos:start="17:43" pos:end="17:43">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:47" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="25:5" pos:end="107:5">while <condition pos:start="25:11" pos:end="25:15">(<expr pos:start="25:12" pos:end="25:14"><name pos:start="25:12" pos:end="25:14">len</name></expr>)</condition> <block pos:start="25:17" pos:end="107:5">{<block_content pos:start="27:9" pos:end="105:9">

        <expr_stmt pos:start="27:9" pos:end="27:48"><expr pos:start="27:9" pos:end="27:47"><call pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:24">stream_desc_load</name><argument_list pos:start="27:25" pos:end="27:47">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">s</name></expr></argument>, <argument pos:start="27:29" pos:end="27:46"><expr pos:start="27:29" pos:end="27:46"><name pos:start="27:29" pos:end="27:46"><name pos:start="27:29" pos:end="27:29">s</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:35">regs</name><index pos:start="27:36" pos:end="27:46">[<expr pos:start="27:37" pos:end="27:45"><name pos:start="27:37" pos:end="27:45">R_CURDESC</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:51">(<expr pos:start="31:13" pos:end="31:50"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:19">desc</name><operator pos:start="31:20" pos:end="31:20">.</operator><name pos:start="31:21" pos:end="31:26">status</name></name> <operator pos:start="31:28" pos:end="31:28">&amp;</operator> <name pos:start="31:30" pos:end="31:50">SDESC_STATUS_COMPLETE</name></expr>)</condition> <block pos:start="31:53" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:18">

            <expr_stmt pos:start="33:13" pos:end="33:45"><expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:19">regs</name><index pos:start="33:20" pos:end="33:28">[<expr pos:start="33:21" pos:end="33:27"><name pos:start="33:21" pos:end="33:27">R_DMASR</name></expr>]</index></name> <operator pos:start="33:30" pos:end="33:31">|=</operator> <name pos:start="33:33" pos:end="33:44">DMASR_HALTED</name></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:13">rxlen</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:31"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:23">desc</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:31">control</name></name> <operator pos:start="41:33" pos:end="41:33">&amp;</operator> <name pos:start="41:35" pos:end="41:53">SDESC_CTRL_LEN_MASK</name></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:24">(<expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:17">rxlen</name> <operator pos:start="43:19" pos:end="43:19">&gt;</operator> <name pos:start="43:21" pos:end="43:23">len</name></expr>)</condition> <block pos:start="43:26" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:24">

            <comment type="block" pos:start="45:13" pos:end="45:27">/* It fits.  */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:24"><expr pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:17">rxlen</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:23">len</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:76"><expr pos:start="53:9" pos:end="53:75"><call pos:start="53:9" pos:end="53:75"><name pos:start="53:9" pos:end="53:33">cpu_physical_memory_write</name><argument_list pos:start="53:34" pos:end="53:75">(<argument pos:start="53:35" pos:end="53:56"><expr pos:start="53:35" pos:end="53:56"><name pos:start="53:35" pos:end="53:56"><name pos:start="53:35" pos:end="53:35">s</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:41">desc</name><operator pos:start="53:42" pos:end="53:42">.</operator><name pos:start="53:43" pos:end="53:56">buffer_address</name></name></expr></argument>, <argument pos:start="53:59" pos:end="53:67"><expr pos:start="53:59" pos:end="53:67"><name pos:start="53:59" pos:end="53:61">buf</name> <operator pos:start="53:63" pos:end="53:63">+</operator> <name pos:start="53:65" pos:end="53:67">pos</name></expr></argument>, <argument pos:start="53:70" pos:end="53:74"><expr pos:start="53:70" pos:end="53:74"><name pos:start="53:70" pos:end="53:74">rxlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:21"><expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:11">len</name> <operator pos:start="55:13" pos:end="55:14">-=</operator> <name pos:start="55:16" pos:end="55:20">rxlen</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:11">pos</name> <operator pos:start="57:13" pos:end="57:14">+=</operator> <name pos:start="57:16" pos:end="57:20">rxlen</name></expr>;</expr_stmt>



        <comment type="block" pos:start="61:9" pos:end="61:37">/* Update the descriptor.  */</comment>

        <if_stmt pos:start="63:9" pos:end="79:9"><if pos:start="63:9" pos:end="79:9">if <condition pos:start="63:12" pos:end="63:17">(<expr pos:start="63:13" pos:end="63:16"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:16">len</name></expr>)</condition> <block pos:start="63:19" pos:end="79:9">{<block_content pos:start="65:13" pos:end="77:47">

            <decl_stmt pos:start="65:13" pos:end="65:18"><decl pos:start="65:13" pos:end="65:17"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:31"><expr pos:start="69:13" pos:end="69:30"><call pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:27">stream_complete</name><argument_list pos:start="69:28" pos:end="69:30">(<argument pos:start="69:29" pos:end="69:29"><expr pos:start="69:29" pos:end="69:29"><name pos:start="69:29" pos:end="69:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="71:13" pos:end="75:13">for <control pos:start="71:17" pos:end="71:35">(<init pos:start="71:18" pos:end="71:23"><expr pos:start="71:18" pos:end="71:22"><name pos:start="71:18" pos:end="71:18">i</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</init> <condition pos:start="71:25" pos:end="71:30"><expr pos:start="71:25" pos:end="71:29"><name pos:start="71:25" pos:end="71:25">i</name> <operator pos:start="71:27" pos:end="71:27">&lt;</operator> <literal type="number" pos:start="71:29" pos:end="71:29">5</literal></expr>;</condition> <incr pos:start="71:32" pos:end="71:34"><expr pos:start="71:32" pos:end="71:34"><name pos:start="71:32" pos:end="71:32">i</name><operator pos:start="71:33" pos:end="71:34">++</operator></expr></incr>)</control> <block pos:start="71:37" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:40">

                <expr_stmt pos:start="73:17" pos:end="73:40"><expr pos:start="73:17" pos:end="73:39"><name pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:23">desc</name><operator pos:start="73:24" pos:end="73:24">.</operator><name pos:start="73:25" pos:end="73:27">app</name><index pos:start="73:28" pos:end="73:30">[<expr pos:start="73:29" pos:end="73:29"><name pos:start="73:29" pos:end="73:29">i</name></expr>]</index></name> <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:39"><name pos:start="73:34" pos:end="73:36">app</name><index pos:start="73:37" pos:end="73:39">[<expr pos:start="73:38" pos:end="73:38"><name pos:start="73:38" pos:end="73:38">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="77:13" pos:end="77:47"><expr pos:start="77:13" pos:end="77:46"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:19">desc</name><operator pos:start="77:20" pos:end="77:20">.</operator><name pos:start="77:21" pos:end="77:26">status</name></name> <operator pos:start="77:28" pos:end="77:29">|=</operator> <name pos:start="77:31" pos:end="77:46">SDESC_STATUS_EOF</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:54"><expr pos:start="83:9" pos:end="83:53"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:15">desc</name><operator pos:start="83:16" pos:end="83:16">.</operator><name pos:start="83:17" pos:end="83:22">status</name></name> <operator pos:start="83:24" pos:end="83:25">|=</operator> <name pos:start="83:27" pos:end="83:29">sof</name> <operator pos:start="83:31" pos:end="83:32">&lt;&lt;</operator> <name pos:start="83:34" pos:end="83:53">SDESC_STATUS_SOF_BIT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:48"><expr pos:start="85:9" pos:end="85:47"><name pos:start="85:9" pos:end="85:22"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:15">desc</name><operator pos:start="85:16" pos:end="85:16">.</operator><name pos:start="85:17" pos:end="85:22">status</name></name> <operator pos:start="85:24" pos:end="85:25">|=</operator> <name pos:start="85:27" pos:end="85:47">SDESC_STATUS_COMPLETE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:49"><expr pos:start="87:9" pos:end="87:48"><call pos:start="87:9" pos:end="87:48"><name pos:start="87:9" pos:end="87:25">stream_desc_store</name><argument_list pos:start="87:26" pos:end="87:48">(<argument pos:start="87:27" pos:end="87:27"><expr pos:start="87:27" pos:end="87:27"><name pos:start="87:27" pos:end="87:27">s</name></expr></argument>, <argument pos:start="87:30" pos:end="87:47"><expr pos:start="87:30" pos:end="87:47"><name pos:start="87:30" pos:end="87:47"><name pos:start="87:30" pos:end="87:30">s</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:36">regs</name><index pos:start="87:37" pos:end="87:47">[<expr pos:start="87:38" pos:end="87:46"><name pos:start="87:38" pos:end="87:46">R_CURDESC</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:11">sof</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <literal type="number" pos:start="89:15" pos:end="89:15">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="93:9" pos:end="93:23">/* Advance.  */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:36"><expr pos:start="95:9" pos:end="95:35"><name pos:start="95:9" pos:end="95:14">prev_d</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <name pos:start="95:18" pos:end="95:35"><name pos:start="95:18" pos:end="95:18">s</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:24">regs</name><index pos:start="95:25" pos:end="95:35">[<expr pos:start="95:26" pos:end="95:34"><name pos:start="95:26" pos:end="95:34">R_CURDESC</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:15">regs</name><index pos:start="97:16" pos:end="97:26">[<expr pos:start="97:17" pos:end="97:25"><name pos:start="97:17" pos:end="97:25">R_CURDESC</name></expr>]</index></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:44"><name pos:start="97:30" pos:end="97:30">s</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:36">desc</name><operator pos:start="97:37" pos:end="97:37">.</operator><name pos:start="97:38" pos:end="97:44">nxtdesc</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:42">(<expr pos:start="99:13" pos:end="99:41"><name pos:start="99:13" pos:end="99:18">prev_d</name> <operator pos:start="99:20" pos:end="99:21">==</operator> <name pos:start="99:23" pos:end="99:41"><name pos:start="99:23" pos:end="99:23">s</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:29">regs</name><index pos:start="99:30" pos:end="99:41">[<expr pos:start="99:31" pos:end="99:40"><name pos:start="99:31" pos:end="99:40">R_TAILDESC</name></expr>]</index></name></expr>)</condition> <block pos:start="99:44" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:18">

            <expr_stmt pos:start="101:13" pos:end="101:43"><expr pos:start="101:13" pos:end="101:42"><name pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:19">regs</name><index pos:start="101:20" pos:end="101:28">[<expr pos:start="101:21" pos:end="101:27"><name pos:start="101:21" pos:end="101:27">R_DMASR</name></expr>]</index></name> <operator pos:start="101:30" pos:end="101:31">|=</operator> <name pos:start="101:33" pos:end="101:42">DMASR_IDLE</name></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="111:5" pos:end="111:15">return <expr pos:start="111:12" pos:end="111:14"><name pos:start="111:12" pos:end="111:14">pos</name></expr>;</return>

</block_content>}</block></function>
</unit>
