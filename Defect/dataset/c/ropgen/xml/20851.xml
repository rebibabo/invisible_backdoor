<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20851.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_h264_context_init</name><parameter_list pos:start="1:25" pos:end="1:40">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">H264Context</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="141:1">{<block_content pos:start="5:5" pos:end="139:27">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">ERContext</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">er</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:26"><name pos:start="5:22" pos:end="5:22">h</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:26">er</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:21">mb_array_size</name> <init pos:start="7:23" pos:end="7:51">= <expr pos:start="7:25" pos:end="7:51"><name pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:25">h</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">mb_height</name></name> <operator pos:start="7:38" pos:end="7:38">*</operator> <name pos:start="7:40" pos:end="7:51"><name pos:start="7:40" pos:end="7:40">h</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:51">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">y_size</name>  <init pos:start="9:17" pos:end="9:64">= <expr pos:start="9:19" pos:end="9:64"><operator pos:start="9:19" pos:end="9:19">(</operator><literal type="number" pos:start="9:20" pos:end="9:20">2</literal> <operator pos:start="9:22" pos:end="9:22">*</operator> <name pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:24">h</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:34">mb_width</name></name> <operator pos:start="9:36" pos:end="9:36">+</operator> <literal type="number" pos:start="9:38" pos:end="9:38">1</literal><operator pos:start="9:39" pos:end="9:39">)</operator> <operator pos:start="9:41" pos:end="9:41">*</operator> <operator pos:start="9:43" pos:end="9:43">(</operator><literal type="number" pos:start="9:44" pos:end="9:44">2</literal> <operator pos:start="9:46" pos:end="9:46">*</operator> <name pos:start="9:48" pos:end="9:59"><name pos:start="9:48" pos:end="9:48">h</name><operator pos:start="9:49" pos:end="9:50">-&gt;</operator><name pos:start="9:51" pos:end="9:59">mb_height</name></name> <operator pos:start="9:61" pos:end="9:61">+</operator> <literal type="number" pos:start="9:63" pos:end="9:63">1</literal><operator pos:start="9:64" pos:end="9:64">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">c_size</name>  <init pos:start="11:17" pos:end="11:51">= <expr pos:start="11:19" pos:end="11:51"><name pos:start="11:19" pos:end="11:30"><name pos:start="11:19" pos:end="11:19">h</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:30">mb_stride</name></name> <operator pos:start="11:32" pos:end="11:32">*</operator> <operator pos:start="11:34" pos:end="11:34">(</operator><name pos:start="11:35" pos:end="11:46"><name pos:start="11:35" pos:end="11:35">h</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:46">mb_height</name></name> <operator pos:start="11:48" pos:end="11:48">+</operator> <literal type="number" pos:start="11:50" pos:end="11:50">1</literal><operator pos:start="11:51" pos:end="11:51">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">yc_size</name> <init pos:start="13:17" pos:end="13:39">= <expr pos:start="13:19" pos:end="13:39"><name pos:start="13:19" pos:end="13:24">y_size</name> <operator pos:start="13:26" pos:end="13:26">+</operator> <literal type="number" pos:start="13:28" pos:end="13:28">2</literal>   <operator pos:start="13:32" pos:end="13:32">*</operator> <name pos:start="13:34" pos:end="13:39">c_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">x</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">y</name></decl>, <decl pos:start="15:15" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:15">i</name></decl>;</decl_stmt>



    <macro pos:start="19:5" pos:end="21:71"><name pos:start="19:5" pos:end="19:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="19:22" pos:end="21:71">(<argument pos:start="19:23" pos:end="19:30">h-&gt;avctx</argument>, <argument pos:start="19:33" pos:end="19:49">h-&gt;top_borders[<literal type="number" pos:start="19:48" pos:end="19:48">0</literal>]</argument>,

                      <argument pos:start="21:23" pos:end="21:64">h-&gt;mb_width * <literal type="number" pos:start="21:37" pos:end="21:38">16</literal> * <literal type="number" pos:start="21:42" pos:end="21:42">3</literal> * sizeof(uint8_t) * <literal type="number" pos:start="21:64" pos:end="21:64">2</literal></argument>, <argument pos:start="21:67" pos:end="21:70">fail</argument>)</argument_list></macro>

    <macro pos:start="23:5" pos:end="25:71"><name pos:start="23:5" pos:end="23:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="23:22" pos:end="25:71">(<argument pos:start="23:23" pos:end="23:30">h-&gt;avctx</argument>, <argument pos:start="23:33" pos:end="23:49">h-&gt;top_borders[<literal type="number" pos:start="23:48" pos:end="23:48">1</literal>]</argument>,

                      <argument pos:start="25:23" pos:end="25:64">h-&gt;mb_width * <literal type="number" pos:start="25:37" pos:end="25:38">16</literal> * <literal type="number" pos:start="25:42" pos:end="25:42">3</literal> * sizeof(uint8_t) * <literal type="number" pos:start="25:64" pos:end="25:64">2</literal></argument>, <argument pos:start="25:67" pos:end="25:70">fail</argument>)</argument_list></macro>



    <expr_stmt pos:start="29:5" pos:end="39:56"><expr pos:start="29:5" pos:end="39:55"><name pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:5">h</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:16">ref_cache</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>]</index><index pos:start="29:20" pos:end="29:34">[<expr pos:start="29:21" pos:end="29:33"><name pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:25">scan8</name><index pos:start="29:26" pos:end="29:28">[<expr pos:start="29:27" pos:end="29:27"><literal type="number" pos:start="29:27" pos:end="29:27">5</literal></expr>]</index></name>  <operator pos:start="29:31" pos:end="29:31">+</operator> <literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr>]</index></name> <operator pos:start="29:36" pos:end="29:36">=</operator>

    <name pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:5">h</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:16">ref_cache</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>]</index><index pos:start="31:20" pos:end="31:34">[<expr pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:28"><name pos:start="31:21" pos:end="31:25">scan8</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">7</literal></expr>]</index></name>  <operator pos:start="31:31" pos:end="31:31">+</operator> <literal type="number" pos:start="31:33" pos:end="31:33">1</literal></expr>]</index></name> <operator pos:start="31:36" pos:end="31:36">=</operator>

    <name pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:5">h</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:16">ref_cache</name><index pos:start="33:17" pos:end="33:19">[<expr pos:start="33:18" pos:end="33:18"><literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>]</index><index pos:start="33:20" pos:end="33:34">[<expr pos:start="33:21" pos:end="33:33"><name pos:start="33:21" pos:end="33:29"><name pos:start="33:21" pos:end="33:25">scan8</name><index pos:start="33:26" pos:end="33:29">[<expr pos:start="33:27" pos:end="33:28"><literal type="number" pos:start="33:27" pos:end="33:28">13</literal></expr>]</index></name> <operator pos:start="33:31" pos:end="33:31">+</operator> <literal type="number" pos:start="33:33" pos:end="33:33">1</literal></expr>]</index></name> <operator pos:start="33:36" pos:end="33:36">=</operator>

    <name pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:5">h</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:16">ref_cache</name><index pos:start="35:17" pos:end="35:19">[<expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr>]</index><index pos:start="35:20" pos:end="35:34">[<expr pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:28"><name pos:start="35:21" pos:end="35:25">scan8</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">5</literal></expr>]</index></name>  <operator pos:start="35:31" pos:end="35:31">+</operator> <literal type="number" pos:start="35:33" pos:end="35:33">1</literal></expr>]</index></name> <operator pos:start="35:36" pos:end="35:36">=</operator>

    <name pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:5">h</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:16">ref_cache</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr>]</index><index pos:start="37:20" pos:end="37:34">[<expr pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:25">scan8</name><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><literal type="number" pos:start="37:27" pos:end="37:27">7</literal></expr>]</index></name>  <operator pos:start="37:31" pos:end="37:31">+</operator> <literal type="number" pos:start="37:33" pos:end="37:33">1</literal></expr>]</index></name> <operator pos:start="37:36" pos:end="37:36">=</operator>

    <name pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:5">h</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">ref_cache</name><index pos:start="39:17" pos:end="39:19">[<expr pos:start="39:18" pos:end="39:18"><literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr>]</index><index pos:start="39:20" pos:end="39:34">[<expr pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:25">scan8</name><index pos:start="39:26" pos:end="39:29">[<expr pos:start="39:27" pos:end="39:28"><literal type="number" pos:start="39:27" pos:end="39:28">13</literal></expr>]</index></name> <operator pos:start="39:31" pos:end="39:31">+</operator> <literal type="number" pos:start="39:33" pos:end="39:33">1</literal></expr>]</index></name> <operator pos:start="39:36" pos:end="39:36">=</operator> <name pos:start="39:38" pos:end="39:55">PART_NOT_AVAILABLE</name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="129:5"><if pos:start="43:5" pos:end="129:5">if <condition pos:start="43:8" pos:end="43:32">(<expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:31">CONFIG_ERROR_RESILIENCE</name></expr>)</condition> <block pos:start="43:34" pos:end="129:5">{<block_content pos:start="47:9" pos:end="127:37">

        <comment type="block" pos:start="45:9" pos:end="45:21">/* init ER */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:10">er</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:17">avctx</name></name>          <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:37"><name pos:start="47:30" pos:end="47:30">h</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:37">avctx</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:10">er</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:16">mecc</name></name>           <operator pos:start="49:28" pos:end="49:28">=</operator> <operator pos:start="49:30" pos:end="49:30">&amp;</operator><name pos:start="49:31" pos:end="49:37"><name pos:start="49:31" pos:end="49:31">h</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:37">mecc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:10">er</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:21">decode_mb</name></name>      <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:46">h264_er_decode_mb</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:10">er</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:18">opaque</name></name>         <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:30">h</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:10">er</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:26">quarter_sample</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <literal type="number" pos:start="55:30" pos:end="55:30">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:36"><expr pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:10">er</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:18">mb_num</name></name>      <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:35"><name pos:start="59:27" pos:end="59:27">h</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:35">mb_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:10">er</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:20">mb_width</name></name>    <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:37"><name pos:start="61:27" pos:end="61:27">h</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:37">mb_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:39"><expr pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:10">er</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:21">mb_height</name></name>   <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:27">h</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:38">mb_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:10">er</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:21">mb_stride</name></name>   <operator pos:start="65:25" pos:end="65:25">=</operator> <name pos:start="65:27" pos:end="65:38"><name pos:start="65:27" pos:end="65:27">h</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:38">mb_stride</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:46"><expr pos:start="67:9" pos:end="67:45"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:10">er</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:21">b8_stride</name></name>   <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:37"><name pos:start="67:27" pos:end="67:27">h</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:37">mb_width</name></name> <operator pos:start="67:39" pos:end="67:39">*</operator> <literal type="number" pos:start="67:41" pos:end="67:43">2</literal> <operator pos:start="67:43" pos:end="67:43">+</operator> <literal type="number" pos:start="67:45" pos:end="67:45">1</literal></expr>;</expr_stmt>



        <comment type="line" pos:start="71:9" pos:end="71:56">// error resilience code looks cleaner with this</comment>

        <expr_stmt pos:start="73:9" pos:end="75:63"><expr pos:start="73:9" pos:end="75:62"><call pos:start="73:9" pos:end="75:62"><name pos:start="73:9" pos:end="73:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="73:26" pos:end="75:62">(<argument pos:start="73:27" pos:end="73:34"><expr pos:start="73:27" pos:end="73:34"><name pos:start="73:27" pos:end="73:34"><name pos:start="73:27" pos:end="73:27">h</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:34">avctx</name></name></expr></argument>, <argument pos:start="73:37" pos:end="73:51"><expr pos:start="73:37" pos:end="73:51"><name pos:start="73:37" pos:end="73:51"><name pos:start="73:37" pos:end="73:38">er</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:51">mb_index2xy</name></name></expr></argument>,

                          <argument pos:start="75:27" pos:end="75:55"><expr pos:start="75:27" pos:end="75:55"><operator pos:start="75:27" pos:end="75:27">(</operator><name pos:start="75:28" pos:end="75:36"><name pos:start="75:28" pos:end="75:28">h</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:36">mb_num</name></name> <operator pos:start="75:38" pos:end="75:38">+</operator> <literal type="number" pos:start="75:40" pos:end="75:40">1</literal><operator pos:start="75:41" pos:end="75:41">)</operator> <operator pos:start="75:43" pos:end="75:43">*</operator> <sizeof pos:start="75:45" pos:end="75:55">sizeof<argument_list pos:start="75:51" pos:end="75:55">(<argument pos:start="75:52" pos:end="75:54"><expr pos:start="75:52" pos:end="75:54"><name pos:start="75:52" pos:end="75:54">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="75:58" pos:end="75:61"><expr pos:start="75:58" pos:end="75:61"><name pos:start="75:58" pos:end="75:61">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="79:9" pos:end="83:76">for <control pos:start="79:13" pos:end="79:42">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">y</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:37"><expr pos:start="79:21" pos:end="79:36"><name pos:start="79:21" pos:end="79:21">y</name> <operator pos:start="79:23" pos:end="79:23">&lt;</operator> <name pos:start="79:25" pos:end="79:36"><name pos:start="79:25" pos:end="79:25">h</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:36">mb_height</name></name></expr>;</condition> <incr pos:start="79:39" pos:end="79:41"><expr pos:start="79:39" pos:end="79:41"><name pos:start="79:39" pos:end="79:39">y</name><operator pos:start="79:40" pos:end="79:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:13" pos:end="83:76"><block_content pos:start="81:13" pos:end="83:76">

            <for pos:start="81:13" pos:end="83:76">for <control pos:start="81:17" pos:end="81:45">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">x</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:40"><expr pos:start="81:25" pos:end="81:39"><name pos:start="81:25" pos:end="81:25">x</name> <operator pos:start="81:27" pos:end="81:27">&lt;</operator> <name pos:start="81:29" pos:end="81:39"><name pos:start="81:29" pos:end="81:29">h</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:39">mb_width</name></name></expr>;</condition> <incr pos:start="81:42" pos:end="81:44"><expr pos:start="81:42" pos:end="81:44"><name pos:start="81:42" pos:end="81:42">x</name><operator pos:start="81:43" pos:end="81:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:17" pos:end="83:76"><block_content pos:start="83:17" pos:end="83:76">

                <expr_stmt pos:start="83:17" pos:end="83:76"><expr pos:start="83:17" pos:end="83:75"><name pos:start="83:17" pos:end="83:52"><name pos:start="83:17" pos:end="83:18">er</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:31">mb_index2xy</name><index pos:start="83:32" pos:end="83:52">[<expr pos:start="83:33" pos:end="83:51"><name pos:start="83:33" pos:end="83:33">x</name> <operator pos:start="83:35" pos:end="83:35">+</operator> <name pos:start="83:37" pos:end="83:37">y</name> <operator pos:start="83:39" pos:end="83:39">*</operator> <name pos:start="83:41" pos:end="83:51"><name pos:start="83:41" pos:end="83:41">h</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:51">mb_width</name></name></expr>]</index></name> <operator pos:start="83:54" pos:end="83:54">=</operator> <name pos:start="83:56" pos:end="83:56">x</name> <operator pos:start="83:58" pos:end="83:58">+</operator> <name pos:start="83:60" pos:end="83:60">y</name> <operator pos:start="83:62" pos:end="83:62">*</operator> <name pos:start="83:64" pos:end="83:75"><name pos:start="83:64" pos:end="83:64">h</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:75">mb_stride</name></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



        <expr_stmt pos:start="87:9" pos:end="89:81"><expr pos:start="87:9" pos:end="89:80"><name pos:start="87:9" pos:end="87:51"><name pos:start="87:9" pos:end="87:10">er</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:23">mb_index2xy</name><index pos:start="87:24" pos:end="87:51">[<expr pos:start="87:25" pos:end="87:50"><name pos:start="87:25" pos:end="87:36"><name pos:start="87:25" pos:end="87:25">h</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:36">mb_height</name></name> <operator pos:start="87:38" pos:end="87:38">*</operator> <name pos:start="87:40" pos:end="87:50"><name pos:start="87:40" pos:end="87:40">h</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:50">mb_width</name></name></expr>]</index></name> <operator pos:start="87:53" pos:end="87:53">=</operator> <operator pos:start="87:55" pos:end="87:55">(</operator><name pos:start="87:56" pos:end="87:67"><name pos:start="87:56" pos:end="87:56">h</name><operator pos:start="87:57" pos:end="87:58">-&gt;</operator><name pos:start="87:59" pos:end="87:67">mb_height</name></name> <operator pos:start="87:69" pos:end="87:69">-</operator> <literal type="number" pos:start="87:71" pos:end="87:71">1</literal><operator pos:start="87:72" pos:end="87:72">)</operator> <operator pos:start="87:74" pos:end="87:74">*</operator>

                                                      <name pos:start="89:55" pos:end="89:66"><name pos:start="89:55" pos:end="89:55">h</name><operator pos:start="89:56" pos:end="89:57">-&gt;</operator><name pos:start="89:58" pos:end="89:66">mb_stride</name></name> <operator pos:start="89:68" pos:end="89:68">+</operator> <name pos:start="89:70" pos:end="89:80"><name pos:start="89:70" pos:end="89:70">h</name><operator pos:start="89:71" pos:end="89:72">-&gt;</operator><name pos:start="89:73" pos:end="89:80">mb_width</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="95:65"><expr pos:start="93:9" pos:end="95:64"><call pos:start="93:9" pos:end="95:64"><name pos:start="93:9" pos:end="93:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="93:26" pos:end="95:64">(<argument pos:start="93:27" pos:end="93:34"><expr pos:start="93:27" pos:end="93:34"><name pos:start="93:27" pos:end="93:34"><name pos:start="93:27" pos:end="93:27">h</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:34">avctx</name></name></expr></argument>, <argument pos:start="93:37" pos:end="93:58"><expr pos:start="93:37" pos:end="93:58"><name pos:start="93:37" pos:end="93:58"><name pos:start="93:37" pos:end="93:38">er</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:58">error_status_table</name></name></expr></argument>,

                          <argument pos:start="95:27" pos:end="95:57"><expr pos:start="95:27" pos:end="95:57"><name pos:start="95:27" pos:end="95:39">mb_array_size</name> <operator pos:start="95:41" pos:end="95:41">*</operator> <sizeof pos:start="95:43" pos:end="95:57">sizeof<argument_list pos:start="95:49" pos:end="95:57">(<argument pos:start="95:50" pos:end="95:56"><expr pos:start="95:50" pos:end="95:56"><name pos:start="95:50" pos:end="95:56">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="95:60" pos:end="95:63"><expr pos:start="95:60" pos:end="95:63"><name pos:start="95:60" pos:end="95:63">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:75"><expr pos:start="99:9" pos:end="99:74"><call pos:start="99:9" pos:end="99:74"><name pos:start="99:9" pos:end="99:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="99:25" pos:end="99:74">(<argument pos:start="99:26" pos:end="99:33"><expr pos:start="99:26" pos:end="99:33"><name pos:start="99:26" pos:end="99:33"><name pos:start="99:26" pos:end="99:26">h</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:33">avctx</name></name></expr></argument>, <argument pos:start="99:36" pos:end="99:52"><expr pos:start="99:36" pos:end="99:52"><name pos:start="99:36" pos:end="99:52"><name pos:start="99:36" pos:end="99:37">er</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:52">mbintra_table</name></name></expr></argument>, <argument pos:start="99:55" pos:end="99:67"><expr pos:start="99:55" pos:end="99:67"><name pos:start="99:55" pos:end="99:67">mb_array_size</name></expr></argument>, <argument pos:start="99:70" pos:end="99:73"><expr pos:start="99:70" pos:end="99:73"><name pos:start="99:70" pos:end="99:73">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:52"><expr pos:start="101:9" pos:end="101:51"><call pos:start="101:9" pos:end="101:51"><name pos:start="101:9" pos:end="101:14">memset</name><argument_list pos:start="101:15" pos:end="101:51">(<argument pos:start="101:16" pos:end="101:32"><expr pos:start="101:16" pos:end="101:32"><name pos:start="101:16" pos:end="101:32"><name pos:start="101:16" pos:end="101:17">er</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:32">mbintra_table</name></name></expr></argument>, <argument pos:start="101:35" pos:end="101:35"><expr pos:start="101:35" pos:end="101:35"><literal type="number" pos:start="101:35" pos:end="101:35">1</literal></expr></argument>, <argument pos:start="101:38" pos:end="101:50"><expr pos:start="101:38" pos:end="101:50"><name pos:start="101:38" pos:end="101:50">mb_array_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:79"><expr pos:start="105:9" pos:end="105:78"><call pos:start="105:9" pos:end="105:78"><name pos:start="105:9" pos:end="105:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="105:26" pos:end="105:78">(<argument pos:start="105:27" pos:end="105:34"><expr pos:start="105:27" pos:end="105:34"><name pos:start="105:27" pos:end="105:34"><name pos:start="105:27" pos:end="105:27">h</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:34">avctx</name></name></expr></argument>, <argument pos:start="105:37" pos:end="105:52"><expr pos:start="105:37" pos:end="105:52"><name pos:start="105:37" pos:end="105:52"><name pos:start="105:37" pos:end="105:38">er</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:52">mbskip_table</name></name></expr></argument>, <argument pos:start="105:55" pos:end="105:71"><expr pos:start="105:55" pos:end="105:71"><name pos:start="105:55" pos:end="105:67">mb_array_size</name> <operator pos:start="105:69" pos:end="105:69">+</operator> <literal type="number" pos:start="105:71" pos:end="105:71">2</literal></expr></argument>, <argument pos:start="105:74" pos:end="105:77"><expr pos:start="105:74" pos:end="105:77"><name pos:start="105:74" pos:end="105:77">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="111:60"><expr pos:start="109:9" pos:end="111:59"><call pos:start="109:9" pos:end="111:59"><name pos:start="109:9" pos:end="109:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="109:25" pos:end="111:59">(<argument pos:start="109:26" pos:end="109:33"><expr pos:start="109:26" pos:end="109:33"><name pos:start="109:26" pos:end="109:33"><name pos:start="109:26" pos:end="109:26">h</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:33">avctx</name></name></expr></argument>, <argument pos:start="109:36" pos:end="109:53"><expr pos:start="109:36" pos:end="109:53"><name pos:start="109:36" pos:end="109:53"><name pos:start="109:36" pos:end="109:37">er</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:53">er_temp_buffer</name></name></expr></argument>,

                         <argument pos:start="111:26" pos:end="111:52"><expr pos:start="111:26" pos:end="111:52"><name pos:start="111:26" pos:end="111:37"><name pos:start="111:26" pos:end="111:26">h</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:37">mb_height</name></name> <operator pos:start="111:39" pos:end="111:39">*</operator> <name pos:start="111:41" pos:end="111:52"><name pos:start="111:41" pos:end="111:41">h</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:52">mb_stride</name></name></expr></argument>, <argument pos:start="111:55" pos:end="111:58"><expr pos:start="111:55" pos:end="111:58"><name pos:start="111:55" pos:end="111:58">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="117:59"><expr pos:start="115:9" pos:end="117:58"><call pos:start="115:9" pos:end="117:58"><name pos:start="115:9" pos:end="115:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="115:26" pos:end="117:58">(<argument pos:start="115:27" pos:end="115:34"><expr pos:start="115:27" pos:end="115:34"><name pos:start="115:27" pos:end="115:34"><name pos:start="115:27" pos:end="115:27">h</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:34">avctx</name></name></expr></argument>, <argument pos:start="115:37" pos:end="115:50"><expr pos:start="115:37" pos:end="115:50"><name pos:start="115:37" pos:end="115:50"><name pos:start="115:37" pos:end="115:37">h</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:50">dc_val_base</name></name></expr></argument>,

                          <argument pos:start="117:27" pos:end="117:51"><expr pos:start="117:27" pos:end="117:51"><name pos:start="117:27" pos:end="117:33">yc_size</name> <operator pos:start="117:35" pos:end="117:35">*</operator> <sizeof pos:start="117:37" pos:end="117:51">sizeof<argument_list pos:start="117:43" pos:end="117:51">(<argument pos:start="117:44" pos:end="117:50"><expr pos:start="117:44" pos:end="117:50"><name pos:start="117:44" pos:end="117:50">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="117:54" pos:end="117:57"><expr pos:start="117:54" pos:end="117:57"><name pos:start="117:54" pos:end="117:57">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:61"><expr pos:start="119:9" pos:end="119:60"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:10">er</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:18">dc_val</name><index pos:start="119:19" pos:end="119:21">[<expr pos:start="119:20" pos:end="119:20"><literal type="number" pos:start="119:20" pos:end="119:20">0</literal></expr>]</index></name> <operator pos:start="119:23" pos:end="119:23">=</operator> <name pos:start="119:25" pos:end="119:38"><name pos:start="119:25" pos:end="119:25">h</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:38">dc_val_base</name></name> <operator pos:start="119:40" pos:end="119:40">+</operator> <name pos:start="119:42" pos:end="119:52"><name pos:start="119:42" pos:end="119:42">h</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:52">mb_width</name></name> <operator pos:start="119:54" pos:end="119:54">*</operator> <literal type="number" pos:start="119:56" pos:end="119:58">2</literal> <operator pos:start="119:58" pos:end="119:58">+</operator> <literal type="number" pos:start="119:60" pos:end="119:60">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:67"><expr pos:start="121:9" pos:end="121:66"><name pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:10">er</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:18">dc_val</name><index pos:start="121:19" pos:end="121:21">[<expr pos:start="121:20" pos:end="121:20"><literal type="number" pos:start="121:20" pos:end="121:20">1</literal></expr>]</index></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:38"><name pos:start="121:25" pos:end="121:25">h</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:38">dc_val_base</name></name> <operator pos:start="121:40" pos:end="121:40">+</operator> <name pos:start="121:42" pos:end="121:47">y_size</name> <operator pos:start="121:49" pos:end="121:49">+</operator> <name pos:start="121:51" pos:end="121:62"><name pos:start="121:51" pos:end="121:51">h</name><operator pos:start="121:52" pos:end="121:53">-&gt;</operator><name pos:start="121:54" pos:end="121:62">mb_stride</name></name> <operator pos:start="121:64" pos:end="121:64">+</operator> <literal type="number" pos:start="121:66" pos:end="121:66">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:47"><expr pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:10">er</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:18">dc_val</name><index pos:start="123:19" pos:end="123:21">[<expr pos:start="123:20" pos:end="123:20"><literal type="number" pos:start="123:20" pos:end="123:20">2</literal></expr>]</index></name> <operator pos:start="123:23" pos:end="123:23">=</operator> <name pos:start="123:25" pos:end="123:37"><name pos:start="123:25" pos:end="123:26">er</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:34">dc_val</name><index pos:start="123:35" pos:end="123:37">[<expr pos:start="123:36" pos:end="123:36"><literal type="number" pos:start="123:36" pos:end="123:36">1</literal></expr>]</index></name> <operator pos:start="123:39" pos:end="123:39">+</operator> <name pos:start="123:41" pos:end="123:46">c_size</name></expr>;</expr_stmt>

        <for pos:start="125:9" pos:end="127:37">for <control pos:start="125:13" pos:end="125:37">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">i</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:32"><expr pos:start="125:21" pos:end="125:31"><name pos:start="125:21" pos:end="125:21">i</name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <name pos:start="125:25" pos:end="125:31">yc_size</name></expr>;</condition> <incr pos:start="125:34" pos:end="125:36"><expr pos:start="125:34" pos:end="125:36"><name pos:start="125:34" pos:end="125:34">i</name><operator pos:start="125:35" pos:end="125:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="127:13" pos:end="127:37"><block_content pos:start="127:13" pos:end="127:37">

            <expr_stmt pos:start="127:13" pos:end="127:37"><expr pos:start="127:13" pos:end="127:36"><name pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:13">h</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:26">dc_val_base</name><index pos:start="127:27" pos:end="127:29">[<expr pos:start="127:28" pos:end="127:28"><name pos:start="127:28" pos:end="127:28">i</name></expr>]</index></name> <operator pos:start="127:31" pos:end="127:31">=</operator> <literal type="number" pos:start="127:33" pos:end="127:36">1024</literal></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>



<label pos:start="137:1" pos:end="137:5"><name pos:start="137:1" pos:end="137:4">fail</name>:</label>

    <return pos:start="139:5" pos:end="139:27">return <expr pos:start="139:12" pos:end="139:26"><call pos:start="139:12" pos:end="139:26"><name pos:start="139:12" pos:end="139:18">AVERROR</name><argument_list pos:start="139:19" pos:end="139:26">(<argument pos:start="139:20" pos:end="139:25"><expr pos:start="139:20" pos:end="139:25"><name pos:start="139:20" pos:end="139:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return> <comment type="line" pos:start="139:29" pos:end="139:71">// ff_h264_free_tables will clean up for us</comment>

</block_content>}</block></function>
</unit>
