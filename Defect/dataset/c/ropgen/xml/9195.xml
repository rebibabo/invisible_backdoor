<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9195.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">ga_unset_frozen</name><parameter_list pos:start="1:21" pos:end="1:32">(<parameter pos:start="1:22" pos:end="1:31"><decl pos:start="1:22" pos:end="1:31"><type pos:start="1:22" pos:end="1:30"><name pos:start="1:22" pos:end="1:28">GAState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:25">(<expr pos:start="5:9" pos:end="5:24"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:24"><name pos:start="5:10" pos:end="5:21">ga_is_frozen</name><argument_list pos:start="5:22" pos:end="5:24">(<argument pos:start="5:23" pos:end="5:23"><expr pos:start="5:23" pos:end="5:23"><name pos:start="5:23" pos:end="5:23">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:27" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:15">

        <return pos:start="7:9" pos:end="7:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="13:5" pos:end="17:7">/* if we delayed creation/opening of pid/log files due to being

     * in a frozen state at start up, do it now

     */</comment>

    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:41">(<expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:27">deferred_options</name><operator pos:start="19:28" pos:end="19:28">.</operator><name pos:start="19:29" pos:end="19:40">log_filepath</name></name></expr>)</condition> <block pos:start="19:43" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:48">

        <expr_stmt pos:start="21:9" pos:end="21:67"><expr pos:start="21:9" pos:end="21:66"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:19">log_file</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <call pos:start="21:23" pos:end="21:66"><name pos:start="21:23" pos:end="21:27">fopen</name><argument_list pos:start="21:28" pos:end="21:66">(<argument pos:start="21:29" pos:end="21:60"><expr pos:start="21:29" pos:end="21:60"><name pos:start="21:29" pos:end="21:60"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:47">deferred_options</name><operator pos:start="21:48" pos:end="21:48">.</operator><name pos:start="21:49" pos:end="21:60">log_filepath</name></name></expr></argument>, <argument pos:start="21:63" pos:end="21:65"><expr pos:start="21:63" pos:end="21:65"><literal type="string" pos:start="21:63" pos:end="21:65">"a"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:25">(<expr pos:start="23:13" pos:end="23:24"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:24"><name pos:start="23:14" pos:end="23:14">s</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:24">log_file</name></name></expr>)</condition> <block pos:start="23:27" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:33">

            <expr_stmt pos:start="25:13" pos:end="25:33"><expr pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:23">log_file</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:32">stderr</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:27">deferred_options</name><operator pos:start="29:28" pos:end="29:28">.</operator><name pos:start="29:29" pos:end="29:40">log_filepath</name></name> <operator pos:start="29:42" pos:end="29:42">=</operator> <name pos:start="29:44" pos:end="29:47">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><call pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:21">ga_enable_logging</name><argument_list pos:start="33:22" pos:end="33:24">(<argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:63"><expr pos:start="35:5" pos:end="35:62"><call pos:start="35:5" pos:end="35:62"><name pos:start="35:5" pos:end="35:13">g_warning</name><argument_list pos:start="35:14" pos:end="35:62">(<argument pos:start="35:15" pos:end="35:61"><expr pos:start="35:15" pos:end="35:61"><literal type="string" pos:start="35:15" pos:end="35:61">"logging re-enabled due to filesystem unfreeze"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:41">(<expr pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:27">deferred_options</name><operator pos:start="37:28" pos:end="37:28">.</operator><name pos:start="37:29" pos:end="37:40">pid_filepath</name></name></expr>)</condition> <block pos:start="37:43" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:48">

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:63">(<expr pos:start="39:13" pos:end="39:62"><operator pos:start="39:13" pos:end="39:13">!</operator><call pos:start="39:14" pos:end="39:62"><name pos:start="39:14" pos:end="39:28">ga_open_pidfile</name><argument_list pos:start="39:29" pos:end="39:62">(<argument pos:start="39:30" pos:end="39:61"><expr pos:start="39:30" pos:end="39:61"><name pos:start="39:30" pos:end="39:61"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:48">deferred_options</name><operator pos:start="39:49" pos:end="39:49">.</operator><name pos:start="39:50" pos:end="39:61">pid_filepath</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:65" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:56">

            <expr_stmt pos:start="41:13" pos:end="41:56"><expr pos:start="41:13" pos:end="41:55"><call pos:start="41:13" pos:end="41:55"><name pos:start="41:13" pos:end="41:21">g_warning</name><argument_list pos:start="41:22" pos:end="41:55">(<argument pos:start="41:23" pos:end="41:54"><expr pos:start="41:23" pos:end="41:54"><literal type="string" pos:start="41:23" pos:end="41:54">"failed to create/open pid file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:27">deferred_options</name><operator pos:start="45:28" pos:end="45:28">.</operator><name pos:start="45:29" pos:end="45:40">pid_filepath</name></name> <operator pos:start="45:42" pos:end="45:42">=</operator> <name pos:start="45:44" pos:end="45:47">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:55">/* enable all disabled, non-blacklisted commands */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><call pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:29">ga_enable_non_blacklisted</name><argument_list pos:start="53:30" pos:end="53:43">(<argument pos:start="53:31" pos:end="53:42"><expr pos:start="53:31" pos:end="53:42"><name pos:start="53:31" pos:end="53:42"><name pos:start="53:31" pos:end="53:31">s</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:42">blacklist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:22"><expr pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:13">frozen</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:21">false</name></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:52">(<expr pos:start="57:9" pos:end="57:51"><operator pos:start="57:9" pos:end="57:9">!</operator><call pos:start="57:10" pos:end="57:51"><name pos:start="57:10" pos:end="57:23">ga_delete_file</name><argument_list pos:start="57:24" pos:end="57:51">(<argument pos:start="57:25" pos:end="57:50"><expr pos:start="57:25" pos:end="57:50"><name pos:start="57:25" pos:end="57:50"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:50">state_filepath_isfrozen</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:54" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:46">

        <expr_stmt pos:start="59:9" pos:end="61:46"><expr pos:start="59:9" pos:end="61:45"><call pos:start="59:9" pos:end="61:45"><name pos:start="59:9" pos:end="59:17">g_warning</name><argument_list pos:start="59:18" pos:end="61:45">(<argument pos:start="59:19" pos:end="59:75"><expr pos:start="59:19" pos:end="59:75"><literal type="string" pos:start="59:19" pos:end="59:75">"unable to delete %s, fsfreeze may not function properly"</literal></expr></argument>,

                  <argument pos:start="61:19" pos:end="61:44"><expr pos:start="61:19" pos:end="61:44"><name pos:start="61:19" pos:end="61:44"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:44">state_filepath_isfrozen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
