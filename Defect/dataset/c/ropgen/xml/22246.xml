<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22246.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:48">vfio_probe_rtl8168_bar2_window_quirk</name><parameter_list pos:start="1:49" pos:end="1:77">(<parameter pos:start="1:50" pos:end="1:68"><decl pos:start="1:50" pos:end="1:68"><type pos:start="1:50" pos:end="1:68"><name pos:start="1:50" pos:end="1:62">VFIOPCIDevice</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">vdev</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:76"><decl pos:start="1:71" pos:end="1:76"><type pos:start="1:71" pos:end="1:76"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:76">nr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:68">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">pdev</name> <init pos:start="5:21" pos:end="5:33">= <expr pos:start="5:23" pos:end="5:33"><operator pos:start="5:23" pos:end="5:23">&amp;</operator><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:27">vdev</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:33">pdev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VFIOQuirk</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">quirk</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="13:72">(<expr pos:start="11:9" pos:end="13:71"><call pos:start="11:9" pos:end="11:50"><name pos:start="11:9" pos:end="11:20">pci_get_word</name><argument_list pos:start="11:21" pos:end="11:50">(<argument pos:start="11:22" pos:end="11:49"><expr pos:start="11:22" pos:end="11:49"><name pos:start="11:22" pos:end="11:33"><name pos:start="11:22" pos:end="11:25">pdev</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">config</name></name> <operator pos:start="11:35" pos:end="11:35">+</operator> <name pos:start="11:37" pos:end="11:49">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call> <operator pos:start="11:52" pos:end="11:53">!=</operator> <name pos:start="11:55" pos:end="11:75">PCI_VENDOR_ID_REALTEK</name> <operator pos:start="11:77" pos:end="11:78">||</operator>

        <call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:20">pci_get_word</name><argument_list pos:start="13:21" pos:end="13:50">(<argument pos:start="13:22" pos:end="13:49"><expr pos:start="13:22" pos:end="13:49"><name pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:25">pdev</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:33">config</name></name> <operator pos:start="13:35" pos:end="13:35">+</operator> <name pos:start="13:37" pos:end="13:49">PCI_DEVICE_ID</name></expr></argument>)</argument_list></call> <operator pos:start="13:52" pos:end="13:53">!=</operator> <literal type="number" pos:start="13:55" pos:end="13:60">0x8168</literal> <operator pos:start="13:62" pos:end="13:63">||</operator> <name pos:start="13:65" pos:end="13:66">nr</name> <operator pos:start="13:68" pos:end="13:69">!=</operator> <literal type="number" pos:start="13:71" pos:end="13:71">2</literal></expr>)</condition> <block pos:start="13:74" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:9">quirk</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:21">g_malloc0</name><argument_list pos:start="21:22" pos:end="21:37">(<argument pos:start="21:23" pos:end="21:36"><expr pos:start="21:23" pos:end="21:36"><sizeof pos:start="21:23" pos:end="21:36">sizeof<argument_list pos:start="21:29" pos:end="21:36">(<argument pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:35"><operator pos:start="21:30" pos:end="21:30">*</operator><name pos:start="21:31" pos:end="21:35">quirk</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:9">quirk</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">vdev</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:22">vdev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:9">quirk</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:15">data</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:19">bar</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:24">nr</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:65"><expr pos:start="29:5" pos:end="31:64"><call pos:start="29:5" pos:end="31:64"><name pos:start="29:5" pos:end="29:25">memory_region_init_io</name><argument_list pos:start="29:26" pos:end="31:64">(<argument pos:start="29:27" pos:end="29:37"><expr pos:start="29:27" pos:end="29:37"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:37"><name pos:start="29:28" pos:end="29:32">quirk</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:37">mem</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:51"><expr pos:start="29:40" pos:end="29:51"><call pos:start="29:40" pos:end="29:51"><name pos:start="29:40" pos:end="29:45">OBJECT</name><argument_list pos:start="29:46" pos:end="29:51">(<argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><name pos:start="29:47" pos:end="29:50">vdev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:54" pos:end="29:79"><expr pos:start="29:54" pos:end="29:79"><operator pos:start="29:54" pos:end="29:54">&amp;</operator><name pos:start="29:55" pos:end="29:79">vfio_rtl8168_window_quirk</name></expr></argument>,

                          <argument pos:start="31:27" pos:end="31:31"><expr pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:31">quirk</name></expr></argument>, <argument pos:start="31:34" pos:end="31:60"><expr pos:start="31:34" pos:end="31:60"><literal type="string" pos:start="31:34" pos:end="31:60">"vfio-rtl8168-window-quirk"</literal></expr></argument>, <argument pos:start="31:63" pos:end="31:63"><expr pos:start="31:63" pos:end="31:63"><literal type="number" pos:start="31:63" pos:end="31:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:62"><expr pos:start="33:5" pos:end="35:61"><call pos:start="33:5" pos:end="35:61"><name pos:start="33:5" pos:end="33:39">memory_region_add_subregion_overlap</name><argument_list pos:start="33:40" pos:end="35:61">(<argument pos:start="33:41" pos:end="33:66"><expr pos:start="33:41" pos:end="33:66"><operator pos:start="33:41" pos:end="33:41">&amp;</operator><name pos:start="33:42" pos:end="33:55"><name pos:start="33:42" pos:end="33:45">vdev</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:51">bars</name><index pos:start="33:52" pos:end="33:55">[<expr pos:start="33:53" pos:end="33:54"><name pos:start="33:53" pos:end="33:54">nr</name></expr>]</index></name><operator pos:start="33:56" pos:end="33:56">.</operator><name pos:start="33:57" pos:end="33:66"><name pos:start="33:57" pos:end="33:62">region</name><operator pos:start="33:63" pos:end="33:63">.</operator><name pos:start="33:64" pos:end="33:66">mem</name></name></expr></argument>,

                                        <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><literal type="number" pos:start="35:41" pos:end="35:44">0x70</literal></expr></argument>, <argument pos:start="35:47" pos:end="35:57"><expr pos:start="35:47" pos:end="35:57"><operator pos:start="35:47" pos:end="35:47">&amp;</operator><name pos:start="35:48" pos:end="35:57"><name pos:start="35:48" pos:end="35:52">quirk</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:57">mem</name></name></expr></argument>, <argument pos:start="35:60" pos:end="35:60"><expr pos:start="35:60" pos:end="35:60"><literal type="number" pos:start="35:60" pos:end="35:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><call pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:21">QLIST_INSERT_HEAD</name><argument_list pos:start="39:22" pos:end="39:58">(<argument pos:start="39:23" pos:end="39:44"><expr pos:start="39:23" pos:end="39:44"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:37"><name pos:start="39:24" pos:end="39:27">vdev</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:33">bars</name><index pos:start="39:34" pos:end="39:37">[<expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">nr</name></expr>]</index></name><operator pos:start="39:38" pos:end="39:38">.</operator><name pos:start="39:39" pos:end="39:44">quirks</name></expr></argument>, <argument pos:start="39:47" pos:end="39:51"><expr pos:start="39:47" pos:end="39:51"><name pos:start="39:47" pos:end="39:51">quirk</name></expr></argument>, <argument pos:start="39:54" pos:end="39:57"><expr pos:start="39:54" pos:end="39:57"><name pos:start="39:54" pos:end="39:57">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:68"><expr pos:start="43:5" pos:end="43:67"><call pos:start="43:5" pos:end="43:67"><name pos:start="43:5" pos:end="43:46">trace_vfio_probe_rtl8168_bar2_window_quirk</name><argument_list pos:start="43:47" pos:end="43:67">(<argument pos:start="43:48" pos:end="43:66"><expr pos:start="43:48" pos:end="43:66"><name pos:start="43:48" pos:end="43:66"><name pos:start="43:48" pos:end="43:51">vdev</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:61">vbasedev</name><operator pos:start="43:62" pos:end="43:62">.</operator><name pos:start="43:63" pos:end="43:66">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
