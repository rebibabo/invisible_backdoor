<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2064.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">ac97_write</name><parameter_list pos:start="1:23" pos:end="3:37">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:60"><decl pos:start="1:38" pos:end="1:60"><type pos:start="1:38" pos:end="1:60"><name pos:start="1:38" pos:end="1:55">target_phys_addr_t</name></type> <name pos:start="1:57" pos:end="1:60">addr</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:70">uint64_t</name></type> <name pos:start="1:72" pos:end="1:76">value</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:36"><decl pos:start="3:24" pos:end="3:36"><type pos:start="3:24" pos:end="3:36"><name pos:start="3:24" pos:end="3:31">unsigned</name></type> <name pos:start="3:33" pos:end="3:36">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="87:5">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">MilkymistAC97State</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:34">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><call pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:37">trace_milkymist_ac97_memory_write</name><argument_list pos:start="11:38" pos:end="11:50">(<argument pos:start="11:39" pos:end="11:42"><expr pos:start="11:39" pos:end="11:42"><name pos:start="11:39" pos:end="11:42">addr</name></expr></argument>, <argument pos:start="11:45" pos:end="11:49"><expr pos:start="11:45" pos:end="11:49"><name pos:start="11:45" pos:end="11:49">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:8">addr</name> <operator pos:start="15:10" pos:end="15:12">&gt;&gt;=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="87:5">switch <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">addr</name></expr>)</condition> <block pos:start="17:19" pos:end="87:5">{<block_content pos:start="19:5" pos:end="85:14">

    <case pos:start="19:5" pos:end="19:21">case <expr pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:20">R_AC97_CTRL</name></expr>:</case>

        <comment type="block" pos:start="21:9" pos:end="21:60">/* always raise an IRQ according to the direction */</comment>

        <if_stmt pos:start="23:9" pos:end="39:9"><if pos:start="23:9" pos:end="39:9">if <condition pos:start="23:12" pos:end="23:35">(<expr pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:17">value</name> <operator pos:start="23:19" pos:end="23:19">&amp;</operator> <name pos:start="23:21" pos:end="23:34">AC97_CTRL_RQEN</name></expr>)</condition> <block pos:start="23:37" pos:end="39:9">{<block_content pos:start="25:13" pos:end="37:13">

            <if_stmt pos:start="25:13" pos:end="37:13"><if pos:start="25:13" pos:end="31:13">if <condition pos:start="25:16" pos:end="25:40">(<expr pos:start="25:17" pos:end="25:39"><name pos:start="25:17" pos:end="25:21">value</name> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <name pos:start="25:25" pos:end="25:39">AC97_CTRL_WRITE</name></expr>)</condition> <block pos:start="25:42" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:49">

                <expr_stmt pos:start="27:17" pos:end="27:59"><expr pos:start="27:17" pos:end="27:58"><call pos:start="27:17" pos:end="27:58"><name pos:start="27:17" pos:end="27:56">trace_milkymist_ac97_pulse_irq_crrequest</name><argument_list pos:start="27:57" pos:end="27:58">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:49"><expr pos:start="29:17" pos:end="29:48"><call pos:start="29:17" pos:end="29:48"><name pos:start="29:17" pos:end="29:30">qemu_irq_pulse</name><argument_list pos:start="29:31" pos:end="29:48">(<argument pos:start="29:32" pos:end="29:47"><expr pos:start="29:32" pos:end="29:47"><name pos:start="29:32" pos:end="29:47"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:47">crrequest_irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="31:15" pos:end="37:13">else <block pos:start="31:20" pos:end="37:13">{<block_content pos:start="33:17" pos:end="35:47">

                <expr_stmt pos:start="33:17" pos:end="33:57"><expr pos:start="33:17" pos:end="33:56"><call pos:start="33:17" pos:end="33:56"><name pos:start="33:17" pos:end="33:54">trace_milkymist_ac97_pulse_irq_crreply</name><argument_list pos:start="33:55" pos:end="33:56">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:47"><expr pos:start="35:17" pos:end="35:46"><call pos:start="35:17" pos:end="35:46"><name pos:start="35:17" pos:end="35:30">qemu_irq_pulse</name><argument_list pos:start="35:31" pos:end="35:46">(<argument pos:start="35:32" pos:end="35:45"><expr pos:start="35:32" pos:end="35:45"><name pos:start="35:32" pos:end="35:45"><name pos:start="35:32" pos:end="35:32">s</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:45">crreply_irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:35">/* RQEN is self clearing */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">regs</name><index pos:start="45:16" pos:end="45:21">[<expr pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:20">addr</name></expr>]</index></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:29">value</name> <operator pos:start="45:31" pos:end="45:31">&amp;</operator> <operator pos:start="45:33" pos:end="45:33">~</operator><name pos:start="45:34" pos:end="45:47">AC97_CTRL_RQEN</name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:18">case <expr pos:start="49:10" pos:end="49:17"><name pos:start="49:10" pos:end="49:17">R_D_CTRL</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:18">case <expr pos:start="51:10" pos:end="51:17"><name pos:start="51:10" pos:end="51:17">R_U_CTRL</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">regs</name><index pos:start="53:16" pos:end="53:21">[<expr pos:start="53:17" pos:end="53:20"><name pos:start="53:17" pos:end="53:20">addr</name></expr>]</index></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:29">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><call pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:21">update_voices</name><argument_list pos:start="55:22" pos:end="55:24">(<argument pos:start="55:23" pos:end="55:23"><expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:21">case <expr pos:start="59:10" pos:end="59:20"><name pos:start="59:10" pos:end="59:20">R_AC97_ADDR</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:24">case <expr pos:start="61:10" pos:end="61:23"><name pos:start="61:10" pos:end="61:23">R_AC97_DATAOUT</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:23">case <expr pos:start="63:10" pos:end="63:22"><name pos:start="63:10" pos:end="63:22">R_AC97_DATAIN</name></expr>:</case>

    <case pos:start="65:5" pos:end="65:18">case <expr pos:start="65:10" pos:end="65:17"><name pos:start="65:10" pos:end="65:17">R_D_ADDR</name></expr>:</case>

    <case pos:start="67:5" pos:end="67:23">case <expr pos:start="67:10" pos:end="67:22"><name pos:start="67:10" pos:end="67:22">R_D_REMAINING</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:18">case <expr pos:start="69:10" pos:end="69:17"><name pos:start="69:10" pos:end="69:17">R_U_ADDR</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:23">case <expr pos:start="71:10" pos:end="71:22"><name pos:start="71:10" pos:end="71:22">R_U_REMAINING</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:30"><expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:15">regs</name><index pos:start="73:16" pos:end="73:21">[<expr pos:start="73:17" pos:end="73:20"><name pos:start="73:17" pos:end="73:20">addr</name></expr>]</index></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:29">value</name></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>



    <default pos:start="79:5" pos:end="79:12">default:</default>

        <expr_stmt pos:start="81:9" pos:end="83:38"><expr pos:start="81:9" pos:end="83:37"><call pos:start="81:9" pos:end="83:37"><name pos:start="81:9" pos:end="81:20">error_report</name><argument_list pos:start="81:21" pos:end="83:37">(<argument pos:start="81:22" pos:end="83:30"><expr pos:start="81:22" pos:end="83:30"><literal type="string" pos:start="81:22" pos:end="81:74">"milkymist_ac97: write access to unknown register 0x"</literal>

                <name pos:start="83:17" pos:end="83:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="83:33" pos:end="83:36"><expr pos:start="83:33" pos:end="83:36"><name pos:start="83:33" pos:end="83:36">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    </block_content>}</block></switch>



</block_content>}</block></function>
</unit>
