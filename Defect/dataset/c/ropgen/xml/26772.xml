<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26772.c" pos:tabs="8"><function pos:start="1:1" pos:end="483:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tiff_decode_tag</name><parameter_list pos:start="1:27" pos:end="3:70">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">TiffContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">start</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:45"><decl pos:start="3:28" pos:end="3:45"><type pos:start="3:28" pos:end="3:45"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">buf</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:69"><decl pos:start="3:48" pos:end="3:69"><type pos:start="3:48" pos:end="3:69"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:60">uint8_t</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:69">end_buf</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="483:1">{<block_content pos:start="7:5" pos:end="481:13">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:16">tag</name></decl>, <decl pos:start="7:19" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:19" pos:end="7:22">type</name></decl>, <decl pos:start="7:25" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:25" pos:end="7:29">count</name></decl>, <decl pos:start="7:32" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:32" pos:end="7:34">off</name></decl>, <decl pos:start="7:37" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:37" pos:end="7:41">value</name> <init pos:start="7:43" pos:end="7:45">= <expr pos:start="7:45" pos:end="7:45"><literal type="number" pos:start="7:45" pos:end="7:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint32_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">pal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">rp</name></decl>, <decl pos:start="13:24" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:26">gp</name></decl>, <decl pos:start="13:29" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:29" pos:end="13:29">*</modifier></type><name pos:start="13:30" pos:end="13:31">bp</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:35"><if pos:start="17:5" pos:end="19:35">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:15">end_buf</name> <operator pos:start="17:17" pos:end="17:17">-</operator> <name pos:start="17:19" pos:end="17:21">buf</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <literal type="number" pos:start="17:25" pos:end="17:26">12</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:35"><block_content pos:start="19:9" pos:end="19:35">

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:7">tag</name>   <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:22">tget_short</name><argument_list pos:start="21:23" pos:end="21:35">(<argument pos:start="21:24" pos:end="21:27"><expr pos:start="21:24" pos:end="21:27"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:27">buf</name></expr></argument>, <argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:30">s</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:34">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:8">type</name>  <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:22">tget_short</name><argument_list pos:start="23:23" pos:end="23:35">(<argument pos:start="23:24" pos:end="23:27"><expr pos:start="23:24" pos:end="23:27"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:27">buf</name></expr></argument>, <argument pos:start="23:30" pos:end="23:34"><expr pos:start="23:30" pos:end="23:34"><name pos:start="23:30" pos:end="23:34"><name pos:start="23:30" pos:end="23:30">s</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:34">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:9">count</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:21">tget_long</name><argument_list pos:start="25:22" pos:end="25:34">(<argument pos:start="25:23" pos:end="25:26"><expr pos:start="25:23" pos:end="25:26"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:26">buf</name></expr></argument>, <argument pos:start="25:29" pos:end="25:33"><expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:29">s</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:33">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:7">off</name>   <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:21">tget_long</name><argument_list pos:start="27:22" pos:end="27:34">(<argument pos:start="27:23" pos:end="27:26"><expr pos:start="27:23" pos:end="27:26"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:26">buf</name></expr></argument>, <argument pos:start="27:29" pos:end="27:33"><expr pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:29">s</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:33">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:56">(<expr pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:12">type</name> <operator pos:start="31:14" pos:end="31:15">==</operator> <literal type="number" pos:start="31:17" pos:end="31:17">0</literal> <operator pos:start="31:19" pos:end="31:20">||</operator> <name pos:start="31:22" pos:end="31:25">type</name> <operator pos:start="31:27" pos:end="31:28">&gt;=</operator> <call pos:start="31:30" pos:end="31:55"><name pos:start="31:30" pos:end="31:43">FF_ARRAY_ELEMS</name><argument_list pos:start="31:44" pos:end="31:55">(<argument pos:start="31:45" pos:end="31:54"><expr pos:start="31:45" pos:end="31:54"><name pos:start="31:45" pos:end="31:54">type_sizes</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:58" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:17">

        <expr_stmt pos:start="33:9" pos:end="35:21"><expr pos:start="33:9" pos:end="35:20"><call pos:start="33:9" pos:end="35:20"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:20">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="33:40" pos:end="33:77"><expr pos:start="33:40" pos:end="33:77"><literal type="string" pos:start="33:40" pos:end="33:77">"Unknown tiff type (%u) encountered\n"</literal></expr></argument>,

               <argument pos:start="35:16" pos:end="35:19"><expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="95:5"><if pos:start="43:5" pos:end="85:5">if <condition pos:start="43:8" pos:end="43:19">(<expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:13">count</name> <operator pos:start="43:15" pos:end="43:16">==</operator> <literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr>)</condition> <block pos:start="43:21" pos:end="85:5">{<block_content pos:start="45:9" pos:end="83:9">

        <switch pos:start="45:9" pos:end="83:9">switch <condition pos:start="45:16" pos:end="45:21">(<expr pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:20">type</name></expr>)</condition> <block pos:start="45:23" pos:end="83:9">{<block_content pos:start="47:9" pos:end="81:32">

        <case pos:start="47:9" pos:end="47:23">case <expr pos:start="47:14" pos:end="47:22"><name pos:start="47:14" pos:end="47:22">TIFF_BYTE</name></expr>:</case>

        <case pos:start="49:9" pos:end="49:24">case <expr pos:start="49:14" pos:end="49:23"><name pos:start="49:14" pos:end="49:23">TIFF_SHORT</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:22"><expr pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:15">buf</name>  <operator pos:start="51:18" pos:end="51:19">-=</operator> <literal type="number" pos:start="51:21" pos:end="51:21">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:44"><expr pos:start="53:13" pos:end="53:43"><name pos:start="53:13" pos:end="53:17">value</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <call pos:start="53:21" pos:end="53:43"><name pos:start="53:21" pos:end="53:24">tget</name><argument_list pos:start="53:25" pos:end="53:43">(<argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:29">buf</name></expr></argument>, <argument pos:start="53:32" pos:end="53:35"><expr pos:start="53:32" pos:end="53:35"><name pos:start="53:32" pos:end="53:35">type</name></expr></argument>, <argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:38">s</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:42">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:15">buf</name>   <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:24">NULL</name></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:23">case <expr pos:start="59:14" pos:end="59:22"><name pos:start="59:14" pos:end="59:22">TIFF_LONG</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:24"><expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:17">value</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:23">off</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:25"><expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:15">buf</name>   <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:24">NULL</name></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:25">case <expr pos:start="67:14" pos:end="67:24"><name pos:start="67:14" pos:end="67:24">TIFF_STRING</name></expr>:</case>

            <if_stmt pos:start="69:13" pos:end="75:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:27">(<expr pos:start="69:17" pos:end="69:26"><name pos:start="69:17" pos:end="69:21">count</name> <operator pos:start="69:23" pos:end="69:24">&lt;=</operator> <literal type="number" pos:start="69:26" pos:end="69:26">4</literal></expr>)</condition> <block pos:start="69:29" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:22">

                <expr_stmt pos:start="71:17" pos:end="71:25"><expr pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:19">buf</name> <operator pos:start="71:21" pos:end="71:22">-=</operator> <literal type="number" pos:start="71:24" pos:end="71:24">4</literal></expr>;</expr_stmt>

                <break pos:start="73:17" pos:end="73:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <default pos:start="77:9" pos:end="77:16">default:</default>

            <expr_stmt pos:start="79:13" pos:end="79:29"><expr pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:17">value</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:28">UINT_MAX</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:32"><expr pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:15">buf</name>   <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:25">start</name> <operator pos:start="81:27" pos:end="81:27">+</operator> <name pos:start="81:29" pos:end="81:31">off</name></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="95:5">else <block pos:start="85:12" pos:end="95:5">{<block_content pos:start="87:9" pos:end="93:30">

        <if_stmt pos:start="87:9" pos:end="93:30"><if pos:start="87:9" pos:end="89:21">if <condition pos:start="87:12" pos:end="87:56">(<expr pos:start="87:13" pos:end="87:55"><name pos:start="87:13" pos:end="87:17">count</name> <operator pos:start="87:19" pos:end="87:20">&lt;=</operator> <literal type="number" pos:start="87:22" pos:end="87:22">4</literal> <operator pos:start="87:24" pos:end="87:25">&amp;&amp;</operator> <name pos:start="87:27" pos:end="87:42"><name pos:start="87:27" pos:end="87:36">type_sizes</name><index pos:start="87:37" pos:end="87:42">[<expr pos:start="87:38" pos:end="87:41"><name pos:start="87:38" pos:end="87:41">type</name></expr>]</index></name> <operator pos:start="87:44" pos:end="87:44">*</operator> <name pos:start="87:46" pos:end="87:50">count</name> <operator pos:start="87:52" pos:end="87:53">&lt;=</operator> <literal type="number" pos:start="87:55" pos:end="87:55">4</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:21"><block_content pos:start="89:13" pos:end="89:21">

            <expr_stmt pos:start="89:13" pos:end="89:21"><expr pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:15">buf</name> <operator pos:start="89:17" pos:end="89:18">-=</operator> <literal type="number" pos:start="89:20" pos:end="89:20">4</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="91:9" pos:end="93:30">else<block type="pseudo" pos:start="93:13" pos:end="93:30"><block_content pos:start="93:13" pos:end="93:30">

            <expr_stmt pos:start="93:13" pos:end="93:30"><expr pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:15">buf</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:23">start</name> <operator pos:start="93:25" pos:end="93:25">+</operator> <name pos:start="93:27" pos:end="93:29">off</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="99:5" pos:end="107:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="99:46">(<expr pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:11">buf</name> <operator pos:start="99:13" pos:end="99:14">&amp;&amp;</operator> <operator pos:start="99:16" pos:end="99:16">(</operator><name pos:start="99:17" pos:end="99:36"><name pos:start="99:17" pos:end="99:19">buf</name> <argument_list type="generic" pos:start="99:21" pos:end="99:36">&lt; <argument pos:start="99:23" pos:end="99:34"><expr pos:start="99:23" pos:end="99:34"><name pos:start="99:23" pos:end="99:27">start</name> <operator pos:start="99:29" pos:end="99:30">||</operator> <name pos:start="99:32" pos:end="99:34">buf</name></expr></argument> &gt;</argument_list></name> <name pos:start="99:38" pos:end="99:44">end_buf</name><operator pos:start="99:45" pos:end="99:45">)</operator></expr>)</condition> <block pos:start="99:48" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:35">

        <expr_stmt pos:start="101:9" pos:end="103:63"><expr pos:start="101:9" pos:end="103:62"><call pos:start="101:9" pos:end="103:62"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="103:62">(<argument pos:start="101:16" pos:end="101:23"><expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:23">avctx</name></name></expr></argument>, <argument pos:start="101:26" pos:end="101:37"><expr pos:start="101:26" pos:end="101:37"><name pos:start="101:26" pos:end="101:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="103:16" pos:end="103:61"><expr pos:start="103:16" pos:end="103:61"><literal type="string" pos:start="103:16" pos:end="103:61">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:35">return <expr pos:start="105:16" pos:end="105:34"><name pos:start="105:16" pos:end="105:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="111:5" pos:end="479:5">switch <condition pos:start="111:12" pos:end="111:16">(<expr pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">tag</name></expr>)</condition> <block pos:start="111:18" pos:end="479:5">{<block_content pos:start="113:5" pos:end="477:9">

    <case pos:start="113:5" pos:end="113:20">case <expr pos:start="113:10" pos:end="113:19"><name pos:start="113:10" pos:end="113:19">TIFF_WIDTH</name></expr>:</case>

        <expr_stmt pos:start="115:9" pos:end="115:25"><expr pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:16">width</name></name> <operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:24">value</name></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:21">case <expr pos:start="119:10" pos:end="119:20"><name pos:start="119:10" pos:end="119:20">TIFF_HEIGHT</name></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:26"><expr pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:17"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:17">height</name></name> <operator pos:start="121:19" pos:end="121:19">=</operator> <name pos:start="121:21" pos:end="121:25">value</name></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:18">case <expr pos:start="125:10" pos:end="125:17"><name pos:start="125:10" pos:end="125:17">TIFF_BPP</name></expr>:</case>

        <expr_stmt pos:start="127:9" pos:end="127:28"><expr pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:19">bppcount</name></name> <operator pos:start="127:21" pos:end="127:21">=</operator> <name pos:start="127:23" pos:end="127:27">count</name></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="139:9"><if pos:start="129:9" pos:end="139:9">if <condition pos:start="129:12" pos:end="129:22">(<expr pos:start="129:13" pos:end="129:21"><name pos:start="129:13" pos:end="129:17">count</name> <operator pos:start="129:19" pos:end="129:19">&gt;</operator> <literal type="number" pos:start="129:21" pos:end="129:21">4</literal></expr>)</condition> <block pos:start="129:24" pos:end="139:9">{<block_content pos:start="131:13" pos:end="137:39">

            <expr_stmt pos:start="131:13" pos:end="135:34"><expr pos:start="131:13" pos:end="135:33"><call pos:start="131:13" pos:end="135:33"><name pos:start="131:13" pos:end="131:18">av_log</name><argument_list pos:start="131:19" pos:end="135:33">(<argument pos:start="131:20" pos:end="131:27"><expr pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:20">s</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:27">avctx</name></name></expr></argument>, <argument pos:start="131:30" pos:end="131:41"><expr pos:start="131:30" pos:end="131:41"><name pos:start="131:30" pos:end="131:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="133:20" pos:end="133:75"><expr pos:start="133:20" pos:end="133:75"><literal type="string" pos:start="133:20" pos:end="133:75">"This format is not supported (bpp=%d, %d components)\n"</literal></expr></argument>,

                   <argument pos:start="135:20" pos:end="135:25"><expr pos:start="135:20" pos:end="135:25"><name pos:start="135:20" pos:end="135:25"><name pos:start="135:20" pos:end="135:20">s</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:25">bpp</name></name></expr></argument>, <argument pos:start="135:28" pos:end="135:32"><expr pos:start="135:28" pos:end="135:32"><name pos:start="135:28" pos:end="135:32">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="137:13" pos:end="137:39">return <expr pos:start="137:20" pos:end="137:38"><name pos:start="137:20" pos:end="137:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="141:9" pos:end="175:9"><if pos:start="141:9" pos:end="143:27">if <condition pos:start="141:12" pos:end="141:23">(<expr pos:start="141:13" pos:end="141:22"><name pos:start="141:13" pos:end="141:17">count</name> <operator pos:start="141:19" pos:end="141:20">==</operator> <literal type="number" pos:start="141:22" pos:end="141:22">1</literal></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:27"><block_content pos:start="143:13" pos:end="143:27">

            <expr_stmt pos:start="143:13" pos:end="143:27"><expr pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:18"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:18">bpp</name></name> <operator pos:start="143:20" pos:end="143:20">=</operator> <name pos:start="143:22" pos:end="143:26">value</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="145:9" pos:end="175:9">else <block pos:start="145:14" pos:end="175:9">{<block_content pos:start="147:13" pos:end="173:13">

            <switch pos:start="147:13" pos:end="173:13">switch <condition pos:start="147:20" pos:end="147:25">(<expr pos:start="147:21" pos:end="147:24"><name pos:start="147:21" pos:end="147:24">type</name></expr>)</condition> <block pos:start="147:27" pos:end="173:13">{<block_content pos:start="149:13" pos:end="171:28">

            <case pos:start="149:13" pos:end="149:27">case <expr pos:start="149:18" pos:end="149:26"><name pos:start="149:18" pos:end="149:26">TIFF_BYTE</name></expr>:</case>

                <expr_stmt pos:start="151:17" pos:end="153:69"><expr pos:start="151:17" pos:end="153:68"><name pos:start="151:17" pos:end="151:22"><name pos:start="151:17" pos:end="151:17">s</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:22">bpp</name></name> <operator pos:start="151:24" pos:end="151:24">=</operator> <operator pos:start="151:26" pos:end="151:26">(</operator><name pos:start="151:27" pos:end="151:29">off</name> <operator pos:start="151:31" pos:end="151:31">&amp;</operator> <literal type="number" pos:start="151:33" pos:end="151:36">0xFF</literal><operator pos:start="151:37" pos:end="151:37">)</operator> <operator pos:start="151:39" pos:end="151:39">+</operator> <operator pos:start="151:41" pos:end="151:41">(</operator><operator pos:start="151:42" pos:end="151:42">(</operator><name pos:start="151:43" pos:end="151:45">off</name> <operator pos:start="151:47" pos:end="151:48">&gt;&gt;</operator> <literal type="number" pos:start="151:50" pos:end="151:50">8</literal><operator pos:start="151:51" pos:end="151:51">)</operator> <operator pos:start="151:53" pos:end="151:53">&amp;</operator> <literal type="number" pos:start="151:55" pos:end="151:58">0xFF</literal><operator pos:start="151:59" pos:end="151:59">)</operator> <operator pos:start="151:61" pos:end="151:61">+</operator>

                         <operator pos:start="153:26" pos:end="153:26">(</operator><operator pos:start="153:27" pos:end="153:27">(</operator><name pos:start="153:28" pos:end="153:30">off</name> <operator pos:start="153:32" pos:end="153:33">&gt;&gt;</operator> <literal type="number" pos:start="153:35" pos:end="153:36">16</literal><operator pos:start="153:37" pos:end="153:37">)</operator> <operator pos:start="153:39" pos:end="153:39">&amp;</operator> <literal type="number" pos:start="153:41" pos:end="153:44">0xFF</literal><operator pos:start="153:45" pos:end="153:45">)</operator> <operator pos:start="153:47" pos:end="153:47">+</operator> <operator pos:start="153:49" pos:end="153:49">(</operator><operator pos:start="153:50" pos:end="153:50">(</operator><name pos:start="153:51" pos:end="153:53">off</name> <operator pos:start="153:55" pos:end="153:56">&gt;&gt;</operator> <literal type="number" pos:start="153:58" pos:end="153:59">24</literal><operator pos:start="153:60" pos:end="153:60">)</operator> <operator pos:start="153:62" pos:end="153:62">&amp;</operator> <literal type="number" pos:start="153:64" pos:end="153:67">0xFF</literal><operator pos:start="153:68" pos:end="153:68">)</operator></expr>;</expr_stmt>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            <case pos:start="157:13" pos:end="157:28">case <expr pos:start="157:18" pos:end="157:27"><name pos:start="157:18" pos:end="157:27">TIFF_SHORT</name></expr>:</case>

            <case pos:start="159:13" pos:end="159:27">case <expr pos:start="159:18" pos:end="159:26"><name pos:start="159:18" pos:end="159:26">TIFF_LONG</name></expr>:</case>

                <expr_stmt pos:start="161:17" pos:end="161:27"><expr pos:start="161:17" pos:end="161:26"><name pos:start="161:17" pos:end="161:22"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:22">bpp</name></name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">0</literal></expr>;</expr_stmt>

                <for pos:start="163:17" pos:end="165:54">for <control pos:start="163:21" pos:end="163:60">(<init pos:start="163:22" pos:end="163:27"><expr pos:start="163:22" pos:end="163:26"><name pos:start="163:22" pos:end="163:22">i</name> <operator pos:start="163:24" pos:end="163:24">=</operator> <literal type="number" pos:start="163:26" pos:end="163:26">0</literal></expr>;</init> <condition pos:start="163:29" pos:end="163:55"><expr pos:start="163:29" pos:end="163:54"><name pos:start="163:29" pos:end="163:29">i</name> <operator pos:start="163:31" pos:end="163:31">&lt;</operator> <name pos:start="163:33" pos:end="163:37">count</name> <operator pos:start="163:39" pos:end="163:40">&amp;&amp;</operator> <name pos:start="163:42" pos:end="163:44">buf</name> <operator pos:start="163:46" pos:end="163:46">&lt;</operator> <name pos:start="163:48" pos:end="163:54">end_buf</name></expr>;</condition> <incr pos:start="163:57" pos:end="163:59"><expr pos:start="163:57" pos:end="163:59"><name pos:start="163:57" pos:end="163:57">i</name><operator pos:start="163:58" pos:end="163:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="165:21" pos:end="165:54"><block_content pos:start="165:21" pos:end="165:54">

                    <expr_stmt pos:start="165:21" pos:end="165:54"><expr pos:start="165:21" pos:end="165:53"><name pos:start="165:21" pos:end="165:26"><name pos:start="165:21" pos:end="165:21">s</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:26">bpp</name></name> <operator pos:start="165:28" pos:end="165:29">+=</operator> <call pos:start="165:31" pos:end="165:53"><name pos:start="165:31" pos:end="165:34">tget</name><argument_list pos:start="165:35" pos:end="165:53">(<argument pos:start="165:36" pos:end="165:39"><expr pos:start="165:36" pos:end="165:39"><operator pos:start="165:36" pos:end="165:36">&amp;</operator><name pos:start="165:37" pos:end="165:39">buf</name></expr></argument>, <argument pos:start="165:42" pos:end="165:45"><expr pos:start="165:42" pos:end="165:45"><name pos:start="165:42" pos:end="165:45">type</name></expr></argument>, <argument pos:start="165:48" pos:end="165:52"><expr pos:start="165:48" pos:end="165:52"><name pos:start="165:48" pos:end="165:52"><name pos:start="165:48" pos:end="165:48">s</name><operator pos:start="165:49" pos:end="165:50">-&gt;</operator><name pos:start="165:51" pos:end="165:52">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <break pos:start="167:17" pos:end="167:22">break;</break>

            <default pos:start="169:13" pos:end="169:20">default:</default>

                <expr_stmt pos:start="171:17" pos:end="171:28"><expr pos:start="171:17" pos:end="171:27"><name pos:start="171:17" pos:end="171:22"><name pos:start="171:17" pos:end="171:17">s</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:22">bpp</name></name> <operator pos:start="171:24" pos:end="171:24">=</operator> <operator pos:start="171:26" pos:end="171:26">-</operator><literal type="number" pos:start="171:27" pos:end="171:27">1</literal></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:32">case <expr pos:start="179:10" pos:end="179:31"><name pos:start="179:10" pos:end="179:31">TIFF_SAMPLES_PER_PIXEL</name></expr>:</case>

        <if_stmt pos:start="181:9" pos:end="189:9"><if pos:start="181:9" pos:end="189:9">if <condition pos:start="181:12" pos:end="181:23">(<expr pos:start="181:13" pos:end="181:22"><name pos:start="181:13" pos:end="181:17">count</name> <operator pos:start="181:19" pos:end="181:20">!=</operator> <literal type="number" pos:start="181:22" pos:end="181:22">1</literal></expr>)</condition> <block pos:start="181:25" pos:end="189:9">{<block_content pos:start="183:13" pos:end="187:39">

            <expr_stmt pos:start="183:13" pos:end="185:81"><expr pos:start="183:13" pos:end="185:80"><call pos:start="183:13" pos:end="185:80"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="185:80">(<argument pos:start="183:20" pos:end="183:27"><expr pos:start="183:20" pos:end="183:27"><name pos:start="183:20" pos:end="183:27"><name pos:start="183:20" pos:end="183:20">s</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:27">avctx</name></name></expr></argument>, <argument pos:start="183:30" pos:end="183:41"><expr pos:start="183:30" pos:end="183:41"><name pos:start="183:30" pos:end="183:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="185:20" pos:end="185:79"><expr pos:start="185:20" pos:end="185:79"><literal type="string" pos:start="185:20" pos:end="185:79">"Samples per pixel requires a single value, many provided\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="187:13" pos:end="187:39">return <expr pos:start="187:20" pos:end="187:38"><name pos:start="187:20" pos:end="187:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="191:9" pos:end="193:28"><if pos:start="191:9" pos:end="193:28">if <condition pos:start="191:12" pos:end="191:29">(<expr pos:start="191:13" pos:end="191:28"><name pos:start="191:13" pos:end="191:23"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:23">bppcount</name></name> <operator pos:start="191:25" pos:end="191:26">==</operator> <literal type="number" pos:start="191:28" pos:end="191:28">1</literal></expr>)</condition><block type="pseudo" pos:start="193:13" pos:end="193:28"><block_content pos:start="193:13" pos:end="193:28">

            <expr_stmt pos:start="193:13" pos:end="193:28"><expr pos:start="193:13" pos:end="193:27"><name pos:start="193:13" pos:end="193:18"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:18">bpp</name></name> <operator pos:start="193:20" pos:end="193:21">*=</operator> <name pos:start="193:23" pos:end="193:27">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:28"><expr pos:start="195:9" pos:end="195:27"><name pos:start="195:9" pos:end="195:19"><name pos:start="195:9" pos:end="195:9">s</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:19">bppcount</name></name> <operator pos:start="195:21" pos:end="195:21">=</operator> <name pos:start="195:23" pos:end="195:27">value</name></expr>;</expr_stmt>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:20">case <expr pos:start="199:10" pos:end="199:19"><name pos:start="199:10" pos:end="199:19">TIFF_COMPR</name></expr>:</case>

        <expr_stmt pos:start="201:9" pos:end="201:29"><expr pos:start="201:9" pos:end="201:28"><name pos:start="201:9" pos:end="201:16"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:16">compr</name></name>     <operator pos:start="201:22" pos:end="201:22">=</operator> <name pos:start="201:24" pos:end="201:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:25"><expr pos:start="203:9" pos:end="203:24"><name pos:start="203:9" pos:end="203:20"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:20">predictor</name></name> <operator pos:start="203:22" pos:end="203:22">=</operator> <literal type="number" pos:start="203:24" pos:end="203:24">0</literal></expr>;</expr_stmt>

        <switch pos:start="205:9" pos:end="257:9">switch <condition pos:start="205:16" pos:end="205:25">(<expr pos:start="205:17" pos:end="205:24"><name pos:start="205:17" pos:end="205:24"><name pos:start="205:17" pos:end="205:17">s</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:24">compr</name></name></expr>)</condition> <block pos:start="205:27" pos:end="257:9">{<block_content pos:start="207:9" pos:end="255:39">

        <case pos:start="207:9" pos:end="207:22">case <expr pos:start="207:14" pos:end="207:21"><name pos:start="207:14" pos:end="207:21">TIFF_RAW</name></expr>:</case>

        <case pos:start="209:9" pos:end="209:27">case <expr pos:start="209:14" pos:end="209:26"><name pos:start="209:14" pos:end="209:26">TIFF_PACKBITS</name></expr>:</case>

        <case pos:start="211:9" pos:end="211:22">case <expr pos:start="211:14" pos:end="211:21"><name pos:start="211:14" pos:end="211:21">TIFF_LZW</name></expr>:</case>

        <case pos:start="213:9" pos:end="213:28">case <expr pos:start="213:14" pos:end="213:27"><name pos:start="213:14" pos:end="213:27">TIFF_CCITT_RLE</name></expr>:</case>

            <break pos:start="215:13" pos:end="215:18">break;</break>

        <case pos:start="217:9" pos:end="217:21">case <expr pos:start="217:14" pos:end="217:20"><name pos:start="217:14" pos:end="217:20">TIFF_G3</name></expr>:</case>

        <case pos:start="219:9" pos:end="219:21">case <expr pos:start="219:14" pos:end="219:20"><name pos:start="219:14" pos:end="219:20">TIFF_G4</name></expr>:</case>

            <expr_stmt pos:start="221:13" pos:end="221:28"><expr pos:start="221:13" pos:end="221:27"><name pos:start="221:13" pos:end="221:23"><name pos:start="221:13" pos:end="221:13">s</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:23">fax_opts</name></name> <operator pos:start="221:25" pos:end="221:25">=</operator> <literal type="number" pos:start="221:27" pos:end="221:27">0</literal></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        <case pos:start="225:9" pos:end="225:26">case <expr pos:start="225:14" pos:end="225:25"><name pos:start="225:14" pos:end="225:25">TIFF_DEFLATE</name></expr>:</case>

        <case pos:start="227:9" pos:end="230:0">case <expr pos:start="227:14" pos:end="227:31"><name pos:start="227:14" pos:end="227:31">TIFF_ADOBE_DEFLATE</name></expr>:</case>

<cpp:if pos:start="229:1" pos:end="229:15">#<cpp:directive pos:start="229:2" pos:end="229:3">if</cpp:directive> <expr pos:start="229:5" pos:end="229:15"><name pos:start="229:5" pos:end="229:15">CONFIG_ZLIB</name></expr></cpp:if>

            <break pos:start="231:13" pos:end="234:0">break;</break>

<cpp:else pos:start="233:1" pos:end="233:5">#<cpp:directive pos:start="233:2" pos:end="233:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="235:13" pos:end="235:78"><expr pos:start="235:13" pos:end="235:77"><call pos:start="235:13" pos:end="235:77"><name pos:start="235:13" pos:end="235:18">av_log</name><argument_list pos:start="235:19" pos:end="235:77">(<argument pos:start="235:20" pos:end="235:27"><expr pos:start="235:20" pos:end="235:27"><name pos:start="235:20" pos:end="235:27"><name pos:start="235:20" pos:end="235:20">s</name><operator pos:start="235:21" pos:end="235:22">-&gt;</operator><name pos:start="235:23" pos:end="235:27">avctx</name></name></expr></argument>, <argument pos:start="235:30" pos:end="235:41"><expr pos:start="235:30" pos:end="235:41"><name pos:start="235:30" pos:end="235:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="235:44" pos:end="235:76"><expr pos:start="235:44" pos:end="235:76"><literal type="string" pos:start="235:44" pos:end="235:76">"Deflate: ZLib not compiled in\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="237:13" pos:end="240:0">return <expr pos:start="237:20" pos:end="237:34"><call pos:start="237:20" pos:end="237:34"><name pos:start="237:20" pos:end="237:26">AVERROR</name><argument_list pos:start="237:27" pos:end="237:34">(<argument pos:start="237:28" pos:end="237:33"><expr pos:start="237:28" pos:end="237:33"><name pos:start="237:28" pos:end="237:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="239:1" pos:end="239:6">#<cpp:directive pos:start="239:2" pos:end="239:6">endif</cpp:directive></cpp:endif>

        <case pos:start="241:9" pos:end="241:23">case <expr pos:start="241:14" pos:end="241:22"><name pos:start="241:14" pos:end="241:22">TIFF_JPEG</name></expr>:</case>

        <case pos:start="243:9" pos:end="243:26">case <expr pos:start="243:14" pos:end="243:25"><name pos:start="243:14" pos:end="243:25">TIFF_NEWJPEG</name></expr>:</case>

            <expr_stmt pos:start="245:13" pos:end="245:72"><expr pos:start="245:13" pos:end="245:71"><call pos:start="245:13" pos:end="245:71"><name pos:start="245:13" pos:end="245:41">avpriv_report_missing_feature</name><argument_list pos:start="245:42" pos:end="245:71">(<argument pos:start="245:43" pos:end="245:50"><expr pos:start="245:43" pos:end="245:50"><name pos:start="245:43" pos:end="245:50"><name pos:start="245:43" pos:end="245:43">s</name><operator pos:start="245:44" pos:end="245:45">-&gt;</operator><name pos:start="245:46" pos:end="245:50">avctx</name></name></expr></argument>, <argument pos:start="245:53" pos:end="245:70"><expr pos:start="245:53" pos:end="245:70"><literal type="string" pos:start="245:53" pos:end="245:70">"JPEG compression"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="247:13" pos:end="247:40">return <expr pos:start="247:20" pos:end="247:39"><name pos:start="247:20" pos:end="247:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        <default pos:start="249:9" pos:end="249:16">default:</default>

            <expr_stmt pos:start="251:13" pos:end="253:29"><expr pos:start="251:13" pos:end="253:28"><call pos:start="251:13" pos:end="253:28"><name pos:start="251:13" pos:end="251:18">av_log</name><argument_list pos:start="251:19" pos:end="253:28">(<argument pos:start="251:20" pos:end="251:27"><expr pos:start="251:20" pos:end="251:27"><name pos:start="251:20" pos:end="251:27"><name pos:start="251:20" pos:end="251:20">s</name><operator pos:start="251:21" pos:end="251:22">-&gt;</operator><name pos:start="251:23" pos:end="251:27">avctx</name></name></expr></argument>, <argument pos:start="251:30" pos:end="251:41"><expr pos:start="251:30" pos:end="251:41"><name pos:start="251:30" pos:end="251:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="251:44" pos:end="251:76"><expr pos:start="251:44" pos:end="251:76"><literal type="string" pos:start="251:44" pos:end="251:76">"Unknown compression method %i\n"</literal></expr></argument>,

                   <argument pos:start="253:20" pos:end="253:27"><expr pos:start="253:20" pos:end="253:27"><name pos:start="253:20" pos:end="253:27"><name pos:start="253:20" pos:end="253:20">s</name><operator pos:start="253:21" pos:end="253:22">-&gt;</operator><name pos:start="253:23" pos:end="253:27">compr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="255:13" pos:end="255:39">return <expr pos:start="255:20" pos:end="255:38"><name pos:start="255:20" pos:end="255:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="259:9" pos:end="259:14">break;</break>

    <case pos:start="261:5" pos:end="261:27">case <expr pos:start="261:10" pos:end="261:26"><name pos:start="261:10" pos:end="261:26">TIFF_ROWSPERSTRIP</name></expr>:</case>

        <if_stmt pos:start="263:9" pos:end="265:37"><if pos:start="263:9" pos:end="265:37">if <condition pos:start="263:12" pos:end="263:51">(<expr pos:start="263:13" pos:end="263:50"><name pos:start="263:13" pos:end="263:16">type</name> <operator pos:start="263:18" pos:end="263:19">==</operator> <name pos:start="263:21" pos:end="263:29">TIFF_LONG</name> <operator pos:start="263:31" pos:end="263:32">&amp;&amp;</operator> <name pos:start="263:34" pos:end="263:38">value</name> <operator pos:start="263:40" pos:end="263:41">==</operator> <name pos:start="263:43" pos:end="263:50">UINT_MAX</name></expr>)</condition><block type="pseudo" pos:start="265:13" pos:end="265:37"><block_content pos:start="265:13" pos:end="265:37">

            <expr_stmt pos:start="265:13" pos:end="265:37"><expr pos:start="265:13" pos:end="265:36"><name pos:start="265:13" pos:end="265:17">value</name> <operator pos:start="265:19" pos:end="265:19">=</operator> <name pos:start="265:21" pos:end="265:36"><name pos:start="265:21" pos:end="265:21">s</name><operator pos:start="265:22" pos:end="265:23">-&gt;</operator><name pos:start="265:24" pos:end="265:28">avctx</name><operator pos:start="265:29" pos:end="265:30">-&gt;</operator><name pos:start="265:31" pos:end="265:36">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="267:9" pos:end="275:9"><if pos:start="267:9" pos:end="275:9">if <condition pos:start="267:12" pos:end="267:22">(<expr pos:start="267:13" pos:end="267:21"><name pos:start="267:13" pos:end="267:17">value</name> <operator pos:start="267:19" pos:end="267:19">&lt;</operator> <literal type="number" pos:start="267:21" pos:end="267:21">1</literal></expr>)</condition> <block pos:start="267:24" pos:end="275:9">{<block_content pos:start="269:13" pos:end="273:39">

            <expr_stmt pos:start="269:13" pos:end="271:58"><expr pos:start="269:13" pos:end="271:57"><call pos:start="269:13" pos:end="271:57"><name pos:start="269:13" pos:end="269:18">av_log</name><argument_list pos:start="269:19" pos:end="271:57">(<argument pos:start="269:20" pos:end="269:27"><expr pos:start="269:20" pos:end="269:27"><name pos:start="269:20" pos:end="269:27"><name pos:start="269:20" pos:end="269:20">s</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:27">avctx</name></name></expr></argument>, <argument pos:start="269:30" pos:end="269:41"><expr pos:start="269:30" pos:end="269:41"><name pos:start="269:30" pos:end="269:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="271:20" pos:end="271:56"><expr pos:start="271:20" pos:end="271:56"><literal type="string" pos:start="271:20" pos:end="271:56">"Incorrect value of rows per strip\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="273:13" pos:end="273:39">return <expr pos:start="273:20" pos:end="273:38"><name pos:start="273:20" pos:end="273:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:23"><expr pos:start="277:9" pos:end="277:22"><name pos:start="277:9" pos:end="277:14"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:14">rps</name></name> <operator pos:start="277:16" pos:end="277:16">=</operator> <name pos:start="277:18" pos:end="277:22">value</name></expr>;</expr_stmt>

        <break pos:start="279:9" pos:end="279:14">break;</break>

    <case pos:start="281:5" pos:end="281:25">case <expr pos:start="281:10" pos:end="281:24"><name pos:start="281:10" pos:end="281:24">TIFF_STRIP_OFFS</name></expr>:</case>

        <if_stmt pos:start="283:9" pos:end="291:39"><if pos:start="283:9" pos:end="289:9">if <condition pos:start="283:12" pos:end="283:23">(<expr pos:start="283:13" pos:end="283:22"><name pos:start="283:13" pos:end="283:17">count</name> <operator pos:start="283:19" pos:end="283:20">==</operator> <literal type="number" pos:start="283:22" pos:end="283:22">1</literal></expr>)</condition> <block pos:start="283:25" pos:end="289:9">{<block_content pos:start="285:13" pos:end="287:33">

            <expr_stmt pos:start="285:13" pos:end="285:32"><expr pos:start="285:13" pos:end="285:31"><name pos:start="285:13" pos:end="285:24"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:24">stripdata</name></name> <operator pos:start="285:26" pos:end="285:26">=</operator> <name pos:start="285:28" pos:end="285:31">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:33"><expr pos:start="287:13" pos:end="287:32"><name pos:start="287:13" pos:end="287:23"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:23">stripoff</name></name>  <operator pos:start="287:26" pos:end="287:26">=</operator> <name pos:start="287:28" pos:end="287:32">value</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="289:11" pos:end="291:39">else<block type="pseudo" pos:start="291:13" pos:end="291:39"><block_content pos:start="291:13" pos:end="291:39">

            <expr_stmt pos:start="291:13" pos:end="291:39"><expr pos:start="291:13" pos:end="291:38"><name pos:start="291:13" pos:end="291:24"><name pos:start="291:13" pos:end="291:13">s</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:24">stripdata</name></name> <operator pos:start="291:26" pos:end="291:26">=</operator> <name pos:start="291:28" pos:end="291:32">start</name> <operator pos:start="291:34" pos:end="291:34">+</operator> <name pos:start="291:36" pos:end="291:38">off</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:26"><expr pos:start="293:9" pos:end="293:25"><name pos:start="293:9" pos:end="293:17"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:17">strips</name></name> <operator pos:start="293:19" pos:end="293:19">=</operator> <name pos:start="293:21" pos:end="293:25">count</name></expr>;</expr_stmt>

        <if_stmt pos:start="295:9" pos:end="297:31"><if pos:start="295:9" pos:end="297:31">if <condition pos:start="295:12" pos:end="295:27">(<expr pos:start="295:13" pos:end="295:26"><name pos:start="295:13" pos:end="295:21"><name pos:start="295:13" pos:end="295:13">s</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:21">strips</name></name> <operator pos:start="295:23" pos:end="295:24">==</operator> <literal type="number" pos:start="295:26" pos:end="295:26">1</literal></expr>)</condition><block type="pseudo" pos:start="297:13" pos:end="297:31"><block_content pos:start="297:13" pos:end="297:31">

            <expr_stmt pos:start="297:13" pos:end="297:31"><expr pos:start="297:13" pos:end="297:30"><name pos:start="297:13" pos:end="297:18"><name pos:start="297:13" pos:end="297:13">s</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:18">rps</name></name> <operator pos:start="297:20" pos:end="297:20">=</operator> <name pos:start="297:22" pos:end="297:30"><name pos:start="297:22" pos:end="297:22">s</name><operator pos:start="297:23" pos:end="297:24">-&gt;</operator><name pos:start="297:25" pos:end="297:30">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:22"><expr pos:start="299:9" pos:end="299:21"><name pos:start="299:9" pos:end="299:14"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:14">sot</name></name> <operator pos:start="299:16" pos:end="299:16">=</operator> <name pos:start="299:18" pos:end="299:21">type</name></expr>;</expr_stmt>

        <if_stmt pos:start="301:9" pos:end="309:9"><if pos:start="301:9" pos:end="309:9">if <condition pos:start="301:12" pos:end="301:35">(<expr pos:start="301:13" pos:end="301:34"><name pos:start="301:13" pos:end="301:24"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:24">stripdata</name></name> <operator pos:start="301:26" pos:end="301:26">&gt;</operator> <name pos:start="301:28" pos:end="301:34">end_buf</name></expr>)</condition> <block pos:start="301:37" pos:end="309:9">{<block_content pos:start="303:13" pos:end="307:39">

            <expr_stmt pos:start="303:13" pos:end="305:67"><expr pos:start="303:13" pos:end="305:66"><call pos:start="303:13" pos:end="305:66"><name pos:start="303:13" pos:end="303:18">av_log</name><argument_list pos:start="303:19" pos:end="305:66">(<argument pos:start="303:20" pos:end="303:27"><expr pos:start="303:20" pos:end="303:27"><name pos:start="303:20" pos:end="303:27"><name pos:start="303:20" pos:end="303:20">s</name><operator pos:start="303:21" pos:end="303:22">-&gt;</operator><name pos:start="303:23" pos:end="303:27">avctx</name></name></expr></argument>, <argument pos:start="303:30" pos:end="303:41"><expr pos:start="303:30" pos:end="303:41"><name pos:start="303:30" pos:end="303:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="305:20" pos:end="305:65"><expr pos:start="305:20" pos:end="305:65"><literal type="string" pos:start="305:20" pos:end="305:65">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="307:13" pos:end="307:39">return <expr pos:start="307:20" pos:end="307:38"><name pos:start="307:20" pos:end="307:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="311:9" pos:end="311:14">break;</break>

    <case pos:start="313:5" pos:end="313:25">case <expr pos:start="313:10" pos:end="313:24"><name pos:start="313:10" pos:end="313:24">TIFF_STRIP_SIZE</name></expr>:</case>

        <if_stmt pos:start="315:9" pos:end="327:9"><if pos:start="315:9" pos:end="323:9">if <condition pos:start="315:12" pos:end="315:23">(<expr pos:start="315:13" pos:end="315:22"><name pos:start="315:13" pos:end="315:17">count</name> <operator pos:start="315:19" pos:end="315:20">==</operator> <literal type="number" pos:start="315:22" pos:end="315:22">1</literal></expr>)</condition> <block pos:start="315:25" pos:end="323:9">{<block_content pos:start="317:13" pos:end="321:30">

            <expr_stmt pos:start="317:13" pos:end="317:33"><expr pos:start="317:13" pos:end="317:32"><name pos:start="317:13" pos:end="317:25"><name pos:start="317:13" pos:end="317:13">s</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:25">stripsizes</name></name> <operator pos:start="317:27" pos:end="317:27">=</operator> <name pos:start="317:29" pos:end="317:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:34"><expr pos:start="319:13" pos:end="319:33"><name pos:start="319:13" pos:end="319:24"><name pos:start="319:13" pos:end="319:13">s</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:24">stripsize</name></name>  <operator pos:start="319:27" pos:end="319:27">=</operator> <name pos:start="319:29" pos:end="319:33">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:30"><expr pos:start="321:13" pos:end="321:29"><name pos:start="321:13" pos:end="321:21"><name pos:start="321:13" pos:end="321:13">s</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:21">strips</name></name>     <operator pos:start="321:27" pos:end="321:27">=</operator> <literal type="number" pos:start="321:29" pos:end="321:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="323:11" pos:end="327:9">else <block pos:start="323:16" pos:end="327:9">{<block_content pos:start="325:13" pos:end="325:40">

            <expr_stmt pos:start="325:13" pos:end="325:40"><expr pos:start="325:13" pos:end="325:39"><name pos:start="325:13" pos:end="325:25"><name pos:start="325:13" pos:end="325:13">s</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:25">stripsizes</name></name> <operator pos:start="325:27" pos:end="325:27">=</operator> <name pos:start="325:29" pos:end="325:33">start</name> <operator pos:start="325:35" pos:end="325:35">+</operator> <name pos:start="325:37" pos:end="325:39">off</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:26"><expr pos:start="329:9" pos:end="329:25"><name pos:start="329:9" pos:end="329:17"><name pos:start="329:9" pos:end="329:9">s</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:17">strips</name></name> <operator pos:start="329:19" pos:end="329:19">=</operator> <name pos:start="329:21" pos:end="329:25">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:25"><expr pos:start="331:9" pos:end="331:24"><name pos:start="331:9" pos:end="331:17"><name pos:start="331:9" pos:end="331:9">s</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:17">sstype</name></name> <operator pos:start="331:19" pos:end="331:19">=</operator> <name pos:start="331:21" pos:end="331:24">type</name></expr>;</expr_stmt>

        <if_stmt pos:start="333:9" pos:end="341:9"><if pos:start="333:9" pos:end="341:9">if <condition pos:start="333:12" pos:end="333:36">(<expr pos:start="333:13" pos:end="333:35"><name pos:start="333:13" pos:end="333:25"><name pos:start="333:13" pos:end="333:13">s</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:25">stripsizes</name></name> <operator pos:start="333:27" pos:end="333:27">&gt;</operator> <name pos:start="333:29" pos:end="333:35">end_buf</name></expr>)</condition> <block pos:start="333:38" pos:end="341:9">{<block_content pos:start="335:13" pos:end="339:39">

            <expr_stmt pos:start="335:13" pos:end="337:67"><expr pos:start="335:13" pos:end="337:66"><call pos:start="335:13" pos:end="337:66"><name pos:start="335:13" pos:end="335:18">av_log</name><argument_list pos:start="335:19" pos:end="337:66">(<argument pos:start="335:20" pos:end="335:27"><expr pos:start="335:20" pos:end="335:27"><name pos:start="335:20" pos:end="335:27"><name pos:start="335:20" pos:end="335:20">s</name><operator pos:start="335:21" pos:end="335:22">-&gt;</operator><name pos:start="335:23" pos:end="335:27">avctx</name></name></expr></argument>, <argument pos:start="335:30" pos:end="335:41"><expr pos:start="335:30" pos:end="335:41"><name pos:start="335:30" pos:end="335:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="337:20" pos:end="337:65"><expr pos:start="337:20" pos:end="337:65"><literal type="string" pos:start="337:20" pos:end="337:65">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="339:13" pos:end="339:39">return <expr pos:start="339:20" pos:end="339:38"><name pos:start="339:20" pos:end="339:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="343:9" pos:end="343:14">break;</break>

    <case pos:start="345:5" pos:end="345:24">case <expr pos:start="345:10" pos:end="345:23"><name pos:start="345:10" pos:end="345:23">TIFF_PREDICTOR</name></expr>:</case>

        <expr_stmt pos:start="347:9" pos:end="347:29"><expr pos:start="347:9" pos:end="347:28"><name pos:start="347:9" pos:end="347:20"><name pos:start="347:9" pos:end="347:9">s</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:20">predictor</name></name> <operator pos:start="347:22" pos:end="347:22">=</operator> <name pos:start="347:24" pos:end="347:28">value</name></expr>;</expr_stmt>

        <break pos:start="349:9" pos:end="349:14">break;</break>

    <case pos:start="351:5" pos:end="351:21">case <expr pos:start="351:10" pos:end="351:20"><name pos:start="351:10" pos:end="351:20">TIFF_INVERT</name></expr>:</case>

        <switch pos:start="353:9" pos:end="381:9">switch <condition pos:start="353:16" pos:end="353:22">(<expr pos:start="353:17" pos:end="353:21"><name pos:start="353:17" pos:end="353:21">value</name></expr>)</condition> <block pos:start="353:24" pos:end="381:9">{<block_content pos:start="355:9" pos:end="379:39">

        <case pos:start="355:9" pos:end="355:15">case <expr pos:start="355:14" pos:end="355:14"><literal type="number" pos:start="355:14" pos:end="355:14">0</literal></expr>:</case>

            <expr_stmt pos:start="357:13" pos:end="357:26"><expr pos:start="357:13" pos:end="357:25"><name pos:start="357:13" pos:end="357:21"><name pos:start="357:13" pos:end="357:13">s</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:21">invert</name></name> <operator pos:start="357:23" pos:end="357:23">=</operator> <literal type="number" pos:start="357:25" pos:end="357:25">1</literal></expr>;</expr_stmt>

            <break pos:start="359:13" pos:end="359:18">break;</break>

        <case pos:start="361:9" pos:end="361:15">case <expr pos:start="361:14" pos:end="361:14"><literal type="number" pos:start="361:14" pos:end="361:14">1</literal></expr>:</case>

            <expr_stmt pos:start="363:13" pos:end="363:26"><expr pos:start="363:13" pos:end="363:25"><name pos:start="363:13" pos:end="363:21"><name pos:start="363:13" pos:end="363:13">s</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:21">invert</name></name> <operator pos:start="363:23" pos:end="363:23">=</operator> <literal type="number" pos:start="363:25" pos:end="363:25">0</literal></expr>;</expr_stmt>

            <break pos:start="365:13" pos:end="365:18">break;</break>

        <case pos:start="367:9" pos:end="367:15">case <expr pos:start="367:14" pos:end="367:14"><literal type="number" pos:start="367:14" pos:end="367:14">2</literal></expr>:</case>

        <case pos:start="369:9" pos:end="369:15">case <expr pos:start="369:14" pos:end="369:14"><literal type="number" pos:start="369:14" pos:end="369:14">3</literal></expr>:</case>

            <break pos:start="371:13" pos:end="371:18">break;</break>

        <default pos:start="373:9" pos:end="373:16">default:</default>

            <expr_stmt pos:start="375:13" pos:end="377:26"><expr pos:start="375:13" pos:end="377:25"><call pos:start="375:13" pos:end="377:25"><name pos:start="375:13" pos:end="375:18">av_log</name><argument_list pos:start="375:19" pos:end="377:25">(<argument pos:start="375:20" pos:end="375:27"><expr pos:start="375:20" pos:end="375:27"><name pos:start="375:20" pos:end="375:27"><name pos:start="375:20" pos:end="375:20">s</name><operator pos:start="375:21" pos:end="375:22">-&gt;</operator><name pos:start="375:23" pos:end="375:27">avctx</name></name></expr></argument>, <argument pos:start="375:30" pos:end="375:41"><expr pos:start="375:30" pos:end="375:41"><name pos:start="375:30" pos:end="375:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="375:44" pos:end="375:77"><expr pos:start="375:44" pos:end="375:77"><literal type="string" pos:start="375:44" pos:end="375:77">"Color mode %d is not supported\n"</literal></expr></argument>,

                   <argument pos:start="377:20" pos:end="377:24"><expr pos:start="377:20" pos:end="377:24"><name pos:start="377:20" pos:end="377:24">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="379:13" pos:end="379:39">return <expr pos:start="379:20" pos:end="379:38"><name pos:start="379:20" pos:end="379:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="383:9" pos:end="383:14">break;</break>

    <case pos:start="385:5" pos:end="385:25">case <expr pos:start="385:10" pos:end="385:24"><name pos:start="385:10" pos:end="385:24">TIFF_FILL_ORDER</name></expr>:</case>

        <if_stmt pos:start="387:9" pos:end="395:9"><if pos:start="387:9" pos:end="395:9">if <condition pos:start="387:12" pos:end="387:35">(<expr pos:start="387:13" pos:end="387:34"><name pos:start="387:13" pos:end="387:32"><name pos:start="387:13" pos:end="387:17">value</name> <argument_list type="generic" pos:start="387:19" pos:end="387:32">&lt; <argument pos:start="387:21" pos:end="387:30"><expr pos:start="387:21" pos:end="387:30"><literal type="number" pos:start="387:21" pos:end="387:21">1</literal> <operator pos:start="387:23" pos:end="387:24">||</operator> <name pos:start="387:26" pos:end="387:30">value</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="387:34" pos:end="387:34">2</literal></expr>)</condition> <block pos:start="387:37" pos:end="395:9">{<block_content pos:start="389:13" pos:end="393:22">

            <expr_stmt pos:start="389:13" pos:end="391:78"><expr pos:start="389:13" pos:end="391:77"><call pos:start="389:13" pos:end="391:77"><name pos:start="389:13" pos:end="389:18">av_log</name><argument_list pos:start="389:19" pos:end="391:77">(<argument pos:start="389:20" pos:end="389:27"><expr pos:start="389:20" pos:end="389:27"><name pos:start="389:20" pos:end="389:27"><name pos:start="389:20" pos:end="389:20">s</name><operator pos:start="389:21" pos:end="389:22">-&gt;</operator><name pos:start="389:23" pos:end="389:27">avctx</name></name></expr></argument>, <argument pos:start="389:30" pos:end="389:41"><expr pos:start="389:30" pos:end="389:41"><name pos:start="389:30" pos:end="389:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="391:20" pos:end="391:69"><expr pos:start="391:20" pos:end="391:69"><literal type="string" pos:start="391:20" pos:end="391:69">"Unknown FillOrder value %d, trying default one\n"</literal></expr></argument>, <argument pos:start="391:72" pos:end="391:76"><expr pos:start="391:72" pos:end="391:76"><name pos:start="391:72" pos:end="391:76">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:22"><expr pos:start="393:13" pos:end="393:21"><name pos:start="393:13" pos:end="393:17">value</name> <operator pos:start="393:19" pos:end="393:19">=</operator> <literal type="number" pos:start="393:21" pos:end="393:21">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:34"><expr pos:start="397:9" pos:end="397:33"><name pos:start="397:9" pos:end="397:21"><name pos:start="397:9" pos:end="397:9">s</name><operator pos:start="397:10" pos:end="397:11">-&gt;</operator><name pos:start="397:12" pos:end="397:21">fill_order</name></name> <operator pos:start="397:23" pos:end="397:23">=</operator> <name pos:start="397:25" pos:end="397:29">value</name> <operator pos:start="397:31" pos:end="397:31">-</operator> <literal type="number" pos:start="397:33" pos:end="397:33">1</literal></expr>;</expr_stmt>

        <break pos:start="399:9" pos:end="399:14">break;</break>

    <case pos:start="401:5" pos:end="401:18">case <expr pos:start="401:10" pos:end="401:17"><name pos:start="401:10" pos:end="401:17">TIFF_PAL</name></expr>:</case>

        <expr_stmt pos:start="403:9" pos:end="403:38"><expr pos:start="403:9" pos:end="403:37"><name pos:start="403:9" pos:end="403:11">pal</name> <operator pos:start="403:13" pos:end="403:13">=</operator> <operator pos:start="403:15" pos:end="403:15">(</operator><name pos:start="403:16" pos:end="403:23">uint32_t</name> <operator pos:start="403:25" pos:end="403:25">*</operator><operator pos:start="403:26" pos:end="403:26">)</operator> <name pos:start="403:28" pos:end="403:37"><name pos:start="403:28" pos:end="403:28">s</name><operator pos:start="403:29" pos:end="403:30">-&gt;</operator><name pos:start="403:31" pos:end="403:37">palette</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:31"><expr pos:start="405:9" pos:end="405:30"><name pos:start="405:9" pos:end="405:11">off</name> <operator pos:start="405:13" pos:end="405:13">=</operator> <name pos:start="405:15" pos:end="405:30"><name pos:start="405:15" pos:end="405:24">type_sizes</name><index pos:start="405:25" pos:end="405:30">[<expr pos:start="405:26" pos:end="405:29"><name pos:start="405:26" pos:end="405:29">type</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="407:9" pos:end="409:39"><if pos:start="407:9" pos:end="409:39">if <condition pos:start="407:12" pos:end="407:67">(<expr pos:start="407:13" pos:end="407:66"><name pos:start="407:13" pos:end="407:17">count</name> <operator pos:start="407:19" pos:end="407:19">/</operator> <literal type="number" pos:start="407:21" pos:end="407:21">3</literal> <operator pos:start="407:23" pos:end="407:23">&gt;</operator> <literal type="number" pos:start="407:25" pos:end="407:27">256</literal> <operator pos:start="407:29" pos:end="407:30">||</operator> <name pos:start="407:32" pos:end="407:38">end_buf</name> <operator pos:start="407:40" pos:end="407:40">-</operator> <name pos:start="407:42" pos:end="407:44">buf</name> <operator pos:start="407:46" pos:end="407:46">&lt;</operator> <name pos:start="407:48" pos:end="407:52">count</name> <operator pos:start="407:54" pos:end="407:54">/</operator> <literal type="number" pos:start="407:56" pos:end="407:56">3</literal> <operator pos:start="407:58" pos:end="407:58">*</operator> <name pos:start="407:60" pos:end="407:62">off</name> <operator pos:start="407:64" pos:end="407:64">*</operator> <literal type="number" pos:start="407:66" pos:end="407:66">3</literal></expr>)</condition><block type="pseudo" pos:start="409:13" pos:end="409:39"><block_content pos:start="409:13" pos:end="409:39">

            <return pos:start="409:13" pos:end="409:39">return <expr pos:start="409:20" pos:end="409:38"><name pos:start="409:20" pos:end="409:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="411:9" pos:end="411:18"><expr pos:start="411:9" pos:end="411:17"><name pos:start="411:9" pos:end="411:10">rp</name>  <operator pos:start="411:13" pos:end="411:13">=</operator> <name pos:start="411:15" pos:end="411:17">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:36"><expr pos:start="413:9" pos:end="413:35"><name pos:start="413:9" pos:end="413:10">gp</name>  <operator pos:start="413:13" pos:end="413:13">=</operator> <name pos:start="413:15" pos:end="413:17">buf</name> <operator pos:start="413:19" pos:end="413:19">+</operator> <name pos:start="413:21" pos:end="413:25">count</name> <operator pos:start="413:27" pos:end="413:27">/</operator> <literal type="number" pos:start="413:29" pos:end="413:29">3</literal> <operator pos:start="413:31" pos:end="413:31">*</operator> <name pos:start="413:33" pos:end="413:35">off</name></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:40"><expr pos:start="415:9" pos:end="415:39"><name pos:start="415:9" pos:end="415:10">bp</name>  <operator pos:start="415:13" pos:end="415:13">=</operator> <name pos:start="415:15" pos:end="415:17">buf</name> <operator pos:start="415:19" pos:end="415:19">+</operator> <name pos:start="415:21" pos:end="415:25">count</name> <operator pos:start="415:27" pos:end="415:27">/</operator> <literal type="number" pos:start="415:29" pos:end="415:29">3</literal> <operator pos:start="415:31" pos:end="415:31">*</operator> <name pos:start="415:33" pos:end="415:35">off</name> <operator pos:start="415:37" pos:end="415:37">*</operator> <literal type="number" pos:start="415:39" pos:end="415:39">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="417:42"><expr pos:start="417:9" pos:end="417:41"><name pos:start="417:9" pos:end="417:11">off</name> <operator pos:start="417:13" pos:end="417:13">=</operator> <operator pos:start="417:15" pos:end="417:15">(</operator><name pos:start="417:16" pos:end="417:31"><name pos:start="417:16" pos:end="417:25">type_sizes</name><index pos:start="417:26" pos:end="417:31">[<expr pos:start="417:27" pos:end="417:30"><name pos:start="417:27" pos:end="417:30">type</name></expr>]</index></name> <operator pos:start="417:33" pos:end="417:33">-</operator> <literal type="number" pos:start="417:35" pos:end="417:35">1</literal><operator pos:start="417:36" pos:end="417:36">)</operator> <operator pos:start="417:38" pos:end="417:39">&lt;&lt;</operator> <literal type="number" pos:start="417:41" pos:end="417:41">3</literal></expr>;</expr_stmt>

        <for pos:start="419:9" pos:end="431:9">for <control pos:start="419:13" pos:end="419:39">(<init pos:start="419:14" pos:end="419:19"><expr pos:start="419:14" pos:end="419:18"><name pos:start="419:14" pos:end="419:14">i</name> <operator pos:start="419:16" pos:end="419:16">=</operator> <literal type="number" pos:start="419:18" pos:end="419:18">0</literal></expr>;</init> <condition pos:start="419:21" pos:end="419:34"><expr pos:start="419:21" pos:end="419:33"><name pos:start="419:21" pos:end="419:21">i</name> <operator pos:start="419:23" pos:end="419:23">&lt;</operator> <name pos:start="419:25" pos:end="419:29">count</name> <operator pos:start="419:31" pos:end="419:31">/</operator> <literal type="number" pos:start="419:33" pos:end="419:33">3</literal></expr>;</condition> <incr pos:start="419:36" pos:end="419:38"><expr pos:start="419:36" pos:end="419:38"><name pos:start="419:36" pos:end="419:36">i</name><operator pos:start="419:37" pos:end="419:38">++</operator></expr></incr>)</control> <block pos:start="419:41" pos:end="431:9">{<block_content pos:start="421:13" pos:end="429:23">

            <decl_stmt pos:start="421:13" pos:end="421:36"><decl pos:start="421:13" pos:end="421:35"><type pos:start="421:13" pos:end="421:20"><name pos:start="421:13" pos:end="421:20">uint32_t</name></type> <name pos:start="421:22" pos:end="421:22">p</name> <init pos:start="421:24" pos:end="421:35">= <expr pos:start="421:26" pos:end="421:35"><literal type="number" pos:start="421:26" pos:end="421:35">0xFF000000</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:55"><expr pos:start="423:13" pos:end="423:54"><name pos:start="423:13" pos:end="423:13">p</name> <operator pos:start="423:15" pos:end="423:16">|=</operator> <operator pos:start="423:18" pos:end="423:18">(</operator><call pos:start="423:19" pos:end="423:40"><name pos:start="423:19" pos:end="423:22">tget</name><argument_list pos:start="423:23" pos:end="423:40">(<argument pos:start="423:24" pos:end="423:26"><expr pos:start="423:24" pos:end="423:26"><operator pos:start="423:24" pos:end="423:24">&amp;</operator><name pos:start="423:25" pos:end="423:26">rp</name></expr></argument>, <argument pos:start="423:29" pos:end="423:32"><expr pos:start="423:29" pos:end="423:32"><name pos:start="423:29" pos:end="423:32">type</name></expr></argument>, <argument pos:start="423:35" pos:end="423:39"><expr pos:start="423:35" pos:end="423:39"><name pos:start="423:35" pos:end="423:39"><name pos:start="423:35" pos:end="423:35">s</name><operator pos:start="423:36" pos:end="423:37">-&gt;</operator><name pos:start="423:38" pos:end="423:39">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="423:42" pos:end="423:43">&gt;&gt;</operator> <name pos:start="423:45" pos:end="423:47">off</name><operator pos:start="423:48" pos:end="423:48">)</operator> <operator pos:start="423:50" pos:end="423:51">&lt;&lt;</operator> <literal type="number" pos:start="423:53" pos:end="423:54">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:54"><expr pos:start="425:13" pos:end="425:53"><name pos:start="425:13" pos:end="425:13">p</name> <operator pos:start="425:15" pos:end="425:16">|=</operator> <operator pos:start="425:18" pos:end="425:18">(</operator><call pos:start="425:19" pos:end="425:40"><name pos:start="425:19" pos:end="425:22">tget</name><argument_list pos:start="425:23" pos:end="425:40">(<argument pos:start="425:24" pos:end="425:26"><expr pos:start="425:24" pos:end="425:26"><operator pos:start="425:24" pos:end="425:24">&amp;</operator><name pos:start="425:25" pos:end="425:26">gp</name></expr></argument>, <argument pos:start="425:29" pos:end="425:32"><expr pos:start="425:29" pos:end="425:32"><name pos:start="425:29" pos:end="425:32">type</name></expr></argument>, <argument pos:start="425:35" pos:end="425:39"><expr pos:start="425:35" pos:end="425:39"><name pos:start="425:35" pos:end="425:39"><name pos:start="425:35" pos:end="425:35">s</name><operator pos:start="425:36" pos:end="425:37">-&gt;</operator><name pos:start="425:38" pos:end="425:39">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="425:42" pos:end="425:43">&gt;&gt;</operator> <name pos:start="425:45" pos:end="425:47">off</name><operator pos:start="425:48" pos:end="425:48">)</operator> <operator pos:start="425:50" pos:end="425:51">&lt;&lt;</operator> <literal type="number" pos:start="425:53" pos:end="425:53">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:48"><expr pos:start="427:13" pos:end="427:47"><name pos:start="427:13" pos:end="427:13">p</name> <operator pos:start="427:15" pos:end="427:16">|=</operator>  <call pos:start="427:19" pos:end="427:40"><name pos:start="427:19" pos:end="427:22">tget</name><argument_list pos:start="427:23" pos:end="427:40">(<argument pos:start="427:24" pos:end="427:26"><expr pos:start="427:24" pos:end="427:26"><operator pos:start="427:24" pos:end="427:24">&amp;</operator><name pos:start="427:25" pos:end="427:26">bp</name></expr></argument>, <argument pos:start="427:29" pos:end="427:32"><expr pos:start="427:29" pos:end="427:32"><name pos:start="427:29" pos:end="427:32">type</name></expr></argument>, <argument pos:start="427:35" pos:end="427:39"><expr pos:start="427:35" pos:end="427:39"><name pos:start="427:35" pos:end="427:39"><name pos:start="427:35" pos:end="427:35">s</name><operator pos:start="427:36" pos:end="427:37">-&gt;</operator><name pos:start="427:38" pos:end="427:39">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="427:42" pos:end="427:43">&gt;&gt;</operator> <name pos:start="427:45" pos:end="427:47">off</name></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:23"><expr pos:start="429:13" pos:end="429:22"><name pos:start="429:13" pos:end="429:18"><name pos:start="429:13" pos:end="429:15">pal</name><index pos:start="429:16" pos:end="429:18">[<expr pos:start="429:17" pos:end="429:17"><name pos:start="429:17" pos:end="429:17">i</name></expr>]</index></name> <operator pos:start="429:20" pos:end="429:20">=</operator> <name pos:start="429:22" pos:end="429:22">p</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="433:9" pos:end="433:30"><expr pos:start="433:9" pos:end="433:29"><name pos:start="433:9" pos:end="433:25"><name pos:start="433:9" pos:end="433:9">s</name><operator pos:start="433:10" pos:end="433:11">-&gt;</operator><name pos:start="433:12" pos:end="433:25">palette_is_set</name></name> <operator pos:start="433:27" pos:end="433:27">=</operator> <literal type="number" pos:start="433:29" pos:end="433:29">1</literal></expr>;</expr_stmt>

        <break pos:start="435:9" pos:end="435:14">break;</break>

    <case pos:start="437:5" pos:end="437:21">case <expr pos:start="437:10" pos:end="437:20"><name pos:start="437:10" pos:end="437:20">TIFF_PLANAR</name></expr>:</case>

        <if_stmt pos:start="439:9" pos:end="445:9"><if pos:start="439:9" pos:end="445:9">if <condition pos:start="439:12" pos:end="439:23">(<expr pos:start="439:13" pos:end="439:22"><name pos:start="439:13" pos:end="439:17">value</name> <operator pos:start="439:19" pos:end="439:20">==</operator> <literal type="number" pos:start="439:22" pos:end="439:22">2</literal></expr>)</condition> <block pos:start="439:25" pos:end="445:9">{<block_content pos:start="441:13" pos:end="443:40">

            <expr_stmt pos:start="441:13" pos:end="441:69"><expr pos:start="441:13" pos:end="441:68"><call pos:start="441:13" pos:end="441:68"><name pos:start="441:13" pos:end="441:41">avpriv_report_missing_feature</name><argument_list pos:start="441:42" pos:end="441:68">(<argument pos:start="441:43" pos:end="441:50"><expr pos:start="441:43" pos:end="441:50"><name pos:start="441:43" pos:end="441:50"><name pos:start="441:43" pos:end="441:43">s</name><operator pos:start="441:44" pos:end="441:45">-&gt;</operator><name pos:start="441:46" pos:end="441:50">avctx</name></name></expr></argument>, <argument pos:start="441:53" pos:end="441:67"><expr pos:start="441:53" pos:end="441:67"><literal type="string" pos:start="441:53" pos:end="441:67">"Planar format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="443:13" pos:end="443:40">return <expr pos:start="443:20" pos:end="443:39"><name pos:start="443:20" pos:end="443:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="447:9" pos:end="447:14">break;</break>

    <case pos:start="449:5" pos:end="449:24">case <expr pos:start="449:10" pos:end="449:23"><name pos:start="449:10" pos:end="449:23">TIFF_T4OPTIONS</name></expr>:</case>

        <if_stmt pos:start="451:9" pos:end="453:32"><if pos:start="451:9" pos:end="453:32">if <condition pos:start="451:12" pos:end="451:32">(<expr pos:start="451:13" pos:end="451:31"><name pos:start="451:13" pos:end="451:20"><name pos:start="451:13" pos:end="451:13">s</name><operator pos:start="451:14" pos:end="451:15">-&gt;</operator><name pos:start="451:16" pos:end="451:20">compr</name></name> <operator pos:start="451:22" pos:end="451:23">==</operator> <name pos:start="451:25" pos:end="451:31">TIFF_G3</name></expr>)</condition><block type="pseudo" pos:start="453:13" pos:end="453:32"><block_content pos:start="453:13" pos:end="453:32">

            <expr_stmt pos:start="453:13" pos:end="453:32"><expr pos:start="453:13" pos:end="453:31"><name pos:start="453:13" pos:end="453:23"><name pos:start="453:13" pos:end="453:13">s</name><operator pos:start="453:14" pos:end="453:15">-&gt;</operator><name pos:start="453:16" pos:end="453:23">fax_opts</name></name> <operator pos:start="453:25" pos:end="453:25">=</operator> <name pos:start="453:27" pos:end="453:31">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="455:9" pos:end="455:14">break;</break>

    <case pos:start="457:5" pos:end="457:24">case <expr pos:start="457:10" pos:end="457:23"><name pos:start="457:10" pos:end="457:23">TIFF_T6OPTIONS</name></expr>:</case>

        <if_stmt pos:start="459:9" pos:end="461:32"><if pos:start="459:9" pos:end="461:32">if <condition pos:start="459:12" pos:end="459:32">(<expr pos:start="459:13" pos:end="459:31"><name pos:start="459:13" pos:end="459:20"><name pos:start="459:13" pos:end="459:13">s</name><operator pos:start="459:14" pos:end="459:15">-&gt;</operator><name pos:start="459:16" pos:end="459:20">compr</name></name> <operator pos:start="459:22" pos:end="459:23">==</operator> <name pos:start="459:25" pos:end="459:31">TIFF_G4</name></expr>)</condition><block type="pseudo" pos:start="461:13" pos:end="461:32"><block_content pos:start="461:13" pos:end="461:32">

            <expr_stmt pos:start="461:13" pos:end="461:32"><expr pos:start="461:13" pos:end="461:31"><name pos:start="461:13" pos:end="461:23"><name pos:start="461:13" pos:end="461:13">s</name><operator pos:start="461:14" pos:end="461:15">-&gt;</operator><name pos:start="461:16" pos:end="461:23">fax_opts</name></name> <operator pos:start="461:25" pos:end="461:25">=</operator> <name pos:start="461:27" pos:end="461:31">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="463:9" pos:end="463:14">break;</break>

    <default pos:start="465:5" pos:end="465:12">default:</default>

        <if_stmt pos:start="467:9" pos:end="477:9"><if pos:start="467:9" pos:end="477:9">if <condition pos:start="467:12" pos:end="467:54">(<expr pos:start="467:13" pos:end="467:53"><name pos:start="467:13" pos:end="467:37"><name pos:start="467:13" pos:end="467:13">s</name><operator pos:start="467:14" pos:end="467:15">-&gt;</operator><name pos:start="467:16" pos:end="467:20">avctx</name><operator pos:start="467:21" pos:end="467:22">-&gt;</operator><name pos:start="467:23" pos:end="467:37">err_recognition</name></name> <operator pos:start="467:39" pos:end="467:39">&amp;</operator> <name pos:start="467:41" pos:end="467:53">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="467:56" pos:end="477:9">{<block_content pos:start="469:13" pos:end="475:39">

            <expr_stmt pos:start="469:13" pos:end="473:29"><expr pos:start="469:13" pos:end="473:28"><call pos:start="469:13" pos:end="473:28"><name pos:start="469:13" pos:end="469:18">av_log</name><argument_list pos:start="469:19" pos:end="473:28">(<argument pos:start="469:20" pos:end="469:27"><expr pos:start="469:20" pos:end="469:27"><name pos:start="469:20" pos:end="469:27"><name pos:start="469:20" pos:end="469:20">s</name><operator pos:start="469:21" pos:end="469:22">-&gt;</operator><name pos:start="469:23" pos:end="469:27">avctx</name></name></expr></argument>, <argument pos:start="469:30" pos:end="469:41"><expr pos:start="469:30" pos:end="469:41"><name pos:start="469:30" pos:end="469:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="471:20" pos:end="471:58"><expr pos:start="471:20" pos:end="471:58"><literal type="string" pos:start="471:20" pos:end="471:58">"Unknown or unsupported tag %d/0X%0X\n"</literal></expr></argument>,

                   <argument pos:start="473:20" pos:end="473:22"><expr pos:start="473:20" pos:end="473:22"><name pos:start="473:20" pos:end="473:22">tag</name></expr></argument>, <argument pos:start="473:25" pos:end="473:27"><expr pos:start="473:25" pos:end="473:27"><name pos:start="473:25" pos:end="473:27">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="475:13" pos:end="475:39">return <expr pos:start="475:20" pos:end="475:38"><name pos:start="475:20" pos:end="475:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></switch>

    <return pos:start="481:5" pos:end="481:13">return <expr pos:start="481:12" pos:end="481:12"><literal type="number" pos:start="481:12" pos:end="481:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
