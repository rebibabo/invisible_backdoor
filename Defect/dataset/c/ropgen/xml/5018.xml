<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5018.c" pos:tabs="8"><function pos:start="1:1" pos:end="325:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">v9fs_create</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="325:1">{<block_content pos:start="5:5" pos:end="323:25">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">V9fsFidState</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">V9fsQID</name></type> <name pos:start="13:13" pos:end="13:15">qid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:16">perm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">int8_t</name></type> <name pos:start="17:12" pos:end="17:15">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">V9fsPath</name></type> <name pos:start="19:14" pos:end="19:17">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:10">struct</name> <name pos:start="21:12" pos:end="21:15">stat</name></name></type> <name pos:start="21:17" pos:end="21:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:14">V9fsString</name></type> <name pos:start="23:16" pos:end="23:19">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:25"><decl pos:start="25:5" pos:end="25:24"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:14">V9fsString</name></type> <name pos:start="25:16" pos:end="25:24">extension</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:15"><decl pos:start="27:5" pos:end="27:14"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:14">iounit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:25"><type pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:11">V9fsPDU</name> <modifier pos:start="29:13" pos:end="29:13">*</modifier></type><name pos:start="29:14" pos:end="29:16">pdu</name> <init pos:start="29:18" pos:end="29:25">= <expr pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><call pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:18">v9fs_path_init</name><argument_list pos:start="33:19" pos:end="33:25">(<argument pos:start="33:20" pos:end="33:24"><expr pos:start="33:20" pos:end="33:24"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:44"><expr pos:start="37:5" pos:end="39:43"><call pos:start="37:5" pos:end="39:43"><name pos:start="37:5" pos:end="37:17">pdu_unmarshal</name><argument_list pos:start="37:18" pos:end="39:43">(<argument pos:start="37:19" pos:end="37:21"><expr pos:start="37:19" pos:end="37:21"><name pos:start="37:19" pos:end="37:21">pdu</name></expr></argument>, <argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">offset</name></expr></argument>, <argument pos:start="37:32" pos:end="37:38"><expr pos:start="37:32" pos:end="37:38"><literal type="string" pos:start="37:32" pos:end="37:38">"dsdbs"</literal></expr></argument>, <argument pos:start="37:41" pos:end="37:44"><expr pos:start="37:41" pos:end="37:44"><operator pos:start="37:41" pos:end="37:41">&amp;</operator><name pos:start="37:42" pos:end="37:44">fid</name></expr></argument>, <argument pos:start="37:47" pos:end="37:51"><expr pos:start="37:47" pos:end="37:51"><operator pos:start="37:47" pos:end="37:47">&amp;</operator><name pos:start="37:48" pos:end="37:51">name</name></expr></argument>,

                  <argument pos:start="39:19" pos:end="39:23"><expr pos:start="39:19" pos:end="39:23"><operator pos:start="39:19" pos:end="39:19">&amp;</operator><name pos:start="39:20" pos:end="39:23">perm</name></expr></argument>, <argument pos:start="39:26" pos:end="39:30"><expr pos:start="39:26" pos:end="39:30"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:30">mode</name></expr></argument>, <argument pos:start="39:33" pos:end="39:42"><expr pos:start="39:33" pos:end="39:42"><operator pos:start="39:33" pos:end="39:33">&amp;</operator><name pos:start="39:34" pos:end="39:42">extension</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:69"><expr pos:start="43:5" pos:end="43:68"><call pos:start="43:5" pos:end="43:68"><name pos:start="43:5" pos:end="43:21">trace_v9fs_create</name><argument_list pos:start="43:22" pos:end="43:68">(<argument pos:start="43:23" pos:end="43:30"><expr pos:start="43:23" pos:end="43:30"><name pos:start="43:23" pos:end="43:30"><name pos:start="43:23" pos:end="43:25">pdu</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:30">tag</name></name></expr></argument>, <argument pos:start="43:33" pos:end="43:39"><expr pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:35">pdu</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:39">id</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:44">fid</name></expr></argument>, <argument pos:start="43:47" pos:end="43:55"><expr pos:start="43:47" pos:end="43:55"><name pos:start="43:47" pos:end="43:55"><name pos:start="43:47" pos:end="43:50">name</name><operator pos:start="43:51" pos:end="43:51">.</operator><name pos:start="43:52" pos:end="43:55">data</name></name></expr></argument>, <argument pos:start="43:58" pos:end="43:61"><expr pos:start="43:58" pos:end="43:61"><name pos:start="43:58" pos:end="43:61">perm</name></expr></argument>, <argument pos:start="43:64" pos:end="43:67"><expr pos:start="43:64" pos:end="43:67"><name pos:start="43:64" pos:end="43:67">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:8">fidp</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:28"><name pos:start="47:12" pos:end="47:18">get_fid</name><argument_list pos:start="47:19" pos:end="47:28">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">pdu</name></expr></argument>, <argument pos:start="47:25" pos:end="47:27"><expr pos:start="47:25" pos:end="47:27"><name pos:start="47:25" pos:end="47:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:21">(<expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:12">fidp</name> <operator pos:start="49:14" pos:end="49:15">==</operator> <name pos:start="49:17" pos:end="49:20">NULL</name></expr>)</condition> <block pos:start="49:23" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:23">

        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:11">err</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">-</operator><name pos:start="51:16" pos:end="51:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:23">goto <name pos:start="53:14" pos:end="53:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="297:5"><if pos:start="57:5" pos:end="89:5">if <condition pos:start="57:8" pos:end="57:32">(<expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:12">perm</name> <operator pos:start="57:14" pos:end="57:14">&amp;</operator> <name pos:start="57:16" pos:end="57:31">P9_STAT_MODE_DIR</name></expr>)</condition> <block pos:start="57:34" pos:end="89:5">{<block_content pos:start="59:9" pos:end="87:36">

        <expr_stmt pos:start="59:9" pos:end="61:51"><expr pos:start="59:9" pos:end="61:50"><name pos:start="59:9" pos:end="59:11">err</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="61:50"><name pos:start="59:15" pos:end="59:27">v9fs_co_mkdir</name><argument_list pos:start="59:28" pos:end="61:50">(<argument pos:start="59:29" pos:end="59:31"><expr pos:start="59:29" pos:end="59:31"><name pos:start="59:29" pos:end="59:31">pdu</name></expr></argument>, <argument pos:start="59:34" pos:end="59:37"><expr pos:start="59:34" pos:end="59:37"><name pos:start="59:34" pos:end="59:37">fidp</name></expr></argument>, <argument pos:start="59:40" pos:end="59:44"><expr pos:start="59:40" pos:end="59:44"><operator pos:start="59:40" pos:end="59:40">&amp;</operator><name pos:start="59:41" pos:end="59:44">name</name></expr></argument>, <argument pos:start="59:47" pos:end="59:57"><expr pos:start="59:47" pos:end="59:57"><name pos:start="59:47" pos:end="59:50">perm</name> <operator pos:start="59:52" pos:end="59:52">&amp;</operator> <literal type="number" pos:start="59:54" pos:end="59:57">0777</literal></expr></argument>,

                            <argument pos:start="61:29" pos:end="61:37"><expr pos:start="61:29" pos:end="61:37"><name pos:start="61:29" pos:end="61:37"><name pos:start="61:29" pos:end="61:32">fidp</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:37">uid</name></name></expr></argument>, <argument pos:start="61:40" pos:end="61:41"><expr pos:start="61:40" pos:end="61:41"><operator pos:start="61:40" pos:end="61:40">-</operator><literal type="number" pos:start="61:41" pos:end="61:41">1</literal></expr></argument>, <argument pos:start="61:44" pos:end="61:49"><expr pos:start="61:44" pos:end="61:49"><operator pos:start="61:44" pos:end="61:44">&amp;</operator><name pos:start="61:45" pos:end="61:49">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:20">(<expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:15">err</name> <operator pos:start="63:17" pos:end="63:17">&lt;</operator> <literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>)</condition> <block pos:start="63:22" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:21">

            <goto pos:start="65:13" pos:end="65:21">goto <name pos:start="65:18" pos:end="65:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:71"><expr pos:start="69:9" pos:end="69:70"><name pos:start="69:9" pos:end="69:11">err</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:70"><name pos:start="69:15" pos:end="69:34">v9fs_co_name_to_path</name><argument_list pos:start="69:35" pos:end="69:70">(<argument pos:start="69:36" pos:end="69:38"><expr pos:start="69:36" pos:end="69:38"><name pos:start="69:36" pos:end="69:38">pdu</name></expr></argument>, <argument pos:start="69:41" pos:end="69:51"><expr pos:start="69:41" pos:end="69:51"><operator pos:start="69:41" pos:end="69:41">&amp;</operator><name pos:start="69:42" pos:end="69:51"><name pos:start="69:42" pos:end="69:45">fidp</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:51">path</name></name></expr></argument>, <argument pos:start="69:54" pos:end="69:62"><expr pos:start="69:54" pos:end="69:62"><name pos:start="69:54" pos:end="69:62"><name pos:start="69:54" pos:end="69:57">name</name><operator pos:start="69:58" pos:end="69:58">.</operator><name pos:start="69:59" pos:end="69:62">data</name></name></expr></argument>, <argument pos:start="69:65" pos:end="69:69"><expr pos:start="69:65" pos:end="69:69"><operator pos:start="69:65" pos:end="69:65">&amp;</operator><name pos:start="69:66" pos:end="69:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:20">(<expr pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:15">err</name> <operator pos:start="71:17" pos:end="71:17">&lt;</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>)</condition> <block pos:start="71:22" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:21">

            <goto pos:start="73:13" pos:end="73:21">goto <name pos:start="73:18" pos:end="73:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:43"><expr pos:start="77:9" pos:end="77:42"><call pos:start="77:9" pos:end="77:42"><name pos:start="77:9" pos:end="77:22">v9fs_path_copy</name><argument_list pos:start="77:23" pos:end="77:42">(<argument pos:start="77:24" pos:end="77:34"><expr pos:start="77:24" pos:end="77:34"><operator pos:start="77:24" pos:end="77:24">&amp;</operator><name pos:start="77:25" pos:end="77:34"><name pos:start="77:25" pos:end="77:28">fidp</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:34">path</name></name></expr></argument>, <argument pos:start="77:37" pos:end="77:41"><expr pos:start="77:37" pos:end="77:41"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:11">err</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:40"><name pos:start="79:15" pos:end="79:29">v9fs_co_opendir</name><argument_list pos:start="79:30" pos:end="79:40">(<argument pos:start="79:31" pos:end="79:33"><expr pos:start="79:31" pos:end="79:33"><name pos:start="79:31" pos:end="79:33">pdu</name></expr></argument>, <argument pos:start="79:36" pos:end="79:39"><expr pos:start="79:36" pos:end="79:39"><name pos:start="79:36" pos:end="79:39">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:20">(<expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:15">err</name> <operator pos:start="81:17" pos:end="81:17">&lt;</operator> <literal type="number" pos:start="81:19" pos:end="81:19">0</literal></expr>)</condition> <block pos:start="81:22" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:21">

            <goto pos:start="83:13" pos:end="83:21">goto <name pos:start="83:18" pos:end="83:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:36"><expr pos:start="87:9" pos:end="87:35"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:12">fidp</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:22">fid_type</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:35">P9_FID_DIR</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="89:7" pos:end="111:5">else if <condition pos:start="89:15" pos:end="89:43">(<expr pos:start="89:16" pos:end="89:42"><name pos:start="89:16" pos:end="89:19">perm</name> <operator pos:start="89:21" pos:end="89:21">&amp;</operator> <name pos:start="89:23" pos:end="89:42">P9_STAT_MODE_SYMLINK</name></expr>)</condition> <block pos:start="89:45" pos:end="111:5">{<block_content pos:start="91:9" pos:end="109:43">

        <expr_stmt pos:start="91:9" pos:end="93:59"><expr pos:start="91:9" pos:end="93:58"><name pos:start="91:9" pos:end="91:11">err</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="93:58"><name pos:start="91:15" pos:end="91:29">v9fs_co_symlink</name><argument_list pos:start="91:30" pos:end="93:58">(<argument pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><name pos:start="91:31" pos:end="91:33">pdu</name></expr></argument>, <argument pos:start="91:36" pos:end="91:39"><expr pos:start="91:36" pos:end="91:39"><name pos:start="91:36" pos:end="91:39">fidp</name></expr></argument>, <argument pos:start="91:42" pos:end="91:46"><expr pos:start="91:42" pos:end="91:46"><operator pos:start="91:42" pos:end="91:42">&amp;</operator><name pos:start="91:43" pos:end="91:46">name</name></expr></argument>,

                              <argument pos:start="93:31" pos:end="93:44"><expr pos:start="93:31" pos:end="93:44"><name pos:start="93:31" pos:end="93:44"><name pos:start="93:31" pos:end="93:39">extension</name><operator pos:start="93:40" pos:end="93:40">.</operator><name pos:start="93:41" pos:end="93:44">data</name></name></expr></argument>, <argument pos:start="93:47" pos:end="93:48"><expr pos:start="93:47" pos:end="93:48"><operator pos:start="93:47" pos:end="93:47">-</operator><literal type="number" pos:start="93:48" pos:end="93:48">1</literal></expr></argument> , <argument pos:start="93:52" pos:end="93:57"><expr pos:start="93:52" pos:end="93:57"><operator pos:start="93:52" pos:end="93:52">&amp;</operator><name pos:start="93:53" pos:end="93:57">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:20">(<expr pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:15">err</name> <operator pos:start="95:17" pos:end="95:17">&lt;</operator> <literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>)</condition> <block pos:start="95:22" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:21">

            <goto pos:start="97:13" pos:end="97:21">goto <name pos:start="97:18" pos:end="97:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:71"><expr pos:start="101:9" pos:end="101:70"><name pos:start="101:9" pos:end="101:11">err</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:70"><name pos:start="101:15" pos:end="101:34">v9fs_co_name_to_path</name><argument_list pos:start="101:35" pos:end="101:70">(<argument pos:start="101:36" pos:end="101:38"><expr pos:start="101:36" pos:end="101:38"><name pos:start="101:36" pos:end="101:38">pdu</name></expr></argument>, <argument pos:start="101:41" pos:end="101:51"><expr pos:start="101:41" pos:end="101:51"><operator pos:start="101:41" pos:end="101:41">&amp;</operator><name pos:start="101:42" pos:end="101:51"><name pos:start="101:42" pos:end="101:45">fidp</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:51">path</name></name></expr></argument>, <argument pos:start="101:54" pos:end="101:62"><expr pos:start="101:54" pos:end="101:62"><name pos:start="101:54" pos:end="101:62"><name pos:start="101:54" pos:end="101:57">name</name><operator pos:start="101:58" pos:end="101:58">.</operator><name pos:start="101:59" pos:end="101:62">data</name></name></expr></argument>, <argument pos:start="101:65" pos:end="101:69"><expr pos:start="101:65" pos:end="101:69"><operator pos:start="101:65" pos:end="101:65">&amp;</operator><name pos:start="101:66" pos:end="101:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:20">(<expr pos:start="103:13" pos:end="103:19"><name pos:start="103:13" pos:end="103:15">err</name> <operator pos:start="103:17" pos:end="103:17">&lt;</operator> <literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr>)</condition> <block pos:start="103:22" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:21">

            <goto pos:start="105:13" pos:end="105:21">goto <name pos:start="105:18" pos:end="105:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:43"><expr pos:start="109:9" pos:end="109:42"><call pos:start="109:9" pos:end="109:42"><name pos:start="109:9" pos:end="109:22">v9fs_path_copy</name><argument_list pos:start="109:23" pos:end="109:42">(<argument pos:start="109:24" pos:end="109:34"><expr pos:start="109:24" pos:end="109:34"><operator pos:start="109:24" pos:end="109:24">&amp;</operator><name pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:28">fidp</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:34">path</name></name></expr></argument>, <argument pos:start="109:37" pos:end="109:41"><expr pos:start="109:37" pos:end="109:41"><operator pos:start="109:37" pos:end="109:37">&amp;</operator><name pos:start="109:38" pos:end="109:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="111:7" pos:end="157:5">else if <condition pos:start="111:15" pos:end="111:40">(<expr pos:start="111:16" pos:end="111:39"><name pos:start="111:16" pos:end="111:19">perm</name> <operator pos:start="111:21" pos:end="111:21">&amp;</operator> <name pos:start="111:23" pos:end="111:39">P9_STAT_MODE_LINK</name></expr>)</condition> <block pos:start="111:42" pos:end="157:5">{<block_content pos:start="113:9" pos:end="155:9">

        <decl_stmt pos:start="113:9" pos:end="113:44"><decl pos:start="113:9" pos:end="113:43"><type pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:15">int32_t</name></type> <name pos:start="113:17" pos:end="113:20">ofid</name> <init pos:start="113:22" pos:end="113:43">= <expr pos:start="113:24" pos:end="113:43"><call pos:start="113:24" pos:end="113:43"><name pos:start="113:24" pos:end="113:27">atoi</name><argument_list pos:start="113:28" pos:end="113:43">(<argument pos:start="113:29" pos:end="113:42"><expr pos:start="113:29" pos:end="113:42"><name pos:start="113:29" pos:end="113:42"><name pos:start="113:29" pos:end="113:37">extension</name><operator pos:start="113:38" pos:end="113:38">.</operator><name pos:start="113:39" pos:end="113:42">data</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="115:9" pos:end="115:49"><decl pos:start="115:9" pos:end="115:48"><type pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:20">V9fsFidState</name> <modifier pos:start="115:22" pos:end="115:22">*</modifier></type><name pos:start="115:23" pos:end="115:27">ofidp</name> <init pos:start="115:29" pos:end="115:48">= <expr pos:start="115:31" pos:end="115:48"><call pos:start="115:31" pos:end="115:48"><name pos:start="115:31" pos:end="115:37">get_fid</name><argument_list pos:start="115:38" pos:end="115:48">(<argument pos:start="115:39" pos:end="115:41"><expr pos:start="115:39" pos:end="115:41"><name pos:start="115:39" pos:end="115:41">pdu</name></expr></argument>, <argument pos:start="115:44" pos:end="115:47"><expr pos:start="115:44" pos:end="115:47"><name pos:start="115:44" pos:end="115:47">ofid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="117:9" pos:end="123:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:26">(<expr pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:17">ofidp</name> <operator pos:start="117:19" pos:end="117:20">==</operator> <name pos:start="117:22" pos:end="117:25">NULL</name></expr>)</condition> <block pos:start="117:28" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:21">

            <expr_stmt pos:start="119:13" pos:end="119:26"><expr pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:15">err</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <operator pos:start="119:19" pos:end="119:19">-</operator><name pos:start="119:20" pos:end="119:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="121:13" pos:end="121:21">goto <name pos:start="121:18" pos:end="121:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:52"><expr pos:start="125:9" pos:end="125:51"><name pos:start="125:9" pos:end="125:11">err</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="125:51"><name pos:start="125:15" pos:end="125:26">v9fs_co_link</name><argument_list pos:start="125:27" pos:end="125:51">(<argument pos:start="125:28" pos:end="125:30"><expr pos:start="125:28" pos:end="125:30"><name pos:start="125:28" pos:end="125:30">pdu</name></expr></argument>, <argument pos:start="125:33" pos:end="125:37"><expr pos:start="125:33" pos:end="125:37"><name pos:start="125:33" pos:end="125:37">ofidp</name></expr></argument>, <argument pos:start="125:40" pos:end="125:43"><expr pos:start="125:40" pos:end="125:43"><name pos:start="125:40" pos:end="125:43">fidp</name></expr></argument>, <argument pos:start="125:46" pos:end="125:50"><expr pos:start="125:46" pos:end="125:50"><operator pos:start="125:46" pos:end="125:46">&amp;</operator><name pos:start="125:47" pos:end="125:50">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:28"><expr pos:start="127:9" pos:end="127:27"><call pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:15">put_fid</name><argument_list pos:start="127:16" pos:end="127:27">(<argument pos:start="127:17" pos:end="127:19"><expr pos:start="127:17" pos:end="127:19"><name pos:start="127:17" pos:end="127:19">pdu</name></expr></argument>, <argument pos:start="127:22" pos:end="127:26"><expr pos:start="127:22" pos:end="127:26"><name pos:start="127:22" pos:end="127:26">ofidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="133:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:20">(<expr pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:15">err</name> <operator pos:start="129:17" pos:end="129:17">&lt;</operator> <literal type="number" pos:start="129:19" pos:end="129:19">0</literal></expr>)</condition> <block pos:start="129:22" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:21">

            <goto pos:start="131:13" pos:end="131:21">goto <name pos:start="131:18" pos:end="131:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:71"><expr pos:start="135:9" pos:end="135:70"><name pos:start="135:9" pos:end="135:11">err</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:70"><name pos:start="135:15" pos:end="135:34">v9fs_co_name_to_path</name><argument_list pos:start="135:35" pos:end="135:70">(<argument pos:start="135:36" pos:end="135:38"><expr pos:start="135:36" pos:end="135:38"><name pos:start="135:36" pos:end="135:38">pdu</name></expr></argument>, <argument pos:start="135:41" pos:end="135:51"><expr pos:start="135:41" pos:end="135:51"><operator pos:start="135:41" pos:end="135:41">&amp;</operator><name pos:start="135:42" pos:end="135:51"><name pos:start="135:42" pos:end="135:45">fidp</name><operator pos:start="135:46" pos:end="135:47">-&gt;</operator><name pos:start="135:48" pos:end="135:51">path</name></name></expr></argument>, <argument pos:start="135:54" pos:end="135:62"><expr pos:start="135:54" pos:end="135:62"><name pos:start="135:54" pos:end="135:62"><name pos:start="135:54" pos:end="135:57">name</name><operator pos:start="135:58" pos:end="135:58">.</operator><name pos:start="135:59" pos:end="135:62">data</name></name></expr></argument>, <argument pos:start="135:65" pos:end="135:69"><expr pos:start="135:65" pos:end="135:69"><operator pos:start="135:65" pos:end="135:65">&amp;</operator><name pos:start="135:66" pos:end="135:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="143:9"><if pos:start="137:9" pos:end="143:9">if <condition pos:start="137:12" pos:end="137:20">(<expr pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:15">err</name> <operator pos:start="137:17" pos:end="137:17">&lt;</operator> <literal type="number" pos:start="137:19" pos:end="137:19">0</literal></expr>)</condition> <block pos:start="137:22" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:21">

            <expr_stmt pos:start="139:13" pos:end="139:41"><expr pos:start="139:13" pos:end="139:40"><name pos:start="139:13" pos:end="139:26"><name pos:start="139:13" pos:end="139:16">fidp</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:26">fid_type</name></name> <operator pos:start="139:28" pos:end="139:28">=</operator> <name pos:start="139:30" pos:end="139:40">P9_FID_NONE</name></expr>;</expr_stmt>

            <goto pos:start="141:13" pos:end="141:21">goto <name pos:start="141:18" pos:end="141:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:43"><expr pos:start="145:9" pos:end="145:42"><call pos:start="145:9" pos:end="145:42"><name pos:start="145:9" pos:end="145:22">v9fs_path_copy</name><argument_list pos:start="145:23" pos:end="145:42">(<argument pos:start="145:24" pos:end="145:34"><expr pos:start="145:24" pos:end="145:34"><operator pos:start="145:24" pos:end="145:24">&amp;</operator><name pos:start="145:25" pos:end="145:34"><name pos:start="145:25" pos:end="145:28">fidp</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:34">path</name></name></expr></argument>, <argument pos:start="145:37" pos:end="145:41"><expr pos:start="145:37" pos:end="145:41"><operator pos:start="145:37" pos:end="145:37">&amp;</operator><name pos:start="145:38" pos:end="145:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:54"><expr pos:start="147:9" pos:end="147:53"><name pos:start="147:9" pos:end="147:11">err</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <call pos:start="147:15" pos:end="147:53"><name pos:start="147:15" pos:end="147:27">v9fs_co_lstat</name><argument_list pos:start="147:28" pos:end="147:53">(<argument pos:start="147:29" pos:end="147:31"><expr pos:start="147:29" pos:end="147:31"><name pos:start="147:29" pos:end="147:31">pdu</name></expr></argument>, <argument pos:start="147:34" pos:end="147:44"><expr pos:start="147:34" pos:end="147:44"><operator pos:start="147:34" pos:end="147:34">&amp;</operator><name pos:start="147:35" pos:end="147:44"><name pos:start="147:35" pos:end="147:38">fidp</name><operator pos:start="147:39" pos:end="147:40">-&gt;</operator><name pos:start="147:41" pos:end="147:44">path</name></name></expr></argument>, <argument pos:start="147:47" pos:end="147:52"><expr pos:start="147:47" pos:end="147:52"><operator pos:start="147:47" pos:end="147:47">&amp;</operator><name pos:start="147:48" pos:end="147:52">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="155:9"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="149:20">(<expr pos:start="149:13" pos:end="149:19"><name pos:start="149:13" pos:end="149:15">err</name> <operator pos:start="149:17" pos:end="149:17">&lt;</operator> <literal type="number" pos:start="149:19" pos:end="149:19">0</literal></expr>)</condition> <block pos:start="149:22" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:21">

            <expr_stmt pos:start="151:13" pos:end="151:41"><expr pos:start="151:13" pos:end="151:40"><name pos:start="151:13" pos:end="151:26"><name pos:start="151:13" pos:end="151:16">fidp</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:26">fid_type</name></name> <operator pos:start="151:28" pos:end="151:28">=</operator> <name pos:start="151:30" pos:end="151:40">P9_FID_NONE</name></expr>;</expr_stmt>

            <goto pos:start="153:13" pos:end="153:21">goto <name pos:start="153:18" pos:end="153:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="157:7" pos:end="223:5">else if <condition pos:start="157:15" pos:end="157:42">(<expr pos:start="157:16" pos:end="157:41"><name pos:start="157:16" pos:end="157:19">perm</name> <operator pos:start="157:21" pos:end="157:21">&amp;</operator> <name pos:start="157:23" pos:end="157:41">P9_STAT_MODE_DEVICE</name></expr>)</condition> <block pos:start="157:44" pos:end="223:5">{<block_content pos:start="159:9" pos:end="221:43">

        <decl_stmt pos:start="159:9" pos:end="159:19"><decl pos:start="159:9" pos:end="159:18"><type pos:start="159:9" pos:end="159:12"><name pos:start="159:9" pos:end="159:12">char</name></type> <name pos:start="159:14" pos:end="159:18">ctype</name></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:30"><decl pos:start="161:9" pos:end="161:22"><type pos:start="161:9" pos:end="161:16"><name pos:start="161:9" pos:end="161:16">uint32_t</name></type> <name pos:start="161:18" pos:end="161:22">major</name></decl>, <decl pos:start="161:25" pos:end="161:29"><type ref="prev" pos:start="161:9" pos:end="161:16"/><name pos:start="161:25" pos:end="161:29">minor</name></decl>;</decl_stmt>

        <decl_stmt pos:start="163:9" pos:end="163:25"><decl pos:start="163:9" pos:end="163:24"><type pos:start="163:9" pos:end="163:14"><name pos:start="163:9" pos:end="163:14">mode_t</name></type> <name pos:start="163:16" pos:end="163:20">nmode</name> <init pos:start="163:22" pos:end="163:24">= <expr pos:start="163:24" pos:end="163:24"><literal type="number" pos:start="163:24" pos:end="163:24">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="167:9" pos:end="173:9"><if pos:start="167:9" pos:end="173:9">if <condition pos:start="167:12" pos:end="167:76">(<expr pos:start="167:13" pos:end="167:75"><call pos:start="167:13" pos:end="167:70"><name pos:start="167:13" pos:end="167:18">sscanf</name><argument_list pos:start="167:19" pos:end="167:70">(<argument pos:start="167:20" pos:end="167:33"><expr pos:start="167:20" pos:end="167:33"><name pos:start="167:20" pos:end="167:33"><name pos:start="167:20" pos:end="167:28">extension</name><operator pos:start="167:29" pos:end="167:29">.</operator><name pos:start="167:30" pos:end="167:33">data</name></name></expr></argument>, <argument pos:start="167:36" pos:end="167:45"><expr pos:start="167:36" pos:end="167:45"><literal type="string" pos:start="167:36" pos:end="167:45">"%c %u %u"</literal></expr></argument>, <argument pos:start="167:48" pos:end="167:53"><expr pos:start="167:48" pos:end="167:53"><operator pos:start="167:48" pos:end="167:48">&amp;</operator><name pos:start="167:49" pos:end="167:53">ctype</name></expr></argument>, <argument pos:start="167:56" pos:end="167:61"><expr pos:start="167:56" pos:end="167:61"><operator pos:start="167:56" pos:end="167:56">&amp;</operator><name pos:start="167:57" pos:end="167:61">major</name></expr></argument>, <argument pos:start="167:64" pos:end="167:69"><expr pos:start="167:64" pos:end="167:69"><operator pos:start="167:64" pos:end="167:64">&amp;</operator><name pos:start="167:65" pos:end="167:69">minor</name></expr></argument>)</argument_list></call> <operator pos:start="167:72" pos:end="167:73">!=</operator> <literal type="number" pos:start="167:75" pos:end="167:75">3</literal></expr>)</condition> <block pos:start="167:78" pos:end="173:9">{<block_content pos:start="169:13" pos:end="171:21">

            <expr_stmt pos:start="169:13" pos:end="169:25"><expr pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:15">err</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <operator pos:start="169:19" pos:end="169:19">-</operator><name pos:start="169:20" pos:end="169:24">errno</name></expr>;</expr_stmt>

            <goto pos:start="171:13" pos:end="171:21">goto <name pos:start="171:18" pos:end="171:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="177:9" pos:end="197:9">switch <condition pos:start="177:16" pos:end="177:22">(<expr pos:start="177:17" pos:end="177:21"><name pos:start="177:17" pos:end="177:21">ctype</name></expr>)</condition> <block pos:start="177:24" pos:end="197:9">{<block_content pos:start="179:9" pos:end="195:21">

        <case pos:start="179:9" pos:end="179:17">case <expr pos:start="179:14" pos:end="179:16"><literal type="char" pos:start="179:14" pos:end="179:16">'c'</literal></expr>:</case>

            <expr_stmt pos:start="181:13" pos:end="181:28"><expr pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:17">nmode</name> <operator pos:start="181:19" pos:end="181:19">=</operator> <name pos:start="181:21" pos:end="181:27">S_IFCHR</name></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <case pos:start="185:9" pos:end="185:17">case <expr pos:start="185:14" pos:end="185:16"><literal type="char" pos:start="185:14" pos:end="185:16">'b'</literal></expr>:</case>

            <expr_stmt pos:start="187:13" pos:end="187:28"><expr pos:start="187:13" pos:end="187:27"><name pos:start="187:13" pos:end="187:17">nmode</name> <operator pos:start="187:19" pos:end="187:19">=</operator> <name pos:start="187:21" pos:end="187:27">S_IFBLK</name></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <default pos:start="191:9" pos:end="191:16">default:</default>

            <expr_stmt pos:start="193:13" pos:end="193:23"><expr pos:start="193:13" pos:end="193:22"><name pos:start="193:13" pos:end="193:15">err</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <operator pos:start="193:19" pos:end="193:19">-</operator><name pos:start="193:20" pos:end="193:22">EIO</name></expr>;</expr_stmt>

            <goto pos:start="195:13" pos:end="195:21">goto <name pos:start="195:18" pos:end="195:20">out</name>;</goto>

        </block_content>}</block></switch>



        <expr_stmt pos:start="201:9" pos:end="201:29"><expr pos:start="201:9" pos:end="201:28"><name pos:start="201:9" pos:end="201:13">nmode</name> <operator pos:start="201:15" pos:end="201:16">|=</operator> <name pos:start="201:18" pos:end="201:21">perm</name> <operator pos:start="201:23" pos:end="201:23">&amp;</operator> <literal type="number" pos:start="201:25" pos:end="201:28">0777</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="205:66"><expr pos:start="203:9" pos:end="205:65"><name pos:start="203:9" pos:end="203:11">err</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <call pos:start="203:15" pos:end="205:65"><name pos:start="203:15" pos:end="203:27">v9fs_co_mknod</name><argument_list pos:start="203:28" pos:end="205:65">(<argument pos:start="203:29" pos:end="203:31"><expr pos:start="203:29" pos:end="203:31"><name pos:start="203:29" pos:end="203:31">pdu</name></expr></argument>, <argument pos:start="203:34" pos:end="203:37"><expr pos:start="203:34" pos:end="203:37"><name pos:start="203:34" pos:end="203:37">fidp</name></expr></argument>, <argument pos:start="203:40" pos:end="203:44"><expr pos:start="203:40" pos:end="203:44"><operator pos:start="203:40" pos:end="203:40">&amp;</operator><name pos:start="203:41" pos:end="203:44">name</name></expr></argument>, <argument pos:start="203:47" pos:end="203:55"><expr pos:start="203:47" pos:end="203:55"><name pos:start="203:47" pos:end="203:55"><name pos:start="203:47" pos:end="203:50">fidp</name><operator pos:start="203:51" pos:end="203:52">-&gt;</operator><name pos:start="203:53" pos:end="203:55">uid</name></name></expr></argument>, <argument pos:start="203:58" pos:end="203:59"><expr pos:start="203:58" pos:end="203:59"><operator pos:start="203:58" pos:end="203:58">-</operator><literal type="number" pos:start="203:59" pos:end="203:59">1</literal></expr></argument>,

                            <argument pos:start="205:29" pos:end="205:49"><expr pos:start="205:29" pos:end="205:49"><call pos:start="205:29" pos:end="205:49"><name pos:start="205:29" pos:end="205:35">makedev</name><argument_list pos:start="205:36" pos:end="205:49">(<argument pos:start="205:37" pos:end="205:41"><expr pos:start="205:37" pos:end="205:41"><name pos:start="205:37" pos:end="205:41">major</name></expr></argument>, <argument pos:start="205:44" pos:end="205:48"><expr pos:start="205:44" pos:end="205:48"><name pos:start="205:44" pos:end="205:48">minor</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="205:52" pos:end="205:56"><expr pos:start="205:52" pos:end="205:56"><name pos:start="205:52" pos:end="205:56">nmode</name></expr></argument>, <argument pos:start="205:59" pos:end="205:64"><expr pos:start="205:59" pos:end="205:64"><operator pos:start="205:59" pos:end="205:59">&amp;</operator><name pos:start="205:60" pos:end="205:64">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="211:9"><if pos:start="207:9" pos:end="211:9">if <condition pos:start="207:12" pos:end="207:20">(<expr pos:start="207:13" pos:end="207:19"><name pos:start="207:13" pos:end="207:15">err</name> <operator pos:start="207:17" pos:end="207:17">&lt;</operator> <literal type="number" pos:start="207:19" pos:end="207:19">0</literal></expr>)</condition> <block pos:start="207:22" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:21">

            <goto pos:start="209:13" pos:end="209:21">goto <name pos:start="209:18" pos:end="209:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:71"><expr pos:start="213:9" pos:end="213:70"><name pos:start="213:9" pos:end="213:11">err</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <call pos:start="213:15" pos:end="213:70"><name pos:start="213:15" pos:end="213:34">v9fs_co_name_to_path</name><argument_list pos:start="213:35" pos:end="213:70">(<argument pos:start="213:36" pos:end="213:38"><expr pos:start="213:36" pos:end="213:38"><name pos:start="213:36" pos:end="213:38">pdu</name></expr></argument>, <argument pos:start="213:41" pos:end="213:51"><expr pos:start="213:41" pos:end="213:51"><operator pos:start="213:41" pos:end="213:41">&amp;</operator><name pos:start="213:42" pos:end="213:51"><name pos:start="213:42" pos:end="213:45">fidp</name><operator pos:start="213:46" pos:end="213:47">-&gt;</operator><name pos:start="213:48" pos:end="213:51">path</name></name></expr></argument>, <argument pos:start="213:54" pos:end="213:62"><expr pos:start="213:54" pos:end="213:62"><name pos:start="213:54" pos:end="213:62"><name pos:start="213:54" pos:end="213:57">name</name><operator pos:start="213:58" pos:end="213:58">.</operator><name pos:start="213:59" pos:end="213:62">data</name></name></expr></argument>, <argument pos:start="213:65" pos:end="213:69"><expr pos:start="213:65" pos:end="213:69"><operator pos:start="213:65" pos:end="213:65">&amp;</operator><name pos:start="213:66" pos:end="213:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="215:9" pos:end="219:9"><if pos:start="215:9" pos:end="219:9">if <condition pos:start="215:12" pos:end="215:20">(<expr pos:start="215:13" pos:end="215:19"><name pos:start="215:13" pos:end="215:15">err</name> <operator pos:start="215:17" pos:end="215:17">&lt;</operator> <literal type="number" pos:start="215:19" pos:end="215:19">0</literal></expr>)</condition> <block pos:start="215:22" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:21">

            <goto pos:start="217:13" pos:end="217:21">goto <name pos:start="217:18" pos:end="217:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:43"><expr pos:start="221:9" pos:end="221:42"><call pos:start="221:9" pos:end="221:42"><name pos:start="221:9" pos:end="221:22">v9fs_path_copy</name><argument_list pos:start="221:23" pos:end="221:42">(<argument pos:start="221:24" pos:end="221:34"><expr pos:start="221:24" pos:end="221:34"><operator pos:start="221:24" pos:end="221:24">&amp;</operator><name pos:start="221:25" pos:end="221:34"><name pos:start="221:25" pos:end="221:28">fidp</name><operator pos:start="221:29" pos:end="221:30">-&gt;</operator><name pos:start="221:31" pos:end="221:34">path</name></name></expr></argument>, <argument pos:start="221:37" pos:end="221:41"><expr pos:start="221:37" pos:end="221:41"><operator pos:start="221:37" pos:end="221:37">&amp;</operator><name pos:start="221:38" pos:end="221:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="223:7" pos:end="245:5">else if <condition pos:start="223:15" pos:end="223:46">(<expr pos:start="223:16" pos:end="223:45"><name pos:start="223:16" pos:end="223:19">perm</name> <operator pos:start="223:21" pos:end="223:21">&amp;</operator> <name pos:start="223:23" pos:end="223:45">P9_STAT_MODE_NAMED_PIPE</name></expr>)</condition> <block pos:start="223:48" pos:end="245:5">{<block_content pos:start="225:9" pos:end="243:43">

        <expr_stmt pos:start="225:9" pos:end="227:64"><expr pos:start="225:9" pos:end="227:63"><name pos:start="225:9" pos:end="225:11">err</name> <operator pos:start="225:13" pos:end="225:13">=</operator> <call pos:start="225:15" pos:end="227:63"><name pos:start="225:15" pos:end="225:27">v9fs_co_mknod</name><argument_list pos:start="225:28" pos:end="227:63">(<argument pos:start="225:29" pos:end="225:31"><expr pos:start="225:29" pos:end="225:31"><name pos:start="225:29" pos:end="225:31">pdu</name></expr></argument>, <argument pos:start="225:34" pos:end="225:37"><expr pos:start="225:34" pos:end="225:37"><name pos:start="225:34" pos:end="225:37">fidp</name></expr></argument>, <argument pos:start="225:40" pos:end="225:44"><expr pos:start="225:40" pos:end="225:44"><operator pos:start="225:40" pos:end="225:40">&amp;</operator><name pos:start="225:41" pos:end="225:44">name</name></expr></argument>, <argument pos:start="225:47" pos:end="225:55"><expr pos:start="225:47" pos:end="225:55"><name pos:start="225:47" pos:end="225:55"><name pos:start="225:47" pos:end="225:50">fidp</name><operator pos:start="225:51" pos:end="225:52">-&gt;</operator><name pos:start="225:53" pos:end="225:55">uid</name></name></expr></argument>, <argument pos:start="225:58" pos:end="225:59"><expr pos:start="225:58" pos:end="225:59"><operator pos:start="225:58" pos:end="225:58">-</operator><literal type="number" pos:start="225:59" pos:end="225:59">1</literal></expr></argument>,

                            <argument pos:start="227:29" pos:end="227:29"><expr pos:start="227:29" pos:end="227:29"><literal type="number" pos:start="227:29" pos:end="227:29">0</literal></expr></argument>, <argument pos:start="227:32" pos:end="227:54"><expr pos:start="227:32" pos:end="227:54"><name pos:start="227:32" pos:end="227:38">S_IFIFO</name> <operator pos:start="227:40" pos:end="227:40">|</operator> <operator pos:start="227:42" pos:end="227:42">(</operator><name pos:start="227:43" pos:end="227:46">perm</name> <operator pos:start="227:48" pos:end="227:48">&amp;</operator> <literal type="number" pos:start="227:50" pos:end="227:53">0777</literal><operator pos:start="227:54" pos:end="227:54">)</operator></expr></argument>, <argument pos:start="227:57" pos:end="227:62"><expr pos:start="227:57" pos:end="227:62"><operator pos:start="227:57" pos:end="227:57">&amp;</operator><name pos:start="227:58" pos:end="227:62">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="229:9" pos:end="233:9"><if pos:start="229:9" pos:end="233:9">if <condition pos:start="229:12" pos:end="229:20">(<expr pos:start="229:13" pos:end="229:19"><name pos:start="229:13" pos:end="229:15">err</name> <operator pos:start="229:17" pos:end="229:17">&lt;</operator> <literal type="number" pos:start="229:19" pos:end="229:19">0</literal></expr>)</condition> <block pos:start="229:22" pos:end="233:9">{<block_content pos:start="231:13" pos:end="231:21">

            <goto pos:start="231:13" pos:end="231:21">goto <name pos:start="231:18" pos:end="231:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:71"><expr pos:start="235:9" pos:end="235:70"><name pos:start="235:9" pos:end="235:11">err</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <call pos:start="235:15" pos:end="235:70"><name pos:start="235:15" pos:end="235:34">v9fs_co_name_to_path</name><argument_list pos:start="235:35" pos:end="235:70">(<argument pos:start="235:36" pos:end="235:38"><expr pos:start="235:36" pos:end="235:38"><name pos:start="235:36" pos:end="235:38">pdu</name></expr></argument>, <argument pos:start="235:41" pos:end="235:51"><expr pos:start="235:41" pos:end="235:51"><operator pos:start="235:41" pos:end="235:41">&amp;</operator><name pos:start="235:42" pos:end="235:51"><name pos:start="235:42" pos:end="235:45">fidp</name><operator pos:start="235:46" pos:end="235:47">-&gt;</operator><name pos:start="235:48" pos:end="235:51">path</name></name></expr></argument>, <argument pos:start="235:54" pos:end="235:62"><expr pos:start="235:54" pos:end="235:62"><name pos:start="235:54" pos:end="235:62"><name pos:start="235:54" pos:end="235:57">name</name><operator pos:start="235:58" pos:end="235:58">.</operator><name pos:start="235:59" pos:end="235:62">data</name></name></expr></argument>, <argument pos:start="235:65" pos:end="235:69"><expr pos:start="235:65" pos:end="235:69"><operator pos:start="235:65" pos:end="235:65">&amp;</operator><name pos:start="235:66" pos:end="235:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="237:9" pos:end="241:9"><if pos:start="237:9" pos:end="241:9">if <condition pos:start="237:12" pos:end="237:20">(<expr pos:start="237:13" pos:end="237:19"><name pos:start="237:13" pos:end="237:15">err</name> <operator pos:start="237:17" pos:end="237:17">&lt;</operator> <literal type="number" pos:start="237:19" pos:end="237:19">0</literal></expr>)</condition> <block pos:start="237:22" pos:end="241:9">{<block_content pos:start="239:13" pos:end="239:21">

            <goto pos:start="239:13" pos:end="239:21">goto <name pos:start="239:18" pos:end="239:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:43"><expr pos:start="243:9" pos:end="243:42"><call pos:start="243:9" pos:end="243:42"><name pos:start="243:9" pos:end="243:22">v9fs_path_copy</name><argument_list pos:start="243:23" pos:end="243:42">(<argument pos:start="243:24" pos:end="243:34"><expr pos:start="243:24" pos:end="243:34"><operator pos:start="243:24" pos:end="243:24">&amp;</operator><name pos:start="243:25" pos:end="243:34"><name pos:start="243:25" pos:end="243:28">fidp</name><operator pos:start="243:29" pos:end="243:30">-&gt;</operator><name pos:start="243:31" pos:end="243:34">path</name></name></expr></argument>, <argument pos:start="243:37" pos:end="243:41"><expr pos:start="243:37" pos:end="243:41"><operator pos:start="243:37" pos:end="243:37">&amp;</operator><name pos:start="243:38" pos:end="243:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="245:7" pos:end="267:5">else if <condition pos:start="245:15" pos:end="245:42">(<expr pos:start="245:16" pos:end="245:41"><name pos:start="245:16" pos:end="245:19">perm</name> <operator pos:start="245:21" pos:end="245:21">&amp;</operator> <name pos:start="245:23" pos:end="245:41">P9_STAT_MODE_SOCKET</name></expr>)</condition> <block pos:start="245:44" pos:end="267:5">{<block_content pos:start="247:9" pos:end="265:43">

        <expr_stmt pos:start="247:9" pos:end="249:65"><expr pos:start="247:9" pos:end="249:64"><name pos:start="247:9" pos:end="247:11">err</name> <operator pos:start="247:13" pos:end="247:13">=</operator> <call pos:start="247:15" pos:end="249:64"><name pos:start="247:15" pos:end="247:27">v9fs_co_mknod</name><argument_list pos:start="247:28" pos:end="249:64">(<argument pos:start="247:29" pos:end="247:31"><expr pos:start="247:29" pos:end="247:31"><name pos:start="247:29" pos:end="247:31">pdu</name></expr></argument>, <argument pos:start="247:34" pos:end="247:37"><expr pos:start="247:34" pos:end="247:37"><name pos:start="247:34" pos:end="247:37">fidp</name></expr></argument>, <argument pos:start="247:40" pos:end="247:44"><expr pos:start="247:40" pos:end="247:44"><operator pos:start="247:40" pos:end="247:40">&amp;</operator><name pos:start="247:41" pos:end="247:44">name</name></expr></argument>, <argument pos:start="247:47" pos:end="247:55"><expr pos:start="247:47" pos:end="247:55"><name pos:start="247:47" pos:end="247:55"><name pos:start="247:47" pos:end="247:50">fidp</name><operator pos:start="247:51" pos:end="247:52">-&gt;</operator><name pos:start="247:53" pos:end="247:55">uid</name></name></expr></argument>, <argument pos:start="247:58" pos:end="247:59"><expr pos:start="247:58" pos:end="247:59"><operator pos:start="247:58" pos:end="247:58">-</operator><literal type="number" pos:start="247:59" pos:end="247:59">1</literal></expr></argument>,

                            <argument pos:start="249:29" pos:end="249:29"><expr pos:start="249:29" pos:end="249:29"><literal type="number" pos:start="249:29" pos:end="249:29">0</literal></expr></argument>, <argument pos:start="249:32" pos:end="249:55"><expr pos:start="249:32" pos:end="249:55"><name pos:start="249:32" pos:end="249:39">S_IFSOCK</name> <operator pos:start="249:41" pos:end="249:41">|</operator> <operator pos:start="249:43" pos:end="249:43">(</operator><name pos:start="249:44" pos:end="249:47">perm</name> <operator pos:start="249:49" pos:end="249:49">&amp;</operator> <literal type="number" pos:start="249:51" pos:end="249:54">0777</literal><operator pos:start="249:55" pos:end="249:55">)</operator></expr></argument>, <argument pos:start="249:58" pos:end="249:63"><expr pos:start="249:58" pos:end="249:63"><operator pos:start="249:58" pos:end="249:58">&amp;</operator><name pos:start="249:59" pos:end="249:63">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="251:9" pos:end="255:9"><if pos:start="251:9" pos:end="255:9">if <condition pos:start="251:12" pos:end="251:20">(<expr pos:start="251:13" pos:end="251:19"><name pos:start="251:13" pos:end="251:15">err</name> <operator pos:start="251:17" pos:end="251:17">&lt;</operator> <literal type="number" pos:start="251:19" pos:end="251:19">0</literal></expr>)</condition> <block pos:start="251:22" pos:end="255:9">{<block_content pos:start="253:13" pos:end="253:21">

            <goto pos:start="253:13" pos:end="253:21">goto <name pos:start="253:18" pos:end="253:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:71"><expr pos:start="257:9" pos:end="257:70"><name pos:start="257:9" pos:end="257:11">err</name> <operator pos:start="257:13" pos:end="257:13">=</operator> <call pos:start="257:15" pos:end="257:70"><name pos:start="257:15" pos:end="257:34">v9fs_co_name_to_path</name><argument_list pos:start="257:35" pos:end="257:70">(<argument pos:start="257:36" pos:end="257:38"><expr pos:start="257:36" pos:end="257:38"><name pos:start="257:36" pos:end="257:38">pdu</name></expr></argument>, <argument pos:start="257:41" pos:end="257:51"><expr pos:start="257:41" pos:end="257:51"><operator pos:start="257:41" pos:end="257:41">&amp;</operator><name pos:start="257:42" pos:end="257:51"><name pos:start="257:42" pos:end="257:45">fidp</name><operator pos:start="257:46" pos:end="257:47">-&gt;</operator><name pos:start="257:48" pos:end="257:51">path</name></name></expr></argument>, <argument pos:start="257:54" pos:end="257:62"><expr pos:start="257:54" pos:end="257:62"><name pos:start="257:54" pos:end="257:62"><name pos:start="257:54" pos:end="257:57">name</name><operator pos:start="257:58" pos:end="257:58">.</operator><name pos:start="257:59" pos:end="257:62">data</name></name></expr></argument>, <argument pos:start="257:65" pos:end="257:69"><expr pos:start="257:65" pos:end="257:69"><operator pos:start="257:65" pos:end="257:65">&amp;</operator><name pos:start="257:66" pos:end="257:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="259:9" pos:end="263:9"><if pos:start="259:9" pos:end="263:9">if <condition pos:start="259:12" pos:end="259:20">(<expr pos:start="259:13" pos:end="259:19"><name pos:start="259:13" pos:end="259:15">err</name> <operator pos:start="259:17" pos:end="259:17">&lt;</operator> <literal type="number" pos:start="259:19" pos:end="259:19">0</literal></expr>)</condition> <block pos:start="259:22" pos:end="263:9">{<block_content pos:start="261:13" pos:end="261:21">

            <goto pos:start="261:13" pos:end="261:21">goto <name pos:start="261:18" pos:end="261:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:43"><expr pos:start="265:9" pos:end="265:42"><call pos:start="265:9" pos:end="265:42"><name pos:start="265:9" pos:end="265:22">v9fs_path_copy</name><argument_list pos:start="265:23" pos:end="265:42">(<argument pos:start="265:24" pos:end="265:34"><expr pos:start="265:24" pos:end="265:34"><operator pos:start="265:24" pos:end="265:24">&amp;</operator><name pos:start="265:25" pos:end="265:34"><name pos:start="265:25" pos:end="265:28">fidp</name><operator pos:start="265:29" pos:end="265:30">-&gt;</operator><name pos:start="265:31" pos:end="265:34">path</name></name></expr></argument>, <argument pos:start="265:37" pos:end="265:41"><expr pos:start="265:37" pos:end="265:41"><operator pos:start="265:37" pos:end="265:37">&amp;</operator><name pos:start="265:38" pos:end="265:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="267:7" pos:end="297:5">else <block pos:start="267:12" pos:end="297:5">{<block_content pos:start="269:9" pos:end="295:9">

        <expr_stmt pos:start="269:9" pos:end="271:73"><expr pos:start="269:9" pos:end="271:72"><name pos:start="269:9" pos:end="269:11">err</name> <operator pos:start="269:13" pos:end="269:13">=</operator> <call pos:start="269:15" pos:end="271:72"><name pos:start="269:15" pos:end="269:27">v9fs_co_open2</name><argument_list pos:start="269:28" pos:end="271:72">(<argument pos:start="269:29" pos:end="269:31"><expr pos:start="269:29" pos:end="269:31"><name pos:start="269:29" pos:end="269:31">pdu</name></expr></argument>, <argument pos:start="269:34" pos:end="269:37"><expr pos:start="269:34" pos:end="269:37"><name pos:start="269:34" pos:end="269:37">fidp</name></expr></argument>, <argument pos:start="269:40" pos:end="269:44"><expr pos:start="269:40" pos:end="269:44"><operator pos:start="269:40" pos:end="269:40">&amp;</operator><name pos:start="269:41" pos:end="269:44">name</name></expr></argument>, <argument pos:start="269:47" pos:end="269:48"><expr pos:start="269:47" pos:end="269:48"><operator pos:start="269:47" pos:end="269:47">-</operator><literal type="number" pos:start="269:48" pos:end="269:48">1</literal></expr></argument>,

                            <argument pos:start="271:29" pos:end="271:57"><expr pos:start="271:29" pos:end="271:57"><call pos:start="271:29" pos:end="271:49"><name pos:start="271:29" pos:end="271:43">omode_to_uflags</name><argument_list pos:start="271:44" pos:end="271:49">(<argument pos:start="271:45" pos:end="271:48"><expr pos:start="271:45" pos:end="271:48"><name pos:start="271:45" pos:end="271:48">mode</name></expr></argument>)</argument_list></call><operator pos:start="271:50" pos:end="271:50">|</operator><name pos:start="271:51" pos:end="271:57">O_CREAT</name></expr></argument>, <argument pos:start="271:60" pos:end="271:63"><expr pos:start="271:60" pos:end="271:63"><name pos:start="271:60" pos:end="271:63">perm</name></expr></argument>, <argument pos:start="271:66" pos:end="271:71"><expr pos:start="271:66" pos:end="271:71"><operator pos:start="271:66" pos:end="271:66">&amp;</operator><name pos:start="271:67" pos:end="271:71">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="273:9" pos:end="277:9"><if pos:start="273:9" pos:end="277:9">if <condition pos:start="273:12" pos:end="273:20">(<expr pos:start="273:13" pos:end="273:19"><name pos:start="273:13" pos:end="273:15">err</name> <operator pos:start="273:17" pos:end="273:17">&lt;</operator> <literal type="number" pos:start="273:19" pos:end="273:19">0</literal></expr>)</condition> <block pos:start="273:22" pos:end="277:9">{<block_content pos:start="275:13" pos:end="275:21">

            <goto pos:start="275:13" pos:end="275:21">goto <name pos:start="275:18" pos:end="275:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:37"><expr pos:start="279:9" pos:end="279:36"><name pos:start="279:9" pos:end="279:22"><name pos:start="279:9" pos:end="279:12">fidp</name><operator pos:start="279:13" pos:end="279:14">-&gt;</operator><name pos:start="279:15" pos:end="279:22">fid_type</name></name> <operator pos:start="279:24" pos:end="279:24">=</operator> <name pos:start="279:26" pos:end="279:36">P9_FID_FILE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:49"><expr pos:start="281:9" pos:end="281:48"><name pos:start="281:9" pos:end="281:24"><name pos:start="281:9" pos:end="281:12">fidp</name><operator pos:start="281:13" pos:end="281:14">-&gt;</operator><name pos:start="281:15" pos:end="281:24">open_flags</name></name> <operator pos:start="281:26" pos:end="281:26">=</operator> <call pos:start="281:28" pos:end="281:48"><name pos:start="281:28" pos:end="281:42">omode_to_uflags</name><argument_list pos:start="281:43" pos:end="281:48">(<argument pos:start="281:44" pos:end="281:47"><expr pos:start="281:44" pos:end="281:47"><name pos:start="281:44" pos:end="281:47">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="283:9" pos:end="295:9"><if pos:start="283:9" pos:end="295:9">if <condition pos:start="283:12" pos:end="283:38">(<expr pos:start="283:13" pos:end="283:37"><name pos:start="283:13" pos:end="283:28"><name pos:start="283:13" pos:end="283:16">fidp</name><operator pos:start="283:17" pos:end="283:18">-&gt;</operator><name pos:start="283:19" pos:end="283:28">open_flags</name></name> <operator pos:start="283:30" pos:end="283:30">&amp;</operator> <name pos:start="283:32" pos:end="283:37">O_EXCL</name></expr>)</condition> <block pos:start="283:40" pos:end="295:9">{<block_content pos:start="293:13" pos:end="293:47">

            <comment type="block" pos:start="285:13" pos:end="291:15">/*

             * We let the host file system do O_EXCL check

             * We should not reclaim such fd

             */</comment>

            <expr_stmt pos:start="293:13" pos:end="293:47"><expr pos:start="293:13" pos:end="293:46"><name pos:start="293:13" pos:end="293:23"><name pos:start="293:13" pos:end="293:16">fidp</name><operator pos:start="293:17" pos:end="293:18">-&gt;</operator><name pos:start="293:19" pos:end="293:23">flags</name></name> <operator pos:start="293:25" pos:end="293:26">|=</operator> <name pos:start="293:28" pos:end="293:46">FID_NON_RECLAIMABLE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:42"><expr pos:start="299:5" pos:end="299:41"><name pos:start="299:5" pos:end="299:10">iounit</name> <operator pos:start="299:12" pos:end="299:12">=</operator> <call pos:start="299:14" pos:end="299:41"><name pos:start="299:14" pos:end="299:23">get_iounit</name><argument_list pos:start="299:24" pos:end="299:41">(<argument pos:start="299:25" pos:end="299:27"><expr pos:start="299:25" pos:end="299:27"><name pos:start="299:25" pos:end="299:27">pdu</name></expr></argument>, <argument pos:start="299:30" pos:end="299:40"><expr pos:start="299:30" pos:end="299:40"><operator pos:start="299:30" pos:end="299:30">&amp;</operator><name pos:start="299:31" pos:end="299:40"><name pos:start="299:31" pos:end="299:34">fidp</name><operator pos:start="299:35" pos:end="299:36">-&gt;</operator><name pos:start="299:37" pos:end="299:40">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:30"><expr pos:start="301:5" pos:end="301:29"><call pos:start="301:5" pos:end="301:29"><name pos:start="301:5" pos:end="301:15">stat_to_qid</name><argument_list pos:start="301:16" pos:end="301:29">(<argument pos:start="301:17" pos:end="301:22"><expr pos:start="301:17" pos:end="301:22"><operator pos:start="301:17" pos:end="301:17">&amp;</operator><name pos:start="301:18" pos:end="301:22">stbuf</name></expr></argument>, <argument pos:start="301:25" pos:end="301:28"><expr pos:start="301:25" pos:end="301:28"><operator pos:start="301:25" pos:end="301:25">&amp;</operator><name pos:start="301:26" pos:end="301:28">qid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:59"><expr pos:start="303:5" pos:end="303:58"><name pos:start="303:5" pos:end="303:10">offset</name> <operator pos:start="303:12" pos:end="303:13">+=</operator> <call pos:start="303:15" pos:end="303:58"><name pos:start="303:15" pos:end="303:25">pdu_marshal</name><argument_list pos:start="303:26" pos:end="303:58">(<argument pos:start="303:27" pos:end="303:29"><expr pos:start="303:27" pos:end="303:29"><name pos:start="303:27" pos:end="303:29">pdu</name></expr></argument>, <argument pos:start="303:32" pos:end="303:37"><expr pos:start="303:32" pos:end="303:37"><name pos:start="303:32" pos:end="303:37">offset</name></expr></argument>, <argument pos:start="303:40" pos:end="303:43"><expr pos:start="303:40" pos:end="303:43"><literal type="string" pos:start="303:40" pos:end="303:43">"Qd"</literal></expr></argument>, <argument pos:start="303:46" pos:end="303:49"><expr pos:start="303:46" pos:end="303:49"><operator pos:start="303:46" pos:end="303:46">&amp;</operator><name pos:start="303:47" pos:end="303:49">qid</name></expr></argument>, <argument pos:start="303:52" pos:end="303:57"><expr pos:start="303:52" pos:end="303:57"><name pos:start="303:52" pos:end="303:57">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:17"><expr pos:start="305:5" pos:end="305:16"><name pos:start="305:5" pos:end="305:7">err</name> <operator pos:start="305:9" pos:end="305:9">=</operator> <name pos:start="305:11" pos:end="305:16">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="309:70"><expr pos:start="307:5" pos:end="309:69"><call pos:start="307:5" pos:end="309:69"><name pos:start="307:5" pos:end="307:28">trace_v9fs_create_return</name><argument_list pos:start="307:29" pos:end="309:69">(<argument pos:start="307:30" pos:end="307:37"><expr pos:start="307:30" pos:end="307:37"><name pos:start="307:30" pos:end="307:37"><name pos:start="307:30" pos:end="307:32">pdu</name><operator pos:start="307:33" pos:end="307:34">-&gt;</operator><name pos:start="307:35" pos:end="307:37">tag</name></name></expr></argument>, <argument pos:start="307:40" pos:end="307:46"><expr pos:start="307:40" pos:end="307:46"><name pos:start="307:40" pos:end="307:46"><name pos:start="307:40" pos:end="307:42">pdu</name><operator pos:start="307:43" pos:end="307:44">-&gt;</operator><name pos:start="307:45" pos:end="307:46">id</name></name></expr></argument>,

                             <argument pos:start="309:30" pos:end="309:37"><expr pos:start="309:30" pos:end="309:37"><name pos:start="309:30" pos:end="309:37"><name pos:start="309:30" pos:end="309:32">qid</name><operator pos:start="309:33" pos:end="309:33">.</operator><name pos:start="309:34" pos:end="309:37">type</name></name></expr></argument>, <argument pos:start="309:40" pos:end="309:50"><expr pos:start="309:40" pos:end="309:50"><name pos:start="309:40" pos:end="309:50"><name pos:start="309:40" pos:end="309:42">qid</name><operator pos:start="309:43" pos:end="309:43">.</operator><name pos:start="309:44" pos:end="309:50">version</name></name></expr></argument>, <argument pos:start="309:53" pos:end="309:60"><expr pos:start="309:53" pos:end="309:60"><name pos:start="309:53" pos:end="309:60"><name pos:start="309:53" pos:end="309:55">qid</name><operator pos:start="309:56" pos:end="309:56">.</operator><name pos:start="309:57" pos:end="309:60">path</name></name></expr></argument>, <argument pos:start="309:63" pos:end="309:68"><expr pos:start="309:63" pos:end="309:68"><name pos:start="309:63" pos:end="309:68">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="311:1" pos:end="311:4"><name pos:start="311:1" pos:end="311:3">out</name>:</label>

    <expr_stmt pos:start="313:5" pos:end="313:23"><expr pos:start="313:5" pos:end="313:22"><call pos:start="313:5" pos:end="313:22"><name pos:start="313:5" pos:end="313:11">put_fid</name><argument_list pos:start="313:12" pos:end="313:22">(<argument pos:start="313:13" pos:end="313:15"><expr pos:start="313:13" pos:end="313:15"><name pos:start="313:13" pos:end="313:15">pdu</name></expr></argument>, <argument pos:start="313:18" pos:end="313:21"><expr pos:start="313:18" pos:end="313:21"><name pos:start="313:18" pos:end="313:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="315:1" pos:end="315:10"><name pos:start="315:1" pos:end="315:9">out_nofid</name>:</label>

   <expr_stmt pos:start="317:4" pos:end="317:34"><expr pos:start="317:4" pos:end="317:33"><call pos:start="317:4" pos:end="317:33"><name pos:start="317:4" pos:end="317:15">complete_pdu</name><argument_list pos:start="317:16" pos:end="317:33">(<argument pos:start="317:17" pos:end="317:22"><expr pos:start="317:17" pos:end="317:22"><name pos:start="317:17" pos:end="317:22"><name pos:start="317:17" pos:end="317:19">pdu</name><operator pos:start="317:20" pos:end="317:21">-&gt;</operator><name pos:start="317:22" pos:end="317:22">s</name></name></expr></argument>, <argument pos:start="317:25" pos:end="317:27"><expr pos:start="317:25" pos:end="317:27"><name pos:start="317:25" pos:end="317:27">pdu</name></expr></argument>, <argument pos:start="317:30" pos:end="317:32"><expr pos:start="317:30" pos:end="317:32"><name pos:start="317:30" pos:end="317:32">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="319:4" pos:end="319:27"><expr pos:start="319:4" pos:end="319:26"><call pos:start="319:4" pos:end="319:26"><name pos:start="319:4" pos:end="319:19">v9fs_string_free</name><argument_list pos:start="319:20" pos:end="319:26">(<argument pos:start="319:21" pos:end="319:25"><expr pos:start="319:21" pos:end="319:25"><operator pos:start="319:21" pos:end="319:21">&amp;</operator><name pos:start="319:22" pos:end="319:25">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="321:4" pos:end="321:32"><expr pos:start="321:4" pos:end="321:31"><call pos:start="321:4" pos:end="321:31"><name pos:start="321:4" pos:end="321:19">v9fs_string_free</name><argument_list pos:start="321:20" pos:end="321:31">(<argument pos:start="321:21" pos:end="321:30"><expr pos:start="321:21" pos:end="321:30"><operator pos:start="321:21" pos:end="321:21">&amp;</operator><name pos:start="321:22" pos:end="321:30">extension</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="323:4" pos:end="323:25"><expr pos:start="323:4" pos:end="323:24"><call pos:start="323:4" pos:end="323:24"><name pos:start="323:4" pos:end="323:17">v9fs_path_free</name><argument_list pos:start="323:18" pos:end="323:24">(<argument pos:start="323:19" pos:end="323:23"><expr pos:start="323:19" pos:end="323:23"><operator pos:start="323:19" pos:end="323:19">&amp;</operator><name pos:start="323:20" pos:end="323:23">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
