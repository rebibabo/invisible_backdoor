<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/964.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="5:40">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">data_size</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:39"><decl pos:start="5:25" pos:end="5:39"><type pos:start="5:25" pos:end="5:39"><name pos:start="5:25" pos:end="5:32">AVPacket</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="133:1">{<block_content pos:start="9:5" pos:end="131:23">

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">JvContext</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">s</name>           <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name>     <init pos:start="11:28" pos:end="11:40">= <expr pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:34">avpkt</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:40">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">buf_end</name> <init pos:start="13:28" pos:end="13:46">= <expr pos:start="13:30" pos:end="13:46"><name pos:start="13:30" pos:end="13:32">buf</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:46"><name pos:start="13:36" pos:end="13:40">avpkt</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:46">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">video_size</name></decl>, <decl pos:start="15:21" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:30">video_type</name></decl>, <decl pos:start="15:33" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:33" pos:end="15:33">i</name></decl>, <decl pos:start="15:36" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:36" pos:end="15:36">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:14">video_size</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:24">AV_RL32</name><argument_list pos:start="19:25" pos:end="19:29">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:14">video_type</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:23"><name pos:start="21:18" pos:end="21:20">buf</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">4</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:7">buf</name> <operator pos:start="23:9" pos:end="23:10">+=</operator> <literal type="number" pos:start="23:12" pos:end="23:12">5</literal></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="87:5"><if pos:start="27:5" pos:end="87:5">if <condition pos:start="27:8" pos:end="27:19">(<expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:18">video_size</name></expr>)</condition> <block pos:start="27:21" pos:end="87:5">{<block_content pos:start="29:9" pos:end="85:9">

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:59">(<expr pos:start="29:13" pos:end="29:58"><name pos:start="29:13" pos:end="29:42"><name pos:start="29:13" pos:end="29:22">video_size</name> <argument_list type="generic" pos:start="29:24" pos:end="29:42">&lt; <argument pos:start="29:26" pos:end="29:40"><expr pos:start="29:26" pos:end="29:40"><literal type="number" pos:start="29:26" pos:end="29:26">0</literal> <operator pos:start="29:28" pos:end="29:29">||</operator> <name pos:start="29:31" pos:end="29:40">video_size</name></expr></argument> &gt;</argument_list></name> <name pos:start="29:44" pos:end="29:54"><name pos:start="29:44" pos:end="29:48">avpkt</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:54">size</name></name> <operator pos:start="29:56" pos:end="29:56">-</operator> <literal type="number" pos:start="29:58" pos:end="29:58">5</literal></expr>)</condition> <block pos:start="29:61" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:39">

            <expr_stmt pos:start="31:13" pos:end="31:79"><expr pos:start="31:13" pos:end="31:78"><call pos:start="31:13" pos:end="31:78"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:78">(<argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">avctx</name></expr></argument>, <argument pos:start="31:27" pos:end="31:38"><expr pos:start="31:27" pos:end="31:38"><name pos:start="31:27" pos:end="31:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:41" pos:end="31:65"><expr pos:start="31:41" pos:end="31:65"><literal type="string" pos:start="31:41" pos:end="31:65">"video size %d invalid\n"</literal></expr></argument>, <argument pos:start="31:68" pos:end="31:77"><expr pos:start="31:68" pos:end="31:77"><name pos:start="31:68" pos:end="31:77">video_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:39">return <expr pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:54">(<expr pos:start="37:13" pos:end="37:53"><call pos:start="37:13" pos:end="37:49"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:17">avctx</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:31">reget_buffer</name></name><argument_list pos:start="37:32" pos:end="37:49">(<argument pos:start="37:33" pos:end="37:37"><expr pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:37">avctx</name></expr></argument>, <argument pos:start="37:40" pos:end="37:48"><expr pos:start="37:40" pos:end="37:48"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:48"><name pos:start="37:41" pos:end="37:41">s</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:48">frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:51" pos:end="37:51">&lt;</operator> <literal type="number" pos:start="37:53" pos:end="37:53">0</literal></expr>)</condition> <block pos:start="37:56" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:22">

            <expr_stmt pos:start="39:13" pos:end="39:65"><expr pos:start="39:13" pos:end="39:64"><call pos:start="39:13" pos:end="39:64"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:64">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24">avctx</name></expr></argument>, <argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:41" pos:end="39:63"><expr pos:start="39:41" pos:end="39:63"><literal type="string" pos:start="39:41" pos:end="39:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="47:9" pos:end="85:9"><if pos:start="47:9" pos:end="67:9">if <condition pos:start="47:12" pos:end="47:47">(<expr pos:start="47:13" pos:end="47:46"><name pos:start="47:13" pos:end="47:22">video_type</name> <operator pos:start="47:24" pos:end="47:25">==</operator> <literal type="number" pos:start="47:27" pos:end="47:27">0</literal> <operator pos:start="47:29" pos:end="47:30">||</operator> <name pos:start="47:32" pos:end="47:41">video_type</name> <operator pos:start="47:43" pos:end="47:44">==</operator> <literal type="number" pos:start="47:46" pos:end="47:46">1</literal></expr>)</condition> <block pos:start="47:49" pos:end="67:9">{<block_content pos:start="49:13" pos:end="65:30">

            <decl_stmt pos:start="49:13" pos:end="49:29"><decl pos:start="49:13" pos:end="49:28"><type pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:25">GetBitContext</name></type> <name pos:start="49:27" pos:end="49:28">gb</name></decl>;</decl_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:52"><expr pos:start="51:13" pos:end="51:51"><call pos:start="51:13" pos:end="51:51"><name pos:start="51:13" pos:end="51:25">init_get_bits</name><argument_list pos:start="51:26" pos:end="51:51">(<argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><operator pos:start="51:27" pos:end="51:27">&amp;</operator><name pos:start="51:28" pos:end="51:29">gb</name></expr></argument>, <argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">buf</name></expr></argument>, <argument pos:start="51:37" pos:end="51:50"><expr pos:start="51:37" pos:end="51:50"><literal type="number" pos:start="51:37" pos:end="51:37">8</literal> <operator pos:start="51:39" pos:end="51:39">*</operator> <name pos:start="51:41" pos:end="51:50">video_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="55:13" pos:end="61:61">for <control pos:start="55:17" pos:end="55:50">(<init pos:start="55:18" pos:end="55:23"><expr pos:start="55:18" pos:end="55:22"><name pos:start="55:18" pos:end="55:18">j</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</init> <condition pos:start="55:25" pos:end="55:42"><expr pos:start="55:25" pos:end="55:41"><name pos:start="55:25" pos:end="55:25">j</name> <operator pos:start="55:27" pos:end="55:27">&lt;</operator> <name pos:start="55:29" pos:end="55:41"><name pos:start="55:29" pos:end="55:33">avctx</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:41">height</name></name></expr>;</condition> <incr pos:start="55:44" pos:end="55:49"><expr pos:start="55:44" pos:end="55:49"><name pos:start="55:44" pos:end="55:44">j</name> <operator pos:start="55:46" pos:end="55:47">+=</operator> <literal type="number" pos:start="55:49" pos:end="55:49">8</literal></expr></incr>)</control><block type="pseudo" pos:start="57:17" pos:end="61:61"><block_content pos:start="57:17" pos:end="61:61">

                <for pos:start="57:17" pos:end="61:61">for <control pos:start="57:21" pos:end="57:53">(<init pos:start="57:22" pos:end="57:27"><expr pos:start="57:22" pos:end="57:26"><name pos:start="57:22" pos:end="57:22">i</name> <operator pos:start="57:24" pos:end="57:24">=</operator> <literal type="number" pos:start="57:26" pos:end="57:26">0</literal></expr>;</init> <condition pos:start="57:29" pos:end="57:45"><expr pos:start="57:29" pos:end="57:44"><name pos:start="57:29" pos:end="57:29">i</name> <operator pos:start="57:31" pos:end="57:31">&lt;</operator> <name pos:start="57:33" pos:end="57:44"><name pos:start="57:33" pos:end="57:37">avctx</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:44">width</name></name></expr>;</condition> <incr pos:start="57:47" pos:end="57:52"><expr pos:start="57:47" pos:end="57:52"><name pos:start="57:47" pos:end="57:47">i</name> <operator pos:start="57:49" pos:end="57:50">+=</operator> <literal type="number" pos:start="57:52" pos:end="57:52">8</literal></expr></incr>)</control><block type="pseudo" pos:start="59:21" pos:end="61:61"><block_content pos:start="59:21" pos:end="61:61">

                    <expr_stmt pos:start="59:21" pos:end="61:61"><expr pos:start="59:21" pos:end="61:60"><call pos:start="59:21" pos:end="61:60"><name pos:start="59:21" pos:end="59:29">decode8x8</name><argument_list pos:start="59:30" pos:end="61:60">(<argument pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><operator pos:start="59:31" pos:end="59:31">&amp;</operator><name pos:start="59:32" pos:end="59:33">gb</name></expr></argument>, <argument pos:start="59:36" pos:end="59:80"><expr pos:start="59:36" pos:end="59:80"><name pos:start="59:36" pos:end="59:51"><name pos:start="59:36" pos:end="59:36">s</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:43">frame</name><operator pos:start="59:44" pos:end="59:44">.</operator><name pos:start="59:45" pos:end="59:48">data</name><index pos:start="59:49" pos:end="59:51">[<expr pos:start="59:50" pos:end="59:50"><literal type="number" pos:start="59:50" pos:end="59:50">0</literal></expr>]</index></name> <operator pos:start="59:53" pos:end="59:53">+</operator> <name pos:start="59:55" pos:end="59:55">j</name><operator pos:start="59:56" pos:end="59:56">*</operator><name pos:start="59:57" pos:end="59:76"><name pos:start="59:57" pos:end="59:57">s</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:64">frame</name><operator pos:start="59:65" pos:end="59:65">.</operator><name pos:start="59:66" pos:end="59:73">linesize</name><index pos:start="59:74" pos:end="59:76">[<expr pos:start="59:75" pos:end="59:75"><literal type="number" pos:start="59:75" pos:end="59:75">0</literal></expr>]</index></name> <operator pos:start="59:78" pos:end="59:78">+</operator> <name pos:start="59:80" pos:end="59:80">i</name></expr></argument>,

                              <argument pos:start="61:31" pos:end="61:50"><expr pos:start="61:31" pos:end="61:50"><name pos:start="61:31" pos:end="61:50"><name pos:start="61:31" pos:end="61:31">s</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:38">frame</name><operator pos:start="61:39" pos:end="61:39">.</operator><name pos:start="61:40" pos:end="61:47">linesize</name><index pos:start="61:48" pos:end="61:50">[<expr pos:start="61:49" pos:end="61:49"><literal type="number" pos:start="61:49" pos:end="61:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="61:53" pos:end="61:59"><expr pos:start="61:53" pos:end="61:59"><operator pos:start="61:53" pos:end="61:53">&amp;</operator><name pos:start="61:54" pos:end="61:59"><name pos:start="61:54" pos:end="61:54">s</name><operator pos:start="61:55" pos:end="61:56">-&gt;</operator><name pos:start="61:57" pos:end="61:59">dsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



            <expr_stmt pos:start="65:13" pos:end="65:30"><expr pos:start="65:13" pos:end="65:29"><name pos:start="65:13" pos:end="65:15">buf</name> <operator pos:start="65:17" pos:end="65:18">+=</operator> <name pos:start="65:20" pos:end="65:29">video_size</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="67:11" pos:end="79:9">else if <condition pos:start="67:19" pos:end="67:35">(<expr pos:start="67:20" pos:end="67:34"><name pos:start="67:20" pos:end="67:29">video_type</name> <operator pos:start="67:31" pos:end="67:32">==</operator> <literal type="number" pos:start="67:34" pos:end="67:34">2</literal></expr>)</condition> <block pos:start="67:37" pos:end="79:9">{<block_content pos:start="69:13" pos:end="77:13">

            <if_stmt pos:start="69:13" pos:end="77:13"><if pos:start="69:13" pos:end="77:13">if <condition pos:start="69:16" pos:end="69:35">(<expr pos:start="69:17" pos:end="69:34"><name pos:start="69:17" pos:end="69:19">buf</name> <operator pos:start="69:21" pos:end="69:21">+</operator> <literal type="number" pos:start="69:23" pos:end="69:23">1</literal> <operator pos:start="69:25" pos:end="69:26">&lt;=</operator> <name pos:start="69:28" pos:end="69:34">buf_end</name></expr>)</condition> <block pos:start="69:37" pos:end="77:13">{<block_content pos:start="71:17" pos:end="75:87">

                <decl_stmt pos:start="71:17" pos:end="71:31"><decl pos:start="71:17" pos:end="71:30"><type pos:start="71:17" pos:end="71:19"><name pos:start="71:17" pos:end="71:19">int</name></type> <name pos:start="71:21" pos:end="71:21">v</name> <init pos:start="71:23" pos:end="71:30">= <expr pos:start="71:25" pos:end="71:30"><operator pos:start="71:25" pos:end="71:25">*</operator><name pos:start="71:26" pos:end="71:28">buf</name><operator pos:start="71:29" pos:end="71:30">++</operator></expr></init></decl>;</decl_stmt>

                <for pos:start="73:17" pos:end="75:87">for <control pos:start="73:21" pos:end="73:51">(<init pos:start="73:22" pos:end="73:27"><expr pos:start="73:22" pos:end="73:26"><name pos:start="73:22" pos:end="73:22">j</name> <operator pos:start="73:24" pos:end="73:24">=</operator> <literal type="number" pos:start="73:26" pos:end="73:26">0</literal></expr>;</init> <condition pos:start="73:29" pos:end="73:46"><expr pos:start="73:29" pos:end="73:45"><name pos:start="73:29" pos:end="73:29">j</name> <operator pos:start="73:31" pos:end="73:31">&lt;</operator> <name pos:start="73:33" pos:end="73:45"><name pos:start="73:33" pos:end="73:37">avctx</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:45">height</name></name></expr>;</condition> <incr pos:start="73:48" pos:end="73:50"><expr pos:start="73:48" pos:end="73:50"><name pos:start="73:48" pos:end="73:48">j</name><operator pos:start="73:49" pos:end="73:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:21" pos:end="75:87"><block_content pos:start="75:21" pos:end="75:87">

                    <expr_stmt pos:start="75:21" pos:end="75:87"><expr pos:start="75:21" pos:end="75:86"><call pos:start="75:21" pos:end="75:86"><name pos:start="75:21" pos:end="75:26">memset</name><argument_list pos:start="75:27" pos:end="75:86">(<argument pos:start="75:28" pos:end="75:68"><expr pos:start="75:28" pos:end="75:68"><name pos:start="75:28" pos:end="75:43"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:35">frame</name><operator pos:start="75:36" pos:end="75:36">.</operator><name pos:start="75:37" pos:end="75:40">data</name><index pos:start="75:41" pos:end="75:43">[<expr pos:start="75:42" pos:end="75:42"><literal type="number" pos:start="75:42" pos:end="75:42">0</literal></expr>]</index></name> <operator pos:start="75:45" pos:end="75:45">+</operator> <name pos:start="75:47" pos:end="75:47">j</name><operator pos:start="75:48" pos:end="75:48">*</operator><name pos:start="75:49" pos:end="75:68"><name pos:start="75:49" pos:end="75:49">s</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:56">frame</name><operator pos:start="75:57" pos:end="75:57">.</operator><name pos:start="75:58" pos:end="75:65">linesize</name><index pos:start="75:66" pos:end="75:68">[<expr pos:start="75:67" pos:end="75:67"><literal type="number" pos:start="75:67" pos:end="75:67">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:71" pos:end="75:71"><expr pos:start="75:71" pos:end="75:71"><name pos:start="75:71" pos:end="75:71">v</name></expr></argument>, <argument pos:start="75:74" pos:end="75:85"><expr pos:start="75:74" pos:end="75:85"><name pos:start="75:74" pos:end="75:85"><name pos:start="75:74" pos:end="75:78">avctx</name><operator pos:start="75:79" pos:end="75:80">-&gt;</operator><name pos:start="75:81" pos:end="75:85">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="85:9">else <block pos:start="79:16" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:39">

            <expr_stmt pos:start="81:13" pos:end="81:85"><expr pos:start="81:13" pos:end="81:84"><call pos:start="81:13" pos:end="81:84"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="81:84">(<argument pos:start="81:20" pos:end="81:24"><expr pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:24">avctx</name></expr></argument>, <argument pos:start="81:27" pos:end="81:40"><expr pos:start="81:27" pos:end="81:40"><name pos:start="81:27" pos:end="81:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="81:43" pos:end="81:71"><expr pos:start="81:43" pos:end="81:71"><literal type="string" pos:start="81:43" pos:end="81:71">"unsupported frame type %i\n"</literal></expr></argument>, <argument pos:start="81:74" pos:end="81:83"><expr pos:start="81:74" pos:end="81:83"><name pos:start="81:74" pos:end="81:83">video_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="83:13" pos:end="83:39">return <expr pos:start="83:20" pos:end="83:38"><name pos:start="83:20" pos:end="83:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="105:5"><if pos:start="91:5" pos:end="105:5">if <condition pos:start="91:8" pos:end="91:45">(<expr pos:start="91:9" pos:end="91:44"><name pos:start="91:9" pos:end="91:15">buf_end</name> <operator pos:start="91:17" pos:end="91:17">-</operator> <name pos:start="91:19" pos:end="91:21">buf</name> <operator pos:start="91:23" pos:end="91:24">&gt;=</operator> <name pos:start="91:26" pos:end="91:40">AVPALETTE_COUNT</name> <operator pos:start="91:42" pos:end="91:42">*</operator> <literal type="number" pos:start="91:44" pos:end="91:44">3</literal></expr>)</condition> <block pos:start="91:47" pos:end="105:5">{<block_content pos:start="93:9" pos:end="103:35">

        <for pos:start="93:9" pos:end="101:9">for <control pos:start="93:13" pos:end="93:45">(<init pos:start="93:14" pos:end="93:19"><expr pos:start="93:14" pos:end="93:18"><name pos:start="93:14" pos:end="93:14">i</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>;</init> <condition pos:start="93:21" pos:end="93:40"><expr pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:21">i</name> <operator pos:start="93:23" pos:end="93:23">&lt;</operator> <name pos:start="93:25" pos:end="93:39">AVPALETTE_COUNT</name></expr>;</condition> <incr pos:start="93:42" pos:end="93:44"><expr pos:start="93:42" pos:end="93:44"><name pos:start="93:42" pos:end="93:42">i</name><operator pos:start="93:43" pos:end="93:44">++</operator></expr></incr>)</control> <block pos:start="93:47" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:21">

            <decl_stmt pos:start="95:13" pos:end="95:40"><decl pos:start="95:13" pos:end="95:39"><type pos:start="95:13" pos:end="95:20"><name pos:start="95:13" pos:end="95:20">uint32_t</name></type> <name pos:start="95:22" pos:end="95:24">pal</name> <init pos:start="95:26" pos:end="95:39">= <expr pos:start="95:28" pos:end="95:39"><call pos:start="95:28" pos:end="95:39"><name pos:start="95:28" pos:end="95:34">AV_RB24</name><argument_list pos:start="95:35" pos:end="95:39">(<argument pos:start="95:36" pos:end="95:38"><expr pos:start="95:36" pos:end="95:38"><name pos:start="95:36" pos:end="95:38">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:75"><expr pos:start="97:13" pos:end="97:74"><name pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:22">palette</name><index pos:start="97:23" pos:end="97:25">[<expr pos:start="97:24" pos:end="97:24"><name pos:start="97:24" pos:end="97:24">i</name></expr>]</index></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <literal type="number" pos:start="97:29" pos:end="97:32">0xFF</literal> <operator pos:start="97:34" pos:end="97:35">&lt;&lt;</operator> <literal type="number" pos:start="97:37" pos:end="97:38">24</literal> <operator pos:start="97:40" pos:end="97:40">|</operator> <name pos:start="97:42" pos:end="97:44">pal</name> <operator pos:start="97:46" pos:end="97:47">&lt;&lt;</operator> <literal type="number" pos:start="97:49" pos:end="97:49">2</literal> <operator pos:start="97:51" pos:end="97:51">|</operator> <operator pos:start="97:53" pos:end="97:53">(</operator><operator pos:start="97:54" pos:end="97:54">(</operator><name pos:start="97:55" pos:end="97:57">pal</name> <operator pos:start="97:59" pos:end="97:60">&gt;&gt;</operator> <literal type="number" pos:start="97:62" pos:end="97:62">4</literal><operator pos:start="97:63" pos:end="97:63">)</operator> <operator pos:start="97:65" pos:end="97:65">&amp;</operator> <literal type="number" pos:start="97:67" pos:end="97:73">0x30303</literal><operator pos:start="97:74" pos:end="97:74">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:21"><expr pos:start="99:13" pos:end="99:20"><name pos:start="99:13" pos:end="99:15">buf</name> <operator pos:start="99:17" pos:end="99:18">+=</operator> <literal type="number" pos:start="99:20" pos:end="99:20">3</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="103:9" pos:end="103:35"><expr pos:start="103:9" pos:end="103:34"><name pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:30">palette_has_changed</name></name> <operator pos:start="103:32" pos:end="103:32">=</operator> <literal type="number" pos:start="103:34" pos:end="103:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="127:5"><if pos:start="109:5" pos:end="127:5">if <condition pos:start="109:8" pos:end="109:19">(<expr pos:start="109:9" pos:end="109:18"><name pos:start="109:9" pos:end="109:18">video_size</name></expr>)</condition> <block pos:start="109:21" pos:end="127:5">{<block_content pos:start="111:9" pos:end="125:35">

        <expr_stmt pos:start="111:9" pos:end="111:41"><expr pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:26"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:16">frame</name><operator pos:start="111:17" pos:end="111:17">.</operator><name pos:start="111:18" pos:end="111:26">key_frame</name></name>           <operator pos:start="111:38" pos:end="111:38">=</operator> <literal type="number" pos:start="111:40" pos:end="111:40">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:57"><expr pos:start="113:9" pos:end="113:56"><name pos:start="113:9" pos:end="113:26"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:16">frame</name><operator pos:start="113:17" pos:end="113:17">.</operator><name pos:start="113:18" pos:end="113:26">pict_type</name></name>           <operator pos:start="113:38" pos:end="113:38">=</operator> <name pos:start="113:40" pos:end="113:56">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:62"><expr pos:start="115:9" pos:end="115:61"><name pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:16">frame</name><operator pos:start="115:17" pos:end="115:17">.</operator><name pos:start="115:18" pos:end="115:36">palette_has_changed</name></name> <operator pos:start="115:38" pos:end="115:38">=</operator> <name pos:start="115:40" pos:end="115:61"><name pos:start="115:40" pos:end="115:40">s</name><operator pos:start="115:41" pos:end="115:42">-&gt;</operator><name pos:start="115:43" pos:end="115:61">palette_has_changed</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:41"><expr pos:start="117:9" pos:end="117:40"><name pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:30">palette_has_changed</name></name>       <operator pos:start="117:38" pos:end="117:38">=</operator> <literal type="number" pos:start="117:40" pos:end="117:40">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:61"><expr pos:start="119:9" pos:end="119:60"><call pos:start="119:9" pos:end="119:60"><name pos:start="119:9" pos:end="119:14">memcpy</name><argument_list pos:start="119:15" pos:end="119:60">(<argument pos:start="119:16" pos:end="119:31"><expr pos:start="119:16" pos:end="119:31"><name pos:start="119:16" pos:end="119:31"><name pos:start="119:16" pos:end="119:16">s</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:23">frame</name><operator pos:start="119:24" pos:end="119:24">.</operator><name pos:start="119:25" pos:end="119:28">data</name><index pos:start="119:29" pos:end="119:31">[<expr pos:start="119:30" pos:end="119:30"><literal type="number" pos:start="119:30" pos:end="119:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:34" pos:end="119:43"><expr pos:start="119:34" pos:end="119:43"><name pos:start="119:34" pos:end="119:43"><name pos:start="119:34" pos:end="119:34">s</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:43">palette</name></name></expr></argument>, <argument pos:start="119:46" pos:end="119:59"><expr pos:start="119:46" pos:end="119:59"><name pos:start="119:46" pos:end="119:59">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:42"><expr pos:start="123:9" pos:end="123:41"><operator pos:start="123:9" pos:end="123:9">*</operator><name pos:start="123:10" pos:end="123:18">data_size</name>      <operator pos:start="123:25" pos:end="123:25">=</operator> <sizeof pos:start="123:27" pos:end="123:41">sizeof<argument_list pos:start="123:33" pos:end="123:41">(<argument pos:start="123:34" pos:end="123:40"><expr pos:start="123:34" pos:end="123:40"><name pos:start="123:34" pos:end="123:40">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:35"><expr pos:start="125:9" pos:end="125:34"><operator pos:start="125:9" pos:end="125:9">*</operator><operator pos:start="125:10" pos:end="125:10">(</operator><name pos:start="125:11" pos:end="125:17">AVFrame</name><operator pos:start="125:18" pos:end="125:18">*</operator><operator pos:start="125:19" pos:end="125:19">)</operator><name pos:start="125:20" pos:end="125:23">data</name> <operator pos:start="125:25" pos:end="125:25">=</operator> <name pos:start="125:27" pos:end="125:34"><name pos:start="125:27" pos:end="125:27">s</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:34">frame</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="131:5" pos:end="131:23">return <expr pos:start="131:12" pos:end="131:22"><name pos:start="131:12" pos:end="131:22"><name pos:start="131:12" pos:end="131:16">avpkt</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
