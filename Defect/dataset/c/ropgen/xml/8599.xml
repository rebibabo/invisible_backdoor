<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8599.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">st_set_trace_file_enabled</name><parameter_list pos:start="1:31" pos:end="1:43">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:35"><name pos:start="1:32" pos:end="1:35">bool</name></type> <name pos:start="1:37" pos:end="1:42">enable</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:29">(<expr pos:start="5:9" pos:end="5:28"><name pos:start="5:9" pos:end="5:14">enable</name> <operator pos:start="5:16" pos:end="5:17">==</operator> <operator pos:start="5:19" pos:end="5:19">!</operator><operator pos:start="5:20" pos:end="5:20">!</operator><name pos:start="5:21" pos:end="5:28">trace_fp</name></expr>)</condition> <block pos:start="5:31" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:15">

        <return pos:start="7:9" pos:end="7:15">return;</return> <comment type="block" pos:start="7:17" pos:end="7:31">/* no change */</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:29">/* Halt trace writeout */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:20">flush_trace_file</name><argument_list pos:start="15:21" pos:end="15:26">(<argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:26">trace_writeout_enabled</name> <operator pos:start="17:28" pos:end="17:28">=</operator> <name pos:start="17:30" pos:end="17:34">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><call pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:20">flush_trace_file</name><argument_list pos:start="19:21" pos:end="19:26">(<argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="71:5"><if pos:start="23:5" pos:end="65:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:14">enable</name></expr>)</condition> <block pos:start="23:17" pos:end="65:5">{<block_content pos:start="25:9" pos:end="63:32">

        <decl_stmt pos:start="25:9" pos:end="33:10"><decl pos:start="25:9" pos:end="33:9"><type pos:start="25:9" pos:end="25:32"><specifier pos:start="25:9" pos:end="25:14">static</specifier> <specifier pos:start="25:16" pos:end="25:20">const</specifier> <name pos:start="25:22" pos:end="25:32">TraceRecord</name></type> <name pos:start="25:34" pos:end="25:39">header</name> <init pos:start="25:41" pos:end="33:9">= <expr pos:start="25:43" pos:end="33:9"><block pos:start="25:43" pos:end="33:9">{

            <expr pos:start="27:13" pos:end="27:36"><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:18">event</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:36">HEADER_EVENT_ID</name></expr>,

            <expr pos:start="29:13" pos:end="29:40"><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:25">timestamp_ns</name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:40">HEADER_MAGIC</name></expr>,

            <expr pos:start="31:13" pos:end="31:32"><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:15">x1</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:32">HEADER_VERSION</name></expr>,

        }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:16">trace_fp</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:46"><name pos:start="37:20" pos:end="37:24">fopen</name><argument_list pos:start="37:25" pos:end="37:46">(<argument pos:start="37:26" pos:end="37:40"><expr pos:start="37:26" pos:end="37:40"><name pos:start="37:26" pos:end="37:40">trace_file_name</name></expr></argument>, <argument pos:start="37:43" pos:end="37:45"><expr pos:start="37:43" pos:end="37:45"><literal type="string" pos:start="37:43" pos:end="37:45">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:22">(<expr pos:start="39:13" pos:end="39:21"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:21">trace_fp</name></expr>)</condition> <block pos:start="39:24" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:19">

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:61">(<expr pos:start="47:13" pos:end="47:60"><call pos:start="47:13" pos:end="47:55"><name pos:start="47:13" pos:end="47:18">fwrite</name><argument_list pos:start="47:19" pos:end="47:55">(<argument pos:start="47:20" pos:end="47:26"><expr pos:start="47:20" pos:end="47:26"><operator pos:start="47:20" pos:end="47:20">&amp;</operator><name pos:start="47:21" pos:end="47:26">header</name></expr></argument>, <argument pos:start="47:29" pos:end="47:41"><expr pos:start="47:29" pos:end="47:41"><sizeof pos:start="47:29" pos:end="47:41">sizeof <name pos:start="47:36" pos:end="47:41">header</name></sizeof></expr></argument>, <argument pos:start="47:44" pos:end="47:44"><expr pos:start="47:44" pos:end="47:44"><literal type="number" pos:start="47:44" pos:end="47:44">1</literal></expr></argument>, <argument pos:start="47:47" pos:end="47:54"><expr pos:start="47:47" pos:end="47:54"><name pos:start="47:47" pos:end="47:54">trace_fp</name></expr></argument>)</argument_list></call> <operator pos:start="47:57" pos:end="47:58">!=</operator> <literal type="number" pos:start="47:60" pos:end="47:60">1</literal></expr>)</condition> <block pos:start="47:63" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:19">

            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><call pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:18">fclose</name><argument_list pos:start="49:19" pos:end="49:28">(<argument pos:start="49:20" pos:end="49:27"><expr pos:start="49:20" pos:end="49:27"><name pos:start="49:20" pos:end="49:27">trace_fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:20">trace_fp</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:27">NULL</name></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="59:9" pos:end="59:35">/* Resume trace writeout */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:30">trace_writeout_enabled</name> <operator pos:start="61:32" pos:end="61:32">=</operator> <name pos:start="61:34" pos:end="61:37">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:32"><expr pos:start="63:9" pos:end="63:31"><call pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:24">flush_trace_file</name><argument_list pos:start="63:25" pos:end="63:31">(<argument pos:start="63:26" pos:end="63:30"><expr pos:start="63:26" pos:end="63:30"><name pos:start="63:26" pos:end="63:30">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="71:5">else <block pos:start="65:12" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:24">

        <expr_stmt pos:start="67:9" pos:end="67:25"><expr pos:start="67:9" pos:end="67:24"><call pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:14">fclose</name><argument_list pos:start="67:15" pos:end="67:24">(<argument pos:start="67:16" pos:end="67:23"><expr pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:23">trace_fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:16">trace_fp</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:23">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
