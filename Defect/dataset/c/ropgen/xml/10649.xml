<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10649.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">slavio_check_interrupts</name><parameter_list pos:start="1:36" pos:end="1:72">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:54">SLAVIO_INTCTLState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:71">set_irqs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:5">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:20">pending</name> <init pos:start="5:22" pos:end="5:41">= <expr pos:start="5:24" pos:end="5:41"><name pos:start="5:24" pos:end="5:41"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:41">intregm_pending</name></name></expr></init></decl>, <decl pos:start="5:44" pos:end="5:54"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:44" pos:end="5:54">pil_pending</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">i</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:21" pos:end="7:21">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:11">pending</name> <operator pos:start="11:13" pos:end="11:14">&amp;=</operator> <operator pos:start="11:16" pos:end="11:16">~</operator><name pos:start="11:17" pos:end="11:35"><name pos:start="11:17" pos:end="11:17">s</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:35">intregm_disabled</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:64"><expr pos:start="15:5" pos:end="15:63"><call pos:start="15:5" pos:end="15:63"><name pos:start="15:5" pos:end="15:33">trace_slavio_check_interrupts</name><argument_list pos:start="15:34" pos:end="15:63">(<argument pos:start="15:35" pos:end="15:41"><expr pos:start="15:35" pos:end="15:41"><name pos:start="15:35" pos:end="15:41">pending</name></expr></argument>, <argument pos:start="15:44" pos:end="15:62"><expr pos:start="15:44" pos:end="15:62"><name pos:start="15:44" pos:end="15:62"><name pos:start="15:44" pos:end="15:44">s</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:62">intregm_disabled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="113:5">for <control pos:start="17:9" pos:end="17:34">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:29"><expr pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:28">MAX_CPUS</name></expr>;</condition> <incr pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:31">i</name><operator pos:start="17:32" pos:end="17:33">++</operator></expr></incr>)</control> <block pos:start="17:36" pos:end="113:5">{<block_content pos:start="19:9" pos:end="111:43">

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:19">pil_pending</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="23:9" pos:end="23:73">/* If we are the current interrupt target, get hard interrupts */</comment>

        <if_stmt pos:start="25:9" pos:end="39:9"><if pos:start="25:9" pos:end="39:9">if <condition pos:start="25:12" pos:end="27:33">(<expr pos:start="25:13" pos:end="27:32"><name pos:start="25:13" pos:end="25:19">pending</name> <operator pos:start="25:21" pos:end="25:22">&amp;&amp;</operator> <operator pos:start="25:24" pos:end="25:24">!</operator><operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:44"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:44">intregm_disabled</name></name> <operator pos:start="25:46" pos:end="25:46">&amp;</operator> <name pos:start="25:48" pos:end="25:61">MASTER_DISABLE</name><operator pos:start="25:62" pos:end="25:62">)</operator> <operator pos:start="25:64" pos:end="25:65">&amp;&amp;</operator>

            <operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:17">==</operator> <name pos:start="27:19" pos:end="27:31"><name pos:start="27:19" pos:end="27:19">s</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:31">target_cpu</name></name><operator pos:start="27:32" pos:end="27:32">)</operator></expr>)</condition> <block pos:start="27:35" pos:end="39:9">{<block_content pos:start="29:13" pos:end="37:13">

            <for pos:start="29:13" pos:end="37:13">for <control pos:start="29:17" pos:end="29:36">(<init pos:start="29:18" pos:end="29:23"><expr pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:18">j</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>;</init> <condition pos:start="29:25" pos:end="29:31"><expr pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:25">j</name> <operator pos:start="29:27" pos:end="29:27">&lt;</operator> <literal type="number" pos:start="29:29" pos:end="29:30">32</literal></expr>;</condition> <incr pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:33">j</name><operator pos:start="29:34" pos:end="29:35">++</operator></expr></incr>)</control> <block pos:start="29:38" pos:end="37:13">{<block_content pos:start="31:17" pos:end="35:17">

                <if_stmt pos:start="31:17" pos:end="35:17"><if pos:start="31:17" pos:end="35:17">if <condition pos:start="31:20" pos:end="31:63">(<expr pos:start="31:21" pos:end="31:62"><operator pos:start="31:21" pos:end="31:21">(</operator><name pos:start="31:22" pos:end="31:28">pending</name> <operator pos:start="31:30" pos:end="31:30">&amp;</operator> <operator pos:start="31:32" pos:end="31:32">(</operator><literal type="number" pos:start="31:33" pos:end="31:33">1</literal> <operator pos:start="31:35" pos:end="31:36">&lt;&lt;</operator> <name pos:start="31:38" pos:end="31:38">j</name><operator pos:start="31:39" pos:end="31:39">)</operator><operator pos:start="31:40" pos:end="31:40">)</operator> <operator pos:start="31:42" pos:end="31:43">&amp;&amp;</operator> <name pos:start="31:45" pos:end="31:62"><name pos:start="31:45" pos:end="31:59">intbit_to_level</name><index pos:start="31:60" pos:end="31:62">[<expr pos:start="31:61" pos:end="31:61"><name pos:start="31:61" pos:end="31:61">j</name></expr>]</index></name></expr>)</condition> <block pos:start="31:65" pos:end="35:17">{<block_content pos:start="33:21" pos:end="33:59">

                    <expr_stmt pos:start="33:21" pos:end="33:59"><expr pos:start="33:21" pos:end="33:58"><name pos:start="33:21" pos:end="33:31">pil_pending</name> <operator pos:start="33:33" pos:end="33:34">|=</operator> <literal type="number" pos:start="33:36" pos:end="33:36">1</literal> <operator pos:start="33:38" pos:end="33:39">&lt;&lt;</operator> <name pos:start="33:41" pos:end="33:58"><name pos:start="33:41" pos:end="33:55">intbit_to_level</name><index pos:start="33:56" pos:end="33:58">[<expr pos:start="33:57" pos:end="33:57"><name pos:start="33:57" pos:end="33:57">j</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:67">/* Calculate current pending hard interrupts for display */</comment>

        <expr_stmt pos:start="45:9" pos:end="47:29"><expr pos:start="45:9" pos:end="47:28"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:17">slaves</name><index pos:start="45:18" pos:end="45:20">[<expr pos:start="45:19" pos:end="45:19"><name pos:start="45:19" pos:end="45:19">i</name></expr>]</index></name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:35">intreg_pending</name> <operator pos:start="45:37" pos:end="45:38">&amp;=</operator> <name pos:start="45:40" pos:end="45:55">CPU_SOFTIRQ_MASK</name> <operator pos:start="45:57" pos:end="45:57">|</operator> <name pos:start="45:59" pos:end="45:74">CPU_IRQ_INT15_IN</name> <operator pos:start="45:76" pos:end="45:76">|</operator>

            <name pos:start="47:13" pos:end="47:28">CPU_IRQ_TIMER_IN</name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="61:9"><if pos:start="49:9" pos:end="61:9">if <condition pos:start="49:12" pos:end="49:31">(<expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:13">i</name> <operator pos:start="49:15" pos:end="49:16">==</operator> <name pos:start="49:18" pos:end="49:30"><name pos:start="49:18" pos:end="49:18">s</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:30">target_cpu</name></name></expr>)</condition> <block pos:start="49:33" pos:end="61:9">{<block_content pos:start="51:13" pos:end="59:13">

            <for pos:start="51:13" pos:end="59:13">for <control pos:start="51:17" pos:end="51:36">(<init pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:18">j</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</init> <condition pos:start="51:25" pos:end="51:31"><expr pos:start="51:25" pos:end="51:30"><name pos:start="51:25" pos:end="51:25">j</name> <operator pos:start="51:27" pos:end="51:27">&lt;</operator> <literal type="number" pos:start="51:29" pos:end="51:30">32</literal></expr>;</condition> <incr pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:33">j</name><operator pos:start="51:34" pos:end="51:35">++</operator></expr></incr>)</control> <block pos:start="51:38" pos:end="59:13">{<block_content pos:start="53:17" pos:end="57:17">

                <if_stmt pos:start="53:17" pos:end="57:17"><if pos:start="53:17" pos:end="57:17">if <condition pos:start="53:20" pos:end="53:74">(<expr pos:start="53:21" pos:end="53:73"><operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:39"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:39">intregm_pending</name></name> <operator pos:start="53:41" pos:end="53:41">&amp;</operator> <operator pos:start="53:43" pos:end="53:43">(</operator><literal type="number" pos:start="53:44" pos:end="53:44">1</literal> <operator pos:start="53:46" pos:end="53:47">&lt;&lt;</operator> <name pos:start="53:49" pos:end="53:49">j</name><operator pos:start="53:50" pos:end="53:50">)</operator><operator pos:start="53:51" pos:end="53:51">)</operator> <operator pos:start="53:53" pos:end="53:54">&amp;&amp;</operator> <name pos:start="53:56" pos:end="53:73"><name pos:start="53:56" pos:end="53:70">intbit_to_level</name><index pos:start="53:71" pos:end="53:73">[<expr pos:start="53:72" pos:end="53:72"><name pos:start="53:72" pos:end="53:72">j</name></expr>]</index></name></expr>)</condition> <block pos:start="53:76" pos:end="57:17">{<block_content pos:start="55:21" pos:end="55:75">

                    <expr_stmt pos:start="55:21" pos:end="55:75"><expr pos:start="55:21" pos:end="55:74"><name pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:21">s</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:29">slaves</name><index pos:start="55:30" pos:end="55:32">[<expr pos:start="55:31" pos:end="55:31"><name pos:start="55:31" pos:end="55:31">i</name></expr>]</index></name><operator pos:start="55:33" pos:end="55:33">.</operator><name pos:start="55:34" pos:end="55:47">intreg_pending</name> <operator pos:start="55:49" pos:end="55:50">|=</operator> <literal type="number" pos:start="55:52" pos:end="55:52">1</literal> <operator pos:start="55:54" pos:end="55:55">&lt;&lt;</operator> <name pos:start="55:57" pos:end="55:74"><name pos:start="55:57" pos:end="55:71">intbit_to_level</name><index pos:start="55:72" pos:end="55:74">[<expr pos:start="55:73" pos:end="55:73"><name pos:start="55:73" pos:end="55:73">j</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="65:9" pos:end="67:43">/* Level 15 and CPU timer interrupts are only masked when

           the MASTER_DISABLE bit is set */</comment>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:52">(<expr pos:start="69:13" pos:end="69:51"><operator pos:start="69:13" pos:end="69:13">!</operator><operator pos:start="69:14" pos:end="69:14">(</operator><name pos:start="69:15" pos:end="69:33"><name pos:start="69:15" pos:end="69:15">s</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:33">intregm_disabled</name></name> <operator pos:start="69:35" pos:end="69:35">&amp;</operator> <name pos:start="69:37" pos:end="69:50">MASTER_DISABLE</name><operator pos:start="69:51" pos:end="69:51">)</operator></expr>)</condition> <block pos:start="69:54" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:54">

            <expr_stmt pos:start="71:13" pos:end="73:54"><expr pos:start="71:13" pos:end="73:53"><name pos:start="71:13" pos:end="71:23">pil_pending</name> <operator pos:start="71:25" pos:end="71:26">|=</operator> <name pos:start="71:28" pos:end="71:39"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:36">slaves</name><index pos:start="71:37" pos:end="71:39">[<expr pos:start="71:38" pos:end="71:38"><name pos:start="71:38" pos:end="71:38">i</name></expr>]</index></name><operator pos:start="71:40" pos:end="71:40">.</operator><name pos:start="71:41" pos:end="71:54">intreg_pending</name> <operator pos:start="71:56" pos:end="71:56">&amp;</operator>

                <operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:33">CPU_IRQ_INT15_IN</name> <operator pos:start="73:35" pos:end="73:35">|</operator> <name pos:start="73:37" pos:end="73:52">CPU_IRQ_TIMER_IN</name><operator pos:start="73:53" pos:end="73:53">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="79:9" pos:end="79:33">/* Add soft interrupts */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:78"><expr pos:start="81:9" pos:end="81:77"><name pos:start="81:9" pos:end="81:19">pil_pending</name> <operator pos:start="81:21" pos:end="81:22">|=</operator> <operator pos:start="81:24" pos:end="81:24">(</operator><name pos:start="81:25" pos:end="81:36"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:33">slaves</name><index pos:start="81:34" pos:end="81:36">[<expr pos:start="81:35" pos:end="81:35"><name pos:start="81:35" pos:end="81:35">i</name></expr>]</index></name><operator pos:start="81:37" pos:end="81:37">.</operator><name pos:start="81:38" pos:end="81:51">intreg_pending</name> <operator pos:start="81:53" pos:end="81:53">&amp;</operator> <name pos:start="81:55" pos:end="81:70">CPU_SOFTIRQ_MASK</name><operator pos:start="81:71" pos:end="81:71">)</operator> <operator pos:start="81:73" pos:end="81:74">&gt;&gt;</operator> <literal type="number" pos:start="81:76" pos:end="81:77">16</literal></expr>;</expr_stmt>



        <if_stmt pos:start="85:9" pos:end="109:9"><if pos:start="85:9" pos:end="109:9">if <condition pos:start="85:12" pos:end="85:21">(<expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:20">set_irqs</name></expr>)</condition> <block pos:start="85:23" pos:end="109:9">{<block_content pos:start="87:13" pos:end="107:13">

            <for pos:start="87:13" pos:end="107:13">for <control pos:start="87:17" pos:end="87:42">(<init pos:start="87:18" pos:end="87:30"><expr pos:start="87:18" pos:end="87:29"><name pos:start="87:18" pos:end="87:18">j</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <name pos:start="87:22" pos:end="87:29">MAX_PILS</name></expr>;</init> <condition pos:start="87:32" pos:end="87:37"><expr pos:start="87:32" pos:end="87:36"><name pos:start="87:32" pos:end="87:32">j</name> <operator pos:start="87:34" pos:end="87:34">&gt;</operator> <literal type="number" pos:start="87:36" pos:end="87:36">0</literal></expr>;</condition> <incr pos:start="87:39" pos:end="87:41"><expr pos:start="87:39" pos:end="87:41"><name pos:start="87:39" pos:end="87:39">j</name><operator pos:start="87:40" pos:end="87:41">--</operator></expr></incr>)</control> <block pos:start="87:44" pos:end="107:13">{<block_content pos:start="89:17" pos:end="105:17">

                <if_stmt pos:start="89:17" pos:end="105:17"><if pos:start="89:17" pos:end="97:17">if <condition pos:start="89:20" pos:end="89:43">(<expr pos:start="89:21" pos:end="89:42"><name pos:start="89:21" pos:end="89:31">pil_pending</name> <operator pos:start="89:33" pos:end="89:33">&amp;</operator> <operator pos:start="89:35" pos:end="89:35">(</operator><literal type="number" pos:start="89:36" pos:end="89:36">1</literal> <operator pos:start="89:38" pos:end="89:39">&lt;&lt;</operator> <name pos:start="89:41" pos:end="89:41">j</name><operator pos:start="89:42" pos:end="89:42">)</operator></expr>)</condition> <block pos:start="89:45" pos:end="97:17">{<block_content pos:start="91:21" pos:end="95:21">

                    <if_stmt pos:start="91:21" pos:end="95:21"><if pos:start="91:21" pos:end="95:21">if <condition pos:start="91:24" pos:end="91:59">(<expr pos:start="91:25" pos:end="91:58"><operator pos:start="91:25" pos:end="91:25">!</operator><operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:38"><name pos:start="91:27" pos:end="91:27">s</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:35">slaves</name><index pos:start="91:36" pos:end="91:38">[<expr pos:start="91:37" pos:end="91:37"><name pos:start="91:37" pos:end="91:37">i</name></expr>]</index></name><operator pos:start="91:39" pos:end="91:39">.</operator><name pos:start="91:40" pos:end="91:46">irl_out</name> <operator pos:start="91:48" pos:end="91:48">&amp;</operator> <operator pos:start="91:50" pos:end="91:50">(</operator><literal type="number" pos:start="91:51" pos:end="91:51">1</literal> <operator pos:start="91:53" pos:end="91:54">&lt;&lt;</operator> <name pos:start="91:56" pos:end="91:56">j</name><operator pos:start="91:57" pos:end="91:57">)</operator><operator pos:start="91:58" pos:end="91:58">)</operator></expr>)</condition> <block pos:start="91:61" pos:end="95:21">{<block_content pos:start="93:25" pos:end="93:58">

                        <expr_stmt pos:start="93:25" pos:end="93:58"><expr pos:start="93:25" pos:end="93:57"><call pos:start="93:25" pos:end="93:57"><name pos:start="93:25" pos:end="93:38">qemu_irq_raise</name><argument_list pos:start="93:39" pos:end="93:57">(<argument pos:start="93:40" pos:end="93:56"><expr pos:start="93:40" pos:end="93:56"><name pos:start="93:40" pos:end="93:56"><name pos:start="93:40" pos:end="93:40">s</name><operator pos:start="93:41" pos:end="93:42">-&gt;</operator><name pos:start="93:43" pos:end="93:50">cpu_irqs</name><index pos:start="93:51" pos:end="93:53">[<expr pos:start="93:52" pos:end="93:52"><name pos:start="93:52" pos:end="93:52">i</name></expr>]</index><index pos:start="93:54" pos:end="93:56">[<expr pos:start="93:55" pos:end="93:55"><name pos:start="93:55" pos:end="93:55">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="97:19" pos:end="105:17">else <block pos:start="97:24" pos:end="105:17">{<block_content pos:start="99:21" pos:end="103:21">

                    <if_stmt pos:start="99:21" pos:end="103:21"><if pos:start="99:21" pos:end="103:21">if <condition pos:start="99:24" pos:end="99:56">(<expr pos:start="99:25" pos:end="99:55"><name pos:start="99:25" pos:end="99:36"><name pos:start="99:25" pos:end="99:25">s</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:33">slaves</name><index pos:start="99:34" pos:end="99:36">[<expr pos:start="99:35" pos:end="99:35"><name pos:start="99:35" pos:end="99:35">i</name></expr>]</index></name><operator pos:start="99:37" pos:end="99:37">.</operator><name pos:start="99:38" pos:end="99:44">irl_out</name> <operator pos:start="99:46" pos:end="99:46">&amp;</operator> <operator pos:start="99:48" pos:end="99:48">(</operator><literal type="number" pos:start="99:49" pos:end="99:49">1</literal> <operator pos:start="99:51" pos:end="99:52">&lt;&lt;</operator> <name pos:start="99:54" pos:end="99:54">j</name><operator pos:start="99:55" pos:end="99:55">)</operator></expr>)</condition> <block pos:start="99:58" pos:end="103:21">{<block_content pos:start="101:25" pos:end="101:58">

                        <expr_stmt pos:start="101:25" pos:end="101:58"><expr pos:start="101:25" pos:end="101:57"><call pos:start="101:25" pos:end="101:57"><name pos:start="101:25" pos:end="101:38">qemu_irq_lower</name><argument_list pos:start="101:39" pos:end="101:57">(<argument pos:start="101:40" pos:end="101:56"><expr pos:start="101:40" pos:end="101:56"><name pos:start="101:40" pos:end="101:56"><name pos:start="101:40" pos:end="101:40">s</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:50">cpu_irqs</name><index pos:start="101:51" pos:end="101:53">[<expr pos:start="101:52" pos:end="101:52"><name pos:start="101:52" pos:end="101:52">i</name></expr>]</index><index pos:start="101:54" pos:end="101:56">[<expr pos:start="101:55" pos:end="101:55"><name pos:start="101:55" pos:end="101:55">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:43"><expr pos:start="111:9" pos:end="111:42"><name pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:17">slaves</name><index pos:start="111:18" pos:end="111:20">[<expr pos:start="111:19" pos:end="111:19"><name pos:start="111:19" pos:end="111:19">i</name></expr>]</index></name><operator pos:start="111:21" pos:end="111:21">.</operator><name pos:start="111:22" pos:end="111:28">irl_out</name> <operator pos:start="111:30" pos:end="111:30">=</operator> <name pos:start="111:32" pos:end="111:42">pil_pending</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
