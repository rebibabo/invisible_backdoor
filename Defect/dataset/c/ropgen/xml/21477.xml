<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21477.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:29">vfio_pci_read_config</name><parameter_list pos:start="1:30" pos:end="1:70">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:39">PCIDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">pdev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">uint32_t</name></type> <name pos:start="1:57" pos:end="1:60">addr</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:69"><decl pos:start="1:63" pos:end="1:69"><type pos:start="1:63" pos:end="1:69"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:69">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:15">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">VFIOPCIDevice</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">vdev</name> <init pos:start="5:25" pos:end="5:62">= <expr pos:start="5:27" pos:end="5:62"><call pos:start="5:27" pos:end="5:62"><name pos:start="5:27" pos:end="5:35">DO_UPCAST</name><argument_list pos:start="5:36" pos:end="5:62">(<argument pos:start="5:37" pos:end="5:49"><expr pos:start="5:37" pos:end="5:49"><name pos:start="5:37" pos:end="5:49">VFIOPCIDevice</name></expr></argument>, <argument pos:start="5:52" pos:end="5:55"><expr pos:start="5:52" pos:end="5:55"><name pos:start="5:52" pos:end="5:55">pdev</name></expr></argument>, <argument pos:start="5:58" pos:end="5:61"><expr pos:start="5:58" pos:end="5:61"><name pos:start="5:58" pos:end="5:61">pdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:21">emu_bits</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>, <decl pos:start="7:28" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:28" pos:end="7:34">emu_val</name> <init pos:start="7:36" pos:end="7:38">= <expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr></init></decl>, <decl pos:start="7:41" pos:end="7:52"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:41" pos:end="7:48">phys_val</name> <init pos:start="7:50" pos:end="7:52">= <expr pos:start="7:52" pos:end="7:52"><literal type="number" pos:start="7:52" pos:end="7:52">0</literal></expr></init></decl>, <decl pos:start="7:55" pos:end="7:57"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:55" pos:end="7:57">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:62"><expr pos:start="11:5" pos:end="11:61"><call pos:start="11:5" pos:end="11:61"><name pos:start="11:5" pos:end="11:10">memcpy</name><argument_list pos:start="11:11" pos:end="11:61">(<argument pos:start="11:12" pos:end="11:20"><expr pos:start="11:12" pos:end="11:20"><operator pos:start="11:12" pos:end="11:12">&amp;</operator><name pos:start="11:13" pos:end="11:20">emu_bits</name></expr></argument>, <argument pos:start="11:23" pos:end="11:55"><expr pos:start="11:23" pos:end="11:55"><name pos:start="11:23" pos:end="11:48"><name pos:start="11:23" pos:end="11:26">vdev</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:48">emulated_config_bits</name></name> <operator pos:start="11:50" pos:end="11:50">+</operator> <name pos:start="11:52" pos:end="11:55">addr</name></expr></argument>, <argument pos:start="11:58" pos:end="11:60"><expr pos:start="11:58" pos:end="11:60"><name pos:start="11:58" pos:end="11:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:12">emu_bits</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:36"><name pos:start="13:16" pos:end="13:26">le32_to_cpu</name><argument_list pos:start="13:27" pos:end="13:36">(<argument pos:start="13:28" pos:end="13:35"><expr pos:start="13:28" pos:end="13:35"><name pos:start="13:28" pos:end="13:35">emu_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">emu_bits</name></expr>)</condition> <block pos:start="17:19" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:59">

        <expr_stmt pos:start="19:9" pos:end="19:59"><expr pos:start="19:9" pos:end="19:58"><name pos:start="19:9" pos:end="19:15">emu_val</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:58"><name pos:start="19:19" pos:end="19:41">pci_default_read_config</name><argument_list pos:start="19:42" pos:end="19:58">(<argument pos:start="19:43" pos:end="19:46"><expr pos:start="19:43" pos:end="19:46"><name pos:start="19:43" pos:end="19:46">pdev</name></expr></argument>, <argument pos:start="19:49" pos:end="19:52"><expr pos:start="19:49" pos:end="19:52"><name pos:start="19:49" pos:end="19:52">addr</name></expr></argument>, <argument pos:start="19:55" pos:end="19:57"><expr pos:start="19:55" pos:end="19:57"><name pos:start="19:55" pos:end="19:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="49:5"><if pos:start="25:5" pos:end="49:5">if <condition pos:start="25:8" pos:end="25:52">(<expr pos:start="25:9" pos:end="25:51"><operator pos:start="25:9" pos:end="25:9">~</operator><name pos:start="25:10" pos:end="25:17">emu_bits</name> <operator pos:start="25:19" pos:end="25:19">&amp;</operator> <operator pos:start="25:21" pos:end="25:21">(</operator><literal type="number" pos:start="25:22" pos:end="25:32">0xffffffffU</literal> <operator pos:start="25:34" pos:end="25:35">&gt;&gt;</operator> <operator pos:start="25:37" pos:end="25:37">(</operator><literal type="number" pos:start="25:38" pos:end="25:41">32</literal> <operator pos:start="25:41" pos:end="25:41">-</operator> <name pos:start="25:43" pos:end="25:45">len</name> <operator pos:start="25:47" pos:end="25:47">*</operator> <literal type="number" pos:start="25:49" pos:end="25:49">8</literal><operator pos:start="25:50" pos:end="25:50">)</operator><operator pos:start="25:51" pos:end="25:51">)</operator></expr>)</condition> <block pos:start="25:54" pos:end="49:5">{<block_content pos:start="27:9" pos:end="47:41">

        <decl_stmt pos:start="27:9" pos:end="27:20"><decl pos:start="27:9" pos:end="27:19"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">ssize_t</name></type> <name pos:start="27:17" pos:end="27:19">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="33:48"><expr pos:start="31:9" pos:end="33:47"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="33:47"><name pos:start="31:15" pos:end="31:19">pread</name><argument_list pos:start="31:20" pos:end="33:47">(<argument pos:start="31:21" pos:end="31:37"><expr pos:start="31:21" pos:end="31:37"><name pos:start="31:21" pos:end="31:37"><name pos:start="31:21" pos:end="31:24">vdev</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:34">vbasedev</name><operator pos:start="31:35" pos:end="31:35">.</operator><name pos:start="31:36" pos:end="31:37">fd</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:48"><expr pos:start="31:40" pos:end="31:48"><operator pos:start="31:40" pos:end="31:40">&amp;</operator><name pos:start="31:41" pos:end="31:48">phys_val</name></expr></argument>, <argument pos:start="31:51" pos:end="31:53"><expr pos:start="31:51" pos:end="31:53"><name pos:start="31:51" pos:end="31:53">len</name></expr></argument>,

                    <argument pos:start="33:21" pos:end="33:46"><expr pos:start="33:21" pos:end="33:46"><name pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:24">vdev</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:39">config_offset</name></name> <operator pos:start="33:41" pos:end="33:41">+</operator> <name pos:start="33:43" pos:end="33:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="45:9"><if pos:start="35:9" pos:end="45:9">if <condition pos:start="35:12" pos:end="35:23">(<expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:18">!=</operator> <name pos:start="35:20" pos:end="35:22">len</name></expr>)</condition> <block pos:start="35:25" pos:end="45:9">{<block_content pos:start="37:13" pos:end="43:26">

            <expr_stmt pos:start="37:13" pos:end="41:74"><expr pos:start="37:13" pos:end="41:73"><call pos:start="37:13" pos:end="41:73"><name pos:start="37:13" pos:end="37:24">error_report</name><argument_list pos:start="37:25" pos:end="41:73">(<argument pos:start="37:26" pos:end="37:71"><expr pos:start="37:26" pos:end="37:71"><literal type="string" pos:start="37:26" pos:end="37:71">"%s(%04x:%02x:%02x.%x, 0x%x, 0x%x) failed: %m"</literal></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:33"><expr pos:start="39:26" pos:end="39:33"><name pos:start="39:26" pos:end="39:33">__func__</name></expr></argument>, <argument pos:start="39:36" pos:end="39:52"><expr pos:start="39:36" pos:end="39:52"><name pos:start="39:36" pos:end="39:52"><name pos:start="39:36" pos:end="39:39">vdev</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:45">host</name><operator pos:start="39:46" pos:end="39:46">.</operator><name pos:start="39:47" pos:end="39:52">domain</name></name></expr></argument>, <argument pos:start="39:55" pos:end="39:68"><expr pos:start="39:55" pos:end="39:68"><name pos:start="39:55" pos:end="39:68"><name pos:start="39:55" pos:end="39:58">vdev</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:64">host</name><operator pos:start="39:65" pos:end="39:65">.</operator><name pos:start="39:66" pos:end="39:68">bus</name></name></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:40"><expr pos:start="41:26" pos:end="41:40"><name pos:start="41:26" pos:end="41:40"><name pos:start="41:26" pos:end="41:29">vdev</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:35">host</name><operator pos:start="41:36" pos:end="41:36">.</operator><name pos:start="41:37" pos:end="41:40">slot</name></name></expr></argument>, <argument pos:start="41:43" pos:end="41:61"><expr pos:start="41:43" pos:end="41:61"><name pos:start="41:43" pos:end="41:61"><name pos:start="41:43" pos:end="41:46">vdev</name><operator pos:start="41:47" pos:end="41:48">-&gt;</operator><name pos:start="41:49" pos:end="41:52">host</name><operator pos:start="41:53" pos:end="41:53">.</operator><name pos:start="41:54" pos:end="41:61">function</name></name></expr></argument>, <argument pos:start="41:64" pos:end="41:67"><expr pos:start="41:64" pos:end="41:67"><name pos:start="41:64" pos:end="41:67">addr</name></expr></argument>, <argument pos:start="41:70" pos:end="41:72"><expr pos:start="41:70" pos:end="41:72"><name pos:start="41:70" pos:end="41:72">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:26">return <expr pos:start="43:20" pos:end="43:25"><operator pos:start="43:20" pos:end="43:20">-</operator><name pos:start="43:21" pos:end="43:25">errno</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:16">phys_val</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:40"><name pos:start="47:20" pos:end="47:30">le32_to_cpu</name><argument_list pos:start="47:31" pos:end="47:40">(<argument pos:start="47:32" pos:end="47:39"><expr pos:start="47:32" pos:end="47:39"><name pos:start="47:32" pos:end="47:39">phys_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:56"><expr pos:start="53:5" pos:end="53:55"><name pos:start="53:5" pos:end="53:7">val</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <operator pos:start="53:11" pos:end="53:11">(</operator><name pos:start="53:12" pos:end="53:18">emu_val</name> <operator pos:start="53:20" pos:end="53:20">&amp;</operator> <name pos:start="53:22" pos:end="53:29">emu_bits</name><operator pos:start="53:30" pos:end="53:30">)</operator> <operator pos:start="53:32" pos:end="53:32">|</operator> <operator pos:start="53:34" pos:end="53:34">(</operator><name pos:start="53:35" pos:end="53:42">phys_val</name> <operator pos:start="53:44" pos:end="53:44">&amp;</operator> <operator pos:start="53:46" pos:end="53:46">~</operator><name pos:start="53:47" pos:end="53:54">emu_bits</name><operator pos:start="53:55" pos:end="53:55">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:68"><expr pos:start="57:5" pos:end="57:67"><call pos:start="57:5" pos:end="57:67"><name pos:start="57:5" pos:end="57:30">trace_vfio_pci_read_config</name><argument_list pos:start="57:31" pos:end="57:67">(<argument pos:start="57:32" pos:end="57:50"><expr pos:start="57:32" pos:end="57:50"><name pos:start="57:32" pos:end="57:50"><name pos:start="57:32" pos:end="57:35">vdev</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:45">vbasedev</name><operator pos:start="57:46" pos:end="57:46">.</operator><name pos:start="57:47" pos:end="57:50">name</name></name></expr></argument>, <argument pos:start="57:53" pos:end="57:56"><expr pos:start="57:53" pos:end="57:56"><name pos:start="57:53" pos:end="57:56">addr</name></expr></argument>, <argument pos:start="57:59" pos:end="57:61"><expr pos:start="57:59" pos:end="57:61"><name pos:start="57:59" pos:end="57:61">len</name></expr></argument>, <argument pos:start="57:64" pos:end="57:66"><expr pos:start="57:64" pos:end="57:66"><name pos:start="57:64" pos:end="57:66">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="61:5" pos:end="61:15">return <expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
