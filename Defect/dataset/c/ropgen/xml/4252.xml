<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4252.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:5"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">bmds_aio_inflight</name><parameter_list pos:start="1:29" pos:end="1:66">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:43">BlkMigDevState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">bmds</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:58">int64_t</name></type> <name pos:start="1:60" pos:end="1:65">sector</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="15:5">{<block_content pos:start="5:5" pos:end="13:60">

    <decl_stmt pos:start="5:5" pos:end="5:67"><decl pos:start="5:5" pos:end="5:66"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:17">chunk</name> <init pos:start="5:19" pos:end="5:66">= <expr pos:start="5:21" pos:end="5:66"><name pos:start="5:21" pos:end="5:26">sector</name> <operator pos:start="5:28" pos:end="5:28">/</operator> <operator pos:start="5:30" pos:end="5:30">(</operator><name pos:start="5:31" pos:end="5:37">int64_t</name><operator pos:start="5:38" pos:end="5:38">)</operator><name pos:start="5:39" pos:end="5:66">BDRV_SECTORS_PER_DIRTY_CHUNK</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:60"><if pos:start="9:5" pos:end="13:60">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><name pos:start="9:9" pos:end="9:14">sector</name> <operator pos:start="9:16" pos:end="9:16">&lt;</operator> <call pos:start="9:18" pos:end="9:42"><name pos:start="9:18" pos:end="9:32">bdrv_nb_sectors</name><argument_list pos:start="9:33" pos:end="9:42">(<argument pos:start="9:34" pos:end="9:41"><expr pos:start="9:34" pos:end="9:41"><name pos:start="9:34" pos:end="9:41"><name pos:start="9:34" pos:end="9:37">bmds</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:41">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:45" pos:end="13:59">{<block_content pos:start="11:9" pos:end="13:59">

        <return pos:start="11:9" pos:end="13:58">return <expr pos:start="11:16" pos:end="13:58"><operator pos:start="11:16" pos:end="11:16">!</operator><operator pos:start="11:17" pos:end="11:17">!</operator><operator pos:start="11:18" pos:end="11:18">(</operator><name pos:start="11:19" pos:end="11:64"><name pos:start="11:19" pos:end="11:22">bmds</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:34">aio_bitmap</name><index pos:start="11:35" pos:end="11:64">[<expr pos:start="11:36" pos:end="11:64"><name pos:start="11:36" pos:end="11:40">chunk</name> <operator pos:start="11:42" pos:end="11:42">/</operator> <operator pos:start="11:44" pos:end="11:44">(</operator></expr></index></name>sizeof<operator pos:start="11:51" pos:end="11:51">(</operator><name pos:start="11:52" pos:end="11:59">unsigned</name> <name pos:start="11:61" pos:end="11:64">long</name><operator pos:start="11:65" pos:end="11:65">)</operator> <operator pos:start="11:67" pos:end="11:67">*</operator> <literal type="number" pos:start="11:69" pos:end="11:69">8</literal><operator pos:start="11:70" pos:end="11:70">)</operator>] <operator pos:start="11:73" pos:end="11:73">&amp;</operator>

            <operator pos:start="13:13" pos:end="13:13">(</operator><literal type="number" pos:start="13:14" pos:end="13:16">1UL</literal> <operator pos:start="13:18" pos:end="13:19">&lt;&lt;</operator> <operator pos:start="13:21" pos:end="13:21">(</operator><name pos:start="13:22" pos:end="13:26">chunk</name> <operator pos:start="13:28" pos:end="13:28">%</operator> <operator pos:start="13:30" pos:end="13:30">(</operator>sizeof<operator pos:start="13:37" pos:end="13:37">(</operator><name pos:start="13:38" pos:end="13:45">unsigned</name> <name pos:start="13:47" pos:end="13:50">long</name><operator pos:start="13:51" pos:end="13:51">)</operator> <operator pos:start="13:53" pos:end="13:53">*</operator> <literal type="number" pos:start="13:55" pos:end="13:55">8</literal><operator pos:start="13:56" pos:end="13:56">)</operator><operator pos:start="13:57" pos:end="13:57">)</operator><operator pos:start="13:58" pos:end="13:58">)</operator></expr></return>)</block_content></block><empty_stmt pos:start="13:60" pos:end="13:60">;</empty_stmt></if></if_stmt>

    </block_content>}</block></function> <if_stmt pos:start="15:7" pos:end="19:5"><else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

}
</unit>
