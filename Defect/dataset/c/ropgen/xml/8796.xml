<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8796.c" pos:tabs="8"><function pos:start="1:1" pos:end="1289:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:30">ff_mpv_encode_init</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1289:1">{<block_content pos:start="5:5" pos:end="1287:27">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>, <decl pos:start="7:17" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:32">format_supported</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:23">mpv_encode_defaults</name><argument_list pos:start="11:24" pos:end="11:26">(<argument pos:start="11:25" pos:end="11:25"><expr pos:start="11:25" pos:end="11:25"><name pos:start="11:25" pos:end="11:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="83:5">switch <condition pos:start="15:12" pos:end="15:28">(<expr pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:17">avctx</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:27">codec_id</name></name></expr>)</condition> <block pos:start="15:30" pos:end="83:5">{<block_content pos:start="17:5" pos:end="81:9">

    <case pos:start="17:5" pos:end="17:32">case <expr pos:start="17:10" pos:end="17:31"><name pos:start="17:10" pos:end="17:31">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="21:49">(<expr pos:start="19:13" pos:end="21:48"><name pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:17">avctx</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">pix_fmt</name></name> <operator pos:start="19:28" pos:end="19:29">!=</operator> <name pos:start="19:31" pos:end="19:48">AV_PIX_FMT_YUV420P</name> <operator pos:start="19:50" pos:end="19:51">&amp;&amp;</operator>

            <name pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:17">avctx</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:26">pix_fmt</name></name> <operator pos:start="21:28" pos:end="21:29">!=</operator> <name pos:start="21:31" pos:end="21:48">AV_PIX_FMT_YUV422P</name></expr>)</condition> <block pos:start="21:51" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:22">

            <expr_stmt pos:start="23:13" pos:end="25:61"><expr pos:start="23:13" pos:end="25:60"><call pos:start="23:13" pos:end="25:60"><name pos:start="23:13" pos:end="23:18">av_log</name><argument_list pos:start="23:19" pos:end="25:60">(<argument pos:start="23:20" pos:end="23:24"><expr pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:24">avctx</name></expr></argument>, <argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="25:20" pos:end="25:59"><expr pos:start="25:20" pos:end="25:59"><literal type="string" pos:start="25:20" pos:end="25:59">"only YUV420 and YUV422 are supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:22">return <expr pos:start="27:20" pos:end="27:21"><operator pos:start="27:20" pos:end="27:20">-</operator><literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:27">case <expr pos:start="33:10" pos:end="33:26"><name pos:start="33:10" pos:end="33:26">AV_CODEC_ID_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:24">format_supported</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:30">/* JPEG color space */</comment>

        <if_stmt pos:start="39:9" pos:end="59:33"><if pos:start="39:9" pos:end="49:33">if <condition pos:start="39:12" pos:end="47:53">(<expr pos:start="39:13" pos:end="47:52"><name pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:17">avctx</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:26">pix_fmt</name></name> <operator pos:start="39:28" pos:end="39:29">==</operator> <name pos:start="39:31" pos:end="39:49">AV_PIX_FMT_YUVJ420P</name> <operator pos:start="39:51" pos:end="39:52">||</operator>

            <name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:17">avctx</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:26">pix_fmt</name></name> <operator pos:start="41:28" pos:end="41:29">==</operator> <name pos:start="41:31" pos:end="41:49">AV_PIX_FMT_YUVJ422P</name> <operator pos:start="41:51" pos:end="41:52">||</operator>

            <operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:31"><name pos:start="43:14" pos:end="43:18">avctx</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:31">color_range</name></name> <operator pos:start="43:33" pos:end="43:34">==</operator> <name pos:start="43:36" pos:end="43:51">AVCOL_RANGE_JPEG</name> <operator pos:start="43:53" pos:end="43:54">&amp;&amp;</operator>

             <operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:28"><name pos:start="45:15" pos:end="45:19">avctx</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:28">pix_fmt</name></name> <operator pos:start="45:30" pos:end="45:31">==</operator> <name pos:start="45:33" pos:end="45:50">AV_PIX_FMT_YUV420P</name> <operator pos:start="45:52" pos:end="45:53">||</operator>

              <name pos:start="47:15" pos:end="47:28"><name pos:start="47:15" pos:end="47:19">avctx</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:28">pix_fmt</name></name> <operator pos:start="47:30" pos:end="47:31">==</operator> <name pos:start="47:33" pos:end="47:50">AV_PIX_FMT_YUV422P</name><operator pos:start="47:51" pos:end="47:51">)</operator><operator pos:start="47:52" pos:end="47:52">)</operator></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:33"><block_content pos:start="49:13" pos:end="49:33">

            <expr_stmt pos:start="49:13" pos:end="49:33"><expr pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:28">format_supported</name> <operator pos:start="49:30" pos:end="49:30">=</operator> <literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr>;</expr_stmt></block_content></block></if>

        <comment type="block" pos:start="51:9" pos:end="51:30">/* MPEG color space */</comment>

        <if type="elseif" pos:start="53:9" pos:end="59:33">else if <condition pos:start="53:17" pos:end="57:56">(<expr pos:start="53:18" pos:end="57:55"><name pos:start="53:18" pos:end="53:45"><name pos:start="53:18" pos:end="53:22">avctx</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:45">strict_std_compliance</name></name> <operator pos:start="53:47" pos:end="53:48">&lt;=</operator> <name pos:start="53:50" pos:end="53:73">FF_COMPLIANCE_UNOFFICIAL</name> <operator pos:start="53:75" pos:end="53:76">&amp;&amp;</operator>

                 <operator pos:start="55:18" pos:end="55:18">(</operator><name pos:start="55:19" pos:end="55:32"><name pos:start="55:19" pos:end="55:23">avctx</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:32">pix_fmt</name></name> <operator pos:start="55:34" pos:end="55:35">==</operator> <name pos:start="55:37" pos:end="55:54">AV_PIX_FMT_YUV420P</name> <operator pos:start="55:56" pos:end="55:57">||</operator>

                  <name pos:start="57:19" pos:end="57:32"><name pos:start="57:19" pos:end="57:23">avctx</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:32">pix_fmt</name></name> <operator pos:start="57:34" pos:end="57:35">==</operator> <name pos:start="57:37" pos:end="57:54">AV_PIX_FMT_YUV422P</name><operator pos:start="57:55" pos:end="57:55">)</operator></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:33"><block_content pos:start="59:13" pos:end="59:33">

            <expr_stmt pos:start="59:13" pos:end="59:33"><expr pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:28">format_supported</name> <operator pos:start="59:30" pos:end="59:30">=</operator> <literal type="number" pos:start="59:32" pos:end="59:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:30">(<expr pos:start="63:13" pos:end="63:29"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:29">format_supported</name></expr>)</condition> <block pos:start="63:32" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:22">

            <expr_stmt pos:start="65:13" pos:end="65:78"><expr pos:start="65:13" pos:end="65:77"><call pos:start="65:13" pos:end="65:77"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="65:77">(<argument pos:start="65:20" pos:end="65:24"><expr pos:start="65:20" pos:end="65:24"><name pos:start="65:20" pos:end="65:24">avctx</name></expr></argument>, <argument pos:start="65:27" pos:end="65:38"><expr pos:start="65:27" pos:end="65:38"><name pos:start="65:27" pos:end="65:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:41" pos:end="65:76"><expr pos:start="65:41" pos:end="65:76"><literal type="string" pos:start="65:41" pos:end="65:76">"colorspace not supported in jpeg\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <default pos:start="73:5" pos:end="73:12">default:</default>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:49">(<expr pos:start="75:13" pos:end="75:48"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:17">avctx</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:26">pix_fmt</name></name> <operator pos:start="75:28" pos:end="75:29">!=</operator> <name pos:start="75:31" pos:end="75:48">AV_PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="75:51" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:22">

            <expr_stmt pos:start="77:13" pos:end="77:70"><expr pos:start="77:13" pos:end="77:69"><call pos:start="77:13" pos:end="77:69"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="77:69">(<argument pos:start="77:20" pos:end="77:24"><expr pos:start="77:20" pos:end="77:24"><name pos:start="77:20" pos:end="77:24">avctx</name></expr></argument>, <argument pos:start="77:27" pos:end="77:38"><expr pos:start="77:27" pos:end="77:38"><name pos:start="77:27" pos:end="77:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:41" pos:end="77:68"><expr pos:start="77:41" pos:end="77:68"><literal type="string" pos:start="77:41" pos:end="77:68">"only YUV420 is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></switch>



    <switch pos:start="87:5" pos:end="107:5">switch <condition pos:start="87:12" pos:end="87:27">(<expr pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:17">avctx</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:26">pix_fmt</name></name></expr>)</condition> <block pos:start="87:29" pos:end="107:5">{<block_content pos:start="89:5" pos:end="105:14">

    <case pos:start="89:5" pos:end="89:29">case <expr pos:start="89:10" pos:end="89:28"><name pos:start="89:10" pos:end="89:28">AV_PIX_FMT_YUVJ422P</name></expr>:</case>

    <case pos:start="91:5" pos:end="91:28">case <expr pos:start="91:10" pos:end="91:27"><name pos:start="91:10" pos:end="91:27">AV_PIX_FMT_YUV422P</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:38"><expr pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:24">chroma_format</name></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <name pos:start="93:28" pos:end="93:37">CHROMA_422</name></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:29">case <expr pos:start="97:10" pos:end="97:28"><name pos:start="97:10" pos:end="97:28">AV_PIX_FMT_YUVJ420P</name></expr>:</case>

    <case pos:start="99:5" pos:end="99:28">case <expr pos:start="99:10" pos:end="99:27"><name pos:start="99:10" pos:end="99:27">AV_PIX_FMT_YUV420P</name></expr>:</case>

    <default pos:start="101:5" pos:end="101:12">default:</default>

        <expr_stmt pos:start="103:9" pos:end="103:38"><expr pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:24">chroma_format</name></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:37">CHROMA_420</name></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="111:5" pos:end="111:34"><expr pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:15"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:15">bit_rate</name></name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:33"><name pos:start="111:19" pos:end="111:23">avctx</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:33">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:31"><expr pos:start="113:5" pos:end="113:30"><name pos:start="113:5" pos:end="113:12"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:12">width</name></name>    <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:30"><name pos:start="113:19" pos:end="113:23">avctx</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:30">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:32"><expr pos:start="115:5" pos:end="115:31"><name pos:start="115:5" pos:end="115:13"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:13">height</name></name>   <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:31"><name pos:start="115:19" pos:end="115:23">avctx</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:31">height</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="127:5"><if pos:start="117:5" pos:end="127:5">if <condition pos:start="117:8" pos:end="119:66">(<expr pos:start="117:9" pos:end="119:65"><name pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:13">avctx</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:23">gop_size</name></name> <operator pos:start="117:25" pos:end="117:25">&gt;</operator> <literal type="number" pos:start="117:27" pos:end="117:29">600</literal> <operator pos:start="117:31" pos:end="117:32">&amp;&amp;</operator>

        <name pos:start="119:9" pos:end="119:36"><name pos:start="119:9" pos:end="119:13">avctx</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:36">strict_std_compliance</name></name> <operator pos:start="119:38" pos:end="119:38">&gt;</operator> <name pos:start="119:40" pos:end="119:65">FF_COMPLIANCE_EXPERIMENTAL</name></expr>)</condition> <block pos:start="119:68" pos:end="127:5">{<block_content pos:start="121:9" pos:end="125:30">

        <expr_stmt pos:start="121:9" pos:end="123:73"><expr pos:start="121:9" pos:end="123:72"><call pos:start="121:9" pos:end="123:72"><name pos:start="121:9" pos:end="121:14">av_log</name><argument_list pos:start="121:15" pos:end="123:72">(<argument pos:start="121:16" pos:end="121:20"><expr pos:start="121:16" pos:end="121:20"><name pos:start="121:16" pos:end="121:20">avctx</name></expr></argument>, <argument pos:start="121:23" pos:end="121:34"><expr pos:start="121:23" pos:end="121:34"><name pos:start="121:23" pos:end="121:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="123:16" pos:end="123:71"><expr pos:start="123:16" pos:end="123:71"><literal type="string" pos:start="123:16" pos:end="123:71">"Warning keyframe interval too large! reducing it ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:30"><expr pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:13">avctx</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:23">gop_size</name></name> <operator pos:start="125:25" pos:end="125:25">=</operator> <literal type="number" pos:start="125:27" pos:end="125:29">600</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:38"><expr pos:start="129:5" pos:end="129:37"><name pos:start="129:5" pos:end="129:15"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:15">gop_size</name></name>     <operator pos:start="129:21" pos:end="129:21">=</operator> <name pos:start="129:23" pos:end="129:37"><name pos:start="129:23" pos:end="129:27">avctx</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:37">gop_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:28"><expr pos:start="131:5" pos:end="131:27"><name pos:start="131:5" pos:end="131:12"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:12">avctx</name></name>        <operator pos:start="131:21" pos:end="131:21">=</operator> <name pos:start="131:23" pos:end="131:27">avctx</name></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="139:5"><if pos:start="133:5" pos:end="139:5">if <condition pos:start="133:8" pos:end="133:43">(<expr pos:start="133:9" pos:end="133:42"><name pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:13">avctx</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:27">max_b_frames</name></name> <operator pos:start="133:29" pos:end="133:29">&gt;</operator> <name pos:start="133:31" pos:end="133:42">MAX_B_FRAMES</name></expr>)</condition> <block pos:start="133:45" pos:end="139:5">{<block_content pos:start="135:9" pos:end="137:41">

        <expr_stmt pos:start="135:9" pos:end="137:41"><expr pos:start="135:9" pos:end="137:40"><call pos:start="135:9" pos:end="137:40"><name pos:start="135:9" pos:end="135:14">av_log</name><argument_list pos:start="135:15" pos:end="137:40">(<argument pos:start="135:16" pos:end="135:20"><expr pos:start="135:16" pos:end="135:20"><name pos:start="135:16" pos:end="135:20">avctx</name></expr></argument>, <argument pos:start="135:23" pos:end="135:34"><expr pos:start="135:23" pos:end="135:34"><name pos:start="135:23" pos:end="135:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:37" pos:end="137:25"><expr pos:start="135:37" pos:end="137:25"><literal type="string" pos:start="135:37" pos:end="135:75">"Too many B-frames requested, maximum "</literal>

               <literal type="string" pos:start="137:16" pos:end="137:25">"is %d.\n"</literal></expr></argument>, <argument pos:start="137:28" pos:end="137:39"><expr pos:start="137:28" pos:end="137:39"><name pos:start="137:28" pos:end="137:39">MAX_B_FRAMES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:42"><expr pos:start="141:5" pos:end="141:41"><name pos:start="141:5" pos:end="141:19"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:19">max_b_frames</name></name> <operator pos:start="141:21" pos:end="141:21">=</operator> <name pos:start="141:23" pos:end="141:41"><name pos:start="141:23" pos:end="141:27">avctx</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:41">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:39"><expr pos:start="143:5" pos:end="143:38"><name pos:start="143:5" pos:end="143:15"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:15">codec_id</name></name>     <operator pos:start="143:21" pos:end="143:21">=</operator> <name pos:start="143:23" pos:end="143:38"><name pos:start="143:23" pos:end="143:27">avctx</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:34">codec</name><operator pos:start="143:35" pos:end="143:36">-&gt;</operator><name pos:start="143:37" pos:end="143:38">id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:60"><expr pos:start="145:5" pos:end="145:59"><name pos:start="145:5" pos:end="145:28"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:28">strict_std_compliance</name></name> <operator pos:start="145:30" pos:end="145:30">=</operator> <name pos:start="145:32" pos:end="145:59"><name pos:start="145:32" pos:end="145:36">avctx</name><operator pos:start="145:37" pos:end="145:38">-&gt;</operator><name pos:start="145:39" pos:end="145:59">strict_std_compliance</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:69"><expr pos:start="147:5" pos:end="147:68"><name pos:start="147:5" pos:end="147:21"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:21">quarter_sample</name></name>     <operator pos:start="147:27" pos:end="147:27">=</operator> <operator pos:start="147:29" pos:end="147:29">(</operator><name pos:start="147:30" pos:end="147:41"><name pos:start="147:30" pos:end="147:34">avctx</name><operator pos:start="147:35" pos:end="147:36">-&gt;</operator><name pos:start="147:37" pos:end="147:41">flags</name></name> <operator pos:start="147:43" pos:end="147:43">&amp;</operator> <name pos:start="147:45" pos:end="147:62">AV_CODEC_FLAG_QPEL</name><operator pos:start="147:63" pos:end="147:63">)</operator> <operator pos:start="147:65" pos:end="147:66">!=</operator> <literal type="number" pos:start="147:68" pos:end="147:68">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:46"><expr pos:start="149:5" pos:end="149:45"><name pos:start="149:5" pos:end="149:17"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:17">mpeg_quant</name></name>         <operator pos:start="149:27" pos:end="149:27">=</operator> <name pos:start="149:29" pos:end="149:45"><name pos:start="149:29" pos:end="149:33">avctx</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:45">mpeg_quant</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:54"><expr pos:start="151:5" pos:end="151:53"><name pos:start="151:5" pos:end="151:15"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:15">rtp_mode</name></name>           <operator pos:start="151:27" pos:end="151:27">=</operator> <operator pos:start="151:29" pos:end="151:29">!</operator><operator pos:start="151:30" pos:end="151:30">!</operator><name pos:start="151:31" pos:end="151:53"><name pos:start="151:31" pos:end="151:35">avctx</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:53">rtp_payload_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:54"><expr pos:start="153:5" pos:end="153:53"><name pos:start="153:5" pos:end="153:25"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:25">intra_dc_precision</name></name> <operator pos:start="153:27" pos:end="153:27">=</operator> <name pos:start="153:29" pos:end="153:53"><name pos:start="153:29" pos:end="153:33">avctx</name><operator pos:start="153:34" pos:end="153:35">-&gt;</operator><name pos:start="153:36" pos:end="153:53">intra_dc_precision</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:43"><expr pos:start="155:5" pos:end="155:42"><name pos:start="155:5" pos:end="155:25"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:25">user_specified_pts</name></name> <operator pos:start="155:27" pos:end="155:27">=</operator> <name pos:start="155:29" pos:end="155:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <if_stmt pos:start="159:5" pos:end="174:0"><if pos:start="159:5" pos:end="165:5">if <condition pos:start="159:8" pos:end="159:25">(<expr pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:19"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:19">gop_size</name></name> <operator pos:start="159:21" pos:end="159:22">&lt;=</operator> <literal type="number" pos:start="159:24" pos:end="159:24">1</literal></expr>)</condition> <block pos:start="159:27" pos:end="165:5">{<block_content pos:start="161:9" pos:end="163:27">

        <expr_stmt pos:start="161:9" pos:end="161:26"><expr pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:21">intra_only</name></name> <operator pos:start="161:23" pos:end="161:23">=</operator> <literal type="number" pos:start="161:25" pos:end="161:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:27"><expr pos:start="163:9" pos:end="163:26"><name pos:start="163:9" pos:end="163:19"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:19">gop_size</name></name>   <operator pos:start="163:23" pos:end="163:23">=</operator> <literal type="number" pos:start="163:25" pos:end="163:26">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="165:7" pos:end="174:0">else <block pos:start="165:12" pos:end="174:0">{<block_content pos:start="167:9" pos:end="167:26">

        <expr_stmt pos:start="167:9" pos:end="167:26"><expr pos:start="167:9" pos:end="167:25"><name pos:start="167:9" pos:end="167:21"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:21">intra_only</name></name> <operator pos:start="167:23" pos:end="167:23">=</operator> <literal type="number" pos:start="167:25" pos:end="167:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:if pos:start="173:1" pos:end="173:21">#<cpp:directive pos:start="173:2" pos:end="173:3">if</cpp:directive> <expr pos:start="173:5" pos:end="173:21"><name pos:start="173:5" pos:end="173:21">FF_API_MOTION_EST</name></expr></cpp:if>

<decl_stmt pos:start="175:1" pos:end="177:36"><decl pos:start="175:1" pos:end="177:35"><type pos:start="175:1" pos:end="175:31"><name pos:start="175:1" pos:end="175:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

    <name pos:start="177:5" pos:end="177:16"><name pos:start="177:5" pos:end="177:5">s</name><operator pos:start="177:6" pos:end="177:7">-&gt;</operator><name pos:start="177:8" pos:end="177:16">me_method</name></name> <init pos:start="177:18" pos:end="177:35">= <expr pos:start="177:20" pos:end="177:35"><name pos:start="177:20" pos:end="177:35"><name pos:start="177:20" pos:end="177:24">avctx</name><operator pos:start="177:25" pos:end="177:26">-&gt;</operator><name pos:start="177:27" pos:end="177:35">me_method</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="179:1" pos:end="192:0"><decl pos:start="179:1" pos:end="187:61"><type pos:start="179:1" pos:end="182:0"><name pos:start="179:1" pos:end="182:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="181:1" pos:end="181:6">#<cpp:directive pos:start="181:2" pos:end="181:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="185:5" pos:end="185:22">/* Fixed QSCALE */</comment>

    <name pos:start="187:5" pos:end="187:19"><name pos:start="187:5" pos:end="187:5">s</name><operator pos:start="187:6" pos:end="187:7">-&gt;</operator><name pos:start="187:8" pos:end="187:19">fixed_qscale</name></name> <init pos:start="187:21" pos:end="187:61">= <expr pos:start="187:23" pos:end="187:61"><operator pos:start="187:23" pos:end="187:23">!</operator><operator pos:start="187:24" pos:end="187:24">!</operator><operator pos:start="187:25" pos:end="187:25">(</operator><name pos:start="187:26" pos:end="187:37"><name pos:start="187:26" pos:end="187:30">avctx</name><operator pos:start="187:31" pos:end="187:32">-&gt;</operator><name pos:start="187:33" pos:end="187:37">flags</name></name> <operator pos:start="187:39" pos:end="187:39">&amp;</operator> <name pos:start="187:41" pos:end="187:60">AV_CODEC_FLAG_QSCALE</name><operator pos:start="187:61" pos:end="187:61">)</operator></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="191:1" pos:end="191:18">#<cpp:directive pos:start="191:2" pos:end="191:3">if</cpp:directive> <expr pos:start="191:5" pos:end="191:18"><name pos:start="191:5" pos:end="191:18">FF_API_MPV_OPT</name></expr></cpp:if>

    <macro pos:start="193:5" pos:end="193:35"><name pos:start="193:5" pos:end="193:35">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="195:5" pos:end="197:50"><if pos:start="195:5" pos:end="197:50">if <condition pos:start="195:8" pos:end="195:37">(<expr pos:start="195:9" pos:end="195:36"><name pos:start="195:9" pos:end="195:29"><name pos:start="195:9" pos:end="195:13">avctx</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:29">border_masking</name></name> <operator pos:start="195:31" pos:end="195:32">!=</operator> <literal type="number" pos:start="195:34" pos:end="195:36">0.0</literal></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="197:50"><block_content pos:start="197:9" pos:end="197:50">

        <expr_stmt pos:start="197:9" pos:end="197:50"><expr pos:start="197:9" pos:end="197:49"><name pos:start="197:9" pos:end="197:25"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:25">border_masking</name></name> <operator pos:start="197:27" pos:end="197:27">=</operator> <name pos:start="197:29" pos:end="197:49"><name pos:start="197:29" pos:end="197:33">avctx</name><operator pos:start="197:34" pos:end="197:35">-&gt;</operator><name pos:start="197:36" pos:end="197:49">border_masking</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <decl_stmt pos:start="199:5" pos:end="219:41"><decl pos:start="199:5" pos:end="219:40"><type pos:start="199:5" pos:end="202:0"><name pos:start="199:5" pos:end="202:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="201:1" pos:end="201:6">#<cpp:directive pos:start="201:2" pos:end="201:6">endif</cpp:directive></cpp:endif>



    <name pos:start="205:5" pos:end="205:21"><name pos:start="205:5" pos:end="205:5">s</name><operator pos:start="205:6" pos:end="205:7">-&gt;</operator><name pos:start="205:8" pos:end="205:21">adaptive_quant</name></name> <init pos:start="205:23" pos:end="219:40">= <expr pos:start="205:25" pos:end="219:40"><operator pos:start="205:25" pos:end="205:25">(</operator><name pos:start="205:26" pos:end="205:47"><name pos:start="205:26" pos:end="205:26">s</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:33">avctx</name><operator pos:start="205:34" pos:end="205:35">-&gt;</operator><name pos:start="205:36" pos:end="205:47">lumi_masking</name></name> <operator pos:start="205:49" pos:end="205:50">||</operator>

                         <name pos:start="207:26" pos:end="207:47"><name pos:start="207:26" pos:end="207:26">s</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:33">avctx</name><operator pos:start="207:34" pos:end="207:35">-&gt;</operator><name pos:start="207:36" pos:end="207:47">dark_masking</name></name> <operator pos:start="207:49" pos:end="207:50">||</operator>

                         <name pos:start="209:26" pos:end="209:56"><name pos:start="209:26" pos:end="209:26">s</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:33">avctx</name><operator pos:start="209:34" pos:end="209:35">-&gt;</operator><name pos:start="209:36" pos:end="209:56">temporal_cplx_masking</name></name> <operator pos:start="209:58" pos:end="209:59">||</operator>

                         <name pos:start="211:26" pos:end="211:55"><name pos:start="211:26" pos:end="211:26">s</name><operator pos:start="211:27" pos:end="211:28">-&gt;</operator><name pos:start="211:29" pos:end="211:33">avctx</name><operator pos:start="211:34" pos:end="211:35">-&gt;</operator><name pos:start="211:36" pos:end="211:55">spatial_cplx_masking</name></name>  <operator pos:start="211:58" pos:end="211:59">||</operator>

                         <name pos:start="213:26" pos:end="213:44"><name pos:start="213:26" pos:end="213:26">s</name><operator pos:start="213:27" pos:end="213:28">-&gt;</operator><name pos:start="213:29" pos:end="213:33">avctx</name><operator pos:start="213:34" pos:end="213:35">-&gt;</operator><name pos:start="213:36" pos:end="213:44">p_masking</name></name>      <operator pos:start="213:51" pos:end="213:52">||</operator>

                         <name pos:start="215:26" pos:end="215:42"><name pos:start="215:26" pos:end="215:26">s</name><operator pos:start="215:27" pos:end="215:28">-&gt;</operator><name pos:start="215:29" pos:end="215:42">border_masking</name></name> <operator pos:start="215:44" pos:end="215:45">||</operator>

                         <operator pos:start="217:26" pos:end="217:26">(</operator><name pos:start="217:27" pos:end="217:38"><name pos:start="217:27" pos:end="217:27">s</name><operator pos:start="217:28" pos:end="217:29">-&gt;</operator><name pos:start="217:30" pos:end="217:38">mpv_flags</name></name> <operator pos:start="217:40" pos:end="217:40">&amp;</operator> <name pos:start="217:42" pos:end="217:58">FF_MPV_FLAG_QP_RD</name><operator pos:start="217:59" pos:end="217:59">)</operator><operator pos:start="217:60" pos:end="217:60">)</operator> <operator pos:start="217:62" pos:end="217:63">&amp;&amp;</operator>

                        <operator pos:start="219:25" pos:end="219:25">!</operator><name pos:start="219:26" pos:end="219:40"><name pos:start="219:26" pos:end="219:26">s</name><operator pos:start="219:27" pos:end="219:28">-&gt;</operator><name pos:start="219:29" pos:end="219:40">fixed_qscale</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="223:5" pos:end="223:69"><expr pos:start="223:5" pos:end="223:68"><name pos:start="223:5" pos:end="223:18"><name pos:start="223:5" pos:end="223:5">s</name><operator pos:start="223:6" pos:end="223:7">-&gt;</operator><name pos:start="223:8" pos:end="223:18">loop_filter</name></name> <operator pos:start="223:20" pos:end="223:20">=</operator> <operator pos:start="223:22" pos:end="223:22">!</operator><operator pos:start="223:23" pos:end="223:23">!</operator><operator pos:start="223:24" pos:end="223:24">(</operator><name pos:start="223:25" pos:end="223:39"><name pos:start="223:25" pos:end="223:25">s</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:32">avctx</name><operator pos:start="223:33" pos:end="223:34">-&gt;</operator><name pos:start="223:35" pos:end="223:39">flags</name></name> <operator pos:start="223:41" pos:end="223:41">&amp;</operator> <name pos:start="223:43" pos:end="223:67">AV_CODEC_FLAG_LOOP_FILTER</name><operator pos:start="223:68" pos:end="223:68">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="227:5" pos:end="237:5"><if pos:start="227:5" pos:end="237:5">if <condition pos:start="227:8" pos:end="227:53">(<expr pos:start="227:9" pos:end="227:52"><name pos:start="227:9" pos:end="227:26"><name pos:start="227:9" pos:end="227:13">avctx</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:26">rc_max_rate</name></name> <operator pos:start="227:28" pos:end="227:29">&amp;&amp;</operator> <operator pos:start="227:31" pos:end="227:31">!</operator><name pos:start="227:32" pos:end="227:52"><name pos:start="227:32" pos:end="227:36">avctx</name><operator pos:start="227:37" pos:end="227:38">-&gt;</operator><name pos:start="227:39" pos:end="227:52">rc_buffer_size</name></name></expr>)</condition> <block pos:start="227:55" pos:end="237:5">{<block_content pos:start="229:9" pos:end="235:18">

        <expr_stmt pos:start="229:9" pos:end="233:56"><expr pos:start="229:9" pos:end="233:55"><call pos:start="229:9" pos:end="233:55"><name pos:start="229:9" pos:end="229:14">av_log</name><argument_list pos:start="229:15" pos:end="233:55">(<argument pos:start="229:16" pos:end="229:20"><expr pos:start="229:16" pos:end="229:20"><name pos:start="229:16" pos:end="229:20">avctx</name></expr></argument>, <argument pos:start="229:23" pos:end="229:34"><expr pos:start="229:23" pos:end="229:34"><name pos:start="229:23" pos:end="229:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="231:16" pos:end="233:54"><expr pos:start="231:16" pos:end="233:54"><literal type="string" pos:start="231:16" pos:end="231:46">"a vbv buffer size is needed, "</literal>

               <literal type="string" pos:start="233:16" pos:end="233:54">"for encoding with a maximum bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="235:9" pos:end="235:18">return <expr pos:start="235:16" pos:end="235:17"><operator pos:start="235:16" pos:end="235:16">-</operator><literal type="number" pos:start="235:17" pos:end="235:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="241:5" pos:end="247:5"><if pos:start="241:5" pos:end="247:5">if <condition pos:start="241:8" pos:end="241:71">(<expr pos:start="241:9" pos:end="241:70"><name pos:start="241:9" pos:end="241:26"><name pos:start="241:9" pos:end="241:13">avctx</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:26">rc_min_rate</name></name> <operator pos:start="241:28" pos:end="241:29">&amp;&amp;</operator> <name pos:start="241:31" pos:end="241:48"><name pos:start="241:31" pos:end="241:35">avctx</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:48">rc_max_rate</name></name> <operator pos:start="241:50" pos:end="241:51">!=</operator> <name pos:start="241:53" pos:end="241:70"><name pos:start="241:53" pos:end="241:57">avctx</name><operator pos:start="241:58" pos:end="241:59">-&gt;</operator><name pos:start="241:60" pos:end="241:70">rc_min_rate</name></name></expr>)</condition> <block pos:start="241:73" pos:end="247:5">{<block_content pos:start="243:9" pos:end="245:85">

        <expr_stmt pos:start="243:9" pos:end="245:85"><expr pos:start="243:9" pos:end="245:84"><call pos:start="243:9" pos:end="245:84"><name pos:start="243:9" pos:end="243:14">av_log</name><argument_list pos:start="243:15" pos:end="245:84">(<argument pos:start="243:16" pos:end="243:20"><expr pos:start="243:16" pos:end="243:20"><name pos:start="243:16" pos:end="243:20">avctx</name></expr></argument>, <argument pos:start="243:23" pos:end="243:33"><expr pos:start="243:23" pos:end="243:33"><name pos:start="243:23" pos:end="243:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="245:16" pos:end="245:83"><expr pos:start="245:16" pos:end="245:83"><literal type="string" pos:start="245:16" pos:end="245:83">"Warning min_rate &gt; 0 but min_rate != max_rate isn't recommended!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="251:5" pos:end="257:5"><if pos:start="251:5" pos:end="257:5">if <condition pos:start="251:8" pos:end="251:67">(<expr pos:start="251:9" pos:end="251:66"><name pos:start="251:9" pos:end="251:26"><name pos:start="251:9" pos:end="251:13">avctx</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:26">rc_min_rate</name></name> <operator pos:start="251:28" pos:end="251:29">&amp;&amp;</operator> <name pos:start="251:31" pos:end="251:48"><name pos:start="251:31" pos:end="251:35">avctx</name><operator pos:start="251:36" pos:end="251:37">-&gt;</operator><name pos:start="251:38" pos:end="251:48">rc_min_rate</name></name> <operator pos:start="251:50" pos:end="251:50">&gt;</operator> <name pos:start="251:52" pos:end="251:66"><name pos:start="251:52" pos:end="251:56">avctx</name><operator pos:start="251:57" pos:end="251:58">-&gt;</operator><name pos:start="251:59" pos:end="251:66">bit_rate</name></name></expr>)</condition> <block pos:start="251:69" pos:end="257:5">{<block_content pos:start="253:9" pos:end="255:18">

        <expr_stmt pos:start="253:9" pos:end="253:67"><expr pos:start="253:9" pos:end="253:66"><call pos:start="253:9" pos:end="253:66"><name pos:start="253:9" pos:end="253:14">av_log</name><argument_list pos:start="253:15" pos:end="253:66">(<argument pos:start="253:16" pos:end="253:20"><expr pos:start="253:16" pos:end="253:20"><name pos:start="253:16" pos:end="253:20">avctx</name></expr></argument>, <argument pos:start="253:23" pos:end="253:34"><expr pos:start="253:23" pos:end="253:34"><name pos:start="253:23" pos:end="253:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="253:37" pos:end="253:65"><expr pos:start="253:37" pos:end="253:65"><literal type="string" pos:start="253:37" pos:end="253:65">"bitrate below min bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="255:9" pos:end="255:18">return <expr pos:start="255:16" pos:end="255:17"><operator pos:start="255:16" pos:end="255:16">-</operator><literal type="number" pos:start="255:17" pos:end="255:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="261:5" pos:end="267:5"><if pos:start="261:5" pos:end="267:5">if <condition pos:start="261:8" pos:end="261:67">(<expr pos:start="261:9" pos:end="261:66"><name pos:start="261:9" pos:end="261:26"><name pos:start="261:9" pos:end="261:13">avctx</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:26">rc_max_rate</name></name> <operator pos:start="261:28" pos:end="261:29">&amp;&amp;</operator> <name pos:start="261:31" pos:end="261:48"><name pos:start="261:31" pos:end="261:35">avctx</name><operator pos:start="261:36" pos:end="261:37">-&gt;</operator><name pos:start="261:38" pos:end="261:48">rc_max_rate</name></name> <operator pos:start="261:50" pos:end="261:50">&lt;</operator> <name pos:start="261:52" pos:end="261:66"><name pos:start="261:52" pos:end="261:56">avctx</name><operator pos:start="261:57" pos:end="261:58">-&gt;</operator><name pos:start="261:59" pos:end="261:66">bit_rate</name></name></expr>)</condition> <block pos:start="261:69" pos:end="267:5">{<block_content pos:start="263:9" pos:end="265:18">

        <expr_stmt pos:start="263:9" pos:end="263:66"><expr pos:start="263:9" pos:end="263:65"><call pos:start="263:9" pos:end="263:65"><name pos:start="263:9" pos:end="263:14">av_log</name><argument_list pos:start="263:15" pos:end="263:65">(<argument pos:start="263:16" pos:end="263:20"><expr pos:start="263:16" pos:end="263:20"><name pos:start="263:16" pos:end="263:20">avctx</name></expr></argument>, <argument pos:start="263:23" pos:end="263:33"><expr pos:start="263:23" pos:end="263:33"><name pos:start="263:23" pos:end="263:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="263:36" pos:end="263:64"><expr pos:start="263:36" pos:end="263:64"><literal type="string" pos:start="263:36" pos:end="263:64">"bitrate above max bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="265:9" pos:end="265:18">return <expr pos:start="265:16" pos:end="265:17"><operator pos:start="265:16" pos:end="265:16">-</operator><literal type="number" pos:start="265:17" pos:end="265:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="271:5" pos:end="281:5"><if pos:start="271:5" pos:end="281:5">if <condition pos:start="271:8" pos:end="275:49">(<expr pos:start="271:9" pos:end="275:48"><name pos:start="271:9" pos:end="271:26"><name pos:start="271:9" pos:end="271:13">avctx</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:26">rc_max_rate</name></name> <operator pos:start="271:28" pos:end="271:29">&amp;&amp;</operator>

        <name pos:start="273:9" pos:end="273:26"><name pos:start="273:9" pos:end="273:13">avctx</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:26">rc_max_rate</name></name> <operator pos:start="273:28" pos:end="273:29">==</operator> <name pos:start="273:31" pos:end="273:45"><name pos:start="273:31" pos:end="273:35">avctx</name><operator pos:start="273:36" pos:end="273:37">-&gt;</operator><name pos:start="273:38" pos:end="273:45">bit_rate</name></name> <operator pos:start="273:47" pos:end="273:48">&amp;&amp;</operator>

        <name pos:start="275:9" pos:end="275:26"><name pos:start="275:9" pos:end="275:13">avctx</name><operator pos:start="275:14" pos:end="275:15">-&gt;</operator><name pos:start="275:16" pos:end="275:26">rc_max_rate</name></name> <operator pos:start="275:28" pos:end="275:29">!=</operator> <name pos:start="275:31" pos:end="275:48"><name pos:start="275:31" pos:end="275:35">avctx</name><operator pos:start="275:36" pos:end="275:37">-&gt;</operator><name pos:start="275:38" pos:end="275:48">rc_min_rate</name></name></expr>)</condition> <block pos:start="275:51" pos:end="281:5">{<block_content pos:start="277:9" pos:end="279:67">

        <expr_stmt pos:start="277:9" pos:end="279:67"><expr pos:start="277:9" pos:end="279:66"><call pos:start="277:9" pos:end="279:66"><name pos:start="277:9" pos:end="277:14">av_log</name><argument_list pos:start="277:15" pos:end="279:66">(<argument pos:start="277:16" pos:end="277:20"><expr pos:start="277:16" pos:end="277:20"><name pos:start="277:16" pos:end="277:20">avctx</name></expr></argument>, <argument pos:start="277:23" pos:end="277:33"><expr pos:start="277:23" pos:end="277:33"><name pos:start="277:23" pos:end="277:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="279:16" pos:end="279:65"><expr pos:start="279:16" pos:end="279:65"><literal type="string" pos:start="279:16" pos:end="279:65">"impossible bitrate constraints, this will fail\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="285:5" pos:end="295:5"><if pos:start="285:5" pos:end="295:5">if <condition pos:start="285:8" pos:end="289:66">(<expr pos:start="285:9" pos:end="289:65"><name pos:start="285:9" pos:end="285:29"><name pos:start="285:9" pos:end="285:13">avctx</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:29">rc_buffer_size</name></name> <operator pos:start="285:31" pos:end="285:32">&amp;&amp;</operator>

        <name pos:start="287:9" pos:end="287:23"><name pos:start="287:9" pos:end="287:13">avctx</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:23">bit_rate</name></name> <operator pos:start="287:25" pos:end="287:25">*</operator> <operator pos:start="287:27" pos:end="287:27">(</operator><name pos:start="287:28" pos:end="287:34">int64_t</name><operator pos:start="287:35" pos:end="287:35">)</operator><name pos:start="287:36" pos:end="287:55"><name pos:start="287:36" pos:end="287:40">avctx</name><operator pos:start="287:41" pos:end="287:42">-&gt;</operator><name pos:start="287:43" pos:end="287:51">time_base</name><operator pos:start="287:52" pos:end="287:52">.</operator><name pos:start="287:53" pos:end="287:55">num</name></name> <operator pos:start="287:57" pos:end="287:57">&gt;</operator>

            <name pos:start="289:13" pos:end="289:33"><name pos:start="289:13" pos:end="289:17">avctx</name><operator pos:start="289:18" pos:end="289:19">-&gt;</operator><name pos:start="289:20" pos:end="289:33">rc_buffer_size</name></name> <operator pos:start="289:35" pos:end="289:35">*</operator> <operator pos:start="289:37" pos:end="289:37">(</operator><name pos:start="289:38" pos:end="289:44">int64_t</name><operator pos:start="289:45" pos:end="289:45">)</operator><name pos:start="289:46" pos:end="289:65"><name pos:start="289:46" pos:end="289:50">avctx</name><operator pos:start="289:51" pos:end="289:52">-&gt;</operator><name pos:start="289:53" pos:end="289:61">time_base</name><operator pos:start="289:62" pos:end="289:62">.</operator><name pos:start="289:63" pos:end="289:65">den</name></name></expr>)</condition> <block pos:start="289:68" pos:end="295:5">{<block_content pos:start="291:9" pos:end="293:18">

        <expr_stmt pos:start="291:9" pos:end="291:74"><expr pos:start="291:9" pos:end="291:73"><call pos:start="291:9" pos:end="291:73"><name pos:start="291:9" pos:end="291:14">av_log</name><argument_list pos:start="291:15" pos:end="291:73">(<argument pos:start="291:16" pos:end="291:20"><expr pos:start="291:16" pos:end="291:20"><name pos:start="291:16" pos:end="291:20">avctx</name></expr></argument>, <argument pos:start="291:23" pos:end="291:34"><expr pos:start="291:23" pos:end="291:34"><name pos:start="291:23" pos:end="291:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="291:37" pos:end="291:72"><expr pos:start="291:37" pos:end="291:72"><literal type="string" pos:start="291:37" pos:end="291:72">"VBV buffer too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="293:9" pos:end="293:18">return <expr pos:start="293:16" pos:end="293:17"><operator pos:start="293:16" pos:end="293:16">-</operator><literal type="number" pos:start="293:17" pos:end="293:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="311:5"><if pos:start="299:5" pos:end="311:5">if <condition pos:start="299:8" pos:end="303:38">(<expr pos:start="299:9" pos:end="303:37"><operator pos:start="299:9" pos:end="299:9">!</operator><name pos:start="299:10" pos:end="299:24"><name pos:start="299:10" pos:end="299:10">s</name><operator pos:start="299:11" pos:end="299:12">-&gt;</operator><name pos:start="299:13" pos:end="299:24">fixed_qscale</name></name> <operator pos:start="299:26" pos:end="299:27">&amp;&amp;</operator>

        <name pos:start="301:9" pos:end="301:23"><name pos:start="301:9" pos:end="301:13">avctx</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:23">bit_rate</name></name> <operator pos:start="301:25" pos:end="301:25">*</operator> <call pos:start="301:27" pos:end="301:50"><name pos:start="301:27" pos:end="301:32">av_q2d</name><argument_list pos:start="301:33" pos:end="301:50">(<argument pos:start="301:34" pos:end="301:49"><expr pos:start="301:34" pos:end="301:49"><name pos:start="301:34" pos:end="301:49"><name pos:start="301:34" pos:end="301:38">avctx</name><operator pos:start="301:39" pos:end="301:40">-&gt;</operator><name pos:start="301:41" pos:end="301:49">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="301:52" pos:end="301:52">&gt;</operator>

            <name pos:start="303:13" pos:end="303:37"><name pos:start="303:13" pos:end="303:17">avctx</name><operator pos:start="303:18" pos:end="303:19">-&gt;</operator><name pos:start="303:20" pos:end="303:37">bit_rate_tolerance</name></name></expr>)</condition> <block pos:start="303:40" pos:end="311:5">{<block_content pos:start="305:9" pos:end="309:18">

        <expr_stmt pos:start="305:9" pos:end="307:60"><expr pos:start="305:9" pos:end="307:59"><call pos:start="305:9" pos:end="307:59"><name pos:start="305:9" pos:end="305:14">av_log</name><argument_list pos:start="305:15" pos:end="307:59">(<argument pos:start="305:16" pos:end="305:20"><expr pos:start="305:16" pos:end="305:20"><name pos:start="305:16" pos:end="305:20">avctx</name></expr></argument>, <argument pos:start="305:23" pos:end="305:34"><expr pos:start="305:23" pos:end="305:34"><name pos:start="305:23" pos:end="305:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="307:16" pos:end="307:58"><expr pos:start="307:16" pos:end="307:58"><literal type="string" pos:start="307:16" pos:end="307:58">"bitrate tolerance too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="309:9" pos:end="309:18">return <expr pos:start="309:16" pos:end="309:17"><operator pos:start="309:16" pos:end="309:16">-</operator><literal type="number" pos:start="309:17" pos:end="309:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="315:5" pos:end="333:5"><if pos:start="315:5" pos:end="333:5">if <condition pos:start="315:8" pos:end="325:45">(<expr pos:start="315:9" pos:end="325:44"><name pos:start="315:9" pos:end="315:29"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:16">avctx</name><operator pos:start="315:17" pos:end="315:18">-&gt;</operator><name pos:start="315:19" pos:end="315:29">rc_max_rate</name></name> <operator pos:start="315:31" pos:end="315:32">&amp;&amp;</operator>

        <name pos:start="317:9" pos:end="317:29"><name pos:start="317:9" pos:end="317:9">s</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:16">avctx</name><operator pos:start="317:17" pos:end="317:18">-&gt;</operator><name pos:start="317:19" pos:end="317:29">rc_min_rate</name></name> <operator pos:start="317:31" pos:end="317:32">==</operator> <name pos:start="317:34" pos:end="317:54"><name pos:start="317:34" pos:end="317:34">s</name><operator pos:start="317:35" pos:end="317:36">-&gt;</operator><name pos:start="317:37" pos:end="317:41">avctx</name><operator pos:start="317:42" pos:end="317:43">-&gt;</operator><name pos:start="317:44" pos:end="317:54">rc_max_rate</name></name> <operator pos:start="317:56" pos:end="317:57">&amp;&amp;</operator>

        <operator pos:start="319:9" pos:end="319:9">(</operator><name pos:start="319:10" pos:end="319:20"><name pos:start="319:10" pos:end="319:10">s</name><operator pos:start="319:11" pos:end="319:12">-&gt;</operator><name pos:start="319:13" pos:end="319:20">codec_id</name></name> <operator pos:start="319:22" pos:end="319:23">==</operator> <name pos:start="319:25" pos:end="319:46">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="319:48" pos:end="319:49">||</operator>

         <name pos:start="321:10" pos:end="321:20"><name pos:start="321:10" pos:end="321:10">s</name><operator pos:start="321:11" pos:end="321:12">-&gt;</operator><name pos:start="321:13" pos:end="321:20">codec_id</name></name> <operator pos:start="321:22" pos:end="321:23">==</operator> <name pos:start="321:25" pos:end="321:46">AV_CODEC_ID_MPEG2VIDEO</name><operator pos:start="321:47" pos:end="321:47">)</operator> <operator pos:start="321:49" pos:end="321:50">&amp;&amp;</operator>

        <literal type="number" pos:start="323:9" pos:end="323:15">90000LL</literal> <operator pos:start="323:17" pos:end="323:17">*</operator> <operator pos:start="323:19" pos:end="323:19">(</operator><name pos:start="323:20" pos:end="323:40"><name pos:start="323:20" pos:end="323:24">avctx</name><operator pos:start="323:25" pos:end="323:26">-&gt;</operator><name pos:start="323:27" pos:end="323:40">rc_buffer_size</name></name> <operator pos:start="323:42" pos:end="323:42">-</operator> <literal type="number" pos:start="323:44" pos:end="323:44">1</literal><operator pos:start="323:45" pos:end="323:45">)</operator> <operator pos:start="323:47" pos:end="323:47">&gt;</operator>

            <name pos:start="325:13" pos:end="325:33"><name pos:start="325:13" pos:end="325:13">s</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:20">avctx</name><operator pos:start="325:21" pos:end="325:22">-&gt;</operator><name pos:start="325:23" pos:end="325:33">rc_max_rate</name></name> <operator pos:start="325:35" pos:end="325:35">*</operator> <literal type="number" pos:start="325:37" pos:end="325:44">0xFFFFLL</literal></expr>)</condition> <block pos:start="325:47" pos:end="333:5">{<block_content pos:start="327:9" pos:end="331:77">

        <expr_stmt pos:start="327:9" pos:end="331:77"><expr pos:start="327:9" pos:end="331:76"><call pos:start="327:9" pos:end="331:76"><name pos:start="327:9" pos:end="327:14">av_log</name><argument_list pos:start="327:15" pos:end="331:76">(<argument pos:start="327:16" pos:end="327:20"><expr pos:start="327:16" pos:end="327:20"><name pos:start="327:16" pos:end="327:20">avctx</name></expr></argument>, <argument pos:start="327:23" pos:end="327:33"><expr pos:start="327:23" pos:end="327:33"><name pos:start="327:23" pos:end="327:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="329:16" pos:end="331:75"><expr pos:start="329:16" pos:end="331:75"><literal type="string" pos:start="329:16" pos:end="329:71">"Warning vbv_delay will be set to 0xFFFF (=VBR) as the "</literal>

               <literal type="string" pos:start="331:16" pos:end="331:75">"specified vbv buffer is too large for the given bitrate!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="337:5" pos:end="347:5"><if pos:start="337:5" pos:end="347:5">if <condition pos:start="337:8" pos:end="341:40">(<expr pos:start="337:9" pos:end="341:39"><operator pos:start="337:9" pos:end="337:9">(</operator><name pos:start="337:10" pos:end="337:24"><name pos:start="337:10" pos:end="337:10">s</name><operator pos:start="337:11" pos:end="337:12">-&gt;</operator><name pos:start="337:13" pos:end="337:17">avctx</name><operator pos:start="337:18" pos:end="337:19">-&gt;</operator><name pos:start="337:20" pos:end="337:24">flags</name></name> <operator pos:start="337:26" pos:end="337:26">&amp;</operator> <name pos:start="337:28" pos:end="337:44">AV_CODEC_FLAG_4MV</name><operator pos:start="337:45" pos:end="337:45">)</operator> <operator pos:start="337:47" pos:end="337:48">&amp;&amp;</operator> <name pos:start="337:50" pos:end="337:60"><name pos:start="337:50" pos:end="337:50">s</name><operator pos:start="337:51" pos:end="337:52">-&gt;</operator><name pos:start="337:53" pos:end="337:60">codec_id</name></name> <operator pos:start="337:62" pos:end="337:63">!=</operator> <name pos:start="337:65" pos:end="337:81">AV_CODEC_ID_MPEG4</name> <operator pos:start="337:83" pos:end="337:84">&amp;&amp;</operator>

        <name pos:start="339:9" pos:end="339:19"><name pos:start="339:9" pos:end="339:9">s</name><operator pos:start="339:10" pos:end="339:11">-&gt;</operator><name pos:start="339:12" pos:end="339:19">codec_id</name></name> <operator pos:start="339:21" pos:end="339:22">!=</operator> <name pos:start="339:24" pos:end="339:39">AV_CODEC_ID_H263</name> <operator pos:start="339:41" pos:end="339:42">&amp;&amp;</operator> <name pos:start="339:44" pos:end="339:54"><name pos:start="339:44" pos:end="339:44">s</name><operator pos:start="339:45" pos:end="339:46">-&gt;</operator><name pos:start="339:47" pos:end="339:54">codec_id</name></name> <operator pos:start="339:56" pos:end="339:57">!=</operator> <name pos:start="339:59" pos:end="339:75">AV_CODEC_ID_H263P</name> <operator pos:start="339:77" pos:end="339:78">&amp;&amp;</operator>

        <name pos:start="341:9" pos:end="341:19"><name pos:start="341:9" pos:end="341:9">s</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:19">codec_id</name></name> <operator pos:start="341:21" pos:end="341:22">!=</operator> <name pos:start="341:24" pos:end="341:39">AV_CODEC_ID_FLV1</name></expr>)</condition> <block pos:start="341:42" pos:end="347:5">{<block_content pos:start="343:9" pos:end="345:18">

        <expr_stmt pos:start="343:9" pos:end="343:68"><expr pos:start="343:9" pos:end="343:67"><call pos:start="343:9" pos:end="343:67"><name pos:start="343:9" pos:end="343:14">av_log</name><argument_list pos:start="343:15" pos:end="343:67">(<argument pos:start="343:16" pos:end="343:20"><expr pos:start="343:16" pos:end="343:20"><name pos:start="343:16" pos:end="343:20">avctx</name></expr></argument>, <argument pos:start="343:23" pos:end="343:34"><expr pos:start="343:23" pos:end="343:34"><name pos:start="343:23" pos:end="343:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="343:37" pos:end="343:66"><expr pos:start="343:37" pos:end="343:66"><literal type="string" pos:start="343:37" pos:end="343:66">"4MV not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="345:9" pos:end="345:18">return <expr pos:start="345:16" pos:end="345:17"><operator pos:start="345:16" pos:end="345:16">-</operator><literal type="number" pos:start="345:17" pos:end="345:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="351:5" pos:end="359:5"><if pos:start="351:5" pos:end="359:5">if <condition pos:start="351:8" pos:end="351:66">(<expr pos:start="351:9" pos:end="351:65"><name pos:start="351:9" pos:end="351:15"><name pos:start="351:9" pos:end="351:9">s</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:15">obmc</name></name> <operator pos:start="351:17" pos:end="351:18">&amp;&amp;</operator> <name pos:start="351:20" pos:end="351:40"><name pos:start="351:20" pos:end="351:20">s</name><operator pos:start="351:21" pos:end="351:22">-&gt;</operator><name pos:start="351:23" pos:end="351:27">avctx</name><operator pos:start="351:28" pos:end="351:29">-&gt;</operator><name pos:start="351:30" pos:end="351:40">mb_decision</name></name> <operator pos:start="351:42" pos:end="351:43">!=</operator> <name pos:start="351:45" pos:end="351:65">FF_MB_DECISION_SIMPLE</name></expr>)</condition> <block pos:start="351:68" pos:end="359:5">{<block_content pos:start="353:9" pos:end="357:18">

        <expr_stmt pos:start="353:9" pos:end="355:67"><expr pos:start="353:9" pos:end="355:66"><call pos:start="353:9" pos:end="355:66"><name pos:start="353:9" pos:end="353:14">av_log</name><argument_list pos:start="353:15" pos:end="355:66">(<argument pos:start="353:16" pos:end="353:20"><expr pos:start="353:16" pos:end="353:20"><name pos:start="353:16" pos:end="353:20">avctx</name></expr></argument>, <argument pos:start="353:23" pos:end="353:34"><expr pos:start="353:23" pos:end="353:34"><name pos:start="353:23" pos:end="353:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="355:16" pos:end="355:65"><expr pos:start="355:16" pos:end="355:65"><literal type="string" pos:start="355:16" pos:end="355:65">"OBMC is only supported with simple mb decision\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="357:9" pos:end="357:18">return <expr pos:start="357:16" pos:end="357:17"><operator pos:start="357:16" pos:end="357:16">-</operator><literal type="number" pos:start="357:17" pos:end="357:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="363:5" pos:end="369:5"><if pos:start="363:5" pos:end="369:5">if <condition pos:start="363:8" pos:end="363:62">(<expr pos:start="363:9" pos:end="363:61"><name pos:start="363:9" pos:end="363:25"><name pos:start="363:9" pos:end="363:9">s</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:25">quarter_sample</name></name> <operator pos:start="363:27" pos:end="363:28">&amp;&amp;</operator> <name pos:start="363:30" pos:end="363:40"><name pos:start="363:30" pos:end="363:30">s</name><operator pos:start="363:31" pos:end="363:32">-&gt;</operator><name pos:start="363:33" pos:end="363:40">codec_id</name></name> <operator pos:start="363:42" pos:end="363:43">!=</operator> <name pos:start="363:45" pos:end="363:61">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="363:64" pos:end="369:5">{<block_content pos:start="365:9" pos:end="367:18">

        <expr_stmt pos:start="365:9" pos:end="365:69"><expr pos:start="365:9" pos:end="365:68"><call pos:start="365:9" pos:end="365:68"><name pos:start="365:9" pos:end="365:14">av_log</name><argument_list pos:start="365:15" pos:end="365:68">(<argument pos:start="365:16" pos:end="365:20"><expr pos:start="365:16" pos:end="365:20"><name pos:start="365:16" pos:end="365:20">avctx</name></expr></argument>, <argument pos:start="365:23" pos:end="365:34"><expr pos:start="365:23" pos:end="365:34"><name pos:start="365:23" pos:end="365:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="365:37" pos:end="365:67"><expr pos:start="365:37" pos:end="365:67"><literal type="string" pos:start="365:37" pos:end="365:67">"qpel not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="367:9" pos:end="367:18">return <expr pos:start="367:16" pos:end="367:17"><operator pos:start="367:16" pos:end="367:16">-</operator><literal type="number" pos:start="367:17" pos:end="367:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="373:5" pos:end="385:5"><if pos:start="373:5" pos:end="385:5">if <condition pos:start="373:8" pos:end="379:46">(<expr pos:start="373:9" pos:end="379:45"><name pos:start="373:9" pos:end="373:23"><name pos:start="373:9" pos:end="373:9">s</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:23">max_b_frames</name></name>                    <operator pos:start="373:44" pos:end="373:45">&amp;&amp;</operator>

        <name pos:start="375:9" pos:end="375:19"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:19">codec_id</name></name> <operator pos:start="375:21" pos:end="375:22">!=</operator> <name pos:start="375:24" pos:end="375:40">AV_CODEC_ID_MPEG4</name>      <operator pos:start="375:47" pos:end="375:48">&amp;&amp;</operator>

        <name pos:start="377:9" pos:end="377:19"><name pos:start="377:9" pos:end="377:9">s</name><operator pos:start="377:10" pos:end="377:11">-&gt;</operator><name pos:start="377:12" pos:end="377:19">codec_id</name></name> <operator pos:start="377:21" pos:end="377:22">!=</operator> <name pos:start="377:24" pos:end="377:45">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="377:47" pos:end="377:48">&amp;&amp;</operator>

        <name pos:start="379:9" pos:end="379:19"><name pos:start="379:9" pos:end="379:9">s</name><operator pos:start="379:10" pos:end="379:11">-&gt;</operator><name pos:start="379:12" pos:end="379:19">codec_id</name></name> <operator pos:start="379:21" pos:end="379:22">!=</operator> <name pos:start="379:24" pos:end="379:45">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="379:48" pos:end="385:5">{<block_content pos:start="381:9" pos:end="383:18">

        <expr_stmt pos:start="381:9" pos:end="381:73"><expr pos:start="381:9" pos:end="381:72"><call pos:start="381:9" pos:end="381:72"><name pos:start="381:9" pos:end="381:14">av_log</name><argument_list pos:start="381:15" pos:end="381:72">(<argument pos:start="381:16" pos:end="381:20"><expr pos:start="381:16" pos:end="381:20"><name pos:start="381:16" pos:end="381:20">avctx</name></expr></argument>, <argument pos:start="381:23" pos:end="381:34"><expr pos:start="381:23" pos:end="381:34"><name pos:start="381:23" pos:end="381:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="381:37" pos:end="381:71"><expr pos:start="381:37" pos:end="381:71"><literal type="string" pos:start="381:37" pos:end="381:71">"b frames not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="383:9" pos:end="383:18">return <expr pos:start="383:16" pos:end="383:17"><operator pos:start="383:16" pos:end="383:16">-</operator><literal type="number" pos:start="383:17" pos:end="383:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="389:5" pos:end="407:5"><if pos:start="389:5" pos:end="407:5">if <condition pos:start="389:8" pos:end="397:47">(<expr pos:start="389:9" pos:end="397:46"><operator pos:start="389:9" pos:end="389:9">(</operator><name pos:start="389:10" pos:end="389:20"><name pos:start="389:10" pos:end="389:10">s</name><operator pos:start="389:11" pos:end="389:12">-&gt;</operator><name pos:start="389:13" pos:end="389:20">codec_id</name></name> <operator pos:start="389:22" pos:end="389:23">==</operator> <name pos:start="389:25" pos:end="389:41">AV_CODEC_ID_MPEG4</name> <operator pos:start="389:43" pos:end="389:44">||</operator>

         <name pos:start="391:10" pos:end="391:20"><name pos:start="391:10" pos:end="391:10">s</name><operator pos:start="391:11" pos:end="391:12">-&gt;</operator><name pos:start="391:13" pos:end="391:20">codec_id</name></name> <operator pos:start="391:22" pos:end="391:23">==</operator> <name pos:start="391:25" pos:end="391:40">AV_CODEC_ID_H263</name>  <operator pos:start="391:43" pos:end="391:44">||</operator>

         <name pos:start="393:10" pos:end="393:20"><name pos:start="393:10" pos:end="393:10">s</name><operator pos:start="393:11" pos:end="393:12">-&gt;</operator><name pos:start="393:13" pos:end="393:20">codec_id</name></name> <operator pos:start="393:22" pos:end="393:23">==</operator> <name pos:start="393:25" pos:end="393:41">AV_CODEC_ID_H263P</name><operator pos:start="393:42" pos:end="393:42">)</operator> <operator pos:start="393:44" pos:end="393:45">&amp;&amp;</operator>

        <operator pos:start="395:9" pos:end="395:9">(</operator><name pos:start="395:10" pos:end="395:39"><name pos:start="395:10" pos:end="395:14">avctx</name><operator pos:start="395:15" pos:end="395:16">-&gt;</operator><name pos:start="395:17" pos:end="395:35">sample_aspect_ratio</name><operator pos:start="395:36" pos:end="395:36">.</operator><name pos:start="395:37" pos:end="395:39">num</name></name> <operator pos:start="395:41" pos:end="395:41">&gt;</operator> <literal type="number" pos:start="395:43" pos:end="395:45">255</literal> <operator pos:start="395:47" pos:end="395:48">||</operator>

         <name pos:start="397:10" pos:end="397:39"><name pos:start="397:10" pos:end="397:14">avctx</name><operator pos:start="397:15" pos:end="397:16">-&gt;</operator><name pos:start="397:17" pos:end="397:35">sample_aspect_ratio</name><operator pos:start="397:36" pos:end="397:36">.</operator><name pos:start="397:37" pos:end="397:39">den</name></name> <operator pos:start="397:41" pos:end="397:41">&gt;</operator> <literal type="number" pos:start="397:43" pos:end="397:45">255</literal><operator pos:start="397:46" pos:end="397:46">)</operator></expr>)</condition> <block pos:start="397:49" pos:end="407:5">{<block_content pos:start="399:9" pos:end="405:18">

        <expr_stmt pos:start="399:9" pos:end="403:79"><expr pos:start="399:9" pos:end="403:78"><call pos:start="399:9" pos:end="403:78"><name pos:start="399:9" pos:end="399:14">av_log</name><argument_list pos:start="399:15" pos:end="403:78">(<argument pos:start="399:16" pos:end="399:20"><expr pos:start="399:16" pos:end="399:20"><name pos:start="399:16" pos:end="399:20">avctx</name></expr></argument>, <argument pos:start="399:23" pos:end="399:34"><expr pos:start="399:23" pos:end="399:34"><name pos:start="399:23" pos:end="399:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="401:16" pos:end="401:69"><expr pos:start="401:16" pos:end="401:69"><literal type="string" pos:start="401:16" pos:end="401:69">"Invalid pixel aspect ratio %i/%i, limit is 255/255\n"</literal></expr></argument>,

               <argument pos:start="403:16" pos:end="403:45"><expr pos:start="403:16" pos:end="403:45"><name pos:start="403:16" pos:end="403:45"><name pos:start="403:16" pos:end="403:20">avctx</name><operator pos:start="403:21" pos:end="403:22">-&gt;</operator><name pos:start="403:23" pos:end="403:41">sample_aspect_ratio</name><operator pos:start="403:42" pos:end="403:42">.</operator><name pos:start="403:43" pos:end="403:45">num</name></name></expr></argument>, <argument pos:start="403:48" pos:end="403:77"><expr pos:start="403:48" pos:end="403:77"><name pos:start="403:48" pos:end="403:77"><name pos:start="403:48" pos:end="403:52">avctx</name><operator pos:start="403:53" pos:end="403:54">-&gt;</operator><name pos:start="403:55" pos:end="403:73">sample_aspect_ratio</name><operator pos:start="403:74" pos:end="403:74">.</operator><name pos:start="403:75" pos:end="403:77">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="405:9" pos:end="405:18">return <expr pos:start="405:16" pos:end="405:17"><operator pos:start="405:16" pos:end="405:16">-</operator><literal type="number" pos:start="405:17" pos:end="405:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="411:5" pos:end="419:5"><if pos:start="411:5" pos:end="419:5">if <condition pos:start="411:8" pos:end="413:82">(<expr pos:start="411:9" pos:end="413:81"><operator pos:start="411:9" pos:end="411:9">(</operator><name pos:start="411:10" pos:end="411:24"><name pos:start="411:10" pos:end="411:10">s</name><operator pos:start="411:11" pos:end="411:12">-&gt;</operator><name pos:start="411:13" pos:end="411:17">avctx</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:24">flags</name></name> <operator pos:start="411:26" pos:end="411:26">&amp;</operator> <operator pos:start="411:28" pos:end="411:28">(</operator><name pos:start="411:29" pos:end="411:56">AV_CODEC_FLAG_INTERLACED_DCT</name> <operator pos:start="411:58" pos:end="411:58">|</operator> <name pos:start="411:60" pos:end="411:86">AV_CODEC_FLAG_INTERLACED_ME</name><operator pos:start="411:87" pos:end="411:87">)</operator><operator pos:start="411:88" pos:end="411:88">)</operator> <operator pos:start="411:90" pos:end="411:91">&amp;&amp;</operator>

        <name pos:start="413:9" pos:end="413:19"><name pos:start="413:9" pos:end="413:9">s</name><operator pos:start="413:10" pos:end="413:11">-&gt;</operator><name pos:start="413:12" pos:end="413:19">codec_id</name></name> <operator pos:start="413:21" pos:end="413:22">!=</operator> <name pos:start="413:24" pos:end="413:40">AV_CODEC_ID_MPEG4</name> <operator pos:start="413:42" pos:end="413:43">&amp;&amp;</operator> <name pos:start="413:45" pos:end="413:55"><name pos:start="413:45" pos:end="413:45">s</name><operator pos:start="413:46" pos:end="413:47">-&gt;</operator><name pos:start="413:48" pos:end="413:55">codec_id</name></name> <operator pos:start="413:57" pos:end="413:58">!=</operator> <name pos:start="413:60" pos:end="413:81">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="413:84" pos:end="419:5">{<block_content pos:start="415:9" pos:end="417:18">

        <expr_stmt pos:start="415:9" pos:end="415:76"><expr pos:start="415:9" pos:end="415:75"><call pos:start="415:9" pos:end="415:75"><name pos:start="415:9" pos:end="415:14">av_log</name><argument_list pos:start="415:15" pos:end="415:75">(<argument pos:start="415:16" pos:end="415:20"><expr pos:start="415:16" pos:end="415:20"><name pos:start="415:16" pos:end="415:20">avctx</name></expr></argument>, <argument pos:start="415:23" pos:end="415:34"><expr pos:start="415:23" pos:end="415:34"><name pos:start="415:23" pos:end="415:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="415:37" pos:end="415:74"><expr pos:start="415:37" pos:end="415:74"><literal type="string" pos:start="415:37" pos:end="415:74">"interlacing not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="417:9" pos:end="417:18">return <expr pos:start="417:16" pos:end="417:17"><operator pos:start="417:16" pos:end="417:16">-</operator><literal type="number" pos:start="417:17" pos:end="417:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="423:5" pos:end="423:32">// FIXME mpeg2 uses that too</comment>

    <if_stmt pos:start="425:5" pos:end="433:5"><if pos:start="425:5" pos:end="433:5">if <condition pos:start="425:8" pos:end="425:58">(<expr pos:start="425:9" pos:end="425:57"><name pos:start="425:9" pos:end="425:21"><name pos:start="425:9" pos:end="425:9">s</name><operator pos:start="425:10" pos:end="425:11">-&gt;</operator><name pos:start="425:12" pos:end="425:21">mpeg_quant</name></name> <operator pos:start="425:23" pos:end="425:24">&amp;&amp;</operator> <name pos:start="425:26" pos:end="425:36"><name pos:start="425:26" pos:end="425:26">s</name><operator pos:start="425:27" pos:end="425:28">-&gt;</operator><name pos:start="425:29" pos:end="425:36">codec_id</name></name> <operator pos:start="425:38" pos:end="425:39">!=</operator> <name pos:start="425:41" pos:end="425:57">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="425:60" pos:end="433:5">{<block_content pos:start="427:9" pos:end="431:18">

        <expr_stmt pos:start="427:9" pos:end="429:68"><expr pos:start="427:9" pos:end="429:67"><call pos:start="427:9" pos:end="429:67"><name pos:start="427:9" pos:end="427:14">av_log</name><argument_list pos:start="427:15" pos:end="429:67">(<argument pos:start="427:16" pos:end="427:20"><expr pos:start="427:16" pos:end="427:20"><name pos:start="427:16" pos:end="427:20">avctx</name></expr></argument>, <argument pos:start="427:23" pos:end="427:34"><expr pos:start="427:23" pos:end="427:34"><name pos:start="427:23" pos:end="427:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="429:16" pos:end="429:66"><expr pos:start="429:16" pos:end="429:66"><literal type="string" pos:start="429:16" pos:end="429:66">"mpeg2 style quantization not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="431:9" pos:end="431:18">return <expr pos:start="431:16" pos:end="431:17"><operator pos:start="431:16" pos:end="431:16">-</operator><literal type="number" pos:start="431:17" pos:end="431:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="437:5" pos:end="443:5"><if pos:start="437:5" pos:end="443:5">if <condition pos:start="437:8" pos:end="437:63">(<expr pos:start="437:9" pos:end="437:62"><operator pos:start="437:9" pos:end="437:9">(</operator><name pos:start="437:10" pos:end="437:21"><name pos:start="437:10" pos:end="437:10">s</name><operator pos:start="437:11" pos:end="437:12">-&gt;</operator><name pos:start="437:13" pos:end="437:21">mpv_flags</name></name> <operator pos:start="437:23" pos:end="437:23">&amp;</operator> <name pos:start="437:25" pos:end="437:42">FF_MPV_FLAG_CBP_RD</name><operator pos:start="437:43" pos:end="437:43">)</operator> <operator pos:start="437:45" pos:end="437:46">&amp;&amp;</operator> <operator pos:start="437:48" pos:end="437:48">!</operator><name pos:start="437:49" pos:end="437:62"><name pos:start="437:49" pos:end="437:53">avctx</name><operator pos:start="437:54" pos:end="437:55">-&gt;</operator><name pos:start="437:56" pos:end="437:62">trellis</name></name></expr>)</condition> <block pos:start="437:65" pos:end="443:5">{<block_content pos:start="439:9" pos:end="441:18">

        <expr_stmt pos:start="439:9" pos:end="439:68"><expr pos:start="439:9" pos:end="439:67"><call pos:start="439:9" pos:end="439:67"><name pos:start="439:9" pos:end="439:14">av_log</name><argument_list pos:start="439:15" pos:end="439:67">(<argument pos:start="439:16" pos:end="439:20"><expr pos:start="439:16" pos:end="439:20"><name pos:start="439:16" pos:end="439:20">avctx</name></expr></argument>, <argument pos:start="439:23" pos:end="439:34"><expr pos:start="439:23" pos:end="439:34"><name pos:start="439:23" pos:end="439:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="439:37" pos:end="439:66"><expr pos:start="439:37" pos:end="439:66"><literal type="string" pos:start="439:37" pos:end="439:66">"CBP RD needs trellis quant\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="441:9" pos:end="441:18">return <expr pos:start="441:16" pos:end="441:17"><operator pos:start="441:16" pos:end="441:16">-</operator><literal type="number" pos:start="441:17" pos:end="441:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="447:5" pos:end="455:5"><if pos:start="447:5" pos:end="455:5">if <condition pos:start="447:8" pos:end="449:51">(<expr pos:start="447:9" pos:end="449:50"><operator pos:start="447:9" pos:end="447:9">(</operator><name pos:start="447:10" pos:end="447:21"><name pos:start="447:10" pos:end="447:10">s</name><operator pos:start="447:11" pos:end="447:12">-&gt;</operator><name pos:start="447:13" pos:end="447:21">mpv_flags</name></name> <operator pos:start="447:23" pos:end="447:23">&amp;</operator> <name pos:start="447:25" pos:end="447:41">FF_MPV_FLAG_QP_RD</name><operator pos:start="447:42" pos:end="447:42">)</operator> <operator pos:start="447:44" pos:end="447:45">&amp;&amp;</operator>

        <name pos:start="449:9" pos:end="449:29"><name pos:start="449:9" pos:end="449:9">s</name><operator pos:start="449:10" pos:end="449:11">-&gt;</operator><name pos:start="449:12" pos:end="449:16">avctx</name><operator pos:start="449:17" pos:end="449:18">-&gt;</operator><name pos:start="449:19" pos:end="449:29">mb_decision</name></name> <operator pos:start="449:31" pos:end="449:32">!=</operator> <name pos:start="449:34" pos:end="449:50">FF_MB_DECISION_RD</name></expr>)</condition> <block pos:start="449:53" pos:end="455:5">{<block_content pos:start="451:9" pos:end="453:18">

        <expr_stmt pos:start="451:9" pos:end="451:59"><expr pos:start="451:9" pos:end="451:58"><call pos:start="451:9" pos:end="451:58"><name pos:start="451:9" pos:end="451:14">av_log</name><argument_list pos:start="451:15" pos:end="451:58">(<argument pos:start="451:16" pos:end="451:20"><expr pos:start="451:16" pos:end="451:20"><name pos:start="451:16" pos:end="451:20">avctx</name></expr></argument>, <argument pos:start="451:23" pos:end="451:34"><expr pos:start="451:23" pos:end="451:34"><name pos:start="451:23" pos:end="451:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="451:37" pos:end="451:57"><expr pos:start="451:37" pos:end="451:57"><literal type="string" pos:start="451:37" pos:end="451:57">"QP RD needs mbd=2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="453:9" pos:end="453:18">return <expr pos:start="453:16" pos:end="453:17"><operator pos:start="453:16" pos:end="453:16">-</operator><literal type="number" pos:start="453:17" pos:end="453:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="459:5" pos:end="471:5"><if pos:start="459:5" pos:end="471:5">if <condition pos:start="459:8" pos:end="461:53">(<expr pos:start="459:9" pos:end="461:52"><name pos:start="459:9" pos:end="459:39"><name pos:start="459:9" pos:end="459:9">s</name><operator pos:start="459:10" pos:end="459:11">-&gt;</operator><name pos:start="459:12" pos:end="459:16">avctx</name><operator pos:start="459:17" pos:end="459:18">-&gt;</operator><name pos:start="459:19" pos:end="459:39">scenechange_threshold</name></name> <operator pos:start="459:41" pos:end="459:41">&lt;</operator> <literal type="number" pos:start="459:43" pos:end="459:52">1000000000</literal> <operator pos:start="459:54" pos:end="459:55">&amp;&amp;</operator>

        <operator pos:start="461:9" pos:end="461:9">(</operator><name pos:start="461:10" pos:end="461:24"><name pos:start="461:10" pos:end="461:10">s</name><operator pos:start="461:11" pos:end="461:12">-&gt;</operator><name pos:start="461:13" pos:end="461:17">avctx</name><operator pos:start="461:18" pos:end="461:19">-&gt;</operator><name pos:start="461:20" pos:end="461:24">flags</name></name> <operator pos:start="461:26" pos:end="461:26">&amp;</operator> <name pos:start="461:28" pos:end="461:51">AV_CODEC_FLAG_CLOSED_GOP</name><operator pos:start="461:52" pos:end="461:52">)</operator></expr>)</condition> <block pos:start="461:55" pos:end="471:5">{<block_content pos:start="463:9" pos:end="469:18">

        <expr_stmt pos:start="463:9" pos:end="467:48"><expr pos:start="463:9" pos:end="467:47"><call pos:start="463:9" pos:end="467:47"><name pos:start="463:9" pos:end="463:14">av_log</name><argument_list pos:start="463:15" pos:end="467:47">(<argument pos:start="463:16" pos:end="463:20"><expr pos:start="463:16" pos:end="463:20"><name pos:start="463:16" pos:end="463:20">avctx</name></expr></argument>, <argument pos:start="463:23" pos:end="463:34"><expr pos:start="463:23" pos:end="463:34"><name pos:start="463:23" pos:end="463:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="465:16" pos:end="467:46"><expr pos:start="465:16" pos:end="467:46"><literal type="string" pos:start="465:16" pos:end="465:79">"closed gop with scene change detection are not supported yet, "</literal>

               <literal type="string" pos:start="467:16" pos:end="467:46">"set threshold to 1000000000\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="469:9" pos:end="469:18">return <expr pos:start="469:16" pos:end="469:17"><operator pos:start="469:16" pos:end="469:16">-</operator><literal type="number" pos:start="469:17" pos:end="469:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="475:5" pos:end="497:5"><if pos:start="475:5" pos:end="497:5">if <condition pos:start="475:8" pos:end="475:50">(<expr pos:start="475:9" pos:end="475:49"><name pos:start="475:9" pos:end="475:23"><name pos:start="475:9" pos:end="475:9">s</name><operator pos:start="475:10" pos:end="475:11">-&gt;</operator><name pos:start="475:12" pos:end="475:16">avctx</name><operator pos:start="475:17" pos:end="475:18">-&gt;</operator><name pos:start="475:19" pos:end="475:23">flags</name></name> <operator pos:start="475:25" pos:end="475:25">&amp;</operator> <name pos:start="475:27" pos:end="475:49">AV_CODEC_FLAG_LOW_DELAY</name></expr>)</condition> <block pos:start="475:52" pos:end="497:5">{<block_content pos:start="477:9" pos:end="495:9">

        <if_stmt pos:start="477:9" pos:end="485:9"><if pos:start="477:9" pos:end="485:9">if <condition pos:start="477:12" pos:end="477:50">(<expr pos:start="477:13" pos:end="477:49"><name pos:start="477:13" pos:end="477:23"><name pos:start="477:13" pos:end="477:13">s</name><operator pos:start="477:14" pos:end="477:15">-&gt;</operator><name pos:start="477:16" pos:end="477:23">codec_id</name></name> <operator pos:start="477:25" pos:end="477:26">!=</operator> <name pos:start="477:28" pos:end="477:49">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="477:52" pos:end="485:9">{<block_content pos:start="479:13" pos:end="483:22">

            <expr_stmt pos:start="479:13" pos:end="481:69"><expr pos:start="479:13" pos:end="481:68"><call pos:start="479:13" pos:end="481:68"><name pos:start="479:13" pos:end="479:18">av_log</name><argument_list pos:start="479:19" pos:end="481:68">(<argument pos:start="479:20" pos:end="479:24"><expr pos:start="479:20" pos:end="479:24"><name pos:start="479:20" pos:end="479:24">avctx</name></expr></argument>, <argument pos:start="479:27" pos:end="479:38"><expr pos:start="479:27" pos:end="479:38"><name pos:start="479:27" pos:end="479:38">AV_LOG_ERROR</name></expr></argument>,

                  <argument pos:start="481:19" pos:end="481:67"><expr pos:start="481:19" pos:end="481:67"><literal type="string" pos:start="481:19" pos:end="481:67">"low delay forcing is only available for mpeg2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="483:13" pos:end="483:22">return <expr pos:start="483:20" pos:end="483:21"><operator pos:start="483:20" pos:end="483:20">-</operator><literal type="number" pos:start="483:21" pos:end="483:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="487:9" pos:end="495:9"><if pos:start="487:9" pos:end="495:9">if <condition pos:start="487:12" pos:end="487:33">(<expr pos:start="487:13" pos:end="487:32"><name pos:start="487:13" pos:end="487:27"><name pos:start="487:13" pos:end="487:13">s</name><operator pos:start="487:14" pos:end="487:15">-&gt;</operator><name pos:start="487:16" pos:end="487:27">max_b_frames</name></name> <operator pos:start="487:29" pos:end="487:30">!=</operator> <literal type="number" pos:start="487:32" pos:end="487:32">0</literal></expr>)</condition> <block pos:start="487:35" pos:end="495:9">{<block_content pos:start="489:13" pos:end="493:22">

            <expr_stmt pos:start="489:13" pos:end="491:63"><expr pos:start="489:13" pos:end="491:62"><call pos:start="489:13" pos:end="491:62"><name pos:start="489:13" pos:end="489:18">av_log</name><argument_list pos:start="489:19" pos:end="491:62">(<argument pos:start="489:20" pos:end="489:24"><expr pos:start="489:20" pos:end="489:24"><name pos:start="489:20" pos:end="489:24">avctx</name></expr></argument>, <argument pos:start="489:27" pos:end="489:38"><expr pos:start="489:27" pos:end="489:38"><name pos:start="489:27" pos:end="489:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="491:20" pos:end="491:61"><expr pos:start="491:20" pos:end="491:61"><literal type="string" pos:start="491:20" pos:end="491:61">"b frames cannot be used with low delay\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="493:13" pos:end="493:22">return <expr pos:start="493:20" pos:end="493:21"><operator pos:start="493:20" pos:end="493:20">-</operator><literal type="number" pos:start="493:21" pos:end="493:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="501:5" pos:end="513:5"><if pos:start="501:5" pos:end="513:5">if <condition pos:start="501:8" pos:end="501:29">(<expr pos:start="501:9" pos:end="501:28"><name pos:start="501:9" pos:end="501:23"><name pos:start="501:9" pos:end="501:9">s</name><operator pos:start="501:10" pos:end="501:11">-&gt;</operator><name pos:start="501:12" pos:end="501:23">q_scale_type</name></name> <operator pos:start="501:25" pos:end="501:26">==</operator> <literal type="number" pos:start="501:28" pos:end="501:28">1</literal></expr>)</condition> <block pos:start="501:31" pos:end="513:5">{<block_content pos:start="503:9" pos:end="511:9">

        <if_stmt pos:start="503:9" pos:end="511:9"><if pos:start="503:9" pos:end="511:9">if <condition pos:start="503:12" pos:end="503:29">(<expr pos:start="503:13" pos:end="503:28"><name pos:start="503:13" pos:end="503:23"><name pos:start="503:13" pos:end="503:17">avctx</name><operator pos:start="503:18" pos:end="503:19">-&gt;</operator><name pos:start="503:20" pos:end="503:23">qmax</name></name> <operator pos:start="503:25" pos:end="503:25">&gt;</operator> <literal type="number" pos:start="503:27" pos:end="503:28">12</literal></expr>)</condition> <block pos:start="503:31" pos:end="511:9">{<block_content pos:start="505:13" pos:end="509:22">

            <expr_stmt pos:start="505:13" pos:end="507:76"><expr pos:start="505:13" pos:end="507:75"><call pos:start="505:13" pos:end="507:75"><name pos:start="505:13" pos:end="505:18">av_log</name><argument_list pos:start="505:19" pos:end="507:75">(<argument pos:start="505:20" pos:end="505:24"><expr pos:start="505:20" pos:end="505:24"><name pos:start="505:20" pos:end="505:24">avctx</name></expr></argument>, <argument pos:start="505:27" pos:end="505:38"><expr pos:start="505:27" pos:end="505:38"><name pos:start="505:27" pos:end="505:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="507:20" pos:end="507:74"><expr pos:start="507:20" pos:end="507:74"><literal type="string" pos:start="507:20" pos:end="507:74">"non linear quant only supports qmax &lt;= 12 currently\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="509:13" pos:end="509:22">return <expr pos:start="509:20" pos:end="509:21"><operator pos:start="509:20" pos:end="509:20">-</operator><literal type="number" pos:start="509:21" pos:end="509:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="517:5" pos:end="525:5"><if pos:start="517:5" pos:end="525:5">if <condition pos:start="517:8" pos:end="519:85">(<expr pos:start="517:9" pos:end="519:84"><name pos:start="517:9" pos:end="517:21"><name pos:start="517:9" pos:end="517:13">avctx</name><operator pos:start="517:14" pos:end="517:15">-&gt;</operator><name pos:start="517:16" pos:end="517:21">slices</name></name> <operator pos:start="517:23" pos:end="517:23">&gt;</operator> <literal type="number" pos:start="517:25" pos:end="517:25">1</literal> <operator pos:start="517:27" pos:end="517:28">&amp;&amp;</operator>

        <operator pos:start="519:9" pos:end="519:9">(</operator><name pos:start="519:10" pos:end="519:24"><name pos:start="519:10" pos:end="519:14">avctx</name><operator pos:start="519:15" pos:end="519:16">-&gt;</operator><name pos:start="519:17" pos:end="519:24">codec_id</name></name> <operator pos:start="519:26" pos:end="519:27">==</operator> <name pos:start="519:29" pos:end="519:44">AV_CODEC_ID_FLV1</name> <operator pos:start="519:46" pos:end="519:47">||</operator> <name pos:start="519:49" pos:end="519:63"><name pos:start="519:49" pos:end="519:53">avctx</name><operator pos:start="519:54" pos:end="519:55">-&gt;</operator><name pos:start="519:56" pos:end="519:63">codec_id</name></name> <operator pos:start="519:65" pos:end="519:66">==</operator> <name pos:start="519:68" pos:end="519:83">AV_CODEC_ID_H261</name><operator pos:start="519:84" pos:end="519:84">)</operator></expr>)</condition> <block pos:start="519:87" pos:end="525:5">{<block_content pos:start="521:9" pos:end="523:31">

        <expr_stmt pos:start="521:9" pos:end="521:89"><expr pos:start="521:9" pos:end="521:88"><call pos:start="521:9" pos:end="521:88"><name pos:start="521:9" pos:end="521:14">av_log</name><argument_list pos:start="521:15" pos:end="521:88">(<argument pos:start="521:16" pos:end="521:20"><expr pos:start="521:16" pos:end="521:20"><name pos:start="521:16" pos:end="521:20">avctx</name></expr></argument>, <argument pos:start="521:23" pos:end="521:34"><expr pos:start="521:23" pos:end="521:34"><name pos:start="521:23" pos:end="521:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="521:37" pos:end="521:87"><expr pos:start="521:37" pos:end="521:87"><literal type="string" pos:start="521:37" pos:end="521:87">"Multiple slices are not supported by this codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="523:9" pos:end="523:31">return <expr pos:start="523:16" pos:end="523:30"><call pos:start="523:16" pos:end="523:30"><name pos:start="523:16" pos:end="523:22">AVERROR</name><argument_list pos:start="523:23" pos:end="523:30">(<argument pos:start="523:24" pos:end="523:29"><expr pos:start="523:24" pos:end="523:29"><name pos:start="523:24" pos:end="523:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="529:5" pos:end="545:5"><if pos:start="529:5" pos:end="545:5">if <condition pos:start="529:8" pos:end="537:43">(<expr pos:start="529:9" pos:end="537:42"><name pos:start="529:9" pos:end="529:30"><name pos:start="529:9" pos:end="529:9">s</name><operator pos:start="529:10" pos:end="529:11">-&gt;</operator><name pos:start="529:12" pos:end="529:16">avctx</name><operator pos:start="529:17" pos:end="529:18">-&gt;</operator><name pos:start="529:19" pos:end="529:30">thread_count</name></name> <operator pos:start="529:32" pos:end="529:32">&gt;</operator> <literal type="number" pos:start="529:34" pos:end="529:34">1</literal>         <operator pos:start="529:44" pos:end="529:45">&amp;&amp;</operator>

        <name pos:start="531:9" pos:end="531:19"><name pos:start="531:9" pos:end="531:9">s</name><operator pos:start="531:10" pos:end="531:11">-&gt;</operator><name pos:start="531:12" pos:end="531:19">codec_id</name></name> <operator pos:start="531:21" pos:end="531:22">!=</operator> <name pos:start="531:24" pos:end="531:40">AV_CODEC_ID_MPEG4</name>      <operator pos:start="531:47" pos:end="531:48">&amp;&amp;</operator>

        <name pos:start="533:9" pos:end="533:19"><name pos:start="533:9" pos:end="533:9">s</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:19">codec_id</name></name> <operator pos:start="533:21" pos:end="533:22">!=</operator> <name pos:start="533:24" pos:end="533:45">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="533:47" pos:end="533:48">&amp;&amp;</operator>

        <name pos:start="535:9" pos:end="535:19"><name pos:start="535:9" pos:end="535:9">s</name><operator pos:start="535:10" pos:end="535:11">-&gt;</operator><name pos:start="535:12" pos:end="535:19">codec_id</name></name> <operator pos:start="535:21" pos:end="535:22">!=</operator> <name pos:start="535:24" pos:end="535:45">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="535:47" pos:end="535:48">&amp;&amp;</operator>

        <operator pos:start="537:9" pos:end="537:9">(</operator><name pos:start="537:10" pos:end="537:20"><name pos:start="537:10" pos:end="537:10">s</name><operator pos:start="537:11" pos:end="537:12">-&gt;</operator><name pos:start="537:13" pos:end="537:20">codec_id</name></name> <operator pos:start="537:22" pos:end="537:23">!=</operator> <name pos:start="537:25" pos:end="537:41">AV_CODEC_ID_H263P</name><operator pos:start="537:42" pos:end="537:42">)</operator></expr>)</condition> <block pos:start="537:45" pos:end="545:5">{<block_content pos:start="539:9" pos:end="543:18">

        <expr_stmt pos:start="539:9" pos:end="541:67"><expr pos:start="539:9" pos:end="541:66"><call pos:start="539:9" pos:end="541:66"><name pos:start="539:9" pos:end="539:14">av_log</name><argument_list pos:start="539:15" pos:end="541:66">(<argument pos:start="539:16" pos:end="539:20"><expr pos:start="539:16" pos:end="539:20"><name pos:start="539:16" pos:end="539:20">avctx</name></expr></argument>, <argument pos:start="539:23" pos:end="539:34"><expr pos:start="539:23" pos:end="539:34"><name pos:start="539:23" pos:end="539:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="541:16" pos:end="541:65"><expr pos:start="541:16" pos:end="541:65"><literal type="string" pos:start="541:16" pos:end="541:65">"multi threaded encoding not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="543:9" pos:end="543:18">return <expr pos:start="543:16" pos:end="543:17"><operator pos:start="543:16" pos:end="543:16">-</operator><literal type="number" pos:start="543:17" pos:end="543:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="549:5" pos:end="559:5"><if pos:start="549:5" pos:end="559:5">if <condition pos:start="549:8" pos:end="549:35">(<expr pos:start="549:9" pos:end="549:34"><name pos:start="549:9" pos:end="549:30"><name pos:start="549:9" pos:end="549:9">s</name><operator pos:start="549:10" pos:end="549:11">-&gt;</operator><name pos:start="549:12" pos:end="549:16">avctx</name><operator pos:start="549:17" pos:end="549:18">-&gt;</operator><name pos:start="549:19" pos:end="549:30">thread_count</name></name> <operator pos:start="549:32" pos:end="549:32">&lt;</operator> <literal type="number" pos:start="549:34" pos:end="549:34">1</literal></expr>)</condition> <block pos:start="549:37" pos:end="559:5">{<block_content pos:start="551:9" pos:end="557:18">

        <expr_stmt pos:start="551:9" pos:end="555:34"><expr pos:start="551:9" pos:end="555:33"><call pos:start="551:9" pos:end="555:33"><name pos:start="551:9" pos:end="551:14">av_log</name><argument_list pos:start="551:15" pos:end="555:33">(<argument pos:start="551:16" pos:end="551:20"><expr pos:start="551:16" pos:end="551:20"><name pos:start="551:16" pos:end="551:20">avctx</name></expr></argument>, <argument pos:start="551:23" pos:end="551:34"><expr pos:start="551:23" pos:end="551:34"><name pos:start="551:23" pos:end="551:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="553:16" pos:end="555:32"><expr pos:start="553:16" pos:end="555:32"><literal type="string" pos:start="553:16" pos:end="553:74">"automatic thread number detection not supported by codec,"</literal>

               <literal type="string" pos:start="555:16" pos:end="555:32">"patch welcome\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="557:9" pos:end="557:18">return <expr pos:start="557:16" pos:end="557:17"><operator pos:start="557:16" pos:end="557:16">-</operator><literal type="number" pos:start="557:17" pos:end="557:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="563:5" pos:end="565:24"><if pos:start="563:5" pos:end="565:24">if <condition pos:start="563:8" pos:end="563:35">(<expr pos:start="563:9" pos:end="563:34"><name pos:start="563:9" pos:end="563:30"><name pos:start="563:9" pos:end="563:9">s</name><operator pos:start="563:10" pos:end="563:11">-&gt;</operator><name pos:start="563:12" pos:end="563:16">avctx</name><operator pos:start="563:17" pos:end="563:18">-&gt;</operator><name pos:start="563:19" pos:end="563:30">thread_count</name></name> <operator pos:start="563:32" pos:end="563:32">&gt;</operator> <literal type="number" pos:start="563:34" pos:end="563:34">1</literal></expr>)</condition><block type="pseudo" pos:start="565:9" pos:end="565:24"><block_content pos:start="565:9" pos:end="565:24">

        <expr_stmt pos:start="565:9" pos:end="565:24"><expr pos:start="565:9" pos:end="565:23"><name pos:start="565:9" pos:end="565:19"><name pos:start="565:9" pos:end="565:9">s</name><operator pos:start="565:10" pos:end="565:11">-&gt;</operator><name pos:start="565:12" pos:end="565:19">rtp_mode</name></name> <operator pos:start="565:21" pos:end="565:21">=</operator> <literal type="number" pos:start="565:23" pos:end="565:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="569:5" pos:end="575:5"><if pos:start="569:5" pos:end="575:5">if <condition pos:start="569:8" pos:end="569:55">(<expr pos:start="569:9" pos:end="569:54"><operator pos:start="569:9" pos:end="569:9">!</operator><name pos:start="569:10" pos:end="569:29"><name pos:start="569:10" pos:end="569:14">avctx</name><operator pos:start="569:15" pos:end="569:16">-&gt;</operator><name pos:start="569:17" pos:end="569:25">time_base</name><operator pos:start="569:26" pos:end="569:26">.</operator><name pos:start="569:27" pos:end="569:29">den</name></name> <operator pos:start="569:31" pos:end="569:32">||</operator> <operator pos:start="569:34" pos:end="569:34">!</operator><name pos:start="569:35" pos:end="569:54"><name pos:start="569:35" pos:end="569:39">avctx</name><operator pos:start="569:40" pos:end="569:41">-&gt;</operator><name pos:start="569:42" pos:end="569:50">time_base</name><operator pos:start="569:51" pos:end="569:51">.</operator><name pos:start="569:52" pos:end="569:54">num</name></name></expr>)</condition> <block pos:start="569:57" pos:end="575:5">{<block_content pos:start="571:9" pos:end="573:18">

        <expr_stmt pos:start="571:9" pos:end="571:59"><expr pos:start="571:9" pos:end="571:58"><call pos:start="571:9" pos:end="571:58"><name pos:start="571:9" pos:end="571:14">av_log</name><argument_list pos:start="571:15" pos:end="571:58">(<argument pos:start="571:16" pos:end="571:20"><expr pos:start="571:16" pos:end="571:20"><name pos:start="571:16" pos:end="571:20">avctx</name></expr></argument>, <argument pos:start="571:23" pos:end="571:34"><expr pos:start="571:23" pos:end="571:34"><name pos:start="571:23" pos:end="571:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="571:37" pos:end="571:57"><expr pos:start="571:37" pos:end="571:57"><literal type="string" pos:start="571:37" pos:end="571:57">"framerate not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="573:9" pos:end="573:18">return <expr pos:start="573:16" pos:end="573:17"><operator pos:start="573:16" pos:end="573:16">-</operator><literal type="number" pos:start="573:17" pos:end="573:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="579:5" pos:end="587:5"><if pos:start="579:5" pos:end="587:5">if <condition pos:start="579:8" pos:end="579:72">(<expr pos:start="579:9" pos:end="579:71"><name pos:start="579:9" pos:end="579:31"><name pos:start="579:9" pos:end="579:13">avctx</name><operator pos:start="579:14" pos:end="579:15">-&gt;</operator><name pos:start="579:16" pos:end="579:31">b_frame_strategy</name></name> <operator pos:start="579:33" pos:end="579:34">&amp;&amp;</operator> <operator pos:start="579:36" pos:end="579:36">(</operator><name pos:start="579:37" pos:end="579:48"><name pos:start="579:37" pos:end="579:41">avctx</name><operator pos:start="579:42" pos:end="579:43">-&gt;</operator><name pos:start="579:44" pos:end="579:48">flags</name></name> <operator pos:start="579:50" pos:end="579:50">&amp;</operator> <name pos:start="579:52" pos:end="579:70">AV_CODEC_FLAG_PASS2</name><operator pos:start="579:71" pos:end="579:71">)</operator></expr>)</condition> <block pos:start="579:74" pos:end="587:5">{<block_content pos:start="581:9" pos:end="585:36">

        <expr_stmt pos:start="581:9" pos:end="583:73"><expr pos:start="581:9" pos:end="583:72"><call pos:start="581:9" pos:end="583:72"><name pos:start="581:9" pos:end="581:14">av_log</name><argument_list pos:start="581:15" pos:end="583:72">(<argument pos:start="581:16" pos:end="581:20"><expr pos:start="581:16" pos:end="581:20"><name pos:start="581:16" pos:end="581:20">avctx</name></expr></argument>, <argument pos:start="581:23" pos:end="581:33"><expr pos:start="581:23" pos:end="581:33"><name pos:start="581:23" pos:end="581:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="583:16" pos:end="583:71"><expr pos:start="583:16" pos:end="583:71"><literal type="string" pos:start="583:16" pos:end="583:71">"notice: b_frame_strategy only affects the first pass\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="585:9" pos:end="585:36"><expr pos:start="585:9" pos:end="585:35"><name pos:start="585:9" pos:end="585:31"><name pos:start="585:9" pos:end="585:13">avctx</name><operator pos:start="585:14" pos:end="585:15">-&gt;</operator><name pos:start="585:16" pos:end="585:31">b_frame_strategy</name></name> <operator pos:start="585:33" pos:end="585:33">=</operator> <literal type="number" pos:start="585:35" pos:end="585:35">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="591:5" pos:end="591:59"><expr pos:start="591:5" pos:end="591:58"><name pos:start="591:5" pos:end="591:5">i</name> <operator pos:start="591:7" pos:end="591:7">=</operator> <call pos:start="591:9" pos:end="591:58"><name pos:start="591:9" pos:end="591:14">av_gcd</name><argument_list pos:start="591:15" pos:end="591:58">(<argument pos:start="591:16" pos:end="591:35"><expr pos:start="591:16" pos:end="591:35"><name pos:start="591:16" pos:end="591:35"><name pos:start="591:16" pos:end="591:20">avctx</name><operator pos:start="591:21" pos:end="591:22">-&gt;</operator><name pos:start="591:23" pos:end="591:31">time_base</name><operator pos:start="591:32" pos:end="591:32">.</operator><name pos:start="591:33" pos:end="591:35">den</name></name></expr></argument>, <argument pos:start="591:38" pos:end="591:57"><expr pos:start="591:38" pos:end="591:57"><name pos:start="591:38" pos:end="591:57"><name pos:start="591:38" pos:end="591:42">avctx</name><operator pos:start="591:43" pos:end="591:44">-&gt;</operator><name pos:start="591:45" pos:end="591:53">time_base</name><operator pos:start="591:54" pos:end="591:54">.</operator><name pos:start="591:55" pos:end="591:57">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="593:5" pos:end="603:5"><if pos:start="593:5" pos:end="603:5">if <condition pos:start="593:8" pos:end="593:14">(<expr pos:start="593:9" pos:end="593:13"><name pos:start="593:9" pos:end="593:9">i</name> <operator pos:start="593:11" pos:end="593:11">&gt;</operator> <literal type="number" pos:start="593:13" pos:end="593:13">1</literal></expr>)</condition> <block pos:start="593:16" pos:end="603:5">{<block_content pos:start="595:9" pos:end="599:34">

        <expr_stmt pos:start="595:9" pos:end="595:79"><expr pos:start="595:9" pos:end="595:78"><call pos:start="595:9" pos:end="595:78"><name pos:start="595:9" pos:end="595:14">av_log</name><argument_list pos:start="595:15" pos:end="595:78">(<argument pos:start="595:16" pos:end="595:20"><expr pos:start="595:16" pos:end="595:20"><name pos:start="595:16" pos:end="595:20">avctx</name></expr></argument>, <argument pos:start="595:23" pos:end="595:33"><expr pos:start="595:23" pos:end="595:33"><name pos:start="595:23" pos:end="595:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="595:36" pos:end="595:77"><expr pos:start="595:36" pos:end="595:77"><literal type="string" pos:start="595:36" pos:end="595:77">"removing common factors from framerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="597:9" pos:end="597:34"><expr pos:start="597:9" pos:end="597:33"><name pos:start="597:9" pos:end="597:28"><name pos:start="597:9" pos:end="597:13">avctx</name><operator pos:start="597:14" pos:end="597:15">-&gt;</operator><name pos:start="597:16" pos:end="597:24">time_base</name><operator pos:start="597:25" pos:end="597:25">.</operator><name pos:start="597:26" pos:end="597:28">den</name></name> <operator pos:start="597:30" pos:end="597:31">/=</operator> <name pos:start="597:33" pos:end="597:33">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="599:9" pos:end="599:34"><expr pos:start="599:9" pos:end="599:33"><name pos:start="599:9" pos:end="599:28"><name pos:start="599:9" pos:end="599:13">avctx</name><operator pos:start="599:14" pos:end="599:15">-&gt;</operator><name pos:start="599:16" pos:end="599:24">time_base</name><operator pos:start="599:25" pos:end="599:25">.</operator><name pos:start="599:26" pos:end="599:28">num</name></name> <operator pos:start="599:30" pos:end="599:31">/=</operator> <name pos:start="599:33" pos:end="599:33">i</name></expr>;</expr_stmt>

        <comment type="line" pos:start="601:9" pos:end="601:20">//return -1;</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="607:5" pos:end="630:0"><if pos:start="607:5" pos:end="617:5">if <condition pos:start="607:8" pos:end="609:82">(<expr pos:start="607:9" pos:end="609:81"><name pos:start="607:9" pos:end="607:21"><name pos:start="607:9" pos:end="607:9">s</name><operator pos:start="607:10" pos:end="607:11">-&gt;</operator><name pos:start="607:12" pos:end="607:21">mpeg_quant</name></name> <operator pos:start="607:23" pos:end="607:24">||</operator> <name pos:start="607:26" pos:end="607:36"><name pos:start="607:26" pos:end="607:26">s</name><operator pos:start="607:27" pos:end="607:28">-&gt;</operator><name pos:start="607:29" pos:end="607:36">codec_id</name></name> <operator pos:start="607:38" pos:end="607:39">==</operator> <name pos:start="607:41" pos:end="607:62">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="607:64" pos:end="607:65">||</operator>

        <name pos:start="609:9" pos:end="609:19"><name pos:start="609:9" pos:end="609:9">s</name><operator pos:start="609:10" pos:end="609:11">-&gt;</operator><name pos:start="609:12" pos:end="609:19">codec_id</name></name> <operator pos:start="609:21" pos:end="609:22">==</operator> <name pos:start="609:24" pos:end="609:45">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="609:47" pos:end="609:48">||</operator> <name pos:start="609:50" pos:end="609:60"><name pos:start="609:50" pos:end="609:50">s</name><operator pos:start="609:51" pos:end="609:52">-&gt;</operator><name pos:start="609:53" pos:end="609:60">codec_id</name></name> <operator pos:start="609:62" pos:end="609:63">==</operator> <name pos:start="609:65" pos:end="609:81">AV_CODEC_ID_MJPEG</name></expr>)</condition> <block pos:start="609:84" pos:end="617:5">{<block_content pos:start="613:9" pos:end="615:32">

        <comment type="line" pos:start="611:9" pos:end="611:30">// (a + x * 3 / 8) / x</comment>

        <expr_stmt pos:start="613:9" pos:end="613:58"><expr pos:start="613:9" pos:end="613:57"><name pos:start="613:9" pos:end="613:27"><name pos:start="613:9" pos:end="613:9">s</name><operator pos:start="613:10" pos:end="613:11">-&gt;</operator><name pos:start="613:12" pos:end="613:27">intra_quant_bias</name></name> <operator pos:start="613:29" pos:end="613:29">=</operator> <literal type="number" pos:start="613:31" pos:end="613:31">3</literal> <operator pos:start="613:33" pos:end="613:34">&lt;&lt;</operator> <operator pos:start="613:36" pos:end="613:36">(</operator><name pos:start="613:37" pos:end="613:52">QUANT_BIAS_SHIFT</name> <operator pos:start="613:54" pos:end="613:54">-</operator> <literal type="number" pos:start="613:56" pos:end="613:56">3</literal><operator pos:start="613:57" pos:end="613:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="615:9" pos:end="615:32"><expr pos:start="615:9" pos:end="615:31"><name pos:start="615:9" pos:end="615:27"><name pos:start="615:9" pos:end="615:9">s</name><operator pos:start="615:10" pos:end="615:11">-&gt;</operator><name pos:start="615:12" pos:end="615:27">inter_quant_bias</name></name> <operator pos:start="615:29" pos:end="615:29">=</operator> <literal type="number" pos:start="615:31" pos:end="615:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="617:7" pos:end="630:0">else <block pos:start="617:12" pos:end="630:0">{<block_content pos:start="619:9" pos:end="623:61">

        <expr_stmt pos:start="619:9" pos:end="619:32"><expr pos:start="619:9" pos:end="619:31"><name pos:start="619:9" pos:end="619:27"><name pos:start="619:9" pos:end="619:9">s</name><operator pos:start="619:10" pos:end="619:11">-&gt;</operator><name pos:start="619:12" pos:end="619:27">intra_quant_bias</name></name> <operator pos:start="619:29" pos:end="619:29">=</operator> <literal type="number" pos:start="619:31" pos:end="619:31">0</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="621:9" pos:end="621:26">// (a - x / 4) / x</comment>

        <expr_stmt pos:start="623:9" pos:end="623:61"><expr pos:start="623:9" pos:end="623:60"><name pos:start="623:9" pos:end="623:27"><name pos:start="623:9" pos:end="623:9">s</name><operator pos:start="623:10" pos:end="623:11">-&gt;</operator><name pos:start="623:12" pos:end="623:27">inter_quant_bias</name></name> <operator pos:start="623:29" pos:end="623:29">=</operator> <operator pos:start="623:31" pos:end="623:31">-</operator><operator pos:start="623:32" pos:end="623:32">(</operator><literal type="number" pos:start="623:33" pos:end="623:33">1</literal> <operator pos:start="623:35" pos:end="623:36">&lt;&lt;</operator> <operator pos:start="623:38" pos:end="623:38">(</operator><name pos:start="623:39" pos:end="623:54">QUANT_BIAS_SHIFT</name> <operator pos:start="623:56" pos:end="623:56">-</operator> <literal type="number" pos:start="623:58" pos:end="623:58">2</literal><operator pos:start="623:59" pos:end="623:59">)</operator><operator pos:start="623:60" pos:end="623:60">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:if pos:start="629:1" pos:end="629:21">#<cpp:directive pos:start="629:2" pos:end="629:3">if</cpp:directive> <expr pos:start="629:5" pos:end="629:21"><name pos:start="629:5" pos:end="629:21">FF_API_QUANT_BIAS</name></expr></cpp:if>

<macro pos:start="631:1" pos:end="631:31"><name pos:start="631:1" pos:end="631:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="633:5" pos:end="635:54"><if pos:start="633:5" pos:end="635:54">if <condition pos:start="633:8" pos:end="633:57">(<expr pos:start="633:9" pos:end="633:56"><name pos:start="633:9" pos:end="633:31"><name pos:start="633:9" pos:end="633:13">avctx</name><operator pos:start="633:14" pos:end="633:15">-&gt;</operator><name pos:start="633:16" pos:end="633:31">intra_quant_bias</name></name> <operator pos:start="633:33" pos:end="633:34">!=</operator> <name pos:start="633:36" pos:end="633:56">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="635:9" pos:end="635:54"><block_content pos:start="635:9" pos:end="635:54">

        <expr_stmt pos:start="635:9" pos:end="635:54"><expr pos:start="635:9" pos:end="635:53"><name pos:start="635:9" pos:end="635:27"><name pos:start="635:9" pos:end="635:9">s</name><operator pos:start="635:10" pos:end="635:11">-&gt;</operator><name pos:start="635:12" pos:end="635:27">intra_quant_bias</name></name> <operator pos:start="635:29" pos:end="635:29">=</operator> <name pos:start="635:31" pos:end="635:53"><name pos:start="635:31" pos:end="635:35">avctx</name><operator pos:start="635:36" pos:end="635:37">-&gt;</operator><name pos:start="635:38" pos:end="635:53">intra_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="637:5" pos:end="639:54"><if pos:start="637:5" pos:end="639:54">if <condition pos:start="637:8" pos:end="637:57">(<expr pos:start="637:9" pos:end="637:56"><name pos:start="637:9" pos:end="637:31"><name pos:start="637:9" pos:end="637:13">avctx</name><operator pos:start="637:14" pos:end="637:15">-&gt;</operator><name pos:start="637:16" pos:end="637:31">inter_quant_bias</name></name> <operator pos:start="637:33" pos:end="637:34">!=</operator> <name pos:start="637:36" pos:end="637:56">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="639:9" pos:end="639:54"><block_content pos:start="639:9" pos:end="639:54">

        <expr_stmt pos:start="639:9" pos:end="639:54"><expr pos:start="639:9" pos:end="639:53"><name pos:start="639:9" pos:end="639:27"><name pos:start="639:9" pos:end="639:9">s</name><operator pos:start="639:10" pos:end="639:11">-&gt;</operator><name pos:start="639:12" pos:end="639:27">inter_quant_bias</name></name> <operator pos:start="639:29" pos:end="639:29">=</operator> <name pos:start="639:31" pos:end="639:53"><name pos:start="639:31" pos:end="639:35">avctx</name><operator pos:start="639:36" pos:end="639:37">-&gt;</operator><name pos:start="639:38" pos:end="639:53">inter_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<macro pos:start="641:1" pos:end="644:0"><name pos:start="641:1" pos:end="644:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="643:1" pos:end="643:6">#<cpp:directive pos:start="643:2" pos:end="643:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="647:5" pos:end="663:5"><if pos:start="647:5" pos:end="663:5">if <condition pos:start="647:8" pos:end="649:48">(<expr pos:start="647:9" pos:end="649:47"><name pos:start="647:9" pos:end="647:23"><name pos:start="647:9" pos:end="647:13">avctx</name><operator pos:start="647:14" pos:end="647:15">-&gt;</operator><name pos:start="647:16" pos:end="647:23">codec_id</name></name> <operator pos:start="647:25" pos:end="647:26">==</operator> <name pos:start="647:28" pos:end="647:44">AV_CODEC_ID_MPEG4</name> <operator pos:start="647:46" pos:end="647:47">&amp;&amp;</operator>

        <name pos:start="649:9" pos:end="649:31"><name pos:start="649:9" pos:end="649:9">s</name><operator pos:start="649:10" pos:end="649:11">-&gt;</operator><name pos:start="649:12" pos:end="649:16">avctx</name><operator pos:start="649:17" pos:end="649:18">-&gt;</operator><name pos:start="649:19" pos:end="649:27">time_base</name><operator pos:start="649:28" pos:end="649:28">.</operator><name pos:start="649:29" pos:end="649:31">den</name></name> <operator pos:start="649:33" pos:end="649:33">&gt;</operator> <operator pos:start="649:35" pos:end="649:35">(</operator><literal type="number" pos:start="649:36" pos:end="649:36">1</literal> <operator pos:start="649:38" pos:end="649:39">&lt;&lt;</operator> <literal type="number" pos:start="649:41" pos:end="649:42">16</literal><operator pos:start="649:43" pos:end="649:43">)</operator> <operator pos:start="649:45" pos:end="649:45">-</operator> <literal type="number" pos:start="649:47" pos:end="649:47">1</literal></expr>)</condition> <block pos:start="649:50" pos:end="663:5">{<block_content pos:start="651:9" pos:end="661:18">

        <expr_stmt pos:start="651:9" pos:end="659:30"><expr pos:start="651:9" pos:end="659:29"><call pos:start="651:9" pos:end="659:29"><name pos:start="651:9" pos:end="651:14">av_log</name><argument_list pos:start="651:15" pos:end="659:29">(<argument pos:start="651:16" pos:end="651:20"><expr pos:start="651:16" pos:end="651:20"><name pos:start="651:16" pos:end="651:20">avctx</name></expr></argument>, <argument pos:start="651:23" pos:end="651:34"><expr pos:start="651:23" pos:end="651:34"><name pos:start="651:23" pos:end="651:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="653:16" pos:end="657:24"><expr pos:start="653:16" pos:end="657:24"><literal type="string" pos:start="653:16" pos:end="653:66">"timebase %d/%d not supported by MPEG 4 standard, "</literal>

               <literal type="string" pos:start="655:16" pos:end="655:73">"the maximum admitted value for the timebase denominator "</literal>

               <literal type="string" pos:start="657:16" pos:end="657:24">"is %d\n"</literal></expr></argument>, <argument pos:start="657:27" pos:end="657:49"><expr pos:start="657:27" pos:end="657:49"><name pos:start="657:27" pos:end="657:49"><name pos:start="657:27" pos:end="657:27">s</name><operator pos:start="657:28" pos:end="657:29">-&gt;</operator><name pos:start="657:30" pos:end="657:34">avctx</name><operator pos:start="657:35" pos:end="657:36">-&gt;</operator><name pos:start="657:37" pos:end="657:45">time_base</name><operator pos:start="657:46" pos:end="657:46">.</operator><name pos:start="657:47" pos:end="657:49">num</name></name></expr></argument>, <argument pos:start="657:52" pos:end="657:74"><expr pos:start="657:52" pos:end="657:74"><name pos:start="657:52" pos:end="657:74"><name pos:start="657:52" pos:end="657:52">s</name><operator pos:start="657:53" pos:end="657:54">-&gt;</operator><name pos:start="657:55" pos:end="657:59">avctx</name><operator pos:start="657:60" pos:end="657:61">-&gt;</operator><name pos:start="657:62" pos:end="657:70">time_base</name><operator pos:start="657:71" pos:end="657:71">.</operator><name pos:start="657:72" pos:end="657:74">den</name></name></expr></argument>,

               <argument pos:start="659:16" pos:end="659:28"><expr pos:start="659:16" pos:end="659:28"><operator pos:start="659:16" pos:end="659:16">(</operator><literal type="number" pos:start="659:17" pos:end="659:17">1</literal> <operator pos:start="659:19" pos:end="659:20">&lt;&lt;</operator> <literal type="number" pos:start="659:22" pos:end="659:23">16</literal><operator pos:start="659:24" pos:end="659:24">)</operator> <operator pos:start="659:26" pos:end="659:26">-</operator> <literal type="number" pos:start="659:28" pos:end="659:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="661:9" pos:end="661:18">return <expr pos:start="661:16" pos:end="661:17"><operator pos:start="661:16" pos:end="661:16">-</operator><literal type="number" pos:start="661:17" pos:end="661:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="665:5" pos:end="665:70"><expr pos:start="665:5" pos:end="665:69"><name pos:start="665:5" pos:end="665:26"><name pos:start="665:5" pos:end="665:5">s</name><operator pos:start="665:6" pos:end="665:7">-&gt;</operator><name pos:start="665:8" pos:end="665:26">time_increment_bits</name></name> <operator pos:start="665:28" pos:end="665:28">=</operator> <call pos:start="665:30" pos:end="665:65"><name pos:start="665:30" pos:end="665:36">av_log2</name><argument_list pos:start="665:37" pos:end="665:65">(<argument pos:start="665:38" pos:end="665:64"><expr pos:start="665:38" pos:end="665:64"><name pos:start="665:38" pos:end="665:60"><name pos:start="665:38" pos:end="665:38">s</name><operator pos:start="665:39" pos:end="665:40">-&gt;</operator><name pos:start="665:41" pos:end="665:45">avctx</name><operator pos:start="665:46" pos:end="665:47">-&gt;</operator><name pos:start="665:48" pos:end="665:56">time_base</name><operator pos:start="665:57" pos:end="665:57">.</operator><name pos:start="665:58" pos:end="665:60">den</name></name> <operator pos:start="665:62" pos:end="665:62">-</operator> <literal type="number" pos:start="665:64" pos:end="665:64">1</literal></expr></argument>)</argument_list></call> <operator pos:start="665:67" pos:end="665:67">+</operator> <literal type="number" pos:start="665:69" pos:end="665:69">1</literal></expr>;</expr_stmt>



    <switch pos:start="669:5" pos:end="935:5">switch <condition pos:start="669:12" pos:end="669:29">(<expr pos:start="669:13" pos:end="669:28"><name pos:start="669:13" pos:end="669:28"><name pos:start="669:13" pos:end="669:17">avctx</name><operator pos:start="669:18" pos:end="669:19">-&gt;</operator><name pos:start="669:20" pos:end="669:24">codec</name><operator pos:start="669:25" pos:end="669:26">-&gt;</operator><name pos:start="669:27" pos:end="669:28">id</name></name></expr>)</condition> <block pos:start="669:31" pos:end="935:5">{<block_content pos:start="671:5" pos:end="933:18">

    <case pos:start="671:5" pos:end="671:32">case <expr pos:start="671:10" pos:end="671:31"><name pos:start="671:10" pos:end="671:31">AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <expr_stmt pos:start="673:9" pos:end="673:34"><expr pos:start="673:9" pos:end="673:33"><name pos:start="673:9" pos:end="673:21"><name pos:start="673:9" pos:end="673:9">s</name><operator pos:start="673:10" pos:end="673:11">-&gt;</operator><name pos:start="673:12" pos:end="673:21">out_format</name></name> <operator pos:start="673:23" pos:end="673:23">=</operator> <name pos:start="673:25" pos:end="673:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="675:9" pos:end="675:70"><expr pos:start="675:9" pos:end="675:69"><name pos:start="675:9" pos:end="675:20"><name pos:start="675:9" pos:end="675:9">s</name><operator pos:start="675:10" pos:end="675:11">-&gt;</operator><name pos:start="675:12" pos:end="675:20">low_delay</name></name>  <operator pos:start="675:23" pos:end="675:23">=</operator> <operator pos:start="675:25" pos:end="675:25">!</operator><operator pos:start="675:26" pos:end="675:26">!</operator><operator pos:start="675:27" pos:end="675:27">(</operator><name pos:start="675:28" pos:end="675:42"><name pos:start="675:28" pos:end="675:28">s</name><operator pos:start="675:29" pos:end="675:30">-&gt;</operator><name pos:start="675:31" pos:end="675:35">avctx</name><operator pos:start="675:36" pos:end="675:37">-&gt;</operator><name pos:start="675:38" pos:end="675:42">flags</name></name> <operator pos:start="675:44" pos:end="675:44">&amp;</operator> <name pos:start="675:46" pos:end="675:68">AV_CODEC_FLAG_LOW_DELAY</name><operator pos:start="675:69" pos:end="675:69">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="677:9" pos:end="677:65"><expr pos:start="677:9" pos:end="677:64"><name pos:start="677:9" pos:end="677:20"><name pos:start="677:9" pos:end="677:13">avctx</name><operator pos:start="677:14" pos:end="677:15">-&gt;</operator><name pos:start="677:16" pos:end="677:20">delay</name></name>  <operator pos:start="677:23" pos:end="677:23">=</operator> <ternary pos:start="677:25" pos:end="677:64"><condition pos:start="677:25" pos:end="677:38"><expr pos:start="677:25" pos:end="677:36"><name pos:start="677:25" pos:end="677:36"><name pos:start="677:25" pos:end="677:25">s</name><operator pos:start="677:26" pos:end="677:27">-&gt;</operator><name pos:start="677:28" pos:end="677:36">low_delay</name></name></expr> ?</condition><then pos:start="677:40" pos:end="677:40"> <expr pos:start="677:40" pos:end="677:40"><literal type="number" pos:start="677:40" pos:end="677:40">0</literal></expr> </then><else pos:start="677:42" pos:end="677:64">: <expr pos:start="677:44" pos:end="677:64"><operator pos:start="677:44" pos:end="677:44">(</operator><name pos:start="677:45" pos:end="677:59"><name pos:start="677:45" pos:end="677:45">s</name><operator pos:start="677:46" pos:end="677:47">-&gt;</operator><name pos:start="677:48" pos:end="677:59">max_b_frames</name></name> <operator pos:start="677:61" pos:end="677:61">+</operator> <literal type="number" pos:start="677:63" pos:end="677:63">1</literal><operator pos:start="677:64" pos:end="677:64">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="679:9" pos:end="679:14">break;</break>

    <case pos:start="681:5" pos:end="681:32">case <expr pos:start="681:10" pos:end="681:31"><name pos:start="681:10" pos:end="681:31">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <expr_stmt pos:start="683:9" pos:end="683:34"><expr pos:start="683:9" pos:end="683:33"><name pos:start="683:9" pos:end="683:21"><name pos:start="683:9" pos:end="683:9">s</name><operator pos:start="683:10" pos:end="683:11">-&gt;</operator><name pos:start="683:12" pos:end="683:21">out_format</name></name> <operator pos:start="683:23" pos:end="683:23">=</operator> <name pos:start="683:25" pos:end="683:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="685:9" pos:end="685:70"><expr pos:start="685:9" pos:end="685:69"><name pos:start="685:9" pos:end="685:20"><name pos:start="685:9" pos:end="685:9">s</name><operator pos:start="685:10" pos:end="685:11">-&gt;</operator><name pos:start="685:12" pos:end="685:20">low_delay</name></name>  <operator pos:start="685:23" pos:end="685:23">=</operator> <operator pos:start="685:25" pos:end="685:25">!</operator><operator pos:start="685:26" pos:end="685:26">!</operator><operator pos:start="685:27" pos:end="685:27">(</operator><name pos:start="685:28" pos:end="685:42"><name pos:start="685:28" pos:end="685:28">s</name><operator pos:start="685:29" pos:end="685:30">-&gt;</operator><name pos:start="685:31" pos:end="685:35">avctx</name><operator pos:start="685:36" pos:end="685:37">-&gt;</operator><name pos:start="685:38" pos:end="685:42">flags</name></name> <operator pos:start="685:44" pos:end="685:44">&amp;</operator> <name pos:start="685:46" pos:end="685:68">AV_CODEC_FLAG_LOW_DELAY</name><operator pos:start="685:69" pos:end="685:69">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="687:9" pos:end="687:65"><expr pos:start="687:9" pos:end="687:64"><name pos:start="687:9" pos:end="687:20"><name pos:start="687:9" pos:end="687:13">avctx</name><operator pos:start="687:14" pos:end="687:15">-&gt;</operator><name pos:start="687:16" pos:end="687:20">delay</name></name>  <operator pos:start="687:23" pos:end="687:23">=</operator> <ternary pos:start="687:25" pos:end="687:64"><condition pos:start="687:25" pos:end="687:38"><expr pos:start="687:25" pos:end="687:36"><name pos:start="687:25" pos:end="687:36"><name pos:start="687:25" pos:end="687:25">s</name><operator pos:start="687:26" pos:end="687:27">-&gt;</operator><name pos:start="687:28" pos:end="687:36">low_delay</name></name></expr> ?</condition><then pos:start="687:40" pos:end="687:40"> <expr pos:start="687:40" pos:end="687:40"><literal type="number" pos:start="687:40" pos:end="687:40">0</literal></expr> </then><else pos:start="687:42" pos:end="687:64">: <expr pos:start="687:44" pos:end="687:64"><operator pos:start="687:44" pos:end="687:44">(</operator><name pos:start="687:45" pos:end="687:59"><name pos:start="687:45" pos:end="687:45">s</name><operator pos:start="687:46" pos:end="687:47">-&gt;</operator><name pos:start="687:48" pos:end="687:59">max_b_frames</name></name> <operator pos:start="687:61" pos:end="687:61">+</operator> <literal type="number" pos:start="687:63" pos:end="687:63">1</literal><operator pos:start="687:64" pos:end="687:64">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="689:9" pos:end="689:26"><expr pos:start="689:9" pos:end="689:25"><name pos:start="689:9" pos:end="689:19"><name pos:start="689:9" pos:end="689:9">s</name><operator pos:start="689:10" pos:end="689:11">-&gt;</operator><name pos:start="689:12" pos:end="689:19">rtp_mode</name></name>   <operator pos:start="689:23" pos:end="689:23">=</operator> <literal type="number" pos:start="689:25" pos:end="689:25">1</literal></expr>;</expr_stmt>

        <break pos:start="691:9" pos:end="691:14">break;</break>

    <case pos:start="693:5" pos:end="693:27">case <expr pos:start="693:10" pos:end="693:26"><name pos:start="693:10" pos:end="693:26">AV_CODEC_ID_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="695:9" pos:end="695:34"><expr pos:start="695:9" pos:end="695:33"><name pos:start="695:9" pos:end="695:21"><name pos:start="695:9" pos:end="695:9">s</name><operator pos:start="695:10" pos:end="695:11">-&gt;</operator><name pos:start="695:12" pos:end="695:21">out_format</name></name> <operator pos:start="695:23" pos:end="695:23">=</operator> <name pos:start="695:25" pos:end="695:33">FMT_MJPEG</name></expr>;</expr_stmt>

        <expr_stmt pos:start="697:9" pos:end="697:26"><expr pos:start="697:9" pos:end="697:25"><name pos:start="697:9" pos:end="697:21"><name pos:start="697:9" pos:end="697:9">s</name><operator pos:start="697:10" pos:end="697:11">-&gt;</operator><name pos:start="697:12" pos:end="697:21">intra_only</name></name> <operator pos:start="697:23" pos:end="697:23">=</operator> <literal type="number" pos:start="697:25" pos:end="697:25">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="697:28" pos:end="697:58">/* force intra only for jpeg */</comment>

        <if_stmt pos:start="699:9" pos:end="703:22"><if pos:start="699:9" pos:end="703:22">if <condition pos:start="699:12" pos:end="701:40">(<expr pos:start="699:13" pos:end="701:39"><operator pos:start="699:13" pos:end="699:13">!</operator><name pos:start="699:14" pos:end="699:33">CONFIG_MJPEG_ENCODER</name> <operator pos:start="699:35" pos:end="699:36">||</operator>

            <call pos:start="701:13" pos:end="701:35"><name pos:start="701:13" pos:end="701:32">ff_mjpeg_encode_init</name><argument_list pos:start="701:33" pos:end="701:35">(<argument pos:start="701:34" pos:end="701:34"><expr pos:start="701:34" pos:end="701:34"><name pos:start="701:34" pos:end="701:34">s</name></expr></argument>)</argument_list></call> <operator pos:start="701:37" pos:end="701:37">&lt;</operator> <literal type="number" pos:start="701:39" pos:end="701:39">0</literal></expr>)</condition><block type="pseudo" pos:start="703:13" pos:end="703:22"><block_content pos:start="703:13" pos:end="703:22">

            <return pos:start="703:13" pos:end="703:22">return <expr pos:start="703:20" pos:end="703:21"><operator pos:start="703:20" pos:end="703:20">-</operator><literal type="number" pos:start="703:21" pos:end="703:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="705:9" pos:end="705:25"><expr pos:start="705:9" pos:end="705:24"><name pos:start="705:9" pos:end="705:20"><name pos:start="705:9" pos:end="705:13">avctx</name><operator pos:start="705:14" pos:end="705:15">-&gt;</operator><name pos:start="705:16" pos:end="705:20">delay</name></name> <operator pos:start="705:22" pos:end="705:22">=</operator> <literal type="number" pos:start="705:24" pos:end="705:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="707:9" pos:end="707:25"><expr pos:start="707:9" pos:end="707:24"><name pos:start="707:9" pos:end="707:20"><name pos:start="707:9" pos:end="707:9">s</name><operator pos:start="707:10" pos:end="707:11">-&gt;</operator><name pos:start="707:12" pos:end="707:20">low_delay</name></name> <operator pos:start="707:22" pos:end="707:22">=</operator> <literal type="number" pos:start="707:24" pos:end="707:24">1</literal></expr>;</expr_stmt>

        <break pos:start="709:9" pos:end="709:14">break;</break>

    <case pos:start="711:5" pos:end="711:26">case <expr pos:start="711:10" pos:end="711:25"><name pos:start="711:10" pos:end="711:25">AV_CODEC_ID_H261</name></expr>:</case>

        <if_stmt pos:start="713:9" pos:end="715:22"><if pos:start="713:9" pos:end="715:22">if <condition pos:start="713:12" pos:end="713:33">(<expr pos:start="713:13" pos:end="713:32"><operator pos:start="713:13" pos:end="713:13">!</operator><name pos:start="713:14" pos:end="713:32">CONFIG_H261_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="715:13" pos:end="715:22"><block_content pos:start="715:13" pos:end="715:22">

            <return pos:start="715:13" pos:end="715:22">return <expr pos:start="715:20" pos:end="715:21"><operator pos:start="715:20" pos:end="715:20">-</operator><literal type="number" pos:start="715:21" pos:end="715:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="717:9" pos:end="729:9"><if pos:start="717:9" pos:end="729:9">if <condition pos:start="717:12" pos:end="717:64">(<expr pos:start="717:13" pos:end="717:63"><call pos:start="717:13" pos:end="717:59"><name pos:start="717:13" pos:end="717:38">ff_h261_get_picture_format</name><argument_list pos:start="717:39" pos:end="717:59">(<argument pos:start="717:40" pos:end="717:47"><expr pos:start="717:40" pos:end="717:47"><name pos:start="717:40" pos:end="717:47"><name pos:start="717:40" pos:end="717:40">s</name><operator pos:start="717:41" pos:end="717:42">-&gt;</operator><name pos:start="717:43" pos:end="717:47">width</name></name></expr></argument>, <argument pos:start="717:50" pos:end="717:58"><expr pos:start="717:50" pos:end="717:58"><name pos:start="717:50" pos:end="717:58"><name pos:start="717:50" pos:end="717:50">s</name><operator pos:start="717:51" pos:end="717:52">-&gt;</operator><name pos:start="717:53" pos:end="717:58">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="717:61" pos:end="717:61">&lt;</operator> <literal type="number" pos:start="717:63" pos:end="717:63">0</literal></expr>)</condition> <block pos:start="717:66" pos:end="729:9">{<block_content pos:start="719:13" pos:end="727:22">

            <expr_stmt pos:start="719:13" pos:end="725:41"><expr pos:start="719:13" pos:end="725:40"><call pos:start="719:13" pos:end="725:40"><name pos:start="719:13" pos:end="719:18">av_log</name><argument_list pos:start="719:19" pos:end="725:40">(<argument pos:start="719:20" pos:end="719:24"><expr pos:start="719:20" pos:end="719:24"><name pos:start="719:20" pos:end="719:24">avctx</name></expr></argument>, <argument pos:start="719:27" pos:end="719:38"><expr pos:start="719:27" pos:end="719:38"><name pos:start="719:27" pos:end="719:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="721:20" pos:end="723:69"><expr pos:start="721:20" pos:end="723:69"><literal type="string" pos:start="721:20" pos:end="721:78">"The specified picture size of %dx%d is not valid for the "</literal>

                   <literal type="string" pos:start="723:20" pos:end="723:69">"H.261 codec.\nValid sizes are 176x144, 352x288\n"</literal></expr></argument>,

                    <argument pos:start="725:21" pos:end="725:28"><expr pos:start="725:21" pos:end="725:28"><name pos:start="725:21" pos:end="725:28"><name pos:start="725:21" pos:end="725:21">s</name><operator pos:start="725:22" pos:end="725:23">-&gt;</operator><name pos:start="725:24" pos:end="725:28">width</name></name></expr></argument>, <argument pos:start="725:31" pos:end="725:39"><expr pos:start="725:31" pos:end="725:39"><name pos:start="725:31" pos:end="725:39"><name pos:start="725:31" pos:end="725:31">s</name><operator pos:start="725:32" pos:end="725:33">-&gt;</operator><name pos:start="725:34" pos:end="725:39">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="727:13" pos:end="727:22">return <expr pos:start="727:20" pos:end="727:21"><operator pos:start="727:20" pos:end="727:20">-</operator><literal type="number" pos:start="727:21" pos:end="727:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="731:9" pos:end="731:33"><expr pos:start="731:9" pos:end="731:32"><name pos:start="731:9" pos:end="731:21"><name pos:start="731:9" pos:end="731:9">s</name><operator pos:start="731:10" pos:end="731:11">-&gt;</operator><name pos:start="731:12" pos:end="731:21">out_format</name></name> <operator pos:start="731:23" pos:end="731:23">=</operator> <name pos:start="731:25" pos:end="731:32">FMT_H261</name></expr>;</expr_stmt>

        <expr_stmt pos:start="733:9" pos:end="733:26"><expr pos:start="733:9" pos:end="733:25"><name pos:start="733:9" pos:end="733:20"><name pos:start="733:9" pos:end="733:13">avctx</name><operator pos:start="733:14" pos:end="733:15">-&gt;</operator><name pos:start="733:16" pos:end="733:20">delay</name></name>  <operator pos:start="733:23" pos:end="733:23">=</operator> <literal type="number" pos:start="733:25" pos:end="733:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="735:9" pos:end="735:26"><expr pos:start="735:9" pos:end="735:25"><name pos:start="735:9" pos:end="735:20"><name pos:start="735:9" pos:end="735:9">s</name><operator pos:start="735:10" pos:end="735:11">-&gt;</operator><name pos:start="735:12" pos:end="735:20">low_delay</name></name>  <operator pos:start="735:23" pos:end="735:23">=</operator> <literal type="number" pos:start="735:25" pos:end="735:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="737:9" pos:end="737:26"><expr pos:start="737:9" pos:end="737:25"><name pos:start="737:9" pos:end="737:19"><name pos:start="737:9" pos:end="737:9">s</name><operator pos:start="737:10" pos:end="737:11">-&gt;</operator><name pos:start="737:12" pos:end="737:19">rtp_mode</name></name>   <operator pos:start="737:23" pos:end="737:23">=</operator> <literal type="number" pos:start="737:25" pos:end="737:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="737:28" pos:end="737:62">/* Sliced encoding not supported */</comment>

        <break pos:start="739:9" pos:end="739:14">break;</break>

    <case pos:start="741:5" pos:end="741:26">case <expr pos:start="741:10" pos:end="741:25"><name pos:start="741:10" pos:end="741:25">AV_CODEC_ID_H263</name></expr>:</case>

        <if_stmt pos:start="743:9" pos:end="745:18"><if pos:start="743:9" pos:end="745:18">if <condition pos:start="743:12" pos:end="743:33">(<expr pos:start="743:13" pos:end="743:32"><operator pos:start="743:13" pos:end="743:13">!</operator><name pos:start="743:14" pos:end="743:32">CONFIG_H263_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="745:9" pos:end="745:18"><block_content pos:start="745:9" pos:end="745:18">

        <return pos:start="745:9" pos:end="745:18">return <expr pos:start="745:16" pos:end="745:17"><operator pos:start="745:16" pos:end="745:16">-</operator><literal type="number" pos:start="745:17" pos:end="745:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="747:9" pos:end="763:9"><if pos:start="747:9" pos:end="763:9">if <condition pos:start="747:12" pos:end="749:55">(<expr pos:start="747:13" pos:end="749:54"><call pos:start="747:13" pos:end="749:49"><name pos:start="747:13" pos:end="747:28">ff_match_2uint16</name><argument_list pos:start="747:29" pos:end="749:49">(<argument pos:start="747:30" pos:end="747:43"><expr pos:start="747:30" pos:end="747:43"><name pos:start="747:30" pos:end="747:43">ff_h263_format</name></expr></argument>, <argument pos:start="747:46" pos:end="747:75"><expr pos:start="747:46" pos:end="747:75"><call pos:start="747:46" pos:end="747:75"><name pos:start="747:46" pos:end="747:59">FF_ARRAY_ELEMS</name><argument_list pos:start="747:60" pos:end="747:75">(<argument pos:start="747:61" pos:end="747:74"><expr pos:start="747:61" pos:end="747:74"><name pos:start="747:61" pos:end="747:74">ff_h263_format</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="749:30" pos:end="749:37"><expr pos:start="749:30" pos:end="749:37"><name pos:start="749:30" pos:end="749:37"><name pos:start="749:30" pos:end="749:30">s</name><operator pos:start="749:31" pos:end="749:32">-&gt;</operator><name pos:start="749:33" pos:end="749:37">width</name></name></expr></argument>, <argument pos:start="749:40" pos:end="749:48"><expr pos:start="749:40" pos:end="749:48"><name pos:start="749:40" pos:end="749:48"><name pos:start="749:40" pos:end="749:40">s</name><operator pos:start="749:41" pos:end="749:42">-&gt;</operator><name pos:start="749:43" pos:end="749:48">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="749:51" pos:end="749:52">==</operator> <literal type="number" pos:start="749:54" pos:end="749:54">8</literal></expr>)</condition> <block pos:start="749:57" pos:end="763:9">{<block_content pos:start="751:13" pos:end="761:22">

            <expr_stmt pos:start="751:13" pos:end="759:57"><expr pos:start="751:13" pos:end="759:56"><call pos:start="751:13" pos:end="759:56"><name pos:start="751:13" pos:end="751:18">av_log</name><argument_list pos:start="751:19" pos:end="759:56">(<argument pos:start="751:20" pos:end="751:24"><expr pos:start="751:20" pos:end="751:24"><name pos:start="751:20" pos:end="751:24">avctx</name></expr></argument>, <argument pos:start="751:27" pos:end="751:37"><expr pos:start="751:27" pos:end="751:37"><name pos:start="751:27" pos:end="751:37">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="753:20" pos:end="759:34"><expr pos:start="753:20" pos:end="759:34"><literal type="string" pos:start="753:20" pos:end="753:74">"The specified picture size of %dx%d is not valid for "</literal>

                   <literal type="string" pos:start="755:20" pos:end="755:72">"the H.263 codec.\nValid sizes are 128x96, 176x144, "</literal>

                   <literal type="string" pos:start="757:20" pos:end="757:53">"352x288, 704x576, and 1408x1152."</literal>

                   <literal type="string" pos:start="759:20" pos:end="759:34">"Try H.263+.\n"</literal></expr></argument>, <argument pos:start="759:37" pos:end="759:44"><expr pos:start="759:37" pos:end="759:44"><name pos:start="759:37" pos:end="759:44"><name pos:start="759:37" pos:end="759:37">s</name><operator pos:start="759:38" pos:end="759:39">-&gt;</operator><name pos:start="759:40" pos:end="759:44">width</name></name></expr></argument>, <argument pos:start="759:47" pos:end="759:55"><expr pos:start="759:47" pos:end="759:55"><name pos:start="759:47" pos:end="759:55"><name pos:start="759:47" pos:end="759:47">s</name><operator pos:start="759:48" pos:end="759:49">-&gt;</operator><name pos:start="759:50" pos:end="759:55">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="761:13" pos:end="761:22">return <expr pos:start="761:20" pos:end="761:21"><operator pos:start="761:20" pos:end="761:20">-</operator><literal type="number" pos:start="761:21" pos:end="761:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="765:9" pos:end="765:33"><expr pos:start="765:9" pos:end="765:32"><name pos:start="765:9" pos:end="765:21"><name pos:start="765:9" pos:end="765:9">s</name><operator pos:start="765:10" pos:end="765:11">-&gt;</operator><name pos:start="765:12" pos:end="765:21">out_format</name></name> <operator pos:start="765:23" pos:end="765:23">=</operator> <name pos:start="765:25" pos:end="765:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="767:9" pos:end="767:26"><expr pos:start="767:9" pos:end="767:25"><name pos:start="767:9" pos:end="767:20"><name pos:start="767:9" pos:end="767:13">avctx</name><operator pos:start="767:14" pos:end="767:15">-&gt;</operator><name pos:start="767:16" pos:end="767:20">delay</name></name>  <operator pos:start="767:23" pos:end="767:23">=</operator> <literal type="number" pos:start="767:25" pos:end="767:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="769:9" pos:end="769:26"><expr pos:start="769:9" pos:end="769:25"><name pos:start="769:9" pos:end="769:20"><name pos:start="769:9" pos:end="769:9">s</name><operator pos:start="769:10" pos:end="769:11">-&gt;</operator><name pos:start="769:12" pos:end="769:20">low_delay</name></name>  <operator pos:start="769:23" pos:end="769:23">=</operator> <literal type="number" pos:start="769:25" pos:end="769:25">1</literal></expr>;</expr_stmt>

        <break pos:start="771:9" pos:end="771:14">break;</break>

    <case pos:start="773:5" pos:end="773:27">case <expr pos:start="773:10" pos:end="773:26"><name pos:start="773:10" pos:end="773:26">AV_CODEC_ID_H263P</name></expr>:</case>

        <expr_stmt pos:start="775:9" pos:end="775:33"><expr pos:start="775:9" pos:end="775:32"><name pos:start="775:9" pos:end="775:21"><name pos:start="775:9" pos:end="775:9">s</name><operator pos:start="775:10" pos:end="775:11">-&gt;</operator><name pos:start="775:12" pos:end="775:21">out_format</name></name> <operator pos:start="775:23" pos:end="775:23">=</operator> <name pos:start="775:25" pos:end="775:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="777:9" pos:end="777:26"><expr pos:start="777:9" pos:end="777:25"><name pos:start="777:9" pos:end="777:20"><name pos:start="777:9" pos:end="777:9">s</name><operator pos:start="777:10" pos:end="777:11">-&gt;</operator><name pos:start="777:12" pos:end="777:20">h263_plus</name></name>  <operator pos:start="777:23" pos:end="777:23">=</operator> <literal type="number" pos:start="777:25" pos:end="777:25">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="779:9" pos:end="779:16">/* Fx */</comment>

        <expr_stmt pos:start="781:9" pos:end="781:76"><expr pos:start="781:9" pos:end="781:75"><name pos:start="781:9" pos:end="781:19"><name pos:start="781:9" pos:end="781:9">s</name><operator pos:start="781:10" pos:end="781:11">-&gt;</operator><name pos:start="781:12" pos:end="781:19">h263_aic</name></name>        <operator pos:start="781:28" pos:end="781:28">=</operator> <ternary pos:start="781:30" pos:end="781:75"><condition pos:start="781:30" pos:end="781:69"><expr pos:start="781:30" pos:end="781:67"><operator pos:start="781:30" pos:end="781:30">(</operator><name pos:start="781:31" pos:end="781:42"><name pos:start="781:31" pos:end="781:35">avctx</name><operator pos:start="781:36" pos:end="781:37">-&gt;</operator><name pos:start="781:38" pos:end="781:42">flags</name></name> <operator pos:start="781:44" pos:end="781:44">&amp;</operator> <name pos:start="781:46" pos:end="781:66">AV_CODEC_FLAG_AC_PRED</name><operator pos:start="781:67" pos:end="781:67">)</operator></expr> ?</condition><then pos:start="781:71" pos:end="781:71"> <expr pos:start="781:71" pos:end="781:71"><literal type="number" pos:start="781:71" pos:end="781:71">1</literal></expr> </then><else pos:start="781:73" pos:end="781:75">: <expr pos:start="781:75" pos:end="781:75"><literal type="number" pos:start="781:75" pos:end="781:75">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="783:9" pos:end="783:41"><expr pos:start="783:9" pos:end="783:40"><name pos:start="783:9" pos:end="783:25"><name pos:start="783:9" pos:end="783:9">s</name><operator pos:start="783:10" pos:end="783:11">-&gt;</operator><name pos:start="783:12" pos:end="783:25">modified_quant</name></name>  <operator pos:start="783:28" pos:end="783:28">=</operator> <name pos:start="783:30" pos:end="783:40"><name pos:start="783:30" pos:end="783:30">s</name><operator pos:start="783:31" pos:end="783:32">-&gt;</operator><name pos:start="783:33" pos:end="783:40">h263_aic</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="785:9" pos:end="785:80"><expr pos:start="785:9" pos:end="785:79"><name pos:start="785:9" pos:end="785:22"><name pos:start="785:9" pos:end="785:9">s</name><operator pos:start="785:10" pos:end="785:11">-&gt;</operator><name pos:start="785:12" pos:end="785:22">loop_filter</name></name>     <operator pos:start="785:28" pos:end="785:28">=</operator> <ternary pos:start="785:30" pos:end="785:79"><condition pos:start="785:30" pos:end="785:73"><expr pos:start="785:30" pos:end="785:71"><operator pos:start="785:30" pos:end="785:30">(</operator><name pos:start="785:31" pos:end="785:42"><name pos:start="785:31" pos:end="785:35">avctx</name><operator pos:start="785:36" pos:end="785:37">-&gt;</operator><name pos:start="785:38" pos:end="785:42">flags</name></name> <operator pos:start="785:44" pos:end="785:44">&amp;</operator> <name pos:start="785:46" pos:end="785:70">AV_CODEC_FLAG_LOOP_FILTER</name><operator pos:start="785:71" pos:end="785:71">)</operator></expr> ?</condition><then pos:start="785:75" pos:end="785:75"> <expr pos:start="785:75" pos:end="785:75"><literal type="number" pos:start="785:75" pos:end="785:75">1</literal></expr> </then><else pos:start="785:77" pos:end="785:79">: <expr pos:start="785:79" pos:end="785:79"><literal type="number" pos:start="785:79" pos:end="785:79">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="787:9" pos:end="787:69"><expr pos:start="787:9" pos:end="787:68"><name pos:start="787:9" pos:end="787:26"><name pos:start="787:9" pos:end="787:9">s</name><operator pos:start="787:10" pos:end="787:11">-&gt;</operator><name pos:start="787:12" pos:end="787:26">unrestricted_mv</name></name> <operator pos:start="787:28" pos:end="787:28">=</operator> <name pos:start="787:30" pos:end="787:36"><name pos:start="787:30" pos:end="787:30">s</name><operator pos:start="787:31" pos:end="787:32">-&gt;</operator><name pos:start="787:33" pos:end="787:36">obmc</name></name> <operator pos:start="787:38" pos:end="787:39">||</operator> <name pos:start="787:41" pos:end="787:54"><name pos:start="787:41" pos:end="787:41">s</name><operator pos:start="787:42" pos:end="787:43">-&gt;</operator><name pos:start="787:44" pos:end="787:54">loop_filter</name></name> <operator pos:start="787:56" pos:end="787:57">||</operator> <name pos:start="787:59" pos:end="787:68"><name pos:start="787:59" pos:end="787:59">s</name><operator pos:start="787:60" pos:end="787:61">-&gt;</operator><name pos:start="787:62" pos:end="787:68">umvplus</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="791:9" pos:end="791:17">/* /Fx */</comment>

        <comment type="block" pos:start="793:9" pos:end="793:39">/* These are just to be sure */</comment>

        <expr_stmt pos:start="795:9" pos:end="795:25"><expr pos:start="795:9" pos:end="795:24"><name pos:start="795:9" pos:end="795:20"><name pos:start="795:9" pos:end="795:13">avctx</name><operator pos:start="795:14" pos:end="795:15">-&gt;</operator><name pos:start="795:16" pos:end="795:20">delay</name></name> <operator pos:start="795:22" pos:end="795:22">=</operator> <literal type="number" pos:start="795:24" pos:end="795:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="797:9" pos:end="797:25"><expr pos:start="797:9" pos:end="797:24"><name pos:start="797:9" pos:end="797:20"><name pos:start="797:9" pos:end="797:9">s</name><operator pos:start="797:10" pos:end="797:11">-&gt;</operator><name pos:start="797:12" pos:end="797:20">low_delay</name></name> <operator pos:start="797:22" pos:end="797:22">=</operator> <literal type="number" pos:start="797:24" pos:end="797:24">1</literal></expr>;</expr_stmt>

        <break pos:start="799:9" pos:end="799:14">break;</break>

    <case pos:start="801:5" pos:end="801:26">case <expr pos:start="801:10" pos:end="801:25"><name pos:start="801:10" pos:end="801:25">AV_CODEC_ID_FLV1</name></expr>:</case>

        <expr_stmt pos:start="803:9" pos:end="803:38"><expr pos:start="803:9" pos:end="803:37"><name pos:start="803:9" pos:end="803:21"><name pos:start="803:9" pos:end="803:9">s</name><operator pos:start="803:10" pos:end="803:11">-&gt;</operator><name pos:start="803:12" pos:end="803:21">out_format</name></name>      <operator pos:start="803:28" pos:end="803:28">=</operator> <name pos:start="803:30" pos:end="803:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="805:9" pos:end="805:31"><expr pos:start="805:9" pos:end="805:30"><name pos:start="805:9" pos:end="805:19"><name pos:start="805:9" pos:end="805:9">s</name><operator pos:start="805:10" pos:end="805:11">-&gt;</operator><name pos:start="805:12" pos:end="805:19">h263_flv</name></name>        <operator pos:start="805:28" pos:end="805:28">=</operator> <literal type="number" pos:start="805:30" pos:end="805:30">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="805:33" pos:end="805:62">/* format = 1; 11-bit codes */</comment>

        <expr_stmt pos:start="807:9" pos:end="807:31"><expr pos:start="807:9" pos:end="807:30"><name pos:start="807:9" pos:end="807:26"><name pos:start="807:9" pos:end="807:9">s</name><operator pos:start="807:10" pos:end="807:11">-&gt;</operator><name pos:start="807:12" pos:end="807:26">unrestricted_mv</name></name> <operator pos:start="807:28" pos:end="807:28">=</operator> <literal type="number" pos:start="807:30" pos:end="807:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="809:9" pos:end="809:25"><expr pos:start="809:9" pos:end="809:24"><name pos:start="809:9" pos:end="809:19"><name pos:start="809:9" pos:end="809:9">s</name><operator pos:start="809:10" pos:end="809:11">-&gt;</operator><name pos:start="809:12" pos:end="809:19">rtp_mode</name></name>  <operator pos:start="809:22" pos:end="809:22">=</operator> <literal type="number" pos:start="809:24" pos:end="809:24">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="809:27" pos:end="809:47">/* don't allow GOB */</comment>

        <expr_stmt pos:start="811:9" pos:end="811:25"><expr pos:start="811:9" pos:end="811:24"><name pos:start="811:9" pos:end="811:20"><name pos:start="811:9" pos:end="811:13">avctx</name><operator pos:start="811:14" pos:end="811:15">-&gt;</operator><name pos:start="811:16" pos:end="811:20">delay</name></name> <operator pos:start="811:22" pos:end="811:22">=</operator> <literal type="number" pos:start="811:24" pos:end="811:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="813:9" pos:end="813:25"><expr pos:start="813:9" pos:end="813:24"><name pos:start="813:9" pos:end="813:20"><name pos:start="813:9" pos:end="813:9">s</name><operator pos:start="813:10" pos:end="813:11">-&gt;</operator><name pos:start="813:12" pos:end="813:20">low_delay</name></name> <operator pos:start="813:22" pos:end="813:22">=</operator> <literal type="number" pos:start="813:24" pos:end="813:24">1</literal></expr>;</expr_stmt>

        <break pos:start="815:9" pos:end="815:14">break;</break>

    <case pos:start="817:5" pos:end="817:26">case <expr pos:start="817:10" pos:end="817:25"><name pos:start="817:10" pos:end="817:25">AV_CODEC_ID_RV10</name></expr>:</case>

        <expr_stmt pos:start="819:9" pos:end="819:33"><expr pos:start="819:9" pos:end="819:32"><name pos:start="819:9" pos:end="819:21"><name pos:start="819:9" pos:end="819:9">s</name><operator pos:start="819:10" pos:end="819:11">-&gt;</operator><name pos:start="819:12" pos:end="819:21">out_format</name></name> <operator pos:start="819:23" pos:end="819:23">=</operator> <name pos:start="819:25" pos:end="819:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="821:9" pos:end="821:26"><expr pos:start="821:9" pos:end="821:25"><name pos:start="821:9" pos:end="821:20"><name pos:start="821:9" pos:end="821:13">avctx</name><operator pos:start="821:14" pos:end="821:15">-&gt;</operator><name pos:start="821:16" pos:end="821:20">delay</name></name>  <operator pos:start="821:23" pos:end="821:23">=</operator> <literal type="number" pos:start="821:25" pos:end="821:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="823:9" pos:end="823:26"><expr pos:start="823:9" pos:end="823:25"><name pos:start="823:9" pos:end="823:20"><name pos:start="823:9" pos:end="823:9">s</name><operator pos:start="823:10" pos:end="823:11">-&gt;</operator><name pos:start="823:12" pos:end="823:20">low_delay</name></name>  <operator pos:start="823:23" pos:end="823:23">=</operator> <literal type="number" pos:start="823:25" pos:end="823:25">1</literal></expr>;</expr_stmt>

        <break pos:start="825:9" pos:end="825:14">break;</break>

    <case pos:start="827:5" pos:end="827:26">case <expr pos:start="827:10" pos:end="827:25"><name pos:start="827:10" pos:end="827:25">AV_CODEC_ID_RV20</name></expr>:</case>

        <expr_stmt pos:start="829:9" pos:end="829:38"><expr pos:start="829:9" pos:end="829:37"><name pos:start="829:9" pos:end="829:21"><name pos:start="829:9" pos:end="829:9">s</name><operator pos:start="829:10" pos:end="829:11">-&gt;</operator><name pos:start="829:12" pos:end="829:21">out_format</name></name>      <operator pos:start="829:28" pos:end="829:28">=</operator> <name pos:start="829:30" pos:end="829:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="831:9" pos:end="831:31"><expr pos:start="831:9" pos:end="831:30"><name pos:start="831:9" pos:end="831:20"><name pos:start="831:9" pos:end="831:13">avctx</name><operator pos:start="831:14" pos:end="831:15">-&gt;</operator><name pos:start="831:16" pos:end="831:20">delay</name></name>       <operator pos:start="831:28" pos:end="831:28">=</operator> <literal type="number" pos:start="831:30" pos:end="831:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="833:9" pos:end="833:31"><expr pos:start="833:9" pos:end="833:30"><name pos:start="833:9" pos:end="833:20"><name pos:start="833:9" pos:end="833:9">s</name><operator pos:start="833:10" pos:end="833:11">-&gt;</operator><name pos:start="833:12" pos:end="833:20">low_delay</name></name>       <operator pos:start="833:28" pos:end="833:28">=</operator> <literal type="number" pos:start="833:30" pos:end="833:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="835:9" pos:end="835:31"><expr pos:start="835:9" pos:end="835:30"><name pos:start="835:9" pos:end="835:25"><name pos:start="835:9" pos:end="835:9">s</name><operator pos:start="835:10" pos:end="835:11">-&gt;</operator><name pos:start="835:12" pos:end="835:25">modified_quant</name></name>  <operator pos:start="835:28" pos:end="835:28">=</operator> <literal type="number" pos:start="835:30" pos:end="835:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="837:9" pos:end="837:31"><expr pos:start="837:9" pos:end="837:30"><name pos:start="837:9" pos:end="837:19"><name pos:start="837:9" pos:end="837:9">s</name><operator pos:start="837:10" pos:end="837:11">-&gt;</operator><name pos:start="837:12" pos:end="837:19">h263_aic</name></name>        <operator pos:start="837:28" pos:end="837:28">=</operator> <literal type="number" pos:start="837:30" pos:end="837:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="839:9" pos:end="839:31"><expr pos:start="839:9" pos:end="839:30"><name pos:start="839:9" pos:end="839:20"><name pos:start="839:9" pos:end="839:9">s</name><operator pos:start="839:10" pos:end="839:11">-&gt;</operator><name pos:start="839:12" pos:end="839:20">h263_plus</name></name>       <operator pos:start="839:28" pos:end="839:28">=</operator> <literal type="number" pos:start="839:30" pos:end="839:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="841:9" pos:end="841:31"><expr pos:start="841:9" pos:end="841:30"><name pos:start="841:9" pos:end="841:22"><name pos:start="841:9" pos:end="841:9">s</name><operator pos:start="841:10" pos:end="841:11">-&gt;</operator><name pos:start="841:12" pos:end="841:22">loop_filter</name></name>     <operator pos:start="841:28" pos:end="841:28">=</operator> <literal type="number" pos:start="841:30" pos:end="841:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="843:9" pos:end="843:31"><expr pos:start="843:9" pos:end="843:30"><name pos:start="843:9" pos:end="843:26"><name pos:start="843:9" pos:end="843:9">s</name><operator pos:start="843:10" pos:end="843:11">-&gt;</operator><name pos:start="843:12" pos:end="843:26">unrestricted_mv</name></name> <operator pos:start="843:28" pos:end="843:28">=</operator> <literal type="number" pos:start="843:30" pos:end="843:30">0</literal></expr>;</expr_stmt>

        <break pos:start="845:9" pos:end="845:14">break;</break>

    <case pos:start="847:5" pos:end="847:27">case <expr pos:start="847:10" pos:end="847:26"><name pos:start="847:10" pos:end="847:26">AV_CODEC_ID_MPEG4</name></expr>:</case>

        <expr_stmt pos:start="849:9" pos:end="849:38"><expr pos:start="849:9" pos:end="849:37"><name pos:start="849:9" pos:end="849:21"><name pos:start="849:9" pos:end="849:9">s</name><operator pos:start="849:10" pos:end="849:11">-&gt;</operator><name pos:start="849:12" pos:end="849:21">out_format</name></name>      <operator pos:start="849:28" pos:end="849:28">=</operator> <name pos:start="849:30" pos:end="849:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="851:9" pos:end="851:31"><expr pos:start="851:9" pos:end="851:30"><name pos:start="851:9" pos:end="851:20"><name pos:start="851:9" pos:end="851:9">s</name><operator pos:start="851:10" pos:end="851:11">-&gt;</operator><name pos:start="851:12" pos:end="851:20">h263_pred</name></name>       <operator pos:start="851:28" pos:end="851:28">=</operator> <literal type="number" pos:start="851:30" pos:end="851:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="853:9" pos:end="853:31"><expr pos:start="853:9" pos:end="853:30"><name pos:start="853:9" pos:end="853:26"><name pos:start="853:9" pos:end="853:9">s</name><operator pos:start="853:10" pos:end="853:11">-&gt;</operator><name pos:start="853:12" pos:end="853:26">unrestricted_mv</name></name> <operator pos:start="853:28" pos:end="853:28">=</operator> <literal type="number" pos:start="853:30" pos:end="853:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="855:9" pos:end="855:53"><expr pos:start="855:9" pos:end="855:52"><name pos:start="855:9" pos:end="855:20"><name pos:start="855:9" pos:end="855:9">s</name><operator pos:start="855:10" pos:end="855:11">-&gt;</operator><name pos:start="855:12" pos:end="855:20">low_delay</name></name>       <operator pos:start="855:28" pos:end="855:28">=</operator> <ternary pos:start="855:30" pos:end="855:52"><condition pos:start="855:30" pos:end="855:46"><expr pos:start="855:30" pos:end="855:44"><name pos:start="855:30" pos:end="855:44"><name pos:start="855:30" pos:end="855:30">s</name><operator pos:start="855:31" pos:end="855:32">-&gt;</operator><name pos:start="855:33" pos:end="855:44">max_b_frames</name></name></expr> ?</condition><then pos:start="855:48" pos:end="855:48"> <expr pos:start="855:48" pos:end="855:48"><literal type="number" pos:start="855:48" pos:end="855:48">0</literal></expr> </then><else pos:start="855:50" pos:end="855:52">: <expr pos:start="855:52" pos:end="855:52"><literal type="number" pos:start="855:52" pos:end="855:52">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="857:9" pos:end="857:70"><expr pos:start="857:9" pos:end="857:69"><name pos:start="857:9" pos:end="857:20"><name pos:start="857:9" pos:end="857:13">avctx</name><operator pos:start="857:14" pos:end="857:15">-&gt;</operator><name pos:start="857:16" pos:end="857:20">delay</name></name>       <operator pos:start="857:28" pos:end="857:28">=</operator> <ternary pos:start="857:30" pos:end="857:69"><condition pos:start="857:30" pos:end="857:43"><expr pos:start="857:30" pos:end="857:41"><name pos:start="857:30" pos:end="857:41"><name pos:start="857:30" pos:end="857:30">s</name><operator pos:start="857:31" pos:end="857:32">-&gt;</operator><name pos:start="857:33" pos:end="857:41">low_delay</name></name></expr> ?</condition><then pos:start="857:45" pos:end="857:45"> <expr pos:start="857:45" pos:end="857:45"><literal type="number" pos:start="857:45" pos:end="857:45">0</literal></expr> </then><else pos:start="857:47" pos:end="857:69">: <expr pos:start="857:49" pos:end="857:69"><operator pos:start="857:49" pos:end="857:49">(</operator><name pos:start="857:50" pos:end="857:64"><name pos:start="857:50" pos:end="857:50">s</name><operator pos:start="857:51" pos:end="857:52">-&gt;</operator><name pos:start="857:53" pos:end="857:64">max_b_frames</name></name> <operator pos:start="857:66" pos:end="857:66">+</operator> <literal type="number" pos:start="857:68" pos:end="857:68">1</literal><operator pos:start="857:69" pos:end="857:69">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="859:9" pos:end="859:14">break;</break>

    <case pos:start="861:5" pos:end="861:31">case <expr pos:start="861:10" pos:end="861:30"><name pos:start="861:10" pos:end="861:30">AV_CODEC_ID_MSMPEG4V2</name></expr>:</case>

        <expr_stmt pos:start="863:9" pos:end="863:38"><expr pos:start="863:9" pos:end="863:37"><name pos:start="863:9" pos:end="863:21"><name pos:start="863:9" pos:end="863:9">s</name><operator pos:start="863:10" pos:end="863:11">-&gt;</operator><name pos:start="863:12" pos:end="863:21">out_format</name></name>      <operator pos:start="863:28" pos:end="863:28">=</operator> <name pos:start="863:30" pos:end="863:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="865:9" pos:end="865:31"><expr pos:start="865:9" pos:end="865:30"><name pos:start="865:9" pos:end="865:20"><name pos:start="865:9" pos:end="865:9">s</name><operator pos:start="865:10" pos:end="865:11">-&gt;</operator><name pos:start="865:12" pos:end="865:20">h263_pred</name></name>       <operator pos:start="865:28" pos:end="865:28">=</operator> <literal type="number" pos:start="865:30" pos:end="865:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="867:9" pos:end="867:31"><expr pos:start="867:9" pos:end="867:30"><name pos:start="867:9" pos:end="867:26"><name pos:start="867:9" pos:end="867:9">s</name><operator pos:start="867:10" pos:end="867:11">-&gt;</operator><name pos:start="867:12" pos:end="867:26">unrestricted_mv</name></name> <operator pos:start="867:28" pos:end="867:28">=</operator> <literal type="number" pos:start="867:30" pos:end="867:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="869:9" pos:end="869:31"><expr pos:start="869:9" pos:end="869:30"><name pos:start="869:9" pos:end="869:26"><name pos:start="869:9" pos:end="869:9">s</name><operator pos:start="869:10" pos:end="869:11">-&gt;</operator><name pos:start="869:12" pos:end="869:26">msmpeg4_version</name></name> <operator pos:start="869:28" pos:end="869:28">=</operator> <literal type="number" pos:start="869:30" pos:end="869:30">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="871:9" pos:end="871:31"><expr pos:start="871:9" pos:end="871:30"><name pos:start="871:9" pos:end="871:20"><name pos:start="871:9" pos:end="871:13">avctx</name><operator pos:start="871:14" pos:end="871:15">-&gt;</operator><name pos:start="871:16" pos:end="871:20">delay</name></name>       <operator pos:start="871:28" pos:end="871:28">=</operator> <literal type="number" pos:start="871:30" pos:end="871:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="873:9" pos:end="873:31"><expr pos:start="873:9" pos:end="873:30"><name pos:start="873:9" pos:end="873:20"><name pos:start="873:9" pos:end="873:9">s</name><operator pos:start="873:10" pos:end="873:11">-&gt;</operator><name pos:start="873:12" pos:end="873:20">low_delay</name></name>       <operator pos:start="873:28" pos:end="873:28">=</operator> <literal type="number" pos:start="873:30" pos:end="873:30">1</literal></expr>;</expr_stmt>

        <break pos:start="875:9" pos:end="875:14">break;</break>

    <case pos:start="877:5" pos:end="877:31">case <expr pos:start="877:10" pos:end="877:30"><name pos:start="877:10" pos:end="877:30">AV_CODEC_ID_MSMPEG4V3</name></expr>:</case>

        <expr_stmt pos:start="879:9" pos:end="879:40"><expr pos:start="879:9" pos:end="879:39"><name pos:start="879:9" pos:end="879:21"><name pos:start="879:9" pos:end="879:9">s</name><operator pos:start="879:10" pos:end="879:11">-&gt;</operator><name pos:start="879:12" pos:end="879:21">out_format</name></name>        <operator pos:start="879:30" pos:end="879:30">=</operator> <name pos:start="879:32" pos:end="879:39">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="881:9" pos:end="881:33"><expr pos:start="881:9" pos:end="881:32"><name pos:start="881:9" pos:end="881:20"><name pos:start="881:9" pos:end="881:9">s</name><operator pos:start="881:10" pos:end="881:11">-&gt;</operator><name pos:start="881:12" pos:end="881:20">h263_pred</name></name>         <operator pos:start="881:30" pos:end="881:30">=</operator> <literal type="number" pos:start="881:32" pos:end="881:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="883:9" pos:end="883:33"><expr pos:start="883:9" pos:end="883:32"><name pos:start="883:9" pos:end="883:26"><name pos:start="883:9" pos:end="883:9">s</name><operator pos:start="883:10" pos:end="883:11">-&gt;</operator><name pos:start="883:12" pos:end="883:26">unrestricted_mv</name></name>   <operator pos:start="883:30" pos:end="883:30">=</operator> <literal type="number" pos:start="883:32" pos:end="883:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="885:9" pos:end="885:33"><expr pos:start="885:9" pos:end="885:32"><name pos:start="885:9" pos:end="885:26"><name pos:start="885:9" pos:end="885:9">s</name><operator pos:start="885:10" pos:end="885:11">-&gt;</operator><name pos:start="885:12" pos:end="885:26">msmpeg4_version</name></name>   <operator pos:start="885:30" pos:end="885:30">=</operator> <literal type="number" pos:start="885:32" pos:end="885:32">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="887:9" pos:end="887:33"><expr pos:start="887:9" pos:end="887:32"><name pos:start="887:9" pos:end="887:28"><name pos:start="887:9" pos:end="887:9">s</name><operator pos:start="887:10" pos:end="887:11">-&gt;</operator><name pos:start="887:12" pos:end="887:28">flipflop_rounding</name></name> <operator pos:start="887:30" pos:end="887:30">=</operator> <literal type="number" pos:start="887:32" pos:end="887:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="889:9" pos:end="889:33"><expr pos:start="889:9" pos:end="889:32"><name pos:start="889:9" pos:end="889:20"><name pos:start="889:9" pos:end="889:13">avctx</name><operator pos:start="889:14" pos:end="889:15">-&gt;</operator><name pos:start="889:16" pos:end="889:20">delay</name></name>         <operator pos:start="889:30" pos:end="889:30">=</operator> <literal type="number" pos:start="889:32" pos:end="889:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="891:9" pos:end="891:33"><expr pos:start="891:9" pos:end="891:32"><name pos:start="891:9" pos:end="891:20"><name pos:start="891:9" pos:end="891:9">s</name><operator pos:start="891:10" pos:end="891:11">-&gt;</operator><name pos:start="891:12" pos:end="891:20">low_delay</name></name>         <operator pos:start="891:30" pos:end="891:30">=</operator> <literal type="number" pos:start="891:32" pos:end="891:32">1</literal></expr>;</expr_stmt>

        <break pos:start="893:9" pos:end="893:14">break;</break>

    <case pos:start="895:5" pos:end="895:26">case <expr pos:start="895:10" pos:end="895:25"><name pos:start="895:10" pos:end="895:25">AV_CODEC_ID_WMV1</name></expr>:</case>

        <expr_stmt pos:start="897:9" pos:end="897:40"><expr pos:start="897:9" pos:end="897:39"><name pos:start="897:9" pos:end="897:21"><name pos:start="897:9" pos:end="897:9">s</name><operator pos:start="897:10" pos:end="897:11">-&gt;</operator><name pos:start="897:12" pos:end="897:21">out_format</name></name>        <operator pos:start="897:30" pos:end="897:30">=</operator> <name pos:start="897:32" pos:end="897:39">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="899:9" pos:end="899:33"><expr pos:start="899:9" pos:end="899:32"><name pos:start="899:9" pos:end="899:20"><name pos:start="899:9" pos:end="899:9">s</name><operator pos:start="899:10" pos:end="899:11">-&gt;</operator><name pos:start="899:12" pos:end="899:20">h263_pred</name></name>         <operator pos:start="899:30" pos:end="899:30">=</operator> <literal type="number" pos:start="899:32" pos:end="899:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="901:9" pos:end="901:33"><expr pos:start="901:9" pos:end="901:32"><name pos:start="901:9" pos:end="901:26"><name pos:start="901:9" pos:end="901:9">s</name><operator pos:start="901:10" pos:end="901:11">-&gt;</operator><name pos:start="901:12" pos:end="901:26">unrestricted_mv</name></name>   <operator pos:start="901:30" pos:end="901:30">=</operator> <literal type="number" pos:start="901:32" pos:end="901:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="903:9" pos:end="903:33"><expr pos:start="903:9" pos:end="903:32"><name pos:start="903:9" pos:end="903:26"><name pos:start="903:9" pos:end="903:9">s</name><operator pos:start="903:10" pos:end="903:11">-&gt;</operator><name pos:start="903:12" pos:end="903:26">msmpeg4_version</name></name>   <operator pos:start="903:30" pos:end="903:30">=</operator> <literal type="number" pos:start="903:32" pos:end="903:32">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="905:9" pos:end="905:33"><expr pos:start="905:9" pos:end="905:32"><name pos:start="905:9" pos:end="905:28"><name pos:start="905:9" pos:end="905:9">s</name><operator pos:start="905:10" pos:end="905:11">-&gt;</operator><name pos:start="905:12" pos:end="905:28">flipflop_rounding</name></name> <operator pos:start="905:30" pos:end="905:30">=</operator> <literal type="number" pos:start="905:32" pos:end="905:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="907:9" pos:end="907:33"><expr pos:start="907:9" pos:end="907:32"><name pos:start="907:9" pos:end="907:20"><name pos:start="907:9" pos:end="907:13">avctx</name><operator pos:start="907:14" pos:end="907:15">-&gt;</operator><name pos:start="907:16" pos:end="907:20">delay</name></name>         <operator pos:start="907:30" pos:end="907:30">=</operator> <literal type="number" pos:start="907:32" pos:end="907:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="909:9" pos:end="909:33"><expr pos:start="909:9" pos:end="909:32"><name pos:start="909:9" pos:end="909:20"><name pos:start="909:9" pos:end="909:9">s</name><operator pos:start="909:10" pos:end="909:11">-&gt;</operator><name pos:start="909:12" pos:end="909:20">low_delay</name></name>         <operator pos:start="909:30" pos:end="909:30">=</operator> <literal type="number" pos:start="909:32" pos:end="909:32">1</literal></expr>;</expr_stmt>

        <break pos:start="911:9" pos:end="911:14">break;</break>

    <case pos:start="913:5" pos:end="913:26">case <expr pos:start="913:10" pos:end="913:25"><name pos:start="913:10" pos:end="913:25">AV_CODEC_ID_WMV2</name></expr>:</case>

        <expr_stmt pos:start="915:9" pos:end="915:40"><expr pos:start="915:9" pos:end="915:39"><name pos:start="915:9" pos:end="915:21"><name pos:start="915:9" pos:end="915:9">s</name><operator pos:start="915:10" pos:end="915:11">-&gt;</operator><name pos:start="915:12" pos:end="915:21">out_format</name></name>        <operator pos:start="915:30" pos:end="915:30">=</operator> <name pos:start="915:32" pos:end="915:39">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="917:9" pos:end="917:33"><expr pos:start="917:9" pos:end="917:32"><name pos:start="917:9" pos:end="917:20"><name pos:start="917:9" pos:end="917:9">s</name><operator pos:start="917:10" pos:end="917:11">-&gt;</operator><name pos:start="917:12" pos:end="917:20">h263_pred</name></name>         <operator pos:start="917:30" pos:end="917:30">=</operator> <literal type="number" pos:start="917:32" pos:end="917:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="919:9" pos:end="919:33"><expr pos:start="919:9" pos:end="919:32"><name pos:start="919:9" pos:end="919:26"><name pos:start="919:9" pos:end="919:9">s</name><operator pos:start="919:10" pos:end="919:11">-&gt;</operator><name pos:start="919:12" pos:end="919:26">unrestricted_mv</name></name>   <operator pos:start="919:30" pos:end="919:30">=</operator> <literal type="number" pos:start="919:32" pos:end="919:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="921:9" pos:end="921:33"><expr pos:start="921:9" pos:end="921:32"><name pos:start="921:9" pos:end="921:26"><name pos:start="921:9" pos:end="921:9">s</name><operator pos:start="921:10" pos:end="921:11">-&gt;</operator><name pos:start="921:12" pos:end="921:26">msmpeg4_version</name></name>   <operator pos:start="921:30" pos:end="921:30">=</operator> <literal type="number" pos:start="921:32" pos:end="921:32">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="923:9" pos:end="923:33"><expr pos:start="923:9" pos:end="923:32"><name pos:start="923:9" pos:end="923:28"><name pos:start="923:9" pos:end="923:9">s</name><operator pos:start="923:10" pos:end="923:11">-&gt;</operator><name pos:start="923:12" pos:end="923:28">flipflop_rounding</name></name> <operator pos:start="923:30" pos:end="923:30">=</operator> <literal type="number" pos:start="923:32" pos:end="923:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="925:9" pos:end="925:33"><expr pos:start="925:9" pos:end="925:32"><name pos:start="925:9" pos:end="925:20"><name pos:start="925:9" pos:end="925:13">avctx</name><operator pos:start="925:14" pos:end="925:15">-&gt;</operator><name pos:start="925:16" pos:end="925:20">delay</name></name>         <operator pos:start="925:30" pos:end="925:30">=</operator> <literal type="number" pos:start="925:32" pos:end="925:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="927:9" pos:end="927:33"><expr pos:start="927:9" pos:end="927:32"><name pos:start="927:9" pos:end="927:20"><name pos:start="927:9" pos:end="927:9">s</name><operator pos:start="927:10" pos:end="927:11">-&gt;</operator><name pos:start="927:12" pos:end="927:20">low_delay</name></name>         <operator pos:start="927:30" pos:end="927:30">=</operator> <literal type="number" pos:start="927:32" pos:end="927:32">1</literal></expr>;</expr_stmt>

        <break pos:start="929:9" pos:end="929:14">break;</break>

    <default pos:start="931:5" pos:end="931:12">default:</default>

        <return pos:start="933:9" pos:end="933:18">return <expr pos:start="933:16" pos:end="933:17"><operator pos:start="933:16" pos:end="933:16">-</operator><literal type="number" pos:start="933:17" pos:end="933:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="939:5" pos:end="939:40"><expr pos:start="939:5" pos:end="939:39"><name pos:start="939:5" pos:end="939:23"><name pos:start="939:5" pos:end="939:9">avctx</name><operator pos:start="939:10" pos:end="939:11">-&gt;</operator><name pos:start="939:12" pos:end="939:23">has_b_frames</name></name> <operator pos:start="939:25" pos:end="939:25">=</operator> <operator pos:start="939:27" pos:end="939:27">!</operator><name pos:start="939:28" pos:end="939:39"><name pos:start="939:28" pos:end="939:28">s</name><operator pos:start="939:29" pos:end="939:30">-&gt;</operator><name pos:start="939:31" pos:end="939:39">low_delay</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="943:5" pos:end="943:20"><expr pos:start="943:5" pos:end="943:19"><name pos:start="943:5" pos:end="943:15"><name pos:start="943:5" pos:end="943:5">s</name><operator pos:start="943:6" pos:end="943:7">-&gt;</operator><name pos:start="943:8" pos:end="943:15">encoding</name></name> <operator pos:start="943:17" pos:end="943:17">=</operator> <literal type="number" pos:start="943:19" pos:end="943:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="947:5" pos:end="953:51"><expr pos:start="947:5" pos:end="953:50"><name pos:start="947:5" pos:end="947:24"><name pos:start="947:5" pos:end="947:5">s</name><operator pos:start="947:6" pos:end="947:7">-&gt;</operator><name pos:start="947:8" pos:end="947:24">progressive_frame</name></name>    <operator pos:start="947:29" pos:end="947:29">=</operator>

    <name pos:start="949:5" pos:end="949:27"><name pos:start="949:5" pos:end="949:5">s</name><operator pos:start="949:6" pos:end="949:7">-&gt;</operator><name pos:start="949:8" pos:end="949:27">progressive_sequence</name></name> <operator pos:start="949:29" pos:end="949:29">=</operator> <operator pos:start="949:31" pos:end="949:31">!</operator><operator pos:start="949:32" pos:end="949:32">(</operator><name pos:start="949:33" pos:end="949:44"><name pos:start="949:33" pos:end="949:37">avctx</name><operator pos:start="949:38" pos:end="949:39">-&gt;</operator><name pos:start="949:40" pos:end="949:44">flags</name></name> <operator pos:start="949:46" pos:end="949:46">&amp;</operator> <operator pos:start="949:48" pos:end="949:48">(</operator><name pos:start="949:49" pos:end="949:76">AV_CODEC_FLAG_INTERLACED_DCT</name> <operator pos:start="949:78" pos:end="949:78">|</operator>

                                                <name pos:start="951:49" pos:end="951:75">AV_CODEC_FLAG_INTERLACED_ME</name><operator pos:start="951:76" pos:end="951:76">)</operator> <operator pos:start="951:78" pos:end="951:79">||</operator>

                                <name pos:start="953:33" pos:end="953:49"><name pos:start="953:33" pos:end="953:33">s</name><operator pos:start="953:34" pos:end="953:35">-&gt;</operator><name pos:start="953:36" pos:end="953:49">alternate_scan</name></name><operator pos:start="953:50" pos:end="953:50">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="957:5" pos:end="957:14">/* init */</comment>

    <expr_stmt pos:start="959:5" pos:end="959:24"><expr pos:start="959:5" pos:end="959:23"><call pos:start="959:5" pos:end="959:23"><name pos:start="959:5" pos:end="959:20">ff_mpv_idct_init</name><argument_list pos:start="959:21" pos:end="959:23">(<argument pos:start="959:22" pos:end="959:22"><expr pos:start="959:22" pos:end="959:22"><name pos:start="959:22" pos:end="959:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="961:5" pos:end="963:18"><if pos:start="961:5" pos:end="963:18">if <condition pos:start="961:8" pos:end="961:34">(<expr pos:start="961:9" pos:end="961:33"><call pos:start="961:9" pos:end="961:29"><name pos:start="961:9" pos:end="961:26">ff_mpv_common_init</name><argument_list pos:start="961:27" pos:end="961:29">(<argument pos:start="961:28" pos:end="961:28"><expr pos:start="961:28" pos:end="961:28"><name pos:start="961:28" pos:end="961:28">s</name></expr></argument>)</argument_list></call> <operator pos:start="961:31" pos:end="961:31">&lt;</operator> <literal type="number" pos:start="961:33" pos:end="961:33">0</literal></expr>)</condition><block type="pseudo" pos:start="963:9" pos:end="963:18"><block_content pos:start="963:9" pos:end="963:18">

        <return pos:start="963:9" pos:end="963:18">return <expr pos:start="963:16" pos:end="963:17"><operator pos:start="963:16" pos:end="963:16">-</operator><literal type="number" pos:start="963:17" pos:end="963:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="967:5" pos:end="969:34"><if pos:start="967:5" pos:end="969:34">if <condition pos:start="967:8" pos:end="967:17">(<expr pos:start="967:9" pos:end="967:16"><name pos:start="967:9" pos:end="967:16">ARCH_X86</name></expr>)</condition><block type="pseudo" pos:start="969:9" pos:end="969:34"><block_content pos:start="969:9" pos:end="969:34">

        <expr_stmt pos:start="969:9" pos:end="969:34"><expr pos:start="969:9" pos:end="969:33"><call pos:start="969:9" pos:end="969:33"><name pos:start="969:9" pos:end="969:30">ff_mpv_encode_init_x86</name><argument_list pos:start="969:31" pos:end="969:33">(<argument pos:start="969:32" pos:end="969:32"><expr pos:start="969:32" pos:end="969:32"><name pos:start="969:32" pos:end="969:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="973:5" pos:end="973:37"><expr pos:start="973:5" pos:end="973:36"><call pos:start="973:5" pos:end="973:36"><name pos:start="973:5" pos:end="973:19">ff_fdctdsp_init</name><argument_list pos:start="973:20" pos:end="973:36">(<argument pos:start="973:21" pos:end="973:28"><expr pos:start="973:21" pos:end="973:28"><operator pos:start="973:21" pos:end="973:21">&amp;</operator><name pos:start="973:22" pos:end="973:28"><name pos:start="973:22" pos:end="973:22">s</name><operator pos:start="973:23" pos:end="973:24">-&gt;</operator><name pos:start="973:25" pos:end="973:28">fdsp</name></name></expr></argument>, <argument pos:start="973:31" pos:end="973:35"><expr pos:start="973:31" pos:end="973:35"><name pos:start="973:31" pos:end="973:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="975:5" pos:end="975:36"><expr pos:start="975:5" pos:end="975:35"><call pos:start="975:5" pos:end="975:35"><name pos:start="975:5" pos:end="975:18">ff_me_cmp_init</name><argument_list pos:start="975:19" pos:end="975:35">(<argument pos:start="975:20" pos:end="975:27"><expr pos:start="975:20" pos:end="975:27"><operator pos:start="975:20" pos:end="975:20">&amp;</operator><name pos:start="975:21" pos:end="975:27"><name pos:start="975:21" pos:end="975:21">s</name><operator pos:start="975:22" pos:end="975:23">-&gt;</operator><name pos:start="975:24" pos:end="975:27">mecc</name></name></expr></argument>, <argument pos:start="975:30" pos:end="975:34"><expr pos:start="975:30" pos:end="975:34"><name pos:start="975:30" pos:end="975:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="977:5" pos:end="977:50"><expr pos:start="977:5" pos:end="977:49"><call pos:start="977:5" pos:end="977:49"><name pos:start="977:5" pos:end="977:27">ff_mpegvideoencdsp_init</name><argument_list pos:start="977:28" pos:end="977:49">(<argument pos:start="977:29" pos:end="977:41"><expr pos:start="977:29" pos:end="977:41"><operator pos:start="977:29" pos:end="977:29">&amp;</operator><name pos:start="977:30" pos:end="977:41"><name pos:start="977:30" pos:end="977:30">s</name><operator pos:start="977:31" pos:end="977:32">-&gt;</operator><name pos:start="977:33" pos:end="977:41">mpvencdsp</name></name></expr></argument>, <argument pos:start="977:44" pos:end="977:48"><expr pos:start="977:44" pos:end="977:48"><name pos:start="977:44" pos:end="977:48">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="979:5" pos:end="979:41"><expr pos:start="979:5" pos:end="979:40"><call pos:start="979:5" pos:end="979:40"><name pos:start="979:5" pos:end="979:23">ff_pixblockdsp_init</name><argument_list pos:start="979:24" pos:end="979:40">(<argument pos:start="979:25" pos:end="979:32"><expr pos:start="979:25" pos:end="979:32"><operator pos:start="979:25" pos:end="979:25">&amp;</operator><name pos:start="979:26" pos:end="979:32"><name pos:start="979:26" pos:end="979:26">s</name><operator pos:start="979:27" pos:end="979:28">-&gt;</operator><name pos:start="979:29" pos:end="979:32">pdsp</name></name></expr></argument>, <argument pos:start="979:35" pos:end="979:39"><expr pos:start="979:35" pos:end="979:39"><name pos:start="979:35" pos:end="979:39">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="981:5" pos:end="981:30"><expr pos:start="981:5" pos:end="981:29"><call pos:start="981:5" pos:end="981:29"><name pos:start="981:5" pos:end="981:19">ff_qpeldsp_init</name><argument_list pos:start="981:20" pos:end="981:29">(<argument pos:start="981:21" pos:end="981:28"><expr pos:start="981:21" pos:end="981:28"><operator pos:start="981:21" pos:end="981:21">&amp;</operator><name pos:start="981:22" pos:end="981:28"><name pos:start="981:22" pos:end="981:22">s</name><operator pos:start="981:23" pos:end="981:24">-&gt;</operator><name pos:start="981:25" pos:end="981:28">qdsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="985:5" pos:end="993:5"><if pos:start="985:5" pos:end="993:5">if <condition pos:start="985:8" pos:end="985:27">(<expr pos:start="985:9" pos:end="985:26"><name pos:start="985:9" pos:end="985:26"><name pos:start="985:9" pos:end="985:9">s</name><operator pos:start="985:10" pos:end="985:11">-&gt;</operator><name pos:start="985:12" pos:end="985:26">msmpeg4_version</name></name></expr>)</condition> <block pos:start="985:29" pos:end="993:5">{<block_content pos:start="987:9" pos:end="991:65">

        <expr_stmt pos:start="987:9" pos:end="991:65"><expr pos:start="987:9" pos:end="991:64"><call pos:start="987:9" pos:end="991:64"><name pos:start="987:9" pos:end="987:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="987:26" pos:end="991:64">(<argument pos:start="987:27" pos:end="987:34"><expr pos:start="987:27" pos:end="987:34"><name pos:start="987:27" pos:end="987:34"><name pos:start="987:27" pos:end="987:27">s</name><operator pos:start="987:28" pos:end="987:29">-&gt;</operator><name pos:start="987:30" pos:end="987:34">avctx</name></name></expr></argument>, <argument pos:start="987:37" pos:end="987:47"><expr pos:start="987:37" pos:end="987:47"><name pos:start="987:37" pos:end="987:47"><name pos:start="987:37" pos:end="987:37">s</name><operator pos:start="987:38" pos:end="987:39">-&gt;</operator><name pos:start="987:40" pos:end="987:47">ac_stats</name></name></expr></argument>,

                          <argument pos:start="989:27" pos:end="991:57"><expr pos:start="989:27" pos:end="991:57"><literal type="number" pos:start="989:27" pos:end="989:27">2</literal> <operator pos:start="989:29" pos:end="989:29">*</operator> <literal type="number" pos:start="989:31" pos:end="989:31">2</literal> <operator pos:start="989:33" pos:end="989:33">*</operator> <operator pos:start="989:35" pos:end="989:35">(</operator><name pos:start="989:36" pos:end="989:44">MAX_LEVEL</name> <operator pos:start="989:46" pos:end="989:46">+</operator> <literal type="number" pos:start="989:48" pos:end="989:48">1</literal><operator pos:start="989:49" pos:end="989:49">)</operator> <operator pos:start="989:51" pos:end="989:51">*</operator>

                          <operator pos:start="991:27" pos:end="991:27">(</operator><name pos:start="991:28" pos:end="991:34">MAX_RUN</name> <operator pos:start="991:36" pos:end="991:36">+</operator> <literal type="number" pos:start="991:38" pos:end="991:38">1</literal><operator pos:start="991:39" pos:end="991:39">)</operator> <operator pos:start="991:41" pos:end="991:41">*</operator> <literal type="number" pos:start="991:43" pos:end="991:43">2</literal> <operator pos:start="991:45" pos:end="991:45">*</operator> <sizeof pos:start="991:47" pos:end="991:57">sizeof<argument_list pos:start="991:53" pos:end="991:57">(<argument pos:start="991:54" pos:end="991:56"><expr pos:start="991:54" pos:end="991:56"><name pos:start="991:54" pos:end="991:56">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="991:60" pos:end="991:63"><expr pos:start="991:60" pos:end="991:63"><name pos:start="991:60" pos:end="991:63">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="995:5" pos:end="995:64"><expr pos:start="995:5" pos:end="995:63"><call pos:start="995:5" pos:end="995:63"><name pos:start="995:5" pos:end="995:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="995:22" pos:end="995:63">(<argument pos:start="995:23" pos:end="995:30"><expr pos:start="995:23" pos:end="995:30"><name pos:start="995:23" pos:end="995:30"><name pos:start="995:23" pos:end="995:23">s</name><operator pos:start="995:24" pos:end="995:25">-&gt;</operator><name pos:start="995:26" pos:end="995:30">avctx</name></name></expr></argument>, <argument pos:start="995:33" pos:end="995:51"><expr pos:start="995:33" pos:end="995:51"><name pos:start="995:33" pos:end="995:51"><name pos:start="995:33" pos:end="995:33">s</name><operator pos:start="995:34" pos:end="995:35">-&gt;</operator><name pos:start="995:36" pos:end="995:40">avctx</name><operator pos:start="995:41" pos:end="995:42">-&gt;</operator><name pos:start="995:43" pos:end="995:51">stats_out</name></name></expr></argument>, <argument pos:start="995:54" pos:end="995:56"><expr pos:start="995:54" pos:end="995:56"><literal type="number" pos:start="995:54" pos:end="995:56">256</literal></expr></argument>, <argument pos:start="995:59" pos:end="995:62"><expr pos:start="995:59" pos:end="995:62"><name pos:start="995:59" pos:end="995:62">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="999:5" pos:end="999:82"><expr pos:start="999:5" pos:end="999:81"><call pos:start="999:5" pos:end="999:81"><name pos:start="999:5" pos:end="999:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="999:22" pos:end="999:81">(<argument pos:start="999:23" pos:end="999:30"><expr pos:start="999:23" pos:end="999:30"><name pos:start="999:23" pos:end="999:30"><name pos:start="999:23" pos:end="999:23">s</name><operator pos:start="999:24" pos:end="999:25">-&gt;</operator><name pos:start="999:26" pos:end="999:30">avctx</name></name></expr></argument>, <argument pos:start="999:33" pos:end="999:49"><expr pos:start="999:33" pos:end="999:49"><name pos:start="999:33" pos:end="999:49"><name pos:start="999:33" pos:end="999:33">s</name><operator pos:start="999:34" pos:end="999:35">-&gt;</operator><name pos:start="999:36" pos:end="999:49">q_intra_matrix</name></name></expr></argument>,   <argument pos:start="999:54" pos:end="999:74"><expr pos:start="999:54" pos:end="999:74"><literal type="number" pos:start="999:54" pos:end="999:55">64</literal> <operator pos:start="999:57" pos:end="999:57">*</operator> <literal type="number" pos:start="999:59" pos:end="999:60">32</literal> <operator pos:start="999:62" pos:end="999:62">*</operator> <sizeof pos:start="999:64" pos:end="999:74">sizeof<argument_list pos:start="999:70" pos:end="999:74">(<argument pos:start="999:71" pos:end="999:73"><expr pos:start="999:71" pos:end="999:73"><name pos:start="999:71" pos:end="999:73">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="999:77" pos:end="999:80"><expr pos:start="999:77" pos:end="999:80"><name pos:start="999:77" pos:end="999:80">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1001:5" pos:end="1001:82"><expr pos:start="1001:5" pos:end="1001:81"><call pos:start="1001:5" pos:end="1001:81"><name pos:start="1001:5" pos:end="1001:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1001:22" pos:end="1001:81">(<argument pos:start="1001:23" pos:end="1001:30"><expr pos:start="1001:23" pos:end="1001:30"><name pos:start="1001:23" pos:end="1001:30"><name pos:start="1001:23" pos:end="1001:23">s</name><operator pos:start="1001:24" pos:end="1001:25">-&gt;</operator><name pos:start="1001:26" pos:end="1001:30">avctx</name></name></expr></argument>, <argument pos:start="1001:33" pos:end="1001:49"><expr pos:start="1001:33" pos:end="1001:49"><name pos:start="1001:33" pos:end="1001:49"><name pos:start="1001:33" pos:end="1001:33">s</name><operator pos:start="1001:34" pos:end="1001:35">-&gt;</operator><name pos:start="1001:36" pos:end="1001:49">q_inter_matrix</name></name></expr></argument>,   <argument pos:start="1001:54" pos:end="1001:74"><expr pos:start="1001:54" pos:end="1001:74"><literal type="number" pos:start="1001:54" pos:end="1001:55">64</literal> <operator pos:start="1001:57" pos:end="1001:57">*</operator> <literal type="number" pos:start="1001:59" pos:end="1001:60">32</literal> <operator pos:start="1001:62" pos:end="1001:62">*</operator> <sizeof pos:start="1001:64" pos:end="1001:74">sizeof<argument_list pos:start="1001:70" pos:end="1001:74">(<argument pos:start="1001:71" pos:end="1001:73"><expr pos:start="1001:71" pos:end="1001:73"><name pos:start="1001:71" pos:end="1001:73">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1001:77" pos:end="1001:80"><expr pos:start="1001:77" pos:end="1001:80"><name pos:start="1001:77" pos:end="1001:80">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1003:5" pos:end="1003:91"><expr pos:start="1003:5" pos:end="1003:90"><call pos:start="1003:5" pos:end="1003:90"><name pos:start="1003:5" pos:end="1003:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1003:22" pos:end="1003:90">(<argument pos:start="1003:23" pos:end="1003:30"><expr pos:start="1003:23" pos:end="1003:30"><name pos:start="1003:23" pos:end="1003:30"><name pos:start="1003:23" pos:end="1003:23">s</name><operator pos:start="1003:24" pos:end="1003:25">-&gt;</operator><name pos:start="1003:26" pos:end="1003:30">avctx</name></name></expr></argument>, <argument pos:start="1003:33" pos:end="1003:51"><expr pos:start="1003:33" pos:end="1003:51"><name pos:start="1003:33" pos:end="1003:51"><name pos:start="1003:33" pos:end="1003:33">s</name><operator pos:start="1003:34" pos:end="1003:35">-&gt;</operator><name pos:start="1003:36" pos:end="1003:51">q_intra_matrix16</name></name></expr></argument>, <argument pos:start="1003:54" pos:end="1003:83"><expr pos:start="1003:54" pos:end="1003:83"><literal type="number" pos:start="1003:54" pos:end="1003:55">64</literal> <operator pos:start="1003:57" pos:end="1003:57">*</operator> <literal type="number" pos:start="1003:59" pos:end="1003:60">32</literal> <operator pos:start="1003:62" pos:end="1003:62">*</operator> <literal type="number" pos:start="1003:64" pos:end="1003:64">2</literal> <operator pos:start="1003:66" pos:end="1003:66">*</operator> <sizeof pos:start="1003:68" pos:end="1003:83">sizeof<argument_list pos:start="1003:74" pos:end="1003:83">(<argument pos:start="1003:75" pos:end="1003:82"><expr pos:start="1003:75" pos:end="1003:82"><name pos:start="1003:75" pos:end="1003:82">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1003:86" pos:end="1003:89"><expr pos:start="1003:86" pos:end="1003:89"><name pos:start="1003:86" pos:end="1003:89">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1005:5" pos:end="1005:91"><expr pos:start="1005:5" pos:end="1005:90"><call pos:start="1005:5" pos:end="1005:90"><name pos:start="1005:5" pos:end="1005:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1005:22" pos:end="1005:90">(<argument pos:start="1005:23" pos:end="1005:30"><expr pos:start="1005:23" pos:end="1005:30"><name pos:start="1005:23" pos:end="1005:30"><name pos:start="1005:23" pos:end="1005:23">s</name><operator pos:start="1005:24" pos:end="1005:25">-&gt;</operator><name pos:start="1005:26" pos:end="1005:30">avctx</name></name></expr></argument>, <argument pos:start="1005:33" pos:end="1005:51"><expr pos:start="1005:33" pos:end="1005:51"><name pos:start="1005:33" pos:end="1005:51"><name pos:start="1005:33" pos:end="1005:33">s</name><operator pos:start="1005:34" pos:end="1005:35">-&gt;</operator><name pos:start="1005:36" pos:end="1005:51">q_inter_matrix16</name></name></expr></argument>, <argument pos:start="1005:54" pos:end="1005:83"><expr pos:start="1005:54" pos:end="1005:83"><literal type="number" pos:start="1005:54" pos:end="1005:55">64</literal> <operator pos:start="1005:57" pos:end="1005:57">*</operator> <literal type="number" pos:start="1005:59" pos:end="1005:60">32</literal> <operator pos:start="1005:62" pos:end="1005:62">*</operator> <literal type="number" pos:start="1005:64" pos:end="1005:64">2</literal> <operator pos:start="1005:66" pos:end="1005:66">*</operator> <sizeof pos:start="1005:68" pos:end="1005:83">sizeof<argument_list pos:start="1005:74" pos:end="1005:83">(<argument pos:start="1005:75" pos:end="1005:82"><expr pos:start="1005:75" pos:end="1005:82"><name pos:start="1005:75" pos:end="1005:82">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1005:86" pos:end="1005:89"><expr pos:start="1005:86" pos:end="1005:89"><name pos:start="1005:86" pos:end="1005:89">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1007:5" pos:end="1009:67"><expr pos:start="1007:5" pos:end="1009:66"><call pos:start="1007:5" pos:end="1009:66"><name pos:start="1007:5" pos:end="1007:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1007:22" pos:end="1009:66">(<argument pos:start="1007:23" pos:end="1007:30"><expr pos:start="1007:23" pos:end="1007:30"><name pos:start="1007:23" pos:end="1007:30"><name pos:start="1007:23" pos:end="1007:23">s</name><operator pos:start="1007:24" pos:end="1007:25">-&gt;</operator><name pos:start="1007:26" pos:end="1007:30">avctx</name></name></expr></argument>, <argument pos:start="1007:33" pos:end="1007:48"><expr pos:start="1007:33" pos:end="1007:48"><name pos:start="1007:33" pos:end="1007:48"><name pos:start="1007:33" pos:end="1007:33">s</name><operator pos:start="1007:34" pos:end="1007:35">-&gt;</operator><name pos:start="1007:36" pos:end="1007:48">input_picture</name></name></expr></argument>,

                      <argument pos:start="1009:23" pos:end="1009:59"><expr pos:start="1009:23" pos:end="1009:59"><name pos:start="1009:23" pos:end="1009:39">MAX_PICTURE_COUNT</name> <operator pos:start="1009:41" pos:end="1009:41">*</operator> <sizeof pos:start="1009:43" pos:end="1009:59">sizeof<argument_list pos:start="1009:49" pos:end="1009:59">(<argument pos:start="1009:50" pos:end="1009:58"><expr pos:start="1009:50" pos:end="1009:58"><name pos:start="1009:50" pos:end="1009:56">Picture</name> <operator pos:start="1009:58" pos:end="1009:58">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1009:62" pos:end="1009:65"><expr pos:start="1009:62" pos:end="1009:65"><name pos:start="1009:62" pos:end="1009:65">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1011:5" pos:end="1013:67"><expr pos:start="1011:5" pos:end="1013:66"><call pos:start="1011:5" pos:end="1013:66"><name pos:start="1011:5" pos:end="1011:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1011:22" pos:end="1013:66">(<argument pos:start="1011:23" pos:end="1011:30"><expr pos:start="1011:23" pos:end="1011:30"><name pos:start="1011:23" pos:end="1011:30"><name pos:start="1011:23" pos:end="1011:23">s</name><operator pos:start="1011:24" pos:end="1011:25">-&gt;</operator><name pos:start="1011:26" pos:end="1011:30">avctx</name></name></expr></argument>, <argument pos:start="1011:33" pos:end="1011:58"><expr pos:start="1011:33" pos:end="1011:58"><name pos:start="1011:33" pos:end="1011:58"><name pos:start="1011:33" pos:end="1011:33">s</name><operator pos:start="1011:34" pos:end="1011:35">-&gt;</operator><name pos:start="1011:36" pos:end="1011:58">reordered_input_picture</name></name></expr></argument>,

                      <argument pos:start="1013:23" pos:end="1013:59"><expr pos:start="1013:23" pos:end="1013:59"><name pos:start="1013:23" pos:end="1013:39">MAX_PICTURE_COUNT</name> <operator pos:start="1013:41" pos:end="1013:41">*</operator> <sizeof pos:start="1013:43" pos:end="1013:59">sizeof<argument_list pos:start="1013:49" pos:end="1013:59">(<argument pos:start="1013:50" pos:end="1013:58"><expr pos:start="1013:50" pos:end="1013:58"><name pos:start="1013:50" pos:end="1013:56">Picture</name> <operator pos:start="1013:58" pos:end="1013:58">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1013:62" pos:end="1013:65"><expr pos:start="1013:62" pos:end="1013:65"><name pos:start="1013:62" pos:end="1013:65">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1017:5" pos:end="1023:5"><if pos:start="1017:5" pos:end="1023:5">if <condition pos:start="1017:8" pos:end="1017:34">(<expr pos:start="1017:9" pos:end="1017:33"><name pos:start="1017:9" pos:end="1017:33"><name pos:start="1017:9" pos:end="1017:9">s</name><operator pos:start="1017:10" pos:end="1017:11">-&gt;</operator><name pos:start="1017:12" pos:end="1017:16">avctx</name><operator pos:start="1017:17" pos:end="1017:18">-&gt;</operator><name pos:start="1017:19" pos:end="1017:33">noise_reduction</name></name></expr>)</condition> <block pos:start="1017:36" pos:end="1023:5">{<block_content pos:start="1019:9" pos:end="1021:59">

        <expr_stmt pos:start="1019:9" pos:end="1021:59"><expr pos:start="1019:9" pos:end="1021:58"><call pos:start="1019:9" pos:end="1021:58"><name pos:start="1019:9" pos:end="1019:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1019:26" pos:end="1021:58">(<argument pos:start="1019:27" pos:end="1019:34"><expr pos:start="1019:27" pos:end="1019:34"><name pos:start="1019:27" pos:end="1019:34"><name pos:start="1019:27" pos:end="1019:27">s</name><operator pos:start="1019:28" pos:end="1019:29">-&gt;</operator><name pos:start="1019:30" pos:end="1019:34">avctx</name></name></expr></argument>, <argument pos:start="1019:37" pos:end="1019:49"><expr pos:start="1019:37" pos:end="1019:49"><name pos:start="1019:37" pos:end="1019:49"><name pos:start="1019:37" pos:end="1019:37">s</name><operator pos:start="1019:38" pos:end="1019:39">-&gt;</operator><name pos:start="1019:40" pos:end="1019:49">dct_offset</name></name></expr></argument>,

                          <argument pos:start="1021:27" pos:end="1021:51"><expr pos:start="1021:27" pos:end="1021:51"><literal type="number" pos:start="1021:27" pos:end="1021:27">2</literal> <operator pos:start="1021:29" pos:end="1021:29">*</operator> <literal type="number" pos:start="1021:31" pos:end="1021:32">64</literal> <operator pos:start="1021:34" pos:end="1021:34">*</operator> <sizeof pos:start="1021:36" pos:end="1021:51">sizeof<argument_list pos:start="1021:42" pos:end="1021:51">(<argument pos:start="1021:43" pos:end="1021:50"><expr pos:start="1021:43" pos:end="1021:50"><name pos:start="1021:43" pos:end="1021:50">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1021:54" pos:end="1021:57"><expr pos:start="1021:54" pos:end="1021:57"><name pos:start="1021:54" pos:end="1021:57">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1027:5" pos:end="1029:37"><if pos:start="1027:5" pos:end="1029:37">if <condition pos:start="1027:8" pos:end="1027:28">(<expr pos:start="1027:9" pos:end="1027:27"><name pos:start="1027:9" pos:end="1027:27">CONFIG_H263_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="1029:9" pos:end="1029:37"><block_content pos:start="1029:9" pos:end="1029:37">

        <expr_stmt pos:start="1029:9" pos:end="1029:37"><expr pos:start="1029:9" pos:end="1029:36"><call pos:start="1029:9" pos:end="1029:36"><name pos:start="1029:9" pos:end="1029:23">ff_h263dsp_init</name><argument_list pos:start="1029:24" pos:end="1029:36">(<argument pos:start="1029:25" pos:end="1029:35"><expr pos:start="1029:25" pos:end="1029:35"><operator pos:start="1029:25" pos:end="1029:25">&amp;</operator><name pos:start="1029:26" pos:end="1029:35"><name pos:start="1029:26" pos:end="1029:26">s</name><operator pos:start="1029:27" pos:end="1029:28">-&gt;</operator><name pos:start="1029:29" pos:end="1029:35">h263dsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1031:5" pos:end="1033:44"><if pos:start="1031:5" pos:end="1033:44">if <condition pos:start="1031:8" pos:end="1031:25">(<expr pos:start="1031:9" pos:end="1031:24"><operator pos:start="1031:9" pos:end="1031:9">!</operator><name pos:start="1031:10" pos:end="1031:24"><name pos:start="1031:10" pos:end="1031:10">s</name><operator pos:start="1031:11" pos:end="1031:12">-&gt;</operator><name pos:start="1031:13" pos:end="1031:24">dct_quantize</name></name></expr>)</condition><block type="pseudo" pos:start="1033:9" pos:end="1033:44"><block_content pos:start="1033:9" pos:end="1033:44">

        <expr_stmt pos:start="1033:9" pos:end="1033:44"><expr pos:start="1033:9" pos:end="1033:43"><name pos:start="1033:9" pos:end="1033:23"><name pos:start="1033:9" pos:end="1033:9">s</name><operator pos:start="1033:10" pos:end="1033:11">-&gt;</operator><name pos:start="1033:12" pos:end="1033:23">dct_quantize</name></name> <operator pos:start="1033:25" pos:end="1033:25">=</operator> <name pos:start="1033:27" pos:end="1033:43">ff_dct_quantize_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1035:5" pos:end="1037:40"><if pos:start="1035:5" pos:end="1037:40">if <condition pos:start="1035:8" pos:end="1035:24">(<expr pos:start="1035:9" pos:end="1035:23"><operator pos:start="1035:9" pos:end="1035:9">!</operator><name pos:start="1035:10" pos:end="1035:23"><name pos:start="1035:10" pos:end="1035:10">s</name><operator pos:start="1035:11" pos:end="1035:12">-&gt;</operator><name pos:start="1035:13" pos:end="1035:23">denoise_dct</name></name></expr>)</condition><block type="pseudo" pos:start="1037:9" pos:end="1037:40"><block_content pos:start="1037:9" pos:end="1037:40">

        <expr_stmt pos:start="1037:9" pos:end="1037:40"><expr pos:start="1037:9" pos:end="1037:39"><name pos:start="1037:9" pos:end="1037:22"><name pos:start="1037:9" pos:end="1037:9">s</name><operator pos:start="1037:10" pos:end="1037:11">-&gt;</operator><name pos:start="1037:12" pos:end="1037:22">denoise_dct</name></name>  <operator pos:start="1037:25" pos:end="1037:25">=</operator> <name pos:start="1037:27" pos:end="1037:39">denoise_dct_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1039:5" pos:end="1039:43"><expr pos:start="1039:5" pos:end="1039:42"><name pos:start="1039:5" pos:end="1039:24"><name pos:start="1039:5" pos:end="1039:5">s</name><operator pos:start="1039:6" pos:end="1039:7">-&gt;</operator><name pos:start="1039:8" pos:end="1039:24">fast_dct_quantize</name></name> <operator pos:start="1039:26" pos:end="1039:26">=</operator> <name pos:start="1039:28" pos:end="1039:42"><name pos:start="1039:28" pos:end="1039:28">s</name><operator pos:start="1039:29" pos:end="1039:30">-&gt;</operator><name pos:start="1039:31" pos:end="1039:42">dct_quantize</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="1041:5" pos:end="1043:50"><if pos:start="1041:5" pos:end="1043:50">if <condition pos:start="1041:8" pos:end="1041:23">(<expr pos:start="1041:9" pos:end="1041:22"><name pos:start="1041:9" pos:end="1041:22"><name pos:start="1041:9" pos:end="1041:13">avctx</name><operator pos:start="1041:14" pos:end="1041:15">-&gt;</operator><name pos:start="1041:16" pos:end="1041:22">trellis</name></name></expr>)</condition><block type="pseudo" pos:start="1043:9" pos:end="1043:50"><block_content pos:start="1043:9" pos:end="1043:50">

        <expr_stmt pos:start="1043:9" pos:end="1043:50"><expr pos:start="1043:9" pos:end="1043:49"><name pos:start="1043:9" pos:end="1043:23"><name pos:start="1043:9" pos:end="1043:9">s</name><operator pos:start="1043:10" pos:end="1043:11">-&gt;</operator><name pos:start="1043:12" pos:end="1043:23">dct_quantize</name></name>  <operator pos:start="1043:26" pos:end="1043:26">=</operator> <name pos:start="1043:28" pos:end="1043:49">dct_quantize_trellis_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1047:5" pos:end="1049:61"><if pos:start="1047:5" pos:end="1049:61">if <condition pos:start="1047:8" pos:end="1047:75">(<expr pos:start="1047:9" pos:end="1047:74"><operator pos:start="1047:9" pos:end="1047:9">(</operator><name pos:start="1047:10" pos:end="1047:29">CONFIG_H263P_ENCODER</name> <operator pos:start="1047:31" pos:end="1047:32">||</operator> <name pos:start="1047:34" pos:end="1047:52">CONFIG_RV20_ENCODER</name><operator pos:start="1047:53" pos:end="1047:53">)</operator> <operator pos:start="1047:55" pos:end="1047:56">&amp;&amp;</operator> <name pos:start="1047:58" pos:end="1047:74"><name pos:start="1047:58" pos:end="1047:58">s</name><operator pos:start="1047:59" pos:end="1047:60">-&gt;</operator><name pos:start="1047:61" pos:end="1047:74">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="1049:9" pos:end="1049:61"><block_content pos:start="1049:9" pos:end="1049:61">

        <expr_stmt pos:start="1049:9" pos:end="1049:61"><expr pos:start="1049:9" pos:end="1049:60"><name pos:start="1049:9" pos:end="1049:30"><name pos:start="1049:9" pos:end="1049:9">s</name><operator pos:start="1049:10" pos:end="1049:11">-&gt;</operator><name pos:start="1049:12" pos:end="1049:30">chroma_qscale_table</name></name> <operator pos:start="1049:32" pos:end="1049:32">=</operator> <name pos:start="1049:34" pos:end="1049:60">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="1053:5" pos:end="1053:27"><expr pos:start="1053:5" pos:end="1053:26"><name pos:start="1053:5" pos:end="1053:22"><name pos:start="1053:5" pos:end="1053:5">s</name><operator pos:start="1053:6" pos:end="1053:7">-&gt;</operator><name pos:start="1053:8" pos:end="1053:22">quant_precision</name></name> <operator pos:start="1053:24" pos:end="1053:24">=</operator> <literal type="number" pos:start="1053:26" pos:end="1053:26">5</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="1057:5" pos:end="1057:70"><expr pos:start="1057:5" pos:end="1057:69"><call pos:start="1057:5" pos:end="1057:69"><name pos:start="1057:5" pos:end="1057:14">ff_set_cmp</name><argument_list pos:start="1057:15" pos:end="1057:69">(<argument pos:start="1057:16" pos:end="1057:23"><expr pos:start="1057:16" pos:end="1057:23"><operator pos:start="1057:16" pos:end="1057:16">&amp;</operator><name pos:start="1057:17" pos:end="1057:23"><name pos:start="1057:17" pos:end="1057:17">s</name><operator pos:start="1057:18" pos:end="1057:19">-&gt;</operator><name pos:start="1057:20" pos:end="1057:23">mecc</name></name></expr></argument>, <argument pos:start="1057:26" pos:end="1057:42"><expr pos:start="1057:26" pos:end="1057:42"><name pos:start="1057:26" pos:end="1057:42"><name pos:start="1057:26" pos:end="1057:26">s</name><operator pos:start="1057:27" pos:end="1057:28">-&gt;</operator><name pos:start="1057:29" pos:end="1057:32">mecc</name><operator pos:start="1057:33" pos:end="1057:33">.</operator><name pos:start="1057:34" pos:end="1057:42">ildct_cmp</name></name></expr></argument>,      <argument pos:start="1057:50" pos:end="1057:68"><expr pos:start="1057:50" pos:end="1057:68"><name pos:start="1057:50" pos:end="1057:68"><name pos:start="1057:50" pos:end="1057:50">s</name><operator pos:start="1057:51" pos:end="1057:52">-&gt;</operator><name pos:start="1057:53" pos:end="1057:57">avctx</name><operator pos:start="1057:58" pos:end="1057:59">-&gt;</operator><name pos:start="1057:60" pos:end="1057:68">ildct_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1059:5" pos:end="1059:75"><expr pos:start="1059:5" pos:end="1059:74"><call pos:start="1059:5" pos:end="1059:74"><name pos:start="1059:5" pos:end="1059:14">ff_set_cmp</name><argument_list pos:start="1059:15" pos:end="1059:74">(<argument pos:start="1059:16" pos:end="1059:23"><expr pos:start="1059:16" pos:end="1059:23"><operator pos:start="1059:16" pos:end="1059:16">&amp;</operator><name pos:start="1059:17" pos:end="1059:23"><name pos:start="1059:17" pos:end="1059:17">s</name><operator pos:start="1059:18" pos:end="1059:19">-&gt;</operator><name pos:start="1059:20" pos:end="1059:23">mecc</name></name></expr></argument>, <argument pos:start="1059:26" pos:end="1059:47"><expr pos:start="1059:26" pos:end="1059:47"><name pos:start="1059:26" pos:end="1059:47"><name pos:start="1059:26" pos:end="1059:26">s</name><operator pos:start="1059:27" pos:end="1059:28">-&gt;</operator><name pos:start="1059:29" pos:end="1059:32">mecc</name><operator pos:start="1059:33" pos:end="1059:33">.</operator><name pos:start="1059:34" pos:end="1059:47">frame_skip_cmp</name></name></expr></argument>, <argument pos:start="1059:50" pos:end="1059:73"><expr pos:start="1059:50" pos:end="1059:73"><name pos:start="1059:50" pos:end="1059:73"><name pos:start="1059:50" pos:end="1059:50">s</name><operator pos:start="1059:51" pos:end="1059:52">-&gt;</operator><name pos:start="1059:53" pos:end="1059:57">avctx</name><operator pos:start="1059:58" pos:end="1059:59">-&gt;</operator><name pos:start="1059:60" pos:end="1059:73">frame_skip_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1063:5" pos:end="1065:31"><if pos:start="1063:5" pos:end="1065:31">if <condition pos:start="1063:8" pos:end="1063:57">(<expr pos:start="1063:9" pos:end="1063:56"><name pos:start="1063:9" pos:end="1063:27">CONFIG_H261_ENCODER</name> <operator pos:start="1063:29" pos:end="1063:30">&amp;&amp;</operator> <name pos:start="1063:32" pos:end="1063:44"><name pos:start="1063:32" pos:end="1063:32">s</name><operator pos:start="1063:33" pos:end="1063:34">-&gt;</operator><name pos:start="1063:35" pos:end="1063:44">out_format</name></name> <operator pos:start="1063:46" pos:end="1063:47">==</operator> <name pos:start="1063:49" pos:end="1063:56">FMT_H261</name></expr>)</condition><block type="pseudo" pos:start="1065:9" pos:end="1065:31"><block_content pos:start="1065:9" pos:end="1065:31">

        <expr_stmt pos:start="1065:9" pos:end="1065:31"><expr pos:start="1065:9" pos:end="1065:30"><call pos:start="1065:9" pos:end="1065:30"><name pos:start="1065:9" pos:end="1065:27">ff_h261_encode_init</name><argument_list pos:start="1065:28" pos:end="1065:30">(<argument pos:start="1065:29" pos:end="1065:29"><expr pos:start="1065:29" pos:end="1065:29"><name pos:start="1065:29" pos:end="1065:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1067:5" pos:end="1069:31"><if pos:start="1067:5" pos:end="1069:31">if <condition pos:start="1067:8" pos:end="1067:57">(<expr pos:start="1067:9" pos:end="1067:56"><name pos:start="1067:9" pos:end="1067:27">CONFIG_H263_ENCODER</name> <operator pos:start="1067:29" pos:end="1067:30">&amp;&amp;</operator> <name pos:start="1067:32" pos:end="1067:44"><name pos:start="1067:32" pos:end="1067:32">s</name><operator pos:start="1067:33" pos:end="1067:34">-&gt;</operator><name pos:start="1067:35" pos:end="1067:44">out_format</name></name> <operator pos:start="1067:46" pos:end="1067:47">==</operator> <name pos:start="1067:49" pos:end="1067:56">FMT_H263</name></expr>)</condition><block type="pseudo" pos:start="1069:9" pos:end="1069:31"><block_content pos:start="1069:9" pos:end="1069:31">

        <expr_stmt pos:start="1069:9" pos:end="1069:31"><expr pos:start="1069:9" pos:end="1069:30"><call pos:start="1069:9" pos:end="1069:30"><name pos:start="1069:9" pos:end="1069:27">ff_h263_encode_init</name><argument_list pos:start="1069:28" pos:end="1069:30">(<argument pos:start="1069:29" pos:end="1069:29"><expr pos:start="1069:29" pos:end="1069:29"><name pos:start="1069:29" pos:end="1069:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1071:5" pos:end="1075:23"><if pos:start="1071:5" pos:end="1075:23">if <condition pos:start="1071:8" pos:end="1071:53">(<expr pos:start="1071:9" pos:end="1071:52"><name pos:start="1071:9" pos:end="1071:30">CONFIG_MSMPEG4_ENCODER</name> <operator pos:start="1071:32" pos:end="1071:33">&amp;&amp;</operator> <name pos:start="1071:35" pos:end="1071:52"><name pos:start="1071:35" pos:end="1071:35">s</name><operator pos:start="1071:36" pos:end="1071:37">-&gt;</operator><name pos:start="1071:38" pos:end="1071:52">msmpeg4_version</name></name></expr>)</condition><block type="pseudo" pos:start="1073:9" pos:end="1075:23"><block_content pos:start="1073:9" pos:end="1075:23">

        <if_stmt pos:start="1073:9" pos:end="1075:23"><if pos:start="1073:9" pos:end="1075:23">if <condition pos:start="1073:12" pos:end="1073:50">(<expr pos:start="1073:13" pos:end="1073:49"><operator pos:start="1073:13" pos:end="1073:13">(</operator><name pos:start="1073:14" pos:end="1073:16">ret</name> <operator pos:start="1073:18" pos:end="1073:18">=</operator> <call pos:start="1073:20" pos:end="1073:44"><name pos:start="1073:20" pos:end="1073:41">ff_msmpeg4_encode_init</name><argument_list pos:start="1073:42" pos:end="1073:44">(<argument pos:start="1073:43" pos:end="1073:43"><expr pos:start="1073:43" pos:end="1073:43"><name pos:start="1073:43" pos:end="1073:43">s</name></expr></argument>)</argument_list></call><operator pos:start="1073:45" pos:end="1073:45">)</operator> <operator pos:start="1073:47" pos:end="1073:47">&lt;</operator> <literal type="number" pos:start="1073:49" pos:end="1073:49">0</literal></expr>)</condition><block type="pseudo" pos:start="1075:13" pos:end="1075:23"><block_content pos:start="1075:13" pos:end="1075:23">

            <return pos:start="1075:13" pos:end="1075:23">return <expr pos:start="1075:20" pos:end="1075:22"><name pos:start="1075:20" pos:end="1075:22">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1077:5" pos:end="1081:32"><if pos:start="1077:5" pos:end="1081:32">if <condition pos:start="1077:8" pos:end="1079:38">(<expr pos:start="1077:9" pos:end="1079:37"><operator pos:start="1077:9" pos:end="1077:9">(</operator><name pos:start="1077:10" pos:end="1077:34">CONFIG_MPEG1VIDEO_ENCODER</name> <operator pos:start="1077:36" pos:end="1077:37">||</operator> <name pos:start="1077:39" pos:end="1077:63">CONFIG_MPEG2VIDEO_ENCODER</name><operator pos:start="1077:64" pos:end="1077:64">)</operator>

        <operator pos:start="1079:9" pos:end="1079:10">&amp;&amp;</operator> <name pos:start="1079:12" pos:end="1079:24"><name pos:start="1079:12" pos:end="1079:12">s</name><operator pos:start="1079:13" pos:end="1079:14">-&gt;</operator><name pos:start="1079:15" pos:end="1079:24">out_format</name></name> <operator pos:start="1079:26" pos:end="1079:27">==</operator> <name pos:start="1079:29" pos:end="1079:37">FMT_MPEG1</name></expr>)</condition><block type="pseudo" pos:start="1081:9" pos:end="1081:32"><block_content pos:start="1081:9" pos:end="1081:32">

        <expr_stmt pos:start="1081:9" pos:end="1081:32"><expr pos:start="1081:9" pos:end="1081:31"><call pos:start="1081:9" pos:end="1081:31"><name pos:start="1081:9" pos:end="1081:28">ff_mpeg1_encode_init</name><argument_list pos:start="1081:29" pos:end="1081:31">(<argument pos:start="1081:30" pos:end="1081:30"><expr pos:start="1081:30" pos:end="1081:30"><name pos:start="1081:30" pos:end="1081:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="1085:5" pos:end="1085:23">/* init q matrix */</comment>

    <for pos:start="1087:5" pos:end="1123:5">for <control pos:start="1087:9" pos:end="1087:28">(<init pos:start="1087:10" pos:end="1087:15"><expr pos:start="1087:10" pos:end="1087:14"><name pos:start="1087:10" pos:end="1087:10">i</name> <operator pos:start="1087:12" pos:end="1087:12">=</operator> <literal type="number" pos:start="1087:14" pos:end="1087:14">0</literal></expr>;</init> <condition pos:start="1087:17" pos:end="1087:23"><expr pos:start="1087:17" pos:end="1087:22"><name pos:start="1087:17" pos:end="1087:17">i</name> <operator pos:start="1087:19" pos:end="1087:19">&lt;</operator> <literal type="number" pos:start="1087:21" pos:end="1087:22">64</literal></expr>;</condition> <incr pos:start="1087:25" pos:end="1087:27"><expr pos:start="1087:25" pos:end="1087:27"><name pos:start="1087:25" pos:end="1087:25">i</name><operator pos:start="1087:26" pos:end="1087:27">++</operator></expr></incr>)</control> <block pos:start="1087:30" pos:end="1123:5">{<block_content pos:start="1089:9" pos:end="1121:59">

        <decl_stmt pos:start="1089:9" pos:end="1089:44"><decl pos:start="1089:9" pos:end="1089:43"><type pos:start="1089:9" pos:end="1089:11"><name pos:start="1089:9" pos:end="1089:11">int</name></type> <name pos:start="1089:13" pos:end="1089:13">j</name> <init pos:start="1089:15" pos:end="1089:43">= <expr pos:start="1089:17" pos:end="1089:43"><name pos:start="1089:17" pos:end="1089:43"><name pos:start="1089:17" pos:end="1089:17">s</name><operator pos:start="1089:18" pos:end="1089:19">-&gt;</operator><name pos:start="1089:20" pos:end="1089:23">idsp</name><operator pos:start="1089:24" pos:end="1089:24">.</operator><name pos:start="1089:25" pos:end="1089:40">idct_permutation</name><index pos:start="1089:41" pos:end="1089:43">[<expr pos:start="1089:42" pos:end="1089:42"><name pos:start="1089:42" pos:end="1089:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="1091:9" pos:end="1113:9"><if pos:start="1091:9" pos:end="1099:9">if <condition pos:start="1091:12" pos:end="1093:26">(<expr pos:start="1091:13" pos:end="1093:25"><name pos:start="1091:13" pos:end="1091:32">CONFIG_MPEG4_ENCODER</name> <operator pos:start="1091:34" pos:end="1091:35">&amp;&amp;</operator> <name pos:start="1091:37" pos:end="1091:47"><name pos:start="1091:37" pos:end="1091:37">s</name><operator pos:start="1091:38" pos:end="1091:39">-&gt;</operator><name pos:start="1091:40" pos:end="1091:47">codec_id</name></name> <operator pos:start="1091:49" pos:end="1091:50">==</operator> <name pos:start="1091:52" pos:end="1091:68">AV_CODEC_ID_MPEG4</name> <operator pos:start="1091:70" pos:end="1091:71">&amp;&amp;</operator>

            <name pos:start="1093:13" pos:end="1093:25"><name pos:start="1093:13" pos:end="1093:13">s</name><operator pos:start="1093:14" pos:end="1093:15">-&gt;</operator><name pos:start="1093:16" pos:end="1093:25">mpeg_quant</name></name></expr>)</condition> <block pos:start="1093:28" pos:end="1099:9">{<block_content pos:start="1095:13" pos:end="1097:70">

            <expr_stmt pos:start="1095:13" pos:end="1095:66"><expr pos:start="1095:13" pos:end="1095:65"><name pos:start="1095:13" pos:end="1095:30"><name pos:start="1095:13" pos:end="1095:13">s</name><operator pos:start="1095:14" pos:end="1095:15">-&gt;</operator><name pos:start="1095:16" pos:end="1095:27">intra_matrix</name><index pos:start="1095:28" pos:end="1095:30">[<expr pos:start="1095:29" pos:end="1095:29"><name pos:start="1095:29" pos:end="1095:29">j</name></expr>]</index></name> <operator pos:start="1095:32" pos:end="1095:32">=</operator> <name pos:start="1095:34" pos:end="1095:65"><name pos:start="1095:34" pos:end="1095:62">ff_mpeg4_default_intra_matrix</name><index pos:start="1095:63" pos:end="1095:65">[<expr pos:start="1095:64" pos:end="1095:64"><name pos:start="1095:64" pos:end="1095:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1097:13" pos:end="1097:70"><expr pos:start="1097:13" pos:end="1097:69"><name pos:start="1097:13" pos:end="1097:30"><name pos:start="1097:13" pos:end="1097:13">s</name><operator pos:start="1097:14" pos:end="1097:15">-&gt;</operator><name pos:start="1097:16" pos:end="1097:27">inter_matrix</name><index pos:start="1097:28" pos:end="1097:30">[<expr pos:start="1097:29" pos:end="1097:29"><name pos:start="1097:29" pos:end="1097:29">j</name></expr>]</index></name> <operator pos:start="1097:32" pos:end="1097:32">=</operator> <name pos:start="1097:34" pos:end="1097:69"><name pos:start="1097:34" pos:end="1097:66">ff_mpeg4_default_non_intra_matrix</name><index pos:start="1097:67" pos:end="1097:69">[<expr pos:start="1097:68" pos:end="1097:68"><name pos:start="1097:68" pos:end="1097:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="1099:11" pos:end="1105:9">else if <condition pos:start="1099:19" pos:end="1099:74">(<expr pos:start="1099:20" pos:end="1099:73"><name pos:start="1099:20" pos:end="1099:32"><name pos:start="1099:20" pos:end="1099:20">s</name><operator pos:start="1099:21" pos:end="1099:22">-&gt;</operator><name pos:start="1099:23" pos:end="1099:32">out_format</name></name> <operator pos:start="1099:34" pos:end="1099:35">==</operator> <name pos:start="1099:37" pos:end="1099:44">FMT_H263</name> <operator pos:start="1099:46" pos:end="1099:47">||</operator> <name pos:start="1099:49" pos:end="1099:61"><name pos:start="1099:49" pos:end="1099:49">s</name><operator pos:start="1099:50" pos:end="1099:51">-&gt;</operator><name pos:start="1099:52" pos:end="1099:61">out_format</name></name> <operator pos:start="1099:63" pos:end="1099:64">==</operator> <name pos:start="1099:66" pos:end="1099:73">FMT_H261</name></expr>)</condition> <block pos:start="1099:76" pos:end="1105:9">{<block_content pos:start="1101:13" pos:end="1103:70">

            <expr_stmt pos:start="1101:13" pos:end="1103:70"><expr pos:start="1101:13" pos:end="1103:69"><name pos:start="1101:13" pos:end="1101:30"><name pos:start="1101:13" pos:end="1101:13">s</name><operator pos:start="1101:14" pos:end="1101:15">-&gt;</operator><name pos:start="1101:16" pos:end="1101:27">intra_matrix</name><index pos:start="1101:28" pos:end="1101:30">[<expr pos:start="1101:29" pos:end="1101:29"><name pos:start="1101:29" pos:end="1101:29">j</name></expr>]</index></name> <operator pos:start="1101:32" pos:end="1101:32">=</operator>

            <name pos:start="1103:13" pos:end="1103:30"><name pos:start="1103:13" pos:end="1103:13">s</name><operator pos:start="1103:14" pos:end="1103:15">-&gt;</operator><name pos:start="1103:16" pos:end="1103:27">inter_matrix</name><index pos:start="1103:28" pos:end="1103:30">[<expr pos:start="1103:29" pos:end="1103:29"><name pos:start="1103:29" pos:end="1103:29">j</name></expr>]</index></name> <operator pos:start="1103:32" pos:end="1103:32">=</operator> <name pos:start="1103:34" pos:end="1103:69"><name pos:start="1103:34" pos:end="1103:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="1103:67" pos:end="1103:69">[<expr pos:start="1103:68" pos:end="1103:68"><name pos:start="1103:68" pos:end="1103:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1105:11" pos:end="1113:9">else <block pos:start="1105:16" pos:end="1113:9">{<block_content pos:start="1109:13" pos:end="1111:70">

            <comment type="block" pos:start="1107:13" pos:end="1107:25">/* mpeg1/2 */</comment>

            <expr_stmt pos:start="1109:13" pos:end="1109:66"><expr pos:start="1109:13" pos:end="1109:65"><name pos:start="1109:13" pos:end="1109:30"><name pos:start="1109:13" pos:end="1109:13">s</name><operator pos:start="1109:14" pos:end="1109:15">-&gt;</operator><name pos:start="1109:16" pos:end="1109:27">intra_matrix</name><index pos:start="1109:28" pos:end="1109:30">[<expr pos:start="1109:29" pos:end="1109:29"><name pos:start="1109:29" pos:end="1109:29">j</name></expr>]</index></name> <operator pos:start="1109:32" pos:end="1109:32">=</operator> <name pos:start="1109:34" pos:end="1109:65"><name pos:start="1109:34" pos:end="1109:62">ff_mpeg1_default_intra_matrix</name><index pos:start="1109:63" pos:end="1109:65">[<expr pos:start="1109:64" pos:end="1109:64"><name pos:start="1109:64" pos:end="1109:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1111:13" pos:end="1111:70"><expr pos:start="1111:13" pos:end="1111:69"><name pos:start="1111:13" pos:end="1111:30"><name pos:start="1111:13" pos:end="1111:13">s</name><operator pos:start="1111:14" pos:end="1111:15">-&gt;</operator><name pos:start="1111:16" pos:end="1111:27">inter_matrix</name><index pos:start="1111:28" pos:end="1111:30">[<expr pos:start="1111:29" pos:end="1111:29"><name pos:start="1111:29" pos:end="1111:29">j</name></expr>]</index></name> <operator pos:start="1111:32" pos:end="1111:32">=</operator> <name pos:start="1111:34" pos:end="1111:69"><name pos:start="1111:34" pos:end="1111:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="1111:67" pos:end="1111:69">[<expr pos:start="1111:68" pos:end="1111:68"><name pos:start="1111:68" pos:end="1111:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="1115:9" pos:end="1117:59"><if pos:start="1115:9" pos:end="1117:59">if <condition pos:start="1115:12" pos:end="1115:35">(<expr pos:start="1115:13" pos:end="1115:34"><name pos:start="1115:13" pos:end="1115:34"><name pos:start="1115:13" pos:end="1115:13">s</name><operator pos:start="1115:14" pos:end="1115:15">-&gt;</operator><name pos:start="1115:16" pos:end="1115:20">avctx</name><operator pos:start="1115:21" pos:end="1115:22">-&gt;</operator><name pos:start="1115:23" pos:end="1115:34">intra_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="1117:13" pos:end="1117:59"><block_content pos:start="1117:13" pos:end="1117:59">

            <expr_stmt pos:start="1117:13" pos:end="1117:59"><expr pos:start="1117:13" pos:end="1117:58"><name pos:start="1117:13" pos:end="1117:30"><name pos:start="1117:13" pos:end="1117:13">s</name><operator pos:start="1117:14" pos:end="1117:15">-&gt;</operator><name pos:start="1117:16" pos:end="1117:27">intra_matrix</name><index pos:start="1117:28" pos:end="1117:30">[<expr pos:start="1117:29" pos:end="1117:29"><name pos:start="1117:29" pos:end="1117:29">j</name></expr>]</index></name> <operator pos:start="1117:32" pos:end="1117:32">=</operator> <name pos:start="1117:34" pos:end="1117:58"><name pos:start="1117:34" pos:end="1117:34">s</name><operator pos:start="1117:35" pos:end="1117:36">-&gt;</operator><name pos:start="1117:37" pos:end="1117:41">avctx</name><operator pos:start="1117:42" pos:end="1117:43">-&gt;</operator><name pos:start="1117:44" pos:end="1117:55">intra_matrix</name><index pos:start="1117:56" pos:end="1117:58">[<expr pos:start="1117:57" pos:end="1117:57"><name pos:start="1117:57" pos:end="1117:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1119:9" pos:end="1121:59"><if pos:start="1119:9" pos:end="1121:59">if <condition pos:start="1119:12" pos:end="1119:35">(<expr pos:start="1119:13" pos:end="1119:34"><name pos:start="1119:13" pos:end="1119:34"><name pos:start="1119:13" pos:end="1119:13">s</name><operator pos:start="1119:14" pos:end="1119:15">-&gt;</operator><name pos:start="1119:16" pos:end="1119:20">avctx</name><operator pos:start="1119:21" pos:end="1119:22">-&gt;</operator><name pos:start="1119:23" pos:end="1119:34">inter_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="1121:13" pos:end="1121:59"><block_content pos:start="1121:13" pos:end="1121:59">

            <expr_stmt pos:start="1121:13" pos:end="1121:59"><expr pos:start="1121:13" pos:end="1121:58"><name pos:start="1121:13" pos:end="1121:30"><name pos:start="1121:13" pos:end="1121:13">s</name><operator pos:start="1121:14" pos:end="1121:15">-&gt;</operator><name pos:start="1121:16" pos:end="1121:27">inter_matrix</name><index pos:start="1121:28" pos:end="1121:30">[<expr pos:start="1121:29" pos:end="1121:29"><name pos:start="1121:29" pos:end="1121:29">j</name></expr>]</index></name> <operator pos:start="1121:32" pos:end="1121:32">=</operator> <name pos:start="1121:34" pos:end="1121:58"><name pos:start="1121:34" pos:end="1121:34">s</name><operator pos:start="1121:35" pos:end="1121:36">-&gt;</operator><name pos:start="1121:37" pos:end="1121:41">avctx</name><operator pos:start="1121:42" pos:end="1121:43">-&gt;</operator><name pos:start="1121:44" pos:end="1121:55">inter_matrix</name><index pos:start="1121:56" pos:end="1121:58">[<expr pos:start="1121:57" pos:end="1121:57"><name pos:start="1121:57" pos:end="1121:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1127:5" pos:end="1127:27">/* precompute matrix */</comment>

    <comment type="block" pos:start="1129:5" pos:end="1129:55">/* for mjpeg, we do include qscale in the matrix */</comment>

    <if_stmt pos:start="1131:5" pos:end="1145:5"><if pos:start="1131:5" pos:end="1145:5">if <condition pos:start="1131:8" pos:end="1131:35">(<expr pos:start="1131:9" pos:end="1131:34"><name pos:start="1131:9" pos:end="1131:21"><name pos:start="1131:9" pos:end="1131:9">s</name><operator pos:start="1131:10" pos:end="1131:11">-&gt;</operator><name pos:start="1131:12" pos:end="1131:21">out_format</name></name> <operator pos:start="1131:23" pos:end="1131:24">!=</operator> <name pos:start="1131:26" pos:end="1131:34">FMT_MJPEG</name></expr>)</condition> <block pos:start="1131:37" pos:end="1145:5">{<block_content pos:start="1133:9" pos:end="1143:33">

        <expr_stmt pos:start="1133:9" pos:end="1137:33"><expr pos:start="1133:9" pos:end="1137:32"><call pos:start="1133:9" pos:end="1137:32"><name pos:start="1133:9" pos:end="1133:25">ff_convert_matrix</name><argument_list pos:start="1133:26" pos:end="1137:32">(<argument pos:start="1133:27" pos:end="1133:27"><expr pos:start="1133:27" pos:end="1133:27"><name pos:start="1133:27" pos:end="1133:27">s</name></expr></argument>, <argument pos:start="1133:30" pos:end="1133:46"><expr pos:start="1133:30" pos:end="1133:46"><name pos:start="1133:30" pos:end="1133:46"><name pos:start="1133:30" pos:end="1133:30">s</name><operator pos:start="1133:31" pos:end="1133:32">-&gt;</operator><name pos:start="1133:33" pos:end="1133:46">q_intra_matrix</name></name></expr></argument>, <argument pos:start="1133:49" pos:end="1133:67"><expr pos:start="1133:49" pos:end="1133:67"><name pos:start="1133:49" pos:end="1133:67"><name pos:start="1133:49" pos:end="1133:49">s</name><operator pos:start="1133:50" pos:end="1133:51">-&gt;</operator><name pos:start="1133:52" pos:end="1133:67">q_intra_matrix16</name></name></expr></argument>,

                          <argument pos:start="1135:27" pos:end="1135:41"><expr pos:start="1135:27" pos:end="1135:41"><name pos:start="1135:27" pos:end="1135:41"><name pos:start="1135:27" pos:end="1135:27">s</name><operator pos:start="1135:28" pos:end="1135:29">-&gt;</operator><name pos:start="1135:30" pos:end="1135:41">intra_matrix</name></name></expr></argument>, <argument pos:start="1135:44" pos:end="1135:62"><expr pos:start="1135:44" pos:end="1135:62"><name pos:start="1135:44" pos:end="1135:62"><name pos:start="1135:44" pos:end="1135:44">s</name><operator pos:start="1135:45" pos:end="1135:46">-&gt;</operator><name pos:start="1135:47" pos:end="1135:62">intra_quant_bias</name></name></expr></argument>, <argument pos:start="1135:65" pos:end="1135:75"><expr pos:start="1135:65" pos:end="1135:75"><name pos:start="1135:65" pos:end="1135:75"><name pos:start="1135:65" pos:end="1135:69">avctx</name><operator pos:start="1135:70" pos:end="1135:71">-&gt;</operator><name pos:start="1135:72" pos:end="1135:75">qmin</name></name></expr></argument>,

                          <argument pos:start="1137:27" pos:end="1137:28"><expr pos:start="1137:27" pos:end="1137:28"><literal type="number" pos:start="1137:27" pos:end="1137:28">31</literal></expr></argument>, <argument pos:start="1137:31" pos:end="1137:31"><expr pos:start="1137:31" pos:end="1137:31"><literal type="number" pos:start="1137:31" pos:end="1137:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1139:9" pos:end="1143:33"><expr pos:start="1139:9" pos:end="1143:32"><call pos:start="1139:9" pos:end="1143:32"><name pos:start="1139:9" pos:end="1139:25">ff_convert_matrix</name><argument_list pos:start="1139:26" pos:end="1143:32">(<argument pos:start="1139:27" pos:end="1139:27"><expr pos:start="1139:27" pos:end="1139:27"><name pos:start="1139:27" pos:end="1139:27">s</name></expr></argument>, <argument pos:start="1139:30" pos:end="1139:46"><expr pos:start="1139:30" pos:end="1139:46"><name pos:start="1139:30" pos:end="1139:46"><name pos:start="1139:30" pos:end="1139:30">s</name><operator pos:start="1139:31" pos:end="1139:32">-&gt;</operator><name pos:start="1139:33" pos:end="1139:46">q_inter_matrix</name></name></expr></argument>, <argument pos:start="1139:49" pos:end="1139:67"><expr pos:start="1139:49" pos:end="1139:67"><name pos:start="1139:49" pos:end="1139:67"><name pos:start="1139:49" pos:end="1139:49">s</name><operator pos:start="1139:50" pos:end="1139:51">-&gt;</operator><name pos:start="1139:52" pos:end="1139:67">q_inter_matrix16</name></name></expr></argument>,

                          <argument pos:start="1141:27" pos:end="1141:41"><expr pos:start="1141:27" pos:end="1141:41"><name pos:start="1141:27" pos:end="1141:41"><name pos:start="1141:27" pos:end="1141:27">s</name><operator pos:start="1141:28" pos:end="1141:29">-&gt;</operator><name pos:start="1141:30" pos:end="1141:41">inter_matrix</name></name></expr></argument>, <argument pos:start="1141:44" pos:end="1141:62"><expr pos:start="1141:44" pos:end="1141:62"><name pos:start="1141:44" pos:end="1141:62"><name pos:start="1141:44" pos:end="1141:44">s</name><operator pos:start="1141:45" pos:end="1141:46">-&gt;</operator><name pos:start="1141:47" pos:end="1141:62">inter_quant_bias</name></name></expr></argument>, <argument pos:start="1141:65" pos:end="1141:75"><expr pos:start="1141:65" pos:end="1141:75"><name pos:start="1141:65" pos:end="1141:75"><name pos:start="1141:65" pos:end="1141:69">avctx</name><operator pos:start="1141:70" pos:end="1141:71">-&gt;</operator><name pos:start="1141:72" pos:end="1141:75">qmin</name></name></expr></argument>,

                          <argument pos:start="1143:27" pos:end="1143:28"><expr pos:start="1143:27" pos:end="1143:28"><literal type="number" pos:start="1143:27" pos:end="1143:28">31</literal></expr></argument>, <argument pos:start="1143:31" pos:end="1143:31"><expr pos:start="1143:31" pos:end="1143:31"><literal type="number" pos:start="1143:31" pos:end="1143:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1149:5" pos:end="1156:0"><if pos:start="1149:5" pos:end="1156:0">if <condition pos:start="1149:8" pos:end="1149:36">(<expr pos:start="1149:9" pos:end="1149:35"><call pos:start="1149:9" pos:end="1149:31"><name pos:start="1149:9" pos:end="1149:28">ff_rate_control_init</name><argument_list pos:start="1149:29" pos:end="1149:31">(<argument pos:start="1149:30" pos:end="1149:30"><expr pos:start="1149:30" pos:end="1149:30"><name pos:start="1149:30" pos:end="1149:30">s</name></expr></argument>)</argument_list></call> <operator pos:start="1149:33" pos:end="1149:33">&lt;</operator> <literal type="number" pos:start="1149:35" pos:end="1149:35">0</literal></expr>)</condition><block type="pseudo" pos:start="1151:9" pos:end="1156:0"><block_content pos:start="1151:9" pos:end="1156:0">

        <return pos:start="1151:9" pos:end="1156:0">return <expr pos:start="1151:16" pos:end="1151:17"><operator pos:start="1151:16" pos:end="1151:16">-</operator><literal type="number" pos:start="1151:17" pos:end="1151:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="1155:1" pos:end="1155:21">#<cpp:directive pos:start="1155:2" pos:end="1155:3">if</cpp:directive> <expr pos:start="1155:5" pos:end="1155:21"><name pos:start="1155:5" pos:end="1155:21">FF_API_ERROR_RATE</name></expr></cpp:if>

    <macro pos:start="1157:5" pos:end="1157:35"><name pos:start="1157:5" pos:end="1157:35">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="1159:5" pos:end="1161:42"><if pos:start="1159:5" pos:end="1161:42">if <condition pos:start="1159:8" pos:end="1159:26">(<expr pos:start="1159:9" pos:end="1159:25"><name pos:start="1159:9" pos:end="1159:25"><name pos:start="1159:9" pos:end="1159:13">avctx</name><operator pos:start="1159:14" pos:end="1159:15">-&gt;</operator><name pos:start="1159:16" pos:end="1159:25">error_rate</name></name></expr>)</condition><block type="pseudo" pos:start="1161:9" pos:end="1161:42"><block_content pos:start="1161:9" pos:end="1161:42">

        <expr_stmt pos:start="1161:9" pos:end="1161:42"><expr pos:start="1161:9" pos:end="1161:41"><name pos:start="1161:9" pos:end="1161:21"><name pos:start="1161:9" pos:end="1161:9">s</name><operator pos:start="1161:10" pos:end="1161:11">-&gt;</operator><name pos:start="1161:12" pos:end="1161:21">error_rate</name></name> <operator pos:start="1161:23" pos:end="1161:23">=</operator> <name pos:start="1161:25" pos:end="1161:41"><name pos:start="1161:25" pos:end="1161:29">avctx</name><operator pos:start="1161:30" pos:end="1161:31">-&gt;</operator><name pos:start="1161:32" pos:end="1161:41">error_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1163:5" pos:end="1170:0"><expr pos:start="1163:5" pos:end="1163:34"><name pos:start="1163:5" pos:end="1163:34">FF_ENABLE_DEPRECATION_WARNINGS</name></expr>;</expr_stmt>

<cpp:endif pos:start="1165:1" pos:end="1165:6">#<cpp:directive pos:start="1165:2" pos:end="1165:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="1169:1" pos:end="1169:24">#<cpp:directive pos:start="1169:2" pos:end="1169:3">if</cpp:directive> <expr pos:start="1169:5" pos:end="1169:24"><name pos:start="1169:5" pos:end="1169:24">FF_API_NORMALIZE_AQP</name></expr></cpp:if>

    <macro pos:start="1171:5" pos:end="1171:35"><name pos:start="1171:5" pos:end="1171:35">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="1173:5" pos:end="1175:40"><if pos:start="1173:5" pos:end="1175:40">if <condition pos:start="1173:8" pos:end="1173:48">(<expr pos:start="1173:9" pos:end="1173:47"><name pos:start="1173:9" pos:end="1173:20"><name pos:start="1173:9" pos:end="1173:13">avctx</name><operator pos:start="1173:14" pos:end="1173:15">-&gt;</operator><name pos:start="1173:16" pos:end="1173:20">flags</name></name> <operator pos:start="1173:22" pos:end="1173:22">&amp;</operator> <name pos:start="1173:24" pos:end="1173:47">CODEC_FLAG_NORMALIZE_AQP</name></expr>)</condition><block type="pseudo" pos:start="1175:9" pos:end="1175:40"><block_content pos:start="1175:9" pos:end="1175:40">

        <expr_stmt pos:start="1175:9" pos:end="1175:40"><expr pos:start="1175:9" pos:end="1175:39"><name pos:start="1175:9" pos:end="1175:20"><name pos:start="1175:9" pos:end="1175:9">s</name><operator pos:start="1175:10" pos:end="1175:11">-&gt;</operator><name pos:start="1175:12" pos:end="1175:20">mpv_flags</name></name> <operator pos:start="1175:22" pos:end="1175:23">|=</operator> <name pos:start="1175:25" pos:end="1175:39">FF_MPV_FLAG_NAQ</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1177:5" pos:end="1184:0"><expr pos:start="1177:5" pos:end="1177:34"><name pos:start="1177:5" pos:end="1177:34">FF_ENABLE_DEPRECATION_WARNINGS</name></expr>;</expr_stmt>

<cpp:endif pos:start="1179:1" pos:end="1179:6">#<cpp:directive pos:start="1179:2" pos:end="1179:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="1183:1" pos:end="1183:14">#<cpp:directive pos:start="1183:2" pos:end="1183:3">if</cpp:directive> <expr pos:start="1183:5" pos:end="1183:14"><name pos:start="1183:5" pos:end="1183:14">FF_API_MV0</name></expr></cpp:if>

    <macro pos:start="1185:5" pos:end="1185:35"><name pos:start="1185:5" pos:end="1185:35">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="1187:5" pos:end="1189:40"><if pos:start="1187:5" pos:end="1189:40">if <condition pos:start="1187:8" pos:end="1187:38">(<expr pos:start="1187:9" pos:end="1187:37"><name pos:start="1187:9" pos:end="1187:20"><name pos:start="1187:9" pos:end="1187:13">avctx</name><operator pos:start="1187:14" pos:end="1187:15">-&gt;</operator><name pos:start="1187:16" pos:end="1187:20">flags</name></name> <operator pos:start="1187:22" pos:end="1187:22">&amp;</operator> <name pos:start="1187:24" pos:end="1187:37">CODEC_FLAG_MV0</name></expr>)</condition><block type="pseudo" pos:start="1189:9" pos:end="1189:40"><block_content pos:start="1189:9" pos:end="1189:40">

        <expr_stmt pos:start="1189:9" pos:end="1189:40"><expr pos:start="1189:9" pos:end="1189:39"><name pos:start="1189:9" pos:end="1189:20"><name pos:start="1189:9" pos:end="1189:9">s</name><operator pos:start="1189:10" pos:end="1189:11">-&gt;</operator><name pos:start="1189:12" pos:end="1189:20">mpv_flags</name></name> <operator pos:start="1189:22" pos:end="1189:23">|=</operator> <name pos:start="1189:25" pos:end="1189:39">FF_MPV_FLAG_MV0</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1191:5" pos:end="1199:35"><expr pos:start="1191:5" pos:end="1199:35"><name pos:start="1191:5" pos:end="1198:0">FF_ENABLE_DEPRECATION_WARNINGS</name>

<cpp:endif pos:start="1193:1" pos:end="1193:6">#<cpp:directive pos:start="1193:2" pos:end="1193:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="1197:1" pos:end="1197:18">#<cpp:directive pos:start="1197:2" pos:end="1197:3">if</cpp:directive> <expr pos:start="1197:5" pos:end="1197:18"><name pos:start="1197:5" pos:end="1197:18">FF_API_MPV_OPT</name></expr></cpp:if>

    <name pos:start="1199:5" pos:end="1199:35">FF_DISABLE_DEPRECATION_WARNINGS</name></expr></expr_stmt>

    <if_stmt pos:start="1201:5" pos:end="1203:42"><if pos:start="1201:5" pos:end="1203:42">if <condition pos:start="1201:8" pos:end="1201:33">(<expr pos:start="1201:9" pos:end="1201:32"><name pos:start="1201:9" pos:end="1201:25"><name pos:start="1201:9" pos:end="1201:13">avctx</name><operator pos:start="1201:14" pos:end="1201:15">-&gt;</operator><name pos:start="1201:16" pos:end="1201:25">rc_qsquish</name></name> <operator pos:start="1201:27" pos:end="1201:28">!=</operator> <literal type="number" pos:start="1201:30" pos:end="1201:32">0.0</literal></expr>)</condition><block type="pseudo" pos:start="1203:9" pos:end="1203:42"><block_content pos:start="1203:9" pos:end="1203:42">

        <expr_stmt pos:start="1203:9" pos:end="1203:42"><expr pos:start="1203:9" pos:end="1203:41"><name pos:start="1203:9" pos:end="1203:21"><name pos:start="1203:9" pos:end="1203:9">s</name><operator pos:start="1203:10" pos:end="1203:11">-&gt;</operator><name pos:start="1203:12" pos:end="1203:21">rc_qsquish</name></name> <operator pos:start="1203:23" pos:end="1203:23">=</operator> <name pos:start="1203:25" pos:end="1203:41"><name pos:start="1203:25" pos:end="1203:29">avctx</name><operator pos:start="1203:30" pos:end="1203:31">-&gt;</operator><name pos:start="1203:32" pos:end="1203:41">rc_qsquish</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1205:5" pos:end="1207:44"><if pos:start="1205:5" pos:end="1207:44">if <condition pos:start="1205:8" pos:end="1205:34">(<expr pos:start="1205:9" pos:end="1205:33"><name pos:start="1205:9" pos:end="1205:26"><name pos:start="1205:9" pos:end="1205:13">avctx</name><operator pos:start="1205:14" pos:end="1205:15">-&gt;</operator><name pos:start="1205:16" pos:end="1205:26">rc_qmod_amp</name></name> <operator pos:start="1205:28" pos:end="1205:29">!=</operator> <literal type="number" pos:start="1205:31" pos:end="1205:33">0.0</literal></expr>)</condition><block type="pseudo" pos:start="1207:9" pos:end="1207:44"><block_content pos:start="1207:9" pos:end="1207:44">

        <expr_stmt pos:start="1207:9" pos:end="1207:44"><expr pos:start="1207:9" pos:end="1207:43"><name pos:start="1207:9" pos:end="1207:22"><name pos:start="1207:9" pos:end="1207:9">s</name><operator pos:start="1207:10" pos:end="1207:11">-&gt;</operator><name pos:start="1207:12" pos:end="1207:22">rc_qmod_amp</name></name> <operator pos:start="1207:24" pos:end="1207:24">=</operator> <name pos:start="1207:26" pos:end="1207:43"><name pos:start="1207:26" pos:end="1207:30">avctx</name><operator pos:start="1207:31" pos:end="1207:32">-&gt;</operator><name pos:start="1207:33" pos:end="1207:43">rc_qmod_amp</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1209:5" pos:end="1211:46"><if pos:start="1209:5" pos:end="1211:46">if <condition pos:start="1209:8" pos:end="1209:28">(<expr pos:start="1209:9" pos:end="1209:27"><name pos:start="1209:9" pos:end="1209:27"><name pos:start="1209:9" pos:end="1209:13">avctx</name><operator pos:start="1209:14" pos:end="1209:15">-&gt;</operator><name pos:start="1209:16" pos:end="1209:27">rc_qmod_freq</name></name></expr>)</condition><block type="pseudo" pos:start="1211:9" pos:end="1211:46"><block_content pos:start="1211:9" pos:end="1211:46">

        <expr_stmt pos:start="1211:9" pos:end="1211:46"><expr pos:start="1211:9" pos:end="1211:45"><name pos:start="1211:9" pos:end="1211:23"><name pos:start="1211:9" pos:end="1211:9">s</name><operator pos:start="1211:10" pos:end="1211:11">-&gt;</operator><name pos:start="1211:12" pos:end="1211:23">rc_qmod_freq</name></name> <operator pos:start="1211:25" pos:end="1211:25">=</operator> <name pos:start="1211:27" pos:end="1211:45"><name pos:start="1211:27" pos:end="1211:31">avctx</name><operator pos:start="1211:32" pos:end="1211:33">-&gt;</operator><name pos:start="1211:34" pos:end="1211:45">rc_qmod_freq</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1213:5" pos:end="1215:66"><if pos:start="1213:5" pos:end="1215:66">if <condition pos:start="1213:8" pos:end="1213:45">(<expr pos:start="1213:9" pos:end="1213:44"><name pos:start="1213:9" pos:end="1213:37"><name pos:start="1213:9" pos:end="1213:13">avctx</name><operator pos:start="1213:14" pos:end="1213:15">-&gt;</operator><name pos:start="1213:16" pos:end="1213:37">rc_buffer_aggressivity</name></name> <operator pos:start="1213:39" pos:end="1213:40">!=</operator> <literal type="number" pos:start="1213:42" pos:end="1213:44">1.0</literal></expr>)</condition><block type="pseudo" pos:start="1215:9" pos:end="1215:66"><block_content pos:start="1215:9" pos:end="1215:66">

        <expr_stmt pos:start="1215:9" pos:end="1215:66"><expr pos:start="1215:9" pos:end="1215:65"><name pos:start="1215:9" pos:end="1215:33"><name pos:start="1215:9" pos:end="1215:9">s</name><operator pos:start="1215:10" pos:end="1215:11">-&gt;</operator><name pos:start="1215:12" pos:end="1215:33">rc_buffer_aggressivity</name></name> <operator pos:start="1215:35" pos:end="1215:35">=</operator> <name pos:start="1215:37" pos:end="1215:65"><name pos:start="1215:37" pos:end="1215:41">avctx</name><operator pos:start="1215:42" pos:end="1215:43">-&gt;</operator><name pos:start="1215:44" pos:end="1215:65">rc_buffer_aggressivity</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1217:5" pos:end="1219:52"><if pos:start="1217:5" pos:end="1219:52">if <condition pos:start="1217:8" pos:end="1217:38">(<expr pos:start="1217:9" pos:end="1217:37"><name pos:start="1217:9" pos:end="1217:30"><name pos:start="1217:9" pos:end="1217:13">avctx</name><operator pos:start="1217:14" pos:end="1217:15">-&gt;</operator><name pos:start="1217:16" pos:end="1217:30">rc_initial_cplx</name></name> <operator pos:start="1217:32" pos:end="1217:33">!=</operator> <literal type="number" pos:start="1217:35" pos:end="1217:37">0.0</literal></expr>)</condition><block type="pseudo" pos:start="1219:9" pos:end="1219:52"><block_content pos:start="1219:9" pos:end="1219:52">

        <expr_stmt pos:start="1219:9" pos:end="1219:52"><expr pos:start="1219:9" pos:end="1219:51"><name pos:start="1219:9" pos:end="1219:26"><name pos:start="1219:9" pos:end="1219:9">s</name><operator pos:start="1219:10" pos:end="1219:11">-&gt;</operator><name pos:start="1219:12" pos:end="1219:26">rc_initial_cplx</name></name> <operator pos:start="1219:28" pos:end="1219:28">=</operator> <name pos:start="1219:30" pos:end="1219:51"><name pos:start="1219:30" pos:end="1219:34">avctx</name><operator pos:start="1219:35" pos:end="1219:36">-&gt;</operator><name pos:start="1219:37" pos:end="1219:51">rc_initial_cplx</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1221:5" pos:end="1223:30"><if pos:start="1221:5" pos:end="1223:30">if <condition pos:start="1221:8" pos:end="1221:20">(<expr pos:start="1221:9" pos:end="1221:19"><name pos:start="1221:9" pos:end="1221:19"><name pos:start="1221:9" pos:end="1221:13">avctx</name><operator pos:start="1221:14" pos:end="1221:15">-&gt;</operator><name pos:start="1221:16" pos:end="1221:19">lmin</name></name></expr>)</condition><block type="pseudo" pos:start="1223:9" pos:end="1223:30"><block_content pos:start="1223:9" pos:end="1223:30">

        <expr_stmt pos:start="1223:9" pos:end="1223:30"><expr pos:start="1223:9" pos:end="1223:29"><name pos:start="1223:9" pos:end="1223:15"><name pos:start="1223:9" pos:end="1223:9">s</name><operator pos:start="1223:10" pos:end="1223:11">-&gt;</operator><name pos:start="1223:12" pos:end="1223:15">lmin</name></name> <operator pos:start="1223:17" pos:end="1223:17">=</operator> <name pos:start="1223:19" pos:end="1223:29"><name pos:start="1223:19" pos:end="1223:23">avctx</name><operator pos:start="1223:24" pos:end="1223:25">-&gt;</operator><name pos:start="1223:26" pos:end="1223:29">lmin</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1225:5" pos:end="1227:30"><if pos:start="1225:5" pos:end="1227:30">if <condition pos:start="1225:8" pos:end="1225:20">(<expr pos:start="1225:9" pos:end="1225:19"><name pos:start="1225:9" pos:end="1225:19"><name pos:start="1225:9" pos:end="1225:13">avctx</name><operator pos:start="1225:14" pos:end="1225:15">-&gt;</operator><name pos:start="1225:16" pos:end="1225:19">lmax</name></name></expr>)</condition><block type="pseudo" pos:start="1227:9" pos:end="1227:30"><block_content pos:start="1227:9" pos:end="1227:30">

        <expr_stmt pos:start="1227:9" pos:end="1227:30"><expr pos:start="1227:9" pos:end="1227:29"><name pos:start="1227:9" pos:end="1227:15"><name pos:start="1227:9" pos:end="1227:9">s</name><operator pos:start="1227:10" pos:end="1227:11">-&gt;</operator><name pos:start="1227:12" pos:end="1227:15">lmax</name></name> <operator pos:start="1227:17" pos:end="1227:17">=</operator> <name pos:start="1227:19" pos:end="1227:29"><name pos:start="1227:19" pos:end="1227:23">avctx</name><operator pos:start="1227:24" pos:end="1227:25">-&gt;</operator><name pos:start="1227:26" pos:end="1227:29">lmax</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1231:5" pos:end="1241:5"><if pos:start="1231:5" pos:end="1241:5">if <condition pos:start="1231:8" pos:end="1231:21">(<expr pos:start="1231:9" pos:end="1231:20"><name pos:start="1231:9" pos:end="1231:20"><name pos:start="1231:9" pos:end="1231:13">avctx</name><operator pos:start="1231:14" pos:end="1231:15">-&gt;</operator><name pos:start="1231:16" pos:end="1231:20">rc_eq</name></name></expr>)</condition> <block pos:start="1231:23" pos:end="1241:5">{<block_content pos:start="1233:9" pos:end="1239:35">

        <expr_stmt pos:start="1233:9" pos:end="1233:28"><expr pos:start="1233:9" pos:end="1233:27"><call pos:start="1233:9" pos:end="1233:27"><name pos:start="1233:9" pos:end="1233:16">av_freep</name><argument_list pos:start="1233:17" pos:end="1233:27">(<argument pos:start="1233:18" pos:end="1233:26"><expr pos:start="1233:18" pos:end="1233:26"><operator pos:start="1233:18" pos:end="1233:18">&amp;</operator><name pos:start="1233:19" pos:end="1233:26"><name pos:start="1233:19" pos:end="1233:19">s</name><operator pos:start="1233:20" pos:end="1233:21">-&gt;</operator><name pos:start="1233:22" pos:end="1233:26">rc_eq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1235:9" pos:end="1235:43"><expr pos:start="1235:9" pos:end="1235:42"><name pos:start="1235:9" pos:end="1235:16"><name pos:start="1235:9" pos:end="1235:9">s</name><operator pos:start="1235:10" pos:end="1235:11">-&gt;</operator><name pos:start="1235:12" pos:end="1235:16">rc_eq</name></name> <operator pos:start="1235:18" pos:end="1235:18">=</operator> <call pos:start="1235:20" pos:end="1235:42"><name pos:start="1235:20" pos:end="1235:28">av_strdup</name><argument_list pos:start="1235:29" pos:end="1235:42">(<argument pos:start="1235:30" pos:end="1235:41"><expr pos:start="1235:30" pos:end="1235:41"><name pos:start="1235:30" pos:end="1235:41"><name pos:start="1235:30" pos:end="1235:34">avctx</name><operator pos:start="1235:35" pos:end="1235:36">-&gt;</operator><name pos:start="1235:37" pos:end="1235:41">rc_eq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1237:9" pos:end="1239:35"><if pos:start="1237:9" pos:end="1239:35">if <condition pos:start="1237:12" pos:end="1237:22">(<expr pos:start="1237:13" pos:end="1237:21"><operator pos:start="1237:13" pos:end="1237:13">!</operator><name pos:start="1237:14" pos:end="1237:21"><name pos:start="1237:14" pos:end="1237:14">s</name><operator pos:start="1237:15" pos:end="1237:16">-&gt;</operator><name pos:start="1237:17" pos:end="1237:21">rc_eq</name></name></expr>)</condition><block type="pseudo" pos:start="1239:13" pos:end="1239:35"><block_content pos:start="1239:13" pos:end="1239:35">

            <return pos:start="1239:13" pos:end="1239:35">return <expr pos:start="1239:20" pos:end="1239:34"><call pos:start="1239:20" pos:end="1239:34"><name pos:start="1239:20" pos:end="1239:26">AVERROR</name><argument_list pos:start="1239:27" pos:end="1239:34">(<argument pos:start="1239:28" pos:end="1239:33"><expr pos:start="1239:28" pos:end="1239:33"><name pos:start="1239:28" pos:end="1239:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <macro pos:start="1243:5" pos:end="1246:0"><name pos:start="1243:5" pos:end="1246:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="1245:1" pos:end="1245:6">#<cpp:directive pos:start="1245:2" pos:end="1245:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="1249:5" pos:end="1277:5"><if pos:start="1249:5" pos:end="1277:5">if <condition pos:start="1249:8" pos:end="1249:37">(<expr pos:start="1249:9" pos:end="1249:36"><name pos:start="1249:9" pos:end="1249:31"><name pos:start="1249:9" pos:end="1249:13">avctx</name><operator pos:start="1249:14" pos:end="1249:15">-&gt;</operator><name pos:start="1249:16" pos:end="1249:31">b_frame_strategy</name></name> <operator pos:start="1249:33" pos:end="1249:34">==</operator> <literal type="number" pos:start="1249:36" pos:end="1249:36">2</literal></expr>)</condition> <block pos:start="1249:39" pos:end="1277:5">{<block_content pos:start="1251:9" pos:end="1275:9">

        <for pos:start="1251:9" pos:end="1275:9">for <control pos:start="1251:13" pos:end="1251:49">(<init pos:start="1251:14" pos:end="1251:19"><expr pos:start="1251:14" pos:end="1251:18"><name pos:start="1251:14" pos:end="1251:14">i</name> <operator pos:start="1251:16" pos:end="1251:16">=</operator> <literal type="number" pos:start="1251:18" pos:end="1251:18">0</literal></expr>;</init> <condition pos:start="1251:21" pos:end="1251:44"><expr pos:start="1251:21" pos:end="1251:43"><name pos:start="1251:21" pos:end="1251:21">i</name> <operator pos:start="1251:23" pos:end="1251:23">&lt;</operator> <name pos:start="1251:25" pos:end="1251:39"><name pos:start="1251:25" pos:end="1251:25">s</name><operator pos:start="1251:26" pos:end="1251:27">-&gt;</operator><name pos:start="1251:28" pos:end="1251:39">max_b_frames</name></name> <operator pos:start="1251:41" pos:end="1251:41">+</operator> <literal type="number" pos:start="1251:43" pos:end="1251:43">2</literal></expr>;</condition> <incr pos:start="1251:46" pos:end="1251:48"><expr pos:start="1251:46" pos:end="1251:48"><name pos:start="1251:46" pos:end="1251:46">i</name><operator pos:start="1251:47" pos:end="1251:48">++</operator></expr></incr>)</control> <block pos:start="1251:51" pos:end="1275:9">{<block_content pos:start="1253:13" pos:end="1273:27">

            <expr_stmt pos:start="1253:13" pos:end="1253:48"><expr pos:start="1253:13" pos:end="1253:47"><name pos:start="1253:13" pos:end="1253:28"><name pos:start="1253:13" pos:end="1253:13">s</name><operator pos:start="1253:14" pos:end="1253:15">-&gt;</operator><name pos:start="1253:16" pos:end="1253:25">tmp_frames</name><index pos:start="1253:26" pos:end="1253:28">[<expr pos:start="1253:27" pos:end="1253:27"><name pos:start="1253:27" pos:end="1253:27">i</name></expr>]</index></name> <operator pos:start="1253:30" pos:end="1253:30">=</operator> <call pos:start="1253:32" pos:end="1253:47"><name pos:start="1253:32" pos:end="1253:45">av_frame_alloc</name><argument_list pos:start="1253:46" pos:end="1253:47">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1255:13" pos:end="1257:39"><if pos:start="1255:13" pos:end="1257:39">if <condition pos:start="1255:16" pos:end="1255:34">(<expr pos:start="1255:17" pos:end="1255:33"><operator pos:start="1255:17" pos:end="1255:17">!</operator><name pos:start="1255:18" pos:end="1255:33"><name pos:start="1255:18" pos:end="1255:18">s</name><operator pos:start="1255:19" pos:end="1255:20">-&gt;</operator><name pos:start="1255:21" pos:end="1255:30">tmp_frames</name><index pos:start="1255:31" pos:end="1255:33">[<expr pos:start="1255:32" pos:end="1255:32"><name pos:start="1255:32" pos:end="1255:32">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1257:17" pos:end="1257:39"><block_content pos:start="1257:17" pos:end="1257:39">

                <return pos:start="1257:17" pos:end="1257:39">return <expr pos:start="1257:24" pos:end="1257:38"><call pos:start="1257:24" pos:end="1257:38"><name pos:start="1257:24" pos:end="1257:30">AVERROR</name><argument_list pos:start="1257:31" pos:end="1257:38">(<argument pos:start="1257:32" pos:end="1257:37"><expr pos:start="1257:32" pos:end="1257:37"><name pos:start="1257:32" pos:end="1257:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="1261:13" pos:end="1261:58"><expr pos:start="1261:13" pos:end="1261:57"><name pos:start="1261:13" pos:end="1261:28"><name pos:start="1261:13" pos:end="1261:13">s</name><operator pos:start="1261:14" pos:end="1261:15">-&gt;</operator><name pos:start="1261:16" pos:end="1261:25">tmp_frames</name><index pos:start="1261:26" pos:end="1261:28">[<expr pos:start="1261:27" pos:end="1261:27"><name pos:start="1261:27" pos:end="1261:27">i</name></expr>]</index></name><operator pos:start="1261:29" pos:end="1261:30">-&gt;</operator><name pos:start="1261:31" pos:end="1261:36">format</name> <operator pos:start="1261:38" pos:end="1261:38">=</operator> <name pos:start="1261:40" pos:end="1261:57">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

            <expr_stmt pos:start="1263:13" pos:end="1263:69"><expr pos:start="1263:13" pos:end="1263:68"><name pos:start="1263:13" pos:end="1263:28"><name pos:start="1263:13" pos:end="1263:13">s</name><operator pos:start="1263:14" pos:end="1263:15">-&gt;</operator><name pos:start="1263:16" pos:end="1263:25">tmp_frames</name><index pos:start="1263:26" pos:end="1263:28">[<expr pos:start="1263:27" pos:end="1263:27"><name pos:start="1263:27" pos:end="1263:27">i</name></expr>]</index></name><operator pos:start="1263:29" pos:end="1263:30">-&gt;</operator><name pos:start="1263:31" pos:end="1263:35">width</name>  <operator pos:start="1263:38" pos:end="1263:38">=</operator> <name pos:start="1263:40" pos:end="1263:47"><name pos:start="1263:40" pos:end="1263:40">s</name><operator pos:start="1263:41" pos:end="1263:42">-&gt;</operator><name pos:start="1263:43" pos:end="1263:47">width</name></name>  <operator pos:start="1263:50" pos:end="1263:51">&gt;&gt;</operator> <name pos:start="1263:53" pos:end="1263:68"><name pos:start="1263:53" pos:end="1263:57">avctx</name><operator pos:start="1263:58" pos:end="1263:59">-&gt;</operator><name pos:start="1263:60" pos:end="1263:68">brd_scale</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1265:13" pos:end="1265:69"><expr pos:start="1265:13" pos:end="1265:68"><name pos:start="1265:13" pos:end="1265:28"><name pos:start="1265:13" pos:end="1265:13">s</name><operator pos:start="1265:14" pos:end="1265:15">-&gt;</operator><name pos:start="1265:16" pos:end="1265:25">tmp_frames</name><index pos:start="1265:26" pos:end="1265:28">[<expr pos:start="1265:27" pos:end="1265:27"><name pos:start="1265:27" pos:end="1265:27">i</name></expr>]</index></name><operator pos:start="1265:29" pos:end="1265:30">-&gt;</operator><name pos:start="1265:31" pos:end="1265:36">height</name> <operator pos:start="1265:38" pos:end="1265:38">=</operator> <name pos:start="1265:40" pos:end="1265:48"><name pos:start="1265:40" pos:end="1265:40">s</name><operator pos:start="1265:41" pos:end="1265:42">-&gt;</operator><name pos:start="1265:43" pos:end="1265:48">height</name></name> <operator pos:start="1265:50" pos:end="1265:51">&gt;&gt;</operator> <name pos:start="1265:53" pos:end="1265:68"><name pos:start="1265:53" pos:end="1265:57">avctx</name><operator pos:start="1265:58" pos:end="1265:59">-&gt;</operator><name pos:start="1265:60" pos:end="1265:68">brd_scale</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="1269:13" pos:end="1269:60"><expr pos:start="1269:13" pos:end="1269:59"><name pos:start="1269:13" pos:end="1269:15">ret</name> <operator pos:start="1269:17" pos:end="1269:17">=</operator> <call pos:start="1269:19" pos:end="1269:59"><name pos:start="1269:19" pos:end="1269:37">av_frame_get_buffer</name><argument_list pos:start="1269:38" pos:end="1269:59">(<argument pos:start="1269:39" pos:end="1269:54"><expr pos:start="1269:39" pos:end="1269:54"><name pos:start="1269:39" pos:end="1269:54"><name pos:start="1269:39" pos:end="1269:39">s</name><operator pos:start="1269:40" pos:end="1269:41">-&gt;</operator><name pos:start="1269:42" pos:end="1269:51">tmp_frames</name><index pos:start="1269:52" pos:end="1269:54">[<expr pos:start="1269:53" pos:end="1269:53"><name pos:start="1269:53" pos:end="1269:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="1269:57" pos:end="1269:58"><expr pos:start="1269:57" pos:end="1269:58"><literal type="number" pos:start="1269:57" pos:end="1269:58">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1271:13" pos:end="1273:27"><if pos:start="1271:13" pos:end="1273:27">if <condition pos:start="1271:16" pos:end="1271:24">(<expr pos:start="1271:17" pos:end="1271:23"><name pos:start="1271:17" pos:end="1271:19">ret</name> <operator pos:start="1271:21" pos:end="1271:21">&lt;</operator> <literal type="number" pos:start="1271:23" pos:end="1271:23">0</literal></expr>)</condition><block type="pseudo" pos:start="1273:17" pos:end="1273:27"><block_content pos:start="1273:17" pos:end="1273:27">

                <return pos:start="1273:17" pos:end="1273:27">return <expr pos:start="1273:24" pos:end="1273:26"><name pos:start="1273:24" pos:end="1273:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="1281:5" pos:end="1281:13">return <expr pos:start="1281:12" pos:end="1281:12"><literal type="number" pos:start="1281:12" pos:end="1281:12">0</literal></expr>;</return>

<label pos:start="1283:1" pos:end="1283:5"><name pos:start="1283:1" pos:end="1283:4">fail</name>:</label>

    <expr_stmt pos:start="1285:5" pos:end="1285:29"><expr pos:start="1285:5" pos:end="1285:28"><call pos:start="1285:5" pos:end="1285:28"><name pos:start="1285:5" pos:end="1285:21">ff_mpv_encode_end</name><argument_list pos:start="1285:22" pos:end="1285:28">(<argument pos:start="1285:23" pos:end="1285:27"><expr pos:start="1285:23" pos:end="1285:27"><name pos:start="1285:23" pos:end="1285:27">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1287:5" pos:end="1287:27">return <expr pos:start="1287:12" pos:end="1287:26"><name pos:start="1287:12" pos:end="1287:26">AVERROR_UNKNOWN</name></expr>;</return>

</block_content>}</block></function>
</unit>
