<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12385.c" pos:tabs="8"><function pos:start="1:1" pos:end="393:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">lag_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:72">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">got_frame</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:71"><decl pos:start="3:57" pos:end="3:71"><type pos:start="3:57" pos:end="3:71"><name pos:start="3:57" pos:end="3:64">AVPacket</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:71">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="393:1">{<block_content pos:start="7:5" pos:end="391:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:25">buf_size</name> <init pos:start="9:27" pos:end="9:39">= <expr pos:start="9:29" pos:end="9:39"><name pos:start="9:29" pos:end="9:39"><name pos:start="9:29" pos:end="9:33">avpkt</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:39">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">LagarithContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:22">l</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">ThreadFrame</name></type> <name pos:start="13:17" pos:end="13:21">frame</name> <init pos:start="13:23" pos:end="13:37">= <expr pos:start="13:25" pos:end="13:37"><block pos:start="13:25" pos:end="13:37">{ <expr pos:start="13:27" pos:end="13:35"><operator pos:start="13:27" pos:end="13:27">.</operator><name pos:start="13:28" pos:end="13:28">f</name> <operator pos:start="13:30" pos:end="13:30">=</operator> <name pos:start="13:32" pos:end="13:35">data</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier><specifier pos:start="15:14" pos:end="15:18">const</specifier></type> <name pos:start="15:20" pos:end="15:20">p</name>  <init pos:start="15:23" pos:end="15:28">= <expr pos:start="15:25" pos:end="15:28"><name pos:start="15:25" pos:end="15:28">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:21">frametype</name> <init pos:start="17:23" pos:end="17:25">= <expr pos:start="17:25" pos:end="17:25"><literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:57"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:22">offset_gu</name> <init pos:start="19:24" pos:end="19:26">= <expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr></init></decl>, <decl pos:start="19:29" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:29" pos:end="19:37">offset_bv</name> <init pos:start="19:39" pos:end="19:41">= <expr pos:start="19:41" pos:end="19:41"><literal type="number" pos:start="19:41" pos:end="19:41">0</literal></expr></init></decl>, <decl pos:start="19:44" pos:end="19:56"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:44" pos:end="19:52">offset_ry</name> <init pos:start="19:54" pos:end="19:56">= <expr pos:start="19:56" pos:end="19:56"><literal type="number" pos:start="19:56" pos:end="19:56">9</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:20"><name pos:start="21:14" pos:end="21:17">offs</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">uint8_t</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:20"><name pos:start="23:14" pos:end="23:17">srcs</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">4</literal></expr>]</index></name></decl>, <decl pos:start="23:23" pos:end="23:26"><type ref="prev" pos:start="23:5" pos:end="23:13"><modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:26">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:25"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>, <decl pos:start="25:12" pos:end="25:12"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:12">j</name></decl>, <decl pos:start="25:15" pos:end="25:24"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:15" pos:end="25:20">planes</name> <init pos:start="25:22" pos:end="25:24">= <expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:5">p</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:16">key_frame</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:13">frametype</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:19">buf</name><index pos:start="35:20" pos:end="35:22">[<expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:13">offset_gu</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:32"><name pos:start="39:17" pos:end="39:23">AV_RL32</name><argument_list pos:start="39:24" pos:end="39:32">(<argument pos:start="39:25" pos:end="39:31"><expr pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:27">buf</name> <operator pos:start="39:29" pos:end="39:29">+</operator> <literal type="number" pos:start="39:31" pos:end="39:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:13">offset_bv</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:23">AV_RL32</name><argument_list pos:start="41:24" pos:end="41:32">(<argument pos:start="41:25" pos:end="41:31"><expr pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:27">buf</name> <operator pos:start="41:29" pos:end="41:29">+</operator> <literal type="number" pos:start="41:31" pos:end="41:31">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="45:5" pos:end="383:5">switch <condition pos:start="45:12" pos:end="45:22">(<expr pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:21">frametype</name></expr>)</condition> <block pos:start="45:24" pos:end="383:5">{<block_content pos:start="47:5" pos:end="381:36">

    <case pos:start="47:5" pos:end="47:26">case <expr pos:start="47:10" pos:end="47:25"><name pos:start="47:10" pos:end="47:25">FRAME_SOLID_RGBA</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:42"><expr pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:13">avctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">pix_fmt</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:41">AV_PIX_FMT_RGB32</name></expr>;</expr_stmt>

    <case pos:start="51:5" pos:end="51:26">case <expr pos:start="51:10" pos:end="51:25"><name pos:start="51:10" pos:end="51:25">FRAME_SOLID_GRAY</name></expr>:</case>

        <if_stmt pos:start="53:9" pos:end="65:13"><if pos:start="53:9" pos:end="65:13">if <condition pos:start="53:12" pos:end="53:42">(<expr pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:21">frametype</name> <operator pos:start="53:23" pos:end="53:24">==</operator> <name pos:start="53:26" pos:end="53:41">FRAME_SOLID_GRAY</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="65:13"><block_content pos:start="55:13" pos:end="65:13">

            <if_stmt pos:start="55:13" pos:end="65:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:51">(<expr pos:start="55:17" pos:end="55:50"><name pos:start="55:17" pos:end="55:44"><name pos:start="55:17" pos:end="55:21">avctx</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:44">bits_per_coded_sample</name></name> <operator pos:start="55:46" pos:end="55:47">==</operator> <literal type="number" pos:start="55:49" pos:end="55:50">24</literal></expr>)</condition> <block pos:start="55:53" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:50">

                <expr_stmt pos:start="57:17" pos:end="57:50"><expr pos:start="57:17" pos:end="57:49"><name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:21">avctx</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:30">pix_fmt</name></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:49">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="65:13">else <block pos:start="59:20" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:27">

                <expr_stmt pos:start="61:17" pos:end="61:51"><expr pos:start="61:17" pos:end="61:50"><name pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:21">avctx</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:30">pix_fmt</name></name> <operator pos:start="61:32" pos:end="61:32">=</operator> <name pos:start="61:34" pos:end="61:50">AV_PIX_FMT_0RGB32</name></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:27"><expr pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:22">planes</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <literal type="number" pos:start="63:26" pos:end="63:26">4</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="71:23"><if pos:start="69:9" pos:end="71:23">if <condition pos:start="69:12" pos:end="69:63">(<expr pos:start="69:13" pos:end="69:62"><operator pos:start="69:13" pos:end="69:13">(</operator><name pos:start="69:14" pos:end="69:16">ret</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <call pos:start="69:20" pos:end="69:57"><name pos:start="69:20" pos:end="69:39">ff_thread_get_buffer</name><argument_list pos:start="69:40" pos:end="69:57">(<argument pos:start="69:41" pos:end="69:45"><expr pos:start="69:41" pos:end="69:45"><name pos:start="69:41" pos:end="69:45">avctx</name></expr></argument>, <argument pos:start="69:48" pos:end="69:53"><expr pos:start="69:48" pos:end="69:53"><operator pos:start="69:48" pos:end="69:48">&amp;</operator><name pos:start="69:49" pos:end="69:53">frame</name></expr></argument>, <argument pos:start="69:56" pos:end="69:56"><expr pos:start="69:56" pos:end="69:56"><literal type="number" pos:start="69:56" pos:end="69:56">0</literal></expr></argument>)</argument_list></call><operator pos:start="69:58" pos:end="69:58">)</operator> <operator pos:start="69:60" pos:end="69:60">&lt;</operator> <literal type="number" pos:start="69:62" pos:end="69:62">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:23"><block_content pos:start="71:13" pos:end="71:23">

            <return pos:start="71:13" pos:end="71:23">return <expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:25"><expr pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:11">dst</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:24"><name pos:start="75:15" pos:end="75:15">p</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:21">data</name><index pos:start="75:22" pos:end="75:24">[<expr pos:start="75:23" pos:end="75:23"><literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="99:9"><if pos:start="77:9" pos:end="89:9">if <condition pos:start="77:12" pos:end="77:42">(<expr pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:21">frametype</name> <operator pos:start="77:23" pos:end="77:24">==</operator> <name pos:start="77:26" pos:end="77:41">FRAME_SOLID_RGBA</name></expr>)</condition> <block pos:start="77:44" pos:end="89:9">{<block_content pos:start="79:9" pos:end="87:9">

        <for pos:start="79:9" pos:end="87:9">for <control pos:start="79:13" pos:end="79:43">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">j</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:38"><expr pos:start="79:21" pos:end="79:37"><name pos:start="79:21" pos:end="79:21">j</name> <operator pos:start="79:23" pos:end="79:23">&lt;</operator> <name pos:start="79:25" pos:end="79:37"><name pos:start="79:25" pos:end="79:29">avctx</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:37">height</name></name></expr>;</condition> <incr pos:start="79:40" pos:end="79:42"><expr pos:start="79:40" pos:end="79:42"><name pos:start="79:40" pos:end="79:40">j</name><operator pos:start="79:41" pos:end="79:42">++</operator></expr></incr>)</control> <block pos:start="79:45" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:34">

            <for pos:start="81:13" pos:end="83:48">for <control pos:start="81:17" pos:end="81:46">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">i</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:41"><expr pos:start="81:25" pos:end="81:40"><name pos:start="81:25" pos:end="81:25">i</name> <operator pos:start="81:27" pos:end="81:27">&lt;</operator> <name pos:start="81:29" pos:end="81:40"><name pos:start="81:29" pos:end="81:33">avctx</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:40">width</name></name></expr>;</condition> <incr pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><name pos:start="81:43" pos:end="81:43">i</name><operator pos:start="81:44" pos:end="81:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:17" pos:end="83:48"><block_content pos:start="83:17" pos:end="83:48">

                <expr_stmt pos:start="83:17" pos:end="83:48"><expr pos:start="83:17" pos:end="83:47"><call pos:start="83:17" pos:end="83:47"><name pos:start="83:17" pos:end="83:23">AV_WN32</name><argument_list pos:start="83:24" pos:end="83:47">(<argument pos:start="83:25" pos:end="83:35"><expr pos:start="83:25" pos:end="83:35"><name pos:start="83:25" pos:end="83:27">dst</name> <operator pos:start="83:29" pos:end="83:29">+</operator> <name pos:start="83:31" pos:end="83:31">i</name> <operator pos:start="83:33" pos:end="83:33">*</operator> <literal type="number" pos:start="83:35" pos:end="83:35">4</literal></expr></argument>, <argument pos:start="83:38" pos:end="83:46"><expr pos:start="83:38" pos:end="83:46"><name pos:start="83:38" pos:end="83:46">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="85:13" pos:end="85:34"><expr pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:15">dst</name> <operator pos:start="85:17" pos:end="85:18">+=</operator> <name pos:start="85:20" pos:end="85:33"><name pos:start="85:20" pos:end="85:20">p</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:30">linesize</name><index pos:start="85:31" pos:end="85:33">[<expr pos:start="85:32" pos:end="85:32"><literal type="number" pos:start="85:32" pos:end="85:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="99:9">else <block pos:start="89:16" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:13">

            <for pos:start="91:13" pos:end="97:13">for <control pos:start="91:17" pos:end="91:47">(<init pos:start="91:18" pos:end="91:23"><expr pos:start="91:18" pos:end="91:22"><name pos:start="91:18" pos:end="91:18">j</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <literal type="number" pos:start="91:22" pos:end="91:22">0</literal></expr>;</init> <condition pos:start="91:25" pos:end="91:42"><expr pos:start="91:25" pos:end="91:41"><name pos:start="91:25" pos:end="91:25">j</name> <operator pos:start="91:27" pos:end="91:27">&lt;</operator> <name pos:start="91:29" pos:end="91:41"><name pos:start="91:29" pos:end="91:33">avctx</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:41">height</name></name></expr>;</condition> <incr pos:start="91:44" pos:end="91:46"><expr pos:start="91:44" pos:end="91:46"><name pos:start="91:44" pos:end="91:44">j</name><operator pos:start="91:45" pos:end="91:46">++</operator></expr></incr>)</control> <block pos:start="91:49" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:38">

                <expr_stmt pos:start="93:17" pos:end="93:59"><expr pos:start="93:17" pos:end="93:58"><call pos:start="93:17" pos:end="93:58"><name pos:start="93:17" pos:end="93:22">memset</name><argument_list pos:start="93:23" pos:end="93:58">(<argument pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">dst</name></expr></argument>, <argument pos:start="93:29" pos:end="93:34"><expr pos:start="93:29" pos:end="93:34"><name pos:start="93:29" pos:end="93:34"><name pos:start="93:29" pos:end="93:31">buf</name><index pos:start="93:32" pos:end="93:34">[<expr pos:start="93:33" pos:end="93:33"><literal type="number" pos:start="93:33" pos:end="93:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="93:37" pos:end="93:57"><expr pos:start="93:37" pos:end="93:57"><name pos:start="93:37" pos:end="93:48"><name pos:start="93:37" pos:end="93:41">avctx</name><operator pos:start="93:42" pos:end="93:43">-&gt;</operator><name pos:start="93:44" pos:end="93:48">width</name></name> <operator pos:start="93:50" pos:end="93:50">*</operator> <name pos:start="93:52" pos:end="93:57">planes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:38"><expr pos:start="95:17" pos:end="95:37"><name pos:start="95:17" pos:end="95:19">dst</name> <operator pos:start="95:21" pos:end="95:22">+=</operator> <name pos:start="95:24" pos:end="95:37"><name pos:start="95:24" pos:end="95:24">p</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:34">linesize</name><index pos:start="95:35" pos:end="95:37">[<expr pos:start="95:36" pos:end="95:36"><literal type="number" pos:start="95:36" pos:end="95:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:27">case <expr pos:start="103:10" pos:end="103:26"><name pos:start="103:10" pos:end="103:26">FRAME_SOLID_COLOR</name></expr>:</case>

        <if_stmt pos:start="105:9" pos:end="115:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:47">(<expr pos:start="105:13" pos:end="105:46"><name pos:start="105:13" pos:end="105:40"><name pos:start="105:13" pos:end="105:17">avctx</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:40">bits_per_coded_sample</name></name> <operator pos:start="105:42" pos:end="105:43">==</operator> <literal type="number" pos:start="105:45" pos:end="105:46">24</literal></expr>)</condition> <block pos:start="105:49" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:46">

            <expr_stmt pos:start="107:13" pos:end="107:46"><expr pos:start="107:13" pos:end="107:45"><name pos:start="107:13" pos:end="107:26"><name pos:start="107:13" pos:end="107:17">avctx</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:26">pix_fmt</name></name> <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:45">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="115:9">else <block pos:start="109:16" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:37">

            <expr_stmt pos:start="111:13" pos:end="111:46"><expr pos:start="111:13" pos:end="111:45"><name pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:17">avctx</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:26">pix_fmt</name></name> <operator pos:start="111:28" pos:end="111:28">=</operator> <name pos:start="111:30" pos:end="111:45">AV_PIX_FMT_RGB32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:37"><expr pos:start="113:13" pos:end="113:36"><name pos:start="113:13" pos:end="113:21">offset_gu</name> <operator pos:start="113:23" pos:end="113:24">|=</operator> <literal type="number" pos:start="113:26" pos:end="113:30">0xFFU</literal> <operator pos:start="113:32" pos:end="113:33">&lt;&lt;</operator> <literal type="number" pos:start="113:35" pos:end="113:36">24</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="119:9" pos:end="121:23"><if pos:start="119:9" pos:end="121:23">if <condition pos:start="119:12" pos:end="119:62">(<expr pos:start="119:13" pos:end="119:61"><operator pos:start="119:13" pos:end="119:13">(</operator><name pos:start="119:14" pos:end="119:16">ret</name> <operator pos:start="119:18" pos:end="119:18">=</operator> <call pos:start="119:20" pos:end="119:56"><name pos:start="119:20" pos:end="119:39">ff_thread_get_buffer</name><argument_list pos:start="119:40" pos:end="119:56">(<argument pos:start="119:41" pos:end="119:45"><expr pos:start="119:41" pos:end="119:45"><name pos:start="119:41" pos:end="119:45">avctx</name></expr></argument>, <argument pos:start="119:48" pos:end="119:53"><expr pos:start="119:48" pos:end="119:53"><operator pos:start="119:48" pos:end="119:48">&amp;</operator><name pos:start="119:49" pos:end="119:53">frame</name></expr></argument>,<argument pos:start="119:55" pos:end="119:55"><expr pos:start="119:55" pos:end="119:55"><literal type="number" pos:start="119:55" pos:end="119:55">0</literal></expr></argument>)</argument_list></call><operator pos:start="119:57" pos:end="119:57">)</operator> <operator pos:start="119:59" pos:end="119:59">&lt;</operator> <literal type="number" pos:start="119:61" pos:end="119:61">0</literal></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:23"><block_content pos:start="121:13" pos:end="121:23">

            <return pos:start="121:13" pos:end="121:23">return <expr pos:start="121:20" pos:end="121:22"><name pos:start="121:20" pos:end="121:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:25"><expr pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:11">dst</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <name pos:start="125:15" pos:end="125:24"><name pos:start="125:15" pos:end="125:15">p</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:21">data</name><index pos:start="125:22" pos:end="125:24">[<expr pos:start="125:23" pos:end="125:23"><literal type="number" pos:start="125:23" pos:end="125:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="127:9" pos:end="143:9">for <control pos:start="127:13" pos:end="127:43">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">j</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:38"><expr pos:start="127:21" pos:end="127:37"><name pos:start="127:21" pos:end="127:21">j</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <name pos:start="127:25" pos:end="127:37"><name pos:start="127:25" pos:end="127:29">avctx</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:37">height</name></name></expr>;</condition> <incr pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:42"><name pos:start="127:40" pos:end="127:40">j</name><operator pos:start="127:41" pos:end="127:42">++</operator></expr></incr>)</control> <block pos:start="127:45" pos:end="143:9">{<block_content pos:start="129:13" pos:end="141:34">

            <for pos:start="129:13" pos:end="139:17">for <control pos:start="129:17" pos:end="129:46">(<init pos:start="129:18" pos:end="129:23"><expr pos:start="129:18" pos:end="129:22"><name pos:start="129:18" pos:end="129:18">i</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <literal type="number" pos:start="129:22" pos:end="129:22">0</literal></expr>;</init> <condition pos:start="129:25" pos:end="129:41"><expr pos:start="129:25" pos:end="129:40"><name pos:start="129:25" pos:end="129:25">i</name> <operator pos:start="129:27" pos:end="129:27">&lt;</operator> <name pos:start="129:29" pos:end="129:40"><name pos:start="129:29" pos:end="129:33">avctx</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:40">width</name></name></expr>;</condition> <incr pos:start="129:43" pos:end="129:45"><expr pos:start="129:43" pos:end="129:45"><name pos:start="129:43" pos:end="129:43">i</name><operator pos:start="129:44" pos:end="129:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="131:17" pos:end="139:17"><block_content pos:start="131:17" pos:end="139:17">

                <if_stmt pos:start="131:17" pos:end="139:17"><if pos:start="131:17" pos:end="135:17">if <condition pos:start="131:20" pos:end="131:55">(<expr pos:start="131:21" pos:end="131:54"><name pos:start="131:21" pos:end="131:48"><name pos:start="131:21" pos:end="131:25">avctx</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:48">bits_per_coded_sample</name></name> <operator pos:start="131:50" pos:end="131:51">==</operator> <literal type="number" pos:start="131:53" pos:end="131:54">24</literal></expr>)</condition> <block pos:start="131:57" pos:end="135:17">{<block_content pos:start="133:21" pos:end="133:52">

                    <expr_stmt pos:start="133:21" pos:end="133:52"><expr pos:start="133:21" pos:end="133:51"><call pos:start="133:21" pos:end="133:51"><name pos:start="133:21" pos:end="133:27">AV_WB24</name><argument_list pos:start="133:28" pos:end="133:51">(<argument pos:start="133:29" pos:end="133:39"><expr pos:start="133:29" pos:end="133:39"><name pos:start="133:29" pos:end="133:31">dst</name> <operator pos:start="133:33" pos:end="133:33">+</operator> <name pos:start="133:35" pos:end="133:35">i</name> <operator pos:start="133:37" pos:end="133:37">*</operator> <literal type="number" pos:start="133:39" pos:end="133:39">3</literal></expr></argument>, <argument pos:start="133:42" pos:end="133:50"><expr pos:start="133:42" pos:end="133:50"><name pos:start="133:42" pos:end="133:50">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="135:19" pos:end="139:17">else <block pos:start="135:24" pos:end="139:17">{<block_content pos:start="137:21" pos:end="137:52">

                    <expr_stmt pos:start="137:21" pos:end="137:52"><expr pos:start="137:21" pos:end="137:51"><call pos:start="137:21" pos:end="137:51"><name pos:start="137:21" pos:end="137:27">AV_WN32</name><argument_list pos:start="137:28" pos:end="137:51">(<argument pos:start="137:29" pos:end="137:39"><expr pos:start="137:29" pos:end="137:39"><name pos:start="137:29" pos:end="137:31">dst</name> <operator pos:start="137:33" pos:end="137:33">+</operator> <name pos:start="137:35" pos:end="137:35">i</name> <operator pos:start="137:37" pos:end="137:37">*</operator> <literal type="number" pos:start="137:39" pos:end="137:39">4</literal></expr></argument>, <argument pos:start="137:42" pos:end="137:50"><expr pos:start="137:42" pos:end="137:50"><name pos:start="137:42" pos:end="137:50">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt></block_content></block></for>

            <expr_stmt pos:start="141:13" pos:end="141:34"><expr pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:15">dst</name> <operator pos:start="141:17" pos:end="141:18">+=</operator> <name pos:start="141:20" pos:end="141:33"><name pos:start="141:20" pos:end="141:20">p</name><operator pos:start="141:21" pos:end="141:22">-&gt;</operator><name pos:start="141:23" pos:end="141:30">linesize</name><index pos:start="141:31" pos:end="141:33">[<expr pos:start="141:32" pos:end="141:32"><literal type="number" pos:start="141:32" pos:end="141:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="145:9" pos:end="145:14">break;</break>

    <case pos:start="147:5" pos:end="147:26">case <expr pos:start="147:10" pos:end="147:25"><name pos:start="147:10" pos:end="147:25">FRAME_ARITH_RGBA</name></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:42"><expr pos:start="149:9" pos:end="149:41"><name pos:start="149:9" pos:end="149:22"><name pos:start="149:9" pos:end="149:13">avctx</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:22">pix_fmt</name></name> <operator pos:start="149:24" pos:end="149:24">=</operator> <name pos:start="149:26" pos:end="149:41">AV_PIX_FMT_RGB32</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:19"><expr pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:14">planes</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="number" pos:start="151:18" pos:end="151:18">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:23"><expr pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:17">offset_ry</name> <operator pos:start="153:19" pos:end="153:20">+=</operator> <literal type="number" pos:start="153:22" pos:end="153:22">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:35"><expr pos:start="155:9" pos:end="155:34"><name pos:start="155:9" pos:end="155:15"><name pos:start="155:9" pos:end="155:12">offs</name><index pos:start="155:13" pos:end="155:15">[<expr pos:start="155:14" pos:end="155:14"><literal type="number" pos:start="155:14" pos:end="155:14">3</literal></expr>]</index></name> <operator pos:start="155:17" pos:end="155:17">=</operator> <call pos:start="155:19" pos:end="155:34"><name pos:start="155:19" pos:end="155:25">AV_RL32</name><argument_list pos:start="155:26" pos:end="155:34">(<argument pos:start="155:27" pos:end="155:33"><expr pos:start="155:27" pos:end="155:33"><name pos:start="155:27" pos:end="155:29">buf</name> <operator pos:start="155:31" pos:end="155:31">+</operator> <literal type="number" pos:start="155:33" pos:end="155:33">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="157:5" pos:end="157:27">case <expr pos:start="157:10" pos:end="157:26"><name pos:start="157:10" pos:end="157:26">FRAME_ARITH_RGB24</name></expr>:</case>

    <case pos:start="159:5" pos:end="159:23">case <expr pos:start="159:10" pos:end="159:22"><name pos:start="159:10" pos:end="159:22">FRAME_U_RGB24</name></expr>:</case>

        <if_stmt pos:start="161:9" pos:end="163:46"><if pos:start="161:9" pos:end="163:46">if <condition pos:start="161:12" pos:end="161:73">(<expr pos:start="161:13" pos:end="161:72"><name pos:start="161:13" pos:end="161:21">frametype</name> <operator pos:start="161:23" pos:end="161:24">==</operator> <name pos:start="161:26" pos:end="161:42">FRAME_ARITH_RGB24</name> <operator pos:start="161:44" pos:end="161:45">||</operator> <name pos:start="161:47" pos:end="161:55">frametype</name> <operator pos:start="161:57" pos:end="161:58">==</operator> <name pos:start="161:60" pos:end="161:72">FRAME_U_RGB24</name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:46"><block_content pos:start="163:13" pos:end="163:46">

            <expr_stmt pos:start="163:13" pos:end="163:46"><expr pos:start="163:13" pos:end="163:45"><name pos:start="163:13" pos:end="163:26"><name pos:start="163:13" pos:end="163:17">avctx</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:26">pix_fmt</name></name> <operator pos:start="163:28" pos:end="163:28">=</operator> <name pos:start="163:30" pos:end="163:45">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="167:9" pos:end="169:23"><if pos:start="167:9" pos:end="169:23">if <condition pos:start="167:12" pos:end="167:63">(<expr pos:start="167:13" pos:end="167:62"><operator pos:start="167:13" pos:end="167:13">(</operator><name pos:start="167:14" pos:end="167:16">ret</name> <operator pos:start="167:18" pos:end="167:18">=</operator> <call pos:start="167:20" pos:end="167:57"><name pos:start="167:20" pos:end="167:39">ff_thread_get_buffer</name><argument_list pos:start="167:40" pos:end="167:57">(<argument pos:start="167:41" pos:end="167:45"><expr pos:start="167:41" pos:end="167:45"><name pos:start="167:41" pos:end="167:45">avctx</name></expr></argument>, <argument pos:start="167:48" pos:end="167:53"><expr pos:start="167:48" pos:end="167:53"><operator pos:start="167:48" pos:end="167:48">&amp;</operator><name pos:start="167:49" pos:end="167:53">frame</name></expr></argument>, <argument pos:start="167:56" pos:end="167:56"><expr pos:start="167:56" pos:end="167:56"><literal type="number" pos:start="167:56" pos:end="167:56">0</literal></expr></argument>)</argument_list></call><operator pos:start="167:58" pos:end="167:58">)</operator> <operator pos:start="167:60" pos:end="167:60">&lt;</operator> <literal type="number" pos:start="167:62" pos:end="167:62">0</literal></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:23"><block_content pos:start="169:13" pos:end="169:23">

            <return pos:start="169:13" pos:end="169:23">return <expr pos:start="169:20" pos:end="169:22"><name pos:start="169:20" pos:end="169:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="173:9" pos:end="173:28"><expr pos:start="173:9" pos:end="173:27"><name pos:start="173:9" pos:end="173:15"><name pos:start="173:9" pos:end="173:12">offs</name><index pos:start="173:13" pos:end="173:15">[<expr pos:start="173:14" pos:end="173:14"><literal type="number" pos:start="173:14" pos:end="173:14">0</literal></expr>]</index></name> <operator pos:start="173:17" pos:end="173:17">=</operator> <name pos:start="173:19" pos:end="173:27">offset_bv</name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:28"><expr pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:12">offs</name><index pos:start="175:13" pos:end="175:15">[<expr pos:start="175:14" pos:end="175:14"><literal type="number" pos:start="175:14" pos:end="175:14">1</literal></expr>]</index></name> <operator pos:start="175:17" pos:end="175:17">=</operator> <name pos:start="175:19" pos:end="175:27">offset_gu</name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:28"><expr pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:15"><name pos:start="177:9" pos:end="177:12">offs</name><index pos:start="177:13" pos:end="177:15">[<expr pos:start="177:14" pos:end="177:14"><literal type="number" pos:start="177:14" pos:end="177:14">2</literal></expr>]</index></name> <operator pos:start="177:17" pos:end="177:17">=</operator> <name pos:start="177:19" pos:end="177:27">offset_ry</name></expr>;</expr_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:50"><expr pos:start="181:9" pos:end="181:49"><name pos:start="181:9" pos:end="181:21"><name pos:start="181:9" pos:end="181:9">l</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:21">rgb_stride</name></name> <operator pos:start="181:23" pos:end="181:23">=</operator> <call pos:start="181:25" pos:end="181:49"><name pos:start="181:25" pos:end="181:31">FFALIGN</name><argument_list pos:start="181:32" pos:end="181:49">(<argument pos:start="181:33" pos:end="181:44"><expr pos:start="181:33" pos:end="181:44"><name pos:start="181:33" pos:end="181:44"><name pos:start="181:33" pos:end="181:37">avctx</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:44">width</name></name></expr></argument>, <argument pos:start="181:47" pos:end="181:48"><expr pos:start="181:47" pos:end="181:48"><literal type="number" pos:start="181:47" pos:end="181:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="185:67"><expr pos:start="183:9" pos:end="185:66"><call pos:start="183:9" pos:end="185:66"><name pos:start="183:9" pos:end="183:22">av_fast_malloc</name><argument_list pos:start="183:23" pos:end="185:66">(<argument pos:start="183:24" pos:end="183:37"><expr pos:start="183:24" pos:end="183:37"><operator pos:start="183:24" pos:end="183:24">&amp;</operator><name pos:start="183:25" pos:end="183:37"><name pos:start="183:25" pos:end="183:25">l</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:37">rgb_planes</name></name></expr></argument>, <argument pos:start="183:40" pos:end="183:63"><expr pos:start="183:40" pos:end="183:63"><operator pos:start="183:40" pos:end="183:40">&amp;</operator><name pos:start="183:41" pos:end="183:63"><name pos:start="183:41" pos:end="183:41">l</name><operator pos:start="183:42" pos:end="183:43">-&gt;</operator><name pos:start="183:44" pos:end="183:63">rgb_planes_allocated</name></name></expr></argument>,

                       <argument pos:start="185:24" pos:end="185:65"><expr pos:start="185:24" pos:end="185:65"><name pos:start="185:24" pos:end="185:36"><name pos:start="185:24" pos:end="185:24">l</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:36">rgb_stride</name></name> <operator pos:start="185:38" pos:end="185:38">*</operator> <name pos:start="185:40" pos:end="185:52"><name pos:start="185:40" pos:end="185:44">avctx</name><operator pos:start="185:45" pos:end="185:46">-&gt;</operator><name pos:start="185:47" pos:end="185:52">height</name></name> <operator pos:start="185:54" pos:end="185:54">*</operator> <name pos:start="185:56" pos:end="185:61">planes</name> <operator pos:start="185:63" pos:end="185:63">+</operator> <literal type="number" pos:start="185:65" pos:end="185:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="187:9" pos:end="193:9"><if pos:start="187:9" pos:end="193:9">if <condition pos:start="187:12" pos:end="187:27">(<expr pos:start="187:13" pos:end="187:26"><operator pos:start="187:13" pos:end="187:13">!</operator><name pos:start="187:14" pos:end="187:26"><name pos:start="187:14" pos:end="187:14">l</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:26">rgb_planes</name></name></expr>)</condition> <block pos:start="187:29" pos:end="193:9">{<block_content pos:start="189:13" pos:end="191:35">

            <expr_stmt pos:start="189:13" pos:end="189:78"><expr pos:start="189:13" pos:end="189:77"><call pos:start="189:13" pos:end="189:77"><name pos:start="189:13" pos:end="189:18">av_log</name><argument_list pos:start="189:19" pos:end="189:77">(<argument pos:start="189:20" pos:end="189:24"><expr pos:start="189:20" pos:end="189:24"><name pos:start="189:20" pos:end="189:24">avctx</name></expr></argument>, <argument pos:start="189:27" pos:end="189:38"><expr pos:start="189:27" pos:end="189:38"><name pos:start="189:27" pos:end="189:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:41" pos:end="189:76"><expr pos:start="189:41" pos:end="189:76"><literal type="string" pos:start="189:41" pos:end="189:76">"cannot allocate temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="191:13" pos:end="191:35">return <expr pos:start="191:20" pos:end="191:34"><call pos:start="191:20" pos:end="191:34"><name pos:start="191:20" pos:end="191:26">AVERROR</name><argument_list pos:start="191:27" pos:end="191:34">(<argument pos:start="191:28" pos:end="191:33"><expr pos:start="191:28" pos:end="191:33"><name pos:start="191:28" pos:end="191:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="195:9" pos:end="197:94">for <control pos:start="195:13" pos:end="195:36">(<init pos:start="195:14" pos:end="195:19"><expr pos:start="195:14" pos:end="195:18"><name pos:start="195:14" pos:end="195:14">i</name> <operator pos:start="195:16" pos:end="195:16">=</operator> <literal type="number" pos:start="195:18" pos:end="195:18">0</literal></expr>;</init> <condition pos:start="195:21" pos:end="195:31"><expr pos:start="195:21" pos:end="195:30"><name pos:start="195:21" pos:end="195:21">i</name> <operator pos:start="195:23" pos:end="195:23">&lt;</operator> <name pos:start="195:25" pos:end="195:30">planes</name></expr>;</condition> <incr pos:start="195:33" pos:end="195:35"><expr pos:start="195:33" pos:end="195:35"><name pos:start="195:33" pos:end="195:33">i</name><operator pos:start="195:34" pos:end="195:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="197:13" pos:end="197:94"><block_content pos:start="197:13" pos:end="197:94">

            <expr_stmt pos:start="197:13" pos:end="197:94"><expr pos:start="197:13" pos:end="197:93"><name pos:start="197:13" pos:end="197:19"><name pos:start="197:13" pos:end="197:16">srcs</name><index pos:start="197:17" pos:end="197:19">[<expr pos:start="197:18" pos:end="197:18"><name pos:start="197:18" pos:end="197:18">i</name></expr>]</index></name> <operator pos:start="197:21" pos:end="197:21">=</operator> <name pos:start="197:23" pos:end="197:35"><name pos:start="197:23" pos:end="197:23">l</name><operator pos:start="197:24" pos:end="197:25">-&gt;</operator><name pos:start="197:26" pos:end="197:35">rgb_planes</name></name> <operator pos:start="197:37" pos:end="197:37">+</operator> <operator pos:start="197:39" pos:end="197:39">(</operator><name pos:start="197:40" pos:end="197:40">i</name> <operator pos:start="197:42" pos:end="197:42">+</operator> <literal type="number" pos:start="197:44" pos:end="197:44">1</literal><operator pos:start="197:45" pos:end="197:45">)</operator> <operator pos:start="197:47" pos:end="197:47">*</operator> <name pos:start="197:49" pos:end="197:61"><name pos:start="197:49" pos:end="197:49">l</name><operator pos:start="197:50" pos:end="197:51">-&gt;</operator><name pos:start="197:52" pos:end="197:61">rgb_stride</name></name> <operator pos:start="197:63" pos:end="197:63">*</operator> <name pos:start="197:65" pos:end="197:77"><name pos:start="197:65" pos:end="197:69">avctx</name><operator pos:start="197:70" pos:end="197:71">-&gt;</operator><name pos:start="197:72" pos:end="197:77">height</name></name> <operator pos:start="197:79" pos:end="197:79">-</operator> <name pos:start="197:81" pos:end="197:93"><name pos:start="197:81" pos:end="197:81">l</name><operator pos:start="197:82" pos:end="197:83">-&gt;</operator><name pos:start="197:84" pos:end="197:93">rgb_stride</name></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="199:9" pos:end="209:13">for <control pos:start="199:13" pos:end="199:36">(<init pos:start="199:14" pos:end="199:19"><expr pos:start="199:14" pos:end="199:18"><name pos:start="199:14" pos:end="199:14">i</name> <operator pos:start="199:16" pos:end="199:16">=</operator> <literal type="number" pos:start="199:18" pos:end="199:18">0</literal></expr>;</init> <condition pos:start="199:21" pos:end="199:31"><expr pos:start="199:21" pos:end="199:30"><name pos:start="199:21" pos:end="199:21">i</name> <operator pos:start="199:23" pos:end="199:23">&lt;</operator> <name pos:start="199:25" pos:end="199:30">planes</name></expr>;</condition> <incr pos:start="199:33" pos:end="199:35"><expr pos:start="199:33" pos:end="199:35"><name pos:start="199:33" pos:end="199:33">i</name><operator pos:start="199:34" pos:end="199:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="201:13" pos:end="209:13"><block_content pos:start="201:13" pos:end="209:13">

            <if_stmt pos:start="201:13" pos:end="209:13"><if pos:start="201:13" pos:end="209:13">if <condition pos:start="201:16" pos:end="201:36">(<expr pos:start="201:17" pos:end="201:35"><name pos:start="201:17" pos:end="201:24">buf_size</name> <operator pos:start="201:26" pos:end="201:27">&lt;=</operator> <name pos:start="201:29" pos:end="201:35"><name pos:start="201:29" pos:end="201:32">offs</name><index pos:start="201:33" pos:end="201:35">[<expr pos:start="201:34" pos:end="201:34"><name pos:start="201:34" pos:end="201:34">i</name></expr>]</index></name></expr>)</condition> <block pos:start="201:38" pos:end="209:13">{<block_content pos:start="203:17" pos:end="207:43">

                <expr_stmt pos:start="203:17" pos:end="205:51"><expr pos:start="203:17" pos:end="205:50"><call pos:start="203:17" pos:end="205:50"><name pos:start="203:17" pos:end="203:22">av_log</name><argument_list pos:start="203:23" pos:end="205:50">(<argument pos:start="203:24" pos:end="203:28"><expr pos:start="203:24" pos:end="203:28"><name pos:start="203:24" pos:end="203:28">avctx</name></expr></argument>, <argument pos:start="203:31" pos:end="203:42"><expr pos:start="203:31" pos:end="203:42"><name pos:start="203:31" pos:end="203:42">AV_LOG_ERROR</name></expr></argument>,

                        <argument pos:start="205:25" pos:end="205:49"><expr pos:start="205:25" pos:end="205:49"><literal type="string" pos:start="205:25" pos:end="205:49">"Invalid frame offsets\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="207:17" pos:end="207:43">return <expr pos:start="207:24" pos:end="207:42"><name pos:start="207:24" pos:end="207:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <for pos:start="213:9" pos:end="221:55">for <control pos:start="213:13" pos:end="213:36">(<init pos:start="213:14" pos:end="213:19"><expr pos:start="213:14" pos:end="213:18"><name pos:start="213:14" pos:end="213:14">i</name> <operator pos:start="213:16" pos:end="213:16">=</operator> <literal type="number" pos:start="213:18" pos:end="213:18">0</literal></expr>;</init> <condition pos:start="213:21" pos:end="213:31"><expr pos:start="213:21" pos:end="213:30"><name pos:start="213:21" pos:end="213:21">i</name> <operator pos:start="213:23" pos:end="213:23">&lt;</operator> <name pos:start="213:25" pos:end="213:30">planes</name></expr>;</condition> <incr pos:start="213:33" pos:end="213:35"><expr pos:start="213:33" pos:end="213:35"><name pos:start="213:33" pos:end="213:33">i</name><operator pos:start="213:34" pos:end="213:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="215:13" pos:end="221:55"><block_content pos:start="215:13" pos:end="221:55">

            <expr_stmt pos:start="215:13" pos:end="221:55"><expr pos:start="215:13" pos:end="221:54"><call pos:start="215:13" pos:end="221:54"><name pos:start="215:13" pos:end="215:34">lag_decode_arith_plane</name><argument_list pos:start="215:35" pos:end="221:54">(<argument pos:start="215:36" pos:end="215:36"><expr pos:start="215:36" pos:end="215:36"><name pos:start="215:36" pos:end="215:36">l</name></expr></argument>, <argument pos:start="215:39" pos:end="215:45"><expr pos:start="215:39" pos:end="215:45"><name pos:start="215:39" pos:end="215:45"><name pos:start="215:39" pos:end="215:42">srcs</name><index pos:start="215:43" pos:end="215:45">[<expr pos:start="215:44" pos:end="215:44"><name pos:start="215:44" pos:end="215:44">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="217:36" pos:end="217:47"><expr pos:start="217:36" pos:end="217:47"><name pos:start="217:36" pos:end="217:47"><name pos:start="217:36" pos:end="217:40">avctx</name><operator pos:start="217:41" pos:end="217:42">-&gt;</operator><name pos:start="217:43" pos:end="217:47">width</name></name></expr></argument>, <argument pos:start="217:50" pos:end="217:62"><expr pos:start="217:50" pos:end="217:62"><name pos:start="217:50" pos:end="217:62"><name pos:start="217:50" pos:end="217:54">avctx</name><operator pos:start="217:55" pos:end="217:56">-&gt;</operator><name pos:start="217:57" pos:end="217:62">height</name></name></expr></argument>,

                                   <argument pos:start="219:36" pos:end="219:49"><expr pos:start="219:36" pos:end="219:49"><operator pos:start="219:36" pos:end="219:36">-</operator><name pos:start="219:37" pos:end="219:49"><name pos:start="219:37" pos:end="219:37">l</name><operator pos:start="219:38" pos:end="219:39">-&gt;</operator><name pos:start="219:40" pos:end="219:49">rgb_stride</name></name></expr></argument>, <argument pos:start="219:52" pos:end="219:64"><expr pos:start="219:52" pos:end="219:64"><name pos:start="219:52" pos:end="219:54">buf</name> <operator pos:start="219:56" pos:end="219:56">+</operator> <name pos:start="219:58" pos:end="219:64"><name pos:start="219:58" pos:end="219:61">offs</name><index pos:start="219:62" pos:end="219:64">[<expr pos:start="219:63" pos:end="219:63"><name pos:start="219:63" pos:end="219:63">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="221:36" pos:end="221:53"><expr pos:start="221:36" pos:end="221:53"><name pos:start="221:36" pos:end="221:43">buf_size</name> <operator pos:start="221:45" pos:end="221:45">-</operator> <name pos:start="221:47" pos:end="221:53"><name pos:start="221:47" pos:end="221:50">offs</name><index pos:start="221:51" pos:end="221:53">[<expr pos:start="221:52" pos:end="221:52"><name pos:start="221:52" pos:end="221:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="223:9" pos:end="223:25"><expr pos:start="223:9" pos:end="223:24"><name pos:start="223:9" pos:end="223:11">dst</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <name pos:start="223:15" pos:end="223:24"><name pos:start="223:15" pos:end="223:15">p</name><operator pos:start="223:16" pos:end="223:17">-&gt;</operator><name pos:start="223:18" pos:end="223:21">data</name><index pos:start="223:22" pos:end="223:24">[<expr pos:start="223:23" pos:end="223:23"><literal type="number" pos:start="223:23" pos:end="223:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="225:9" pos:end="227:72">for <control pos:start="225:13" pos:end="225:36">(<init pos:start="225:14" pos:end="225:19"><expr pos:start="225:14" pos:end="225:18"><name pos:start="225:14" pos:end="225:14">i</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <literal type="number" pos:start="225:18" pos:end="225:18">0</literal></expr>;</init> <condition pos:start="225:21" pos:end="225:31"><expr pos:start="225:21" pos:end="225:30"><name pos:start="225:21" pos:end="225:21">i</name> <operator pos:start="225:23" pos:end="225:23">&lt;</operator> <name pos:start="225:25" pos:end="225:30">planes</name></expr>;</condition> <incr pos:start="225:33" pos:end="225:35"><expr pos:start="225:33" pos:end="225:35"><name pos:start="225:33" pos:end="225:33">i</name><operator pos:start="225:34" pos:end="225:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="227:13" pos:end="227:72"><block_content pos:start="227:13" pos:end="227:72">

            <expr_stmt pos:start="227:13" pos:end="227:72"><expr pos:start="227:13" pos:end="227:71"><name pos:start="227:13" pos:end="227:19"><name pos:start="227:13" pos:end="227:16">srcs</name><index pos:start="227:17" pos:end="227:19">[<expr pos:start="227:18" pos:end="227:18"><name pos:start="227:18" pos:end="227:18">i</name></expr>]</index></name> <operator pos:start="227:21" pos:end="227:21">=</operator> <name pos:start="227:23" pos:end="227:35"><name pos:start="227:23" pos:end="227:23">l</name><operator pos:start="227:24" pos:end="227:25">-&gt;</operator><name pos:start="227:26" pos:end="227:35">rgb_planes</name></name> <operator pos:start="227:37" pos:end="227:37">+</operator> <name pos:start="227:39" pos:end="227:39">i</name> <operator pos:start="227:41" pos:end="227:41">*</operator> <name pos:start="227:43" pos:end="227:55"><name pos:start="227:43" pos:end="227:43">l</name><operator pos:start="227:44" pos:end="227:45">-&gt;</operator><name pos:start="227:46" pos:end="227:55">rgb_stride</name></name> <operator pos:start="227:57" pos:end="227:57">*</operator> <name pos:start="227:59" pos:end="227:71"><name pos:start="227:59" pos:end="227:63">avctx</name><operator pos:start="227:64" pos:end="227:65">-&gt;</operator><name pos:start="227:66" pos:end="227:71">height</name></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="229:9" pos:end="269:9">for <control pos:start="229:13" pos:end="229:43">(<init pos:start="229:14" pos:end="229:19"><expr pos:start="229:14" pos:end="229:18"><name pos:start="229:14" pos:end="229:14">j</name> <operator pos:start="229:16" pos:end="229:16">=</operator> <literal type="number" pos:start="229:18" pos:end="229:18">0</literal></expr>;</init> <condition pos:start="229:21" pos:end="229:38"><expr pos:start="229:21" pos:end="229:37"><name pos:start="229:21" pos:end="229:21">j</name> <operator pos:start="229:23" pos:end="229:23">&lt;</operator> <name pos:start="229:25" pos:end="229:37"><name pos:start="229:25" pos:end="229:29">avctx</name><operator pos:start="229:30" pos:end="229:31">-&gt;</operator><name pos:start="229:32" pos:end="229:37">height</name></name></expr>;</condition> <incr pos:start="229:40" pos:end="229:42"><expr pos:start="229:40" pos:end="229:42"><name pos:start="229:40" pos:end="229:40">j</name><operator pos:start="229:41" pos:end="229:42">++</operator></expr></incr>)</control> <block pos:start="229:45" pos:end="269:9">{<block_content pos:start="231:13" pos:end="267:41">

            <for pos:start="231:13" pos:end="261:13">for <control pos:start="231:17" pos:end="231:46">(<init pos:start="231:18" pos:end="231:23"><expr pos:start="231:18" pos:end="231:22"><name pos:start="231:18" pos:end="231:18">i</name> <operator pos:start="231:20" pos:end="231:20">=</operator> <literal type="number" pos:start="231:22" pos:end="231:22">0</literal></expr>;</init> <condition pos:start="231:25" pos:end="231:41"><expr pos:start="231:25" pos:end="231:40"><name pos:start="231:25" pos:end="231:25">i</name> <operator pos:start="231:27" pos:end="231:27">&lt;</operator> <name pos:start="231:29" pos:end="231:40"><name pos:start="231:29" pos:end="231:33">avctx</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:40">width</name></name></expr>;</condition> <incr pos:start="231:43" pos:end="231:45"><expr pos:start="231:43" pos:end="231:45"><name pos:start="231:43" pos:end="231:43">i</name><operator pos:start="231:44" pos:end="231:45">++</operator></expr></incr>)</control> <block pos:start="231:48" pos:end="261:13">{<block_content pos:start="233:17" pos:end="259:17">

                <decl_stmt pos:start="233:17" pos:end="233:35"><decl pos:start="233:17" pos:end="233:25"><type pos:start="233:17" pos:end="233:23"><name pos:start="233:17" pos:end="233:23">uint8_t</name></type> <name pos:start="233:25" pos:end="233:25">r</name></decl>, <decl pos:start="233:28" pos:end="233:28"><type ref="prev" pos:start="233:17" pos:end="233:23"/><name pos:start="233:28" pos:end="233:28">g</name></decl>, <decl pos:start="233:31" pos:end="233:31"><type ref="prev" pos:start="233:17" pos:end="233:23"/><name pos:start="233:31" pos:end="233:31">b</name></decl>, <decl pos:start="233:34" pos:end="233:34"><type ref="prev" pos:start="233:17" pos:end="233:23"/><name pos:start="233:34" pos:end="233:34">a</name></decl>;</decl_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:31"><expr pos:start="235:17" pos:end="235:30"><name pos:start="235:17" pos:end="235:17">r</name> <operator pos:start="235:19" pos:end="235:19">=</operator> <name pos:start="235:21" pos:end="235:30"><name pos:start="235:21" pos:end="235:24">srcs</name><index pos:start="235:25" pos:end="235:27">[<expr pos:start="235:26" pos:end="235:26"><literal type="number" pos:start="235:26" pos:end="235:26">0</literal></expr>]</index><index pos:start="235:28" pos:end="235:30">[<expr pos:start="235:29" pos:end="235:29"><name pos:start="235:29" pos:end="235:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="237:17" pos:end="237:31"><expr pos:start="237:17" pos:end="237:30"><name pos:start="237:17" pos:end="237:17">g</name> <operator pos:start="237:19" pos:end="237:19">=</operator> <name pos:start="237:21" pos:end="237:30"><name pos:start="237:21" pos:end="237:24">srcs</name><index pos:start="237:25" pos:end="237:27">[<expr pos:start="237:26" pos:end="237:26"><literal type="number" pos:start="237:26" pos:end="237:26">1</literal></expr>]</index><index pos:start="237:28" pos:end="237:30">[<expr pos:start="237:29" pos:end="237:29"><name pos:start="237:29" pos:end="237:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:31"><expr pos:start="239:17" pos:end="239:30"><name pos:start="239:17" pos:end="239:17">b</name> <operator pos:start="239:19" pos:end="239:19">=</operator> <name pos:start="239:21" pos:end="239:30"><name pos:start="239:21" pos:end="239:24">srcs</name><index pos:start="239:25" pos:end="239:27">[<expr pos:start="239:26" pos:end="239:26"><literal type="number" pos:start="239:26" pos:end="239:26">2</literal></expr>]</index><index pos:start="239:28" pos:end="239:30">[<expr pos:start="239:29" pos:end="239:29"><name pos:start="239:29" pos:end="239:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:23"><expr pos:start="241:17" pos:end="241:22"><name pos:start="241:17" pos:end="241:17">r</name> <operator pos:start="241:19" pos:end="241:20">+=</operator> <name pos:start="241:22" pos:end="241:22">g</name></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:23"><expr pos:start="243:17" pos:end="243:22"><name pos:start="243:17" pos:end="243:17">b</name> <operator pos:start="243:19" pos:end="243:20">+=</operator> <name pos:start="243:22" pos:end="243:22">g</name></expr>;</expr_stmt>

                <if_stmt pos:start="245:17" pos:end="259:17"><if pos:start="245:17" pos:end="251:17">if <condition pos:start="245:20" pos:end="245:50">(<expr pos:start="245:21" pos:end="245:49"><name pos:start="245:21" pos:end="245:29">frametype</name> <operator pos:start="245:31" pos:end="245:32">==</operator> <name pos:start="245:34" pos:end="245:49">FRAME_ARITH_RGBA</name></expr>)</condition> <block pos:start="245:52" pos:end="251:17">{<block_content pos:start="247:21" pos:end="249:62">

                    <expr_stmt pos:start="247:21" pos:end="247:35"><expr pos:start="247:21" pos:end="247:34"><name pos:start="247:21" pos:end="247:21">a</name> <operator pos:start="247:23" pos:end="247:23">=</operator> <name pos:start="247:25" pos:end="247:34"><name pos:start="247:25" pos:end="247:28">srcs</name><index pos:start="247:29" pos:end="247:31">[<expr pos:start="247:30" pos:end="247:30"><literal type="number" pos:start="247:30" pos:end="247:30">3</literal></expr>]</index><index pos:start="247:32" pos:end="247:34">[<expr pos:start="247:33" pos:end="247:33"><name pos:start="247:33" pos:end="247:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="249:21" pos:end="249:62"><expr pos:start="249:21" pos:end="249:61"><call pos:start="249:21" pos:end="249:61"><name pos:start="249:21" pos:end="249:27">AV_WN32</name><argument_list pos:start="249:28" pos:end="249:61">(<argument pos:start="249:29" pos:end="249:39"><expr pos:start="249:29" pos:end="249:39"><name pos:start="249:29" pos:end="249:31">dst</name> <operator pos:start="249:33" pos:end="249:33">+</operator> <name pos:start="249:35" pos:end="249:35">i</name> <operator pos:start="249:37" pos:end="249:37">*</operator> <literal type="number" pos:start="249:39" pos:end="249:39">4</literal></expr></argument>, <argument pos:start="249:42" pos:end="249:60"><expr pos:start="249:42" pos:end="249:60"><call pos:start="249:42" pos:end="249:60"><name pos:start="249:42" pos:end="249:48">MKBETAG</name><argument_list pos:start="249:49" pos:end="249:60">(<argument pos:start="249:50" pos:end="249:50"><expr pos:start="249:50" pos:end="249:50"><name pos:start="249:50" pos:end="249:50">a</name></expr></argument>, <argument pos:start="249:53" pos:end="249:53"><expr pos:start="249:53" pos:end="249:53"><name pos:start="249:53" pos:end="249:53">r</name></expr></argument>, <argument pos:start="249:56" pos:end="249:56"><expr pos:start="249:56" pos:end="249:56"><name pos:start="249:56" pos:end="249:56">g</name></expr></argument>, <argument pos:start="249:59" pos:end="249:59"><expr pos:start="249:59" pos:end="249:59"><name pos:start="249:59" pos:end="249:59">b</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="251:19" pos:end="259:17">else <block pos:start="251:24" pos:end="259:17">{<block_content pos:start="253:21" pos:end="257:39">

                    <expr_stmt pos:start="253:21" pos:end="253:39"><expr pos:start="253:21" pos:end="253:38"><name pos:start="253:21" pos:end="253:34"><name pos:start="253:21" pos:end="253:23">dst</name><index pos:start="253:24" pos:end="253:34">[<expr pos:start="253:25" pos:end="253:33"><name pos:start="253:25" pos:end="253:25">i</name> <operator pos:start="253:27" pos:end="253:27">*</operator> <literal type="number" pos:start="253:29" pos:end="253:29">3</literal> <operator pos:start="253:31" pos:end="253:31">+</operator> <literal type="number" pos:start="253:33" pos:end="253:33">0</literal></expr>]</index></name> <operator pos:start="253:36" pos:end="253:36">=</operator> <name pos:start="253:38" pos:end="253:38">r</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="255:21" pos:end="255:39"><expr pos:start="255:21" pos:end="255:38"><name pos:start="255:21" pos:end="255:34"><name pos:start="255:21" pos:end="255:23">dst</name><index pos:start="255:24" pos:end="255:34">[<expr pos:start="255:25" pos:end="255:33"><name pos:start="255:25" pos:end="255:25">i</name> <operator pos:start="255:27" pos:end="255:27">*</operator> <literal type="number" pos:start="255:29" pos:end="255:29">3</literal> <operator pos:start="255:31" pos:end="255:31">+</operator> <literal type="number" pos:start="255:33" pos:end="255:33">1</literal></expr>]</index></name> <operator pos:start="255:36" pos:end="255:36">=</operator> <name pos:start="255:38" pos:end="255:38">g</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:39"><expr pos:start="257:21" pos:end="257:38"><name pos:start="257:21" pos:end="257:34"><name pos:start="257:21" pos:end="257:23">dst</name><index pos:start="257:24" pos:end="257:34">[<expr pos:start="257:25" pos:end="257:33"><name pos:start="257:25" pos:end="257:25">i</name> <operator pos:start="257:27" pos:end="257:27">*</operator> <literal type="number" pos:start="257:29" pos:end="257:29">3</literal> <operator pos:start="257:31" pos:end="257:31">+</operator> <literal type="number" pos:start="257:33" pos:end="257:33">2</literal></expr>]</index></name> <operator pos:start="257:36" pos:end="257:36">=</operator> <name pos:start="257:38" pos:end="257:38">b</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="263:13" pos:end="263:34"><expr pos:start="263:13" pos:end="263:33"><name pos:start="263:13" pos:end="263:15">dst</name> <operator pos:start="263:17" pos:end="263:18">+=</operator> <name pos:start="263:20" pos:end="263:33"><name pos:start="263:20" pos:end="263:20">p</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:30">linesize</name><index pos:start="263:31" pos:end="263:33">[<expr pos:start="263:32" pos:end="263:32"><literal type="number" pos:start="263:32" pos:end="263:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="265:13" pos:end="267:41">for <control pos:start="265:17" pos:end="265:40">(<init pos:start="265:18" pos:end="265:23"><expr pos:start="265:18" pos:end="265:22"><name pos:start="265:18" pos:end="265:18">i</name> <operator pos:start="265:20" pos:end="265:20">=</operator> <literal type="number" pos:start="265:22" pos:end="265:22">0</literal></expr>;</init> <condition pos:start="265:25" pos:end="265:35"><expr pos:start="265:25" pos:end="265:34"><name pos:start="265:25" pos:end="265:25">i</name> <operator pos:start="265:27" pos:end="265:27">&lt;</operator> <name pos:start="265:29" pos:end="265:34">planes</name></expr>;</condition> <incr pos:start="265:37" pos:end="265:39"><expr pos:start="265:37" pos:end="265:39"><name pos:start="265:37" pos:end="265:37">i</name><operator pos:start="265:38" pos:end="265:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="267:17" pos:end="267:41"><block_content pos:start="267:17" pos:end="267:41">

                <expr_stmt pos:start="267:17" pos:end="267:41"><expr pos:start="267:17" pos:end="267:40"><name pos:start="267:17" pos:end="267:23"><name pos:start="267:17" pos:end="267:20">srcs</name><index pos:start="267:21" pos:end="267:23">[<expr pos:start="267:22" pos:end="267:22"><name pos:start="267:22" pos:end="267:22">i</name></expr>]</index></name> <operator pos:start="267:25" pos:end="267:26">+=</operator> <name pos:start="267:28" pos:end="267:40"><name pos:start="267:28" pos:end="267:28">l</name><operator pos:start="267:29" pos:end="267:30">-&gt;</operator><name pos:start="267:31" pos:end="267:40">rgb_stride</name></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

        <break pos:start="271:9" pos:end="271:14">break;</break>

    <case pos:start="273:5" pos:end="273:26">case <expr pos:start="273:10" pos:end="273:25"><name pos:start="273:10" pos:end="273:25">FRAME_ARITH_YUY2</name></expr>:</case>

        <expr_stmt pos:start="275:9" pos:end="275:44"><expr pos:start="275:9" pos:end="275:43"><name pos:start="275:9" pos:end="275:22"><name pos:start="275:9" pos:end="275:13">avctx</name><operator pos:start="275:14" pos:end="275:15">-&gt;</operator><name pos:start="275:16" pos:end="275:22">pix_fmt</name></name> <operator pos:start="275:24" pos:end="275:24">=</operator> <name pos:start="275:26" pos:end="275:43">AV_PIX_FMT_YUV422P</name></expr>;</expr_stmt>



        <if_stmt pos:start="279:9" pos:end="281:23"><if pos:start="279:9" pos:end="281:23">if <condition pos:start="279:12" pos:end="279:63">(<expr pos:start="279:13" pos:end="279:62"><operator pos:start="279:13" pos:end="279:13">(</operator><name pos:start="279:14" pos:end="279:16">ret</name> <operator pos:start="279:18" pos:end="279:18">=</operator> <call pos:start="279:20" pos:end="279:57"><name pos:start="279:20" pos:end="279:39">ff_thread_get_buffer</name><argument_list pos:start="279:40" pos:end="279:57">(<argument pos:start="279:41" pos:end="279:45"><expr pos:start="279:41" pos:end="279:45"><name pos:start="279:41" pos:end="279:45">avctx</name></expr></argument>, <argument pos:start="279:48" pos:end="279:53"><expr pos:start="279:48" pos:end="279:53"><operator pos:start="279:48" pos:end="279:48">&amp;</operator><name pos:start="279:49" pos:end="279:53">frame</name></expr></argument>, <argument pos:start="279:56" pos:end="279:56"><expr pos:start="279:56" pos:end="279:56"><literal type="number" pos:start="279:56" pos:end="279:56">0</literal></expr></argument>)</argument_list></call><operator pos:start="279:58" pos:end="279:58">)</operator> <operator pos:start="279:60" pos:end="279:60">&lt;</operator> <literal type="number" pos:start="279:62" pos:end="279:62">0</literal></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:23"><block_content pos:start="281:13" pos:end="281:23">

            <return pos:start="281:13" pos:end="281:23">return <expr pos:start="281:20" pos:end="281:22"><name pos:start="281:20" pos:end="281:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="285:9" pos:end="297:9"><if pos:start="285:9" pos:end="297:9">if <condition pos:start="285:12" pos:end="289:34">(<expr pos:start="285:13" pos:end="289:33"><name pos:start="285:13" pos:end="285:21">offset_ry</name> <operator pos:start="285:23" pos:end="285:24">&gt;=</operator> <name pos:start="285:26" pos:end="285:33">buf_size</name> <operator pos:start="285:35" pos:end="285:36">||</operator>

            <name pos:start="287:13" pos:end="287:21">offset_gu</name> <operator pos:start="287:23" pos:end="287:24">&gt;=</operator> <name pos:start="287:26" pos:end="287:33">buf_size</name> <operator pos:start="287:35" pos:end="287:36">||</operator>

            <name pos:start="289:13" pos:end="289:21">offset_bv</name> <operator pos:start="289:23" pos:end="289:24">&gt;=</operator> <name pos:start="289:26" pos:end="289:33">buf_size</name></expr>)</condition> <block pos:start="289:36" pos:end="297:9">{<block_content pos:start="291:13" pos:end="295:39">

            <expr_stmt pos:start="291:13" pos:end="293:46"><expr pos:start="291:13" pos:end="293:45"><call pos:start="291:13" pos:end="293:45"><name pos:start="291:13" pos:end="291:18">av_log</name><argument_list pos:start="291:19" pos:end="293:45">(<argument pos:start="291:20" pos:end="291:24"><expr pos:start="291:20" pos:end="291:24"><name pos:start="291:20" pos:end="291:24">avctx</name></expr></argument>, <argument pos:start="291:27" pos:end="291:38"><expr pos:start="291:27" pos:end="291:38"><name pos:start="291:27" pos:end="291:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="293:20" pos:end="293:44"><expr pos:start="293:20" pos:end="293:44"><literal type="string" pos:start="293:20" pos:end="293:44">"Invalid frame offsets\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="295:13" pos:end="295:39">return <expr pos:start="295:20" pos:end="295:38"><name pos:start="295:20" pos:end="295:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="301:9" pos:end="305:53"><expr pos:start="301:9" pos:end="305:52"><call pos:start="301:9" pos:end="305:52"><name pos:start="301:9" pos:end="301:30">lag_decode_arith_plane</name><argument_list pos:start="301:31" pos:end="305:52">(<argument pos:start="301:32" pos:end="301:32"><expr pos:start="301:32" pos:end="301:32"><name pos:start="301:32" pos:end="301:32">l</name></expr></argument>, <argument pos:start="301:35" pos:end="301:44"><expr pos:start="301:35" pos:end="301:44"><name pos:start="301:35" pos:end="301:44"><name pos:start="301:35" pos:end="301:35">p</name><operator pos:start="301:36" pos:end="301:37">-&gt;</operator><name pos:start="301:38" pos:end="301:41">data</name><index pos:start="301:42" pos:end="301:44">[<expr pos:start="301:43" pos:end="301:43"><literal type="number" pos:start="301:43" pos:end="301:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="301:47" pos:end="301:58"><expr pos:start="301:47" pos:end="301:58"><name pos:start="301:47" pos:end="301:58"><name pos:start="301:47" pos:end="301:51">avctx</name><operator pos:start="301:52" pos:end="301:53">-&gt;</operator><name pos:start="301:54" pos:end="301:58">width</name></name></expr></argument>, <argument pos:start="301:61" pos:end="301:73"><expr pos:start="301:61" pos:end="301:73"><name pos:start="301:61" pos:end="301:73"><name pos:start="301:61" pos:end="301:65">avctx</name><operator pos:start="301:66" pos:end="301:67">-&gt;</operator><name pos:start="301:68" pos:end="301:73">height</name></name></expr></argument>,

                               <argument pos:start="303:32" pos:end="303:45"><expr pos:start="303:32" pos:end="303:45"><name pos:start="303:32" pos:end="303:45"><name pos:start="303:32" pos:end="303:32">p</name><operator pos:start="303:33" pos:end="303:34">-&gt;</operator><name pos:start="303:35" pos:end="303:42">linesize</name><index pos:start="303:43" pos:end="303:45">[<expr pos:start="303:44" pos:end="303:44"><literal type="number" pos:start="303:44" pos:end="303:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="303:48" pos:end="303:62"><expr pos:start="303:48" pos:end="303:62"><name pos:start="303:48" pos:end="303:50">buf</name> <operator pos:start="303:52" pos:end="303:52">+</operator> <name pos:start="303:54" pos:end="303:62">offset_ry</name></expr></argument>,

                               <argument pos:start="305:32" pos:end="305:51"><expr pos:start="305:32" pos:end="305:51"><name pos:start="305:32" pos:end="305:39">buf_size</name> <operator pos:start="305:41" pos:end="305:41">-</operator> <name pos:start="305:43" pos:end="305:51">offset_ry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="311:70"><expr pos:start="307:9" pos:end="311:69"><call pos:start="307:9" pos:end="311:69"><name pos:start="307:9" pos:end="307:30">lag_decode_arith_plane</name><argument_list pos:start="307:31" pos:end="311:69">(<argument pos:start="307:32" pos:end="307:32"><expr pos:start="307:32" pos:end="307:32"><name pos:start="307:32" pos:end="307:32">l</name></expr></argument>, <argument pos:start="307:35" pos:end="307:44"><expr pos:start="307:35" pos:end="307:44"><name pos:start="307:35" pos:end="307:44"><name pos:start="307:35" pos:end="307:35">p</name><operator pos:start="307:36" pos:end="307:37">-&gt;</operator><name pos:start="307:38" pos:end="307:41">data</name><index pos:start="307:42" pos:end="307:44">[<expr pos:start="307:43" pos:end="307:43"><literal type="number" pos:start="307:43" pos:end="307:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="307:47" pos:end="307:62"><expr pos:start="307:47" pos:end="307:62"><name pos:start="307:47" pos:end="307:58"><name pos:start="307:47" pos:end="307:51">avctx</name><operator pos:start="307:52" pos:end="307:53">-&gt;</operator><name pos:start="307:54" pos:end="307:58">width</name></name> <operator pos:start="307:60" pos:end="307:60">/</operator> <literal type="number" pos:start="307:62" pos:end="307:62">2</literal></expr></argument>,

                               <argument pos:start="309:32" pos:end="309:44"><expr pos:start="309:32" pos:end="309:44"><name pos:start="309:32" pos:end="309:44"><name pos:start="309:32" pos:end="309:36">avctx</name><operator pos:start="309:37" pos:end="309:38">-&gt;</operator><name pos:start="309:39" pos:end="309:44">height</name></name></expr></argument>, <argument pos:start="309:47" pos:end="309:60"><expr pos:start="309:47" pos:end="309:60"><name pos:start="309:47" pos:end="309:60"><name pos:start="309:47" pos:end="309:47">p</name><operator pos:start="309:48" pos:end="309:49">-&gt;</operator><name pos:start="309:50" pos:end="309:57">linesize</name><index pos:start="309:58" pos:end="309:60">[<expr pos:start="309:59" pos:end="309:59"><literal type="number" pos:start="309:59" pos:end="309:59">1</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="311:32" pos:end="311:46"><expr pos:start="311:32" pos:end="311:46"><name pos:start="311:32" pos:end="311:34">buf</name> <operator pos:start="311:36" pos:end="311:36">+</operator> <name pos:start="311:38" pos:end="311:46">offset_gu</name></expr></argument>, <argument pos:start="311:49" pos:end="311:68"><expr pos:start="311:49" pos:end="311:68"><name pos:start="311:49" pos:end="311:56">buf_size</name> <operator pos:start="311:58" pos:end="311:58">-</operator> <name pos:start="311:60" pos:end="311:68">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="317:70"><expr pos:start="313:9" pos:end="317:69"><call pos:start="313:9" pos:end="317:69"><name pos:start="313:9" pos:end="313:30">lag_decode_arith_plane</name><argument_list pos:start="313:31" pos:end="317:69">(<argument pos:start="313:32" pos:end="313:32"><expr pos:start="313:32" pos:end="313:32"><name pos:start="313:32" pos:end="313:32">l</name></expr></argument>, <argument pos:start="313:35" pos:end="313:44"><expr pos:start="313:35" pos:end="313:44"><name pos:start="313:35" pos:end="313:44"><name pos:start="313:35" pos:end="313:35">p</name><operator pos:start="313:36" pos:end="313:37">-&gt;</operator><name pos:start="313:38" pos:end="313:41">data</name><index pos:start="313:42" pos:end="313:44">[<expr pos:start="313:43" pos:end="313:43"><literal type="number" pos:start="313:43" pos:end="313:43">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="313:47" pos:end="313:62"><expr pos:start="313:47" pos:end="313:62"><name pos:start="313:47" pos:end="313:58"><name pos:start="313:47" pos:end="313:51">avctx</name><operator pos:start="313:52" pos:end="313:53">-&gt;</operator><name pos:start="313:54" pos:end="313:58">width</name></name> <operator pos:start="313:60" pos:end="313:60">/</operator> <literal type="number" pos:start="313:62" pos:end="313:62">2</literal></expr></argument>,

                               <argument pos:start="315:32" pos:end="315:44"><expr pos:start="315:32" pos:end="315:44"><name pos:start="315:32" pos:end="315:44"><name pos:start="315:32" pos:end="315:36">avctx</name><operator pos:start="315:37" pos:end="315:38">-&gt;</operator><name pos:start="315:39" pos:end="315:44">height</name></name></expr></argument>, <argument pos:start="315:47" pos:end="315:60"><expr pos:start="315:47" pos:end="315:60"><name pos:start="315:47" pos:end="315:60"><name pos:start="315:47" pos:end="315:47">p</name><operator pos:start="315:48" pos:end="315:49">-&gt;</operator><name pos:start="315:50" pos:end="315:57">linesize</name><index pos:start="315:58" pos:end="315:60">[<expr pos:start="315:59" pos:end="315:59"><literal type="number" pos:start="315:59" pos:end="315:59">2</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="317:32" pos:end="317:46"><expr pos:start="317:32" pos:end="317:46"><name pos:start="317:32" pos:end="317:34">buf</name> <operator pos:start="317:36" pos:end="317:36">+</operator> <name pos:start="317:38" pos:end="317:46">offset_bv</name></expr></argument>, <argument pos:start="317:49" pos:end="317:68"><expr pos:start="317:49" pos:end="317:68"><name pos:start="317:49" pos:end="317:56">buf_size</name> <operator pos:start="317:58" pos:end="317:58">-</operator> <name pos:start="317:60" pos:end="317:68">offset_bv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="319:9" pos:end="319:14">break;</break>

    <case pos:start="321:5" pos:end="321:26">case <expr pos:start="321:10" pos:end="321:25"><name pos:start="321:10" pos:end="321:25">FRAME_ARITH_YV12</name></expr>:</case>

        <expr_stmt pos:start="323:9" pos:end="323:44"><expr pos:start="323:9" pos:end="323:43"><name pos:start="323:9" pos:end="323:22"><name pos:start="323:9" pos:end="323:13">avctx</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:22">pix_fmt</name></name> <operator pos:start="323:24" pos:end="323:24">=</operator> <name pos:start="323:26" pos:end="323:43">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>



        <if_stmt pos:start="327:9" pos:end="329:23"><if pos:start="327:9" pos:end="329:23">if <condition pos:start="327:12" pos:end="327:63">(<expr pos:start="327:13" pos:end="327:62"><operator pos:start="327:13" pos:end="327:13">(</operator><name pos:start="327:14" pos:end="327:16">ret</name> <operator pos:start="327:18" pos:end="327:18">=</operator> <call pos:start="327:20" pos:end="327:57"><name pos:start="327:20" pos:end="327:39">ff_thread_get_buffer</name><argument_list pos:start="327:40" pos:end="327:57">(<argument pos:start="327:41" pos:end="327:45"><expr pos:start="327:41" pos:end="327:45"><name pos:start="327:41" pos:end="327:45">avctx</name></expr></argument>, <argument pos:start="327:48" pos:end="327:53"><expr pos:start="327:48" pos:end="327:53"><operator pos:start="327:48" pos:end="327:48">&amp;</operator><name pos:start="327:49" pos:end="327:53">frame</name></expr></argument>, <argument pos:start="327:56" pos:end="327:56"><expr pos:start="327:56" pos:end="327:56"><literal type="number" pos:start="327:56" pos:end="327:56">0</literal></expr></argument>)</argument_list></call><operator pos:start="327:58" pos:end="327:58">)</operator> <operator pos:start="327:60" pos:end="327:60">&lt;</operator> <literal type="number" pos:start="327:62" pos:end="327:62">0</literal></expr>)</condition><block type="pseudo" pos:start="329:13" pos:end="329:23"><block_content pos:start="329:13" pos:end="329:23">

            <return pos:start="329:13" pos:end="329:23">return <expr pos:start="329:20" pos:end="329:22"><name pos:start="329:20" pos:end="329:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="331:9" pos:end="335:9"><if pos:start="331:9" pos:end="335:9">if <condition pos:start="331:12" pos:end="331:84">(<expr pos:start="331:13" pos:end="331:83"><name pos:start="331:13" pos:end="331:20">buf_size</name> <operator pos:start="331:22" pos:end="331:23">&lt;=</operator> <name pos:start="331:25" pos:end="331:33">offset_ry</name> <operator pos:start="331:35" pos:end="331:36">||</operator> <name pos:start="331:38" pos:end="331:45">buf_size</name> <operator pos:start="331:47" pos:end="331:48">&lt;=</operator> <name pos:start="331:50" pos:end="331:58">offset_gu</name> <operator pos:start="331:60" pos:end="331:61">||</operator> <name pos:start="331:63" pos:end="331:70">buf_size</name> <operator pos:start="331:72" pos:end="331:73">&lt;=</operator> <name pos:start="331:75" pos:end="331:83">offset_bv</name></expr>)</condition> <block pos:start="331:86" pos:end="335:9">{<block_content pos:start="333:13" pos:end="333:39">

            <return pos:start="333:13" pos:end="333:39">return <expr pos:start="333:20" pos:end="333:38"><name pos:start="333:20" pos:end="333:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="339:9" pos:end="351:9"><if pos:start="339:9" pos:end="351:9">if <condition pos:start="339:12" pos:end="343:34">(<expr pos:start="339:13" pos:end="343:33"><name pos:start="339:13" pos:end="339:21">offset_ry</name> <operator pos:start="339:23" pos:end="339:24">&gt;=</operator> <name pos:start="339:26" pos:end="339:33">buf_size</name> <operator pos:start="339:35" pos:end="339:36">||</operator>

            <name pos:start="341:13" pos:end="341:21">offset_gu</name> <operator pos:start="341:23" pos:end="341:24">&gt;=</operator> <name pos:start="341:26" pos:end="341:33">buf_size</name> <operator pos:start="341:35" pos:end="341:36">||</operator>

            <name pos:start="343:13" pos:end="343:21">offset_bv</name> <operator pos:start="343:23" pos:end="343:24">&gt;=</operator> <name pos:start="343:26" pos:end="343:33">buf_size</name></expr>)</condition> <block pos:start="343:36" pos:end="351:9">{<block_content pos:start="345:13" pos:end="349:39">

            <expr_stmt pos:start="345:13" pos:end="347:46"><expr pos:start="345:13" pos:end="347:45"><call pos:start="345:13" pos:end="347:45"><name pos:start="345:13" pos:end="345:18">av_log</name><argument_list pos:start="345:19" pos:end="347:45">(<argument pos:start="345:20" pos:end="345:24"><expr pos:start="345:20" pos:end="345:24"><name pos:start="345:20" pos:end="345:24">avctx</name></expr></argument>, <argument pos:start="345:27" pos:end="345:38"><expr pos:start="345:27" pos:end="345:38"><name pos:start="345:27" pos:end="345:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="347:20" pos:end="347:44"><expr pos:start="347:20" pos:end="347:44"><literal type="string" pos:start="347:20" pos:end="347:44">"Invalid frame offsets\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="349:13" pos:end="349:39">return <expr pos:start="349:20" pos:end="349:38"><name pos:start="349:20" pos:end="349:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="355:9" pos:end="359:53"><expr pos:start="355:9" pos:end="359:52"><call pos:start="355:9" pos:end="359:52"><name pos:start="355:9" pos:end="355:30">lag_decode_arith_plane</name><argument_list pos:start="355:31" pos:end="359:52">(<argument pos:start="355:32" pos:end="355:32"><expr pos:start="355:32" pos:end="355:32"><name pos:start="355:32" pos:end="355:32">l</name></expr></argument>, <argument pos:start="355:35" pos:end="355:44"><expr pos:start="355:35" pos:end="355:44"><name pos:start="355:35" pos:end="355:44"><name pos:start="355:35" pos:end="355:35">p</name><operator pos:start="355:36" pos:end="355:37">-&gt;</operator><name pos:start="355:38" pos:end="355:41">data</name><index pos:start="355:42" pos:end="355:44">[<expr pos:start="355:43" pos:end="355:43"><literal type="number" pos:start="355:43" pos:end="355:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="355:47" pos:end="355:58"><expr pos:start="355:47" pos:end="355:58"><name pos:start="355:47" pos:end="355:58"><name pos:start="355:47" pos:end="355:51">avctx</name><operator pos:start="355:52" pos:end="355:53">-&gt;</operator><name pos:start="355:54" pos:end="355:58">width</name></name></expr></argument>, <argument pos:start="355:61" pos:end="355:73"><expr pos:start="355:61" pos:end="355:73"><name pos:start="355:61" pos:end="355:73"><name pos:start="355:61" pos:end="355:65">avctx</name><operator pos:start="355:66" pos:end="355:67">-&gt;</operator><name pos:start="355:68" pos:end="355:73">height</name></name></expr></argument>,

                               <argument pos:start="357:32" pos:end="357:45"><expr pos:start="357:32" pos:end="357:45"><name pos:start="357:32" pos:end="357:45"><name pos:start="357:32" pos:end="357:32">p</name><operator pos:start="357:33" pos:end="357:34">-&gt;</operator><name pos:start="357:35" pos:end="357:42">linesize</name><index pos:start="357:43" pos:end="357:45">[<expr pos:start="357:44" pos:end="357:44"><literal type="number" pos:start="357:44" pos:end="357:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="357:48" pos:end="357:62"><expr pos:start="357:48" pos:end="357:62"><name pos:start="357:48" pos:end="357:50">buf</name> <operator pos:start="357:52" pos:end="357:52">+</operator> <name pos:start="357:54" pos:end="357:62">offset_ry</name></expr></argument>,

                               <argument pos:start="359:32" pos:end="359:51"><expr pos:start="359:32" pos:end="359:51"><name pos:start="359:32" pos:end="359:39">buf_size</name> <operator pos:start="359:41" pos:end="359:41">-</operator> <name pos:start="359:43" pos:end="359:51">offset_ry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="365:70"><expr pos:start="361:9" pos:end="365:69"><call pos:start="361:9" pos:end="365:69"><name pos:start="361:9" pos:end="361:30">lag_decode_arith_plane</name><argument_list pos:start="361:31" pos:end="365:69">(<argument pos:start="361:32" pos:end="361:32"><expr pos:start="361:32" pos:end="361:32"><name pos:start="361:32" pos:end="361:32">l</name></expr></argument>, <argument pos:start="361:35" pos:end="361:44"><expr pos:start="361:35" pos:end="361:44"><name pos:start="361:35" pos:end="361:44"><name pos:start="361:35" pos:end="361:35">p</name><operator pos:start="361:36" pos:end="361:37">-&gt;</operator><name pos:start="361:38" pos:end="361:41">data</name><index pos:start="361:42" pos:end="361:44">[<expr pos:start="361:43" pos:end="361:43"><literal type="number" pos:start="361:43" pos:end="361:43">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="361:47" pos:end="361:62"><expr pos:start="361:47" pos:end="361:62"><name pos:start="361:47" pos:end="361:58"><name pos:start="361:47" pos:end="361:51">avctx</name><operator pos:start="361:52" pos:end="361:53">-&gt;</operator><name pos:start="361:54" pos:end="361:58">width</name></name> <operator pos:start="361:60" pos:end="361:60">/</operator> <literal type="number" pos:start="361:62" pos:end="361:62">2</literal></expr></argument>,

                               <argument pos:start="363:32" pos:end="363:48"><expr pos:start="363:32" pos:end="363:48"><name pos:start="363:32" pos:end="363:44"><name pos:start="363:32" pos:end="363:36">avctx</name><operator pos:start="363:37" pos:end="363:38">-&gt;</operator><name pos:start="363:39" pos:end="363:44">height</name></name> <operator pos:start="363:46" pos:end="363:46">/</operator> <literal type="number" pos:start="363:48" pos:end="363:48">2</literal></expr></argument>, <argument pos:start="363:51" pos:end="363:64"><expr pos:start="363:51" pos:end="363:64"><name pos:start="363:51" pos:end="363:64"><name pos:start="363:51" pos:end="363:51">p</name><operator pos:start="363:52" pos:end="363:53">-&gt;</operator><name pos:start="363:54" pos:end="363:61">linesize</name><index pos:start="363:62" pos:end="363:64">[<expr pos:start="363:63" pos:end="363:63"><literal type="number" pos:start="363:63" pos:end="363:63">2</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="365:32" pos:end="365:46"><expr pos:start="365:32" pos:end="365:46"><name pos:start="365:32" pos:end="365:34">buf</name> <operator pos:start="365:36" pos:end="365:36">+</operator> <name pos:start="365:38" pos:end="365:46">offset_gu</name></expr></argument>, <argument pos:start="365:49" pos:end="365:68"><expr pos:start="365:49" pos:end="365:68"><name pos:start="365:49" pos:end="365:56">buf_size</name> <operator pos:start="365:58" pos:end="365:58">-</operator> <name pos:start="365:60" pos:end="365:68">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="371:70"><expr pos:start="367:9" pos:end="371:69"><call pos:start="367:9" pos:end="371:69"><name pos:start="367:9" pos:end="367:30">lag_decode_arith_plane</name><argument_list pos:start="367:31" pos:end="371:69">(<argument pos:start="367:32" pos:end="367:32"><expr pos:start="367:32" pos:end="367:32"><name pos:start="367:32" pos:end="367:32">l</name></expr></argument>, <argument pos:start="367:35" pos:end="367:44"><expr pos:start="367:35" pos:end="367:44"><name pos:start="367:35" pos:end="367:44"><name pos:start="367:35" pos:end="367:35">p</name><operator pos:start="367:36" pos:end="367:37">-&gt;</operator><name pos:start="367:38" pos:end="367:41">data</name><index pos:start="367:42" pos:end="367:44">[<expr pos:start="367:43" pos:end="367:43"><literal type="number" pos:start="367:43" pos:end="367:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="367:47" pos:end="367:62"><expr pos:start="367:47" pos:end="367:62"><name pos:start="367:47" pos:end="367:58"><name pos:start="367:47" pos:end="367:51">avctx</name><operator pos:start="367:52" pos:end="367:53">-&gt;</operator><name pos:start="367:54" pos:end="367:58">width</name></name> <operator pos:start="367:60" pos:end="367:60">/</operator> <literal type="number" pos:start="367:62" pos:end="367:62">2</literal></expr></argument>,

                               <argument pos:start="369:32" pos:end="369:48"><expr pos:start="369:32" pos:end="369:48"><name pos:start="369:32" pos:end="369:44"><name pos:start="369:32" pos:end="369:36">avctx</name><operator pos:start="369:37" pos:end="369:38">-&gt;</operator><name pos:start="369:39" pos:end="369:44">height</name></name> <operator pos:start="369:46" pos:end="369:46">/</operator> <literal type="number" pos:start="369:48" pos:end="369:48">2</literal></expr></argument>, <argument pos:start="369:51" pos:end="369:64"><expr pos:start="369:51" pos:end="369:64"><name pos:start="369:51" pos:end="369:64"><name pos:start="369:51" pos:end="369:51">p</name><operator pos:start="369:52" pos:end="369:53">-&gt;</operator><name pos:start="369:54" pos:end="369:61">linesize</name><index pos:start="369:62" pos:end="369:64">[<expr pos:start="369:63" pos:end="369:63"><literal type="number" pos:start="369:63" pos:end="369:63">1</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="371:32" pos:end="371:46"><expr pos:start="371:32" pos:end="371:46"><name pos:start="371:32" pos:end="371:34">buf</name> <operator pos:start="371:36" pos:end="371:36">+</operator> <name pos:start="371:38" pos:end="371:46">offset_bv</name></expr></argument>, <argument pos:start="371:49" pos:end="371:68"><expr pos:start="371:49" pos:end="371:68"><name pos:start="371:49" pos:end="371:56">buf_size</name> <operator pos:start="371:58" pos:end="371:58">-</operator> <name pos:start="371:60" pos:end="371:68">offset_bv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="373:9" pos:end="373:14">break;</break>

    <default pos:start="375:5" pos:end="375:12">default:</default>

        <expr_stmt pos:start="377:9" pos:end="379:74"><expr pos:start="377:9" pos:end="379:73"><call pos:start="377:9" pos:end="379:73"><name pos:start="377:9" pos:end="377:14">av_log</name><argument_list pos:start="377:15" pos:end="379:73">(<argument pos:start="377:16" pos:end="377:20"><expr pos:start="377:16" pos:end="377:20"><name pos:start="377:16" pos:end="377:20">avctx</name></expr></argument>, <argument pos:start="377:23" pos:end="377:34"><expr pos:start="377:23" pos:end="377:34"><name pos:start="377:23" pos:end="377:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="379:16" pos:end="379:61"><expr pos:start="379:16" pos:end="379:61"><literal type="string" pos:start="379:16" pos:end="379:52">"Unsupported Lagarith frame type: %#"</literal><name pos:start="379:53" pos:end="379:57">PRIx8</name><literal type="string" pos:start="379:58" pos:end="379:61">"\n"</literal></expr></argument>, <argument pos:start="379:64" pos:end="379:72"><expr pos:start="379:64" pos:end="379:72"><name pos:start="379:64" pos:end="379:72">frametype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="381:9" pos:end="381:36">return <expr pos:start="381:16" pos:end="381:35"><name pos:start="381:16" pos:end="381:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="387:5" pos:end="387:19"><expr pos:start="387:5" pos:end="387:18"><operator pos:start="387:5" pos:end="387:5">*</operator><name pos:start="387:6" pos:end="387:14">got_frame</name> <operator pos:start="387:16" pos:end="387:16">=</operator> <literal type="number" pos:start="387:18" pos:end="387:18">1</literal></expr>;</expr_stmt>



    <return pos:start="391:5" pos:end="391:20">return <expr pos:start="391:12" pos:end="391:19"><name pos:start="391:12" pos:end="391:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
