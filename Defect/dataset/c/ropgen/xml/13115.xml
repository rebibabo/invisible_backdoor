<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13115.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">qemu_rbd_open</name><parameter_list pos:start="1:25" pos:end="1:79">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:67"><decl pos:start="1:48" pos:end="1:67"><type pos:start="1:48" pos:end="1:67"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:67">filename</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:78"><decl pos:start="1:70" pos:end="1:78"><type pos:start="1:70" pos:end="1:78"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:78">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="177:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVRBDState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:37"><name pos:start="7:10" pos:end="7:13">pool</name><index pos:start="7:14" pos:end="7:37">[<expr pos:start="7:15" pos:end="7:36"><name pos:start="7:15" pos:end="7:36">RBD_MAX_POOL_NAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:41"><name pos:start="9:10" pos:end="9:17">snap_buf</name><index pos:start="9:18" pos:end="9:41">[<expr pos:start="9:19" pos:end="9:40"><name pos:start="9:19" pos:end="9:40">RBD_MAX_SNAP_NAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:32"><name pos:start="11:10" pos:end="11:13">conf</name><index pos:start="11:14" pos:end="11:32">[<expr pos:start="11:15" pos:end="11:31"><name pos:start="11:15" pos:end="11:31">RBD_MAX_CONF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:42"><name pos:start="13:10" pos:end="13:23">clientname_buf</name><index pos:start="13:24" pos:end="13:42">[<expr pos:start="13:25" pos:end="13:41"><name pos:start="13:25" pos:end="13:41">RBD_MAX_CONF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:20">clientname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="27:51">(<expr pos:start="21:9" pos:end="27:50"><call pos:start="21:9" pos:end="27:46"><name pos:start="21:9" pos:end="21:26">qemu_rbd_parsename</name><argument_list pos:start="21:27" pos:end="27:46">(<argument pos:start="21:28" pos:end="21:35"><expr pos:start="21:28" pos:end="21:35"><name pos:start="21:28" pos:end="21:35">filename</name></expr></argument>, <argument pos:start="21:38" pos:end="21:41"><expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">pool</name></expr></argument>, <argument pos:start="21:44" pos:end="21:55"><expr pos:start="21:44" pos:end="21:55"><sizeof pos:start="21:44" pos:end="21:55">sizeof<argument_list pos:start="21:50" pos:end="21:55">(<argument pos:start="21:51" pos:end="21:54"><expr pos:start="21:51" pos:end="21:54"><name pos:start="21:51" pos:end="21:54">pool</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="23:28" pos:end="23:35"><expr pos:start="23:28" pos:end="23:35"><name pos:start="23:28" pos:end="23:35">snap_buf</name></expr></argument>, <argument pos:start="23:38" pos:end="23:53"><expr pos:start="23:38" pos:end="23:53"><sizeof pos:start="23:38" pos:end="23:53">sizeof<argument_list pos:start="23:44" pos:end="23:53">(<argument pos:start="23:45" pos:end="23:52"><expr pos:start="23:45" pos:end="23:52"><name pos:start="23:45" pos:end="23:52">snap_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="25:28" pos:end="25:34"><expr pos:start="25:28" pos:end="25:34"><name pos:start="25:28" pos:end="25:34"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">name</name></name></expr></argument>, <argument pos:start="25:37" pos:end="25:51"><expr pos:start="25:37" pos:end="25:51"><sizeof pos:start="25:37" pos:end="25:51">sizeof<argument_list pos:start="25:43" pos:end="25:51">(<argument pos:start="25:44" pos:end="25:50"><expr pos:start="25:44" pos:end="25:50"><name pos:start="25:44" pos:end="25:50"><name pos:start="25:44" pos:end="25:44">s</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:50">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="27:28" pos:end="27:31"><expr pos:start="27:28" pos:end="27:31"><name pos:start="27:28" pos:end="27:31">conf</name></expr></argument>, <argument pos:start="27:34" pos:end="27:45"><expr pos:start="27:34" pos:end="27:45"><sizeof pos:start="27:34" pos:end="27:45">sizeof<argument_list pos:start="27:40" pos:end="27:45">(<argument pos:start="27:41" pos:end="27:44"><expr pos:start="27:41" pos:end="27:44"><name pos:start="27:41" pos:end="27:44">conf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="27:48" pos:end="27:48">&lt;</operator> <literal type="number" pos:start="27:50" pos:end="27:50">0</literal></expr>)</condition> <block pos:start="27:53" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:11">snap</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:18">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:16">snap_buf</name><index pos:start="35:17" pos:end="35:19">[<expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>]</index></name> <operator pos:start="35:21" pos:end="35:22">!=</operator> <literal type="char" pos:start="35:24" pos:end="35:27">'\0'</literal></expr>)</condition> <block pos:start="35:30" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:37">

        <expr_stmt pos:start="37:9" pos:end="37:37"><expr pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:15">snap</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:36"><name pos:start="37:19" pos:end="37:26">g_strdup</name><argument_list pos:start="37:27" pos:end="37:36">(<argument pos:start="37:28" pos:end="37:35"><expr pos:start="37:28" pos:end="37:35"><name pos:start="37:28" pos:end="37:35">snap_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:65"><expr pos:start="43:5" pos:end="43:64"><name pos:start="43:5" pos:end="43:14">clientname</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:64"><name pos:start="43:18" pos:end="43:42">qemu_rbd_parse_clientname</name><argument_list pos:start="43:43" pos:end="43:64">(<argument pos:start="43:44" pos:end="43:47"><expr pos:start="43:44" pos:end="43:47"><name pos:start="43:44" pos:end="43:47">conf</name></expr></argument>, <argument pos:start="43:50" pos:end="43:63"><expr pos:start="43:50" pos:end="43:63"><name pos:start="43:50" pos:end="43:63">clientname_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:5">r</name> <operator pos:start="45:7" pos:end="45:7">=</operator> <call pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:20">rados_create</name><argument_list pos:start="45:21" pos:end="45:45">(<argument pos:start="45:22" pos:end="45:32"><expr pos:start="45:22" pos:end="45:32"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:32"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:32">cluster</name></name></expr></argument>, <argument pos:start="45:35" pos:end="45:44"><expr pos:start="45:35" pos:end="45:44"><name pos:start="45:35" pos:end="45:44">clientname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:14">(<expr pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">r</name> <operator pos:start="47:11" pos:end="47:11">&lt;</operator> <literal type="number" pos:start="47:13" pos:end="47:13">0</literal></expr>)</condition> <block pos:start="47:16" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:17">

        <expr_stmt pos:start="49:9" pos:end="49:43"><expr pos:start="49:9" pos:end="49:42"><call pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:20">error_report</name><argument_list pos:start="49:21" pos:end="49:42">(<argument pos:start="49:22" pos:end="49:41"><expr pos:start="49:22" pos:end="49:41"><literal type="string" pos:start="49:22" pos:end="49:41">"error initializing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">r</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="71:5"><if pos:start="57:5" pos:end="71:5">if <condition pos:start="57:8" pos:end="57:38">(<expr pos:start="57:9" pos:end="57:37"><call pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:14">strstr</name><argument_list pos:start="57:15" pos:end="57:29">(<argument pos:start="57:16" pos:end="57:19"><expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">conf</name></expr></argument>, <argument pos:start="57:22" pos:end="57:28"><expr pos:start="57:22" pos:end="57:28"><literal type="string" pos:start="57:22" pos:end="57:28">"conf="</literal></expr></argument>)</argument_list></call> <operator pos:start="57:31" pos:end="57:32">==</operator> <name pos:start="57:34" pos:end="57:37">NULL</name></expr>)</condition> <block pos:start="57:40" pos:end="71:5">{<block_content pos:start="59:9" pos:end="69:9">

        <expr_stmt pos:start="59:9" pos:end="59:51"><expr pos:start="59:9" pos:end="59:50"><name pos:start="59:9" pos:end="59:9">r</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:50"><name pos:start="59:13" pos:end="59:32">rados_conf_read_file</name><argument_list pos:start="59:33" pos:end="59:50">(<argument pos:start="59:34" pos:end="59:43"><expr pos:start="59:34" pos:end="59:43"><name pos:start="59:34" pos:end="59:43"><name pos:start="59:34" pos:end="59:34">s</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:43">cluster</name></name></expr></argument>, <argument pos:start="59:46" pos:end="59:49"><expr pos:start="59:46" pos:end="59:49"><name pos:start="59:46" pos:end="59:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="69:9">if <condition pos:start="61:12" pos:end="61:18">(<expr pos:start="61:13" pos:end="61:17"><name pos:start="61:13" pos:end="61:13">r</name> <operator pos:start="61:15" pos:end="61:15">&lt;</operator> <literal type="number" pos:start="61:17" pos:end="61:17">0</literal></expr>)</condition> <block pos:start="61:20" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:21">

            <expr_stmt pos:start="63:13" pos:end="63:54"><expr pos:start="63:13" pos:end="63:53"><call pos:start="63:13" pos:end="63:53"><name pos:start="63:13" pos:end="63:24">error_report</name><argument_list pos:start="63:25" pos:end="63:53">(<argument pos:start="63:26" pos:end="63:52"><expr pos:start="63:26" pos:end="63:52"><literal type="string" pos:start="63:26" pos:end="63:52">"error reading config file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:39"><expr pos:start="65:13" pos:end="65:38"><call pos:start="65:13" pos:end="65:38"><name pos:start="65:13" pos:end="65:26">rados_shutdown</name><argument_list pos:start="65:27" pos:end="65:38">(<argument pos:start="65:28" pos:end="65:37"><expr pos:start="65:28" pos:end="65:37"><name pos:start="65:28" pos:end="65:37"><name pos:start="65:28" pos:end="65:28">s</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:37">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:21">return <expr pos:start="67:20" pos:end="67:20"><name pos:start="67:20" pos:end="67:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="89:5"><if pos:start="75:5" pos:end="89:5">if <condition pos:start="75:8" pos:end="75:24">(<expr pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:12">conf</name><index pos:start="75:13" pos:end="75:15">[<expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>]</index></name> <operator pos:start="75:17" pos:end="75:18">!=</operator> <literal type="char" pos:start="75:20" pos:end="75:23">'\0'</literal></expr>)</condition> <block pos:start="75:26" pos:end="89:5">{<block_content pos:start="77:9" pos:end="87:9">

        <expr_stmt pos:start="77:9" pos:end="77:48"><expr pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:9">r</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <call pos:start="77:13" pos:end="77:47"><name pos:start="77:13" pos:end="77:29">qemu_rbd_set_conf</name><argument_list pos:start="77:30" pos:end="77:47">(<argument pos:start="77:31" pos:end="77:40"><expr pos:start="77:31" pos:end="77:40"><name pos:start="77:31" pos:end="77:40"><name pos:start="77:31" pos:end="77:31">s</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:40">cluster</name></name></expr></argument>, <argument pos:start="77:43" pos:end="77:46"><expr pos:start="77:43" pos:end="77:46"><name pos:start="77:43" pos:end="77:46">conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="87:9"><if pos:start="79:9" pos:end="87:9">if <condition pos:start="79:12" pos:end="79:18">(<expr pos:start="79:13" pos:end="79:17"><name pos:start="79:13" pos:end="79:13">r</name> <operator pos:start="79:15" pos:end="79:15">&lt;</operator> <literal type="number" pos:start="79:17" pos:end="79:17">0</literal></expr>)</condition> <block pos:start="79:20" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:21">

            <expr_stmt pos:start="81:13" pos:end="81:57"><expr pos:start="81:13" pos:end="81:56"><call pos:start="81:13" pos:end="81:56"><name pos:start="81:13" pos:end="81:24">error_report</name><argument_list pos:start="81:25" pos:end="81:56">(<argument pos:start="81:26" pos:end="81:55"><expr pos:start="81:26" pos:end="81:55"><literal type="string" pos:start="81:26" pos:end="81:55">"error setting config options"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:39"><expr pos:start="83:13" pos:end="83:38"><call pos:start="83:13" pos:end="83:38"><name pos:start="83:13" pos:end="83:26">rados_shutdown</name><argument_list pos:start="83:27" pos:end="83:38">(<argument pos:start="83:28" pos:end="83:37"><expr pos:start="83:28" pos:end="83:37"><name pos:start="83:28" pos:end="83:37"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:37">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:21">return <expr pos:start="85:20" pos:end="85:20"><name pos:start="85:20" pos:end="85:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:34"><expr pos:start="93:5" pos:end="93:33"><name pos:start="93:5" pos:end="93:5">r</name> <operator pos:start="93:7" pos:end="93:7">=</operator> <call pos:start="93:9" pos:end="93:33"><name pos:start="93:9" pos:end="93:21">rados_connect</name><argument_list pos:start="93:22" pos:end="93:33">(<argument pos:start="93:23" pos:end="93:32"><expr pos:start="93:23" pos:end="93:32"><name pos:start="93:23" pos:end="93:32"><name pos:start="93:23" pos:end="93:23">s</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:32">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="103:5">if <condition pos:start="95:8" pos:end="95:14">(<expr pos:start="95:9" pos:end="95:13"><name pos:start="95:9" pos:end="95:9">r</name> <operator pos:start="95:11" pos:end="95:11">&lt;</operator> <literal type="number" pos:start="95:13" pos:end="95:13">0</literal></expr>)</condition> <block pos:start="95:16" pos:end="103:5">{<block_content pos:start="97:9" pos:end="101:17">

        <expr_stmt pos:start="97:9" pos:end="97:41"><expr pos:start="97:9" pos:end="97:40"><call pos:start="97:9" pos:end="97:40"><name pos:start="97:9" pos:end="97:20">error_report</name><argument_list pos:start="97:21" pos:end="97:40">(<argument pos:start="97:22" pos:end="97:39"><expr pos:start="97:22" pos:end="97:39"><literal type="string" pos:start="97:22" pos:end="97:39">"error connecting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:35"><expr pos:start="99:9" pos:end="99:34"><call pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:22">rados_shutdown</name><argument_list pos:start="99:23" pos:end="99:34">(<argument pos:start="99:24" pos:end="99:33"><expr pos:start="99:24" pos:end="99:33"><name pos:start="99:24" pos:end="99:33"><name pos:start="99:24" pos:end="99:24">s</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:33">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:17">return <expr pos:start="101:16" pos:end="101:16"><name pos:start="101:16" pos:end="101:16">r</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:57"><expr pos:start="107:5" pos:end="107:56"><name pos:start="107:5" pos:end="107:5">r</name> <operator pos:start="107:7" pos:end="107:7">=</operator> <call pos:start="107:9" pos:end="107:56"><name pos:start="107:9" pos:end="107:26">rados_ioctx_create</name><argument_list pos:start="107:27" pos:end="107:56">(<argument pos:start="107:28" pos:end="107:37"><expr pos:start="107:28" pos:end="107:37"><name pos:start="107:28" pos:end="107:37"><name pos:start="107:28" pos:end="107:28">s</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:37">cluster</name></name></expr></argument>, <argument pos:start="107:40" pos:end="107:43"><expr pos:start="107:40" pos:end="107:43"><name pos:start="107:40" pos:end="107:43">pool</name></expr></argument>, <argument pos:start="107:46" pos:end="107:55"><expr pos:start="107:46" pos:end="107:55"><operator pos:start="107:46" pos:end="107:46">&amp;</operator><name pos:start="107:47" pos:end="107:55"><name pos:start="107:47" pos:end="107:47">s</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:55">io_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="117:5"><if pos:start="109:5" pos:end="117:5">if <condition pos:start="109:8" pos:end="109:14">(<expr pos:start="109:9" pos:end="109:13"><name pos:start="109:9" pos:end="109:9">r</name> <operator pos:start="109:11" pos:end="109:11">&lt;</operator> <literal type="number" pos:start="109:13" pos:end="109:13">0</literal></expr>)</condition> <block pos:start="109:16" pos:end="117:5">{<block_content pos:start="111:9" pos:end="115:17">

        <expr_stmt pos:start="111:9" pos:end="111:52"><expr pos:start="111:9" pos:end="111:51"><call pos:start="111:9" pos:end="111:51"><name pos:start="111:9" pos:end="111:20">error_report</name><argument_list pos:start="111:21" pos:end="111:51">(<argument pos:start="111:22" pos:end="111:44"><expr pos:start="111:22" pos:end="111:44"><literal type="string" pos:start="111:22" pos:end="111:44">"error opening pool %s"</literal></expr></argument>, <argument pos:start="111:47" pos:end="111:50"><expr pos:start="111:47" pos:end="111:50"><name pos:start="111:47" pos:end="111:50">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:35"><expr pos:start="113:9" pos:end="113:34"><call pos:start="113:9" pos:end="113:34"><name pos:start="113:9" pos:end="113:22">rados_shutdown</name><argument_list pos:start="113:23" pos:end="113:34">(<argument pos:start="113:24" pos:end="113:33"><expr pos:start="113:24" pos:end="113:33"><name pos:start="113:24" pos:end="113:33"><name pos:start="113:24" pos:end="113:24">s</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:33">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:17">return <expr pos:start="115:16" pos:end="115:16"><name pos:start="115:16" pos:end="115:16">r</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:57"><expr pos:start="121:5" pos:end="121:56"><name pos:start="121:5" pos:end="121:5">r</name> <operator pos:start="121:7" pos:end="121:7">=</operator> <call pos:start="121:9" pos:end="121:56"><name pos:start="121:9" pos:end="121:16">rbd_open</name><argument_list pos:start="121:17" pos:end="121:56">(<argument pos:start="121:18" pos:end="121:26"><expr pos:start="121:18" pos:end="121:26"><name pos:start="121:18" pos:end="121:26"><name pos:start="121:18" pos:end="121:18">s</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:26">io_ctx</name></name></expr></argument>, <argument pos:start="121:29" pos:end="121:35"><expr pos:start="121:29" pos:end="121:35"><name pos:start="121:29" pos:end="121:35"><name pos:start="121:29" pos:end="121:29">s</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:35">name</name></name></expr></argument>, <argument pos:start="121:38" pos:end="121:46"><expr pos:start="121:38" pos:end="121:46"><operator pos:start="121:38" pos:end="121:38">&amp;</operator><name pos:start="121:39" pos:end="121:46"><name pos:start="121:39" pos:end="121:39">s</name><operator pos:start="121:40" pos:end="121:41">-&gt;</operator><name pos:start="121:42" pos:end="121:46">image</name></name></expr></argument>, <argument pos:start="121:49" pos:end="121:55"><expr pos:start="121:49" pos:end="121:55"><name pos:start="121:49" pos:end="121:55"><name pos:start="121:49" pos:end="121:49">s</name><operator pos:start="121:50" pos:end="121:51">-&gt;</operator><name pos:start="121:52" pos:end="121:55">snap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="133:5"><if pos:start="123:5" pos:end="133:5">if <condition pos:start="123:8" pos:end="123:14">(<expr pos:start="123:9" pos:end="123:13"><name pos:start="123:9" pos:end="123:9">r</name> <operator pos:start="123:11" pos:end="123:11">&lt;</operator> <literal type="number" pos:start="123:13" pos:end="123:13">0</literal></expr>)</condition> <block pos:start="123:16" pos:end="133:5">{<block_content pos:start="125:9" pos:end="131:17">

        <expr_stmt pos:start="125:9" pos:end="125:62"><expr pos:start="125:9" pos:end="125:61"><call pos:start="125:9" pos:end="125:61"><name pos:start="125:9" pos:end="125:20">error_report</name><argument_list pos:start="125:21" pos:end="125:61">(<argument pos:start="125:22" pos:end="125:51"><expr pos:start="125:22" pos:end="125:51"><literal type="string" pos:start="125:22" pos:end="125:51">"error reading header from %s"</literal></expr></argument>, <argument pos:start="125:54" pos:end="125:60"><expr pos:start="125:54" pos:end="125:60"><name pos:start="125:54" pos:end="125:60"><name pos:start="125:54" pos:end="125:54">s</name><operator pos:start="125:55" pos:end="125:56">-&gt;</operator><name pos:start="125:57" pos:end="125:60">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:39"><expr pos:start="127:9" pos:end="127:38"><call pos:start="127:9" pos:end="127:38"><name pos:start="127:9" pos:end="127:27">rados_ioctx_destroy</name><argument_list pos:start="127:28" pos:end="127:38">(<argument pos:start="127:29" pos:end="127:37"><expr pos:start="127:29" pos:end="127:37"><name pos:start="127:29" pos:end="127:37"><name pos:start="127:29" pos:end="127:29">s</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:37">io_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:35"><expr pos:start="129:9" pos:end="129:34"><call pos:start="129:9" pos:end="129:34"><name pos:start="129:9" pos:end="129:22">rados_shutdown</name><argument_list pos:start="129:23" pos:end="129:34">(<argument pos:start="129:24" pos:end="129:33"><expr pos:start="129:24" pos:end="129:33"><name pos:start="129:24" pos:end="129:33"><name pos:start="129:24" pos:end="129:24">s</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:33">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:17">return <expr pos:start="131:16" pos:end="131:16"><name pos:start="131:16" pos:end="131:16">r</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:38"><expr pos:start="137:5" pos:end="137:37"><name pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:6">bs</name><operator pos:start="137:7" pos:end="137:8">-&gt;</operator><name pos:start="137:9" pos:end="137:17">read_only</name></name> <operator pos:start="137:19" pos:end="137:19">=</operator> <operator pos:start="137:21" pos:end="137:21">(</operator><name pos:start="137:22" pos:end="137:28"><name pos:start="137:22" pos:end="137:22">s</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:28">snap</name></name> <operator pos:start="137:30" pos:end="137:31">!=</operator> <name pos:start="137:33" pos:end="137:36">NULL</name><operator pos:start="137:37" pos:end="137:37">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:28"><expr pos:start="141:5" pos:end="141:27"><name pos:start="141:5" pos:end="141:23"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:23">event_reader_pos</name></name> <operator pos:start="141:25" pos:end="141:25">=</operator> <literal type="number" pos:start="141:27" pos:end="141:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:26"><expr pos:start="143:5" pos:end="143:25"><name pos:start="143:5" pos:end="143:5">r</name> <operator pos:start="143:7" pos:end="143:7">=</operator> <call pos:start="143:9" pos:end="143:25"><name pos:start="143:9" pos:end="143:17">qemu_pipe</name><argument_list pos:start="143:18" pos:end="143:25">(<argument pos:start="143:19" pos:end="143:24"><expr pos:start="143:19" pos:end="143:24"><name pos:start="143:19" pos:end="143:24"><name pos:start="143:19" pos:end="143:19">s</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:24">fds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="151:5"><if pos:start="145:5" pos:end="151:5">if <condition pos:start="145:8" pos:end="145:14">(<expr pos:start="145:9" pos:end="145:13"><name pos:start="145:9" pos:end="145:9">r</name> <operator pos:start="145:11" pos:end="145:11">&lt;</operator> <literal type="number" pos:start="145:13" pos:end="145:13">0</literal></expr>)</condition> <block pos:start="145:16" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:20">

        <expr_stmt pos:start="147:9" pos:end="147:46"><expr pos:start="147:9" pos:end="147:45"><call pos:start="147:9" pos:end="147:45"><name pos:start="147:9" pos:end="147:20">error_report</name><argument_list pos:start="147:21" pos:end="147:45">(<argument pos:start="147:22" pos:end="147:44"><expr pos:start="147:22" pos:end="147:44"><literal type="string" pos:start="147:22" pos:end="147:44">"error opening eventfd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="149:9" pos:end="149:20">goto <name pos:start="149:14" pos:end="149:19">failed</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:42"><expr pos:start="153:5" pos:end="153:41"><call pos:start="153:5" pos:end="153:41"><name pos:start="153:5" pos:end="153:9">fcntl</name><argument_list pos:start="153:10" pos:end="153:41">(<argument pos:start="153:11" pos:end="153:19"><expr pos:start="153:11" pos:end="153:19"><name pos:start="153:11" pos:end="153:19"><name pos:start="153:11" pos:end="153:11">s</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:16">fds</name><index pos:start="153:17" pos:end="153:19">[<expr pos:start="153:18" pos:end="153:18"><literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:22" pos:end="153:28"><expr pos:start="153:22" pos:end="153:28"><name pos:start="153:22" pos:end="153:28">F_SETFL</name></expr></argument>, <argument pos:start="153:31" pos:end="153:40"><expr pos:start="153:31" pos:end="153:40"><name pos:start="153:31" pos:end="153:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:42"><expr pos:start="155:5" pos:end="155:41"><call pos:start="155:5" pos:end="155:41"><name pos:start="155:5" pos:end="155:9">fcntl</name><argument_list pos:start="155:10" pos:end="155:41">(<argument pos:start="155:11" pos:end="155:19"><expr pos:start="155:11" pos:end="155:19"><name pos:start="155:11" pos:end="155:19"><name pos:start="155:11" pos:end="155:11">s</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:16">fds</name><index pos:start="155:17" pos:end="155:19">[<expr pos:start="155:18" pos:end="155:18"><literal type="number" pos:start="155:18" pos:end="155:18">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:22" pos:end="155:28"><expr pos:start="155:22" pos:end="155:28"><name pos:start="155:22" pos:end="155:28">F_SETFL</name></expr></argument>, <argument pos:start="155:31" pos:end="155:40"><expr pos:start="155:31" pos:end="155:40"><name pos:start="155:31" pos:end="155:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="159:66"><expr pos:start="157:5" pos:end="159:65"><call pos:start="157:5" pos:end="159:65"><name pos:start="157:5" pos:end="157:27">qemu_aio_set_fd_handler</name><argument_list pos:start="157:28" pos:end="159:65">(<argument pos:start="157:29" pos:end="157:47"><expr pos:start="157:29" pos:end="157:47"><name pos:start="157:29" pos:end="157:47"><name pos:start="157:29" pos:end="157:29">s</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:34">fds</name><index pos:start="157:35" pos:end="157:47">[<expr pos:start="157:36" pos:end="157:46"><name pos:start="157:36" pos:end="157:46">RBD_FD_READ</name></expr>]</index></name></expr></argument>, <argument pos:start="157:50" pos:end="157:74"><expr pos:start="157:50" pos:end="157:74"><name pos:start="157:50" pos:end="157:74">qemu_rbd_aio_event_reader</name></expr></argument>,

                            <argument pos:start="159:29" pos:end="159:32"><expr pos:start="159:29" pos:end="159:32"><name pos:start="159:29" pos:end="159:32">NULL</name></expr></argument>, <argument pos:start="159:35" pos:end="159:55"><expr pos:start="159:35" pos:end="159:55"><name pos:start="159:35" pos:end="159:55">qemu_rbd_aio_flush_cb</name></expr></argument>, <argument pos:start="159:58" pos:end="159:61"><expr pos:start="159:58" pos:end="159:61"><name pos:start="159:58" pos:end="159:61">NULL</name></expr></argument>, <argument pos:start="159:64" pos:end="159:64"><expr pos:start="159:64" pos:end="159:64"><name pos:start="159:64" pos:end="159:64">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>



<label pos:start="169:1" pos:end="169:7"><name pos:start="169:1" pos:end="169:6">failed</name>:</label>

    <expr_stmt pos:start="171:5" pos:end="171:24"><expr pos:start="171:5" pos:end="171:23"><call pos:start="171:5" pos:end="171:23"><name pos:start="171:5" pos:end="171:13">rbd_close</name><argument_list pos:start="171:14" pos:end="171:23">(<argument pos:start="171:15" pos:end="171:22"><expr pos:start="171:15" pos:end="171:22"><name pos:start="171:15" pos:end="171:22"><name pos:start="171:15" pos:end="171:15">s</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:22">image</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:35"><expr pos:start="173:5" pos:end="173:34"><call pos:start="173:5" pos:end="173:34"><name pos:start="173:5" pos:end="173:23">rados_ioctx_destroy</name><argument_list pos:start="173:24" pos:end="173:34">(<argument pos:start="173:25" pos:end="173:33"><expr pos:start="173:25" pos:end="173:33"><name pos:start="173:25" pos:end="173:33"><name pos:start="173:25" pos:end="173:25">s</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:33">io_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:31"><expr pos:start="175:5" pos:end="175:30"><call pos:start="175:5" pos:end="175:30"><name pos:start="175:5" pos:end="175:18">rados_shutdown</name><argument_list pos:start="175:19" pos:end="175:30">(<argument pos:start="175:20" pos:end="175:29"><expr pos:start="175:20" pos:end="175:29"><name pos:start="175:20" pos:end="175:29"><name pos:start="175:20" pos:end="175:20">s</name><operator pos:start="175:21" pos:end="175:22">-&gt;</operator><name pos:start="175:23" pos:end="175:29">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="177:5" pos:end="177:13">return <expr pos:start="177:12" pos:end="177:12"><name pos:start="177:12" pos:end="177:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
