<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/968.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:8">unsigned</name> <name pos:start="1:10" pos:end="1:13">long</name></type> <name pos:start="1:15" pos:end="1:37">hbitmap_iter_skip_words</name><parameter_list pos:start="1:38" pos:end="1:55">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:49">HBitmapIter</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">hbi</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:15">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:14">pos</name> <init pos:start="5:16" pos:end="5:25">= <expr pos:start="5:18" pos:end="5:25"><name pos:start="5:18" pos:end="5:25"><name pos:start="5:18" pos:end="5:20">hbi</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:25">pos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">HBitmap</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">hb</name> <init pos:start="7:23" pos:end="7:31">= <expr pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:27">hbi</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:31">hb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:14">i</name> <init pos:start="9:16" pos:end="9:35">= <expr pos:start="9:18" pos:end="9:35"><name pos:start="9:18" pos:end="9:31">HBITMAP_LEVELS</name> <operator pos:start="9:33" pos:end="9:33">-</operator> <literal type="number" pos:start="9:35" pos:end="9:35">1</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">long</name></type> <name pos:start="13:19" pos:end="13:21">cur</name></decl>;</decl_stmt>

    <do pos:start="15:5" pos:end="21:23">do <block pos:start="15:8" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:31">

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:11">cur</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:27"><name pos:start="17:15" pos:end="17:17">hbi</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">cur</name><index pos:start="17:23" pos:end="17:27">[<expr pos:start="17:24" pos:end="17:26"><operator pos:start="17:24" pos:end="17:25">--</operator><name pos:start="17:26" pos:end="17:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:31"><expr pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:11">pos</name> <operator pos:start="19:13" pos:end="19:15">&gt;&gt;=</operator> <name pos:start="19:17" pos:end="19:30">BITS_PER_LEVEL</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="21:13" pos:end="21:22">(<expr pos:start="21:14" pos:end="21:21"><name pos:start="21:14" pos:end="21:16">cur</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>)</condition>;</do>



    <comment type="block" pos:start="25:5" pos:end="33:7">/* Check for end of iteration.  We always use fewer than BITS_PER_LONG

     * bits in the level 0 bitmap; thus we can repurpose the most significant

     * bit as a sentinel.  The sentinel is set in hbitmap_alloc and ensures

     * that the above loop ends even without an explicit check on i.

     */</comment>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:54">(<expr pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:9">i</name> <operator pos:start="37:11" pos:end="37:12">==</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal> <operator pos:start="37:16" pos:end="37:17">&amp;&amp;</operator> <name pos:start="37:19" pos:end="37:21">cur</name> <operator pos:start="37:23" pos:end="37:24">==</operator> <operator pos:start="37:26" pos:end="37:26">(</operator><literal type="number" pos:start="37:27" pos:end="37:29">1UL</literal> <operator pos:start="37:31" pos:end="37:32">&lt;&lt;</operator> <operator pos:start="37:34" pos:end="37:34">(</operator><name pos:start="37:35" pos:end="37:47">BITS_PER_LONG</name> <operator pos:start="37:49" pos:end="37:49">-</operator> <literal type="number" pos:start="37:51" pos:end="37:51">1</literal><operator pos:start="37:52" pos:end="37:52">)</operator><operator pos:start="37:53" pos:end="37:53">)</operator></expr>)</condition> <block pos:start="37:56" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="43:5" pos:end="63:5">for <control pos:start="43:9" pos:end="43:39">(<init pos:start="43:10" pos:end="43:10">;</init> <condition pos:start="43:12" pos:end="43:34"><expr pos:start="43:12" pos:end="43:33"><name pos:start="43:12" pos:end="43:12">i</name> <operator pos:start="43:14" pos:end="43:14">&lt;</operator> <name pos:start="43:16" pos:end="43:29">HBITMAP_LEVELS</name> <operator pos:start="43:31" pos:end="43:31">-</operator> <literal type="number" pos:start="43:33" pos:end="43:33">1</literal></expr>;</condition> <incr pos:start="43:36" pos:end="43:38"><expr pos:start="43:36" pos:end="43:38"><name pos:start="43:36" pos:end="43:36">i</name><operator pos:start="43:37" pos:end="43:38">++</operator></expr></incr>)</control> <block pos:start="43:41" pos:end="63:5">{<block_content pos:start="53:9" pos:end="61:37">

        <comment type="block" pos:start="45:9" pos:end="51:11">/* Shift back pos to the left, matching the right shifts above.

         * The index of this word's least significant set bit provides

         * the low-order bits.

         */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:54"><expr pos:start="53:9" pos:end="53:53"><name pos:start="53:9" pos:end="53:11">pos</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <operator pos:start="53:15" pos:end="53:15">(</operator><name pos:start="53:16" pos:end="53:18">pos</name> <operator pos:start="53:20" pos:end="53:21">&lt;&lt;</operator> <name pos:start="53:23" pos:end="53:36">BITS_PER_LEVEL</name><operator pos:start="53:37" pos:end="53:37">)</operator> <operator pos:start="53:39" pos:end="53:39">+</operator> <call pos:start="53:41" pos:end="53:49"><name pos:start="53:41" pos:end="53:44">ffsl</name><argument_list pos:start="53:45" pos:end="53:49">(<argument pos:start="53:46" pos:end="53:48"><expr pos:start="53:46" pos:end="53:48"><name pos:start="53:46" pos:end="53:48">cur</name></expr></argument>)</argument_list></call> <operator pos:start="53:51" pos:end="53:51">-</operator> <literal type="number" pos:start="53:53" pos:end="53:53">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:11">hbi</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:16">cur</name><index pos:start="55:17" pos:end="55:19">[<expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">i</name></expr>]</index></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:25">cur</name> <operator pos:start="55:27" pos:end="55:27">&amp;</operator> <operator pos:start="55:29" pos:end="55:29">(</operator><name pos:start="55:30" pos:end="55:32">cur</name> <operator pos:start="55:34" pos:end="55:34">-</operator> <literal type="number" pos:start="55:36" pos:end="55:36">1</literal><operator pos:start="55:37" pos:end="55:37">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="59:9" pos:end="59:47">/* Set up next level for iteration.  */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:11">cur</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:36"><name pos:start="61:15" pos:end="61:16">hb</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:24">levels</name><index pos:start="61:25" pos:end="61:31">[<expr pos:start="61:26" pos:end="61:30"><name pos:start="61:26" pos:end="61:26">i</name> <operator pos:start="61:28" pos:end="61:28">+</operator> <literal type="number" pos:start="61:30" pos:end="61:30">1</literal></expr>]</index><index pos:start="61:32" pos:end="61:36">[<expr pos:start="61:33" pos:end="61:35"><name pos:start="61:33" pos:end="61:35">pos</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="67:5" pos:end="67:19"><expr pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:12"><name pos:start="67:5" pos:end="67:7">hbi</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:12">pos</name></name> <operator pos:start="67:14" pos:end="67:14">=</operator> <name pos:start="67:16" pos:end="67:18">pos</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:58"><expr pos:start="69:5" pos:end="69:57"><call pos:start="69:5" pos:end="69:57"><name pos:start="69:5" pos:end="69:33">trace_hbitmap_iter_skip_words</name><argument_list pos:start="69:34" pos:end="69:57">(<argument pos:start="69:35" pos:end="69:41"><expr pos:start="69:35" pos:end="69:41"><name pos:start="69:35" pos:end="69:41"><name pos:start="69:35" pos:end="69:37">hbi</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:41">hb</name></name></expr></argument>, <argument pos:start="69:44" pos:end="69:46"><expr pos:start="69:44" pos:end="69:46"><name pos:start="69:44" pos:end="69:46">hbi</name></expr></argument>, <argument pos:start="69:49" pos:end="69:51"><expr pos:start="69:49" pos:end="69:51"><name pos:start="69:49" pos:end="69:51">pos</name></expr></argument>, <argument pos:start="69:54" pos:end="69:56"><expr pos:start="69:54" pos:end="69:56"><name pos:start="69:54" pos:end="69:56">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:16"><expr pos:start="73:5" pos:end="73:15"><call pos:start="73:5" pos:end="73:15"><name pos:start="73:5" pos:end="73:10">assert</name><argument_list pos:start="73:11" pos:end="73:15">(<argument pos:start="73:12" pos:end="73:14"><expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="75:5" pos:end="75:15">return <expr pos:start="75:12" pos:end="75:14"><name pos:start="75:12" pos:end="75:14">cur</name></expr>;</return>

</block_content>}</block></function>
</unit>
