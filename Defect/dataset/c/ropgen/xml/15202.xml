<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15202.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">stm32f205_soc_realize</name><parameter_list pos:start="1:34" pos:end="1:69">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:45">DeviceState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:54">dev_soc</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:61">Error</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier><modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:5">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">STM32F205State</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:46">= <expr pos:start="5:25" pos:end="5:46"><call pos:start="5:25" pos:end="5:46"><name pos:start="5:25" pos:end="5:37">STM32F205_SOC</name><argument_list pos:start="5:38" pos:end="5:46">(<argument pos:start="5:39" pos:end="5:45"><expr pos:start="5:39" pos:end="5:45"><name pos:start="5:39" pos:end="5:45">dev_soc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:26">syscfgdev</name></decl>, <decl pos:start="7:29" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:37">usartdev</name></decl>, <decl pos:start="7:40" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:40" pos:end="7:40">*</modifier></type><name pos:start="7:41" pos:end="7:48">timerdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">SysBusDevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:30">syscfgbusdev</name></decl>, <decl pos:start="9:33" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:18"><modifier pos:start="9:33" pos:end="9:33">*</modifier></type><name pos:start="9:34" pos:end="9:44">usartbusdev</name></decl>, <decl pos:start="9:47" pos:end="9:58"><type ref="prev" pos:start="9:5" pos:end="9:18"><modifier pos:start="9:47" pos:end="9:47">*</modifier></type><name pos:start="9:48" pos:end="9:58">timerbusdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">qemu_irq</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">pic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:54"><decl pos:start="19:5" pos:end="19:53"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">MemoryRegion</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:31">system_memory</name> <init pos:start="19:33" pos:end="19:53">= <expr pos:start="19:35" pos:end="19:53"><call pos:start="19:35" pos:end="19:53"><name pos:start="19:35" pos:end="19:51">get_system_memory</name><argument_list pos:start="19:52" pos:end="19:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:48"><decl pos:start="21:5" pos:end="21:47"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">MemoryRegion</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:22">sram</name> <init pos:start="21:24" pos:end="21:47">= <expr pos:start="21:26" pos:end="21:47"><call pos:start="21:26" pos:end="21:47"><name pos:start="21:26" pos:end="21:30">g_new</name><argument_list pos:start="21:31" pos:end="21:47">(<argument pos:start="21:32" pos:end="21:43"><expr pos:start="21:32" pos:end="21:43"><name pos:start="21:32" pos:end="21:43">MemoryRegion</name></expr></argument>, <argument pos:start="21:46" pos:end="21:46"><expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:49"><decl pos:start="23:5" pos:end="23:48"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">MemoryRegion</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:23">flash</name> <init pos:start="23:25" pos:end="23:48">= <expr pos:start="23:27" pos:end="23:48"><call pos:start="23:27" pos:end="23:48"><name pos:start="23:27" pos:end="23:31">g_new</name><argument_list pos:start="23:32" pos:end="23:48">(<argument pos:start="23:33" pos:end="23:44"><expr pos:start="23:33" pos:end="23:44"><name pos:start="23:33" pos:end="23:44">MemoryRegion</name></expr></argument>, <argument pos:start="23:47" pos:end="23:47"><expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:55"><decl pos:start="25:5" pos:end="25:54"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:16">MemoryRegion</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:29">flash_alias</name> <init pos:start="25:31" pos:end="25:54">= <expr pos:start="25:33" pos:end="25:54"><call pos:start="25:33" pos:end="25:54"><name pos:start="25:33" pos:end="25:37">g_new</name><argument_list pos:start="25:38" pos:end="25:54">(<argument pos:start="25:39" pos:end="25:50"><expr pos:start="25:39" pos:end="25:50"><name pos:start="25:39" pos:end="25:50">MemoryRegion</name></expr></argument>, <argument pos:start="25:53" pos:end="25:53"><expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:41"><expr pos:start="29:5" pos:end="31:40"><call pos:start="29:5" pos:end="31:40"><name pos:start="29:5" pos:end="29:26">memory_region_init_ram</name><argument_list pos:start="29:27" pos:end="31:40">(<argument pos:start="29:28" pos:end="29:32"><expr pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:32">flash</name></expr></argument>, <argument pos:start="29:35" pos:end="29:38"><expr pos:start="29:35" pos:end="29:38"><name pos:start="29:35" pos:end="29:38">NULL</name></expr></argument>, <argument pos:start="29:41" pos:end="29:57"><expr pos:start="29:41" pos:end="29:57"><literal type="string" pos:start="29:41" pos:end="29:57">"STM32F205.flash"</literal></expr></argument>, <argument pos:start="29:60" pos:end="29:69"><expr pos:start="29:60" pos:end="29:69"><name pos:start="29:60" pos:end="29:69">FLASH_SIZE</name></expr></argument>,

                           <argument pos:start="31:28" pos:end="31:39"><expr pos:start="31:28" pos:end="31:39"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:51"><expr pos:start="33:5" pos:end="35:50"><call pos:start="33:5" pos:end="35:50"><name pos:start="33:5" pos:end="33:28">memory_region_init_alias</name><argument_list pos:start="33:29" pos:end="35:50">(<argument pos:start="33:30" pos:end="33:40"><expr pos:start="33:30" pos:end="33:40"><name pos:start="33:30" pos:end="33:40">flash_alias</name></expr></argument>, <argument pos:start="33:43" pos:end="33:46"><expr pos:start="33:43" pos:end="33:46"><name pos:start="33:43" pos:end="33:46">NULL</name></expr></argument>, <argument pos:start="33:49" pos:end="33:71"><expr pos:start="33:49" pos:end="33:71"><literal type="string" pos:start="33:49" pos:end="33:71">"STM32F205.flash.alias"</literal></expr></argument>,

                             <argument pos:start="35:30" pos:end="35:34"><expr pos:start="35:30" pos:end="35:34"><name pos:start="35:30" pos:end="35:34">flash</name></expr></argument>, <argument pos:start="35:37" pos:end="35:37"><expr pos:start="35:37" pos:end="35:37"><literal type="number" pos:start="35:37" pos:end="35:37">0</literal></expr></argument>, <argument pos:start="35:40" pos:end="35:49"><expr pos:start="35:40" pos:end="35:49"><name pos:start="35:40" pos:end="35:49">FLASH_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><call pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:31">vmstate_register_ram_global</name><argument_list pos:start="39:32" pos:end="39:38">(<argument pos:start="39:33" pos:end="39:37"><expr pos:start="39:33" pos:end="39:37"><name pos:start="39:33" pos:end="39:37">flash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:44"><expr pos:start="43:5" pos:end="43:43"><call pos:start="43:5" pos:end="43:43"><name pos:start="43:5" pos:end="43:30">memory_region_set_readonly</name><argument_list pos:start="43:31" pos:end="43:43">(<argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:36">flash</name></expr></argument>, <argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><name pos:start="43:39" pos:end="43:42">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:50"><expr pos:start="45:5" pos:end="45:49"><call pos:start="45:5" pos:end="45:49"><name pos:start="45:5" pos:end="45:30">memory_region_set_readonly</name><argument_list pos:start="45:31" pos:end="45:49">(<argument pos:start="45:32" pos:end="45:42"><expr pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:42">flash_alias</name></expr></argument>, <argument pos:start="45:45" pos:end="45:48"><expr pos:start="45:45" pos:end="45:48"><name pos:start="45:45" pos:end="45:48">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:74"><expr pos:start="49:5" pos:end="49:73"><call pos:start="49:5" pos:end="49:73"><name pos:start="49:5" pos:end="49:31">memory_region_add_subregion</name><argument_list pos:start="49:32" pos:end="49:73">(<argument pos:start="49:33" pos:end="49:45"><expr pos:start="49:33" pos:end="49:45"><name pos:start="49:33" pos:end="49:45">system_memory</name></expr></argument>, <argument pos:start="49:48" pos:end="49:65"><expr pos:start="49:48" pos:end="49:65"><name pos:start="49:48" pos:end="49:65">FLASH_BASE_ADDRESS</name></expr></argument>, <argument pos:start="49:68" pos:end="49:72"><expr pos:start="49:68" pos:end="49:72"><name pos:start="49:68" pos:end="49:72">flash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:63"><expr pos:start="51:5" pos:end="51:62"><call pos:start="51:5" pos:end="51:62"><name pos:start="51:5" pos:end="51:31">memory_region_add_subregion</name><argument_list pos:start="51:32" pos:end="51:62">(<argument pos:start="51:33" pos:end="51:45"><expr pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:45">system_memory</name></expr></argument>, <argument pos:start="51:48" pos:end="51:48"><expr pos:start="51:48" pos:end="51:48"><literal type="number" pos:start="51:48" pos:end="51:48">0</literal></expr></argument>, <argument pos:start="51:51" pos:end="51:61"><expr pos:start="51:51" pos:end="51:61"><name pos:start="51:51" pos:end="51:61">flash_alias</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:41"><expr pos:start="55:5" pos:end="57:40"><call pos:start="55:5" pos:end="57:40"><name pos:start="55:5" pos:end="55:26">memory_region_init_ram</name><argument_list pos:start="55:27" pos:end="57:40">(<argument pos:start="55:28" pos:end="55:31"><expr pos:start="55:28" pos:end="55:31"><name pos:start="55:28" pos:end="55:31">sram</name></expr></argument>, <argument pos:start="55:34" pos:end="55:37"><expr pos:start="55:34" pos:end="55:37"><name pos:start="55:34" pos:end="55:37">NULL</name></expr></argument>, <argument pos:start="55:40" pos:end="55:55"><expr pos:start="55:40" pos:end="55:55"><literal type="string" pos:start="55:40" pos:end="55:55">"STM32F205.sram"</literal></expr></argument>, <argument pos:start="55:58" pos:end="55:66"><expr pos:start="55:58" pos:end="55:66"><name pos:start="55:58" pos:end="55:66">SRAM_SIZE</name></expr></argument>,

                           <argument pos:start="57:28" pos:end="57:39"><expr pos:start="57:28" pos:end="57:39"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:38"><expr pos:start="59:5" pos:end="59:37"><call pos:start="59:5" pos:end="59:37"><name pos:start="59:5" pos:end="59:31">vmstate_register_ram_global</name><argument_list pos:start="59:32" pos:end="59:37">(<argument pos:start="59:33" pos:end="59:36"><expr pos:start="59:33" pos:end="59:36"><name pos:start="59:33" pos:end="59:36">sram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:72"><expr pos:start="61:5" pos:end="61:71"><call pos:start="61:5" pos:end="61:71"><name pos:start="61:5" pos:end="61:31">memory_region_add_subregion</name><argument_list pos:start="61:32" pos:end="61:71">(<argument pos:start="61:33" pos:end="61:45"><expr pos:start="61:33" pos:end="61:45"><name pos:start="61:33" pos:end="61:45">system_memory</name></expr></argument>, <argument pos:start="61:48" pos:end="61:64"><expr pos:start="61:48" pos:end="61:64"><name pos:start="61:48" pos:end="61:64">SRAM_BASE_ADDRESS</name></expr></argument>, <argument pos:start="61:67" pos:end="61:70"><expr pos:start="61:67" pos:end="61:70"><name pos:start="61:67" pos:end="61:70">sram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="67:56"><expr pos:start="65:5" pos:end="67:55"><name pos:start="65:5" pos:end="65:7">pic</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <call pos:start="65:11" pos:end="67:55"><name pos:start="65:11" pos:end="65:21">armv7m_init</name><argument_list pos:start="65:22" pos:end="67:55">(<argument pos:start="65:23" pos:end="65:41"><expr pos:start="65:23" pos:end="65:41"><call pos:start="65:23" pos:end="65:41"><name pos:start="65:23" pos:end="65:39">get_system_memory</name><argument_list pos:start="65:40" pos:end="65:41">()</argument_list></call></expr></argument>, <argument pos:start="65:44" pos:end="65:53"><expr pos:start="65:44" pos:end="65:53"><name pos:start="65:44" pos:end="65:53">FLASH_SIZE</name></expr></argument>, <argument pos:start="65:56" pos:end="65:57"><expr pos:start="65:56" pos:end="65:57"><literal type="number" pos:start="65:56" pos:end="65:57">96</literal></expr></argument>,

                      <argument pos:start="67:23" pos:end="67:40"><expr pos:start="67:23" pos:end="67:40"><name pos:start="67:23" pos:end="67:40"><name pos:start="67:23" pos:end="67:23">s</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:40">kernel_filename</name></name></expr></argument>, <argument pos:start="67:43" pos:end="67:54"><expr pos:start="67:43" pos:end="67:54"><name pos:start="67:43" pos:end="67:54"><name pos:start="67:43" pos:end="67:43">s</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:54">cpu_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:41">/* System configuration controller */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:13">syscfgdev</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:22">DEVICE</name><argument_list pos:start="73:23" pos:end="73:34">(<argument pos:start="73:24" pos:end="73:33"><expr pos:start="73:24" pos:end="73:33"><operator pos:start="73:24" pos:end="73:24">&amp;</operator><name pos:start="73:25" pos:end="73:33"><name pos:start="73:25" pos:end="73:25">s</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:33">syscfg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:73"><expr pos:start="75:5" pos:end="75:72"><call pos:start="75:5" pos:end="75:72"><name pos:start="75:5" pos:end="75:28">object_property_set_bool</name><argument_list pos:start="75:29" pos:end="75:72">(<argument pos:start="75:30" pos:end="75:47"><expr pos:start="75:30" pos:end="75:47"><call pos:start="75:30" pos:end="75:47"><name pos:start="75:30" pos:end="75:35">OBJECT</name><argument_list pos:start="75:36" pos:end="75:47">(<argument pos:start="75:37" pos:end="75:46"><expr pos:start="75:37" pos:end="75:46"><operator pos:start="75:37" pos:end="75:37">&amp;</operator><name pos:start="75:38" pos:end="75:46"><name pos:start="75:38" pos:end="75:38">s</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:46">syscfg</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:50" pos:end="75:53"><expr pos:start="75:50" pos:end="75:53"><name pos:start="75:50" pos:end="75:53">true</name></expr></argument>, <argument pos:start="75:56" pos:end="75:65"><expr pos:start="75:56" pos:end="75:65"><literal type="string" pos:start="75:56" pos:end="75:65">"realized"</literal></expr></argument>, <argument pos:start="75:68" pos:end="75:71"><expr pos:start="75:68" pos:end="75:71"><operator pos:start="75:68" pos:end="75:68">&amp;</operator><name pos:start="75:69" pos:end="75:71">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:20">(<expr pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:11">err</name> <operator pos:start="77:13" pos:end="77:14">!=</operator> <name pos:start="77:16" pos:end="77:19">NULL</name></expr>)</condition> <block pos:start="77:22" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:15">

        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><call pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:23">error_propagate</name><argument_list pos:start="79:24" pos:end="79:34">(<argument pos:start="79:25" pos:end="79:28"><expr pos:start="79:25" pos:end="79:28"><name pos:start="79:25" pos:end="79:28">errp</name></expr></argument>, <argument pos:start="79:31" pos:end="79:33"><expr pos:start="79:31" pos:end="79:33"><name pos:start="79:31" pos:end="79:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:45"><expr pos:start="85:5" pos:end="85:44"><name pos:start="85:5" pos:end="85:16">syscfgbusdev</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <call pos:start="85:20" pos:end="85:44"><name pos:start="85:20" pos:end="85:33">SYS_BUS_DEVICE</name><argument_list pos:start="85:34" pos:end="85:44">(<argument pos:start="85:35" pos:end="85:43"><expr pos:start="85:35" pos:end="85:43"><name pos:start="85:35" pos:end="85:43">syscfgdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:49"><expr pos:start="87:5" pos:end="87:48"><call pos:start="87:5" pos:end="87:48"><name pos:start="87:5" pos:end="87:19">sysbus_mmio_map</name><argument_list pos:start="87:20" pos:end="87:48">(<argument pos:start="87:21" pos:end="87:32"><expr pos:start="87:21" pos:end="87:32"><name pos:start="87:21" pos:end="87:32">syscfgbusdev</name></expr></argument>, <argument pos:start="87:35" pos:end="87:35"><expr pos:start="87:35" pos:end="87:35"><literal type="number" pos:start="87:35" pos:end="87:35">0</literal></expr></argument>, <argument pos:start="87:38" pos:end="87:47"><expr pos:start="87:38" pos:end="87:47"><literal type="number" pos:start="87:38" pos:end="87:47">0x40013800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:49"><expr pos:start="89:5" pos:end="89:48"><call pos:start="89:5" pos:end="89:48"><name pos:start="89:5" pos:end="89:22">sysbus_connect_irq</name><argument_list pos:start="89:23" pos:end="89:48">(<argument pos:start="89:24" pos:end="89:35"><expr pos:start="89:24" pos:end="89:35"><name pos:start="89:24" pos:end="89:35">syscfgbusdev</name></expr></argument>, <argument pos:start="89:38" pos:end="89:38"><expr pos:start="89:38" pos:end="89:38"><literal type="number" pos:start="89:38" pos:end="89:38">0</literal></expr></argument>, <argument pos:start="89:41" pos:end="89:47"><expr pos:start="89:41" pos:end="89:47"><name pos:start="89:41" pos:end="89:47"><name pos:start="89:41" pos:end="89:43">pic</name><index pos:start="89:44" pos:end="89:47">[<expr pos:start="89:45" pos:end="89:46"><literal type="number" pos:start="89:45" pos:end="89:46">71</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:66">/* Attach UART (uses USART registers) and USART controllers */</comment>

    <for pos:start="95:5" pos:end="115:5">for <control pos:start="95:9" pos:end="95:40">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:35"><expr pos:start="95:17" pos:end="95:34"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <name pos:start="95:21" pos:end="95:34">STM_NUM_USARTS</name></expr>;</condition> <incr pos:start="95:37" pos:end="95:39"><expr pos:start="95:37" pos:end="95:39"><name pos:start="95:37" pos:end="95:37">i</name><operator pos:start="95:38" pos:end="95:39">++</operator></expr></incr>)</control> <block pos:start="95:42" pos:end="115:5">{<block_content pos:start="97:9" pos:end="113:62">

        <expr_stmt pos:start="97:9" pos:end="97:42"><expr pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:16">usartdev</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <call pos:start="97:20" pos:end="97:41"><name pos:start="97:20" pos:end="97:25">DEVICE</name><argument_list pos:start="97:26" pos:end="97:41">(<argument pos:start="97:27" pos:end="97:40"><expr pos:start="97:27" pos:end="97:40"><operator pos:start="97:27" pos:end="97:27">&amp;</operator><operator pos:start="97:28" pos:end="97:28">(</operator><name pos:start="97:29" pos:end="97:39"><name pos:start="97:29" pos:end="97:29">s</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:36">usart</name><index pos:start="97:37" pos:end="97:39">[<expr pos:start="97:38" pos:end="97:38"><name pos:start="97:38" pos:end="97:38">i</name></expr>]</index></name><operator pos:start="97:40" pos:end="97:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:79"><expr pos:start="99:9" pos:end="99:78"><call pos:start="99:9" pos:end="99:78"><name pos:start="99:9" pos:end="99:32">object_property_set_bool</name><argument_list pos:start="99:33" pos:end="99:78">(<argument pos:start="99:34" pos:end="99:53"><expr pos:start="99:34" pos:end="99:53"><call pos:start="99:34" pos:end="99:53"><name pos:start="99:34" pos:end="99:39">OBJECT</name><argument_list pos:start="99:40" pos:end="99:53">(<argument pos:start="99:41" pos:end="99:52"><expr pos:start="99:41" pos:end="99:52"><operator pos:start="99:41" pos:end="99:41">&amp;</operator><name pos:start="99:42" pos:end="99:52"><name pos:start="99:42" pos:end="99:42">s</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:49">usart</name><index pos:start="99:50" pos:end="99:52">[<expr pos:start="99:51" pos:end="99:51"><name pos:start="99:51" pos:end="99:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:56" pos:end="99:59"><expr pos:start="99:56" pos:end="99:59"><name pos:start="99:56" pos:end="99:59">true</name></expr></argument>, <argument pos:start="99:62" pos:end="99:71"><expr pos:start="99:62" pos:end="99:71"><literal type="string" pos:start="99:62" pos:end="99:71">"realized"</literal></expr></argument>, <argument pos:start="99:74" pos:end="99:77"><expr pos:start="99:74" pos:end="99:77"><operator pos:start="99:74" pos:end="99:74">&amp;</operator><name pos:start="99:75" pos:end="99:77">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:24">(<expr pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:15">err</name> <operator pos:start="101:17" pos:end="101:18">!=</operator> <name pos:start="101:20" pos:end="101:23">NULL</name></expr>)</condition> <block pos:start="101:26" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:19">

            <expr_stmt pos:start="103:13" pos:end="103:39"><expr pos:start="103:13" pos:end="103:38"><call pos:start="103:13" pos:end="103:38"><name pos:start="103:13" pos:end="103:27">error_propagate</name><argument_list pos:start="103:28" pos:end="103:38">(<argument pos:start="103:29" pos:end="103:32"><expr pos:start="103:29" pos:end="103:32"><name pos:start="103:29" pos:end="103:32">errp</name></expr></argument>, <argument pos:start="103:35" pos:end="103:37"><expr pos:start="103:35" pos:end="103:37"><name pos:start="103:35" pos:end="103:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="105:13" pos:end="105:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:19">usartbusdev</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <call pos:start="109:23" pos:end="109:46"><name pos:start="109:23" pos:end="109:36">SYS_BUS_DEVICE</name><argument_list pos:start="109:37" pos:end="109:46">(<argument pos:start="109:38" pos:end="109:45"><expr pos:start="109:38" pos:end="109:45"><name pos:start="109:38" pos:end="109:45">usartdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:55"><expr pos:start="111:9" pos:end="111:54"><call pos:start="111:9" pos:end="111:54"><name pos:start="111:9" pos:end="111:23">sysbus_mmio_map</name><argument_list pos:start="111:24" pos:end="111:54">(<argument pos:start="111:25" pos:end="111:35"><expr pos:start="111:25" pos:end="111:35"><name pos:start="111:25" pos:end="111:35">usartbusdev</name></expr></argument>, <argument pos:start="111:38" pos:end="111:38"><expr pos:start="111:38" pos:end="111:38"><literal type="number" pos:start="111:38" pos:end="111:38">0</literal></expr></argument>, <argument pos:start="111:41" pos:end="111:53"><expr pos:start="111:41" pos:end="111:53"><name pos:start="111:41" pos:end="111:53"><name pos:start="111:41" pos:end="111:50">usart_addr</name><index pos:start="111:51" pos:end="111:53">[<expr pos:start="111:52" pos:end="111:52"><name pos:start="111:52" pos:end="111:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:62"><expr pos:start="113:9" pos:end="113:61"><call pos:start="113:9" pos:end="113:61"><name pos:start="113:9" pos:end="113:26">sysbus_connect_irq</name><argument_list pos:start="113:27" pos:end="113:61">(<argument pos:start="113:28" pos:end="113:38"><expr pos:start="113:28" pos:end="113:38"><name pos:start="113:28" pos:end="113:38">usartbusdev</name></expr></argument>, <argument pos:start="113:41" pos:end="113:41"><expr pos:start="113:41" pos:end="113:41"><literal type="number" pos:start="113:41" pos:end="113:41">0</literal></expr></argument>, <argument pos:start="113:44" pos:end="113:60"><expr pos:start="113:44" pos:end="113:60"><name pos:start="113:44" pos:end="113:60"><name pos:start="113:44" pos:end="113:46">pic</name><index pos:start="113:47" pos:end="113:60">[<expr pos:start="113:48" pos:end="113:59"><name pos:start="113:48" pos:end="113:59"><name pos:start="113:48" pos:end="113:56">usart_irq</name><index pos:start="113:57" pos:end="113:59">[<expr pos:start="113:58" pos:end="113:58"><name pos:start="113:58" pos:end="113:58">i</name></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="119:5" pos:end="119:22">/* Timer 2 to 5 */</comment>

    <for pos:start="121:5" pos:end="143:5">for <control pos:start="121:9" pos:end="121:40">(<init pos:start="121:10" pos:end="121:15"><expr pos:start="121:10" pos:end="121:14"><name pos:start="121:10" pos:end="121:10">i</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>;</init> <condition pos:start="121:17" pos:end="121:35"><expr pos:start="121:17" pos:end="121:34"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:19">&lt;</operator> <name pos:start="121:21" pos:end="121:34">STM_NUM_TIMERS</name></expr>;</condition> <incr pos:start="121:37" pos:end="121:39"><expr pos:start="121:37" pos:end="121:39"><name pos:start="121:37" pos:end="121:37">i</name><operator pos:start="121:38" pos:end="121:39">++</operator></expr></incr>)</control> <block pos:start="121:42" pos:end="143:5">{<block_content pos:start="123:9" pos:end="141:62">

        <expr_stmt pos:start="123:9" pos:end="123:42"><expr pos:start="123:9" pos:end="123:41"><name pos:start="123:9" pos:end="123:16">timerdev</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:41"><name pos:start="123:20" pos:end="123:25">DEVICE</name><argument_list pos:start="123:26" pos:end="123:41">(<argument pos:start="123:27" pos:end="123:40"><expr pos:start="123:27" pos:end="123:40"><operator pos:start="123:27" pos:end="123:27">&amp;</operator><operator pos:start="123:28" pos:end="123:28">(</operator><name pos:start="123:29" pos:end="123:39"><name pos:start="123:29" pos:end="123:29">s</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:36">timer</name><index pos:start="123:37" pos:end="123:39">[<expr pos:start="123:38" pos:end="123:38"><name pos:start="123:38" pos:end="123:38">i</name></expr>]</index></name><operator pos:start="123:40" pos:end="123:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:70"><expr pos:start="125:9" pos:end="125:69"><call pos:start="125:9" pos:end="125:69"><name pos:start="125:9" pos:end="125:28">qdev_prop_set_uint64</name><argument_list pos:start="125:29" pos:end="125:69">(<argument pos:start="125:30" pos:end="125:37"><expr pos:start="125:30" pos:end="125:37"><name pos:start="125:30" pos:end="125:37">timerdev</name></expr></argument>, <argument pos:start="125:40" pos:end="125:56"><expr pos:start="125:40" pos:end="125:56"><literal type="string" pos:start="125:40" pos:end="125:56">"clock-frequency"</literal></expr></argument>, <argument pos:start="125:59" pos:end="125:68"><expr pos:start="125:59" pos:end="125:68"><literal type="number" pos:start="125:59" pos:end="125:68">1000000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:79"><expr pos:start="127:9" pos:end="127:78"><call pos:start="127:9" pos:end="127:78"><name pos:start="127:9" pos:end="127:32">object_property_set_bool</name><argument_list pos:start="127:33" pos:end="127:78">(<argument pos:start="127:34" pos:end="127:53"><expr pos:start="127:34" pos:end="127:53"><call pos:start="127:34" pos:end="127:53"><name pos:start="127:34" pos:end="127:39">OBJECT</name><argument_list pos:start="127:40" pos:end="127:53">(<argument pos:start="127:41" pos:end="127:52"><expr pos:start="127:41" pos:end="127:52"><operator pos:start="127:41" pos:end="127:41">&amp;</operator><name pos:start="127:42" pos:end="127:52"><name pos:start="127:42" pos:end="127:42">s</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:49">timer</name><index pos:start="127:50" pos:end="127:52">[<expr pos:start="127:51" pos:end="127:51"><name pos:start="127:51" pos:end="127:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:56" pos:end="127:59"><expr pos:start="127:56" pos:end="127:59"><name pos:start="127:56" pos:end="127:59">true</name></expr></argument>, <argument pos:start="127:62" pos:end="127:71"><expr pos:start="127:62" pos:end="127:71"><literal type="string" pos:start="127:62" pos:end="127:71">"realized"</literal></expr></argument>, <argument pos:start="127:74" pos:end="127:77"><expr pos:start="127:74" pos:end="127:77"><operator pos:start="127:74" pos:end="127:74">&amp;</operator><name pos:start="127:75" pos:end="127:77">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="135:9"><if pos:start="129:9" pos:end="135:9">if <condition pos:start="129:12" pos:end="129:24">(<expr pos:start="129:13" pos:end="129:23"><name pos:start="129:13" pos:end="129:15">err</name> <operator pos:start="129:17" pos:end="129:18">!=</operator> <name pos:start="129:20" pos:end="129:23">NULL</name></expr>)</condition> <block pos:start="129:26" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:19">

            <expr_stmt pos:start="131:13" pos:end="131:39"><expr pos:start="131:13" pos:end="131:38"><call pos:start="131:13" pos:end="131:38"><name pos:start="131:13" pos:end="131:27">error_propagate</name><argument_list pos:start="131:28" pos:end="131:38">(<argument pos:start="131:29" pos:end="131:32"><expr pos:start="131:29" pos:end="131:32"><name pos:start="131:29" pos:end="131:32">errp</name></expr></argument>, <argument pos:start="131:35" pos:end="131:37"><expr pos:start="131:35" pos:end="131:37"><name pos:start="131:35" pos:end="131:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:47"><expr pos:start="137:9" pos:end="137:46"><name pos:start="137:9" pos:end="137:19">timerbusdev</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:46"><name pos:start="137:23" pos:end="137:36">SYS_BUS_DEVICE</name><argument_list pos:start="137:37" pos:end="137:46">(<argument pos:start="137:38" pos:end="137:45"><expr pos:start="137:38" pos:end="137:45"><name pos:start="137:38" pos:end="137:45">timerdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:55"><expr pos:start="139:9" pos:end="139:54"><call pos:start="139:9" pos:end="139:54"><name pos:start="139:9" pos:end="139:23">sysbus_mmio_map</name><argument_list pos:start="139:24" pos:end="139:54">(<argument pos:start="139:25" pos:end="139:35"><expr pos:start="139:25" pos:end="139:35"><name pos:start="139:25" pos:end="139:35">timerbusdev</name></expr></argument>, <argument pos:start="139:38" pos:end="139:38"><expr pos:start="139:38" pos:end="139:38"><literal type="number" pos:start="139:38" pos:end="139:38">0</literal></expr></argument>, <argument pos:start="139:41" pos:end="139:53"><expr pos:start="139:41" pos:end="139:53"><name pos:start="139:41" pos:end="139:53"><name pos:start="139:41" pos:end="139:50">timer_addr</name><index pos:start="139:51" pos:end="139:53">[<expr pos:start="139:52" pos:end="139:52"><name pos:start="139:52" pos:end="139:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:62"><expr pos:start="141:9" pos:end="141:61"><call pos:start="141:9" pos:end="141:61"><name pos:start="141:9" pos:end="141:26">sysbus_connect_irq</name><argument_list pos:start="141:27" pos:end="141:61">(<argument pos:start="141:28" pos:end="141:38"><expr pos:start="141:28" pos:end="141:38"><name pos:start="141:28" pos:end="141:38">timerbusdev</name></expr></argument>, <argument pos:start="141:41" pos:end="141:41"><expr pos:start="141:41" pos:end="141:41"><literal type="number" pos:start="141:41" pos:end="141:41">0</literal></expr></argument>, <argument pos:start="141:44" pos:end="141:60"><expr pos:start="141:44" pos:end="141:60"><name pos:start="141:44" pos:end="141:60"><name pos:start="141:44" pos:end="141:46">pic</name><index pos:start="141:47" pos:end="141:60">[<expr pos:start="141:48" pos:end="141:59"><name pos:start="141:48" pos:end="141:59"><name pos:start="141:48" pos:end="141:56">timer_irq</name><index pos:start="141:57" pos:end="141:59">[<expr pos:start="141:58" pos:end="141:58"><name pos:start="141:58" pos:end="141:58">i</name></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
