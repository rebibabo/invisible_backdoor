<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17221.c" pos:tabs="8"><function pos:start="1:1" pos:end="649:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:16">FUNC</name></type>(<name pos:start="1:18" pos:end="1:27">intra_pred</name>)<parameter_list pos:start="1:29" pos:end="1:86">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">HEVCContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:51"><decl pos:start="1:46" pos:end="1:51"><type pos:start="1:46" pos:end="1:51"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:51">x0</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:59"><decl pos:start="1:54" pos:end="1:59"><type pos:start="1:54" pos:end="1:59"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:59">y0</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:74"><decl pos:start="1:62" pos:end="1:74"><type pos:start="1:62" pos:end="1:74"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:74">log2_size</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:85"><decl pos:start="1:77" pos:end="1:85"><type pos:start="1:77" pos:end="1:85"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:85">c_idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="649:1">{<block_content pos:start="79:5" pos:end="647:5">

<cpp:define pos:start="5:1" pos:end="7:37">#<cpp:directive pos:start="5:2" pos:end="5:7">define</cpp:directive> <cpp:macro pos:start="5:9" pos:end="5:13"><name pos:start="5:9" pos:end="5:10">PU</name><parameter_list pos:start="5:11" pos:end="5:13">(<parameter pos:start="5:12" pos:end="5:12"><type pos:start="5:12" pos:end="5:12"><name pos:start="5:12" pos:end="5:12">x</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="7:5" pos:end="7:37">((x) &gt;&gt; s-&gt;sps-&gt;log2_min_pu_size)</cpp:value></cpp:define>

<cpp:define pos:start="9:1" pos:end="11:54">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:11">MVF</name><parameter_list pos:start="9:12" pos:end="9:17">(<parameter pos:start="9:13" pos:end="9:13"><type pos:start="9:13" pos:end="9:13"><name pos:start="9:13" pos:end="9:13">x</name></type></parameter>, <parameter pos:start="9:16" pos:end="9:16"><type pos:start="9:16" pos:end="9:16"><name pos:start="9:16" pos:end="9:16">y</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="11:5" pos:end="11:54">(s-&gt;ref-&gt;tab_mvf[(x) + (y) * pic_width_in_min_pu])</cpp:value></cpp:define>

<cpp:define pos:start="13:1" pos:end="15:59">#<cpp:directive pos:start="13:2" pos:end="13:7">define</cpp:directive> <cpp:macro pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:14">MVF_PU</name><parameter_list pos:start="13:15" pos:end="13:20">(<parameter pos:start="13:16" pos:end="13:16"><type pos:start="13:16" pos:end="13:16"><name pos:start="13:16" pos:end="13:16">x</name></type></parameter>, <parameter pos:start="13:19" pos:end="13:19"><type pos:start="13:19" pos:end="13:19"><name pos:start="13:19" pos:end="13:19">y</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="15:5" pos:end="15:59">MVF(PU(x0 + ((x) &lt;&lt; hshift)), PU(y0 + ((y) &lt;&lt; vshift)))</cpp:value></cpp:define>

<cpp:define pos:start="17:1" pos:end="19:25">#<cpp:directive pos:start="17:2" pos:end="17:7">define</cpp:directive> <cpp:macro pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:16">IS_INTRA</name><parameter_list pos:start="17:17" pos:end="17:22">(<parameter pos:start="17:18" pos:end="17:18"><type pos:start="17:18" pos:end="17:18"><name pos:start="17:18" pos:end="17:18">x</name></type></parameter>, <parameter pos:start="17:21" pos:end="17:21"><type pos:start="17:21" pos:end="17:21"><name pos:start="17:21" pos:end="17:21">y</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="19:5" pos:end="19:25">MVF_PU(x, y).is_intra</cpp:value></cpp:define>

<cpp:define pos:start="21:1" pos:end="23:60">#<cpp:directive pos:start="21:2" pos:end="21:7">define</cpp:directive> <cpp:macro pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:22">MIN_TB_ADDR_ZS</name><parameter_list pos:start="21:23" pos:end="21:28">(<parameter pos:start="21:24" pos:end="21:24"><type pos:start="21:24" pos:end="21:24"><name pos:start="21:24" pos:end="21:24">x</name></type></parameter>, <parameter pos:start="21:27" pos:end="21:27"><type pos:start="21:27" pos:end="21:27"><name pos:start="21:27" pos:end="21:27">y</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="23:5" pos:end="23:60">s-&gt;pps-&gt;min_tb_addr_zs[(y) * s-&gt;sps-&gt;min_tb_width + (x)]</cpp:value></cpp:define>

<cpp:define pos:start="25:1" pos:end="29:31">#<cpp:directive pos:start="25:2" pos:end="25:7">define</cpp:directive> <cpp:macro pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:19">EXTEND_LEFT</name><parameter_list pos:start="25:20" pos:end="25:39">(<parameter pos:start="25:21" pos:end="25:23"><type pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">ptr</name></type></parameter>, <parameter pos:start="25:26" pos:end="25:30"><type pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:30">start</name></type></parameter>, <parameter pos:start="25:33" pos:end="25:38"><type pos:start="25:33" pos:end="25:38"><name pos:start="25:33" pos:end="25:38">length</name></type></parameter>)</parameter_list></cpp:macro> \

        <cpp:value pos:start="27:9" pos:end="29:31">for (i = (start); i &gt; (start) - (length); i--) \

            ptr[i - 1] = ptr[i]</cpp:value></cpp:define>

<cpp:define pos:start="31:1" pos:end="35:31">#<cpp:directive pos:start="31:2" pos:end="31:7">define</cpp:directive> <cpp:macro pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:20">EXTEND_RIGHT</name><parameter_list pos:start="31:21" pos:end="31:40">(<parameter pos:start="31:22" pos:end="31:24"><type pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">ptr</name></type></parameter>, <parameter pos:start="31:27" pos:end="31:31"><type pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:31">start</name></type></parameter>, <parameter pos:start="31:34" pos:end="31:39"><type pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:39">length</name></type></parameter>)</parameter_list></cpp:macro> \

        <cpp:value pos:start="33:9" pos:end="35:31">for (i = (start); i &lt; (start) + (length); i++) \

            ptr[i] = ptr[i - 1]</cpp:value></cpp:define>

<cpp:define pos:start="37:1" pos:end="37:71">#<cpp:directive pos:start="37:2" pos:end="37:7">define</cpp:directive> <cpp:macro pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:17">EXTEND_UP</name><parameter_list pos:start="37:18" pos:end="37:37">(<parameter pos:start="37:19" pos:end="37:21"><type pos:start="37:19" pos:end="37:21"><name pos:start="37:19" pos:end="37:21">ptr</name></type></parameter>, <parameter pos:start="37:24" pos:end="37:28"><type pos:start="37:24" pos:end="37:28"><name pos:start="37:24" pos:end="37:28">start</name></type></parameter>, <parameter pos:start="37:31" pos:end="37:36"><type pos:start="37:31" pos:end="37:36"><name pos:start="37:31" pos:end="37:36">length</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value pos:start="37:41" pos:end="37:71">EXTEND_LEFT(ptr, start, length)</cpp:value></cpp:define>

<cpp:define pos:start="39:1" pos:end="39:72">#<cpp:directive pos:start="39:2" pos:end="39:7">define</cpp:directive> <cpp:macro pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:19">EXTEND_DOWN</name><parameter_list pos:start="39:20" pos:end="39:39">(<parameter pos:start="39:21" pos:end="39:23"><type pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:23">ptr</name></type></parameter>, <parameter pos:start="39:26" pos:end="39:30"><type pos:start="39:26" pos:end="39:30"><name pos:start="39:26" pos:end="39:30">start</name></type></parameter>, <parameter pos:start="39:33" pos:end="39:38"><type pos:start="39:33" pos:end="39:38"><name pos:start="39:33" pos:end="39:38">length</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="39:41" pos:end="39:72">EXTEND_RIGHT(ptr, start, length)</cpp:value></cpp:define>

<cpp:define pos:start="41:1" pos:end="47:35">#<cpp:directive pos:start="41:2" pos:end="41:7">define</cpp:directive> <cpp:macro pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:23">EXTEND_LEFT_CIP</name><parameter_list pos:start="41:24" pos:end="41:43">(<parameter pos:start="41:25" pos:end="41:27"><type pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:27">ptr</name></type></parameter>, <parameter pos:start="41:30" pos:end="41:34"><type pos:start="41:30" pos:end="41:34"><name pos:start="41:30" pos:end="41:34">start</name></type></parameter>, <parameter pos:start="41:37" pos:end="41:42"><type pos:start="41:37" pos:end="41:42"><name pos:start="41:37" pos:end="41:42">length</name></type></parameter>)</parameter_list></cpp:macro> \

        <cpp:value pos:start="43:9" pos:end="47:35">for (i = (start); i &gt; (start) - (length); i--) \

            if (!IS_INTRA(i - 1, -1)) \

                ptr[i - 1] = ptr[i]</cpp:value></cpp:define>

<cpp:define pos:start="49:1" pos:end="55:35">#<cpp:directive pos:start="49:2" pos:end="49:7">define</cpp:directive> <cpp:macro pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:24">EXTEND_RIGHT_CIP</name><parameter_list pos:start="49:25" pos:end="49:44">(<parameter pos:start="49:26" pos:end="49:28"><type pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">ptr</name></type></parameter>, <parameter pos:start="49:31" pos:end="49:35"><type pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:35">start</name></type></parameter>, <parameter pos:start="49:38" pos:end="49:43"><type pos:start="49:38" pos:end="49:43"><name pos:start="49:38" pos:end="49:43">length</name></type></parameter>)</parameter_list></cpp:macro> \

        <cpp:value pos:start="51:9" pos:end="55:35">for (i = (start); i &lt; (start) + (length); i++) \

            if (!IS_INTRA(i, -1)) \

                ptr[i] = ptr[i - 1]</cpp:value></cpp:define>

<cpp:define pos:start="57:1" pos:end="63:35">#<cpp:directive pos:start="57:2" pos:end="57:7">define</cpp:directive> <cpp:macro pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:21">EXTEND_UP_CIP</name><parameter_list pos:start="57:22" pos:end="57:41">(<parameter pos:start="57:23" pos:end="57:25"><type pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">ptr</name></type></parameter>, <parameter pos:start="57:28" pos:end="57:32"><type pos:start="57:28" pos:end="57:32"><name pos:start="57:28" pos:end="57:32">start</name></type></parameter>, <parameter pos:start="57:35" pos:end="57:40"><type pos:start="57:35" pos:end="57:40"><name pos:start="57:35" pos:end="57:40">length</name></type></parameter>)</parameter_list></cpp:macro> \

        <cpp:value pos:start="59:9" pos:end="63:35">for (i = (start); i &gt; (start) - (length); i--) \

            if (!IS_INTRA(-1, i - 1)) \

                ptr[i - 1] = ptr[i]</cpp:value></cpp:define>

<cpp:define pos:start="65:1" pos:end="69:31">#<cpp:directive pos:start="65:2" pos:end="65:7">define</cpp:directive> <cpp:macro pos:start="65:9" pos:end="65:43"><name pos:start="65:9" pos:end="65:23">EXTEND_UP_CIP_0</name><parameter_list pos:start="65:24" pos:end="65:43">(<parameter pos:start="65:25" pos:end="65:27"><type pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:27">ptr</name></type></parameter>, <parameter pos:start="65:30" pos:end="65:34"><type pos:start="65:30" pos:end="65:34"><name pos:start="65:30" pos:end="65:34">start</name></type></parameter>, <parameter pos:start="65:37" pos:end="65:42"><type pos:start="65:37" pos:end="65:42"><name pos:start="65:37" pos:end="65:42">length</name></type></parameter>)</parameter_list></cpp:macro> \

        <cpp:value pos:start="67:9" pos:end="69:31">for (i = (start); i &gt; (start) - (length); i--) \

            ptr[i - 1] = ptr[i]</cpp:value></cpp:define>

<cpp:define pos:start="71:1" pos:end="77:35">#<cpp:directive pos:start="71:2" pos:end="71:7">define</cpp:directive> <cpp:macro pos:start="71:9" pos:end="71:43"><name pos:start="71:9" pos:end="71:23">EXTEND_DOWN_CIP</name><parameter_list pos:start="71:24" pos:end="71:43">(<parameter pos:start="71:25" pos:end="71:27"><type pos:start="71:25" pos:end="71:27"><name pos:start="71:25" pos:end="71:27">ptr</name></type></parameter>, <parameter pos:start="71:30" pos:end="71:34"><type pos:start="71:30" pos:end="71:34"><name pos:start="71:30" pos:end="71:34">start</name></type></parameter>, <parameter pos:start="71:37" pos:end="71:42"><type pos:start="71:37" pos:end="71:42"><name pos:start="71:37" pos:end="71:42">length</name></type></parameter>)</parameter_list></cpp:macro> \

        <cpp:value pos:start="73:9" pos:end="77:35">for (i = (start); i &lt; (start) + (length); i++) \

            if (!IS_INTRA(-1, i)) \

                ptr[i] = ptr[i - 1]</cpp:value></cpp:define>

    <decl_stmt pos:start="79:5" pos:end="79:37"><decl pos:start="79:5" pos:end="79:36"><type pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:20">HEVCLocalContext</name> <modifier pos:start="79:22" pos:end="79:22">*</modifier></type><name pos:start="79:23" pos:end="79:24">lc</name> <init pos:start="79:26" pos:end="79:36">= <expr pos:start="79:28" pos:end="79:36"><name pos:start="79:28" pos:end="79:36"><name pos:start="79:28" pos:end="79:28">s</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="81:5" pos:end="81:10"><decl pos:start="81:5" pos:end="81:9"><type pos:start="81:5" pos:end="81:7"><name pos:start="81:5" pos:end="81:7">int</name></type> <name pos:start="81:9" pos:end="81:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="83:5" pos:end="83:39"><decl pos:start="83:5" pos:end="83:38"><type pos:start="83:5" pos:end="83:7"><name pos:start="83:5" pos:end="83:7">int</name></type> <name pos:start="83:9" pos:end="83:14">hshift</name> <init pos:start="83:16" pos:end="83:38">= <expr pos:start="83:18" pos:end="83:38"><name pos:start="83:18" pos:end="83:38"><name pos:start="83:18" pos:end="83:18">s</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:23">sps</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:31">hshift</name><index pos:start="83:32" pos:end="83:38">[<expr pos:start="83:33" pos:end="83:37"><name pos:start="83:33" pos:end="83:37">c_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="85:5" pos:end="85:39"><decl pos:start="85:5" pos:end="85:38"><type pos:start="85:5" pos:end="85:7"><name pos:start="85:5" pos:end="85:7">int</name></type> <name pos:start="85:9" pos:end="85:14">vshift</name> <init pos:start="85:16" pos:end="85:38">= <expr pos:start="85:18" pos:end="85:38"><name pos:start="85:18" pos:end="85:38"><name pos:start="85:18" pos:end="85:18">s</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:23">sps</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:31">vshift</name><index pos:start="85:32" pos:end="85:38">[<expr pos:start="85:33" pos:end="85:37"><name pos:start="85:33" pos:end="85:37">c_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="87:5" pos:end="87:32"><decl pos:start="87:5" pos:end="87:31"><type pos:start="87:5" pos:end="87:7"><name pos:start="87:5" pos:end="87:7">int</name></type> <name pos:start="87:9" pos:end="87:12">size</name> <init pos:start="87:14" pos:end="87:31">= <expr pos:start="87:16" pos:end="87:31"><operator pos:start="87:16" pos:end="87:16">(</operator><literal type="number" pos:start="87:17" pos:end="87:17">1</literal> <operator pos:start="87:19" pos:end="87:20">&lt;&lt;</operator> <name pos:start="87:22" pos:end="87:30">log2_size</name><operator pos:start="87:31" pos:end="87:31">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="89:5" pos:end="89:38"><decl pos:start="89:5" pos:end="89:37"><type pos:start="89:5" pos:end="89:7"><name pos:start="89:5" pos:end="89:7">int</name></type> <name pos:start="89:9" pos:end="89:20">size_in_luma</name> <init pos:start="89:22" pos:end="89:37">= <expr pos:start="89:24" pos:end="89:37"><name pos:start="89:24" pos:end="89:27">size</name> <operator pos:start="89:29" pos:end="89:30">&lt;&lt;</operator> <name pos:start="89:32" pos:end="89:37">hshift</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="91:5" pos:end="91:76"><decl pos:start="91:5" pos:end="91:75"><type pos:start="91:5" pos:end="91:7"><name pos:start="91:5" pos:end="91:7">int</name></type> <name pos:start="91:9" pos:end="91:19">size_in_tbs</name> <init pos:start="91:21" pos:end="91:75">= <expr pos:start="91:23" pos:end="91:75"><name pos:start="91:23" pos:end="91:34">size_in_luma</name> <operator pos:start="91:36" pos:end="91:37">&gt;&gt;</operator> <name pos:start="91:39" pos:end="91:75"><name pos:start="91:39" pos:end="91:39">s</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:44">sps</name><operator pos:start="91:45" pos:end="91:46">-&gt;</operator><name pos:start="91:47" pos:end="91:75">log2_min_transform_block_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="93:5" pos:end="93:25"><decl pos:start="93:5" pos:end="93:24"><type pos:start="93:5" pos:end="93:7"><name pos:start="93:5" pos:end="93:7">int</name></type> <name pos:start="93:9" pos:end="93:9">x</name> <init pos:start="93:11" pos:end="93:24">= <expr pos:start="93:13" pos:end="93:24"><name pos:start="93:13" pos:end="93:14">x0</name> <operator pos:start="93:16" pos:end="93:17">&gt;&gt;</operator> <name pos:start="93:19" pos:end="93:24">hshift</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="95:5" pos:end="95:25"><decl pos:start="95:5" pos:end="95:24"><type pos:start="95:5" pos:end="95:7"><name pos:start="95:5" pos:end="95:7">int</name></type> <name pos:start="95:9" pos:end="95:9">y</name> <init pos:start="95:11" pos:end="95:24">= <expr pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:14">y0</name> <operator pos:start="95:16" pos:end="95:17">&gt;&gt;</operator> <name pos:start="95:19" pos:end="95:24">vshift</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="97:5" pos:end="97:59"><decl pos:start="97:5" pos:end="97:58"><type pos:start="97:5" pos:end="97:7"><name pos:start="97:5" pos:end="97:7">int</name></type> <name pos:start="97:9" pos:end="97:12">x_tb</name> <init pos:start="97:14" pos:end="97:58">= <expr pos:start="97:16" pos:end="97:58"><name pos:start="97:16" pos:end="97:17">x0</name> <operator pos:start="97:19" pos:end="97:20">&gt;&gt;</operator> <name pos:start="97:22" pos:end="97:58"><name pos:start="97:22" pos:end="97:22">s</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:27">sps</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:58">log2_min_transform_block_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="99:5" pos:end="99:59"><decl pos:start="99:5" pos:end="99:58"><type pos:start="99:5" pos:end="99:7"><name pos:start="99:5" pos:end="99:7">int</name></type> <name pos:start="99:9" pos:end="99:12">y_tb</name> <init pos:start="99:14" pos:end="99:58">= <expr pos:start="99:16" pos:end="99:58"><name pos:start="99:16" pos:end="99:17">y0</name> <operator pos:start="99:19" pos:end="99:20">&gt;&gt;</operator> <name pos:start="99:22" pos:end="99:58"><name pos:start="99:22" pos:end="99:22">s</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:27">sps</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:58">log2_min_transform_block_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="101:5" pos:end="101:49"><decl pos:start="101:5" pos:end="101:48"><type pos:start="101:5" pos:end="101:7"><name pos:start="101:5" pos:end="101:7">int</name></type> <name pos:start="101:9" pos:end="101:19">cur_tb_addr</name> <init pos:start="101:21" pos:end="101:48">= <expr pos:start="101:23" pos:end="101:48"><call pos:start="101:23" pos:end="101:48"><name pos:start="101:23" pos:end="101:36">MIN_TB_ADDR_ZS</name><argument_list pos:start="101:37" pos:end="101:48">(<argument pos:start="101:38" pos:end="101:41"><expr pos:start="101:38" pos:end="101:41"><name pos:start="101:38" pos:end="101:41">x_tb</name></expr></argument>, <argument pos:start="101:44" pos:end="101:47"><expr pos:start="101:44" pos:end="101:47"><name pos:start="101:44" pos:end="101:47">y_tb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="105:5" pos:end="105:65"><decl pos:start="105:5" pos:end="105:64"><type pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:13">ptrdiff_t</name></type> <name pos:start="105:15" pos:end="105:20">stride</name> <init pos:start="105:22" pos:end="105:64">= <expr pos:start="105:24" pos:end="105:64"><name pos:start="105:24" pos:end="105:48"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:31">frame</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:41">linesize</name><index pos:start="105:42" pos:end="105:48">[<expr pos:start="105:43" pos:end="105:47"><name pos:start="105:43" pos:end="105:47">c_idx</name></expr>]</index></name> <operator pos:start="105:50" pos:end="105:50">/</operator> <sizeof pos:start="105:52" pos:end="105:64">sizeof<argument_list pos:start="105:58" pos:end="105:64">(<argument pos:start="105:59" pos:end="105:63"><expr pos:start="105:59" pos:end="105:63"><name pos:start="105:59" pos:end="105:63">pixel</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="107:5" pos:end="107:64"><decl pos:start="107:5" pos:end="107:63"><type pos:start="107:5" pos:end="107:11"><name pos:start="107:5" pos:end="107:9">pixel</name> <modifier pos:start="107:11" pos:end="107:11">*</modifier></type><name pos:start="107:12" pos:end="107:14">src</name> <init pos:start="107:16" pos:end="107:63">= <expr pos:start="107:18" pos:end="107:63"><operator pos:start="107:18" pos:end="107:18">(</operator><name pos:start="107:19" pos:end="107:23">pixel</name><operator pos:start="107:24" pos:end="107:24">*</operator><operator pos:start="107:25" pos:end="107:25">)</operator><name pos:start="107:26" pos:end="107:46"><name pos:start="107:26" pos:end="107:26">s</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:33">frame</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:39">data</name><index pos:start="107:40" pos:end="107:46">[<expr pos:start="107:41" pos:end="107:45"><name pos:start="107:41" pos:end="107:45">c_idx</name></expr>]</index></name> <operator pos:start="107:48" pos:end="107:48">+</operator> <name pos:start="107:50" pos:end="107:50">x</name> <operator pos:start="107:52" pos:end="107:52">+</operator> <name pos:start="107:54" pos:end="107:54">y</name> <operator pos:start="107:56" pos:end="107:56">*</operator> <name pos:start="107:58" pos:end="107:63">stride</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="111:5" pos:end="111:48"><decl pos:start="111:5" pos:end="111:47"><type pos:start="111:5" pos:end="111:7"><name pos:start="111:5" pos:end="111:7">int</name></type> <name pos:start="111:9" pos:end="111:27">pic_width_in_min_pu</name> <init pos:start="111:29" pos:end="111:47">= <expr pos:start="111:31" pos:end="111:47"><call pos:start="111:31" pos:end="111:47"><name pos:start="111:31" pos:end="111:32">PU</name><argument_list pos:start="111:33" pos:end="111:47">(<argument pos:start="111:34" pos:end="111:46"><expr pos:start="111:34" pos:end="111:46"><name pos:start="111:34" pos:end="111:46"><name pos:start="111:34" pos:end="111:34">s</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:39">sps</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:46">width</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="115:5" pos:end="117:57"><decl pos:start="115:5" pos:end="117:56"><type pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:8">enum</name> <name pos:start="115:10" pos:end="115:22">IntraPredMode</name></name></type> <name pos:start="115:24" pos:end="115:27">mode</name> <init pos:start="115:29" pos:end="117:56">= <expr pos:start="115:31" pos:end="117:56"><ternary pos:start="115:31" pos:end="117:56"><condition pos:start="115:31" pos:end="115:37"><expr pos:start="115:31" pos:end="115:35"><name pos:start="115:31" pos:end="115:35">c_idx</name></expr> ?</condition><then pos:start="115:39" pos:end="115:62"> <expr pos:start="115:39" pos:end="115:62"><name pos:start="115:39" pos:end="115:62"><name pos:start="115:39" pos:end="115:40">lc</name><operator pos:start="115:41" pos:end="115:42">-&gt;</operator><name pos:start="115:43" pos:end="115:44">pu</name><operator pos:start="115:45" pos:end="115:45">.</operator><name pos:start="115:46" pos:end="115:62">intra_pred_mode_c</name></name></expr> </then><else pos:start="115:64" pos:end="117:56">:

                              <expr pos:start="117:31" pos:end="117:56"><name pos:start="117:31" pos:end="117:56"><name pos:start="117:31" pos:end="117:32">lc</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:36">tu</name><operator pos:start="117:37" pos:end="117:37">.</operator><name pos:start="117:38" pos:end="117:56">cur_intra_pred_mode</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="121:5" pos:end="121:42"><decl pos:start="121:5" pos:end="121:41"><type pos:start="121:5" pos:end="121:9"><name pos:start="121:5" pos:end="121:9">pixel</name></type> <name pos:start="121:11" pos:end="121:41"><name pos:start="121:11" pos:end="121:20">left_array</name><index pos:start="121:21" pos:end="121:41">[<expr pos:start="121:22" pos:end="121:40"><literal type="number" pos:start="121:22" pos:end="121:22">2</literal> <operator pos:start="121:24" pos:end="121:24">*</operator> <name pos:start="121:26" pos:end="121:36">MAX_TB_SIZE</name> <operator pos:start="121:38" pos:end="121:38">+</operator> <literal type="number" pos:start="121:40" pos:end="121:40">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="123:5" pos:end="123:51"><decl pos:start="123:5" pos:end="123:50"><type pos:start="123:5" pos:end="123:9"><name pos:start="123:5" pos:end="123:9">pixel</name></type> <name pos:start="123:11" pos:end="123:50"><name pos:start="123:11" pos:end="123:29">filtered_left_array</name><index pos:start="123:30" pos:end="123:50">[<expr pos:start="123:31" pos:end="123:49"><literal type="number" pos:start="123:31" pos:end="123:31">2</literal> <operator pos:start="123:33" pos:end="123:33">*</operator> <name pos:start="123:35" pos:end="123:45">MAX_TB_SIZE</name> <operator pos:start="123:47" pos:end="123:47">+</operator> <literal type="number" pos:start="123:49" pos:end="123:49">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="125:5" pos:end="125:41"><decl pos:start="125:5" pos:end="125:40"><type pos:start="125:5" pos:end="125:9"><name pos:start="125:5" pos:end="125:9">pixel</name></type> <name pos:start="125:11" pos:end="125:40"><name pos:start="125:11" pos:end="125:19">top_array</name><index pos:start="125:20" pos:end="125:40">[<expr pos:start="125:21" pos:end="125:39"><literal type="number" pos:start="125:21" pos:end="125:21">2</literal> <operator pos:start="125:23" pos:end="125:23">*</operator> <name pos:start="125:25" pos:end="125:35">MAX_TB_SIZE</name> <operator pos:start="125:37" pos:end="125:37">+</operator> <literal type="number" pos:start="125:39" pos:end="125:39">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="127:5" pos:end="127:50"><decl pos:start="127:5" pos:end="127:49"><type pos:start="127:5" pos:end="127:9"><name pos:start="127:5" pos:end="127:9">pixel</name></type> <name pos:start="127:11" pos:end="127:49"><name pos:start="127:11" pos:end="127:28">filtered_top_array</name><index pos:start="127:29" pos:end="127:49">[<expr pos:start="127:30" pos:end="127:48"><literal type="number" pos:start="127:30" pos:end="127:30">2</literal> <operator pos:start="127:32" pos:end="127:32">*</operator> <name pos:start="127:34" pos:end="127:44">MAX_TB_SIZE</name> <operator pos:start="127:46" pos:end="127:46">+</operator> <literal type="number" pos:start="127:48" pos:end="127:48">1</literal></expr>]</index></name></decl>;</decl_stmt>



    <decl_stmt pos:start="131:5" pos:end="131:42"><decl pos:start="131:5" pos:end="131:41"><type pos:start="131:5" pos:end="131:11"><name pos:start="131:5" pos:end="131:9">pixel</name> <modifier pos:start="131:11" pos:end="131:11">*</modifier></type><name pos:start="131:12" pos:end="131:15">left</name>          <init pos:start="131:26" pos:end="131:41">= <expr pos:start="131:28" pos:end="131:41"><name pos:start="131:28" pos:end="131:37">left_array</name> <operator pos:start="131:39" pos:end="131:39">+</operator> <literal type="number" pos:start="131:41" pos:end="131:41">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="133:5" pos:end="133:41"><decl pos:start="133:5" pos:end="133:40"><type pos:start="133:5" pos:end="133:11"><name pos:start="133:5" pos:end="133:9">pixel</name> <modifier pos:start="133:11" pos:end="133:11">*</modifier></type><name pos:start="133:12" pos:end="133:14">top</name>           <init pos:start="133:26" pos:end="133:40">= <expr pos:start="133:28" pos:end="133:40"><name pos:start="133:28" pos:end="133:36">top_array</name> <operator pos:start="133:38" pos:end="133:38">+</operator> <literal type="number" pos:start="133:40" pos:end="133:40">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="135:5" pos:end="135:51"><decl pos:start="135:5" pos:end="135:50"><type pos:start="135:5" pos:end="135:11"><name pos:start="135:5" pos:end="135:9">pixel</name> <modifier pos:start="135:11" pos:end="135:11">*</modifier></type><name pos:start="135:12" pos:end="135:24">filtered_left</name> <init pos:start="135:26" pos:end="135:50">= <expr pos:start="135:28" pos:end="135:50"><name pos:start="135:28" pos:end="135:46">filtered_left_array</name> <operator pos:start="135:48" pos:end="135:48">+</operator> <literal type="number" pos:start="135:50" pos:end="135:50">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="137:5" pos:end="137:50"><decl pos:start="137:5" pos:end="137:49"><type pos:start="137:5" pos:end="137:11"><name pos:start="137:5" pos:end="137:9">pixel</name> <modifier pos:start="137:11" pos:end="137:11">*</modifier></type><name pos:start="137:12" pos:end="137:23">filtered_top</name>  <init pos:start="137:26" pos:end="137:49">= <expr pos:start="137:28" pos:end="137:49"><name pos:start="137:28" pos:end="137:45">filtered_top_array</name> <operator pos:start="137:47" pos:end="137:47">+</operator> <literal type="number" pos:start="137:49" pos:end="137:49">1</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="141:5" pos:end="141:113"><decl pos:start="141:5" pos:end="141:112"><type pos:start="141:5" pos:end="141:7"><name pos:start="141:5" pos:end="141:7">int</name></type> <name pos:start="141:9" pos:end="141:24">cand_bottom_left</name> <init pos:start="141:26" pos:end="141:112">= <expr pos:start="141:28" pos:end="141:112"><name pos:start="141:28" pos:end="141:50"><name pos:start="141:28" pos:end="141:29">lc</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:33">na</name><operator pos:start="141:34" pos:end="141:34">.</operator><name pos:start="141:35" pos:end="141:50">cand_bottom_left</name></name> <operator pos:start="141:52" pos:end="141:53">&amp;&amp;</operator> <name pos:start="141:55" pos:end="141:65">cur_tb_addr</name> <operator pos:start="141:67" pos:end="141:67">&gt;</operator> <call pos:start="141:69" pos:end="141:112"><name pos:start="141:69" pos:end="141:82">MIN_TB_ADDR_ZS</name><argument_list pos:start="141:83" pos:end="141:112">(<argument pos:start="141:84" pos:end="141:91"><expr pos:start="141:84" pos:end="141:91"><name pos:start="141:84" pos:end="141:87">x_tb</name> <operator pos:start="141:89" pos:end="141:89">-</operator> <literal type="number" pos:start="141:91" pos:end="141:91">1</literal></expr></argument>, <argument pos:start="141:94" pos:end="141:111"><expr pos:start="141:94" pos:end="141:111"><name pos:start="141:94" pos:end="141:97">y_tb</name> <operator pos:start="141:99" pos:end="141:99">+</operator> <name pos:start="141:101" pos:end="141:111">size_in_tbs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="143:5" pos:end="143:44"><decl pos:start="143:5" pos:end="143:43"><type pos:start="143:5" pos:end="143:7"><name pos:start="143:5" pos:end="143:7">int</name></type> <name pos:start="143:9" pos:end="143:17">cand_left</name>        <init pos:start="143:26" pos:end="143:43">= <expr pos:start="143:28" pos:end="143:43"><name pos:start="143:28" pos:end="143:43"><name pos:start="143:28" pos:end="143:29">lc</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:33">na</name><operator pos:start="143:34" pos:end="143:34">.</operator><name pos:start="143:35" pos:end="143:43">cand_left</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="145:5" pos:end="145:47"><decl pos:start="145:5" pos:end="145:46"><type pos:start="145:5" pos:end="145:7"><name pos:start="145:5" pos:end="145:7">int</name></type> <name pos:start="145:9" pos:end="145:20">cand_up_left</name>     <init pos:start="145:26" pos:end="145:46">= <expr pos:start="145:28" pos:end="145:46"><name pos:start="145:28" pos:end="145:46"><name pos:start="145:28" pos:end="145:29">lc</name><operator pos:start="145:30" pos:end="145:31">-&gt;</operator><name pos:start="145:32" pos:end="145:33">na</name><operator pos:start="145:34" pos:end="145:34">.</operator><name pos:start="145:35" pos:end="145:46">cand_up_left</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="147:5" pos:end="147:42"><decl pos:start="147:5" pos:end="147:41"><type pos:start="147:5" pos:end="147:7"><name pos:start="147:5" pos:end="147:7">int</name></type> <name pos:start="147:9" pos:end="147:15">cand_up</name>          <init pos:start="147:26" pos:end="147:41">= <expr pos:start="147:28" pos:end="147:41"><name pos:start="147:28" pos:end="147:41"><name pos:start="147:28" pos:end="147:29">lc</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:33">na</name><operator pos:start="147:34" pos:end="147:34">.</operator><name pos:start="147:35" pos:end="147:41">cand_up</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="149:5" pos:end="149:110"><decl pos:start="149:5" pos:end="149:109"><type pos:start="149:5" pos:end="149:7"><name pos:start="149:5" pos:end="149:7">int</name></type> <name pos:start="149:9" pos:end="149:21">cand_up_right</name>    <init pos:start="149:26" pos:end="149:109">= <expr pos:start="149:28" pos:end="149:109"><name pos:start="149:28" pos:end="149:47"><name pos:start="149:28" pos:end="149:29">lc</name><operator pos:start="149:30" pos:end="149:31">-&gt;</operator><name pos:start="149:32" pos:end="149:33">na</name><operator pos:start="149:34" pos:end="149:34">.</operator><name pos:start="149:35" pos:end="149:47">cand_up_right</name></name> <operator pos:start="149:49" pos:end="149:50">&amp;&amp;</operator> <name pos:start="149:52" pos:end="149:62">cur_tb_addr</name> <operator pos:start="149:64" pos:end="149:64">&gt;</operator> <call pos:start="149:66" pos:end="149:109"><name pos:start="149:66" pos:end="149:79">MIN_TB_ADDR_ZS</name><argument_list pos:start="149:80" pos:end="149:109">(<argument pos:start="149:81" pos:end="149:98"><expr pos:start="149:81" pos:end="149:98"><name pos:start="149:81" pos:end="149:84">x_tb</name> <operator pos:start="149:86" pos:end="149:86">+</operator> <name pos:start="149:88" pos:end="149:98">size_in_tbs</name></expr></argument>, <argument pos:start="149:101" pos:end="149:108"><expr pos:start="149:101" pos:end="149:108"><name pos:start="149:101" pos:end="149:104">y_tb</name> <operator pos:start="149:106" pos:end="149:106">-</operator> <literal type="number" pos:start="149:108" pos:end="149:108">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="153:5" pos:end="155:59"><decl pos:start="153:5" pos:end="155:58"><type pos:start="153:5" pos:end="153:7"><name pos:start="153:5" pos:end="153:7">int</name></type> <name pos:start="153:9" pos:end="153:24">bottom_left_size</name> <init pos:start="153:26" pos:end="155:58">= <expr pos:start="153:28" pos:end="155:58"><operator pos:start="153:28" pos:end="153:28">(</operator><call pos:start="153:29" pos:end="153:72"><name pos:start="153:29" pos:end="153:33">FFMIN</name><argument_list pos:start="153:34" pos:end="153:72">(<argument pos:start="153:35" pos:end="153:55"><expr pos:start="153:35" pos:end="153:55"><name pos:start="153:35" pos:end="153:36">y0</name> <operator pos:start="153:38" pos:end="153:38">+</operator> <literal type="number" pos:start="153:40" pos:end="153:40">2</literal> <operator pos:start="153:42" pos:end="153:42">*</operator> <name pos:start="153:44" pos:end="153:55">size_in_luma</name></expr></argument>, <argument pos:start="153:58" pos:end="153:71"><expr pos:start="153:58" pos:end="153:71"><name pos:start="153:58" pos:end="153:71"><name pos:start="153:58" pos:end="153:58">s</name><operator pos:start="153:59" pos:end="153:60">-&gt;</operator><name pos:start="153:61" pos:end="153:63">sps</name><operator pos:start="153:64" pos:end="153:65">-&gt;</operator><name pos:start="153:66" pos:end="153:71">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="153:74" pos:end="153:74">-</operator>

                            <operator pos:start="155:29" pos:end="155:29">(</operator><name pos:start="155:30" pos:end="155:31">y0</name> <operator pos:start="155:33" pos:end="155:33">+</operator> <name pos:start="155:35" pos:end="155:46">size_in_luma</name><operator pos:start="155:47" pos:end="155:47">)</operator><operator pos:start="155:48" pos:end="155:48">)</operator> <operator pos:start="155:50" pos:end="155:51">&gt;&gt;</operator> <name pos:start="155:53" pos:end="155:58">vshift</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="157:5" pos:end="159:59"><decl pos:start="157:5" pos:end="159:58"><type pos:start="157:5" pos:end="157:7"><name pos:start="157:5" pos:end="157:7">int</name></type> <name pos:start="157:9" pos:end="157:22">top_right_size</name>   <init pos:start="157:26" pos:end="159:58">= <expr pos:start="157:28" pos:end="159:58"><operator pos:start="157:28" pos:end="157:28">(</operator><call pos:start="157:29" pos:end="157:71"><name pos:start="157:29" pos:end="157:33">FFMIN</name><argument_list pos:start="157:34" pos:end="157:71">(<argument pos:start="157:35" pos:end="157:55"><expr pos:start="157:35" pos:end="157:55"><name pos:start="157:35" pos:end="157:36">x0</name> <operator pos:start="157:38" pos:end="157:38">+</operator> <literal type="number" pos:start="157:40" pos:end="157:40">2</literal> <operator pos:start="157:42" pos:end="157:42">*</operator> <name pos:start="157:44" pos:end="157:55">size_in_luma</name></expr></argument>, <argument pos:start="157:58" pos:end="157:70"><expr pos:start="157:58" pos:end="157:70"><name pos:start="157:58" pos:end="157:70"><name pos:start="157:58" pos:end="157:58">s</name><operator pos:start="157:59" pos:end="157:60">-&gt;</operator><name pos:start="157:61" pos:end="157:63">sps</name><operator pos:start="157:64" pos:end="157:65">-&gt;</operator><name pos:start="157:66" pos:end="157:70">width</name></name></expr></argument>)</argument_list></call> <operator pos:start="157:73" pos:end="157:73">-</operator>

                            <operator pos:start="159:29" pos:end="159:29">(</operator><name pos:start="159:30" pos:end="159:31">x0</name> <operator pos:start="159:33" pos:end="159:33">+</operator> <name pos:start="159:35" pos:end="159:46">size_in_luma</name><operator pos:start="159:47" pos:end="159:47">)</operator><operator pos:start="159:48" pos:end="159:48">)</operator> <operator pos:start="159:50" pos:end="159:51">&gt;&gt;</operator> <name pos:start="159:53" pos:end="159:58">hshift</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="163:5" pos:end="249:5"><if pos:start="163:5" pos:end="249:5">if <condition pos:start="163:8" pos:end="163:49">(<expr pos:start="163:9" pos:end="163:48"><name pos:start="163:9" pos:end="163:43"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:14">pps</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:43">constrained_intra_pred_flag</name></name> <operator pos:start="163:45" pos:end="163:46">==</operator> <literal type="number" pos:start="163:48" pos:end="163:48">1</literal></expr>)</condition> <block pos:start="163:51" pos:end="249:5">{<block_content pos:start="165:9" pos:end="247:9">

        <decl_stmt pos:start="165:9" pos:end="165:47"><decl pos:start="165:9" pos:end="165:46"><type pos:start="165:9" pos:end="165:11"><name pos:start="165:9" pos:end="165:11">int</name></type> <name pos:start="165:13" pos:end="165:27">size_in_luma_pu</name> <init pos:start="165:29" pos:end="165:46">= <expr pos:start="165:31" pos:end="165:46"><call pos:start="165:31" pos:end="165:46"><name pos:start="165:31" pos:end="165:32">PU</name><argument_list pos:start="165:33" pos:end="165:46">(<argument pos:start="165:34" pos:end="165:45"><expr pos:start="165:34" pos:end="165:45"><name pos:start="165:34" pos:end="165:45">size_in_luma</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="167:9" pos:end="167:73"><decl pos:start="167:9" pos:end="167:72"><type pos:start="167:9" pos:end="167:11"><name pos:start="167:9" pos:end="167:11">int</name></type> <name pos:start="167:13" pos:end="167:24">on_pu_edge_x</name> <init pos:start="167:26" pos:end="167:72">= <expr pos:start="167:28" pos:end="167:72"><operator pos:start="167:28" pos:end="167:28">!</operator><operator pos:start="167:29" pos:end="167:29">(</operator><name pos:start="167:30" pos:end="167:31">x0</name> <operator pos:start="167:33" pos:end="167:33">&amp;</operator> <operator pos:start="167:35" pos:end="167:35">(</operator><operator pos:start="167:36" pos:end="167:36">(</operator><literal type="number" pos:start="167:37" pos:end="167:37">1</literal> <operator pos:start="167:39" pos:end="167:40">&lt;&lt;</operator> <name pos:start="167:42" pos:end="167:65"><name pos:start="167:42" pos:end="167:42">s</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:47">sps</name><operator pos:start="167:48" pos:end="167:49">-&gt;</operator><name pos:start="167:50" pos:end="167:65">log2_min_pu_size</name></name><operator pos:start="167:66" pos:end="167:66">)</operator> <operator pos:start="167:68" pos:end="167:68">-</operator> <literal type="number" pos:start="167:70" pos:end="167:70">1</literal><operator pos:start="167:71" pos:end="167:71">)</operator><operator pos:start="167:72" pos:end="167:72">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="169:9" pos:end="169:73"><decl pos:start="169:9" pos:end="169:72"><type pos:start="169:9" pos:end="169:11"><name pos:start="169:9" pos:end="169:11">int</name></type> <name pos:start="169:13" pos:end="169:24">on_pu_edge_y</name> <init pos:start="169:26" pos:end="169:72">= <expr pos:start="169:28" pos:end="169:72"><operator pos:start="169:28" pos:end="169:28">!</operator><operator pos:start="169:29" pos:end="169:29">(</operator><name pos:start="169:30" pos:end="169:31">y0</name> <operator pos:start="169:33" pos:end="169:33">&amp;</operator> <operator pos:start="169:35" pos:end="169:35">(</operator><operator pos:start="169:36" pos:end="169:36">(</operator><literal type="number" pos:start="169:37" pos:end="169:37">1</literal> <operator pos:start="169:39" pos:end="169:40">&lt;&lt;</operator> <name pos:start="169:42" pos:end="169:65"><name pos:start="169:42" pos:end="169:42">s</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:47">sps</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:65">log2_min_pu_size</name></name><operator pos:start="169:66" pos:end="169:66">)</operator> <operator pos:start="169:68" pos:end="169:68">-</operator> <literal type="number" pos:start="169:70" pos:end="169:70">1</literal><operator pos:start="169:71" pos:end="169:71">)</operator><operator pos:start="169:72" pos:end="169:72">)</operator></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="171:9" pos:end="173:30"><if pos:start="171:9" pos:end="173:30">if<condition pos:start="171:11" pos:end="171:28">(<expr pos:start="171:12" pos:end="171:27"><operator pos:start="171:12" pos:end="171:12">!</operator><name pos:start="171:13" pos:end="171:27">size_in_luma_pu</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:30"><block_content pos:start="173:13" pos:end="173:30">

            <expr_stmt pos:start="173:13" pos:end="173:30"><expr pos:start="173:13" pos:end="173:29"><name pos:start="173:13" pos:end="173:27">size_in_luma_pu</name><operator pos:start="173:28" pos:end="173:29">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="175:9" pos:end="187:9"><if pos:start="175:9" pos:end="187:9">if <condition pos:start="175:12" pos:end="175:50">(<expr pos:start="175:13" pos:end="175:49"><name pos:start="175:13" pos:end="175:28">cand_bottom_left</name> <operator pos:start="175:30" pos:end="175:31">==</operator> <literal type="number" pos:start="175:33" pos:end="175:33">1</literal> <operator pos:start="175:35" pos:end="175:36">&amp;&amp;</operator> <name pos:start="175:38" pos:end="175:49">on_pu_edge_x</name></expr>)</condition> <block pos:start="175:52" pos:end="187:9">{<block_content pos:start="177:13" pos:end="185:77">

            <decl_stmt pos:start="177:13" pos:end="177:41"><decl pos:start="177:13" pos:end="177:40"><type pos:start="177:13" pos:end="177:15"><name pos:start="177:13" pos:end="177:15">int</name></type> <name pos:start="177:17" pos:end="177:25">x_left_pu</name>   <init pos:start="177:29" pos:end="177:40">= <expr pos:start="177:31" pos:end="177:40"><call pos:start="177:31" pos:end="177:40"><name pos:start="177:31" pos:end="177:32">PU</name><argument_list pos:start="177:33" pos:end="177:40">(<argument pos:start="177:34" pos:end="177:39"><expr pos:start="177:34" pos:end="177:39"><name pos:start="177:34" pos:end="177:35">x0</name> <operator pos:start="177:37" pos:end="177:37">-</operator> <literal type="number" pos:start="177:39" pos:end="177:39">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="179:13" pos:end="179:52"><decl pos:start="179:13" pos:end="179:51"><type pos:start="179:13" pos:end="179:15"><name pos:start="179:13" pos:end="179:15">int</name></type> <name pos:start="179:17" pos:end="179:27">y_bottom_pu</name> <init pos:start="179:29" pos:end="179:51">= <expr pos:start="179:31" pos:end="179:51"><call pos:start="179:31" pos:end="179:51"><name pos:start="179:31" pos:end="179:32">PU</name><argument_list pos:start="179:33" pos:end="179:51">(<argument pos:start="179:34" pos:end="179:50"><expr pos:start="179:34" pos:end="179:50"><name pos:start="179:34" pos:end="179:35">y0</name> <operator pos:start="179:37" pos:end="179:37">+</operator> <name pos:start="179:39" pos:end="179:50">size_in_luma</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:33"><expr pos:start="181:13" pos:end="181:32"><name pos:start="181:13" pos:end="181:28">cand_bottom_left</name> <operator pos:start="181:30" pos:end="181:30">=</operator> <literal type="number" pos:start="181:32" pos:end="181:32">0</literal></expr>;</expr_stmt>

            <for pos:start="183:13" pos:end="185:77">for<control pos:start="183:16" pos:end="183:48">(<init pos:start="183:17" pos:end="183:22"><expr pos:start="183:17" pos:end="183:21"><name pos:start="183:17" pos:end="183:17">i</name> <operator pos:start="183:19" pos:end="183:19">=</operator> <literal type="number" pos:start="183:21" pos:end="183:21">0</literal></expr>;</init> <condition pos:start="183:24" pos:end="183:43"><expr pos:start="183:24" pos:end="183:42"><name pos:start="183:24" pos:end="183:24">i</name> <operator pos:start="183:26" pos:end="183:26">&lt;</operator> <name pos:start="183:28" pos:end="183:42">size_in_luma_pu</name></expr>;</condition> <incr pos:start="183:45" pos:end="183:47"><expr pos:start="183:45" pos:end="183:47"><name pos:start="183:45" pos:end="183:45">i</name><operator pos:start="183:46" pos:end="183:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="185:17" pos:end="185:77"><block_content pos:start="185:17" pos:end="185:77">

                <expr_stmt pos:start="185:17" pos:end="185:77"><expr pos:start="185:17" pos:end="185:76"><name pos:start="185:17" pos:end="185:32">cand_bottom_left</name> <operator pos:start="185:34" pos:end="185:35">|=</operator> <call pos:start="185:37" pos:end="185:67"><name pos:start="185:37" pos:end="185:39">MVF</name><argument_list pos:start="185:40" pos:end="185:67">(<argument pos:start="185:41" pos:end="185:49"><expr pos:start="185:41" pos:end="185:49"><name pos:start="185:41" pos:end="185:49">x_left_pu</name></expr></argument>, <argument pos:start="185:52" pos:end="185:66"><expr pos:start="185:52" pos:end="185:66"><name pos:start="185:52" pos:end="185:62">y_bottom_pu</name> <operator pos:start="185:64" pos:end="185:64">+</operator> <name pos:start="185:66" pos:end="185:66">i</name></expr></argument>)</argument_list></call><operator pos:start="185:68" pos:end="185:68">.</operator><name pos:start="185:69" pos:end="185:76">is_intra</name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="189:9" pos:end="201:9"><if pos:start="189:9" pos:end="201:9">if <condition pos:start="189:12" pos:end="189:43">(<expr pos:start="189:13" pos:end="189:42"><name pos:start="189:13" pos:end="189:21">cand_left</name> <operator pos:start="189:23" pos:end="189:24">==</operator> <literal type="number" pos:start="189:26" pos:end="189:26">1</literal> <operator pos:start="189:28" pos:end="189:29">&amp;&amp;</operator> <name pos:start="189:31" pos:end="189:42">on_pu_edge_x</name></expr>)</condition> <block pos:start="189:45" pos:end="201:9">{<block_content pos:start="191:13" pos:end="199:68">

            <decl_stmt pos:start="191:13" pos:end="191:41"><decl pos:start="191:13" pos:end="191:40"><type pos:start="191:13" pos:end="191:15"><name pos:start="191:13" pos:end="191:15">int</name></type> <name pos:start="191:17" pos:end="191:25">x_left_pu</name>   <init pos:start="191:29" pos:end="191:40">= <expr pos:start="191:31" pos:end="191:40"><call pos:start="191:31" pos:end="191:40"><name pos:start="191:31" pos:end="191:32">PU</name><argument_list pos:start="191:33" pos:end="191:40">(<argument pos:start="191:34" pos:end="191:39"><expr pos:start="191:34" pos:end="191:39"><name pos:start="191:34" pos:end="191:35">x0</name> <operator pos:start="191:37" pos:end="191:37">-</operator> <literal type="number" pos:start="191:39" pos:end="191:39">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="193:13" pos:end="193:37"><decl pos:start="193:13" pos:end="193:36"><type pos:start="193:13" pos:end="193:15"><name pos:start="193:13" pos:end="193:15">int</name></type> <name pos:start="193:17" pos:end="193:25">y_left_pu</name>   <init pos:start="193:29" pos:end="193:36">= <expr pos:start="193:31" pos:end="193:36"><call pos:start="193:31" pos:end="193:36"><name pos:start="193:31" pos:end="193:32">PU</name><argument_list pos:start="193:33" pos:end="193:36">(<argument pos:start="193:34" pos:end="193:35"><expr pos:start="193:34" pos:end="193:35"><name pos:start="193:34" pos:end="193:35">y0</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:26"><expr pos:start="195:13" pos:end="195:25"><name pos:start="195:13" pos:end="195:21">cand_left</name> <operator pos:start="195:23" pos:end="195:23">=</operator> <literal type="number" pos:start="195:25" pos:end="195:25">0</literal></expr>;</expr_stmt>

            <for pos:start="197:13" pos:end="199:68">for<control pos:start="197:16" pos:end="197:48">(<init pos:start="197:17" pos:end="197:22"><expr pos:start="197:17" pos:end="197:21"><name pos:start="197:17" pos:end="197:17">i</name> <operator pos:start="197:19" pos:end="197:19">=</operator> <literal type="number" pos:start="197:21" pos:end="197:21">0</literal></expr>;</init> <condition pos:start="197:24" pos:end="197:43"><expr pos:start="197:24" pos:end="197:42"><name pos:start="197:24" pos:end="197:24">i</name> <operator pos:start="197:26" pos:end="197:26">&lt;</operator> <name pos:start="197:28" pos:end="197:42">size_in_luma_pu</name></expr>;</condition> <incr pos:start="197:45" pos:end="197:47"><expr pos:start="197:45" pos:end="197:47"><name pos:start="197:45" pos:end="197:45">i</name><operator pos:start="197:46" pos:end="197:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="199:17" pos:end="199:68"><block_content pos:start="199:17" pos:end="199:68">

                <expr_stmt pos:start="199:17" pos:end="199:68"><expr pos:start="199:17" pos:end="199:67"><name pos:start="199:17" pos:end="199:25">cand_left</name> <operator pos:start="199:27" pos:end="199:28">|=</operator> <call pos:start="199:30" pos:end="199:58"><name pos:start="199:30" pos:end="199:32">MVF</name><argument_list pos:start="199:33" pos:end="199:58">(<argument pos:start="199:34" pos:end="199:42"><expr pos:start="199:34" pos:end="199:42"><name pos:start="199:34" pos:end="199:42">x_left_pu</name></expr></argument>, <argument pos:start="199:45" pos:end="199:57"><expr pos:start="199:45" pos:end="199:57"><name pos:start="199:45" pos:end="199:53">y_left_pu</name> <operator pos:start="199:55" pos:end="199:55">+</operator> <name pos:start="199:57" pos:end="199:57">i</name></expr></argument>)</argument_list></call><operator pos:start="199:59" pos:end="199:59">.</operator><name pos:start="199:60" pos:end="199:67">is_intra</name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="203:9" pos:end="211:9"><if pos:start="203:9" pos:end="211:9">if <condition pos:start="203:12" pos:end="203:30">(<expr pos:start="203:13" pos:end="203:29"><name pos:start="203:13" pos:end="203:24">cand_up_left</name> <operator pos:start="203:26" pos:end="203:27">==</operator> <literal type="number" pos:start="203:29" pos:end="203:29">1</literal></expr>)</condition> <block pos:start="203:32" pos:end="211:9">{<block_content pos:start="205:13" pos:end="209:61">

            <decl_stmt pos:start="205:13" pos:end="205:41"><decl pos:start="205:13" pos:end="205:40"><type pos:start="205:13" pos:end="205:15"><name pos:start="205:13" pos:end="205:15">int</name></type> <name pos:start="205:17" pos:end="205:25">x_left_pu</name>   <init pos:start="205:29" pos:end="205:40">= <expr pos:start="205:31" pos:end="205:40"><call pos:start="205:31" pos:end="205:40"><name pos:start="205:31" pos:end="205:32">PU</name><argument_list pos:start="205:33" pos:end="205:40">(<argument pos:start="205:34" pos:end="205:39"><expr pos:start="205:34" pos:end="205:39"><name pos:start="205:34" pos:end="205:35">x0</name> <operator pos:start="205:37" pos:end="205:37">-</operator> <literal type="number" pos:start="205:39" pos:end="205:39">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="207:13" pos:end="207:41"><decl pos:start="207:13" pos:end="207:40"><type pos:start="207:13" pos:end="207:15"><name pos:start="207:13" pos:end="207:15">int</name></type> <name pos:start="207:17" pos:end="207:24">y_top_pu</name>    <init pos:start="207:29" pos:end="207:40">= <expr pos:start="207:31" pos:end="207:40"><call pos:start="207:31" pos:end="207:40"><name pos:start="207:31" pos:end="207:32">PU</name><argument_list pos:start="207:33" pos:end="207:40">(<argument pos:start="207:34" pos:end="207:39"><expr pos:start="207:34" pos:end="207:39"><name pos:start="207:34" pos:end="207:35">y0</name> <operator pos:start="207:37" pos:end="207:37">-</operator> <literal type="number" pos:start="207:39" pos:end="207:39">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:61"><expr pos:start="209:13" pos:end="209:60"><name pos:start="209:13" pos:end="209:24">cand_up_left</name> <operator pos:start="209:26" pos:end="209:26">=</operator> <call pos:start="209:28" pos:end="209:51"><name pos:start="209:28" pos:end="209:30">MVF</name><argument_list pos:start="209:31" pos:end="209:51">(<argument pos:start="209:32" pos:end="209:40"><expr pos:start="209:32" pos:end="209:40"><name pos:start="209:32" pos:end="209:40">x_left_pu</name></expr></argument>, <argument pos:start="209:43" pos:end="209:50"><expr pos:start="209:43" pos:end="209:50"><name pos:start="209:43" pos:end="209:50">y_top_pu</name></expr></argument>)</argument_list></call><operator pos:start="209:52" pos:end="209:52">.</operator><name pos:start="209:53" pos:end="209:60">is_intra</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="213:9" pos:end="225:9"><if pos:start="213:9" pos:end="225:9">if <condition pos:start="213:12" pos:end="213:41">(<expr pos:start="213:13" pos:end="213:40"><name pos:start="213:13" pos:end="213:19">cand_up</name> <operator pos:start="213:21" pos:end="213:22">==</operator> <literal type="number" pos:start="213:24" pos:end="213:24">1</literal> <operator pos:start="213:26" pos:end="213:27">&amp;&amp;</operator> <name pos:start="213:29" pos:end="213:40">on_pu_edge_y</name></expr>)</condition> <block pos:start="213:43" pos:end="225:9">{<block_content pos:start="215:13" pos:end="223:64">

            <decl_stmt pos:start="215:13" pos:end="215:37"><decl pos:start="215:13" pos:end="215:36"><type pos:start="215:13" pos:end="215:15"><name pos:start="215:13" pos:end="215:15">int</name></type> <name pos:start="215:17" pos:end="215:24">x_top_pu</name>    <init pos:start="215:29" pos:end="215:36">= <expr pos:start="215:31" pos:end="215:36"><call pos:start="215:31" pos:end="215:36"><name pos:start="215:31" pos:end="215:32">PU</name><argument_list pos:start="215:33" pos:end="215:36">(<argument pos:start="215:34" pos:end="215:35"><expr pos:start="215:34" pos:end="215:35"><name pos:start="215:34" pos:end="215:35">x0</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="217:13" pos:end="217:41"><decl pos:start="217:13" pos:end="217:40"><type pos:start="217:13" pos:end="217:15"><name pos:start="217:13" pos:end="217:15">int</name></type> <name pos:start="217:17" pos:end="217:24">y_top_pu</name>    <init pos:start="217:29" pos:end="217:40">= <expr pos:start="217:31" pos:end="217:40"><call pos:start="217:31" pos:end="217:40"><name pos:start="217:31" pos:end="217:32">PU</name><argument_list pos:start="217:33" pos:end="217:40">(<argument pos:start="217:34" pos:end="217:39"><expr pos:start="217:34" pos:end="217:39"><name pos:start="217:34" pos:end="217:35">y0</name> <operator pos:start="217:37" pos:end="217:37">-</operator> <literal type="number" pos:start="217:39" pos:end="217:39">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:24"><expr pos:start="219:13" pos:end="219:23"><name pos:start="219:13" pos:end="219:19">cand_up</name> <operator pos:start="219:21" pos:end="219:21">=</operator> <literal type="number" pos:start="219:23" pos:end="219:23">0</literal></expr>;</expr_stmt>

            <for pos:start="221:13" pos:end="223:64">for<control pos:start="221:16" pos:end="221:48">(<init pos:start="221:17" pos:end="221:22"><expr pos:start="221:17" pos:end="221:21"><name pos:start="221:17" pos:end="221:17">i</name> <operator pos:start="221:19" pos:end="221:19">=</operator> <literal type="number" pos:start="221:21" pos:end="221:21">0</literal></expr>;</init> <condition pos:start="221:24" pos:end="221:43"><expr pos:start="221:24" pos:end="221:42"><name pos:start="221:24" pos:end="221:24">i</name> <operator pos:start="221:26" pos:end="221:26">&lt;</operator> <name pos:start="221:28" pos:end="221:42">size_in_luma_pu</name></expr>;</condition> <incr pos:start="221:45" pos:end="221:47"><expr pos:start="221:45" pos:end="221:47"><name pos:start="221:45" pos:end="221:45">i</name><operator pos:start="221:46" pos:end="221:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="223:17" pos:end="223:64"><block_content pos:start="223:17" pos:end="223:64">

                <expr_stmt pos:start="223:17" pos:end="223:64"><expr pos:start="223:17" pos:end="223:63"><name pos:start="223:17" pos:end="223:23">cand_up</name> <operator pos:start="223:25" pos:end="223:26">|=</operator> <call pos:start="223:28" pos:end="223:54"><name pos:start="223:28" pos:end="223:30">MVF</name><argument_list pos:start="223:31" pos:end="223:54">(<argument pos:start="223:32" pos:end="223:43"><expr pos:start="223:32" pos:end="223:43"><name pos:start="223:32" pos:end="223:39">x_top_pu</name> <operator pos:start="223:41" pos:end="223:41">+</operator> <name pos:start="223:43" pos:end="223:43">i</name></expr></argument>, <argument pos:start="223:46" pos:end="223:53"><expr pos:start="223:46" pos:end="223:53"><name pos:start="223:46" pos:end="223:53">y_top_pu</name></expr></argument>)</argument_list></call><operator pos:start="223:55" pos:end="223:55">.</operator><name pos:start="223:56" pos:end="223:63">is_intra</name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="227:9" pos:end="239:9"><if pos:start="227:9" pos:end="239:9">if <condition pos:start="227:12" pos:end="227:47">(<expr pos:start="227:13" pos:end="227:46"><name pos:start="227:13" pos:end="227:25">cand_up_right</name> <operator pos:start="227:27" pos:end="227:28">==</operator> <literal type="number" pos:start="227:30" pos:end="227:30">1</literal> <operator pos:start="227:32" pos:end="227:33">&amp;&amp;</operator> <name pos:start="227:35" pos:end="227:46">on_pu_edge_y</name></expr>)</condition> <block pos:start="227:49" pos:end="239:9">{<block_content pos:start="229:13" pos:end="237:72">

            <decl_stmt pos:start="229:13" pos:end="229:41"><decl pos:start="229:13" pos:end="229:40"><type pos:start="229:13" pos:end="229:15"><name pos:start="229:13" pos:end="229:15">int</name></type> <name pos:start="229:17" pos:end="229:24">y_top_pu</name>    <init pos:start="229:29" pos:end="229:40">= <expr pos:start="229:31" pos:end="229:40"><call pos:start="229:31" pos:end="229:40"><name pos:start="229:31" pos:end="229:32">PU</name><argument_list pos:start="229:33" pos:end="229:40">(<argument pos:start="229:34" pos:end="229:39"><expr pos:start="229:34" pos:end="229:39"><name pos:start="229:34" pos:end="229:35">y0</name> <operator pos:start="229:37" pos:end="229:37">-</operator> <literal type="number" pos:start="229:39" pos:end="229:39">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="231:13" pos:end="231:52"><decl pos:start="231:13" pos:end="231:51"><type pos:start="231:13" pos:end="231:15"><name pos:start="231:13" pos:end="231:15">int</name></type> <name pos:start="231:17" pos:end="231:26">x_right_pu</name>  <init pos:start="231:29" pos:end="231:51">= <expr pos:start="231:31" pos:end="231:51"><call pos:start="231:31" pos:end="231:51"><name pos:start="231:31" pos:end="231:32">PU</name><argument_list pos:start="231:33" pos:end="231:51">(<argument pos:start="231:34" pos:end="231:50"><expr pos:start="231:34" pos:end="231:50"><name pos:start="231:34" pos:end="231:35">x0</name> <operator pos:start="231:37" pos:end="231:37">+</operator> <name pos:start="231:39" pos:end="231:50">size_in_luma</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:30"><expr pos:start="233:13" pos:end="233:29"><name pos:start="233:13" pos:end="233:25">cand_up_right</name> <operator pos:start="233:27" pos:end="233:27">=</operator> <literal type="number" pos:start="233:29" pos:end="233:29">0</literal></expr>;</expr_stmt>

            <for pos:start="235:13" pos:end="237:72">for<control pos:start="235:16" pos:end="235:48">(<init pos:start="235:17" pos:end="235:22"><expr pos:start="235:17" pos:end="235:21"><name pos:start="235:17" pos:end="235:17">i</name> <operator pos:start="235:19" pos:end="235:19">=</operator> <literal type="number" pos:start="235:21" pos:end="235:21">0</literal></expr>;</init> <condition pos:start="235:24" pos:end="235:43"><expr pos:start="235:24" pos:end="235:42"><name pos:start="235:24" pos:end="235:24">i</name> <operator pos:start="235:26" pos:end="235:26">&lt;</operator> <name pos:start="235:28" pos:end="235:42">size_in_luma_pu</name></expr>;</condition> <incr pos:start="235:45" pos:end="235:47"><expr pos:start="235:45" pos:end="235:47"><name pos:start="235:45" pos:end="235:45">i</name><operator pos:start="235:46" pos:end="235:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="237:17" pos:end="237:72"><block_content pos:start="237:17" pos:end="237:72">

                <expr_stmt pos:start="237:17" pos:end="237:72"><expr pos:start="237:17" pos:end="237:71"><name pos:start="237:17" pos:end="237:29">cand_up_right</name> <operator pos:start="237:31" pos:end="237:32">|=</operator> <call pos:start="237:34" pos:end="237:62"><name pos:start="237:34" pos:end="237:36">MVF</name><argument_list pos:start="237:37" pos:end="237:62">(<argument pos:start="237:38" pos:end="237:51"><expr pos:start="237:38" pos:end="237:51"><name pos:start="237:38" pos:end="237:47">x_right_pu</name> <operator pos:start="237:49" pos:end="237:49">+</operator> <name pos:start="237:51" pos:end="237:51">i</name></expr></argument>, <argument pos:start="237:54" pos:end="237:61"><expr pos:start="237:54" pos:end="237:61"><name pos:start="237:54" pos:end="237:61">y_top_pu</name></expr></argument>)</argument_list></call><operator pos:start="237:63" pos:end="237:63">.</operator><name pos:start="237:64" pos:end="237:71">is_intra</name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <for pos:start="241:9" pos:end="247:9">for <control pos:start="241:13" pos:end="241:45">(<init pos:start="241:14" pos:end="241:19"><expr pos:start="241:14" pos:end="241:18"><name pos:start="241:14" pos:end="241:14">i</name> <operator pos:start="241:16" pos:end="241:16">=</operator> <literal type="number" pos:start="241:18" pos:end="241:18">0</literal></expr>;</init> <condition pos:start="241:21" pos:end="241:40"><expr pos:start="241:21" pos:end="241:39"><name pos:start="241:21" pos:end="241:21">i</name> <operator pos:start="241:23" pos:end="241:23">&lt;</operator> <literal type="number" pos:start="241:25" pos:end="241:25">2</literal> <operator pos:start="241:27" pos:end="241:27">*</operator> <name pos:start="241:29" pos:end="241:39">MAX_TB_SIZE</name></expr>;</condition> <incr pos:start="241:42" pos:end="241:44"><expr pos:start="241:42" pos:end="241:44"><name pos:start="241:42" pos:end="241:42">i</name><operator pos:start="241:43" pos:end="241:44">++</operator></expr></incr>)</control> <block pos:start="241:47" pos:end="247:9">{<block_content pos:start="243:13" pos:end="245:26">

            <expr_stmt pos:start="243:13" pos:end="243:26"><expr pos:start="243:13" pos:end="243:25"><name pos:start="243:13" pos:end="243:19"><name pos:start="243:13" pos:end="243:16">left</name><index pos:start="243:17" pos:end="243:19">[<expr pos:start="243:18" pos:end="243:18"><name pos:start="243:18" pos:end="243:18">i</name></expr>]</index></name> <operator pos:start="243:21" pos:end="243:21">=</operator> <literal type="number" pos:start="243:23" pos:end="243:25">128</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:26"><expr pos:start="245:13" pos:end="245:25"><name pos:start="245:13" pos:end="245:18"><name pos:start="245:13" pos:end="245:15">top</name><index pos:start="245:16" pos:end="245:18">[<expr pos:start="245:17" pos:end="245:17"><name pos:start="245:17" pos:end="245:17">i</name></expr>]</index></name>  <operator pos:start="245:21" pos:end="245:21">=</operator> <literal type="number" pos:start="245:23" pos:end="245:25">128</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="251:5" pos:end="265:5"><if pos:start="251:5" pos:end="265:5">if <condition pos:start="251:8" pos:end="251:25">(<expr pos:start="251:9" pos:end="251:24"><name pos:start="251:9" pos:end="251:24">cand_bottom_left</name></expr>)</condition> <block pos:start="251:27" pos:end="265:5">{<block_content pos:start="253:9" pos:end="263:37">

        <for pos:start="253:9" pos:end="257:63">for <control pos:start="253:13" pos:end="253:63">(<init pos:start="253:14" pos:end="253:41"><expr pos:start="253:14" pos:end="253:40"><name pos:start="253:14" pos:end="253:14">i</name> <operator pos:start="253:16" pos:end="253:16">=</operator> <name pos:start="253:18" pos:end="253:21">size</name> <operator pos:start="253:23" pos:end="253:23">+</operator> <name pos:start="253:25" pos:end="253:40">bottom_left_size</name></expr>;</init> <condition pos:start="253:43" pos:end="253:58"><expr pos:start="253:43" pos:end="253:57"><name pos:start="253:43" pos:end="253:43">i</name> <operator pos:start="253:45" pos:end="253:45">&lt;</operator> <operator pos:start="253:47" pos:end="253:47">(</operator><name pos:start="253:48" pos:end="253:51">size</name> <operator pos:start="253:53" pos:end="253:54">&lt;&lt;</operator> <literal type="number" pos:start="253:56" pos:end="253:56">1</literal><operator pos:start="253:57" pos:end="253:57">)</operator></expr>;</condition> <incr pos:start="253:60" pos:end="253:62"><expr pos:start="253:60" pos:end="253:62"><name pos:start="253:60" pos:end="253:60">i</name><operator pos:start="253:61" pos:end="253:62">++</operator></expr></incr>)</control><block type="pseudo" pos:start="255:13" pos:end="257:63"><block_content pos:start="255:13" pos:end="257:63">

            <if_stmt pos:start="255:13" pos:end="257:63"><if pos:start="255:13" pos:end="257:63">if <condition pos:start="255:16" pos:end="255:98">(<expr pos:start="255:17" pos:end="255:97"><call pos:start="255:17" pos:end="255:57"><name pos:start="255:17" pos:end="255:24">IS_INTRA</name><argument_list pos:start="255:25" pos:end="255:57">(<argument pos:start="255:26" pos:end="255:27"><expr pos:start="255:26" pos:end="255:27"><operator pos:start="255:26" pos:end="255:26">-</operator><literal type="number" pos:start="255:27" pos:end="255:27">1</literal></expr></argument>, <argument pos:start="255:30" pos:end="255:56"><expr pos:start="255:30" pos:end="255:56"><name pos:start="255:30" pos:end="255:33">size</name> <operator pos:start="255:35" pos:end="255:35">+</operator> <name pos:start="255:37" pos:end="255:52">bottom_left_size</name> <operator pos:start="255:54" pos:end="255:54">-</operator> <literal type="number" pos:start="255:56" pos:end="255:56">1</literal></expr></argument>)</argument_list></call> <operator pos:start="255:59" pos:end="255:60">||</operator> <operator pos:start="255:62" pos:end="255:62">!</operator><name pos:start="255:63" pos:end="255:97"><name pos:start="255:63" pos:end="255:63">s</name><operator pos:start="255:64" pos:end="255:65">-&gt;</operator><name pos:start="255:66" pos:end="255:68">pps</name><operator pos:start="255:69" pos:end="255:70">-&gt;</operator><name pos:start="255:71" pos:end="255:97">constrained_intra_pred_flag</name></name></expr>)</condition><block type="pseudo" pos:start="257:17" pos:end="257:63"><block_content pos:start="257:17" pos:end="257:63">

                <expr_stmt pos:start="257:17" pos:end="257:63"><expr pos:start="257:17" pos:end="257:62"><name pos:start="257:17" pos:end="257:23"><name pos:start="257:17" pos:end="257:20">left</name><index pos:start="257:21" pos:end="257:23">[<expr pos:start="257:22" pos:end="257:22"><name pos:start="257:22" pos:end="257:22">i</name></expr>]</index></name> <operator pos:start="257:25" pos:end="257:25">=</operator> <call pos:start="257:27" pos:end="257:62"><name pos:start="257:27" pos:end="257:29">POS</name><argument_list pos:start="257:30" pos:end="257:62">(<argument pos:start="257:31" pos:end="257:32"><expr pos:start="257:31" pos:end="257:32"><operator pos:start="257:31" pos:end="257:31">-</operator><literal type="number" pos:start="257:32" pos:end="257:32">1</literal></expr></argument>, <argument pos:start="257:35" pos:end="257:61"><expr pos:start="257:35" pos:end="257:61"><name pos:start="257:35" pos:end="257:38">size</name> <operator pos:start="257:40" pos:end="257:40">+</operator> <name pos:start="257:42" pos:end="257:57">bottom_left_size</name> <operator pos:start="257:59" pos:end="257:59">-</operator> <literal type="number" pos:start="257:61" pos:end="257:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

        <for pos:start="259:9" pos:end="263:37">for <control pos:start="259:13" pos:end="259:61">(<init pos:start="259:14" pos:end="259:45"><expr pos:start="259:14" pos:end="259:44"><name pos:start="259:14" pos:end="259:14">i</name> <operator pos:start="259:16" pos:end="259:16">=</operator> <name pos:start="259:18" pos:end="259:21">size</name> <operator pos:start="259:23" pos:end="259:23">+</operator> <name pos:start="259:25" pos:end="259:40">bottom_left_size</name> <operator pos:start="259:42" pos:end="259:42">-</operator> <literal type="number" pos:start="259:44" pos:end="259:44">1</literal></expr>;</init> <condition pos:start="259:47" pos:end="259:56"><expr pos:start="259:47" pos:end="259:55"><name pos:start="259:47" pos:end="259:47">i</name> <operator pos:start="259:49" pos:end="259:50">&gt;=</operator> <name pos:start="259:52" pos:end="259:55">size</name></expr>;</condition> <incr pos:start="259:58" pos:end="259:60"><expr pos:start="259:58" pos:end="259:60"><name pos:start="259:58" pos:end="259:58">i</name><operator pos:start="259:59" pos:end="259:60">--</operator></expr></incr>)</control><block type="pseudo" pos:start="261:13" pos:end="263:37"><block_content pos:start="261:13" pos:end="263:37">

            <if_stmt pos:start="261:13" pos:end="263:37"><if pos:start="261:13" pos:end="263:37">if <condition pos:start="261:16" pos:end="261:72">(<expr pos:start="261:17" pos:end="261:71"><call pos:start="261:17" pos:end="261:31"><name pos:start="261:17" pos:end="261:24">IS_INTRA</name><argument_list pos:start="261:25" pos:end="261:31">(<argument pos:start="261:26" pos:end="261:27"><expr pos:start="261:26" pos:end="261:27"><operator pos:start="261:26" pos:end="261:26">-</operator><literal type="number" pos:start="261:27" pos:end="261:27">1</literal></expr></argument>, <argument pos:start="261:30" pos:end="261:30"><expr pos:start="261:30" pos:end="261:30"><name pos:start="261:30" pos:end="261:30">i</name></expr></argument>)</argument_list></call> <operator pos:start="261:33" pos:end="261:34">||</operator> <operator pos:start="261:36" pos:end="261:36">!</operator><name pos:start="261:37" pos:end="261:71"><name pos:start="261:37" pos:end="261:37">s</name><operator pos:start="261:38" pos:end="261:39">-&gt;</operator><name pos:start="261:40" pos:end="261:42">pps</name><operator pos:start="261:43" pos:end="261:44">-&gt;</operator><name pos:start="261:45" pos:end="261:71">constrained_intra_pred_flag</name></name></expr>)</condition><block type="pseudo" pos:start="263:17" pos:end="263:37"><block_content pos:start="263:17" pos:end="263:37">

                <expr_stmt pos:start="263:17" pos:end="263:37"><expr pos:start="263:17" pos:end="263:36"><name pos:start="263:17" pos:end="263:23"><name pos:start="263:17" pos:end="263:20">left</name><index pos:start="263:21" pos:end="263:23">[<expr pos:start="263:22" pos:end="263:22"><name pos:start="263:22" pos:end="263:22">i</name></expr>]</index></name> <operator pos:start="263:25" pos:end="263:25">=</operator> <call pos:start="263:27" pos:end="263:36"><name pos:start="263:27" pos:end="263:29">POS</name><argument_list pos:start="263:30" pos:end="263:36">(<argument pos:start="263:31" pos:end="263:32"><expr pos:start="263:31" pos:end="263:32"><operator pos:start="263:31" pos:end="263:31">-</operator><literal type="number" pos:start="263:32" pos:end="263:32">1</literal></expr></argument>, <argument pos:start="263:35" pos:end="263:35"><expr pos:start="263:35" pos:end="263:35"><name pos:start="263:35" pos:end="263:35">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="267:5" pos:end="273:37"><if pos:start="267:5" pos:end="273:37">if <condition pos:start="267:8" pos:end="267:18">(<expr pos:start="267:9" pos:end="267:17"><name pos:start="267:9" pos:end="267:17">cand_left</name></expr>)</condition><block type="pseudo" pos:start="269:9" pos:end="273:37"><block_content pos:start="269:9" pos:end="273:37">

        <for pos:start="269:9" pos:end="273:37">for <control pos:start="269:13" pos:end="269:39">(<init pos:start="269:14" pos:end="269:26"><expr pos:start="269:14" pos:end="269:25"><name pos:start="269:14" pos:end="269:14">i</name> <operator pos:start="269:16" pos:end="269:16">=</operator> <name pos:start="269:18" pos:end="269:21">size</name> <operator pos:start="269:23" pos:end="269:23">-</operator> <literal type="number" pos:start="269:25" pos:end="269:25">1</literal></expr>;</init> <condition pos:start="269:28" pos:end="269:34"><expr pos:start="269:28" pos:end="269:33"><name pos:start="269:28" pos:end="269:28">i</name> <operator pos:start="269:30" pos:end="269:31">&gt;=</operator> <literal type="number" pos:start="269:33" pos:end="269:33">0</literal></expr>;</condition> <incr pos:start="269:36" pos:end="269:38"><expr pos:start="269:36" pos:end="269:38"><name pos:start="269:36" pos:end="269:36">i</name><operator pos:start="269:37" pos:end="269:38">--</operator></expr></incr>)</control><block type="pseudo" pos:start="271:13" pos:end="273:37"><block_content pos:start="271:13" pos:end="273:37">

            <if_stmt pos:start="271:13" pos:end="273:37"><if pos:start="271:13" pos:end="273:37">if <condition pos:start="271:16" pos:end="271:72">(<expr pos:start="271:17" pos:end="271:71"><call pos:start="271:17" pos:end="271:31"><name pos:start="271:17" pos:end="271:24">IS_INTRA</name><argument_list pos:start="271:25" pos:end="271:31">(<argument pos:start="271:26" pos:end="271:27"><expr pos:start="271:26" pos:end="271:27"><operator pos:start="271:26" pos:end="271:26">-</operator><literal type="number" pos:start="271:27" pos:end="271:27">1</literal></expr></argument>, <argument pos:start="271:30" pos:end="271:30"><expr pos:start="271:30" pos:end="271:30"><name pos:start="271:30" pos:end="271:30">i</name></expr></argument>)</argument_list></call> <operator pos:start="271:33" pos:end="271:34">||</operator> <operator pos:start="271:36" pos:end="271:36">!</operator><name pos:start="271:37" pos:end="271:71"><name pos:start="271:37" pos:end="271:37">s</name><operator pos:start="271:38" pos:end="271:39">-&gt;</operator><name pos:start="271:40" pos:end="271:42">pps</name><operator pos:start="271:43" pos:end="271:44">-&gt;</operator><name pos:start="271:45" pos:end="271:71">constrained_intra_pred_flag</name></name></expr>)</condition><block type="pseudo" pos:start="273:17" pos:end="273:37"><block_content pos:start="273:17" pos:end="273:37">

                <expr_stmt pos:start="273:17" pos:end="273:37"><expr pos:start="273:17" pos:end="273:36"><name pos:start="273:17" pos:end="273:23"><name pos:start="273:17" pos:end="273:20">left</name><index pos:start="273:21" pos:end="273:23">[<expr pos:start="273:22" pos:end="273:22"><name pos:start="273:22" pos:end="273:22">i</name></expr>]</index></name> <operator pos:start="273:25" pos:end="273:25">=</operator> <call pos:start="273:27" pos:end="273:36"><name pos:start="273:27" pos:end="273:29">POS</name><argument_list pos:start="273:30" pos:end="273:36">(<argument pos:start="273:31" pos:end="273:32"><expr pos:start="273:31" pos:end="273:32"><operator pos:start="273:31" pos:end="273:31">-</operator><literal type="number" pos:start="273:32" pos:end="273:32">1</literal></expr></argument>, <argument pos:start="273:35" pos:end="273:35"><expr pos:start="273:35" pos:end="273:35"><name pos:start="273:35" pos:end="273:35">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt>

    <if_stmt pos:start="275:5" pos:end="283:9"><if pos:start="275:5" pos:end="283:9">if <condition pos:start="275:8" pos:end="275:21">(<expr pos:start="275:9" pos:end="275:20"><name pos:start="275:9" pos:end="275:20">cand_up_left</name></expr>)</condition><block type="pseudo" pos:start="277:9" pos:end="283:9"><block_content pos:start="277:9" pos:end="283:9">

        <if_stmt pos:start="277:9" pos:end="283:9"><if pos:start="277:9" pos:end="283:9">if <condition pos:start="277:12" pos:end="277:69">(<expr pos:start="277:13" pos:end="277:68"><call pos:start="277:13" pos:end="277:28"><name pos:start="277:13" pos:end="277:20">IS_INTRA</name><argument_list pos:start="277:21" pos:end="277:28">(<argument pos:start="277:22" pos:end="277:23"><expr pos:start="277:22" pos:end="277:23"><operator pos:start="277:22" pos:end="277:22">-</operator><literal type="number" pos:start="277:23" pos:end="277:23">1</literal></expr></argument>, <argument pos:start="277:26" pos:end="277:27"><expr pos:start="277:26" pos:end="277:27"><operator pos:start="277:26" pos:end="277:26">-</operator><literal type="number" pos:start="277:27" pos:end="277:27">1</literal></expr></argument>)</argument_list></call> <operator pos:start="277:30" pos:end="277:31">||</operator> <operator pos:start="277:33" pos:end="277:33">!</operator><name pos:start="277:34" pos:end="277:68"><name pos:start="277:34" pos:end="277:34">s</name><operator pos:start="277:35" pos:end="277:36">-&gt;</operator><name pos:start="277:37" pos:end="277:39">pps</name><operator pos:start="277:40" pos:end="277:41">-&gt;</operator><name pos:start="277:42" pos:end="277:68">constrained_intra_pred_flag</name></name></expr>)</condition> <block pos:start="277:71" pos:end="283:9">{<block_content pos:start="279:13" pos:end="281:32">

            <expr_stmt pos:start="279:13" pos:end="279:35"><expr pos:start="279:13" pos:end="279:34"><name pos:start="279:13" pos:end="279:20"><name pos:start="279:13" pos:end="279:16">left</name><index pos:start="279:17" pos:end="279:20">[<expr pos:start="279:18" pos:end="279:19"><operator pos:start="279:18" pos:end="279:18">-</operator><literal type="number" pos:start="279:19" pos:end="279:19">1</literal></expr>]</index></name> <operator pos:start="279:22" pos:end="279:22">=</operator> <call pos:start="279:24" pos:end="279:34"><name pos:start="279:24" pos:end="279:26">POS</name><argument_list pos:start="279:27" pos:end="279:34">(<argument pos:start="279:28" pos:end="279:29"><expr pos:start="279:28" pos:end="279:29"><operator pos:start="279:28" pos:end="279:28">-</operator><literal type="number" pos:start="279:29" pos:end="279:29">1</literal></expr></argument>, <argument pos:start="279:32" pos:end="279:33"><expr pos:start="279:32" pos:end="279:33"><operator pos:start="279:32" pos:end="279:32">-</operator><literal type="number" pos:start="279:33" pos:end="279:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:32"><expr pos:start="281:13" pos:end="281:31"><name pos:start="281:13" pos:end="281:19"><name pos:start="281:13" pos:end="281:15">top</name><index pos:start="281:16" pos:end="281:19">[<expr pos:start="281:17" pos:end="281:18"><operator pos:start="281:17" pos:end="281:17">-</operator><literal type="number" pos:start="281:18" pos:end="281:18">1</literal></expr>]</index></name>  <operator pos:start="281:22" pos:end="281:22">=</operator> <name pos:start="281:24" pos:end="281:31"><name pos:start="281:24" pos:end="281:27">left</name><index pos:start="281:28" pos:end="281:31">[<expr pos:start="281:29" pos:end="281:30"><operator pos:start="281:29" pos:end="281:29">-</operator><literal type="number" pos:start="281:30" pos:end="281:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="285:5" pos:end="291:36"><if pos:start="285:5" pos:end="291:36">if <condition pos:start="285:8" pos:end="285:16">(<expr pos:start="285:9" pos:end="285:15"><name pos:start="285:9" pos:end="285:15">cand_up</name></expr>)</condition><block type="pseudo" pos:start="287:9" pos:end="291:36"><block_content pos:start="287:9" pos:end="291:36">

        <for pos:start="287:9" pos:end="291:36">for <control pos:start="287:13" pos:end="287:39">(<init pos:start="287:14" pos:end="287:26"><expr pos:start="287:14" pos:end="287:25"><name pos:start="287:14" pos:end="287:14">i</name> <operator pos:start="287:16" pos:end="287:16">=</operator> <name pos:start="287:18" pos:end="287:21">size</name> <operator pos:start="287:23" pos:end="287:23">-</operator> <literal type="number" pos:start="287:25" pos:end="287:25">1</literal></expr>;</init> <condition pos:start="287:28" pos:end="287:34"><expr pos:start="287:28" pos:end="287:33"><name pos:start="287:28" pos:end="287:28">i</name> <operator pos:start="287:30" pos:end="287:31">&gt;=</operator> <literal type="number" pos:start="287:33" pos:end="287:33">0</literal></expr>;</condition> <incr pos:start="287:36" pos:end="287:38"><expr pos:start="287:36" pos:end="287:38"><name pos:start="287:36" pos:end="287:36">i</name><operator pos:start="287:37" pos:end="287:38">--</operator></expr></incr>)</control><block type="pseudo" pos:start="289:13" pos:end="291:36"><block_content pos:start="289:13" pos:end="291:36">

            <if_stmt pos:start="289:13" pos:end="291:36"><if pos:start="289:13" pos:end="291:36">if <condition pos:start="289:16" pos:end="289:72">(<expr pos:start="289:17" pos:end="289:71"><call pos:start="289:17" pos:end="289:31"><name pos:start="289:17" pos:end="289:24">IS_INTRA</name><argument_list pos:start="289:25" pos:end="289:31">(<argument pos:start="289:26" pos:end="289:26"><expr pos:start="289:26" pos:end="289:26"><name pos:start="289:26" pos:end="289:26">i</name></expr></argument>, <argument pos:start="289:29" pos:end="289:30"><expr pos:start="289:29" pos:end="289:30"><operator pos:start="289:29" pos:end="289:29">-</operator><literal type="number" pos:start="289:30" pos:end="289:30">1</literal></expr></argument>)</argument_list></call> <operator pos:start="289:33" pos:end="289:34">||</operator> <operator pos:start="289:36" pos:end="289:36">!</operator><name pos:start="289:37" pos:end="289:71"><name pos:start="289:37" pos:end="289:37">s</name><operator pos:start="289:38" pos:end="289:39">-&gt;</operator><name pos:start="289:40" pos:end="289:42">pps</name><operator pos:start="289:43" pos:end="289:44">-&gt;</operator><name pos:start="289:45" pos:end="289:71">constrained_intra_pred_flag</name></name></expr>)</condition><block type="pseudo" pos:start="291:17" pos:end="291:36"><block_content pos:start="291:17" pos:end="291:36">

                <expr_stmt pos:start="291:17" pos:end="291:36"><expr pos:start="291:17" pos:end="291:35"><name pos:start="291:17" pos:end="291:22"><name pos:start="291:17" pos:end="291:19">top</name><index pos:start="291:20" pos:end="291:22">[<expr pos:start="291:21" pos:end="291:21"><name pos:start="291:21" pos:end="291:21">i</name></expr>]</index></name> <operator pos:start="291:24" pos:end="291:24">=</operator> <call pos:start="291:26" pos:end="291:35"><name pos:start="291:26" pos:end="291:28">POS</name><argument_list pos:start="291:29" pos:end="291:35">(<argument pos:start="291:30" pos:end="291:30"><expr pos:start="291:30" pos:end="291:30"><name pos:start="291:30" pos:end="291:30">i</name></expr></argument>, <argument pos:start="291:33" pos:end="291:34"><expr pos:start="291:33" pos:end="291:34"><operator pos:start="291:33" pos:end="291:33">-</operator><literal type="number" pos:start="291:34" pos:end="291:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt>

    <if_stmt pos:start="293:5" pos:end="307:5"><if pos:start="293:5" pos:end="307:5">if <condition pos:start="293:8" pos:end="293:22">(<expr pos:start="293:9" pos:end="293:21"><name pos:start="293:9" pos:end="293:21">cand_up_right</name></expr>)</condition> <block pos:start="293:24" pos:end="307:5">{<block_content pos:start="295:9" pos:end="305:36">

        <for pos:start="295:9" pos:end="299:60">for <control pos:start="295:13" pos:end="295:61">(<init pos:start="295:14" pos:end="295:39"><expr pos:start="295:14" pos:end="295:38"><name pos:start="295:14" pos:end="295:14">i</name> <operator pos:start="295:16" pos:end="295:16">=</operator> <name pos:start="295:18" pos:end="295:21">size</name> <operator pos:start="295:23" pos:end="295:23">+</operator> <name pos:start="295:25" pos:end="295:38">top_right_size</name></expr>;</init> <condition pos:start="295:41" pos:end="295:56"><expr pos:start="295:41" pos:end="295:55"><name pos:start="295:41" pos:end="295:41">i</name> <operator pos:start="295:43" pos:end="295:43">&lt;</operator> <operator pos:start="295:45" pos:end="295:45">(</operator><name pos:start="295:46" pos:end="295:49">size</name> <operator pos:start="295:51" pos:end="295:52">&lt;&lt;</operator> <literal type="number" pos:start="295:54" pos:end="295:54">1</literal><operator pos:start="295:55" pos:end="295:55">)</operator></expr>;</condition> <incr pos:start="295:58" pos:end="295:60"><expr pos:start="295:58" pos:end="295:60"><name pos:start="295:58" pos:end="295:58">i</name><operator pos:start="295:59" pos:end="295:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="297:13" pos:end="299:60"><block_content pos:start="297:13" pos:end="299:60">

            <if_stmt pos:start="297:13" pos:end="299:60"><if pos:start="297:13" pos:end="299:60">if <condition pos:start="297:16" pos:end="297:96">(<expr pos:start="297:17" pos:end="297:95"><call pos:start="297:17" pos:end="297:55"><name pos:start="297:17" pos:end="297:24">IS_INTRA</name><argument_list pos:start="297:25" pos:end="297:55">(<argument pos:start="297:26" pos:end="297:50"><expr pos:start="297:26" pos:end="297:50"><name pos:start="297:26" pos:end="297:29">size</name> <operator pos:start="297:31" pos:end="297:31">+</operator> <name pos:start="297:33" pos:end="297:46">top_right_size</name> <operator pos:start="297:48" pos:end="297:48">-</operator> <literal type="number" pos:start="297:50" pos:end="297:50">1</literal></expr></argument>, <argument pos:start="297:53" pos:end="297:54"><expr pos:start="297:53" pos:end="297:54"><operator pos:start="297:53" pos:end="297:53">-</operator><literal type="number" pos:start="297:54" pos:end="297:54">1</literal></expr></argument>)</argument_list></call> <operator pos:start="297:57" pos:end="297:58">||</operator> <operator pos:start="297:60" pos:end="297:60">!</operator><name pos:start="297:61" pos:end="297:95"><name pos:start="297:61" pos:end="297:61">s</name><operator pos:start="297:62" pos:end="297:63">-&gt;</operator><name pos:start="297:64" pos:end="297:66">pps</name><operator pos:start="297:67" pos:end="297:68">-&gt;</operator><name pos:start="297:69" pos:end="297:95">constrained_intra_pred_flag</name></name></expr>)</condition><block type="pseudo" pos:start="299:17" pos:end="299:60"><block_content pos:start="299:17" pos:end="299:60">

                <expr_stmt pos:start="299:17" pos:end="299:60"><expr pos:start="299:17" pos:end="299:59"><name pos:start="299:17" pos:end="299:22"><name pos:start="299:17" pos:end="299:19">top</name><index pos:start="299:20" pos:end="299:22">[<expr pos:start="299:21" pos:end="299:21"><name pos:start="299:21" pos:end="299:21">i</name></expr>]</index></name> <operator pos:start="299:24" pos:end="299:24">=</operator> <call pos:start="299:26" pos:end="299:59"><name pos:start="299:26" pos:end="299:28">POS</name><argument_list pos:start="299:29" pos:end="299:59">(<argument pos:start="299:30" pos:end="299:54"><expr pos:start="299:30" pos:end="299:54"><name pos:start="299:30" pos:end="299:33">size</name> <operator pos:start="299:35" pos:end="299:35">+</operator> <name pos:start="299:37" pos:end="299:50">top_right_size</name> <operator pos:start="299:52" pos:end="299:52">-</operator> <literal type="number" pos:start="299:54" pos:end="299:54">1</literal></expr></argument>, <argument pos:start="299:57" pos:end="299:58"><expr pos:start="299:57" pos:end="299:58"><operator pos:start="299:57" pos:end="299:57">-</operator><literal type="number" pos:start="299:58" pos:end="299:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

        <for pos:start="301:9" pos:end="305:36">for <control pos:start="301:13" pos:end="301:59">(<init pos:start="301:14" pos:end="301:43"><expr pos:start="301:14" pos:end="301:42"><name pos:start="301:14" pos:end="301:14">i</name> <operator pos:start="301:16" pos:end="301:16">=</operator> <name pos:start="301:18" pos:end="301:21">size</name> <operator pos:start="301:23" pos:end="301:23">+</operator> <name pos:start="301:25" pos:end="301:38">top_right_size</name> <operator pos:start="301:40" pos:end="301:40">-</operator> <literal type="number" pos:start="301:42" pos:end="301:42">1</literal></expr>;</init> <condition pos:start="301:45" pos:end="301:54"><expr pos:start="301:45" pos:end="301:53"><name pos:start="301:45" pos:end="301:45">i</name> <operator pos:start="301:47" pos:end="301:48">&gt;=</operator> <name pos:start="301:50" pos:end="301:53">size</name></expr>;</condition> <incr pos:start="301:56" pos:end="301:58"><expr pos:start="301:56" pos:end="301:58"><name pos:start="301:56" pos:end="301:56">i</name><operator pos:start="301:57" pos:end="301:58">--</operator></expr></incr>)</control><block type="pseudo" pos:start="303:13" pos:end="305:36"><block_content pos:start="303:13" pos:end="305:36">

            <if_stmt pos:start="303:13" pos:end="305:36"><if pos:start="303:13" pos:end="305:36">if <condition pos:start="303:16" pos:end="303:72">(<expr pos:start="303:17" pos:end="303:71"><call pos:start="303:17" pos:end="303:31"><name pos:start="303:17" pos:end="303:24">IS_INTRA</name><argument_list pos:start="303:25" pos:end="303:31">(<argument pos:start="303:26" pos:end="303:26"><expr pos:start="303:26" pos:end="303:26"><name pos:start="303:26" pos:end="303:26">i</name></expr></argument>, <argument pos:start="303:29" pos:end="303:30"><expr pos:start="303:29" pos:end="303:30"><operator pos:start="303:29" pos:end="303:29">-</operator><literal type="number" pos:start="303:30" pos:end="303:30">1</literal></expr></argument>)</argument_list></call> <operator pos:start="303:33" pos:end="303:34">||</operator> <operator pos:start="303:36" pos:end="303:36">!</operator><name pos:start="303:37" pos:end="303:71"><name pos:start="303:37" pos:end="303:37">s</name><operator pos:start="303:38" pos:end="303:39">-&gt;</operator><name pos:start="303:40" pos:end="303:42">pps</name><operator pos:start="303:43" pos:end="303:44">-&gt;</operator><name pos:start="303:45" pos:end="303:71">constrained_intra_pred_flag</name></name></expr>)</condition><block type="pseudo" pos:start="305:17" pos:end="305:36"><block_content pos:start="305:17" pos:end="305:36">

                <expr_stmt pos:start="305:17" pos:end="305:36"><expr pos:start="305:17" pos:end="305:35"><name pos:start="305:17" pos:end="305:22"><name pos:start="305:17" pos:end="305:19">top</name><index pos:start="305:20" pos:end="305:22">[<expr pos:start="305:21" pos:end="305:21"><name pos:start="305:21" pos:end="305:21">i</name></expr>]</index></name> <operator pos:start="305:24" pos:end="305:24">=</operator> <call pos:start="305:26" pos:end="305:35"><name pos:start="305:26" pos:end="305:28">POS</name><argument_list pos:start="305:29" pos:end="305:35">(<argument pos:start="305:30" pos:end="305:30"><expr pos:start="305:30" pos:end="305:30"><name pos:start="305:30" pos:end="305:30">i</name></expr></argument>, <argument pos:start="305:33" pos:end="305:34"><expr pos:start="305:33" pos:end="305:34"><operator pos:start="305:33" pos:end="305:33">-</operator><literal type="number" pos:start="305:34" pos:end="305:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="311:5" pos:end="427:5"><if pos:start="311:5" pos:end="427:5">if <condition pos:start="311:8" pos:end="311:49">(<expr pos:start="311:9" pos:end="311:48"><name pos:start="311:9" pos:end="311:43"><name pos:start="311:9" pos:end="311:9">s</name><operator pos:start="311:10" pos:end="311:11">-&gt;</operator><name pos:start="311:12" pos:end="311:14">pps</name><operator pos:start="311:15" pos:end="311:16">-&gt;</operator><name pos:start="311:17" pos:end="311:43">constrained_intra_pred_flag</name></name> <operator pos:start="311:45" pos:end="311:46">==</operator> <literal type="number" pos:start="311:48" pos:end="311:48">1</literal></expr>)</condition> <block pos:start="311:51" pos:end="427:5">{<block_content pos:start="313:9" pos:end="425:9">

        <if_stmt pos:start="313:9" pos:end="425:9"><if pos:start="313:9" pos:end="425:9">if <condition pos:start="313:12" pos:end="313:86">(<expr pos:start="313:13" pos:end="313:85"><name pos:start="313:13" pos:end="313:28">cand_bottom_left</name> <operator pos:start="313:30" pos:end="313:31">||</operator> <name pos:start="313:33" pos:end="313:41">cand_left</name> <operator pos:start="313:43" pos:end="313:44">||</operator> <name pos:start="313:46" pos:end="313:57">cand_up_left</name> <operator pos:start="313:59" pos:end="313:60">||</operator> <name pos:start="313:62" pos:end="313:68">cand_up</name> <operator pos:start="313:70" pos:end="313:71">||</operator> <name pos:start="313:73" pos:end="313:85">cand_up_right</name></expr>)</condition> <block pos:start="313:88" pos:end="425:9">{<block_content pos:start="315:13" pos:end="423:13">

            <decl_stmt pos:start="315:13" pos:end="317:78"><decl pos:start="315:13" pos:end="317:77"><type pos:start="315:13" pos:end="315:15"><name pos:start="315:13" pos:end="315:15">int</name></type> <name pos:start="315:17" pos:end="315:26">size_max_x</name> <init pos:start="315:28" pos:end="317:77">= <expr pos:start="315:30" pos:end="317:77"><ternary pos:start="315:30" pos:end="317:77"><condition pos:start="315:30" pos:end="315:74"><expr pos:start="315:30" pos:end="315:72"><name pos:start="315:30" pos:end="315:31">x0</name> <operator pos:start="315:33" pos:end="315:33">+</operator> <operator pos:start="315:35" pos:end="315:35">(</operator><operator pos:start="315:36" pos:end="315:36">(</operator><literal type="number" pos:start="315:37" pos:end="315:37">2</literal> <operator pos:start="315:39" pos:end="315:39">*</operator> <name pos:start="315:41" pos:end="315:44">size</name><operator pos:start="315:45" pos:end="315:45">)</operator> <operator pos:start="315:47" pos:end="315:48">&lt;&lt;</operator> <name pos:start="315:50" pos:end="315:55">hshift</name><operator pos:start="315:56" pos:end="315:56">)</operator> <operator pos:start="315:58" pos:end="315:58">&lt;</operator> <name pos:start="315:60" pos:end="315:72"><name pos:start="315:60" pos:end="315:60">s</name><operator pos:start="315:61" pos:end="315:62">-&gt;</operator><name pos:start="315:63" pos:end="315:65">sps</name><operator pos:start="315:66" pos:end="315:67">-&gt;</operator><name pos:start="315:68" pos:end="315:72">width</name></name></expr> ?</condition><then pos:start="317:37" pos:end="317:44">

                                    <expr pos:start="317:37" pos:end="317:44"><literal type="number" pos:start="317:37" pos:end="317:37">2</literal> <operator pos:start="317:39" pos:end="317:39">*</operator> <name pos:start="317:41" pos:end="317:44">size</name></expr> </then><else pos:start="317:46" pos:end="317:77">: <expr pos:start="317:48" pos:end="317:77"><operator pos:start="317:48" pos:end="317:48">(</operator><name pos:start="317:49" pos:end="317:61"><name pos:start="317:49" pos:end="317:49">s</name><operator pos:start="317:50" pos:end="317:51">-&gt;</operator><name pos:start="317:52" pos:end="317:54">sps</name><operator pos:start="317:55" pos:end="317:56">-&gt;</operator><name pos:start="317:57" pos:end="317:61">width</name></name> <operator pos:start="317:63" pos:end="317:63">-</operator> <name pos:start="317:65" pos:end="317:66">x0</name><operator pos:start="317:67" pos:end="317:67">)</operator> <operator pos:start="317:69" pos:end="317:70">&gt;&gt;</operator> <name pos:start="317:72" pos:end="317:77">hshift</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="319:13" pos:end="321:79"><decl pos:start="319:13" pos:end="321:78"><type pos:start="319:13" pos:end="319:15"><name pos:start="319:13" pos:end="319:15">int</name></type> <name pos:start="319:17" pos:end="319:26">size_max_y</name> <init pos:start="319:28" pos:end="321:78">= <expr pos:start="319:30" pos:end="321:78"><ternary pos:start="319:30" pos:end="321:78"><condition pos:start="319:30" pos:end="319:75"><expr pos:start="319:30" pos:end="319:73"><name pos:start="319:30" pos:end="319:31">y0</name> <operator pos:start="319:33" pos:end="319:33">+</operator> <operator pos:start="319:35" pos:end="319:35">(</operator><operator pos:start="319:36" pos:end="319:36">(</operator><literal type="number" pos:start="319:37" pos:end="319:37">2</literal> <operator pos:start="319:39" pos:end="319:39">*</operator> <name pos:start="319:41" pos:end="319:44">size</name><operator pos:start="319:45" pos:end="319:45">)</operator> <operator pos:start="319:47" pos:end="319:48">&lt;&lt;</operator> <name pos:start="319:50" pos:end="319:55">vshift</name><operator pos:start="319:56" pos:end="319:56">)</operator> <operator pos:start="319:58" pos:end="319:58">&lt;</operator> <name pos:start="319:60" pos:end="319:73"><name pos:start="319:60" pos:end="319:60">s</name><operator pos:start="319:61" pos:end="319:62">-&gt;</operator><name pos:start="319:63" pos:end="319:65">sps</name><operator pos:start="319:66" pos:end="319:67">-&gt;</operator><name pos:start="319:68" pos:end="319:73">height</name></name></expr> ?</condition><then pos:start="321:37" pos:end="321:44">

                                    <expr pos:start="321:37" pos:end="321:44"><literal type="number" pos:start="321:37" pos:end="321:37">2</literal> <operator pos:start="321:39" pos:end="321:39">*</operator> <name pos:start="321:41" pos:end="321:44">size</name></expr> </then><else pos:start="321:46" pos:end="321:78">: <expr pos:start="321:48" pos:end="321:78"><operator pos:start="321:48" pos:end="321:48">(</operator><name pos:start="321:49" pos:end="321:62"><name pos:start="321:49" pos:end="321:49">s</name><operator pos:start="321:50" pos:end="321:51">-&gt;</operator><name pos:start="321:52" pos:end="321:54">sps</name><operator pos:start="321:55" pos:end="321:56">-&gt;</operator><name pos:start="321:57" pos:end="321:62">height</name></name> <operator pos:start="321:64" pos:end="321:64">-</operator> <name pos:start="321:66" pos:end="321:67">y0</name><operator pos:start="321:68" pos:end="321:68">)</operator> <operator pos:start="321:70" pos:end="321:71">&gt;&gt;</operator> <name pos:start="321:73" pos:end="321:78">vshift</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="323:13" pos:end="323:70"><decl pos:start="323:13" pos:end="323:69"><type pos:start="323:13" pos:end="323:15"><name pos:start="323:13" pos:end="323:15">int</name></type> <name pos:start="323:17" pos:end="323:17">j</name> <init pos:start="323:19" pos:end="323:69">= <expr pos:start="323:21" pos:end="323:69"><name pos:start="323:21" pos:end="323:24">size</name> <operator pos:start="323:26" pos:end="323:26">+</operator> <operator pos:start="323:28" pos:end="323:28">(</operator><ternary pos:start="323:29" pos:end="323:65"><condition pos:start="323:29" pos:end="323:45"><expr pos:start="323:29" pos:end="323:44"><name pos:start="323:29" pos:end="323:44">cand_bottom_left</name></expr>?</condition><then pos:start="323:47" pos:end="323:62"> <expr pos:start="323:47" pos:end="323:62"><name pos:start="323:47" pos:end="323:62">bottom_left_size</name></expr></then><else pos:start="323:63" pos:end="323:65">: <expr pos:start="323:65" pos:end="323:65"><literal type="number" pos:start="323:65" pos:end="323:65">0</literal></expr></else></ternary><operator pos:start="323:66" pos:end="323:66">)</operator> <operator pos:start="323:68" pos:end="323:68">-</operator><literal type="number" pos:start="323:69" pos:end="323:69">1</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="325:13" pos:end="331:13"><if pos:start="325:13" pos:end="331:13">if <condition pos:start="325:16" pos:end="325:31">(<expr pos:start="325:17" pos:end="325:30"><operator pos:start="325:17" pos:end="325:17">!</operator><name pos:start="325:18" pos:end="325:30">cand_up_right</name></expr>)</condition> <block pos:start="325:33" pos:end="331:13">{<block_content pos:start="327:17" pos:end="329:90">

                <expr_stmt pos:start="327:17" pos:end="329:90"><expr pos:start="327:17" pos:end="329:89"><name pos:start="327:17" pos:end="327:26">size_max_x</name> <operator pos:start="327:28" pos:end="327:28">=</operator> <ternary pos:start="327:30" pos:end="329:89"><condition pos:start="327:30" pos:end="327:70"><expr pos:start="327:30" pos:end="327:68"><name pos:start="327:30" pos:end="327:31">x0</name> <operator pos:start="327:33" pos:end="327:33">+</operator> <operator pos:start="327:35" pos:end="327:35">(</operator><operator pos:start="327:36" pos:end="327:36">(</operator><name pos:start="327:37" pos:end="327:40">size</name><operator pos:start="327:41" pos:end="327:41">)</operator> <operator pos:start="327:43" pos:end="327:44">&lt;&lt;</operator> <name pos:start="327:46" pos:end="327:51">hshift</name><operator pos:start="327:52" pos:end="327:52">)</operator> <operator pos:start="327:54" pos:end="327:54">&lt;</operator> <name pos:start="327:56" pos:end="327:68"><name pos:start="327:56" pos:end="327:56">s</name><operator pos:start="327:57" pos:end="327:58">-&gt;</operator><name pos:start="327:59" pos:end="327:61">sps</name><operator pos:start="327:62" pos:end="327:63">-&gt;</operator><name pos:start="327:64" pos:end="327:68">width</name></name></expr> ?</condition><then pos:start="329:53" pos:end="329:56">

                                                    <expr pos:start="329:53" pos:end="329:56"><name pos:start="329:53" pos:end="329:56">size</name></expr> </then><else pos:start="329:58" pos:end="329:89">: <expr pos:start="329:60" pos:end="329:89"><operator pos:start="329:60" pos:end="329:60">(</operator><name pos:start="329:61" pos:end="329:73"><name pos:start="329:61" pos:end="329:61">s</name><operator pos:start="329:62" pos:end="329:63">-&gt;</operator><name pos:start="329:64" pos:end="329:66">sps</name><operator pos:start="329:67" pos:end="329:68">-&gt;</operator><name pos:start="329:69" pos:end="329:73">width</name></name> <operator pos:start="329:75" pos:end="329:75">-</operator> <name pos:start="329:77" pos:end="329:78">x0</name><operator pos:start="329:79" pos:end="329:79">)</operator> <operator pos:start="329:81" pos:end="329:82">&gt;&gt;</operator> <name pos:start="329:84" pos:end="329:89">hshift</name></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="333:13" pos:end="339:13"><if pos:start="333:13" pos:end="339:13">if <condition pos:start="333:16" pos:end="333:34">(<expr pos:start="333:17" pos:end="333:33"><operator pos:start="333:17" pos:end="333:17">!</operator><name pos:start="333:18" pos:end="333:33">cand_bottom_left</name></expr>)</condition> <block pos:start="333:36" pos:end="339:13">{<block_content pos:start="335:17" pos:end="337:92">

                <expr_stmt pos:start="335:17" pos:end="337:92"><expr pos:start="335:17" pos:end="337:91"><name pos:start="335:17" pos:end="335:26">size_max_y</name> <operator pos:start="335:28" pos:end="335:28">=</operator> <ternary pos:start="335:30" pos:end="337:91"><condition pos:start="335:30" pos:end="335:72"><expr pos:start="335:30" pos:end="335:70"><name pos:start="335:30" pos:end="335:31">y0</name> <operator pos:start="335:33" pos:end="335:33">+</operator> <operator pos:start="335:35" pos:end="335:35">(</operator><operator pos:start="335:36" pos:end="335:36">(</operator> <name pos:start="335:38" pos:end="335:41">size</name><operator pos:start="335:42" pos:end="335:42">)</operator> <operator pos:start="335:44" pos:end="335:45">&lt;&lt;</operator> <name pos:start="335:47" pos:end="335:52">vshift</name><operator pos:start="335:53" pos:end="335:53">)</operator> <operator pos:start="335:55" pos:end="335:55">&lt;</operator> <name pos:start="335:57" pos:end="335:70"><name pos:start="335:57" pos:end="335:57">s</name><operator pos:start="335:58" pos:end="335:59">-&gt;</operator><name pos:start="335:60" pos:end="335:62">sps</name><operator pos:start="335:63" pos:end="335:64">-&gt;</operator><name pos:start="335:65" pos:end="335:70">height</name></name></expr> ?</condition><then pos:start="337:54" pos:end="337:57">

                                                     <expr pos:start="337:54" pos:end="337:57"><name pos:start="337:54" pos:end="337:57">size</name></expr> </then><else pos:start="337:59" pos:end="337:91">: <expr pos:start="337:61" pos:end="337:91"><operator pos:start="337:61" pos:end="337:61">(</operator><name pos:start="337:62" pos:end="337:75"><name pos:start="337:62" pos:end="337:62">s</name><operator pos:start="337:63" pos:end="337:64">-&gt;</operator><name pos:start="337:65" pos:end="337:67">sps</name><operator pos:start="337:68" pos:end="337:69">-&gt;</operator><name pos:start="337:70" pos:end="337:75">height</name></name> <operator pos:start="337:77" pos:end="337:77">-</operator> <name pos:start="337:79" pos:end="337:80">y0</name><operator pos:start="337:81" pos:end="337:81">)</operator> <operator pos:start="337:83" pos:end="337:84">&gt;&gt;</operator> <name pos:start="337:86" pos:end="337:91">vshift</name></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="341:13" pos:end="383:13"><if pos:start="341:13" pos:end="359:13">if <condition pos:start="341:16" pos:end="341:62">(<expr pos:start="341:17" pos:end="341:61"><name pos:start="341:17" pos:end="341:32">cand_bottom_left</name> <operator pos:start="341:34" pos:end="341:35">||</operator> <name pos:start="341:37" pos:end="341:45">cand_left</name> <operator pos:start="341:47" pos:end="341:48">||</operator> <name pos:start="341:50" pos:end="341:61">cand_up_left</name></expr>)</condition> <block pos:start="341:64" pos:end="359:13">{<block_content pos:start="343:17" pos:end="357:17">

                <while pos:start="343:17" pos:end="343:53">while <condition pos:start="343:23" pos:end="343:48">(<expr pos:start="343:24" pos:end="343:47"><name pos:start="343:24" pos:end="343:24">j</name><operator pos:start="343:25" pos:end="343:25">&gt;</operator><operator pos:start="343:26" pos:end="343:26">-</operator><literal type="number" pos:start="343:27" pos:end="343:27">1</literal> <operator pos:start="343:29" pos:end="343:30">&amp;&amp;</operator> <operator pos:start="343:32" pos:end="343:32">!</operator><call pos:start="343:33" pos:end="343:47"><name pos:start="343:33" pos:end="343:40">IS_INTRA</name><argument_list pos:start="343:41" pos:end="343:47">(<argument pos:start="343:42" pos:end="343:43"><expr pos:start="343:42" pos:end="343:43"><operator pos:start="343:42" pos:end="343:42">-</operator><literal type="number" pos:start="343:43" pos:end="343:43">1</literal></expr></argument>, <argument pos:start="343:46" pos:end="343:46"><expr pos:start="343:46" pos:end="343:46"><name pos:start="343:46" pos:end="343:46">j</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="343:50" pos:end="343:53"><block_content pos:start="343:50" pos:end="343:53"> <expr_stmt pos:start="343:50" pos:end="343:53"><expr pos:start="343:50" pos:end="343:52"><name pos:start="343:50" pos:end="343:50">j</name><operator pos:start="343:51" pos:end="343:52">--</operator></expr>;</expr_stmt></block_content></block></while>

                <if_stmt pos:start="345:17" pos:end="357:17"><if pos:start="345:17" pos:end="357:17">if <condition pos:start="345:20" pos:end="345:37">(<expr pos:start="345:21" pos:end="345:36"><operator pos:start="345:21" pos:end="345:21">!</operator><call pos:start="345:22" pos:end="345:36"><name pos:start="345:22" pos:end="345:29">IS_INTRA</name><argument_list pos:start="345:30" pos:end="345:36">(<argument pos:start="345:31" pos:end="345:32"><expr pos:start="345:31" pos:end="345:32"><operator pos:start="345:31" pos:end="345:31">-</operator><literal type="number" pos:start="345:32" pos:end="345:32">1</literal></expr></argument>, <argument pos:start="345:35" pos:end="345:35"><expr pos:start="345:35" pos:end="345:35"><name pos:start="345:35" pos:end="345:35">j</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="345:39" pos:end="357:17">{<block_content pos:start="347:21" pos:end="355:26">

                    <expr_stmt pos:start="347:21" pos:end="347:26"><expr pos:start="347:21" pos:end="347:25"><name pos:start="347:21" pos:end="347:21">j</name> <operator pos:start="347:23" pos:end="347:23">=</operator> <literal type="number" pos:start="347:25" pos:end="347:25">0</literal></expr>;</expr_stmt>

                    <while pos:start="349:21" pos:end="349:66">while<condition pos:start="349:26" pos:end="349:61">(<expr pos:start="349:27" pos:end="349:60"><name pos:start="349:27" pos:end="349:27">j</name> <operator pos:start="349:29" pos:end="349:29">&lt;</operator> <name pos:start="349:31" pos:end="349:40">size_max_x</name> <operator pos:start="349:42" pos:end="349:43">&amp;&amp;</operator> <operator pos:start="349:45" pos:end="349:45">!</operator><call pos:start="349:46" pos:end="349:60"><name pos:start="349:46" pos:end="349:53">IS_INTRA</name><argument_list pos:start="349:54" pos:end="349:60">(<argument pos:start="349:55" pos:end="349:55"><expr pos:start="349:55" pos:end="349:55"><name pos:start="349:55" pos:end="349:55">j</name></expr></argument>, <argument pos:start="349:58" pos:end="349:59"><expr pos:start="349:58" pos:end="349:59"><operator pos:start="349:58" pos:end="349:58">-</operator><literal type="number" pos:start="349:59" pos:end="349:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="349:63" pos:end="349:66"><block_content pos:start="349:63" pos:end="349:66"> <expr_stmt pos:start="349:63" pos:end="349:66"><expr pos:start="349:63" pos:end="349:65"><name pos:start="349:63" pos:end="349:63">j</name><operator pos:start="349:64" pos:end="349:65">++</operator></expr>;</expr_stmt></block_content></block></while>

                    <expr_stmt pos:start="351:21" pos:end="351:49"><expr pos:start="351:21" pos:end="351:48"><call pos:start="351:21" pos:end="351:48"><name pos:start="351:21" pos:end="351:35">EXTEND_LEFT_CIP</name><argument_list pos:start="351:36" pos:end="351:48">(<argument pos:start="351:37" pos:end="351:39"><expr pos:start="351:37" pos:end="351:39"><name pos:start="351:37" pos:end="351:39">top</name></expr></argument>, <argument pos:start="351:42" pos:end="351:42"><expr pos:start="351:42" pos:end="351:42"><name pos:start="351:42" pos:end="351:42">j</name></expr></argument>, <argument pos:start="351:45" pos:end="351:47"><expr pos:start="351:45" pos:end="351:47"><name pos:start="351:45" pos:end="351:45">j</name><operator pos:start="351:46" pos:end="351:46">+</operator><literal type="number" pos:start="351:47" pos:end="351:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="353:21" pos:end="353:39"><expr pos:start="353:21" pos:end="353:38"><name pos:start="353:21" pos:end="353:28"><name pos:start="353:21" pos:end="353:24">left</name><index pos:start="353:25" pos:end="353:28">[<expr pos:start="353:26" pos:end="353:27"><operator pos:start="353:26" pos:end="353:26">-</operator><literal type="number" pos:start="353:27" pos:end="353:27">1</literal></expr>]</index></name> <operator pos:start="353:30" pos:end="353:30">=</operator> <name pos:start="353:32" pos:end="353:38"><name pos:start="353:32" pos:end="353:34">top</name><index pos:start="353:35" pos:end="353:38">[<expr pos:start="353:36" pos:end="353:37"><operator pos:start="353:36" pos:end="353:36">-</operator><literal type="number" pos:start="353:37" pos:end="353:37">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="355:21" pos:end="355:26"><expr pos:start="355:21" pos:end="355:25"><name pos:start="355:21" pos:end="355:21">j</name> <operator pos:start="355:23" pos:end="355:23">=</operator> <literal type="number" pos:start="355:25" pos:end="355:25">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="359:15" pos:end="383:13">else <block pos:start="359:20" pos:end="383:13">{<block_content pos:start="361:17" pos:end="381:22">

                <expr_stmt pos:start="361:17" pos:end="361:22"><expr pos:start="361:17" pos:end="361:21"><name pos:start="361:17" pos:end="361:17">j</name> <operator pos:start="361:19" pos:end="361:19">=</operator> <literal type="number" pos:start="361:21" pos:end="361:21">0</literal></expr>;</expr_stmt>

                <while pos:start="363:17" pos:end="363:63">while <condition pos:start="363:23" pos:end="363:58">(<expr pos:start="363:24" pos:end="363:57"><name pos:start="363:24" pos:end="363:24">j</name> <operator pos:start="363:26" pos:end="363:26">&lt;</operator> <name pos:start="363:28" pos:end="363:37">size_max_x</name> <operator pos:start="363:39" pos:end="363:40">&amp;&amp;</operator> <operator pos:start="363:42" pos:end="363:42">!</operator><call pos:start="363:43" pos:end="363:57"><name pos:start="363:43" pos:end="363:50">IS_INTRA</name><argument_list pos:start="363:51" pos:end="363:57">(<argument pos:start="363:52" pos:end="363:52"><expr pos:start="363:52" pos:end="363:52"><name pos:start="363:52" pos:end="363:52">j</name></expr></argument>, <argument pos:start="363:55" pos:end="363:56"><expr pos:start="363:55" pos:end="363:56"><operator pos:start="363:55" pos:end="363:55">-</operator><literal type="number" pos:start="363:56" pos:end="363:56">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="363:60" pos:end="363:63"><block_content pos:start="363:60" pos:end="363:63"> <expr_stmt pos:start="363:60" pos:end="363:63"><expr pos:start="363:60" pos:end="363:62"><name pos:start="363:60" pos:end="363:60">j</name><operator pos:start="363:61" pos:end="363:62">++</operator></expr>;</expr_stmt></block_content></block></while>

                <if_stmt pos:start="365:17" pos:end="377:21"><if pos:start="365:17" pos:end="377:21">if <condition pos:start="365:20" pos:end="365:26">(<expr pos:start="365:21" pos:end="365:25"><name pos:start="365:21" pos:end="365:21">j</name> <operator pos:start="365:23" pos:end="365:23">&gt;</operator> <literal type="number" pos:start="365:25" pos:end="365:25">0</literal></expr>)</condition><block type="pseudo" pos:start="367:21" pos:end="377:21"><block_content pos:start="367:21" pos:end="377:21">

                    <if_stmt pos:start="367:21" pos:end="377:21"><if pos:start="367:21" pos:end="371:21">if <condition pos:start="367:24" pos:end="367:31">(<expr pos:start="367:25" pos:end="367:30"><name pos:start="367:25" pos:end="367:26">x0</name> <operator pos:start="367:28" pos:end="367:28">&gt;</operator> <literal type="number" pos:start="367:30" pos:end="367:30">0</literal></expr>)</condition> <block pos:start="367:33" pos:end="371:21">{<block_content pos:start="369:25" pos:end="369:53">

                        <expr_stmt pos:start="369:25" pos:end="369:53"><expr pos:start="369:25" pos:end="369:52"><call pos:start="369:25" pos:end="369:52"><name pos:start="369:25" pos:end="369:39">EXTEND_LEFT_CIP</name><argument_list pos:start="369:40" pos:end="369:52">(<argument pos:start="369:41" pos:end="369:43"><expr pos:start="369:41" pos:end="369:43"><name pos:start="369:41" pos:end="369:43">top</name></expr></argument>, <argument pos:start="369:46" pos:end="369:46"><expr pos:start="369:46" pos:end="369:46"><name pos:start="369:46" pos:end="369:46">j</name></expr></argument>, <argument pos:start="369:49" pos:end="369:51"><expr pos:start="369:49" pos:end="369:51"><name pos:start="369:49" pos:end="369:49">j</name><operator pos:start="369:50" pos:end="369:50">+</operator><literal type="number" pos:start="369:51" pos:end="369:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="371:23" pos:end="377:21">else <block pos:start="371:28" pos:end="377:21">{<block_content pos:start="373:25" pos:end="375:41">

                        <expr_stmt pos:start="373:25" pos:end="373:51"><expr pos:start="373:25" pos:end="373:50"><call pos:start="373:25" pos:end="373:50"><name pos:start="373:25" pos:end="373:39">EXTEND_LEFT_CIP</name><argument_list pos:start="373:40" pos:end="373:50">(<argument pos:start="373:41" pos:end="373:43"><expr pos:start="373:41" pos:end="373:43"><name pos:start="373:41" pos:end="373:43">top</name></expr></argument>, <argument pos:start="373:46" pos:end="373:46"><expr pos:start="373:46" pos:end="373:46"><name pos:start="373:46" pos:end="373:46">j</name></expr></argument>, <argument pos:start="373:49" pos:end="373:49"><expr pos:start="373:49" pos:end="373:49"><name pos:start="373:49" pos:end="373:49">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="375:25" pos:end="375:41"><expr pos:start="375:25" pos:end="375:40"><name pos:start="375:25" pos:end="375:31"><name pos:start="375:25" pos:end="375:27">top</name><index pos:start="375:28" pos:end="375:31">[<expr pos:start="375:29" pos:end="375:30"><operator pos:start="375:29" pos:end="375:29">-</operator><literal type="number" pos:start="375:30" pos:end="375:30">1</literal></expr>]</index></name> <operator pos:start="375:33" pos:end="375:33">=</operator> <name pos:start="375:35" pos:end="375:40"><name pos:start="375:35" pos:end="375:37">top</name><index pos:start="375:38" pos:end="375:40">[<expr pos:start="375:39" pos:end="375:39"><literal type="number" pos:start="375:39" pos:end="375:39">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:35"><expr pos:start="379:17" pos:end="379:34"><name pos:start="379:17" pos:end="379:24"><name pos:start="379:17" pos:end="379:20">left</name><index pos:start="379:21" pos:end="379:24">[<expr pos:start="379:22" pos:end="379:23"><operator pos:start="379:22" pos:end="379:22">-</operator><literal type="number" pos:start="379:23" pos:end="379:23">1</literal></expr>]</index></name> <operator pos:start="379:26" pos:end="379:26">=</operator> <name pos:start="379:28" pos:end="379:34"><name pos:start="379:28" pos:end="379:30">top</name><index pos:start="379:31" pos:end="379:34">[<expr pos:start="379:32" pos:end="379:33"><operator pos:start="379:32" pos:end="379:32">-</operator><literal type="number" pos:start="379:33" pos:end="379:33">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="381:17" pos:end="381:22"><expr pos:start="381:17" pos:end="381:21"><name pos:start="381:17" pos:end="381:17">j</name> <operator pos:start="381:19" pos:end="381:19">=</operator> <literal type="number" pos:start="381:21" pos:end="381:21">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="385:13" pos:end="389:13"><if pos:start="385:13" pos:end="389:13">if <condition pos:start="385:16" pos:end="385:46">(<expr pos:start="385:17" pos:end="385:45"><name pos:start="385:17" pos:end="385:32">cand_bottom_left</name> <operator pos:start="385:34" pos:end="385:35">||</operator> <name pos:start="385:37" pos:end="385:45">cand_left</name></expr>)</condition> <block pos:start="385:48" pos:end="389:13">{<block_content pos:start="387:17" pos:end="387:55">

                <expr_stmt pos:start="387:17" pos:end="387:55"><expr pos:start="387:17" pos:end="387:54"><call pos:start="387:17" pos:end="387:54"><name pos:start="387:17" pos:end="387:31">EXTEND_DOWN_CIP</name><argument_list pos:start="387:32" pos:end="387:54">(<argument pos:start="387:33" pos:end="387:36"><expr pos:start="387:33" pos:end="387:36"><name pos:start="387:33" pos:end="387:36">left</name></expr></argument>, <argument pos:start="387:39" pos:end="387:39"><expr pos:start="387:39" pos:end="387:39"><name pos:start="387:39" pos:end="387:39">j</name></expr></argument>, <argument pos:start="387:42" pos:end="387:53"><expr pos:start="387:42" pos:end="387:53"><name pos:start="387:42" pos:end="387:51">size_max_y</name><operator pos:start="387:52" pos:end="387:52">-</operator><name pos:start="387:53" pos:end="387:53">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="391:13" pos:end="395:13"><if pos:start="391:13" pos:end="395:13">if <condition pos:start="391:16" pos:end="391:27">(<expr pos:start="391:17" pos:end="391:26"><operator pos:start="391:17" pos:end="391:17">!</operator><name pos:start="391:18" pos:end="391:26">cand_left</name></expr>)</condition> <block pos:start="391:29" pos:end="395:13">{<block_content pos:start="393:17" pos:end="393:43">

                <expr_stmt pos:start="393:17" pos:end="393:43"><expr pos:start="393:17" pos:end="393:42"><call pos:start="393:17" pos:end="393:42"><name pos:start="393:17" pos:end="393:27">EXTEND_DOWN</name><argument_list pos:start="393:28" pos:end="393:42">(<argument pos:start="393:29" pos:end="393:32"><expr pos:start="393:29" pos:end="393:32"><name pos:start="393:29" pos:end="393:32">left</name></expr></argument>, <argument pos:start="393:35" pos:end="393:35"><expr pos:start="393:35" pos:end="393:35"><literal type="number" pos:start="393:35" pos:end="393:35">0</literal></expr></argument>, <argument pos:start="393:38" pos:end="393:41"><expr pos:start="393:38" pos:end="393:41"><name pos:start="393:38" pos:end="393:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="397:13" pos:end="401:13"><if pos:start="397:13" pos:end="401:13">if <condition pos:start="397:16" pos:end="397:34">(<expr pos:start="397:17" pos:end="397:33"><operator pos:start="397:17" pos:end="397:17">!</operator><name pos:start="397:18" pos:end="397:33">cand_bottom_left</name></expr>)</condition> <block pos:start="397:36" pos:end="401:13">{<block_content pos:start="399:17" pos:end="399:46">

                <expr_stmt pos:start="399:17" pos:end="399:46"><expr pos:start="399:17" pos:end="399:45"><call pos:start="399:17" pos:end="399:45"><name pos:start="399:17" pos:end="399:27">EXTEND_DOWN</name><argument_list pos:start="399:28" pos:end="399:45">(<argument pos:start="399:29" pos:end="399:32"><expr pos:start="399:29" pos:end="399:32"><name pos:start="399:29" pos:end="399:32">left</name></expr></argument>, <argument pos:start="399:35" pos:end="399:38"><expr pos:start="399:35" pos:end="399:38"><name pos:start="399:35" pos:end="399:38">size</name></expr></argument>, <argument pos:start="399:41" pos:end="399:44"><expr pos:start="399:41" pos:end="399:44"><name pos:start="399:41" pos:end="399:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="403:13" pos:end="415:13"><if pos:start="403:13" pos:end="407:13">if <condition pos:start="403:16" pos:end="403:35">(<expr pos:start="403:17" pos:end="403:34"><name pos:start="403:17" pos:end="403:18">x0</name> <operator pos:start="403:20" pos:end="403:21">!=</operator> <literal type="number" pos:start="403:23" pos:end="403:23">0</literal> <operator pos:start="403:25" pos:end="403:26">&amp;&amp;</operator> <name pos:start="403:28" pos:end="403:29">y0</name> <operator pos:start="403:31" pos:end="403:32">!=</operator> <literal type="number" pos:start="403:34" pos:end="403:34">0</literal></expr>)</condition> <block pos:start="403:37" pos:end="407:13">{<block_content pos:start="405:17" pos:end="405:64">

                <expr_stmt pos:start="405:17" pos:end="405:64"><expr pos:start="405:17" pos:end="405:63"><call pos:start="405:17" pos:end="405:63"><name pos:start="405:17" pos:end="405:29">EXTEND_UP_CIP</name><argument_list pos:start="405:30" pos:end="405:63">(<argument pos:start="405:31" pos:end="405:34"><expr pos:start="405:31" pos:end="405:34"><name pos:start="405:31" pos:end="405:34">left</name></expr></argument>, <argument pos:start="405:37" pos:end="405:50"><expr pos:start="405:37" pos:end="405:50"><name pos:start="405:37" pos:end="405:46">size_max_y</name> <operator pos:start="405:48" pos:end="405:48">-</operator> <literal type="number" pos:start="405:50" pos:end="405:50">1</literal></expr></argument>, <argument pos:start="405:53" pos:end="405:62"><expr pos:start="405:53" pos:end="405:62"><name pos:start="405:53" pos:end="405:62">size_max_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="407:15" pos:end="411:13">else if<condition pos:start="407:22" pos:end="407:31">( <expr pos:start="407:24" pos:end="407:30"><name pos:start="407:24" pos:end="407:25">x0</name> <operator pos:start="407:27" pos:end="407:28">==</operator> <literal type="number" pos:start="407:30" pos:end="407:30">0</literal></expr>)</condition> <block pos:start="407:33" pos:end="411:13">{<block_content pos:start="409:17" pos:end="409:66">

                <expr_stmt pos:start="409:17" pos:end="409:66"><expr pos:start="409:17" pos:end="409:65"><call pos:start="409:17" pos:end="409:65"><name pos:start="409:17" pos:end="409:31">EXTEND_UP_CIP_0</name><argument_list pos:start="409:32" pos:end="409:65">(<argument pos:start="409:33" pos:end="409:36"><expr pos:start="409:33" pos:end="409:36"><name pos:start="409:33" pos:end="409:36">left</name></expr></argument>, <argument pos:start="409:39" pos:end="409:52"><expr pos:start="409:39" pos:end="409:52"><name pos:start="409:39" pos:end="409:48">size_max_y</name> <operator pos:start="409:50" pos:end="409:50">-</operator> <literal type="number" pos:start="409:52" pos:end="409:52">1</literal></expr></argument>, <argument pos:start="409:55" pos:end="409:64"><expr pos:start="409:55" pos:end="409:64"><name pos:start="409:55" pos:end="409:64">size_max_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="411:15" pos:end="415:13">else<block pos:start="411:19" pos:end="415:13">{<block_content pos:start="413:17" pos:end="413:66">

                <expr_stmt pos:start="413:17" pos:end="413:66"><expr pos:start="413:17" pos:end="413:65"><call pos:start="413:17" pos:end="413:65"><name pos:start="413:17" pos:end="413:29">EXTEND_UP_CIP</name><argument_list pos:start="413:30" pos:end="413:65">(<argument pos:start="413:31" pos:end="413:34"><expr pos:start="413:31" pos:end="413:34"><name pos:start="413:31" pos:end="413:34">left</name></expr></argument>, <argument pos:start="413:37" pos:end="413:50"><expr pos:start="413:37" pos:end="413:50"><name pos:start="413:37" pos:end="413:46">size_max_y</name> <operator pos:start="413:48" pos:end="413:48">-</operator> <literal type="number" pos:start="413:50" pos:end="413:50">1</literal></expr></argument>, <argument pos:start="413:53" pos:end="413:64"><expr pos:start="413:53" pos:end="413:64"><name pos:start="413:53" pos:end="413:62">size_max_y</name><operator pos:start="413:63" pos:end="413:63">-</operator><literal type="number" pos:start="413:64" pos:end="413:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:31"><expr pos:start="417:13" pos:end="417:30"><name pos:start="417:13" pos:end="417:19"><name pos:start="417:13" pos:end="417:15">top</name><index pos:start="417:16" pos:end="417:19">[<expr pos:start="417:17" pos:end="417:18"><operator pos:start="417:17" pos:end="417:17">-</operator><literal type="number" pos:start="417:18" pos:end="417:18">1</literal></expr>]</index></name> <operator pos:start="417:21" pos:end="417:21">=</operator> <name pos:start="417:23" pos:end="417:30"><name pos:start="417:23" pos:end="417:26">left</name><index pos:start="417:27" pos:end="417:30">[<expr pos:start="417:28" pos:end="417:29"><operator pos:start="417:28" pos:end="417:28">-</operator><literal type="number" pos:start="417:29" pos:end="417:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="419:13" pos:end="423:13"><if pos:start="419:13" pos:end="423:13">if <condition pos:start="419:16" pos:end="419:24">(<expr pos:start="419:17" pos:end="419:23"><name pos:start="419:17" pos:end="419:18">y0</name> <operator pos:start="419:20" pos:end="419:21">!=</operator> <literal type="number" pos:start="419:23" pos:end="419:23">0</literal></expr>)</condition> <block pos:start="419:26" pos:end="423:13">{<block_content pos:start="421:17" pos:end="421:53">

                <expr_stmt pos:start="421:17" pos:end="421:53"><expr pos:start="421:17" pos:end="421:52"><call pos:start="421:17" pos:end="421:52"><name pos:start="421:17" pos:end="421:32">EXTEND_RIGHT_CIP</name><argument_list pos:start="421:33" pos:end="421:52">(<argument pos:start="421:34" pos:end="421:36"><expr pos:start="421:34" pos:end="421:36"><name pos:start="421:34" pos:end="421:36">top</name></expr></argument>, <argument pos:start="421:39" pos:end="421:39"><expr pos:start="421:39" pos:end="421:39"><literal type="number" pos:start="421:39" pos:end="421:39">0</literal></expr></argument>, <argument pos:start="421:42" pos:end="421:51"><expr pos:start="421:42" pos:end="421:51"><name pos:start="421:42" pos:end="421:51">size_max_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="429:5" pos:end="429:36">// Infer the unavailable samples</comment>

    <if_stmt pos:start="431:5" pos:end="477:5"><if pos:start="431:5" pos:end="477:5">if <condition pos:start="431:8" pos:end="431:26">(<expr pos:start="431:9" pos:end="431:25"><operator pos:start="431:9" pos:end="431:9">!</operator><name pos:start="431:10" pos:end="431:25">cand_bottom_left</name></expr>)</condition> <block pos:start="431:28" pos:end="477:5">{<block_content pos:start="433:9" pos:end="475:9">

        <if_stmt pos:start="433:9" pos:end="475:9"><if pos:start="433:9" pos:end="437:9">if <condition pos:start="433:12" pos:end="433:22">(<expr pos:start="433:13" pos:end="433:21"><name pos:start="433:13" pos:end="433:21">cand_left</name></expr>)</condition> <block pos:start="433:24" pos:end="437:9">{<block_content pos:start="435:13" pos:end="435:42">

            <expr_stmt pos:start="435:13" pos:end="435:42"><expr pos:start="435:13" pos:end="435:41"><call pos:start="435:13" pos:end="435:41"><name pos:start="435:13" pos:end="435:23">EXTEND_DOWN</name><argument_list pos:start="435:24" pos:end="435:41">(<argument pos:start="435:25" pos:end="435:28"><expr pos:start="435:25" pos:end="435:28"><name pos:start="435:25" pos:end="435:28">left</name></expr></argument>, <argument pos:start="435:31" pos:end="435:34"><expr pos:start="435:31" pos:end="435:34"><name pos:start="435:31" pos:end="435:34">size</name></expr></argument>, <argument pos:start="435:37" pos:end="435:40"><expr pos:start="435:37" pos:end="435:40"><name pos:start="435:37" pos:end="435:40">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="437:11" pos:end="443:9">else if <condition pos:start="437:19" pos:end="437:32">(<expr pos:start="437:20" pos:end="437:31"><name pos:start="437:20" pos:end="437:31">cand_up_left</name></expr>)</condition> <block pos:start="437:34" pos:end="443:9">{<block_content pos:start="439:13" pos:end="441:26">

            <expr_stmt pos:start="439:13" pos:end="439:43"><expr pos:start="439:13" pos:end="439:42"><call pos:start="439:13" pos:end="439:42"><name pos:start="439:13" pos:end="439:23">EXTEND_DOWN</name><argument_list pos:start="439:24" pos:end="439:42">(<argument pos:start="439:25" pos:end="439:28"><expr pos:start="439:25" pos:end="439:28"><name pos:start="439:25" pos:end="439:28">left</name></expr></argument>, <argument pos:start="439:31" pos:end="439:31"><expr pos:start="439:31" pos:end="439:31"><literal type="number" pos:start="439:31" pos:end="439:31">0</literal></expr></argument>, <argument pos:start="439:34" pos:end="439:41"><expr pos:start="439:34" pos:end="439:41"><literal type="number" pos:start="439:34" pos:end="439:34">2</literal> <operator pos:start="439:36" pos:end="439:36">*</operator> <name pos:start="439:38" pos:end="439:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:26"><expr pos:start="441:13" pos:end="441:25"><name pos:start="441:13" pos:end="441:21">cand_left</name> <operator pos:start="441:23" pos:end="441:23">=</operator> <literal type="number" pos:start="441:25" pos:end="441:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="443:11" pos:end="453:9">else if <condition pos:start="443:19" pos:end="443:27">(<expr pos:start="443:20" pos:end="443:26"><name pos:start="443:20" pos:end="443:26">cand_up</name></expr>)</condition> <block pos:start="443:29" pos:end="453:9">{<block_content pos:start="445:13" pos:end="451:26">

            <expr_stmt pos:start="445:13" pos:end="445:30"><expr pos:start="445:13" pos:end="445:29"><name pos:start="445:13" pos:end="445:20"><name pos:start="445:13" pos:end="445:16">left</name><index pos:start="445:17" pos:end="445:20">[<expr pos:start="445:18" pos:end="445:19"><operator pos:start="445:18" pos:end="445:18">-</operator><literal type="number" pos:start="445:19" pos:end="445:19">1</literal></expr>]</index></name> <operator pos:start="445:22" pos:end="445:22">=</operator> <name pos:start="445:24" pos:end="445:29"><name pos:start="445:24" pos:end="445:26">top</name><index pos:start="445:27" pos:end="445:29">[<expr pos:start="445:28" pos:end="445:28"><literal type="number" pos:start="445:28" pos:end="445:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="447:13" pos:end="447:43"><expr pos:start="447:13" pos:end="447:42"><call pos:start="447:13" pos:end="447:42"><name pos:start="447:13" pos:end="447:23">EXTEND_DOWN</name><argument_list pos:start="447:24" pos:end="447:42">(<argument pos:start="447:25" pos:end="447:28"><expr pos:start="447:25" pos:end="447:28"><name pos:start="447:25" pos:end="447:28">left</name></expr></argument>, <argument pos:start="447:31" pos:end="447:31"><expr pos:start="447:31" pos:end="447:31"><literal type="number" pos:start="447:31" pos:end="447:31">0</literal></expr></argument>, <argument pos:start="447:34" pos:end="447:41"><expr pos:start="447:34" pos:end="447:41"><literal type="number" pos:start="447:34" pos:end="447:34">2</literal> <operator pos:start="447:36" pos:end="447:36">*</operator> <name pos:start="447:38" pos:end="447:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:29"><expr pos:start="449:13" pos:end="449:28"><name pos:start="449:13" pos:end="449:24">cand_up_left</name> <operator pos:start="449:26" pos:end="449:26">=</operator> <literal type="number" pos:start="449:28" pos:end="449:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:26"><expr pos:start="451:13" pos:end="451:25"><name pos:start="451:13" pos:end="451:21">cand_left</name> <operator pos:start="451:23" pos:end="451:23">=</operator> <literal type="number" pos:start="451:25" pos:end="451:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="453:11" pos:end="467:9">else if <condition pos:start="453:19" pos:end="453:33">(<expr pos:start="453:20" pos:end="453:32"><name pos:start="453:20" pos:end="453:32">cand_up_right</name></expr>)</condition> <block pos:start="453:35" pos:end="467:9">{<block_content pos:start="455:13" pos:end="465:26">

            <expr_stmt pos:start="455:13" pos:end="455:41"><expr pos:start="455:13" pos:end="455:40"><call pos:start="455:13" pos:end="455:40"><name pos:start="455:13" pos:end="455:23">EXTEND_LEFT</name><argument_list pos:start="455:24" pos:end="455:40">(<argument pos:start="455:25" pos:end="455:27"><expr pos:start="455:25" pos:end="455:27"><name pos:start="455:25" pos:end="455:27">top</name></expr></argument>, <argument pos:start="455:30" pos:end="455:33"><expr pos:start="455:30" pos:end="455:33"><name pos:start="455:30" pos:end="455:33">size</name></expr></argument>, <argument pos:start="455:36" pos:end="455:39"><expr pos:start="455:36" pos:end="455:39"><name pos:start="455:36" pos:end="455:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="457:13" pos:end="457:30"><expr pos:start="457:13" pos:end="457:29"><name pos:start="457:13" pos:end="457:20"><name pos:start="457:13" pos:end="457:16">left</name><index pos:start="457:17" pos:end="457:20">[<expr pos:start="457:18" pos:end="457:19"><operator pos:start="457:18" pos:end="457:18">-</operator><literal type="number" pos:start="457:19" pos:end="457:19">1</literal></expr>]</index></name> <operator pos:start="457:22" pos:end="457:22">=</operator> <name pos:start="457:24" pos:end="457:29"><name pos:start="457:24" pos:end="457:26">top</name><index pos:start="457:27" pos:end="457:29">[<expr pos:start="457:28" pos:end="457:28"><literal type="number" pos:start="457:28" pos:end="457:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:44"><expr pos:start="459:13" pos:end="459:43"><call pos:start="459:13" pos:end="459:43"><name pos:start="459:13" pos:end="459:23">EXTEND_DOWN</name><argument_list pos:start="459:24" pos:end="459:43">(<argument pos:start="459:25" pos:end="459:28"><expr pos:start="459:25" pos:end="459:28"><name pos:start="459:25" pos:end="459:28">left</name></expr></argument> ,<argument pos:start="459:31" pos:end="459:31"><expr pos:start="459:31" pos:end="459:31"><literal type="number" pos:start="459:31" pos:end="459:31">0</literal></expr></argument> , <argument pos:start="459:35" pos:end="459:42"><expr pos:start="459:35" pos:end="459:42"><literal type="number" pos:start="459:35" pos:end="459:35">2</literal> <operator pos:start="459:37" pos:end="459:37">*</operator> <name pos:start="459:39" pos:end="459:42">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:24"><expr pos:start="461:13" pos:end="461:23"><name pos:start="461:13" pos:end="461:19">cand_up</name> <operator pos:start="461:21" pos:end="461:21">=</operator> <literal type="number" pos:start="461:23" pos:end="461:23">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:29"><expr pos:start="463:13" pos:end="463:28"><name pos:start="463:13" pos:end="463:24">cand_up_left</name> <operator pos:start="463:26" pos:end="463:26">=</operator> <literal type="number" pos:start="463:28" pos:end="463:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="465:13" pos:end="465:26"><expr pos:start="465:13" pos:end="465:25"><name pos:start="465:13" pos:end="465:21">cand_left</name> <operator pos:start="465:23" pos:end="465:23">=</operator> <literal type="number" pos:start="465:25" pos:end="465:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="467:11" pos:end="475:9">else <block pos:start="467:16" pos:end="475:9">{<block_content pos:start="469:13" pos:end="473:43"> <comment type="line" pos:start="467:18" pos:end="467:40">// No samples available</comment>

            <expr_stmt pos:start="469:13" pos:end="469:55"><expr pos:start="469:13" pos:end="469:54"><name pos:start="469:13" pos:end="469:18"><name pos:start="469:13" pos:end="469:15">top</name><index pos:start="469:16" pos:end="469:18">[<expr pos:start="469:17" pos:end="469:17"><literal type="number" pos:start="469:17" pos:end="469:17">0</literal></expr>]</index></name> <operator pos:start="469:20" pos:end="469:20">=</operator> <name pos:start="469:22" pos:end="469:29"><name pos:start="469:22" pos:end="469:25">left</name><index pos:start="469:26" pos:end="469:29">[<expr pos:start="469:27" pos:end="469:28"><operator pos:start="469:27" pos:end="469:27">-</operator><literal type="number" pos:start="469:28" pos:end="469:28">1</literal></expr>]</index></name> <operator pos:start="469:31" pos:end="469:31">=</operator> <operator pos:start="469:33" pos:end="469:33">(</operator><literal type="number" pos:start="469:34" pos:end="469:34">1</literal> <operator pos:start="469:36" pos:end="469:37">&lt;&lt;</operator> <operator pos:start="469:39" pos:end="469:39">(</operator><name pos:start="469:40" pos:end="469:48">BIT_DEPTH</name> <operator pos:start="469:50" pos:end="469:50">-</operator> <literal type="number" pos:start="469:52" pos:end="469:52">1</literal><operator pos:start="469:53" pos:end="469:53">)</operator><operator pos:start="469:54" pos:end="469:54">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="471:13" pos:end="471:47"><expr pos:start="471:13" pos:end="471:46"><call pos:start="471:13" pos:end="471:46"><name pos:start="471:13" pos:end="471:24">EXTEND_RIGHT</name><argument_list pos:start="471:25" pos:end="471:46">(<argument pos:start="471:26" pos:end="471:28"><expr pos:start="471:26" pos:end="471:28"><name pos:start="471:26" pos:end="471:28">top</name></expr></argument>, <argument pos:start="471:31" pos:end="471:31"><expr pos:start="471:31" pos:end="471:31"><literal type="number" pos:start="471:31" pos:end="471:31">1</literal></expr></argument>, <argument pos:start="471:34" pos:end="471:45"><expr pos:start="471:34" pos:end="471:45"><literal type="number" pos:start="471:34" pos:end="471:34">2</literal> <operator pos:start="471:36" pos:end="471:36">*</operator> <name pos:start="471:38" pos:end="471:41">size</name> <operator pos:start="471:43" pos:end="471:43">-</operator> <literal type="number" pos:start="471:45" pos:end="471:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="473:13" pos:end="473:43"><expr pos:start="473:13" pos:end="473:42"><call pos:start="473:13" pos:end="473:42"><name pos:start="473:13" pos:end="473:23">EXTEND_DOWN</name><argument_list pos:start="473:24" pos:end="473:42">(<argument pos:start="473:25" pos:end="473:28"><expr pos:start="473:25" pos:end="473:28"><name pos:start="473:25" pos:end="473:28">left</name></expr></argument>, <argument pos:start="473:31" pos:end="473:31"><expr pos:start="473:31" pos:end="473:31"><literal type="number" pos:start="473:31" pos:end="473:31">0</literal></expr></argument>, <argument pos:start="473:34" pos:end="473:41"><expr pos:start="473:34" pos:end="473:41"><literal type="number" pos:start="473:34" pos:end="473:34">2</literal> <operator pos:start="473:36" pos:end="473:36">*</operator> <name pos:start="473:38" pos:end="473:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="481:5" pos:end="485:5"><if pos:start="481:5" pos:end="485:5">if <condition pos:start="481:8" pos:end="481:19">(<expr pos:start="481:9" pos:end="481:18"><operator pos:start="481:9" pos:end="481:9">!</operator><name pos:start="481:10" pos:end="481:18">cand_left</name></expr>)</condition> <block pos:start="481:21" pos:end="485:5">{<block_content pos:start="483:9" pos:end="483:36">

        <expr_stmt pos:start="483:9" pos:end="483:36"><expr pos:start="483:9" pos:end="483:35"><call pos:start="483:9" pos:end="483:35"><name pos:start="483:9" pos:end="483:17">EXTEND_UP</name><argument_list pos:start="483:18" pos:end="483:35">(<argument pos:start="483:19" pos:end="483:22"><expr pos:start="483:19" pos:end="483:22"><name pos:start="483:19" pos:end="483:22">left</name></expr></argument>, <argument pos:start="483:25" pos:end="483:28"><expr pos:start="483:25" pos:end="483:28"><name pos:start="483:25" pos:end="483:28">size</name></expr></argument>, <argument pos:start="483:31" pos:end="483:34"><expr pos:start="483:31" pos:end="483:34"><name pos:start="483:31" pos:end="483:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="487:5" pos:end="491:5"><if pos:start="487:5" pos:end="491:5">if <condition pos:start="487:8" pos:end="487:22">(<expr pos:start="487:9" pos:end="487:21"><operator pos:start="487:9" pos:end="487:9">!</operator><name pos:start="487:10" pos:end="487:21">cand_up_left</name></expr>)</condition> <block pos:start="487:24" pos:end="491:5">{<block_content pos:start="489:9" pos:end="489:27">

        <expr_stmt pos:start="489:9" pos:end="489:27"><expr pos:start="489:9" pos:end="489:26"><name pos:start="489:9" pos:end="489:16"><name pos:start="489:9" pos:end="489:12">left</name><index pos:start="489:13" pos:end="489:16">[<expr pos:start="489:14" pos:end="489:15"><operator pos:start="489:14" pos:end="489:14">-</operator><literal type="number" pos:start="489:15" pos:end="489:15">1</literal></expr>]</index></name> <operator pos:start="489:18" pos:end="489:18">=</operator> <name pos:start="489:20" pos:end="489:26"><name pos:start="489:20" pos:end="489:23">left</name><index pos:start="489:24" pos:end="489:26">[<expr pos:start="489:25" pos:end="489:25"><literal type="number" pos:start="489:25" pos:end="489:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="493:5" pos:end="499:5"><if pos:start="493:5" pos:end="499:5">if <condition pos:start="493:8" pos:end="493:17">(<expr pos:start="493:9" pos:end="493:16"><operator pos:start="493:9" pos:end="493:9">!</operator><name pos:start="493:10" pos:end="493:16">cand_up</name></expr>)</condition> <block pos:start="493:19" pos:end="499:5">{<block_content pos:start="495:9" pos:end="497:37">

        <expr_stmt pos:start="495:9" pos:end="495:26"><expr pos:start="495:9" pos:end="495:25"><name pos:start="495:9" pos:end="495:14"><name pos:start="495:9" pos:end="495:11">top</name><index pos:start="495:12" pos:end="495:14">[<expr pos:start="495:13" pos:end="495:13"><literal type="number" pos:start="495:13" pos:end="495:13">0</literal></expr>]</index></name> <operator pos:start="495:16" pos:end="495:16">=</operator> <name pos:start="495:18" pos:end="495:25"><name pos:start="495:18" pos:end="495:21">left</name><index pos:start="495:22" pos:end="495:25">[<expr pos:start="495:23" pos:end="495:24"><operator pos:start="495:23" pos:end="495:23">-</operator><literal type="number" pos:start="495:24" pos:end="495:24">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="497:9" pos:end="497:37"><expr pos:start="497:9" pos:end="497:36"><call pos:start="497:9" pos:end="497:36"><name pos:start="497:9" pos:end="497:20">EXTEND_RIGHT</name><argument_list pos:start="497:21" pos:end="497:36">(<argument pos:start="497:22" pos:end="497:24"><expr pos:start="497:22" pos:end="497:24"><name pos:start="497:22" pos:end="497:24">top</name></expr></argument>, <argument pos:start="497:27" pos:end="497:27"><expr pos:start="497:27" pos:end="497:27"><literal type="number" pos:start="497:27" pos:end="497:27">1</literal></expr></argument>, <argument pos:start="497:30" pos:end="497:35"><expr pos:start="497:30" pos:end="497:35"><name pos:start="497:30" pos:end="497:33">size</name><operator pos:start="497:34" pos:end="497:34">-</operator><literal type="number" pos:start="497:35" pos:end="497:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="501:5" pos:end="505:5"><if pos:start="501:5" pos:end="505:5">if <condition pos:start="501:8" pos:end="501:23">(<expr pos:start="501:9" pos:end="501:22"><operator pos:start="501:9" pos:end="501:9">!</operator><name pos:start="501:10" pos:end="501:22">cand_up_right</name></expr>)</condition> <block pos:start="501:25" pos:end="505:5">{<block_content pos:start="503:9" pos:end="503:38">

        <expr_stmt pos:start="503:9" pos:end="503:38"><expr pos:start="503:9" pos:end="503:37"><call pos:start="503:9" pos:end="503:37"><name pos:start="503:9" pos:end="503:20">EXTEND_RIGHT</name><argument_list pos:start="503:21" pos:end="503:37">(<argument pos:start="503:22" pos:end="503:24"><expr pos:start="503:22" pos:end="503:24"><name pos:start="503:22" pos:end="503:24">top</name></expr></argument>, <argument pos:start="503:27" pos:end="503:30"><expr pos:start="503:27" pos:end="503:30"><name pos:start="503:27" pos:end="503:30">size</name></expr></argument>, <argument pos:start="503:33" pos:end="503:36"><expr pos:start="503:33" pos:end="503:36"><name pos:start="503:33" pos:end="503:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="509:5" pos:end="538:0"><expr pos:start="509:5" pos:end="509:22"><name pos:start="509:5" pos:end="509:11"><name pos:start="509:5" pos:end="509:7">top</name><index pos:start="509:8" pos:end="509:11">[<expr pos:start="509:9" pos:end="509:10"><operator pos:start="509:9" pos:end="509:9">-</operator><literal type="number" pos:start="509:10" pos:end="509:10">1</literal></expr>]</index></name> <operator pos:start="509:13" pos:end="509:13">=</operator> <name pos:start="509:15" pos:end="509:22"><name pos:start="509:15" pos:end="509:18">left</name><index pos:start="509:19" pos:end="509:22">[<expr pos:start="509:20" pos:end="509:21"><operator pos:start="509:20" pos:end="509:20">-</operator><literal type="number" pos:start="509:21" pos:end="509:21">1</literal></expr>]</index></name></expr>;</expr_stmt>



<cpp:undef pos:start="513:1" pos:end="513:22">#<cpp:directive pos:start="513:2" pos:end="513:6">undef</cpp:directive> <name pos:start="513:8" pos:end="513:22">EXTEND_LEFT_CIP</name></cpp:undef>

<cpp:undef pos:start="515:1" pos:end="515:23">#<cpp:directive pos:start="515:2" pos:end="515:6">undef</cpp:directive> <name pos:start="515:8" pos:end="515:23">EXTEND_RIGHT_CIP</name></cpp:undef>

<cpp:undef pos:start="517:1" pos:end="517:20">#<cpp:directive pos:start="517:2" pos:end="517:6">undef</cpp:directive> <name pos:start="517:8" pos:end="517:20">EXTEND_UP_CIP</name></cpp:undef>

<cpp:undef pos:start="519:1" pos:end="519:22">#<cpp:directive pos:start="519:2" pos:end="519:6">undef</cpp:directive> <name pos:start="519:8" pos:end="519:22">EXTEND_DOWN_CIP</name></cpp:undef>

<cpp:undef pos:start="521:1" pos:end="521:15">#<cpp:directive pos:start="521:2" pos:end="521:6">undef</cpp:directive> <name pos:start="521:8" pos:end="521:15">IS_INTRA</name></cpp:undef>

<cpp:undef pos:start="523:1" pos:end="523:13">#<cpp:directive pos:start="523:2" pos:end="523:6">undef</cpp:directive> <name pos:start="523:8" pos:end="523:13">MVF_PU</name></cpp:undef>

<cpp:undef pos:start="525:1" pos:end="525:10">#<cpp:directive pos:start="525:2" pos:end="525:6">undef</cpp:directive> <name pos:start="525:8" pos:end="525:10">MVF</name></cpp:undef>

<cpp:undef pos:start="527:1" pos:end="527:9">#<cpp:directive pos:start="527:2" pos:end="527:6">undef</cpp:directive> <name pos:start="527:8" pos:end="527:9">PU</name></cpp:undef>

<cpp:undef pos:start="529:1" pos:end="529:18">#<cpp:directive pos:start="529:2" pos:end="529:6">undef</cpp:directive> <name pos:start="529:8" pos:end="529:18">EXTEND_LEFT</name></cpp:undef>

<cpp:undef pos:start="531:1" pos:end="531:19">#<cpp:directive pos:start="531:2" pos:end="531:6">undef</cpp:directive> <name pos:start="531:8" pos:end="531:19">EXTEND_RIGHT</name></cpp:undef>

<cpp:undef pos:start="533:1" pos:end="533:16">#<cpp:directive pos:start="533:2" pos:end="533:6">undef</cpp:directive> <name pos:start="533:8" pos:end="533:16">EXTEND_UP</name></cpp:undef>

<cpp:undef pos:start="535:1" pos:end="535:18">#<cpp:directive pos:start="535:2" pos:end="535:6">undef</cpp:directive> <name pos:start="535:8" pos:end="535:18">EXTEND_DOWN</name></cpp:undef>

<cpp:undef pos:start="537:1" pos:end="537:21">#<cpp:directive pos:start="537:2" pos:end="537:6">undef</cpp:directive> <name pos:start="537:8" pos:end="537:21">MIN_TB_ADDR_ZS</name></cpp:undef>



    <comment type="line" pos:start="541:5" pos:end="541:24">// Filtering process</comment>

    <if_stmt pos:start="543:5" pos:end="617:5"><if pos:start="543:5" pos:end="617:5">if <condition pos:start="543:8" pos:end="543:52">(<expr pos:start="543:9" pos:end="543:51"><name pos:start="543:9" pos:end="543:13">c_idx</name> <operator pos:start="543:15" pos:end="543:16">==</operator> <literal type="number" pos:start="543:18" pos:end="543:18">0</literal> <operator pos:start="543:20" pos:end="543:21">&amp;&amp;</operator> <name pos:start="543:23" pos:end="543:26">mode</name> <operator pos:start="543:28" pos:end="543:29">!=</operator> <name pos:start="543:31" pos:end="543:38">INTRA_DC</name> <operator pos:start="543:40" pos:end="543:41">&amp;&amp;</operator> <name pos:start="543:43" pos:end="543:46">size</name> <operator pos:start="543:48" pos:end="543:49">!=</operator> <literal type="number" pos:start="543:51" pos:end="543:51">4</literal></expr>)</condition> <block pos:start="543:54" pos:end="617:5">{<block_content pos:start="545:9" pos:end="615:9">

        <decl_stmt pos:start="545:9" pos:end="545:54"><decl pos:start="545:9" pos:end="545:53"><type pos:start="545:9" pos:end="545:11"><name pos:start="545:9" pos:end="545:11">int</name></type> <name pos:start="545:13" pos:end="545:39"><name pos:start="545:13" pos:end="545:37">intra_hor_ver_dist_thresh</name><index pos:start="545:38" pos:end="545:39">[]</index></name> <init pos:start="545:41" pos:end="545:53">= <expr pos:start="545:43" pos:end="545:53"><block pos:start="545:43" pos:end="545:53">{ <expr pos:start="545:45" pos:end="545:45"><literal type="number" pos:start="545:45" pos:end="545:45">7</literal></expr>, <expr pos:start="545:48" pos:end="545:48"><literal type="number" pos:start="545:48" pos:end="545:48">1</literal></expr>, <expr pos:start="545:51" pos:end="545:51"><literal type="number" pos:start="545:51" pos:end="545:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="547:9" pos:end="549:71"><decl pos:start="547:9" pos:end="549:70"><type pos:start="547:9" pos:end="547:11"><name pos:start="547:9" pos:end="547:11">int</name></type> <name pos:start="547:13" pos:end="547:29">min_dist_vert_hor</name>           <init pos:start="547:41" pos:end="549:70">= <expr pos:start="547:43" pos:end="549:70"><call pos:start="547:43" pos:end="549:70"><name pos:start="547:43" pos:end="547:47">FFMIN</name><argument_list pos:start="547:48" pos:end="549:70">(<argument pos:start="547:49" pos:end="547:69"><expr pos:start="547:49" pos:end="547:69"><call pos:start="547:49" pos:end="547:69"><name pos:start="547:49" pos:end="547:53">FFABS</name><argument_list pos:start="547:54" pos:end="547:69">(<argument pos:start="547:55" pos:end="547:68"><expr pos:start="547:55" pos:end="547:68"><operator pos:start="547:55" pos:end="547:55">(</operator><name pos:start="547:56" pos:end="547:58">int</name><operator pos:start="547:59" pos:end="547:59">)</operator><name pos:start="547:60" pos:end="547:63">mode</name> <operator pos:start="547:65" pos:end="547:65">-</operator> <literal type="number" pos:start="547:67" pos:end="547:68">26</literal></expr></argument>)</argument_list></call></expr></argument>,

                                                <argument pos:start="549:49" pos:end="549:69"><expr pos:start="549:49" pos:end="549:69"><call pos:start="549:49" pos:end="549:69"><name pos:start="549:49" pos:end="549:53">FFABS</name><argument_list pos:start="549:54" pos:end="549:69">(<argument pos:start="549:55" pos:end="549:68"><expr pos:start="549:55" pos:end="549:68"><operator pos:start="549:55" pos:end="549:55">(</operator><name pos:start="549:56" pos:end="549:58">int</name><operator pos:start="549:59" pos:end="549:59">)</operator><name pos:start="549:60" pos:end="549:63">mode</name> <operator pos:start="549:65" pos:end="549:65">-</operator> <literal type="number" pos:start="549:67" pos:end="549:68">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="551:9" pos:end="615:9"><if pos:start="551:9" pos:end="615:9">if <condition pos:start="551:12" pos:end="551:73">(<expr pos:start="551:13" pos:end="551:72"><name pos:start="551:13" pos:end="551:29">min_dist_vert_hor</name> <operator pos:start="551:31" pos:end="551:31">&gt;</operator> <name pos:start="551:33" pos:end="551:72"><name pos:start="551:33" pos:end="551:57">intra_hor_ver_dist_thresh</name><index pos:start="551:58" pos:end="551:72">[<expr pos:start="551:59" pos:end="551:71"><name pos:start="551:59" pos:end="551:67">log2_size</name> <operator pos:start="551:69" pos:end="551:69">-</operator> <literal type="number" pos:start="551:71" pos:end="551:71">3</literal></expr>]</index></name></expr>)</condition> <block pos:start="551:75" pos:end="615:9">{<block_content pos:start="553:13" pos:end="613:13">

            <decl_stmt pos:start="553:13" pos:end="553:49"><decl pos:start="553:13" pos:end="553:48"><type pos:start="553:13" pos:end="553:15"><name pos:start="553:13" pos:end="553:15">int</name></type> <name pos:start="553:17" pos:end="553:25">threshold</name> <init pos:start="553:27" pos:end="553:48">= <expr pos:start="553:29" pos:end="553:48"><literal type="number" pos:start="553:29" pos:end="553:29">1</literal> <operator pos:start="553:31" pos:end="553:32">&lt;&lt;</operator> <operator pos:start="553:34" pos:end="553:34">(</operator><name pos:start="553:35" pos:end="553:43">BIT_DEPTH</name> <operator pos:start="553:45" pos:end="553:45">-</operator> <literal type="number" pos:start="553:47" pos:end="553:47">5</literal><operator pos:start="553:48" pos:end="553:48">)</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="555:13" pos:end="613:13"><if pos:start="555:13" pos:end="585:13">if <condition pos:start="555:16" pos:end="561:70">(<expr pos:start="555:17" pos:end="561:69"><name pos:start="555:17" pos:end="555:62"><name pos:start="555:17" pos:end="555:17">s</name><operator pos:start="555:18" pos:end="555:19">-&gt;</operator><name pos:start="555:20" pos:end="555:22">sps</name><operator pos:start="555:23" pos:end="555:24">-&gt;</operator><name pos:start="555:25" pos:end="555:62">sps_strong_intra_smoothing_enable_flag</name></name> <operator pos:start="555:64" pos:end="555:65">&amp;&amp;</operator>

                <name pos:start="557:17" pos:end="557:25">log2_size</name> <operator pos:start="557:27" pos:end="557:28">==</operator> <literal type="number" pos:start="557:30" pos:end="557:30">5</literal> <operator pos:start="557:32" pos:end="557:33">&amp;&amp;</operator>

                <call pos:start="559:17" pos:end="559:54"><name pos:start="559:17" pos:end="559:21">FFABS</name><argument_list pos:start="559:22" pos:end="559:54">(<argument pos:start="559:23" pos:end="559:53"><expr pos:start="559:23" pos:end="559:53"><name pos:start="559:23" pos:end="559:29"><name pos:start="559:23" pos:end="559:25">top</name><index pos:start="559:26" pos:end="559:29">[<expr pos:start="559:27" pos:end="559:28"><operator pos:start="559:27" pos:end="559:27">-</operator><literal type="number" pos:start="559:28" pos:end="559:28">1</literal></expr>]</index></name> <operator pos:start="559:31" pos:end="559:31">+</operator> <name pos:start="559:33" pos:end="559:39"><name pos:start="559:33" pos:end="559:35">top</name><index pos:start="559:36" pos:end="559:39">[<expr pos:start="559:37" pos:end="559:38"><literal type="number" pos:start="559:37" pos:end="559:38">63</literal></expr>]</index></name> <operator pos:start="559:41" pos:end="559:41">-</operator> <literal type="number" pos:start="559:43" pos:end="559:43">2</literal> <operator pos:start="559:45" pos:end="559:45">*</operator> <name pos:start="559:47" pos:end="559:53"><name pos:start="559:47" pos:end="559:49">top</name><index pos:start="559:50" pos:end="559:53">[<expr pos:start="559:51" pos:end="559:52"><literal type="number" pos:start="559:51" pos:end="559:52">31</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="559:56" pos:end="559:56">&lt;</operator> <name pos:start="559:58" pos:end="559:66">threshold</name> <operator pos:start="559:68" pos:end="559:69">&amp;&amp;</operator>

                <call pos:start="561:17" pos:end="561:57"><name pos:start="561:17" pos:end="561:21">FFABS</name><argument_list pos:start="561:22" pos:end="561:57">(<argument pos:start="561:23" pos:end="561:56"><expr pos:start="561:23" pos:end="561:56"><name pos:start="561:23" pos:end="561:30"><name pos:start="561:23" pos:end="561:26">left</name><index pos:start="561:27" pos:end="561:30">[<expr pos:start="561:28" pos:end="561:29"><operator pos:start="561:28" pos:end="561:28">-</operator><literal type="number" pos:start="561:29" pos:end="561:29">1</literal></expr>]</index></name> <operator pos:start="561:32" pos:end="561:32">+</operator> <name pos:start="561:34" pos:end="561:41"><name pos:start="561:34" pos:end="561:37">left</name><index pos:start="561:38" pos:end="561:41">[<expr pos:start="561:39" pos:end="561:40"><literal type="number" pos:start="561:39" pos:end="561:40">63</literal></expr>]</index></name> <operator pos:start="561:43" pos:end="561:43">-</operator> <literal type="number" pos:start="561:45" pos:end="561:45">2</literal> <operator pos:start="561:47" pos:end="561:47">*</operator> <name pos:start="561:49" pos:end="561:56"><name pos:start="561:49" pos:end="561:52">left</name><index pos:start="561:53" pos:end="561:56">[<expr pos:start="561:54" pos:end="561:55"><literal type="number" pos:start="561:54" pos:end="561:55">31</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="561:59" pos:end="561:59">&lt;</operator> <name pos:start="561:61" pos:end="561:69">threshold</name></expr>)</condition> <block pos:start="561:72" pos:end="585:13">{<block_content pos:start="567:17" pos:end="583:35">

                <comment type="line" pos:start="563:17" pos:end="563:76">// We can't just overwrite values in top because it could be</comment>

                <comment type="line" pos:start="565:17" pos:end="565:37">// a pointer into src</comment>

                <expr_stmt pos:start="567:17" pos:end="567:43"><expr pos:start="567:17" pos:end="567:42"><name pos:start="567:17" pos:end="567:32"><name pos:start="567:17" pos:end="567:28">filtered_top</name><index pos:start="567:29" pos:end="567:32">[<expr pos:start="567:30" pos:end="567:31"><operator pos:start="567:30" pos:end="567:30">-</operator><literal type="number" pos:start="567:31" pos:end="567:31">1</literal></expr>]</index></name> <operator pos:start="567:34" pos:end="567:34">=</operator> <name pos:start="567:36" pos:end="567:42"><name pos:start="567:36" pos:end="567:38">top</name><index pos:start="567:39" pos:end="567:42">[<expr pos:start="567:40" pos:end="567:41"><operator pos:start="567:40" pos:end="567:40">-</operator><literal type="number" pos:start="567:41" pos:end="567:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="569:17" pos:end="569:43"><expr pos:start="569:17" pos:end="569:42"><name pos:start="569:17" pos:end="569:32"><name pos:start="569:17" pos:end="569:28">filtered_top</name><index pos:start="569:29" pos:end="569:32">[<expr pos:start="569:30" pos:end="569:31"><literal type="number" pos:start="569:30" pos:end="569:31">63</literal></expr>]</index></name> <operator pos:start="569:34" pos:end="569:34">=</operator> <name pos:start="569:36" pos:end="569:42"><name pos:start="569:36" pos:end="569:38">top</name><index pos:start="569:39" pos:end="569:42">[<expr pos:start="569:40" pos:end="569:41"><literal type="number" pos:start="569:40" pos:end="569:41">63</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="571:17" pos:end="575:75">for <control pos:start="571:21" pos:end="571:40">(<init pos:start="571:22" pos:end="571:27"><expr pos:start="571:22" pos:end="571:26"><name pos:start="571:22" pos:end="571:22">i</name> <operator pos:start="571:24" pos:end="571:24">=</operator> <literal type="number" pos:start="571:26" pos:end="571:26">0</literal></expr>;</init> <condition pos:start="571:29" pos:end="571:35"><expr pos:start="571:29" pos:end="571:34"><name pos:start="571:29" pos:end="571:29">i</name> <operator pos:start="571:31" pos:end="571:31">&lt;</operator> <literal type="number" pos:start="571:33" pos:end="571:34">63</literal></expr>;</condition> <incr pos:start="571:37" pos:end="571:39"><expr pos:start="571:37" pos:end="571:39"><name pos:start="571:37" pos:end="571:37">i</name><operator pos:start="571:38" pos:end="571:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="573:21" pos:end="575:75"><block_content pos:start="573:21" pos:end="575:75">

                    <expr_stmt pos:start="573:21" pos:end="575:75"><expr pos:start="573:21" pos:end="575:74"><name pos:start="573:21" pos:end="573:35"><name pos:start="573:21" pos:end="573:32">filtered_top</name><index pos:start="573:33" pos:end="573:35">[<expr pos:start="573:34" pos:end="573:34"><name pos:start="573:34" pos:end="573:34">i</name></expr>]</index></name> <operator pos:start="573:37" pos:end="573:37">=</operator> <operator pos:start="573:39" pos:end="573:39">(</operator><operator pos:start="573:40" pos:end="573:40">(</operator><literal type="number" pos:start="573:41" pos:end="573:44">64</literal> <operator pos:start="573:44" pos:end="573:44">-</operator> <operator pos:start="573:46" pos:end="573:46">(</operator><name pos:start="573:47" pos:end="573:47">i</name> <operator pos:start="573:49" pos:end="573:49">+</operator> <literal type="number" pos:start="573:51" pos:end="573:51">1</literal><operator pos:start="573:52" pos:end="573:52">)</operator><operator pos:start="573:53" pos:end="573:53">)</operator> <operator pos:start="573:55" pos:end="573:55">*</operator> <name pos:start="573:57" pos:end="573:63"><name pos:start="573:57" pos:end="573:59">top</name><index pos:start="573:60" pos:end="573:63">[<expr pos:start="573:61" pos:end="573:62"><operator pos:start="573:61" pos:end="573:61">-</operator><literal type="number" pos:start="573:62" pos:end="573:62">1</literal></expr>]</index></name> <operator pos:start="573:65" pos:end="573:65">+</operator>

                                             <operator pos:start="575:46" pos:end="575:46">(</operator><name pos:start="575:47" pos:end="575:47">i</name> <operator pos:start="575:49" pos:end="575:49">+</operator> <literal type="number" pos:start="575:51" pos:end="575:51">1</literal><operator pos:start="575:52" pos:end="575:52">)</operator>  <operator pos:start="575:55" pos:end="575:55">*</operator> <name pos:start="575:57" pos:end="575:63"><name pos:start="575:57" pos:end="575:59">top</name><index pos:start="575:60" pos:end="575:63">[<expr pos:start="575:61" pos:end="575:62"><literal type="number" pos:start="575:61" pos:end="575:62">63</literal></expr>]</index></name> <operator pos:start="575:65" pos:end="575:65">+</operator> <literal type="number" pos:start="575:67" pos:end="575:68">32</literal><operator pos:start="575:69" pos:end="575:69">)</operator> <operator pos:start="575:71" pos:end="575:72">&gt;&gt;</operator> <literal type="number" pos:start="575:74" pos:end="575:74">6</literal></expr>;</expr_stmt></block_content></block></for>

                <for pos:start="577:17" pos:end="581:68">for <control pos:start="577:21" pos:end="577:40">(<init pos:start="577:22" pos:end="577:27"><expr pos:start="577:22" pos:end="577:26"><name pos:start="577:22" pos:end="577:22">i</name> <operator pos:start="577:24" pos:end="577:24">=</operator> <literal type="number" pos:start="577:26" pos:end="577:26">0</literal></expr>;</init> <condition pos:start="577:29" pos:end="577:35"><expr pos:start="577:29" pos:end="577:34"><name pos:start="577:29" pos:end="577:29">i</name> <operator pos:start="577:31" pos:end="577:31">&lt;</operator> <literal type="number" pos:start="577:33" pos:end="577:34">63</literal></expr>;</condition> <incr pos:start="577:37" pos:end="577:39"><expr pos:start="577:37" pos:end="577:39"><name pos:start="577:37" pos:end="577:37">i</name><operator pos:start="577:38" pos:end="577:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="579:21" pos:end="581:68"><block_content pos:start="579:21" pos:end="581:68">

                    <expr_stmt pos:start="579:21" pos:end="581:68"><expr pos:start="579:21" pos:end="581:67"><name pos:start="579:21" pos:end="579:27"><name pos:start="579:21" pos:end="579:24">left</name><index pos:start="579:25" pos:end="579:27">[<expr pos:start="579:26" pos:end="579:26"><name pos:start="579:26" pos:end="579:26">i</name></expr>]</index></name> <operator pos:start="579:29" pos:end="579:29">=</operator> <operator pos:start="579:31" pos:end="579:31">(</operator><operator pos:start="579:32" pos:end="579:32">(</operator><literal type="number" pos:start="579:33" pos:end="579:36">64</literal> <operator pos:start="579:36" pos:end="579:36">-</operator> <operator pos:start="579:38" pos:end="579:38">(</operator><name pos:start="579:39" pos:end="579:39">i</name> <operator pos:start="579:41" pos:end="579:41">+</operator> <literal type="number" pos:start="579:43" pos:end="579:43">1</literal><operator pos:start="579:44" pos:end="579:44">)</operator><operator pos:start="579:45" pos:end="579:45">)</operator> <operator pos:start="579:47" pos:end="579:47">*</operator> <name pos:start="579:49" pos:end="579:56"><name pos:start="579:49" pos:end="579:52">left</name><index pos:start="579:53" pos:end="579:56">[<expr pos:start="579:54" pos:end="579:55"><operator pos:start="579:54" pos:end="579:54">-</operator><literal type="number" pos:start="579:55" pos:end="579:55">1</literal></expr>]</index></name> <operator pos:start="579:58" pos:end="579:58">+</operator>

                                     <operator pos:start="581:38" pos:end="581:38">(</operator><name pos:start="581:39" pos:end="581:39">i</name> <operator pos:start="581:41" pos:end="581:41">+</operator> <literal type="number" pos:start="581:43" pos:end="581:43">1</literal><operator pos:start="581:44" pos:end="581:44">)</operator>  <operator pos:start="581:47" pos:end="581:47">*</operator> <name pos:start="581:49" pos:end="581:56"><name pos:start="581:49" pos:end="581:52">left</name><index pos:start="581:53" pos:end="581:56">[<expr pos:start="581:54" pos:end="581:55"><literal type="number" pos:start="581:54" pos:end="581:55">63</literal></expr>]</index></name> <operator pos:start="581:58" pos:end="581:58">+</operator> <literal type="number" pos:start="581:60" pos:end="581:61">32</literal><operator pos:start="581:62" pos:end="581:62">)</operator> <operator pos:start="581:64" pos:end="581:65">&gt;&gt;</operator> <literal type="number" pos:start="581:67" pos:end="581:67">6</literal></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="583:17" pos:end="583:35"><expr pos:start="583:17" pos:end="583:34"><name pos:start="583:17" pos:end="583:19">top</name> <operator pos:start="583:21" pos:end="583:21">=</operator> <name pos:start="583:23" pos:end="583:34">filtered_top</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="585:15" pos:end="613:13">else <block pos:start="585:20" pos:end="613:13">{<block_content pos:start="587:17" pos:end="611:36">

                <expr_stmt pos:start="587:17" pos:end="587:65"><expr pos:start="587:17" pos:end="587:64"><name pos:start="587:17" pos:end="587:43"><name pos:start="587:17" pos:end="587:29">filtered_left</name><index pos:start="587:30" pos:end="587:43">[<expr pos:start="587:31" pos:end="587:42"><literal type="number" pos:start="587:31" pos:end="587:31">2</literal> <operator pos:start="587:33" pos:end="587:33">*</operator> <name pos:start="587:35" pos:end="587:38">size</name> <operator pos:start="587:40" pos:end="587:40">-</operator> <literal type="number" pos:start="587:42" pos:end="587:42">1</literal></expr>]</index></name> <operator pos:start="587:45" pos:end="587:45">=</operator> <name pos:start="587:47" pos:end="587:64"><name pos:start="587:47" pos:end="587:50">left</name><index pos:start="587:51" pos:end="587:64">[<expr pos:start="587:52" pos:end="587:63"><literal type="number" pos:start="587:52" pos:end="587:52">2</literal> <operator pos:start="587:54" pos:end="587:54">*</operator> <name pos:start="587:56" pos:end="587:59">size</name> <operator pos:start="587:61" pos:end="587:61">-</operator> <literal type="number" pos:start="587:63" pos:end="587:63">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="589:17" pos:end="589:64"><expr pos:start="589:17" pos:end="589:63"><name pos:start="589:17" pos:end="589:42"><name pos:start="589:17" pos:end="589:28">filtered_top</name><index pos:start="589:29" pos:end="589:42">[<expr pos:start="589:30" pos:end="589:41"><literal type="number" pos:start="589:30" pos:end="589:30">2</literal> <operator pos:start="589:32" pos:end="589:32">*</operator> <name pos:start="589:34" pos:end="589:37">size</name> <operator pos:start="589:39" pos:end="589:39">-</operator> <literal type="number" pos:start="589:41" pos:end="589:41">1</literal></expr>]</index></name>  <operator pos:start="589:45" pos:end="589:45">=</operator> <name pos:start="589:47" pos:end="589:63"><name pos:start="589:47" pos:end="589:49">top</name><index pos:start="589:50" pos:end="589:63">[<expr pos:start="589:51" pos:end="589:62"><literal type="number" pos:start="589:51" pos:end="589:51">2</literal> <operator pos:start="589:53" pos:end="589:53">*</operator> <name pos:start="589:55" pos:end="589:58">size</name> <operator pos:start="589:60" pos:end="589:60">-</operator> <literal type="number" pos:start="589:62" pos:end="589:62">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="591:17" pos:end="595:62">for <control pos:start="591:21" pos:end="591:51">(<init pos:start="591:22" pos:end="591:38"><expr pos:start="591:22" pos:end="591:37"><name pos:start="591:22" pos:end="591:22">i</name> <operator pos:start="591:24" pos:end="591:24">=</operator> <literal type="number" pos:start="591:26" pos:end="591:26">2</literal> <operator pos:start="591:28" pos:end="591:28">*</operator> <name pos:start="591:30" pos:end="591:33">size</name> <operator pos:start="591:35" pos:end="591:35">-</operator> <literal type="number" pos:start="591:37" pos:end="591:37">2</literal></expr>;</init> <condition pos:start="591:40" pos:end="591:46"><expr pos:start="591:40" pos:end="591:45"><name pos:start="591:40" pos:end="591:40">i</name> <operator pos:start="591:42" pos:end="591:43">&gt;=</operator> <literal type="number" pos:start="591:45" pos:end="591:45">0</literal></expr>;</condition> <incr pos:start="591:48" pos:end="591:50"><expr pos:start="591:48" pos:end="591:50"><name pos:start="591:48" pos:end="591:48">i</name><operator pos:start="591:49" pos:end="591:50">--</operator></expr></incr>)</control><block type="pseudo" pos:start="593:21" pos:end="595:62"><block_content pos:start="593:21" pos:end="595:62">

                    <expr_stmt pos:start="593:21" pos:end="595:62"><expr pos:start="593:21" pos:end="595:61"><name pos:start="593:21" pos:end="593:36"><name pos:start="593:21" pos:end="593:33">filtered_left</name><index pos:start="593:34" pos:end="593:36">[<expr pos:start="593:35" pos:end="593:35"><name pos:start="593:35" pos:end="593:35">i</name></expr>]</index></name> <operator pos:start="593:38" pos:end="593:38">=</operator> <operator pos:start="593:40" pos:end="593:40">(</operator><name pos:start="593:41" pos:end="593:51"><name pos:start="593:41" pos:end="593:44">left</name><index pos:start="593:45" pos:end="593:51">[<expr pos:start="593:46" pos:end="593:50"><name pos:start="593:46" pos:end="593:46">i</name> <operator pos:start="593:48" pos:end="593:48">+</operator> <literal type="number" pos:start="593:50" pos:end="593:50">1</literal></expr>]</index></name> <operator pos:start="593:53" pos:end="593:53">+</operator> <literal type="number" pos:start="593:55" pos:end="593:55">2</literal> <operator pos:start="593:57" pos:end="593:57">*</operator> <name pos:start="593:59" pos:end="593:65"><name pos:start="593:59" pos:end="593:62">left</name><index pos:start="593:63" pos:end="593:65">[<expr pos:start="593:64" pos:end="593:64"><name pos:start="593:64" pos:end="593:64">i</name></expr>]</index></name> <operator pos:start="593:67" pos:end="593:67">+</operator>

                                        <name pos:start="595:41" pos:end="595:51"><name pos:start="595:41" pos:end="595:44">left</name><index pos:start="595:45" pos:end="595:51">[<expr pos:start="595:46" pos:end="595:50"><name pos:start="595:46" pos:end="595:46">i</name> <operator pos:start="595:48" pos:end="595:48">-</operator> <literal type="number" pos:start="595:50" pos:end="595:50">1</literal></expr>]</index></name> <operator pos:start="595:53" pos:end="595:53">+</operator> <literal type="number" pos:start="595:55" pos:end="595:55">2</literal><operator pos:start="595:56" pos:end="595:56">)</operator> <operator pos:start="595:58" pos:end="595:59">&gt;&gt;</operator> <literal type="number" pos:start="595:61" pos:end="595:61">2</literal></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="597:17" pos:end="601:55"><expr pos:start="597:17" pos:end="601:54"><name pos:start="597:17" pos:end="597:32"><name pos:start="597:17" pos:end="597:28">filtered_top</name><index pos:start="597:29" pos:end="597:32">[<expr pos:start="597:30" pos:end="597:31"><operator pos:start="597:30" pos:end="597:30">-</operator><literal type="number" pos:start="597:31" pos:end="597:31">1</literal></expr>]</index></name> <operator pos:start="597:34" pos:end="597:34">=</operator>

                <name pos:start="599:17" pos:end="599:33"><name pos:start="599:17" pos:end="599:29">filtered_left</name><index pos:start="599:30" pos:end="599:33">[<expr pos:start="599:31" pos:end="599:32"><operator pos:start="599:31" pos:end="599:31">-</operator><literal type="number" pos:start="599:32" pos:end="599:32">1</literal></expr>]</index></name> <operator pos:start="599:35" pos:end="599:35">=</operator> <operator pos:start="599:37" pos:end="599:37">(</operator><name pos:start="599:38" pos:end="599:44"><name pos:start="599:38" pos:end="599:41">left</name><index pos:start="599:42" pos:end="599:44">[<expr pos:start="599:43" pos:end="599:43"><literal type="number" pos:start="599:43" pos:end="599:43">0</literal></expr>]</index></name> <operator pos:start="599:46" pos:end="599:46">+</operator> <literal type="number" pos:start="599:48" pos:end="599:48">2</literal> <operator pos:start="599:50" pos:end="599:50">*</operator> <name pos:start="599:52" pos:end="599:59"><name pos:start="599:52" pos:end="599:55">left</name><index pos:start="599:56" pos:end="599:59">[<expr pos:start="599:57" pos:end="599:58"><operator pos:start="599:57" pos:end="599:57">-</operator><literal type="number" pos:start="599:58" pos:end="599:58">1</literal></expr>]</index></name> <operator pos:start="599:61" pos:end="599:61">+</operator>

                                     <name pos:start="601:38" pos:end="601:43"><name pos:start="601:38" pos:end="601:40">top</name><index pos:start="601:41" pos:end="601:43">[<expr pos:start="601:42" pos:end="601:42"><literal type="number" pos:start="601:42" pos:end="601:42">0</literal></expr>]</index></name>  <operator pos:start="601:46" pos:end="601:46">+</operator> <literal type="number" pos:start="601:48" pos:end="601:48">2</literal><operator pos:start="601:49" pos:end="601:49">)</operator> <operator pos:start="601:51" pos:end="601:52">&gt;&gt;</operator> <literal type="number" pos:start="601:54" pos:end="601:54">2</literal></expr>;</expr_stmt>

                <for pos:start="603:17" pos:end="607:60">for <control pos:start="603:21" pos:end="603:51">(<init pos:start="603:22" pos:end="603:38"><expr pos:start="603:22" pos:end="603:37"><name pos:start="603:22" pos:end="603:22">i</name> <operator pos:start="603:24" pos:end="603:24">=</operator> <literal type="number" pos:start="603:26" pos:end="603:26">2</literal> <operator pos:start="603:28" pos:end="603:28">*</operator> <name pos:start="603:30" pos:end="603:33">size</name> <operator pos:start="603:35" pos:end="603:35">-</operator> <literal type="number" pos:start="603:37" pos:end="603:37">2</literal></expr>;</init> <condition pos:start="603:40" pos:end="603:46"><expr pos:start="603:40" pos:end="603:45"><name pos:start="603:40" pos:end="603:40">i</name> <operator pos:start="603:42" pos:end="603:43">&gt;=</operator> <literal type="number" pos:start="603:45" pos:end="603:45">0</literal></expr>;</condition> <incr pos:start="603:48" pos:end="603:50"><expr pos:start="603:48" pos:end="603:50"><name pos:start="603:48" pos:end="603:48">i</name><operator pos:start="603:49" pos:end="603:50">--</operator></expr></incr>)</control><block type="pseudo" pos:start="605:21" pos:end="607:60"><block_content pos:start="605:21" pos:end="607:60">

                    <expr_stmt pos:start="605:21" pos:end="607:60"><expr pos:start="605:21" pos:end="607:59"><name pos:start="605:21" pos:end="605:35"><name pos:start="605:21" pos:end="605:32">filtered_top</name><index pos:start="605:33" pos:end="605:35">[<expr pos:start="605:34" pos:end="605:34"><name pos:start="605:34" pos:end="605:34">i</name></expr>]</index></name> <operator pos:start="605:37" pos:end="605:37">=</operator> <operator pos:start="605:39" pos:end="605:39">(</operator><name pos:start="605:40" pos:end="605:49"><name pos:start="605:40" pos:end="605:42">top</name><index pos:start="605:43" pos:end="605:49">[<expr pos:start="605:44" pos:end="605:48"><name pos:start="605:44" pos:end="605:44">i</name> <operator pos:start="605:46" pos:end="605:46">+</operator> <literal type="number" pos:start="605:48" pos:end="605:48">1</literal></expr>]</index></name> <operator pos:start="605:51" pos:end="605:51">+</operator> <literal type="number" pos:start="605:53" pos:end="605:53">2</literal> <operator pos:start="605:55" pos:end="605:55">*</operator> <name pos:start="605:57" pos:end="605:62"><name pos:start="605:57" pos:end="605:59">top</name><index pos:start="605:60" pos:end="605:62">[<expr pos:start="605:61" pos:end="605:61"><name pos:start="605:61" pos:end="605:61">i</name></expr>]</index></name> <operator pos:start="605:64" pos:end="605:64">+</operator>

                                       <name pos:start="607:40" pos:end="607:49"><name pos:start="607:40" pos:end="607:42">top</name><index pos:start="607:43" pos:end="607:49">[<expr pos:start="607:44" pos:end="607:48"><name pos:start="607:44" pos:end="607:44">i</name> <operator pos:start="607:46" pos:end="607:46">-</operator> <literal type="number" pos:start="607:48" pos:end="607:48">1</literal></expr>]</index></name> <operator pos:start="607:51" pos:end="607:51">+</operator> <literal type="number" pos:start="607:53" pos:end="607:53">2</literal><operator pos:start="607:54" pos:end="607:54">)</operator> <operator pos:start="607:56" pos:end="607:57">&gt;&gt;</operator> <literal type="number" pos:start="607:59" pos:end="607:59">2</literal></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="609:17" pos:end="609:37"><expr pos:start="609:17" pos:end="609:36"><name pos:start="609:17" pos:end="609:20">left</name> <operator pos:start="609:22" pos:end="609:22">=</operator> <name pos:start="609:24" pos:end="609:36">filtered_left</name></expr>;</expr_stmt>

                <expr_stmt pos:start="611:17" pos:end="611:36"><expr pos:start="611:17" pos:end="611:35"><name pos:start="611:17" pos:end="611:19">top</name>  <operator pos:start="611:22" pos:end="611:22">=</operator> <name pos:start="611:24" pos:end="611:35">filtered_top</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="621:5" pos:end="647:5">switch <condition pos:start="621:12" pos:end="621:17">(<expr pos:start="621:13" pos:end="621:16"><name pos:start="621:13" pos:end="621:16">mode</name></expr>)</condition> <block pos:start="621:19" pos:end="647:5">{<block_content pos:start="623:5" pos:end="645:14">

    <case pos:start="623:5" pos:end="623:22">case <expr pos:start="623:10" pos:end="623:21"><name pos:start="623:10" pos:end="623:21">INTRA_PLANAR</name></expr>:</case>

        <expr_stmt pos:start="625:9" pos:end="627:66"><expr pos:start="625:9" pos:end="627:65"><name pos:start="625:9" pos:end="625:41"><name pos:start="625:9" pos:end="625:9">s</name><operator pos:start="625:10" pos:end="625:11">-&gt;</operator><name pos:start="625:12" pos:end="625:14">hpc</name><operator pos:start="625:15" pos:end="625:15">.</operator><name pos:start="625:16" pos:end="625:26">pred_planar</name><index pos:start="625:27" pos:end="625:41">[<expr pos:start="625:28" pos:end="625:40"><name pos:start="625:28" pos:end="625:36">log2_size</name> <operator pos:start="625:38" pos:end="625:38">-</operator> <literal type="number" pos:start="625:40" pos:end="625:40">2</literal></expr>]</index></name><operator pos:start="625:42" pos:end="625:42">(</operator><operator pos:start="625:43" pos:end="625:43">(</operator><name pos:start="625:44" pos:end="625:50">uint8_t</name><operator pos:start="625:51" pos:end="625:51">*</operator><operator pos:start="625:52" pos:end="625:52">)</operator><name pos:start="625:53" pos:end="625:55">src</name><operator pos:start="625:56" pos:end="625:56">,</operator> <operator pos:start="625:58" pos:end="625:58">(</operator><name pos:start="625:59" pos:end="625:65">uint8_t</name><operator pos:start="625:66" pos:end="625:66">*</operator><operator pos:start="625:67" pos:end="625:67">)</operator><name pos:start="625:68" pos:end="625:70">top</name><operator pos:start="625:71" pos:end="625:71">,</operator>

                                          <operator pos:start="627:43" pos:end="627:43">(</operator><name pos:start="627:44" pos:end="627:50">uint8_t</name><operator pos:start="627:51" pos:end="627:51">*</operator><operator pos:start="627:52" pos:end="627:52">)</operator><name pos:start="627:53" pos:end="627:56">left</name><operator pos:start="627:57" pos:end="627:57">,</operator> <name pos:start="627:59" pos:end="627:64">stride</name><operator pos:start="627:65" pos:end="627:65">)</operator></expr>;</expr_stmt>

        <break pos:start="629:9" pos:end="629:14">break;</break>

    <case pos:start="631:5" pos:end="631:18">case <expr pos:start="631:10" pos:end="631:17"><name pos:start="631:10" pos:end="631:17">INTRA_DC</name></expr>:</case>

        <expr_stmt pos:start="633:9" pos:end="635:65"><expr pos:start="633:9" pos:end="635:64"><call pos:start="633:9" pos:end="635:64"><name pos:start="633:9" pos:end="633:22"><name pos:start="633:9" pos:end="633:9">s</name><operator pos:start="633:10" pos:end="633:11">-&gt;</operator><name pos:start="633:12" pos:end="633:14">hpc</name><operator pos:start="633:15" pos:end="633:15">.</operator><name pos:start="633:16" pos:end="633:22">pred_dc</name></name><argument_list pos:start="633:23" pos:end="635:64">(<argument pos:start="633:24" pos:end="633:36"><expr pos:start="633:24" pos:end="633:36"><operator pos:start="633:24" pos:end="633:24">(</operator><name pos:start="633:25" pos:end="633:31">uint8_t</name><operator pos:start="633:32" pos:end="633:32">*</operator><operator pos:start="633:33" pos:end="633:33">)</operator><name pos:start="633:34" pos:end="633:36">src</name></expr></argument>, <argument pos:start="633:39" pos:end="633:51"><expr pos:start="633:39" pos:end="633:51"><operator pos:start="633:39" pos:end="633:39">(</operator><name pos:start="633:40" pos:end="633:46">uint8_t</name><operator pos:start="633:47" pos:end="633:47">*</operator><operator pos:start="633:48" pos:end="633:48">)</operator><name pos:start="633:49" pos:end="633:51">top</name></expr></argument>,

                       <argument pos:start="635:24" pos:end="635:37"><expr pos:start="635:24" pos:end="635:37"><operator pos:start="635:24" pos:end="635:24">(</operator><name pos:start="635:25" pos:end="635:31">uint8_t</name><operator pos:start="635:32" pos:end="635:32">*</operator><operator pos:start="635:33" pos:end="635:33">)</operator><name pos:start="635:34" pos:end="635:37">left</name></expr></argument>, <argument pos:start="635:40" pos:end="635:45"><expr pos:start="635:40" pos:end="635:45"><name pos:start="635:40" pos:end="635:45">stride</name></expr></argument>, <argument pos:start="635:48" pos:end="635:56"><expr pos:start="635:48" pos:end="635:56"><name pos:start="635:48" pos:end="635:56">log2_size</name></expr></argument>, <argument pos:start="635:59" pos:end="635:63"><expr pos:start="635:59" pos:end="635:63"><name pos:start="635:59" pos:end="635:63">c_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="637:9" pos:end="637:14">break;</break>

    <default pos:start="639:5" pos:end="639:12">default:</default>

        <expr_stmt pos:start="641:9" pos:end="643:80"><expr pos:start="641:9" pos:end="643:79"><name pos:start="641:9" pos:end="641:42"><name pos:start="641:9" pos:end="641:9">s</name><operator pos:start="641:10" pos:end="641:11">-&gt;</operator><name pos:start="641:12" pos:end="641:14">hpc</name><operator pos:start="641:15" pos:end="641:15">.</operator><name pos:start="641:16" pos:end="641:27">pred_angular</name><index pos:start="641:28" pos:end="641:42">[<expr pos:start="641:29" pos:end="641:41"><name pos:start="641:29" pos:end="641:37">log2_size</name> <operator pos:start="641:39" pos:end="641:39">-</operator> <literal type="number" pos:start="641:41" pos:end="641:41">2</literal></expr>]</index></name><operator pos:start="641:43" pos:end="641:43">(</operator><operator pos:start="641:44" pos:end="641:44">(</operator><name pos:start="641:45" pos:end="641:51">uint8_t</name><operator pos:start="641:52" pos:end="641:52">*</operator><operator pos:start="641:53" pos:end="641:53">)</operator><name pos:start="641:54" pos:end="641:56">src</name><operator pos:start="641:57" pos:end="641:57">,</operator> <operator pos:start="641:59" pos:end="641:59">(</operator><name pos:start="641:60" pos:end="641:66">uint8_t</name><operator pos:start="641:67" pos:end="641:67">*</operator><operator pos:start="641:68" pos:end="641:68">)</operator><name pos:start="641:69" pos:end="641:71">top</name><operator pos:start="641:72" pos:end="641:72">,</operator>

                                           <operator pos:start="643:44" pos:end="643:44">(</operator><name pos:start="643:45" pos:end="643:51">uint8_t</name><operator pos:start="643:52" pos:end="643:52">*</operator><operator pos:start="643:53" pos:end="643:53">)</operator><name pos:start="643:54" pos:end="643:57">left</name><operator pos:start="643:58" pos:end="643:58">,</operator> <name pos:start="643:60" pos:end="643:65">stride</name><operator pos:start="643:66" pos:end="643:66">,</operator> <name pos:start="643:68" pos:end="643:72">c_idx</name><operator pos:start="643:73" pos:end="643:73">,</operator> <name pos:start="643:75" pos:end="643:78">mode</name><operator pos:start="643:79" pos:end="643:79">)</operator></expr>;</expr_stmt>

        <break pos:start="645:9" pos:end="645:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
