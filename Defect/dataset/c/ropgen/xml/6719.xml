<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6719.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">img_snapshot</name><parameter_list pos:start="1:24" pos:end="1:46">(<parameter pos:start="1:25" pos:end="1:32"><decl pos:start="1:25" pos:end="1:32"><type pos:start="1:25" pos:end="1:32"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:32">argc</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier><modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="231:1">{<block_content pos:start="5:5" pos:end="229:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">QEMUSnapshotInfo</name></type> <name pos:start="7:22" pos:end="7:23">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:18">filename</name></decl>, <decl pos:start="9:21" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:34">snapshot_name</name> <init pos:start="9:36" pos:end="9:41">= <expr pos:start="9:38" pos:end="9:41"><name pos:start="9:38" pos:end="9:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">c</name></decl>, <decl pos:start="11:12" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>, <decl pos:start="11:21" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:31">bdrv_oflags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">action</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">qemu_timeval</name></type> <name pos:start="15:18" pos:end="15:19">tv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">bool</name></type> <name pos:start="17:10" pos:end="17:14">quiet</name> <init pos:start="17:16" pos:end="17:22">= <expr pos:start="17:18" pos:end="17:22"><name pos:start="17:18" pos:end="17:22">false</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:15">bdrv_oflags</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:30">BDRV_O_FLAGS</name> <operator pos:start="21:32" pos:end="21:32">|</operator> <name pos:start="21:34" pos:end="21:44">BDRV_O_RDWR</name></expr>;</expr_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:38">/* Parse commandline parameters */</comment>

    <for pos:start="25:5" pos:end="117:5">for<control pos:start="25:8" pos:end="25:11">(<init pos:start="25:9" pos:end="25:9">;</init><condition pos:start="25:10" pos:end="25:10">;</condition><incr/>)</control> <block pos:start="25:13" pos:end="117:5">{<block_content pos:start="27:9" pos:end="115:9">

        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:9">c</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:43"><name pos:start="27:13" pos:end="27:18">getopt</name><argument_list pos:start="27:19" pos:end="27:43">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">argc</name></expr></argument>, <argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">argv</name></expr></argument>, <argument pos:start="27:32" pos:end="27:42"><expr pos:start="27:32" pos:end="27:42"><literal type="string" pos:start="27:32" pos:end="27:42">"la:c:d:hq"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:13">c</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <operator pos:start="29:18" pos:end="29:18">-</operator><literal type="number" pos:start="29:19" pos:end="29:19">1</literal></expr>)</condition> <block pos:start="29:22" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="35:9" pos:end="115:9">switch<condition pos:start="35:15" pos:end="35:17">(<expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">c</name></expr>)</condition> <block pos:start="35:19" pos:end="115:9">{<block_content pos:start="37:9" pos:end="113:18">

        <case pos:start="37:9" pos:end="37:17">case <expr pos:start="37:14" pos:end="37:16"><literal type="char" pos:start="37:14" pos:end="37:16">'?'</literal></expr>:</case>

        <case pos:start="39:9" pos:end="39:17">case <expr pos:start="39:14" pos:end="39:16"><literal type="char" pos:start="39:14" pos:end="39:16">'h'</literal></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:19"><expr pos:start="41:13" pos:end="41:18"><call pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:16">help</name><argument_list pos:start="41:17" pos:end="41:18">()</argument_list></call></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</return>

        <case pos:start="45:9" pos:end="45:17">case <expr pos:start="45:14" pos:end="45:16"><literal type="char" pos:start="45:14" pos:end="45:16">'l'</literal></expr>:</case>

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:23">(<expr pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:22">action</name></expr>)</condition> <block pos:start="47:25" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:25">

                <expr_stmt pos:start="49:17" pos:end="49:23"><expr pos:start="49:17" pos:end="49:22"><call pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:20">help</name><argument_list pos:start="49:21" pos:end="49:22">()</argument_list></call></expr>;</expr_stmt>

                <return pos:start="51:17" pos:end="51:25">return <expr pos:start="51:24" pos:end="51:24"><literal type="number" pos:start="51:24" pos:end="51:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:35"><expr pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:18">action</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:34">SNAPSHOT_LIST</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:23">bdrv_oflags</name> <operator pos:start="57:25" pos:end="57:26">&amp;=</operator> <operator pos:start="57:28" pos:end="57:28">~</operator><name pos:start="57:29" pos:end="57:39">BDRV_O_RDWR</name></expr>;</expr_stmt> <comment type="block" pos:start="57:42" pos:end="57:61">/* no need for RW */</comment>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <case pos:start="61:9" pos:end="61:17">case <expr pos:start="61:14" pos:end="61:16"><literal type="char" pos:start="61:14" pos:end="61:16">'a'</literal></expr>:</case>

            <if_stmt pos:start="63:13" pos:end="69:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:23">(<expr pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:22">action</name></expr>)</condition> <block pos:start="63:25" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:25">

                <expr_stmt pos:start="65:17" pos:end="65:23"><expr pos:start="65:17" pos:end="65:22"><call pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:20">help</name><argument_list pos:start="65:21" pos:end="65:22">()</argument_list></call></expr>;</expr_stmt>

                <return pos:start="67:17" pos:end="67:25">return <expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:36"><expr pos:start="71:13" pos:end="71:35"><name pos:start="71:13" pos:end="71:18">action</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:35">SNAPSHOT_APPLY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:35"><expr pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:25">snapshot_name</name> <operator pos:start="73:27" pos:end="73:27">=</operator> <name pos:start="73:29" pos:end="73:34">optarg</name></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:17">case <expr pos:start="77:14" pos:end="77:16"><literal type="char" pos:start="77:14" pos:end="77:16">'c'</literal></expr>:</case>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:23">(<expr pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:22">action</name></expr>)</condition> <block pos:start="79:25" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:25">

                <expr_stmt pos:start="81:17" pos:end="81:23"><expr pos:start="81:17" pos:end="81:22"><call pos:start="81:17" pos:end="81:22"><name pos:start="81:17" pos:end="81:20">help</name><argument_list pos:start="81:21" pos:end="81:22">()</argument_list></call></expr>;</expr_stmt>

                <return pos:start="83:17" pos:end="83:25">return <expr pos:start="83:24" pos:end="83:24"><literal type="number" pos:start="83:24" pos:end="83:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:37"><expr pos:start="87:13" pos:end="87:36"><name pos:start="87:13" pos:end="87:18">action</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <name pos:start="87:22" pos:end="87:36">SNAPSHOT_CREATE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:35"><expr pos:start="89:13" pos:end="89:34"><name pos:start="89:13" pos:end="89:25">snapshot_name</name> <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:34">optarg</name></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:17">case <expr pos:start="93:14" pos:end="93:16"><literal type="char" pos:start="93:14" pos:end="93:16">'d'</literal></expr>:</case>

            <if_stmt pos:start="95:13" pos:end="101:13"><if pos:start="95:13" pos:end="101:13">if <condition pos:start="95:16" pos:end="95:23">(<expr pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:22">action</name></expr>)</condition> <block pos:start="95:25" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:25">

                <expr_stmt pos:start="97:17" pos:end="97:23"><expr pos:start="97:17" pos:end="97:22"><call pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:20">help</name><argument_list pos:start="97:21" pos:end="97:22">()</argument_list></call></expr>;</expr_stmt>

                <return pos:start="99:17" pos:end="99:25">return <expr pos:start="99:24" pos:end="99:24"><literal type="number" pos:start="99:24" pos:end="99:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:37"><expr pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:18">action</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:36">SNAPSHOT_DELETE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:35"><expr pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:25">snapshot_name</name> <operator pos:start="105:27" pos:end="105:27">=</operator> <name pos:start="105:29" pos:end="105:34">optarg</name></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:17">case <expr pos:start="109:14" pos:end="109:16"><literal type="char" pos:start="109:14" pos:end="109:16">'q'</literal></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:25"><expr pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:17">quiet</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:24">true</name></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <if_stmt pos:start="121:5" pos:end="125:5"><if pos:start="121:5" pos:end="125:5">if <condition pos:start="121:8" pos:end="121:27">(<expr pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:14">optind</name> <operator pos:start="121:16" pos:end="121:17">!=</operator> <name pos:start="121:19" pos:end="121:22">argc</name> <operator pos:start="121:24" pos:end="121:24">-</operator> <literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>)</condition> <block pos:start="121:29" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:15">

        <expr_stmt pos:start="123:9" pos:end="123:15"><expr pos:start="123:9" pos:end="123:14"><call pos:start="123:9" pos:end="123:14"><name pos:start="123:9" pos:end="123:12">help</name><argument_list pos:start="123:13" pos:end="123:14">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:30"><expr pos:start="127:5" pos:end="127:29"><name pos:start="127:5" pos:end="127:12">filename</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <name pos:start="127:16" pos:end="127:29"><name pos:start="127:16" pos:end="127:19">argv</name><index pos:start="127:20" pos:end="127:29">[<expr pos:start="127:21" pos:end="127:28"><name pos:start="127:21" pos:end="127:26">optind</name><operator pos:start="127:27" pos:end="127:28">++</operator></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:24">/* Open the image */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:65"><expr pos:start="133:5" pos:end="133:64"><name pos:start="133:5" pos:end="133:6">bs</name> <operator pos:start="133:8" pos:end="133:8">=</operator> <call pos:start="133:10" pos:end="133:64"><name pos:start="133:10" pos:end="133:22">bdrv_new_open</name><argument_list pos:start="133:23" pos:end="133:64">(<argument pos:start="133:24" pos:end="133:31"><expr pos:start="133:24" pos:end="133:31"><name pos:start="133:24" pos:end="133:31">filename</name></expr></argument>, <argument pos:start="133:34" pos:end="133:37"><expr pos:start="133:34" pos:end="133:37"><name pos:start="133:34" pos:end="133:37">NULL</name></expr></argument>, <argument pos:start="133:40" pos:end="133:50"><expr pos:start="133:40" pos:end="133:50"><name pos:start="133:40" pos:end="133:50">bdrv_oflags</name></expr></argument>, <argument pos:start="133:53" pos:end="133:56"><expr pos:start="133:53" pos:end="133:56"><name pos:start="133:53" pos:end="133:56">true</name></expr></argument>, <argument pos:start="133:59" pos:end="133:63"><expr pos:start="133:59" pos:end="133:63"><name pos:start="133:59" pos:end="133:63">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="139:5"><if pos:start="135:5" pos:end="139:5">if <condition pos:start="135:8" pos:end="135:12">(<expr pos:start="135:9" pos:end="135:11"><operator pos:start="135:9" pos:end="135:9">!</operator><name pos:start="135:10" pos:end="135:11">bs</name></expr>)</condition> <block pos:start="135:14" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:17">

        <return pos:start="137:9" pos:end="137:17">return <expr pos:start="137:16" pos:end="137:16"><literal type="number" pos:start="137:16" pos:end="137:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="143:5" pos:end="143:38">/* Perform the requested action */</comment>

    <switch pos:start="145:5" pos:end="215:5">switch<condition pos:start="145:11" pos:end="145:18">(<expr pos:start="145:12" pos:end="145:17"><name pos:start="145:12" pos:end="145:17">action</name></expr>)</condition> <block pos:start="145:20" pos:end="215:5">{<block_content pos:start="147:5" pos:end="213:14">

    <case pos:start="147:5" pos:end="147:23">case <expr pos:start="147:10" pos:end="147:22"><name pos:start="147:10" pos:end="147:22">SNAPSHOT_LIST</name></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:27"><expr pos:start="149:9" pos:end="149:26"><call pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:22">dump_snapshots</name><argument_list pos:start="149:23" pos:end="149:26">(<argument pos:start="149:24" pos:end="149:25"><expr pos:start="149:24" pos:end="149:25"><name pos:start="149:24" pos:end="149:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>



    <case pos:start="155:5" pos:end="155:25">case <expr pos:start="155:10" pos:end="155:24"><name pos:start="155:10" pos:end="155:24">SNAPSHOT_CREATE</name></expr>:</case>

        <expr_stmt pos:start="157:9" pos:end="157:35"><expr pos:start="157:9" pos:end="157:34"><call pos:start="157:9" pos:end="157:34"><name pos:start="157:9" pos:end="157:14">memset</name><argument_list pos:start="157:15" pos:end="157:34">(<argument pos:start="157:16" pos:end="157:18"><expr pos:start="157:16" pos:end="157:18"><operator pos:start="157:16" pos:end="157:16">&amp;</operator><name pos:start="157:17" pos:end="157:18">sn</name></expr></argument>, <argument pos:start="157:21" pos:end="157:21"><expr pos:start="157:21" pos:end="157:21"><literal type="number" pos:start="157:21" pos:end="157:21">0</literal></expr></argument>, <argument pos:start="157:24" pos:end="157:33"><expr pos:start="157:24" pos:end="157:33"><sizeof pos:start="157:24" pos:end="157:33">sizeof<argument_list pos:start="157:30" pos:end="157:33">(<argument pos:start="157:31" pos:end="157:32"><expr pos:start="157:31" pos:end="157:32"><name pos:start="157:31" pos:end="157:32">sn</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:57"><expr pos:start="159:9" pos:end="159:56"><call pos:start="159:9" pos:end="159:56"><name pos:start="159:9" pos:end="159:15">pstrcpy</name><argument_list pos:start="159:16" pos:end="159:56">(<argument pos:start="159:17" pos:end="159:23"><expr pos:start="159:17" pos:end="159:23"><name pos:start="159:17" pos:end="159:23"><name pos:start="159:17" pos:end="159:18">sn</name><operator pos:start="159:19" pos:end="159:19">.</operator><name pos:start="159:20" pos:end="159:23">name</name></name></expr></argument>, <argument pos:start="159:26" pos:end="159:40"><expr pos:start="159:26" pos:end="159:40"><sizeof pos:start="159:26" pos:end="159:40">sizeof<argument_list pos:start="159:32" pos:end="159:40">(<argument pos:start="159:33" pos:end="159:39"><expr pos:start="159:33" pos:end="159:39"><name pos:start="159:33" pos:end="159:39"><name pos:start="159:33" pos:end="159:34">sn</name><operator pos:start="159:35" pos:end="159:35">.</operator><name pos:start="159:36" pos:end="159:39">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="159:43" pos:end="159:55"><expr pos:start="159:43" pos:end="159:55"><name pos:start="159:43" pos:end="159:55">snapshot_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:31"><expr pos:start="163:9" pos:end="163:30"><call pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:25">qemu_gettimeofday</name><argument_list pos:start="163:26" pos:end="163:30">(<argument pos:start="163:27" pos:end="163:29"><expr pos:start="163:27" pos:end="163:29"><operator pos:start="163:27" pos:end="163:27">&amp;</operator><name pos:start="163:28" pos:end="163:29">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:32"><expr pos:start="165:9" pos:end="165:31"><name pos:start="165:9" pos:end="165:19"><name pos:start="165:9" pos:end="165:10">sn</name><operator pos:start="165:11" pos:end="165:11">.</operator><name pos:start="165:12" pos:end="165:19">date_sec</name></name> <operator pos:start="165:21" pos:end="165:21">=</operator> <name pos:start="165:23" pos:end="165:31"><name pos:start="165:23" pos:end="165:24">tv</name><operator pos:start="165:25" pos:end="165:25">.</operator><name pos:start="165:26" pos:end="165:31">tv_sec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:41"><expr pos:start="167:9" pos:end="167:40"><name pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:10">sn</name><operator pos:start="167:11" pos:end="167:11">.</operator><name pos:start="167:12" pos:end="167:20">date_nsec</name></name> <operator pos:start="167:22" pos:end="167:22">=</operator> <name pos:start="167:24" pos:end="167:33"><name pos:start="167:24" pos:end="167:25">tv</name><operator pos:start="167:26" pos:end="167:26">.</operator><name pos:start="167:27" pos:end="167:33">tv_usec</name></name> <operator pos:start="167:35" pos:end="167:35">*</operator> <literal type="number" pos:start="167:37" pos:end="167:40">1000</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:44"><expr pos:start="171:9" pos:end="171:43"><name pos:start="171:9" pos:end="171:11">ret</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:43"><name pos:start="171:15" pos:end="171:34">bdrv_snapshot_create</name><argument_list pos:start="171:35" pos:end="171:43">(<argument pos:start="171:36" pos:end="171:37"><expr pos:start="171:36" pos:end="171:37"><name pos:start="171:36" pos:end="171:37">bs</name></expr></argument>, <argument pos:start="171:40" pos:end="171:42"><expr pos:start="171:40" pos:end="171:42"><operator pos:start="171:40" pos:end="171:40">&amp;</operator><name pos:start="171:41" pos:end="171:42">sn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="179:9"><if pos:start="173:9" pos:end="179:9">if <condition pos:start="173:12" pos:end="173:16">(<expr pos:start="173:13" pos:end="173:15"><name pos:start="173:13" pos:end="173:15">ret</name></expr>)</condition> <block pos:start="173:18" pos:end="179:9">{<block_content pos:start="175:13" pos:end="177:52">

            <expr_stmt pos:start="175:13" pos:end="177:52"><expr pos:start="175:13" pos:end="177:51"><call pos:start="175:13" pos:end="177:51"><name pos:start="175:13" pos:end="175:24">error_report</name><argument_list pos:start="175:25" pos:end="177:51">(<argument pos:start="175:26" pos:end="175:66"><expr pos:start="175:26" pos:end="175:66"><literal type="string" pos:start="175:26" pos:end="175:66">"Could not create snapshot '%s': %d (%s)"</literal></expr></argument>,

                <argument pos:start="177:17" pos:end="177:29"><expr pos:start="177:17" pos:end="177:29"><name pos:start="177:17" pos:end="177:29">snapshot_name</name></expr></argument>, <argument pos:start="177:32" pos:end="177:34"><expr pos:start="177:32" pos:end="177:34"><name pos:start="177:32" pos:end="177:34">ret</name></expr></argument>, <argument pos:start="177:37" pos:end="177:50"><expr pos:start="177:37" pos:end="177:50"><call pos:start="177:37" pos:end="177:50"><name pos:start="177:37" pos:end="177:44">strerror</name><argument_list pos:start="177:45" pos:end="177:50">(<argument pos:start="177:46" pos:end="177:49"><expr pos:start="177:46" pos:end="177:49"><operator pos:start="177:46" pos:end="177:46">-</operator><name pos:start="177:47" pos:end="177:49">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>



    <case pos:start="185:5" pos:end="185:24">case <expr pos:start="185:10" pos:end="185:23"><name pos:start="185:10" pos:end="185:23">SNAPSHOT_APPLY</name></expr>:</case>

        <expr_stmt pos:start="187:9" pos:end="187:52"><expr pos:start="187:9" pos:end="187:51"><name pos:start="187:9" pos:end="187:11">ret</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <call pos:start="187:15" pos:end="187:51"><name pos:start="187:15" pos:end="187:32">bdrv_snapshot_goto</name><argument_list pos:start="187:33" pos:end="187:51">(<argument pos:start="187:34" pos:end="187:35"><expr pos:start="187:34" pos:end="187:35"><name pos:start="187:34" pos:end="187:35">bs</name></expr></argument>, <argument pos:start="187:38" pos:end="187:50"><expr pos:start="187:38" pos:end="187:50"><name pos:start="187:38" pos:end="187:50">snapshot_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="189:9" pos:end="195:9"><if pos:start="189:9" pos:end="195:9">if <condition pos:start="189:12" pos:end="189:16">(<expr pos:start="189:13" pos:end="189:15"><name pos:start="189:13" pos:end="189:15">ret</name></expr>)</condition> <block pos:start="189:18" pos:end="195:9">{<block_content pos:start="191:13" pos:end="193:52">

            <expr_stmt pos:start="191:13" pos:end="193:52"><expr pos:start="191:13" pos:end="193:51"><call pos:start="191:13" pos:end="193:51"><name pos:start="191:13" pos:end="191:24">error_report</name><argument_list pos:start="191:25" pos:end="193:51">(<argument pos:start="191:26" pos:end="191:65"><expr pos:start="191:26" pos:end="191:65"><literal type="string" pos:start="191:26" pos:end="191:65">"Could not apply snapshot '%s': %d (%s)"</literal></expr></argument>,

                <argument pos:start="193:17" pos:end="193:29"><expr pos:start="193:17" pos:end="193:29"><name pos:start="193:17" pos:end="193:29">snapshot_name</name></expr></argument>, <argument pos:start="193:32" pos:end="193:34"><expr pos:start="193:32" pos:end="193:34"><name pos:start="193:32" pos:end="193:34">ret</name></expr></argument>, <argument pos:start="193:37" pos:end="193:50"><expr pos:start="193:37" pos:end="193:50"><call pos:start="193:37" pos:end="193:50"><name pos:start="193:37" pos:end="193:44">strerror</name><argument_list pos:start="193:45" pos:end="193:50">(<argument pos:start="193:46" pos:end="193:49"><expr pos:start="193:46" pos:end="193:49"><operator pos:start="193:46" pos:end="193:46">-</operator><name pos:start="193:47" pos:end="193:49">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="197:9" pos:end="197:14">break;</break>



    <case pos:start="201:5" pos:end="201:25">case <expr pos:start="201:10" pos:end="201:24"><name pos:start="201:10" pos:end="201:24">SNAPSHOT_DELETE</name></expr>:</case>

        <expr_stmt pos:start="203:9" pos:end="203:54"><expr pos:start="203:9" pos:end="203:53"><name pos:start="203:9" pos:end="203:11">ret</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <call pos:start="203:15" pos:end="203:53"><name pos:start="203:15" pos:end="203:34">bdrv_snapshot_delete</name><argument_list pos:start="203:35" pos:end="203:53">(<argument pos:start="203:36" pos:end="203:37"><expr pos:start="203:36" pos:end="203:37"><name pos:start="203:36" pos:end="203:37">bs</name></expr></argument>, <argument pos:start="203:40" pos:end="203:52"><expr pos:start="203:40" pos:end="203:52"><name pos:start="203:40" pos:end="203:52">snapshot_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="211:9"><if pos:start="205:9" pos:end="211:9">if <condition pos:start="205:12" pos:end="205:16">(<expr pos:start="205:13" pos:end="205:15"><name pos:start="205:13" pos:end="205:15">ret</name></expr>)</condition> <block pos:start="205:18" pos:end="211:9">{<block_content pos:start="207:13" pos:end="209:52">

            <expr_stmt pos:start="207:13" pos:end="209:52"><expr pos:start="207:13" pos:end="209:51"><call pos:start="207:13" pos:end="209:51"><name pos:start="207:13" pos:end="207:24">error_report</name><argument_list pos:start="207:25" pos:end="209:51">(<argument pos:start="207:26" pos:end="207:66"><expr pos:start="207:26" pos:end="207:66"><literal type="string" pos:start="207:26" pos:end="207:66">"Could not delete snapshot '%s': %d (%s)"</literal></expr></argument>,

                <argument pos:start="209:17" pos:end="209:29"><expr pos:start="209:17" pos:end="209:29"><name pos:start="209:17" pos:end="209:29">snapshot_name</name></expr></argument>, <argument pos:start="209:32" pos:end="209:34"><expr pos:start="209:32" pos:end="209:34"><name pos:start="209:32" pos:end="209:34">ret</name></expr></argument>, <argument pos:start="209:37" pos:end="209:50"><expr pos:start="209:37" pos:end="209:50"><call pos:start="209:37" pos:end="209:50"><name pos:start="209:37" pos:end="209:44">strerror</name><argument_list pos:start="209:45" pos:end="209:50">(<argument pos:start="209:46" pos:end="209:49"><expr pos:start="209:46" pos:end="209:49"><operator pos:start="209:46" pos:end="209:46">-</operator><name pos:start="209:47" pos:end="209:49">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="213:9" pos:end="213:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="219:5" pos:end="219:17">/* Cleanup */</comment>

    <expr_stmt pos:start="221:5" pos:end="221:19"><expr pos:start="221:5" pos:end="221:18"><call pos:start="221:5" pos:end="221:18"><name pos:start="221:5" pos:end="221:14">bdrv_unref</name><argument_list pos:start="221:15" pos:end="221:18">(<argument pos:start="221:16" pos:end="221:17"><expr pos:start="221:16" pos:end="221:17"><name pos:start="221:16" pos:end="221:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="223:5" pos:end="227:5"><if pos:start="223:5" pos:end="227:5">if <condition pos:start="223:8" pos:end="223:12">(<expr pos:start="223:9" pos:end="223:11"><name pos:start="223:9" pos:end="223:11">ret</name></expr>)</condition> <block pos:start="223:14" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:17">

        <return pos:start="225:9" pos:end="225:17">return <expr pos:start="225:16" pos:end="225:16"><literal type="number" pos:start="225:16" pos:end="225:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="229:5" pos:end="229:13">return <expr pos:start="229:12" pos:end="229:12"><literal type="number" pos:start="229:12" pos:end="229:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
