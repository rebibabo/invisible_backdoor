<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10865.c" pos:tabs="8"><function pos:start="1:1" pos:end="809:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:26">nvic_readl</name><parameter_list pos:start="1:27" pos:end="1:75">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:36">NVICState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:49">uint32_t</name></type> <name pos:start="1:51" pos:end="1:56">offset</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:74"><decl pos:start="1:59" pos:end="1:74"><type pos:start="1:59" pos:end="1:74"><name pos:start="1:59" pos:end="1:68">MemTxAttrs</name></type> <name pos:start="1:70" pos:end="1:74">attrs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="809:1">{<block_content pos:start="5:5" pos:end="807:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">ARMCPU</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">cpu</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:19">s</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:24">cpu</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="807:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="807:5">{<block_content pos:start="13:5" pos:end="805:17">

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">4</literal></expr>:</case> <comment type="block" pos:start="13:13" pos:end="13:42">/* Interrupt Control Type.  */</comment>

        <return pos:start="15:9" pos:end="15:56">return <expr pos:start="15:16" pos:end="15:55"><operator pos:start="15:16" pos:end="15:16">(</operator><operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:27"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:27">num_irq</name></name> <operator pos:start="15:29" pos:end="15:29">-</operator> <name pos:start="15:31" pos:end="15:44">NVIC_FIRST_IRQ</name><operator pos:start="15:45" pos:end="15:45">)</operator> <operator pos:start="15:47" pos:end="15:47">/</operator> <literal type="number" pos:start="15:49" pos:end="15:50">32</literal><operator pos:start="15:51" pos:end="15:51">)</operator> <operator pos:start="15:53" pos:end="15:53">-</operator> <literal type="number" pos:start="15:55" pos:end="15:55">1</literal></expr>;</return>

    <case pos:start="17:5" pos:end="17:25">case <expr pos:start="17:10" pos:end="17:24"><literal type="number" pos:start="17:10" pos:end="17:14">0x380</literal> <operator pos:start="17:16" pos:end="17:18">...</operator> <literal type="number" pos:start="17:20" pos:end="17:24">0x3bf</literal></expr>:</case> <comment type="block" pos:start="17:27" pos:end="17:44">/* NVIC_ITNS&lt;n&gt; */</comment>

    <block pos:start="19:5" pos:end="53:5">{<block_content pos:start="21:9" pos:end="51:19">

        <decl_stmt pos:start="21:9" pos:end="21:62"><decl pos:start="21:9" pos:end="21:61"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:20">startvec</name> <init pos:start="21:22" pos:end="21:61">= <expr pos:start="21:24" pos:end="21:61"><literal type="number" pos:start="21:24" pos:end="21:25">32</literal> <operator pos:start="21:27" pos:end="21:27">*</operator> <operator pos:start="21:29" pos:end="21:29">(</operator><name pos:start="21:30" pos:end="21:35">offset</name> <operator pos:start="21:37" pos:end="21:37">-</operator> <literal type="number" pos:start="21:39" pos:end="21:43">0x380</literal><operator pos:start="21:44" pos:end="21:44">)</operator> <operator pos:start="21:46" pos:end="21:46">+</operator> <name pos:start="21:48" pos:end="21:61">NVIC_FIRST_IRQ</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:14"><decl pos:start="23:9" pos:end="23:13"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">i</name></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:52">(<expr pos:start="27:13" pos:end="27:51"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:51"><name pos:start="27:14" pos:end="27:24">arm_feature</name><argument_list pos:start="27:25" pos:end="27:51">(<argument pos:start="27:26" pos:end="27:34"><expr pos:start="27:26" pos:end="27:34"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:34"><name pos:start="27:27" pos:end="27:29">cpu</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:34">env</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:50"><expr pos:start="27:37" pos:end="27:50"><name pos:start="27:37" pos:end="27:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:54" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:28">

            <goto pos:start="29:13" pos:end="29:28">goto <name pos:start="29:18" pos:end="29:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:26">(<expr pos:start="33:13" pos:end="33:25"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:25"><name pos:start="33:14" pos:end="33:18">attrs</name><operator pos:start="33:19" pos:end="33:19">.</operator><name pos:start="33:20" pos:end="33:25">secure</name></name></expr>)</condition> <block pos:start="33:28" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:21">

            <return pos:start="35:13" pos:end="35:21">return <expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">val</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>;</expr_stmt>

        <for pos:start="41:9" pos:end="49:9">for <control pos:start="41:13" pos:end="41:61">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:56"><expr pos:start="41:21" pos:end="41:55"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <literal type="number" pos:start="41:25" pos:end="41:26">32</literal> <operator pos:start="41:28" pos:end="41:29">&amp;&amp;</operator> <name pos:start="41:31" pos:end="41:38">startvec</name> <operator pos:start="41:40" pos:end="41:40">+</operator> <name pos:start="41:42" pos:end="41:42">i</name> <operator pos:start="41:44" pos:end="41:44">&lt;</operator> <name pos:start="41:46" pos:end="41:55"><name pos:start="41:46" pos:end="41:46">s</name><operator pos:start="41:47" pos:end="41:48">-&gt;</operator><name pos:start="41:49" pos:end="41:55">num_irq</name></name></expr>;</condition> <incr pos:start="41:58" pos:end="41:60"><expr pos:start="41:58" pos:end="41:60"><name pos:start="41:58" pos:end="41:58">i</name><operator pos:start="41:59" pos:end="41:60">++</operator></expr></incr>)</control> <block pos:start="41:63" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:13">

            <if_stmt pos:start="43:13" pos:end="47:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:38">(<expr pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:23">itns</name><index pos:start="43:24" pos:end="43:37">[<expr pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:32">startvec</name> <operator pos:start="43:34" pos:end="43:34">+</operator> <name pos:start="43:36" pos:end="43:36">i</name></expr>]</index></name></expr>)</condition> <block pos:start="43:40" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:32">

                <expr_stmt pos:start="45:17" pos:end="45:32"><expr pos:start="45:17" pos:end="45:31"><name pos:start="45:17" pos:end="45:19">val</name> <operator pos:start="45:21" pos:end="45:22">|=</operator> <operator pos:start="45:24" pos:end="45:24">(</operator><literal type="number" pos:start="45:25" pos:end="45:25">1</literal> <operator pos:start="45:27" pos:end="45:28">&lt;&lt;</operator> <name pos:start="45:30" pos:end="45:30">i</name><operator pos:start="45:31" pos:end="45:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <return pos:start="51:9" pos:end="51:19">return <expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">val</name></expr>;</return>

    </block_content>}</block>

    <case pos:start="55:5" pos:end="55:15">case <expr pos:start="55:10" pos:end="55:14"><literal type="number" pos:start="55:10" pos:end="55:14">0xd00</literal></expr>:</case> <comment type="block" pos:start="55:17" pos:end="55:34">/* CPUID Base.  */</comment>

        <return pos:start="57:9" pos:end="57:25">return <expr pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:18">cpu</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:24">midr</name></name></expr>;</return>

    <case pos:start="59:5" pos:end="59:15">case <expr pos:start="59:10" pos:end="59:14"><literal type="number" pos:start="59:10" pos:end="59:14">0xd04</literal></expr>:</case> <comment type="block" pos:start="59:17" pos:end="59:52">/* Interrupt Control State (ICSR) */</comment>

        <comment type="block" pos:start="61:9" pos:end="61:24">/* VECTACTIVE */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:11">val</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <name pos:start="63:15" pos:end="63:36"><name pos:start="63:15" pos:end="63:17">cpu</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:22">env</name><operator pos:start="63:23" pos:end="63:23">.</operator><name pos:start="63:24" pos:end="63:26">v7m</name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:36">exception</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="65:9" pos:end="65:25">/* VECTPENDING */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:11">val</name> <operator pos:start="67:13" pos:end="67:14">|=</operator> <operator pos:start="67:16" pos:end="67:16">(</operator><name pos:start="67:17" pos:end="67:30"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:30">vectpending</name></name> <operator pos:start="67:32" pos:end="67:32">&amp;</operator> <literal type="number" pos:start="67:34" pos:end="67:37">0xff</literal><operator pos:start="67:38" pos:end="67:38">)</operator> <operator pos:start="67:40" pos:end="67:41">&lt;&lt;</operator> <literal type="number" pos:start="67:43" pos:end="67:44">12</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:61">/* ISRPENDING - set if any external IRQ is pending */</comment>

        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:31">(<expr pos:start="71:13" pos:end="71:30"><call pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:27">nvic_isrpending</name><argument_list pos:start="71:28" pos:end="71:30">(<argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:33" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:29">

            <expr_stmt pos:start="73:13" pos:end="73:29"><expr pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:15">val</name> <operator pos:start="73:17" pos:end="73:18">|=</operator> <operator pos:start="73:20" pos:end="73:20">(</operator><literal type="number" pos:start="73:21" pos:end="73:21">1</literal> <operator pos:start="73:23" pos:end="73:24">&lt;&lt;</operator> <literal type="number" pos:start="73:26" pos:end="73:27">22</literal><operator pos:start="73:28" pos:end="73:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="77:9" pos:end="77:59">/* RETTOBASE - set if only one handler is active */</comment>

        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:30">(<expr pos:start="79:13" pos:end="79:29"><call pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:26">nvic_rettobase</name><argument_list pos:start="79:27" pos:end="79:29">(<argument pos:start="79:28" pos:end="79:28"><expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:32" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:29">

            <expr_stmt pos:start="81:13" pos:end="81:29"><expr pos:start="81:13" pos:end="81:28"><name pos:start="81:13" pos:end="81:15">val</name> <operator pos:start="81:17" pos:end="81:18">|=</operator> <operator pos:start="81:20" pos:end="81:20">(</operator><literal type="number" pos:start="81:21" pos:end="81:21">1</literal> <operator pos:start="81:23" pos:end="81:24">&lt;&lt;</operator> <literal type="number" pos:start="81:26" pos:end="81:27">11</literal><operator pos:start="81:28" pos:end="81:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="85:9" pos:end="121:9"><if pos:start="85:9" pos:end="103:9">if <condition pos:start="85:12" pos:end="85:25">(<expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:17">attrs</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:24">secure</name></name></expr>)</condition> <block pos:start="85:27" pos:end="103:9">{<block_content pos:start="89:13" pos:end="101:13">

            <comment type="block" pos:start="87:13" pos:end="87:27">/* PENDSTSET */</comment>

            <if_stmt pos:start="89:13" pos:end="93:13"><if pos:start="89:13" pos:end="93:13">if <condition pos:start="89:16" pos:end="89:60">(<expr pos:start="89:17" pos:end="89:59"><name pos:start="89:17" pos:end="89:51"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:30">sec_vectors</name><index pos:start="89:31" pos:end="89:51">[<expr pos:start="89:32" pos:end="89:50"><name pos:start="89:32" pos:end="89:50">ARMV7M_EXCP_SYSTICK</name></expr>]</index></name><operator pos:start="89:52" pos:end="89:52">.</operator><name pos:start="89:53" pos:end="89:59">pending</name></expr>)</condition> <block pos:start="89:62" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:33">

                <expr_stmt pos:start="91:17" pos:end="91:33"><expr pos:start="91:17" pos:end="91:32"><name pos:start="91:17" pos:end="91:19">val</name> <operator pos:start="91:21" pos:end="91:22">|=</operator> <operator pos:start="91:24" pos:end="91:24">(</operator><literal type="number" pos:start="91:25" pos:end="91:25">1</literal> <operator pos:start="91:27" pos:end="91:28">&lt;&lt;</operator> <literal type="number" pos:start="91:30" pos:end="91:31">26</literal><operator pos:start="91:32" pos:end="91:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="95:13" pos:end="95:27">/* PENDSVSET */</comment>

            <if_stmt pos:start="97:13" pos:end="101:13"><if pos:start="97:13" pos:end="101:13">if <condition pos:start="97:16" pos:end="97:59">(<expr pos:start="97:17" pos:end="97:58"><name pos:start="97:17" pos:end="97:50"><name pos:start="97:17" pos:end="97:17">s</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:30">sec_vectors</name><index pos:start="97:31" pos:end="97:50">[<expr pos:start="97:32" pos:end="97:49"><name pos:start="97:32" pos:end="97:49">ARMV7M_EXCP_PENDSV</name></expr>]</index></name><operator pos:start="97:51" pos:end="97:51">.</operator><name pos:start="97:52" pos:end="97:58">pending</name></expr>)</condition> <block pos:start="97:61" pos:end="101:13">{<block_content pos:start="99:17" pos:end="99:33">

                <expr_stmt pos:start="99:17" pos:end="99:33"><expr pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:19">val</name> <operator pos:start="99:21" pos:end="99:22">|=</operator> <operator pos:start="99:24" pos:end="99:24">(</operator><literal type="number" pos:start="99:25" pos:end="99:25">1</literal> <operator pos:start="99:27" pos:end="99:28">&lt;&lt;</operator> <literal type="number" pos:start="99:30" pos:end="99:31">28</literal><operator pos:start="99:32" pos:end="99:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="103:11" pos:end="121:9">else <block pos:start="103:16" pos:end="121:9">{<block_content pos:start="107:13" pos:end="119:13">

            <comment type="block" pos:start="105:13" pos:end="105:27">/* PENDSTSET */</comment>

            <if_stmt pos:start="107:13" pos:end="111:13"><if pos:start="107:13" pos:end="111:13">if <condition pos:start="107:16" pos:end="107:56">(<expr pos:start="107:17" pos:end="107:55"><name pos:start="107:17" pos:end="107:47"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:26">vectors</name><index pos:start="107:27" pos:end="107:47">[<expr pos:start="107:28" pos:end="107:46"><name pos:start="107:28" pos:end="107:46">ARMV7M_EXCP_SYSTICK</name></expr>]</index></name><operator pos:start="107:48" pos:end="107:48">.</operator><name pos:start="107:49" pos:end="107:55">pending</name></expr>)</condition> <block pos:start="107:58" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:33">

                <expr_stmt pos:start="109:17" pos:end="109:33"><expr pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:19">val</name> <operator pos:start="109:21" pos:end="109:22">|=</operator> <operator pos:start="109:24" pos:end="109:24">(</operator><literal type="number" pos:start="109:25" pos:end="109:25">1</literal> <operator pos:start="109:27" pos:end="109:28">&lt;&lt;</operator> <literal type="number" pos:start="109:30" pos:end="109:31">26</literal><operator pos:start="109:32" pos:end="109:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="113:13" pos:end="113:27">/* PENDSVSET */</comment>

            <if_stmt pos:start="115:13" pos:end="119:13"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:55">(<expr pos:start="115:17" pos:end="115:54"><name pos:start="115:17" pos:end="115:46"><name pos:start="115:17" pos:end="115:17">s</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:26">vectors</name><index pos:start="115:27" pos:end="115:46">[<expr pos:start="115:28" pos:end="115:45"><name pos:start="115:28" pos:end="115:45">ARMV7M_EXCP_PENDSV</name></expr>]</index></name><operator pos:start="115:47" pos:end="115:47">.</operator><name pos:start="115:48" pos:end="115:54">pending</name></expr>)</condition> <block pos:start="115:57" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:33">

                <expr_stmt pos:start="117:17" pos:end="117:33"><expr pos:start="117:17" pos:end="117:32"><name pos:start="117:17" pos:end="117:19">val</name> <operator pos:start="117:21" pos:end="117:22">|=</operator> <operator pos:start="117:24" pos:end="117:24">(</operator><literal type="number" pos:start="117:25" pos:end="117:25">1</literal> <operator pos:start="117:27" pos:end="117:28">&lt;&lt;</operator> <literal type="number" pos:start="117:30" pos:end="117:31">28</literal><operator pos:start="117:32" pos:end="117:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="123:9" pos:end="123:24">/* NMIPENDSET */</comment>

        <if_stmt pos:start="125:9" pos:end="131:9"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="127:48">(<expr pos:start="125:13" pos:end="127:47"><operator pos:start="125:13" pos:end="125:13">(</operator><name pos:start="125:14" pos:end="125:31"><name pos:start="125:14" pos:end="125:16">cpu</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:21">env</name><operator pos:start="125:22" pos:end="125:22">.</operator><name pos:start="125:23" pos:end="125:25">v7m</name><operator pos:start="125:26" pos:end="125:26">.</operator><name pos:start="125:27" pos:end="125:31">aircr</name></name> <operator pos:start="125:33" pos:end="125:33">&amp;</operator> <name pos:start="125:35" pos:end="125:60">R_V7M_AIRCR_BFHFNMINS_MASK</name><operator pos:start="125:61" pos:end="125:61">)</operator> <operator pos:start="125:63" pos:end="125:64">&amp;&amp;</operator>

            <name pos:start="127:13" pos:end="127:39"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:22">vectors</name><index pos:start="127:23" pos:end="127:39">[<expr pos:start="127:24" pos:end="127:38"><name pos:start="127:24" pos:end="127:38">ARMV7M_EXCP_NMI</name></expr>]</index></name><operator pos:start="127:40" pos:end="127:40">.</operator><name pos:start="127:41" pos:end="127:47">pending</name></expr>)</condition> <block pos:start="127:50" pos:end="131:9">{<block_content pos:start="129:13" pos:end="129:29">

            <expr_stmt pos:start="129:13" pos:end="129:29"><expr pos:start="129:13" pos:end="129:28"><name pos:start="129:13" pos:end="129:15">val</name> <operator pos:start="129:17" pos:end="129:18">|=</operator> <operator pos:start="129:20" pos:end="129:20">(</operator><literal type="number" pos:start="129:21" pos:end="129:21">1</literal> <operator pos:start="129:23" pos:end="129:24">&lt;&lt;</operator> <literal type="number" pos:start="129:26" pos:end="129:27">31</literal><operator pos:start="129:28" pos:end="129:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="133:9" pos:end="133:65">/* ISRPREEMPT: RES0 when halting debug not implemented */</comment>

        <comment type="block" pos:start="135:9" pos:end="135:48">/* STTNS: RES0 for the Main Extension */</comment>

        <return pos:start="137:9" pos:end="137:19">return <expr pos:start="137:16" pos:end="137:18"><name pos:start="137:16" pos:end="137:18">val</name></expr>;</return>

    <case pos:start="139:5" pos:end="139:15">case <expr pos:start="139:10" pos:end="139:14"><literal type="number" pos:start="139:10" pos:end="139:14">0xd08</literal></expr>:</case> <comment type="block" pos:start="139:17" pos:end="139:43">/* Vector Table Offset.  */</comment>

        <return pos:start="141:9" pos:end="141:50">return <expr pos:start="141:16" pos:end="141:49"><name pos:start="141:16" pos:end="141:49"><name pos:start="141:16" pos:end="141:18">cpu</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:23">env</name><operator pos:start="141:24" pos:end="141:24">.</operator><name pos:start="141:25" pos:end="141:27">v7m</name><operator pos:start="141:28" pos:end="141:28">.</operator><name pos:start="141:29" pos:end="141:35">vecbase</name><index pos:start="141:36" pos:end="141:49">[<expr pos:start="141:37" pos:end="141:48"><name pos:start="141:37" pos:end="141:48"><name pos:start="141:37" pos:end="141:41">attrs</name><operator pos:start="141:42" pos:end="141:42">.</operator><name pos:start="141:43" pos:end="141:48">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="143:5" pos:end="143:15">case <expr pos:start="143:10" pos:end="143:14"><literal type="number" pos:start="143:10" pos:end="143:14">0xd0c</literal></expr>:</case> <comment type="block" pos:start="143:17" pos:end="143:65">/* Application Interrupt/Reset Control (AIRCR) */</comment>

        <expr_stmt pos:start="145:9" pos:end="145:60"><expr pos:start="145:9" pos:end="145:59"><name pos:start="145:9" pos:end="145:11">val</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <literal type="number" pos:start="145:15" pos:end="145:24">0xfa050000</literal> <operator pos:start="145:26" pos:end="145:26">|</operator> <operator pos:start="145:28" pos:end="145:28">(</operator><name pos:start="145:29" pos:end="145:53"><name pos:start="145:29" pos:end="145:29">s</name><operator pos:start="145:30" pos:end="145:31">-&gt;</operator><name pos:start="145:32" pos:end="145:39">prigroup</name><index pos:start="145:40" pos:end="145:53">[<expr pos:start="145:41" pos:end="145:52"><name pos:start="145:41" pos:end="145:52"><name pos:start="145:41" pos:end="145:45">attrs</name><operator pos:start="145:46" pos:end="145:46">.</operator><name pos:start="145:47" pos:end="145:52">secure</name></name></expr>]</index></name> <operator pos:start="145:55" pos:end="145:56">&lt;&lt;</operator> <literal type="number" pos:start="145:58" pos:end="145:58">8</literal><operator pos:start="145:59" pos:end="145:59">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="169:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="147:25">(<expr pos:start="147:13" pos:end="147:24"><name pos:start="147:13" pos:end="147:24"><name pos:start="147:13" pos:end="147:17">attrs</name><operator pos:start="147:18" pos:end="147:18">.</operator><name pos:start="147:19" pos:end="147:24">secure</name></name></expr>)</condition> <block pos:start="147:27" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:38">

            <comment type="block" pos:start="149:13" pos:end="149:63">/* s-&gt;aircr stores PRIS, BFHFNMINS, SYSRESETREQS */</comment>

            <expr_stmt pos:start="151:13" pos:end="151:38"><expr pos:start="151:13" pos:end="151:37"><name pos:start="151:13" pos:end="151:15">val</name> <operator pos:start="151:17" pos:end="151:18">|=</operator> <name pos:start="151:20" pos:end="151:37"><name pos:start="151:20" pos:end="151:22">cpu</name><operator pos:start="151:23" pos:end="151:24">-&gt;</operator><name pos:start="151:25" pos:end="151:27">env</name><operator pos:start="151:28" pos:end="151:28">.</operator><name pos:start="151:29" pos:end="151:31">v7m</name><operator pos:start="151:32" pos:end="151:32">.</operator><name pos:start="151:33" pos:end="151:37">aircr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="153:11" pos:end="169:9">else <block pos:start="153:16" pos:end="169:9">{<block_content pos:start="155:13" pos:end="167:13">

            <if_stmt pos:start="155:13" pos:end="167:13"><if pos:start="155:13" pos:end="167:13">if <condition pos:start="155:16" pos:end="155:55">(<expr pos:start="155:17" pos:end="155:54"><call pos:start="155:17" pos:end="155:54"><name pos:start="155:17" pos:end="155:27">arm_feature</name><argument_list pos:start="155:28" pos:end="155:54">(<argument pos:start="155:29" pos:end="155:37"><expr pos:start="155:29" pos:end="155:37"><operator pos:start="155:29" pos:end="155:29">&amp;</operator><name pos:start="155:30" pos:end="155:37"><name pos:start="155:30" pos:end="155:32">cpu</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:37">env</name></name></expr></argument>, <argument pos:start="155:40" pos:end="155:53"><expr pos:start="155:40" pos:end="155:53"><name pos:start="155:40" pos:end="155:53">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:57" pos:end="167:13">{<block_content pos:start="165:17" pos:end="165:71">

                <comment type="block" pos:start="157:17" pos:end="163:19">/* BFHFNMINS is R/O from NS; other bits are RAZ/WI. If

                 * security isn't supported then BFHFNMINS is RAO (and

                 * the bit in env.v7m.aircr is always set).

                 */</comment>

                <expr_stmt pos:start="165:17" pos:end="165:71"><expr pos:start="165:17" pos:end="165:70"><name pos:start="165:17" pos:end="165:19">val</name> <operator pos:start="165:21" pos:end="165:22">|=</operator> <name pos:start="165:24" pos:end="165:41"><name pos:start="165:24" pos:end="165:26">cpu</name><operator pos:start="165:27" pos:end="165:28">-&gt;</operator><name pos:start="165:29" pos:end="165:31">env</name><operator pos:start="165:32" pos:end="165:32">.</operator><name pos:start="165:33" pos:end="165:35">v7m</name><operator pos:start="165:36" pos:end="165:36">.</operator><name pos:start="165:37" pos:end="165:41">aircr</name></name> <operator pos:start="165:43" pos:end="165:43">&amp;</operator> <name pos:start="165:45" pos:end="165:70">R_V7M_AIRCR_BFHFNMINS_MASK</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="171:9" pos:end="171:19">return <expr pos:start="171:16" pos:end="171:18"><name pos:start="171:16" pos:end="171:18">val</name></expr>;</return>

    <case pos:start="173:5" pos:end="173:15">case <expr pos:start="173:10" pos:end="173:14"><literal type="number" pos:start="173:10" pos:end="173:14">0xd10</literal></expr>:</case> <comment type="block" pos:start="173:17" pos:end="173:38">/* System Control.  */</comment>

        <comment type="block" pos:start="175:9" pos:end="175:43">/* TODO: Implement SLEEPONEXIT.  */</comment>

        <return pos:start="177:9" pos:end="177:17">return <expr pos:start="177:16" pos:end="177:16"><literal type="number" pos:start="177:16" pos:end="177:16">0</literal></expr>;</return>

    <case pos:start="179:5" pos:end="179:15">case <expr pos:start="179:10" pos:end="179:14"><literal type="number" pos:start="179:10" pos:end="179:14">0xd14</literal></expr>:</case> <comment type="block" pos:start="179:17" pos:end="179:45">/* Configuration Control.  */</comment>

        <comment type="block" pos:start="181:9" pos:end="185:11">/* The BFHFNMIGN bit is the only non-banked bit; we

         * keep it in the non-secure copy of the register.

         */</comment>

        <expr_stmt pos:start="187:9" pos:end="187:45"><expr pos:start="187:9" pos:end="187:44"><name pos:start="187:9" pos:end="187:11">val</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <name pos:start="187:15" pos:end="187:44"><name pos:start="187:15" pos:end="187:17">cpu</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:22">env</name><operator pos:start="187:23" pos:end="187:23">.</operator><name pos:start="187:24" pos:end="187:26">v7m</name><operator pos:start="187:27" pos:end="187:27">.</operator><name pos:start="187:28" pos:end="187:30">ccr</name><index pos:start="187:31" pos:end="187:44">[<expr pos:start="187:32" pos:end="187:43"><name pos:start="187:32" pos:end="187:43"><name pos:start="187:32" pos:end="187:36">attrs</name><operator pos:start="187:37" pos:end="187:37">.</operator><name pos:start="187:38" pos:end="187:43">secure</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:69"><expr pos:start="189:9" pos:end="189:68"><name pos:start="189:9" pos:end="189:11">val</name> <operator pos:start="189:13" pos:end="189:14">|=</operator> <name pos:start="189:16" pos:end="189:41"><name pos:start="189:16" pos:end="189:18">cpu</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:23">env</name><operator pos:start="189:24" pos:end="189:24">.</operator><name pos:start="189:25" pos:end="189:27">v7m</name><operator pos:start="189:28" pos:end="189:28">.</operator><name pos:start="189:29" pos:end="189:31">ccr</name><index pos:start="189:32" pos:end="189:41">[<expr pos:start="189:33" pos:end="189:40"><name pos:start="189:33" pos:end="189:40">M_REG_NS</name></expr>]</index></name> <operator pos:start="189:43" pos:end="189:43">&amp;</operator> <name pos:start="189:45" pos:end="189:68">R_V7M_CCR_BFHFNMIGN_MASK</name></expr>;</expr_stmt>

        <return pos:start="191:9" pos:end="191:19">return <expr pos:start="191:16" pos:end="191:18"><name pos:start="191:16" pos:end="191:18">val</name></expr>;</return>

    <case pos:start="193:5" pos:end="193:15">case <expr pos:start="193:10" pos:end="193:14"><literal type="number" pos:start="193:10" pos:end="193:14">0xd24</literal></expr>:</case> <comment type="block" pos:start="193:17" pos:end="193:62">/* System Handler Control and State (SHCSR) */</comment>

        <expr_stmt pos:start="195:9" pos:end="195:16"><expr pos:start="195:9" pos:end="195:15"><name pos:start="195:9" pos:end="195:11">val</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <literal type="number" pos:start="195:15" pos:end="195:15">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="371:9"><if pos:start="197:9" pos:end="291:9">if <condition pos:start="197:12" pos:end="197:25">(<expr pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:17">attrs</name><operator pos:start="197:18" pos:end="197:18">.</operator><name pos:start="197:19" pos:end="197:24">secure</name></name></expr>)</condition> <block pos:start="197:27" pos:end="291:9">{<block_content pos:start="199:13" pos:end="289:13">

            <if_stmt pos:start="199:13" pos:end="203:13"><if pos:start="199:13" pos:end="203:13">if <condition pos:start="199:16" pos:end="199:55">(<expr pos:start="199:17" pos:end="199:54"><name pos:start="199:17" pos:end="199:47"><name pos:start="199:17" pos:end="199:17">s</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:30">sec_vectors</name><index pos:start="199:31" pos:end="199:47">[<expr pos:start="199:32" pos:end="199:46"><name pos:start="199:32" pos:end="199:46">ARMV7M_EXCP_MEM</name></expr>]</index></name><operator pos:start="199:48" pos:end="199:48">.</operator><name pos:start="199:49" pos:end="199:54">active</name></expr>)</condition> <block pos:start="199:57" pos:end="203:13">{<block_content pos:start="201:17" pos:end="201:32">

                <expr_stmt pos:start="201:17" pos:end="201:32"><expr pos:start="201:17" pos:end="201:31"><name pos:start="201:17" pos:end="201:19">val</name> <operator pos:start="201:21" pos:end="201:22">|=</operator> <operator pos:start="201:24" pos:end="201:24">(</operator><literal type="number" pos:start="201:25" pos:end="201:25">1</literal> <operator pos:start="201:27" pos:end="201:28">&lt;&lt;</operator> <literal type="number" pos:start="201:30" pos:end="201:30">0</literal><operator pos:start="201:31" pos:end="201:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="205:13" pos:end="209:13"><if pos:start="205:13" pos:end="209:13">if <condition pos:start="205:16" pos:end="205:56">(<expr pos:start="205:17" pos:end="205:55"><name pos:start="205:17" pos:end="205:48"><name pos:start="205:17" pos:end="205:17">s</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:30">sec_vectors</name><index pos:start="205:31" pos:end="205:48">[<expr pos:start="205:32" pos:end="205:47"><name pos:start="205:32" pos:end="205:47">ARMV7M_EXCP_HARD</name></expr>]</index></name><operator pos:start="205:49" pos:end="205:49">.</operator><name pos:start="205:50" pos:end="205:55">active</name></expr>)</condition> <block pos:start="205:58" pos:end="209:13">{<block_content pos:start="207:17" pos:end="207:32">

                <expr_stmt pos:start="207:17" pos:end="207:32"><expr pos:start="207:17" pos:end="207:31"><name pos:start="207:17" pos:end="207:19">val</name> <operator pos:start="207:21" pos:end="207:22">|=</operator> <operator pos:start="207:24" pos:end="207:24">(</operator><literal type="number" pos:start="207:25" pos:end="207:25">1</literal> <operator pos:start="207:27" pos:end="207:28">&lt;&lt;</operator> <literal type="number" pos:start="207:30" pos:end="207:30">2</literal><operator pos:start="207:31" pos:end="207:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="211:13" pos:end="215:13"><if pos:start="211:13" pos:end="215:13">if <condition pos:start="211:16" pos:end="211:57">(<expr pos:start="211:17" pos:end="211:56"><name pos:start="211:17" pos:end="211:49"><name pos:start="211:17" pos:end="211:17">s</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:30">sec_vectors</name><index pos:start="211:31" pos:end="211:49">[<expr pos:start="211:32" pos:end="211:48"><name pos:start="211:32" pos:end="211:48">ARMV7M_EXCP_USAGE</name></expr>]</index></name><operator pos:start="211:50" pos:end="211:50">.</operator><name pos:start="211:51" pos:end="211:56">active</name></expr>)</condition> <block pos:start="211:59" pos:end="215:13">{<block_content pos:start="213:17" pos:end="213:32">

                <expr_stmt pos:start="213:17" pos:end="213:32"><expr pos:start="213:17" pos:end="213:31"><name pos:start="213:17" pos:end="213:19">val</name> <operator pos:start="213:21" pos:end="213:22">|=</operator> <operator pos:start="213:24" pos:end="213:24">(</operator><literal type="number" pos:start="213:25" pos:end="213:25">1</literal> <operator pos:start="213:27" pos:end="213:28">&lt;&lt;</operator> <literal type="number" pos:start="213:30" pos:end="213:30">3</literal><operator pos:start="213:31" pos:end="213:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="217:13" pos:end="221:13"><if pos:start="217:13" pos:end="221:13">if <condition pos:start="217:16" pos:end="217:55">(<expr pos:start="217:17" pos:end="217:54"><name pos:start="217:17" pos:end="217:47"><name pos:start="217:17" pos:end="217:17">s</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:30">sec_vectors</name><index pos:start="217:31" pos:end="217:47">[<expr pos:start="217:32" pos:end="217:46"><name pos:start="217:32" pos:end="217:46">ARMV7M_EXCP_SVC</name></expr>]</index></name><operator pos:start="217:48" pos:end="217:48">.</operator><name pos:start="217:49" pos:end="217:54">active</name></expr>)</condition> <block pos:start="217:57" pos:end="221:13">{<block_content pos:start="219:17" pos:end="219:32">

                <expr_stmt pos:start="219:17" pos:end="219:32"><expr pos:start="219:17" pos:end="219:31"><name pos:start="219:17" pos:end="219:19">val</name> <operator pos:start="219:21" pos:end="219:22">|=</operator> <operator pos:start="219:24" pos:end="219:24">(</operator><literal type="number" pos:start="219:25" pos:end="219:25">1</literal> <operator pos:start="219:27" pos:end="219:28">&lt;&lt;</operator> <literal type="number" pos:start="219:30" pos:end="219:30">7</literal><operator pos:start="219:31" pos:end="219:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="223:13" pos:end="227:13"><if pos:start="223:13" pos:end="227:13">if <condition pos:start="223:16" pos:end="223:58">(<expr pos:start="223:17" pos:end="223:57"><name pos:start="223:17" pos:end="223:50"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:30">sec_vectors</name><index pos:start="223:31" pos:end="223:50">[<expr pos:start="223:32" pos:end="223:49"><name pos:start="223:32" pos:end="223:49">ARMV7M_EXCP_PENDSV</name></expr>]</index></name><operator pos:start="223:51" pos:end="223:51">.</operator><name pos:start="223:52" pos:end="223:57">active</name></expr>)</condition> <block pos:start="223:60" pos:end="227:13">{<block_content pos:start="225:17" pos:end="225:33">

                <expr_stmt pos:start="225:17" pos:end="225:33"><expr pos:start="225:17" pos:end="225:32"><name pos:start="225:17" pos:end="225:19">val</name> <operator pos:start="225:21" pos:end="225:22">|=</operator> <operator pos:start="225:24" pos:end="225:24">(</operator><literal type="number" pos:start="225:25" pos:end="225:25">1</literal> <operator pos:start="225:27" pos:end="225:28">&lt;&lt;</operator> <literal type="number" pos:start="225:30" pos:end="225:31">10</literal><operator pos:start="225:32" pos:end="225:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="229:13" pos:end="233:13"><if pos:start="229:13" pos:end="233:13">if <condition pos:start="229:16" pos:end="229:59">(<expr pos:start="229:17" pos:end="229:58"><name pos:start="229:17" pos:end="229:51"><name pos:start="229:17" pos:end="229:17">s</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:30">sec_vectors</name><index pos:start="229:31" pos:end="229:51">[<expr pos:start="229:32" pos:end="229:50"><name pos:start="229:32" pos:end="229:50">ARMV7M_EXCP_SYSTICK</name></expr>]</index></name><operator pos:start="229:52" pos:end="229:52">.</operator><name pos:start="229:53" pos:end="229:58">active</name></expr>)</condition> <block pos:start="229:61" pos:end="233:13">{<block_content pos:start="231:17" pos:end="231:33">

                <expr_stmt pos:start="231:17" pos:end="231:33"><expr pos:start="231:17" pos:end="231:32"><name pos:start="231:17" pos:end="231:19">val</name> <operator pos:start="231:21" pos:end="231:22">|=</operator> <operator pos:start="231:24" pos:end="231:24">(</operator><literal type="number" pos:start="231:25" pos:end="231:25">1</literal> <operator pos:start="231:27" pos:end="231:28">&lt;&lt;</operator> <literal type="number" pos:start="231:30" pos:end="231:31">11</literal><operator pos:start="231:32" pos:end="231:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="235:13" pos:end="239:13"><if pos:start="235:13" pos:end="239:13">if <condition pos:start="235:16" pos:end="235:58">(<expr pos:start="235:17" pos:end="235:57"><name pos:start="235:17" pos:end="235:49"><name pos:start="235:17" pos:end="235:17">s</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:30">sec_vectors</name><index pos:start="235:31" pos:end="235:49">[<expr pos:start="235:32" pos:end="235:48"><name pos:start="235:32" pos:end="235:48">ARMV7M_EXCP_USAGE</name></expr>]</index></name><operator pos:start="235:50" pos:end="235:50">.</operator><name pos:start="235:51" pos:end="235:57">pending</name></expr>)</condition> <block pos:start="235:60" pos:end="239:13">{<block_content pos:start="237:17" pos:end="237:33">

                <expr_stmt pos:start="237:17" pos:end="237:33"><expr pos:start="237:17" pos:end="237:32"><name pos:start="237:17" pos:end="237:19">val</name> <operator pos:start="237:21" pos:end="237:22">|=</operator> <operator pos:start="237:24" pos:end="237:24">(</operator><literal type="number" pos:start="237:25" pos:end="237:25">1</literal> <operator pos:start="237:27" pos:end="237:28">&lt;&lt;</operator> <literal type="number" pos:start="237:30" pos:end="237:31">12</literal><operator pos:start="237:32" pos:end="237:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="241:13" pos:end="245:13"><if pos:start="241:13" pos:end="245:13">if <condition pos:start="241:16" pos:end="241:56">(<expr pos:start="241:17" pos:end="241:55"><name pos:start="241:17" pos:end="241:47"><name pos:start="241:17" pos:end="241:17">s</name><operator pos:start="241:18" pos:end="241:19">-&gt;</operator><name pos:start="241:20" pos:end="241:30">sec_vectors</name><index pos:start="241:31" pos:end="241:47">[<expr pos:start="241:32" pos:end="241:46"><name pos:start="241:32" pos:end="241:46">ARMV7M_EXCP_MEM</name></expr>]</index></name><operator pos:start="241:48" pos:end="241:48">.</operator><name pos:start="241:49" pos:end="241:55">pending</name></expr>)</condition> <block pos:start="241:58" pos:end="245:13">{<block_content pos:start="243:17" pos:end="243:33">

                <expr_stmt pos:start="243:17" pos:end="243:33"><expr pos:start="243:17" pos:end="243:32"><name pos:start="243:17" pos:end="243:19">val</name> <operator pos:start="243:21" pos:end="243:22">|=</operator> <operator pos:start="243:24" pos:end="243:24">(</operator><literal type="number" pos:start="243:25" pos:end="243:25">1</literal> <operator pos:start="243:27" pos:end="243:28">&lt;&lt;</operator> <literal type="number" pos:start="243:30" pos:end="243:31">13</literal><operator pos:start="243:32" pos:end="243:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="247:13" pos:end="251:13"><if pos:start="247:13" pos:end="251:13">if <condition pos:start="247:16" pos:end="247:56">(<expr pos:start="247:17" pos:end="247:55"><name pos:start="247:17" pos:end="247:47"><name pos:start="247:17" pos:end="247:17">s</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:30">sec_vectors</name><index pos:start="247:31" pos:end="247:47">[<expr pos:start="247:32" pos:end="247:46"><name pos:start="247:32" pos:end="247:46">ARMV7M_EXCP_SVC</name></expr>]</index></name><operator pos:start="247:48" pos:end="247:48">.</operator><name pos:start="247:49" pos:end="247:55">pending</name></expr>)</condition> <block pos:start="247:58" pos:end="251:13">{<block_content pos:start="249:17" pos:end="249:33">

                <expr_stmt pos:start="249:17" pos:end="249:33"><expr pos:start="249:17" pos:end="249:32"><name pos:start="249:17" pos:end="249:19">val</name> <operator pos:start="249:21" pos:end="249:22">|=</operator> <operator pos:start="249:24" pos:end="249:24">(</operator><literal type="number" pos:start="249:25" pos:end="249:25">1</literal> <operator pos:start="249:27" pos:end="249:28">&lt;&lt;</operator> <literal type="number" pos:start="249:30" pos:end="249:31">15</literal><operator pos:start="249:32" pos:end="249:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="253:13" pos:end="257:13"><if pos:start="253:13" pos:end="257:13">if <condition pos:start="253:16" pos:end="253:56">(<expr pos:start="253:17" pos:end="253:55"><name pos:start="253:17" pos:end="253:47"><name pos:start="253:17" pos:end="253:17">s</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:30">sec_vectors</name><index pos:start="253:31" pos:end="253:47">[<expr pos:start="253:32" pos:end="253:46"><name pos:start="253:32" pos:end="253:46">ARMV7M_EXCP_MEM</name></expr>]</index></name><operator pos:start="253:48" pos:end="253:48">.</operator><name pos:start="253:49" pos:end="253:55">enabled</name></expr>)</condition> <block pos:start="253:58" pos:end="257:13">{<block_content pos:start="255:17" pos:end="255:33">

                <expr_stmt pos:start="255:17" pos:end="255:33"><expr pos:start="255:17" pos:end="255:32"><name pos:start="255:17" pos:end="255:19">val</name> <operator pos:start="255:21" pos:end="255:22">|=</operator> <operator pos:start="255:24" pos:end="255:24">(</operator><literal type="number" pos:start="255:25" pos:end="255:25">1</literal> <operator pos:start="255:27" pos:end="255:28">&lt;&lt;</operator> <literal type="number" pos:start="255:30" pos:end="255:31">16</literal><operator pos:start="255:32" pos:end="255:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="259:13" pos:end="263:13"><if pos:start="259:13" pos:end="263:13">if <condition pos:start="259:16" pos:end="259:58">(<expr pos:start="259:17" pos:end="259:57"><name pos:start="259:17" pos:end="259:49"><name pos:start="259:17" pos:end="259:17">s</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:30">sec_vectors</name><index pos:start="259:31" pos:end="259:49">[<expr pos:start="259:32" pos:end="259:48"><name pos:start="259:32" pos:end="259:48">ARMV7M_EXCP_USAGE</name></expr>]</index></name><operator pos:start="259:50" pos:end="259:50">.</operator><name pos:start="259:51" pos:end="259:57">enabled</name></expr>)</condition> <block pos:start="259:60" pos:end="263:13">{<block_content pos:start="261:17" pos:end="261:33">

                <expr_stmt pos:start="261:17" pos:end="261:33"><expr pos:start="261:17" pos:end="261:32"><name pos:start="261:17" pos:end="261:19">val</name> <operator pos:start="261:21" pos:end="261:22">|=</operator> <operator pos:start="261:24" pos:end="261:24">(</operator><literal type="number" pos:start="261:25" pos:end="261:25">1</literal> <operator pos:start="261:27" pos:end="261:28">&lt;&lt;</operator> <literal type="number" pos:start="261:30" pos:end="261:31">18</literal><operator pos:start="261:32" pos:end="261:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="265:13" pos:end="269:13"><if pos:start="265:13" pos:end="269:13">if <condition pos:start="265:16" pos:end="265:57">(<expr pos:start="265:17" pos:end="265:56"><name pos:start="265:17" pos:end="265:48"><name pos:start="265:17" pos:end="265:17">s</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:30">sec_vectors</name><index pos:start="265:31" pos:end="265:48">[<expr pos:start="265:32" pos:end="265:47"><name pos:start="265:32" pos:end="265:47">ARMV7M_EXCP_HARD</name></expr>]</index></name><operator pos:start="265:49" pos:end="265:49">.</operator><name pos:start="265:50" pos:end="265:56">pending</name></expr>)</condition> <block pos:start="265:59" pos:end="269:13">{<block_content pos:start="267:17" pos:end="267:33">

                <expr_stmt pos:start="267:17" pos:end="267:33"><expr pos:start="267:17" pos:end="267:32"><name pos:start="267:17" pos:end="267:19">val</name> <operator pos:start="267:21" pos:end="267:22">|=</operator> <operator pos:start="267:24" pos:end="267:24">(</operator><literal type="number" pos:start="267:25" pos:end="267:25">1</literal> <operator pos:start="267:27" pos:end="267:28">&lt;&lt;</operator> <literal type="number" pos:start="267:30" pos:end="267:31">21</literal><operator pos:start="267:32" pos:end="267:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="271:13" pos:end="271:70">/* SecureFault is not banked but is always RAZ/WI to NS */</comment>

            <if_stmt pos:start="273:13" pos:end="277:13"><if pos:start="273:13" pos:end="277:13">if <condition pos:start="273:16" pos:end="273:54">(<expr pos:start="273:17" pos:end="273:53"><name pos:start="273:17" pos:end="273:46"><name pos:start="273:17" pos:end="273:17">s</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:26">vectors</name><index pos:start="273:27" pos:end="273:46">[<expr pos:start="273:28" pos:end="273:45"><name pos:start="273:28" pos:end="273:45">ARMV7M_EXCP_SECURE</name></expr>]</index></name><operator pos:start="273:47" pos:end="273:47">.</operator><name pos:start="273:48" pos:end="273:53">active</name></expr>)</condition> <block pos:start="273:56" pos:end="277:13">{<block_content pos:start="275:17" pos:end="275:32">

                <expr_stmt pos:start="275:17" pos:end="275:32"><expr pos:start="275:17" pos:end="275:31"><name pos:start="275:17" pos:end="275:19">val</name> <operator pos:start="275:21" pos:end="275:22">|=</operator> <operator pos:start="275:24" pos:end="275:24">(</operator><literal type="number" pos:start="275:25" pos:end="275:25">1</literal> <operator pos:start="275:27" pos:end="275:28">&lt;&lt;</operator> <literal type="number" pos:start="275:30" pos:end="275:30">4</literal><operator pos:start="275:31" pos:end="275:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="279:13" pos:end="283:13"><if pos:start="279:13" pos:end="283:13">if <condition pos:start="279:16" pos:end="279:55">(<expr pos:start="279:17" pos:end="279:54"><name pos:start="279:17" pos:end="279:46"><name pos:start="279:17" pos:end="279:17">s</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:26">vectors</name><index pos:start="279:27" pos:end="279:46">[<expr pos:start="279:28" pos:end="279:45"><name pos:start="279:28" pos:end="279:45">ARMV7M_EXCP_SECURE</name></expr>]</index></name><operator pos:start="279:47" pos:end="279:47">.</operator><name pos:start="279:48" pos:end="279:54">enabled</name></expr>)</condition> <block pos:start="279:57" pos:end="283:13">{<block_content pos:start="281:17" pos:end="281:33">

                <expr_stmt pos:start="281:17" pos:end="281:33"><expr pos:start="281:17" pos:end="281:32"><name pos:start="281:17" pos:end="281:19">val</name> <operator pos:start="281:21" pos:end="281:22">|=</operator> <operator pos:start="281:24" pos:end="281:24">(</operator><literal type="number" pos:start="281:25" pos:end="281:25">1</literal> <operator pos:start="281:27" pos:end="281:28">&lt;&lt;</operator> <literal type="number" pos:start="281:30" pos:end="281:31">19</literal><operator pos:start="281:32" pos:end="281:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="285:13" pos:end="289:13"><if pos:start="285:13" pos:end="289:13">if <condition pos:start="285:16" pos:end="285:55">(<expr pos:start="285:17" pos:end="285:54"><name pos:start="285:17" pos:end="285:46"><name pos:start="285:17" pos:end="285:17">s</name><operator pos:start="285:18" pos:end="285:19">-&gt;</operator><name pos:start="285:20" pos:end="285:26">vectors</name><index pos:start="285:27" pos:end="285:46">[<expr pos:start="285:28" pos:end="285:45"><name pos:start="285:28" pos:end="285:45">ARMV7M_EXCP_SECURE</name></expr>]</index></name><operator pos:start="285:47" pos:end="285:47">.</operator><name pos:start="285:48" pos:end="285:54">pending</name></expr>)</condition> <block pos:start="285:57" pos:end="289:13">{<block_content pos:start="287:17" pos:end="287:33">

                <expr_stmt pos:start="287:17" pos:end="287:33"><expr pos:start="287:17" pos:end="287:32"><name pos:start="287:17" pos:end="287:19">val</name> <operator pos:start="287:21" pos:end="287:22">|=</operator> <operator pos:start="287:24" pos:end="287:24">(</operator><literal type="number" pos:start="287:25" pos:end="287:25">1</literal> <operator pos:start="287:27" pos:end="287:28">&lt;&lt;</operator> <literal type="number" pos:start="287:30" pos:end="287:31">20</literal><operator pos:start="287:32" pos:end="287:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="291:11" pos:end="371:9">else <block pos:start="291:16" pos:end="371:9">{<block_content pos:start="293:13" pos:end="369:13">

            <if_stmt pos:start="293:13" pos:end="297:13"><if pos:start="293:13" pos:end="297:13">if <condition pos:start="293:16" pos:end="293:51">(<expr pos:start="293:17" pos:end="293:50"><name pos:start="293:17" pos:end="293:43"><name pos:start="293:17" pos:end="293:17">s</name><operator pos:start="293:18" pos:end="293:19">-&gt;</operator><name pos:start="293:20" pos:end="293:26">vectors</name><index pos:start="293:27" pos:end="293:43">[<expr pos:start="293:28" pos:end="293:42"><name pos:start="293:28" pos:end="293:42">ARMV7M_EXCP_MEM</name></expr>]</index></name><operator pos:start="293:44" pos:end="293:44">.</operator><name pos:start="293:45" pos:end="293:50">active</name></expr>)</condition> <block pos:start="293:53" pos:end="297:13">{<block_content pos:start="295:17" pos:end="295:32">

                <expr_stmt pos:start="295:17" pos:end="295:32"><expr pos:start="295:17" pos:end="295:31"><name pos:start="295:17" pos:end="295:19">val</name> <operator pos:start="295:21" pos:end="295:22">|=</operator> <operator pos:start="295:24" pos:end="295:24">(</operator><literal type="number" pos:start="295:25" pos:end="295:25">1</literal> <operator pos:start="295:27" pos:end="295:28">&lt;&lt;</operator> <literal type="number" pos:start="295:30" pos:end="295:30">0</literal><operator pos:start="295:31" pos:end="295:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="299:13" pos:end="315:13"><if pos:start="299:13" pos:end="315:13">if <condition pos:start="299:16" pos:end="299:55">(<expr pos:start="299:17" pos:end="299:54"><call pos:start="299:17" pos:end="299:54"><name pos:start="299:17" pos:end="299:27">arm_feature</name><argument_list pos:start="299:28" pos:end="299:54">(<argument pos:start="299:29" pos:end="299:37"><expr pos:start="299:29" pos:end="299:37"><operator pos:start="299:29" pos:end="299:29">&amp;</operator><name pos:start="299:30" pos:end="299:37"><name pos:start="299:30" pos:end="299:32">cpu</name><operator pos:start="299:33" pos:end="299:34">-&gt;</operator><name pos:start="299:35" pos:end="299:37">env</name></name></expr></argument>, <argument pos:start="299:40" pos:end="299:53"><expr pos:start="299:40" pos:end="299:53"><name pos:start="299:40" pos:end="299:53">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="299:57" pos:end="315:13">{<block_content pos:start="303:17" pos:end="313:17">

                <comment type="block" pos:start="301:17" pos:end="301:70">/* HARDFAULTACT, HARDFAULTPENDED not present in v7M */</comment>

                <if_stmt pos:start="303:17" pos:end="307:17"><if pos:start="303:17" pos:end="307:17">if <condition pos:start="303:20" pos:end="303:56">(<expr pos:start="303:21" pos:end="303:55"><name pos:start="303:21" pos:end="303:48"><name pos:start="303:21" pos:end="303:21">s</name><operator pos:start="303:22" pos:end="303:23">-&gt;</operator><name pos:start="303:24" pos:end="303:30">vectors</name><index pos:start="303:31" pos:end="303:48">[<expr pos:start="303:32" pos:end="303:47"><name pos:start="303:32" pos:end="303:47">ARMV7M_EXCP_HARD</name></expr>]</index></name><operator pos:start="303:49" pos:end="303:49">.</operator><name pos:start="303:50" pos:end="303:55">active</name></expr>)</condition> <block pos:start="303:58" pos:end="307:17">{<block_content pos:start="305:21" pos:end="305:36">

                    <expr_stmt pos:start="305:21" pos:end="305:36"><expr pos:start="305:21" pos:end="305:35"><name pos:start="305:21" pos:end="305:23">val</name> <operator pos:start="305:25" pos:end="305:26">|=</operator> <operator pos:start="305:28" pos:end="305:28">(</operator><literal type="number" pos:start="305:29" pos:end="305:29">1</literal> <operator pos:start="305:31" pos:end="305:32">&lt;&lt;</operator> <literal type="number" pos:start="305:34" pos:end="305:34">2</literal><operator pos:start="305:35" pos:end="305:35">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="309:17" pos:end="313:17"><if pos:start="309:17" pos:end="313:17">if <condition pos:start="309:20" pos:end="309:57">(<expr pos:start="309:21" pos:end="309:56"><name pos:start="309:21" pos:end="309:48"><name pos:start="309:21" pos:end="309:21">s</name><operator pos:start="309:22" pos:end="309:23">-&gt;</operator><name pos:start="309:24" pos:end="309:30">vectors</name><index pos:start="309:31" pos:end="309:48">[<expr pos:start="309:32" pos:end="309:47"><name pos:start="309:32" pos:end="309:47">ARMV7M_EXCP_HARD</name></expr>]</index></name><operator pos:start="309:49" pos:end="309:49">.</operator><name pos:start="309:50" pos:end="309:56">pending</name></expr>)</condition> <block pos:start="309:59" pos:end="313:17">{<block_content pos:start="311:21" pos:end="311:37">

                    <expr_stmt pos:start="311:21" pos:end="311:37"><expr pos:start="311:21" pos:end="311:36"><name pos:start="311:21" pos:end="311:23">val</name> <operator pos:start="311:25" pos:end="311:26">|=</operator> <operator pos:start="311:28" pos:end="311:28">(</operator><literal type="number" pos:start="311:29" pos:end="311:29">1</literal> <operator pos:start="311:31" pos:end="311:32">&lt;&lt;</operator> <literal type="number" pos:start="311:34" pos:end="311:35">21</literal><operator pos:start="311:36" pos:end="311:36">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="317:13" pos:end="321:13"><if pos:start="317:13" pos:end="321:13">if <condition pos:start="317:16" pos:end="317:53">(<expr pos:start="317:17" pos:end="317:52"><name pos:start="317:17" pos:end="317:45"><name pos:start="317:17" pos:end="317:17">s</name><operator pos:start="317:18" pos:end="317:19">-&gt;</operator><name pos:start="317:20" pos:end="317:26">vectors</name><index pos:start="317:27" pos:end="317:45">[<expr pos:start="317:28" pos:end="317:44"><name pos:start="317:28" pos:end="317:44">ARMV7M_EXCP_USAGE</name></expr>]</index></name><operator pos:start="317:46" pos:end="317:46">.</operator><name pos:start="317:47" pos:end="317:52">active</name></expr>)</condition> <block pos:start="317:55" pos:end="321:13">{<block_content pos:start="319:17" pos:end="319:32">

                <expr_stmt pos:start="319:17" pos:end="319:32"><expr pos:start="319:17" pos:end="319:31"><name pos:start="319:17" pos:end="319:19">val</name> <operator pos:start="319:21" pos:end="319:22">|=</operator> <operator pos:start="319:24" pos:end="319:24">(</operator><literal type="number" pos:start="319:25" pos:end="319:25">1</literal> <operator pos:start="319:27" pos:end="319:28">&lt;&lt;</operator> <literal type="number" pos:start="319:30" pos:end="319:30">3</literal><operator pos:start="319:31" pos:end="319:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="323:13" pos:end="327:13"><if pos:start="323:13" pos:end="327:13">if <condition pos:start="323:16" pos:end="323:51">(<expr pos:start="323:17" pos:end="323:50"><name pos:start="323:17" pos:end="323:43"><name pos:start="323:17" pos:end="323:17">s</name><operator pos:start="323:18" pos:end="323:19">-&gt;</operator><name pos:start="323:20" pos:end="323:26">vectors</name><index pos:start="323:27" pos:end="323:43">[<expr pos:start="323:28" pos:end="323:42"><name pos:start="323:28" pos:end="323:42">ARMV7M_EXCP_SVC</name></expr>]</index></name><operator pos:start="323:44" pos:end="323:44">.</operator><name pos:start="323:45" pos:end="323:50">active</name></expr>)</condition> <block pos:start="323:53" pos:end="327:13">{<block_content pos:start="325:17" pos:end="325:32">

                <expr_stmt pos:start="325:17" pos:end="325:32"><expr pos:start="325:17" pos:end="325:31"><name pos:start="325:17" pos:end="325:19">val</name> <operator pos:start="325:21" pos:end="325:22">|=</operator> <operator pos:start="325:24" pos:end="325:24">(</operator><literal type="number" pos:start="325:25" pos:end="325:25">1</literal> <operator pos:start="325:27" pos:end="325:28">&lt;&lt;</operator> <literal type="number" pos:start="325:30" pos:end="325:30">7</literal><operator pos:start="325:31" pos:end="325:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="329:13" pos:end="333:13"><if pos:start="329:13" pos:end="333:13">if <condition pos:start="329:16" pos:end="329:54">(<expr pos:start="329:17" pos:end="329:53"><name pos:start="329:17" pos:end="329:46"><name pos:start="329:17" pos:end="329:17">s</name><operator pos:start="329:18" pos:end="329:19">-&gt;</operator><name pos:start="329:20" pos:end="329:26">vectors</name><index pos:start="329:27" pos:end="329:46">[<expr pos:start="329:28" pos:end="329:45"><name pos:start="329:28" pos:end="329:45">ARMV7M_EXCP_PENDSV</name></expr>]</index></name><operator pos:start="329:47" pos:end="329:47">.</operator><name pos:start="329:48" pos:end="329:53">active</name></expr>)</condition> <block pos:start="329:56" pos:end="333:13">{<block_content pos:start="331:17" pos:end="331:33">

                <expr_stmt pos:start="331:17" pos:end="331:33"><expr pos:start="331:17" pos:end="331:32"><name pos:start="331:17" pos:end="331:19">val</name> <operator pos:start="331:21" pos:end="331:22">|=</operator> <operator pos:start="331:24" pos:end="331:24">(</operator><literal type="number" pos:start="331:25" pos:end="331:25">1</literal> <operator pos:start="331:27" pos:end="331:28">&lt;&lt;</operator> <literal type="number" pos:start="331:30" pos:end="331:31">10</literal><operator pos:start="331:32" pos:end="331:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="335:13" pos:end="339:13"><if pos:start="335:13" pos:end="339:13">if <condition pos:start="335:16" pos:end="335:55">(<expr pos:start="335:17" pos:end="335:54"><name pos:start="335:17" pos:end="335:47"><name pos:start="335:17" pos:end="335:17">s</name><operator pos:start="335:18" pos:end="335:19">-&gt;</operator><name pos:start="335:20" pos:end="335:26">vectors</name><index pos:start="335:27" pos:end="335:47">[<expr pos:start="335:28" pos:end="335:46"><name pos:start="335:28" pos:end="335:46">ARMV7M_EXCP_SYSTICK</name></expr>]</index></name><operator pos:start="335:48" pos:end="335:48">.</operator><name pos:start="335:49" pos:end="335:54">active</name></expr>)</condition> <block pos:start="335:57" pos:end="339:13">{<block_content pos:start="337:17" pos:end="337:33">

                <expr_stmt pos:start="337:17" pos:end="337:33"><expr pos:start="337:17" pos:end="337:32"><name pos:start="337:17" pos:end="337:19">val</name> <operator pos:start="337:21" pos:end="337:22">|=</operator> <operator pos:start="337:24" pos:end="337:24">(</operator><literal type="number" pos:start="337:25" pos:end="337:25">1</literal> <operator pos:start="337:27" pos:end="337:28">&lt;&lt;</operator> <literal type="number" pos:start="337:30" pos:end="337:31">11</literal><operator pos:start="337:32" pos:end="337:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="341:13" pos:end="345:13"><if pos:start="341:13" pos:end="345:13">if <condition pos:start="341:16" pos:end="341:54">(<expr pos:start="341:17" pos:end="341:53"><name pos:start="341:17" pos:end="341:45"><name pos:start="341:17" pos:end="341:17">s</name><operator pos:start="341:18" pos:end="341:19">-&gt;</operator><name pos:start="341:20" pos:end="341:26">vectors</name><index pos:start="341:27" pos:end="341:45">[<expr pos:start="341:28" pos:end="341:44"><name pos:start="341:28" pos:end="341:44">ARMV7M_EXCP_USAGE</name></expr>]</index></name><operator pos:start="341:46" pos:end="341:46">.</operator><name pos:start="341:47" pos:end="341:53">pending</name></expr>)</condition> <block pos:start="341:56" pos:end="345:13">{<block_content pos:start="343:17" pos:end="343:33">

                <expr_stmt pos:start="343:17" pos:end="343:33"><expr pos:start="343:17" pos:end="343:32"><name pos:start="343:17" pos:end="343:19">val</name> <operator pos:start="343:21" pos:end="343:22">|=</operator> <operator pos:start="343:24" pos:end="343:24">(</operator><literal type="number" pos:start="343:25" pos:end="343:25">1</literal> <operator pos:start="343:27" pos:end="343:28">&lt;&lt;</operator> <literal type="number" pos:start="343:30" pos:end="343:31">12</literal><operator pos:start="343:32" pos:end="343:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="347:13" pos:end="351:13"><if pos:start="347:13" pos:end="351:13">if <condition pos:start="347:16" pos:end="347:52">(<expr pos:start="347:17" pos:end="347:51"><name pos:start="347:17" pos:end="347:43"><name pos:start="347:17" pos:end="347:17">s</name><operator pos:start="347:18" pos:end="347:19">-&gt;</operator><name pos:start="347:20" pos:end="347:26">vectors</name><index pos:start="347:27" pos:end="347:43">[<expr pos:start="347:28" pos:end="347:42"><name pos:start="347:28" pos:end="347:42">ARMV7M_EXCP_MEM</name></expr>]</index></name><operator pos:start="347:44" pos:end="347:44">.</operator><name pos:start="347:45" pos:end="347:51">pending</name></expr>)</condition> <block pos:start="347:54" pos:end="351:13">{<block_content pos:start="349:17" pos:end="349:33">

                <expr_stmt pos:start="349:17" pos:end="349:33"><expr pos:start="349:17" pos:end="349:32"><name pos:start="349:17" pos:end="349:19">val</name> <operator pos:start="349:21" pos:end="349:22">|=</operator> <operator pos:start="349:24" pos:end="349:24">(</operator><literal type="number" pos:start="349:25" pos:end="349:25">1</literal> <operator pos:start="349:27" pos:end="349:28">&lt;&lt;</operator> <literal type="number" pos:start="349:30" pos:end="349:31">13</literal><operator pos:start="349:32" pos:end="349:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="353:13" pos:end="357:13"><if pos:start="353:13" pos:end="357:13">if <condition pos:start="353:16" pos:end="353:52">(<expr pos:start="353:17" pos:end="353:51"><name pos:start="353:17" pos:end="353:43"><name pos:start="353:17" pos:end="353:17">s</name><operator pos:start="353:18" pos:end="353:19">-&gt;</operator><name pos:start="353:20" pos:end="353:26">vectors</name><index pos:start="353:27" pos:end="353:43">[<expr pos:start="353:28" pos:end="353:42"><name pos:start="353:28" pos:end="353:42">ARMV7M_EXCP_SVC</name></expr>]</index></name><operator pos:start="353:44" pos:end="353:44">.</operator><name pos:start="353:45" pos:end="353:51">pending</name></expr>)</condition> <block pos:start="353:54" pos:end="357:13">{<block_content pos:start="355:17" pos:end="355:33">

                <expr_stmt pos:start="355:17" pos:end="355:33"><expr pos:start="355:17" pos:end="355:32"><name pos:start="355:17" pos:end="355:19">val</name> <operator pos:start="355:21" pos:end="355:22">|=</operator> <operator pos:start="355:24" pos:end="355:24">(</operator><literal type="number" pos:start="355:25" pos:end="355:25">1</literal> <operator pos:start="355:27" pos:end="355:28">&lt;&lt;</operator> <literal type="number" pos:start="355:30" pos:end="355:31">15</literal><operator pos:start="355:32" pos:end="355:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="359:13" pos:end="363:13"><if pos:start="359:13" pos:end="363:13">if <condition pos:start="359:16" pos:end="359:52">(<expr pos:start="359:17" pos:end="359:51"><name pos:start="359:17" pos:end="359:43"><name pos:start="359:17" pos:end="359:17">s</name><operator pos:start="359:18" pos:end="359:19">-&gt;</operator><name pos:start="359:20" pos:end="359:26">vectors</name><index pos:start="359:27" pos:end="359:43">[<expr pos:start="359:28" pos:end="359:42"><name pos:start="359:28" pos:end="359:42">ARMV7M_EXCP_MEM</name></expr>]</index></name><operator pos:start="359:44" pos:end="359:44">.</operator><name pos:start="359:45" pos:end="359:51">enabled</name></expr>)</condition> <block pos:start="359:54" pos:end="363:13">{<block_content pos:start="361:17" pos:end="361:33">

                <expr_stmt pos:start="361:17" pos:end="361:33"><expr pos:start="361:17" pos:end="361:32"><name pos:start="361:17" pos:end="361:19">val</name> <operator pos:start="361:21" pos:end="361:22">|=</operator> <operator pos:start="361:24" pos:end="361:24">(</operator><literal type="number" pos:start="361:25" pos:end="361:25">1</literal> <operator pos:start="361:27" pos:end="361:28">&lt;&lt;</operator> <literal type="number" pos:start="361:30" pos:end="361:31">16</literal><operator pos:start="361:32" pos:end="361:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="365:13" pos:end="369:13"><if pos:start="365:13" pos:end="369:13">if <condition pos:start="365:16" pos:end="365:54">(<expr pos:start="365:17" pos:end="365:53"><name pos:start="365:17" pos:end="365:45"><name pos:start="365:17" pos:end="365:17">s</name><operator pos:start="365:18" pos:end="365:19">-&gt;</operator><name pos:start="365:20" pos:end="365:26">vectors</name><index pos:start="365:27" pos:end="365:45">[<expr pos:start="365:28" pos:end="365:44"><name pos:start="365:28" pos:end="365:44">ARMV7M_EXCP_USAGE</name></expr>]</index></name><operator pos:start="365:46" pos:end="365:46">.</operator><name pos:start="365:47" pos:end="365:53">enabled</name></expr>)</condition> <block pos:start="365:56" pos:end="369:13">{<block_content pos:start="367:17" pos:end="367:33">

                <expr_stmt pos:start="367:17" pos:end="367:33"><expr pos:start="367:17" pos:end="367:32"><name pos:start="367:17" pos:end="367:19">val</name> <operator pos:start="367:21" pos:end="367:22">|=</operator> <operator pos:start="367:24" pos:end="367:24">(</operator><literal type="number" pos:start="367:25" pos:end="367:25">1</literal> <operator pos:start="367:27" pos:end="367:28">&lt;&lt;</operator> <literal type="number" pos:start="367:30" pos:end="367:31">18</literal><operator pos:start="367:32" pos:end="367:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="373:9" pos:end="403:9"><if pos:start="373:9" pos:end="403:9">if <condition pos:start="373:12" pos:end="373:78">(<expr pos:start="373:13" pos:end="373:77"><name pos:start="373:13" pos:end="373:24"><name pos:start="373:13" pos:end="373:17">attrs</name><operator pos:start="373:18" pos:end="373:18">.</operator><name pos:start="373:19" pos:end="373:24">secure</name></name> <operator pos:start="373:26" pos:end="373:27">||</operator> <operator pos:start="373:29" pos:end="373:29">(</operator><name pos:start="373:30" pos:end="373:47"><name pos:start="373:30" pos:end="373:32">cpu</name><operator pos:start="373:33" pos:end="373:34">-&gt;</operator><name pos:start="373:35" pos:end="373:37">env</name><operator pos:start="373:38" pos:end="373:38">.</operator><name pos:start="373:39" pos:end="373:41">v7m</name><operator pos:start="373:42" pos:end="373:42">.</operator><name pos:start="373:43" pos:end="373:47">aircr</name></name> <operator pos:start="373:49" pos:end="373:49">&amp;</operator> <name pos:start="373:51" pos:end="373:76">R_V7M_AIRCR_BFHFNMINS_MASK</name><operator pos:start="373:77" pos:end="373:77">)</operator></expr>)</condition> <block pos:start="373:80" pos:end="403:9">{<block_content pos:start="375:13" pos:end="401:13">

            <if_stmt pos:start="375:13" pos:end="379:13"><if pos:start="375:13" pos:end="379:13">if <condition pos:start="375:16" pos:end="375:51">(<expr pos:start="375:17" pos:end="375:50"><name pos:start="375:17" pos:end="375:43"><name pos:start="375:17" pos:end="375:17">s</name><operator pos:start="375:18" pos:end="375:19">-&gt;</operator><name pos:start="375:20" pos:end="375:26">vectors</name><index pos:start="375:27" pos:end="375:43">[<expr pos:start="375:28" pos:end="375:42"><name pos:start="375:28" pos:end="375:42">ARMV7M_EXCP_BUS</name></expr>]</index></name><operator pos:start="375:44" pos:end="375:44">.</operator><name pos:start="375:45" pos:end="375:50">active</name></expr>)</condition> <block pos:start="375:53" pos:end="379:13">{<block_content pos:start="377:17" pos:end="377:32">

                <expr_stmt pos:start="377:17" pos:end="377:32"><expr pos:start="377:17" pos:end="377:31"><name pos:start="377:17" pos:end="377:19">val</name> <operator pos:start="377:21" pos:end="377:22">|=</operator> <operator pos:start="377:24" pos:end="377:24">(</operator><literal type="number" pos:start="377:25" pos:end="377:25">1</literal> <operator pos:start="377:27" pos:end="377:28">&lt;&lt;</operator> <literal type="number" pos:start="377:30" pos:end="377:30">1</literal><operator pos:start="377:31" pos:end="377:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="381:13" pos:end="385:13"><if pos:start="381:13" pos:end="385:13">if <condition pos:start="381:16" pos:end="381:52">(<expr pos:start="381:17" pos:end="381:51"><name pos:start="381:17" pos:end="381:43"><name pos:start="381:17" pos:end="381:17">s</name><operator pos:start="381:18" pos:end="381:19">-&gt;</operator><name pos:start="381:20" pos:end="381:26">vectors</name><index pos:start="381:27" pos:end="381:43">[<expr pos:start="381:28" pos:end="381:42"><name pos:start="381:28" pos:end="381:42">ARMV7M_EXCP_BUS</name></expr>]</index></name><operator pos:start="381:44" pos:end="381:44">.</operator><name pos:start="381:45" pos:end="381:51">pending</name></expr>)</condition> <block pos:start="381:54" pos:end="385:13">{<block_content pos:start="383:17" pos:end="383:33">

                <expr_stmt pos:start="383:17" pos:end="383:33"><expr pos:start="383:17" pos:end="383:32"><name pos:start="383:17" pos:end="383:19">val</name> <operator pos:start="383:21" pos:end="383:22">|=</operator> <operator pos:start="383:24" pos:end="383:24">(</operator><literal type="number" pos:start="383:25" pos:end="383:25">1</literal> <operator pos:start="383:27" pos:end="383:28">&lt;&lt;</operator> <literal type="number" pos:start="383:30" pos:end="383:31">14</literal><operator pos:start="383:32" pos:end="383:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="387:13" pos:end="391:13"><if pos:start="387:13" pos:end="391:13">if <condition pos:start="387:16" pos:end="387:52">(<expr pos:start="387:17" pos:end="387:51"><name pos:start="387:17" pos:end="387:43"><name pos:start="387:17" pos:end="387:17">s</name><operator pos:start="387:18" pos:end="387:19">-&gt;</operator><name pos:start="387:20" pos:end="387:26">vectors</name><index pos:start="387:27" pos:end="387:43">[<expr pos:start="387:28" pos:end="387:42"><name pos:start="387:28" pos:end="387:42">ARMV7M_EXCP_BUS</name></expr>]</index></name><operator pos:start="387:44" pos:end="387:44">.</operator><name pos:start="387:45" pos:end="387:51">enabled</name></expr>)</condition> <block pos:start="387:54" pos:end="391:13">{<block_content pos:start="389:17" pos:end="389:33">

                <expr_stmt pos:start="389:17" pos:end="389:33"><expr pos:start="389:17" pos:end="389:32"><name pos:start="389:17" pos:end="389:19">val</name> <operator pos:start="389:21" pos:end="389:22">|=</operator> <operator pos:start="389:24" pos:end="389:24">(</operator><literal type="number" pos:start="389:25" pos:end="389:25">1</literal> <operator pos:start="389:27" pos:end="389:28">&lt;&lt;</operator> <literal type="number" pos:start="389:30" pos:end="389:31">17</literal><operator pos:start="389:32" pos:end="389:32">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="393:13" pos:end="401:13"><if pos:start="393:13" pos:end="401:13">if <condition pos:start="393:16" pos:end="395:51">(<expr pos:start="393:17" pos:end="395:50"><call pos:start="393:17" pos:end="393:54"><name pos:start="393:17" pos:end="393:27">arm_feature</name><argument_list pos:start="393:28" pos:end="393:54">(<argument pos:start="393:29" pos:end="393:37"><expr pos:start="393:29" pos:end="393:37"><operator pos:start="393:29" pos:end="393:29">&amp;</operator><name pos:start="393:30" pos:end="393:37"><name pos:start="393:30" pos:end="393:32">cpu</name><operator pos:start="393:33" pos:end="393:34">-&gt;</operator><name pos:start="393:35" pos:end="393:37">env</name></name></expr></argument>, <argument pos:start="393:40" pos:end="393:53"><expr pos:start="393:40" pos:end="393:53"><name pos:start="393:40" pos:end="393:53">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call> <operator pos:start="393:56" pos:end="393:57">&amp;&amp;</operator>

                <name pos:start="395:17" pos:end="395:43"><name pos:start="395:17" pos:end="395:17">s</name><operator pos:start="395:18" pos:end="395:19">-&gt;</operator><name pos:start="395:20" pos:end="395:26">vectors</name><index pos:start="395:27" pos:end="395:43">[<expr pos:start="395:28" pos:end="395:42"><name pos:start="395:28" pos:end="395:42">ARMV7M_EXCP_NMI</name></expr>]</index></name><operator pos:start="395:44" pos:end="395:44">.</operator><name pos:start="395:45" pos:end="395:50">active</name></expr>)</condition> <block pos:start="395:53" pos:end="401:13">{<block_content pos:start="399:17" pos:end="399:32">

                <comment type="block" pos:start="397:17" pos:end="397:50">/* NMIACT is not present in v7M */</comment>

                <expr_stmt pos:start="399:17" pos:end="399:32"><expr pos:start="399:17" pos:end="399:31"><name pos:start="399:17" pos:end="399:19">val</name> <operator pos:start="399:21" pos:end="399:22">|=</operator> <operator pos:start="399:24" pos:end="399:24">(</operator><literal type="number" pos:start="399:25" pos:end="399:25">1</literal> <operator pos:start="399:27" pos:end="399:28">&lt;&lt;</operator> <literal type="number" pos:start="399:30" pos:end="399:30">5</literal><operator pos:start="399:31" pos:end="399:31">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="407:9" pos:end="407:63">/* TODO: this is RAZ/WI from NS if DEMCR.SDME is set */</comment>

        <if_stmt pos:start="409:9" pos:end="413:9"><if pos:start="409:9" pos:end="413:9">if <condition pos:start="409:12" pos:end="409:49">(<expr pos:start="409:13" pos:end="409:48"><name pos:start="409:13" pos:end="409:41"><name pos:start="409:13" pos:end="409:13">s</name><operator pos:start="409:14" pos:end="409:15">-&gt;</operator><name pos:start="409:16" pos:end="409:22">vectors</name><index pos:start="409:23" pos:end="409:41">[<expr pos:start="409:24" pos:end="409:40"><name pos:start="409:24" pos:end="409:40">ARMV7M_EXCP_DEBUG</name></expr>]</index></name><operator pos:start="409:42" pos:end="409:42">.</operator><name pos:start="409:43" pos:end="409:48">active</name></expr>)</condition> <block pos:start="409:51" pos:end="413:9">{<block_content pos:start="411:13" pos:end="411:28">

            <expr_stmt pos:start="411:13" pos:end="411:28"><expr pos:start="411:13" pos:end="411:27"><name pos:start="411:13" pos:end="411:15">val</name> <operator pos:start="411:17" pos:end="411:18">|=</operator> <operator pos:start="411:20" pos:end="411:20">(</operator><literal type="number" pos:start="411:21" pos:end="411:21">1</literal> <operator pos:start="411:23" pos:end="411:24">&lt;&lt;</operator> <literal type="number" pos:start="411:26" pos:end="411:26">8</literal><operator pos:start="411:27" pos:end="411:27">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="415:9" pos:end="415:19">return <expr pos:start="415:16" pos:end="415:18"><name pos:start="415:16" pos:end="415:18">val</name></expr>;</return>

    <case pos:start="417:5" pos:end="417:15">case <expr pos:start="417:10" pos:end="417:14"><literal type="number" pos:start="417:10" pos:end="417:14">0xd28</literal></expr>:</case> <comment type="block" pos:start="417:17" pos:end="417:49">/* Configurable Fault Status.  */</comment>

        <comment type="block" pos:start="419:9" pos:end="423:11">/* The BFSR bits [15:8] are shared between security states

         * and we store them in the NS copy

         */</comment>

        <expr_stmt pos:start="425:9" pos:end="425:46"><expr pos:start="425:9" pos:end="425:45"><name pos:start="425:9" pos:end="425:11">val</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <name pos:start="425:15" pos:end="425:45"><name pos:start="425:15" pos:end="425:17">cpu</name><operator pos:start="425:18" pos:end="425:19">-&gt;</operator><name pos:start="425:20" pos:end="425:22">env</name><operator pos:start="425:23" pos:end="425:23">.</operator><name pos:start="425:24" pos:end="425:26">v7m</name><operator pos:start="425:27" pos:end="425:27">.</operator><name pos:start="425:28" pos:end="425:31">cfsr</name><index pos:start="425:32" pos:end="425:45">[<expr pos:start="425:33" pos:end="425:44"><name pos:start="425:33" pos:end="425:44"><name pos:start="425:33" pos:end="425:37">attrs</name><operator pos:start="425:38" pos:end="425:38">.</operator><name pos:start="425:39" pos:end="425:44">secure</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:66"><expr pos:start="427:9" pos:end="427:65"><name pos:start="427:9" pos:end="427:11">val</name> <operator pos:start="427:13" pos:end="427:14">|=</operator> <name pos:start="427:16" pos:end="427:42"><name pos:start="427:16" pos:end="427:18">cpu</name><operator pos:start="427:19" pos:end="427:20">-&gt;</operator><name pos:start="427:21" pos:end="427:23">env</name><operator pos:start="427:24" pos:end="427:24">.</operator><name pos:start="427:25" pos:end="427:27">v7m</name><operator pos:start="427:28" pos:end="427:28">.</operator><name pos:start="427:29" pos:end="427:32">cfsr</name><index pos:start="427:33" pos:end="427:42">[<expr pos:start="427:34" pos:end="427:41"><name pos:start="427:34" pos:end="427:41">M_REG_NS</name></expr>]</index></name> <operator pos:start="427:44" pos:end="427:44">&amp;</operator> <name pos:start="427:46" pos:end="427:65">R_V7M_CFSR_BFSR_MASK</name></expr>;</expr_stmt>

        <return pos:start="429:9" pos:end="429:19">return <expr pos:start="429:16" pos:end="429:18"><name pos:start="429:16" pos:end="429:18">val</name></expr>;</return>

    <case pos:start="431:5" pos:end="431:15">case <expr pos:start="431:10" pos:end="431:14"><literal type="number" pos:start="431:10" pos:end="431:14">0xd2c</literal></expr>:</case> <comment type="block" pos:start="431:17" pos:end="431:41">/* Hard Fault Status.  */</comment>

        <return pos:start="433:9" pos:end="433:33">return <expr pos:start="433:16" pos:end="433:32"><name pos:start="433:16" pos:end="433:32"><name pos:start="433:16" pos:end="433:18">cpu</name><operator pos:start="433:19" pos:end="433:20">-&gt;</operator><name pos:start="433:21" pos:end="433:23">env</name><operator pos:start="433:24" pos:end="433:24">.</operator><name pos:start="433:25" pos:end="433:27">v7m</name><operator pos:start="433:28" pos:end="433:28">.</operator><name pos:start="433:29" pos:end="433:32">hfsr</name></name></expr>;</return>

    <case pos:start="435:5" pos:end="435:15">case <expr pos:start="435:10" pos:end="435:14"><literal type="number" pos:start="435:10" pos:end="435:14">0xd30</literal></expr>:</case> <comment type="block" pos:start="435:17" pos:end="435:42">/* Debug Fault Status.  */</comment>

        <return pos:start="437:9" pos:end="437:33">return <expr pos:start="437:16" pos:end="437:32"><name pos:start="437:16" pos:end="437:32"><name pos:start="437:16" pos:end="437:18">cpu</name><operator pos:start="437:19" pos:end="437:20">-&gt;</operator><name pos:start="437:21" pos:end="437:23">env</name><operator pos:start="437:24" pos:end="437:24">.</operator><name pos:start="437:25" pos:end="437:27">v7m</name><operator pos:start="437:28" pos:end="437:28">.</operator><name pos:start="437:29" pos:end="437:32">dfsr</name></name></expr>;</return>

    <case pos:start="439:5" pos:end="439:15">case <expr pos:start="439:10" pos:end="439:14"><literal type="number" pos:start="439:10" pos:end="439:14">0xd34</literal></expr>:</case> <comment type="block" pos:start="439:17" pos:end="439:51">/* MMFAR MemManage Fault Address */</comment>

        <return pos:start="441:9" pos:end="441:48">return <expr pos:start="441:16" pos:end="441:47"><name pos:start="441:16" pos:end="441:47"><name pos:start="441:16" pos:end="441:18">cpu</name><operator pos:start="441:19" pos:end="441:20">-&gt;</operator><name pos:start="441:21" pos:end="441:23">env</name><operator pos:start="441:24" pos:end="441:24">.</operator><name pos:start="441:25" pos:end="441:27">v7m</name><operator pos:start="441:28" pos:end="441:28">.</operator><name pos:start="441:29" pos:end="441:33">mmfar</name><index pos:start="441:34" pos:end="441:47">[<expr pos:start="441:35" pos:end="441:46"><name pos:start="441:35" pos:end="441:46"><name pos:start="441:35" pos:end="441:39">attrs</name><operator pos:start="441:40" pos:end="441:40">.</operator><name pos:start="441:41" pos:end="441:46">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="443:5" pos:end="443:15">case <expr pos:start="443:10" pos:end="443:14"><literal type="number" pos:start="443:10" pos:end="443:14">0xd38</literal></expr>:</case> <comment type="block" pos:start="443:17" pos:end="443:41">/* Bus Fault Address.  */</comment>

        <return pos:start="445:9" pos:end="445:33">return <expr pos:start="445:16" pos:end="445:32"><name pos:start="445:16" pos:end="445:32"><name pos:start="445:16" pos:end="445:18">cpu</name><operator pos:start="445:19" pos:end="445:20">-&gt;</operator><name pos:start="445:21" pos:end="445:23">env</name><operator pos:start="445:24" pos:end="445:24">.</operator><name pos:start="445:25" pos:end="445:27">v7m</name><operator pos:start="445:28" pos:end="445:28">.</operator><name pos:start="445:29" pos:end="445:32">bfar</name></name></expr>;</return>

    <case pos:start="447:5" pos:end="447:15">case <expr pos:start="447:10" pos:end="447:14"><literal type="number" pos:start="447:10" pos:end="447:14">0xd3c</literal></expr>:</case> <comment type="block" pos:start="447:17" pos:end="447:40">/* Aux Fault Status.  */</comment>

        <comment type="block" pos:start="449:9" pos:end="449:54">/* TODO: Implement fault status registers.  */</comment>

        <expr_stmt pos:start="451:9" pos:end="453:68"><expr pos:start="451:9" pos:end="453:67"><call pos:start="451:9" pos:end="453:67"><name pos:start="451:9" pos:end="451:21">qemu_log_mask</name><argument_list pos:start="451:22" pos:end="453:67">(<argument pos:start="451:23" pos:end="451:31"><expr pos:start="451:23" pos:end="451:31"><name pos:start="451:23" pos:end="451:31">LOG_UNIMP</name></expr></argument>,

                      <argument pos:start="453:23" pos:end="453:66"><expr pos:start="453:23" pos:end="453:66"><literal type="string" pos:start="453:23" pos:end="453:66">"Aux Fault status registers unimplemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="455:9" pos:end="455:17">return <expr pos:start="455:16" pos:end="455:16"><literal type="number" pos:start="455:16" pos:end="455:16">0</literal></expr>;</return>

    <case pos:start="457:5" pos:end="457:15">case <expr pos:start="457:10" pos:end="457:14"><literal type="number" pos:start="457:10" pos:end="457:14">0xd40</literal></expr>:</case> <comment type="block" pos:start="457:17" pos:end="457:28">/* PFR0.  */</comment>

        <return pos:start="459:9" pos:end="459:26">return <expr pos:start="459:16" pos:end="459:25"><literal type="number" pos:start="459:16" pos:end="459:25">0x00000030</literal></expr>;</return>

    <case pos:start="461:5" pos:end="461:15">case <expr pos:start="461:10" pos:end="461:14"><literal type="number" pos:start="461:10" pos:end="461:14">0xd44</literal></expr>:</case> <comment type="block" pos:start="461:17" pos:end="461:28">/* PRF1.  */</comment>

        <return pos:start="463:9" pos:end="463:26">return <expr pos:start="463:16" pos:end="463:25"><literal type="number" pos:start="463:16" pos:end="463:25">0x00000200</literal></expr>;</return>

    <case pos:start="465:5" pos:end="465:15">case <expr pos:start="465:10" pos:end="465:14"><literal type="number" pos:start="465:10" pos:end="465:14">0xd48</literal></expr>:</case> <comment type="block" pos:start="465:17" pos:end="465:28">/* DFR0.  */</comment>

        <return pos:start="467:9" pos:end="467:26">return <expr pos:start="467:16" pos:end="467:25"><literal type="number" pos:start="467:16" pos:end="467:25">0x00100000</literal></expr>;</return>

    <case pos:start="469:5" pos:end="469:15">case <expr pos:start="469:10" pos:end="469:14"><literal type="number" pos:start="469:10" pos:end="469:14">0xd4c</literal></expr>:</case> <comment type="block" pos:start="469:17" pos:end="469:28">/* AFR0.  */</comment>

        <return pos:start="471:9" pos:end="471:26">return <expr pos:start="471:16" pos:end="471:25"><literal type="number" pos:start="471:16" pos:end="471:25">0x00000000</literal></expr>;</return>

    <case pos:start="473:5" pos:end="473:15">case <expr pos:start="473:10" pos:end="473:14"><literal type="number" pos:start="473:10" pos:end="473:14">0xd50</literal></expr>:</case> <comment type="block" pos:start="473:17" pos:end="473:29">/* MMFR0.  */</comment>

        <return pos:start="475:9" pos:end="475:26">return <expr pos:start="475:16" pos:end="475:25"><literal type="number" pos:start="475:16" pos:end="475:25">0x00000030</literal></expr>;</return>

    <case pos:start="477:5" pos:end="477:15">case <expr pos:start="477:10" pos:end="477:14"><literal type="number" pos:start="477:10" pos:end="477:14">0xd54</literal></expr>:</case> <comment type="block" pos:start="477:17" pos:end="477:29">/* MMFR1.  */</comment>

        <return pos:start="479:9" pos:end="479:26">return <expr pos:start="479:16" pos:end="479:25"><literal type="number" pos:start="479:16" pos:end="479:25">0x00000000</literal></expr>;</return>

    <case pos:start="481:5" pos:end="481:15">case <expr pos:start="481:10" pos:end="481:14"><literal type="number" pos:start="481:10" pos:end="481:14">0xd58</literal></expr>:</case> <comment type="block" pos:start="481:17" pos:end="481:29">/* MMFR2.  */</comment>

        <return pos:start="483:9" pos:end="483:26">return <expr pos:start="483:16" pos:end="483:25"><literal type="number" pos:start="483:16" pos:end="483:25">0x00000000</literal></expr>;</return>

    <case pos:start="485:5" pos:end="485:15">case <expr pos:start="485:10" pos:end="485:14"><literal type="number" pos:start="485:10" pos:end="485:14">0xd5c</literal></expr>:</case> <comment type="block" pos:start="485:17" pos:end="485:29">/* MMFR3.  */</comment>

        <return pos:start="487:9" pos:end="487:26">return <expr pos:start="487:16" pos:end="487:25"><literal type="number" pos:start="487:16" pos:end="487:25">0x00000000</literal></expr>;</return>

    <case pos:start="489:5" pos:end="489:15">case <expr pos:start="489:10" pos:end="489:14"><literal type="number" pos:start="489:10" pos:end="489:14">0xd60</literal></expr>:</case> <comment type="block" pos:start="489:17" pos:end="489:29">/* ISAR0.  */</comment>

        <return pos:start="491:9" pos:end="491:26">return <expr pos:start="491:16" pos:end="491:25"><literal type="number" pos:start="491:16" pos:end="491:25">0x01141110</literal></expr>;</return>

    <case pos:start="493:5" pos:end="493:15">case <expr pos:start="493:10" pos:end="493:14"><literal type="number" pos:start="493:10" pos:end="493:14">0xd64</literal></expr>:</case> <comment type="block" pos:start="493:17" pos:end="493:29">/* ISAR1.  */</comment>

        <return pos:start="495:9" pos:end="495:26">return <expr pos:start="495:16" pos:end="495:25"><literal type="number" pos:start="495:16" pos:end="495:25">0x02111000</literal></expr>;</return>

    <case pos:start="497:5" pos:end="497:15">case <expr pos:start="497:10" pos:end="497:14"><literal type="number" pos:start="497:10" pos:end="497:14">0xd68</literal></expr>:</case> <comment type="block" pos:start="497:17" pos:end="497:29">/* ISAR2.  */</comment>

        <return pos:start="499:9" pos:end="499:26">return <expr pos:start="499:16" pos:end="499:25"><literal type="number" pos:start="499:16" pos:end="499:25">0x21112231</literal></expr>;</return>

    <case pos:start="501:5" pos:end="501:15">case <expr pos:start="501:10" pos:end="501:14"><literal type="number" pos:start="501:10" pos:end="501:14">0xd6c</literal></expr>:</case> <comment type="block" pos:start="501:17" pos:end="501:29">/* ISAR3.  */</comment>

        <return pos:start="503:9" pos:end="503:26">return <expr pos:start="503:16" pos:end="503:25"><literal type="number" pos:start="503:16" pos:end="503:25">0x01111110</literal></expr>;</return>

    <case pos:start="505:5" pos:end="505:15">case <expr pos:start="505:10" pos:end="505:14"><literal type="number" pos:start="505:10" pos:end="505:14">0xd70</literal></expr>:</case> <comment type="block" pos:start="505:17" pos:end="505:29">/* ISAR4.  */</comment>

        <return pos:start="507:9" pos:end="507:26">return <expr pos:start="507:16" pos:end="507:25"><literal type="number" pos:start="507:16" pos:end="507:25">0x01310102</literal></expr>;</return>

    <comment type="block" pos:start="509:5" pos:end="509:43">/* TODO: Implement debug registers.  */</comment>

    <case pos:start="511:5" pos:end="511:15">case <expr pos:start="511:10" pos:end="511:14"><literal type="number" pos:start="511:10" pos:end="511:14">0xd90</literal></expr>:</case> <comment type="block" pos:start="511:17" pos:end="511:30">/* MPU_TYPE */</comment>

        <comment type="block" pos:start="513:9" pos:end="513:71">/* Unified MPU; if the MPU is not present this value is zero */</comment>

        <return pos:start="515:9" pos:end="515:40">return <expr pos:start="515:16" pos:end="515:39"><name pos:start="515:16" pos:end="515:34"><name pos:start="515:16" pos:end="515:18">cpu</name><operator pos:start="515:19" pos:end="515:20">-&gt;</operator><name pos:start="515:21" pos:end="515:34">pmsav7_dregion</name></name> <operator pos:start="515:36" pos:end="515:37">&lt;&lt;</operator> <literal type="number" pos:start="515:39" pos:end="515:39">8</literal></expr>;</return>

        <break pos:start="517:9" pos:end="517:14">break;</break>

    <case pos:start="519:5" pos:end="519:15">case <expr pos:start="519:10" pos:end="519:14"><literal type="number" pos:start="519:10" pos:end="519:14">0xd94</literal></expr>:</case> <comment type="block" pos:start="519:17" pos:end="519:30">/* MPU_CTRL */</comment>

        <return pos:start="521:9" pos:end="521:51">return <expr pos:start="521:16" pos:end="521:50"><name pos:start="521:16" pos:end="521:50"><name pos:start="521:16" pos:end="521:18">cpu</name><operator pos:start="521:19" pos:end="521:20">-&gt;</operator><name pos:start="521:21" pos:end="521:23">env</name><operator pos:start="521:24" pos:end="521:24">.</operator><name pos:start="521:25" pos:end="521:27">v7m</name><operator pos:start="521:28" pos:end="521:28">.</operator><name pos:start="521:29" pos:end="521:36">mpu_ctrl</name><index pos:start="521:37" pos:end="521:50">[<expr pos:start="521:38" pos:end="521:49"><name pos:start="521:38" pos:end="521:49"><name pos:start="521:38" pos:end="521:42">attrs</name><operator pos:start="521:43" pos:end="521:43">.</operator><name pos:start="521:44" pos:end="521:49">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="523:5" pos:end="523:15">case <expr pos:start="523:10" pos:end="523:14"><literal type="number" pos:start="523:10" pos:end="523:14">0xd98</literal></expr>:</case> <comment type="block" pos:start="523:17" pos:end="523:29">/* MPU_RNR */</comment>

        <return pos:start="525:9" pos:end="525:49">return <expr pos:start="525:16" pos:end="525:48"><name pos:start="525:16" pos:end="525:48"><name pos:start="525:16" pos:end="525:18">cpu</name><operator pos:start="525:19" pos:end="525:20">-&gt;</operator><name pos:start="525:21" pos:end="525:23">env</name><operator pos:start="525:24" pos:end="525:24">.</operator><name pos:start="525:25" pos:end="525:30">pmsav7</name><operator pos:start="525:31" pos:end="525:31">.</operator><name pos:start="525:32" pos:end="525:34">rnr</name><index pos:start="525:35" pos:end="525:48">[<expr pos:start="525:36" pos:end="525:47"><name pos:start="525:36" pos:end="525:47"><name pos:start="525:36" pos:end="525:40">attrs</name><operator pos:start="525:41" pos:end="525:41">.</operator><name pos:start="525:42" pos:end="525:47">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="527:5" pos:end="527:15">case <expr pos:start="527:10" pos:end="527:14"><literal type="number" pos:start="527:10" pos:end="527:14">0xd9c</literal></expr>:</case> <comment type="block" pos:start="527:17" pos:end="527:30">/* MPU_RBAR */</comment>

    <case pos:start="529:5" pos:end="529:15">case <expr pos:start="529:10" pos:end="529:14"><literal type="number" pos:start="529:10" pos:end="529:14">0xda4</literal></expr>:</case> <comment type="block" pos:start="529:17" pos:end="529:33">/* MPU_RBAR_A1 */</comment>

    <case pos:start="531:5" pos:end="531:15">case <expr pos:start="531:10" pos:end="531:14"><literal type="number" pos:start="531:10" pos:end="531:14">0xdac</literal></expr>:</case> <comment type="block" pos:start="531:17" pos:end="531:33">/* MPU_RBAR_A2 */</comment>

    <case pos:start="533:5" pos:end="533:15">case <expr pos:start="533:10" pos:end="533:14"><literal type="number" pos:start="533:10" pos:end="533:14">0xdb4</literal></expr>:</case> <comment type="block" pos:start="533:17" pos:end="533:33">/* MPU_RBAR_A3 */</comment>

    <block pos:start="535:5" pos:end="581:5">{<block_content pos:start="537:9" pos:end="579:71">

        <decl_stmt pos:start="537:9" pos:end="537:55"><decl pos:start="537:9" pos:end="537:54"><type pos:start="537:9" pos:end="537:11"><name pos:start="537:9" pos:end="537:11">int</name></type> <name pos:start="537:13" pos:end="537:18">region</name> <init pos:start="537:20" pos:end="537:54">= <expr pos:start="537:22" pos:end="537:54"><name pos:start="537:22" pos:end="537:54"><name pos:start="537:22" pos:end="537:24">cpu</name><operator pos:start="537:25" pos:end="537:26">-&gt;</operator><name pos:start="537:27" pos:end="537:29">env</name><operator pos:start="537:30" pos:end="537:30">.</operator><name pos:start="537:31" pos:end="537:36">pmsav7</name><operator pos:start="537:37" pos:end="537:37">.</operator><name pos:start="537:38" pos:end="537:40">rnr</name><index pos:start="537:41" pos:end="537:54">[<expr pos:start="537:42" pos:end="537:53"><name pos:start="537:42" pos:end="537:53"><name pos:start="537:42" pos:end="537:46">attrs</name><operator pos:start="537:47" pos:end="537:47">.</operator><name pos:start="537:48" pos:end="537:53">secure</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="541:9" pos:end="569:9"><if pos:start="541:9" pos:end="569:9">if <condition pos:start="541:12" pos:end="541:51">(<expr pos:start="541:13" pos:end="541:50"><call pos:start="541:13" pos:end="541:50"><name pos:start="541:13" pos:end="541:23">arm_feature</name><argument_list pos:start="541:24" pos:end="541:50">(<argument pos:start="541:25" pos:end="541:33"><expr pos:start="541:25" pos:end="541:33"><operator pos:start="541:25" pos:end="541:25">&amp;</operator><name pos:start="541:26" pos:end="541:33"><name pos:start="541:26" pos:end="541:28">cpu</name><operator pos:start="541:29" pos:end="541:30">-&gt;</operator><name pos:start="541:31" pos:end="541:33">env</name></name></expr></argument>, <argument pos:start="541:36" pos:end="541:49"><expr pos:start="541:36" pos:end="541:49"><name pos:start="541:36" pos:end="541:49">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="541:53" pos:end="569:9">{<block_content pos:start="553:13" pos:end="567:62">

            <comment type="block" pos:start="543:13" pos:end="551:15">/* PMSAv8M handling of the aliases is different from v7M:

             * aliases A1, A2, A3 override the low two bits of the region

             * number in MPU_RNR, and there is no 'region' field in the

             * RBAR register.

             */</comment>

            <decl_stmt pos:start="553:13" pos:end="553:47"><decl pos:start="553:13" pos:end="553:46"><type pos:start="553:13" pos:end="553:15"><name pos:start="553:13" pos:end="553:15">int</name></type> <name pos:start="553:17" pos:end="553:23">aliasno</name> <init pos:start="553:25" pos:end="553:46">= <expr pos:start="553:27" pos:end="553:46"><operator pos:start="553:27" pos:end="553:27">(</operator><name pos:start="553:28" pos:end="553:33">offset</name> <operator pos:start="553:35" pos:end="553:35">-</operator> <literal type="number" pos:start="553:37" pos:end="553:41">0xd9c</literal><operator pos:start="553:42" pos:end="553:42">)</operator> <operator pos:start="553:44" pos:end="553:44">/</operator> <literal type="number" pos:start="553:46" pos:end="553:46">8</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="553:49" pos:end="553:58">/* 0..3 */</comment>

            <if_stmt pos:start="555:13" pos:end="559:13"><if pos:start="555:13" pos:end="559:13">if <condition pos:start="555:16" pos:end="555:24">(<expr pos:start="555:17" pos:end="555:23"><name pos:start="555:17" pos:end="555:23">aliasno</name></expr>)</condition> <block pos:start="555:26" pos:end="559:13">{<block_content pos:start="557:17" pos:end="557:58">

                <expr_stmt pos:start="557:17" pos:end="557:58"><expr pos:start="557:17" pos:end="557:57"><name pos:start="557:17" pos:end="557:22">region</name> <operator pos:start="557:24" pos:end="557:24">=</operator> <call pos:start="557:26" pos:end="557:57"><name pos:start="557:26" pos:end="557:34">deposit32</name><argument_list pos:start="557:35" pos:end="557:57">(<argument pos:start="557:36" pos:end="557:41"><expr pos:start="557:36" pos:end="557:41"><name pos:start="557:36" pos:end="557:41">region</name></expr></argument>, <argument pos:start="557:44" pos:end="557:44"><expr pos:start="557:44" pos:end="557:44"><literal type="number" pos:start="557:44" pos:end="557:44">0</literal></expr></argument>, <argument pos:start="557:47" pos:end="557:47"><expr pos:start="557:47" pos:end="557:47"><literal type="number" pos:start="557:47" pos:end="557:47">2</literal></expr></argument>, <argument pos:start="557:50" pos:end="557:56"><expr pos:start="557:50" pos:end="557:56"><name pos:start="557:50" pos:end="557:56">aliasno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="561:13" pos:end="565:13"><if pos:start="561:13" pos:end="565:13">if <condition pos:start="561:16" pos:end="561:46">(<expr pos:start="561:17" pos:end="561:45"><name pos:start="561:17" pos:end="561:22">region</name> <operator pos:start="561:24" pos:end="561:25">&gt;=</operator> <name pos:start="561:27" pos:end="561:45"><name pos:start="561:27" pos:end="561:29">cpu</name><operator pos:start="561:30" pos:end="561:31">-&gt;</operator><name pos:start="561:32" pos:end="561:45">pmsav7_dregion</name></name></expr>)</condition> <block pos:start="561:48" pos:end="565:13">{<block_content pos:start="563:17" pos:end="563:25">

                <return pos:start="563:17" pos:end="563:25">return <expr pos:start="563:24" pos:end="563:24"><literal type="number" pos:start="563:24" pos:end="563:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <return pos:start="567:13" pos:end="567:62">return <expr pos:start="567:20" pos:end="567:61"><name pos:start="567:20" pos:end="567:61"><name pos:start="567:20" pos:end="567:22">cpu</name><operator pos:start="567:23" pos:end="567:24">-&gt;</operator><name pos:start="567:25" pos:end="567:27">env</name><operator pos:start="567:28" pos:end="567:28">.</operator><name pos:start="567:29" pos:end="567:34">pmsav8</name><operator pos:start="567:35" pos:end="567:35">.</operator><name pos:start="567:36" pos:end="567:39">rbar</name><index pos:start="567:40" pos:end="567:53">[<expr pos:start="567:41" pos:end="567:52"><name pos:start="567:41" pos:end="567:52"><name pos:start="567:41" pos:end="567:45">attrs</name><operator pos:start="567:46" pos:end="567:46">.</operator><name pos:start="567:47" pos:end="567:52">secure</name></name></expr>]</index><index pos:start="567:54" pos:end="567:61">[<expr pos:start="567:55" pos:end="567:60"><name pos:start="567:55" pos:end="567:60">region</name></expr>]</index></name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="573:9" pos:end="577:9"><if pos:start="573:9" pos:end="577:9">if <condition pos:start="573:12" pos:end="573:42">(<expr pos:start="573:13" pos:end="573:41"><name pos:start="573:13" pos:end="573:18">region</name> <operator pos:start="573:20" pos:end="573:21">&gt;=</operator> <name pos:start="573:23" pos:end="573:41"><name pos:start="573:23" pos:end="573:25">cpu</name><operator pos:start="573:26" pos:end="573:27">-&gt;</operator><name pos:start="573:28" pos:end="573:41">pmsav7_dregion</name></name></expr>)</condition> <block pos:start="573:44" pos:end="577:9">{<block_content pos:start="575:13" pos:end="575:21">

            <return pos:start="575:13" pos:end="575:21">return <expr pos:start="575:20" pos:end="575:20"><literal type="number" pos:start="575:20" pos:end="575:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="579:9" pos:end="579:71">return <expr pos:start="579:16" pos:end="579:70"><operator pos:start="579:16" pos:end="579:16">(</operator><name pos:start="579:17" pos:end="579:45"><name pos:start="579:17" pos:end="579:19">cpu</name><operator pos:start="579:20" pos:end="579:21">-&gt;</operator><name pos:start="579:22" pos:end="579:24">env</name><operator pos:start="579:25" pos:end="579:25">.</operator><name pos:start="579:26" pos:end="579:31">pmsav7</name><operator pos:start="579:32" pos:end="579:32">.</operator><name pos:start="579:33" pos:end="579:37">drbar</name><index pos:start="579:38" pos:end="579:45">[<expr pos:start="579:39" pos:end="579:44"><name pos:start="579:39" pos:end="579:44">region</name></expr>]</index></name> <operator pos:start="579:47" pos:end="579:47">&amp;</operator> <literal type="number" pos:start="579:49" pos:end="579:52">0x1f</literal><operator pos:start="579:53" pos:end="579:53">)</operator> <operator pos:start="579:55" pos:end="579:55">|</operator> <operator pos:start="579:57" pos:end="579:57">(</operator><name pos:start="579:58" pos:end="579:63">region</name> <operator pos:start="579:65" pos:end="579:65">&amp;</operator> <literal type="number" pos:start="579:67" pos:end="579:69">0xf</literal><operator pos:start="579:70" pos:end="579:70">)</operator></expr>;</return>

    </block_content>}</block>

    <case pos:start="583:5" pos:end="583:15">case <expr pos:start="583:10" pos:end="583:14"><literal type="number" pos:start="583:10" pos:end="583:14">0xda0</literal></expr>:</case> <comment type="block" pos:start="583:17" pos:end="583:52">/* MPU_RASR (v7M), MPU_RLAR (v8M) */</comment>

    <case pos:start="585:5" pos:end="585:15">case <expr pos:start="585:10" pos:end="585:14"><literal type="number" pos:start="585:10" pos:end="585:14">0xda8</literal></expr>:</case> <comment type="block" pos:start="585:17" pos:end="585:58">/* MPU_RASR_A1 (v7M), MPU_RLAR_A1 (v8M) */</comment>

    <case pos:start="587:5" pos:end="587:15">case <expr pos:start="587:10" pos:end="587:14"><literal type="number" pos:start="587:10" pos:end="587:14">0xdb0</literal></expr>:</case> <comment type="block" pos:start="587:17" pos:end="587:58">/* MPU_RASR_A2 (v7M), MPU_RLAR_A2 (v8M) */</comment>

    <case pos:start="589:5" pos:end="589:15">case <expr pos:start="589:10" pos:end="589:14"><literal type="number" pos:start="589:10" pos:end="589:14">0xdb8</literal></expr>:</case> <comment type="block" pos:start="589:17" pos:end="589:58">/* MPU_RASR_A3 (v7M), MPU_RLAR_A3 (v8M) */</comment>

    <block pos:start="591:5" pos:end="637:5">{<block_content pos:start="593:9" pos:end="635:52">

        <decl_stmt pos:start="593:9" pos:end="593:55"><decl pos:start="593:9" pos:end="593:54"><type pos:start="593:9" pos:end="593:11"><name pos:start="593:9" pos:end="593:11">int</name></type> <name pos:start="593:13" pos:end="593:18">region</name> <init pos:start="593:20" pos:end="593:54">= <expr pos:start="593:22" pos:end="593:54"><name pos:start="593:22" pos:end="593:54"><name pos:start="593:22" pos:end="593:24">cpu</name><operator pos:start="593:25" pos:end="593:26">-&gt;</operator><name pos:start="593:27" pos:end="593:29">env</name><operator pos:start="593:30" pos:end="593:30">.</operator><name pos:start="593:31" pos:end="593:36">pmsav7</name><operator pos:start="593:37" pos:end="593:37">.</operator><name pos:start="593:38" pos:end="593:40">rnr</name><index pos:start="593:41" pos:end="593:54">[<expr pos:start="593:42" pos:end="593:53"><name pos:start="593:42" pos:end="593:53"><name pos:start="593:42" pos:end="593:46">attrs</name><operator pos:start="593:47" pos:end="593:47">.</operator><name pos:start="593:48" pos:end="593:53">secure</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="597:9" pos:end="623:9"><if pos:start="597:9" pos:end="623:9">if <condition pos:start="597:12" pos:end="597:51">(<expr pos:start="597:13" pos:end="597:50"><call pos:start="597:13" pos:end="597:50"><name pos:start="597:13" pos:end="597:23">arm_feature</name><argument_list pos:start="597:24" pos:end="597:50">(<argument pos:start="597:25" pos:end="597:33"><expr pos:start="597:25" pos:end="597:33"><operator pos:start="597:25" pos:end="597:25">&amp;</operator><name pos:start="597:26" pos:end="597:33"><name pos:start="597:26" pos:end="597:28">cpu</name><operator pos:start="597:29" pos:end="597:30">-&gt;</operator><name pos:start="597:31" pos:end="597:33">env</name></name></expr></argument>, <argument pos:start="597:36" pos:end="597:49"><expr pos:start="597:36" pos:end="597:49"><name pos:start="597:36" pos:end="597:49">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="597:53" pos:end="623:9">{<block_content pos:start="607:13" pos:end="621:62">

            <comment type="block" pos:start="599:13" pos:end="605:15">/* PMSAv8M handling of the aliases is different from v7M:

             * aliases A1, A2, A3 override the low two bits of the region

             * number in MPU_RNR.

             */</comment>

            <decl_stmt pos:start="607:13" pos:end="607:47"><decl pos:start="607:13" pos:end="607:46"><type pos:start="607:13" pos:end="607:15"><name pos:start="607:13" pos:end="607:15">int</name></type> <name pos:start="607:17" pos:end="607:23">aliasno</name> <init pos:start="607:25" pos:end="607:46">= <expr pos:start="607:27" pos:end="607:46"><operator pos:start="607:27" pos:end="607:27">(</operator><name pos:start="607:28" pos:end="607:33">offset</name> <operator pos:start="607:35" pos:end="607:35">-</operator> <literal type="number" pos:start="607:37" pos:end="607:41">0xda0</literal><operator pos:start="607:42" pos:end="607:42">)</operator> <operator pos:start="607:44" pos:end="607:44">/</operator> <literal type="number" pos:start="607:46" pos:end="607:46">8</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="607:49" pos:end="607:58">/* 0..3 */</comment>

            <if_stmt pos:start="609:13" pos:end="613:13"><if pos:start="609:13" pos:end="613:13">if <condition pos:start="609:16" pos:end="609:24">(<expr pos:start="609:17" pos:end="609:23"><name pos:start="609:17" pos:end="609:23">aliasno</name></expr>)</condition> <block pos:start="609:26" pos:end="613:13">{<block_content pos:start="611:17" pos:end="611:58">

                <expr_stmt pos:start="611:17" pos:end="611:58"><expr pos:start="611:17" pos:end="611:57"><name pos:start="611:17" pos:end="611:22">region</name> <operator pos:start="611:24" pos:end="611:24">=</operator> <call pos:start="611:26" pos:end="611:57"><name pos:start="611:26" pos:end="611:34">deposit32</name><argument_list pos:start="611:35" pos:end="611:57">(<argument pos:start="611:36" pos:end="611:41"><expr pos:start="611:36" pos:end="611:41"><name pos:start="611:36" pos:end="611:41">region</name></expr></argument>, <argument pos:start="611:44" pos:end="611:44"><expr pos:start="611:44" pos:end="611:44"><literal type="number" pos:start="611:44" pos:end="611:44">0</literal></expr></argument>, <argument pos:start="611:47" pos:end="611:47"><expr pos:start="611:47" pos:end="611:47"><literal type="number" pos:start="611:47" pos:end="611:47">2</literal></expr></argument>, <argument pos:start="611:50" pos:end="611:56"><expr pos:start="611:50" pos:end="611:56"><name pos:start="611:50" pos:end="611:56">aliasno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="615:13" pos:end="619:13"><if pos:start="615:13" pos:end="619:13">if <condition pos:start="615:16" pos:end="615:46">(<expr pos:start="615:17" pos:end="615:45"><name pos:start="615:17" pos:end="615:22">region</name> <operator pos:start="615:24" pos:end="615:25">&gt;=</operator> <name pos:start="615:27" pos:end="615:45"><name pos:start="615:27" pos:end="615:29">cpu</name><operator pos:start="615:30" pos:end="615:31">-&gt;</operator><name pos:start="615:32" pos:end="615:45">pmsav7_dregion</name></name></expr>)</condition> <block pos:start="615:48" pos:end="619:13">{<block_content pos:start="617:17" pos:end="617:25">

                <return pos:start="617:17" pos:end="617:25">return <expr pos:start="617:24" pos:end="617:24"><literal type="number" pos:start="617:24" pos:end="617:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <return pos:start="621:13" pos:end="621:62">return <expr pos:start="621:20" pos:end="621:61"><name pos:start="621:20" pos:end="621:61"><name pos:start="621:20" pos:end="621:22">cpu</name><operator pos:start="621:23" pos:end="621:24">-&gt;</operator><name pos:start="621:25" pos:end="621:27">env</name><operator pos:start="621:28" pos:end="621:28">.</operator><name pos:start="621:29" pos:end="621:34">pmsav8</name><operator pos:start="621:35" pos:end="621:35">.</operator><name pos:start="621:36" pos:end="621:39">rlar</name><index pos:start="621:40" pos:end="621:53">[<expr pos:start="621:41" pos:end="621:52"><name pos:start="621:41" pos:end="621:52"><name pos:start="621:41" pos:end="621:45">attrs</name><operator pos:start="621:46" pos:end="621:46">.</operator><name pos:start="621:47" pos:end="621:52">secure</name></name></expr>]</index><index pos:start="621:54" pos:end="621:61">[<expr pos:start="621:55" pos:end="621:60"><name pos:start="621:55" pos:end="621:60">region</name></expr>]</index></name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="627:9" pos:end="631:9"><if pos:start="627:9" pos:end="631:9">if <condition pos:start="627:12" pos:end="627:42">(<expr pos:start="627:13" pos:end="627:41"><name pos:start="627:13" pos:end="627:18">region</name> <operator pos:start="627:20" pos:end="627:21">&gt;=</operator> <name pos:start="627:23" pos:end="627:41"><name pos:start="627:23" pos:end="627:25">cpu</name><operator pos:start="627:26" pos:end="627:27">-&gt;</operator><name pos:start="627:28" pos:end="627:41">pmsav7_dregion</name></name></expr>)</condition> <block pos:start="627:44" pos:end="631:9">{<block_content pos:start="629:13" pos:end="629:21">

            <return pos:start="629:13" pos:end="629:21">return <expr pos:start="629:20" pos:end="629:20"><literal type="number" pos:start="629:20" pos:end="629:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="633:9" pos:end="635:52">return <expr pos:start="633:16" pos:end="635:51"><operator pos:start="633:16" pos:end="633:16">(</operator><operator pos:start="633:17" pos:end="633:17">(</operator><name pos:start="633:18" pos:end="633:46"><name pos:start="633:18" pos:end="633:20">cpu</name><operator pos:start="633:21" pos:end="633:22">-&gt;</operator><name pos:start="633:23" pos:end="633:25">env</name><operator pos:start="633:26" pos:end="633:26">.</operator><name pos:start="633:27" pos:end="633:32">pmsav7</name><operator pos:start="633:33" pos:end="633:33">.</operator><name pos:start="633:34" pos:end="633:38">dracr</name><index pos:start="633:39" pos:end="633:46">[<expr pos:start="633:40" pos:end="633:45"><name pos:start="633:40" pos:end="633:45">region</name></expr>]</index></name> <operator pos:start="633:48" pos:end="633:48">&amp;</operator> <literal type="number" pos:start="633:50" pos:end="633:55">0xffff</literal><operator pos:start="633:56" pos:end="633:56">)</operator> <operator pos:start="633:58" pos:end="633:59">&lt;&lt;</operator> <literal type="number" pos:start="633:61" pos:end="633:62">16</literal><operator pos:start="633:63" pos:end="633:63">)</operator> <operator pos:start="633:65" pos:end="633:65">|</operator>

            <operator pos:start="635:13" pos:end="635:13">(</operator><name pos:start="635:14" pos:end="635:41"><name pos:start="635:14" pos:end="635:16">cpu</name><operator pos:start="635:17" pos:end="635:18">-&gt;</operator><name pos:start="635:19" pos:end="635:21">env</name><operator pos:start="635:22" pos:end="635:22">.</operator><name pos:start="635:23" pos:end="635:28">pmsav7</name><operator pos:start="635:29" pos:end="635:29">.</operator><name pos:start="635:30" pos:end="635:33">drsr</name><index pos:start="635:34" pos:end="635:41">[<expr pos:start="635:35" pos:end="635:40"><name pos:start="635:35" pos:end="635:40">region</name></expr>]</index></name> <operator pos:start="635:43" pos:end="635:43">&amp;</operator> <literal type="number" pos:start="635:45" pos:end="635:50">0xffff</literal><operator pos:start="635:51" pos:end="635:51">)</operator></expr>;</return>

    </block_content>}</block>

    <case pos:start="639:5" pos:end="639:15">case <expr pos:start="639:10" pos:end="639:14"><literal type="number" pos:start="639:10" pos:end="639:14">0xdc0</literal></expr>:</case> <comment type="block" pos:start="639:17" pos:end="639:31">/* MPU_MAIR0 */</comment>

        <if_stmt pos:start="641:9" pos:end="645:9"><if pos:start="641:9" pos:end="645:9">if <condition pos:start="641:12" pos:end="641:52">(<expr pos:start="641:13" pos:end="641:51"><operator pos:start="641:13" pos:end="641:13">!</operator><call pos:start="641:14" pos:end="641:51"><name pos:start="641:14" pos:end="641:24">arm_feature</name><argument_list pos:start="641:25" pos:end="641:51">(<argument pos:start="641:26" pos:end="641:34"><expr pos:start="641:26" pos:end="641:34"><operator pos:start="641:26" pos:end="641:26">&amp;</operator><name pos:start="641:27" pos:end="641:34"><name pos:start="641:27" pos:end="641:29">cpu</name><operator pos:start="641:30" pos:end="641:31">-&gt;</operator><name pos:start="641:32" pos:end="641:34">env</name></name></expr></argument>, <argument pos:start="641:37" pos:end="641:50"><expr pos:start="641:37" pos:end="641:50"><name pos:start="641:37" pos:end="641:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="641:54" pos:end="645:9">{<block_content pos:start="643:13" pos:end="643:28">

            <goto pos:start="643:13" pos:end="643:28">goto <name pos:start="643:18" pos:end="643:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <return pos:start="647:9" pos:end="647:51">return <expr pos:start="647:16" pos:end="647:50"><name pos:start="647:16" pos:end="647:50"><name pos:start="647:16" pos:end="647:18">cpu</name><operator pos:start="647:19" pos:end="647:20">-&gt;</operator><name pos:start="647:21" pos:end="647:23">env</name><operator pos:start="647:24" pos:end="647:24">.</operator><name pos:start="647:25" pos:end="647:30">pmsav8</name><operator pos:start="647:31" pos:end="647:31">.</operator><name pos:start="647:32" pos:end="647:36">mair0</name><index pos:start="647:37" pos:end="647:50">[<expr pos:start="647:38" pos:end="647:49"><name pos:start="647:38" pos:end="647:49"><name pos:start="647:38" pos:end="647:42">attrs</name><operator pos:start="647:43" pos:end="647:43">.</operator><name pos:start="647:44" pos:end="647:49">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="649:5" pos:end="649:15">case <expr pos:start="649:10" pos:end="649:14"><literal type="number" pos:start="649:10" pos:end="649:14">0xdc4</literal></expr>:</case> <comment type="block" pos:start="649:17" pos:end="649:31">/* MPU_MAIR1 */</comment>

        <if_stmt pos:start="651:9" pos:end="655:9"><if pos:start="651:9" pos:end="655:9">if <condition pos:start="651:12" pos:end="651:52">(<expr pos:start="651:13" pos:end="651:51"><operator pos:start="651:13" pos:end="651:13">!</operator><call pos:start="651:14" pos:end="651:51"><name pos:start="651:14" pos:end="651:24">arm_feature</name><argument_list pos:start="651:25" pos:end="651:51">(<argument pos:start="651:26" pos:end="651:34"><expr pos:start="651:26" pos:end="651:34"><operator pos:start="651:26" pos:end="651:26">&amp;</operator><name pos:start="651:27" pos:end="651:34"><name pos:start="651:27" pos:end="651:29">cpu</name><operator pos:start="651:30" pos:end="651:31">-&gt;</operator><name pos:start="651:32" pos:end="651:34">env</name></name></expr></argument>, <argument pos:start="651:37" pos:end="651:50"><expr pos:start="651:37" pos:end="651:50"><name pos:start="651:37" pos:end="651:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="651:54" pos:end="655:9">{<block_content pos:start="653:13" pos:end="653:28">

            <goto pos:start="653:13" pos:end="653:28">goto <name pos:start="653:18" pos:end="653:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <return pos:start="657:9" pos:end="657:51">return <expr pos:start="657:16" pos:end="657:50"><name pos:start="657:16" pos:end="657:50"><name pos:start="657:16" pos:end="657:18">cpu</name><operator pos:start="657:19" pos:end="657:20">-&gt;</operator><name pos:start="657:21" pos:end="657:23">env</name><operator pos:start="657:24" pos:end="657:24">.</operator><name pos:start="657:25" pos:end="657:30">pmsav8</name><operator pos:start="657:31" pos:end="657:31">.</operator><name pos:start="657:32" pos:end="657:36">mair1</name><index pos:start="657:37" pos:end="657:50">[<expr pos:start="657:38" pos:end="657:49"><name pos:start="657:38" pos:end="657:49"><name pos:start="657:38" pos:end="657:42">attrs</name><operator pos:start="657:43" pos:end="657:43">.</operator><name pos:start="657:44" pos:end="657:49">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="659:5" pos:end="659:15">case <expr pos:start="659:10" pos:end="659:14"><literal type="number" pos:start="659:10" pos:end="659:14">0xdd0</literal></expr>:</case> <comment type="block" pos:start="659:17" pos:end="659:30">/* SAU_CTRL */</comment>

        <if_stmt pos:start="661:9" pos:end="665:9"><if pos:start="661:9" pos:end="665:9">if <condition pos:start="661:12" pos:end="661:52">(<expr pos:start="661:13" pos:end="661:51"><operator pos:start="661:13" pos:end="661:13">!</operator><call pos:start="661:14" pos:end="661:51"><name pos:start="661:14" pos:end="661:24">arm_feature</name><argument_list pos:start="661:25" pos:end="661:51">(<argument pos:start="661:26" pos:end="661:34"><expr pos:start="661:26" pos:end="661:34"><operator pos:start="661:26" pos:end="661:26">&amp;</operator><name pos:start="661:27" pos:end="661:34"><name pos:start="661:27" pos:end="661:29">cpu</name><operator pos:start="661:30" pos:end="661:31">-&gt;</operator><name pos:start="661:32" pos:end="661:34">env</name></name></expr></argument>, <argument pos:start="661:37" pos:end="661:50"><expr pos:start="661:37" pos:end="661:50"><name pos:start="661:37" pos:end="661:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="661:54" pos:end="665:9">{<block_content pos:start="663:13" pos:end="663:28">

            <goto pos:start="663:13" pos:end="663:28">goto <name pos:start="663:18" pos:end="663:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="667:9" pos:end="671:9"><if pos:start="667:9" pos:end="671:9">if <condition pos:start="667:12" pos:end="667:26">(<expr pos:start="667:13" pos:end="667:25"><operator pos:start="667:13" pos:end="667:13">!</operator><name pos:start="667:14" pos:end="667:25"><name pos:start="667:14" pos:end="667:18">attrs</name><operator pos:start="667:19" pos:end="667:19">.</operator><name pos:start="667:20" pos:end="667:25">secure</name></name></expr>)</condition> <block pos:start="667:28" pos:end="671:9">{<block_content pos:start="669:13" pos:end="669:21">

            <return pos:start="669:13" pos:end="669:21">return <expr pos:start="669:20" pos:end="669:20"><literal type="number" pos:start="669:20" pos:end="669:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="673:9" pos:end="673:33">return <expr pos:start="673:16" pos:end="673:32"><name pos:start="673:16" pos:end="673:32"><name pos:start="673:16" pos:end="673:18">cpu</name><operator pos:start="673:19" pos:end="673:20">-&gt;</operator><name pos:start="673:21" pos:end="673:23">env</name><operator pos:start="673:24" pos:end="673:24">.</operator><name pos:start="673:25" pos:end="673:27">sau</name><operator pos:start="673:28" pos:end="673:28">.</operator><name pos:start="673:29" pos:end="673:32">ctrl</name></name></expr>;</return>

    <case pos:start="675:5" pos:end="675:15">case <expr pos:start="675:10" pos:end="675:14"><literal type="number" pos:start="675:10" pos:end="675:14">0xdd4</literal></expr>:</case> <comment type="block" pos:start="675:17" pos:end="675:30">/* SAU_TYPE */</comment>

        <if_stmt pos:start="677:9" pos:end="681:9"><if pos:start="677:9" pos:end="681:9">if <condition pos:start="677:12" pos:end="677:52">(<expr pos:start="677:13" pos:end="677:51"><operator pos:start="677:13" pos:end="677:13">!</operator><call pos:start="677:14" pos:end="677:51"><name pos:start="677:14" pos:end="677:24">arm_feature</name><argument_list pos:start="677:25" pos:end="677:51">(<argument pos:start="677:26" pos:end="677:34"><expr pos:start="677:26" pos:end="677:34"><operator pos:start="677:26" pos:end="677:26">&amp;</operator><name pos:start="677:27" pos:end="677:34"><name pos:start="677:27" pos:end="677:29">cpu</name><operator pos:start="677:30" pos:end="677:31">-&gt;</operator><name pos:start="677:32" pos:end="677:34">env</name></name></expr></argument>, <argument pos:start="677:37" pos:end="677:50"><expr pos:start="677:37" pos:end="677:50"><name pos:start="677:37" pos:end="677:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="677:54" pos:end="681:9">{<block_content pos:start="679:13" pos:end="679:28">

            <goto pos:start="679:13" pos:end="679:28">goto <name pos:start="679:18" pos:end="679:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="683:9" pos:end="687:9"><if pos:start="683:9" pos:end="687:9">if <condition pos:start="683:12" pos:end="683:26">(<expr pos:start="683:13" pos:end="683:25"><operator pos:start="683:13" pos:end="683:13">!</operator><name pos:start="683:14" pos:end="683:25"><name pos:start="683:14" pos:end="683:18">attrs</name><operator pos:start="683:19" pos:end="683:19">.</operator><name pos:start="683:20" pos:end="683:25">secure</name></name></expr>)</condition> <block pos:start="683:28" pos:end="687:9">{<block_content pos:start="685:13" pos:end="685:21">

            <return pos:start="685:13" pos:end="685:21">return <expr pos:start="685:20" pos:end="685:20"><literal type="number" pos:start="685:20" pos:end="685:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="689:9" pos:end="689:32">return <expr pos:start="689:16" pos:end="689:31"><name pos:start="689:16" pos:end="689:31"><name pos:start="689:16" pos:end="689:18">cpu</name><operator pos:start="689:19" pos:end="689:20">-&gt;</operator><name pos:start="689:21" pos:end="689:31">sau_sregion</name></name></expr>;</return>

    <case pos:start="691:5" pos:end="691:15">case <expr pos:start="691:10" pos:end="691:14"><literal type="number" pos:start="691:10" pos:end="691:14">0xdd8</literal></expr>:</case> <comment type="block" pos:start="691:17" pos:end="691:29">/* SAU_RNR */</comment>

        <if_stmt pos:start="693:9" pos:end="697:9"><if pos:start="693:9" pos:end="697:9">if <condition pos:start="693:12" pos:end="693:52">(<expr pos:start="693:13" pos:end="693:51"><operator pos:start="693:13" pos:end="693:13">!</operator><call pos:start="693:14" pos:end="693:51"><name pos:start="693:14" pos:end="693:24">arm_feature</name><argument_list pos:start="693:25" pos:end="693:51">(<argument pos:start="693:26" pos:end="693:34"><expr pos:start="693:26" pos:end="693:34"><operator pos:start="693:26" pos:end="693:26">&amp;</operator><name pos:start="693:27" pos:end="693:34"><name pos:start="693:27" pos:end="693:29">cpu</name><operator pos:start="693:30" pos:end="693:31">-&gt;</operator><name pos:start="693:32" pos:end="693:34">env</name></name></expr></argument>, <argument pos:start="693:37" pos:end="693:50"><expr pos:start="693:37" pos:end="693:50"><name pos:start="693:37" pos:end="693:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="693:54" pos:end="697:9">{<block_content pos:start="695:13" pos:end="695:28">

            <goto pos:start="695:13" pos:end="695:28">goto <name pos:start="695:18" pos:end="695:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="699:9" pos:end="703:9"><if pos:start="699:9" pos:end="703:9">if <condition pos:start="699:12" pos:end="699:26">(<expr pos:start="699:13" pos:end="699:25"><operator pos:start="699:13" pos:end="699:13">!</operator><name pos:start="699:14" pos:end="699:25"><name pos:start="699:14" pos:end="699:18">attrs</name><operator pos:start="699:19" pos:end="699:19">.</operator><name pos:start="699:20" pos:end="699:25">secure</name></name></expr>)</condition> <block pos:start="699:28" pos:end="703:9">{<block_content pos:start="701:13" pos:end="701:21">

            <return pos:start="701:13" pos:end="701:21">return <expr pos:start="701:20" pos:end="701:20"><literal type="number" pos:start="701:20" pos:end="701:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="705:9" pos:end="705:32">return <expr pos:start="705:16" pos:end="705:31"><name pos:start="705:16" pos:end="705:31"><name pos:start="705:16" pos:end="705:18">cpu</name><operator pos:start="705:19" pos:end="705:20">-&gt;</operator><name pos:start="705:21" pos:end="705:23">env</name><operator pos:start="705:24" pos:end="705:24">.</operator><name pos:start="705:25" pos:end="705:27">sau</name><operator pos:start="705:28" pos:end="705:28">.</operator><name pos:start="705:29" pos:end="705:31">rnr</name></name></expr>;</return>

    <case pos:start="707:5" pos:end="707:15">case <expr pos:start="707:10" pos:end="707:14"><literal type="number" pos:start="707:10" pos:end="707:14">0xddc</literal></expr>:</case> <comment type="block" pos:start="707:17" pos:end="707:30">/* SAU_RBAR */</comment>

    <block pos:start="709:5" pos:end="735:5">{<block_content pos:start="711:9" pos:end="733:41">

        <decl_stmt pos:start="711:9" pos:end="711:38"><decl pos:start="711:9" pos:end="711:37"><type pos:start="711:9" pos:end="711:11"><name pos:start="711:9" pos:end="711:11">int</name></type> <name pos:start="711:13" pos:end="711:18">region</name> <init pos:start="711:20" pos:end="711:37">= <expr pos:start="711:22" pos:end="711:37"><name pos:start="711:22" pos:end="711:37"><name pos:start="711:22" pos:end="711:24">cpu</name><operator pos:start="711:25" pos:end="711:26">-&gt;</operator><name pos:start="711:27" pos:end="711:29">env</name><operator pos:start="711:30" pos:end="711:30">.</operator><name pos:start="711:31" pos:end="711:33">sau</name><operator pos:start="711:34" pos:end="711:34">.</operator><name pos:start="711:35" pos:end="711:37">rnr</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="715:9" pos:end="719:9"><if pos:start="715:9" pos:end="719:9">if <condition pos:start="715:12" pos:end="715:52">(<expr pos:start="715:13" pos:end="715:51"><operator pos:start="715:13" pos:end="715:13">!</operator><call pos:start="715:14" pos:end="715:51"><name pos:start="715:14" pos:end="715:24">arm_feature</name><argument_list pos:start="715:25" pos:end="715:51">(<argument pos:start="715:26" pos:end="715:34"><expr pos:start="715:26" pos:end="715:34"><operator pos:start="715:26" pos:end="715:26">&amp;</operator><name pos:start="715:27" pos:end="715:34"><name pos:start="715:27" pos:end="715:29">cpu</name><operator pos:start="715:30" pos:end="715:31">-&gt;</operator><name pos:start="715:32" pos:end="715:34">env</name></name></expr></argument>, <argument pos:start="715:37" pos:end="715:50"><expr pos:start="715:37" pos:end="715:50"><name pos:start="715:37" pos:end="715:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="715:54" pos:end="719:9">{<block_content pos:start="717:13" pos:end="717:28">

            <goto pos:start="717:13" pos:end="717:28">goto <name pos:start="717:18" pos:end="717:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="721:9" pos:end="725:9"><if pos:start="721:9" pos:end="725:9">if <condition pos:start="721:12" pos:end="721:26">(<expr pos:start="721:13" pos:end="721:25"><operator pos:start="721:13" pos:end="721:13">!</operator><name pos:start="721:14" pos:end="721:25"><name pos:start="721:14" pos:end="721:18">attrs</name><operator pos:start="721:19" pos:end="721:19">.</operator><name pos:start="721:20" pos:end="721:25">secure</name></name></expr>)</condition> <block pos:start="721:28" pos:end="725:9">{<block_content pos:start="723:13" pos:end="723:21">

            <return pos:start="723:13" pos:end="723:21">return <expr pos:start="723:20" pos:end="723:20"><literal type="number" pos:start="723:20" pos:end="723:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="727:9" pos:end="731:9"><if pos:start="727:9" pos:end="731:9">if <condition pos:start="727:12" pos:end="727:39">(<expr pos:start="727:13" pos:end="727:38"><name pos:start="727:13" pos:end="727:18">region</name> <operator pos:start="727:20" pos:end="727:21">&gt;=</operator> <name pos:start="727:23" pos:end="727:38"><name pos:start="727:23" pos:end="727:25">cpu</name><operator pos:start="727:26" pos:end="727:27">-&gt;</operator><name pos:start="727:28" pos:end="727:38">sau_sregion</name></name></expr>)</condition> <block pos:start="727:41" pos:end="731:9">{<block_content pos:start="729:13" pos:end="729:21">

            <return pos:start="729:13" pos:end="729:21">return <expr pos:start="729:20" pos:end="729:20"><literal type="number" pos:start="729:20" pos:end="729:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="733:9" pos:end="733:41">return <expr pos:start="733:16" pos:end="733:40"><name pos:start="733:16" pos:end="733:40"><name pos:start="733:16" pos:end="733:18">cpu</name><operator pos:start="733:19" pos:end="733:20">-&gt;</operator><name pos:start="733:21" pos:end="733:23">env</name><operator pos:start="733:24" pos:end="733:24">.</operator><name pos:start="733:25" pos:end="733:27">sau</name><operator pos:start="733:28" pos:end="733:28">.</operator><name pos:start="733:29" pos:end="733:32">rbar</name><index pos:start="733:33" pos:end="733:40">[<expr pos:start="733:34" pos:end="733:39"><name pos:start="733:34" pos:end="733:39">region</name></expr>]</index></name></expr>;</return>

    </block_content>}</block>

    <case pos:start="737:5" pos:end="737:15">case <expr pos:start="737:10" pos:end="737:14"><literal type="number" pos:start="737:10" pos:end="737:14">0xde0</literal></expr>:</case> <comment type="block" pos:start="737:17" pos:end="737:30">/* SAU_RLAR */</comment>

    <block pos:start="739:5" pos:end="765:5">{<block_content pos:start="741:9" pos:end="763:41">

        <decl_stmt pos:start="741:9" pos:end="741:38"><decl pos:start="741:9" pos:end="741:37"><type pos:start="741:9" pos:end="741:11"><name pos:start="741:9" pos:end="741:11">int</name></type> <name pos:start="741:13" pos:end="741:18">region</name> <init pos:start="741:20" pos:end="741:37">= <expr pos:start="741:22" pos:end="741:37"><name pos:start="741:22" pos:end="741:37"><name pos:start="741:22" pos:end="741:24">cpu</name><operator pos:start="741:25" pos:end="741:26">-&gt;</operator><name pos:start="741:27" pos:end="741:29">env</name><operator pos:start="741:30" pos:end="741:30">.</operator><name pos:start="741:31" pos:end="741:33">sau</name><operator pos:start="741:34" pos:end="741:34">.</operator><name pos:start="741:35" pos:end="741:37">rnr</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="745:9" pos:end="749:9"><if pos:start="745:9" pos:end="749:9">if <condition pos:start="745:12" pos:end="745:52">(<expr pos:start="745:13" pos:end="745:51"><operator pos:start="745:13" pos:end="745:13">!</operator><call pos:start="745:14" pos:end="745:51"><name pos:start="745:14" pos:end="745:24">arm_feature</name><argument_list pos:start="745:25" pos:end="745:51">(<argument pos:start="745:26" pos:end="745:34"><expr pos:start="745:26" pos:end="745:34"><operator pos:start="745:26" pos:end="745:26">&amp;</operator><name pos:start="745:27" pos:end="745:34"><name pos:start="745:27" pos:end="745:29">cpu</name><operator pos:start="745:30" pos:end="745:31">-&gt;</operator><name pos:start="745:32" pos:end="745:34">env</name></name></expr></argument>, <argument pos:start="745:37" pos:end="745:50"><expr pos:start="745:37" pos:end="745:50"><name pos:start="745:37" pos:end="745:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="745:54" pos:end="749:9">{<block_content pos:start="747:13" pos:end="747:28">

            <goto pos:start="747:13" pos:end="747:28">goto <name pos:start="747:18" pos:end="747:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="751:9" pos:end="755:9"><if pos:start="751:9" pos:end="755:9">if <condition pos:start="751:12" pos:end="751:26">(<expr pos:start="751:13" pos:end="751:25"><operator pos:start="751:13" pos:end="751:13">!</operator><name pos:start="751:14" pos:end="751:25"><name pos:start="751:14" pos:end="751:18">attrs</name><operator pos:start="751:19" pos:end="751:19">.</operator><name pos:start="751:20" pos:end="751:25">secure</name></name></expr>)</condition> <block pos:start="751:28" pos:end="755:9">{<block_content pos:start="753:13" pos:end="753:21">

            <return pos:start="753:13" pos:end="753:21">return <expr pos:start="753:20" pos:end="753:20"><literal type="number" pos:start="753:20" pos:end="753:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="757:9" pos:end="761:9"><if pos:start="757:9" pos:end="761:9">if <condition pos:start="757:12" pos:end="757:39">(<expr pos:start="757:13" pos:end="757:38"><name pos:start="757:13" pos:end="757:18">region</name> <operator pos:start="757:20" pos:end="757:21">&gt;=</operator> <name pos:start="757:23" pos:end="757:38"><name pos:start="757:23" pos:end="757:25">cpu</name><operator pos:start="757:26" pos:end="757:27">-&gt;</operator><name pos:start="757:28" pos:end="757:38">sau_sregion</name></name></expr>)</condition> <block pos:start="757:41" pos:end="761:9">{<block_content pos:start="759:13" pos:end="759:21">

            <return pos:start="759:13" pos:end="759:21">return <expr pos:start="759:20" pos:end="759:20"><literal type="number" pos:start="759:20" pos:end="759:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="763:9" pos:end="763:41">return <expr pos:start="763:16" pos:end="763:40"><name pos:start="763:16" pos:end="763:40"><name pos:start="763:16" pos:end="763:18">cpu</name><operator pos:start="763:19" pos:end="763:20">-&gt;</operator><name pos:start="763:21" pos:end="763:23">env</name><operator pos:start="763:24" pos:end="763:24">.</operator><name pos:start="763:25" pos:end="763:27">sau</name><operator pos:start="763:28" pos:end="763:28">.</operator><name pos:start="763:29" pos:end="763:32">rlar</name><index pos:start="763:33" pos:end="763:40">[<expr pos:start="763:34" pos:end="763:39"><name pos:start="763:34" pos:end="763:39">region</name></expr>]</index></name></expr>;</return>

    </block_content>}</block>

    <case pos:start="767:5" pos:end="767:15">case <expr pos:start="767:10" pos:end="767:14"><literal type="number" pos:start="767:10" pos:end="767:14">0xde4</literal></expr>:</case> <comment type="block" pos:start="767:17" pos:end="767:26">/* SFSR */</comment>

        <if_stmt pos:start="769:9" pos:end="773:9"><if pos:start="769:9" pos:end="773:9">if <condition pos:start="769:12" pos:end="769:52">(<expr pos:start="769:13" pos:end="769:51"><operator pos:start="769:13" pos:end="769:13">!</operator><call pos:start="769:14" pos:end="769:51"><name pos:start="769:14" pos:end="769:24">arm_feature</name><argument_list pos:start="769:25" pos:end="769:51">(<argument pos:start="769:26" pos:end="769:34"><expr pos:start="769:26" pos:end="769:34"><operator pos:start="769:26" pos:end="769:26">&amp;</operator><name pos:start="769:27" pos:end="769:34"><name pos:start="769:27" pos:end="769:29">cpu</name><operator pos:start="769:30" pos:end="769:31">-&gt;</operator><name pos:start="769:32" pos:end="769:34">env</name></name></expr></argument>, <argument pos:start="769:37" pos:end="769:50"><expr pos:start="769:37" pos:end="769:50"><name pos:start="769:37" pos:end="769:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="769:54" pos:end="773:9">{<block_content pos:start="771:13" pos:end="771:28">

            <goto pos:start="771:13" pos:end="771:28">goto <name pos:start="771:18" pos:end="771:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="775:9" pos:end="779:9"><if pos:start="775:9" pos:end="779:9">if <condition pos:start="775:12" pos:end="775:26">(<expr pos:start="775:13" pos:end="775:25"><operator pos:start="775:13" pos:end="775:13">!</operator><name pos:start="775:14" pos:end="775:25"><name pos:start="775:14" pos:end="775:18">attrs</name><operator pos:start="775:19" pos:end="775:19">.</operator><name pos:start="775:20" pos:end="775:25">secure</name></name></expr>)</condition> <block pos:start="775:28" pos:end="779:9">{<block_content pos:start="777:13" pos:end="777:21">

            <return pos:start="777:13" pos:end="777:21">return <expr pos:start="777:20" pos:end="777:20"><literal type="number" pos:start="777:20" pos:end="777:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="781:9" pos:end="781:33">return <expr pos:start="781:16" pos:end="781:32"><name pos:start="781:16" pos:end="781:32"><name pos:start="781:16" pos:end="781:18">cpu</name><operator pos:start="781:19" pos:end="781:20">-&gt;</operator><name pos:start="781:21" pos:end="781:23">env</name><operator pos:start="781:24" pos:end="781:24">.</operator><name pos:start="781:25" pos:end="781:27">v7m</name><operator pos:start="781:28" pos:end="781:28">.</operator><name pos:start="781:29" pos:end="781:32">sfsr</name></name></expr>;</return>

    <case pos:start="783:5" pos:end="783:15">case <expr pos:start="783:10" pos:end="783:14"><literal type="number" pos:start="783:10" pos:end="783:14">0xde8</literal></expr>:</case> <comment type="block" pos:start="783:17" pos:end="783:26">/* SFAR */</comment>

        <if_stmt pos:start="785:9" pos:end="789:9"><if pos:start="785:9" pos:end="789:9">if <condition pos:start="785:12" pos:end="785:52">(<expr pos:start="785:13" pos:end="785:51"><operator pos:start="785:13" pos:end="785:13">!</operator><call pos:start="785:14" pos:end="785:51"><name pos:start="785:14" pos:end="785:24">arm_feature</name><argument_list pos:start="785:25" pos:end="785:51">(<argument pos:start="785:26" pos:end="785:34"><expr pos:start="785:26" pos:end="785:34"><operator pos:start="785:26" pos:end="785:26">&amp;</operator><name pos:start="785:27" pos:end="785:34"><name pos:start="785:27" pos:end="785:29">cpu</name><operator pos:start="785:30" pos:end="785:31">-&gt;</operator><name pos:start="785:32" pos:end="785:34">env</name></name></expr></argument>, <argument pos:start="785:37" pos:end="785:50"><expr pos:start="785:37" pos:end="785:50"><name pos:start="785:37" pos:end="785:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="785:54" pos:end="789:9">{<block_content pos:start="787:13" pos:end="787:28">

            <goto pos:start="787:13" pos:end="787:28">goto <name pos:start="787:18" pos:end="787:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="791:9" pos:end="795:9"><if pos:start="791:9" pos:end="795:9">if <condition pos:start="791:12" pos:end="791:26">(<expr pos:start="791:13" pos:end="791:25"><operator pos:start="791:13" pos:end="791:13">!</operator><name pos:start="791:14" pos:end="791:25"><name pos:start="791:14" pos:end="791:18">attrs</name><operator pos:start="791:19" pos:end="791:19">.</operator><name pos:start="791:20" pos:end="791:25">secure</name></name></expr>)</condition> <block pos:start="791:28" pos:end="795:9">{<block_content pos:start="793:13" pos:end="793:21">

            <return pos:start="793:13" pos:end="793:21">return <expr pos:start="793:20" pos:end="793:20"><literal type="number" pos:start="793:20" pos:end="793:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="797:9" pos:end="797:33">return <expr pos:start="797:16" pos:end="797:32"><name pos:start="797:16" pos:end="797:32"><name pos:start="797:16" pos:end="797:18">cpu</name><operator pos:start="797:19" pos:end="797:20">-&gt;</operator><name pos:start="797:21" pos:end="797:23">env</name><operator pos:start="797:24" pos:end="797:24">.</operator><name pos:start="797:25" pos:end="797:27">v7m</name><operator pos:start="797:28" pos:end="797:28">.</operator><name pos:start="797:29" pos:end="797:32">sfar</name></name></expr>;</return>

    <default pos:start="799:5" pos:end="799:12">default:</default>

    <label pos:start="801:5" pos:end="801:15"><name pos:start="801:5" pos:end="801:14">bad_offset</name>:</label>

        <expr_stmt pos:start="803:9" pos:end="803:79"><expr pos:start="803:9" pos:end="803:78"><call pos:start="803:9" pos:end="803:78"><name pos:start="803:9" pos:end="803:21">qemu_log_mask</name><argument_list pos:start="803:22" pos:end="803:78">(<argument pos:start="803:23" pos:end="803:37"><expr pos:start="803:23" pos:end="803:37"><name pos:start="803:23" pos:end="803:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="803:40" pos:end="803:69"><expr pos:start="803:40" pos:end="803:69"><literal type="string" pos:start="803:40" pos:end="803:69">"NVIC: Bad read offset 0x%x\n"</literal></expr></argument>, <argument pos:start="803:72" pos:end="803:77"><expr pos:start="803:72" pos:end="803:77"><name pos:start="803:72" pos:end="803:77">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="805:9" pos:end="805:17">return <expr pos:start="805:16" pos:end="805:16"><literal type="number" pos:start="805:16" pos:end="805:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
