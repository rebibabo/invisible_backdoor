<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7669.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">dvbsub_parse_region_segment</name><parameter_list pos:start="1:39" pos:end="2:72">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:60"><name pos:start="1:40" pos:end="1:53">AVCodecContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">avctx</name></decl></parameter>,
                                       <parameter pos:start="2:40" pos:end="2:57"><decl pos:start="2:40" pos:end="2:57"><type pos:start="2:40" pos:end="2:57"><specifier pos:start="2:40" pos:end="2:44">const</specifier> <name pos:start="2:46" pos:end="2:52">uint8_t</name> <modifier pos:start="2:54" pos:end="2:54">*</modifier></type><name pos:start="2:55" pos:end="2:57">buf</name></decl></parameter>, <parameter pos:start="2:60" pos:end="2:71"><decl pos:start="2:60" pos:end="2:71"><type pos:start="2:60" pos:end="2:71"><name pos:start="2:60" pos:end="2:62">int</name></type> <name pos:start="2:64" pos:end="2:71">buf_size</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="89:13">{<block_content pos:start="4:5" pos:end="89:13">
    <decl_stmt pos:start="4:5" pos:end="4:42"><decl pos:start="4:5" pos:end="4:41"><type pos:start="4:5" pos:end="4:19"><name pos:start="4:5" pos:end="4:17">DVBSubContext</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:22">ctx</name> <init pos:start="4:24" pos:end="4:41">= <expr pos:start="4:26" pos:end="4:41"><name pos:start="4:26" pos:end="4:41"><name pos:start="4:26" pos:end="4:30">avctx</name><operator pos:start="4:31" pos:end="4:32">-&gt;</operator><name pos:start="4:33" pos:end="4:41">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:26">buf_end</name> <init pos:start="5:28" pos:end="5:43">= <expr pos:start="5:30" pos:end="5:43"><name pos:start="5:30" pos:end="5:32">buf</name> <operator pos:start="5:34" pos:end="5:34">+</operator> <name pos:start="5:36" pos:end="5:43">buf_size</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:29"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:17">region_id</name></decl>, <decl pos:start="6:20" pos:end="6:28"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:20" pos:end="6:28">object_id</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:7">int</name> <name pos:start="7:9" pos:end="7:17">av_unused</name></type> <name pos:start="7:19" pos:end="7:25">version</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:25"><decl pos:start="8:5" pos:end="8:24"><type pos:start="8:5" pos:end="8:18"><name pos:start="8:5" pos:end="8:16">DVBSubRegion</name> <modifier pos:start="8:18" pos:end="8:18">*</modifier></type><name pos:start="8:19" pos:end="8:24">region</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">DVBSubObject</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:24">object</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:33"><decl pos:start="10:5" pos:end="10:32"><type pos:start="10:5" pos:end="10:25"><name pos:start="10:5" pos:end="10:23">DVBSubObjectDisplay</name> <modifier pos:start="10:25" pos:end="10:25">*</modifier></type><name pos:start="10:26" pos:end="10:32">display</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">fill</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:12"><decl pos:start="12:5" pos:end="12:11"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:11">ret</name></decl>;</decl_stmt>
    <if_stmt pos:start="13:5" pos:end="14:35"><if pos:start="13:5" pos:end="14:35">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:16">buf_size</name> <operator pos:start="13:18" pos:end="13:18">&lt;</operator> <literal type="number" pos:start="13:20" pos:end="13:21">10</literal></expr>)</condition><block type="pseudo" pos:start="14:9" pos:end="14:35"><block_content pos:start="14:9" pos:end="14:35">
        <return pos:start="14:9" pos:end="14:35">return <expr pos:start="14:16" pos:end="14:34"><name pos:start="14:16" pos:end="14:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:13">region_id</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <operator pos:start="15:17" pos:end="15:17">*</operator><name pos:start="15:18" pos:end="15:20">buf</name><operator pos:start="15:21" pos:end="15:22">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:40"><expr pos:start="16:5" pos:end="16:39"><name pos:start="16:5" pos:end="16:10">region</name> <operator pos:start="16:12" pos:end="16:12">=</operator> <call pos:start="16:14" pos:end="16:39"><name pos:start="16:14" pos:end="16:23">get_region</name><argument_list pos:start="16:24" pos:end="16:39">(<argument pos:start="16:25" pos:end="16:27"><expr pos:start="16:25" pos:end="16:27"><name pos:start="16:25" pos:end="16:27">ctx</name></expr></argument>, <argument pos:start="16:30" pos:end="16:38"><expr pos:start="16:30" pos:end="16:38"><name pos:start="16:30" pos:end="16:38">region_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="89:13"><if pos:start="17:5" pos:end="89:13">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:15">region</name></expr>)</condition> <block pos:start="17:18" pos:end="89:13">{<block_content pos:start="18:9" pos:end="89:13">
        <expr_stmt pos:start="18:9" pos:end="18:50"><expr pos:start="18:9" pos:end="18:49"><name pos:start="18:9" pos:end="18:14">region</name> <operator pos:start="18:16" pos:end="18:16">=</operator> <call pos:start="18:18" pos:end="18:49"><name pos:start="18:18" pos:end="18:27">av_mallocz</name><argument_list pos:start="18:28" pos:end="18:49">(<argument pos:start="18:29" pos:end="18:48"><expr pos:start="18:29" pos:end="18:48"><sizeof pos:start="18:29" pos:end="18:48">sizeof<argument_list pos:start="18:35" pos:end="18:48">(<argument pos:start="18:36" pos:end="18:47"><expr pos:start="18:36" pos:end="18:47"><name pos:start="18:36" pos:end="18:47">DVBSubRegion</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="19:9" pos:end="20:35"><if pos:start="19:9" pos:end="20:35">if <condition pos:start="19:12" pos:end="19:20">(<expr pos:start="19:13" pos:end="19:19"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:19">region</name></expr>)</condition><block type="pseudo" pos:start="20:13" pos:end="20:35"><block_content pos:start="20:13" pos:end="20:35">
            <return pos:start="20:13" pos:end="20:35">return <expr pos:start="20:20" pos:end="20:34"><call pos:start="20:20" pos:end="20:34"><name pos:start="20:20" pos:end="20:26">AVERROR</name><argument_list pos:start="20:27" pos:end="20:34">(<argument pos:start="20:28" pos:end="20:33"><expr pos:start="20:28" pos:end="20:33"><name pos:start="20:28" pos:end="20:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:14">region</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:18">id</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:30">region_id</name></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:29"><expr pos:start="22:9" pos:end="22:28"><name pos:start="22:9" pos:end="22:23"><name pos:start="22:9" pos:end="22:14">region</name><operator pos:start="22:15" pos:end="22:16">-&gt;</operator><name pos:start="22:17" pos:end="22:23">version</name></name> <operator pos:start="22:25" pos:end="22:25">=</operator> <operator pos:start="22:27" pos:end="22:27">-</operator><literal type="number" pos:start="22:28" pos:end="22:28">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:14">region</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:20">next</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:39"><name pos:start="23:24" pos:end="23:26">ctx</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:39">region_list</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:34"><expr pos:start="24:9" pos:end="24:33"><name pos:start="24:9" pos:end="24:24"><name pos:start="24:9" pos:end="24:11">ctx</name><operator pos:start="24:12" pos:end="24:13">-&gt;</operator><name pos:start="24:14" pos:end="24:24">region_list</name></name> <operator pos:start="24:26" pos:end="24:26">=</operator> <name pos:start="24:28" pos:end="24:33">region</name></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:11">version</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">(</operator><operator pos:start="25:16" pos:end="25:16">(</operator><operator pos:start="25:17" pos:end="25:17">*</operator><name pos:start="25:18" pos:end="25:20">buf</name><operator pos:start="25:21" pos:end="25:21">)</operator><operator pos:start="25:22" pos:end="25:23">&gt;&gt;</operator><literal type="number" pos:start="25:24" pos:end="25:24">4</literal><operator pos:start="25:25" pos:end="25:25">)</operator> <operator pos:start="25:27" pos:end="25:27">&amp;</operator> <literal type="number" pos:start="25:29" pos:end="25:30">15</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:31"><expr pos:start="26:5" pos:end="26:30"><name pos:start="26:5" pos:end="26:8">fill</name> <operator pos:start="26:10" pos:end="26:10">=</operator> <operator pos:start="26:12" pos:end="26:12">(</operator><operator pos:start="26:13" pos:end="26:13">(</operator><operator pos:start="26:14" pos:end="26:14">*</operator><name pos:start="26:15" pos:end="26:17">buf</name><operator pos:start="26:18" pos:end="26:19">++</operator><operator pos:start="26:20" pos:end="26:20">)</operator> <operator pos:start="26:22" pos:end="26:23">&gt;&gt;</operator> <literal type="number" pos:start="26:25" pos:end="26:25">3</literal><operator pos:start="26:26" pos:end="26:26">)</operator> <operator pos:start="26:28" pos:end="26:28">&amp;</operator> <literal type="number" pos:start="26:30" pos:end="26:30">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:10">region</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">width</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:27">AV_RB16</name><argument_list pos:start="27:28" pos:end="27:32">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:13"><expr pos:start="28:5" pos:end="28:12"><name pos:start="28:5" pos:end="28:7">buf</name> <operator pos:start="28:9" pos:end="28:10">+=</operator> <literal type="number" pos:start="28:12" pos:end="28:12">2</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:10">region</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:18">height</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:33"><name pos:start="29:22" pos:end="29:28">AV_RB16</name><argument_list pos:start="29:29" pos:end="29:33">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:13"><expr pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:7">buf</name> <operator pos:start="30:9" pos:end="30:10">+=</operator> <literal type="number" pos:start="30:12" pos:end="30:12">2</literal></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="89:13"><if pos:start="31:5" pos:end="89:13">if <condition pos:start="31:8" pos:end="31:59">(<expr pos:start="31:9" pos:end="31:58"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:14">region</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">width</name></name> <operator pos:start="31:23" pos:end="31:23">*</operator> <name pos:start="31:25" pos:end="31:38"><name pos:start="31:25" pos:end="31:30">region</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:38">height</name></name> <operator pos:start="31:40" pos:end="31:41">!=</operator> <name pos:start="31:43" pos:end="31:58"><name pos:start="31:43" pos:end="31:48">region</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:58">buf_size</name></name></expr>)</condition> <block pos:start="31:61" pos:end="89:13">{<block_content pos:start="32:9" pos:end="89:13">
        <expr_stmt pos:start="32:9" pos:end="32:30"><expr pos:start="32:9" pos:end="32:29"><call pos:start="32:9" pos:end="32:29"><name pos:start="32:9" pos:end="32:15">av_free</name><argument_list pos:start="32:16" pos:end="32:29">(<argument pos:start="32:17" pos:end="32:28"><expr pos:start="32:17" pos:end="32:28"><name pos:start="32:17" pos:end="32:28"><name pos:start="32:17" pos:end="32:22">region</name><operator pos:start="32:23" pos:end="32:24">-&gt;</operator><name pos:start="32:25" pos:end="32:28">pbuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:14">region</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:24">buf_size</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:40"><name pos:start="33:28" pos:end="33:33">region</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:40">width</name></name> <operator pos:start="33:42" pos:end="33:42">*</operator> <name pos:start="33:44" pos:end="33:57"><name pos:start="33:44" pos:end="33:49">region</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:57">height</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:51"><expr pos:start="34:9" pos:end="34:50"><name pos:start="34:9" pos:end="34:20"><name pos:start="34:9" pos:end="34:14">region</name><operator pos:start="34:15" pos:end="34:16">-&gt;</operator><name pos:start="34:17" pos:end="34:20">pbuf</name></name> <operator pos:start="34:22" pos:end="34:22">=</operator> <call pos:start="34:24" pos:end="34:50"><name pos:start="34:24" pos:end="34:32">av_malloc</name><argument_list pos:start="34:33" pos:end="34:50">(<argument pos:start="34:34" pos:end="34:49"><expr pos:start="34:34" pos:end="34:49"><name pos:start="34:34" pos:end="34:49"><name pos:start="34:34" pos:end="34:39">region</name><operator pos:start="34:40" pos:end="34:41">-&gt;</operator><name pos:start="34:42" pos:end="34:49">buf_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="35:9" pos:end="89:13"><if pos:start="35:9" pos:end="89:13">if <condition pos:start="35:12" pos:end="35:26">(<expr pos:start="35:13" pos:end="35:25"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:25"><name pos:start="35:14" pos:end="35:19">region</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">pbuf</name></name></expr>)</condition> <block pos:start="35:28" pos:end="89:13">{<block_content pos:start="36:13" pos:end="89:13">
            <expr_stmt pos:start="36:13" pos:end="38:31"><expr pos:start="36:13" pos:end="38:30"><name pos:start="36:13" pos:end="36:28"><name pos:start="36:13" pos:end="36:18">region</name><operator pos:start="36:19" pos:end="36:20">-&gt;</operator><name pos:start="36:21" pos:end="36:28">buf_size</name></name> <operator pos:start="36:30" pos:end="36:30">=</operator>
            <name pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:18">region</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:25">width</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator>
            <name pos:start="38:13" pos:end="38:26"><name pos:start="38:13" pos:end="38:18">region</name><operator pos:start="38:19" pos:end="38:20">-&gt;</operator><name pos:start="38:21" pos:end="38:26">height</name></name> <operator pos:start="38:28" pos:end="38:28">=</operator> <literal type="number" pos:start="38:30" pos:end="38:30">0</literal></expr>;</expr_stmt>
            <return pos:start="39:13" pos:end="39:35">return <expr pos:start="39:20" pos:end="39:34"><call pos:start="39:20" pos:end="39:34"><name pos:start="39:20" pos:end="39:26">AVERROR</name><argument_list pos:start="39:27" pos:end="39:34">(<argument pos:start="39:28" pos:end="39:33"><expr pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>
        <expr_stmt pos:start="40:9" pos:end="40:17"><expr pos:start="40:9" pos:end="40:16"><name pos:start="40:9" pos:end="40:12">fill</name> <operator pos:start="40:14" pos:end="40:14">=</operator> <literal type="number" pos:start="40:16" pos:end="40:16">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:14">region</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">dirty</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <literal type="number" pos:start="41:25" pos:end="41:25">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:47"><expr pos:start="42:5" pos:end="42:46"><name pos:start="42:5" pos:end="42:17"><name pos:start="42:5" pos:end="42:10">region</name><operator pos:start="42:11" pos:end="42:12">-&gt;</operator><name pos:start="42:13" pos:end="42:17">depth</name></name> <operator pos:start="42:19" pos:end="42:19">=</operator> <literal type="number" pos:start="42:21" pos:end="42:21">1</literal> <operator pos:start="42:23" pos:end="42:24">&lt;&lt;</operator> <operator pos:start="42:26" pos:end="42:26">(</operator><operator pos:start="42:27" pos:end="42:27">(</operator><operator pos:start="42:28" pos:end="42:28">(</operator><operator pos:start="42:29" pos:end="42:29">*</operator><name pos:start="42:30" pos:end="42:32">buf</name><operator pos:start="42:33" pos:end="42:34">++</operator><operator pos:start="42:35" pos:end="42:35">)</operator> <operator pos:start="42:37" pos:end="42:38">&gt;&gt;</operator> <literal type="number" pos:start="42:40" pos:end="42:40">2</literal><operator pos:start="42:41" pos:end="42:41">)</operator> <operator pos:start="42:43" pos:end="42:43">&amp;</operator> <literal type="number" pos:start="42:45" pos:end="42:45">7</literal><operator pos:start="42:46" pos:end="42:46">)</operator></expr>;</expr_stmt>
    <if_stmt pos:start="43:5" pos:end="89:13"><if pos:start="43:5" pos:end="89:13">if<condition pos:start="43:7" pos:end="43:42">(<expr pos:start="43:8" pos:end="43:41"><name pos:start="43:8" pos:end="43:20"><name pos:start="43:8" pos:end="43:13">region</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:20">depth</name></name><operator pos:start="43:21" pos:end="43:21">&lt;</operator><literal type="number" pos:start="43:22" pos:end="43:22">2</literal> <operator pos:start="43:24" pos:end="43:25">||</operator> <name pos:start="43:27" pos:end="43:39"><name pos:start="43:27" pos:end="43:32">region</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:39">depth</name></name><operator pos:start="43:40" pos:end="43:40">&gt;</operator><literal type="number" pos:start="43:41" pos:end="43:41">8</literal></expr>)</condition><block pos:start="43:43" pos:end="89:13">{<block_content pos:start="44:9" pos:end="89:13">
        <expr_stmt pos:start="44:9" pos:end="44:83"><expr pos:start="44:9" pos:end="44:82"><call pos:start="44:9" pos:end="44:82"><name pos:start="44:9" pos:end="44:14">av_log</name><argument_list pos:start="44:15" pos:end="44:82">(<argument pos:start="44:16" pos:end="44:20"><expr pos:start="44:16" pos:end="44:20"><name pos:start="44:16" pos:end="44:20">avctx</name></expr></argument>, <argument pos:start="44:23" pos:end="44:34"><expr pos:start="44:23" pos:end="44:34"><name pos:start="44:23" pos:end="44:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="44:37" pos:end="44:66"><expr pos:start="44:37" pos:end="44:66"><literal type="string" pos:start="44:37" pos:end="44:66">"region depth %d is invalid\n"</literal></expr></argument>, <argument pos:start="44:69" pos:end="44:81"><expr pos:start="44:69" pos:end="44:81"><name pos:start="44:69" pos:end="44:81"><name pos:start="44:69" pos:end="44:74">region</name><operator pos:start="44:75" pos:end="44:76">-&gt;</operator><name pos:start="44:77" pos:end="44:81">depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:14">region</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:21">depth</name></name><operator pos:start="45:22" pos:end="45:22">=</operator> <literal type="number" pos:start="45:24" pos:end="45:24">4</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="46:5" pos:end="46:26"><expr pos:start="46:5" pos:end="46:25"><name pos:start="46:5" pos:end="46:16"><name pos:start="46:5" pos:end="46:10">region</name><operator pos:start="46:11" pos:end="46:12">-&gt;</operator><name pos:start="46:13" pos:end="46:16">clut</name></name> <operator pos:start="46:18" pos:end="46:18">=</operator> <operator pos:start="46:20" pos:end="46:20">*</operator><name pos:start="46:21" pos:end="46:23">buf</name><operator pos:start="46:24" pos:end="46:25">++</operator></expr>;</expr_stmt>
    <if_stmt pos:start="47:5" pos:end="89:13"><if pos:start="47:5" pos:end="50:5">if <condition pos:start="47:8" pos:end="47:27">(<expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:14">region</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">depth</name></name> <operator pos:start="47:23" pos:end="47:24">==</operator> <literal type="number" pos:start="47:26" pos:end="47:26">8</literal></expr>)</condition> <block pos:start="47:29" pos:end="50:5">{<block_content pos:start="48:9" pos:end="49:17">
        <expr_stmt pos:start="48:9" pos:end="48:33"><expr pos:start="48:9" pos:end="48:32"><name pos:start="48:9" pos:end="48:23"><name pos:start="48:9" pos:end="48:14">region</name><operator pos:start="48:15" pos:end="48:16">-&gt;</operator><name pos:start="48:17" pos:end="48:23">bgcolor</name></name> <operator pos:start="48:25" pos:end="48:25">=</operator> <operator pos:start="48:27" pos:end="48:27">*</operator><name pos:start="48:28" pos:end="48:30">buf</name><operator pos:start="48:31" pos:end="48:32">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:17"><expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:11">buf</name> <operator pos:start="49:13" pos:end="49:14">+=</operator> <literal type="number" pos:start="49:16" pos:end="49:16">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="50:7" pos:end="89:13">else <block pos:start="50:12" pos:end="89:13">{<block_content pos:start="51:9" pos:end="89:13">
        <expr_stmt pos:start="51:9" pos:end="51:17"><expr pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:11">buf</name> <operator pos:start="51:13" pos:end="51:14">+=</operator> <literal type="number" pos:start="51:16" pos:end="51:16">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="52:9" pos:end="55:52"><if pos:start="52:9" pos:end="53:53">if <condition pos:start="52:12" pos:end="52:31">(<expr pos:start="52:13" pos:end="52:30"><name pos:start="52:13" pos:end="52:25"><name pos:start="52:13" pos:end="52:18">region</name><operator pos:start="52:19" pos:end="52:20">-&gt;</operator><name pos:start="52:21" pos:end="52:25">depth</name></name> <operator pos:start="52:27" pos:end="52:28">==</operator> <literal type="number" pos:start="52:30" pos:end="52:30">4</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:53"><block_content pos:start="53:13" pos:end="53:53">
            <expr_stmt pos:start="53:13" pos:end="53:53"><expr pos:start="53:13" pos:end="53:52"><name pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:18">region</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:27">bgcolor</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <operator pos:start="53:31" pos:end="53:31">(</operator><operator pos:start="53:32" pos:end="53:32">(</operator><operator pos:start="53:33" pos:end="53:33">(</operator><operator pos:start="53:34" pos:end="53:34">*</operator><name pos:start="53:35" pos:end="53:37">buf</name><operator pos:start="53:38" pos:end="53:39">++</operator><operator pos:start="53:40" pos:end="53:40">)</operator> <operator pos:start="53:42" pos:end="53:43">&gt;&gt;</operator> <literal type="number" pos:start="53:45" pos:end="53:45">4</literal><operator pos:start="53:46" pos:end="53:46">)</operator> <operator pos:start="53:48" pos:end="53:48">&amp;</operator> <literal type="number" pos:start="53:50" pos:end="53:51">15</literal><operator pos:start="53:52" pos:end="53:52">)</operator></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="54:9" pos:end="55:52">else<block type="pseudo" pos:start="55:13" pos:end="55:52"><block_content pos:start="55:13" pos:end="55:52">
            <expr_stmt pos:start="55:13" pos:end="55:52"><expr pos:start="55:13" pos:end="55:51"><name pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:18">region</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:27">bgcolor</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <operator pos:start="55:31" pos:end="55:31">(</operator><operator pos:start="55:32" pos:end="55:32">(</operator><operator pos:start="55:33" pos:end="55:33">(</operator><operator pos:start="55:34" pos:end="55:34">*</operator><name pos:start="55:35" pos:end="55:37">buf</name><operator pos:start="55:38" pos:end="55:39">++</operator><operator pos:start="55:40" pos:end="55:40">)</operator> <operator pos:start="55:42" pos:end="55:43">&gt;&gt;</operator> <literal type="number" pos:start="55:45" pos:end="55:45">2</literal><operator pos:start="55:46" pos:end="55:46">)</operator> <operator pos:start="55:48" pos:end="55:48">&amp;</operator> <literal type="number" pos:start="55:50" pos:end="55:50">3</literal><operator pos:start="55:51" pos:end="55:51">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="56:5" pos:end="56:85"><expr pos:start="56:5" pos:end="56:84"><call pos:start="56:5" pos:end="56:84"><name pos:start="56:5" pos:end="56:11">ff_dlog</name><argument_list pos:start="56:12" pos:end="56:84">(<argument pos:start="56:13" pos:end="56:17"><expr pos:start="56:13" pos:end="56:17"><name pos:start="56:13" pos:end="56:17">avctx</name></expr></argument>, <argument pos:start="56:20" pos:end="56:41"><expr pos:start="56:20" pos:end="56:41"><literal type="string" pos:start="56:20" pos:end="56:41">"Region %d, (%dx%d)\n"</literal></expr></argument>, <argument pos:start="56:44" pos:end="56:52"><expr pos:start="56:44" pos:end="56:52"><name pos:start="56:44" pos:end="56:52">region_id</name></expr></argument>, <argument pos:start="56:55" pos:end="56:67"><expr pos:start="56:55" pos:end="56:67"><name pos:start="56:55" pos:end="56:67"><name pos:start="56:55" pos:end="56:60">region</name><operator pos:start="56:61" pos:end="56:62">-&gt;</operator><name pos:start="56:63" pos:end="56:67">width</name></name></expr></argument>, <argument pos:start="56:70" pos:end="56:83"><expr pos:start="56:70" pos:end="56:83"><name pos:start="56:70" pos:end="56:83"><name pos:start="56:70" pos:end="56:75">region</name><operator pos:start="56:76" pos:end="56:77">-&gt;</operator><name pos:start="56:78" pos:end="56:83">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="57:5" pos:end="89:13"><if pos:start="57:5" pos:end="89:13">if <condition pos:start="57:8" pos:end="57:13">(<expr pos:start="57:9" pos:end="57:12"><name pos:start="57:9" pos:end="57:12">fill</name></expr>)</condition> <block pos:start="57:15" pos:end="89:13">{<block_content pos:start="58:9" pos:end="89:13">
        <expr_stmt pos:start="58:9" pos:end="58:64"><expr pos:start="58:9" pos:end="58:63"><call pos:start="58:9" pos:end="58:63"><name pos:start="58:9" pos:end="58:14">memset</name><argument_list pos:start="58:15" pos:end="58:63">(<argument pos:start="58:16" pos:end="58:27"><expr pos:start="58:16" pos:end="58:27"><name pos:start="58:16" pos:end="58:27"><name pos:start="58:16" pos:end="58:21">region</name><operator pos:start="58:22" pos:end="58:23">-&gt;</operator><name pos:start="58:24" pos:end="58:27">pbuf</name></name></expr></argument>, <argument pos:start="58:30" pos:end="58:44"><expr pos:start="58:30" pos:end="58:44"><name pos:start="58:30" pos:end="58:44"><name pos:start="58:30" pos:end="58:35">region</name><operator pos:start="58:36" pos:end="58:37">-&gt;</operator><name pos:start="58:38" pos:end="58:44">bgcolor</name></name></expr></argument>, <argument pos:start="58:47" pos:end="58:62"><expr pos:start="58:47" pos:end="58:62"><name pos:start="58:47" pos:end="58:62"><name pos:start="58:47" pos:end="58:52">region</name><operator pos:start="58:53" pos:end="58:54">-&gt;</operator><name pos:start="58:55" pos:end="58:62">buf_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="59:9" pos:end="59:62"><expr pos:start="59:9" pos:end="59:61"><call pos:start="59:9" pos:end="59:61"><name pos:start="59:9" pos:end="59:15">ff_dlog</name><argument_list pos:start="59:16" pos:end="59:61">(<argument pos:start="59:17" pos:end="59:21"><expr pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:21">avctx</name></expr></argument>, <argument pos:start="59:24" pos:end="59:43"><expr pos:start="59:24" pos:end="59:43"><literal type="string" pos:start="59:24" pos:end="59:43">"Fill region (%d)\n"</literal></expr></argument>, <argument pos:start="59:46" pos:end="59:60"><expr pos:start="59:46" pos:end="59:60"><name pos:start="59:46" pos:end="59:60"><name pos:start="59:46" pos:end="59:51">region</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:60">bgcolor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="60:5" pos:end="60:44"><expr pos:start="60:5" pos:end="60:43"><call pos:start="60:5" pos:end="60:43"><name pos:start="60:5" pos:end="60:30">delete_region_display_list</name><argument_list pos:start="60:31" pos:end="60:43">(<argument pos:start="60:32" pos:end="60:34"><expr pos:start="60:32" pos:end="60:34"><name pos:start="60:32" pos:end="60:34">ctx</name></expr></argument>, <argument pos:start="60:37" pos:end="60:42"><expr pos:start="60:37" pos:end="60:42"><name pos:start="60:37" pos:end="60:42">region</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="61:5" pos:end="89:13">while <condition pos:start="61:11" pos:end="61:29">(<expr pos:start="61:12" pos:end="61:28"><name pos:start="61:12" pos:end="61:14">buf</name> <operator pos:start="61:16" pos:end="61:16">+</operator> <literal type="number" pos:start="61:18" pos:end="61:18">5</literal> <operator pos:start="61:20" pos:end="61:20">&lt;</operator> <name pos:start="61:22" pos:end="61:28">buf_end</name></expr>)</condition> <block pos:start="61:31" pos:end="89:13">{<block_content pos:start="62:9" pos:end="89:13">
        <expr_stmt pos:start="62:9" pos:end="62:33"><expr pos:start="62:9" pos:end="62:32"><name pos:start="62:9" pos:end="62:17">object_id</name> <operator pos:start="62:19" pos:end="62:19">=</operator> <call pos:start="62:21" pos:end="62:32"><name pos:start="62:21" pos:end="62:27">AV_RB16</name><argument_list pos:start="62:28" pos:end="62:32">(<argument pos:start="62:29" pos:end="62:31"><expr pos:start="62:29" pos:end="62:31"><name pos:start="62:29" pos:end="62:31">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:17"><expr pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:11">buf</name> <operator pos:start="63:13" pos:end="63:14">+=</operator> <literal type="number" pos:start="63:16" pos:end="63:16">2</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="64:9" pos:end="64:44"><expr pos:start="64:9" pos:end="64:43"><name pos:start="64:9" pos:end="64:14">object</name> <operator pos:start="64:16" pos:end="64:16">=</operator> <call pos:start="64:18" pos:end="64:43"><name pos:start="64:18" pos:end="64:27">get_object</name><argument_list pos:start="64:28" pos:end="64:43">(<argument pos:start="64:29" pos:end="64:31"><expr pos:start="64:29" pos:end="64:31"><name pos:start="64:29" pos:end="64:31">ctx</name></expr></argument>, <argument pos:start="64:34" pos:end="64:42"><expr pos:start="64:34" pos:end="64:42"><name pos:start="64:34" pos:end="64:42">object_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="65:9" pos:end="89:13"><if pos:start="65:9" pos:end="89:13">if <condition pos:start="65:12" pos:end="65:20">(<expr pos:start="65:13" pos:end="65:19"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:19">object</name></expr>)</condition> <block pos:start="65:22" pos:end="89:13">{<block_content pos:start="66:13" pos:end="89:13">
            <expr_stmt pos:start="66:13" pos:end="66:54"><expr pos:start="66:13" pos:end="66:53"><name pos:start="66:13" pos:end="66:18">object</name> <operator pos:start="66:20" pos:end="66:20">=</operator> <call pos:start="66:22" pos:end="66:53"><name pos:start="66:22" pos:end="66:31">av_mallocz</name><argument_list pos:start="66:32" pos:end="66:53">(<argument pos:start="66:33" pos:end="66:52"><expr pos:start="66:33" pos:end="66:52"><sizeof pos:start="66:33" pos:end="66:52">sizeof<argument_list pos:start="66:39" pos:end="66:52">(<argument pos:start="66:40" pos:end="66:51"><expr pos:start="66:40" pos:end="66:51"><name pos:start="66:40" pos:end="66:51">DVBSubObject</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="67:13" pos:end="68:39"><if pos:start="67:13" pos:end="68:39">if <condition pos:start="67:16" pos:end="67:24">(<expr pos:start="67:17" pos:end="67:23"><operator pos:start="67:17" pos:end="67:17">!</operator><name pos:start="67:18" pos:end="67:23">object</name></expr>)</condition><block type="pseudo" pos:start="68:17" pos:end="68:39"><block_content pos:start="68:17" pos:end="68:39">
                <return pos:start="68:17" pos:end="68:39">return <expr pos:start="68:24" pos:end="68:38"><call pos:start="68:24" pos:end="68:38"><name pos:start="68:24" pos:end="68:30">AVERROR</name><argument_list pos:start="68:31" pos:end="68:38">(<argument pos:start="68:32" pos:end="68:37"><expr pos:start="68:32" pos:end="68:37"><name pos:start="68:32" pos:end="68:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:18">object</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:22">id</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:34">object_id</name></expr>;</expr_stmt>
            <expr_stmt pos:start="70:13" pos:end="70:44"><expr pos:start="70:13" pos:end="70:43"><name pos:start="70:13" pos:end="70:24"><name pos:start="70:13" pos:end="70:18">object</name><operator pos:start="70:19" pos:end="70:20">-&gt;</operator><name pos:start="70:21" pos:end="70:24">next</name></name> <operator pos:start="70:26" pos:end="70:26">=</operator> <name pos:start="70:28" pos:end="70:43"><name pos:start="70:28" pos:end="70:30">ctx</name><operator pos:start="70:31" pos:end="70:32">-&gt;</operator><name pos:start="70:33" pos:end="70:43">object_list</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="71:13" pos:end="71:38"><expr pos:start="71:13" pos:end="71:37"><name pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:15">ctx</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:28">object_list</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:37">object</name></expr>;</expr_stmt>
        <expr_stmt pos:start="72:9" pos:end="72:35"><expr pos:start="72:9" pos:end="72:34"><name pos:start="72:9" pos:end="72:20"><name pos:start="72:9" pos:end="72:14">object</name><operator pos:start="72:15" pos:end="72:16">-&gt;</operator><name pos:start="72:17" pos:end="72:20">type</name></name> <operator pos:start="72:22" pos:end="72:22">=</operator> <operator pos:start="72:24" pos:end="72:24">(</operator><operator pos:start="72:25" pos:end="72:25">*</operator><name pos:start="72:26" pos:end="72:28">buf</name><operator pos:start="72:29" pos:end="72:29">)</operator> <operator pos:start="72:31" pos:end="72:32">&gt;&gt;</operator> <literal type="number" pos:start="72:34" pos:end="72:34">6</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="73:9" pos:end="73:58"><expr pos:start="73:9" pos:end="73:57"><name pos:start="73:9" pos:end="73:15">display</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:57"><name pos:start="73:19" pos:end="73:28">av_mallocz</name><argument_list pos:start="73:29" pos:end="73:57">(<argument pos:start="73:30" pos:end="73:56"><expr pos:start="73:30" pos:end="73:56"><sizeof pos:start="73:30" pos:end="73:56">sizeof<argument_list pos:start="73:36" pos:end="73:56">(<argument pos:start="73:37" pos:end="73:55"><expr pos:start="73:37" pos:end="73:55"><name pos:start="73:37" pos:end="73:55">DVBSubObjectDisplay</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="74:9" pos:end="75:35"><if pos:start="74:9" pos:end="75:35">if <condition pos:start="74:12" pos:end="74:21">(<expr pos:start="74:13" pos:end="74:20"><operator pos:start="74:13" pos:end="74:13">!</operator><name pos:start="74:14" pos:end="74:20">display</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:35"><block_content pos:start="75:13" pos:end="75:35">
            <return pos:start="75:13" pos:end="75:35">return <expr pos:start="75:20" pos:end="75:34"><call pos:start="75:20" pos:end="75:34"><name pos:start="75:20" pos:end="75:26">AVERROR</name><argument_list pos:start="75:27" pos:end="75:34">(<argument pos:start="75:28" pos:end="75:33"><expr pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="76:9" pos:end="76:39"><expr pos:start="76:9" pos:end="76:38"><name pos:start="76:9" pos:end="76:26"><name pos:start="76:9" pos:end="76:15">display</name><operator pos:start="76:16" pos:end="76:17">-&gt;</operator><name pos:start="76:18" pos:end="76:26">object_id</name></name> <operator pos:start="76:28" pos:end="76:28">=</operator> <name pos:start="76:30" pos:end="76:38">object_id</name></expr>;</expr_stmt>
        <expr_stmt pos:start="77:9" pos:end="77:39"><expr pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:15">display</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:26">region_id</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:38">region_id</name></expr>;</expr_stmt>
        <expr_stmt pos:start="78:9" pos:end="78:46"><expr pos:start="78:9" pos:end="78:45"><name pos:start="78:9" pos:end="78:22"><name pos:start="78:9" pos:end="78:15">display</name><operator pos:start="78:16" pos:end="78:17">-&gt;</operator><name pos:start="78:18" pos:end="78:22">x_pos</name></name> <operator pos:start="78:24" pos:end="78:24">=</operator> <call pos:start="78:26" pos:end="78:37"><name pos:start="78:26" pos:end="78:32">AV_RB16</name><argument_list pos:start="78:33" pos:end="78:37">(<argument pos:start="78:34" pos:end="78:36"><expr pos:start="78:34" pos:end="78:36"><name pos:start="78:34" pos:end="78:36">buf</name></expr></argument>)</argument_list></call> <operator pos:start="78:39" pos:end="78:39">&amp;</operator> <literal type="number" pos:start="78:41" pos:end="78:45">0xfff</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="79:9" pos:end="79:17"><expr pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:11">buf</name> <operator pos:start="79:13" pos:end="79:14">+=</operator> <literal type="number" pos:start="79:16" pos:end="79:16">2</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="80:9" pos:end="80:46"><expr pos:start="80:9" pos:end="80:45"><name pos:start="80:9" pos:end="80:22"><name pos:start="80:9" pos:end="80:15">display</name><operator pos:start="80:16" pos:end="80:17">-&gt;</operator><name pos:start="80:18" pos:end="80:22">y_pos</name></name> <operator pos:start="80:24" pos:end="80:24">=</operator> <call pos:start="80:26" pos:end="80:37"><name pos:start="80:26" pos:end="80:32">AV_RB16</name><argument_list pos:start="80:33" pos:end="80:37">(<argument pos:start="80:34" pos:end="80:36"><expr pos:start="80:34" pos:end="80:36"><name pos:start="80:34" pos:end="80:36">buf</name></expr></argument>)</argument_list></call> <operator pos:start="80:39" pos:end="80:39">&amp;</operator> <literal type="number" pos:start="80:41" pos:end="80:45">0xfff</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="81:9" pos:end="81:17"><expr pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:11">buf</name> <operator pos:start="81:13" pos:end="81:14">+=</operator> <literal type="number" pos:start="81:16" pos:end="81:16">2</literal></expr>;</expr_stmt>
        <if_stmt pos:start="82:9" pos:end="89:13"><if pos:start="82:9" pos:end="89:13">if <condition pos:start="82:12" pos:end="82:72">(<expr pos:start="82:13" pos:end="82:71"><operator pos:start="82:13" pos:end="82:13">(</operator><name pos:start="82:14" pos:end="82:25"><name pos:start="82:14" pos:end="82:19">object</name><operator pos:start="82:20" pos:end="82:21">-&gt;</operator><name pos:start="82:22" pos:end="82:25">type</name></name> <operator pos:start="82:27" pos:end="82:28">==</operator> <literal type="number" pos:start="82:30" pos:end="82:30">1</literal> <operator pos:start="82:32" pos:end="82:33">||</operator> <name pos:start="82:35" pos:end="82:46"><name pos:start="82:35" pos:end="82:40">object</name><operator pos:start="82:41" pos:end="82:42">-&gt;</operator><name pos:start="82:43" pos:end="82:46">type</name></name> <operator pos:start="82:48" pos:end="82:49">==</operator> <literal type="number" pos:start="82:51" pos:end="82:51">2</literal><operator pos:start="82:52" pos:end="82:52">)</operator> <operator pos:start="82:54" pos:end="82:55">&amp;&amp;</operator> <name pos:start="82:57" pos:end="82:59">buf</name><operator pos:start="82:60" pos:end="82:60">+</operator><literal type="number" pos:start="82:61" pos:end="82:61">1</literal> <operator pos:start="82:63" pos:end="82:63">&lt;</operator> <name pos:start="82:65" pos:end="82:71">buf_end</name></expr>)</condition> <block pos:start="82:74" pos:end="89:13">{<block_content pos:start="83:13" pos:end="89:13">
            <expr_stmt pos:start="83:13" pos:end="83:38"><expr pos:start="83:13" pos:end="83:37"><name pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:19">display</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:28">fgcolor</name></name> <operator pos:start="83:30" pos:end="83:30">=</operator> <operator pos:start="83:32" pos:end="83:32">*</operator><name pos:start="83:33" pos:end="83:35">buf</name><operator pos:start="83:36" pos:end="83:37">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="84:13" pos:end="84:38"><expr pos:start="84:13" pos:end="84:37"><name pos:start="84:13" pos:end="84:28"><name pos:start="84:13" pos:end="84:19">display</name><operator pos:start="84:20" pos:end="84:21">-&gt;</operator><name pos:start="84:22" pos:end="84:28">bgcolor</name></name> <operator pos:start="84:30" pos:end="84:30">=</operator> <operator pos:start="84:32" pos:end="84:32">*</operator><name pos:start="84:33" pos:end="84:35">buf</name><operator pos:start="84:36" pos:end="84:37">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="85:9" pos:end="85:57"><expr pos:start="85:9" pos:end="85:56"><name pos:start="85:9" pos:end="85:33"><name pos:start="85:9" pos:end="85:15">display</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:33">region_list_next</name></name> <operator pos:start="85:35" pos:end="85:35">=</operator> <name pos:start="85:37" pos:end="85:56"><name pos:start="85:37" pos:end="85:42">region</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:56">display_list</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="86:9" pos:end="86:39"><expr pos:start="86:9" pos:end="86:38"><name pos:start="86:9" pos:end="86:28"><name pos:start="86:9" pos:end="86:14">region</name><operator pos:start="86:15" pos:end="86:16">-&gt;</operator><name pos:start="86:17" pos:end="86:28">display_list</name></name> <operator pos:start="86:30" pos:end="86:30">=</operator> <name pos:start="86:32" pos:end="86:38">display</name></expr>;</expr_stmt>
        <expr_stmt pos:start="87:9" pos:end="87:57"><expr pos:start="87:9" pos:end="87:56"><name pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:15">display</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:33">object_list_next</name></name> <operator pos:start="87:35" pos:end="87:35">=</operator> <name pos:start="87:37" pos:end="87:56"><name pos:start="87:37" pos:end="87:42">object</name><operator pos:start="87:43" pos:end="87:44">-&gt;</operator><name pos:start="87:45" pos:end="87:56">display_list</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="88:9" pos:end="88:39"><expr pos:start="88:9" pos:end="88:38"><name pos:start="88:9" pos:end="88:28"><name pos:start="88:9" pos:end="88:14">object</name><operator pos:start="88:15" pos:end="88:16">-&gt;</operator><name pos:start="88:17" pos:end="88:28">display_list</name></name> <operator pos:start="88:30" pos:end="88:30">=</operator> <name pos:start="88:32" pos:end="88:38">display</name></expr>;</expr_stmt>
    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
