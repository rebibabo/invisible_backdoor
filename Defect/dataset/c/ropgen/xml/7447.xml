<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7447.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">generate_new_codebooks</name><parameter_list pos:start="1:35" pos:end="1:74">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:45">RoqContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">enc</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:73"><decl pos:start="1:53" pos:end="1:73"><type pos:start="1:53" pos:end="1:73"><name pos:start="1:53" pos:end="1:63">RoqTempdata</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:73">tempData</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:22">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>,<decl pos:start="5:11" pos:end="5:11"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:11" pos:end="5:11">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">RoqCodebooks</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:27">codebooks</name> <init pos:start="7:29" pos:end="7:50">= <expr pos:start="7:31" pos:end="7:50"><operator pos:start="7:31" pos:end="7:31">&amp;</operator><name pos:start="7:32" pos:end="7:50"><name pos:start="7:32" pos:end="7:39">tempData</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:50">codebooks</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">max</name> <init pos:start="9:13" pos:end="9:39">= <expr pos:start="9:15" pos:end="9:39"><name pos:start="9:15" pos:end="9:24"><name pos:start="9:15" pos:end="9:17">enc</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:24">width</name></name><operator pos:start="9:25" pos:end="9:25">*</operator><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:28">enc</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:36">height</name></name><operator pos:start="9:37" pos:end="9:37">/</operator><literal type="number" pos:start="9:38" pos:end="9:39">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:15">mb2</name><index pos:start="11:16" pos:end="11:20">[<expr pos:start="11:17" pos:end="11:19"><literal type="number" pos:start="11:17" pos:end="11:17">3</literal><operator pos:start="11:18" pos:end="11:18">*</operator><literal type="number" pos:start="11:19" pos:end="11:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:67"><decl pos:start="13:5" pos:end="13:66"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">roq_cell</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:22">results4</name> <init pos:start="13:24" pos:end="13:66">= <expr pos:start="13:26" pos:end="13:66"><call pos:start="13:26" pos:end="13:66"><name pos:start="13:26" pos:end="13:34">av_malloc</name><argument_list pos:start="13:35" pos:end="13:66">(<argument pos:start="13:36" pos:end="13:65"><expr pos:start="13:36" pos:end="13:65"><sizeof pos:start="13:36" pos:end="13:51">sizeof<argument_list pos:start="13:42" pos:end="13:51">(<argument pos:start="13:43" pos:end="13:50"><expr pos:start="13:43" pos:end="13:50"><name pos:start="13:43" pos:end="13:50">roq_cell</name></expr></argument>)</argument_list></sizeof><operator pos:start="13:52" pos:end="13:52">*</operator><name pos:start="13:53" pos:end="13:63">MAX_CBS_4x4</name><operator pos:start="13:64" pos:end="13:64">*</operator><literal type="number" pos:start="13:65" pos:end="13:65">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:56"><decl pos:start="15:5" pos:end="15:55"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:24">yuvClusters</name><init pos:start="15:25" pos:end="15:55">=<expr pos:start="15:26" pos:end="15:55"><call pos:start="15:26" pos:end="15:55"><name pos:start="15:26" pos:end="15:34">av_malloc</name><argument_list pos:start="15:35" pos:end="15:55">(<argument pos:start="15:36" pos:end="15:54"><expr pos:start="15:36" pos:end="15:54"><sizeof pos:start="15:36" pos:end="15:46">sizeof<argument_list pos:start="15:42" pos:end="15:46">(<argument pos:start="15:43" pos:end="15:45"><expr pos:start="15:43" pos:end="15:45"><name pos:start="15:43" pos:end="15:45">int</name></expr></argument>)</argument_list></sizeof><operator pos:start="15:47" pos:end="15:47">*</operator><name pos:start="15:48" pos:end="15:50">max</name><operator pos:start="15:51" pos:end="15:51">*</operator><literal type="number" pos:start="15:52" pos:end="15:52">6</literal><operator pos:start="15:53" pos:end="15:53">*</operator><literal type="number" pos:start="15:54" pos:end="15:54">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:49"><decl pos:start="17:5" pos:end="17:48"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:7">int</name> <modifier pos:start="17:9" pos:end="17:9">*</modifier></type><name pos:start="17:10" pos:end="17:15">points</name> <init pos:start="17:17" pos:end="17:48">= <expr pos:start="17:19" pos:end="17:48"><call pos:start="17:19" pos:end="17:48"><name pos:start="17:19" pos:end="17:27">av_malloc</name><argument_list pos:start="17:28" pos:end="17:48">(<argument pos:start="17:29" pos:end="17:47"><expr pos:start="17:29" pos:end="17:47"><name pos:start="17:29" pos:end="17:31">max</name><operator pos:start="17:32" pos:end="17:32">*</operator><literal type="number" pos:start="17:33" pos:end="17:33">6</literal><operator pos:start="17:34" pos:end="17:34">*</operator><literal type="number" pos:start="17:35" pos:end="17:35">4</literal><operator pos:start="17:36" pos:end="17:36">*</operator><sizeof pos:start="17:37" pos:end="17:47">sizeof<argument_list pos:start="17:43" pos:end="17:47">(<argument pos:start="17:44" pos:end="17:46"><expr pos:start="17:44" pos:end="17:46"><name pos:start="17:44" pos:end="17:46">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:13"><decl pos:start="19:5" pos:end="19:12"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">bias</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:28">/* Subsample YUV data */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:77"><expr pos:start="25:5" pos:end="25:76"><call pos:start="25:5" pos:end="25:76"><name pos:start="25:5" pos:end="25:19">create_clusters</name><argument_list pos:start="25:20" pos:end="25:76">(<argument pos:start="25:21" pos:end="25:37"><expr pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:23">enc</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:37">frame_to_enc</name></name></expr></argument>, <argument pos:start="25:40" pos:end="25:49"><expr pos:start="25:40" pos:end="25:49"><name pos:start="25:40" pos:end="25:49"><name pos:start="25:40" pos:end="25:42">enc</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:49">width</name></name></expr></argument>, <argument pos:start="25:52" pos:end="25:62"><expr pos:start="25:52" pos:end="25:62"><name pos:start="25:52" pos:end="25:62"><name pos:start="25:52" pos:end="25:54">enc</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:62">height</name></name></expr></argument>, <argument pos:start="25:65" pos:end="25:75"><expr pos:start="25:65" pos:end="25:75"><name pos:start="25:65" pos:end="25:75">yuvClusters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:47">/* Cast to integer and apply chroma bias */</comment>

    <for pos:start="31:5" pos:end="37:5">for <control pos:start="31:9" pos:end="31:28">(<init pos:start="31:10" pos:end="31:13"><expr pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:10">i</name><operator pos:start="31:11" pos:end="31:11">=</operator><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</init> <condition pos:start="31:15" pos:end="31:23"><expr pos:start="31:15" pos:end="31:22"><name pos:start="31:15" pos:end="31:15">i</name><operator pos:start="31:16" pos:end="31:16">&lt;</operator><name pos:start="31:17" pos:end="31:19">max</name><operator pos:start="31:20" pos:end="31:20">*</operator><literal type="number" pos:start="31:21" pos:end="31:22">24</literal></expr>;</condition> <incr pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:25">i</name><operator pos:start="31:26" pos:end="31:27">++</operator></expr></incr>)</control> <block pos:start="31:30" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:40">

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:12">bias</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <ternary pos:start="33:16" pos:end="33:42"><condition pos:start="33:16" pos:end="33:26"><expr pos:start="33:16" pos:end="33:24"><operator pos:start="33:16" pos:end="33:16">(</operator><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:18">i</name><operator pos:start="33:19" pos:end="33:19">%</operator><literal type="number" pos:start="33:20" pos:end="33:20">6</literal><operator pos:start="33:21" pos:end="33:21">)</operator><operator pos:start="33:22" pos:end="33:22">&lt;</operator><literal type="number" pos:start="33:23" pos:end="33:23">4</literal><operator pos:start="33:24" pos:end="33:24">)</operator></expr> ?</condition><then pos:start="33:28" pos:end="33:28"> <expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">1</literal></expr> </then><else pos:start="33:30" pos:end="33:42">: <expr pos:start="33:32" pos:end="33:42"><name pos:start="33:32" pos:end="33:42">CHROMA_BIAS</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:14">points</name><index pos:start="35:15" pos:end="35:17">[<expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">i</name></expr>]</index></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:24">bias</name><operator pos:start="35:25" pos:end="35:25">*</operator><name pos:start="35:26" pos:end="35:39"><name pos:start="35:26" pos:end="35:36">yuvClusters</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><name pos:start="35:38" pos:end="35:38">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="41:5" pos:end="41:30">/* Create 4x4 codebooks */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:76"><expr pos:start="43:5" pos:end="43:75"><call pos:start="43:5" pos:end="43:75"><name pos:start="43:5" pos:end="43:21">generate_codebook</name><argument_list pos:start="43:22" pos:end="43:75">(<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:25">enc</name></expr></argument>, <argument pos:start="43:28" pos:end="43:35"><expr pos:start="43:28" pos:end="43:35"><name pos:start="43:28" pos:end="43:35">tempData</name></expr></argument>, <argument pos:start="43:38" pos:end="43:43"><expr pos:start="43:38" pos:end="43:43"><name pos:start="43:38" pos:end="43:43">points</name></expr></argument>, <argument pos:start="43:46" pos:end="43:48"><expr pos:start="43:46" pos:end="43:48"><name pos:start="43:46" pos:end="43:48">max</name></expr></argument>, <argument pos:start="43:51" pos:end="43:58"><expr pos:start="43:51" pos:end="43:58"><name pos:start="43:51" pos:end="43:58">results4</name></expr></argument>, <argument pos:start="43:61" pos:end="43:61"><expr pos:start="43:61" pos:end="43:61"><literal type="number" pos:start="43:61" pos:end="43:61">4</literal></expr></argument>, <argument pos:start="43:64" pos:end="43:74"><expr pos:start="43:64" pos:end="43:74"><name pos:start="43:64" pos:end="43:74">MAX_CBS_4x4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:13">codebooks</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:21">numCB4</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:35">MAX_CBS_4x4</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:57"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:25"><name pos:start="51:5" pos:end="51:12">tempData</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:25">closest_cb2</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <call pos:start="51:29" pos:end="51:56"><name pos:start="51:29" pos:end="51:37">av_malloc</name><argument_list pos:start="51:38" pos:end="51:56">(<argument pos:start="51:39" pos:end="51:55"><expr pos:start="51:39" pos:end="51:55"><name pos:start="51:39" pos:end="51:41">max</name><operator pos:start="51:42" pos:end="51:42">*</operator><literal type="number" pos:start="51:43" pos:end="51:43">4</literal><operator pos:start="51:44" pos:end="51:44">*</operator><sizeof pos:start="51:45" pos:end="51:55">sizeof<argument_list pos:start="51:51" pos:end="51:55">(<argument pos:start="51:52" pos:end="51:54"><expr pos:start="51:52" pos:end="51:54"><name pos:start="51:52" pos:end="51:54">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:30">/* Create 2x2 codebooks */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:80"><expr pos:start="57:5" pos:end="57:79"><call pos:start="57:5" pos:end="57:79"><name pos:start="57:5" pos:end="57:21">generate_codebook</name><argument_list pos:start="57:22" pos:end="57:79">(<argument pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">enc</name></expr></argument>, <argument pos:start="57:28" pos:end="57:35"><expr pos:start="57:28" pos:end="57:35"><name pos:start="57:28" pos:end="57:35">tempData</name></expr></argument>, <argument pos:start="57:38" pos:end="57:43"><expr pos:start="57:38" pos:end="57:43"><name pos:start="57:38" pos:end="57:43">points</name></expr></argument>, <argument pos:start="57:46" pos:end="57:50"><expr pos:start="57:46" pos:end="57:50"><name pos:start="57:46" pos:end="57:48">max</name><operator pos:start="57:49" pos:end="57:49">*</operator><literal type="number" pos:start="57:50" pos:end="57:50">4</literal></expr></argument>, <argument pos:start="57:53" pos:end="57:62"><expr pos:start="57:53" pos:end="57:62"><name pos:start="57:53" pos:end="57:62"><name pos:start="57:53" pos:end="57:55">enc</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:62">cb2x2</name></name></expr></argument>, <argument pos:start="57:65" pos:end="57:65"><expr pos:start="57:65" pos:end="57:65"><literal type="number" pos:start="57:65" pos:end="57:65">2</literal></expr></argument>, <argument pos:start="57:68" pos:end="57:78"><expr pos:start="57:68" pos:end="57:78"><name pos:start="57:68" pos:end="57:78">MAX_CBS_2x2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:13">codebooks</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:21">numCB2</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:35">MAX_CBS_2x2</name></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:38">/* Unpack 2x2 codebook clusters */</comment>

    <for pos:start="67:5" pos:end="69:75">for <control pos:start="67:9" pos:end="67:39">(<init pos:start="67:10" pos:end="67:13"><expr pos:start="67:10" pos:end="67:12"><name pos:start="67:10" pos:end="67:10">i</name><operator pos:start="67:11" pos:end="67:11">=</operator><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</init> <condition pos:start="67:15" pos:end="67:34"><expr pos:start="67:15" pos:end="67:33"><name pos:start="67:15" pos:end="67:15">i</name><operator pos:start="67:16" pos:end="67:16">&lt;</operator><name pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:25">codebooks</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:33">numCB2</name></name></expr>;</condition> <incr pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><name pos:start="67:36" pos:end="67:36">i</name><operator pos:start="67:37" pos:end="67:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:9" pos:end="69:75"><block_content pos:start="69:9" pos:end="69:75">

        <expr_stmt pos:start="69:9" pos:end="69:75"><expr pos:start="69:9" pos:end="69:74"><call pos:start="69:9" pos:end="69:74"><name pos:start="69:9" pos:end="69:23">unpack_roq_cell</name><argument_list pos:start="69:24" pos:end="69:74">(<argument pos:start="69:25" pos:end="69:38"><expr pos:start="69:25" pos:end="69:38"><name pos:start="69:25" pos:end="69:34"><name pos:start="69:25" pos:end="69:27">enc</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:34">cb2x2</name></name> <operator pos:start="69:36" pos:end="69:36">+</operator> <name pos:start="69:38" pos:end="69:38">i</name></expr></argument>, <argument pos:start="69:41" pos:end="69:73"><expr pos:start="69:41" pos:end="69:73"><name pos:start="69:41" pos:end="69:63"><name pos:start="69:41" pos:end="69:49">codebooks</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:63">unpacked_cb2</name></name> <operator pos:start="69:65" pos:end="69:65">+</operator> <name pos:start="69:67" pos:end="69:67">i</name><operator pos:start="69:68" pos:end="69:68">*</operator><literal type="number" pos:start="69:69" pos:end="69:69">2</literal><operator pos:start="69:70" pos:end="69:70">*</operator><literal type="number" pos:start="69:71" pos:end="69:71">2</literal><operator pos:start="69:72" pos:end="69:72">*</operator><literal type="number" pos:start="69:73" pos:end="69:73">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="73:5" pos:end="73:71">/* Index all 4x4 entries to the 2x2 entries, unpack, and enlarge */</comment>

    <for pos:start="75:5" pos:end="95:5">for <control pos:start="75:9" pos:end="75:39">(<init pos:start="75:10" pos:end="75:13"><expr pos:start="75:10" pos:end="75:12"><name pos:start="75:10" pos:end="75:10">i</name><operator pos:start="75:11" pos:end="75:11">=</operator><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</init> <condition pos:start="75:15" pos:end="75:34"><expr pos:start="75:15" pos:end="75:33"><name pos:start="75:15" pos:end="75:15">i</name><operator pos:start="75:16" pos:end="75:16">&lt;</operator><name pos:start="75:17" pos:end="75:33"><name pos:start="75:17" pos:end="75:25">codebooks</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:33">numCB4</name></name></expr>;</condition> <incr pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><name pos:start="75:36" pos:end="75:36">i</name><operator pos:start="75:37" pos:end="75:38">++</operator></expr></incr>)</control> <block pos:start="75:41" pos:end="95:5">{<block_content pos:start="77:9" pos:end="93:68">

        <for pos:start="77:9" pos:end="85:9">for <control pos:start="77:13" pos:end="77:27">(<init pos:start="77:14" pos:end="77:17"><expr pos:start="77:14" pos:end="77:16"><name pos:start="77:14" pos:end="77:14">j</name><operator pos:start="77:15" pos:end="77:15">=</operator><literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>;</init> <condition pos:start="77:19" pos:end="77:22"><expr pos:start="77:19" pos:end="77:21"><name pos:start="77:19" pos:end="77:19">j</name><operator pos:start="77:20" pos:end="77:20">&lt;</operator><literal type="number" pos:start="77:21" pos:end="77:21">4</literal></expr>;</condition> <incr pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:24">j</name><operator pos:start="77:25" pos:end="77:26">++</operator></expr></incr>)</control> <block pos:start="77:29" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:47">

            <expr_stmt pos:start="79:13" pos:end="79:53"><expr pos:start="79:13" pos:end="79:52"><call pos:start="79:13" pos:end="79:52"><name pos:start="79:13" pos:end="79:27">unpack_roq_cell</name><argument_list pos:start="79:28" pos:end="79:52">(<argument pos:start="79:29" pos:end="79:46"><expr pos:start="79:29" pos:end="79:46"><operator pos:start="79:29" pos:end="79:29">&amp;</operator><name pos:start="79:30" pos:end="79:46"><name pos:start="79:30" pos:end="79:37">results4</name><index pos:start="79:38" pos:end="79:46">[<expr pos:start="79:39" pos:end="79:45"><literal type="number" pos:start="79:39" pos:end="79:39">4</literal><operator pos:start="79:40" pos:end="79:40">*</operator><name pos:start="79:41" pos:end="79:41">i</name> <operator pos:start="79:43" pos:end="79:43">+</operator> <name pos:start="79:45" pos:end="79:45">j</name></expr>]</index></name></expr></argument>, <argument pos:start="79:49" pos:end="79:51"><expr pos:start="79:49" pos:end="79:51"><name pos:start="79:49" pos:end="79:51">mb2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="83:47"><expr pos:start="81:13" pos:end="83:46"><call pos:start="81:13" pos:end="83:46"><name pos:start="81:13" pos:end="81:20">index_mb</name><argument_list pos:start="81:21" pos:end="83:46">(<argument pos:start="81:22" pos:end="81:24"><expr pos:start="81:22" pos:end="81:24"><name pos:start="81:22" pos:end="81:24">mb2</name></expr></argument>, <argument pos:start="81:27" pos:end="81:49"><expr pos:start="81:27" pos:end="81:49"><name pos:start="81:27" pos:end="81:49"><name pos:start="81:27" pos:end="81:35">codebooks</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:49">unpacked_cb2</name></name></expr></argument>, <argument pos:start="81:52" pos:end="81:68"><expr pos:start="81:52" pos:end="81:68"><name pos:start="81:52" pos:end="81:68"><name pos:start="81:52" pos:end="81:60">codebooks</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:68">numCB2</name></name></expr></argument>,

                     <argument pos:start="83:22" pos:end="83:42"><expr pos:start="83:22" pos:end="83:42"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:35"><name pos:start="83:23" pos:end="83:25">enc</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:32">cb4x4</name><index pos:start="83:33" pos:end="83:35">[<expr pos:start="83:34" pos:end="83:34"><name pos:start="83:34" pos:end="83:34">i</name></expr>]</index></name><operator pos:start="83:36" pos:end="83:36">.</operator><name pos:start="83:37" pos:end="83:42"><name pos:start="83:37" pos:end="83:39">idx</name><index pos:start="83:40" pos:end="83:42">[<expr pos:start="83:41" pos:end="83:41"><name pos:start="83:41" pos:end="83:41">j</name></expr>]</index></name></expr></argument>, <argument pos:start="83:45" pos:end="83:45"><expr pos:start="83:45" pos:end="83:45"><literal type="number" pos:start="83:45" pos:end="83:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="87:9" pos:end="89:60"><expr pos:start="87:9" pos:end="89:59"><call pos:start="87:9" pos:end="89:59"><name pos:start="87:9" pos:end="87:24">unpack_roq_qcell</name><argument_list pos:start="87:25" pos:end="89:59">(<argument pos:start="87:26" pos:end="87:48"><expr pos:start="87:26" pos:end="87:48"><name pos:start="87:26" pos:end="87:48"><name pos:start="87:26" pos:end="87:34">codebooks</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:48">unpacked_cb2</name></name></expr></argument>, <argument pos:start="87:51" pos:end="87:64"><expr pos:start="87:51" pos:end="87:64"><name pos:start="87:51" pos:end="87:60"><name pos:start="87:51" pos:end="87:53">enc</name><operator pos:start="87:54" pos:end="87:55">-&gt;</operator><name pos:start="87:56" pos:end="87:60">cb4x4</name></name> <operator pos:start="87:62" pos:end="87:62">+</operator> <name pos:start="87:64" pos:end="87:64">i</name></expr></argument>,

                         <argument pos:start="89:26" pos:end="89:58"><expr pos:start="89:26" pos:end="89:58"><name pos:start="89:26" pos:end="89:48"><name pos:start="89:26" pos:end="89:34">codebooks</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:48">unpacked_cb4</name></name> <operator pos:start="89:50" pos:end="89:50">+</operator> <name pos:start="89:52" pos:end="89:52">i</name><operator pos:start="89:53" pos:end="89:53">*</operator><literal type="number" pos:start="89:54" pos:end="89:54">4</literal><operator pos:start="89:55" pos:end="89:55">*</operator><literal type="number" pos:start="89:56" pos:end="89:56">4</literal><operator pos:start="89:57" pos:end="89:57">*</operator><literal type="number" pos:start="89:58" pos:end="89:58">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="93:68"><expr pos:start="91:9" pos:end="93:67"><call pos:start="91:9" pos:end="93:67"><name pos:start="91:9" pos:end="91:23">enlarge_roq_mb4</name><argument_list pos:start="91:24" pos:end="93:67">(<argument pos:start="91:25" pos:end="91:57"><expr pos:start="91:25" pos:end="91:57"><name pos:start="91:25" pos:end="91:47"><name pos:start="91:25" pos:end="91:33">codebooks</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:47">unpacked_cb4</name></name> <operator pos:start="91:49" pos:end="91:49">+</operator> <name pos:start="91:51" pos:end="91:51">i</name><operator pos:start="91:52" pos:end="91:52">*</operator><literal type="number" pos:start="91:53" pos:end="91:53">4</literal><operator pos:start="91:54" pos:end="91:54">*</operator><literal type="number" pos:start="91:55" pos:end="91:55">4</literal><operator pos:start="91:56" pos:end="91:56">*</operator><literal type="number" pos:start="91:57" pos:end="91:57">3</literal></expr></argument>,

                        <argument pos:start="93:25" pos:end="93:66"><expr pos:start="93:25" pos:end="93:66"><name pos:start="93:25" pos:end="93:56"><name pos:start="93:25" pos:end="93:33">codebooks</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:56">unpacked_cb4_enlarged</name></name> <operator pos:start="93:58" pos:end="93:58">+</operator> <name pos:start="93:60" pos:end="93:60">i</name><operator pos:start="93:61" pos:end="93:61">*</operator><literal type="number" pos:start="93:62" pos:end="93:62">8</literal><operator pos:start="93:63" pos:end="93:63">*</operator><literal type="number" pos:start="93:64" pos:end="93:64">8</literal><operator pos:start="93:65" pos:end="93:65">*</operator><literal type="number" pos:start="93:66" pos:end="93:66">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="99:5" pos:end="99:25"><expr pos:start="99:5" pos:end="99:24"><call pos:start="99:5" pos:end="99:24"><name pos:start="99:5" pos:end="99:11">av_free</name><argument_list pos:start="99:12" pos:end="99:24">(<argument pos:start="99:13" pos:end="99:23"><expr pos:start="99:13" pos:end="99:23"><name pos:start="99:13" pos:end="99:23">yuvClusters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:20"><expr pos:start="101:5" pos:end="101:19"><call pos:start="101:5" pos:end="101:19"><name pos:start="101:5" pos:end="101:11">av_free</name><argument_list pos:start="101:12" pos:end="101:19">(<argument pos:start="101:13" pos:end="101:18"><expr pos:start="101:13" pos:end="101:18"><name pos:start="101:13" pos:end="101:18">points</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:22"><expr pos:start="103:5" pos:end="103:21"><call pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:11">av_free</name><argument_list pos:start="103:12" pos:end="103:21">(<argument pos:start="103:13" pos:end="103:20"><expr pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:20">results4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
