<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3107.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:31">imx_serial_read</name><parameter_list pos:start="1:32" pos:end="3:46">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:52">hwaddr</name></type> <name pos:start="1:54" pos:end="1:59">offset</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">unsigned</name></type> <name pos:start="3:42" pos:end="3:45">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="119:1">{<block_content pos:start="7:5" pos:end="117:5">

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">IMXSerialState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:48">= <expr pos:start="7:25" pos:end="7:48"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">IMXSerialState</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator><name pos:start="7:43" pos:end="7:48">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">c</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:46"><expr pos:start="13:5" pos:end="13:45"><call pos:start="13:5" pos:end="13:45"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:45">(<argument pos:start="13:13" pos:end="13:31"><expr pos:start="13:13" pos:end="13:31"><literal type="string" pos:start="13:13" pos:end="13:31">"read(offset=%x)\n"</literal></expr></argument>, <argument pos:start="13:34" pos:end="13:44"><expr pos:start="13:34" pos:end="13:44"><name pos:start="13:34" pos:end="13:39">offset</name> <operator pos:start="13:41" pos:end="13:42">&gt;&gt;</operator> <literal type="number" pos:start="13:44" pos:end="13:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="117:5">switch <condition pos:start="15:12" pos:end="15:24">(<expr pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:18">offset</name> <operator pos:start="15:20" pos:end="15:21">&gt;&gt;</operator> <literal type="number" pos:start="15:23" pos:end="15:23">2</literal></expr>)</condition> <block pos:start="15:26" pos:end="117:5">{<block_content pos:start="17:5" pos:end="115:17">

    <case pos:start="17:5" pos:end="17:13">case <expr pos:start="17:10" pos:end="17:12"><literal type="number" pos:start="17:10" pos:end="17:12">0x0</literal></expr>:</case> <comment type="block" pos:start="17:15" pos:end="17:24">/* URXD */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">c</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:23">readbuff</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="37:9"><if pos:start="21:9" pos:end="37:9">if <condition pos:start="21:12" pos:end="21:38">(<expr pos:start="21:13" pos:end="21:37"><operator pos:start="21:13" pos:end="21:13">!</operator><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:21"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:21">uts1</name></name> <operator pos:start="21:23" pos:end="21:23">&amp;</operator> <name pos:start="21:25" pos:end="21:36">UTS1_RXEMPTY</name><operator pos:start="21:37" pos:end="21:37">)</operator></expr>)</condition> <block pos:start="21:40" pos:end="37:9">{<block_content pos:start="25:13" pos:end="35:42">

            <comment type="block" pos:start="23:13" pos:end="23:36">/* Character is valid */</comment>

            <expr_stmt pos:start="25:13" pos:end="25:30"><expr pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:13">c</name> <operator pos:start="25:15" pos:end="25:16">|=</operator> <name pos:start="25:18" pos:end="25:29">URXD_CHARRDY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:34"><expr pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:19">usr1</name></name> <operator pos:start="27:21" pos:end="27:22">&amp;=</operator> <operator pos:start="27:24" pos:end="27:24">~</operator><name pos:start="27:25" pos:end="27:33">USR1_RRDY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">usr2</name></name> <operator pos:start="29:21" pos:end="29:22">&amp;=</operator> <operator pos:start="29:24" pos:end="29:24">~</operator><name pos:start="29:25" pos:end="29:32">USR2_RDR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:36"><expr pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:19">uts1</name></name> <operator pos:start="31:21" pos:end="31:22">|=</operator> <name pos:start="31:24" pos:end="31:35">UTS1_RXEMPTY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:26"><expr pos:start="33:13" pos:end="33:25"><call pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:22">imx_update</name><argument_list pos:start="33:23" pos:end="33:25">(<argument pos:start="33:24" pos:end="33:24"><expr pos:start="33:24" pos:end="33:24"><name pos:start="33:24" pos:end="33:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:42"><expr pos:start="35:13" pos:end="35:41"><call pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:33">qemu_chr_accept_input</name><argument_list pos:start="35:34" pos:end="35:41">(<argument pos:start="35:35" pos:end="35:40"><expr pos:start="35:35" pos:end="35:40"><name pos:start="35:35" pos:end="35:40"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:40">chr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">c</name></expr>;</return>



    <case pos:start="43:5" pos:end="43:14">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x20</literal></expr>:</case> <comment type="block" pos:start="43:16" pos:end="43:25">/* UCR1 */</comment>

        <return pos:start="45:9" pos:end="45:23">return <expr pos:start="45:16" pos:end="45:22"><name pos:start="45:16" pos:end="45:22"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:22">ucr1</name></name></expr>;</return>



    <case pos:start="49:5" pos:end="49:14">case <expr pos:start="49:10" pos:end="49:13"><literal type="number" pos:start="49:10" pos:end="49:13">0x21</literal></expr>:</case> <comment type="block" pos:start="49:16" pos:end="49:25">/* UCR2 */</comment>

        <return pos:start="51:9" pos:end="51:23">return <expr pos:start="51:16" pos:end="51:22"><name pos:start="51:16" pos:end="51:22"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:22">ucr2</name></name></expr>;</return>



    <case pos:start="55:5" pos:end="55:14">case <expr pos:start="55:10" pos:end="55:13"><literal type="number" pos:start="55:10" pos:end="55:13">0x25</literal></expr>:</case> <comment type="block" pos:start="55:16" pos:end="55:25">/* USR1 */</comment>

        <return pos:start="57:9" pos:end="57:23">return <expr pos:start="57:16" pos:end="57:22"><name pos:start="57:16" pos:end="57:22"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:22">usr1</name></name></expr>;</return>



    <case pos:start="61:5" pos:end="61:14">case <expr pos:start="61:10" pos:end="61:13"><literal type="number" pos:start="61:10" pos:end="61:13">0x26</literal></expr>:</case> <comment type="block" pos:start="61:16" pos:end="61:25">/* USR2 */</comment>

        <return pos:start="63:9" pos:end="63:23">return <expr pos:start="63:16" pos:end="63:22"><name pos:start="63:16" pos:end="63:22"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:22">usr2</name></name></expr>;</return>



    <case pos:start="67:5" pos:end="67:14">case <expr pos:start="67:10" pos:end="67:13"><literal type="number" pos:start="67:10" pos:end="67:13">0x2A</literal></expr>:</case> <comment type="block" pos:start="67:16" pos:end="67:34">/* BRM Modulator */</comment>

        <return pos:start="69:9" pos:end="69:23">return <expr pos:start="69:16" pos:end="69:22"><name pos:start="69:16" pos:end="69:22"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:22">ubmr</name></name></expr>;</return>



    <case pos:start="73:5" pos:end="73:14">case <expr pos:start="73:10" pos:end="73:13"><literal type="number" pos:start="73:10" pos:end="73:13">0x2B</literal></expr>:</case> <comment type="block" pos:start="73:16" pos:end="73:36">/* Baud Rate Count */</comment>

        <return pos:start="75:9" pos:end="75:23">return <expr pos:start="75:16" pos:end="75:22"><name pos:start="75:16" pos:end="75:22"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:22">ubrc</name></name></expr>;</return>



    <case pos:start="79:5" pos:end="79:14">case <expr pos:start="79:10" pos:end="79:13"><literal type="number" pos:start="79:10" pos:end="79:13">0x2d</literal></expr>:</case> <comment type="block" pos:start="79:16" pos:end="79:34">/* Test register */</comment>

        <return pos:start="81:9" pos:end="81:23">return <expr pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:16">s</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:22">uts1</name></name></expr>;</return>



    <case pos:start="85:5" pos:end="85:14">case <expr pos:start="85:10" pos:end="85:13"><literal type="number" pos:start="85:10" pos:end="85:13">0x24</literal></expr>:</case> <comment type="block" pos:start="85:16" pos:end="85:25">/* UFCR */</comment>

        <return pos:start="87:9" pos:end="87:23">return <expr pos:start="87:16" pos:end="87:22"><name pos:start="87:16" pos:end="87:22"><name pos:start="87:16" pos:end="87:16">s</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:22">ufcr</name></name></expr>;</return>



    <case pos:start="91:5" pos:end="91:14">case <expr pos:start="91:10" pos:end="91:13"><literal type="number" pos:start="91:10" pos:end="91:13">0x2c</literal></expr>:</case>

        <return pos:start="93:9" pos:end="93:24">return <expr pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:16">s</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:23">onems</name></name></expr>;</return>



    <case pos:start="97:5" pos:end="97:14">case <expr pos:start="97:10" pos:end="97:13"><literal type="number" pos:start="97:10" pos:end="97:13">0x22</literal></expr>:</case> <comment type="block" pos:start="97:16" pos:end="97:25">/* UCR3 */</comment>

        <return pos:start="99:9" pos:end="99:23">return <expr pos:start="99:16" pos:end="99:22"><name pos:start="99:16" pos:end="99:22"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:22">ucr3</name></name></expr>;</return>



    <case pos:start="103:5" pos:end="103:14">case <expr pos:start="103:10" pos:end="103:13"><literal type="number" pos:start="103:10" pos:end="103:13">0x23</literal></expr>:</case> <comment type="block" pos:start="103:16" pos:end="103:25">/* UCR4 */</comment>

    <case pos:start="105:5" pos:end="105:14">case <expr pos:start="105:10" pos:end="105:13"><literal type="number" pos:start="105:10" pos:end="105:13">0x29</literal></expr>:</case> <comment type="block" pos:start="105:16" pos:end="105:36">/* BRM Incremental */</comment>

        <return pos:start="107:9" pos:end="107:19">return <expr pos:start="107:16" pos:end="107:18"><literal type="number" pos:start="107:16" pos:end="107:18">0x0</literal></expr>;</return> <comment type="block" pos:start="107:21" pos:end="107:30">/* TODO */</comment>



    <default pos:start="111:5" pos:end="111:12">default:</default>

        <expr_stmt pos:start="113:9" pos:end="113:65"><expr pos:start="113:9" pos:end="113:64"><call pos:start="113:9" pos:end="113:64"><name pos:start="113:9" pos:end="113:15">IPRINTF</name><argument_list pos:start="113:16" pos:end="113:64">(<argument pos:start="113:17" pos:end="113:40"><expr pos:start="113:17" pos:end="113:40"><literal type="string" pos:start="113:17" pos:end="113:40">"%s: bad offset: 0x%x\n"</literal></expr></argument>, <argument pos:start="113:43" pos:end="113:50"><expr pos:start="113:43" pos:end="113:50"><name pos:start="113:43" pos:end="113:50">__func__</name></expr></argument>, <argument pos:start="113:53" pos:end="113:63"><expr pos:start="113:53" pos:end="113:63"><operator pos:start="113:53" pos:end="113:53">(</operator><name pos:start="113:54" pos:end="113:56">int</name><operator pos:start="113:57" pos:end="113:57">)</operator><name pos:start="113:58" pos:end="113:63">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:17">return <expr pos:start="115:16" pos:end="115:16"><literal type="number" pos:start="115:16" pos:end="115:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
