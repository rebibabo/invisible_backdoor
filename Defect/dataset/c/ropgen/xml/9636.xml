<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9636.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:30">pmac_ide_readw</name> <parameter_list pos:start="1:32" pos:end="1:69">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>,<parameter pos:start="1:46" pos:end="1:68"><decl pos:start="1:46" pos:end="1:68"><type pos:start="1:46" pos:end="1:68"><name pos:start="1:46" pos:end="1:63">target_phys_addr_t</name></type> <name pos:start="1:65" pos:end="1:68">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:18">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:19">retval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MACIOIDEState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">d</name> <init pos:start="7:22" pos:end="7:29">= <expr pos:start="7:24" pos:end="7:29"><name pos:start="7:24" pos:end="7:29">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:8">addr</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <operator pos:start="11:12" pos:end="11:12">(</operator><name pos:start="11:13" pos:end="11:16">addr</name> <operator pos:start="11:18" pos:end="11:18">&amp;</operator> <literal type="number" pos:start="11:20" pos:end="11:24">0xFFF</literal><operator pos:start="11:25" pos:end="11:25">)</operator> <operator pos:start="11:27" pos:end="11:28">&gt;&gt;</operator> <literal type="number" pos:start="11:30" pos:end="11:30">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">addr</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>)</condition> <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:44">

        <expr_stmt pos:start="15:9" pos:end="15:44"><expr pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:14">retval</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:43"><name pos:start="15:18" pos:end="15:31">ide_data_readw</name><argument_list pos:start="15:32" pos:end="15:43">(<argument pos:start="15:33" pos:end="15:39"><expr pos:start="15:33" pos:end="15:39"><operator pos:start="15:33" pos:end="15:33">&amp;</operator><name pos:start="15:34" pos:end="15:39"><name pos:start="15:34" pos:end="15:34">d</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:39">bus</name></name></expr></argument>, <argument pos:start="15:42" pos:end="15:42"><expr pos:start="15:42" pos:end="15:42"><literal type="number" pos:start="15:42" pos:end="15:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="21:5">else <block pos:start="17:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:24">

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:14">retval</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:23">0xFFFF</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:10">retval</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:20">bswap16</name><argument_list pos:start="23:21" pos:end="23:28">(<argument pos:start="23:22" pos:end="23:27"><expr pos:start="23:22" pos:end="23:27"><name pos:start="23:22" pos:end="23:27">retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="25:5" pos:end="25:18">return <expr pos:start="25:12" pos:end="25:17"><name pos:start="25:12" pos:end="25:17">retval</name></expr>;</return>

</block_content>}</block></function>
</unit>
