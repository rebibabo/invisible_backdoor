<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12115.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vnc_connect</name><parameter_list pos:start="1:24" pos:end="1:50">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:34">VncDisplay</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">vd</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:49"><decl pos:start="1:41" pos:end="1:49"><type pos:start="1:41" pos:end="1:49"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:49">csock</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="95:23">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">VncState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">vs</name> <init pos:start="5:18" pos:end="5:49">= <expr pos:start="5:20" pos:end="5:49"><call pos:start="5:20" pos:end="5:49"><name pos:start="5:20" pos:end="5:31">qemu_mallocz</name><argument_list pos:start="5:32" pos:end="5:49">(<argument pos:start="5:33" pos:end="5:48"><expr pos:start="5:33" pos:end="5:48"><sizeof pos:start="5:33" pos:end="5:48">sizeof<argument_list pos:start="5:39" pos:end="5:48">(<argument pos:start="5:40" pos:end="5:47"><expr pos:start="5:40" pos:end="5:47"><name pos:start="5:40" pos:end="5:47">VncState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:6">vs</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:13">csock</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:21">csock</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:6">vs</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:18">lossy_rect</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <call pos:start="13:22" pos:end="13:75"><name pos:start="13:22" pos:end="13:33">qemu_mallocz</name><argument_list pos:start="13:34" pos:end="13:75">(<argument pos:start="13:35" pos:end="13:74"><expr pos:start="13:35" pos:end="13:74"><name pos:start="13:35" pos:end="13:47">VNC_STAT_ROWS</name> <operator pos:start="13:49" pos:end="13:49">*</operator> <sizeof pos:start="13:51" pos:end="13:74">sizeof <argument_list pos:start="13:58" pos:end="13:74">(<argument pos:start="13:59" pos:end="13:73"><expr pos:start="13:59" pos:end="13:73"><operator pos:start="13:59" pos:end="13:59">*</operator><name pos:start="13:60" pos:end="13:73"><name pos:start="13:60" pos:end="13:61">vs</name><operator pos:start="13:62" pos:end="13:63">-&gt;</operator><name pos:start="13:64" pos:end="13:73">lossy_rect</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="19:5">for <control pos:start="15:9" pos:end="15:39">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:34"><expr pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:33">VNC_STAT_ROWS</name></expr>;</condition> <incr pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><operator pos:start="15:36" pos:end="15:37">++</operator><name pos:start="15:38" pos:end="15:38">i</name></expr></incr>)</control> <block pos:start="15:41" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:75">

        <expr_stmt pos:start="17:9" pos:end="17:75"><expr pos:start="17:9" pos:end="17:74"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:10">vs</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:22">lossy_rect</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">i</name></expr>]</index></name> <operator pos:start="17:27" pos:end="17:27">=</operator> <call pos:start="17:29" pos:end="17:74"><name pos:start="17:29" pos:end="17:40">qemu_mallocz</name><argument_list pos:start="17:41" pos:end="17:74">(<argument pos:start="17:42" pos:end="17:73"><expr pos:start="17:42" pos:end="17:73"><name pos:start="17:42" pos:end="17:54">VNC_STAT_COLS</name> <operator pos:start="17:56" pos:end="17:56">*</operator> <sizeof pos:start="17:58" pos:end="17:73">sizeof <argument_list pos:start="17:65" pos:end="17:73">(<argument pos:start="17:66" pos:end="17:72"><expr pos:start="17:66" pos:end="17:72"><name pos:start="17:66" pos:end="17:72">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="23:5" pos:end="23:50"><expr pos:start="23:5" pos:end="23:49"><call pos:start="23:5" pos:end="23:49"><name pos:start="23:5" pos:end="23:13">VNC_DEBUG</name><argument_list pos:start="23:14" pos:end="23:49">(<argument pos:start="23:15" pos:end="23:41"><expr pos:start="23:15" pos:end="23:41"><literal type="string" pos:start="23:15" pos:end="23:41">"New client on socket %d\n"</literal></expr></argument>, <argument pos:start="23:44" pos:end="23:48"><expr pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:48">csock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:7">dcl</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:13">idle</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:23">socket_set_nonblock</name><argument_list pos:start="27:24" pos:end="27:34">(<argument pos:start="27:25" pos:end="27:33"><expr pos:start="27:25" pos:end="27:33"><name pos:start="27:25" pos:end="27:33"><name pos:start="27:25" pos:end="27:26">vs</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:33">csock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:69"><expr pos:start="29:5" pos:end="29:68"><call pos:start="29:5" pos:end="29:68"><name pos:start="29:5" pos:end="29:24">qemu_set_fd_handler2</name><argument_list pos:start="29:25" pos:end="29:68">(<argument pos:start="29:26" pos:end="29:34"><expr pos:start="29:26" pos:end="29:34"><name pos:start="29:26" pos:end="29:34"><name pos:start="29:26" pos:end="29:27">vs</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:34">csock</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:40"><expr pos:start="29:37" pos:end="29:40"><name pos:start="29:37" pos:end="29:40">NULL</name></expr></argument>, <argument pos:start="29:43" pos:end="29:57"><expr pos:start="29:43" pos:end="29:57"><name pos:start="29:43" pos:end="29:57">vnc_client_read</name></expr></argument>, <argument pos:start="29:60" pos:end="29:63"><expr pos:start="29:60" pos:end="29:63"><name pos:start="29:60" pos:end="29:63">NULL</name></expr></argument>, <argument pos:start="29:66" pos:end="29:67"><expr pos:start="29:66" pos:end="29:67"><name pos:start="29:66" pos:end="29:67">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><call pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:25">vnc_client_cache_addr</name><argument_list pos:start="33:26" pos:end="33:29">(<argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:44"><expr pos:start="35:5" pos:end="35:43"><call pos:start="35:5" pos:end="35:43"><name pos:start="35:5" pos:end="35:17">vnc_qmp_event</name><argument_list pos:start="35:18" pos:end="35:43">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">vs</name></expr></argument>, <argument pos:start="35:23" pos:end="35:42"><expr pos:start="35:23" pos:end="35:42"><name pos:start="35:23" pos:end="35:42">QEVENT_VNC_CONNECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:16"><expr pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:6">vs</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:10">vd</name></name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:15">vd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:6">vs</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:10">ds</name></name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:19"><name pos:start="41:14" pos:end="41:15">vd</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">ds</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:6">vs</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:14">last_x</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <operator pos:start="43:18" pos:end="43:18">-</operator><literal type="number" pos:start="43:19" pos:end="43:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:6">vs</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:14">last_y</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <operator pos:start="45:18" pos:end="45:18">-</operator><literal type="number" pos:start="45:19" pos:end="45:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:6">vs</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:10">as</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:15">freq</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <literal type="number" pos:start="49:19" pos:end="49:23">44100</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:6">vs</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:10">as</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:20">nchannels</name></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <literal type="number" pos:start="51:24" pos:end="51:24">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:14"><name pos:start="53:5" pos:end="53:6">vs</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:10">as</name><operator pos:start="53:11" pos:end="53:11">.</operator><name pos:start="53:12" pos:end="53:14">fmt</name></name> <operator pos:start="53:16" pos:end="53:16">=</operator> <name pos:start="53:18" pos:end="53:28">AUD_FMT_S16</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="60:0"><expr pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:6">vs</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:10">as</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:21">endianness</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="59:1" pos:end="59:24">#<cpp:directive pos:start="59:2" pos:end="59:6">ifdef</cpp:directive> <name pos:start="59:8" pos:end="59:24">CONFIG_VNC_THREAD</name></cpp:ifdef>

    <expr_stmt pos:start="61:5" pos:end="64:0"><expr pos:start="61:5" pos:end="61:38"><call pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:19">qemu_mutex_init</name><argument_list pos:start="61:20" pos:end="61:38">(<argument pos:start="61:21" pos:end="61:37"><expr pos:start="61:21" pos:end="61:37"><operator pos:start="61:21" pos:end="61:21">&amp;</operator><name pos:start="61:22" pos:end="61:37"><name pos:start="61:22" pos:end="61:23">vs</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:37">output_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="67:5" pos:end="67:47"><expr pos:start="67:5" pos:end="67:46"><call pos:start="67:5" pos:end="67:46"><name pos:start="67:5" pos:end="67:22">QTAILQ_INSERT_HEAD</name><argument_list pos:start="67:23" pos:end="67:46">(<argument pos:start="67:24" pos:end="67:35"><expr pos:start="67:24" pos:end="67:35"><operator pos:start="67:24" pos:end="67:24">&amp;</operator><name pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:26">vd</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:35">clients</name></name></expr></argument>, <argument pos:start="67:38" pos:end="67:39"><expr pos:start="67:38" pos:end="67:39"><name pos:start="67:38" pos:end="67:39">vs</name></expr></argument>, <argument pos:start="67:42" pos:end="67:45"><expr pos:start="67:42" pos:end="67:45"><name pos:start="67:42" pos:end="67:45">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:20"><expr pos:start="71:5" pos:end="71:19"><call pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:17">vga_hw_update</name><argument_list pos:start="71:18" pos:end="71:19">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:39"><expr pos:start="75:5" pos:end="75:38"><call pos:start="75:5" pos:end="75:38"><name pos:start="75:5" pos:end="75:13">vnc_write</name><argument_list pos:start="75:14" pos:end="75:38">(<argument pos:start="75:15" pos:end="75:16"><expr pos:start="75:15" pos:end="75:16"><name pos:start="75:15" pos:end="75:16">vs</name></expr></argument>, <argument pos:start="75:19" pos:end="75:33"><expr pos:start="75:19" pos:end="75:33"><literal type="string" pos:start="75:19" pos:end="75:33">"RFB 003.008\n"</literal></expr></argument>, <argument pos:start="75:36" pos:end="75:37"><expr pos:start="75:36" pos:end="75:37"><literal type="number" pos:start="75:36" pos:end="75:37">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:18"><expr pos:start="77:5" pos:end="77:17"><call pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:13">vnc_flush</name><argument_list pos:start="77:14" pos:end="77:17">(<argument pos:start="77:15" pos:end="77:16"><expr pos:start="77:15" pos:end="77:16"><name pos:start="77:15" pos:end="77:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><call pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:17">vnc_read_when</name><argument_list pos:start="79:18" pos:end="79:43">(<argument pos:start="79:19" pos:end="79:20"><expr pos:start="79:19" pos:end="79:20"><name pos:start="79:19" pos:end="79:20">vs</name></expr></argument>, <argument pos:start="79:23" pos:end="79:38"><expr pos:start="79:23" pos:end="79:38"><name pos:start="79:23" pos:end="79:38">protocol_version</name></expr></argument>, <argument pos:start="79:41" pos:end="79:42"><expr pos:start="79:41" pos:end="79:42"><literal type="number" pos:start="79:41" pos:end="79:42">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:19"><expr pos:start="81:5" pos:end="81:18"><call pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:14">reset_keys</name><argument_list pos:start="81:15" pos:end="81:18">(<argument pos:start="81:16" pos:end="81:17"><expr pos:start="81:16" pos:end="81:17"><name pos:start="81:16" pos:end="81:17">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="85:59"><if pos:start="83:5" pos:end="85:59">if <condition pos:start="83:8" pos:end="83:30">(<expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:10">vs</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:14">vd</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:29">lock_key_sync</name></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:59"><block_content pos:start="85:9" pos:end="85:59">

        <expr_stmt pos:start="85:9" pos:end="85:59"><expr pos:start="85:9" pos:end="85:58"><name pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:10">vs</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:15">led</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:58"><name pos:start="85:19" pos:end="85:44">qemu_add_led_event_handler</name><argument_list pos:start="85:45" pos:end="85:58">(<argument pos:start="85:46" pos:end="85:53"><expr pos:start="85:46" pos:end="85:53"><name pos:start="85:46" pos:end="85:53">kbd_leds</name></expr></argument>, <argument pos:start="85:56" pos:end="85:57"><expr pos:start="85:56" pos:end="85:57"><name pos:start="85:56" pos:end="85:57">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:63"><expr pos:start="89:5" pos:end="89:62"><name pos:start="89:5" pos:end="89:34"><name pos:start="89:5" pos:end="89:6">vs</name><operator pos:start="89:7" pos:end="89:8">-&gt;</operator><name pos:start="89:9" pos:end="89:27">mouse_mode_notifier</name><operator pos:start="89:28" pos:end="89:28">.</operator><name pos:start="89:29" pos:end="89:34">notify</name></name> <operator pos:start="89:36" pos:end="89:36">=</operator> <name pos:start="89:38" pos:end="89:62">check_pointer_type_change</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:66"><expr pos:start="91:5" pos:end="91:65"><call pos:start="91:5" pos:end="91:65"><name pos:start="91:5" pos:end="91:39">qemu_add_mouse_mode_change_notifier</name><argument_list pos:start="91:40" pos:end="91:65">(<argument pos:start="91:41" pos:end="91:64"><expr pos:start="91:41" pos:end="91:64"><operator pos:start="91:41" pos:end="91:41">&amp;</operator><name pos:start="91:42" pos:end="91:64"><name pos:start="91:42" pos:end="91:43">vs</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:64">mouse_mode_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><call pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:18">vnc_init_timer</name><argument_list pos:start="95:19" pos:end="95:22">(<argument pos:start="95:20" pos:end="95:21"><expr pos:start="95:20" pos:end="95:21"><name pos:start="95:20" pos:end="95:21">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:35">/* vs might be free()ed here */</comment>

</block_content>}</block></function>
</unit>
