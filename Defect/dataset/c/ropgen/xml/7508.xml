<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7508.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">kvm_setup_guest_memory</name><parameter_list pos:start="1:28" pos:end="1:53">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:39">start</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:47">size_t</name></type> <name pos:start="1:49" pos:end="1:52">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:5">

<cpp:ifdef pos:start="5:1" pos:end="5:24">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:24">CONFIG_VALGRIND_H</name></cpp:ifdef>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:42"><call pos:start="7:5" pos:end="7:42"><name pos:start="7:5" pos:end="7:29">VALGRIND_MAKE_MEM_DEFINED</name><argument_list pos:start="7:30" pos:end="7:42">(<argument pos:start="7:31" pos:end="7:35"><expr pos:start="7:31" pos:end="7:35"><name pos:start="7:31" pos:end="7:35">start</name></expr></argument>, <argument pos:start="7:38" pos:end="7:41"><expr pos:start="7:38" pos:end="7:41"><name pos:start="7:38" pos:end="7:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="9:1" pos:end="9:6">#<cpp:directive pos:start="9:2" pos:end="9:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="11:5" pos:end="29:5"><if pos:start="11:5" pos:end="29:5">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:27"><name pos:start="11:10" pos:end="11:25">kvm_has_sync_mmu</name><argument_list pos:start="11:26" pos:end="11:27">()</argument_list></call></expr>)</condition> <block pos:start="11:30" pos:end="29:5">{<block_content pos:start="13:9" pos:end="27:9">

        <decl_stmt pos:start="13:9" pos:end="13:64"><decl pos:start="13:9" pos:end="13:63"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">ret</name> <init pos:start="13:17" pos:end="13:63">= <expr pos:start="13:19" pos:end="13:63"><call pos:start="13:19" pos:end="13:63"><name pos:start="13:19" pos:end="13:30">qemu_madvise</name><argument_list pos:start="13:31" pos:end="13:63">(<argument pos:start="13:32" pos:end="13:36"><expr pos:start="13:32" pos:end="13:36"><name pos:start="13:32" pos:end="13:36">start</name></expr></argument>, <argument pos:start="13:39" pos:end="13:42"><expr pos:start="13:39" pos:end="13:42"><name pos:start="13:39" pos:end="13:42">size</name></expr></argument>, <argument pos:start="13:45" pos:end="13:62"><expr pos:start="13:45" pos:end="13:62"><name pos:start="13:45" pos:end="13:62">QEMU_MADV_DONTFORK</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="27:9">if <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">ret</name></expr>)</condition> <block pos:start="17:18" pos:end="27:9">{<block_content pos:start="19:13" pos:end="25:20">

            <expr_stmt pos:start="19:13" pos:end="19:35"><expr pos:start="19:13" pos:end="19:34"><call pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:18">perror</name><argument_list pos:start="19:19" pos:end="19:34">(<argument pos:start="19:20" pos:end="19:33"><expr pos:start="19:20" pos:end="19:33"><literal type="string" pos:start="19:20" pos:end="19:33">"qemu_madvise"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="23:78"><expr pos:start="21:13" pos:end="23:77"><call pos:start="21:13" pos:end="23:77"><name pos:start="21:13" pos:end="21:19">fprintf</name><argument_list pos:start="21:20" pos:end="23:77">(<argument pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:26">stderr</name></expr></argument>,

                    <argument pos:start="23:21" pos:end="23:76"><expr pos:start="23:21" pos:end="23:76"><literal type="string" pos:start="23:21" pos:end="23:76">"Need MADV_DONTFORK in absence of synchronous KVM MMU\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:20"><expr pos:start="25:13" pos:end="25:19"><call pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:16">exit</name><argument_list pos:start="25:17" pos:end="25:19">(<argument pos:start="25:18" pos:end="25:18"><expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
