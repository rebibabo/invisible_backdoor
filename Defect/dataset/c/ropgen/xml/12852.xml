<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12852.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">vmdk_open</name><parameter_list pos:start="1:21" pos:end="1:53">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:52">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVVmdkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:51">(<expr pos:start="11:9" pos:end="11:50"><call pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:24">vmdk_open_sparse</name><argument_list pos:start="11:25" pos:end="11:45">(<argument pos:start="11:26" pos:end="11:27"><expr pos:start="11:26" pos:end="11:27"><name pos:start="11:26" pos:end="11:27">bs</name></expr></argument>, <argument pos:start="11:30" pos:end="11:37"><expr pos:start="11:30" pos:end="11:37"><name pos:start="11:30" pos:end="11:37"><name pos:start="11:30" pos:end="11:31">bs</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:37">file</name></name></expr></argument>, <argument pos:start="11:40" pos:end="11:44"><expr pos:start="11:40" pos:end="11:44"><name pos:start="11:40" pos:end="11:44">flags</name></expr></argument>)</argument_list></call> <operator pos:start="11:47" pos:end="11:48">==</operator> <literal type="number" pos:start="11:50" pos:end="11:50">0</literal></expr>)</condition> <block pos:start="11:53" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:31">

        <expr_stmt pos:start="13:9" pos:end="13:31"><expr pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:22">desc_offset</name></name> <operator pos:start="13:24" pos:end="13:24">=</operator> <literal type="number" pos:start="13:26" pos:end="13:30">0x200</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="25:5">else <block pos:start="15:12" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:9">

        <expr_stmt pos:start="17:9" pos:end="17:48"><expr pos:start="17:9" pos:end="17:47"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:47"><name pos:start="17:15" pos:end="17:33">vmdk_open_desc_file</name><argument_list pos:start="17:34" pos:end="17:47">(<argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><name pos:start="17:35" pos:end="17:36">bs</name></expr></argument>, <argument pos:start="17:39" pos:end="17:43"><expr pos:start="17:39" pos:end="17:43"><name pos:start="17:39" pos:end="17:43">flags</name></expr></argument>, <argument pos:start="17:46" pos:end="17:46"><expr pos:start="17:46" pos:end="17:46"><literal type="number" pos:start="17:46" pos:end="17:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:16">(<expr pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">ret</name></expr>)</condition> <block pos:start="19:18" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:22">

            <goto pos:start="21:13" pos:end="21:22">goto <name pos:start="21:18" pos:end="21:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:45">/* try to open parent images, if exist */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:30"><name pos:start="29:11" pos:end="29:26">vmdk_parent_open</name><argument_list pos:start="29:27" pos:end="29:30">(<argument pos:start="29:28" pos:end="29:29"><expr pos:start="29:28" pos:end="29:29"><name pos:start="29:28" pos:end="29:29">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">ret</name></expr>)</condition> <block pos:start="31:14" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:18">

        <goto pos:start="33:9" pos:end="33:18">goto <name pos:start="33:14" pos:end="33:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:17">parent_cid</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:40"><name pos:start="37:21" pos:end="37:33">vmdk_read_cid</name><argument_list pos:start="37:34" pos:end="37:40">(<argument pos:start="37:35" pos:end="37:36"><expr pos:start="37:35" pos:end="37:36"><name pos:start="37:35" pos:end="37:36">bs</name></expr></argument>, <argument pos:start="37:39" pos:end="37:39"><expr pos:start="37:39" pos:end="37:39"><literal type="number" pos:start="37:39" pos:end="37:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><call pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:22">qemu_co_mutex_init</name><argument_list pos:start="39:23" pos:end="39:32">(<argument pos:start="39:24" pos:end="39:31"><expr pos:start="39:24" pos:end="39:31"><operator pos:start="39:24" pos:end="39:24">&amp;</operator><name pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:25">s</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:15">return <expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">ret</name></expr>;</return>



<label pos:start="45:1" pos:end="45:5"><name pos:start="45:1" pos:end="45:4">fail</name>:</label>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><call pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:21">vmdk_free_extents</name><argument_list pos:start="47:22" pos:end="47:25">(<argument pos:start="47:23" pos:end="47:24"><expr pos:start="47:23" pos:end="47:24"><name pos:start="47:23" pos:end="47:24">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
