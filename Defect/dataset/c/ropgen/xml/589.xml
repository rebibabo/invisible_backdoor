<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/589.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">adx_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">ADXDemuxerContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">c</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AVCodecParameters</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">par</name></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name> <init pos:start="11:18" pos:end="11:47">= <expr pos:start="11:20" pos:end="11:47"><call pos:start="11:20" pos:end="11:47"><name pos:start="11:20" pos:end="11:38">avformat_new_stream</name><argument_list pos:start="11:39" pos:end="11:47">(<argument pos:start="11:40" pos:end="11:40"><expr pos:start="11:40" pos:end="11:40"><name pos:start="11:40" pos:end="11:40">s</name></expr></argument>, <argument pos:start="11:43" pos:end="11:46"><expr pos:start="11:43" pos:end="11:46"><name pos:start="11:43" pos:end="11:46">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="15:31"><if pos:start="13:5" pos:end="15:31">if <condition pos:start="13:8" pos:end="13:12">(<expr pos:start="13:9" pos:end="13:11"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:11">st</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:31"><block_content pos:start="15:9" pos:end="15:31">

        <return pos:start="15:9" pos:end="15:31">return <expr pos:start="15:16" pos:end="15:30"><call pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:22">AVERROR</name><argument_list pos:start="15:23" pos:end="15:30">(<argument pos:start="15:24" pos:end="15:29"><expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:7">par</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:23"><name pos:start="17:11" pos:end="17:11">s</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:20">streams</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>]</index></name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:33">codecpar</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:35"><if pos:start="21:5" pos:end="23:35">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><call pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:17">avio_rb16</name><argument_list pos:start="21:18" pos:end="21:24">(<argument pos:start="21:19" pos:end="21:23"><expr pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:19">s</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:23">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:26" pos:end="21:27">!=</operator> <literal type="number" pos:start="21:29" pos:end="21:34">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:35"><block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">c</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:18">header_size</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:37"><name pos:start="25:22" pos:end="25:30">avio_rb16</name><argument_list pos:start="25:31" pos:end="25:37">(<argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:32">s</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:36">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:39" pos:end="25:39">+</operator> <literal type="number" pos:start="25:41" pos:end="25:41">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:13">avio_seek</name><argument_list pos:start="27:14" pos:end="27:34">(<argument pos:start="27:15" pos:end="27:19"><expr pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:19">pb</name></name></expr></argument>, <argument pos:start="27:22" pos:end="27:23"><expr pos:start="27:22" pos:end="27:23"><operator pos:start="27:22" pos:end="27:22">-</operator><literal type="number" pos:start="27:23" pos:end="27:23">4</literal></expr></argument>, <argument pos:start="27:26" pos:end="27:33"><expr pos:start="27:26" pos:end="27:33"><name pos:start="27:26" pos:end="27:33">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:31"><if pos:start="31:5" pos:end="33:31">if <condition pos:start="31:8" pos:end="31:60">(<expr pos:start="31:9" pos:end="31:59"><call pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:24">ff_get_extradata</name><argument_list pos:start="31:25" pos:end="31:55">(<argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">s</name></expr></argument>, <argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:31">par</name></expr></argument>, <argument pos:start="31:34" pos:end="31:38"><expr pos:start="31:34" pos:end="31:38"><name pos:start="31:34" pos:end="31:38"><name pos:start="31:34" pos:end="31:34">s</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:38">pb</name></name></expr></argument>, <argument pos:start="31:41" pos:end="31:54"><expr pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:41">c</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:54">header_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:57" pos:end="31:57">&lt;</operator> <literal type="number" pos:start="31:59" pos:end="31:59">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:31"><block_content pos:start="33:9" pos:end="33:31">

        <return pos:start="33:9" pos:end="33:31">return <expr pos:start="33:16" pos:end="33:30"><call pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:22">AVERROR</name><argument_list pos:start="33:23" pos:end="33:30">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:33">(<expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:11">par</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:27">extradata_size</name></name> <operator pos:start="37:29" pos:end="37:29">&lt;</operator> <literal type="number" pos:start="37:31" pos:end="37:32">12</literal></expr>)</condition> <block pos:start="37:35" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:35">

        <expr_stmt pos:start="39:9" pos:end="39:61"><expr pos:start="39:9" pos:end="39:60"><call pos:start="39:9" pos:end="39:60"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:60">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>, <argument pos:start="39:19" pos:end="39:30"><expr pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:33" pos:end="39:59"><expr pos:start="39:33" pos:end="39:59"><literal type="string" pos:start="39:33" pos:end="39:59">"Invalid extradata size.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:51"><expr pos:start="45:5" pos:end="45:50"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:7">par</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:17">channels</name></name>    <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:50"><name pos:start="45:24" pos:end="45:29">AV_RB8</name> <argument_list pos:start="45:31" pos:end="45:50">(<argument pos:start="45:32" pos:end="45:49"><expr pos:start="45:32" pos:end="45:49"><name pos:start="45:32" pos:end="45:45"><name pos:start="45:32" pos:end="45:34">par</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:45">extradata</name></name> <operator pos:start="45:47" pos:end="45:47">+</operator> <literal type="number" pos:start="45:49" pos:end="45:49">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:51"><expr pos:start="47:5" pos:end="47:50"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:7">par</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:20">sample_rate</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:50"><name pos:start="47:24" pos:end="47:30">AV_RB32</name><argument_list pos:start="47:31" pos:end="47:50">(<argument pos:start="47:32" pos:end="47:49"><expr pos:start="47:32" pos:end="47:49"><name pos:start="47:32" pos:end="47:45"><name pos:start="47:32" pos:end="47:34">par</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:45">extradata</name></name> <operator pos:start="47:47" pos:end="47:47">+</operator> <literal type="number" pos:start="47:49" pos:end="47:49">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:27">(<expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:11">par</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:21">channels</name></name> <operator pos:start="51:23" pos:end="51:24">&lt;=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>)</condition> <block pos:start="51:29" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:35">

        <expr_stmt pos:start="53:9" pos:end="53:82"><expr pos:start="53:9" pos:end="53:81"><call pos:start="53:9" pos:end="53:81"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:81">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:65"><expr pos:start="53:33" pos:end="53:65"><literal type="string" pos:start="53:33" pos:end="53:65">"invalid number of channels %d\n"</literal></expr></argument>, <argument pos:start="53:68" pos:end="53:80"><expr pos:start="53:68" pos:end="53:80"><name pos:start="53:68" pos:end="53:80"><name pos:start="53:68" pos:end="53:70">par</name><operator pos:start="53:71" pos:end="53:72">-&gt;</operator><name pos:start="53:73" pos:end="53:80">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:35">return <expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:30">(<expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:11">par</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:24">sample_rate</name></name> <operator pos:start="61:26" pos:end="61:27">&lt;=</operator> <literal type="number" pos:start="61:29" pos:end="61:29">0</literal></expr>)</condition> <block pos:start="61:32" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:35">

        <expr_stmt pos:start="63:9" pos:end="63:78"><expr pos:start="63:9" pos:end="63:77"><call pos:start="63:9" pos:end="63:77"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:77">(<argument pos:start="63:16" pos:end="63:16"><expr pos:start="63:16" pos:end="63:16"><name pos:start="63:16" pos:end="63:16">s</name></expr></argument>, <argument pos:start="63:19" pos:end="63:30"><expr pos:start="63:19" pos:end="63:30"><name pos:start="63:19" pos:end="63:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:33" pos:end="63:58"><expr pos:start="63:33" pos:end="63:58"><literal type="string" pos:start="63:33" pos:end="63:58">"Invalid sample rate %d\n"</literal></expr></argument>, <argument pos:start="63:61" pos:end="63:76"><expr pos:start="63:61" pos:end="63:76"><name pos:start="63:61" pos:end="63:76"><name pos:start="63:61" pos:end="63:63">par</name><operator pos:start="63:64" pos:end="63:65">-&gt;</operator><name pos:start="63:66" pos:end="63:76">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:35">return <expr pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:42"><expr pos:start="71:5" pos:end="71:41"><name pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:7">par</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:19">codec_type</name></name>  <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:41">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:48"><expr pos:start="73:5" pos:end="73:47"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:7">par</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:17">codec_id</name></name>    <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:47"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:33">iformat</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:47">raw_codec_id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:91"><expr pos:start="75:5" pos:end="75:90"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:7">par</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:17">bit_rate</name></name>    <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:39"><name pos:start="75:24" pos:end="75:26">par</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:39">sample_rate</name></name> <operator pos:start="75:41" pos:end="75:41">*</operator> <name pos:start="75:43" pos:end="75:55"><name pos:start="75:43" pos:end="75:45">par</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:55">channels</name></name> <operator pos:start="75:57" pos:end="75:57">*</operator> <name pos:start="75:59" pos:end="75:68">BLOCK_SIZE</name> <operator pos:start="75:70" pos:end="75:70">*</operator> <literal type="number" pos:start="75:72" pos:end="75:74">8LL</literal> <operator pos:start="75:76" pos:end="75:76">/</operator> <name pos:start="75:78" pos:end="75:90">BLOCK_SAMPLES</name></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:65"><expr pos:start="79:5" pos:end="79:64"><call pos:start="79:5" pos:end="79:64"><name pos:start="79:5" pos:end="79:23">avpriv_set_pts_info</name><argument_list pos:start="79:24" pos:end="79:64">(<argument pos:start="79:25" pos:end="79:26"><expr pos:start="79:25" pos:end="79:26"><name pos:start="79:25" pos:end="79:26">st</name></expr></argument>, <argument pos:start="79:29" pos:end="79:30"><expr pos:start="79:29" pos:end="79:30"><literal type="number" pos:start="79:29" pos:end="79:30">64</literal></expr></argument>, <argument pos:start="79:33" pos:end="79:45"><expr pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:45">BLOCK_SAMPLES</name></expr></argument>, <argument pos:start="79:48" pos:end="79:63"><expr pos:start="79:48" pos:end="79:63"><name pos:start="79:48" pos:end="79:63"><name pos:start="79:48" pos:end="79:50">par</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:63">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
