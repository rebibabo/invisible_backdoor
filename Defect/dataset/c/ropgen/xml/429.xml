<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/429.c" pos:tabs="8"><function pos:start="1:1" pos:end="293:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">init_directories</name><parameter_list pos:start="1:28" pos:end="3:28">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:42">BDRVVVFATState</name><modifier pos:start="1:43" pos:end="1:43">*</modifier></type> <name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

	<parameter pos:start="3:9" pos:end="3:27"><decl pos:start="3:9" pos:end="3:27"><type pos:start="3:9" pos:end="3:27"><specifier pos:start="3:9" pos:end="3:13">const</specifier> <name pos:start="3:15" pos:end="3:18">char</name><modifier pos:start="3:19" pos:end="3:19">*</modifier></type> <name pos:start="3:21" pos:end="3:27">dirname</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="293:1">{<block_content pos:start="7:5" pos:end="291:13">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:16">bootsector_t</name><modifier pos:start="7:17" pos:end="7:17">*</modifier></type> <name pos:start="7:19" pos:end="7:28">bootsector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:13">mapping_t</name><modifier pos:start="9:14" pos:end="9:14">*</modifier></type> <name pos:start="9:16" pos:end="9:22">mapping</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:24">cluster</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><call pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:47">(<argument pos:start="17:12" pos:end="17:33"><expr pos:start="17:12" pos:end="17:33"><operator pos:start="17:12" pos:end="17:12">&amp;</operator><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:32"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:29">first_sectors</name><index pos:start="17:30" pos:end="17:32">[<expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr>]</index></name><operator pos:start="17:33" pos:end="17:33">)</operator></expr></argument>,<argument pos:start="17:35" pos:end="17:35"><expr pos:start="17:35" pos:end="17:35"><literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr></argument>,<argument pos:start="17:37" pos:end="17:46"><expr pos:start="17:37" pos:end="17:46"><literal type="number" pos:start="17:37" pos:end="17:40">0x40</literal><operator pos:start="17:41" pos:end="17:41">*</operator><literal type="number" pos:start="17:42" pos:end="17:46">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:19">cluster_size</name></name><operator pos:start="21:20" pos:end="21:20">=</operator><name pos:start="21:21" pos:end="21:42"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:42">sectors_per_cluster</name></name><operator pos:start="21:43" pos:end="21:43">*</operator><literal type="number" pos:start="21:44" pos:end="21:48">0x200</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:21">cluster_buffer</name></name><operator pos:start="23:22" pos:end="23:22">=</operator><call pos:start="23:23" pos:end="23:50"><name pos:start="23:23" pos:end="23:33">qemu_malloc</name><argument_list pos:start="23:34" pos:end="23:50">(<argument pos:start="23:35" pos:end="23:49"><expr pos:start="23:35" pos:end="23:49"><name pos:start="23:35" pos:end="23:49"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:49">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="39:7">/*

     * The formula: sc = spf+1+spf*spc*(512*8/fat_type),

     * where sc is sector_count,

     * spf is sectors_per_fat,

     * spc is sectors_per_clusters, and

     * fat_type = 12, 16 or 32.

     */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:53"><expr pos:start="41:5" pos:end="41:52"><name pos:start="41:5" pos:end="41:5">i</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <literal type="number" pos:start="41:9" pos:end="41:10">1</literal><operator pos:start="41:10" pos:end="41:10">+</operator><name pos:start="41:11" pos:end="41:32"><name pos:start="41:11" pos:end="41:11">s</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:32">sectors_per_cluster</name></name><operator pos:start="41:33" pos:end="41:33">*</operator><literal type="number" pos:start="41:34" pos:end="41:38">0x200</literal><operator pos:start="41:39" pos:end="41:39">*</operator><literal type="number" pos:start="41:40" pos:end="41:40">8</literal><operator pos:start="41:41" pos:end="41:41">/</operator><name pos:start="41:42" pos:end="41:52"><name pos:start="41:42" pos:end="41:42">s</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:52">fat_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:45"><expr pos:start="43:5" pos:end="43:44"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:22">sectors_per_fat</name></name><operator pos:start="43:23" pos:end="43:23">=</operator><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:39">sector_count</name></name><operator pos:start="43:40" pos:end="43:40">+</operator><name pos:start="43:41" pos:end="43:41">i</name><operator pos:start="43:42" pos:end="43:42">)</operator><operator pos:start="43:43" pos:end="43:43">/</operator><name pos:start="43:44" pos:end="43:44">i</name></expr>;</expr_stmt> <comment type="block" pos:start="43:47" pos:end="43:60">/* round up */</comment>



    <expr_stmt pos:start="47:5" pos:end="47:48"><expr pos:start="47:5" pos:end="47:47"><call pos:start="47:5" pos:end="47:47"><name pos:start="47:5" pos:end="47:14">array_init</name><argument_list pos:start="47:15" pos:end="47:47">(<argument pos:start="47:16" pos:end="47:28"><expr pos:start="47:16" pos:end="47:28"><operator pos:start="47:16" pos:end="47:16">&amp;</operator><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:27"><name pos:start="47:18" pos:end="47:18">s</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:27">mapping</name></name><operator pos:start="47:28" pos:end="47:28">)</operator></expr></argument>,<argument pos:start="47:30" pos:end="47:46"><expr pos:start="47:30" pos:end="47:46"><sizeof pos:start="47:30" pos:end="47:46">sizeof<argument_list pos:start="47:36" pos:end="47:46">(<argument pos:start="47:37" pos:end="47:45"><expr pos:start="47:37" pos:end="47:45"><name pos:start="47:37" pos:end="47:45">mapping_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><call pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:14">array_init</name><argument_list pos:start="49:15" pos:end="49:50">(<argument pos:start="49:16" pos:end="49:30"><expr pos:start="49:16" pos:end="49:30"><operator pos:start="49:16" pos:end="49:16">&amp;</operator><operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:29"><name pos:start="49:18" pos:end="49:18">s</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:29">directory</name></name><operator pos:start="49:30" pos:end="49:30">)</operator></expr></argument>,<argument pos:start="49:32" pos:end="49:49"><expr pos:start="49:32" pos:end="49:49"><sizeof pos:start="49:32" pos:end="49:49">sizeof<argument_list pos:start="49:38" pos:end="49:49">(<argument pos:start="49:39" pos:end="49:48"><expr pos:start="49:39" pos:end="49:48"><name pos:start="49:39" pos:end="49:48">direntry_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:26">/* add volume label */</comment>

    <block pos:start="55:5" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:53">

	<decl_stmt pos:start="57:9" pos:end="57:58"><decl pos:start="57:9" pos:end="57:57"><type pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:18">direntry_t</name><modifier pos:start="57:19" pos:end="57:19">*</modifier></type> <name pos:start="57:21" pos:end="57:25">entry</name><init pos:start="57:26" pos:end="57:57">=<expr pos:start="57:27" pos:end="57:57"><call pos:start="57:27" pos:end="57:57"><name pos:start="57:27" pos:end="57:40">array_get_next</name><argument_list pos:start="57:41" pos:end="57:57">(<argument pos:start="57:42" pos:end="57:56"><expr pos:start="57:42" pos:end="57:56"><operator pos:start="57:42" pos:end="57:42">&amp;</operator><operator pos:start="57:43" pos:end="57:43">(</operator><name pos:start="57:44" pos:end="57:55"><name pos:start="57:44" pos:end="57:44">s</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:55">directory</name></name><operator pos:start="57:56" pos:end="57:56">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:13">entry</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:25">attributes</name></name><operator pos:start="59:26" pos:end="59:26">=</operator><literal type="number" pos:start="59:27" pos:end="59:30">0x28</literal></expr>;</expr_stmt> <comment type="block" pos:start="59:33" pos:end="59:60">/* archive | volume label */</comment>

	<expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><call pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:16">snprintf</name><argument_list pos:start="61:17" pos:end="61:52">(<argument pos:start="61:18" pos:end="61:35"><expr pos:start="61:18" pos:end="61:35"><operator pos:start="61:18" pos:end="61:18">(</operator><name pos:start="61:19" pos:end="61:22">char</name><operator pos:start="61:23" pos:end="61:23">*</operator><operator pos:start="61:24" pos:end="61:24">)</operator><name pos:start="61:25" pos:end="61:35"><name pos:start="61:25" pos:end="61:29">entry</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:35">name</name></name></expr></argument>,<argument pos:start="61:37" pos:end="61:38"><expr pos:start="61:37" pos:end="61:38"><literal type="number" pos:start="61:37" pos:end="61:38">11</literal></expr></argument>,<argument pos:start="61:40" pos:end="61:51"><expr pos:start="61:40" pos:end="61:51"><literal type="string" pos:start="61:40" pos:end="61:51">"QEMU VVFAT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <comment type="block" pos:start="67:5" pos:end="67:66">/* Now build FAT, and write back information into directory */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:16"><expr pos:start="69:5" pos:end="69:15"><call pos:start="69:5" pos:end="69:15"><name pos:start="69:5" pos:end="69:12">init_fat</name><argument_list pos:start="69:13" pos:end="69:15">(<argument pos:start="69:14" pos:end="69:14"><expr pos:start="69:14" pos:end="69:14"><name pos:start="69:14" pos:end="69:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:66"><expr pos:start="73:5" pos:end="73:65"><name pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:20">faked_sectors</name></name><operator pos:start="73:21" pos:end="73:21">=</operator><name pos:start="73:22" pos:end="73:44"><name pos:start="73:22" pos:end="73:22">s</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:44">first_sectors_number</name></name><operator pos:start="73:45" pos:end="73:45">+</operator><name pos:start="73:46" pos:end="73:63"><name pos:start="73:46" pos:end="73:46">s</name><operator pos:start="73:47" pos:end="73:48">-&gt;</operator><name pos:start="73:49" pos:end="73:63">sectors_per_fat</name></name><operator pos:start="73:64" pos:end="73:64">*</operator><literal type="number" pos:start="73:65" pos:end="73:65">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:56"><expr pos:start="75:5" pos:end="75:55"><name pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:20">cluster_count</name></name><operator pos:start="75:21" pos:end="75:21">=</operator><call pos:start="75:22" pos:end="75:55"><name pos:start="75:22" pos:end="75:35">sector2cluster</name><argument_list pos:start="75:36" pos:end="75:55">(<argument pos:start="75:37" pos:end="75:37"><expr pos:start="75:37" pos:end="75:37"><name pos:start="75:37" pos:end="75:37">s</name></expr></argument>, <argument pos:start="75:40" pos:end="75:54"><expr pos:start="75:40" pos:end="75:54"><name pos:start="75:40" pos:end="75:54"><name pos:start="75:40" pos:end="75:40">s</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:54">sector_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:11">mapping</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:43"><name pos:start="79:15" pos:end="79:28">array_get_next</name><argument_list pos:start="79:29" pos:end="79:43">(<argument pos:start="79:30" pos:end="79:42"><expr pos:start="79:30" pos:end="79:42"><operator pos:start="79:30" pos:end="79:30">&amp;</operator><operator pos:start="79:31" pos:end="79:31">(</operator><name pos:start="79:32" pos:end="79:41"><name pos:start="79:32" pos:end="79:32">s</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:41">mapping</name></name><operator pos:start="79:42" pos:end="79:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:23"><expr pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:11">mapping</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:18">begin</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:27"><expr pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:11">mapping</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:22">dir_index</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:48"><expr pos:start="85:5" pos:end="85:47"><name pos:start="85:5" pos:end="85:42"><name pos:start="85:5" pos:end="85:11">mapping</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:17">info</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:21">dir</name><operator pos:start="85:22" pos:end="85:22">.</operator><name pos:start="85:23" pos:end="85:42">parent_mapping_index</name></name> <operator pos:start="85:44" pos:end="85:44">=</operator> <operator pos:start="85:46" pos:end="85:46">-</operator><literal type="number" pos:start="85:47" pos:end="85:47">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:38"><expr pos:start="87:5" pos:end="87:37"><name pos:start="87:5" pos:end="87:32"><name pos:start="87:5" pos:end="87:11">mapping</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:32">first_mapping_index</name></name> <operator pos:start="87:34" pos:end="87:34">=</operator> <operator pos:start="87:36" pos:end="87:36">-</operator><literal type="number" pos:start="87:37" pos:end="87:37">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:36"><expr pos:start="89:5" pos:end="89:35"><name pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:11">mapping</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:17">path</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <call pos:start="89:21" pos:end="89:35"><name pos:start="89:21" pos:end="89:26">strdup</name><argument_list pos:start="89:27" pos:end="89:35">(<argument pos:start="89:28" pos:end="89:34"><expr pos:start="89:28" pos:end="89:34"><name pos:start="89:28" pos:end="89:34">dirname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:30"><expr pos:start="91:5" pos:end="91:29"><name pos:start="91:5" pos:end="91:5">i</name> <operator pos:start="91:7" pos:end="91:7">=</operator> <call pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:14">strlen</name><argument_list pos:start="91:15" pos:end="91:29">(<argument pos:start="91:16" pos:end="91:28"><expr pos:start="91:16" pos:end="91:28"><name pos:start="91:16" pos:end="91:28"><name pos:start="91:16" pos:end="91:22">mapping</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:28">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:36"><if pos:start="93:5" pos:end="95:36">if <condition pos:start="93:8" pos:end="93:45">(<expr pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:9">i</name> <operator pos:start="93:11" pos:end="93:11">&gt;</operator> <literal type="number" pos:start="93:13" pos:end="93:13">0</literal> <operator pos:start="93:15" pos:end="93:16">&amp;&amp;</operator> <name pos:start="93:18" pos:end="93:37"><name pos:start="93:18" pos:end="93:24">mapping</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:30">path</name><index pos:start="93:31" pos:end="93:37">[<expr pos:start="93:32" pos:end="93:36"><name pos:start="93:32" pos:end="93:32">i</name> <operator pos:start="93:34" pos:end="93:34">-</operator> <literal type="number" pos:start="93:36" pos:end="93:36">1</literal></expr>]</index></name> <operator pos:start="93:39" pos:end="93:40">==</operator> <literal type="char" pos:start="93:42" pos:end="93:44">'/'</literal></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:36"><block_content pos:start="95:9" pos:end="95:36">

	<expr_stmt pos:start="95:9" pos:end="95:36"><expr pos:start="95:9" pos:end="95:35"><name pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:15">mapping</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:21">path</name><index pos:start="95:22" pos:end="95:28">[<expr pos:start="95:23" pos:end="95:27"><name pos:start="95:23" pos:end="95:23">i</name> <operator pos:start="95:25" pos:end="95:25">-</operator> <literal type="number" pos:start="95:27" pos:end="95:27">1</literal></expr>]</index></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <literal type="char" pos:start="95:32" pos:end="95:35">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:35"><expr pos:start="97:5" pos:end="97:34"><name pos:start="97:5" pos:end="97:17"><name pos:start="97:5" pos:end="97:11">mapping</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:17">mode</name></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:34">MODE_DIRECTORY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:27"><expr pos:start="99:5" pos:end="99:26"><name pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:11">mapping</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:22">read_only</name></name> <operator pos:start="99:24" pos:end="99:24">=</operator> <literal type="number" pos:start="99:26" pos:end="99:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:28"><expr pos:start="101:5" pos:end="101:27"><name pos:start="101:5" pos:end="101:11"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:11">path</name></name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:27"><name pos:start="101:15" pos:end="101:21">mapping</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:27">path</name></name></expr>;</expr_stmt>



    <for pos:start="105:5" pos:end="209:5">for <control pos:start="105:9" pos:end="105:54">(<init pos:start="105:10" pos:end="105:28"><expr pos:start="105:10" pos:end="105:14"><name pos:start="105:10" pos:end="105:10">i</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr><operator pos:start="105:15" pos:end="105:15">,</operator> <expr pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:23">cluster</name> <operator pos:start="105:25" pos:end="105:25">=</operator> <literal type="number" pos:start="105:27" pos:end="105:27">0</literal></expr>;</init> <condition pos:start="105:30" pos:end="105:49"><expr pos:start="105:30" pos:end="105:48"><name pos:start="105:30" pos:end="105:30">i</name> <operator pos:start="105:32" pos:end="105:32">&lt;</operator> <name pos:start="105:34" pos:end="105:48"><name pos:start="105:34" pos:end="105:34">s</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:43">mapping</name><operator pos:start="105:44" pos:end="105:44">.</operator><name pos:start="105:45" pos:end="105:48">next</name></name></expr>;</condition> <incr pos:start="105:51" pos:end="105:53"><expr pos:start="105:51" pos:end="105:53"><name pos:start="105:51" pos:end="105:51">i</name><operator pos:start="105:52" pos:end="105:53">++</operator></expr></incr>)</control> <block pos:start="105:56" pos:end="209:5">{<block_content pos:start="113:9" pos:end="207:9">

	<comment type="block" pos:start="107:9" pos:end="109:42">/* MS-DOS expects the FAT to be 0 for the root directory

	 * (except for the media byte). */</comment>

	<comment type="block" pos:start="111:9" pos:end="111:47">/* LATER TODO: still true for FAT32? */</comment>

	<decl_stmt pos:start="113:9" pos:end="113:31"><decl pos:start="113:9" pos:end="113:30"><type pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:11">int</name></type> <name pos:start="113:13" pos:end="113:19">fix_fat</name> <init pos:start="113:21" pos:end="113:30">= <expr pos:start="113:23" pos:end="113:30"><operator pos:start="113:23" pos:end="113:23">(</operator><name pos:start="113:24" pos:end="113:24">i</name> <operator pos:start="113:26" pos:end="113:27">!=</operator> <literal type="number" pos:start="113:29" pos:end="113:29">0</literal><operator pos:start="113:30" pos:end="113:30">)</operator></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="115:9" pos:end="115:46"><expr pos:start="115:9" pos:end="115:45"><name pos:start="115:9" pos:end="115:15">mapping</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <call pos:start="115:19" pos:end="115:45"><name pos:start="115:19" pos:end="115:27">array_get</name><argument_list pos:start="115:28" pos:end="115:45">(<argument pos:start="115:29" pos:end="115:41"><expr pos:start="115:29" pos:end="115:41"><operator pos:start="115:29" pos:end="115:29">&amp;</operator><operator pos:start="115:30" pos:end="115:30">(</operator><name pos:start="115:31" pos:end="115:40"><name pos:start="115:31" pos:end="115:31">s</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:40">mapping</name></name><operator pos:start="115:41" pos:end="115:41">)</operator></expr></argument>, <argument pos:start="115:44" pos:end="115:44"><expr pos:start="115:44" pos:end="115:44"><name pos:start="115:44" pos:end="115:44">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="163:9"><if pos:start="119:9" pos:end="135:9">if <condition pos:start="119:12" pos:end="119:43">(<expr pos:start="119:13" pos:end="119:42"><name pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:19">mapping</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:25">mode</name></name> <operator pos:start="119:27" pos:end="119:27">&amp;</operator> <name pos:start="119:29" pos:end="119:42">MODE_DIRECTORY</name></expr>)</condition> <block pos:start="119:45" pos:end="135:9">{<block_content pos:start="121:13" pos:end="133:50">

	    <expr_stmt pos:start="121:13" pos:end="121:37"><expr pos:start="121:13" pos:end="121:36"><name pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:19">mapping</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:26">begin</name></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:36">cluster</name></expr>;</expr_stmt>

	    <if_stmt pos:start="123:13" pos:end="131:13"><if pos:start="123:13" pos:end="131:13">if<condition pos:start="123:15" pos:end="123:36">(<expr pos:start="123:16" pos:end="123:35"><call pos:start="123:16" pos:end="123:35"><name pos:start="123:16" pos:end="123:29">read_directory</name><argument_list pos:start="123:30" pos:end="123:35">(<argument pos:start="123:31" pos:end="123:31"><expr pos:start="123:31" pos:end="123:31"><name pos:start="123:31" pos:end="123:31">s</name></expr></argument>, <argument pos:start="123:34" pos:end="123:34"><expr pos:start="123:34" pos:end="123:34"><name pos:start="123:34" pos:end="123:34">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:38" pos:end="131:13">{<block_content pos:start="125:17" pos:end="129:26">

		<expr_stmt pos:start="125:17" pos:end="127:39"><expr pos:start="125:17" pos:end="127:38"><call pos:start="125:17" pos:end="127:38"><name pos:start="125:17" pos:end="125:23">fprintf</name><argument_list pos:start="125:24" pos:end="127:38">(<argument pos:start="125:25" pos:end="125:30"><expr pos:start="125:25" pos:end="125:30"><name pos:start="125:25" pos:end="125:30">stderr</name></expr></argument>, <argument pos:start="125:33" pos:end="125:63"><expr pos:start="125:33" pos:end="125:63"><literal type="string" pos:start="125:33" pos:end="125:63">"Could not read directory %s\n"</literal></expr></argument>,

			<argument pos:start="127:25" pos:end="127:37"><expr pos:start="127:25" pos:end="127:37"><name pos:start="127:25" pos:end="127:37"><name pos:start="127:25" pos:end="127:31">mapping</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:37">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="129:17" pos:end="129:26">return <expr pos:start="129:24" pos:end="129:25"><operator pos:start="129:24" pos:end="129:24">-</operator><literal type="number" pos:start="129:25" pos:end="129:25">1</literal></expr>;</return>

	    </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="133:13" pos:end="133:50"><expr pos:start="133:13" pos:end="133:49"><name pos:start="133:13" pos:end="133:19">mapping</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <call pos:start="133:23" pos:end="133:49"><name pos:start="133:23" pos:end="133:31">array_get</name><argument_list pos:start="133:32" pos:end="133:49">(<argument pos:start="133:33" pos:end="133:45"><expr pos:start="133:33" pos:end="133:45"><operator pos:start="133:33" pos:end="133:33">&amp;</operator><operator pos:start="133:34" pos:end="133:34">(</operator><name pos:start="133:35" pos:end="133:44"><name pos:start="133:35" pos:end="133:35">s</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:44">mapping</name></name><operator pos:start="133:45" pos:end="133:45">)</operator></expr></argument>, <argument pos:start="133:48" pos:end="133:48"><expr pos:start="133:48" pos:end="133:48"><name pos:start="133:48" pos:end="133:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="135:11" pos:end="163:9">else <block pos:start="135:16" pos:end="163:9">{<block_content pos:start="137:13" pos:end="161:13">

	    <expr_stmt pos:start="137:13" pos:end="137:52"><expr pos:start="137:13" pos:end="137:51"><call pos:start="137:13" pos:end="137:51"><name pos:start="137:13" pos:end="137:18">assert</name><argument_list pos:start="137:19" pos:end="137:51">(<argument pos:start="137:20" pos:end="137:50"><expr pos:start="137:20" pos:end="137:50"><name pos:start="137:20" pos:end="137:32"><name pos:start="137:20" pos:end="137:26">mapping</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:32">mode</name></name> <operator pos:start="137:34" pos:end="137:35">==</operator> <name pos:start="137:37" pos:end="137:50">MODE_UNDEFINED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="139:13" pos:end="139:38"><expr pos:start="139:13" pos:end="139:37"><name pos:start="139:13" pos:end="139:25"><name pos:start="139:13" pos:end="139:19">mapping</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:25">mode</name></name><operator pos:start="139:26" pos:end="139:26">=</operator><name pos:start="139:27" pos:end="139:37">MODE_NORMAL</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="141:13" pos:end="141:37"><expr pos:start="141:13" pos:end="141:36"><name pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:19">mapping</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:26">begin</name></name> <operator pos:start="141:28" pos:end="141:28">=</operator> <name pos:start="141:30" pos:end="141:36">cluster</name></expr>;</expr_stmt>

	    <if_stmt pos:start="143:13" pos:end="161:13"><if pos:start="143:13" pos:end="155:13">if <condition pos:start="143:16" pos:end="143:33">(<expr pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:28"><name pos:start="143:17" pos:end="143:23">mapping</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:28">end</name></name> <operator pos:start="143:30" pos:end="143:30">&gt;</operator> <literal type="number" pos:start="143:32" pos:end="143:32">0</literal></expr>)</condition> <block pos:start="143:35" pos:end="155:13">{<block_content pos:start="145:17" pos:end="153:64">

		<decl_stmt pos:start="145:17" pos:end="147:44"><decl pos:start="145:17" pos:end="147:43"><type pos:start="145:17" pos:end="145:27"><name pos:start="145:17" pos:end="145:26">direntry_t</name><modifier pos:start="145:27" pos:end="145:27">*</modifier></type> <name pos:start="145:29" pos:end="145:36">direntry</name> <init pos:start="145:38" pos:end="147:43">= <expr pos:start="145:40" pos:end="147:43"><call pos:start="145:40" pos:end="147:43"><name pos:start="145:40" pos:end="145:48">array_get</name><argument_list pos:start="145:49" pos:end="147:43">(<argument pos:start="145:50" pos:end="145:64"><expr pos:start="145:50" pos:end="145:64"><operator pos:start="145:50" pos:end="145:50">&amp;</operator><operator pos:start="145:51" pos:end="145:51">(</operator><name pos:start="145:52" pos:end="145:63"><name pos:start="145:52" pos:end="145:52">s</name><operator pos:start="145:53" pos:end="145:54">-&gt;</operator><name pos:start="145:55" pos:end="145:63">directory</name></name><operator pos:start="145:64" pos:end="145:64">)</operator></expr></argument>,

			<argument pos:start="147:25" pos:end="147:42"><expr pos:start="147:25" pos:end="147:42"><name pos:start="147:25" pos:end="147:42"><name pos:start="147:25" pos:end="147:31">mapping</name><operator pos:start="147:32" pos:end="147:33">-&gt;</operator><name pos:start="147:34" pos:end="147:42">dir_index</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



		<expr_stmt pos:start="151:17" pos:end="151:78"><expr pos:start="151:17" pos:end="151:77"><name pos:start="151:17" pos:end="151:28"><name pos:start="151:17" pos:end="151:23">mapping</name><operator pos:start="151:24" pos:end="151:25">-&gt;</operator><name pos:start="151:26" pos:end="151:28">end</name></name> <operator pos:start="151:30" pos:end="151:30">=</operator> <name pos:start="151:32" pos:end="151:38">cluster</name> <operator pos:start="151:40" pos:end="151:40">+</operator> <literal type="number" pos:start="151:42" pos:end="151:44">1</literal> <operator pos:start="151:44" pos:end="151:44">+</operator> <operator pos:start="151:46" pos:end="151:46">(</operator><name pos:start="151:47" pos:end="151:58"><name pos:start="151:47" pos:end="151:53">mapping</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:58">end</name></name><operator pos:start="151:59" pos:end="151:59">-</operator><literal type="number" pos:start="151:60" pos:end="151:60">1</literal><operator pos:start="151:61" pos:end="151:61">)</operator><operator pos:start="151:62" pos:end="151:62">/</operator><name pos:start="151:63" pos:end="151:77"><name pos:start="151:63" pos:end="151:63">s</name><operator pos:start="151:64" pos:end="151:65">-&gt;</operator><name pos:start="151:66" pos:end="151:77">cluster_size</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="153:17" pos:end="153:64"><expr pos:start="153:17" pos:end="153:63"><call pos:start="153:17" pos:end="153:63"><name pos:start="153:17" pos:end="153:37">set_begin_of_direntry</name><argument_list pos:start="153:38" pos:end="153:63">(<argument pos:start="153:39" pos:end="153:46"><expr pos:start="153:39" pos:end="153:46"><name pos:start="153:39" pos:end="153:46">direntry</name></expr></argument>, <argument pos:start="153:49" pos:end="153:62"><expr pos:start="153:49" pos:end="153:62"><name pos:start="153:49" pos:end="153:62"><name pos:start="153:49" pos:end="153:55">mapping</name><operator pos:start="153:56" pos:end="153:57">-&gt;</operator><name pos:start="153:58" pos:end="153:62">begin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if> <else pos:start="155:15" pos:end="161:13">else <block pos:start="155:20" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:28">

		<expr_stmt pos:start="157:17" pos:end="157:43"><expr pos:start="157:17" pos:end="157:42"><name pos:start="157:17" pos:end="157:28"><name pos:start="157:17" pos:end="157:23">mapping</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:28">end</name></name> <operator pos:start="157:30" pos:end="157:30">=</operator> <name pos:start="157:32" pos:end="157:38">cluster</name> <operator pos:start="157:40" pos:end="157:40">+</operator> <literal type="number" pos:start="157:42" pos:end="157:42">1</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="159:17" pos:end="159:28"><expr pos:start="159:17" pos:end="159:27"><name pos:start="159:17" pos:end="159:23">fix_fat</name> <operator pos:start="159:25" pos:end="159:25">=</operator> <literal type="number" pos:start="159:27" pos:end="159:27">0</literal></expr>;</expr_stmt>

	    </block_content>}</block></else></if_stmt>

	</block_content>}</block></else></if_stmt>



	<expr_stmt pos:start="167:9" pos:end="167:46"><expr pos:start="167:9" pos:end="167:45"><call pos:start="167:9" pos:end="167:45"><name pos:start="167:9" pos:end="167:14">assert</name><argument_list pos:start="167:15" pos:end="167:45">(<argument pos:start="167:16" pos:end="167:44"><expr pos:start="167:16" pos:end="167:44"><name pos:start="167:16" pos:end="167:29"><name pos:start="167:16" pos:end="167:22">mapping</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:29">begin</name></name> <operator pos:start="167:31" pos:end="167:31">&lt;</operator> <name pos:start="167:33" pos:end="167:44"><name pos:start="167:33" pos:end="167:39">mapping</name><operator pos:start="167:40" pos:end="167:41">-&gt;</operator><name pos:start="167:42" pos:end="167:44">end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<comment type="block" pos:start="171:9" pos:end="171:31">/* next free cluster */</comment>

	<expr_stmt pos:start="173:9" pos:end="173:31"><expr pos:start="173:9" pos:end="173:30"><name pos:start="173:9" pos:end="173:15">cluster</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <name pos:start="173:19" pos:end="173:30"><name pos:start="173:19" pos:end="173:25">mapping</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:30">end</name></name></expr>;</expr_stmt>



	<if_stmt pos:start="177:9" pos:end="191:9"><if pos:start="177:9" pos:end="191:9">if<condition pos:start="177:11" pos:end="177:38">(<expr pos:start="177:12" pos:end="177:37"><name pos:start="177:12" pos:end="177:18">cluster</name> <operator pos:start="177:20" pos:end="177:20">&gt;</operator> <name pos:start="177:22" pos:end="177:37"><name pos:start="177:22" pos:end="177:22">s</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:37">cluster_count</name></name></expr>)</condition> <block pos:start="177:40" pos:end="191:9">{<block_content pos:start="179:13" pos:end="189:27">

	    <expr_stmt pos:start="179:13" pos:end="187:49"><expr pos:start="179:13" pos:end="187:48"><call pos:start="179:13" pos:end="187:48"><name pos:start="179:13" pos:end="179:19">fprintf</name><argument_list pos:start="179:20" pos:end="187:48">(<argument pos:start="179:21" pos:end="179:26"><expr pos:start="179:21" pos:end="179:26"><name pos:start="179:21" pos:end="179:26">stderr</name></expr></argument>,<argument pos:start="179:28" pos:end="179:76"><expr pos:start="179:28" pos:end="179:76"><literal type="string" pos:start="179:28" pos:end="179:76">"Directory does not fit in FAT%d (capacity %s)\n"</literal></expr></argument>,

		    <argument pos:start="181:21" pos:end="181:31"><expr pos:start="181:21" pos:end="181:31"><name pos:start="181:21" pos:end="181:31"><name pos:start="181:21" pos:end="181:21">s</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:31">fat_type</name></name></expr></argument>,

		    <argument pos:start="183:21" pos:end="187:47"><expr pos:start="183:21" pos:end="187:47"><ternary pos:start="183:21" pos:end="187:47"><condition pos:start="183:21" pos:end="183:39"><expr pos:start="183:21" pos:end="183:37"><name pos:start="183:21" pos:end="183:31"><name pos:start="183:21" pos:end="183:21">s</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:31">fat_type</name></name> <operator pos:start="183:33" pos:end="183:34">==</operator> <literal type="number" pos:start="183:36" pos:end="183:37">12</literal></expr> ?</condition><then pos:start="183:41" pos:end="185:75"> <expr pos:start="183:41" pos:end="185:75"><ternary pos:start="183:41" pos:end="185:75"><condition pos:start="183:41" pos:end="183:65"><expr pos:start="183:41" pos:end="183:63"><name pos:start="183:41" pos:end="183:55"><name pos:start="183:41" pos:end="183:41">s</name><operator pos:start="183:42" pos:end="183:43">-&gt;</operator><name pos:start="183:44" pos:end="183:55">sector_count</name></name> <operator pos:start="183:57" pos:end="183:58">==</operator> <literal type="number" pos:start="183:60" pos:end="183:63">2880</literal></expr> ?</condition><then pos:start="183:67" pos:end="183:75"> <expr pos:start="183:67" pos:end="183:75"><literal type="string" pos:start="183:67" pos:end="183:75">"1.44 MB"</literal></expr>

								</then><else pos:start="185:65" pos:end="185:75">: <expr pos:start="185:67" pos:end="185:75"><literal type="string" pos:start="185:67" pos:end="185:75">"2.88 MB"</literal></expr></else></ternary></expr>

				      </then><else pos:start="187:39" pos:end="187:47">: <expr pos:start="187:41" pos:end="187:47"><literal type="string" pos:start="187:41" pos:end="187:47">"504MB"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <return pos:start="189:13" pos:end="189:27">return <expr pos:start="189:20" pos:end="189:26"><operator pos:start="189:20" pos:end="189:20">-</operator><name pos:start="189:21" pos:end="189:26">EINVAL</name></expr>;</return>

	</block_content>}</block></if></if_stmt>



	<comment type="block" pos:start="195:9" pos:end="195:31">/* fix fat for entry */</comment>

	<if_stmt pos:start="197:9" pos:end="207:9"><if pos:start="197:9" pos:end="207:9">if <condition pos:start="197:12" pos:end="197:20">(<expr pos:start="197:13" pos:end="197:19"><name pos:start="197:13" pos:end="197:19">fix_fat</name></expr>)</condition> <block pos:start="197:22" pos:end="207:9">{<block_content pos:start="199:13" pos:end="205:59">

	    <decl_stmt pos:start="199:13" pos:end="199:18"><decl pos:start="199:13" pos:end="199:17"><type pos:start="199:13" pos:end="199:15"><name pos:start="199:13" pos:end="199:15">int</name></type> <name pos:start="199:17" pos:end="199:17">j</name></decl>;</decl_stmt>

	    <for pos:start="201:13" pos:end="203:35">for<control pos:start="201:16" pos:end="201:62">(<init pos:start="201:17" pos:end="201:35"><expr pos:start="201:17" pos:end="201:34"><name pos:start="201:17" pos:end="201:17">j</name> <operator pos:start="201:19" pos:end="201:19">=</operator> <name pos:start="201:21" pos:end="201:34"><name pos:start="201:21" pos:end="201:27">mapping</name><operator pos:start="201:28" pos:end="201:29">-&gt;</operator><name pos:start="201:30" pos:end="201:34">begin</name></name></expr>;</init> <condition pos:start="201:37" pos:end="201:57"><expr pos:start="201:37" pos:end="201:56"><name pos:start="201:37" pos:end="201:37">j</name> <operator pos:start="201:39" pos:end="201:39">&lt;</operator> <name pos:start="201:41" pos:end="201:52"><name pos:start="201:41" pos:end="201:47">mapping</name><operator pos:start="201:48" pos:end="201:49">-&gt;</operator><name pos:start="201:50" pos:end="201:52">end</name></name> <operator pos:start="201:54" pos:end="201:54">-</operator> <literal type="number" pos:start="201:56" pos:end="201:56">1</literal></expr>;</condition> <incr pos:start="201:59" pos:end="201:61"><expr pos:start="201:59" pos:end="201:61"><name pos:start="201:59" pos:end="201:59">j</name><operator pos:start="201:60" pos:end="201:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="203:17" pos:end="203:35"><block_content pos:start="203:17" pos:end="203:35">

		<expr_stmt pos:start="203:17" pos:end="203:35"><expr pos:start="203:17" pos:end="203:34"><call pos:start="203:17" pos:end="203:34"><name pos:start="203:17" pos:end="203:23">fat_set</name><argument_list pos:start="203:24" pos:end="203:34">(<argument pos:start="203:25" pos:end="203:25"><expr pos:start="203:25" pos:end="203:25"><name pos:start="203:25" pos:end="203:25">s</name></expr></argument>, <argument pos:start="203:28" pos:end="203:28"><expr pos:start="203:28" pos:end="203:28"><name pos:start="203:28" pos:end="203:28">j</name></expr></argument>, <argument pos:start="203:31" pos:end="203:33"><expr pos:start="203:31" pos:end="203:33"><name pos:start="203:31" pos:end="203:31">j</name><operator pos:start="203:32" pos:end="203:32">+</operator><literal type="number" pos:start="203:33" pos:end="203:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

	    <expr_stmt pos:start="205:13" pos:end="205:59"><expr pos:start="205:13" pos:end="205:58"><call pos:start="205:13" pos:end="205:58"><name pos:start="205:13" pos:end="205:19">fat_set</name><argument_list pos:start="205:20" pos:end="205:58">(<argument pos:start="205:21" pos:end="205:21"><expr pos:start="205:21" pos:end="205:21"><name pos:start="205:21" pos:end="205:21">s</name></expr></argument>, <argument pos:start="205:24" pos:end="205:39"><expr pos:start="205:24" pos:end="205:39"><name pos:start="205:24" pos:end="205:35"><name pos:start="205:24" pos:end="205:30">mapping</name><operator pos:start="205:31" pos:end="205:32">-&gt;</operator><name pos:start="205:33" pos:end="205:35">end</name></name> <operator pos:start="205:37" pos:end="205:37">-</operator> <literal type="number" pos:start="205:39" pos:end="205:39">1</literal></expr></argument>, <argument pos:start="205:42" pos:end="205:57"><expr pos:start="205:42" pos:end="205:57"><name pos:start="205:42" pos:end="205:57"><name pos:start="205:42" pos:end="205:42">s</name><operator pos:start="205:43" pos:end="205:44">-&gt;</operator><name pos:start="205:45" pos:end="205:57">max_fat_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="213:5" pos:end="213:42"><expr pos:start="213:5" pos:end="213:41"><name pos:start="213:5" pos:end="213:11">mapping</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <call pos:start="213:15" pos:end="213:41"><name pos:start="213:15" pos:end="213:23">array_get</name><argument_list pos:start="213:24" pos:end="213:41">(<argument pos:start="213:25" pos:end="213:37"><expr pos:start="213:25" pos:end="213:37"><operator pos:start="213:25" pos:end="213:25">&amp;</operator><operator pos:start="213:26" pos:end="213:26">(</operator><name pos:start="213:27" pos:end="213:36"><name pos:start="213:27" pos:end="213:27">s</name><operator pos:start="213:28" pos:end="213:29">-&gt;</operator><name pos:start="213:30" pos:end="213:36">mapping</name></name><operator pos:start="213:37" pos:end="213:37">)</operator></expr></argument>, <argument pos:start="213:40" pos:end="213:40"><expr pos:start="213:40" pos:end="213:40"><literal type="number" pos:start="213:40" pos:end="213:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:73"><expr pos:start="215:5" pos:end="215:72"><name pos:start="215:5" pos:end="215:32"><name pos:start="215:5" pos:end="215:5">s</name><operator pos:start="215:6" pos:end="215:7">-&gt;</operator><name pos:start="215:8" pos:end="215:32">sectors_of_root_directory</name></name> <operator pos:start="215:34" pos:end="215:34">=</operator> <name pos:start="215:36" pos:end="215:47"><name pos:start="215:36" pos:end="215:42">mapping</name><operator pos:start="215:43" pos:end="215:44">-&gt;</operator><name pos:start="215:45" pos:end="215:47">end</name></name> <operator pos:start="215:49" pos:end="215:49">*</operator> <name pos:start="215:51" pos:end="215:72"><name pos:start="215:51" pos:end="215:51">s</name><operator pos:start="215:52" pos:end="215:53">-&gt;</operator><name pos:start="215:54" pos:end="215:72">sectors_per_cluster</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:53"><expr pos:start="217:5" pos:end="217:52"><name pos:start="217:5" pos:end="217:37"><name pos:start="217:5" pos:end="217:5">s</name><operator pos:start="217:6" pos:end="217:7">-&gt;</operator><name pos:start="217:8" pos:end="217:37">last_cluster_of_root_directory</name></name> <operator pos:start="217:39" pos:end="217:39">=</operator> <name pos:start="217:41" pos:end="217:52"><name pos:start="217:41" pos:end="217:47">mapping</name><operator pos:start="217:48" pos:end="217:49">-&gt;</operator><name pos:start="217:50" pos:end="217:52">end</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="221:5" pos:end="221:27">/* the FAT signature */</comment>

    <expr_stmt pos:start="223:5" pos:end="223:34"><expr pos:start="223:5" pos:end="223:33"><call pos:start="223:5" pos:end="223:33"><name pos:start="223:5" pos:end="223:11">fat_set</name><argument_list pos:start="223:12" pos:end="223:33">(<argument pos:start="223:13" pos:end="223:13"><expr pos:start="223:13" pos:end="223:13"><name pos:start="223:13" pos:end="223:13">s</name></expr></argument>,<argument pos:start="223:15" pos:end="223:15"><expr pos:start="223:15" pos:end="223:15"><literal type="number" pos:start="223:15" pos:end="223:15">0</literal></expr></argument>,<argument pos:start="223:17" pos:end="223:32"><expr pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:32">max_fat_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:34"><expr pos:start="225:5" pos:end="225:33"><call pos:start="225:5" pos:end="225:33"><name pos:start="225:5" pos:end="225:11">fat_set</name><argument_list pos:start="225:12" pos:end="225:33">(<argument pos:start="225:13" pos:end="225:13"><expr pos:start="225:13" pos:end="225:13"><name pos:start="225:13" pos:end="225:13">s</name></expr></argument>,<argument pos:start="225:15" pos:end="225:15"><expr pos:start="225:15" pos:end="225:15"><literal type="number" pos:start="225:15" pos:end="225:15">1</literal></expr></argument>,<argument pos:start="225:17" pos:end="225:32"><expr pos:start="225:17" pos:end="225:32"><name pos:start="225:17" pos:end="225:32"><name pos:start="225:17" pos:end="225:17">s</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:32">max_fat_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:30"><expr pos:start="229:5" pos:end="229:29"><name pos:start="229:5" pos:end="229:22"><name pos:start="229:5" pos:end="229:5">s</name><operator pos:start="229:6" pos:end="229:7">-&gt;</operator><name pos:start="229:8" pos:end="229:22">current_mapping</name></name> <operator pos:start="229:24" pos:end="229:24">=</operator> <name pos:start="229:26" pos:end="229:29">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="233:5" pos:end="233:83"><expr pos:start="233:5" pos:end="233:82"><name pos:start="233:5" pos:end="233:14">bootsector</name><operator pos:start="233:15" pos:end="233:15">=</operator><operator pos:start="233:16" pos:end="233:16">(</operator><name pos:start="233:17" pos:end="233:28">bootsector_t</name><operator pos:start="233:29" pos:end="233:29">*</operator><operator pos:start="233:30" pos:end="233:30">)</operator><operator pos:start="233:31" pos:end="233:31">(</operator><name pos:start="233:32" pos:end="233:47"><name pos:start="233:32" pos:end="233:32">s</name><operator pos:start="233:33" pos:end="233:34">-&gt;</operator><name pos:start="233:35" pos:end="233:47">first_sectors</name></name><operator pos:start="233:48" pos:end="233:48">+</operator><operator pos:start="233:49" pos:end="233:49">(</operator><name pos:start="233:50" pos:end="233:72"><name pos:start="233:50" pos:end="233:50">s</name><operator pos:start="233:51" pos:end="233:52">-&gt;</operator><name pos:start="233:53" pos:end="233:72">first_sectors_number</name></name><operator pos:start="233:73" pos:end="233:73">-</operator><literal type="number" pos:start="233:74" pos:end="233:74">1</literal><operator pos:start="233:75" pos:end="233:75">)</operator><operator pos:start="233:76" pos:end="233:76">*</operator><literal type="number" pos:start="233:77" pos:end="233:81">0x200</literal><operator pos:start="233:82" pos:end="233:82">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:29"><expr pos:start="235:5" pos:end="235:28"><name pos:start="235:5" pos:end="235:23"><name pos:start="235:5" pos:end="235:14">bootsector</name><operator pos:start="235:15" pos:end="235:16">-&gt;</operator><name pos:start="235:17" pos:end="235:20">jump</name><index pos:start="235:21" pos:end="235:23">[<expr pos:start="235:22" pos:end="235:22"><literal type="number" pos:start="235:22" pos:end="235:22">0</literal></expr>]</index></name><operator pos:start="235:24" pos:end="235:24">=</operator><literal type="number" pos:start="235:25" pos:end="235:28">0xeb</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:29"><expr pos:start="237:5" pos:end="237:28"><name pos:start="237:5" pos:end="237:23"><name pos:start="237:5" pos:end="237:14">bootsector</name><operator pos:start="237:15" pos:end="237:16">-&gt;</operator><name pos:start="237:17" pos:end="237:20">jump</name><index pos:start="237:21" pos:end="237:23">[<expr pos:start="237:22" pos:end="237:22"><literal type="number" pos:start="237:22" pos:end="237:22">1</literal></expr>]</index></name><operator pos:start="237:24" pos:end="237:24">=</operator><literal type="number" pos:start="237:25" pos:end="237:28">0x3e</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:29"><expr pos:start="239:5" pos:end="239:28"><name pos:start="239:5" pos:end="239:23"><name pos:start="239:5" pos:end="239:14">bootsector</name><operator pos:start="239:15" pos:end="239:16">-&gt;</operator><name pos:start="239:17" pos:end="239:20">jump</name><index pos:start="239:21" pos:end="239:23">[<expr pos:start="239:22" pos:end="239:22"><literal type="number" pos:start="239:22" pos:end="239:22">2</literal></expr>]</index></name><operator pos:start="239:24" pos:end="239:24">=</operator><literal type="number" pos:start="239:25" pos:end="239:28">0x90</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:42"><expr pos:start="241:5" pos:end="241:41"><call pos:start="241:5" pos:end="241:41"><name pos:start="241:5" pos:end="241:10">memcpy</name><argument_list pos:start="241:11" pos:end="241:41">(<argument pos:start="241:12" pos:end="241:27"><expr pos:start="241:12" pos:end="241:27"><name pos:start="241:12" pos:end="241:27"><name pos:start="241:12" pos:end="241:21">bootsector</name><operator pos:start="241:22" pos:end="241:23">-&gt;</operator><name pos:start="241:24" pos:end="241:27">name</name></name></expr></argument>,<argument pos:start="241:29" pos:end="241:38"><expr pos:start="241:29" pos:end="241:38"><literal type="string" pos:start="241:29" pos:end="241:38">"QEMU    "</literal></expr></argument>,<argument pos:start="241:40" pos:end="241:40"><expr pos:start="241:40" pos:end="241:40"><literal type="number" pos:start="241:40" pos:end="241:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:47"><expr pos:start="243:5" pos:end="243:46"><name pos:start="243:5" pos:end="243:27"><name pos:start="243:5" pos:end="243:14">bootsector</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:27">sector_size</name></name><operator pos:start="243:28" pos:end="243:28">=</operator><call pos:start="243:29" pos:end="243:46"><name pos:start="243:29" pos:end="243:39">cpu_to_le16</name><argument_list pos:start="243:40" pos:end="243:46">(<argument pos:start="243:41" pos:end="243:45"><expr pos:start="243:41" pos:end="243:45"><literal type="number" pos:start="243:41" pos:end="243:45">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:59"><expr pos:start="245:5" pos:end="245:58"><name pos:start="245:5" pos:end="245:35"><name pos:start="245:5" pos:end="245:14">bootsector</name><operator pos:start="245:15" pos:end="245:16">-&gt;</operator><name pos:start="245:17" pos:end="245:35">sectors_per_cluster</name></name><operator pos:start="245:36" pos:end="245:36">=</operator><name pos:start="245:37" pos:end="245:58"><name pos:start="245:37" pos:end="245:37">s</name><operator pos:start="245:38" pos:end="245:39">-&gt;</operator><name pos:start="245:40" pos:end="245:58">sectors_per_cluster</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:48"><expr pos:start="247:5" pos:end="247:47"><name pos:start="247:5" pos:end="247:32"><name pos:start="247:5" pos:end="247:14">bootsector</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:32">reserved_sectors</name></name><operator pos:start="247:33" pos:end="247:33">=</operator><call pos:start="247:34" pos:end="247:47"><name pos:start="247:34" pos:end="247:44">cpu_to_le16</name><argument_list pos:start="247:45" pos:end="247:47">(<argument pos:start="247:46" pos:end="247:46"><expr pos:start="247:46" pos:end="247:46"><literal type="number" pos:start="247:46" pos:end="247:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:35"><expr pos:start="249:5" pos:end="249:34"><name pos:start="249:5" pos:end="249:30"><name pos:start="249:5" pos:end="249:14">bootsector</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:30">number_of_fats</name></name><operator pos:start="249:31" pos:end="249:31">=</operator><literal type="number" pos:start="249:32" pos:end="249:34">0x2</literal></expr>;</expr_stmt> <comment type="block" pos:start="249:37" pos:end="249:56">/* number of FATs */</comment>

    <expr_stmt pos:start="251:5" pos:end="251:76"><expr pos:start="251:5" pos:end="251:75"><name pos:start="251:5" pos:end="251:28"><name pos:start="251:5" pos:end="251:14">bootsector</name><operator pos:start="251:15" pos:end="251:16">-&gt;</operator><name pos:start="251:17" pos:end="251:28">root_entries</name></name><operator pos:start="251:29" pos:end="251:29">=</operator><call pos:start="251:30" pos:end="251:75"><name pos:start="251:30" pos:end="251:40">cpu_to_le16</name><argument_list pos:start="251:41" pos:end="251:75">(<argument pos:start="251:42" pos:end="251:74"><expr pos:start="251:42" pos:end="251:74"><name pos:start="251:42" pos:end="251:69"><name pos:start="251:42" pos:end="251:42">s</name><operator pos:start="251:43" pos:end="251:44">-&gt;</operator><name pos:start="251:45" pos:end="251:69">sectors_of_root_directory</name></name><operator pos:start="251:70" pos:end="251:70">*</operator><literal type="number" pos:start="251:71" pos:end="251:74">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:86"><expr pos:start="253:5" pos:end="253:85"><name pos:start="253:5" pos:end="253:31"><name pos:start="253:5" pos:end="253:14">bootsector</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:31">total_sectors16</name></name><operator pos:start="253:32" pos:end="253:32">=</operator><ternary pos:start="253:33" pos:end="253:85"><condition pos:start="253:33" pos:end="253:55"><expr pos:start="253:33" pos:end="253:54"><name pos:start="253:33" pos:end="253:47"><name pos:start="253:33" pos:end="253:33">s</name><operator pos:start="253:34" pos:end="253:35">-&gt;</operator><name pos:start="253:36" pos:end="253:47">sector_count</name></name><operator pos:start="253:48" pos:end="253:48">&gt;</operator><literal type="number" pos:start="253:49" pos:end="253:54">0xffff</literal></expr>?</condition><then pos:start="253:56" pos:end="253:56"><expr pos:start="253:56" pos:end="253:56"><literal type="number" pos:start="253:56" pos:end="253:56">0</literal></expr></then><else pos:start="253:57" pos:end="253:85">:<expr pos:start="253:58" pos:end="253:85"><call pos:start="253:58" pos:end="253:85"><name pos:start="253:58" pos:end="253:68">cpu_to_le16</name><argument_list pos:start="253:69" pos:end="253:85">(<argument pos:start="253:70" pos:end="253:84"><expr pos:start="253:70" pos:end="253:84"><name pos:start="253:70" pos:end="253:84"><name pos:start="253:70" pos:end="253:70">s</name><operator pos:start="253:71" pos:end="253:72">-&gt;</operator><name pos:start="253:73" pos:end="253:84">sector_count</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:82"><expr pos:start="255:5" pos:end="255:81"><name pos:start="255:5" pos:end="255:26"><name pos:start="255:5" pos:end="255:14">bootsector</name><operator pos:start="255:15" pos:end="255:16">-&gt;</operator><name pos:start="255:17" pos:end="255:26">media_type</name></name><operator pos:start="255:27" pos:end="255:27">=</operator><operator pos:start="255:28" pos:end="255:28">(</operator><ternary pos:start="255:29" pos:end="255:80"><condition pos:start="255:29" pos:end="255:44"><expr pos:start="255:29" pos:end="255:43"><name pos:start="255:29" pos:end="255:39"><name pos:start="255:29" pos:end="255:29">s</name><operator pos:start="255:30" pos:end="255:31">-&gt;</operator><name pos:start="255:32" pos:end="255:39">fat_type</name></name><operator pos:start="255:40" pos:end="255:41">!=</operator><literal type="number" pos:start="255:42" pos:end="255:43">12</literal></expr>?</condition><then pos:start="255:45" pos:end="255:48"><expr pos:start="255:45" pos:end="255:48"><literal type="number" pos:start="255:45" pos:end="255:48">0xf8</literal></expr></then><else pos:start="255:49" pos:end="255:80">:<expr pos:start="255:50" pos:end="255:80"><ternary pos:start="255:50" pos:end="255:80"><condition pos:start="255:50" pos:end="255:71"><expr pos:start="255:50" pos:end="255:70"><name pos:start="255:50" pos:end="255:64"><name pos:start="255:50" pos:end="255:50">s</name><operator pos:start="255:51" pos:end="255:52">-&gt;</operator><name pos:start="255:53" pos:end="255:64">sector_count</name></name><operator pos:start="255:65" pos:end="255:66">==</operator><literal type="number" pos:start="255:67" pos:end="255:70">5760</literal></expr>?</condition><then pos:start="255:72" pos:end="255:75"><expr pos:start="255:72" pos:end="255:75"><literal type="number" pos:start="255:72" pos:end="255:75">0xf9</literal></expr></then><else pos:start="255:76" pos:end="255:80">:<expr pos:start="255:77" pos:end="255:80"><literal type="number" pos:start="255:77" pos:end="255:80">0xf8</literal></expr></else></ternary></expr></else></ternary><operator pos:start="255:81" pos:end="255:81">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="255:84" pos:end="255:105">/* media descriptor */</comment>

    <expr_stmt pos:start="257:5" pos:end="257:47"><expr pos:start="257:5" pos:end="257:46"><name pos:start="257:5" pos:end="257:21"><name pos:start="257:5" pos:end="257:5">s</name><operator pos:start="257:6" pos:end="257:7">-&gt;</operator><name pos:start="257:8" pos:end="257:10">fat</name><operator pos:start="257:11" pos:end="257:11">.</operator><name pos:start="257:12" pos:end="257:18">pointer</name><index pos:start="257:19" pos:end="257:21">[<expr pos:start="257:20" pos:end="257:20"><literal type="number" pos:start="257:20" pos:end="257:20">0</literal></expr>]</index></name> <operator pos:start="257:23" pos:end="257:23">=</operator> <name pos:start="257:25" pos:end="257:46"><name pos:start="257:25" pos:end="257:34">bootsector</name><operator pos:start="257:35" pos:end="257:36">-&gt;</operator><name pos:start="257:37" pos:end="257:46">media_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:64"><expr pos:start="259:5" pos:end="259:63"><name pos:start="259:5" pos:end="259:31"><name pos:start="259:5" pos:end="259:14">bootsector</name><operator pos:start="259:15" pos:end="259:16">-&gt;</operator><name pos:start="259:17" pos:end="259:31">sectors_per_fat</name></name><operator pos:start="259:32" pos:end="259:32">=</operator><call pos:start="259:33" pos:end="259:63"><name pos:start="259:33" pos:end="259:43">cpu_to_le16</name><argument_list pos:start="259:44" pos:end="259:63">(<argument pos:start="259:45" pos:end="259:62"><expr pos:start="259:45" pos:end="259:62"><name pos:start="259:45" pos:end="259:62"><name pos:start="259:45" pos:end="259:45">s</name><operator pos:start="259:46" pos:end="259:47">-&gt;</operator><name pos:start="259:48" pos:end="259:62">sectors_per_fat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:59"><expr pos:start="261:5" pos:end="261:58"><name pos:start="261:5" pos:end="261:33"><name pos:start="261:5" pos:end="261:14">bootsector</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:33">sectors_per_track</name></name><operator pos:start="261:34" pos:end="261:34">=</operator><call pos:start="261:35" pos:end="261:58"><name pos:start="261:35" pos:end="261:45">cpu_to_le16</name><argument_list pos:start="261:46" pos:end="261:58">(<argument pos:start="261:47" pos:end="261:57"><expr pos:start="261:47" pos:end="261:57"><name pos:start="261:47" pos:end="261:57"><name pos:start="261:47" pos:end="261:47">s</name><operator pos:start="261:48" pos:end="261:49">-&gt;</operator><name pos:start="261:50" pos:end="261:51">bs</name><operator pos:start="261:52" pos:end="261:53">-&gt;</operator><name pos:start="261:54" pos:end="261:57">secs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:58"><expr pos:start="263:5" pos:end="263:57"><name pos:start="263:5" pos:end="263:31"><name pos:start="263:5" pos:end="263:14">bootsector</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:31">number_of_heads</name></name><operator pos:start="263:32" pos:end="263:32">=</operator><call pos:start="263:33" pos:end="263:57"><name pos:start="263:33" pos:end="263:43">cpu_to_le16</name><argument_list pos:start="263:44" pos:end="263:57">(<argument pos:start="263:45" pos:end="263:56"><expr pos:start="263:45" pos:end="263:56"><name pos:start="263:45" pos:end="263:56"><name pos:start="263:45" pos:end="263:45">s</name><operator pos:start="263:46" pos:end="263:47">-&gt;</operator><name pos:start="263:48" pos:end="263:49">bs</name><operator pos:start="263:50" pos:end="263:51">-&gt;</operator><name pos:start="263:52" pos:end="263:56">heads</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:78"><expr pos:start="265:5" pos:end="265:77"><name pos:start="265:5" pos:end="265:30"><name pos:start="265:5" pos:end="265:14">bootsector</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:30">hidden_sectors</name></name><operator pos:start="265:31" pos:end="265:31">=</operator><call pos:start="265:32" pos:end="265:77"><name pos:start="265:32" pos:end="265:42">cpu_to_le32</name><argument_list pos:start="265:43" pos:end="265:77">(<argument pos:start="265:44" pos:end="265:76"><expr pos:start="265:44" pos:end="265:76"><ternary pos:start="265:44" pos:end="265:76"><condition pos:start="265:44" pos:end="265:70"><expr pos:start="265:44" pos:end="265:69"><name pos:start="265:44" pos:end="265:66"><name pos:start="265:44" pos:end="265:44">s</name><operator pos:start="265:45" pos:end="265:46">-&gt;</operator><name pos:start="265:47" pos:end="265:66">first_sectors_number</name></name><operator pos:start="265:67" pos:end="265:68">==</operator><literal type="number" pos:start="265:69" pos:end="265:69">1</literal></expr>?</condition><then pos:start="265:71" pos:end="265:71"><expr pos:start="265:71" pos:end="265:71"><literal type="number" pos:start="265:71" pos:end="265:71">0</literal></expr></then><else pos:start="265:72" pos:end="265:76">:<expr pos:start="265:73" pos:end="265:76"><literal type="number" pos:start="265:73" pos:end="265:76">0x3f</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:84"><expr pos:start="267:5" pos:end="267:83"><name pos:start="267:5" pos:end="267:29"><name pos:start="267:5" pos:end="267:14">bootsector</name><operator pos:start="267:15" pos:end="267:16">-&gt;</operator><name pos:start="267:17" pos:end="267:29">total_sectors</name></name><operator pos:start="267:30" pos:end="267:30">=</operator><call pos:start="267:31" pos:end="267:83"><name pos:start="267:31" pos:end="267:41">cpu_to_le32</name><argument_list pos:start="267:42" pos:end="267:83">(<argument pos:start="267:43" pos:end="267:82"><expr pos:start="267:43" pos:end="267:82"><ternary pos:start="267:43" pos:end="267:82"><condition pos:start="267:43" pos:end="267:65"><expr pos:start="267:43" pos:end="267:64"><name pos:start="267:43" pos:end="267:57"><name pos:start="267:43" pos:end="267:43">s</name><operator pos:start="267:44" pos:end="267:45">-&gt;</operator><name pos:start="267:46" pos:end="267:57">sector_count</name></name><operator pos:start="267:58" pos:end="267:58">&gt;</operator><literal type="number" pos:start="267:59" pos:end="267:64">0xffff</literal></expr>?</condition><then pos:start="267:66" pos:end="267:80"><expr pos:start="267:66" pos:end="267:80"><name pos:start="267:66" pos:end="267:80"><name pos:start="267:66" pos:end="267:66">s</name><operator pos:start="267:67" pos:end="267:68">-&gt;</operator><name pos:start="267:69" pos:end="267:80">sector_count</name></name></expr></then><else pos:start="267:81" pos:end="267:82">:<expr pos:start="267:82" pos:end="267:82"><literal type="number" pos:start="267:82" pos:end="267:82">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="271:5" pos:end="271:45">/* LATER TODO: if FAT32, this is wrong */</comment>

    <expr_stmt pos:start="273:5" pos:end="273:60"><expr pos:start="273:5" pos:end="273:59"><name pos:start="273:5" pos:end="273:36"><name pos:start="273:5" pos:end="273:14">bootsector</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:17">u</name><operator pos:start="273:18" pos:end="273:18">.</operator><name pos:start="273:19" pos:end="273:23">fat16</name><operator pos:start="273:24" pos:end="273:24">.</operator><name pos:start="273:25" pos:end="273:36">drive_number</name></name><operator pos:start="273:37" pos:end="273:37">=</operator><ternary pos:start="273:38" pos:end="273:59"><condition pos:start="273:38" pos:end="273:53"><expr pos:start="273:38" pos:end="273:52"><name pos:start="273:38" pos:end="273:48"><name pos:start="273:38" pos:end="273:38">s</name><operator pos:start="273:39" pos:end="273:40">-&gt;</operator><name pos:start="273:41" pos:end="273:48">fat_type</name></name><operator pos:start="273:49" pos:end="273:50">==</operator><literal type="number" pos:start="273:51" pos:end="273:52">12</literal></expr>?</condition><then pos:start="273:54" pos:end="273:54"><expr pos:start="273:54" pos:end="273:54"><literal type="number" pos:start="273:54" pos:end="273:54">0</literal></expr></then><else pos:start="273:55" pos:end="273:59">:<expr pos:start="273:56" pos:end="273:59"><literal type="number" pos:start="273:56" pos:end="273:59">0x80</literal></expr></else></ternary></expr>;</expr_stmt> <comment type="block" pos:start="273:62" pos:end="273:92">/* assume this is hda (TODO) */</comment>

    <expr_stmt pos:start="275:5" pos:end="275:39"><expr pos:start="275:5" pos:end="275:38"><name pos:start="275:5" pos:end="275:36"><name pos:start="275:5" pos:end="275:14">bootsector</name><operator pos:start="275:15" pos:end="275:16">-&gt;</operator><name pos:start="275:17" pos:end="275:17">u</name><operator pos:start="275:18" pos:end="275:18">.</operator><name pos:start="275:19" pos:end="275:23">fat16</name><operator pos:start="275:24" pos:end="275:24">.</operator><name pos:start="275:25" pos:end="275:36">current_head</name></name><operator pos:start="275:37" pos:end="275:37">=</operator><literal type="number" pos:start="275:38" pos:end="275:38">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:39"><expr pos:start="277:5" pos:end="277:38"><name pos:start="277:5" pos:end="277:33"><name pos:start="277:5" pos:end="277:14">bootsector</name><operator pos:start="277:15" pos:end="277:16">-&gt;</operator><name pos:start="277:17" pos:end="277:17">u</name><operator pos:start="277:18" pos:end="277:18">.</operator><name pos:start="277:19" pos:end="277:23">fat16</name><operator pos:start="277:24" pos:end="277:24">.</operator><name pos:start="277:25" pos:end="277:33">signature</name></name><operator pos:start="277:34" pos:end="277:34">=</operator><literal type="number" pos:start="277:35" pos:end="277:38">0x29</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="279:51"><expr pos:start="279:5" pos:end="279:50"><name pos:start="279:5" pos:end="279:26"><name pos:start="279:5" pos:end="279:14">bootsector</name><operator pos:start="279:15" pos:end="279:16">-&gt;</operator><name pos:start="279:17" pos:end="279:17">u</name><operator pos:start="279:18" pos:end="279:18">.</operator><name pos:start="279:19" pos:end="279:23">fat16</name><operator pos:start="279:24" pos:end="279:24">.</operator><name pos:start="279:25" pos:end="279:26">id</name></name><operator pos:start="279:27" pos:end="279:27">=</operator><call pos:start="279:28" pos:end="279:50"><name pos:start="279:28" pos:end="279:38">cpu_to_le32</name><argument_list pos:start="279:39" pos:end="279:50">(<argument pos:start="279:40" pos:end="279:49"><expr pos:start="279:40" pos:end="279:49"><literal type="number" pos:start="279:40" pos:end="279:49">0xfabe1afd</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="283:5" pos:end="283:62"><expr pos:start="283:5" pos:end="283:61"><call pos:start="283:5" pos:end="283:61"><name pos:start="283:5" pos:end="283:10">memcpy</name><argument_list pos:start="283:11" pos:end="283:61">(<argument pos:start="283:12" pos:end="283:43"><expr pos:start="283:12" pos:end="283:43"><name pos:start="283:12" pos:end="283:43"><name pos:start="283:12" pos:end="283:21">bootsector</name><operator pos:start="283:22" pos:end="283:23">-&gt;</operator><name pos:start="283:24" pos:end="283:24">u</name><operator pos:start="283:25" pos:end="283:25">.</operator><name pos:start="283:26" pos:end="283:30">fat16</name><operator pos:start="283:31" pos:end="283:31">.</operator><name pos:start="283:32" pos:end="283:43">volume_label</name></name></expr></argument>,<argument pos:start="283:45" pos:end="283:57"><expr pos:start="283:45" pos:end="283:57"><literal type="string" pos:start="283:45" pos:end="283:57">"QEMU VVFAT "</literal></expr></argument>,<argument pos:start="283:59" pos:end="283:60"><expr pos:start="283:59" pos:end="283:60"><literal type="number" pos:start="283:59" pos:end="283:60">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:102"><expr pos:start="285:5" pos:end="285:101"><call pos:start="285:5" pos:end="285:101"><name pos:start="285:5" pos:end="285:10">memcpy</name><argument_list pos:start="285:11" pos:end="285:101">(<argument pos:start="285:12" pos:end="285:31"><expr pos:start="285:12" pos:end="285:31"><name pos:start="285:12" pos:end="285:31"><name pos:start="285:12" pos:end="285:21">bootsector</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:31">fat_type</name></name></expr></argument>,<argument pos:start="285:33" pos:end="285:98"><expr pos:start="285:33" pos:end="285:98"><operator pos:start="285:33" pos:end="285:33">(</operator><ternary pos:start="285:34" pos:end="285:97"><condition pos:start="285:34" pos:end="285:49"><expr pos:start="285:34" pos:end="285:48"><name pos:start="285:34" pos:end="285:44"><name pos:start="285:34" pos:end="285:34">s</name><operator pos:start="285:35" pos:end="285:36">-&gt;</operator><name pos:start="285:37" pos:end="285:44">fat_type</name></name><operator pos:start="285:45" pos:end="285:46">==</operator><literal type="number" pos:start="285:47" pos:end="285:48">12</literal></expr>?</condition><then pos:start="285:50" pos:end="285:59"><expr pos:start="285:50" pos:end="285:59"><literal type="string" pos:start="285:50" pos:end="285:59">"FAT12   "</literal></expr></then><else pos:start="285:60" pos:end="285:97">:<expr pos:start="285:61" pos:end="285:97"><ternary pos:start="285:61" pos:end="285:97"><condition pos:start="285:61" pos:end="285:76"><expr pos:start="285:61" pos:end="285:75"><name pos:start="285:61" pos:end="285:71"><name pos:start="285:61" pos:end="285:61">s</name><operator pos:start="285:62" pos:end="285:63">-&gt;</operator><name pos:start="285:64" pos:end="285:71">fat_type</name></name><operator pos:start="285:72" pos:end="285:73">==</operator><literal type="number" pos:start="285:74" pos:end="285:75">16</literal></expr>?</condition><then pos:start="285:77" pos:end="285:86"><expr pos:start="285:77" pos:end="285:86"><literal type="string" pos:start="285:77" pos:end="285:86">"FAT16   "</literal></expr></then><else pos:start="285:87" pos:end="285:97">:<expr pos:start="285:88" pos:end="285:97"><literal type="string" pos:start="285:88" pos:end="285:97">"FAT32   "</literal></expr></else></ternary></expr></else></ternary><operator pos:start="285:98" pos:end="285:98">)</operator></expr></argument>,<argument pos:start="285:100" pos:end="285:100"><expr pos:start="285:100" pos:end="285:100"><literal type="number" pos:start="285:100" pos:end="285:100">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:30"><expr pos:start="287:5" pos:end="287:29"><name pos:start="287:5" pos:end="287:24"><name pos:start="287:5" pos:end="287:14">bootsector</name><operator pos:start="287:15" pos:end="287:16">-&gt;</operator><name pos:start="287:17" pos:end="287:21">magic</name><index pos:start="287:22" pos:end="287:24">[<expr pos:start="287:23" pos:end="287:23"><literal type="number" pos:start="287:23" pos:end="287:23">0</literal></expr>]</index></name><operator pos:start="287:25" pos:end="287:25">=</operator><literal type="number" pos:start="287:26" pos:end="287:29">0x55</literal></expr>;</expr_stmt> <expr_stmt pos:start="287:32" pos:end="287:57"><expr pos:start="287:32" pos:end="287:56"><name pos:start="287:32" pos:end="287:51"><name pos:start="287:32" pos:end="287:41">bootsector</name><operator pos:start="287:42" pos:end="287:43">-&gt;</operator><name pos:start="287:44" pos:end="287:48">magic</name><index pos:start="287:49" pos:end="287:51">[<expr pos:start="287:50" pos:end="287:50"><literal type="number" pos:start="287:50" pos:end="287:50">1</literal></expr>]</index></name><operator pos:start="287:52" pos:end="287:52">=</operator><literal type="number" pos:start="287:53" pos:end="287:56">0xaa</literal></expr>;</expr_stmt>



    <return pos:start="291:5" pos:end="291:13">return <expr pos:start="291:12" pos:end="291:12"><literal type="number" pos:start="291:12" pos:end="291:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
