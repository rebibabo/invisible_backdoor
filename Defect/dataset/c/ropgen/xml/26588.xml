<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26588.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">AVFrame</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:32">hwmap_get_buffer</name><parameter_list pos:start="1:33" pos:end="1:68">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:45">AVFilterLink</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">inlink</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:60"><decl pos:start="1:56" pos:end="1:60"><type pos:start="1:56" pos:end="1:60"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:60">w</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:67"><decl pos:start="1:63" pos:end="1:67"><type pos:start="1:63" pos:end="1:67"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:67">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:5">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:26">avctx</name> <init pos:start="5:28" pos:end="5:40">= <expr pos:start="5:30" pos:end="5:40"><name pos:start="5:30" pos:end="5:40"><name pos:start="5:30" pos:end="5:35">inlink</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:40">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:16">AVFilterLink</name>  <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:26">outlink</name> <init pos:start="7:28" pos:end="7:46">= <expr pos:start="7:30" pos:end="7:46"><name pos:start="7:30" pos:end="7:46"><name pos:start="7:30" pos:end="7:34">avctx</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:43">outputs</name><index pos:start="7:44" pos:end="7:46">[<expr pos:start="7:45" pos:end="7:45"><literal type="number" pos:start="7:45" pos:end="7:45">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:16">HWMapContext</name>      <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">ctx</name> <init pos:start="9:28" pos:end="9:40">= <expr pos:start="9:30" pos:end="9:40"><name pos:start="9:30" pos:end="9:40"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:40">priv</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="73:5"><if pos:start="13:5" pos:end="69:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:11">ctx</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:26">map_backwards</name></name></expr>)</condition> <block pos:start="13:29" pos:end="69:5">{<block_content pos:start="15:9" pos:end="67:19">

        <decl_stmt pos:start="15:9" pos:end="15:27"><decl pos:start="15:9" pos:end="15:20"><type pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:15">AVFrame</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:20">src</name></decl>, <decl pos:start="15:23" pos:end="15:26"><type ref="prev" pos:start="15:9" pos:end="15:17"><modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:26">dst</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:16"><decl pos:start="17:9" pos:end="17:15"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:15">err</name></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:49"><expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:11">src</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:48"><name pos:start="21:15" pos:end="21:33">ff_get_video_buffer</name><argument_list pos:start="21:34" pos:end="21:48">(<argument pos:start="21:35" pos:end="21:41"><expr pos:start="21:35" pos:end="21:41"><name pos:start="21:35" pos:end="21:41">outlink</name></expr></argument>, <argument pos:start="21:44" pos:end="21:44"><expr pos:start="21:44" pos:end="21:44"><name pos:start="21:44" pos:end="21:44">w</name></expr></argument>, <argument pos:start="21:47" pos:end="21:47"><expr pos:start="21:47" pos:end="21:47"><name pos:start="21:47" pos:end="21:47">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:17">(<expr pos:start="23:13" pos:end="23:16"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:16">src</name></expr>)</condition> <block pos:start="23:19" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:24">

            <expr_stmt pos:start="25:13" pos:end="27:52"><expr pos:start="25:13" pos:end="27:51"><call pos:start="25:13" pos:end="27:51"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="27:51">(<argument pos:start="25:20" pos:end="25:24"><expr pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:24">avctx</name></expr></argument>, <argument pos:start="25:27" pos:end="25:38"><expr pos:start="25:27" pos:end="25:38"><name pos:start="25:27" pos:end="25:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:41" pos:end="27:50"><expr pos:start="25:41" pos:end="27:50"><literal type="string" pos:start="25:41" pos:end="25:68">"Failed to allocate source "</literal>

                   <literal type="string" pos:start="27:20" pos:end="27:50">"frame for software mapping.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:24">return <expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:11">dst</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:30"><name pos:start="35:15" pos:end="35:28">av_frame_alloc</name><argument_list pos:start="35:29" pos:end="35:30">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:17">(<expr pos:start="37:13" pos:end="37:16"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:16">dst</name></expr>)</condition> <block pos:start="37:19" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:24">

            <expr_stmt pos:start="39:13" pos:end="39:32"><expr pos:start="39:13" pos:end="39:31"><call pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:25">av_frame_free</name><argument_list pos:start="39:26" pos:end="39:31">(<argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><operator pos:start="39:27" pos:end="39:27">&amp;</operator><name pos:start="39:28" pos:end="39:30">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:24">return <expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:11">err</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:49"><name pos:start="47:15" pos:end="47:28">av_hwframe_map</name><argument_list pos:start="47:29" pos:end="47:49">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">dst</name></expr></argument>, <argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:37">src</name></expr></argument>, <argument pos:start="47:40" pos:end="47:48"><expr pos:start="47:40" pos:end="47:48"><name pos:start="47:40" pos:end="47:48"><name pos:start="47:40" pos:end="47:42">ctx</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:48">mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="61:9"><if pos:start="49:9" pos:end="61:9">if <condition pos:start="49:12" pos:end="49:16">(<expr pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">err</name></expr>)</condition> <block pos:start="49:18" pos:end="61:9">{<block_content pos:start="51:13" pos:end="59:24">

            <expr_stmt pos:start="51:13" pos:end="53:43"><expr pos:start="51:13" pos:end="53:42"><call pos:start="51:13" pos:end="53:42"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="53:42">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">avctx</name></expr></argument>, <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:41" pos:end="53:36"><expr pos:start="51:41" pos:end="53:36"><literal type="string" pos:start="51:41" pos:end="51:65">"Failed to map frame to "</literal>

                   <literal type="string" pos:start="53:20" pos:end="53:36">"software: %d.\n"</literal></expr></argument>, <argument pos:start="53:39" pos:end="53:41"><expr pos:start="53:39" pos:end="53:41"><name pos:start="53:39" pos:end="53:41">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><call pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:25">av_frame_free</name><argument_list pos:start="55:26" pos:end="55:31">(<argument pos:start="55:27" pos:end="55:30"><expr pos:start="55:27" pos:end="55:30"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:30">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:32"><expr pos:start="57:13" pos:end="57:31"><call pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:25">av_frame_free</name><argument_list pos:start="57:26" pos:end="57:31">(<argument pos:start="57:27" pos:end="57:30"><expr pos:start="57:27" pos:end="57:30"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:30">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:24">return <expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><call pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:21">av_frame_free</name><argument_list pos:start="65:22" pos:end="65:27">(<argument pos:start="65:23" pos:end="65:26"><expr pos:start="65:23" pos:end="65:26"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:26">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">dst</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="73:5">else <block pos:start="69:12" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:57">

        <return pos:start="71:9" pos:end="71:57">return <expr pos:start="71:16" pos:end="71:56"><call pos:start="71:16" pos:end="71:56"><name pos:start="71:16" pos:end="71:42">ff_default_get_video_buffer</name><argument_list pos:start="71:43" pos:end="71:56">(<argument pos:start="71:44" pos:end="71:49"><expr pos:start="71:44" pos:end="71:49"><name pos:start="71:44" pos:end="71:49">inlink</name></expr></argument>, <argument pos:start="71:52" pos:end="71:52"><expr pos:start="71:52" pos:end="71:52"><name pos:start="71:52" pos:end="71:52">w</name></expr></argument>, <argument pos:start="71:55" pos:end="71:55"><expr pos:start="71:55" pos:end="71:55"><name pos:start="71:55" pos:end="71:55">h</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
