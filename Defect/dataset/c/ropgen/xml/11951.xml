<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11951.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">scsi_req_parse</name><parameter_list pos:start="1:19" pos:end="1:50">(<parameter pos:start="1:20" pos:end="1:35"><decl pos:start="1:20" pos:end="1:35"><type pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:30">SCSIRequest</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">req</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:44">uint8_t</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rc</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:36">(<expr pos:start="9:9" pos:end="9:35"><name pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:11">req</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:16">dev</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:22">type</name></name> <operator pos:start="9:24" pos:end="9:25">==</operator> <name pos:start="9:27" pos:end="9:35">TYPE_TAPE</name></expr>)</condition> <block pos:start="9:38" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:62">

        <expr_stmt pos:start="11:9" pos:end="11:62"><expr pos:start="11:9" pos:end="11:61"><name pos:start="11:9" pos:end="11:10">rc</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <call pos:start="11:14" pos:end="11:61"><name pos:start="11:14" pos:end="11:35">scsi_req_stream_length</name><argument_list pos:start="11:36" pos:end="11:61">(<argument pos:start="11:37" pos:end="11:45"><expr pos:start="11:37" pos:end="11:45"><operator pos:start="11:37" pos:end="11:37">&amp;</operator><name pos:start="11:38" pos:end="11:45"><name pos:start="11:38" pos:end="11:40">req</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:45">cmd</name></name></expr></argument>, <argument pos:start="11:48" pos:end="11:55"><expr pos:start="11:48" pos:end="11:55"><name pos:start="11:48" pos:end="11:55"><name pos:start="11:48" pos:end="11:50">req</name><operator pos:start="11:51" pos:end="11:52">-&gt;</operator><name pos:start="11:53" pos:end="11:55">dev</name></name></expr></argument>, <argument pos:start="11:58" pos:end="11:60"><expr pos:start="11:58" pos:end="11:60"><name pos:start="11:58" pos:end="11:60">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="17:5">else <block pos:start="13:12" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:55">

        <expr_stmt pos:start="15:9" pos:end="15:55"><expr pos:start="15:9" pos:end="15:54"><name pos:start="15:9" pos:end="15:10">rc</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:54"><name pos:start="15:14" pos:end="15:28">scsi_req_length</name><argument_list pos:start="15:29" pos:end="15:54">(<argument pos:start="15:30" pos:end="15:38"><expr pos:start="15:30" pos:end="15:38"><operator pos:start="15:30" pos:end="15:30">&amp;</operator><name pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:33">req</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:38">cmd</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:48"><expr pos:start="15:41" pos:end="15:48"><name pos:start="15:41" pos:end="15:48"><name pos:start="15:41" pos:end="15:43">req</name><operator pos:start="15:44" pos:end="15:45">-&gt;</operator><name pos:start="15:46" pos:end="15:48">dev</name></name></expr></argument>, <argument pos:start="15:51" pos:end="15:53"><expr pos:start="15:51" pos:end="15:53"><name pos:start="15:51" pos:end="15:53">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:10">rc</name> <operator pos:start="19:12" pos:end="19:13">!=</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><name pos:start="21:16" pos:end="21:17">rc</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><call pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:31">(<argument pos:start="25:12" pos:end="25:30"><expr pos:start="25:12" pos:end="25:30"><name pos:start="25:12" pos:end="25:14">buf</name> <operator pos:start="25:16" pos:end="25:17">==</operator> <name pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:21">req</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:26">cmd</name><operator pos:start="25:27" pos:end="25:27">.</operator><name pos:start="25:28" pos:end="25:30">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:22">scsi_cmd_xfer_mode</name><argument_list pos:start="27:23" pos:end="27:33">(<argument pos:start="27:24" pos:end="27:32"><expr pos:start="27:24" pos:end="27:32"><operator pos:start="27:24" pos:end="27:24">&amp;</operator><name pos:start="27:25" pos:end="27:32"><name pos:start="27:25" pos:end="27:27">req</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:32">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:7">req</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:12">cmd</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:16">lba</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:42"><name pos:start="29:20" pos:end="29:31">scsi_cmd_lba</name><argument_list pos:start="29:32" pos:end="29:42">(<argument pos:start="29:33" pos:end="29:41"><expr pos:start="29:33" pos:end="29:41"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:36">req</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:41">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:56"><expr pos:start="31:5" pos:end="33:55"><call pos:start="31:5" pos:end="33:55"><name pos:start="31:5" pos:end="31:25">trace_scsi_req_parsed</name><argument_list pos:start="31:26" pos:end="33:55">(<argument pos:start="31:27" pos:end="31:38"><expr pos:start="31:27" pos:end="31:38"><name pos:start="31:27" pos:end="31:38"><name pos:start="31:27" pos:end="31:29">req</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:34">dev</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:38">id</name></name></expr></argument>, <argument pos:start="31:41" pos:end="31:48"><expr pos:start="31:41" pos:end="31:48"><name pos:start="31:41" pos:end="31:48"><name pos:start="31:41" pos:end="31:43">req</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:48">lun</name></name></expr></argument>, <argument pos:start="31:51" pos:end="31:58"><expr pos:start="31:51" pos:end="31:58"><name pos:start="31:51" pos:end="31:58"><name pos:start="31:51" pos:end="31:53">req</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:58">tag</name></name></expr></argument>, <argument pos:start="31:61" pos:end="31:66"><expr pos:start="31:61" pos:end="31:66"><name pos:start="31:61" pos:end="31:66"><name pos:start="31:61" pos:end="31:63">buf</name><index pos:start="31:64" pos:end="31:66">[<expr pos:start="31:65" pos:end="31:65"><literal type="number" pos:start="31:65" pos:end="31:65">0</literal></expr>]</index></name></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:39"><expr pos:start="33:27" pos:end="33:39"><name pos:start="33:27" pos:end="33:39"><name pos:start="33:27" pos:end="33:29">req</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:34">cmd</name><operator pos:start="33:35" pos:end="33:35">.</operator><name pos:start="33:36" pos:end="33:39">mode</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:54"><expr pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:44">req</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:49">cmd</name><operator pos:start="33:50" pos:end="33:50">.</operator><name pos:start="33:51" pos:end="33:54">xfer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:27">(<expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:11">req</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">cmd</name><operator pos:start="35:17" pos:end="35:17">.</operator><name pos:start="35:18" pos:end="35:20">lba</name></name> <operator pos:start="35:22" pos:end="35:23">!=</operator> <operator pos:start="35:25" pos:end="35:25">-</operator><literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>)</condition> <block pos:start="35:29" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:44">

        <expr_stmt pos:start="37:9" pos:end="39:44"><expr pos:start="37:9" pos:end="39:43"><call pos:start="37:9" pos:end="39:43"><name pos:start="37:9" pos:end="37:33">trace_scsi_req_parsed_lba</name><argument_list pos:start="37:34" pos:end="39:43">(<argument pos:start="37:35" pos:end="37:46"><expr pos:start="37:35" pos:end="37:46"><name pos:start="37:35" pos:end="37:46"><name pos:start="37:35" pos:end="37:37">req</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:42">dev</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:46">id</name></name></expr></argument>, <argument pos:start="37:49" pos:end="37:56"><expr pos:start="37:49" pos:end="37:56"><name pos:start="37:49" pos:end="37:56"><name pos:start="37:49" pos:end="37:51">req</name><operator pos:start="37:52" pos:end="37:53">-&gt;</operator><name pos:start="37:54" pos:end="37:56">lun</name></name></expr></argument>, <argument pos:start="37:59" pos:end="37:66"><expr pos:start="37:59" pos:end="37:66"><name pos:start="37:59" pos:end="37:66"><name pos:start="37:59" pos:end="37:61">req</name><operator pos:start="37:62" pos:end="37:63">-&gt;</operator><name pos:start="37:64" pos:end="37:66">tag</name></name></expr></argument>, <argument pos:start="37:69" pos:end="37:74"><expr pos:start="37:69" pos:end="37:74"><name pos:start="37:69" pos:end="37:74"><name pos:start="37:69" pos:end="37:71">buf</name><index pos:start="37:72" pos:end="37:74">[<expr pos:start="37:73" pos:end="37:73"><literal type="number" pos:start="37:73" pos:end="37:73">0</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="39:31" pos:end="39:42"><expr pos:start="39:31" pos:end="39:42"><name pos:start="39:31" pos:end="39:42"><name pos:start="39:31" pos:end="39:33">req</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:38">cmd</name><operator pos:start="39:39" pos:end="39:39">.</operator><name pos:start="39:40" pos:end="39:42">lba</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
