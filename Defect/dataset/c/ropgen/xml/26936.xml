<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26936.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">xan_unpack</name><parameter_list pos:start="1:23" pos:end="1:63">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:31">unsigned</name> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">dest</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:52">unsigned</name> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">src</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:59">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">char</name></type> <name pos:start="5:19" pos:end="5:24">opcode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">byte1</name></decl>, <decl pos:start="11:16" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:20">byte2</name></decl>, <decl pos:start="11:23" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:27">byte3</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="111:5">for <control pos:start="15:9" pos:end="15:12">(<init pos:start="15:10" pos:end="15:10">;</init><condition pos:start="15:11" pos:end="15:11">;</condition><incr/>)</control> <block pos:start="15:14" pos:end="111:5">{<block_content pos:start="17:9" pos:end="109:9">

        <expr_stmt pos:start="17:9" pos:end="17:24"><expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:14">opcode</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <operator pos:start="17:18" pos:end="17:18">*</operator><name pos:start="17:19" pos:end="17:21">src</name><operator pos:start="17:22" pos:end="17:23">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="21:9" pos:end="109:9"><if pos:start="21:9" pos:end="43:9">if <condition pos:start="21:12" pos:end="21:35">( <expr pos:start="21:14" pos:end="21:33"><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:20">opcode</name> <operator pos:start="21:22" pos:end="21:22">&amp;</operator> <literal type="number" pos:start="21:24" pos:end="21:27">0x80</literal><operator pos:start="21:28" pos:end="21:28">)</operator> <operator pos:start="21:30" pos:end="21:31">==</operator> <literal type="number" pos:start="21:33" pos:end="21:33">0</literal></expr> )</condition> <block pos:start="21:37" pos:end="43:9">{<block_content pos:start="25:13" pos:end="39:25">



            <expr_stmt pos:start="25:13" pos:end="25:28"><expr pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:18">offset</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <operator pos:start="25:22" pos:end="25:22">*</operator><name pos:start="25:23" pos:end="25:25">src</name><operator pos:start="25:26" pos:end="25:27">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:16">size</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:25">opcode</name> <operator pos:start="29:27" pos:end="29:27">&amp;</operator> <literal type="number" pos:start="29:29" pos:end="29:29">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:38"><expr pos:start="31:13" pos:end="31:37"><call pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:20">bytecopy</name><argument_list pos:start="31:21" pos:end="31:37">(<argument pos:start="31:22" pos:end="31:25"><expr pos:start="31:22" pos:end="31:25"><name pos:start="31:22" pos:end="31:25">dest</name></expr></argument>, <argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">src</name></expr></argument>, <argument pos:start="31:33" pos:end="31:36"><expr pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <expr_stmt pos:start="31:41" pos:end="31:53"><expr pos:start="31:41" pos:end="31:52"><name pos:start="31:41" pos:end="31:44">dest</name> <operator pos:start="31:46" pos:end="31:47">+=</operator> <name pos:start="31:49" pos:end="31:52">size</name></expr>;</expr_stmt>  <expr_stmt pos:start="31:56" pos:end="31:67"><expr pos:start="31:56" pos:end="31:66"><name pos:start="31:56" pos:end="31:58">src</name> <operator pos:start="31:60" pos:end="31:61">+=</operator> <name pos:start="31:63" pos:end="31:66">size</name></expr>;</expr_stmt>



            <expr_stmt pos:start="35:13" pos:end="35:46"><expr pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:16">size</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <operator pos:start="35:20" pos:end="35:20">(</operator><operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:27">opcode</name> <operator pos:start="35:29" pos:end="35:29">&amp;</operator> <literal type="number" pos:start="35:31" pos:end="35:34">0x1c</literal><operator pos:start="35:35" pos:end="35:35">)</operator> <operator pos:start="35:37" pos:end="35:38">&gt;&gt;</operator> <literal type="number" pos:start="35:40" pos:end="35:40">2</literal><operator pos:start="35:41" pos:end="35:41">)</operator> <operator pos:start="35:43" pos:end="35:43">+</operator> <literal type="number" pos:start="35:45" pos:end="35:45">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:80"><expr pos:start="37:13" pos:end="37:79"><call pos:start="37:13" pos:end="37:79"><name pos:start="37:13" pos:end="37:20">bytecopy</name> <argument_list pos:start="37:22" pos:end="37:79">(<argument pos:start="37:23" pos:end="37:26"><expr pos:start="37:23" pos:end="37:26"><name pos:start="37:23" pos:end="37:26">dest</name></expr></argument>, <argument pos:start="37:29" pos:end="37:72"><expr pos:start="37:29" pos:end="37:72"><name pos:start="37:29" pos:end="37:32">dest</name> <operator pos:start="37:34" pos:end="37:34">-</operator> <operator pos:start="37:36" pos:end="37:36">(</operator><operator pos:start="37:37" pos:end="37:37">(</operator><operator pos:start="37:38" pos:end="37:38">(</operator><name pos:start="37:39" pos:end="37:44">opcode</name> <operator pos:start="37:46" pos:end="37:46">&amp;</operator> <literal type="number" pos:start="37:48" pos:end="37:51">0x60</literal><operator pos:start="37:52" pos:end="37:52">)</operator> <operator pos:start="37:54" pos:end="37:55">&lt;&lt;</operator> <literal type="number" pos:start="37:57" pos:end="37:57">3</literal><operator pos:start="37:58" pos:end="37:58">)</operator> <operator pos:start="37:60" pos:end="37:60">+</operator> <name pos:start="37:62" pos:end="37:67">offset</name> <operator pos:start="37:69" pos:end="37:69">+</operator> <literal type="number" pos:start="37:71" pos:end="37:71">1</literal><operator pos:start="37:72" pos:end="37:72">)</operator></expr></argument>, <argument pos:start="37:75" pos:end="37:78"><expr pos:start="37:75" pos:end="37:78"><name pos:start="37:75" pos:end="37:78">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:16">dest</name> <operator pos:start="39:18" pos:end="39:19">+=</operator> <name pos:start="39:21" pos:end="39:24">size</name></expr>;</expr_stmt>



        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="67:9">else if <condition pos:start="43:19" pos:end="43:42">( <expr pos:start="43:21" pos:end="43:40"><operator pos:start="43:21" pos:end="43:21">(</operator><name pos:start="43:22" pos:end="43:27">opcode</name> <operator pos:start="43:29" pos:end="43:29">&amp;</operator> <literal type="number" pos:start="43:31" pos:end="43:34">0x40</literal><operator pos:start="43:35" pos:end="43:35">)</operator> <operator pos:start="43:37" pos:end="43:38">==</operator> <literal type="number" pos:start="43:40" pos:end="43:40">0</literal></expr> )</condition> <block pos:start="43:44" pos:end="67:9">{<block_content pos:start="47:13" pos:end="63:25">



            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:17">byte1</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <operator pos:start="47:21" pos:end="47:21">*</operator><name pos:start="47:22" pos:end="47:24">src</name><operator pos:start="47:25" pos:end="47:26">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:27"><expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:17">byte2</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <operator pos:start="49:21" pos:end="49:21">*</operator><name pos:start="49:22" pos:end="49:24">src</name><operator pos:start="49:25" pos:end="49:26">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="53:13" pos:end="53:30"><expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:16">size</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:24">byte1</name> <operator pos:start="53:26" pos:end="53:27">&gt;&gt;</operator> <literal type="number" pos:start="53:29" pos:end="53:29">6</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:39"><expr pos:start="55:13" pos:end="55:38"><call pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:20">bytecopy</name> <argument_list pos:start="55:22" pos:end="55:38">(<argument pos:start="55:23" pos:end="55:26"><expr pos:start="55:23" pos:end="55:26"><name pos:start="55:23" pos:end="55:26">dest</name></expr></argument>, <argument pos:start="55:29" pos:end="55:31"><expr pos:start="55:29" pos:end="55:31"><name pos:start="55:29" pos:end="55:31">src</name></expr></argument>, <argument pos:start="55:34" pos:end="55:37"><expr pos:start="55:34" pos:end="55:37"><name pos:start="55:34" pos:end="55:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <expr_stmt pos:start="55:42" pos:end="55:54"><expr pos:start="55:42" pos:end="55:53"><name pos:start="55:42" pos:end="55:45">dest</name> <operator pos:start="55:47" pos:end="55:48">+=</operator> <name pos:start="55:50" pos:end="55:53">size</name></expr>;</expr_stmt>  <expr_stmt pos:start="55:57" pos:end="55:68"><expr pos:start="55:57" pos:end="55:67"><name pos:start="55:57" pos:end="55:59">src</name> <operator pos:start="55:61" pos:end="55:62">+=</operator> <name pos:start="55:64" pos:end="55:67">size</name></expr>;</expr_stmt>



            <expr_stmt pos:start="59:13" pos:end="59:39"><expr pos:start="59:13" pos:end="59:38"><name pos:start="59:13" pos:end="59:16">size</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <operator pos:start="59:20" pos:end="59:20">(</operator><name pos:start="59:21" pos:end="59:26">opcode</name> <operator pos:start="59:28" pos:end="59:28">&amp;</operator> <literal type="number" pos:start="59:30" pos:end="59:33">0x3f</literal><operator pos:start="59:34" pos:end="59:34">)</operator> <operator pos:start="59:36" pos:end="59:36">+</operator> <literal type="number" pos:start="59:38" pos:end="59:38">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:78"><expr pos:start="61:13" pos:end="61:77"><call pos:start="61:13" pos:end="61:77"><name pos:start="61:13" pos:end="61:20">bytecopy</name> <argument_list pos:start="61:22" pos:end="61:77">(<argument pos:start="61:23" pos:end="61:26"><expr pos:start="61:23" pos:end="61:26"><name pos:start="61:23" pos:end="61:26">dest</name></expr></argument>, <argument pos:start="61:29" pos:end="61:70"><expr pos:start="61:29" pos:end="61:70"><name pos:start="61:29" pos:end="61:32">dest</name> <operator pos:start="61:34" pos:end="61:34">-</operator> <operator pos:start="61:36" pos:end="61:36">(</operator><operator pos:start="61:37" pos:end="61:37">(</operator><operator pos:start="61:38" pos:end="61:38">(</operator><name pos:start="61:39" pos:end="61:43">byte1</name> <operator pos:start="61:45" pos:end="61:45">&amp;</operator> <literal type="number" pos:start="61:47" pos:end="61:50">0x3f</literal><operator pos:start="61:51" pos:end="61:51">)</operator> <operator pos:start="61:53" pos:end="61:54">&lt;&lt;</operator> <literal type="number" pos:start="61:56" pos:end="61:56">8</literal><operator pos:start="61:57" pos:end="61:57">)</operator> <operator pos:start="61:59" pos:end="61:59">+</operator> <name pos:start="61:61" pos:end="61:65">byte2</name> <operator pos:start="61:67" pos:end="61:67">+</operator> <literal type="number" pos:start="61:69" pos:end="61:69">1</literal><operator pos:start="61:70" pos:end="61:70">)</operator></expr></argument>, <argument pos:start="61:73" pos:end="61:76"><expr pos:start="61:73" pos:end="61:76"><name pos:start="61:73" pos:end="61:76">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:25"><expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:16">dest</name> <operator pos:start="63:18" pos:end="63:19">+=</operator> <name pos:start="63:21" pos:end="63:24">size</name></expr>;</expr_stmt>



        </block_content>}</block></if> <if type="elseif" pos:start="67:11" pos:end="95:9">else if <condition pos:start="67:19" pos:end="67:42">( <expr pos:start="67:21" pos:end="67:40"><operator pos:start="67:21" pos:end="67:21">(</operator><name pos:start="67:22" pos:end="67:27">opcode</name> <operator pos:start="67:29" pos:end="67:29">&amp;</operator> <literal type="number" pos:start="67:31" pos:end="67:34">0x20</literal><operator pos:start="67:35" pos:end="67:35">)</operator> <operator pos:start="67:37" pos:end="67:38">==</operator> <literal type="number" pos:start="67:40" pos:end="67:40">0</literal></expr> )</condition> <block pos:start="67:44" pos:end="95:9">{<block_content pos:start="71:13" pos:end="93:25">



            <expr_stmt pos:start="71:13" pos:end="71:27"><expr pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:17">byte1</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <operator pos:start="71:21" pos:end="71:21">*</operator><name pos:start="71:22" pos:end="71:24">src</name><operator pos:start="71:25" pos:end="71:26">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:27"><expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:17">byte2</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <operator pos:start="73:21" pos:end="73:21">*</operator><name pos:start="73:22" pos:end="73:24">src</name><operator pos:start="73:25" pos:end="73:26">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:27"><expr pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:17">byte3</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <operator pos:start="75:21" pos:end="75:21">*</operator><name pos:start="75:22" pos:end="75:24">src</name><operator pos:start="75:25" pos:end="75:26">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:30"><expr pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:16">size</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:25">opcode</name> <operator pos:start="79:27" pos:end="79:27">&amp;</operator> <literal type="number" pos:start="79:29" pos:end="79:29">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:39"><expr pos:start="81:13" pos:end="81:38"><call pos:start="81:13" pos:end="81:38"><name pos:start="81:13" pos:end="81:20">bytecopy</name> <argument_list pos:start="81:22" pos:end="81:38">(<argument pos:start="81:23" pos:end="81:26"><expr pos:start="81:23" pos:end="81:26"><name pos:start="81:23" pos:end="81:26">dest</name></expr></argument>, <argument pos:start="81:29" pos:end="81:31"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:31">src</name></expr></argument>, <argument pos:start="81:34" pos:end="81:37"><expr pos:start="81:34" pos:end="81:37"><name pos:start="81:34" pos:end="81:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <expr_stmt pos:start="81:42" pos:end="81:54"><expr pos:start="81:42" pos:end="81:53"><name pos:start="81:42" pos:end="81:45">dest</name> <operator pos:start="81:47" pos:end="81:48">+=</operator> <name pos:start="81:50" pos:end="81:53">size</name></expr>;</expr_stmt>  <expr_stmt pos:start="81:57" pos:end="81:68"><expr pos:start="81:57" pos:end="81:67"><name pos:start="81:57" pos:end="81:59">src</name> <operator pos:start="81:61" pos:end="81:62">+=</operator> <name pos:start="81:64" pos:end="81:67">size</name></expr>;</expr_stmt>



            <expr_stmt pos:start="85:13" pos:end="85:53"><expr pos:start="85:13" pos:end="85:52"><name pos:start="85:13" pos:end="85:16">size</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:24">byte3</name> <operator pos:start="85:26" pos:end="85:26">+</operator> <literal type="number" pos:start="85:28" pos:end="85:30">5</literal> <operator pos:start="85:30" pos:end="85:30">+</operator> <operator pos:start="85:32" pos:end="85:32">(</operator><operator pos:start="85:33" pos:end="85:33">(</operator><name pos:start="85:34" pos:end="85:39">opcode</name> <operator pos:start="85:41" pos:end="85:41">&amp;</operator> <literal type="number" pos:start="85:43" pos:end="85:45">0xc</literal><operator pos:start="85:46" pos:end="85:46">)</operator> <operator pos:start="85:48" pos:end="85:49">&lt;&lt;</operator> <literal type="number" pos:start="85:51" pos:end="85:51">6</literal><operator pos:start="85:52" pos:end="85:52">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="91:22"><expr pos:start="87:13" pos:end="91:21"><call pos:start="87:13" pos:end="91:21"><name pos:start="87:13" pos:end="87:20">bytecopy</name> <argument_list pos:start="87:22" pos:end="91:21">(<argument pos:start="87:23" pos:end="87:26"><expr pos:start="87:23" pos:end="87:26"><name pos:start="87:23" pos:end="87:26">dest</name></expr></argument>,

                <argument pos:start="89:17" pos:end="89:84"><expr pos:start="89:17" pos:end="89:84"><name pos:start="89:17" pos:end="89:20">dest</name> <operator pos:start="89:22" pos:end="89:22">-</operator> <operator pos:start="89:24" pos:end="89:24">(</operator><operator pos:start="89:25" pos:end="89:25">(</operator><operator pos:start="89:26" pos:end="89:26">(</operator><operator pos:start="89:27" pos:end="89:27">(</operator><name pos:start="89:28" pos:end="89:33">opcode</name> <operator pos:start="89:35" pos:end="89:35">&amp;</operator> <literal type="number" pos:start="89:37" pos:end="89:40">0x10</literal><operator pos:start="89:41" pos:end="89:41">)</operator> <operator pos:start="89:43" pos:end="89:44">&gt;&gt;</operator> <literal type="number" pos:start="89:46" pos:end="89:46">4</literal><operator pos:start="89:47" pos:end="89:47">)</operator> <operator pos:start="89:49" pos:end="89:50">&lt;&lt;</operator> <literal type="number" pos:start="89:52" pos:end="89:55">0x10</literal><operator pos:start="89:56" pos:end="89:56">)</operator> <operator pos:start="89:58" pos:end="89:58">+</operator> <literal type="number" pos:start="89:60" pos:end="89:62">1</literal> <operator pos:start="89:62" pos:end="89:62">+</operator> <operator pos:start="89:64" pos:end="89:64">(</operator><name pos:start="89:65" pos:end="89:69">byte1</name> <operator pos:start="89:71" pos:end="89:72">&lt;&lt;</operator> <literal type="number" pos:start="89:74" pos:end="89:74">8</literal><operator pos:start="89:75" pos:end="89:75">)</operator> <operator pos:start="89:77" pos:end="89:77">+</operator> <name pos:start="89:79" pos:end="89:83">byte2</name><operator pos:start="89:84" pos:end="89:84">)</operator></expr></argument>,

                <argument pos:start="91:17" pos:end="91:20"><expr pos:start="91:17" pos:end="91:20"><name pos:start="91:17" pos:end="91:20">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:25"><expr pos:start="93:13" pos:end="93:24"><name pos:start="93:13" pos:end="93:16">dest</name> <operator pos:start="93:18" pos:end="93:19">+=</operator> <name pos:start="93:21" pos:end="93:24">size</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="109:9">else <block pos:start="95:16" pos:end="109:9">{<block_content pos:start="97:13" pos:end="107:68">

            <expr_stmt pos:start="97:13" pos:end="97:46"><expr pos:start="97:13" pos:end="97:45"><name pos:start="97:13" pos:end="97:16">size</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <operator pos:start="97:20" pos:end="97:20">(</operator><operator pos:start="97:21" pos:end="97:21">(</operator><name pos:start="97:22" pos:end="97:27">opcode</name> <operator pos:start="97:29" pos:end="97:29">&amp;</operator> <literal type="number" pos:start="97:31" pos:end="97:34">0x1f</literal><operator pos:start="97:35" pos:end="97:35">)</operator> <operator pos:start="97:37" pos:end="97:38">&lt;&lt;</operator> <literal type="number" pos:start="97:40" pos:end="97:40">2</literal><operator pos:start="97:41" pos:end="97:41">)</operator> <operator pos:start="97:43" pos:end="97:43">+</operator> <literal type="number" pos:start="97:45" pos:end="97:45">4</literal></expr>;</expr_stmt>



            <if_stmt pos:start="101:13" pos:end="103:22"><if pos:start="101:13" pos:end="103:22">if <condition pos:start="101:16" pos:end="101:28">(<expr pos:start="101:17" pos:end="101:27"><name pos:start="101:17" pos:end="101:20">size</name> <operator pos:start="101:22" pos:end="101:22">&gt;</operator> <literal type="number" pos:start="101:24" pos:end="101:27">0x70</literal></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:22"><block_content pos:start="103:17" pos:end="103:22">

                <break pos:start="103:17" pos:end="103:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="107:13" pos:end="107:39"><expr pos:start="107:13" pos:end="107:38"><call pos:start="107:13" pos:end="107:38"><name pos:start="107:13" pos:end="107:20">bytecopy</name> <argument_list pos:start="107:22" pos:end="107:38">(<argument pos:start="107:23" pos:end="107:26"><expr pos:start="107:23" pos:end="107:26"><name pos:start="107:23" pos:end="107:26">dest</name></expr></argument>, <argument pos:start="107:29" pos:end="107:31"><expr pos:start="107:29" pos:end="107:31"><name pos:start="107:29" pos:end="107:31">src</name></expr></argument>, <argument pos:start="107:34" pos:end="107:37"><expr pos:start="107:34" pos:end="107:37"><name pos:start="107:34" pos:end="107:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <expr_stmt pos:start="107:42" pos:end="107:54"><expr pos:start="107:42" pos:end="107:53"><name pos:start="107:42" pos:end="107:45">dest</name> <operator pos:start="107:47" pos:end="107:48">+=</operator> <name pos:start="107:50" pos:end="107:53">size</name></expr>;</expr_stmt>  <expr_stmt pos:start="107:57" pos:end="107:68"><expr pos:start="107:57" pos:end="107:67"><name pos:start="107:57" pos:end="107:59">src</name> <operator pos:start="107:61" pos:end="107:62">+=</operator> <name pos:start="107:64" pos:end="107:67">size</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="115:5" pos:end="115:22"><expr pos:start="115:5" pos:end="115:21"><name pos:start="115:5" pos:end="115:8">size</name> <operator pos:start="115:10" pos:end="115:10">=</operator> <name pos:start="115:12" pos:end="115:17">opcode</name> <operator pos:start="115:19" pos:end="115:19">&amp;</operator> <literal type="number" pos:start="115:21" pos:end="115:21">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:30"><expr pos:start="117:5" pos:end="117:29"><call pos:start="117:5" pos:end="117:29"><name pos:start="117:5" pos:end="117:12">bytecopy</name><argument_list pos:start="117:13" pos:end="117:29">(<argument pos:start="117:14" pos:end="117:17"><expr pos:start="117:14" pos:end="117:17"><name pos:start="117:14" pos:end="117:17">dest</name></expr></argument>, <argument pos:start="117:20" pos:end="117:22"><expr pos:start="117:20" pos:end="117:22"><name pos:start="117:20" pos:end="117:22">src</name></expr></argument>, <argument pos:start="117:25" pos:end="117:28"><expr pos:start="117:25" pos:end="117:28"><name pos:start="117:25" pos:end="117:28">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <expr_stmt pos:start="117:33" pos:end="117:45"><expr pos:start="117:33" pos:end="117:44"><name pos:start="117:33" pos:end="117:36">dest</name> <operator pos:start="117:38" pos:end="117:39">+=</operator> <name pos:start="117:41" pos:end="117:44">size</name></expr>;</expr_stmt>  <expr_stmt pos:start="117:48" pos:end="117:59"><expr pos:start="117:48" pos:end="117:58"><name pos:start="117:48" pos:end="117:50">src</name> <operator pos:start="117:52" pos:end="117:53">+=</operator> <name pos:start="117:55" pos:end="117:58">size</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
