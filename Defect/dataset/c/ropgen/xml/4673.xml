<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4673.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:43">ff_eac3_decode_transform_coeffs_aht_ch</name><parameter_list pos:start="1:44" pos:end="1:72">(<parameter pos:start="1:45" pos:end="1:63"><decl pos:start="1:45" pos:end="1:63"><type pos:start="1:45" pos:end="1:63"><name pos:start="1:45" pos:end="1:60">AC3DecodeContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">s</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:71"><decl pos:start="1:66" pos:end="1:71"><type pos:start="1:66" pos:end="1:71"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:71">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">bin</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">blk</name></decl>, <decl pos:start="5:19" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:20">gs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">end_bap</name></decl>, <decl pos:start="7:18" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:25">gaq_mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">gbc</name> <init pos:start="9:24" pos:end="9:32">= <expr pos:start="9:26" pos:end="9:32"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:32"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:32">gbc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:16">gaq_gain</name><index pos:start="11:17" pos:end="11:31">[<expr pos:start="11:18" pos:end="11:30"><name pos:start="11:18" pos:end="11:30">AC3_MAX_COEFS</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:12">gaq_mode</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:31"><name pos:start="15:16" pos:end="15:23">get_bits</name><argument_list pos:start="15:24" pos:end="15:31">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">gbc</name></expr></argument>, <argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:11">end_bap</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <ternary pos:start="17:15" pos:end="17:38"><condition pos:start="17:15" pos:end="17:30"><expr pos:start="17:15" pos:end="17:28"><operator pos:start="17:15" pos:end="17:15">(</operator><name pos:start="17:16" pos:end="17:23">gaq_mode</name> <operator pos:start="17:25" pos:end="17:25">&lt;</operator> <literal type="number" pos:start="17:27" pos:end="17:27">2</literal><operator pos:start="17:28" pos:end="17:28">)</operator></expr> ?</condition><then pos:start="17:32" pos:end="17:33"> <expr pos:start="17:32" pos:end="17:33"><literal type="number" pos:start="17:32" pos:end="17:33">12</literal></expr> </then><else pos:start="17:35" pos:end="17:38">: <expr pos:start="17:37" pos:end="17:38"><literal type="number" pos:start="17:37" pos:end="17:38">17</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="23:23">/* if GAQ gain is used, decode gain codes for bins with hebap between

       8 and end_bap */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:11"><expr pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:6">gs</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <literal type="number" pos:start="25:10" pos:end="25:10">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="75:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:59">(<expr pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:16">gaq_mode</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <name pos:start="27:21" pos:end="27:31">EAC3_GAQ_12</name> <operator pos:start="27:33" pos:end="27:34">||</operator> <name pos:start="27:36" pos:end="27:43">gaq_mode</name> <operator pos:start="27:45" pos:end="27:46">==</operator> <name pos:start="27:48" pos:end="27:58">EAC3_GAQ_14</name></expr>)</condition> <block pos:start="27:61" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:9">

        <comment type="block" pos:start="29:9" pos:end="29:39">/* read 1-bit GAQ gain codes */</comment>

        <for pos:start="31:9" pos:end="37:9">for <control pos:start="31:13" pos:end="31:67">(<init pos:start="31:14" pos:end="31:37"><expr pos:start="31:14" pos:end="31:36"><name pos:start="31:14" pos:end="31:16">bin</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:36"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:32">start_freq</name><index pos:start="31:33" pos:end="31:36">[<expr pos:start="31:34" pos:end="31:35"><name pos:start="31:34" pos:end="31:35">ch</name></expr>]</index></name></expr>;</init> <condition pos:start="31:39" pos:end="31:60"><expr pos:start="31:39" pos:end="31:59"><name pos:start="31:39" pos:end="31:41">bin</name> <operator pos:start="31:43" pos:end="31:43">&lt;</operator> <name pos:start="31:45" pos:end="31:59"><name pos:start="31:45" pos:end="31:45">s</name><operator pos:start="31:46" pos:end="31:47">-&gt;</operator><name pos:start="31:48" pos:end="31:55">end_freq</name><index pos:start="31:56" pos:end="31:59">[<expr pos:start="31:57" pos:end="31:58"><name pos:start="31:57" pos:end="31:58">ch</name></expr>]</index></name></expr>;</condition> <incr pos:start="31:62" pos:end="31:66"><expr pos:start="31:62" pos:end="31:66"><name pos:start="31:62" pos:end="31:64">bin</name><operator pos:start="31:65" pos:end="31:66">++</operator></expr></incr>)</control> <block pos:start="31:69" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:64">

            <if_stmt pos:start="33:13" pos:end="35:64"><if pos:start="33:13" pos:end="35:64">if <condition pos:start="33:16" pos:end="33:65">(<expr pos:start="33:17" pos:end="33:64"><name pos:start="33:17" pos:end="33:31"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:22">bap</name><index pos:start="33:23" pos:end="33:26">[<expr pos:start="33:24" pos:end="33:25"><name pos:start="33:24" pos:end="33:25">ch</name></expr>]</index><index pos:start="33:27" pos:end="33:31">[<expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:30">bin</name></expr>]</index></name> <operator pos:start="33:33" pos:end="33:33">&gt;</operator> <literal type="number" pos:start="33:35" pos:end="33:35">7</literal> <operator pos:start="33:37" pos:end="33:38">&amp;&amp;</operator> <name pos:start="33:40" pos:end="33:54"><name pos:start="33:40" pos:end="33:40">s</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:45">bap</name><index pos:start="33:46" pos:end="33:49">[<expr pos:start="33:47" pos:end="33:48"><name pos:start="33:47" pos:end="33:48">ch</name></expr>]</index><index pos:start="33:50" pos:end="33:54">[<expr pos:start="33:51" pos:end="33:53"><name pos:start="33:51" pos:end="33:53">bin</name></expr>]</index></name> <operator pos:start="33:56" pos:end="33:56">&lt;</operator> <name pos:start="33:58" pos:end="33:64">end_bap</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:64"><block_content pos:start="35:17" pos:end="35:64">

                <expr_stmt pos:start="35:17" pos:end="35:64"><expr pos:start="35:17" pos:end="35:63"><name pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:24">gaq_gain</name><index pos:start="35:25" pos:end="35:30">[<expr pos:start="35:26" pos:end="35:29"><name pos:start="35:26" pos:end="35:27">gs</name><operator pos:start="35:28" pos:end="35:29">++</operator></expr>]</index></name> <operator pos:start="35:32" pos:end="35:32">=</operator> <call pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:42">get_bits1</name><argument_list pos:start="35:43" pos:end="35:47">(<argument pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><name pos:start="35:44" pos:end="35:46">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="35:49" pos:end="35:50">&lt;&lt;</operator> <operator pos:start="35:52" pos:end="35:52">(</operator><name pos:start="35:53" pos:end="35:60">gaq_mode</name><operator pos:start="35:61" pos:end="35:61">-</operator><literal type="number" pos:start="35:62" pos:end="35:62">1</literal><operator pos:start="35:63" pos:end="35:63">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="75:5">else if <condition pos:start="39:15" pos:end="39:40">(<expr pos:start="39:16" pos:end="39:39"><name pos:start="39:16" pos:end="39:23">gaq_mode</name> <operator pos:start="39:25" pos:end="39:26">==</operator> <name pos:start="39:28" pos:end="39:39">EAC3_GAQ_124</name></expr>)</condition> <block pos:start="39:42" pos:end="75:5">{<block_content pos:start="43:9" pos:end="73:9">

        <comment type="block" pos:start="41:9" pos:end="41:62">/* read 1.67-bit GAQ gain codes (3 codes in 5 bits) */</comment>

        <decl_stmt pos:start="43:9" pos:end="43:19"><decl pos:start="43:9" pos:end="43:18"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:14">gc</name> <init pos:start="43:16" pos:end="43:18">= <expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">2</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="45:9" pos:end="73:9">for <control pos:start="45:13" pos:end="45:67">(<init pos:start="45:14" pos:end="45:37"><expr pos:start="45:14" pos:end="45:36"><name pos:start="45:14" pos:end="45:16">bin</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:36"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:32">start_freq</name><index pos:start="45:33" pos:end="45:36">[<expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">ch</name></expr>]</index></name></expr>;</init> <condition pos:start="45:39" pos:end="45:60"><expr pos:start="45:39" pos:end="45:59"><name pos:start="45:39" pos:end="45:41">bin</name> <operator pos:start="45:43" pos:end="45:43">&lt;</operator> <name pos:start="45:45" pos:end="45:59"><name pos:start="45:45" pos:end="45:45">s</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:55">end_freq</name><index pos:start="45:56" pos:end="45:59">[<expr pos:start="45:57" pos:end="45:58"><name pos:start="45:57" pos:end="45:58">ch</name></expr>]</index></name></expr>;</condition> <incr pos:start="45:62" pos:end="45:66"><expr pos:start="45:62" pos:end="45:66"><name pos:start="45:62" pos:end="45:64">bin</name><operator pos:start="45:65" pos:end="45:66">++</operator></expr></incr>)</control> <block pos:start="45:69" pos:end="73:9">{<block_content pos:start="47:13" pos:end="71:13">

            <if_stmt pos:start="47:13" pos:end="71:13"><if pos:start="47:13" pos:end="71:13">if <condition pos:start="47:16" pos:end="47:60">(<expr pos:start="47:17" pos:end="47:59"><name pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">bap</name><index pos:start="47:23" pos:end="47:26">[<expr pos:start="47:24" pos:end="47:25"><name pos:start="47:24" pos:end="47:25">ch</name></expr>]</index><index pos:start="47:27" pos:end="47:31">[<expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">bin</name></expr>]</index></name> <operator pos:start="47:33" pos:end="47:33">&gt;</operator> <literal type="number" pos:start="47:35" pos:end="47:35">7</literal> <operator pos:start="47:37" pos:end="47:38">&amp;&amp;</operator> <name pos:start="47:40" pos:end="47:54"><name pos:start="47:40" pos:end="47:40">s</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:45">bap</name><index pos:start="47:46" pos:end="47:49">[<expr pos:start="47:47" pos:end="47:48"><name pos:start="47:47" pos:end="47:48">ch</name></expr>]</index><index pos:start="47:50" pos:end="47:54">[<expr pos:start="47:51" pos:end="47:53"><name pos:start="47:51" pos:end="47:53">bin</name></expr>]</index></name> <operator pos:start="47:56" pos:end="47:56">&lt;</operator> <literal type="number" pos:start="47:58" pos:end="47:59">17</literal></expr>)</condition> <block pos:start="47:62" pos:end="71:13">{<block_content pos:start="49:17" pos:end="69:17">

                <if_stmt pos:start="49:17" pos:end="69:17"><if pos:start="49:17" pos:end="69:17">if <condition pos:start="49:20" pos:end="49:30">(<expr pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:22">gc</name><operator pos:start="49:23" pos:end="49:24">++</operator> <operator pos:start="49:26" pos:end="49:27">==</operator> <literal type="number" pos:start="49:29" pos:end="49:29">2</literal></expr>)</condition> <block pos:start="49:32" pos:end="69:17">{<block_content pos:start="51:21" pos:end="67:27">

                    <decl_stmt pos:start="51:21" pos:end="51:54"><decl pos:start="51:21" pos:end="51:53"><type pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:23">int</name></type> <name pos:start="51:25" pos:end="51:34">group_code</name> <init pos:start="51:36" pos:end="51:53">= <expr pos:start="51:38" pos:end="51:53"><call pos:start="51:38" pos:end="51:53"><name pos:start="51:38" pos:end="51:45">get_bits</name><argument_list pos:start="51:46" pos:end="51:53">(<argument pos:start="51:47" pos:end="51:49"><expr pos:start="51:47" pos:end="51:49"><name pos:start="51:47" pos:end="51:49">gbc</name></expr></argument>, <argument pos:start="51:52" pos:end="51:52"><expr pos:start="51:52" pos:end="51:52"><literal type="number" pos:start="51:52" pos:end="51:52">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="53:21" pos:end="59:21"><if pos:start="53:21" pos:end="59:21">if <condition pos:start="53:24" pos:end="53:40">(<expr pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:34">group_code</name> <operator pos:start="53:36" pos:end="53:36">&gt;</operator> <literal type="number" pos:start="53:38" pos:end="53:39">26</literal></expr>)</condition> <block pos:start="53:42" pos:end="59:21">{<block_content pos:start="55:25" pos:end="57:40">

                        <expr_stmt pos:start="55:25" pos:end="55:95"><expr pos:start="55:25" pos:end="55:94"><call pos:start="55:25" pos:end="55:94"><name pos:start="55:25" pos:end="55:30">av_log</name><argument_list pos:start="55:31" pos:end="55:94">(<argument pos:start="55:32" pos:end="55:39"><expr pos:start="55:32" pos:end="55:39"><name pos:start="55:32" pos:end="55:39"><name pos:start="55:32" pos:end="55:32">s</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:39">avctx</name></name></expr></argument>, <argument pos:start="55:42" pos:end="55:55"><expr pos:start="55:42" pos:end="55:55"><name pos:start="55:42" pos:end="55:55">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="55:58" pos:end="55:93"><expr pos:start="55:58" pos:end="55:93"><literal type="string" pos:start="55:58" pos:end="55:93">"GAQ gain group code out-of-range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="57:25" pos:end="57:40"><expr pos:start="57:25" pos:end="57:39"><name pos:start="57:25" pos:end="57:34">group_code</name> <operator pos:start="57:36" pos:end="57:36">=</operator> <literal type="number" pos:start="57:38" pos:end="57:39">26</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:83"><expr pos:start="61:21" pos:end="61:82"><name pos:start="61:21" pos:end="61:34"><name pos:start="61:21" pos:end="61:28">gaq_gain</name><index pos:start="61:29" pos:end="61:34">[<expr pos:start="61:30" pos:end="61:33"><name pos:start="61:30" pos:end="61:31">gs</name><operator pos:start="61:32" pos:end="61:33">++</operator></expr>]</index></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <name pos:start="61:38" pos:end="61:82"><name pos:start="61:38" pos:end="61:67">ff_ac3_ungroup_3_in_5_bits_tab</name><index pos:start="61:68" pos:end="61:79">[<expr pos:start="61:69" pos:end="61:78"><name pos:start="61:69" pos:end="61:78">group_code</name></expr>]</index><index pos:start="61:80" pos:end="61:82">[<expr pos:start="61:81" pos:end="61:81"><literal type="number" pos:start="61:81" pos:end="61:81">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:83"><expr pos:start="63:21" pos:end="63:82"><name pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:28">gaq_gain</name><index pos:start="63:29" pos:end="63:34">[<expr pos:start="63:30" pos:end="63:33"><name pos:start="63:30" pos:end="63:31">gs</name><operator pos:start="63:32" pos:end="63:33">++</operator></expr>]</index></name> <operator pos:start="63:36" pos:end="63:36">=</operator> <name pos:start="63:38" pos:end="63:82"><name pos:start="63:38" pos:end="63:67">ff_ac3_ungroup_3_in_5_bits_tab</name><index pos:start="63:68" pos:end="63:79">[<expr pos:start="63:69" pos:end="63:78"><name pos:start="63:69" pos:end="63:78">group_code</name></expr>]</index><index pos:start="63:80" pos:end="63:82">[<expr pos:start="63:81" pos:end="63:81"><literal type="number" pos:start="63:81" pos:end="63:81">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:83"><expr pos:start="65:21" pos:end="65:82"><name pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:28">gaq_gain</name><index pos:start="65:29" pos:end="65:34">[<expr pos:start="65:30" pos:end="65:33"><name pos:start="65:30" pos:end="65:31">gs</name><operator pos:start="65:32" pos:end="65:33">++</operator></expr>]</index></name> <operator pos:start="65:36" pos:end="65:36">=</operator> <name pos:start="65:38" pos:end="65:82"><name pos:start="65:38" pos:end="65:67">ff_ac3_ungroup_3_in_5_bits_tab</name><index pos:start="65:68" pos:end="65:79">[<expr pos:start="65:69" pos:end="65:78"><name pos:start="65:69" pos:end="65:78">group_code</name></expr>]</index><index pos:start="65:80" pos:end="65:82">[<expr pos:start="65:81" pos:end="65:81"><literal type="number" pos:start="65:81" pos:end="65:81">2</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:27"><expr pos:start="67:21" pos:end="67:26"><name pos:start="67:21" pos:end="67:22">gc</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:9"><expr pos:start="79:5" pos:end="79:8"><name pos:start="79:5" pos:end="79:6">gs</name><operator pos:start="79:7" pos:end="79:7">=</operator><literal type="number" pos:start="79:8" pos:end="79:8">0</literal></expr>;</expr_stmt>

    <for pos:start="81:5" pos:end="181:5">for <control pos:start="81:9" pos:end="81:63">(<init pos:start="81:10" pos:end="81:33"><expr pos:start="81:10" pos:end="81:32"><name pos:start="81:10" pos:end="81:12">bin</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <name pos:start="81:16" pos:end="81:32"><name pos:start="81:16" pos:end="81:16">s</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:28">start_freq</name><index pos:start="81:29" pos:end="81:32">[<expr pos:start="81:30" pos:end="81:31"><name pos:start="81:30" pos:end="81:31">ch</name></expr>]</index></name></expr>;</init> <condition pos:start="81:35" pos:end="81:56"><expr pos:start="81:35" pos:end="81:55"><name pos:start="81:35" pos:end="81:37">bin</name> <operator pos:start="81:39" pos:end="81:39">&lt;</operator> <name pos:start="81:41" pos:end="81:55"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:51">end_freq</name><index pos:start="81:52" pos:end="81:55">[<expr pos:start="81:53" pos:end="81:54"><name pos:start="81:53" pos:end="81:54">ch</name></expr>]</index></name></expr>;</condition> <incr pos:start="81:58" pos:end="81:62"><expr pos:start="81:58" pos:end="81:62"><name pos:start="81:58" pos:end="81:60">bin</name><operator pos:start="81:61" pos:end="81:62">++</operator></expr></incr>)</control> <block pos:start="81:65" pos:end="181:5">{<block_content pos:start="83:9" pos:end="179:40">

        <decl_stmt pos:start="83:9" pos:end="83:36"><decl pos:start="83:9" pos:end="83:35"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:17">hebap</name> <init pos:start="83:19" pos:end="83:35">= <expr pos:start="83:21" pos:end="83:35"><name pos:start="83:21" pos:end="83:35"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:26">bap</name><index pos:start="83:27" pos:end="83:30">[<expr pos:start="83:28" pos:end="83:29"><name pos:start="83:28" pos:end="83:29">ch</name></expr>]</index><index pos:start="83:31" pos:end="83:35">[<expr pos:start="83:32" pos:end="83:34"><name pos:start="83:32" pos:end="83:34">bin</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:48"><decl pos:start="85:9" pos:end="85:47"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:16">bits</name> <init pos:start="85:18" pos:end="85:47">= <expr pos:start="85:20" pos:end="85:47"><name pos:start="85:20" pos:end="85:47"><name pos:start="85:20" pos:end="85:40">ff_eac3_bits_vs_hebap</name><index pos:start="85:41" pos:end="85:47">[<expr pos:start="85:42" pos:end="85:46"><name pos:start="85:42" pos:end="85:46">hebap</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="87:9" pos:end="177:9"><if pos:start="87:9" pos:end="97:9">if <condition pos:start="87:12" pos:end="87:19">(<expr pos:start="87:13" pos:end="87:18"><operator pos:start="87:13" pos:end="87:13">!</operator><name pos:start="87:14" pos:end="87:18">hebap</name></expr>)</condition> <block pos:start="87:21" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:13">

            <comment type="block" pos:start="89:13" pos:end="89:41">/* zero-mantissa dithering */</comment>

            <for pos:start="91:13" pos:end="95:13">for <control pos:start="91:17" pos:end="91:41">(<init pos:start="91:18" pos:end="91:25"><expr pos:start="91:18" pos:end="91:24"><name pos:start="91:18" pos:end="91:20">blk</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <literal type="number" pos:start="91:24" pos:end="91:24">0</literal></expr>;</init> <condition pos:start="91:27" pos:end="91:34"><expr pos:start="91:27" pos:end="91:33"><name pos:start="91:27" pos:end="91:29">blk</name> <operator pos:start="91:31" pos:end="91:31">&lt;</operator> <literal type="number" pos:start="91:33" pos:end="91:33">6</literal></expr>;</condition> <incr pos:start="91:36" pos:end="91:40"><expr pos:start="91:36" pos:end="91:40"><name pos:start="91:36" pos:end="91:38">blk</name><operator pos:start="91:39" pos:end="91:40">++</operator></expr></incr>)</control> <block pos:start="91:43" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:99">

                <expr_stmt pos:start="93:17" pos:end="93:99"><expr pos:start="93:17" pos:end="93:98"><name pos:start="93:17" pos:end="93:45"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:31">pre_mantissa</name><index pos:start="93:32" pos:end="93:35">[<expr pos:start="93:33" pos:end="93:34"><name pos:start="93:33" pos:end="93:34">ch</name></expr>]</index><index pos:start="93:36" pos:end="93:40">[<expr pos:start="93:37" pos:end="93:39"><name pos:start="93:37" pos:end="93:39">bin</name></expr>]</index><index pos:start="93:41" pos:end="93:45">[<expr pos:start="93:42" pos:end="93:44"><name pos:start="93:42" pos:end="93:44">blk</name></expr>]</index></name> <operator pos:start="93:47" pos:end="93:47">=</operator> <operator pos:start="93:49" pos:end="93:49">(</operator><call pos:start="93:50" pos:end="93:75"><name pos:start="93:50" pos:end="93:59">av_lfg_get</name><argument_list pos:start="93:60" pos:end="93:75">(<argument pos:start="93:61" pos:end="93:74"><expr pos:start="93:61" pos:end="93:74"><operator pos:start="93:61" pos:end="93:61">&amp;</operator><name pos:start="93:62" pos:end="93:74"><name pos:start="93:62" pos:end="93:62">s</name><operator pos:start="93:63" pos:end="93:64">-&gt;</operator><name pos:start="93:65" pos:end="93:74">dith_state</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:77" pos:end="93:77">&amp;</operator> <literal type="number" pos:start="93:79" pos:end="93:86">0x7FFFFF</literal><operator pos:start="93:87" pos:end="93:87">)</operator> <operator pos:start="93:89" pos:end="93:89">-</operator> <literal type="number" pos:start="93:91" pos:end="93:98">0x400000</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="97:11" pos:end="109:9">else if <condition pos:start="97:19" pos:end="97:29">(<expr pos:start="97:20" pos:end="97:28"><name pos:start="97:20" pos:end="97:24">hebap</name> <operator pos:start="97:26" pos:end="97:26">&lt;</operator> <literal type="number" pos:start="97:28" pos:end="97:28">8</literal></expr>)</condition> <block pos:start="97:31" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:13">

            <comment type="block" pos:start="99:13" pos:end="99:37">/* Vector Quantization */</comment>

            <decl_stmt pos:start="101:13" pos:end="101:40"><decl pos:start="101:13" pos:end="101:39"><type pos:start="101:13" pos:end="101:15"><name pos:start="101:13" pos:end="101:15">int</name></type> <name pos:start="101:17" pos:end="101:17">v</name> <init pos:start="101:19" pos:end="101:39">= <expr pos:start="101:21" pos:end="101:39"><call pos:start="101:21" pos:end="101:39"><name pos:start="101:21" pos:end="101:28">get_bits</name><argument_list pos:start="101:29" pos:end="101:39">(<argument pos:start="101:30" pos:end="101:32"><expr pos:start="101:30" pos:end="101:32"><name pos:start="101:30" pos:end="101:32">gbc</name></expr></argument>, <argument pos:start="101:35" pos:end="101:38"><expr pos:start="101:35" pos:end="101:38"><name pos:start="101:35" pos:end="101:38">bits</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:start="103:13" pos:end="107:13">for <control pos:start="103:17" pos:end="103:41">(<init pos:start="103:18" pos:end="103:25"><expr pos:start="103:18" pos:end="103:24"><name pos:start="103:18" pos:end="103:20">blk</name> <operator pos:start="103:22" pos:end="103:22">=</operator> <literal type="number" pos:start="103:24" pos:end="103:24">0</literal></expr>;</init> <condition pos:start="103:27" pos:end="103:34"><expr pos:start="103:27" pos:end="103:33"><name pos:start="103:27" pos:end="103:29">blk</name> <operator pos:start="103:31" pos:end="103:31">&lt;</operator> <literal type="number" pos:start="103:33" pos:end="103:33">6</literal></expr>;</condition> <incr pos:start="103:36" pos:end="103:40"><expr pos:start="103:36" pos:end="103:40"><name pos:start="103:36" pos:end="103:38">blk</name><operator pos:start="103:39" pos:end="103:40">++</operator></expr></incr>)</control> <block pos:start="103:43" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:88">

                <expr_stmt pos:start="105:17" pos:end="105:88"><expr pos:start="105:17" pos:end="105:87"><name pos:start="105:17" pos:end="105:45"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:31">pre_mantissa</name><index pos:start="105:32" pos:end="105:35">[<expr pos:start="105:33" pos:end="105:34"><name pos:start="105:33" pos:end="105:34">ch</name></expr>]</index><index pos:start="105:36" pos:end="105:40">[<expr pos:start="105:37" pos:end="105:39"><name pos:start="105:37" pos:end="105:39">bin</name></expr>]</index><index pos:start="105:41" pos:end="105:45">[<expr pos:start="105:42" pos:end="105:44"><name pos:start="105:42" pos:end="105:44">blk</name></expr>]</index></name> <operator pos:start="105:47" pos:end="105:47">=</operator> <name pos:start="105:49" pos:end="105:82"><name pos:start="105:49" pos:end="105:67">ff_eac3_mantissa_vq</name><index pos:start="105:68" pos:end="105:74">[<expr pos:start="105:69" pos:end="105:73"><name pos:start="105:69" pos:end="105:73">hebap</name></expr>]</index><index pos:start="105:75" pos:end="105:77">[<expr pos:start="105:76" pos:end="105:76"><name pos:start="105:76" pos:end="105:76">v</name></expr>]</index><index pos:start="105:78" pos:end="105:82">[<expr pos:start="105:79" pos:end="105:81"><name pos:start="105:79" pos:end="105:81">blk</name></expr>]</index></name> <operator pos:start="105:84" pos:end="105:85">&lt;&lt;</operator> <literal type="number" pos:start="105:87" pos:end="105:87">8</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="177:9">else <block pos:start="109:16" pos:end="177:9">{<block_content pos:start="113:13" pos:end="175:13">

            <comment type="block" pos:start="111:13" pos:end="111:44">/* Gain Adaptive Quantization */</comment>

            <decl_stmt pos:start="113:13" pos:end="113:32"><decl pos:start="113:13" pos:end="113:21"><type pos:start="113:13" pos:end="113:15"><name pos:start="113:13" pos:end="113:15">int</name></type> <name pos:start="113:17" pos:end="113:21">gbits</name></decl>, <decl pos:start="113:24" pos:end="113:31"><type ref="prev" pos:start="113:13" pos:end="113:15"/><name pos:start="113:24" pos:end="113:31">log_gain</name></decl>;</decl_stmt>

            <if_stmt pos:start="115:13" pos:end="123:13"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:59">(<expr pos:start="115:17" pos:end="115:58"><name pos:start="115:17" pos:end="115:24">gaq_mode</name> <operator pos:start="115:26" pos:end="115:27">!=</operator> <name pos:start="115:29" pos:end="115:39">EAC3_GAQ_NO</name> <operator pos:start="115:41" pos:end="115:42">&amp;&amp;</operator> <name pos:start="115:44" pos:end="115:48">hebap</name> <operator pos:start="115:50" pos:end="115:50">&lt;</operator> <name pos:start="115:52" pos:end="115:58">end_bap</name></expr>)</condition> <block pos:start="115:61" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:42">

                <expr_stmt pos:start="117:17" pos:end="117:42"><expr pos:start="117:17" pos:end="117:41"><name pos:start="117:17" pos:end="117:24">log_gain</name> <operator pos:start="117:26" pos:end="117:26">=</operator> <name pos:start="117:28" pos:end="117:41"><name pos:start="117:28" pos:end="117:35">gaq_gain</name><index pos:start="117:36" pos:end="117:41">[<expr pos:start="117:37" pos:end="117:40"><name pos:start="117:37" pos:end="117:38">gs</name><operator pos:start="117:39" pos:end="117:40">++</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="119:15" pos:end="123:13">else <block pos:start="119:20" pos:end="123:13">{<block_content pos:start="121:17" pos:end="121:29">

                <expr_stmt pos:start="121:17" pos:end="121:29"><expr pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:24">log_gain</name> <operator pos:start="121:26" pos:end="121:26">=</operator> <literal type="number" pos:start="121:28" pos:end="121:28">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:36"><expr pos:start="125:13" pos:end="125:35"><name pos:start="125:13" pos:end="125:17">gbits</name> <operator pos:start="125:19" pos:end="125:19">=</operator> <name pos:start="125:21" pos:end="125:24">bits</name> <operator pos:start="125:26" pos:end="125:26">-</operator> <name pos:start="125:28" pos:end="125:35">log_gain</name></expr>;</expr_stmt>



            <for pos:start="129:13" pos:end="175:13">for <control pos:start="129:17" pos:end="129:41">(<init pos:start="129:18" pos:end="129:25"><expr pos:start="129:18" pos:end="129:24"><name pos:start="129:18" pos:end="129:20">blk</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <literal type="number" pos:start="129:24" pos:end="129:24">0</literal></expr>;</init> <condition pos:start="129:27" pos:end="129:34"><expr pos:start="129:27" pos:end="129:33"><name pos:start="129:27" pos:end="129:29">blk</name> <operator pos:start="129:31" pos:end="129:31">&lt;</operator> <literal type="number" pos:start="129:33" pos:end="129:33">6</literal></expr>;</condition> <incr pos:start="129:36" pos:end="129:40"><expr pos:start="129:36" pos:end="129:40"><name pos:start="129:36" pos:end="129:38">blk</name><operator pos:start="129:39" pos:end="129:40">++</operator></expr></incr>)</control> <block pos:start="129:43" pos:end="175:13">{<block_content pos:start="131:17" pos:end="173:53">

                <decl_stmt pos:start="131:17" pos:end="131:49"><decl pos:start="131:17" pos:end="131:48"><type pos:start="131:17" pos:end="131:19"><name pos:start="131:17" pos:end="131:19">int</name></type> <name pos:start="131:21" pos:end="131:24">mant</name> <init pos:start="131:26" pos:end="131:48">= <expr pos:start="131:28" pos:end="131:48"><call pos:start="131:28" pos:end="131:48"><name pos:start="131:28" pos:end="131:36">get_sbits</name><argument_list pos:start="131:37" pos:end="131:48">(<argument pos:start="131:38" pos:end="131:40"><expr pos:start="131:38" pos:end="131:40"><name pos:start="131:38" pos:end="131:40">gbc</name></expr></argument>, <argument pos:start="131:43" pos:end="131:47"><expr pos:start="131:43" pos:end="131:47"><name pos:start="131:43" pos:end="131:47">gbits</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="133:17" pos:end="171:17"><if pos:start="133:17" pos:end="157:17">if <condition pos:start="133:20" pos:end="133:58">(<expr pos:start="133:21" pos:end="133:57"><name pos:start="133:21" pos:end="133:28">log_gain</name> <operator pos:start="133:30" pos:end="133:31">&amp;&amp;</operator> <name pos:start="133:33" pos:end="133:36">mant</name> <operator pos:start="133:38" pos:end="133:39">==</operator> <operator pos:start="133:41" pos:end="133:41">-</operator><operator pos:start="133:42" pos:end="133:42">(</operator><literal type="number" pos:start="133:43" pos:end="133:43">1</literal> <operator pos:start="133:45" pos:end="133:46">&lt;&lt;</operator> <operator pos:start="133:48" pos:end="133:48">(</operator><name pos:start="133:49" pos:end="133:53">gbits</name><operator pos:start="133:54" pos:end="133:54">-</operator><literal type="number" pos:start="133:55" pos:end="133:55">1</literal><operator pos:start="133:56" pos:end="133:56">)</operator><operator pos:start="133:57" pos:end="133:57">)</operator></expr>)</condition> <block pos:start="133:60" pos:end="157:17">{<block_content pos:start="137:21" pos:end="155:103">

                    <comment type="block" pos:start="135:21" pos:end="135:40">/* large mantissa */</comment>

                    <decl_stmt pos:start="137:21" pos:end="137:26"><decl pos:start="137:21" pos:end="137:25"><type pos:start="137:21" pos:end="137:23"><name pos:start="137:21" pos:end="137:23">int</name></type> <name pos:start="137:25" pos:end="137:25">b</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="139:21" pos:end="139:54"><decl pos:start="139:21" pos:end="139:53"><type pos:start="139:21" pos:end="139:23"><name pos:start="139:21" pos:end="139:23">int</name></type> <name pos:start="139:25" pos:end="139:29">mbits</name> <init pos:start="139:31" pos:end="139:53">= <expr pos:start="139:33" pos:end="139:53"><name pos:start="139:33" pos:end="139:36">bits</name> <operator pos:start="139:38" pos:end="139:38">-</operator> <operator pos:start="139:40" pos:end="139:40">(</operator><literal type="number" pos:start="139:41" pos:end="139:43">2</literal> <operator pos:start="139:43" pos:end="139:43">-</operator> <name pos:start="139:45" pos:end="139:52">log_gain</name><operator pos:start="139:53" pos:end="139:53">)</operator></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:49"><expr pos:start="141:21" pos:end="141:48"><name pos:start="141:21" pos:end="141:24">mant</name> <operator pos:start="141:26" pos:end="141:26">=</operator> <call pos:start="141:28" pos:end="141:48"><name pos:start="141:28" pos:end="141:36">get_sbits</name><argument_list pos:start="141:37" pos:end="141:48">(<argument pos:start="141:38" pos:end="141:40"><expr pos:start="141:38" pos:end="141:40"><name pos:start="141:38" pos:end="141:40">gbc</name></expr></argument>, <argument pos:start="141:43" pos:end="141:47"><expr pos:start="141:43" pos:end="141:47"><name pos:start="141:43" pos:end="141:47">mbits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:48"><expr pos:start="143:21" pos:end="143:47"><name pos:start="143:21" pos:end="143:24">mant</name> <operator pos:start="143:26" pos:end="143:28">&lt;&lt;=</operator> <operator pos:start="143:30" pos:end="143:30">(</operator><literal type="number" pos:start="143:31" pos:end="143:34">23</literal> <operator pos:start="143:34" pos:end="143:34">-</operator> <operator pos:start="143:36" pos:end="143:36">(</operator><name pos:start="143:37" pos:end="143:41">mbits</name> <operator pos:start="143:43" pos:end="143:43">-</operator> <literal type="number" pos:start="143:45" pos:end="143:45">1</literal><operator pos:start="143:46" pos:end="143:46">)</operator><operator pos:start="143:47" pos:end="143:47">)</operator></expr>;</expr_stmt>

                    <comment type="block" pos:start="145:21" pos:end="145:85">/* remap mantissa value to correct for asymmetric quantization */</comment>

                    <if_stmt pos:start="147:21" pos:end="153:78"><if pos:start="147:21" pos:end="149:49">if <condition pos:start="147:24" pos:end="147:34">(<expr pos:start="147:25" pos:end="147:33"><name pos:start="147:25" pos:end="147:28">mant</name> <operator pos:start="147:30" pos:end="147:31">&gt;=</operator> <literal type="number" pos:start="147:33" pos:end="147:33">0</literal></expr>)</condition><block type="pseudo" pos:start="149:25" pos:end="149:49"><block_content pos:start="149:25" pos:end="149:49">

                        <expr_stmt pos:start="149:25" pos:end="149:49"><expr pos:start="149:25" pos:end="149:48"><name pos:start="149:25" pos:end="149:25">b</name> <operator pos:start="149:27" pos:end="149:27">=</operator> <literal type="number" pos:start="149:29" pos:end="149:29">1</literal> <operator pos:start="149:31" pos:end="149:32">&lt;&lt;</operator> <operator pos:start="149:34" pos:end="149:34">(</operator><literal type="number" pos:start="149:35" pos:end="149:38">23</literal> <operator pos:start="149:38" pos:end="149:38">-</operator> <name pos:start="149:40" pos:end="149:47">log_gain</name><operator pos:start="149:48" pos:end="149:48">)</operator></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="151:21" pos:end="153:78">else<block type="pseudo" pos:start="153:25" pos:end="153:78"><block_content pos:start="153:25" pos:end="153:78">

                        <expr_stmt pos:start="153:25" pos:end="153:78"><expr pos:start="153:25" pos:end="153:77"><name pos:start="153:25" pos:end="153:25">b</name> <operator pos:start="153:27" pos:end="153:27">=</operator> <name pos:start="153:29" pos:end="153:72"><name pos:start="153:29" pos:end="153:51">ff_eac3_gaq_remap_2_4_b</name><index pos:start="153:52" pos:end="153:60">[<expr pos:start="153:53" pos:end="153:59"><name pos:start="153:53" pos:end="153:57">hebap</name><operator pos:start="153:58" pos:end="153:58">-</operator><literal type="number" pos:start="153:59" pos:end="153:59">8</literal></expr>]</index><index pos:start="153:61" pos:end="153:72">[<expr pos:start="153:62" pos:end="153:71"><name pos:start="153:62" pos:end="153:69">log_gain</name><operator pos:start="153:70" pos:end="153:70">-</operator><literal type="number" pos:start="153:71" pos:end="153:71">1</literal></expr>]</index></name> <operator pos:start="153:74" pos:end="153:75">&lt;&lt;</operator> <literal type="number" pos:start="153:77" pos:end="153:77">8</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:103"><expr pos:start="155:21" pos:end="155:102"><name pos:start="155:21" pos:end="155:24">mant</name> <operator pos:start="155:26" pos:end="155:27">+=</operator> <operator pos:start="155:29" pos:end="155:29">(</operator><operator pos:start="155:30" pos:end="155:30">(</operator><name pos:start="155:31" pos:end="155:74"><name pos:start="155:31" pos:end="155:53">ff_eac3_gaq_remap_2_4_a</name><index pos:start="155:54" pos:end="155:62">[<expr pos:start="155:55" pos:end="155:61"><name pos:start="155:55" pos:end="155:59">hebap</name><operator pos:start="155:60" pos:end="155:60">-</operator><literal type="number" pos:start="155:61" pos:end="155:61">8</literal></expr>]</index><index pos:start="155:63" pos:end="155:74">[<expr pos:start="155:64" pos:end="155:73"><name pos:start="155:64" pos:end="155:71">log_gain</name><operator pos:start="155:72" pos:end="155:72">-</operator><literal type="number" pos:start="155:73" pos:end="155:73">1</literal></expr>]</index></name> <operator pos:start="155:76" pos:end="155:76">*</operator> <operator pos:start="155:78" pos:end="155:78">(</operator><name pos:start="155:79" pos:end="155:85">int64_t</name><operator pos:start="155:86" pos:end="155:86">)</operator><name pos:start="155:87" pos:end="155:90">mant</name><operator pos:start="155:91" pos:end="155:91">)</operator> <operator pos:start="155:93" pos:end="155:94">&gt;&gt;</operator> <literal type="number" pos:start="155:96" pos:end="155:97">15</literal><operator pos:start="155:98" pos:end="155:98">)</operator> <operator pos:start="155:100" pos:end="155:100">+</operator> <name pos:start="155:102" pos:end="155:102">b</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="157:19" pos:end="171:17">else <block pos:start="157:24" pos:end="171:17">{<block_content pos:start="161:21" pos:end="169:21">

                    <comment type="block" pos:start="159:21" pos:end="159:57">/* small mantissa, no GAQ, or Gk=1 */</comment>

                    <expr_stmt pos:start="161:21" pos:end="161:39"><expr pos:start="161:21" pos:end="161:38"><name pos:start="161:21" pos:end="161:24">mant</name> <operator pos:start="161:26" pos:end="161:28">&lt;&lt;=</operator> <literal type="number" pos:start="161:30" pos:end="161:33">24</literal> <operator pos:start="161:33" pos:end="161:33">-</operator> <name pos:start="161:35" pos:end="161:38">bits</name></expr>;</expr_stmt>

                    <if_stmt pos:start="163:21" pos:end="169:21"><if pos:start="163:21" pos:end="169:21">if <condition pos:start="163:24" pos:end="163:34">(<expr pos:start="163:25" pos:end="163:33"><operator pos:start="163:25" pos:end="163:25">!</operator><name pos:start="163:26" pos:end="163:33">log_gain</name></expr>)</condition> <block pos:start="163:36" pos:end="169:21">{<block_content pos:start="167:25" pos:end="167:85">

                        <comment type="block" pos:start="165:25" pos:end="165:69">/* remap mantissa value for no GAQ or Gk=1 */</comment>

                        <expr_stmt pos:start="167:25" pos:end="167:85"><expr pos:start="167:25" pos:end="167:84"><name pos:start="167:25" pos:end="167:28">mant</name> <operator pos:start="167:30" pos:end="167:31">+=</operator> <operator pos:start="167:33" pos:end="167:33">(</operator><name pos:start="167:34" pos:end="167:61"><name pos:start="167:34" pos:end="167:52">ff_eac3_gaq_remap_1</name><index pos:start="167:53" pos:end="167:61">[<expr pos:start="167:54" pos:end="167:60"><name pos:start="167:54" pos:end="167:58">hebap</name><operator pos:start="167:59" pos:end="167:59">-</operator><literal type="number" pos:start="167:60" pos:end="167:60">8</literal></expr>]</index></name> <operator pos:start="167:63" pos:end="167:63">*</operator> <operator pos:start="167:65" pos:end="167:65">(</operator><name pos:start="167:66" pos:end="167:72">int64_t</name><operator pos:start="167:73" pos:end="167:73">)</operator><name pos:start="167:74" pos:end="167:77">mant</name><operator pos:start="167:78" pos:end="167:78">)</operator> <operator pos:start="167:80" pos:end="167:81">&gt;&gt;</operator> <literal type="number" pos:start="167:83" pos:end="167:84">15</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:53"><expr pos:start="173:17" pos:end="173:52"><name pos:start="173:17" pos:end="173:45"><name pos:start="173:17" pos:end="173:17">s</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:31">pre_mantissa</name><index pos:start="173:32" pos:end="173:35">[<expr pos:start="173:33" pos:end="173:34"><name pos:start="173:33" pos:end="173:34">ch</name></expr>]</index><index pos:start="173:36" pos:end="173:40">[<expr pos:start="173:37" pos:end="173:39"><name pos:start="173:37" pos:end="173:39">bin</name></expr>]</index><index pos:start="173:41" pos:end="173:45">[<expr pos:start="173:42" pos:end="173:44"><name pos:start="173:42" pos:end="173:44">blk</name></expr>]</index></name> <operator pos:start="173:47" pos:end="173:47">=</operator> <name pos:start="173:49" pos:end="173:52">mant</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:40"><expr pos:start="179:9" pos:end="179:39"><call pos:start="179:9" pos:end="179:39"><name pos:start="179:9" pos:end="179:13">idct6</name><argument_list pos:start="179:14" pos:end="179:39">(<argument pos:start="179:15" pos:end="179:38"><expr pos:start="179:15" pos:end="179:38"><name pos:start="179:15" pos:end="179:38"><name pos:start="179:15" pos:end="179:15">s</name><operator pos:start="179:16" pos:end="179:17">-&gt;</operator><name pos:start="179:18" pos:end="179:29">pre_mantissa</name><index pos:start="179:30" pos:end="179:33">[<expr pos:start="179:31" pos:end="179:32"><name pos:start="179:31" pos:end="179:32">ch</name></expr>]</index><index pos:start="179:34" pos:end="179:38">[<expr pos:start="179:35" pos:end="179:37"><name pos:start="179:35" pos:end="179:37">bin</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
