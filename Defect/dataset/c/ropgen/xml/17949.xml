<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17949.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">config_parse</name><parameter_list pos:start="1:25" pos:end="1:65">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:33">GAConfig</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">config</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:51"><decl pos:start="1:44" pos:end="1:51"><type pos:start="1:44" pos:end="1:51"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:51">argc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:64"><decl pos:start="1:54" pos:end="1:64"><type pos:start="1:54" pos:end="1:64"><name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="231:1">{<block_content pos:start="5:5" pos:end="229:5">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">sopt</name> <init pos:start="5:22" pos:end="5:47">= <expr pos:start="5:24" pos:end="5:47"><literal type="string" pos:start="5:24" pos:end="5:47">"hVvdm:p:l:f:F::b:s:t:D"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">opt_ind</name> <init pos:start="7:17" pos:end="7:19">= <expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>, <decl pos:start="7:22" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:23">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="47:6"><decl pos:start="9:5" pos:end="47:5"><type pos:start="9:5" pos:end="9:23"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:23"><name pos:start="9:11" pos:end="9:16">struct</name> <name pos:start="9:18" pos:end="9:23">option</name></name></type> <name pos:start="9:25" pos:end="9:30"><name pos:start="9:25" pos:end="9:28">lopt</name><index pos:start="9:29" pos:end="9:30">[]</index></name> <init pos:start="9:32" pos:end="47:5">= <expr pos:start="9:34" pos:end="47:5"><block pos:start="9:34" pos:end="47:5">{

        <expr pos:start="11:9" pos:end="11:32"><block pos:start="11:9" pos:end="11:32">{ <expr pos:start="11:11" pos:end="11:16"><literal type="string" pos:start="11:11" pos:end="11:16">"help"</literal></expr>, <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr>, <expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">NULL</name></expr>, <expr pos:start="11:28" pos:end="11:30"><literal type="char" pos:start="11:28" pos:end="11:30">'h'</literal></expr> }</block></expr>,

        <expr pos:start="13:9" pos:end="13:35"><block pos:start="13:9" pos:end="13:35">{ <expr pos:start="13:11" pos:end="13:19"><literal type="string" pos:start="13:11" pos:end="13:19">"version"</literal></expr>, <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr>, <expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">NULL</name></expr>, <expr pos:start="13:31" pos:end="13:33"><literal type="char" pos:start="13:31" pos:end="13:33">'V'</literal></expr> }</block></expr>,

        <expr pos:start="15:9" pos:end="15:37"><block pos:start="15:9" pos:end="15:37">{ <expr pos:start="15:11" pos:end="15:21"><literal type="string" pos:start="15:11" pos:end="15:21">"dump-conf"</literal></expr>, <expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>, <expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">NULL</name></expr>, <expr pos:start="15:33" pos:end="15:35"><literal type="char" pos:start="15:33" pos:end="15:35">'D'</literal></expr> }</block></expr>,

        <expr pos:start="17:9" pos:end="17:35"><block pos:start="17:9" pos:end="17:35">{ <expr pos:start="17:11" pos:end="17:19"><literal type="string" pos:start="17:11" pos:end="17:19">"logfile"</literal></expr>, <expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr>, <expr pos:start="17:25" pos:end="17:28"><name pos:start="17:25" pos:end="17:28">NULL</name></expr>, <expr pos:start="17:31" pos:end="17:33"><literal type="char" pos:start="17:31" pos:end="17:33">'l'</literal></expr> }</block></expr>,

        <expr pos:start="19:9" pos:end="19:35"><block pos:start="19:9" pos:end="19:35">{ <expr pos:start="19:11" pos:end="19:19"><literal type="string" pos:start="19:11" pos:end="19:19">"pidfile"</literal></expr>, <expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr>, <expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">NULL</name></expr>, <expr pos:start="19:31" pos:end="19:33"><literal type="char" pos:start="19:31" pos:end="19:33">'f'</literal></expr> }</block></expr>,

<cpp:ifdef pos:start="21:1" pos:end="21:22">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:22">CONFIG_FSFREEZE</name></cpp:ifdef>

        <expr pos:start="23:9" pos:end="23:41"><block pos:start="23:9" pos:end="23:41">{ <expr pos:start="23:11" pos:end="23:25"><literal type="string" pos:start="23:11" pos:end="23:25">"fsfreeze-hook"</literal></expr>, <expr pos:start="23:28" pos:end="23:28"><literal type="number" pos:start="23:28" pos:end="23:28">2</literal></expr>, <expr pos:start="23:31" pos:end="23:34"><name pos:start="23:31" pos:end="23:34">NULL</name></expr>, <expr pos:start="23:37" pos:end="23:39"><literal type="char" pos:start="23:37" pos:end="23:39">'F'</literal></expr> }</block></expr>,

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

        <expr pos:start="27:9" pos:end="27:35"><block pos:start="27:9" pos:end="27:35">{ <expr pos:start="27:11" pos:end="27:19"><literal type="string" pos:start="27:11" pos:end="27:19">"verbose"</literal></expr>, <expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>, <expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">NULL</name></expr>, <expr pos:start="27:31" pos:end="27:33"><literal type="char" pos:start="27:31" pos:end="27:33">'v'</literal></expr> }</block></expr>,

        <expr pos:start="29:9" pos:end="29:34"><block pos:start="29:9" pos:end="29:34">{ <expr pos:start="29:11" pos:end="29:18"><literal type="string" pos:start="29:11" pos:end="29:18">"method"</literal></expr>, <expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>, <expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">NULL</name></expr>, <expr pos:start="29:30" pos:end="29:32"><literal type="char" pos:start="29:30" pos:end="29:32">'m'</literal></expr> }</block></expr>,

        <expr pos:start="31:9" pos:end="31:32"><block pos:start="31:9" pos:end="31:32">{ <expr pos:start="31:11" pos:end="31:16"><literal type="string" pos:start="31:11" pos:end="31:16">"path"</literal></expr>, <expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">1</literal></expr>, <expr pos:start="31:22" pos:end="31:25"><name pos:start="31:22" pos:end="31:25">NULL</name></expr>, <expr pos:start="31:28" pos:end="31:30"><literal type="char" pos:start="31:28" pos:end="31:30">'p'</literal></expr> }</block></expr>,

        <expr pos:start="33:9" pos:end="33:37"><block pos:start="33:9" pos:end="33:37">{ <expr pos:start="33:11" pos:end="33:21"><literal type="string" pos:start="33:11" pos:end="33:21">"daemonize"</literal></expr>, <expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>, <expr pos:start="33:27" pos:end="33:30"><name pos:start="33:27" pos:end="33:30">NULL</name></expr>, <expr pos:start="33:33" pos:end="33:35"><literal type="char" pos:start="33:33" pos:end="33:35">'d'</literal></expr> }</block></expr>,

        <expr pos:start="35:9" pos:end="35:37"><block pos:start="35:9" pos:end="35:37">{ <expr pos:start="35:11" pos:end="35:21"><literal type="string" pos:start="35:11" pos:end="35:21">"blacklist"</literal></expr>, <expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">1</literal></expr>, <expr pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:30">NULL</name></expr>, <expr pos:start="35:33" pos:end="35:35"><literal type="char" pos:start="35:33" pos:end="35:35">'b'</literal></expr> }</block></expr>,

<cpp:ifdef pos:start="37:1" pos:end="37:13">#<cpp:directive pos:start="37:2" pos:end="37:6">ifdef</cpp:directive> <name pos:start="37:8" pos:end="37:13">_WIN32</name></cpp:ifdef>

        <expr pos:start="39:9" pos:end="39:35"><block pos:start="39:9" pos:end="39:35">{ <expr pos:start="39:11" pos:end="39:19"><literal type="string" pos:start="39:11" pos:end="39:19">"service"</literal></expr>, <expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">1</literal></expr>, <expr pos:start="39:25" pos:end="39:28"><name pos:start="39:25" pos:end="39:28">NULL</name></expr>, <expr pos:start="39:31" pos:end="39:33"><literal type="char" pos:start="39:31" pos:end="39:33">'s'</literal></expr> }</block></expr>,

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

        <expr pos:start="43:9" pos:end="43:36"><block pos:start="43:9" pos:end="43:36">{ <expr pos:start="43:11" pos:end="43:20"><literal type="string" pos:start="43:11" pos:end="43:20">"statedir"</literal></expr>, <expr pos:start="43:23" pos:end="43:23"><literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>, <expr pos:start="43:26" pos:end="43:29"><name pos:start="43:26" pos:end="43:29">NULL</name></expr>, <expr pos:start="43:32" pos:end="43:34"><literal type="char" pos:start="43:32" pos:end="43:34">'t'</literal></expr> }</block></expr>,

        <expr pos:start="45:9" pos:end="45:28"><block pos:start="45:9" pos:end="45:28">{ <expr pos:start="45:11" pos:end="45:14"><name pos:start="45:11" pos:end="45:14">NULL</name></expr>, <expr pos:start="45:17" pos:end="45:17"><literal type="number" pos:start="45:17" pos:end="45:17">0</literal></expr>, <expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">NULL</name></expr>, <expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr> }</block></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:65"><expr pos:start="51:5" pos:end="51:64"><name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:10">config</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:21">log_level</name></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:41">G_LOG_LEVEL_ERROR</name> <operator pos:start="51:43" pos:end="51:43">|</operator> <name pos:start="51:45" pos:end="51:64">G_LOG_LEVEL_CRITICAL</name></expr>;</expr_stmt>



    <while pos:start="55:5" pos:end="229:5">while <condition pos:start="55:11" pos:end="55:70">(<expr pos:start="55:12" pos:end="55:69"><operator pos:start="55:12" pos:end="55:12">(</operator><name pos:start="55:13" pos:end="55:14">ch</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:62"><name pos:start="55:18" pos:end="55:28">getopt_long</name><argument_list pos:start="55:29" pos:end="55:62">(<argument pos:start="55:30" pos:end="55:33"><expr pos:start="55:30" pos:end="55:33"><name pos:start="55:30" pos:end="55:33">argc</name></expr></argument>, <argument pos:start="55:36" pos:end="55:39"><expr pos:start="55:36" pos:end="55:39"><name pos:start="55:36" pos:end="55:39">argv</name></expr></argument>, <argument pos:start="55:42" pos:end="55:45"><expr pos:start="55:42" pos:end="55:45"><name pos:start="55:42" pos:end="55:45">sopt</name></expr></argument>, <argument pos:start="55:48" pos:end="55:51"><expr pos:start="55:48" pos:end="55:51"><name pos:start="55:48" pos:end="55:51">lopt</name></expr></argument>, <argument pos:start="55:54" pos:end="55:61"><expr pos:start="55:54" pos:end="55:61"><operator pos:start="55:54" pos:end="55:54">&amp;</operator><name pos:start="55:55" pos:end="55:61">opt_ind</name></expr></argument>)</argument_list></call><operator pos:start="55:63" pos:end="55:63">)</operator> <operator pos:start="55:65" pos:end="55:66">!=</operator> <operator pos:start="55:68" pos:end="55:68">-</operator><literal type="number" pos:start="55:69" pos:end="55:69">1</literal></expr>)</condition> <block pos:start="55:72" pos:end="229:5">{<block_content pos:start="57:9" pos:end="227:9">

        <switch pos:start="57:9" pos:end="227:9">switch <condition pos:start="57:16" pos:end="57:19">(<expr pos:start="57:17" pos:end="57:18"><name pos:start="57:17" pos:end="57:18">ch</name></expr>)</condition> <block pos:start="57:21" pos:end="227:9">{<block_content pos:start="59:9" pos:end="225:31">

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="char" pos:start="59:14" pos:end="59:16">'m'</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><call pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:18">g_free</name><argument_list pos:start="61:19" pos:end="61:34">(<argument pos:start="61:20" pos:end="61:33"><expr pos:start="61:20" pos:end="61:33"><name pos:start="61:20" pos:end="61:33"><name pos:start="61:20" pos:end="61:25">config</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:33">method</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:46"><expr pos:start="63:13" pos:end="63:45"><name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:18">config</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:26">method</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <call pos:start="63:30" pos:end="63:45"><name pos:start="63:30" pos:end="63:37">g_strdup</name><argument_list pos:start="63:38" pos:end="63:45">(<argument pos:start="63:39" pos:end="63:44"><expr pos:start="63:39" pos:end="63:44"><name pos:start="63:39" pos:end="63:44">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:17">case <expr pos:start="67:14" pos:end="67:16"><literal type="char" pos:start="67:14" pos:end="67:16">'p'</literal></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:41"><expr pos:start="69:13" pos:end="69:40"><call pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:18">g_free</name><argument_list pos:start="69:19" pos:end="69:40">(<argument pos:start="69:20" pos:end="69:39"><expr pos:start="69:20" pos:end="69:39"><name pos:start="69:20" pos:end="69:39"><name pos:start="69:20" pos:end="69:25">config</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:39">channel_path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:52"><expr pos:start="71:13" pos:end="71:51"><name pos:start="71:13" pos:end="71:32"><name pos:start="71:13" pos:end="71:18">config</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:32">channel_path</name></name> <operator pos:start="71:34" pos:end="71:34">=</operator> <call pos:start="71:36" pos:end="71:51"><name pos:start="71:36" pos:end="71:43">g_strdup</name><argument_list pos:start="71:44" pos:end="71:51">(<argument pos:start="71:45" pos:end="71:50"><expr pos:start="71:45" pos:end="71:50"><name pos:start="71:45" pos:end="71:50">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:17">case <expr pos:start="75:14" pos:end="75:16"><literal type="char" pos:start="75:14" pos:end="75:16">'l'</literal></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:41"><expr pos:start="77:13" pos:end="77:40"><call pos:start="77:13" pos:end="77:40"><name pos:start="77:13" pos:end="77:18">g_free</name><argument_list pos:start="77:19" pos:end="77:40">(<argument pos:start="77:20" pos:end="77:39"><expr pos:start="77:20" pos:end="77:39"><name pos:start="77:20" pos:end="77:39"><name pos:start="77:20" pos:end="77:25">config</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:39">log_filepath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:52"><expr pos:start="79:13" pos:end="79:51"><name pos:start="79:13" pos:end="79:32"><name pos:start="79:13" pos:end="79:18">config</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:32">log_filepath</name></name> <operator pos:start="79:34" pos:end="79:34">=</operator> <call pos:start="79:36" pos:end="79:51"><name pos:start="79:36" pos:end="79:43">g_strdup</name><argument_list pos:start="79:44" pos:end="79:51">(<argument pos:start="79:45" pos:end="79:50"><expr pos:start="79:45" pos:end="79:50"><name pos:start="79:45" pos:end="79:50">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <case pos:start="83:9" pos:end="83:17">case <expr pos:start="83:14" pos:end="83:16"><literal type="char" pos:start="83:14" pos:end="83:16">'f'</literal></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:41"><expr pos:start="85:13" pos:end="85:40"><call pos:start="85:13" pos:end="85:40"><name pos:start="85:13" pos:end="85:18">g_free</name><argument_list pos:start="85:19" pos:end="85:40">(<argument pos:start="85:20" pos:end="85:39"><expr pos:start="85:20" pos:end="85:39"><name pos:start="85:20" pos:end="85:39"><name pos:start="85:20" pos:end="85:25">config</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:39">pid_filepath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:52"><expr pos:start="87:13" pos:end="87:51"><name pos:start="87:13" pos:end="87:32"><name pos:start="87:13" pos:end="87:18">config</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:32">pid_filepath</name></name> <operator pos:start="87:34" pos:end="87:34">=</operator> <call pos:start="87:36" pos:end="87:51"><name pos:start="87:36" pos:end="87:43">g_strdup</name><argument_list pos:start="87:44" pos:end="87:51">(<argument pos:start="87:45" pos:end="87:50"><expr pos:start="87:45" pos:end="87:50"><name pos:start="87:45" pos:end="87:50">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="92:0">break;</break>

<cpp:ifdef pos:start="91:1" pos:end="91:22">#<cpp:directive pos:start="91:2" pos:end="91:6">ifdef</cpp:directive> <name pos:start="91:8" pos:end="91:22">CONFIG_FSFREEZE</name></cpp:ifdef>

        <case pos:start="93:9" pos:end="93:17">case <expr pos:start="93:14" pos:end="93:16"><literal type="char" pos:start="93:14" pos:end="93:16">'F'</literal></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:42"><expr pos:start="95:13" pos:end="95:41"><call pos:start="95:13" pos:end="95:41"><name pos:start="95:13" pos:end="95:18">g_free</name><argument_list pos:start="95:19" pos:end="95:41">(<argument pos:start="95:20" pos:end="95:40"><expr pos:start="95:20" pos:end="95:40"><name pos:start="95:20" pos:end="95:40"><name pos:start="95:20" pos:end="95:25">config</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:40">fsfreeze_hook</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:82"><expr pos:start="97:13" pos:end="97:81"><name pos:start="97:13" pos:end="97:33"><name pos:start="97:13" pos:end="97:18">config</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:33">fsfreeze_hook</name></name> <operator pos:start="97:35" pos:end="97:35">=</operator> <call pos:start="97:37" pos:end="97:81"><name pos:start="97:37" pos:end="97:44">g_strdup</name><argument_list pos:start="97:45" pos:end="97:81">(<argument pos:start="97:46" pos:end="97:80"><expr pos:start="97:46" pos:end="97:80"><ternary pos:start="97:46" pos:end="97:80"><condition pos:start="97:46" pos:end="97:53"><expr pos:start="97:46" pos:end="97:51"><name pos:start="97:46" pos:end="97:51">optarg</name></expr> ?</condition><then/><else pos:start="97:54" pos:end="97:80">: <expr pos:start="97:56" pos:end="97:80"><name pos:start="97:56" pos:end="97:80">QGA_FSFREEZE_HOOK_DEFAULT</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="102:0">break;</break>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>

        <case pos:start="103:9" pos:end="103:17">case <expr pos:start="103:14" pos:end="103:16"><literal type="char" pos:start="103:14" pos:end="103:16">'t'</literal></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:38"><expr pos:start="105:13" pos:end="105:37"><call pos:start="105:13" pos:end="105:37"><name pos:start="105:13" pos:end="105:18">g_free</name><argument_list pos:start="105:19" pos:end="105:37">(<argument pos:start="105:20" pos:end="105:36"><expr pos:start="105:20" pos:end="105:36"><name pos:start="105:20" pos:end="105:36"><name pos:start="105:20" pos:end="105:25">config</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:36">state_dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:49"><expr pos:start="107:13" pos:end="107:48"><name pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:18">config</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:29">state_dir</name></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <call pos:start="107:33" pos:end="107:48"><name pos:start="107:33" pos:end="107:40">g_strdup</name><argument_list pos:start="107:41" pos:end="107:48">(<argument pos:start="107:42" pos:end="107:47"><expr pos:start="107:42" pos:end="107:47"><name pos:start="107:42" pos:end="107:47">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:17">case <expr pos:start="111:14" pos:end="111:16"><literal type="char" pos:start="111:14" pos:end="111:16">'v'</literal></expr>:</case>

            <comment type="block" pos:start="113:13" pos:end="113:39">/* enable all log levels */</comment>

            <expr_stmt pos:start="115:13" pos:end="115:49"><expr pos:start="115:13" pos:end="115:48"><name pos:start="115:13" pos:end="115:29"><name pos:start="115:13" pos:end="115:18">config</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:29">log_level</name></name> <operator pos:start="115:31" pos:end="115:31">=</operator> <name pos:start="115:33" pos:end="115:48">G_LOG_LEVEL_MASK</name></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:17">case <expr pos:start="119:14" pos:end="119:16"><literal type="char" pos:start="119:14" pos:end="119:16">'V'</literal></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:58"><expr pos:start="121:13" pos:end="121:57"><call pos:start="121:13" pos:end="121:57"><name pos:start="121:13" pos:end="121:18">printf</name><argument_list pos:start="121:19" pos:end="121:57">(<argument pos:start="121:20" pos:end="121:42"><expr pos:start="121:20" pos:end="121:42"><literal type="string" pos:start="121:20" pos:end="121:42">"QEMU Guest Agent %s\n"</literal></expr></argument>, <argument pos:start="121:45" pos:end="121:56"><expr pos:start="121:45" pos:end="121:56"><name pos:start="121:45" pos:end="121:56">QEMU_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:31"><expr pos:start="123:13" pos:end="123:30"><call pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:16">exit</name><argument_list pos:start="123:17" pos:end="123:30">(<argument pos:start="123:18" pos:end="123:29"><expr pos:start="123:18" pos:end="123:29"><name pos:start="123:18" pos:end="123:29">EXIT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <case pos:start="125:9" pos:end="125:17">case <expr pos:start="125:14" pos:end="125:16"><literal type="char" pos:start="125:14" pos:end="125:16">'d'</literal></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:34"><expr pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:18">config</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:29">daemonize</name></name> <operator pos:start="127:31" pos:end="127:31">=</operator> <literal type="number" pos:start="127:33" pos:end="127:33">1</literal></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:17">case <expr pos:start="131:14" pos:end="131:16"><literal type="char" pos:start="131:14" pos:end="131:16">'D'</literal></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:33"><expr pos:start="133:13" pos:end="133:32"><name pos:start="133:13" pos:end="133:28"><name pos:start="133:13" pos:end="133:18">config</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:28">dumpconf</name></name> <operator pos:start="133:30" pos:end="133:30">=</operator> <literal type="number" pos:start="133:32" pos:end="133:32">1</literal></expr>;</expr_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:17">case <expr pos:start="137:14" pos:end="137:16"><literal type="char" pos:start="137:14" pos:end="137:16">'b'</literal></expr>:</case> <block pos:start="137:19" pos:end="156:0">{<block_content pos:start="139:13" pos:end="151:18">

            <if_stmt pos:start="139:13" pos:end="145:13"><if pos:start="139:13" pos:end="145:13">if <condition pos:start="139:16" pos:end="139:39">(<expr pos:start="139:17" pos:end="139:38"><call pos:start="139:17" pos:end="139:38"><name pos:start="139:17" pos:end="139:30">is_help_option</name><argument_list pos:start="139:31" pos:end="139:38">(<argument pos:start="139:32" pos:end="139:37"><expr pos:start="139:32" pos:end="139:37"><name pos:start="139:32" pos:end="139:37">optarg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:41" pos:end="145:13">{<block_content pos:start="141:17" pos:end="143:35">

                <expr_stmt pos:start="141:17" pos:end="141:57"><expr pos:start="141:17" pos:end="141:56"><call pos:start="141:17" pos:end="141:56"><name pos:start="141:17" pos:end="141:36">qmp_for_each_command</name><argument_list pos:start="141:37" pos:end="141:56">(<argument pos:start="141:38" pos:end="141:49"><expr pos:start="141:38" pos:end="141:49"><name pos:start="141:38" pos:end="141:49">ga_print_cmd</name></expr></argument>, <argument pos:start="141:52" pos:end="141:55"><expr pos:start="141:52" pos:end="141:55"><name pos:start="141:52" pos:end="141:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:35"><expr pos:start="143:17" pos:end="143:34"><call pos:start="143:17" pos:end="143:34"><name pos:start="143:17" pos:end="143:20">exit</name><argument_list pos:start="143:21" pos:end="143:34">(<argument pos:start="143:22" pos:end="143:33"><expr pos:start="143:22" pos:end="143:33"><name pos:start="143:22" pos:end="143:33">EXIT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="149:70"><expr pos:start="147:13" pos:end="149:69"><name pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:18">config</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:29">blacklist</name></name> <operator pos:start="147:31" pos:end="147:31">=</operator> <call pos:start="147:33" pos:end="149:69"><name pos:start="147:33" pos:end="147:45">g_list_concat</name><argument_list pos:start="147:46" pos:end="149:69">(<argument pos:start="147:47" pos:end="147:63"><expr pos:start="147:47" pos:end="147:63"><name pos:start="147:47" pos:end="147:63"><name pos:start="147:47" pos:end="147:52">config</name><operator pos:start="147:53" pos:end="147:54">-&gt;</operator><name pos:start="147:55" pos:end="147:63">blacklist</name></name></expr></argument>,

                                             <argument pos:start="149:46" pos:end="149:68"><expr pos:start="149:46" pos:end="149:68"><call pos:start="149:46" pos:end="149:68"><name pos:start="149:46" pos:end="149:55">split_list</name><argument_list pos:start="149:56" pos:end="149:68">(<argument pos:start="149:57" pos:end="149:62"><expr pos:start="149:57" pos:end="149:62"><name pos:start="149:57" pos:end="149:62">optarg</name></expr></argument>, <argument pos:start="149:65" pos:end="149:67"><expr pos:start="149:65" pos:end="149:67"><literal type="string" pos:start="149:65" pos:end="149:67">","</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        </block_content>}</block>

<cpp:ifdef pos:start="155:1" pos:end="155:13">#<cpp:directive pos:start="155:2" pos:end="155:6">ifdef</cpp:directive> <name pos:start="155:8" pos:end="155:13">_WIN32</name></cpp:ifdef>

        <case pos:start="157:9" pos:end="157:17">case <expr pos:start="157:14" pos:end="157:16"><literal type="char" pos:start="157:14" pos:end="157:16">'s'</literal></expr>:</case>

            <expr_stmt pos:start="159:13" pos:end="159:37"><expr pos:start="159:13" pos:end="159:36"><name pos:start="159:13" pos:end="159:27"><name pos:start="159:13" pos:end="159:18">config</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:27">service</name></name> <operator pos:start="159:29" pos:end="159:29">=</operator> <name pos:start="159:31" pos:end="159:36">optarg</name></expr>;</expr_stmt>

            <if_stmt pos:start="161:13" pos:end="207:13"><if pos:start="161:13" pos:end="179:13">if <condition pos:start="161:16" pos:end="161:56">(<expr pos:start="161:17" pos:end="161:55"><call pos:start="161:17" pos:end="161:50"><name pos:start="161:17" pos:end="161:22">strcmp</name><argument_list pos:start="161:23" pos:end="161:50">(<argument pos:start="161:24" pos:end="161:38"><expr pos:start="161:24" pos:end="161:38"><name pos:start="161:24" pos:end="161:38"><name pos:start="161:24" pos:end="161:29">config</name><operator pos:start="161:30" pos:end="161:31">-&gt;</operator><name pos:start="161:32" pos:end="161:38">service</name></name></expr></argument>, <argument pos:start="161:41" pos:end="161:49"><expr pos:start="161:41" pos:end="161:49"><literal type="string" pos:start="161:41" pos:end="161:49">"install"</literal></expr></argument>)</argument_list></call> <operator pos:start="161:52" pos:end="161:53">==</operator> <literal type="number" pos:start="161:55" pos:end="161:55">0</literal></expr>)</condition> <block pos:start="161:58" pos:end="179:13">{<block_content pos:start="163:17" pos:end="177:35">

                <if_stmt pos:start="163:17" pos:end="167:17"><if pos:start="163:17" pos:end="167:17">if <condition pos:start="163:20" pos:end="163:46">(<expr pos:start="163:21" pos:end="163:45"><call pos:start="163:21" pos:end="163:45"><name pos:start="163:21" pos:end="163:43">ga_install_vss_provider</name><argument_list pos:start="163:44" pos:end="163:45">()</argument_list></call></expr>)</condition> <block pos:start="163:48" pos:end="167:17">{<block_content pos:start="165:21" pos:end="165:39">

                    <expr_stmt pos:start="165:21" pos:end="165:39"><expr pos:start="165:21" pos:end="165:38"><call pos:start="165:21" pos:end="165:38"><name pos:start="165:21" pos:end="165:24">exit</name><argument_list pos:start="165:25" pos:end="165:38">(<argument pos:start="165:26" pos:end="165:37"><expr pos:start="165:26" pos:end="165:37"><name pos:start="165:26" pos:end="165:37">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="169:17" pos:end="175:17"><if pos:start="169:17" pos:end="175:17">if <condition pos:start="169:20" pos:end="171:80">(<expr pos:start="169:21" pos:end="171:79"><call pos:start="169:21" pos:end="171:79"><name pos:start="169:21" pos:end="169:38">ga_install_service</name><argument_list pos:start="169:39" pos:end="171:79">(<argument pos:start="169:40" pos:end="169:59"><expr pos:start="169:40" pos:end="169:59"><name pos:start="169:40" pos:end="169:59"><name pos:start="169:40" pos:end="169:45">config</name><operator pos:start="169:46" pos:end="169:47">-&gt;</operator><name pos:start="169:48" pos:end="169:59">channel_path</name></name></expr></argument>,

                                       <argument pos:start="171:40" pos:end="171:59"><expr pos:start="171:40" pos:end="171:59"><name pos:start="171:40" pos:end="171:59"><name pos:start="171:40" pos:end="171:45">config</name><operator pos:start="171:46" pos:end="171:47">-&gt;</operator><name pos:start="171:48" pos:end="171:59">log_filepath</name></name></expr></argument>, <argument pos:start="171:62" pos:end="171:78"><expr pos:start="171:62" pos:end="171:78"><name pos:start="171:62" pos:end="171:78"><name pos:start="171:62" pos:end="171:67">config</name><operator pos:start="171:68" pos:end="171:69">-&gt;</operator><name pos:start="171:70" pos:end="171:78">state_dir</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:82" pos:end="175:17">{<block_content pos:start="173:21" pos:end="173:39">

                    <expr_stmt pos:start="173:21" pos:end="173:39"><expr pos:start="173:21" pos:end="173:38"><call pos:start="173:21" pos:end="173:38"><name pos:start="173:21" pos:end="173:24">exit</name><argument_list pos:start="173:25" pos:end="173:38">(<argument pos:start="173:26" pos:end="173:37"><expr pos:start="173:26" pos:end="173:37"><name pos:start="173:26" pos:end="173:37">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:35"><expr pos:start="177:17" pos:end="177:34"><call pos:start="177:17" pos:end="177:34"><name pos:start="177:17" pos:end="177:20">exit</name><argument_list pos:start="177:21" pos:end="177:34">(<argument pos:start="177:22" pos:end="177:33"><expr pos:start="177:22" pos:end="177:33"><name pos:start="177:22" pos:end="177:33">EXIT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="179:15" pos:end="185:13">else if <condition pos:start="179:23" pos:end="179:65">(<expr pos:start="179:24" pos:end="179:64"><call pos:start="179:24" pos:end="179:59"><name pos:start="179:24" pos:end="179:29">strcmp</name><argument_list pos:start="179:30" pos:end="179:59">(<argument pos:start="179:31" pos:end="179:45"><expr pos:start="179:31" pos:end="179:45"><name pos:start="179:31" pos:end="179:45"><name pos:start="179:31" pos:end="179:36">config</name><operator pos:start="179:37" pos:end="179:38">-&gt;</operator><name pos:start="179:39" pos:end="179:45">service</name></name></expr></argument>, <argument pos:start="179:48" pos:end="179:58"><expr pos:start="179:48" pos:end="179:58"><literal type="string" pos:start="179:48" pos:end="179:58">"uninstall"</literal></expr></argument>)</argument_list></call> <operator pos:start="179:61" pos:end="179:62">==</operator> <literal type="number" pos:start="179:64" pos:end="179:64">0</literal></expr>)</condition> <block pos:start="179:67" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:45">

                <expr_stmt pos:start="181:17" pos:end="181:44"><expr pos:start="181:17" pos:end="181:43"><call pos:start="181:17" pos:end="181:43"><name pos:start="181:17" pos:end="181:41">ga_uninstall_vss_provider</name><argument_list pos:start="181:42" pos:end="181:43">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:45"><expr pos:start="183:17" pos:end="183:44"><call pos:start="183:17" pos:end="183:44"><name pos:start="183:17" pos:end="183:20">exit</name><argument_list pos:start="183:21" pos:end="183:44">(<argument pos:start="183:22" pos:end="183:43"><expr pos:start="183:22" pos:end="183:43"><call pos:start="183:22" pos:end="183:43"><name pos:start="183:22" pos:end="183:41">ga_uninstall_service</name><argument_list pos:start="183:42" pos:end="183:43">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="185:15" pos:end="195:13">else if <condition pos:start="185:23" pos:end="185:67">(<expr pos:start="185:24" pos:end="185:66"><call pos:start="185:24" pos:end="185:61"><name pos:start="185:24" pos:end="185:29">strcmp</name><argument_list pos:start="185:30" pos:end="185:61">(<argument pos:start="185:31" pos:end="185:45"><expr pos:start="185:31" pos:end="185:45"><name pos:start="185:31" pos:end="185:45"><name pos:start="185:31" pos:end="185:36">config</name><operator pos:start="185:37" pos:end="185:38">-&gt;</operator><name pos:start="185:39" pos:end="185:45">service</name></name></expr></argument>, <argument pos:start="185:48" pos:end="185:60"><expr pos:start="185:48" pos:end="185:60"><literal type="string" pos:start="185:48" pos:end="185:60">"vss-install"</literal></expr></argument>)</argument_list></call> <operator pos:start="185:63" pos:end="185:64">==</operator> <literal type="number" pos:start="185:66" pos:end="185:66">0</literal></expr>)</condition> <block pos:start="185:69" pos:end="195:13">{<block_content pos:start="187:17" pos:end="193:35">

                <if_stmt pos:start="187:17" pos:end="191:17"><if pos:start="187:17" pos:end="191:17">if <condition pos:start="187:20" pos:end="187:46">(<expr pos:start="187:21" pos:end="187:45"><call pos:start="187:21" pos:end="187:45"><name pos:start="187:21" pos:end="187:43">ga_install_vss_provider</name><argument_list pos:start="187:44" pos:end="187:45">()</argument_list></call></expr>)</condition> <block pos:start="187:48" pos:end="191:17">{<block_content pos:start="189:21" pos:end="189:39">

                    <expr_stmt pos:start="189:21" pos:end="189:39"><expr pos:start="189:21" pos:end="189:38"><call pos:start="189:21" pos:end="189:38"><name pos:start="189:21" pos:end="189:24">exit</name><argument_list pos:start="189:25" pos:end="189:38">(<argument pos:start="189:26" pos:end="189:37"><expr pos:start="189:26" pos:end="189:37"><name pos:start="189:26" pos:end="189:37">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:35"><expr pos:start="193:17" pos:end="193:34"><call pos:start="193:17" pos:end="193:34"><name pos:start="193:17" pos:end="193:20">exit</name><argument_list pos:start="193:21" pos:end="193:34">(<argument pos:start="193:22" pos:end="193:33"><expr pos:start="193:22" pos:end="193:33"><name pos:start="193:22" pos:end="193:33">EXIT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="195:15" pos:end="201:13">else if <condition pos:start="195:23" pos:end="195:69">(<expr pos:start="195:24" pos:end="195:68"><call pos:start="195:24" pos:end="195:63"><name pos:start="195:24" pos:end="195:29">strcmp</name><argument_list pos:start="195:30" pos:end="195:63">(<argument pos:start="195:31" pos:end="195:45"><expr pos:start="195:31" pos:end="195:45"><name pos:start="195:31" pos:end="195:45"><name pos:start="195:31" pos:end="195:36">config</name><operator pos:start="195:37" pos:end="195:38">-&gt;</operator><name pos:start="195:39" pos:end="195:45">service</name></name></expr></argument>, <argument pos:start="195:48" pos:end="195:62"><expr pos:start="195:48" pos:end="195:62"><literal type="string" pos:start="195:48" pos:end="195:62">"vss-uninstall"</literal></expr></argument>)</argument_list></call> <operator pos:start="195:65" pos:end="195:66">==</operator> <literal type="number" pos:start="195:68" pos:end="195:68">0</literal></expr>)</condition> <block pos:start="195:71" pos:end="201:13">{<block_content pos:start="197:17" pos:end="199:35">

                <expr_stmt pos:start="197:17" pos:end="197:44"><expr pos:start="197:17" pos:end="197:43"><call pos:start="197:17" pos:end="197:43"><name pos:start="197:17" pos:end="197:41">ga_uninstall_vss_provider</name><argument_list pos:start="197:42" pos:end="197:43">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:35"><expr pos:start="199:17" pos:end="199:34"><call pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:20">exit</name><argument_list pos:start="199:21" pos:end="199:34">(<argument pos:start="199:22" pos:end="199:33"><expr pos:start="199:22" pos:end="199:33"><name pos:start="199:22" pos:end="199:33">EXIT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="201:15" pos:end="207:13">else <block pos:start="201:20" pos:end="207:13">{<block_content pos:start="203:17" pos:end="205:35">

                <expr_stmt pos:start="203:17" pos:end="203:53"><expr pos:start="203:17" pos:end="203:52"><call pos:start="203:17" pos:end="203:52"><name pos:start="203:17" pos:end="203:22">printf</name><argument_list pos:start="203:23" pos:end="203:52">(<argument pos:start="203:24" pos:end="203:51"><expr pos:start="203:24" pos:end="203:51"><literal type="string" pos:start="203:24" pos:end="203:51">"Unknown service command.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:35"><expr pos:start="205:17" pos:end="205:34"><call pos:start="205:17" pos:end="205:34"><name pos:start="205:17" pos:end="205:20">exit</name><argument_list pos:start="205:21" pos:end="205:34">(<argument pos:start="205:22" pos:end="205:33"><expr pos:start="205:22" pos:end="205:33"><name pos:start="205:22" pos:end="205:33">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="209:13" pos:end="212:0">break;</break>

<cpp:endif pos:start="211:1" pos:end="211:6">#<cpp:directive pos:start="211:2" pos:end="211:6">endif</cpp:directive></cpp:endif>

        <case pos:start="213:9" pos:end="213:17">case <expr pos:start="213:14" pos:end="213:16"><literal type="char" pos:start="213:14" pos:end="213:16">'h'</literal></expr>:</case>

            <expr_stmt pos:start="215:13" pos:end="215:27"><expr pos:start="215:13" pos:end="215:26"><call pos:start="215:13" pos:end="215:26"><name pos:start="215:13" pos:end="215:17">usage</name><argument_list pos:start="215:18" pos:end="215:26">(<argument pos:start="215:19" pos:end="215:25"><expr pos:start="215:19" pos:end="215:25"><name pos:start="215:19" pos:end="215:25"><name pos:start="215:19" pos:end="215:22">argv</name><index pos:start="215:23" pos:end="215:25">[<expr pos:start="215:24" pos:end="215:24"><literal type="number" pos:start="215:24" pos:end="215:24">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:31"><expr pos:start="217:13" pos:end="217:30"><call pos:start="217:13" pos:end="217:30"><name pos:start="217:13" pos:end="217:16">exit</name><argument_list pos:start="217:17" pos:end="217:30">(<argument pos:start="217:18" pos:end="217:29"><expr pos:start="217:18" pos:end="217:29"><name pos:start="217:18" pos:end="217:29">EXIT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <case pos:start="219:9" pos:end="219:17">case <expr pos:start="219:14" pos:end="219:16"><literal type="char" pos:start="219:14" pos:end="219:16">'?'</literal></expr>:</case>

            <expr_stmt pos:start="221:13" pos:end="223:29"><expr pos:start="221:13" pos:end="223:28"><call pos:start="221:13" pos:end="223:28"><name pos:start="221:13" pos:end="221:19">g_print</name><argument_list pos:start="221:20" pos:end="223:28">(<argument pos:start="221:21" pos:end="221:77"><expr pos:start="221:21" pos:end="221:77"><literal type="string" pos:start="221:21" pos:end="221:77">"Unknown option, try '%s --help' for more information.\n"</literal></expr></argument>,

                    <argument pos:start="223:21" pos:end="223:27"><expr pos:start="223:21" pos:end="223:27"><name pos:start="223:21" pos:end="223:27"><name pos:start="223:21" pos:end="223:24">argv</name><index pos:start="223:25" pos:end="223:27">[<expr pos:start="223:26" pos:end="223:26"><literal type="number" pos:start="223:26" pos:end="223:26">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:31"><expr pos:start="225:13" pos:end="225:30"><call pos:start="225:13" pos:end="225:30"><name pos:start="225:13" pos:end="225:16">exit</name><argument_list pos:start="225:17" pos:end="225:30">(<argument pos:start="225:18" pos:end="225:29"><expr pos:start="225:18" pos:end="225:29"><name pos:start="225:18" pos:end="225:29">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
