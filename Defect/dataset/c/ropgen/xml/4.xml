<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">av_opencl_buffer_write</name><parameter_list pos:start="1:27" pos:end="1:80">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:33">cl_mem</name></type> <name pos:start="1:35" pos:end="1:44">dst_cl_buf</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:62">src_buf</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><name pos:start="1:65" pos:end="1:70">size_t</name></type> <name pos:start="1:72" pos:end="1:79">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">cl_int</name></type> <name pos:start="5:12" pos:end="5:17">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="11:62"><decl pos:start="7:5" pos:end="11:61"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:16">mapped</name> <init pos:start="7:18" pos:end="11:61">= <expr pos:start="7:20" pos:end="11:61"><call pos:start="7:20" pos:end="11:61"><name pos:start="7:20" pos:end="7:37">clEnqueueMapBuffer</name><argument_list pos:start="7:38" pos:end="11:61">(<argument pos:start="7:39" pos:end="7:59"><expr pos:start="7:39" pos:end="7:59"><name pos:start="7:39" pos:end="7:59"><name pos:start="7:39" pos:end="7:45">gpu_env</name><operator pos:start="7:46" pos:end="7:46">.</operator><name pos:start="7:47" pos:end="7:59">command_queue</name></name></expr></argument>, <argument pos:start="7:62" pos:end="7:71"><expr pos:start="7:62" pos:end="7:71"><name pos:start="7:62" pos:end="7:71">dst_cl_buf</name></expr></argument>,

                                      <argument pos:start="9:39" pos:end="9:45"><expr pos:start="9:39" pos:end="9:45"><name pos:start="9:39" pos:end="9:45">CL_TRUE</name></expr></argument>,<argument pos:start="9:47" pos:end="9:58"><expr pos:start="9:47" pos:end="9:58"><name pos:start="9:47" pos:end="9:58">CL_MAP_WRITE</name></expr></argument>, <argument pos:start="9:61" pos:end="9:61"><expr pos:start="9:61" pos:end="9:61"><literal type="number" pos:start="9:61" pos:end="9:61">0</literal></expr></argument>, <argument pos:start="9:64" pos:end="9:89"><expr pos:start="9:64" pos:end="9:89"><sizeof pos:start="9:64" pos:end="9:78">sizeof<argument_list pos:start="9:70" pos:end="9:78">(<argument pos:start="9:71" pos:end="9:77"><expr pos:start="9:71" pos:end="9:77"><name pos:start="9:71" pos:end="9:77">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="9:80" pos:end="9:80">*</operator> <name pos:start="9:82" pos:end="9:89">buf_size</name></expr></argument>,

                                      <argument pos:start="11:39" pos:end="11:39"><expr pos:start="11:39" pos:end="11:39"><literal type="number" pos:start="11:39" pos:end="11:39">0</literal></expr></argument>, <argument pos:start="11:42" pos:end="11:45"><expr pos:start="11:42" pos:end="11:45"><name pos:start="11:42" pos:end="11:45">NULL</name></expr></argument>, <argument pos:start="11:48" pos:end="11:51"><expr pos:start="11:48" pos:end="11:51"><name pos:start="11:48" pos:end="11:51">NULL</name></expr></argument>, <argument pos:start="11:54" pos:end="11:60"><expr pos:start="11:54" pos:end="11:60"><operator pos:start="11:54" pos:end="11:54">&amp;</operator><name pos:start="11:55" pos:end="11:60">status</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:14">status</name> <operator pos:start="15:16" pos:end="15:17">!=</operator> <name pos:start="15:19" pos:end="15:28">CL_SUCCESS</name></expr>)</condition> <block pos:start="15:31" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:32">

        <expr_stmt pos:start="17:9" pos:end="17:103"><expr pos:start="17:9" pos:end="17:102"><call pos:start="17:9" pos:end="17:102"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:102">(<argument pos:start="17:16" pos:end="17:27"><expr pos:start="17:16" pos:end="17:27"><operator pos:start="17:16" pos:end="17:16">&amp;</operator><name pos:start="17:17" pos:end="17:27">openclutils</name></expr></argument>, <argument pos:start="17:30" pos:end="17:41"><expr pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:44" pos:end="17:78"><expr pos:start="17:44" pos:end="17:78"><literal type="string" pos:start="17:44" pos:end="17:78">"Could not map OpenCL buffer: %s\n"</literal></expr></argument>, <argument pos:start="17:81" pos:end="17:101"><expr pos:start="17:81" pos:end="17:101"><call pos:start="17:81" pos:end="17:101"><name pos:start="17:81" pos:end="17:93">opencl_errstr</name><argument_list pos:start="17:94" pos:end="17:101">(<argument pos:start="17:95" pos:end="17:100"><expr pos:start="17:95" pos:end="17:100"><name pos:start="17:95" pos:end="17:100">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:32">return <expr pos:start="19:16" pos:end="19:31"><name pos:start="19:16" pos:end="19:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><call pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:10">memcpy</name><argument_list pos:start="23:11" pos:end="23:37">(<argument pos:start="23:12" pos:end="23:17"><expr pos:start="23:12" pos:end="23:17"><name pos:start="23:12" pos:end="23:17">mapped</name></expr></argument>, <argument pos:start="23:20" pos:end="23:26"><expr pos:start="23:20" pos:end="23:26"><name pos:start="23:20" pos:end="23:26">src_buf</name></expr></argument>, <argument pos:start="23:29" pos:end="23:36"><expr pos:start="23:29" pos:end="23:36"><name pos:start="23:29" pos:end="23:36">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:95"><expr pos:start="27:5" pos:end="27:94"><name pos:start="27:5" pos:end="27:10">status</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:94"><name pos:start="27:14" pos:end="27:36">clEnqueueUnmapMemObject</name><argument_list pos:start="27:37" pos:end="27:94">(<argument pos:start="27:38" pos:end="27:58"><expr pos:start="27:38" pos:end="27:58"><name pos:start="27:38" pos:end="27:58"><name pos:start="27:38" pos:end="27:44">gpu_env</name><operator pos:start="27:45" pos:end="27:45">.</operator><name pos:start="27:46" pos:end="27:58">command_queue</name></name></expr></argument>, <argument pos:start="27:61" pos:end="27:70"><expr pos:start="27:61" pos:end="27:70"><name pos:start="27:61" pos:end="27:70">dst_cl_buf</name></expr></argument>, <argument pos:start="27:73" pos:end="27:78"><expr pos:start="27:73" pos:end="27:78"><name pos:start="27:73" pos:end="27:78">mapped</name></expr></argument>, <argument pos:start="27:81" pos:end="27:81"><expr pos:start="27:81" pos:end="27:81"><literal type="number" pos:start="27:81" pos:end="27:81">0</literal></expr></argument>, <argument pos:start="27:84" pos:end="27:87"><expr pos:start="27:84" pos:end="27:87"><name pos:start="27:84" pos:end="27:87">NULL</name></expr></argument>, <argument pos:start="27:90" pos:end="27:93"><expr pos:start="27:90" pos:end="27:93"><name pos:start="27:90" pos:end="27:93">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:29">(<expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:14">status</name> <operator pos:start="29:16" pos:end="29:17">!=</operator> <name pos:start="29:19" pos:end="29:28">CL_SUCCESS</name></expr>)</condition> <block pos:start="29:31" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:32">

        <expr_stmt pos:start="31:9" pos:end="31:105"><expr pos:start="31:9" pos:end="31:104"><call pos:start="31:9" pos:end="31:104"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:104">(<argument pos:start="31:16" pos:end="31:27"><expr pos:start="31:16" pos:end="31:27"><operator pos:start="31:16" pos:end="31:16">&amp;</operator><name pos:start="31:17" pos:end="31:27">openclutils</name></expr></argument>, <argument pos:start="31:30" pos:end="31:41"><expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:44" pos:end="31:80"><expr pos:start="31:44" pos:end="31:80"><literal type="string" pos:start="31:44" pos:end="31:80">"Could not unmap OpenCL buffer: %s\n"</literal></expr></argument>, <argument pos:start="31:83" pos:end="31:103"><expr pos:start="31:83" pos:end="31:103"><call pos:start="31:83" pos:end="31:103"><name pos:start="31:83" pos:end="31:95">opencl_errstr</name><argument_list pos:start="31:96" pos:end="31:103">(<argument pos:start="31:97" pos:end="31:102"><expr pos:start="31:97" pos:end="31:102"><name pos:start="31:97" pos:end="31:102">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:32">return <expr pos:start="33:16" pos:end="33:31"><name pos:start="33:16" pos:end="33:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
