<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18325.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">rbd_finish_aiocb</name><parameter_list pos:start="1:29" pos:end="1:62">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:45">rbd_completion_t</name></type> <name pos:start="1:47" pos:end="1:47">c</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:56">RADOSCB</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">rcb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:43"><expr pos:start="7:5" pos:end="7:42"><name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">rcb</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:12">ret</name></name> <operator pos:start="7:14" pos:end="7:14">=</operator> <call pos:start="7:16" pos:end="7:42"><name pos:start="7:16" pos:end="7:39">rbd_aio_get_return_value</name><argument_list pos:start="7:40" pos:end="7:42">(<argument pos:start="7:41" pos:end="7:41"><expr pos:start="7:41" pos:end="7:41"><name pos:start="7:41" pos:end="7:41">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:23"><expr pos:start="9:5" pos:end="9:22"><call pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:19">rbd_aio_release</name><argument_list pos:start="9:20" pos:end="9:22">(<argument pos:start="9:21" pos:end="9:21"><expr pos:start="9:21" pos:end="9:21"><name pos:start="9:21" pos:end="9:21">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:42"><expr pos:start="11:5" pos:end="11:41"><name pos:start="11:5" pos:end="11:7">ret</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:41"><name pos:start="11:11" pos:end="11:28">qemu_rbd_send_pipe</name><argument_list pos:start="11:29" pos:end="11:41">(<argument pos:start="11:30" pos:end="11:35"><expr pos:start="11:30" pos:end="11:35"><name pos:start="11:30" pos:end="11:35"><name pos:start="11:30" pos:end="11:32">rcb</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:35">s</name></name></expr></argument>, <argument pos:start="11:38" pos:end="11:40"><expr pos:start="11:38" pos:end="11:40"><name pos:start="11:38" pos:end="11:40">rcb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">&lt;</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>)</condition> <block pos:start="13:18" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:20">

        <expr_stmt pos:start="15:9" pos:end="15:54"><expr pos:start="15:9" pos:end="15:53"><call pos:start="15:9" pos:end="15:53"><name pos:start="15:9" pos:end="15:20">error_report</name><argument_list pos:start="15:21" pos:end="15:53">(<argument pos:start="15:22" pos:end="15:52"><expr pos:start="15:22" pos:end="15:52"><literal type="string" pos:start="15:22" pos:end="15:52">"failed writing to acb-&gt;s-&gt;fds"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><call pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:14">g_free</name><argument_list pos:start="17:15" pos:end="17:19">(<argument pos:start="17:16" pos:end="17:18"><expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">rcb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
