<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16042.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">ff_hls_write_file_entry</name><parameter_list pos:start="1:28" pos:end="11:68">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:39">AVIOContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">out</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:64">insert_discont</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:47">byterange_mode</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:35">double</name></type> <name pos:start="5:37" pos:end="5:44">duration</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:64"><decl pos:start="5:47" pos:end="5:64"><type pos:start="5:47" pos:end="5:64"><name pos:start="5:47" pos:end="5:49">int</name></type> <name pos:start="5:51" pos:end="5:64">round_duration</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:41"><decl pos:start="7:30" pos:end="7:41"><type pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:36">int64_t</name></type> <name pos:start="7:38" pos:end="7:41">size</name></decl></parameter>, <parameter pos:start="7:44" pos:end="7:54"><decl pos:start="7:44" pos:end="7:54"><type pos:start="7:44" pos:end="7:54"><name pos:start="7:44" pos:end="7:50">int64_t</name></type> <name pos:start="7:52" pos:end="7:54">pos</name></decl></parameter>, <comment type="line" pos:start="7:57" pos:end="7:98">//Used only if HLS_SINGLE_FILE flag is set</comment>

                             <parameter pos:start="9:30" pos:end="9:42"><decl pos:start="9:30" pos:end="9:42"><type pos:start="9:30" pos:end="9:42"><name pos:start="9:30" pos:end="9:33">char</name> <modifier pos:start="9:35" pos:end="9:35">*</modifier></type><name pos:start="9:36" pos:end="9:42">baseurl</name></decl></parameter>, <comment type="line" pos:start="9:45" pos:end="9:61">//Ignored if NULL</comment>

                             <parameter pos:start="11:30" pos:end="11:43"><decl pos:start="11:30" pos:end="11:43"><type pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:33">char</name> <modifier pos:start="11:35" pos:end="11:35">*</modifier></type><name pos:start="11:36" pos:end="11:43">filename</name></decl></parameter>, <parameter pos:start="11:46" pos:end="11:67"><decl pos:start="11:46" pos:end="11:67"><type pos:start="11:46" pos:end="11:67"><name pos:start="11:46" pos:end="11:51">double</name> <modifier pos:start="11:53" pos:end="11:53">*</modifier></type><name pos:start="11:54" pos:end="11:67">prog_date_time</name></decl></parameter>)</parameter_list> <block pos:start="11:70" pos:end="97:1">{<block_content pos:start="13:5" pos:end="95:13">

    <if_stmt pos:start="13:5" pos:end="15:31"><if pos:start="13:5" pos:end="15:31">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:12">out</name> <operator pos:start="13:14" pos:end="13:15">||</operator> <operator pos:start="13:17" pos:end="13:17">!</operator><name pos:start="13:18" pos:end="13:25">filename</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:31"><block_content pos:start="15:9" pos:end="15:31">

        <return pos:start="15:9" pos:end="15:31">return <expr pos:start="15:16" pos:end="15:30"><call pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:22">AVERROR</name><argument_list pos:start="15:23" pos:end="15:30">(<argument pos:start="15:24" pos:end="15:29"><expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22">insert_discont</name></expr>)</condition> <block pos:start="19:25" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:51">

        <expr_stmt pos:start="21:9" pos:end="21:51"><expr pos:start="21:9" pos:end="21:50"><call pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:19">avio_printf</name><argument_list pos:start="21:20" pos:end="21:50">(<argument pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">out</name></expr></argument>, <argument pos:start="21:26" pos:end="21:49"><expr pos:start="21:26" pos:end="21:49"><literal type="string" pos:start="21:26" pos:end="21:49">"#EXT-X-DISCONTINUITY\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:52"><if pos:start="25:5" pos:end="27:61">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:22">round_duration</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:61"><block_content pos:start="27:9" pos:end="27:61">

        <expr_stmt pos:start="27:9" pos:end="27:61"><expr pos:start="27:9" pos:end="27:60"><call pos:start="27:9" pos:end="27:60"><name pos:start="27:9" pos:end="27:19">avio_printf</name><argument_list pos:start="27:20" pos:end="27:60">(<argument pos:start="27:21" pos:end="27:23"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">out</name></expr></argument>, <argument pos:start="27:26" pos:end="27:41"><expr pos:start="27:26" pos:end="27:41"><literal type="string" pos:start="27:26" pos:end="27:41">"#EXTINF:%ld,\n"</literal></expr></argument>,  <argument pos:start="27:45" pos:end="27:59"><expr pos:start="27:45" pos:end="27:59"><call pos:start="27:45" pos:end="27:59"><name pos:start="27:45" pos:end="27:49">lrint</name><argument_list pos:start="27:50" pos:end="27:59">(<argument pos:start="27:51" pos:end="27:58"><expr pos:start="27:51" pos:end="27:58"><name pos:start="27:51" pos:end="27:58">duration</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="31:52">else<block type="pseudo" pos:start="31:9" pos:end="31:52"><block_content pos:start="31:9" pos:end="31:52">

        <expr_stmt pos:start="31:9" pos:end="31:52"><expr pos:start="31:9" pos:end="31:51"><call pos:start="31:9" pos:end="31:51"><name pos:start="31:9" pos:end="31:19">avio_printf</name><argument_list pos:start="31:20" pos:end="31:51">(<argument pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:23">out</name></expr></argument>, <argument pos:start="31:26" pos:end="31:40"><expr pos:start="31:26" pos:end="31:40"><literal type="string" pos:start="31:26" pos:end="31:40">"#EXTINF:%f,\n"</literal></expr></argument>, <argument pos:start="31:43" pos:end="31:50"><expr pos:start="31:43" pos:end="31:50"><name pos:start="31:43" pos:end="31:50">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:78"><if pos:start="33:5" pos:end="35:78">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:22">byterange_mode</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:78"><block_content pos:start="35:9" pos:end="35:78">

        <expr_stmt pos:start="35:9" pos:end="35:78"><expr pos:start="35:9" pos:end="35:77"><call pos:start="35:9" pos:end="35:77"><name pos:start="35:9" pos:end="35:19">avio_printf</name><argument_list pos:start="35:20" pos:end="35:77">(<argument pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">out</name></expr></argument>, <argument pos:start="35:26" pos:end="35:65"><expr pos:start="35:26" pos:end="35:65"><literal type="string" pos:start="35:26" pos:end="35:45">"#EXT-X-BYTERANGE:%"</literal><name pos:start="35:46" pos:end="35:51">PRId64</name><literal type="string" pos:start="35:52" pos:end="35:55">"@%"</literal><name pos:start="35:56" pos:end="35:61">PRId64</name><literal type="string" pos:start="35:62" pos:end="35:65">"\n"</literal></expr></argument>, <argument pos:start="35:68" pos:end="35:71"><expr pos:start="35:68" pos:end="35:71"><name pos:start="35:68" pos:end="35:71">size</name></expr></argument>, <argument pos:start="35:74" pos:end="35:76"><expr pos:start="35:74" pos:end="35:76"><name pos:start="35:74" pos:end="35:76">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="85:5"><if pos:start="39:5" pos:end="85:5">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:22">prog_date_time</name></expr>)</condition> <block pos:start="39:25" pos:end="85:5">{<block_content pos:start="41:9" pos:end="83:36">

        <decl_stmt pos:start="41:9" pos:end="41:29"><decl pos:start="41:9" pos:end="41:17"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:14">time_t</name></type> <name pos:start="41:16" pos:end="41:17">tt</name></decl>, <decl pos:start="41:20" pos:end="41:28"><type ref="prev" pos:start="41:9" pos:end="41:14"/><name pos:start="41:20" pos:end="41:28">wrongsecs</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:18"><decl pos:start="43:9" pos:end="43:17"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:17">milli</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:30"><decl pos:start="45:9" pos:end="45:21"><type pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:14">struct</name> <name pos:start="45:16" pos:end="45:17">tm</name></name> <modifier pos:start="45:19" pos:end="45:19">*</modifier></type><name pos:start="45:20" pos:end="45:21">tm</name></decl>, <decl pos:start="45:24" pos:end="45:29"><type ref="prev" pos:start="45:9" pos:end="45:19"/><name pos:start="45:24" pos:end="45:29">tmpbuf</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:34"><decl pos:start="47:9" pos:end="47:22"><type pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:12">char</name></type> <name pos:start="47:14" pos:end="47:22"><name pos:start="47:14" pos:end="47:17">buf0</name><index pos:start="47:18" pos:end="47:22">[<expr pos:start="47:19" pos:end="47:21"><literal type="number" pos:start="47:19" pos:end="47:21">128</literal></expr>]</index></name></decl>, <decl pos:start="47:25" pos:end="47:33"><type ref="prev" pos:start="47:9" pos:end="47:12"/><name pos:start="47:25" pos:end="47:33"><name pos:start="47:25" pos:end="47:28">buf1</name><index pos:start="47:29" pos:end="47:33">[<expr pos:start="47:30" pos:end="47:32"><literal type="number" pos:start="47:30" pos:end="47:32">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:10">tt</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:21">int64_t</name><operator pos:start="49:22" pos:end="49:22">)</operator><operator pos:start="49:23" pos:end="49:23">*</operator><name pos:start="49:24" pos:end="49:37">prog_date_time</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:68"><expr pos:start="51:9" pos:end="51:67"><name pos:start="51:9" pos:end="51:13">milli</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:67"><name pos:start="51:17" pos:end="51:23">av_clip</name><argument_list pos:start="51:24" pos:end="51:67">(<argument pos:start="51:25" pos:end="51:58"><expr pos:start="51:25" pos:end="51:58"><call pos:start="51:25" pos:end="51:58"><name pos:start="51:25" pos:end="51:29">lrint</name><argument_list pos:start="51:30" pos:end="51:58">(<argument pos:start="51:31" pos:end="51:57"><expr pos:start="51:31" pos:end="51:57"><literal type="number" pos:start="51:31" pos:end="51:34">1000</literal><operator pos:start="51:35" pos:end="51:35">*</operator><operator pos:start="51:36" pos:end="51:36">(</operator><operator pos:start="51:37" pos:end="51:37">*</operator><name pos:start="51:38" pos:end="51:51">prog_date_time</name> <operator pos:start="51:53" pos:end="51:53">-</operator> <name pos:start="51:55" pos:end="51:56">tt</name><operator pos:start="51:57" pos:end="51:57">)</operator></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:61" pos:end="51:61"><expr pos:start="51:61" pos:end="51:61"><literal type="number" pos:start="51:61" pos:end="51:61">0</literal></expr></argument>, <argument pos:start="51:64" pos:end="51:66"><expr pos:start="51:64" pos:end="51:66"><literal type="number" pos:start="51:64" pos:end="51:66">999</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:10">tm</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:38"><name pos:start="53:14" pos:end="53:24">localtime_r</name><argument_list pos:start="53:25" pos:end="53:38">(<argument pos:start="53:26" pos:end="53:28"><expr pos:start="53:26" pos:end="53:28"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:28">tt</name></expr></argument>, <argument pos:start="53:31" pos:end="53:37"><expr pos:start="53:31" pos:end="53:37"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:37">tmpbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:62"><expr pos:start="55:9" pos:end="55:61"><call pos:start="55:9" pos:end="55:61"><name pos:start="55:9" pos:end="55:16">strftime</name><argument_list pos:start="55:17" pos:end="55:61">(<argument pos:start="55:18" pos:end="55:21"><expr pos:start="55:18" pos:end="55:21"><name pos:start="55:18" pos:end="55:21">buf0</name></expr></argument>, <argument pos:start="55:24" pos:end="55:35"><expr pos:start="55:24" pos:end="55:35"><sizeof pos:start="55:24" pos:end="55:35">sizeof<argument_list pos:start="55:30" pos:end="55:35">(<argument pos:start="55:31" pos:end="55:34"><expr pos:start="55:31" pos:end="55:34"><name pos:start="55:31" pos:end="55:34">buf0</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:38" pos:end="55:56"><expr pos:start="55:38" pos:end="55:56"><literal type="string" pos:start="55:38" pos:end="55:56">"%Y-%m-%dT%H:%M:%S"</literal></expr></argument>, <argument pos:start="55:59" pos:end="55:60"><expr pos:start="55:59" pos:end="55:60"><name pos:start="55:59" pos:end="55:60">tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="79:9"><if pos:start="57:9" pos:end="79:9">if <condition pos:start="57:12" pos:end="57:81">(<expr pos:start="57:13" pos:end="57:80"><operator pos:start="57:13" pos:end="57:13">!</operator><call pos:start="57:14" pos:end="57:51"><name pos:start="57:14" pos:end="57:21">strftime</name><argument_list pos:start="57:22" pos:end="57:51">(<argument pos:start="57:23" pos:end="57:26"><expr pos:start="57:23" pos:end="57:26"><name pos:start="57:23" pos:end="57:26">buf1</name></expr></argument>, <argument pos:start="57:29" pos:end="57:40"><expr pos:start="57:29" pos:end="57:40"><sizeof pos:start="57:29" pos:end="57:40">sizeof<argument_list pos:start="57:35" pos:end="57:40">(<argument pos:start="57:36" pos:end="57:39"><expr pos:start="57:36" pos:end="57:39"><name pos:start="57:36" pos:end="57:39">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="57:43" pos:end="57:46"><expr pos:start="57:43" pos:end="57:46"><literal type="string" pos:start="57:43" pos:end="57:46">"%z"</literal></expr></argument>, <argument pos:start="57:49" pos:end="57:50"><expr pos:start="57:49" pos:end="57:50"><name pos:start="57:49" pos:end="57:50">tm</name></expr></argument>)</argument_list></call> <operator pos:start="57:53" pos:end="57:54">||</operator> <name pos:start="57:56" pos:end="57:62"><name pos:start="57:56" pos:end="57:59">buf1</name><index pos:start="57:60" pos:end="57:62">[<expr pos:start="57:61" pos:end="57:61"><literal type="number" pos:start="57:61" pos:end="57:61">1</literal></expr>]</index></name><operator pos:start="57:63" pos:end="57:63">&lt;</operator><literal type="char" pos:start="57:64" pos:end="57:66">'0'</literal> <operator pos:start="57:68" pos:end="57:69">||</operator><name pos:start="57:70" pos:end="57:76"><name pos:start="57:70" pos:end="57:73">buf1</name><index pos:start="57:74" pos:end="57:76">[<expr pos:start="57:75" pos:end="57:75"><literal type="number" pos:start="57:75" pos:end="57:75">1</literal></expr>]</index></name><operator pos:start="57:77" pos:end="57:77">&gt;</operator><literal type="char" pos:start="57:78" pos:end="57:80">'2'</literal></expr>)</condition> <block pos:start="57:83" pos:end="79:9">{<block_content pos:start="59:13" pos:end="77:34">

            <decl_stmt pos:start="59:13" pos:end="59:43"><decl pos:start="59:13" pos:end="59:22"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:22">tz_min</name></decl>, <decl pos:start="59:25" pos:end="59:42"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:25" pos:end="59:27">dst</name> <init pos:start="59:29" pos:end="59:42">= <expr pos:start="59:31" pos:end="59:42"><name pos:start="59:31" pos:end="59:42"><name pos:start="59:31" pos:end="59:32">tm</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:42">tm_isdst</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:40"><expr pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:14">tm</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:39"><name pos:start="61:18" pos:end="61:25">gmtime_r</name><argument_list pos:start="61:26" pos:end="61:39">(<argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:29">tt</name></expr></argument>, <argument pos:start="61:32" pos:end="61:38"><expr pos:start="61:32" pos:end="61:38"><operator pos:start="61:32" pos:end="61:32">&amp;</operator><name pos:start="61:33" pos:end="61:38">tmpbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:31"><expr pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:14">tm</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:24">tm_isdst</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:30">dst</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:35"><expr pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:21">wrongsecs</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <call pos:start="65:25" pos:end="65:34"><name pos:start="65:25" pos:end="65:30">mktime</name><argument_list pos:start="65:31" pos:end="65:34">(<argument pos:start="65:32" pos:end="65:33"><expr pos:start="65:32" pos:end="65:33"><name pos:start="65:32" pos:end="65:33">tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:55"><expr pos:start="67:13" pos:end="67:54"><name pos:start="67:13" pos:end="67:18">tz_min</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <operator pos:start="67:22" pos:end="67:22">(</operator><call pos:start="67:23" pos:end="67:43"><name pos:start="67:23" pos:end="67:27">FFABS</name><argument_list pos:start="67:28" pos:end="67:43">(<argument pos:start="67:29" pos:end="67:42"><expr pos:start="67:29" pos:end="67:42"><name pos:start="67:29" pos:end="67:37">wrongsecs</name> <operator pos:start="67:39" pos:end="67:39">-</operator> <name pos:start="67:41" pos:end="67:42">tt</name></expr></argument>)</argument_list></call> <operator pos:start="67:45" pos:end="67:45">+</operator> <literal type="number" pos:start="67:47" pos:end="67:48">30</literal><operator pos:start="67:49" pos:end="67:49">)</operator> <operator pos:start="67:51" pos:end="67:51">/</operator> <literal type="number" pos:start="67:53" pos:end="67:54">60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="77:34"><expr pos:start="69:13" pos:end="77:33"><call pos:start="69:13" pos:end="77:33"><name pos:start="69:13" pos:end="69:20">snprintf</name><argument_list pos:start="69:21" pos:end="77:33">(<argument pos:start="69:22" pos:end="69:25"><expr pos:start="69:22" pos:end="69:25"><name pos:start="69:22" pos:end="69:25">buf1</name></expr></argument>, <argument pos:start="69:28" pos:end="69:39"><expr pos:start="69:28" pos:end="69:39"><sizeof pos:start="69:28" pos:end="69:39">sizeof<argument_list pos:start="69:34" pos:end="69:39">(<argument pos:start="69:35" pos:end="69:38"><expr pos:start="69:35" pos:end="69:38"><name pos:start="69:35" pos:end="69:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="71:22" pos:end="71:33"><expr pos:start="71:22" pos:end="71:33"><literal type="string" pos:start="71:22" pos:end="71:33">"%c%02d%02d"</literal></expr></argument>,

                     <argument pos:start="73:22" pos:end="73:48"><expr pos:start="73:22" pos:end="73:48"><ternary pos:start="73:22" pos:end="73:48"><condition pos:start="73:22" pos:end="73:38"><expr pos:start="73:22" pos:end="73:36"><name pos:start="73:22" pos:end="73:30">wrongsecs</name> <operator pos:start="73:32" pos:end="73:33">&lt;=</operator> <name pos:start="73:35" pos:end="73:36">tt</name></expr> ?</condition><then pos:start="73:40" pos:end="73:42"> <expr pos:start="73:40" pos:end="73:42"><literal type="char" pos:start="73:40" pos:end="73:42">'+'</literal></expr> </then><else pos:start="73:44" pos:end="73:48">: <expr pos:start="73:46" pos:end="73:48"><literal type="char" pos:start="73:46" pos:end="73:48">'-'</literal></expr></else></ternary></expr></argument>,

                     <argument pos:start="75:22" pos:end="75:32"><expr pos:start="75:22" pos:end="75:32"><name pos:start="75:22" pos:end="75:27">tz_min</name> <operator pos:start="75:29" pos:end="75:29">/</operator> <literal type="number" pos:start="75:31" pos:end="75:32">60</literal></expr></argument>,

                     <argument pos:start="77:22" pos:end="77:32"><expr pos:start="77:22" pos:end="77:32"><name pos:start="77:22" pos:end="77:27">tz_min</name> <operator pos:start="77:29" pos:end="77:29">%</operator> <literal type="number" pos:start="77:31" pos:end="77:32">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:84"><expr pos:start="81:9" pos:end="81:83"><call pos:start="81:9" pos:end="81:83"><name pos:start="81:9" pos:end="81:19">avio_printf</name><argument_list pos:start="81:20" pos:end="81:83">(<argument pos:start="81:21" pos:end="81:23"><expr pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">out</name></expr></argument>, <argument pos:start="81:26" pos:end="81:63"><expr pos:start="81:26" pos:end="81:63"><literal type="string" pos:start="81:26" pos:end="81:63">"#EXT-X-PROGRAM-DATE-TIME:%s.%03d%s\n"</literal></expr></argument>, <argument pos:start="81:66" pos:end="81:69"><expr pos:start="81:66" pos:end="81:69"><name pos:start="81:66" pos:end="81:69">buf0</name></expr></argument>, <argument pos:start="81:72" pos:end="81:76"><expr pos:start="81:72" pos:end="81:76"><name pos:start="81:72" pos:end="81:76">milli</name></expr></argument>, <argument pos:start="81:79" pos:end="81:82"><expr pos:start="81:79" pos:end="81:82"><name pos:start="81:79" pos:end="81:82">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:36"><expr pos:start="83:9" pos:end="83:35"><operator pos:start="83:9" pos:end="83:9">*</operator><name pos:start="83:10" pos:end="83:23">prog_date_time</name> <operator pos:start="83:25" pos:end="83:26">+=</operator> <name pos:start="83:28" pos:end="83:35">duration</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="89:40"><if pos:start="87:5" pos:end="89:40">if <condition pos:start="87:8" pos:end="87:16">(<expr pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:15">baseurl</name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:40"><block_content pos:start="89:9" pos:end="89:40">

        <expr_stmt pos:start="89:9" pos:end="89:40"><expr pos:start="89:9" pos:end="89:39"><call pos:start="89:9" pos:end="89:39"><name pos:start="89:9" pos:end="89:19">avio_printf</name><argument_list pos:start="89:20" pos:end="89:39">(<argument pos:start="89:21" pos:end="89:23"><expr pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">out</name></expr></argument>, <argument pos:start="89:26" pos:end="89:29"><expr pos:start="89:26" pos:end="89:29"><literal type="string" pos:start="89:26" pos:end="89:29">"%s"</literal></expr></argument>, <argument pos:start="89:32" pos:end="89:38"><expr pos:start="89:32" pos:end="89:38"><name pos:start="89:32" pos:end="89:38">baseurl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><call pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:15">avio_printf</name><argument_list pos:start="91:16" pos:end="91:38">(<argument pos:start="91:17" pos:end="91:19"><expr pos:start="91:17" pos:end="91:19"><name pos:start="91:17" pos:end="91:19">out</name></expr></argument>, <argument pos:start="91:22" pos:end="91:27"><expr pos:start="91:22" pos:end="91:27"><literal type="string" pos:start="91:22" pos:end="91:27">"%s\n"</literal></expr></argument>, <argument pos:start="91:30" pos:end="91:37"><expr pos:start="91:30" pos:end="91:37"><name pos:start="91:30" pos:end="91:37">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
