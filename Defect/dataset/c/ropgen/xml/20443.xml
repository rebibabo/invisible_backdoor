<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20443.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">rv20_decode_picture_header</name><parameter_list pos:start="1:38" pos:end="1:56">(<parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">MpegEncContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:45">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">seq</name></decl>, <decl pos:start="5:14" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:19">mb_pos</name></decl>, <decl pos:start="5:22" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:22">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:27"><expr pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:5">i</name><operator pos:start="9:6" pos:end="9:6">=</operator> <call pos:start="9:8" pos:end="9:26"><name pos:start="9:8" pos:end="9:15">get_bits</name><argument_list pos:start="9:16" pos:end="9:26">(<argument pos:start="9:17" pos:end="9:22"><expr pos:start="9:17" pos:end="9:22"><operator pos:start="9:17" pos:end="9:17">&amp;</operator><name pos:start="9:18" pos:end="9:22"><name pos:start="9:18" pos:end="9:18">s</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:22">gb</name></name></expr></argument>, <argument pos:start="9:25" pos:end="9:25"><expr pos:start="9:25" pos:end="9:25"><literal type="number" pos:start="9:25" pos:end="9:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="11:5" pos:end="27:5">switch<condition pos:start="11:11" pos:end="11:13">(<expr pos:start="11:12" pos:end="11:12"><name pos:start="11:12" pos:end="11:12">i</name></expr>)</condition><block pos:start="11:14" pos:end="27:5">{<block_content pos:start="13:5" pos:end="25:18">

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">0</literal></expr>:</case> <expr_stmt pos:start="13:13" pos:end="13:33"><expr pos:start="13:13" pos:end="13:32"><name pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:24">pict_type</name></name><operator pos:start="13:25" pos:end="13:25">=</operator> <name pos:start="13:27" pos:end="13:32">I_TYPE</name></expr>;</expr_stmt> <break pos:start="13:35" pos:end="13:40">break;</break>

    <case pos:start="15:5" pos:end="15:11">case <expr pos:start="15:10" pos:end="15:10"><literal type="number" pos:start="15:10" pos:end="15:10">1</literal></expr>:</case> <expr_stmt pos:start="15:13" pos:end="15:33"><expr pos:start="15:13" pos:end="15:32"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:24">pict_type</name></name><operator pos:start="15:25" pos:end="15:25">=</operator> <name pos:start="15:27" pos:end="15:32">I_TYPE</name></expr>;</expr_stmt> <break pos:start="15:35" pos:end="15:40">break;</break> <comment type="line" pos:start="15:42" pos:end="15:50">//hmm ...</comment>

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">2</literal></expr>:</case> <expr_stmt pos:start="17:13" pos:end="17:33"><expr pos:start="17:13" pos:end="17:32"><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:24">pict_type</name></name><operator pos:start="17:25" pos:end="17:25">=</operator> <name pos:start="17:27" pos:end="17:32">P_TYPE</name></expr>;</expr_stmt> <break pos:start="17:35" pos:end="17:40">break;</break>

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">3</literal></expr>:</case> <expr_stmt pos:start="19:13" pos:end="19:33"><expr pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:24">pict_type</name></name><operator pos:start="19:25" pos:end="19:25">=</operator> <name pos:start="19:27" pos:end="19:32">B_TYPE</name></expr>;</expr_stmt> <break pos:start="19:35" pos:end="19:40">break;</break>

    <default pos:start="21:5" pos:end="21:12">default:</default> 

        <expr_stmt pos:start="23:9" pos:end="23:63"><expr pos:start="23:9" pos:end="23:62"><call pos:start="23:9" pos:end="23:62"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:62">(<argument pos:start="23:16" pos:end="23:23"><expr pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:23">avctx</name></name></expr></argument>, <argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:40" pos:end="23:61"><expr pos:start="23:40" pos:end="23:61"><literal type="string" pos:start="23:40" pos:end="23:61">"unknown frame type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><call pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:16">get_bits</name><argument_list pos:start="31:17" pos:end="31:27">(<argument pos:start="31:18" pos:end="31:23"><expr pos:start="31:18" pos:end="31:23"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:23"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:23">gb</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="31:29" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:60"><expr pos:start="33:9" pos:end="33:59"><call pos:start="33:9" pos:end="33:59"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:59">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:40" pos:end="33:58"><expr pos:start="33:40" pos:end="33:58"><literal type="string" pos:start="33:40" pos:end="33:58">"unknown bit set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:13">qscale</name></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:35"><name pos:start="41:17" pos:end="41:24">get_bits</name><argument_list pos:start="41:25" pos:end="41:35">(<argument pos:start="41:26" pos:end="41:31"><expr pos:start="41:26" pos:end="41:31"><operator pos:start="41:26" pos:end="41:26">&amp;</operator><name pos:start="41:27" pos:end="41:31"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:31">gb</name></name></expr></argument>, <argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><literal type="number" pos:start="41:34" pos:end="41:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if<condition pos:start="43:7" pos:end="43:20">(<expr pos:start="43:8" pos:end="43:19"><name pos:start="43:8" pos:end="43:16"><name pos:start="43:8" pos:end="43:8">s</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:16">qscale</name></name><operator pos:start="43:17" pos:end="43:18">==</operator><literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>)</condition><block pos:start="43:21" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:60"><expr pos:start="45:9" pos:end="45:59"><call pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:59">(<argument pos:start="45:16" pos:end="45:23"><expr pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:23">avctx</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:37"><expr pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:40" pos:end="45:58"><expr pos:start="45:40" pos:end="45:58"><literal type="string" pos:start="45:40" pos:end="45:58">"error, qscale:0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="59:33"><if pos:start="53:5" pos:end="55:34">if<condition pos:start="53:7" pos:end="53:38">(<expr pos:start="53:8" pos:end="53:37"><name pos:start="53:8" pos:end="53:23"><name pos:start="53:8" pos:end="53:8">s</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:15">avctx</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:23">sub_id</name></name> <operator pos:start="53:25" pos:end="53:26">==</operator> <literal type="number" pos:start="53:28" pos:end="53:37">0x20200002</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:34"><block_content pos:start="55:9" pos:end="55:34">

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:11">seq</name><operator pos:start="55:12" pos:end="55:12">=</operator> <call pos:start="55:14" pos:end="55:33"><name pos:start="55:14" pos:end="55:21">get_bits</name><argument_list pos:start="55:22" pos:end="55:33">(<argument pos:start="55:23" pos:end="55:28"><expr pos:start="55:23" pos:end="55:28"><operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:28">gb</name></name></expr></argument>, <argument pos:start="55:31" pos:end="55:32"><expr pos:start="55:31" pos:end="55:32"><literal type="number" pos:start="55:31" pos:end="55:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="57:5" pos:end="59:33">else<block type="pseudo" pos:start="59:9" pos:end="59:33"><block_content pos:start="59:9" pos:end="59:33">

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:11">seq</name><operator pos:start="59:12" pos:end="59:12">=</operator> <call pos:start="59:14" pos:end="59:32"><name pos:start="59:14" pos:end="59:21">get_bits</name><argument_list pos:start="59:22" pos:end="59:32">(<argument pos:start="59:23" pos:end="59:28"><expr pos:start="59:23" pos:end="59:28"><operator pos:start="59:23" pos:end="59:23">&amp;</operator><name pos:start="59:24" pos:end="59:28"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:28">gb</name></name></expr></argument>, <argument pos:start="59:31" pos:end="59:31"><expr pos:start="59:31" pos:end="59:31"><literal type="number" pos:start="59:31" pos:end="59:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="63:5" pos:end="67:5">for<control pos:start="63:8" pos:end="63:22">(<init pos:start="63:9" pos:end="63:12"><expr pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:9">i</name><operator pos:start="63:10" pos:end="63:10">=</operator><literal type="number" pos:start="63:11" pos:end="63:11">0</literal></expr>;</init> <condition pos:start="63:14" pos:end="63:17"><expr pos:start="63:14" pos:end="63:16"><name pos:start="63:14" pos:end="63:14">i</name><operator pos:start="63:15" pos:end="63:15">&lt;</operator><literal type="number" pos:start="63:16" pos:end="63:16">6</literal></expr>;</condition> <incr pos:start="63:19" pos:end="63:21"><expr pos:start="63:19" pos:end="63:21"><name pos:start="63:19" pos:end="63:19">i</name><operator pos:start="63:20" pos:end="63:21">++</operator></expr></incr>)</control><block pos:start="63:23" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:59">

        <if_stmt pos:start="65:9" pos:end="65:59"><if pos:start="65:9" pos:end="65:59">if<condition pos:start="65:11" pos:end="65:52">(<expr pos:start="65:12" pos:end="65:51"><name pos:start="65:12" pos:end="65:22"><name pos:start="65:12" pos:end="65:12">s</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:22">mb_width</name></name><operator pos:start="65:23" pos:end="65:23">*</operator><name pos:start="65:24" pos:end="65:35"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:35">mb_height</name></name> <operator pos:start="65:37" pos:end="65:37">&lt;</operator> <name pos:start="65:39" pos:end="65:51"><name pos:start="65:39" pos:end="65:48">ff_mba_max</name><index pos:start="65:49" pos:end="65:51">[<expr pos:start="65:50" pos:end="65:50"><name pos:start="65:50" pos:end="65:50">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="65:54" pos:end="65:59"><block_content pos:start="65:54" pos:end="65:59"> <break pos:start="65:54" pos:end="65:59">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="69:5" pos:end="69:47"><expr pos:start="69:5" pos:end="69:46"><name pos:start="69:5" pos:end="69:10">mb_pos</name><operator pos:start="69:11" pos:end="69:11">=</operator> <call pos:start="69:13" pos:end="69:46"><name pos:start="69:13" pos:end="69:20">get_bits</name><argument_list pos:start="69:21" pos:end="69:46">(<argument pos:start="69:22" pos:end="69:27"><expr pos:start="69:22" pos:end="69:27"><operator pos:start="69:22" pos:end="69:22">&amp;</operator><name pos:start="69:23" pos:end="69:27"><name pos:start="69:23" pos:end="69:23">s</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:27">gb</name></name></expr></argument>, <argument pos:start="69:30" pos:end="69:45"><expr pos:start="69:30" pos:end="69:45"><name pos:start="69:30" pos:end="69:45"><name pos:start="69:30" pos:end="69:42">ff_mba_length</name><index pos:start="69:43" pos:end="69:45">[<expr pos:start="69:44" pos:end="69:44"><name pos:start="69:44" pos:end="69:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:34"><expr pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:11"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:11">mb_x</name></name><operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:19">mb_pos</name> <operator pos:start="71:21" pos:end="71:21">%</operator> <name pos:start="71:23" pos:end="71:33"><name pos:start="71:23" pos:end="71:23">s</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:33">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:34"><expr pos:start="73:5" pos:end="73:33"><name pos:start="73:5" pos:end="73:11"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:11">mb_y</name></name><operator pos:start="73:12" pos:end="73:12">=</operator> <name pos:start="73:14" pos:end="73:19">mb_pos</name> <operator pos:start="73:21" pos:end="73:21">/</operator> <name pos:start="73:23" pos:end="73:33"><name pos:start="73:23" pos:end="73:23">s</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:33">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:38"><expr pos:start="75:5" pos:end="75:37"><name pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:18">no_rounding</name></name><operator pos:start="75:19" pos:end="75:19">=</operator> <call pos:start="75:21" pos:end="75:37"><name pos:start="75:21" pos:end="75:29">get_bits1</name><argument_list pos:start="75:30" pos:end="75:37">(<argument pos:start="75:31" pos:end="75:36"><expr pos:start="75:31" pos:end="75:36"><operator pos:start="75:31" pos:end="75:31">&amp;</operator><name pos:start="75:32" pos:end="75:36"><name pos:start="75:32" pos:end="75:32">s</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="79:5" pos:end="79:18"><expr pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:13"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:13">f_code</name></name> <operator pos:start="79:15" pos:end="79:15">=</operator> <literal type="number" pos:start="79:17" pos:end="79:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:22">unrestricted_mv</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:40"><expr pos:start="83:5" pos:end="83:39"><name pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:15">h263_aic</name></name><operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:29"><name pos:start="83:18" pos:end="83:18">s</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:29">pict_type</name></name> <operator pos:start="83:31" pos:end="83:32">==</operator> <name pos:start="83:34" pos:end="83:39">I_TYPE</name></expr>;</expr_stmt>

<comment type="line" pos:start="85:1" pos:end="85:25">//    s-&gt;alt_inter_vlc=1;</comment>

<comment type="line" pos:start="87:1" pos:end="87:16">//    s-&gt;obmc=1;</comment>

<comment type="line" pos:start="89:1" pos:end="89:19">//    s-&gt;umvplus=1;</comment>

<comment type="line" pos:start="91:1" pos:end="91:26">//    s-&gt;modified_quant=1;</comment>

    

    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if<condition pos:start="95:7" pos:end="95:44">(<expr pos:start="95:8" pos:end="95:43"><name pos:start="95:8" pos:end="95:22"><name pos:start="95:8" pos:end="95:8">s</name><operator pos:start="95:9" pos:end="95:10">-&gt;</operator><name pos:start="95:11" pos:end="95:15">avctx</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:22">debug</name></name> <operator pos:start="95:24" pos:end="95:24">&amp;</operator> <name pos:start="95:26" pos:end="95:43">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="95:45" pos:end="101:5">{<block_content pos:start="97:13" pos:end="99:83">

            <expr_stmt pos:start="97:13" pos:end="99:83"><expr pos:start="97:13" pos:end="99:82"><call pos:start="97:13" pos:end="99:82"><name pos:start="97:13" pos:end="97:18">av_log</name><argument_list pos:start="97:19" pos:end="99:82">(<argument pos:start="97:20" pos:end="97:27"><expr pos:start="97:20" pos:end="97:27"><name pos:start="97:20" pos:end="97:27"><name pos:start="97:20" pos:end="97:20">s</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:27">avctx</name></name></expr></argument>, <argument pos:start="97:30" pos:end="97:40"><expr pos:start="97:30" pos:end="97:40"><name pos:start="97:30" pos:end="97:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="97:43" pos:end="97:91"><expr pos:start="97:43" pos:end="97:91"><literal type="string" pos:start="97:43" pos:end="97:91">"num:%5d x:%2d y:%2d type:%d qscale:%2d rnd:%d\n"</literal></expr></argument>, 

                   <argument pos:start="99:20" pos:end="99:22"><expr pos:start="99:20" pos:end="99:22"><name pos:start="99:20" pos:end="99:22">seq</name></expr></argument>, <argument pos:start="99:25" pos:end="99:31"><expr pos:start="99:25" pos:end="99:31"><name pos:start="99:25" pos:end="99:31"><name pos:start="99:25" pos:end="99:25">s</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:31">mb_x</name></name></expr></argument>, <argument pos:start="99:34" pos:end="99:40"><expr pos:start="99:34" pos:end="99:40"><name pos:start="99:34" pos:end="99:40"><name pos:start="99:34" pos:end="99:34">s</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:40">mb_y</name></name></expr></argument>, <argument pos:start="99:43" pos:end="99:54"><expr pos:start="99:43" pos:end="99:54"><name pos:start="99:43" pos:end="99:54"><name pos:start="99:43" pos:end="99:43">s</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:54">pict_type</name></name></expr></argument>, <argument pos:start="99:57" pos:end="99:65"><expr pos:start="99:57" pos:end="99:65"><name pos:start="99:57" pos:end="99:65"><name pos:start="99:57" pos:end="99:57">s</name><operator pos:start="99:58" pos:end="99:59">-&gt;</operator><name pos:start="99:60" pos:end="99:65">qscale</name></name></expr></argument>, <argument pos:start="99:68" pos:end="99:81"><expr pos:start="99:68" pos:end="99:81"><name pos:start="99:68" pos:end="99:81"><name pos:start="99:68" pos:end="99:68">s</name><operator pos:start="99:69" pos:end="99:70">-&gt;</operator><name pos:start="99:71" pos:end="99:81">no_rounding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="111:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:31">(<expr pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:20">pict_type</name></name> <operator pos:start="105:22" pos:end="105:23">==</operator> <name pos:start="105:25" pos:end="105:30">B_TYPE</name></expr>)</condition><block pos:start="105:32" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:18">

        <expr_stmt pos:start="107:9" pos:end="107:66"><expr pos:start="107:9" pos:end="107:65"><call pos:start="107:9" pos:end="107:65"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="107:65">(<argument pos:start="107:16" pos:end="107:23"><expr pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:16">s</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:23">avctx</name></name></expr></argument>, <argument pos:start="107:26" pos:end="107:37"><expr pos:start="107:26" pos:end="107:37"><name pos:start="107:26" pos:end="107:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:40" pos:end="107:64"><expr pos:start="107:40" pos:end="107:64"><literal type="string" pos:start="107:40" pos:end="107:64">"b frame not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:18">return <expr pos:start="109:16" pos:end="109:17"><operator pos:start="109:16" pos:end="109:16">-</operator><literal type="number" pos:start="109:17" pos:end="109:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="115:5" pos:end="115:45">return <expr pos:start="115:12" pos:end="115:44"><name pos:start="115:12" pos:end="115:22"><name pos:start="115:12" pos:end="115:12">s</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:22">mb_width</name></name><operator pos:start="115:23" pos:end="115:23">*</operator><name pos:start="115:24" pos:end="115:35"><name pos:start="115:24" pos:end="115:24">s</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:35">mb_height</name></name> <operator pos:start="115:37" pos:end="115:37">-</operator> <name pos:start="115:39" pos:end="115:44">mb_pos</name></expr>;</return>

</block_content>}</block></function>
</unit>
