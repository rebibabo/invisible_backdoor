<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20825.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mpeg4video_probe</name><parameter_list pos:start="1:28" pos:end="1:54">(<parameter pos:start="1:29" pos:end="1:53"><decl pos:start="1:29" pos:end="1:53"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:39">AVProbeData</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:53">probe_packet</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:24">temp_buffer</name><init pos:start="5:25" pos:end="5:28">= <expr pos:start="5:27" pos:end="5:28"><operator pos:start="5:27" pos:end="5:27">-</operator><literal type="number" pos:start="5:28" pos:end="5:28">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">VO</name><init pos:start="7:11" pos:end="7:12">=<expr pos:start="7:12" pos:end="7:12"><literal type="number" pos:start="7:12" pos:end="7:12">0</literal></expr></init></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">VOL</name><init pos:start="7:18" pos:end="7:19">=<expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>, <decl pos:start="7:22" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:24">VOP</name> <init pos:start="7:26" pos:end="7:28">= <expr pos:start="7:28" pos:end="7:28"><literal type="number" pos:start="7:28" pos:end="7:28">0</literal></expr></init></decl>, <decl pos:start="7:31" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:34">VISO</name> <init pos:start="7:36" pos:end="7:38">= <expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr></init></decl>, <decl pos:start="7:41" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:43">res</name><init pos:start="7:44" pos:end="7:45">=<expr pos:start="7:45" pos:end="7:45"><literal type="number" pos:start="7:45" pos:end="7:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="35:5">for<control pos:start="13:8" pos:end="13:43">(<init pos:start="13:9" pos:end="13:12"><expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:9">i</name><operator pos:start="13:10" pos:end="13:10">=</operator><literal type="number" pos:start="13:11" pos:end="13:11">0</literal></expr>;</init> <condition pos:start="13:14" pos:end="13:38"><expr pos:start="13:14" pos:end="13:37"><name pos:start="13:14" pos:end="13:14">i</name><operator pos:start="13:15" pos:end="13:15">&lt;</operator><name pos:start="13:16" pos:end="13:37"><name pos:start="13:16" pos:end="13:27">probe_packet</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:37">buf_size</name></name></expr>;</condition> <incr pos:start="13:40" pos:end="13:42"><expr pos:start="13:40" pos:end="13:42"><name pos:start="13:40" pos:end="13:40">i</name><operator pos:start="13:41" pos:end="13:42">++</operator></expr></incr>)</control><block pos:start="13:44" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:73">

        <expr_stmt pos:start="15:9" pos:end="15:62"><expr pos:start="15:9" pos:end="15:61"><name pos:start="15:9" pos:end="15:19">temp_buffer</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <operator pos:start="15:23" pos:end="15:23">(</operator><name pos:start="15:24" pos:end="15:34">temp_buffer</name><operator pos:start="15:35" pos:end="15:36">&lt;&lt;</operator><literal type="number" pos:start="15:37" pos:end="15:37">8</literal><operator pos:start="15:38" pos:end="15:38">)</operator> <operator pos:start="15:40" pos:end="15:40">+</operator> <name pos:start="15:42" pos:end="15:61"><name pos:start="15:42" pos:end="15:53">probe_packet</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:58">buf</name><index pos:start="15:59" pos:end="15:61">[<expr pos:start="15:60" pos:end="15:60"><name pos:start="15:60" pos:end="15:60">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:21"><if pos:start="17:9" pos:end="19:21">if <condition pos:start="17:12" pos:end="17:48">(<expr pos:start="17:13" pos:end="17:47"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:24">temp_buffer</name> <operator pos:start="17:26" pos:end="17:26">&amp;</operator> <literal type="number" pos:start="17:28" pos:end="17:37">0xffffff00</literal><operator pos:start="17:38" pos:end="17:38">)</operator> <operator pos:start="17:40" pos:end="17:41">!=</operator> <literal type="number" pos:start="17:43" pos:end="17:47">0x100</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:21"><block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="23:9" pos:end="33:73"><if pos:start="23:9" pos:end="23:73">if <condition pos:start="23:12" pos:end="23:42">(<expr pos:start="23:13" pos:end="23:41"><name pos:start="23:13" pos:end="23:23">temp_buffer</name> <operator pos:start="23:25" pos:end="23:26">==</operator> <name pos:start="23:28" pos:end="23:41">VOP_START_CODE</name></expr>)</condition><block type="pseudo" pos:start="23:68" pos:end="23:73"><block_content pos:start="23:68" pos:end="23:73">                         <expr_stmt pos:start="23:68" pos:end="23:73"><expr pos:start="23:68" pos:end="23:72"><name pos:start="23:68" pos:end="23:70">VOP</name><operator pos:start="23:71" pos:end="23:72">++</operator></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="25:9" pos:end="25:74">else if <condition pos:start="25:17" pos:end="25:57">(<expr pos:start="25:18" pos:end="25:56"><name pos:start="25:18" pos:end="25:28">temp_buffer</name> <operator pos:start="25:30" pos:end="25:31">==</operator> <name pos:start="25:33" pos:end="25:56">VISUAL_OBJECT_START_CODE</name></expr>)</condition><block type="pseudo" pos:start="25:68" pos:end="25:74"><block_content pos:start="25:68" pos:end="25:74">          <expr_stmt pos:start="25:68" pos:end="25:74"><expr pos:start="25:68" pos:end="25:73"><name pos:start="25:68" pos:end="25:71">VISO</name><operator pos:start="25:72" pos:end="25:73">++</operator></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="27:9" pos:end="27:72">else if <condition pos:start="27:17" pos:end="27:37">(<expr pos:start="27:18" pos:end="27:36"><name pos:start="27:18" pos:end="27:28">temp_buffer</name> <operator pos:start="27:30" pos:end="27:30">&lt;</operator> <literal type="number" pos:start="27:32" pos:end="27:36">0x120</literal></expr>)</condition><block type="pseudo" pos:start="27:68" pos:end="27:72"><block_content pos:start="27:68" pos:end="27:72">                              <expr_stmt pos:start="27:68" pos:end="27:72"><expr pos:start="27:68" pos:end="27:71"><name pos:start="27:68" pos:end="27:69">VO</name><operator pos:start="27:70" pos:end="27:71">++</operator></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="29:9" pos:end="29:73">else if <condition pos:start="29:17" pos:end="29:37">(<expr pos:start="29:18" pos:end="29:36"><name pos:start="29:18" pos:end="29:28">temp_buffer</name> <operator pos:start="29:30" pos:end="29:30">&lt;</operator> <literal type="number" pos:start="29:32" pos:end="29:36">0x130</literal></expr>)</condition><block type="pseudo" pos:start="29:68" pos:end="29:73"><block_content pos:start="29:68" pos:end="29:73">                              <expr_stmt pos:start="29:68" pos:end="29:73"><expr pos:start="29:68" pos:end="29:72"><name pos:start="29:68" pos:end="29:70">VOL</name><operator pos:start="29:71" pos:end="29:72">++</operator></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="31:9" pos:end="33:73">else if <condition pos:start="31:17" pos:end="33:66">(   <expr pos:start="31:21" pos:end="33:65"><operator pos:start="31:21" pos:end="31:21">!</operator><operator pos:start="31:22" pos:end="31:22">(</operator><literal type="number" pos:start="31:23" pos:end="31:27">0x1AF</literal> <operator pos:start="31:29" pos:end="31:29">&lt;</operator> <name pos:start="31:31" pos:end="31:41">temp_buffer</name> <operator pos:start="31:43" pos:end="31:44">&amp;&amp;</operator> <name pos:start="31:46" pos:end="31:56">temp_buffer</name> <operator pos:start="31:58" pos:end="31:58">&lt;</operator> <literal type="number" pos:start="31:60" pos:end="31:64">0x1B7</literal><operator pos:start="31:65" pos:end="31:65">)</operator>

                 <operator pos:start="33:18" pos:end="33:19">&amp;&amp;</operator> <operator pos:start="33:21" pos:end="33:21">!</operator><operator pos:start="33:22" pos:end="33:22">(</operator><literal type="number" pos:start="33:23" pos:end="33:27">0x1B9</literal> <operator pos:start="33:29" pos:end="33:29">&lt;</operator> <name pos:start="33:31" pos:end="33:41">temp_buffer</name> <operator pos:start="33:43" pos:end="33:44">&amp;&amp;</operator> <name pos:start="33:46" pos:end="33:56">temp_buffer</name> <operator pos:start="33:58" pos:end="33:58">&lt;</operator> <literal type="number" pos:start="33:60" pos:end="33:64">0x1C4</literal><operator pos:start="33:65" pos:end="33:65">)</operator></expr>)</condition><block type="pseudo" pos:start="33:68" pos:end="33:73"><block_content pos:start="33:68" pos:end="33:73"> <expr_stmt pos:start="33:68" pos:end="33:73"><expr pos:start="33:68" pos:end="33:72"><name pos:start="33:68" pos:end="33:70">res</name><operator pos:start="33:71" pos:end="33:72">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="39:5" pos:end="41:80"><if pos:start="39:5" pos:end="41:80">if <condition pos:start="39:8" pos:end="39:68">(<expr pos:start="39:9" pos:end="39:67"><name pos:start="39:9" pos:end="39:11">VOP</name> <operator pos:start="39:13" pos:end="39:14">&gt;=</operator> <name pos:start="39:16" pos:end="39:19">VISO</name> <operator pos:start="39:21" pos:end="39:22">&amp;&amp;</operator> <name pos:start="39:24" pos:end="39:26">VOP</name> <operator pos:start="39:28" pos:end="39:29">&gt;=</operator> <name pos:start="39:31" pos:end="39:33">VOL</name> <operator pos:start="39:35" pos:end="39:36">&amp;&amp;</operator> <name pos:start="39:38" pos:end="39:39">VO</name> <operator pos:start="39:41" pos:end="39:42">&gt;=</operator> <name pos:start="39:44" pos:end="39:46">VOL</name> <operator pos:start="39:48" pos:end="39:49">&amp;&amp;</operator> <name pos:start="39:51" pos:end="39:53">VOL</name> <operator pos:start="39:55" pos:end="39:55">&gt;</operator> <literal type="number" pos:start="39:57" pos:end="39:57">0</literal> <operator pos:start="39:59" pos:end="39:60">&amp;&amp;</operator> <name pos:start="39:62" pos:end="39:64">res</name><operator pos:start="39:65" pos:end="39:66">==</operator><literal type="number" pos:start="39:67" pos:end="39:67">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:80"><block_content pos:start="41:9" pos:end="41:80">

        <return pos:start="41:9" pos:end="41:80">return <expr pos:start="41:16" pos:end="41:79"><ternary pos:start="41:16" pos:end="41:79"><condition pos:start="41:16" pos:end="41:27"><expr pos:start="41:16" pos:end="41:25"><name pos:start="41:16" pos:end="41:18">VOP</name><operator pos:start="41:19" pos:end="41:19">+</operator><name pos:start="41:20" pos:end="41:21">VO</name> <operator pos:start="41:23" pos:end="41:23">&gt;</operator> <literal type="number" pos:start="41:25" pos:end="41:25">4</literal></expr> ?</condition><then pos:start="41:29" pos:end="41:51"> <expr pos:start="41:29" pos:end="41:51"><name pos:start="41:29" pos:end="41:51">AVPROBE_SCORE_EXTENSION</name></expr> </then><else pos:start="41:53" pos:end="41:79">: <expr pos:start="41:55" pos:end="41:79"><name pos:start="41:55" pos:end="41:77">AVPROBE_SCORE_EXTENSION</name><operator pos:start="41:78" pos:end="41:78">/</operator><literal type="number" pos:start="41:79" pos:end="41:79">2</literal></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
