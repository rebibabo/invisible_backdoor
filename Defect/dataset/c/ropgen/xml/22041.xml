<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22041.c" pos:tabs="8"><function pos:start="1:1" pos:end="34:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">decode_rle</name><parameter_list pos:start="1:22" pos:end="2:79">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:29">uint8_t</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">bitmap</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:51">linesize</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:58"><decl pos:start="1:54" pos:end="1:58"><type pos:start="1:54" pos:end="1:58"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:58">w</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">h</name></decl></parameter>,
                      <parameter pos:start="2:23" pos:end="2:40"><decl pos:start="2:23" pos:end="2:40"><type pos:start="2:23" pos:end="2:40"><specifier pos:start="2:23" pos:end="2:27">const</specifier> <name pos:start="2:29" pos:end="2:35">uint8_t</name> <modifier pos:start="2:37" pos:end="2:37">*</modifier></type><name pos:start="2:38" pos:end="2:40">buf</name></decl></parameter>, <parameter pos:start="2:43" pos:end="2:51"><decl pos:start="2:43" pos:end="2:51"><type pos:start="2:43" pos:end="2:51"><name pos:start="2:43" pos:end="2:45">int</name></type> <name pos:start="2:47" pos:end="2:51">start</name></decl></parameter>, <parameter pos:start="2:54" pos:end="2:65"><decl pos:start="2:54" pos:end="2:65"><type pos:start="2:54" pos:end="2:65"><name pos:start="2:54" pos:end="2:56">int</name></type> <name pos:start="2:58" pos:end="2:65">buf_size</name></decl></parameter>, <parameter pos:start="2:68" pos:end="2:78"><decl pos:start="2:68" pos:end="2:78"><type pos:start="2:68" pos:end="2:78"><name pos:start="2:68" pos:end="2:70">int</name></type> <name pos:start="2:72" pos:end="2:78">is_8bit</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="34:1">{<block_content pos:start="4:5" pos:end="33:13">
    <decl_stmt pos:start="4:5" pos:end="4:21"><decl pos:start="4:5" pos:end="4:20"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:17">GetBitContext</name></type> <name pos:start="4:19" pos:end="4:20">gb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">bit_len</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:25"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">x</name></decl>, <decl pos:start="6:12" pos:end="6:12"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:12" pos:end="6:12">y</name></decl>, <decl pos:start="6:15" pos:end="6:17"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:15" pos:end="6:17">len</name></decl>, <decl pos:start="6:20" pos:end="6:24"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:20" pos:end="6:24">color</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">d</name></decl>;</decl_stmt>
    <if_stmt pos:start="8:5" pos:end="9:37"><if pos:start="8:5" pos:end="9:37">if <condition pos:start="8:8" pos:end="8:26">(<expr pos:start="8:9" pos:end="8:25"><name pos:start="8:9" pos:end="8:13">start</name> <operator pos:start="8:15" pos:end="8:16">&gt;=</operator> <name pos:start="8:18" pos:end="8:25">buf_size</name></expr>)</condition><block type="pseudo" pos:start="9:5" pos:end="9:37"><block_content pos:start="9:5" pos:end="9:37">
    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:11">bit_len</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <operator pos:start="9:15" pos:end="9:15">(</operator><name pos:start="9:16" pos:end="9:23">buf_size</name> <operator pos:start="9:25" pos:end="9:25">-</operator> <name pos:start="9:27" pos:end="9:31">start</name><operator pos:start="9:32" pos:end="9:32">)</operator> <operator pos:start="9:34" pos:end="9:34">*</operator> <literal type="number" pos:start="9:36" pos:end="9:36">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:45"><expr pos:start="10:5" pos:end="10:44"><call pos:start="10:5" pos:end="10:44"><name pos:start="10:5" pos:end="10:17">init_get_bits</name><argument_list pos:start="10:18" pos:end="10:44">(<argument pos:start="10:19" pos:end="10:21"><expr pos:start="10:19" pos:end="10:21"><operator pos:start="10:19" pos:end="10:19">&amp;</operator><name pos:start="10:20" pos:end="10:21">gb</name></expr></argument>, <argument pos:start="10:24" pos:end="10:34"><expr pos:start="10:24" pos:end="10:34"><name pos:start="10:24" pos:end="10:26">buf</name> <operator pos:start="10:28" pos:end="10:28">+</operator> <name pos:start="10:30" pos:end="10:34">start</name></expr></argument>, <argument pos:start="10:37" pos:end="10:43"><expr pos:start="10:37" pos:end="10:43"><name pos:start="10:37" pos:end="10:43">bit_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:10"><expr pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:5">x</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <literal type="number" pos:start="11:9" pos:end="11:9">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:10"><expr pos:start="12:5" pos:end="12:9"><name pos:start="12:5" pos:end="12:5">y</name> <operator pos:start="12:7" pos:end="12:7">=</operator> <literal type="number" pos:start="12:9" pos:end="12:9">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:15"><expr pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:5">d</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:14">bitmap</name></expr>;</expr_stmt>
    <for pos:start="14:5" pos:end="32:5">for<control pos:start="14:8" pos:end="14:11">(<init pos:start="14:9" pos:end="14:9">;</init><condition pos:start="14:10" pos:end="14:10">;</condition><incr/>)</control> <block pos:start="14:13" pos:end="32:5">{<block_content pos:start="15:9" pos:end="31:9">
        <if_stmt pos:start="15:9" pos:end="19:47"><if pos:start="15:9" pos:end="19:47">if <condition pos:start="15:12" pos:end="15:42">(<expr pos:start="15:13" pos:end="15:41"><call pos:start="15:13" pos:end="15:31"><name pos:start="15:13" pos:end="15:26">get_bits_count</name><argument_list pos:start="15:27" pos:end="15:31">(<argument pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><operator pos:start="15:28" pos:end="15:28">&amp;</operator><name pos:start="15:29" pos:end="15:30">gb</name></expr></argument>)</argument_list></call> <operator pos:start="15:33" pos:end="15:33">&gt;</operator> <name pos:start="15:35" pos:end="15:41">bit_len</name></expr>)</condition><block type="pseudo" pos:start="16:9" pos:end="19:47"><block_content pos:start="16:9" pos:end="19:47">
        <if_stmt pos:start="16:9" pos:end="19:47"><if pos:start="16:9" pos:end="17:47">if <condition pos:start="16:12" pos:end="16:20">(<expr pos:start="16:13" pos:end="16:19"><name pos:start="16:13" pos:end="16:19">is_8bit</name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:47"><block_content pos:start="17:13" pos:end="17:47">
            <expr_stmt pos:start="17:13" pos:end="17:47"><expr pos:start="17:13" pos:end="17:46"><name pos:start="17:13" pos:end="17:15">len</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:46"><name pos:start="17:19" pos:end="17:33">decode_run_8bit</name><argument_list pos:start="17:34" pos:end="17:46">(<argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><operator pos:start="17:35" pos:end="17:35">&amp;</operator><name pos:start="17:36" pos:end="17:37">gb</name></expr></argument>, <argument pos:start="17:40" pos:end="17:45"><expr pos:start="17:40" pos:end="17:45"><operator pos:start="17:40" pos:end="17:40">&amp;</operator><name pos:start="17:41" pos:end="17:45">color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="18:9" pos:end="19:47">else<block type="pseudo" pos:start="19:13" pos:end="19:47"><block_content pos:start="19:13" pos:end="19:47">
            <expr_stmt pos:start="19:13" pos:end="19:47"><expr pos:start="19:13" pos:end="19:46"><name pos:start="19:13" pos:end="19:15">len</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:46"><name pos:start="19:19" pos:end="19:33">decode_run_2bit</name><argument_list pos:start="19:34" pos:end="19:46">(<argument pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><operator pos:start="19:35" pos:end="19:35">&amp;</operator><name pos:start="19:36" pos:end="19:37">gb</name></expr></argument>, <argument pos:start="19:40" pos:end="19:45"><expr pos:start="19:40" pos:end="19:45"><operator pos:start="19:40" pos:end="19:40">&amp;</operator><name pos:start="19:41" pos:end="19:45">color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:32"><expr pos:start="20:9" pos:end="20:31"><name pos:start="20:9" pos:end="20:11">len</name> <operator pos:start="20:13" pos:end="20:13">=</operator> <call pos:start="20:15" pos:end="20:31"><name pos:start="20:15" pos:end="20:19">FFMIN</name><argument_list pos:start="20:20" pos:end="20:31">(<argument pos:start="20:21" pos:end="20:23"><expr pos:start="20:21" pos:end="20:23"><name pos:start="20:21" pos:end="20:23">len</name></expr></argument>, <argument pos:start="20:26" pos:end="20:30"><expr pos:start="20:26" pos:end="20:30"><name pos:start="20:26" pos:end="20:26">w</name> <operator pos:start="20:28" pos:end="20:28">-</operator> <name pos:start="20:30" pos:end="20:30">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:14">memset</name><argument_list pos:start="21:15" pos:end="21:33">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:16">d</name> <operator pos:start="21:18" pos:end="21:18">+</operator> <name pos:start="21:20" pos:end="21:20">x</name></expr></argument>, <argument pos:start="21:23" pos:end="21:27"><expr pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:27">color</name></expr></argument>, <argument pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:32">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:17"><expr pos:start="22:9" pos:end="22:16"><name pos:start="22:9" pos:end="22:9">x</name> <operator pos:start="22:11" pos:end="22:12">+=</operator> <name pos:start="22:14" pos:end="22:16">len</name></expr>;</expr_stmt>
        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:13">x</name> <operator pos:start="23:15" pos:end="23:16">&gt;=</operator> <name pos:start="23:18" pos:end="23:18">w</name></expr>)</condition> <block pos:start="23:21" pos:end="31:9">{<block_content pos:start="24:13" pos:end="30:32">
            <expr_stmt pos:start="24:13" pos:end="24:16"><expr pos:start="24:13" pos:end="24:15"><name pos:start="24:13" pos:end="24:13">y</name><operator pos:start="24:14" pos:end="24:15">++</operator></expr>;</expr_stmt>
            <if_stmt pos:start="25:13" pos:end="26:22"><if pos:start="25:13" pos:end="26:22">if <condition pos:start="25:16" pos:end="25:23">(<expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:17">y</name> <operator pos:start="25:19" pos:end="25:20">&gt;=</operator> <name pos:start="25:22" pos:end="25:22">h</name></expr>)</condition><block type="pseudo" pos:start="26:17" pos:end="26:22"><block_content pos:start="26:17" pos:end="26:22">
                <break pos:start="26:17" pos:end="26:22">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:26"><expr pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:13">d</name> <operator pos:start="27:15" pos:end="27:16">+=</operator> <name pos:start="27:18" pos:end="27:25">linesize</name></expr>;</expr_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:18"><expr pos:start="28:13" pos:end="28:17"><name pos:start="28:13" pos:end="28:13">x</name> <operator pos:start="28:15" pos:end="28:15">=</operator> <literal type="number" pos:start="28:17" pos:end="28:17">0</literal></expr>;</expr_stmt>
            <comment type="block" pos:start="29:13" pos:end="29:28">/* byte align */</comment>
            <expr_stmt pos:start="30:13" pos:end="30:32"><expr pos:start="30:13" pos:end="30:31"><call pos:start="30:13" pos:end="30:31"><name pos:start="30:13" pos:end="30:26">align_get_bits</name><argument_list pos:start="30:27" pos:end="30:31">(<argument pos:start="30:28" pos:end="30:30"><expr pos:start="30:28" pos:end="30:30"><operator pos:start="30:28" pos:end="30:28">&amp;</operator><name pos:start="30:29" pos:end="30:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
