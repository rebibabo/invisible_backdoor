<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16543.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:39">virtio_scsi_handle_cmd_req_prepare</name><parameter_list pos:start="1:40" pos:end="1:74">(<parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:50">VirtIOSCSI</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:68">VirtIOSCSIReq</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">req</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:16">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">VirtIOSCSICommon</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">vs</name> <init pos:start="5:26" pos:end="5:41">= <expr pos:start="5:28" pos:end="5:41"><operator pos:start="5:28" pos:end="5:28">&amp;</operator><name pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:41">parent_obj</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">SCSIDevice</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:75"><expr pos:start="13:5" pos:end="15:74"><name pos:start="13:5" pos:end="13:6">rc</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="15:74"><name pos:start="13:10" pos:end="13:30">virtio_scsi_parse_req</name><argument_list pos:start="13:31" pos:end="15:74">(<argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">req</name></expr></argument>, <argument pos:start="13:37" pos:end="13:75"><expr pos:start="13:37" pos:end="13:75"><sizeof pos:start="13:37" pos:end="13:60">sizeof<argument_list pos:start="13:43" pos:end="13:60">(<argument pos:start="13:44" pos:end="13:59"><expr pos:start="13:44" pos:end="13:59"><name pos:start="13:44" pos:end="13:59">VirtIOSCSICmdReq</name></expr></argument>)</argument_list></sizeof> <operator pos:start="13:62" pos:end="13:62">+</operator> <name pos:start="13:64" pos:end="13:75"><name pos:start="13:64" pos:end="13:65">vs</name><operator pos:start="13:66" pos:end="13:67">-&gt;</operator><name pos:start="13:68" pos:end="13:75">cdb_size</name></name></expr></argument>,

                               <argument pos:start="15:32" pos:end="15:73"><expr pos:start="15:32" pos:end="15:73"><sizeof pos:start="15:32" pos:end="15:56">sizeof<argument_list pos:start="15:38" pos:end="15:56">(<argument pos:start="15:39" pos:end="15:55"><expr pos:start="15:39" pos:end="15:55"><name pos:start="15:39" pos:end="15:55">VirtIOSCSICmdResp</name></expr></argument>)</argument_list></sizeof> <operator pos:start="15:58" pos:end="15:58">+</operator> <name pos:start="15:60" pos:end="15:73"><name pos:start="15:60" pos:end="15:61">vs</name><operator pos:start="15:62" pos:end="15:63">-&gt;</operator><name pos:start="15:64" pos:end="15:73">sense_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:10">rc</name> <operator pos:start="17:12" pos:end="17:12">&lt;</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>)</condition> <block pos:start="17:17" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:21">

        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:27">(<expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:14">rc</name> <operator pos:start="19:16" pos:end="19:17">==</operator> <operator pos:start="19:19" pos:end="19:19">-</operator><name pos:start="19:20" pos:end="19:26">ENOTSUP</name></expr>)</condition> <block pos:start="19:29" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:42">

            <expr_stmt pos:start="21:13" pos:end="21:42"><expr pos:start="21:13" pos:end="21:41"><call pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:36">virtio_scsi_fail_cmd_req</name><argument_list pos:start="21:37" pos:end="21:41">(<argument pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><name pos:start="21:38" pos:end="21:40">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="27:9">else <block pos:start="23:16" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:34">

            <expr_stmt pos:start="25:13" pos:end="25:34"><expr pos:start="25:13" pos:end="25:33"><call pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:31">virtio_scsi_bad_req</name><argument_list pos:start="25:32" pos:end="25:33">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="29:9" pos:end="29:21">return <expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:5">d</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <call pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:31">virtio_scsi_device_find</name><argument_list pos:start="35:32" pos:end="35:52">(<argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">s</name></expr></argument>, <argument pos:start="35:36" pos:end="35:51"><expr pos:start="35:36" pos:end="35:51"><name pos:start="35:36" pos:end="35:51"><name pos:start="35:36" pos:end="35:38">req</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:43">req</name><operator pos:start="35:44" pos:end="35:44">.</operator><name pos:start="35:45" pos:end="35:47">cmd</name><operator pos:start="35:48" pos:end="35:48">.</operator><name pos:start="35:49" pos:end="35:51">lun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:11">(<expr pos:start="37:9" pos:end="37:10"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:10">d</name></expr>)</condition> <block pos:start="37:13" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:21">

        <expr_stmt pos:start="39:9" pos:end="39:58"><expr pos:start="39:9" pos:end="39:57"><name pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:11">req</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:17">resp</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:21">cmd</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:30">response</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <name pos:start="39:34" pos:end="39:57">VIRTIO_SCSI_S_BAD_TARGET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:42"><expr pos:start="41:9" pos:end="41:41"><call pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:36">virtio_scsi_complete_cmd_req</name><argument_list pos:start="41:37" pos:end="41:41">(<argument pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:40">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:21">return <expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:75">(<expr pos:start="47:9" pos:end="47:74"><name pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:28">dataplane_started</name></name> <operator pos:start="47:30" pos:end="47:31">&amp;&amp;</operator> <call pos:start="47:33" pos:end="47:64"><name pos:start="47:33" pos:end="47:52">bdrv_get_aio_context</name><argument_list pos:start="47:53" pos:end="47:64">(<argument pos:start="47:54" pos:end="47:63"><expr pos:start="47:54" pos:end="47:63"><name pos:start="47:54" pos:end="47:63"><name pos:start="47:54" pos:end="47:54">d</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:60">conf</name><operator pos:start="47:61" pos:end="47:61">.</operator><name pos:start="47:62" pos:end="47:63">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:66" pos:end="47:67">!=</operator> <name pos:start="47:69" pos:end="47:74"><name pos:start="47:69" pos:end="47:69">s</name><operator pos:start="47:70" pos:end="47:71">-&gt;</operator><name pos:start="47:72" pos:end="47:74">ctx</name></name></expr>)</condition> <block pos:start="47:77" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:36">

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><call pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:27">aio_context_acquire</name><argument_list pos:start="49:28" pos:end="49:35">(<argument pos:start="49:29" pos:end="49:34"><expr pos:start="49:29" pos:end="49:34"><name pos:start="49:29" pos:end="49:34"><name pos:start="49:29" pos:end="49:29">s</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:34">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><call pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:28">bdrv_set_aio_context</name><argument_list pos:start="51:29" pos:end="51:48">(<argument pos:start="51:30" pos:end="51:39"><expr pos:start="51:30" pos:end="51:39"><name pos:start="51:30" pos:end="51:39"><name pos:start="51:30" pos:end="51:30">d</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:36">conf</name><operator pos:start="51:37" pos:end="51:37">.</operator><name pos:start="51:38" pos:end="51:39">bs</name></name></expr></argument>, <argument pos:start="51:42" pos:end="51:47"><expr pos:start="51:42" pos:end="51:47"><name pos:start="51:42" pos:end="51:47"><name pos:start="51:42" pos:end="51:42">s</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:47">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><call pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:27">aio_context_release</name><argument_list pos:start="53:28" pos:end="53:35">(<argument pos:start="53:29" pos:end="53:34"><expr pos:start="53:29" pos:end="53:34"><name pos:start="53:29" pos:end="53:34"><name pos:start="53:29" pos:end="53:29">s</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:34">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="61:48"><expr pos:start="57:5" pos:end="61:47"><name pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:7">req</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:13">sreq</name></name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="61:47"><name pos:start="57:17" pos:end="57:28">scsi_req_new</name><argument_list pos:start="57:29" pos:end="61:47">(<argument pos:start="57:30" pos:end="57:30"><expr pos:start="57:30" pos:end="57:30"><name pos:start="57:30" pos:end="57:30">d</name></expr></argument>, <argument pos:start="57:33" pos:end="57:48"><expr pos:start="57:33" pos:end="57:48"><name pos:start="57:33" pos:end="57:48"><name pos:start="57:33" pos:end="57:35">req</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:40">req</name><operator pos:start="57:41" pos:end="57:41">.</operator><name pos:start="57:42" pos:end="57:44">cmd</name><operator pos:start="57:45" pos:end="57:45">.</operator><name pos:start="57:46" pos:end="57:48">tag</name></name></expr></argument>,

                             <argument pos:start="59:30" pos:end="59:66"><expr pos:start="59:30" pos:end="59:66"><call pos:start="59:30" pos:end="59:66"><name pos:start="59:30" pos:end="59:48">virtio_scsi_get_lun</name><argument_list pos:start="59:49" pos:end="59:66">(<argument pos:start="59:50" pos:end="59:65"><expr pos:start="59:50" pos:end="59:65"><name pos:start="59:50" pos:end="59:65"><name pos:start="59:50" pos:end="59:52">req</name><operator pos:start="59:53" pos:end="59:54">-&gt;</operator><name pos:start="59:55" pos:end="59:57">req</name><operator pos:start="59:58" pos:end="59:58">.</operator><name pos:start="59:59" pos:end="59:61">cmd</name><operator pos:start="59:62" pos:end="59:62">.</operator><name pos:start="59:63" pos:end="59:65">lun</name></name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="61:30" pos:end="61:41"><expr pos:start="61:30" pos:end="61:41"><name pos:start="61:30" pos:end="61:41"><name pos:start="61:30" pos:end="61:32">req</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:37">req</name><operator pos:start="61:38" pos:end="61:38">.</operator><name pos:start="61:39" pos:end="61:41">cdb</name></name></expr></argument>, <argument pos:start="61:44" pos:end="61:46"><expr pos:start="61:44" pos:end="61:46"><name pos:start="61:44" pos:end="61:46">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="77:5"><if pos:start="65:5" pos:end="77:5">if <condition pos:start="65:8" pos:end="69:50">(<expr pos:start="65:9" pos:end="69:49"><name pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:11">req</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:17">sreq</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:22">cmd</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:27">mode</name></name> <operator pos:start="65:29" pos:end="65:30">!=</operator> <name pos:start="65:32" pos:end="65:45">SCSI_XFER_NONE</name>

        <operator pos:start="67:9" pos:end="67:10">&amp;&amp;</operator> <operator pos:start="67:12" pos:end="67:12">(</operator><name pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:15">req</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:21">sreq</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:26">cmd</name><operator pos:start="67:27" pos:end="67:27">.</operator><name pos:start="67:28" pos:end="67:31">mode</name></name> <operator pos:start="67:33" pos:end="67:34">!=</operator> <name pos:start="67:36" pos:end="67:44"><name pos:start="67:36" pos:end="67:38">req</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:44">mode</name></name> <operator pos:start="67:46" pos:end="67:47">||</operator>

            <name pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:15">req</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:21">sreq</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:26">cmd</name><operator pos:start="69:27" pos:end="69:27">.</operator><name pos:start="69:28" pos:end="69:31">xfer</name></name> <operator pos:start="69:33" pos:end="69:33">&gt;</operator> <name pos:start="69:35" pos:end="69:48"><name pos:start="69:35" pos:end="69:37">req</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:43">qsgl</name><operator pos:start="69:44" pos:end="69:44">.</operator><name pos:start="69:45" pos:end="69:48">size</name></name><operator pos:start="69:49" pos:end="69:49">)</operator></expr>)</condition> <block pos:start="69:52" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:21">

        <expr_stmt pos:start="71:9" pos:end="71:55"><expr pos:start="71:9" pos:end="71:54"><name pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:11">req</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:17">resp</name><operator pos:start="71:18" pos:end="71:18">.</operator><name pos:start="71:19" pos:end="71:21">cmd</name><operator pos:start="71:22" pos:end="71:22">.</operator><name pos:start="71:23" pos:end="71:30">response</name></name> <operator pos:start="71:32" pos:end="71:32">=</operator> <name pos:start="71:34" pos:end="71:54">VIRTIO_SCSI_S_OVERRUN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:42"><expr pos:start="73:9" pos:end="73:41"><call pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:36">virtio_scsi_complete_cmd_req</name><argument_list pos:start="73:37" pos:end="73:41">(<argument pos:start="73:38" pos:end="73:40"><expr pos:start="73:38" pos:end="73:40"><name pos:start="73:38" pos:end="73:40">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:21">return <expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:28"><expr pos:start="79:5" pos:end="79:27"><call pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:16">scsi_req_ref</name><argument_list pos:start="79:17" pos:end="79:27">(<argument pos:start="79:18" pos:end="79:26"><expr pos:start="79:18" pos:end="79:26"><name pos:start="79:18" pos:end="79:26"><name pos:start="79:18" pos:end="79:20">req</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:26">sreq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><call pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:16">bdrv_io_plug</name><argument_list pos:start="81:17" pos:end="81:28">(<argument pos:start="81:18" pos:end="81:27"><expr pos:start="81:18" pos:end="81:27"><name pos:start="81:18" pos:end="81:27"><name pos:start="81:18" pos:end="81:18">d</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:24">conf</name><operator pos:start="81:25" pos:end="81:25">.</operator><name pos:start="81:26" pos:end="81:27">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:16">return <expr pos:start="83:12" pos:end="83:15"><name pos:start="83:12" pos:end="83:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
