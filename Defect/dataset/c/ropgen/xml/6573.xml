<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6573.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:39">check_block</name><parameter_list pos:start="1:40" pos:end="1:137">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:51">SnowContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:64">mb_x</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:74"><decl pos:start="1:67" pos:end="1:74"><type pos:start="1:67" pos:end="1:74"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:74">mb_y</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:84"><decl pos:start="1:77" pos:end="1:84"><type pos:start="1:77" pos:end="1:81"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:84"><name pos:start="1:81" pos:end="1:81">p</name><index pos:start="1:82" pos:end="1:84">[<expr pos:start="1:83" pos:end="1:83"><literal type="number" pos:start="1:83" pos:end="1:83">3</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:95"><decl pos:start="1:87" pos:end="1:95"><type pos:start="1:87" pos:end="1:95"><name pos:start="1:87" pos:end="1:89">int</name></type> <name pos:start="1:91" pos:end="1:95">intra</name></decl></parameter>, <parameter pos:start="1:98" pos:end="1:122"><decl pos:start="1:98" pos:end="1:122"><type pos:start="1:98" pos:end="1:122"><specifier pos:start="1:98" pos:end="1:102">const</specifier> <name pos:start="1:104" pos:end="1:110">uint8_t</name> <modifier pos:start="1:112" pos:end="1:112">*</modifier></type><name pos:start="1:113" pos:end="1:122">obmc_edged</name></decl></parameter>, <parameter pos:start="1:125" pos:end="1:136"><decl pos:start="1:125" pos:end="1:136"><type pos:start="1:125" pos:end="1:136"><name pos:start="1:125" pos:end="1:127">int</name> <modifier pos:start="1:129" pos:end="1:129">*</modifier></type><name pos:start="1:130" pos:end="1:136">best_rd</name></decl></parameter>)</parameter_list><block pos:start="1:138" pos:end="73:1">{<block_content pos:start="3:5" pos:end="71:5">

    <decl_stmt pos:start="3:5" pos:end="3:57"><decl pos:start="3:5" pos:end="3:56"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:22">b_stride</name><init pos:start="3:23" pos:end="3:56">= <expr pos:start="3:25" pos:end="3:56"><name pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:25">s</name><operator pos:start="3:26" pos:end="3:27">-&gt;</operator><name pos:start="3:28" pos:end="3:34">b_width</name></name> <operator pos:start="3:36" pos:end="3:37">&lt;&lt;</operator> <name pos:start="3:39" pos:end="3:56"><name pos:start="3:39" pos:end="3:39">s</name><operator pos:start="3:40" pos:end="3:41">-&gt;</operator><name pos:start="3:42" pos:end="3:56">block_max_depth</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">BlockNode</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">block</name><init pos:start="5:21" pos:end="5:55">= <expr pos:start="5:23" pos:end="5:55"><operator pos:start="5:23" pos:end="5:23">&amp;</operator><name pos:start="5:24" pos:end="5:55"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:31">block</name><index pos:start="5:32" pos:end="5:55">[<expr pos:start="5:33" pos:end="5:54"><name pos:start="5:33" pos:end="5:36">mb_x</name> <operator pos:start="5:38" pos:end="5:38">+</operator> <name pos:start="5:40" pos:end="5:43">mb_y</name> <operator pos:start="5:45" pos:end="5:45">*</operator> <name pos:start="5:47" pos:end="5:54">b_stride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">BlockNode</name></type> <name pos:start="7:15" pos:end="7:20">backup</name><init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><operator pos:start="7:23" pos:end="7:23">*</operator><name pos:start="7:24" pos:end="7:28">block</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rd</name></decl>, <decl pos:start="9:13" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:17">index</name></decl>, <decl pos:start="9:20" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:24">value</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><call pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:30">(<argument pos:start="13:12" pos:end="13:29"><expr pos:start="13:12" pos:end="13:29"><name pos:start="13:12" pos:end="13:15">mb_x</name><operator pos:start="13:16" pos:end="13:17">&gt;=</operator><literal type="number" pos:start="13:18" pos:end="13:18">0</literal> <operator pos:start="13:20" pos:end="13:21">&amp;&amp;</operator> <name pos:start="13:23" pos:end="13:26">mb_y</name><operator pos:start="13:27" pos:end="13:28">&gt;=</operator><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:25">(<argument pos:start="15:12" pos:end="15:24"><expr pos:start="15:12" pos:end="15:24"><name pos:start="15:12" pos:end="15:15">mb_x</name><operator pos:start="15:16" pos:end="15:16">&lt;</operator><name pos:start="15:17" pos:end="15:24">b_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="49:5"><if pos:start="19:5" pos:end="29:5">if<condition pos:start="19:7" pos:end="19:13">(<expr pos:start="19:8" pos:end="19:12"><name pos:start="19:8" pos:end="19:12">intra</name></expr>)</condition><block pos:start="19:14" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:35">

        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:13">block</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:20">color</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>]</index></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:27">p</name><index pos:start="21:28" pos:end="21:30">[<expr pos:start="21:29" pos:end="21:29"><literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:13">block</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">color</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>]</index></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <name pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:27">p</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:13">block</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">color</name><index pos:start="25:21" pos:end="25:23">[<expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">2</literal></expr>]</index></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:27">p</name><index pos:start="25:28" pos:end="25:30">[<expr pos:start="25:29" pos:end="25:29"><literal type="number" pos:start="25:29" pos:end="25:29">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:13">block</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:19">type</name></name> <operator pos:start="27:21" pos:end="27:22">|=</operator> <name pos:start="27:24" pos:end="27:34">BLOCK_INTRA</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="29:6" pos:end="49:5">else<block pos:start="29:10" pos:end="49:5">{<block_content pos:start="31:9" pos:end="47:36">

        <expr_stmt pos:start="31:9" pos:end="31:52"><expr pos:start="31:9" pos:end="31:51"><name pos:start="31:9" pos:end="31:13">index</name><operator pos:start="31:14" pos:end="31:14">=</operator> <operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:17">p</name><index pos:start="31:18" pos:end="31:20">[<expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>]</index></name> <operator pos:start="31:22" pos:end="31:22">+</operator> <literal type="number" pos:start="31:24" pos:end="31:25">31</literal><operator pos:start="31:26" pos:end="31:26">*</operator><name pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:27">p</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">1</literal></expr>]</index></name><operator pos:start="31:31" pos:end="31:31">)</operator> <operator pos:start="31:33" pos:end="31:33">&amp;</operator> <operator pos:start="31:35" pos:end="31:35">(</operator><name pos:start="31:36" pos:end="31:48">ME_CACHE_SIZE</name><operator pos:start="31:49" pos:end="31:49">-</operator><literal type="number" pos:start="31:50" pos:end="31:50">1</literal><operator pos:start="31:51" pos:end="31:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:82"><expr pos:start="33:9" pos:end="33:81"><name pos:start="33:9" pos:end="33:13">value</name><operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:37"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:37">me_cache_generation</name></name> <operator pos:start="33:39" pos:end="33:39">+</operator> <operator pos:start="33:41" pos:end="33:41">(</operator><name pos:start="33:42" pos:end="33:45"><name pos:start="33:42" pos:end="33:42">p</name><index pos:start="33:43" pos:end="33:45">[<expr pos:start="33:44" pos:end="33:44"><literal type="number" pos:start="33:44" pos:end="33:44">0</literal></expr>]</index></name><operator pos:start="33:46" pos:end="33:47">&gt;&gt;</operator><literal type="number" pos:start="33:48" pos:end="33:49">10</literal><operator pos:start="33:50" pos:end="33:50">)</operator> <operator pos:start="33:52" pos:end="33:52">+</operator> <operator pos:start="33:54" pos:end="33:54">(</operator><name pos:start="33:55" pos:end="33:58"><name pos:start="33:55" pos:end="33:55">p</name><index pos:start="33:56" pos:end="33:58">[<expr pos:start="33:57" pos:end="33:57"><literal type="number" pos:start="33:57" pos:end="33:57">1</literal></expr>]</index></name><operator pos:start="33:59" pos:end="33:60">&lt;&lt;</operator><literal type="number" pos:start="33:61" pos:end="33:61">6</literal><operator pos:start="33:62" pos:end="33:62">)</operator> <operator pos:start="33:64" pos:end="33:64">+</operator> <operator pos:start="33:66" pos:end="33:66">(</operator><name pos:start="33:67" pos:end="33:76"><name pos:start="33:67" pos:end="33:71">block</name><operator pos:start="33:72" pos:end="33:73">-&gt;</operator><name pos:start="33:74" pos:end="33:76">ref</name></name><operator pos:start="33:77" pos:end="33:78">&lt;&lt;</operator><literal type="number" pos:start="33:79" pos:end="33:80">12</literal><operator pos:start="33:81" pos:end="33:81">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:21"><if pos:start="35:9" pos:end="37:21">if<condition pos:start="35:11" pos:end="35:39">(<expr pos:start="35:12" pos:end="35:38"><name pos:start="35:12" pos:end="35:29"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:22">me_cache</name><index pos:start="35:23" pos:end="35:29">[<expr pos:start="35:24" pos:end="35:28"><name pos:start="35:24" pos:end="35:28">index</name></expr>]</index></name> <operator pos:start="35:31" pos:end="35:32">==</operator> <name pos:start="35:34" pos:end="35:38">value</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:21"><block_content pos:start="37:13" pos:end="37:21">

            <return pos:start="37:13" pos:end="37:21">return <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:34"><expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:19">me_cache</name><index pos:start="39:20" pos:end="39:26">[<expr pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:25">index</name></expr>]</index></name><operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:33">value</name></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:13">block</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:17">mx</name></name><operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:20">p</name><index pos:start="43:21" pos:end="43:23">[<expr pos:start="43:22" pos:end="43:22"><literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:24"><expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:13">block</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:17">my</name></name><operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:20">p</name><index pos:start="45:21" pos:end="45:23">[<expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:13">block</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:19">type</name></name> <operator pos:start="47:21" pos:end="47:22">&amp;=</operator> <operator pos:start="47:24" pos:end="47:24">~</operator><name pos:start="47:25" pos:end="47:35">BLOCK_INTRA</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:51"><expr pos:start="53:5" pos:end="53:50"><name pos:start="53:5" pos:end="53:6">rd</name><operator pos:start="53:7" pos:end="53:7">=</operator> <call pos:start="53:9" pos:end="53:50"><name pos:start="53:9" pos:end="53:20">get_block_rd</name><argument_list pos:start="53:21" pos:end="53:50">(<argument pos:start="53:22" pos:end="53:22"><expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">s</name></expr></argument>, <argument pos:start="53:25" pos:end="53:28"><expr pos:start="53:25" pos:end="53:28"><name pos:start="53:25" pos:end="53:28">mb_x</name></expr></argument>, <argument pos:start="53:31" pos:end="53:34"><expr pos:start="53:31" pos:end="53:34"><name pos:start="53:31" pos:end="53:34">mb_y</name></expr></argument>, <argument pos:start="53:37" pos:end="53:37"><expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">0</literal></expr></argument>, <argument pos:start="53:40" pos:end="53:49"><expr pos:start="53:40" pos:end="53:49"><name pos:start="53:40" pos:end="53:49">obmc_edged</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="line" pos:start="57:1" pos:end="57:14">//FIXME chroma</comment>

    <if_stmt pos:start="59:5" pos:end="71:5"><if pos:start="59:5" pos:end="65:5">if<condition pos:start="59:7" pos:end="59:21">(<expr pos:start="59:8" pos:end="59:20"><name pos:start="59:8" pos:end="59:9">rd</name> <operator pos:start="59:11" pos:end="59:11">&lt;</operator> <operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:20">best_rd</name></expr>)</condition><block pos:start="59:22" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:17">

        <expr_stmt pos:start="61:9" pos:end="61:21"><expr pos:start="61:9" pos:end="61:20"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:16">best_rd</name><operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:20">rd</name></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">1</literal></expr>;</return>

    </block_content>}</block></if><else pos:start="65:6" pos:end="71:5">else<block pos:start="65:10" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:17">

        <expr_stmt pos:start="67:9" pos:end="67:23"><expr pos:start="67:9" pos:end="67:22"><operator pos:start="67:9" pos:end="67:9">*</operator><name pos:start="67:10" pos:end="67:14">block</name><operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:22">backup</name></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
