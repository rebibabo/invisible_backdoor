<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15919.c" pos:tabs="8"><function pos:start="1:1" pos:end="263:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">write_packet</name><parameter_list pos:start="1:25" pos:end="1:74">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:35">OutputFile</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">of</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">AVPacket</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">pkt</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:73"><decl pos:start="1:57" pos:end="1:73"><type pos:start="1:57" pos:end="1:73"><name pos:start="1:57" pos:end="1:68">OutputStream</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="263:1">{<block_content pos:start="5:5" pos:end="261:25">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:32">= <expr pos:start="5:26" pos:end="5:32"><name pos:start="5:26" pos:end="5:32"><name pos:start="5:26" pos:end="5:27">of</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:26">= <expr pos:start="7:20" pos:end="7:26"><name pos:start="7:20" pos:end="7:26"><name pos:start="7:20" pos:end="7:22">ost</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:26">st</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="57:5"><if pos:start="13:5" pos:end="57:5">if <condition pos:start="13:8" pos:end="13:28">(<expr pos:start="13:9" pos:end="13:27"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:27"><name pos:start="13:10" pos:end="13:11">of</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:27">header_written</name></name></expr>)</condition> <block pos:start="13:30" pos:end="57:5">{<block_content pos:start="15:9" pos:end="55:15">

        <decl_stmt pos:start="15:9" pos:end="15:31"><decl pos:start="15:9" pos:end="15:30"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">AVPacket</name></type> <name pos:start="15:18" pos:end="15:24">tmp_pkt</name> <init pos:start="15:26" pos:end="15:30">= <expr pos:start="15:28" pos:end="15:30"><block pos:start="15:28" pos:end="15:30">{<expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:65">/* the muxer is not initialized yet, buffer the packet */</comment>

        <if_stmt pos:start="19:9" pos:end="43:9"><if pos:start="19:9" pos:end="43:9">if <condition pos:start="19:12" pos:end="19:46">(<expr pos:start="19:13" pos:end="19:45"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:45"><name pos:start="19:14" pos:end="19:26">av_fifo_space</name><argument_list pos:start="19:27" pos:end="19:45">(<argument pos:start="19:28" pos:end="19:44"><expr pos:start="19:28" pos:end="19:44"><name pos:start="19:28" pos:end="19:44"><name pos:start="19:28" pos:end="19:30">ost</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:44">muxing_queue</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:48" pos:end="43:9">{<block_content pos:start="21:13" pos:end="41:32">

            <decl_stmt pos:start="21:13" pos:end="23:61"><decl pos:start="21:13" pos:end="23:60"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:24">new_size</name> <init pos:start="21:26" pos:end="23:60">= <expr pos:start="21:28" pos:end="23:60"><call pos:start="21:28" pos:end="23:60"><name pos:start="21:28" pos:end="21:32">FFMIN</name><argument_list pos:start="21:33" pos:end="23:60">(<argument pos:start="21:34" pos:end="21:68"><expr pos:start="21:34" pos:end="21:68"><literal type="number" pos:start="21:34" pos:end="21:34">2</literal> <operator pos:start="21:36" pos:end="21:36">*</operator> <call pos:start="21:38" pos:end="21:68"><name pos:start="21:38" pos:end="21:49">av_fifo_size</name><argument_list pos:start="21:50" pos:end="21:68">(<argument pos:start="21:51" pos:end="21:67"><expr pos:start="21:51" pos:end="21:67"><name pos:start="21:51" pos:end="21:67"><name pos:start="21:51" pos:end="21:53">ost</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:67">muxing_queue</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="23:34" pos:end="23:59"><expr pos:start="23:34" pos:end="23:59"><name pos:start="23:34" pos:end="23:59"><name pos:start="23:34" pos:end="23:36">ost</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:59">max_muxing_queue_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="25:13" pos:end="35:13"><if pos:start="25:13" pos:end="35:13">if <condition pos:start="25:16" pos:end="25:60">(<expr pos:start="25:17" pos:end="25:59"><name pos:start="25:17" pos:end="25:24">new_size</name> <operator pos:start="25:26" pos:end="25:27">&lt;=</operator> <call pos:start="25:29" pos:end="25:59"><name pos:start="25:29" pos:end="25:40">av_fifo_size</name><argument_list pos:start="25:41" pos:end="25:59">(<argument pos:start="25:42" pos:end="25:58"><expr pos:start="25:42" pos:end="25:58"><name pos:start="25:42" pos:end="25:58"><name pos:start="25:42" pos:end="25:44">ost</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:58">muxing_queue</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:62" pos:end="35:13">{<block_content pos:start="27:17" pos:end="33:32">

                <expr_stmt pos:start="27:17" pos:end="31:56"><expr pos:start="27:17" pos:end="31:55"><call pos:start="27:17" pos:end="31:55"><name pos:start="27:17" pos:end="27:22">av_log</name><argument_list pos:start="27:23" pos:end="31:55">(<argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">NULL</name></expr></argument>, <argument pos:start="27:30" pos:end="27:41"><expr pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:41">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="29:24" pos:end="29:77"><expr pos:start="29:24" pos:end="29:77"><literal type="string" pos:start="29:24" pos:end="29:77">"Too many packets buffered for output stream %d:%d.\n"</literal></expr></argument>,

                       <argument pos:start="31:24" pos:end="31:38"><expr pos:start="31:24" pos:end="31:38"><name pos:start="31:24" pos:end="31:38"><name pos:start="31:24" pos:end="31:26">ost</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:38">file_index</name></name></expr></argument>, <argument pos:start="31:41" pos:end="31:54"><expr pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:43">ost</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:47">st</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:54">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:32"><expr pos:start="33:17" pos:end="33:31"><call pos:start="33:17" pos:end="33:31"><name pos:start="33:17" pos:end="33:28">exit_program</name><argument_list pos:start="33:29" pos:end="33:31">(<argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><literal type="number" pos:start="33:30" pos:end="33:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:64"><expr pos:start="37:13" pos:end="37:63"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:63"><name pos:start="37:19" pos:end="37:34">av_fifo_realloc2</name><argument_list pos:start="37:35" pos:end="37:63">(<argument pos:start="37:36" pos:end="37:52"><expr pos:start="37:36" pos:end="37:52"><name pos:start="37:36" pos:end="37:52"><name pos:start="37:36" pos:end="37:38">ost</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:52">muxing_queue</name></name></expr></argument>, <argument pos:start="37:55" pos:end="37:62"><expr pos:start="37:55" pos:end="37:62"><name pos:start="37:55" pos:end="37:62">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:32"><if pos:start="39:13" pos:end="41:32">if <condition pos:start="39:16" pos:end="39:24">(<expr pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:19">ret</name> <operator pos:start="39:21" pos:end="39:21">&lt;</operator> <literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:32"><block_content pos:start="41:17" pos:end="41:32">

                <expr_stmt pos:start="41:17" pos:end="41:32"><expr pos:start="41:17" pos:end="41:31"><call pos:start="41:17" pos:end="41:31"><name pos:start="41:17" pos:end="41:28">exit_program</name><argument_list pos:start="41:29" pos:end="41:31">(<argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:42"><name pos:start="45:15" pos:end="45:27">av_packet_ref</name><argument_list pos:start="45:28" pos:end="45:42">(<argument pos:start="45:29" pos:end="45:36"><expr pos:start="45:29" pos:end="45:36"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:36">tmp_pkt</name></expr></argument>, <argument pos:start="45:39" pos:end="45:41"><expr pos:start="45:39" pos:end="45:41"><name pos:start="45:39" pos:end="45:41">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:28"><if pos:start="47:9" pos:end="49:28">if <condition pos:start="47:12" pos:end="47:20">(<expr pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">&lt;</operator> <literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:28"><block_content pos:start="49:13" pos:end="49:28">

            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><call pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:24">exit_program</name><argument_list pos:start="49:25" pos:end="49:27">(<argument pos:start="49:26" pos:end="49:26"><expr pos:start="49:26" pos:end="49:26"><literal type="number" pos:start="49:26" pos:end="49:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:82"><expr pos:start="51:9" pos:end="51:81"><call pos:start="51:9" pos:end="51:81"><name pos:start="51:9" pos:end="51:29">av_fifo_generic_write</name><argument_list pos:start="51:30" pos:end="51:81">(<argument pos:start="51:31" pos:end="51:47"><expr pos:start="51:31" pos:end="51:47"><name pos:start="51:31" pos:end="51:47"><name pos:start="51:31" pos:end="51:33">ost</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:47">muxing_queue</name></name></expr></argument>, <argument pos:start="51:50" pos:end="51:57"><expr pos:start="51:50" pos:end="51:57"><operator pos:start="51:50" pos:end="51:50">&amp;</operator><name pos:start="51:51" pos:end="51:57">tmp_pkt</name></expr></argument>, <argument pos:start="51:60" pos:end="51:74"><expr pos:start="51:60" pos:end="51:74"><sizeof pos:start="51:60" pos:end="51:74">sizeof<argument_list pos:start="51:66" pos:end="51:74">(<argument pos:start="51:67" pos:end="51:73"><expr pos:start="51:67" pos:end="51:73"><name pos:start="51:67" pos:end="51:73">tmp_pkt</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="51:77" pos:end="51:80"><expr pos:start="51:77" pos:end="51:80"><name pos:start="51:77" pos:end="51:80">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:29"><expr pos:start="53:9" pos:end="53:28"><call pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:23">av_packet_unref</name><argument_list pos:start="53:24" pos:end="53:28">(<argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="65:45"><if pos:start="61:5" pos:end="65:45">if <condition pos:start="61:8" pos:end="63:82">(<expr pos:start="61:9" pos:end="63:81"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:33"><name pos:start="61:10" pos:end="61:11">st</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:21">codecpar</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:33">codec_type</name></name> <operator pos:start="61:35" pos:end="61:36">==</operator> <name pos:start="61:38" pos:end="61:55">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="61:57" pos:end="61:58">&amp;&amp;</operator> <name pos:start="61:60" pos:end="61:76">video_sync_method</name> <operator pos:start="61:78" pos:end="61:79">==</operator> <name pos:start="61:81" pos:end="61:90">VSYNC_DROP</name><operator pos:start="61:91" pos:end="61:91">)</operator> <operator pos:start="61:93" pos:end="61:94">||</operator>

        <operator pos:start="63:9" pos:end="63:9">(</operator><name pos:start="63:10" pos:end="63:33"><name pos:start="63:10" pos:end="63:11">st</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:21">codecpar</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:33">codec_type</name></name> <operator pos:start="63:35" pos:end="63:36">==</operator> <name pos:start="63:38" pos:end="63:55">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="63:57" pos:end="63:58">&amp;&amp;</operator> <name pos:start="63:60" pos:end="63:76">audio_sync_method</name> <operator pos:start="63:78" pos:end="63:78">&lt;</operator> <literal type="number" pos:start="63:80" pos:end="63:80">0</literal><operator pos:start="63:81" pos:end="63:81">)</operator></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:45"><block_content pos:start="65:9" pos:end="65:45">

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:11">pkt</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:16">pts</name></name> <operator pos:start="65:18" pos:end="65:18">=</operator> <name pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:22">pkt</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:27">dts</name></name> <operator pos:start="65:29" pos:end="65:29">=</operator> <name pos:start="65:31" pos:end="65:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="69:5" pos:end="81:7">/*

     * Audio encoders may split the packets --  #frames in != #packets out.

     * But there is no reordering, so we can limit the number of output packets

     * by simply dropping them here.

     * Counting encoded video frames needs to be done separately because of

     * reordering, see do_video_out()

     */</comment>

    <if_stmt pos:start="83:5" pos:end="95:5"><if pos:start="83:5" pos:end="95:5">if <condition pos:start="83:8" pos:end="83:82">(<expr pos:start="83:9" pos:end="83:81"><operator pos:start="83:9" pos:end="83:9">!</operator><operator pos:start="83:10" pos:end="83:10">(</operator><name pos:start="83:11" pos:end="83:34"><name pos:start="83:11" pos:end="83:12">st</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:22">codecpar</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:34">codec_type</name></name> <operator pos:start="83:36" pos:end="83:37">==</operator> <name pos:start="83:39" pos:end="83:56">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="83:58" pos:end="83:59">&amp;&amp;</operator> <name pos:start="83:61" pos:end="83:80"><name pos:start="83:61" pos:end="83:63">ost</name><operator pos:start="83:64" pos:end="83:65">-&gt;</operator><name pos:start="83:66" pos:end="83:80">encoding_needed</name></name><operator pos:start="83:81" pos:end="83:81">)</operator></expr>)</condition> <block pos:start="83:84" pos:end="95:5">{<block_content pos:start="85:9" pos:end="93:28">

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:49">(<expr pos:start="85:13" pos:end="85:48"><name pos:start="85:13" pos:end="85:29"><name pos:start="85:13" pos:end="85:15">ost</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:29">frame_number</name></name> <operator pos:start="85:31" pos:end="85:32">&gt;=</operator> <name pos:start="85:34" pos:end="85:48"><name pos:start="85:34" pos:end="85:36">ost</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:48">max_frames</name></name></expr>)</condition> <block pos:start="85:51" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:19">

            <expr_stmt pos:start="87:13" pos:end="87:33"><expr pos:start="87:13" pos:end="87:32"><call pos:start="87:13" pos:end="87:32"><name pos:start="87:13" pos:end="87:27">av_packet_unref</name><argument_list pos:start="87:28" pos:end="87:32">(<argument pos:start="87:29" pos:end="87:31"><expr pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:11">ost</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:25">frame_number</name></name><operator pos:start="93:26" pos:end="93:27">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="137:5"><if pos:start="97:5" pos:end="137:5">if <condition pos:start="97:8" pos:end="97:55">(<expr pos:start="97:9" pos:end="97:54"><name pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:10">st</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:20">codecpar</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:32">codec_type</name></name> <operator pos:start="97:34" pos:end="97:35">==</operator> <name pos:start="97:37" pos:end="97:54">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="97:57" pos:end="137:5">{<block_content pos:start="99:9" pos:end="135:9">

        <decl_stmt pos:start="99:9" pos:end="99:14"><decl pos:start="99:9" pos:end="99:13"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="103:52"><decl pos:start="101:9" pos:end="103:51"><type pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:15">uint8_t</name> <modifier pos:start="101:17" pos:end="101:17">*</modifier></type><name pos:start="101:18" pos:end="101:19">sd</name> <init pos:start="101:21" pos:end="103:51">= <expr pos:start="101:23" pos:end="103:51"><call pos:start="101:23" pos:end="103:51"><name pos:start="101:23" pos:end="101:45">av_packet_get_side_data</name><argument_list pos:start="101:46" pos:end="103:51">(<argument pos:start="101:47" pos:end="101:49"><expr pos:start="101:47" pos:end="101:49"><name pos:start="101:47" pos:end="101:49">pkt</name></expr></argument>, <argument pos:start="101:52" pos:end="101:76"><expr pos:start="101:52" pos:end="101:76"><name pos:start="101:52" pos:end="101:76">AV_PKT_DATA_QUALITY_STATS</name></expr></argument>,

                                              <argument pos:start="103:47" pos:end="103:50"><expr pos:start="103:47" pos:end="103:50"><name pos:start="103:47" pos:end="103:50">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:45"><expr pos:start="105:9" pos:end="105:44"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:11">ost</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:20">quality</name></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <ternary pos:start="105:24" pos:end="105:44"><condition pos:start="105:24" pos:end="105:27"><expr pos:start="105:24" pos:end="105:25"><name pos:start="105:24" pos:end="105:25">sd</name></expr> ?</condition><then pos:start="105:29" pos:end="105:39"> <expr pos:start="105:29" pos:end="105:39"><call pos:start="105:29" pos:end="105:39"><name pos:start="105:29" pos:end="105:35">AV_RL32</name><argument_list pos:start="105:36" pos:end="105:39">(<argument pos:start="105:37" pos:end="105:38"><expr pos:start="105:37" pos:end="105:38"><name pos:start="105:37" pos:end="105:38">sd</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="105:41" pos:end="105:44">: <expr pos:start="105:43" pos:end="105:44"><operator pos:start="105:43" pos:end="105:43">-</operator><literal type="number" pos:start="105:44" pos:end="105:44">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:59"><expr pos:start="107:9" pos:end="107:58"><name pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:11">ost</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:22">pict_type</name></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <ternary pos:start="107:26" pos:end="107:58"><condition pos:start="107:26" pos:end="107:29"><expr pos:start="107:26" pos:end="107:27"><name pos:start="107:26" pos:end="107:27">sd</name></expr> ?</condition><then pos:start="107:31" pos:end="107:35"> <expr pos:start="107:31" pos:end="107:35"><name pos:start="107:31" pos:end="107:35"><name pos:start="107:31" pos:end="107:32">sd</name><index pos:start="107:33" pos:end="107:35">[<expr pos:start="107:34" pos:end="107:34"><literal type="number" pos:start="107:34" pos:end="107:34">4</literal></expr>]</index></name></expr> </then><else pos:start="107:37" pos:end="107:58">: <expr pos:start="107:39" pos:end="107:58"><name pos:start="107:39" pos:end="107:58">AV_PICTURE_TYPE_NONE</name></expr></else></ternary></expr>;</expr_stmt>



        <for pos:start="111:9" pos:end="121:9">for <control pos:start="111:13" pos:end="111:54">(<init pos:start="111:14" pos:end="111:19"><expr pos:start="111:14" pos:end="111:18"><name pos:start="111:14" pos:end="111:14">i</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <literal type="number" pos:start="111:18" pos:end="111:18">0</literal></expr>;</init> <condition pos:start="111:21" pos:end="111:49"><expr pos:start="111:21" pos:end="111:48"><name pos:start="111:21" pos:end="111:21">i</name><operator pos:start="111:22" pos:end="111:22">&lt;</operator><call pos:start="111:23" pos:end="111:48"><name pos:start="111:23" pos:end="111:36">FF_ARRAY_ELEMS</name><argument_list pos:start="111:37" pos:end="111:48">(<argument pos:start="111:38" pos:end="111:47"><expr pos:start="111:38" pos:end="111:47"><name pos:start="111:38" pos:end="111:47"><name pos:start="111:38" pos:end="111:40">ost</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:47">error</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="111:51" pos:end="111:53"><expr pos:start="111:51" pos:end="111:53"><name pos:start="111:51" pos:end="111:51">i</name><operator pos:start="111:52" pos:end="111:53">++</operator></expr></incr>)</control> <block pos:start="111:56" pos:end="121:9">{<block_content pos:start="113:13" pos:end="119:35">

            <if_stmt pos:start="113:13" pos:end="119:35"><if pos:start="113:13" pos:end="115:54">if <condition pos:start="113:16" pos:end="113:32">(<expr pos:start="113:17" pos:end="113:31"><name pos:start="113:17" pos:end="113:18">sd</name> <operator pos:start="113:20" pos:end="113:21">&amp;&amp;</operator> <name pos:start="113:23" pos:end="113:23">i</name> <operator pos:start="113:25" pos:end="113:25">&lt;</operator> <name pos:start="113:27" pos:end="113:31"><name pos:start="113:27" pos:end="113:28">sd</name><index pos:start="113:29" pos:end="113:31">[<expr pos:start="113:30" pos:end="113:30"><literal type="number" pos:start="113:30" pos:end="113:30">5</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:54"><block_content pos:start="115:17" pos:end="115:54">

                <expr_stmt pos:start="115:17" pos:end="115:54"><expr pos:start="115:17" pos:end="115:53"><name pos:start="115:17" pos:end="115:29"><name pos:start="115:17" pos:end="115:19">ost</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:26">error</name><index pos:start="115:27" pos:end="115:29">[<expr pos:start="115:28" pos:end="115:28"><name pos:start="115:28" pos:end="115:28">i</name></expr>]</index></name> <operator pos:start="115:31" pos:end="115:31">=</operator> <call pos:start="115:33" pos:end="115:53"><name pos:start="115:33" pos:end="115:39">AV_RL64</name><argument_list pos:start="115:40" pos:end="115:53">(<argument pos:start="115:41" pos:end="115:52"><expr pos:start="115:41" pos:end="115:52"><name pos:start="115:41" pos:end="115:42">sd</name> <operator pos:start="115:44" pos:end="115:44">+</operator> <literal type="number" pos:start="115:46" pos:end="115:48">8</literal> <operator pos:start="115:48" pos:end="115:48">+</operator> <literal type="number" pos:start="115:50" pos:end="115:50">8</literal><operator pos:start="115:51" pos:end="115:51">*</operator><name pos:start="115:52" pos:end="115:52">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="117:13" pos:end="119:35">else<block type="pseudo" pos:start="119:17" pos:end="119:35"><block_content pos:start="119:17" pos:end="119:35">

                <expr_stmt pos:start="119:17" pos:end="119:35"><expr pos:start="119:17" pos:end="119:34"><name pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:19">ost</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:26">error</name><index pos:start="119:27" pos:end="119:29">[<expr pos:start="119:28" pos:end="119:28"><name pos:start="119:28" pos:end="119:28">i</name></expr>]</index></name> <operator pos:start="119:31" pos:end="119:31">=</operator> <operator pos:start="119:33" pos:end="119:33">-</operator><literal type="number" pos:start="119:34" pos:end="119:34">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="125:9" pos:end="135:9"><if pos:start="125:9" pos:end="135:9">if <condition pos:start="125:12" pos:end="125:47">(<expr pos:start="125:13" pos:end="125:46"><name pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:15">ost</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:27">frame_rate</name><operator pos:start="125:28" pos:end="125:28">.</operator><name pos:start="125:29" pos:end="125:31">num</name></name> <operator pos:start="125:33" pos:end="125:34">&amp;&amp;</operator> <name pos:start="125:36" pos:end="125:46"><name pos:start="125:36" pos:end="125:38">ost</name><operator pos:start="125:39" pos:end="125:40">-&gt;</operator><name pos:start="125:41" pos:end="125:46">is_cfr</name></name></expr>)</condition> <block pos:start="125:49" pos:end="135:9">{<block_content pos:start="127:13" pos:end="133:60">

            <if_stmt pos:start="127:13" pos:end="129:115"><if pos:start="127:13" pos:end="129:115">if <condition pos:start="127:16" pos:end="127:34">(<expr pos:start="127:17" pos:end="127:33"><name pos:start="127:17" pos:end="127:29"><name pos:start="127:17" pos:end="127:19">pkt</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:29">duration</name></name> <operator pos:start="127:31" pos:end="127:31">&gt;</operator> <literal type="number" pos:start="127:33" pos:end="127:33">0</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:115"><block_content pos:start="129:17" pos:end="129:115">

                <expr_stmt pos:start="129:17" pos:end="129:115"><expr pos:start="129:17" pos:end="129:114"><call pos:start="129:17" pos:end="129:114"><name pos:start="129:17" pos:end="129:22">av_log</name><argument_list pos:start="129:23" pos:end="129:114">(<argument pos:start="129:24" pos:end="129:27"><expr pos:start="129:24" pos:end="129:27"><name pos:start="129:24" pos:end="129:27">NULL</name></expr></argument>, <argument pos:start="129:30" pos:end="129:43"><expr pos:start="129:30" pos:end="129:43"><name pos:start="129:30" pos:end="129:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="129:46" pos:end="129:113"><expr pos:start="129:46" pos:end="129:113"><literal type="string" pos:start="129:46" pos:end="129:113">"Overriding packet duration by frame rate, this should not happen\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="131:13" pos:end="133:60"><expr pos:start="131:13" pos:end="133:59"><name pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:15">pkt</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:25">duration</name></name> <operator pos:start="131:27" pos:end="131:27">=</operator> <call pos:start="131:29" pos:end="133:59"><name pos:start="131:29" pos:end="131:40">av_rescale_q</name><argument_list pos:start="131:41" pos:end="133:59">(<argument pos:start="131:42" pos:end="131:42"><expr pos:start="131:42" pos:end="131:42"><literal type="number" pos:start="131:42" pos:end="131:42">1</literal></expr></argument>, <argument pos:start="131:45" pos:end="131:69"><expr pos:start="131:45" pos:end="131:69"><call pos:start="131:45" pos:end="131:69"><name pos:start="131:45" pos:end="131:52">av_inv_q</name><argument_list pos:start="131:53" pos:end="131:69">(<argument pos:start="131:54" pos:end="131:68"><expr pos:start="131:54" pos:end="131:68"><name pos:start="131:54" pos:end="131:68"><name pos:start="131:54" pos:end="131:56">ost</name><operator pos:start="131:57" pos:end="131:58">-&gt;</operator><name pos:start="131:59" pos:end="131:68">frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                         <argument pos:start="133:42" pos:end="133:58"><expr pos:start="133:42" pos:end="133:58"><name pos:start="133:42" pos:end="133:58"><name pos:start="133:42" pos:end="133:44">ost</name><operator pos:start="133:45" pos:end="133:46">-&gt;</operator><name pos:start="133:47" pos:end="133:58">mux_timebase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:69"><expr pos:start="141:5" pos:end="141:68"><call pos:start="141:5" pos:end="141:68"><name pos:start="141:5" pos:end="141:24">av_packet_rescale_ts</name><argument_list pos:start="141:25" pos:end="141:68">(<argument pos:start="141:26" pos:end="141:28"><expr pos:start="141:26" pos:end="141:28"><name pos:start="141:26" pos:end="141:28">pkt</name></expr></argument>, <argument pos:start="141:31" pos:end="141:47"><expr pos:start="141:31" pos:end="141:47"><name pos:start="141:31" pos:end="141:47"><name pos:start="141:31" pos:end="141:33">ost</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:47">mux_timebase</name></name></expr></argument>, <argument pos:start="141:50" pos:end="141:67"><expr pos:start="141:50" pos:end="141:67"><name pos:start="141:50" pos:end="141:67"><name pos:start="141:50" pos:end="141:52">ost</name><operator pos:start="141:53" pos:end="141:54">-&gt;</operator><name pos:start="141:55" pos:end="141:56">st</name><operator pos:start="141:57" pos:end="141:58">-&gt;</operator><name pos:start="141:59" pos:end="141:67">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="145:5" pos:end="213:5"><if pos:start="145:5" pos:end="213:5">if <condition pos:start="145:8" pos:end="145:50">(<expr pos:start="145:9" pos:end="145:49"><operator pos:start="145:9" pos:end="145:9">!</operator><operator pos:start="145:10" pos:end="145:10">(</operator><name pos:start="145:11" pos:end="145:27"><name pos:start="145:11" pos:end="145:11">s</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:20">oformat</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:27">flags</name></name> <operator pos:start="145:29" pos:end="145:29">&amp;</operator> <name pos:start="145:31" pos:end="145:48">AVFMT_NOTIMESTAMPS</name><operator pos:start="145:49" pos:end="145:49">)</operator></expr>)</condition> <block pos:start="145:52" pos:end="213:5">{<block_content pos:start="147:9" pos:end="211:9">

        <if_stmt pos:start="147:9" pos:end="167:9"><if pos:start="147:9" pos:end="167:9">if <condition pos:start="147:12" pos:end="151:32">(<expr pos:start="147:13" pos:end="151:31"><name pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:15">pkt</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:20">dts</name></name> <operator pos:start="147:22" pos:end="147:23">!=</operator> <name pos:start="147:25" pos:end="147:38">AV_NOPTS_VALUE</name> <operator pos:start="147:40" pos:end="147:41">&amp;&amp;</operator>

            <name pos:start="149:13" pos:end="149:20"><name pos:start="149:13" pos:end="149:15">pkt</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:20">pts</name></name> <operator pos:start="149:22" pos:end="149:23">!=</operator> <name pos:start="149:25" pos:end="149:38">AV_NOPTS_VALUE</name> <operator pos:start="149:40" pos:end="149:41">&amp;&amp;</operator>

            <name pos:start="151:13" pos:end="151:20"><name pos:start="151:13" pos:end="151:15">pkt</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:20">dts</name></name> <operator pos:start="151:22" pos:end="151:22">&gt;</operator> <name pos:start="151:24" pos:end="151:31"><name pos:start="151:24" pos:end="151:26">pkt</name><operator pos:start="151:27" pos:end="151:28">-&gt;</operator><name pos:start="151:29" pos:end="151:31">pts</name></name></expr>)</condition> <block pos:start="151:34" pos:end="167:9">{<block_content pos:start="153:13" pos:end="165:73">

            <expr_stmt pos:start="153:13" pos:end="157:52"><expr pos:start="153:13" pos:end="157:51"><call pos:start="153:13" pos:end="157:51"><name pos:start="153:13" pos:end="153:18">av_log</name><argument_list pos:start="153:19" pos:end="157:51">(<argument pos:start="153:20" pos:end="153:20"><expr pos:start="153:20" pos:end="153:20"><name pos:start="153:20" pos:end="153:20">s</name></expr></argument>, <argument pos:start="153:23" pos:end="153:36"><expr pos:start="153:23" pos:end="153:36"><name pos:start="153:23" pos:end="153:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="153:39" pos:end="153:122"><expr pos:start="153:39" pos:end="153:122"><literal type="string" pos:start="153:39" pos:end="153:54">"Invalid DTS: %"</literal><name pos:start="153:55" pos:end="153:60">PRId64</name><literal type="string" pos:start="153:61" pos:end="153:69">" PTS: %"</literal><name pos:start="153:70" pos:end="153:75">PRId64</name><literal type="string" pos:start="153:76" pos:end="153:122">" in output stream %d:%d, replacing by guess\n"</literal></expr></argument>,

                   <argument pos:start="155:20" pos:end="155:27"><expr pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:22">pkt</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:27">dts</name></name></expr></argument>, <argument pos:start="155:30" pos:end="155:37"><expr pos:start="155:30" pos:end="155:37"><name pos:start="155:30" pos:end="155:37"><name pos:start="155:30" pos:end="155:32">pkt</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:37">pts</name></name></expr></argument>,

                   <argument pos:start="157:20" pos:end="157:34"><expr pos:start="157:20" pos:end="157:34"><name pos:start="157:20" pos:end="157:34"><name pos:start="157:20" pos:end="157:22">ost</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:34">file_index</name></name></expr></argument>, <argument pos:start="157:37" pos:end="157:50"><expr pos:start="157:37" pos:end="157:50"><name pos:start="157:37" pos:end="157:50"><name pos:start="157:37" pos:end="157:39">ost</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:43">st</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:50">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="165:73"><expr pos:start="159:13" pos:end="165:72"><name pos:start="159:13" pos:end="159:20"><name pos:start="159:13" pos:end="159:15">pkt</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:20">pts</name></name> <operator pos:start="159:22" pos:end="159:22">=</operator>

            <name pos:start="161:13" pos:end="161:20"><name pos:start="161:13" pos:end="161:15">pkt</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:20">dts</name></name> <operator pos:start="161:22" pos:end="161:22">=</operator> <name pos:start="161:24" pos:end="161:31"><name pos:start="161:24" pos:end="161:26">pkt</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:31">pts</name></name> <operator pos:start="161:33" pos:end="161:33">+</operator> <name pos:start="161:35" pos:end="161:42"><name pos:start="161:35" pos:end="161:37">pkt</name><operator pos:start="161:38" pos:end="161:39">-&gt;</operator><name pos:start="161:40" pos:end="161:42">dts</name></name> <operator pos:start="161:44" pos:end="161:44">+</operator> <name pos:start="161:46" pos:end="161:62"><name pos:start="161:46" pos:end="161:48">ost</name><operator pos:start="161:49" pos:end="161:50">-&gt;</operator><name pos:start="161:51" pos:end="161:62">last_mux_dts</name></name> <operator pos:start="161:64" pos:end="161:64">+</operator> <literal type="number" pos:start="161:66" pos:end="163:22">1</literal>

                     <operator pos:start="163:22" pos:end="163:22">-</operator> <call pos:start="163:24" pos:end="163:72"><name pos:start="163:24" pos:end="163:29">FFMIN3</name><argument_list pos:start="163:30" pos:end="163:72">(<argument pos:start="163:31" pos:end="163:38"><expr pos:start="163:31" pos:end="163:38"><name pos:start="163:31" pos:end="163:38"><name pos:start="163:31" pos:end="163:33">pkt</name><operator pos:start="163:34" pos:end="163:35">-&gt;</operator><name pos:start="163:36" pos:end="163:38">pts</name></name></expr></argument>, <argument pos:start="163:41" pos:end="163:48"><expr pos:start="163:41" pos:end="163:48"><name pos:start="163:41" pos:end="163:48"><name pos:start="163:41" pos:end="163:43">pkt</name><operator pos:start="163:44" pos:end="163:45">-&gt;</operator><name pos:start="163:46" pos:end="163:48">dts</name></name></expr></argument>, <argument pos:start="163:51" pos:end="163:71"><expr pos:start="163:51" pos:end="163:71"><name pos:start="163:51" pos:end="163:67"><name pos:start="163:51" pos:end="163:53">ost</name><operator pos:start="163:54" pos:end="163:55">-&gt;</operator><name pos:start="163:56" pos:end="163:67">last_mux_dts</name></name> <operator pos:start="163:69" pos:end="163:69">+</operator> <literal type="number" pos:start="163:71" pos:end="163:71">1</literal></expr></argument>)</argument_list></call>

                     <operator pos:start="165:22" pos:end="165:22">-</operator> <call pos:start="165:24" pos:end="165:72"><name pos:start="165:24" pos:end="165:29">FFMAX3</name><argument_list pos:start="165:30" pos:end="165:72">(<argument pos:start="165:31" pos:end="165:38"><expr pos:start="165:31" pos:end="165:38"><name pos:start="165:31" pos:end="165:38"><name pos:start="165:31" pos:end="165:33">pkt</name><operator pos:start="165:34" pos:end="165:35">-&gt;</operator><name pos:start="165:36" pos:end="165:38">pts</name></name></expr></argument>, <argument pos:start="165:41" pos:end="165:48"><expr pos:start="165:41" pos:end="165:48"><name pos:start="165:41" pos:end="165:48"><name pos:start="165:41" pos:end="165:43">pkt</name><operator pos:start="165:44" pos:end="165:45">-&gt;</operator><name pos:start="165:46" pos:end="165:48">dts</name></name></expr></argument>, <argument pos:start="165:51" pos:end="165:71"><expr pos:start="165:51" pos:end="165:71"><name pos:start="165:51" pos:end="165:67"><name pos:start="165:51" pos:end="165:53">ost</name><operator pos:start="165:54" pos:end="165:55">-&gt;</operator><name pos:start="165:56" pos:end="165:67">last_mux_dts</name></name> <operator pos:start="165:69" pos:end="165:69">+</operator> <literal type="number" pos:start="165:71" pos:end="165:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="169:9" pos:end="211:9"><if pos:start="169:9" pos:end="211:9">if <condition pos:start="169:12" pos:end="175:48">(<expr pos:start="169:13" pos:end="175:47"><operator pos:start="169:13" pos:end="169:13">(</operator><name pos:start="169:14" pos:end="169:37"><name pos:start="169:14" pos:end="169:15">st</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:25">codecpar</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:37">codec_type</name></name> <operator pos:start="169:39" pos:end="169:40">==</operator> <name pos:start="169:42" pos:end="169:59">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="169:61" pos:end="169:62">||</operator> <name pos:start="169:64" pos:end="169:87"><name pos:start="169:64" pos:end="169:65">st</name><operator pos:start="169:66" pos:end="169:67">-&gt;</operator><name pos:start="169:68" pos:end="169:75">codecpar</name><operator pos:start="169:76" pos:end="169:77">-&gt;</operator><name pos:start="169:78" pos:end="169:87">codec_type</name></name> <operator pos:start="169:89" pos:end="169:90">==</operator> <name pos:start="169:92" pos:end="169:109">AVMEDIA_TYPE_VIDEO</name><operator pos:start="169:110" pos:end="169:110">)</operator> <operator pos:start="169:112" pos:end="169:113">&amp;&amp;</operator>

            <name pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:15">pkt</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:20">dts</name></name> <operator pos:start="171:22" pos:end="171:23">!=</operator> <name pos:start="171:25" pos:end="171:38">AV_NOPTS_VALUE</name> <operator pos:start="171:40" pos:end="171:41">&amp;&amp;</operator>

            <operator pos:start="173:13" pos:end="173:13">!</operator><operator pos:start="173:14" pos:end="173:14">(</operator><name pos:start="173:15" pos:end="173:36"><name pos:start="173:15" pos:end="173:16">st</name><operator pos:start="173:17" pos:end="173:18">-&gt;</operator><name pos:start="173:19" pos:end="173:26">codecpar</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:36">codec_id</name></name> <operator pos:start="173:38" pos:end="173:39">==</operator> <name pos:start="173:41" pos:end="173:55">AV_CODEC_ID_VP9</name> <operator pos:start="173:57" pos:end="173:58">&amp;&amp;</operator> <name pos:start="173:60" pos:end="173:75"><name pos:start="173:60" pos:end="173:62">ost</name><operator pos:start="173:63" pos:end="173:64">-&gt;</operator><name pos:start="173:65" pos:end="173:75">stream_copy</name></name><operator pos:start="173:76" pos:end="173:76">)</operator> <operator pos:start="173:78" pos:end="173:79">&amp;&amp;</operator>

            <name pos:start="175:13" pos:end="175:29"><name pos:start="175:13" pos:end="175:15">ost</name><operator pos:start="175:16" pos:end="175:17">-&gt;</operator><name pos:start="175:18" pos:end="175:29">last_mux_dts</name></name> <operator pos:start="175:31" pos:end="175:32">!=</operator> <name pos:start="175:34" pos:end="175:47">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="175:50" pos:end="211:9">{<block_content pos:start="177:13" pos:end="209:13">

            <decl_stmt pos:start="177:13" pos:end="177:88"><decl pos:start="177:13" pos:end="177:87"><type pos:start="177:13" pos:end="177:19"><name pos:start="177:13" pos:end="177:19">int64_t</name></type> <name pos:start="177:21" pos:end="177:23">max</name> <init pos:start="177:25" pos:end="177:87">= <expr pos:start="177:27" pos:end="177:87"><name pos:start="177:27" pos:end="177:43"><name pos:start="177:27" pos:end="177:29">ost</name><operator pos:start="177:30" pos:end="177:31">-&gt;</operator><name pos:start="177:32" pos:end="177:43">last_mux_dts</name></name> <operator pos:start="177:45" pos:end="177:45">+</operator> <operator pos:start="177:47" pos:end="177:47">!</operator><operator pos:start="177:48" pos:end="177:48">(</operator><name pos:start="177:49" pos:end="177:65"><name pos:start="177:49" pos:end="177:49">s</name><operator pos:start="177:50" pos:end="177:51">-&gt;</operator><name pos:start="177:52" pos:end="177:58">oformat</name><operator pos:start="177:59" pos:end="177:60">-&gt;</operator><name pos:start="177:61" pos:end="177:65">flags</name></name> <operator pos:start="177:67" pos:end="177:67">&amp;</operator> <name pos:start="177:69" pos:end="177:86">AVFMT_TS_NONSTRICT</name><operator pos:start="177:87" pos:end="177:87">)</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="179:13" pos:end="209:13"><if pos:start="179:13" pos:end="209:13">if <condition pos:start="179:16" pos:end="179:31">(<expr pos:start="179:17" pos:end="179:30"><name pos:start="179:17" pos:end="179:24"><name pos:start="179:17" pos:end="179:19">pkt</name><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:24">dts</name></name> <operator pos:start="179:26" pos:end="179:26">&lt;</operator> <name pos:start="179:28" pos:end="179:30">max</name></expr>)</condition> <block pos:start="179:33" pos:end="209:13">{<block_content pos:start="181:17" pos:end="207:31">

                <decl_stmt pos:start="181:17" pos:end="181:132"><decl pos:start="181:17" pos:end="181:131"><type pos:start="181:17" pos:end="181:19"><name pos:start="181:17" pos:end="181:19">int</name></type> <name pos:start="181:21" pos:end="181:28">loglevel</name> <init pos:start="181:30" pos:end="181:131">= <expr pos:start="181:32" pos:end="181:131"><ternary pos:start="181:32" pos:end="181:131"><condition pos:start="181:32" pos:end="181:101"><expr pos:start="181:32" pos:end="181:99"><name pos:start="181:32" pos:end="181:34">max</name> <operator pos:start="181:36" pos:end="181:36">-</operator> <name pos:start="181:38" pos:end="181:45"><name pos:start="181:38" pos:end="181:40">pkt</name><operator pos:start="181:41" pos:end="181:42">-&gt;</operator><name pos:start="181:43" pos:end="181:45">dts</name></name> <operator pos:start="181:47" pos:end="181:47">&gt;</operator> <literal type="number" pos:start="181:49" pos:end="181:49">2</literal> <operator pos:start="181:51" pos:end="181:52">||</operator> <name pos:start="181:54" pos:end="181:77"><name pos:start="181:54" pos:end="181:55">st</name><operator pos:start="181:56" pos:end="181:57">-&gt;</operator><name pos:start="181:58" pos:end="181:65">codecpar</name><operator pos:start="181:66" pos:end="181:67">-&gt;</operator><name pos:start="181:68" pos:end="181:77">codec_type</name></name> <operator pos:start="181:79" pos:end="181:80">==</operator> <name pos:start="181:82" pos:end="181:99">AVMEDIA_TYPE_VIDEO</name></expr> ?</condition><then pos:start="181:103" pos:end="181:116"> <expr pos:start="181:103" pos:end="181:116"><name pos:start="181:103" pos:end="181:116">AV_LOG_WARNING</name></expr> </then><else pos:start="181:118" pos:end="181:131">: <expr pos:start="181:120" pos:end="181:131"><name pos:start="181:120" pos:end="181:131">AV_LOG_DEBUG</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="183:17" pos:end="187:85"><expr pos:start="183:17" pos:end="187:84"><call pos:start="183:17" pos:end="187:84"><name pos:start="183:17" pos:end="183:22">av_log</name><argument_list pos:start="183:23" pos:end="187:84">(<argument pos:start="183:24" pos:end="183:24"><expr pos:start="183:24" pos:end="183:24"><name pos:start="183:24" pos:end="183:24">s</name></expr></argument>, <argument pos:start="183:27" pos:end="183:34"><expr pos:start="183:27" pos:end="183:34"><name pos:start="183:27" pos:end="183:34">loglevel</name></expr></argument>, <argument pos:start="183:37" pos:end="185:73"><expr pos:start="183:37" pos:end="185:73"><literal type="string" pos:start="183:37" pos:end="183:74">"Non-monotonous DTS in output stream "</literal>

                       <literal type="string" pos:start="185:24" pos:end="185:43">"%d:%d; previous: %"</literal><name pos:start="185:44" pos:end="185:49">PRId64</name><literal type="string" pos:start="185:50" pos:end="185:63">", current: %"</literal><name pos:start="185:64" pos:end="185:69">PRId64</name><literal type="string" pos:start="185:70" pos:end="185:73">"; "</literal></expr></argument>,

                       <argument pos:start="187:24" pos:end="187:38"><expr pos:start="187:24" pos:end="187:38"><name pos:start="187:24" pos:end="187:38"><name pos:start="187:24" pos:end="187:26">ost</name><operator pos:start="187:27" pos:end="187:28">-&gt;</operator><name pos:start="187:29" pos:end="187:38">file_index</name></name></expr></argument>, <argument pos:start="187:41" pos:end="187:54"><expr pos:start="187:41" pos:end="187:54"><name pos:start="187:41" pos:end="187:54"><name pos:start="187:41" pos:end="187:43">ost</name><operator pos:start="187:44" pos:end="187:45">-&gt;</operator><name pos:start="187:46" pos:end="187:47">st</name><operator pos:start="187:48" pos:end="187:49">-&gt;</operator><name pos:start="187:50" pos:end="187:54">index</name></name></expr></argument>, <argument pos:start="187:57" pos:end="187:73"><expr pos:start="187:57" pos:end="187:73"><name pos:start="187:57" pos:end="187:73"><name pos:start="187:57" pos:end="187:59">ost</name><operator pos:start="187:60" pos:end="187:61">-&gt;</operator><name pos:start="187:62" pos:end="187:73">last_mux_dts</name></name></expr></argument>, <argument pos:start="187:76" pos:end="187:83"><expr pos:start="187:76" pos:end="187:83"><name pos:start="187:76" pos:end="187:83"><name pos:start="187:76" pos:end="187:78">pkt</name><operator pos:start="187:79" pos:end="187:80">-&gt;</operator><name pos:start="187:81" pos:end="187:83">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="189:17" pos:end="195:17"><if pos:start="189:17" pos:end="195:17">if <condition pos:start="189:20" pos:end="189:34">(<expr pos:start="189:21" pos:end="189:33"><name pos:start="189:21" pos:end="189:33">exit_on_error</name></expr>)</condition> <block pos:start="189:36" pos:end="195:17">{<block_content pos:start="191:21" pos:end="193:36">

                    <expr_stmt pos:start="191:21" pos:end="191:62"><expr pos:start="191:21" pos:end="191:61"><call pos:start="191:21" pos:end="191:61"><name pos:start="191:21" pos:end="191:26">av_log</name><argument_list pos:start="191:27" pos:end="191:61">(<argument pos:start="191:28" pos:end="191:31"><expr pos:start="191:28" pos:end="191:31"><name pos:start="191:28" pos:end="191:31">NULL</name></expr></argument>, <argument pos:start="191:34" pos:end="191:45"><expr pos:start="191:34" pos:end="191:45"><name pos:start="191:34" pos:end="191:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="191:48" pos:end="191:60"><expr pos:start="191:48" pos:end="191:60"><literal type="string" pos:start="191:48" pos:end="191:60">"aborting.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:36"><expr pos:start="193:21" pos:end="193:35"><call pos:start="193:21" pos:end="193:35"><name pos:start="193:21" pos:end="193:32">exit_program</name><argument_list pos:start="193:33" pos:end="193:35">(<argument pos:start="193:34" pos:end="193:34"><expr pos:start="193:34" pos:end="193:34"><literal type="number" pos:start="193:34" pos:end="193:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="197:17" pos:end="201:28"><expr pos:start="197:17" pos:end="201:27"><call pos:start="197:17" pos:end="201:27"><name pos:start="197:17" pos:end="197:22">av_log</name><argument_list pos:start="197:23" pos:end="201:27">(<argument pos:start="197:24" pos:end="197:24"><expr pos:start="197:24" pos:end="197:24"><name pos:start="197:24" pos:end="197:24">s</name></expr></argument>, <argument pos:start="197:27" pos:end="197:34"><expr pos:start="197:27" pos:end="197:34"><name pos:start="197:27" pos:end="197:34">loglevel</name></expr></argument>, <argument pos:start="197:37" pos:end="199:70"><expr pos:start="197:37" pos:end="199:70"><literal type="string" pos:start="197:37" pos:end="197:51">"changing to %"</literal><name pos:start="197:52" pos:end="197:57">PRId64</name><literal type="string" pos:start="197:58" pos:end="197:77">". This may result "</literal>

                       <literal type="string" pos:start="199:24" pos:end="199:70">"in incorrect timestamps in the output file.\n"</literal></expr></argument>,

                       <argument pos:start="201:24" pos:end="201:26"><expr pos:start="201:24" pos:end="201:26"><name pos:start="201:24" pos:end="201:26">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="203:17" pos:end="205:52"><if pos:start="203:17" pos:end="205:52">if <condition pos:start="203:20" pos:end="203:41">(<expr pos:start="203:21" pos:end="203:40"><name pos:start="203:21" pos:end="203:28"><name pos:start="203:21" pos:end="203:23">pkt</name><operator pos:start="203:24" pos:end="203:25">-&gt;</operator><name pos:start="203:26" pos:end="203:28">pts</name></name> <operator pos:start="203:30" pos:end="203:31">&gt;=</operator> <name pos:start="203:33" pos:end="203:40"><name pos:start="203:33" pos:end="203:35">pkt</name><operator pos:start="203:36" pos:end="203:37">-&gt;</operator><name pos:start="203:38" pos:end="203:40">dts</name></name></expr>)</condition><block type="pseudo" pos:start="205:21" pos:end="205:52"><block_content pos:start="205:21" pos:end="205:52">

                    <expr_stmt pos:start="205:21" pos:end="205:52"><expr pos:start="205:21" pos:end="205:51"><name pos:start="205:21" pos:end="205:28"><name pos:start="205:21" pos:end="205:23">pkt</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:28">pts</name></name> <operator pos:start="205:30" pos:end="205:30">=</operator> <call pos:start="205:32" pos:end="205:51"><name pos:start="205:32" pos:end="205:36">FFMAX</name><argument_list pos:start="205:37" pos:end="205:51">(<argument pos:start="205:38" pos:end="205:45"><expr pos:start="205:38" pos:end="205:45"><name pos:start="205:38" pos:end="205:45"><name pos:start="205:38" pos:end="205:40">pkt</name><operator pos:start="205:41" pos:end="205:42">-&gt;</operator><name pos:start="205:43" pos:end="205:45">pts</name></name></expr></argument>, <argument pos:start="205:48" pos:end="205:50"><expr pos:start="205:48" pos:end="205:50"><name pos:start="205:48" pos:end="205:50">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:31"><expr pos:start="207:17" pos:end="207:30"><name pos:start="207:17" pos:end="207:24"><name pos:start="207:17" pos:end="207:19">pkt</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:24">dts</name></name> <operator pos:start="207:26" pos:end="207:26">=</operator> <name pos:start="207:28" pos:end="207:30">max</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:33"><expr pos:start="215:5" pos:end="215:32"><name pos:start="215:5" pos:end="215:21"><name pos:start="215:5" pos:end="215:7">ost</name><operator pos:start="215:8" pos:end="215:9">-&gt;</operator><name pos:start="215:10" pos:end="215:21">last_mux_dts</name></name> <operator pos:start="215:23" pos:end="215:23">=</operator> <name pos:start="215:25" pos:end="215:32"><name pos:start="215:25" pos:end="215:27">pkt</name><operator pos:start="215:28" pos:end="215:29">-&gt;</operator><name pos:start="215:30" pos:end="215:32">dts</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:32"><expr pos:start="219:5" pos:end="219:31"><name pos:start="219:5" pos:end="219:18"><name pos:start="219:5" pos:end="219:7">ost</name><operator pos:start="219:8" pos:end="219:9">-&gt;</operator><name pos:start="219:10" pos:end="219:18">data_size</name></name> <operator pos:start="219:20" pos:end="219:21">+=</operator> <name pos:start="219:23" pos:end="219:31"><name pos:start="219:23" pos:end="219:25">pkt</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:31">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:27"><expr pos:start="221:5" pos:end="221:26"><name pos:start="221:5" pos:end="221:24"><name pos:start="221:5" pos:end="221:7">ost</name><operator pos:start="221:8" pos:end="221:9">-&gt;</operator><name pos:start="221:10" pos:end="221:24">packets_written</name></name><operator pos:start="221:25" pos:end="221:26">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:35"><expr pos:start="225:5" pos:end="225:34"><name pos:start="225:5" pos:end="225:21"><name pos:start="225:5" pos:end="225:7">pkt</name><operator pos:start="225:8" pos:end="225:9">-&gt;</operator><name pos:start="225:10" pos:end="225:21">stream_index</name></name> <operator pos:start="225:23" pos:end="225:23">=</operator> <name pos:start="225:25" pos:end="225:34"><name pos:start="225:25" pos:end="225:27">ost</name><operator pos:start="225:28" pos:end="225:29">-&gt;</operator><name pos:start="225:30" pos:end="225:34">index</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="229:5" pos:end="245:5"><if pos:start="229:5" pos:end="245:5">if <condition pos:start="229:8" pos:end="229:17">(<expr pos:start="229:9" pos:end="229:16"><name pos:start="229:9" pos:end="229:16">debug_ts</name></expr>)</condition> <block pos:start="229:19" pos:end="245:5">{<block_content pos:start="231:9" pos:end="243:16">

        <expr_stmt pos:start="231:9" pos:end="243:16"><expr pos:start="231:9" pos:end="243:15"><call pos:start="231:9" pos:end="243:15"><name pos:start="231:9" pos:end="231:14">av_log</name><argument_list pos:start="231:15" pos:end="243:15">(<argument pos:start="231:16" pos:end="231:19"><expr pos:start="231:16" pos:end="231:19"><name pos:start="231:16" pos:end="231:19">NULL</name></expr></argument>, <argument pos:start="231:22" pos:end="231:32"><expr pos:start="231:22" pos:end="231:32"><name pos:start="231:22" pos:end="231:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="231:35" pos:end="233:81"><expr pos:start="231:35" pos:end="233:81"><literal type="string" pos:start="231:35" pos:end="231:53">"muxer &lt;- type:%s "</literal>

                <literal type="string" pos:start="233:17" pos:end="233:81">"pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s size:%d\n"</literal></expr></argument>,

                <argument pos:start="235:17" pos:end="235:66"><expr pos:start="235:17" pos:end="235:66"><call pos:start="235:17" pos:end="235:66"><name pos:start="235:17" pos:end="235:40">av_get_media_type_string</name><argument_list pos:start="235:41" pos:end="235:66">(<argument pos:start="235:42" pos:end="235:65"><expr pos:start="235:42" pos:end="235:65"><name pos:start="235:42" pos:end="235:65"><name pos:start="235:42" pos:end="235:44">ost</name><operator pos:start="235:45" pos:end="235:46">-&gt;</operator><name pos:start="235:47" pos:end="235:53">enc_ctx</name><operator pos:start="235:54" pos:end="235:55">-&gt;</operator><name pos:start="235:56" pos:end="235:65">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="237:17" pos:end="237:35"><expr pos:start="237:17" pos:end="237:35"><call pos:start="237:17" pos:end="237:35"><name pos:start="237:17" pos:end="237:25">av_ts2str</name><argument_list pos:start="237:26" pos:end="237:35">(<argument pos:start="237:27" pos:end="237:34"><expr pos:start="237:27" pos:end="237:34"><name pos:start="237:27" pos:end="237:34"><name pos:start="237:27" pos:end="237:29">pkt</name><operator pos:start="237:30" pos:end="237:31">-&gt;</operator><name pos:start="237:32" pos:end="237:34">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="237:38" pos:end="237:81"><expr pos:start="237:38" pos:end="237:81"><call pos:start="237:38" pos:end="237:81"><name pos:start="237:38" pos:end="237:50">av_ts2timestr</name><argument_list pos:start="237:51" pos:end="237:81">(<argument pos:start="237:52" pos:end="237:59"><expr pos:start="237:52" pos:end="237:59"><name pos:start="237:52" pos:end="237:59"><name pos:start="237:52" pos:end="237:54">pkt</name><operator pos:start="237:55" pos:end="237:56">-&gt;</operator><name pos:start="237:57" pos:end="237:59">pts</name></name></expr></argument>, <argument pos:start="237:62" pos:end="237:80"><expr pos:start="237:62" pos:end="237:80"><operator pos:start="237:62" pos:end="237:62">&amp;</operator><name pos:start="237:63" pos:end="237:80"><name pos:start="237:63" pos:end="237:65">ost</name><operator pos:start="237:66" pos:end="237:67">-&gt;</operator><name pos:start="237:68" pos:end="237:69">st</name><operator pos:start="237:70" pos:end="237:71">-&gt;</operator><name pos:start="237:72" pos:end="237:80">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="239:17" pos:end="239:35"><expr pos:start="239:17" pos:end="239:35"><call pos:start="239:17" pos:end="239:35"><name pos:start="239:17" pos:end="239:25">av_ts2str</name><argument_list pos:start="239:26" pos:end="239:35">(<argument pos:start="239:27" pos:end="239:34"><expr pos:start="239:27" pos:end="239:34"><name pos:start="239:27" pos:end="239:34"><name pos:start="239:27" pos:end="239:29">pkt</name><operator pos:start="239:30" pos:end="239:31">-&gt;</operator><name pos:start="239:32" pos:end="239:34">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="239:38" pos:end="239:81"><expr pos:start="239:38" pos:end="239:81"><call pos:start="239:38" pos:end="239:81"><name pos:start="239:38" pos:end="239:50">av_ts2timestr</name><argument_list pos:start="239:51" pos:end="239:81">(<argument pos:start="239:52" pos:end="239:59"><expr pos:start="239:52" pos:end="239:59"><name pos:start="239:52" pos:end="239:59"><name pos:start="239:52" pos:end="239:54">pkt</name><operator pos:start="239:55" pos:end="239:56">-&gt;</operator><name pos:start="239:57" pos:end="239:59">dts</name></name></expr></argument>, <argument pos:start="239:62" pos:end="239:80"><expr pos:start="239:62" pos:end="239:80"><operator pos:start="239:62" pos:end="239:62">&amp;</operator><name pos:start="239:63" pos:end="239:80"><name pos:start="239:63" pos:end="239:65">ost</name><operator pos:start="239:66" pos:end="239:67">-&gt;</operator><name pos:start="239:68" pos:end="239:69">st</name><operator pos:start="239:70" pos:end="239:71">-&gt;</operator><name pos:start="239:72" pos:end="239:80">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="241:17" pos:end="241:25"><expr pos:start="241:17" pos:end="241:25"><name pos:start="241:17" pos:end="241:25"><name pos:start="241:17" pos:end="241:19">pkt</name><operator pos:start="241:20" pos:end="241:21">-&gt;</operator><name pos:start="241:22" pos:end="241:25">size</name></name></expr></argument>

              )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:45"><expr pos:start="249:5" pos:end="249:44"><name pos:start="249:5" pos:end="249:7">ret</name> <operator pos:start="249:9" pos:end="249:9">=</operator> <call pos:start="249:11" pos:end="249:44"><name pos:start="249:11" pos:end="249:36">av_interleaved_write_frame</name><argument_list pos:start="249:37" pos:end="249:44">(<argument pos:start="249:38" pos:end="249:38"><expr pos:start="249:38" pos:end="249:38"><name pos:start="249:38" pos:end="249:38">s</name></expr></argument>, <argument pos:start="249:41" pos:end="249:43"><expr pos:start="249:41" pos:end="249:43"><name pos:start="249:41" pos:end="249:43">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="259:5"><if pos:start="251:5" pos:end="259:5">if <condition pos:start="251:8" pos:end="251:16">(<expr pos:start="251:9" pos:end="251:15"><name pos:start="251:9" pos:end="251:11">ret</name> <operator pos:start="251:13" pos:end="251:13">&lt;</operator> <literal type="number" pos:start="251:15" pos:end="251:15">0</literal></expr>)</condition> <block pos:start="251:18" pos:end="259:5">{<block_content pos:start="253:9" pos:end="257:91">

        <expr_stmt pos:start="253:9" pos:end="253:57"><expr pos:start="253:9" pos:end="253:56"><call pos:start="253:9" pos:end="253:56"><name pos:start="253:9" pos:end="253:19">print_error</name><argument_list pos:start="253:20" pos:end="253:56">(<argument pos:start="253:21" pos:end="253:50"><expr pos:start="253:21" pos:end="253:50"><literal type="string" pos:start="253:21" pos:end="253:50">"av_interleaved_write_frame()"</literal></expr></argument>, <argument pos:start="253:53" pos:end="253:55"><expr pos:start="253:53" pos:end="253:55"><name pos:start="253:53" pos:end="253:55">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:29"><expr pos:start="255:9" pos:end="255:28"><name pos:start="255:9" pos:end="255:24">main_return_code</name> <operator pos:start="255:26" pos:end="255:26">=</operator> <literal type="number" pos:start="255:28" pos:end="255:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:91"><expr pos:start="257:9" pos:end="257:90"><call pos:start="257:9" pos:end="257:90"><name pos:start="257:9" pos:end="257:32">close_all_output_streams</name><argument_list pos:start="257:33" pos:end="257:90">(<argument pos:start="257:34" pos:end="257:36"><expr pos:start="257:34" pos:end="257:36"><name pos:start="257:34" pos:end="257:36">ost</name></expr></argument>, <argument pos:start="257:39" pos:end="257:71"><expr pos:start="257:39" pos:end="257:71"><name pos:start="257:39" pos:end="257:52">MUXER_FINISHED</name> <operator pos:start="257:54" pos:end="257:54">|</operator> <name pos:start="257:56" pos:end="257:71">ENCODER_FINISHED</name></expr></argument>, <argument pos:start="257:74" pos:end="257:89"><expr pos:start="257:74" pos:end="257:89"><name pos:start="257:74" pos:end="257:89">ENCODER_FINISHED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:25"><expr pos:start="261:5" pos:end="261:24"><call pos:start="261:5" pos:end="261:24"><name pos:start="261:5" pos:end="261:19">av_packet_unref</name><argument_list pos:start="261:20" pos:end="261:24">(<argument pos:start="261:21" pos:end="261:23"><expr pos:start="261:21" pos:end="261:23"><name pos:start="261:21" pos:end="261:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
