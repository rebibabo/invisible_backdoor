<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26735.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">qxl_add_memslot</name><parameter_list pos:start="1:28" pos:end="3:47">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:40">PCIQXLDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">d</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:61">slot_id</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:71">uint64_t</name></type> <name pos:start="1:73" pos:end="1:77">delta</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:40">qxl_async_io</name></type> <name pos:start="3:42" pos:end="3:46">async</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="145:1">{<block_content pos:start="7:5" pos:end="143:39">

    <decl_stmt pos:start="7:5" pos:end="15:6"><decl pos:start="7:5" pos:end="15:5"><type pos:start="7:5" pos:end="7:20"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:20">int</name></type> <name pos:start="7:22" pos:end="7:30"><name pos:start="7:22" pos:end="7:28">regions</name><index pos:start="7:29" pos:end="7:30">[]</index></name> <init pos:start="7:32" pos:end="15:5">= <expr pos:start="7:34" pos:end="15:5"><block pos:start="7:34" pos:end="15:5">{

        <expr pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:27">QXL_RAM_RANGE_INDEX</name></expr>,

        <expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:28">QXL_VRAM_RANGE_INDEX</name></expr>,

        <expr pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:30">QXL_VRAM64_RANGE_INDEX</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:24">guest_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:22">guest_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:18">pci_region</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">pcibus_t</name></type> <name pos:start="23:14" pos:end="23:22">pci_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">pcibus_t</name></type> <name pos:start="25:14" pos:end="25:20">pci_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:24"><decl pos:start="27:5" pos:end="27:23"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">intptr_t</name></type> <name pos:start="27:14" pos:end="27:23">virt_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:25"><type pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:17">QXLDevMemSlot</name></type> <name pos:start="29:19" pos:end="29:25">memslot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:10"><decl pos:start="31:5" pos:end="31:9"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:70"><expr pos:start="35:5" pos:end="35:69"><name pos:start="35:5" pos:end="35:15">guest_start</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:69"><name pos:start="35:19" pos:end="35:29">le64_to_cpu</name><argument_list pos:start="35:30" pos:end="35:69">(<argument pos:start="35:31" pos:end="35:68"><expr pos:start="35:31" pos:end="35:68"><name pos:start="35:31" pos:end="35:53"><name pos:start="35:31" pos:end="35:31">d</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:44">guest_slots</name><index pos:start="35:45" pos:end="35:53">[<expr pos:start="35:46" pos:end="35:52"><name pos:start="35:46" pos:end="35:52">slot_id</name></expr>]</index></name><operator pos:start="35:54" pos:end="35:54">.</operator><name pos:start="35:55" pos:end="35:68"><name pos:start="35:55" pos:end="35:58">slot</name><operator pos:start="35:59" pos:end="35:59">.</operator><name pos:start="35:60" pos:end="35:68">mem_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:68"><expr pos:start="37:5" pos:end="37:67"><name pos:start="37:5" pos:end="37:13">guest_end</name>   <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:67"><name pos:start="37:19" pos:end="37:29">le64_to_cpu</name><argument_list pos:start="37:30" pos:end="37:67">(<argument pos:start="37:31" pos:end="37:66"><expr pos:start="37:31" pos:end="37:66"><name pos:start="37:31" pos:end="37:53"><name pos:start="37:31" pos:end="37:31">d</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:44">guest_slots</name><index pos:start="37:45" pos:end="37:53">[<expr pos:start="37:46" pos:end="37:52"><name pos:start="37:46" pos:end="37:52">slot_id</name></expr>]</index></name><operator pos:start="37:54" pos:end="37:54">.</operator><name pos:start="37:55" pos:end="37:66"><name pos:start="37:55" pos:end="37:58">slot</name><operator pos:start="37:59" pos:end="37:59">.</operator><name pos:start="37:60" pos:end="37:66">mem_end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:72"><expr pos:start="41:5" pos:end="41:71"><call pos:start="41:5" pos:end="41:71"><name pos:start="41:5" pos:end="41:31">trace_qxl_memslot_add_guest</name><argument_list pos:start="41:32" pos:end="41:71">(<argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:33">d</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:37">id</name></name></expr></argument>, <argument pos:start="41:40" pos:end="41:46"><expr pos:start="41:40" pos:end="41:46"><name pos:start="41:40" pos:end="41:46">slot_id</name></expr></argument>, <argument pos:start="41:49" pos:end="41:59"><expr pos:start="41:49" pos:end="41:59"><name pos:start="41:49" pos:end="41:59">guest_start</name></expr></argument>, <argument pos:start="41:62" pos:end="41:70"><expr pos:start="41:62" pos:end="41:70"><name pos:start="41:62" pos:end="41:70">guest_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><call pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:12">PANIC_ON</name><argument_list pos:start="45:13" pos:end="45:37">(<argument pos:start="45:14" pos:end="45:36"><expr pos:start="45:14" pos:end="45:36"><name pos:start="45:14" pos:end="45:20">slot_id</name> <operator pos:start="45:22" pos:end="45:23">&gt;=</operator> <name pos:start="45:25" pos:end="45:36">NUM_MEMSLOTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><call pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:12">PANIC_ON</name><argument_list pos:start="47:13" pos:end="47:37">(<argument pos:start="47:14" pos:end="47:36"><expr pos:start="47:14" pos:end="47:36"><name pos:start="47:14" pos:end="47:24">guest_start</name> <operator pos:start="47:26" pos:end="47:26">&gt;</operator> <name pos:start="47:28" pos:end="47:36">guest_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="51:5" pos:end="87:5">for <control pos:start="51:9" pos:end="51:45">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:40"><expr pos:start="51:17" pos:end="51:39"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <call pos:start="51:21" pos:end="51:39"><name pos:start="51:21" pos:end="51:30">ARRAY_SIZE</name><argument_list pos:start="51:31" pos:end="51:39">(<argument pos:start="51:32" pos:end="51:38"><expr pos:start="51:32" pos:end="51:38"><name pos:start="51:32" pos:end="51:38">regions</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><name pos:start="51:42" pos:end="51:42">i</name><operator pos:start="51:43" pos:end="51:44">++</operator></expr></incr>)</control> <block pos:start="51:47" pos:end="87:5">{<block_content pos:start="53:9" pos:end="85:14">

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:18">pci_region</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:31"><name pos:start="53:22" pos:end="53:28">regions</name><index pos:start="53:29" pos:end="53:31">[<expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:55"><expr pos:start="55:9" pos:end="55:54"><name pos:start="55:9" pos:end="55:17">pci_start</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:49"><name pos:start="55:21" pos:end="55:21">d</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:26">pci</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:37">io_regions</name><index pos:start="55:38" pos:end="55:49">[<expr pos:start="55:39" pos:end="55:48"><name pos:start="55:39" pos:end="55:48">pci_region</name></expr>]</index></name><operator pos:start="55:50" pos:end="55:50">.</operator><name pos:start="55:51" pos:end="55:54">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:65"><expr pos:start="57:9" pos:end="57:64"><name pos:start="57:9" pos:end="57:15">pci_end</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:27">pci_start</name> <operator pos:start="57:29" pos:end="57:29">+</operator> <name pos:start="57:31" pos:end="57:59"><name pos:start="57:31" pos:end="57:31">d</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:36">pci</name><operator pos:start="57:37" pos:end="57:37">.</operator><name pos:start="57:38" pos:end="57:47">io_regions</name><index pos:start="57:48" pos:end="57:59">[<expr pos:start="57:49" pos:end="57:58"><name pos:start="57:49" pos:end="57:58">pci_region</name></expr>]</index></name><operator pos:start="57:60" pos:end="57:60">.</operator><name pos:start="57:61" pos:end="57:64">size</name></expr>;</expr_stmt>

        <comment type="block" pos:start="59:9" pos:end="59:21">/* mapped? */</comment>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:28">(<expr pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:21">pci_start</name> <operator pos:start="61:23" pos:end="61:24">==</operator> <operator pos:start="61:26" pos:end="61:26">-</operator><literal type="number" pos:start="61:27" pos:end="61:27">1</literal></expr>)</condition> <block pos:start="61:30" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:21">

            <continue pos:start="63:13" pos:end="63:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="67:9" pos:end="67:38">/* start address in range ? */</comment>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:61">(<expr pos:start="69:13" pos:end="69:60"><name pos:start="69:13" pos:end="69:52"><name pos:start="69:13" pos:end="69:23">guest_start</name> <argument_list type="generic" pos:start="69:25" pos:end="69:52">&lt; <argument pos:start="69:27" pos:end="69:50"><expr pos:start="69:27" pos:end="69:50"><name pos:start="69:27" pos:end="69:35">pci_start</name> <operator pos:start="69:37" pos:end="69:38">||</operator> <name pos:start="69:40" pos:end="69:50">guest_start</name></expr></argument> &gt;</argument_list></name> <name pos:start="69:54" pos:end="69:60">pci_end</name></expr>)</condition> <block pos:start="69:63" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:21">

            <continue pos:start="71:13" pos:end="71:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="75:9" pos:end="75:36">/* end address in range ? */</comment>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:32">(<expr pos:start="77:13" pos:end="77:31"><name pos:start="77:13" pos:end="77:21">guest_end</name> <operator pos:start="77:23" pos:end="77:23">&gt;</operator> <name pos:start="77:25" pos:end="77:31">pci_end</name></expr>)</condition> <block pos:start="77:34" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:21">

            <continue pos:start="79:13" pos:end="79:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:20">/* passed */</comment>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    </block_content>}</block></for>

    <expr_stmt pos:start="89:5" pos:end="89:39"><expr pos:start="89:5" pos:end="89:38"><call pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:12">PANIC_ON</name><argument_list pos:start="89:13" pos:end="89:38">(<argument pos:start="89:14" pos:end="89:37"><expr pos:start="89:14" pos:end="89:37"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:17">==</operator> <call pos:start="89:19" pos:end="89:37"><name pos:start="89:19" pos:end="89:28">ARRAY_SIZE</name><argument_list pos:start="89:29" pos:end="89:37">(<argument pos:start="89:30" pos:end="89:36"><expr pos:start="89:30" pos:end="89:36"><name pos:start="89:30" pos:end="89:36">regions</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:41" pos:end="89:73">/* finished loop without match */</comment>



    <switch pos:start="93:5" pos:end="115:5">switch <condition pos:start="93:12" pos:end="93:23">(<expr pos:start="93:13" pos:end="93:22"><name pos:start="93:13" pos:end="93:22">pci_region</name></expr>)</condition> <block pos:start="93:25" pos:end="115:5">{<block_content pos:start="95:5" pos:end="113:16">

    <case pos:start="95:5" pos:end="95:29">case <expr pos:start="95:10" pos:end="95:28"><name pos:start="95:10" pos:end="95:28">QXL_RAM_RANGE_INDEX</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:71"><expr pos:start="97:9" pos:end="97:70"><name pos:start="97:9" pos:end="97:18">virt_start</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <operator pos:start="97:22" pos:end="97:22">(</operator><name pos:start="97:23" pos:end="97:30">intptr_t</name><operator pos:start="97:31" pos:end="97:31">)</operator><call pos:start="97:32" pos:end="97:70"><name pos:start="97:32" pos:end="97:56">memory_region_get_ram_ptr</name><argument_list pos:start="97:57" pos:end="97:70">(<argument pos:start="97:58" pos:end="97:69"><expr pos:start="97:58" pos:end="97:69"><operator pos:start="97:58" pos:end="97:58">&amp;</operator><name pos:start="97:59" pos:end="97:69"><name pos:start="97:59" pos:end="97:59">d</name><operator pos:start="97:60" pos:end="97:61">-&gt;</operator><name pos:start="97:62" pos:end="97:64">vga</name><operator pos:start="97:65" pos:end="97:65">.</operator><name pos:start="97:66" pos:end="97:69">vram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:30">case <expr pos:start="101:10" pos:end="101:29"><name pos:start="101:10" pos:end="101:29">QXL_VRAM_RANGE_INDEX</name></expr>:</case>

    <case pos:start="103:5" pos:end="103:28">case <expr pos:start="103:10" pos:end="103:10"><literal type="number" pos:start="103:10" pos:end="103:10">4</literal></expr> <comment type="block" pos:start="103:12" pos:end="103:27">/* vram 64bit */</comment>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:71"><expr pos:start="105:9" pos:end="105:70"><name pos:start="105:9" pos:end="105:18">virt_start</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <operator pos:start="105:22" pos:end="105:22">(</operator><name pos:start="105:23" pos:end="105:30">intptr_t</name><operator pos:start="105:31" pos:end="105:31">)</operator><call pos:start="105:32" pos:end="105:70"><name pos:start="105:32" pos:end="105:56">memory_region_get_ram_ptr</name><argument_list pos:start="105:57" pos:end="105:70">(<argument pos:start="105:58" pos:end="105:69"><expr pos:start="105:58" pos:end="105:69"><operator pos:start="105:58" pos:end="105:58">&amp;</operator><name pos:start="105:59" pos:end="105:69"><name pos:start="105:59" pos:end="105:59">d</name><operator pos:start="105:60" pos:end="105:61">-&gt;</operator><name pos:start="105:62" pos:end="105:69">vram_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <default pos:start="109:5" pos:end="109:12">default:</default>

        <comment type="block" pos:start="111:9" pos:end="111:31">/* should not happen */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:16"><expr pos:start="113:9" pos:end="113:15"><call pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:13">abort</name><argument_list pos:start="113:14" pos:end="113:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="119:5" pos:end="119:30"><expr pos:start="119:5" pos:end="119:29"><name pos:start="119:5" pos:end="119:19"><name pos:start="119:5" pos:end="119:11">memslot</name><operator pos:start="119:12" pos:end="119:12">.</operator><name pos:start="119:13" pos:end="119:19">slot_id</name></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:29">slot_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:48"><expr pos:start="121:5" pos:end="121:47"><name pos:start="121:5" pos:end="121:25"><name pos:start="121:5" pos:end="121:11">memslot</name><operator pos:start="121:12" pos:end="121:12">.</operator><name pos:start="121:13" pos:end="121:25">slot_group_id</name></name> <operator pos:start="121:27" pos:end="121:27">=</operator> <name pos:start="121:29" pos:end="121:47">MEMSLOT_GROUP_GUEST</name></expr>;</expr_stmt> <comment type="block" pos:start="121:50" pos:end="121:66">/* guest group */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:64"><expr pos:start="123:5" pos:end="123:63"><name pos:start="123:5" pos:end="123:22"><name pos:start="123:5" pos:end="123:11">memslot</name><operator pos:start="123:12" pos:end="123:12">.</operator><name pos:start="123:13" pos:end="123:22">virt_start</name></name> <operator pos:start="123:24" pos:end="123:24">=</operator> <name pos:start="123:26" pos:end="123:35">virt_start</name> <operator pos:start="123:37" pos:end="123:37">+</operator> <operator pos:start="123:39" pos:end="123:39">(</operator><name pos:start="123:40" pos:end="123:50">guest_start</name> <operator pos:start="123:52" pos:end="123:52">-</operator> <name pos:start="123:54" pos:end="123:62">pci_start</name><operator pos:start="123:63" pos:end="123:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:64"><expr pos:start="125:5" pos:end="125:63"><name pos:start="125:5" pos:end="125:20"><name pos:start="125:5" pos:end="125:11">memslot</name><operator pos:start="125:12" pos:end="125:12">.</operator><name pos:start="125:13" pos:end="125:20">virt_end</name></name>   <operator pos:start="125:24" pos:end="125:24">=</operator> <name pos:start="125:26" pos:end="125:35">virt_start</name> <operator pos:start="125:37" pos:end="125:37">+</operator> <operator pos:start="125:39" pos:end="125:39">(</operator><name pos:start="125:40" pos:end="125:48">guest_end</name>   <operator pos:start="125:52" pos:end="125:52">-</operator> <name pos:start="125:54" pos:end="125:62">pci_start</name><operator pos:start="125:63" pos:end="125:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:52"><expr pos:start="127:5" pos:end="127:51"><name pos:start="127:5" pos:end="127:22"><name pos:start="127:5" pos:end="127:11">memslot</name><operator pos:start="127:12" pos:end="127:12">.</operator><name pos:start="127:13" pos:end="127:22">addr_delta</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <name pos:start="127:26" pos:end="127:43"><name pos:start="127:26" pos:end="127:32">memslot</name><operator pos:start="127:33" pos:end="127:33">.</operator><name pos:start="127:34" pos:end="127:43">virt_start</name></name> <operator pos:start="127:45" pos:end="127:45">-</operator> <name pos:start="127:47" pos:end="127:51">delta</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:53"><expr pos:start="129:5" pos:end="129:52"><name pos:start="129:5" pos:end="129:22"><name pos:start="129:5" pos:end="129:11">memslot</name><operator pos:start="129:12" pos:end="129:12">.</operator><name pos:start="129:13" pos:end="129:22">generation</name></name> <operator pos:start="129:24" pos:end="129:24">=</operator> <name pos:start="129:26" pos:end="129:48"><name pos:start="129:26" pos:end="129:26">d</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:31">rom</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:48">slot_generation</name></name> <operator pos:start="129:50" pos:end="129:50">=</operator> <literal type="number" pos:start="129:52" pos:end="129:52">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:25"><expr pos:start="131:5" pos:end="131:24"><call pos:start="131:5" pos:end="131:24"><name pos:start="131:5" pos:end="131:21">qxl_rom_set_dirty</name><argument_list pos:start="131:22" pos:end="131:24">(<argument pos:start="131:23" pos:end="131:23"><expr pos:start="131:23" pos:end="131:23"><name pos:start="131:23" pos:end="131:23">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:53"><expr pos:start="135:5" pos:end="135:52"><call pos:start="135:5" pos:end="135:52"><name pos:start="135:5" pos:end="135:26">qemu_spice_add_memslot</name><argument_list pos:start="135:27" pos:end="135:52">(<argument pos:start="135:28" pos:end="135:34"><expr pos:start="135:28" pos:end="135:34"><operator pos:start="135:28" pos:end="135:28">&amp;</operator><name pos:start="135:29" pos:end="135:34"><name pos:start="135:29" pos:end="135:29">d</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:34">ssd</name></name></expr></argument>, <argument pos:start="135:37" pos:end="135:44"><expr pos:start="135:37" pos:end="135:44"><operator pos:start="135:37" pos:end="135:37">&amp;</operator><name pos:start="135:38" pos:end="135:44">memslot</name></expr></argument>, <argument pos:start="135:47" pos:end="135:51"><expr pos:start="135:47" pos:end="135:51"><name pos:start="135:47" pos:end="135:51">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:60"><expr pos:start="137:5" pos:end="137:59"><name pos:start="137:5" pos:end="137:27"><name pos:start="137:5" pos:end="137:5">d</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:18">guest_slots</name><index pos:start="137:19" pos:end="137:27">[<expr pos:start="137:20" pos:end="137:26"><name pos:start="137:20" pos:end="137:26">slot_id</name></expr>]</index></name><operator pos:start="137:28" pos:end="137:28">.</operator><name pos:start="137:29" pos:end="137:31">ptr</name> <operator pos:start="137:33" pos:end="137:33">=</operator> <operator pos:start="137:35" pos:end="137:35">(</operator><name pos:start="137:36" pos:end="137:39">void</name><operator pos:start="137:40" pos:end="137:40">*</operator><operator pos:start="137:41" pos:end="137:41">)</operator><name pos:start="137:42" pos:end="137:59"><name pos:start="137:42" pos:end="137:48">memslot</name><operator pos:start="137:49" pos:end="137:49">.</operator><name pos:start="137:50" pos:end="137:59">virt_start</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:73"><expr pos:start="139:5" pos:end="139:72"><name pos:start="139:5" pos:end="139:27"><name pos:start="139:5" pos:end="139:5">d</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:18">guest_slots</name><index pos:start="139:19" pos:end="139:27">[<expr pos:start="139:20" pos:end="139:26"><name pos:start="139:20" pos:end="139:26">slot_id</name></expr>]</index></name><operator pos:start="139:28" pos:end="139:28">.</operator><name pos:start="139:29" pos:end="139:32">size</name> <operator pos:start="139:34" pos:end="139:34">=</operator> <name pos:start="139:36" pos:end="139:51"><name pos:start="139:36" pos:end="139:42">memslot</name><operator pos:start="139:43" pos:end="139:43">.</operator><name pos:start="139:44" pos:end="139:51">virt_end</name></name> <operator pos:start="139:53" pos:end="139:53">-</operator> <name pos:start="139:55" pos:end="139:72"><name pos:start="139:55" pos:end="139:61">memslot</name><operator pos:start="139:62" pos:end="139:62">.</operator><name pos:start="139:63" pos:end="139:72">virt_start</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:42"><expr pos:start="141:5" pos:end="141:41"><name pos:start="141:5" pos:end="141:27"><name pos:start="141:5" pos:end="141:5">d</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:18">guest_slots</name><index pos:start="141:19" pos:end="141:27">[<expr pos:start="141:20" pos:end="141:26"><name pos:start="141:20" pos:end="141:26">slot_id</name></expr>]</index></name><operator pos:start="141:28" pos:end="141:28">.</operator><name pos:start="141:29" pos:end="141:33">delta</name> <operator pos:start="141:35" pos:end="141:35">=</operator> <name pos:start="141:37" pos:end="141:41">delta</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:39"><expr pos:start="143:5" pos:end="143:38"><name pos:start="143:5" pos:end="143:27"><name pos:start="143:5" pos:end="143:5">d</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:18">guest_slots</name><index pos:start="143:19" pos:end="143:27">[<expr pos:start="143:20" pos:end="143:26"><name pos:start="143:20" pos:end="143:26">slot_id</name></expr>]</index></name><operator pos:start="143:28" pos:end="143:28">.</operator><name pos:start="143:29" pos:end="143:34">active</name> <operator pos:start="143:36" pos:end="143:36">=</operator> <literal type="number" pos:start="143:38" pos:end="143:38">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
