<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/601.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">json_emit_element</name><parameter_list pos:start="1:30" pos:end="1:60">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:41"><name pos:start="1:31" pos:end="1:35">QJSON</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">json</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:5">

    <comment type="block" pos:start="5:5" pos:end="5:62">/* Check whether we need to print a , before an element */</comment>

    <if_stmt pos:start="7:5" pos:end="15:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:25">(<expr pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:12">json</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:24">omit_comma</name></name></expr>)</condition> <block pos:start="7:27" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:33">

        <expr_stmt pos:start="9:9" pos:end="9:33"><expr pos:start="9:9" pos:end="9:32"><name pos:start="9:9" pos:end="9:24"><name pos:start="9:9" pos:end="9:12">json</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:24">omit_comma</name></name> <operator pos:start="9:26" pos:end="9:26">=</operator> <name pos:start="9:28" pos:end="9:32">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="11:7" pos:end="15:5">else <block pos:start="11:12" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:40">

        <expr_stmt pos:start="13:9" pos:end="13:40"><expr pos:start="13:9" pos:end="13:39"><call pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:22">qstring_append</name><argument_list pos:start="13:23" pos:end="13:39">(<argument pos:start="13:24" pos:end="13:32"><expr pos:start="13:24" pos:end="13:32"><name pos:start="13:24" pos:end="13:32"><name pos:start="13:24" pos:end="13:27">json</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:32">str</name></name></expr></argument>, <argument pos:start="13:35" pos:end="13:38"><expr pos:start="13:35" pos:end="13:38"><literal type="string" pos:start="13:35" pos:end="13:38">", "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:12">name</name></expr>)</condition> <block pos:start="19:15" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:43">

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><call pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:22">qstring_append</name><argument_list pos:start="21:23" pos:end="21:39">(<argument pos:start="21:24" pos:end="21:32"><expr pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:27">json</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:32">str</name></name></expr></argument>, <argument pos:start="21:35" pos:end="21:38"><expr pos:start="21:35" pos:end="21:38"><literal type="string" pos:start="21:35" pos:end="21:38">"\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:22">qstring_append</name><argument_list pos:start="23:23" pos:end="23:39">(<argument pos:start="23:24" pos:end="23:32"><expr pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:27">json</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:32">str</name></name></expr></argument>, <argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><name pos:start="23:35" pos:end="23:38">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><call pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:22">qstring_append</name><argument_list pos:start="25:23" pos:end="25:42">(<argument pos:start="25:24" pos:end="25:32"><expr pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:27">json</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:32">str</name></name></expr></argument>, <argument pos:start="25:35" pos:end="25:41"><expr pos:start="25:35" pos:end="25:41"><literal type="string" pos:start="25:35" pos:end="25:41">"\" : "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
