<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13828.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:48">terminate_compression_threads</name><parameter_list pos:start="1:49" pos:end="1:54">(<parameter pos:start="1:50" pos:end="1:53"><decl pos:start="1:50" pos:end="1:53"><type pos:start="1:50" pos:end="1:53"><name pos:start="1:50" pos:end="1:53">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">idx</name></decl>, <decl pos:start="5:14" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:25">thread_count</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:46"><expr pos:start="9:5" pos:end="9:45"><name pos:start="9:5" pos:end="9:16">thread_count</name> <operator pos:start="9:18" pos:end="9:18">=</operator> <call pos:start="9:20" pos:end="9:45"><name pos:start="9:20" pos:end="9:43">migrate_compress_threads</name><argument_list pos:start="9:44" pos:end="9:45">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:20">quit_comp_thread</name> <operator pos:start="11:22" pos:end="11:22">=</operator> <name pos:start="11:24" pos:end="11:27">true</name></expr>;</expr_stmt>

    <for pos:start="13:5" pos:end="21:5">for <control pos:start="13:9" pos:end="13:44">(<init pos:start="13:10" pos:end="13:17"><expr pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:12">idx</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</init> <condition pos:start="13:19" pos:end="13:37"><expr pos:start="13:19" pos:end="13:36"><name pos:start="13:19" pos:end="13:21">idx</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <name pos:start="13:25" pos:end="13:36">thread_count</name></expr>;</condition> <incr pos:start="13:39" pos:end="13:43"><expr pos:start="13:39" pos:end="13:43"><name pos:start="13:39" pos:end="13:41">idx</name><operator pos:start="13:42" pos:end="13:43">++</operator></expr></incr>)</control> <block pos:start="13:46" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:50">

        <expr_stmt pos:start="15:9" pos:end="15:48"><expr pos:start="15:9" pos:end="15:47"><call pos:start="15:9" pos:end="15:47"><name pos:start="15:9" pos:end="15:23">qemu_mutex_lock</name><argument_list pos:start="15:24" pos:end="15:47">(<argument pos:start="15:25" pos:end="15:46"><expr pos:start="15:25" pos:end="15:46"><operator pos:start="15:25" pos:end="15:25">&amp;</operator><name pos:start="15:26" pos:end="15:40"><name pos:start="15:26" pos:end="15:35">comp_param</name><index pos:start="15:36" pos:end="15:40">[<expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:39">idx</name></expr>]</index></name><operator pos:start="15:41" pos:end="15:41">.</operator><name pos:start="15:42" pos:end="15:46">mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:48"><expr pos:start="17:9" pos:end="17:47"><call pos:start="17:9" pos:end="17:47"><name pos:start="17:9" pos:end="17:24">qemu_cond_signal</name><argument_list pos:start="17:25" pos:end="17:47">(<argument pos:start="17:26" pos:end="17:46"><expr pos:start="17:26" pos:end="17:46"><operator pos:start="17:26" pos:end="17:26">&amp;</operator><name pos:start="17:27" pos:end="17:41"><name pos:start="17:27" pos:end="17:36">comp_param</name><index pos:start="17:37" pos:end="17:41">[<expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:40">idx</name></expr>]</index></name><operator pos:start="17:42" pos:end="17:42">.</operator><name pos:start="17:43" pos:end="17:46">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:50"><expr pos:start="19:9" pos:end="19:49"><call pos:start="19:9" pos:end="19:49"><name pos:start="19:9" pos:end="19:25">qemu_mutex_unlock</name><argument_list pos:start="19:26" pos:end="19:49">(<argument pos:start="19:27" pos:end="19:48"><expr pos:start="19:27" pos:end="19:48"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:37">comp_param</name><index pos:start="19:38" pos:end="19:42">[<expr pos:start="19:39" pos:end="19:41"><name pos:start="19:39" pos:end="19:41">idx</name></expr>]</index></name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:48">mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
