<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12066.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">CharDriverState</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:31">qemu_chr_alloc</name><parameter_list pos:start="1:32" pos:end="1:69">(<parameter pos:start="1:33" pos:end="1:54"><decl pos:start="1:33" pos:end="1:54"><type pos:start="1:33" pos:end="1:54"><name pos:start="1:33" pos:end="1:45">ChardevCommon</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:54">backend</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:61">Error</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier><modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:15">

    <decl_stmt pos:start="5:5" pos:end="5:62"><decl pos:start="5:5" pos:end="5:61"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name> <init pos:start="5:26" pos:end="5:61">= <expr pos:start="5:28" pos:end="5:61"><call pos:start="5:28" pos:end="5:61"><name pos:start="5:28" pos:end="5:36">g_malloc0</name><argument_list pos:start="5:37" pos:end="5:61">(<argument pos:start="5:38" pos:end="5:60"><expr pos:start="5:38" pos:end="5:60"><sizeof pos:start="5:38" pos:end="5:60">sizeof<argument_list pos:start="5:44" pos:end="5:60">(<argument pos:start="5:45" pos:end="5:59"><expr pos:start="5:45" pos:end="5:59"><name pos:start="5:45" pos:end="5:59">CharDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:42"><expr pos:start="7:5" pos:end="7:41"><call pos:start="7:5" pos:end="7:41"><name pos:start="7:5" pos:end="7:19">qemu_mutex_init</name><argument_list pos:start="7:20" pos:end="7:41">(<argument pos:start="7:21" pos:end="7:40"><expr pos:start="7:21" pos:end="7:40"><operator pos:start="7:21" pos:end="7:21">&amp;</operator><name pos:start="7:22" pos:end="7:40"><name pos:start="7:22" pos:end="7:24">chr</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:40">chr_write_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:7">chr</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:16">mux_idx</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <operator pos:start="11:20" pos:end="11:20">-</operator><literal type="number" pos:start="11:21" pos:end="11:21">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="49:5"><if pos:start="13:5" pos:end="45:5">if <condition pos:start="13:8" pos:end="13:29">(<expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:15">backend</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:28">has_logfile</name></name></expr>)</condition> <block pos:start="13:31" pos:end="45:5">{<block_content pos:start="15:9" pos:end="43:9">

        <decl_stmt pos:start="15:9" pos:end="15:39"><decl pos:start="15:9" pos:end="15:38"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:17">flags</name> <init pos:start="15:19" pos:end="15:38">= <expr pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:28">O_WRONLY</name> <operator pos:start="15:30" pos:end="15:30">|</operator> <name pos:start="15:32" pos:end="15:38">O_CREAT</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="19:31">(<expr pos:start="17:13" pos:end="19:30"><name pos:start="17:13" pos:end="17:34"><name pos:start="17:13" pos:end="17:19">backend</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:34">has_logappend</name></name> <operator pos:start="17:36" pos:end="17:37">&amp;&amp;</operator>

            <name pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:19">backend</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:30">logappend</name></name></expr>)</condition> <block pos:start="19:33" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:30">

            <expr_stmt pos:start="21:13" pos:end="21:30"><expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:17">flags</name> <operator pos:start="21:19" pos:end="21:20">|=</operator> <name pos:start="21:22" pos:end="21:29">O_APPEND</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="27:9">else <block pos:start="23:16" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:29">

            <expr_stmt pos:start="25:13" pos:end="25:29"><expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:17">flags</name> <operator pos:start="25:19" pos:end="25:20">|=</operator> <name pos:start="25:22" pos:end="25:28">O_TRUNC</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:62"><expr pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:11">chr</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:18">logfd</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:61"><name pos:start="29:22" pos:end="29:30">qemu_open</name><argument_list pos:start="29:31" pos:end="29:61">(<argument pos:start="29:32" pos:end="29:47"><expr pos:start="29:32" pos:end="29:47"><name pos:start="29:32" pos:end="29:47"><name pos:start="29:32" pos:end="29:38">backend</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:47">logfile</name></name></expr></argument>, <argument pos:start="29:50" pos:end="29:54"><expr pos:start="29:50" pos:end="29:54"><name pos:start="29:50" pos:end="29:54">flags</name></expr></argument>, <argument pos:start="29:57" pos:end="29:60"><expr pos:start="29:57" pos:end="29:60"><literal type="number" pos:start="29:57" pos:end="29:60">0666</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="43:9"><if pos:start="31:9" pos:end="43:9">if <condition pos:start="31:12" pos:end="31:27">(<expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:15">chr</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:22">logfd</name></name> <operator pos:start="31:24" pos:end="31:24">&lt;</operator> <literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr>)</condition> <block pos:start="31:29" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:24">

            <expr_stmt pos:start="33:13" pos:end="37:47"><expr pos:start="33:13" pos:end="37:46"><call pos:start="33:13" pos:end="37:46"><name pos:start="33:13" pos:end="33:28">error_setg_errno</name><argument_list pos:start="33:29" pos:end="37:46">(<argument pos:start="33:30" pos:end="33:33"><expr pos:start="33:30" pos:end="33:33"><name pos:start="33:30" pos:end="33:33">errp</name></expr></argument>, <argument pos:start="33:36" pos:end="33:40"><expr pos:start="33:36" pos:end="33:40"><name pos:start="33:36" pos:end="33:40">errno</name></expr></argument>,

                             <argument pos:start="35:30" pos:end="35:56"><expr pos:start="35:30" pos:end="35:56"><literal type="string" pos:start="35:30" pos:end="35:56">"Unable to open logfile %s"</literal></expr></argument>,

                             <argument pos:start="37:30" pos:end="37:45"><expr pos:start="37:30" pos:end="37:45"><name pos:start="37:30" pos:end="37:45"><name pos:start="37:30" pos:end="37:36">backend</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:45">logfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:24"><expr pos:start="39:13" pos:end="39:23"><call pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:18">g_free</name><argument_list pos:start="39:19" pos:end="39:23">(<argument pos:start="39:20" pos:end="39:22"><expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:24">return <expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:24">

        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">chr</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:18">logfd</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <operator pos:start="47:22" pos:end="47:22">-</operator><literal type="number" pos:start="47:23" pos:end="47:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">chr</name></expr>;</return>

</block_content>}</block></function>
</unit>
