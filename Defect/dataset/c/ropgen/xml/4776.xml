<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4776.c" pos:tabs="8"><function pos:start="1:1" pos:end="172:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">iv_decode_frame</name><parameter_list pos:start="1:27" pos:end="3:60">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:45"><decl pos:start="3:28" pos:end="3:45"><type pos:start="3:28" pos:end="3:45"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">buf</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:59"><decl pos:start="3:48" pos:end="3:59"><type pos:start="3:48" pos:end="3:59"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:59">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="172:13">{<block_content pos:start="7:5" pos:end="172:13">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">Indeo3DecodeContext</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:45">= <expr pos:start="7:30" pos:end="7:45"><name pos:start="7:30" pos:end="7:45"><name pos:start="7:30" pos:end="7:34">avctx</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="11:45"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:28">image_width</name></decl>, <decl pos:start="9:31" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:31" pos:end="9:42">image_height</name></decl>,

                 <decl pos:start="11:18" pos:end="11:29"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="11:18" pos:end="11:29">chroma_width</name></decl>, <decl pos:start="11:32" pos:end="11:44"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="11:32" pos:end="11:44">chroma_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="15:64"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">long</name></type> <name pos:start="13:19" pos:end="13:23">flags</name></decl>, <decl pos:start="13:26" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="13:26" pos:end="13:34">cb_offset</name></decl>, <decl pos:start="13:37" pos:end="13:45"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="13:37" pos:end="13:45">data_size</name></decl>,

                  <decl pos:start="15:19" pos:end="15:26"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="15:19" pos:end="15:26">y_offset</name></decl>, <decl pos:start="15:29" pos:end="15:36"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="15:29" pos:end="15:36">v_offset</name></decl>, <decl pos:start="15:39" pos:end="15:46"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="15:39" pos:end="15:46">u_offset</name></decl>, <decl pos:start="15:49" pos:end="15:63"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="15:49" pos:end="15:63">mc_vector_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:26">hdr_pos</name></decl>, <decl pos:start="17:29" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:19"><modifier pos:start="17:29" pos:end="17:29">*</modifier></type><name pos:start="17:30" pos:end="17:36">buf_pos</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:11">buf_pos</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:11">buf_pos</name> <operator pos:start="23:13" pos:end="23:14">+=</operator> <literal type="number" pos:start="23:16" pos:end="23:17">18</literal></expr>;</expr_stmt> <comment type="block" pos:start="23:20" pos:end="23:69">/* skip OS header (16 bytes) and version number */</comment>



    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:9">flags</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:31">bytestream_get_le16</name><argument_list pos:start="27:32" pos:end="27:41">(<argument pos:start="27:33" pos:end="27:40"><expr pos:start="27:33" pos:end="27:40"><operator pos:start="27:33" pos:end="27:33">&amp;</operator><name pos:start="27:34" pos:end="27:40">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:13">data_size</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:45"><name pos:start="29:17" pos:end="29:35">bytestream_get_le32</name><argument_list pos:start="29:36" pos:end="29:45">(<argument pos:start="29:37" pos:end="29:44"><expr pos:start="29:37" pos:end="29:44"><operator pos:start="29:37" pos:end="29:37">&amp;</operator><name pos:start="29:38" pos:end="29:44">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:13">cb_offset</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:24">buf_pos</name><operator pos:start="31:25" pos:end="31:26">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:11">buf_pos</name> <operator pos:start="33:13" pos:end="33:14">+=</operator> <literal type="number" pos:start="33:16" pos:end="33:16">3</literal></expr>;</expr_stmt> <comment type="block" pos:start="33:19" pos:end="33:55">/* skip reserved byte and checksum */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:16">image_height</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:48"><name pos:start="35:20" pos:end="35:38">bytestream_get_le16</name><argument_list pos:start="35:39" pos:end="35:48">(<argument pos:start="35:40" pos:end="35:47"><expr pos:start="35:40" pos:end="35:47"><operator pos:start="35:40" pos:end="35:40">&amp;</operator><name pos:start="35:41" pos:end="35:47">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:15">image_width</name>  <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:48"><name pos:start="37:20" pos:end="37:38">bytestream_get_le16</name><argument_list pos:start="37:39" pos:end="37:48">(<argument pos:start="37:40" pos:end="37:47"><expr pos:start="37:40" pos:end="37:47"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:47">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if<condition pos:start="41:7" pos:end="41:66">(<expr pos:start="41:8" pos:end="41:65"><call pos:start="41:8" pos:end="41:65"><name pos:start="41:8" pos:end="41:31">avcodec_check_dimensions</name><argument_list pos:start="41:32" pos:end="41:65">(<argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37">avctx</name></expr></argument>, <argument pos:start="41:40" pos:end="41:50"><expr pos:start="41:40" pos:end="41:50"><name pos:start="41:40" pos:end="41:50">image_width</name></expr></argument>, <argument pos:start="41:53" pos:end="41:64"><expr pos:start="41:53" pos:end="41:64"><name pos:start="41:53" pos:end="41:64">image_height</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return></block_content></block></if></if_stmt>














    <expr_stmt pos:start="58:5" pos:end="58:55"><expr pos:start="58:5" pos:end="58:54"><name pos:start="58:5" pos:end="58:17">chroma_height</name> <operator pos:start="58:19" pos:end="58:19">=</operator> <operator pos:start="58:21" pos:end="58:21">(</operator><operator pos:start="58:22" pos:end="58:22">(</operator><name pos:start="58:23" pos:end="58:34">image_height</name> <operator pos:start="58:36" pos:end="58:37">&gt;&gt;</operator> <literal type="number" pos:start="58:39" pos:end="58:39">2</literal><operator pos:start="58:40" pos:end="58:40">)</operator> <operator pos:start="58:42" pos:end="58:42">+</operator> <literal type="number" pos:start="58:44" pos:end="58:44">3</literal><operator pos:start="58:45" pos:end="58:45">)</operator> <operator pos:start="58:47" pos:end="58:47">&amp;</operator> <literal type="number" pos:start="58:49" pos:end="58:54">0x7ffc</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="60:5" pos:end="60:53"><expr pos:start="60:5" pos:end="60:52"><name pos:start="60:5" pos:end="60:16">chroma_width</name> <operator pos:start="60:18" pos:end="60:18">=</operator> <operator pos:start="60:20" pos:end="60:20">(</operator><operator pos:start="60:21" pos:end="60:21">(</operator><name pos:start="60:22" pos:end="60:32">image_width</name> <operator pos:start="60:34" pos:end="60:35">&gt;&gt;</operator> <literal type="number" pos:start="60:37" pos:end="60:37">2</literal><operator pos:start="60:38" pos:end="60:38">)</operator> <operator pos:start="60:40" pos:end="60:40">+</operator> <literal type="number" pos:start="60:42" pos:end="60:42">3</literal><operator pos:start="60:43" pos:end="60:43">)</operator> <operator pos:start="60:45" pos:end="60:45">&amp;</operator> <literal type="number" pos:start="60:47" pos:end="60:52">0x7ffc</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="62:5" pos:end="62:45"><expr pos:start="62:5" pos:end="62:44"><name pos:start="62:5" pos:end="62:12">y_offset</name> <operator pos:start="62:14" pos:end="62:14">=</operator> <call pos:start="62:16" pos:end="62:44"><name pos:start="62:16" pos:end="62:34">bytestream_get_le32</name><argument_list pos:start="62:35" pos:end="62:44">(<argument pos:start="62:36" pos:end="62:43"><expr pos:start="62:36" pos:end="62:43"><operator pos:start="62:36" pos:end="62:36">&amp;</operator><name pos:start="62:37" pos:end="62:43">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="64:5" pos:end="64:45"><expr pos:start="64:5" pos:end="64:44"><name pos:start="64:5" pos:end="64:12">v_offset</name> <operator pos:start="64:14" pos:end="64:14">=</operator> <call pos:start="64:16" pos:end="64:44"><name pos:start="64:16" pos:end="64:34">bytestream_get_le32</name><argument_list pos:start="64:35" pos:end="64:44">(<argument pos:start="64:36" pos:end="64:43"><expr pos:start="64:36" pos:end="64:43"><operator pos:start="64:36" pos:end="64:36">&amp;</operator><name pos:start="64:37" pos:end="64:43">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="66:5" pos:end="66:45"><expr pos:start="66:5" pos:end="66:44"><name pos:start="66:5" pos:end="66:12">u_offset</name> <operator pos:start="66:14" pos:end="66:14">=</operator> <call pos:start="66:16" pos:end="66:44"><name pos:start="66:16" pos:end="66:34">bytestream_get_le32</name><argument_list pos:start="66:35" pos:end="66:44">(<argument pos:start="66:36" pos:end="66:43"><expr pos:start="66:36" pos:end="66:43"><operator pos:start="66:36" pos:end="66:36">&amp;</operator><name pos:start="66:37" pos:end="66:43">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="68:5" pos:end="68:17"><expr pos:start="68:5" pos:end="68:16"><name pos:start="68:5" pos:end="68:11">buf_pos</name> <operator pos:start="68:13" pos:end="68:14">+=</operator> <literal type="number" pos:start="68:16" pos:end="68:16">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="68:19" pos:end="68:32">/* reserved */</comment>

    <expr_stmt pos:start="70:5" pos:end="70:22"><expr pos:start="70:5" pos:end="70:21"><name pos:start="70:5" pos:end="70:11">hdr_pos</name> <operator pos:start="70:13" pos:end="70:13">=</operator> <name pos:start="70:15" pos:end="70:21">buf_pos</name></expr>;</expr_stmt>

    <if_stmt pos:start="72:5" pos:end="72:35"><if pos:start="72:5" pos:end="72:35">if<condition pos:start="72:7" pos:end="72:25">(<expr pos:start="72:8" pos:end="72:24"><name pos:start="72:8" pos:end="72:16">data_size</name> <operator pos:start="72:18" pos:end="72:19">==</operator> <literal type="number" pos:start="72:21" pos:end="72:24">0x80</literal></expr>)</condition><block type="pseudo" pos:start="72:27" pos:end="72:35"><block_content pos:start="72:27" pos:end="72:35"> <return pos:start="72:27" pos:end="72:35">return <expr pos:start="72:34" pos:end="72:34"><literal type="number" pos:start="72:34" pos:end="72:34">4</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="76:5" pos:end="172:13"><if pos:start="76:5" pos:end="172:13">if<condition pos:start="76:7" pos:end="76:59">(<expr pos:start="76:8" pos:end="76:58"><call pos:start="76:8" pos:end="76:43"><name pos:start="76:8" pos:end="76:13">FFMAX3</name><argument_list pos:start="76:14" pos:end="76:43">(<argument pos:start="76:15" pos:end="76:22"><expr pos:start="76:15" pos:end="76:22"><name pos:start="76:15" pos:end="76:22">y_offset</name></expr></argument>, <argument pos:start="76:25" pos:end="76:32"><expr pos:start="76:25" pos:end="76:32"><name pos:start="76:25" pos:end="76:32">v_offset</name></expr></argument>, <argument pos:start="76:35" pos:end="76:42"><expr pos:start="76:35" pos:end="76:42"><name pos:start="76:35" pos:end="76:42">u_offset</name></expr></argument>)</argument_list></call> <operator pos:start="76:45" pos:end="76:46">&gt;=</operator> <name pos:start="76:48" pos:end="76:55">buf_size</name><operator pos:start="76:56" pos:end="76:56">-</operator><literal type="number" pos:start="76:57" pos:end="76:58">16</literal></expr>)</condition> <block pos:start="76:61" pos:end="172:13">{<block_content pos:start="78:9" pos:end="172:13">

        <expr_stmt pos:start="78:9" pos:end="78:72"><expr pos:start="78:9" pos:end="78:71"><call pos:start="78:9" pos:end="78:71"><name pos:start="78:9" pos:end="78:14">av_log</name><argument_list pos:start="78:15" pos:end="78:71">(<argument pos:start="78:16" pos:end="78:23"><expr pos:start="78:16" pos:end="78:23"><name pos:start="78:16" pos:end="78:23"><name pos:start="78:16" pos:end="78:16">s</name><operator pos:start="78:17" pos:end="78:18">-&gt;</operator><name pos:start="78:19" pos:end="78:23">avctx</name></name></expr></argument>, <argument pos:start="78:26" pos:end="78:37"><expr pos:start="78:26" pos:end="78:37"><name pos:start="78:26" pos:end="78:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="78:40" pos:end="78:70"><expr pos:start="78:40" pos:end="78:70"><literal type="string" pos:start="78:40" pos:end="78:70">"y/u/v offset outside buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="80:9" pos:end="80:18">return <expr pos:start="80:16" pos:end="80:17"><operator pos:start="80:16" pos:end="80:16">-</operator><literal type="number" pos:start="80:17" pos:end="80:17">1</literal></expr>;</return>




    <if_stmt pos:start="85:5" pos:end="172:13"><if pos:start="85:5" pos:end="91:5">if<condition pos:start="85:7" pos:end="85:21">(<expr pos:start="85:8" pos:end="85:20"><name pos:start="85:8" pos:end="85:12">flags</name> <operator pos:start="85:14" pos:end="85:14">&amp;</operator> <literal type="number" pos:start="85:16" pos:end="85:20">0x200</literal></expr>)</condition> <block pos:start="85:23" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:35">

        <expr_stmt pos:start="87:9" pos:end="87:39"><expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:20">cur_frame</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:34"><name pos:start="87:24" pos:end="87:24">s</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:34">iv_frame</name></name> <operator pos:start="87:36" pos:end="87:36">+</operator> <literal type="number" pos:start="87:38" pos:end="87:38">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:35"><expr pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:20">ref_frame</name></name> <operator pos:start="89:22" pos:end="89:22">=</operator> <name pos:start="89:24" pos:end="89:34"><name pos:start="89:24" pos:end="89:24">s</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:34">iv_frame</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="172:13">else <block pos:start="91:12" pos:end="172:13">{<block_content pos:start="93:9" pos:end="172:13">

        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:20">cur_frame</name></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:34"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:34">iv_frame</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:39"><expr pos:start="95:9" pos:end="95:38"><name pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:20">ref_frame</name></name> <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:34"><name pos:start="95:24" pos:end="95:24">s</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:34">iv_frame</name></name> <operator pos:start="95:36" pos:end="95:36">+</operator> <literal type="number" pos:start="95:38" pos:end="95:38">1</literal></expr>;</expr_stmt>




    <expr_stmt pos:start="100:5" pos:end="100:34"><expr pos:start="100:5" pos:end="100:33"><name pos:start="100:5" pos:end="100:11">buf_pos</name> <operator pos:start="100:13" pos:end="100:13">=</operator> <name pos:start="100:15" pos:end="100:17">buf</name> <operator pos:start="100:19" pos:end="100:19">+</operator> <literal type="number" pos:start="100:21" pos:end="100:24">16</literal> <operator pos:start="100:24" pos:end="100:24">+</operator> <name pos:start="100:26" pos:end="100:33">y_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="102:5" pos:end="102:52"><expr pos:start="102:5" pos:end="102:51"><name pos:start="102:5" pos:end="102:19">mc_vector_count</name> <operator pos:start="102:21" pos:end="102:21">=</operator> <call pos:start="102:23" pos:end="102:51"><name pos:start="102:23" pos:end="102:41">bytestream_get_le32</name><argument_list pos:start="102:42" pos:end="102:51">(<argument pos:start="102:43" pos:end="102:50"><expr pos:start="102:43" pos:end="102:50"><operator pos:start="102:43" pos:end="102:43">&amp;</operator><name pos:start="102:44" pos:end="102:50">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="104:5" pos:end="172:13"><if pos:start="104:5" pos:end="172:13">if<condition pos:start="104:7" pos:end="104:51">(<expr pos:start="104:8" pos:end="104:50"><literal type="number" pos:start="104:8" pos:end="104:10">2LL</literal><operator pos:start="104:11" pos:end="104:11">*</operator><name pos:start="104:12" pos:end="104:26">mc_vector_count</name> <operator pos:start="104:28" pos:end="104:29">&gt;=</operator> <name pos:start="104:31" pos:end="104:38">buf_size</name><operator pos:start="104:39" pos:end="104:39">-</operator><literal type="number" pos:start="104:40" pos:end="104:42">16</literal><operator pos:start="104:42" pos:end="104:42">-</operator><name pos:start="104:43" pos:end="104:50">y_offset</name></expr>)</condition> <block pos:start="104:53" pos:end="172:13">{<block_content pos:start="106:9" pos:end="172:13">

        <expr_stmt pos:start="106:9" pos:end="106:70"><expr pos:start="106:9" pos:end="106:69"><call pos:start="106:9" pos:end="106:69"><name pos:start="106:9" pos:end="106:14">av_log</name><argument_list pos:start="106:15" pos:end="106:69">(<argument pos:start="106:16" pos:end="106:23"><expr pos:start="106:16" pos:end="106:23"><name pos:start="106:16" pos:end="106:23"><name pos:start="106:16" pos:end="106:16">s</name><operator pos:start="106:17" pos:end="106:18">-&gt;</operator><name pos:start="106:19" pos:end="106:23">avctx</name></name></expr></argument>, <argument pos:start="106:26" pos:end="106:37"><expr pos:start="106:26" pos:end="106:37"><name pos:start="106:26" pos:end="106:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="106:40" pos:end="106:68"><expr pos:start="106:40" pos:end="106:68"><literal type="string" pos:start="106:40" pos:end="106:68">"mc_vector_count too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="108:9" pos:end="108:18">return <expr pos:start="108:16" pos:end="108:17"><operator pos:start="108:16" pos:end="108:16">-</operator><literal type="number" pos:start="108:17" pos:end="108:17">1</literal></expr>;</return>




    <expr_stmt pos:start="113:5" pos:end="117:45"><expr pos:start="113:5" pos:end="117:44"><call pos:start="113:5" pos:end="117:44"><name pos:start="113:5" pos:end="113:19">iv_Decode_Chunk</name><argument_list pos:start="113:20" pos:end="117:44">(<argument pos:start="113:21" pos:end="113:21"><expr pos:start="113:21" pos:end="113:21"><name pos:start="113:21" pos:end="113:21">s</name></expr></argument>, <argument pos:start="113:24" pos:end="113:41"><expr pos:start="113:24" pos:end="113:41"><name pos:start="113:24" pos:end="113:41"><name pos:start="113:24" pos:end="113:24">s</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:35">cur_frame</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:41">Ybuf</name></name></expr></argument>, <argument pos:start="113:44" pos:end="113:61"><expr pos:start="113:44" pos:end="113:61"><name pos:start="113:44" pos:end="113:61"><name pos:start="113:44" pos:end="113:44">s</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:55">ref_frame</name><operator pos:start="113:56" pos:end="113:57">-&gt;</operator><name pos:start="113:58" pos:end="113:61">Ybuf</name></name></expr></argument>, <argument pos:start="113:64" pos:end="113:74"><expr pos:start="113:64" pos:end="113:74"><name pos:start="113:64" pos:end="113:74">image_width</name></expr></argument>,

                    <argument pos:start="115:21" pos:end="115:32"><expr pos:start="115:21" pos:end="115:32"><name pos:start="115:21" pos:end="115:32">image_height</name></expr></argument>, <argument pos:start="115:35" pos:end="115:63"><expr pos:start="115:35" pos:end="115:63"><name pos:start="115:35" pos:end="115:41">buf_pos</name> <operator pos:start="115:43" pos:end="115:43">+</operator> <name pos:start="115:45" pos:end="115:59">mc_vector_count</name> <operator pos:start="115:61" pos:end="115:61">*</operator> <literal type="number" pos:start="115:63" pos:end="115:63">2</literal></expr></argument>, <argument pos:start="115:66" pos:end="115:74"><expr pos:start="115:66" pos:end="115:74"><name pos:start="115:66" pos:end="115:74">cb_offset</name></expr></argument>, <argument pos:start="115:77" pos:end="115:83"><expr pos:start="115:77" pos:end="115:83"><name pos:start="115:77" pos:end="115:83">hdr_pos</name></expr></argument>, <argument pos:start="115:86" pos:end="115:92"><expr pos:start="115:86" pos:end="115:92"><name pos:start="115:86" pos:end="115:92">buf_pos</name></expr></argument>,

                    <argument pos:start="117:21" pos:end="117:43"><expr pos:start="117:21" pos:end="117:43"><call pos:start="117:21" pos:end="117:43"><name pos:start="117:21" pos:end="117:25">FFMIN</name><argument_list pos:start="117:26" pos:end="117:43">(<argument pos:start="117:27" pos:end="117:37"><expr pos:start="117:27" pos:end="117:37"><name pos:start="117:27" pos:end="117:37">image_width</name></expr></argument>, <argument pos:start="117:40" pos:end="117:42"><expr pos:start="117:40" pos:end="117:42"><literal type="number" pos:start="117:40" pos:end="117:42">160</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="121:5" pos:end="172:13"><if pos:start="121:5" pos:end="172:13">if <condition pos:start="121:8" pos:end="121:45">(<expr pos:start="121:9" pos:end="121:44"><operator pos:start="121:9" pos:end="121:9">!</operator><operator pos:start="121:10" pos:end="121:10">(</operator><name pos:start="121:11" pos:end="121:25"><name pos:start="121:11" pos:end="121:11">s</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:18">avctx</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:25">flags</name></name> <operator pos:start="121:27" pos:end="121:27">&amp;</operator> <name pos:start="121:29" pos:end="121:43">CODEC_FLAG_GRAY</name><operator pos:start="121:44" pos:end="121:44">)</operator></expr>)</condition>

    <block pos:start="123:5" pos:end="172:13">{<block_content pos:start="127:9" pos:end="172:13">



        <expr_stmt pos:start="127:9" pos:end="127:38"><expr pos:start="127:9" pos:end="127:37"><name pos:start="127:9" pos:end="127:15">buf_pos</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:21">buf</name> <operator pos:start="127:23" pos:end="127:23">+</operator> <literal type="number" pos:start="127:25" pos:end="127:28">16</literal> <operator pos:start="127:28" pos:end="127:28">+</operator> <name pos:start="127:30" pos:end="127:37">v_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:56"><expr pos:start="129:9" pos:end="129:55"><name pos:start="129:9" pos:end="129:23">mc_vector_count</name> <operator pos:start="129:25" pos:end="129:25">=</operator> <call pos:start="129:27" pos:end="129:55"><name pos:start="129:27" pos:end="129:45">bytestream_get_le32</name><argument_list pos:start="129:46" pos:end="129:55">(<argument pos:start="129:47" pos:end="129:54"><expr pos:start="129:47" pos:end="129:54"><operator pos:start="129:47" pos:end="129:47">&amp;</operator><name pos:start="129:48" pos:end="129:54">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="172:13"><if pos:start="131:9" pos:end="172:13">if<condition pos:start="131:11" pos:end="131:55">(<expr pos:start="131:12" pos:end="131:54"><literal type="number" pos:start="131:12" pos:end="131:14">2LL</literal><operator pos:start="131:15" pos:end="131:15">*</operator><name pos:start="131:16" pos:end="131:30">mc_vector_count</name> <operator pos:start="131:32" pos:end="131:33">&gt;=</operator> <name pos:start="131:35" pos:end="131:42">buf_size</name><operator pos:start="131:43" pos:end="131:43">-</operator><literal type="number" pos:start="131:44" pos:end="131:46">16</literal><operator pos:start="131:46" pos:end="131:46">-</operator><name pos:start="131:47" pos:end="131:54">v_offset</name></expr>)</condition> <block pos:start="131:57" pos:end="172:13">{<block_content pos:start="133:13" pos:end="172:13">

            <expr_stmt pos:start="133:13" pos:end="133:74"><expr pos:start="133:13" pos:end="133:73"><call pos:start="133:13" pos:end="133:73"><name pos:start="133:13" pos:end="133:18">av_log</name><argument_list pos:start="133:19" pos:end="133:73">(<argument pos:start="133:20" pos:end="133:27"><expr pos:start="133:20" pos:end="133:27"><name pos:start="133:20" pos:end="133:27"><name pos:start="133:20" pos:end="133:20">s</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:27">avctx</name></name></expr></argument>, <argument pos:start="133:30" pos:end="133:41"><expr pos:start="133:30" pos:end="133:41"><name pos:start="133:30" pos:end="133:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:44" pos:end="133:72"><expr pos:start="133:44" pos:end="133:72"><literal type="string" pos:start="133:44" pos:end="133:72">"mc_vector_count too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="135:13" pos:end="135:22">return <expr pos:start="135:20" pos:end="135:21"><operator pos:start="135:20" pos:end="135:20">-</operator><literal type="number" pos:start="135:21" pos:end="135:21">1</literal></expr>;</return>




        <expr_stmt pos:start="140:9" pos:end="144:41"><expr pos:start="140:9" pos:end="144:40"><call pos:start="140:9" pos:end="144:40"><name pos:start="140:9" pos:end="140:23">iv_Decode_Chunk</name><argument_list pos:start="140:24" pos:end="144:40">(<argument pos:start="140:25" pos:end="140:25"><expr pos:start="140:25" pos:end="140:25"><name pos:start="140:25" pos:end="140:25">s</name></expr></argument>, <argument pos:start="140:28" pos:end="140:45"><expr pos:start="140:28" pos:end="140:45"><name pos:start="140:28" pos:end="140:45"><name pos:start="140:28" pos:end="140:28">s</name><operator pos:start="140:29" pos:end="140:30">-&gt;</operator><name pos:start="140:31" pos:end="140:39">cur_frame</name><operator pos:start="140:40" pos:end="140:41">-&gt;</operator><name pos:start="140:42" pos:end="140:45">Vbuf</name></name></expr></argument>, <argument pos:start="140:48" pos:end="140:65"><expr pos:start="140:48" pos:end="140:65"><name pos:start="140:48" pos:end="140:65"><name pos:start="140:48" pos:end="140:48">s</name><operator pos:start="140:49" pos:end="140:50">-&gt;</operator><name pos:start="140:51" pos:end="140:59">ref_frame</name><operator pos:start="140:60" pos:end="140:61">-&gt;</operator><name pos:start="140:62" pos:end="140:65">Vbuf</name></name></expr></argument>, <argument pos:start="140:68" pos:end="140:79"><expr pos:start="140:68" pos:end="140:79"><name pos:start="140:68" pos:end="140:79">chroma_width</name></expr></argument>,

                <argument pos:start="142:17" pos:end="142:29"><expr pos:start="142:17" pos:end="142:29"><name pos:start="142:17" pos:end="142:29">chroma_height</name></expr></argument>, <argument pos:start="142:32" pos:end="142:60"><expr pos:start="142:32" pos:end="142:60"><name pos:start="142:32" pos:end="142:38">buf_pos</name> <operator pos:start="142:40" pos:end="142:40">+</operator> <name pos:start="142:42" pos:end="142:56">mc_vector_count</name> <operator pos:start="142:58" pos:end="142:58">*</operator> <literal type="number" pos:start="142:60" pos:end="142:60">2</literal></expr></argument>, <argument pos:start="142:63" pos:end="142:71"><expr pos:start="142:63" pos:end="142:71"><name pos:start="142:63" pos:end="142:71">cb_offset</name></expr></argument>, <argument pos:start="142:74" pos:end="142:80"><expr pos:start="142:74" pos:end="142:80"><name pos:start="142:74" pos:end="142:80">hdr_pos</name></expr></argument>, <argument pos:start="142:83" pos:end="142:89"><expr pos:start="142:83" pos:end="142:89"><name pos:start="142:83" pos:end="142:89">buf_pos</name></expr></argument>,

                <argument pos:start="144:17" pos:end="144:39"><expr pos:start="144:17" pos:end="144:39"><call pos:start="144:17" pos:end="144:39"><name pos:start="144:17" pos:end="144:21">FFMIN</name><argument_list pos:start="144:22" pos:end="144:39">(<argument pos:start="144:23" pos:end="144:34"><expr pos:start="144:23" pos:end="144:34"><name pos:start="144:23" pos:end="144:34">chroma_width</name></expr></argument>, <argument pos:start="144:37" pos:end="144:38"><expr pos:start="144:37" pos:end="144:38"><literal type="number" pos:start="144:37" pos:end="144:38">40</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="148:9" pos:end="148:38"><expr pos:start="148:9" pos:end="148:37"><name pos:start="148:9" pos:end="148:15">buf_pos</name> <operator pos:start="148:17" pos:end="148:17">=</operator> <name pos:start="148:19" pos:end="148:21">buf</name> <operator pos:start="148:23" pos:end="148:23">+</operator> <literal type="number" pos:start="148:25" pos:end="148:28">16</literal> <operator pos:start="148:28" pos:end="148:28">+</operator> <name pos:start="148:30" pos:end="148:37">u_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="150:9" pos:end="150:56"><expr pos:start="150:9" pos:end="150:55"><name pos:start="150:9" pos:end="150:23">mc_vector_count</name> <operator pos:start="150:25" pos:end="150:25">=</operator> <call pos:start="150:27" pos:end="150:55"><name pos:start="150:27" pos:end="150:45">bytestream_get_le32</name><argument_list pos:start="150:46" pos:end="150:55">(<argument pos:start="150:47" pos:end="150:54"><expr pos:start="150:47" pos:end="150:54"><operator pos:start="150:47" pos:end="150:47">&amp;</operator><name pos:start="150:48" pos:end="150:54">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="152:9" pos:end="172:13"><if pos:start="152:9" pos:end="172:13">if<condition pos:start="152:11" pos:end="152:55">(<expr pos:start="152:12" pos:end="152:54"><literal type="number" pos:start="152:12" pos:end="152:14">2LL</literal><operator pos:start="152:15" pos:end="152:15">*</operator><name pos:start="152:16" pos:end="152:30">mc_vector_count</name> <operator pos:start="152:32" pos:end="152:33">&gt;=</operator> <name pos:start="152:35" pos:end="152:42">buf_size</name><operator pos:start="152:43" pos:end="152:43">-</operator><literal type="number" pos:start="152:44" pos:end="152:46">16</literal><operator pos:start="152:46" pos:end="152:46">-</operator><name pos:start="152:47" pos:end="152:54">u_offset</name></expr>)</condition> <block pos:start="152:57" pos:end="172:13">{<block_content pos:start="154:13" pos:end="172:13">

            <expr_stmt pos:start="154:13" pos:end="154:74"><expr pos:start="154:13" pos:end="154:73"><call pos:start="154:13" pos:end="154:73"><name pos:start="154:13" pos:end="154:18">av_log</name><argument_list pos:start="154:19" pos:end="154:73">(<argument pos:start="154:20" pos:end="154:27"><expr pos:start="154:20" pos:end="154:27"><name pos:start="154:20" pos:end="154:27"><name pos:start="154:20" pos:end="154:20">s</name><operator pos:start="154:21" pos:end="154:22">-&gt;</operator><name pos:start="154:23" pos:end="154:27">avctx</name></name></expr></argument>, <argument pos:start="154:30" pos:end="154:41"><expr pos:start="154:30" pos:end="154:41"><name pos:start="154:30" pos:end="154:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="154:44" pos:end="154:72"><expr pos:start="154:44" pos:end="154:72"><literal type="string" pos:start="154:44" pos:end="154:72">"mc_vector_count too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="156:13" pos:end="156:22">return <expr pos:start="156:20" pos:end="156:21"><operator pos:start="156:20" pos:end="156:20">-</operator><literal type="number" pos:start="156:21" pos:end="156:21">1</literal></expr>;</return>




        <expr_stmt pos:start="161:9" pos:end="165:41"><expr pos:start="161:9" pos:end="165:40"><call pos:start="161:9" pos:end="165:40"><name pos:start="161:9" pos:end="161:23">iv_Decode_Chunk</name><argument_list pos:start="161:24" pos:end="165:40">(<argument pos:start="161:25" pos:end="161:25"><expr pos:start="161:25" pos:end="161:25"><name pos:start="161:25" pos:end="161:25">s</name></expr></argument>, <argument pos:start="161:28" pos:end="161:45"><expr pos:start="161:28" pos:end="161:45"><name pos:start="161:28" pos:end="161:45"><name pos:start="161:28" pos:end="161:28">s</name><operator pos:start="161:29" pos:end="161:30">-&gt;</operator><name pos:start="161:31" pos:end="161:39">cur_frame</name><operator pos:start="161:40" pos:end="161:41">-&gt;</operator><name pos:start="161:42" pos:end="161:45">Ubuf</name></name></expr></argument>, <argument pos:start="161:48" pos:end="161:65"><expr pos:start="161:48" pos:end="161:65"><name pos:start="161:48" pos:end="161:65"><name pos:start="161:48" pos:end="161:48">s</name><operator pos:start="161:49" pos:end="161:50">-&gt;</operator><name pos:start="161:51" pos:end="161:59">ref_frame</name><operator pos:start="161:60" pos:end="161:61">-&gt;</operator><name pos:start="161:62" pos:end="161:65">Ubuf</name></name></expr></argument>, <argument pos:start="161:68" pos:end="161:79"><expr pos:start="161:68" pos:end="161:79"><name pos:start="161:68" pos:end="161:79">chroma_width</name></expr></argument>,

                <argument pos:start="163:17" pos:end="163:29"><expr pos:start="163:17" pos:end="163:29"><name pos:start="163:17" pos:end="163:29">chroma_height</name></expr></argument>, <argument pos:start="163:32" pos:end="163:60"><expr pos:start="163:32" pos:end="163:60"><name pos:start="163:32" pos:end="163:38">buf_pos</name> <operator pos:start="163:40" pos:end="163:40">+</operator> <name pos:start="163:42" pos:end="163:56">mc_vector_count</name> <operator pos:start="163:58" pos:end="163:58">*</operator> <literal type="number" pos:start="163:60" pos:end="163:60">2</literal></expr></argument>, <argument pos:start="163:63" pos:end="163:71"><expr pos:start="163:63" pos:end="163:71"><name pos:start="163:63" pos:end="163:71">cb_offset</name></expr></argument>, <argument pos:start="163:74" pos:end="163:80"><expr pos:start="163:74" pos:end="163:80"><name pos:start="163:74" pos:end="163:80">hdr_pos</name></expr></argument>, <argument pos:start="163:83" pos:end="163:89"><expr pos:start="163:83" pos:end="163:89"><name pos:start="163:83" pos:end="163:89">buf_pos</name></expr></argument>,

                <argument pos:start="165:17" pos:end="165:39"><expr pos:start="165:17" pos:end="165:39"><call pos:start="165:17" pos:end="165:39"><name pos:start="165:17" pos:end="165:21">FFMIN</name><argument_list pos:start="165:22" pos:end="165:39">(<argument pos:start="165:23" pos:end="165:34"><expr pos:start="165:23" pos:end="165:34"><name pos:start="165:23" pos:end="165:34">chroma_width</name></expr></argument>, <argument pos:start="165:37" pos:end="165:38"><expr pos:start="165:37" pos:end="165:38"><literal type="number" pos:start="165:37" pos:end="165:38">40</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <return pos:start="172:5" pos:end="172:13">return <expr pos:start="172:12" pos:end="172:12"><literal type="number" pos:start="172:12" pos:end="172:12">8</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
