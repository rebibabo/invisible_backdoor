<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22044.c" pos:tabs="8"><function pos:start="1:1" pos:end="42:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">MemTxResult</name></type> <name pos:start="1:20" pos:end="1:58">memory_region_write_with_attrs_accessor</name><parameter_list pos:start="1:59" pos:end="13:76">(<parameter pos:start="1:60" pos:end="1:75"><decl pos:start="1:60" pos:end="1:75"><type pos:start="1:60" pos:end="1:75"><name pos:start="1:60" pos:end="1:71">MemoryRegion</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:75">mr</name></decl></parameter>,

                                                           <parameter pos:start="3:60" pos:end="3:70"><decl pos:start="3:60" pos:end="3:70"><type pos:start="3:60" pos:end="3:70"><name pos:start="3:60" pos:end="3:65">hwaddr</name></type> <name pos:start="3:67" pos:end="3:70">addr</name></decl></parameter>,

                                                           <parameter pos:start="5:60" pos:end="5:74"><decl pos:start="5:60" pos:end="5:74"><type pos:start="5:60" pos:end="5:74"><name pos:start="5:60" pos:end="5:67">uint64_t</name> <modifier pos:start="5:69" pos:end="5:69">*</modifier></type><name pos:start="5:70" pos:end="5:74">value</name></decl></parameter>,

                                                           <parameter pos:start="7:60" pos:end="7:72"><decl pos:start="7:60" pos:end="7:72"><type pos:start="7:60" pos:end="7:72"><name pos:start="7:60" pos:end="7:67">unsigned</name></type> <name pos:start="7:69" pos:end="7:72">size</name></decl></parameter>,

                                                           <parameter pos:start="9:60" pos:end="9:73"><decl pos:start="9:60" pos:end="9:73"><type pos:start="9:60" pos:end="9:73"><name pos:start="9:60" pos:end="9:67">unsigned</name></type> <name pos:start="9:69" pos:end="9:73">shift</name></decl></parameter>,

                                                           <parameter pos:start="11:60" pos:end="11:72"><decl pos:start="11:60" pos:end="11:72"><type pos:start="11:60" pos:end="11:72"><name pos:start="11:60" pos:end="11:67">uint64_t</name></type> <name pos:start="11:69" pos:end="11:72">mask</name></decl></parameter>,

                                                           <parameter pos:start="13:60" pos:end="13:75"><decl pos:start="13:60" pos:end="13:75"><type pos:start="13:60" pos:end="13:75"><name pos:start="13:60" pos:end="13:69">MemTxAttrs</name></type> <name pos:start="13:71" pos:end="13:75">attrs</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="42:1">{<block_content pos:start="17:5" pos:end="40:73">

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:16">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:7">tmp</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <operator pos:start="21:11" pos:end="21:11">(</operator><operator pos:start="21:12" pos:end="21:12">*</operator><name pos:start="21:13" pos:end="21:17">value</name> <operator pos:start="21:19" pos:end="21:20">&gt;&gt;</operator> <name pos:start="21:22" pos:end="21:26">shift</name><operator pos:start="21:27" pos:end="21:27">)</operator> <operator pos:start="21:29" pos:end="21:29">&amp;</operator> <name pos:start="21:31" pos:end="21:34">mask</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="38:5"><if pos:start="23:5" pos:end="32:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:10">mr</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:19">subpage</name></name></expr>)</condition> <block pos:start="23:22" pos:end="32:5">{<block_content pos:start="25:9" pos:end="25:80">

        <expr_stmt pos:start="25:9" pos:end="25:80"><expr pos:start="25:9" pos:end="25:79"><call pos:start="25:9" pos:end="25:79"><name pos:start="25:9" pos:end="25:41">trace_memory_region_subpage_write</name><argument_list pos:start="25:42" pos:end="25:79">(<argument pos:start="25:43" pos:end="25:57"><expr pos:start="25:43" pos:end="25:57"><call pos:start="25:43" pos:end="25:57"><name pos:start="25:43" pos:end="25:55">get_cpu_index</name><argument_list pos:start="25:56" pos:end="25:57">()</argument_list></call></expr></argument>, <argument pos:start="25:60" pos:end="25:61"><expr pos:start="25:60" pos:end="25:61"><name pos:start="25:60" pos:end="25:61">mr</name></expr></argument>, <argument pos:start="25:64" pos:end="25:67"><expr pos:start="25:64" pos:end="25:67"><name pos:start="25:64" pos:end="25:67">addr</name></expr></argument>, <argument pos:start="25:70" pos:end="25:72"><expr pos:start="25:70" pos:end="25:72"><name pos:start="25:70" pos:end="25:72">tmp</name></expr></argument>, <argument pos:start="25:75" pos:end="25:78"><expr pos:start="25:75" pos:end="25:78"><name pos:start="25:75" pos:end="25:78">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    </block_content>}</block></if> <if type="elseif" pos:start="32:7" pos:end="38:5">else if <condition pos:start="32:15" pos:end="32:53">(<expr pos:start="32:16" pos:end="32:52"><name pos:start="32:16" pos:end="32:52">TRACE_MEMORY_REGION_OPS_WRITE_ENABLED</name></expr>)</condition> <block pos:start="32:55" pos:end="38:5">{<block_content pos:start="34:9" pos:end="36:80">

        <decl_stmt pos:start="34:9" pos:end="34:67"><decl pos:start="34:9" pos:end="34:66"><type pos:start="34:9" pos:end="34:14"><name pos:start="34:9" pos:end="34:14">hwaddr</name></type> <name pos:start="34:16" pos:end="34:23">abs_addr</name> <init pos:start="34:25" pos:end="34:66">= <expr pos:start="34:27" pos:end="34:66"><call pos:start="34:27" pos:end="34:66"><name pos:start="34:27" pos:end="34:56">memory_region_to_absolute_addr</name><argument_list pos:start="34:57" pos:end="34:66">(<argument pos:start="34:58" pos:end="34:59"><expr pos:start="34:58" pos:end="34:59"><name pos:start="34:58" pos:end="34:59">mr</name></expr></argument>, <argument pos:start="34:62" pos:end="34:65"><expr pos:start="34:62" pos:end="34:65"><name pos:start="34:62" pos:end="34:65">addr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="36:9" pos:end="36:80"><expr pos:start="36:9" pos:end="36:79"><call pos:start="36:9" pos:end="36:79"><name pos:start="36:9" pos:end="36:37">trace_memory_region_ops_write</name><argument_list pos:start="36:38" pos:end="36:79">(<argument pos:start="36:39" pos:end="36:53"><expr pos:start="36:39" pos:end="36:53"><call pos:start="36:39" pos:end="36:53"><name pos:start="36:39" pos:end="36:51">get_cpu_index</name><argument_list pos:start="36:52" pos:end="36:53">()</argument_list></call></expr></argument>, <argument pos:start="36:56" pos:end="36:57"><expr pos:start="36:56" pos:end="36:57"><name pos:start="36:56" pos:end="36:57">mr</name></expr></argument>, <argument pos:start="36:60" pos:end="36:67"><expr pos:start="36:60" pos:end="36:67"><name pos:start="36:60" pos:end="36:67">abs_addr</name></expr></argument>, <argument pos:start="36:70" pos:end="36:72"><expr pos:start="36:70" pos:end="36:72"><name pos:start="36:70" pos:end="36:72">tmp</name></expr></argument>, <argument pos:start="36:75" pos:end="36:78"><expr pos:start="36:75" pos:end="36:78"><name pos:start="36:75" pos:end="36:78">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="40:5" pos:end="40:73">return <expr pos:start="40:12" pos:end="40:72"><call pos:start="40:12" pos:end="40:72"><name pos:start="40:12" pos:end="40:36"><name pos:start="40:12" pos:end="40:13">mr</name><operator pos:start="40:14" pos:end="40:15">-&gt;</operator><name pos:start="40:16" pos:end="40:18">ops</name><operator pos:start="40:19" pos:end="40:20">-&gt;</operator><name pos:start="40:21" pos:end="40:36">write_with_attrs</name></name><argument_list pos:start="40:37" pos:end="40:72">(<argument pos:start="40:38" pos:end="40:47"><expr pos:start="40:38" pos:end="40:47"><name pos:start="40:38" pos:end="40:47"><name pos:start="40:38" pos:end="40:39">mr</name><operator pos:start="40:40" pos:end="40:41">-&gt;</operator><name pos:start="40:42" pos:end="40:47">opaque</name></name></expr></argument>, <argument pos:start="40:50" pos:end="40:53"><expr pos:start="40:50" pos:end="40:53"><name pos:start="40:50" pos:end="40:53">addr</name></expr></argument>, <argument pos:start="40:56" pos:end="40:58"><expr pos:start="40:56" pos:end="40:58"><name pos:start="40:56" pos:end="40:58">tmp</name></expr></argument>, <argument pos:start="40:61" pos:end="40:64"><expr pos:start="40:61" pos:end="40:64"><name pos:start="40:61" pos:end="40:64">size</name></expr></argument>, <argument pos:start="40:67" pos:end="40:71"><expr pos:start="40:67" pos:end="40:71"><name pos:start="40:67" pos:end="40:71">attrs</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
