<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5458.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">cmd_start_stop_unit</name><parameter_list pos:start="1:32" pos:end="1:58">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:40">IDEState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:52">uint8_t</name><modifier pos:start="1:53" pos:end="1:53">*</modifier></type> <name pos:start="1:55" pos:end="1:57">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:24">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">sense</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:14">start</name> <init pos:start="7:16" pos:end="7:27">= <expr pos:start="7:18" pos:end="7:27"><name pos:start="7:18" pos:end="7:23"><name pos:start="7:18" pos:end="7:20">buf</name><index pos:start="7:21" pos:end="7:23">[<expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">4</literal></expr>]</index></name> <operator pos:start="7:25" pos:end="7:25">&amp;</operator> <literal type="number" pos:start="7:27" pos:end="7:27">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:13">loej</name> <init pos:start="9:15" pos:end="9:26">= <expr pos:start="9:17" pos:end="9:26"><name pos:start="9:17" pos:end="9:22"><name pos:start="9:17" pos:end="9:19">buf</name><index pos:start="9:20" pos:end="9:22">[<expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">4</literal></expr>]</index></name> <operator pos:start="9:24" pos:end="9:24">&amp;</operator> <literal type="number" pos:start="9:26" pos:end="9:26">2</literal></expr></init></decl>;</decl_stmt>     <comment type="block" pos:start="9:33" pos:end="9:68">/* load on start, eject on !start */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">pwrcnd</name> <init pos:start="11:16" pos:end="11:30">= <expr pos:start="11:18" pos:end="11:30"><name pos:start="11:18" pos:end="11:23"><name pos:start="11:18" pos:end="11:20">buf</name><index pos:start="11:21" pos:end="11:23">[<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">4</literal></expr>]</index></name> <operator pos:start="11:25" pos:end="11:25">&amp;</operator> <literal type="number" pos:start="11:27" pos:end="11:30">0xf0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">pwrcnd</name></expr>)</condition> <block pos:start="15:17" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <comment type="block" pos:start="17:9" pos:end="17:62">/* eject/load only happens for power condition == 0 */</comment>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="49:5"><if pos:start="25:5" pos:end="49:5">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><name pos:start="25:9" pos:end="25:12">loej</name></expr>)</condition> <block pos:start="25:15" pos:end="49:5">{<block_content pos:start="27:9" pos:end="47:9">

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:54">(<expr pos:start="27:13" pos:end="27:53"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:18">start</name> <operator pos:start="27:20" pos:end="27:21">&amp;&amp;</operator> <operator pos:start="27:23" pos:end="27:23">!</operator><name pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:35">tray_open</name></name> <operator pos:start="27:37" pos:end="27:38">&amp;&amp;</operator> <name pos:start="27:40" pos:end="27:53"><name pos:start="27:40" pos:end="27:40">s</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:53">tray_locked</name></name></expr>)</condition> <block pos:start="27:56" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:19">

            <expr_stmt pos:start="29:13" pos:end="31:46"><expr pos:start="29:13" pos:end="31:45"><name pos:start="29:13" pos:end="29:17">sense</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <ternary pos:start="29:21" pos:end="31:45"><condition pos:start="29:21" pos:end="31:17"><expr pos:start="29:21" pos:end="29:43"><call pos:start="29:21" pos:end="29:43"><name pos:start="29:21" pos:end="29:36">bdrv_is_inserted</name><argument_list pos:start="29:37" pos:end="29:43">(<argument pos:start="29:38" pos:end="29:42"><expr pos:start="29:38" pos:end="29:42"><name pos:start="29:38" pos:end="29:42"><name pos:start="29:38" pos:end="29:38">s</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:42">bs</name></name></expr></argument>)</argument_list></call></expr>

                ?</condition><then pos:start="31:19" pos:end="31:27"> <expr pos:start="31:19" pos:end="31:27"><name pos:start="31:19" pos:end="31:27">NOT_READY</name></expr> </then><else pos:start="31:29" pos:end="31:45">: <expr pos:start="31:31" pos:end="31:45"><name pos:start="31:31" pos:end="31:45">ILLEGAL_REQUEST</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:71"><expr pos:start="33:13" pos:end="33:70"><call pos:start="33:13" pos:end="33:70"><name pos:start="33:13" pos:end="33:31">ide_atapi_cmd_error</name><argument_list pos:start="33:32" pos:end="33:70">(<argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">s</name></expr></argument>, <argument pos:start="33:36" pos:end="33:40"><expr pos:start="33:36" pos:end="33:40"><name pos:start="33:36" pos:end="33:40">sense</name></expr></argument>, <argument pos:start="33:43" pos:end="33:69"><expr pos:start="33:43" pos:end="33:69"><name pos:start="33:43" pos:end="33:69">ASC_MEDIA_REMOVAL_PREVENTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:35">(<expr pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:24">tray_open</name></name> <operator pos:start="41:26" pos:end="41:27">!=</operator> <operator pos:start="41:29" pos:end="41:29">!</operator><name pos:start="41:30" pos:end="41:34">start</name></expr>)</condition> <block pos:start="41:37" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:34">

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><call pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:22">bdrv_eject</name><argument_list pos:start="43:23" pos:end="43:37">(<argument pos:start="43:24" pos:end="43:28"><expr pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:24">s</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">bs</name></name></expr></argument>, <argument pos:start="43:31" pos:end="43:36"><expr pos:start="43:31" pos:end="43:36"><operator pos:start="43:31" pos:end="43:31">!</operator><name pos:start="43:32" pos:end="43:36">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:24">tray_open</name></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <operator pos:start="45:28" pos:end="45:28">!</operator><name pos:start="45:29" pos:end="45:33">start</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:24"><expr pos:start="53:5" pos:end="53:23"><call pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:20">ide_atapi_cmd_ok</name><argument_list pos:start="53:21" pos:end="53:23">(<argument pos:start="53:22" pos:end="53:22"><expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
