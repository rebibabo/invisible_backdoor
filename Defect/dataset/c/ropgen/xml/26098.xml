<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26098.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">stream_component_close</name><parameter_list pos:start="1:35" pos:end="1:68">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:45">VideoState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">is</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:67"><decl pos:start="1:52" pos:end="1:67"><type pos:start="1:52" pos:end="1:67"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:67">stream_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">ic</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:28">is</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:32">ic</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">avctx</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:59">(<expr pos:start="11:9" pos:end="11:58"><name pos:start="11:9" pos:end="11:20">stream_index</name> <operator pos:start="11:22" pos:end="11:22">&lt;</operator> <literal type="number" pos:start="11:24" pos:end="11:24">0</literal> <operator pos:start="11:26" pos:end="11:27">||</operator> <name pos:start="11:29" pos:end="11:40">stream_index</name> <operator pos:start="11:42" pos:end="11:43">&gt;=</operator> <name pos:start="11:45" pos:end="11:58"><name pos:start="11:45" pos:end="11:46">ic</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:58">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:9">avctx</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:14">ic</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:23">streams</name><index pos:start="15:24" pos:end="15:37">[<expr pos:start="15:25" pos:end="15:36"><name pos:start="15:25" pos:end="15:36">stream_index</name></expr>]</index></name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:44">codec</name></expr>;</expr_stmt>



    <switch pos:start="19:5" pos:end="121:5">switch <condition pos:start="19:12" pos:end="19:30">(<expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:17">avctx</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:29">codec_type</name></name></expr>)</condition> <block pos:start="19:32" pos:end="121:5">{<block_content pos:start="21:5" pos:end="119:14">

    <case pos:start="21:5" pos:end="21:28">case <expr pos:start="21:10" pos:end="21:27"><name pos:start="21:10" pos:end="21:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:26">packet_queue_abort</name><argument_list pos:start="23:27" pos:end="23:39">(<argument pos:start="23:28" pos:end="23:38"><expr pos:start="23:28" pos:end="23:38"><operator pos:start="23:28" pos:end="23:28">&amp;</operator><name pos:start="23:29" pos:end="23:38"><name pos:start="23:29" pos:end="23:30">is</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:38">audioq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:22">SDL_CloseAudio</name><argument_list pos:start="27:23" pos:end="27:24">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:40"><expr pos:start="31:9" pos:end="31:39"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:26">packet_queue_flush</name><argument_list pos:start="31:27" pos:end="31:39">(<argument pos:start="31:28" pos:end="31:38"><expr pos:start="31:28" pos:end="31:38"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:38"><name pos:start="31:29" pos:end="31:30">is</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:38">audioq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><call pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:22">av_free_packet</name><argument_list pos:start="33:23" pos:end="33:38">(<argument pos:start="33:24" pos:end="33:37"><expr pos:start="33:24" pos:end="33:37"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:26">is</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:37">audio_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:35"><if pos:start="35:9" pos:end="37:35">if <condition pos:start="35:12" pos:end="35:24">(<expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:14">is</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:23">swr_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:35"><block_content pos:start="37:13" pos:end="37:35">

            <expr_stmt pos:start="37:13" pos:end="37:35"><expr pos:start="37:13" pos:end="37:34"><call pos:start="37:13" pos:end="37:34"><name pos:start="37:13" pos:end="37:20">swr_free</name><argument_list pos:start="37:21" pos:end="37:34">(<argument pos:start="37:22" pos:end="37:33"><expr pos:start="37:22" pos:end="37:33"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:33"><name pos:start="37:23" pos:end="37:24">is</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:33">swr_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:34"><expr pos:start="39:9" pos:end="39:33"><call pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:16">av_freep</name><argument_list pos:start="39:17" pos:end="39:33">(<argument pos:start="39:18" pos:end="39:32"><expr pos:start="39:18" pos:end="39:32"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:32"><name pos:start="39:19" pos:end="39:20">is</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:32">audio_buf1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:10">is</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:21">audio_buf</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:28">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><call pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:16">av_freep</name><argument_list pos:start="43:17" pos:end="43:28">(<argument pos:start="43:18" pos:end="43:27"><expr pos:start="43:18" pos:end="43:27"><operator pos:start="43:18" pos:end="43:18">&amp;</operator><name pos:start="43:19" pos:end="43:27"><name pos:start="43:19" pos:end="43:20">is</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:27">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="57:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="47:21">(<expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:14">is</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:20">rdft</name></name></expr>)</condition> <block pos:start="47:23" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:30">

            <expr_stmt pos:start="49:13" pos:end="49:34"><expr pos:start="49:13" pos:end="49:33"><call pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:23">av_rdft_end</name><argument_list pos:start="49:24" pos:end="49:33">(<argument pos:start="49:25" pos:end="49:32"><expr pos:start="49:25" pos:end="49:32"><name pos:start="49:25" pos:end="49:32"><name pos:start="49:25" pos:end="49:26">is</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:32">rdft</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:37"><expr pos:start="51:13" pos:end="51:36"><call pos:start="51:13" pos:end="51:36"><name pos:start="51:13" pos:end="51:20">av_freep</name><argument_list pos:start="51:21" pos:end="51:36">(<argument pos:start="51:22" pos:end="51:35"><expr pos:start="51:22" pos:end="51:35"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:35"><name pos:start="51:23" pos:end="51:24">is</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:35">rdft_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:28"><expr pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:14">is</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:20">rdft</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:27">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:30"><expr pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:14">is</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:25">rdft_bits</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <literal type="number" pos:start="55:29" pos:end="55:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:28">case <expr pos:start="61:10" pos:end="61:27"><name pos:start="61:10" pos:end="61:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:40"><expr pos:start="63:9" pos:end="63:39"><call pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:26">packet_queue_abort</name><argument_list pos:start="63:27" pos:end="63:39">(<argument pos:start="63:28" pos:end="63:38"><expr pos:start="63:28" pos:end="63:38"><operator pos:start="63:28" pos:end="63:28">&amp;</operator><name pos:start="63:29" pos:end="63:38"><name pos:start="63:29" pos:end="63:30">is</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:38">videoq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="67:9" pos:end="69:39">/* note: we also signal this mutex to make sure we deblock the

           video thread in all cases */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:39"><expr pos:start="71:9" pos:end="71:38"><call pos:start="71:9" pos:end="71:38"><name pos:start="71:9" pos:end="71:21">SDL_LockMutex</name><argument_list pos:start="71:22" pos:end="71:38">(<argument pos:start="71:23" pos:end="71:37"><expr pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:24">is</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:37">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:39"><expr pos:start="73:9" pos:end="73:38"><call pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:22">SDL_CondSignal</name><argument_list pos:start="73:23" pos:end="73:38">(<argument pos:start="73:24" pos:end="73:37"><expr pos:start="73:24" pos:end="73:37"><name pos:start="73:24" pos:end="73:37"><name pos:start="73:24" pos:end="73:25">is</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:37">pictq_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:41"><expr pos:start="75:9" pos:end="75:40"><call pos:start="75:9" pos:end="75:40"><name pos:start="75:9" pos:end="75:23">SDL_UnlockMutex</name><argument_list pos:start="75:24" pos:end="75:40">(<argument pos:start="75:25" pos:end="75:39"><expr pos:start="75:25" pos:end="75:39"><name pos:start="75:25" pos:end="75:39"><name pos:start="75:25" pos:end="75:26">is</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:39">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:44"><expr pos:start="79:9" pos:end="79:43"><call pos:start="79:9" pos:end="79:43"><name pos:start="79:9" pos:end="79:22">SDL_WaitThread</name><argument_list pos:start="79:23" pos:end="79:43">(<argument pos:start="79:24" pos:end="79:36"><expr pos:start="79:24" pos:end="79:36"><name pos:start="79:24" pos:end="79:36"><name pos:start="79:24" pos:end="79:25">is</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:36">video_tid</name></name></expr></argument>, <argument pos:start="79:39" pos:end="79:42"><expr pos:start="79:39" pos:end="79:42"><name pos:start="79:39" pos:end="79:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:40"><expr pos:start="83:9" pos:end="83:39"><call pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:26">packet_queue_flush</name><argument_list pos:start="83:27" pos:end="83:39">(<argument pos:start="83:28" pos:end="83:38"><expr pos:start="83:28" pos:end="83:38"><operator pos:start="83:28" pos:end="83:28">&amp;</operator><name pos:start="83:29" pos:end="83:38"><name pos:start="83:29" pos:end="83:30">is</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:38">videoq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:31">case <expr pos:start="87:10" pos:end="87:30"><name pos:start="87:10" pos:end="87:30">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><call pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:26">packet_queue_abort</name><argument_list pos:start="89:27" pos:end="89:42">(<argument pos:start="89:28" pos:end="89:41"><expr pos:start="89:28" pos:end="89:41"><operator pos:start="89:28" pos:end="89:28">&amp;</operator><name pos:start="89:29" pos:end="89:41"><name pos:start="89:29" pos:end="89:30">is</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:41">subtitleq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="93:9" pos:end="95:39">/* note: we also signal this mutex to make sure we deblock the

           video thread in all cases */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:39"><expr pos:start="97:9" pos:end="97:38"><call pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:21">SDL_LockMutex</name><argument_list pos:start="97:22" pos:end="97:38">(<argument pos:start="97:23" pos:end="97:37"><expr pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:24">is</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:37">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:40"><expr pos:start="99:9" pos:end="99:39"><name pos:start="99:9" pos:end="99:35"><name pos:start="99:9" pos:end="99:10">is</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:35">subtitle_stream_changed</name></name> <operator pos:start="99:37" pos:end="99:37">=</operator> <literal type="number" pos:start="99:39" pos:end="99:39">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:39"><expr pos:start="103:9" pos:end="103:38"><call pos:start="103:9" pos:end="103:38"><name pos:start="103:9" pos:end="103:22">SDL_CondSignal</name><argument_list pos:start="103:23" pos:end="103:38">(<argument pos:start="103:24" pos:end="103:37"><expr pos:start="103:24" pos:end="103:37"><name pos:start="103:24" pos:end="103:37"><name pos:start="103:24" pos:end="103:25">is</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:37">subpq_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:41"><expr pos:start="105:9" pos:end="105:40"><call pos:start="105:9" pos:end="105:40"><name pos:start="105:9" pos:end="105:23">SDL_UnlockMutex</name><argument_list pos:start="105:24" pos:end="105:40">(<argument pos:start="105:25" pos:end="105:39"><expr pos:start="105:25" pos:end="105:39"><name pos:start="105:25" pos:end="105:39"><name pos:start="105:25" pos:end="105:26">is</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:39">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><call pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:22">SDL_WaitThread</name><argument_list pos:start="109:23" pos:end="109:46">(<argument pos:start="109:24" pos:end="109:39"><expr pos:start="109:24" pos:end="109:39"><name pos:start="109:24" pos:end="109:39"><name pos:start="109:24" pos:end="109:25">is</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:39">subtitle_tid</name></name></expr></argument>, <argument pos:start="109:42" pos:end="109:45"><expr pos:start="109:42" pos:end="109:45"><name pos:start="109:42" pos:end="109:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:43"><expr pos:start="113:9" pos:end="113:42"><call pos:start="113:9" pos:end="113:42"><name pos:start="113:9" pos:end="113:26">packet_queue_flush</name><argument_list pos:start="113:27" pos:end="113:42">(<argument pos:start="113:28" pos:end="113:41"><expr pos:start="113:28" pos:end="113:41"><operator pos:start="113:28" pos:end="113:28">&amp;</operator><name pos:start="113:29" pos:end="113:41"><name pos:start="113:29" pos:end="113:30">is</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:41">subtitleq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <default pos:start="117:5" pos:end="117:12">default:</default>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="125:5" pos:end="125:55"><expr pos:start="125:5" pos:end="125:54"><name pos:start="125:5" pos:end="125:29"><name pos:start="125:5" pos:end="125:6">ic</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:15">streams</name><index pos:start="125:16" pos:end="125:29">[<expr pos:start="125:17" pos:end="125:28"><name pos:start="125:17" pos:end="125:28">stream_index</name></expr>]</index></name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:38">discard</name> <operator pos:start="125:40" pos:end="125:40">=</operator> <name pos:start="125:42" pos:end="125:54">AVDISCARD_ALL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="130:0"><expr pos:start="127:5" pos:end="127:24"><call pos:start="127:5" pos:end="127:24"><name pos:start="127:5" pos:end="127:17">avcodec_close</name><argument_list pos:start="127:18" pos:end="127:24">(<argument pos:start="127:19" pos:end="127:23"><expr pos:start="127:19" pos:end="127:23"><name pos:start="127:19" pos:end="127:23">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="129:1" pos:end="129:19">#<cpp:directive pos:start="129:2" pos:end="129:3">if</cpp:directive> <expr pos:start="129:5" pos:end="129:19"><name pos:start="129:5" pos:end="129:19">CONFIG_AVFILTER</name></expr></cpp:if>

    <expr_stmt pos:start="131:5" pos:end="134:0"><expr pos:start="131:5" pos:end="131:38"><call pos:start="131:5" pos:end="131:38"><name pos:start="131:5" pos:end="131:20">free_buffer_pool</name><argument_list pos:start="131:21" pos:end="131:38">(<argument pos:start="131:22" pos:end="131:37"><expr pos:start="131:22" pos:end="131:37"><operator pos:start="131:22" pos:end="131:22">&amp;</operator><name pos:start="131:23" pos:end="131:37"><name pos:start="131:23" pos:end="131:24">is</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:37">buffer_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="133:1" pos:end="133:6">#<cpp:directive pos:start="133:2" pos:end="133:6">endif</cpp:directive></cpp:endif>

    <switch pos:start="135:5" pos:end="165:5">switch <condition pos:start="135:12" pos:end="135:30">(<expr pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:17">avctx</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:29">codec_type</name></name></expr>)</condition> <block pos:start="135:32" pos:end="165:5">{<block_content pos:start="137:5" pos:end="163:14">

    <case pos:start="137:5" pos:end="137:28">case <expr pos:start="137:10" pos:end="137:27"><name pos:start="137:10" pos:end="137:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="139:9" pos:end="139:28"><expr pos:start="139:9" pos:end="139:27"><name pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:10">is</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:20">audio_st</name></name> <operator pos:start="139:22" pos:end="139:22">=</operator> <name pos:start="139:24" pos:end="139:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:30"><expr pos:start="141:9" pos:end="141:29"><name pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:10">is</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:24">audio_stream</name></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <operator pos:start="141:28" pos:end="141:28">-</operator><literal type="number" pos:start="141:29" pos:end="141:29">1</literal></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <case pos:start="145:5" pos:end="145:28">case <expr pos:start="145:10" pos:end="145:27"><name pos:start="145:10" pos:end="145:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="147:9" pos:end="147:28"><expr pos:start="147:9" pos:end="147:27"><name pos:start="147:9" pos:end="147:20"><name pos:start="147:9" pos:end="147:10">is</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:20">video_st</name></name> <operator pos:start="147:22" pos:end="147:22">=</operator> <name pos:start="147:24" pos:end="147:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:30"><expr pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:10">is</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:24">video_stream</name></name> <operator pos:start="149:26" pos:end="149:26">=</operator> <operator pos:start="149:28" pos:end="149:28">-</operator><literal type="number" pos:start="149:29" pos:end="149:29">1</literal></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>

    <case pos:start="153:5" pos:end="153:31">case <expr pos:start="153:10" pos:end="153:30"><name pos:start="153:10" pos:end="153:30">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <expr_stmt pos:start="155:9" pos:end="155:31"><expr pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:23"><name pos:start="155:9" pos:end="155:10">is</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:23">subtitle_st</name></name> <operator pos:start="155:25" pos:end="155:25">=</operator> <name pos:start="155:27" pos:end="155:30">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:33"><expr pos:start="157:9" pos:end="157:32"><name pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:10">is</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:27">subtitle_stream</name></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <operator pos:start="157:31" pos:end="157:31">-</operator><literal type="number" pos:start="157:32" pos:end="157:32">1</literal></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <default pos:start="161:5" pos:end="161:12">default:</default>

        <break pos:start="163:9" pos:end="163:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
