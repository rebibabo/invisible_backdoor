<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22603.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">flv_h263_decode_picture_header</name><parameter_list pos:start="1:35" pos:end="1:53">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">MpegEncContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">format</name></decl>, <decl pos:start="5:17" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:21">width</name></decl>, <decl pos:start="5:24" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:29">height</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:24">/* picture header */</comment>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:39">(<expr pos:start="11:9" pos:end="11:38"><call pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:21">get_bits_long</name><argument_list pos:start="11:22" pos:end="11:33">(<argument pos:start="11:23" pos:end="11:28"><expr pos:start="11:23" pos:end="11:28"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:28"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:28">gb</name></name></expr></argument>, <argument pos:start="11:31" pos:end="11:32"><expr pos:start="11:31" pos:end="11:32"><literal type="number" pos:start="11:31" pos:end="11:32">17</literal></expr></argument>)</argument_list></call> <operator pos:start="11:35" pos:end="11:36">!=</operator> <literal type="number" pos:start="11:38" pos:end="11:38">1</literal></expr>)</condition> <block pos:start="11:41" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:67"><expr pos:start="13:9" pos:end="13:66"><call pos:start="13:9" pos:end="13:66"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:66">(<argument pos:start="13:16" pos:end="13:23"><expr pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:23">avctx</name></name></expr></argument>, <argument pos:start="13:26" pos:end="13:37"><expr pos:start="13:26" pos:end="13:37"><name pos:start="13:26" pos:end="13:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:40" pos:end="13:65"><expr pos:start="13:40" pos:end="13:65"><literal type="string" pos:start="13:40" pos:end="13:65">"Bad picture start code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:10">format</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:32"><name pos:start="19:14" pos:end="19:21">get_bits</name><argument_list pos:start="19:22" pos:end="19:32">(<argument pos:start="19:23" pos:end="19:28"><expr pos:start="19:23" pos:end="19:28"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:28"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:28">gb</name></name></expr></argument>, <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:14">format</name> <operator pos:start="21:16" pos:end="21:17">!=</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal> <operator pos:start="21:21" pos:end="21:22">&amp;&amp;</operator> <name pos:start="21:24" pos:end="21:29">format</name> <operator pos:start="21:31" pos:end="21:32">!=</operator> <literal type="number" pos:start="21:34" pos:end="21:34">1</literal></expr>)</condition> <block pos:start="21:37" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:63"><expr pos:start="23:9" pos:end="23:62"><call pos:start="23:9" pos:end="23:62"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:62">(<argument pos:start="23:16" pos:end="23:23"><expr pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:23">avctx</name></name></expr></argument>, <argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:40" pos:end="23:61"><expr pos:start="23:40" pos:end="23:61"><literal type="string" pos:start="23:40" pos:end="23:61">"Bad picture format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">h263_flv</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:24">format</name><operator pos:start="29:25" pos:end="29:25">+</operator><literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:21">picture_number</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <call pos:start="31:25" pos:end="31:43"><name pos:start="31:25" pos:end="31:32">get_bits</name><argument_list pos:start="31:33" pos:end="31:43">(<argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:39"><name pos:start="31:35" pos:end="31:35">s</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:39">gb</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:42"><expr pos:start="31:42" pos:end="31:42"><literal type="number" pos:start="31:42" pos:end="31:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:46" pos:end="31:68">/* picture timestamp */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:10">format</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:32"><name pos:start="33:14" pos:end="33:21">get_bits</name><argument_list pos:start="33:22" pos:end="33:32">(<argument pos:start="33:23" pos:end="33:28"><expr pos:start="33:23" pos:end="33:28"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:28"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:28">gb</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="35:5" pos:end="99:5">switch <condition pos:start="35:12" pos:end="35:19">(<expr pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:18">format</name></expr>)</condition> <block pos:start="35:21" pos:end="99:5">{<block_content pos:start="37:5" pos:end="97:14">

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">0</literal></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:36"><expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:13">width</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:24">get_bits</name><argument_list pos:start="39:25" pos:end="39:35">(<argument pos:start="39:26" pos:end="39:31"><expr pos:start="39:26" pos:end="39:31"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:31"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:31">gb</name></name></expr></argument>, <argument pos:start="39:34" pos:end="39:34"><expr pos:start="39:34" pos:end="39:34"><literal type="number" pos:start="39:34" pos:end="39:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:14">height</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:36"><name pos:start="41:18" pos:end="41:25">get_bits</name><argument_list pos:start="41:26" pos:end="41:36">(<argument pos:start="41:27" pos:end="41:32"><expr pos:start="41:27" pos:end="41:32"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:32">gb</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">1</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:13">width</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:24">get_bits</name><argument_list pos:start="47:25" pos:end="47:36">(<argument pos:start="47:26" pos:end="47:31"><expr pos:start="47:26" pos:end="47:31"><operator pos:start="47:26" pos:end="47:26">&amp;</operator><name pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:27">s</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:31">gb</name></name></expr></argument>, <argument pos:start="47:34" pos:end="47:35"><expr pos:start="47:34" pos:end="47:35"><literal type="number" pos:start="47:34" pos:end="47:35">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:14">height</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:37"><name pos:start="49:18" pos:end="49:25">get_bits</name><argument_list pos:start="49:26" pos:end="49:37">(<argument pos:start="49:27" pos:end="49:32"><expr pos:start="49:27" pos:end="49:32"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:32">gb</name></name></expr></argument>, <argument pos:start="49:35" pos:end="49:36"><expr pos:start="49:35" pos:end="49:36"><literal type="number" pos:start="49:35" pos:end="49:36">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">2</literal></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:20"><expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:13">width</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <literal type="number" pos:start="55:17" pos:end="55:19">352</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:14">height</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:20">288</literal></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">3</literal></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:20"><expr pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:13">width</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <literal type="number" pos:start="63:17" pos:end="63:19">176</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:21"><expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:14">height</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:20">144</literal></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:11">case <expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">4</literal></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:20"><expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:13">width</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:19">128</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:20"><expr pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:14">height</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:19">96</literal></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:11">case <expr pos:start="77:10" pos:end="77:10"><literal type="number" pos:start="77:10" pos:end="77:10">5</literal></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:20"><expr pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:13">width</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <literal type="number" pos:start="79:17" pos:end="79:19">320</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:21"><expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:14">height</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:20">240</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:11">case <expr pos:start="85:10" pos:end="85:10"><literal type="number" pos:start="85:10" pos:end="85:10">6</literal></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:20"><expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:13">width</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <literal type="number" pos:start="87:17" pos:end="87:19">160</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:21"><expr pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:14">height</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:20">120</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <default pos:start="93:5" pos:end="93:12">default:</default>

        <expr_stmt pos:start="95:9" pos:end="95:27"><expr pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:13">width</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <name pos:start="95:17" pos:end="95:22">height</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <literal type="number" pos:start="95:26" pos:end="95:26">0</literal></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="101:5" pos:end="103:18"><if pos:start="101:5" pos:end="103:18">if <condition pos:start="101:8" pos:end="101:38">(<expr pos:start="101:9" pos:end="101:37"><operator pos:start="101:9" pos:end="101:9">(</operator><name pos:start="101:10" pos:end="101:14">width</name> <operator pos:start="101:16" pos:end="101:17">==</operator> <literal type="number" pos:start="101:19" pos:end="101:19">0</literal><operator pos:start="101:20" pos:end="101:20">)</operator> <operator pos:start="101:22" pos:end="101:23">||</operator> <operator pos:start="101:25" pos:end="101:25">(</operator><name pos:start="101:26" pos:end="101:31">height</name> <operator pos:start="101:33" pos:end="101:34">==</operator> <literal type="number" pos:start="101:36" pos:end="101:36">0</literal><operator pos:start="101:37" pos:end="101:37">)</operator></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:18"><block_content pos:start="103:9" pos:end="103:18">

        <return pos:start="103:9" pos:end="103:18">return <expr pos:start="103:16" pos:end="103:17"><operator pos:start="103:16" pos:end="103:16">-</operator><literal type="number" pos:start="103:17" pos:end="103:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:21"><expr pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:12"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:12">width</name></name> <operator pos:start="105:14" pos:end="105:14">=</operator> <name pos:start="105:16" pos:end="105:20">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:23"><expr pos:start="107:5" pos:end="107:22"><name pos:start="107:5" pos:end="107:13"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:13">height</name></name> <operator pos:start="107:15" pos:end="107:15">=</operator> <name pos:start="107:17" pos:end="107:22">height</name></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:48"><expr pos:start="111:5" pos:end="111:47"><name pos:start="111:5" pos:end="111:16"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:16">pict_type</name></name> <operator pos:start="111:18" pos:end="111:18">=</operator> <name pos:start="111:20" pos:end="111:25">I_TYPE</name> <operator pos:start="111:27" pos:end="111:27">+</operator> <call pos:start="111:29" pos:end="111:47"><name pos:start="111:29" pos:end="111:36">get_bits</name><argument_list pos:start="111:37" pos:end="111:47">(<argument pos:start="111:38" pos:end="111:43"><expr pos:start="111:38" pos:end="111:43"><operator pos:start="111:38" pos:end="111:38">&amp;</operator><name pos:start="111:39" pos:end="111:43"><name pos:start="111:39" pos:end="111:39">s</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:43">gb</name></name></expr></argument>, <argument pos:start="111:46" pos:end="111:46"><expr pos:start="111:46" pos:end="111:46"><literal type="number" pos:start="111:46" pos:end="111:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="115:30"><if pos:start="113:5" pos:end="115:30">if <condition pos:start="113:8" pos:end="113:30">(<expr pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:20">pict_type</name></name> <operator pos:start="113:22" pos:end="113:22">&gt;</operator> <name pos:start="113:24" pos:end="113:29">P_TYPE</name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:30"><block_content pos:start="115:9" pos:end="115:30">

        <expr_stmt pos:start="115:9" pos:end="115:30"><expr pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:20">pict_type</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <name pos:start="115:24" pos:end="115:29">P_TYPE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:23"><expr pos:start="117:5" pos:end="117:22"><call pos:start="117:5" pos:end="117:22"><name pos:start="117:5" pos:end="117:14">skip_bits1</name><argument_list pos:start="117:15" pos:end="117:22">(<argument pos:start="117:16" pos:end="117:21"><expr pos:start="117:16" pos:end="117:21"><operator pos:start="117:16" pos:end="117:16">&amp;</operator><name pos:start="117:17" pos:end="117:21"><name pos:start="117:17" pos:end="117:17">s</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="117:25" pos:end="117:45">/* deblocking flag */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:36"><expr pos:start="119:5" pos:end="119:35"><name pos:start="119:5" pos:end="119:13"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:13">qscale</name></name> <operator pos:start="119:15" pos:end="119:15">=</operator> <call pos:start="119:17" pos:end="119:35"><name pos:start="119:17" pos:end="119:24">get_bits</name><argument_list pos:start="119:25" pos:end="119:35">(<argument pos:start="119:26" pos:end="119:31"><expr pos:start="119:26" pos:end="119:31"><operator pos:start="119:26" pos:end="119:26">&amp;</operator><name pos:start="119:27" pos:end="119:31"><name pos:start="119:27" pos:end="119:27">s</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:31">gb</name></name></expr></argument>, <argument pos:start="119:34" pos:end="119:34"><expr pos:start="119:34" pos:end="119:34"><literal type="number" pos:start="119:34" pos:end="119:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:21"><expr pos:start="123:5" pos:end="123:20"><name pos:start="123:5" pos:end="123:16"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:16">h263_plus</name></name> <operator pos:start="123:18" pos:end="123:18">=</operator> <literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:27"><expr pos:start="127:5" pos:end="127:26"><name pos:start="127:5" pos:end="127:22"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:22">unrestricted_mv</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <literal type="number" pos:start="127:26" pos:end="127:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:29"><expr pos:start="129:5" pos:end="129:28"><name pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:24">h263_long_vectors</name></name> <operator pos:start="129:26" pos:end="129:26">=</operator> <literal type="number" pos:start="129:28" pos:end="129:28">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:13">/* PEI */</comment>

    <while pos:start="135:5" pos:end="139:5">while <condition pos:start="135:11" pos:end="135:34">(<expr pos:start="135:12" pos:end="135:33"><call pos:start="135:12" pos:end="135:28"><name pos:start="135:12" pos:end="135:20">get_bits1</name><argument_list pos:start="135:21" pos:end="135:28">(<argument pos:start="135:22" pos:end="135:27"><expr pos:start="135:22" pos:end="135:27"><operator pos:start="135:22" pos:end="135:22">&amp;</operator><name pos:start="135:23" pos:end="135:27"><name pos:start="135:23" pos:end="135:23">s</name><operator pos:start="135:24" pos:end="135:25">-&gt;</operator><name pos:start="135:26" pos:end="135:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="135:30" pos:end="135:31">!=</operator> <literal type="number" pos:start="135:33" pos:end="135:33">0</literal></expr>)</condition> <block pos:start="135:36" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:29">

        <expr_stmt pos:start="137:9" pos:end="137:29"><expr pos:start="137:9" pos:end="137:28"><call pos:start="137:9" pos:end="137:28"><name pos:start="137:9" pos:end="137:17">skip_bits</name><argument_list pos:start="137:18" pos:end="137:28">(<argument pos:start="137:19" pos:end="137:24"><expr pos:start="137:19" pos:end="137:24"><operator pos:start="137:19" pos:end="137:19">&amp;</operator><name pos:start="137:20" pos:end="137:24"><name pos:start="137:20" pos:end="137:20">s</name><operator pos:start="137:21" pos:end="137:22">-&gt;</operator><name pos:start="137:23" pos:end="137:24">gb</name></name></expr></argument>, <argument pos:start="137:27" pos:end="137:27"><expr pos:start="137:27" pos:end="137:27"><literal type="number" pos:start="137:27" pos:end="137:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="141:5" pos:end="141:18"><expr pos:start="141:5" pos:end="141:17"><name pos:start="141:5" pos:end="141:13"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:13">f_code</name></name> <operator pos:start="141:15" pos:end="141:15">=</operator> <literal type="number" pos:start="141:17" pos:end="141:17">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="145:5" pos:end="151:5"><if pos:start="145:5" pos:end="151:5">if<condition pos:start="145:7" pos:end="145:44">(<expr pos:start="145:8" pos:end="145:43"><name pos:start="145:8" pos:end="145:22"><name pos:start="145:8" pos:end="145:8">s</name><operator pos:start="145:9" pos:end="145:10">-&gt;</operator><name pos:start="145:11" pos:end="145:15">avctx</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:22">debug</name></name> <operator pos:start="145:24" pos:end="145:24">&amp;</operator> <name pos:start="145:26" pos:end="145:43">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="145:45" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:97">

        <expr_stmt pos:start="147:9" pos:end="149:97"><expr pos:start="147:9" pos:end="149:96"><call pos:start="147:9" pos:end="149:96"><name pos:start="147:9" pos:end="147:14">av_log</name><argument_list pos:start="147:15" pos:end="149:96">(<argument pos:start="147:16" pos:end="147:23"><expr pos:start="147:16" pos:end="147:23"><name pos:start="147:16" pos:end="147:23"><name pos:start="147:16" pos:end="147:16">s</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:23">avctx</name></name></expr></argument>, <argument pos:start="147:26" pos:end="147:37"><expr pos:start="147:26" pos:end="147:37"><name pos:start="147:26" pos:end="147:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="147:40" pos:end="147:71"><expr pos:start="147:40" pos:end="147:71"><literal type="string" pos:start="147:40" pos:end="147:71">"%c esc_type:%d, qp:%d num:%d\n"</literal></expr></argument>,

               <argument pos:start="149:16" pos:end="149:50"><expr pos:start="149:16" pos:end="149:50"><call pos:start="149:16" pos:end="149:50"><name pos:start="149:16" pos:end="149:36">av_get_pict_type_char</name><argument_list pos:start="149:37" pos:end="149:50">(<argument pos:start="149:38" pos:end="149:49"><expr pos:start="149:38" pos:end="149:49"><name pos:start="149:38" pos:end="149:49"><name pos:start="149:38" pos:end="149:38">s</name><operator pos:start="149:39" pos:end="149:40">-&gt;</operator><name pos:start="149:41" pos:end="149:49">pict_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="149:53" pos:end="149:65"><expr pos:start="149:53" pos:end="149:65"><name pos:start="149:53" pos:end="149:63"><name pos:start="149:53" pos:end="149:53">s</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:63">h263_flv</name></name><operator pos:start="149:64" pos:end="149:64">-</operator><literal type="number" pos:start="149:65" pos:end="149:65">1</literal></expr></argument>, <argument pos:start="149:68" pos:end="149:76"><expr pos:start="149:68" pos:end="149:76"><name pos:start="149:68" pos:end="149:76"><name pos:start="149:68" pos:end="149:68">s</name><operator pos:start="149:69" pos:end="149:70">-&gt;</operator><name pos:start="149:71" pos:end="149:76">qscale</name></name></expr></argument>, <argument pos:start="149:79" pos:end="149:95"><expr pos:start="149:79" pos:end="149:95"><name pos:start="149:79" pos:end="149:95"><name pos:start="149:79" pos:end="149:79">s</name><operator pos:start="149:80" pos:end="149:81">-&gt;</operator><name pos:start="149:82" pos:end="149:95">picture_number</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="155:5" pos:end="157:49"><expr pos:start="155:5" pos:end="157:48"><name pos:start="155:5" pos:end="155:23"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:23">y_dc_scale_table</name></name><operator pos:start="155:24" pos:end="155:24">=</operator>

    <name pos:start="157:5" pos:end="157:23"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:23">c_dc_scale_table</name></name><operator pos:start="157:24" pos:end="157:24">=</operator> <name pos:start="157:26" pos:end="157:48">ff_mpeg1_dc_scale_table</name></expr>;</expr_stmt>



    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
