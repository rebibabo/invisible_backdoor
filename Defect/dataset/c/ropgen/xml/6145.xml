<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6145.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">compand_delay</name><parameter_list pos:start="1:25" pos:end="1:62">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:40">AVFilterContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:54">AVFrame</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:71">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">CompandContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:33">= <expr pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:27">ctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:33">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVFilterLink</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:24">inlink</name> <init pos:start="7:26" pos:end="7:41">= <expr pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">inputs</name><index pos:start="7:39" pos:end="7:41">[<expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:22">channels</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:31">inlink</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:41">channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:24">nb_samples</name> <init pos:start="11:26" pos:end="11:44">= <expr pos:start="11:28" pos:end="11:44"><name pos:start="11:28" pos:end="11:44"><name pos:start="11:28" pos:end="11:32">frame</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:44">nb_samples</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:61"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">chan</name></decl>, <decl pos:start="13:15" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:15">i</name></decl>, <decl pos:start="13:18" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:26">av_uninit</name><argument_list pos:start="13:27" pos:end="13:34">(<argument pos:start="13:28" pos:end="13:33"><expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:33">dindex</name></expr></argument>)</argument_list></decl>, <decl pos:start="13:37" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:37" pos:end="13:42">oindex</name></decl>, <decl pos:start="13:45" pos:end="13:60"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:45" pos:end="13:53">av_uninit</name><argument_list pos:start="13:54" pos:end="13:60">(<argument pos:start="13:55" pos:end="13:59"><expr pos:start="13:55" pos:end="13:59"><name pos:start="13:55" pos:end="13:59">count</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:22">out_frame</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><call pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:14">av_assert1</name><argument_list pos:start="19:15" pos:end="19:28">(<argument pos:start="19:16" pos:end="19:27"><expr pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:23">channels</name> <operator pos:start="19:25" pos:end="19:25">&gt;</operator> <literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:31" pos:end="19:77">/* would corrupt delay_count and delay_index */</comment>



    <for pos:start="23:5" pos:end="85:5">for <control pos:start="23:9" pos:end="23:43">(<init pos:start="23:10" pos:end="23:18"><expr pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:13">chan</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</init> <condition pos:start="23:20" pos:end="23:35"><expr pos:start="23:20" pos:end="23:34"><name pos:start="23:20" pos:end="23:23">chan</name> <operator pos:start="23:25" pos:end="23:25">&lt;</operator> <name pos:start="23:27" pos:end="23:34">channels</name></expr>;</condition> <incr pos:start="23:37" pos:end="23:42"><expr pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:40">chan</name><operator pos:start="23:41" pos:end="23:42">++</operator></expr></incr>)</control> <block pos:start="23:45" pos:end="85:5">{<block_content pos:start="25:9" pos:end="83:9">

        <decl_stmt pos:start="25:9" pos:end="25:65"><decl pos:start="25:9" pos:end="25:64"><type pos:start="25:9" pos:end="25:22"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:20">double</name> <modifier pos:start="25:22" pos:end="25:22">*</modifier></type><name pos:start="25:23" pos:end="25:25">src</name> <init pos:start="25:27" pos:end="25:64">= <expr pos:start="25:29" pos:end="25:64"><operator pos:start="25:29" pos:end="25:29">(</operator><name pos:start="25:30" pos:end="25:35">double</name> <operator pos:start="25:37" pos:end="25:37">*</operator><operator pos:start="25:38" pos:end="25:38">)</operator><name pos:start="25:39" pos:end="25:64"><name pos:start="25:39" pos:end="25:43">frame</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:58">extended_data</name><index pos:start="25:59" pos:end="25:64">[<expr pos:start="25:60" pos:end="25:63"><name pos:start="25:60" pos:end="25:63">chan</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:52"><decl pos:start="27:9" pos:end="27:51"><type pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:14">double</name> <modifier pos:start="27:16" pos:end="27:16">*</modifier></type><name pos:start="27:17" pos:end="27:20">dbuf</name> <init pos:start="27:22" pos:end="27:51">= <expr pos:start="27:24" pos:end="27:51"><operator pos:start="27:24" pos:end="27:24">(</operator><name pos:start="27:25" pos:end="27:30">double</name> <operator pos:start="27:32" pos:end="27:32">*</operator><operator pos:start="27:33" pos:end="27:33">)</operator><name pos:start="27:34" pos:end="27:51"><name pos:start="27:34" pos:end="27:34">s</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:45">delayptrs</name><index pos:start="27:46" pos:end="27:51">[<expr pos:start="27:47" pos:end="27:50"><name pos:start="27:47" pos:end="27:50">chan</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:43"><decl pos:start="29:9" pos:end="29:42"><type pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:17">ChanParam</name> <modifier pos:start="29:19" pos:end="29:19">*</modifier></type><name pos:start="29:20" pos:end="29:21">cp</name> <init pos:start="29:23" pos:end="29:42">= <expr pos:start="29:25" pos:end="29:42"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:42"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:36">channels</name><index pos:start="29:37" pos:end="29:42">[<expr pos:start="29:38" pos:end="29:41"><name pos:start="29:38" pos:end="29:41">chan</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:20"><decl pos:start="31:9" pos:end="31:19"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:14">double</name> <modifier pos:start="31:16" pos:end="31:16">*</modifier></type><name pos:start="31:17" pos:end="31:19">dst</name></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:32"><expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:13">count</name>  <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:31"><name pos:start="35:18" pos:end="35:18">s</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:31">delay_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:14">dindex</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:31"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:31">delay_index</name></name></expr>;</expr_stmt>

        <for pos:start="39:9" pos:end="83:9">for <control pos:start="39:13" pos:end="39:52">(<init pos:start="39:14" pos:end="39:31"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">i</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr><operator pos:start="39:19" pos:end="39:19">,</operator> <expr pos:start="39:21" pos:end="39:30"><name pos:start="39:21" pos:end="39:26">oindex</name> <operator pos:start="39:28" pos:end="39:28">=</operator> <literal type="number" pos:start="39:30" pos:end="39:30">0</literal></expr>;</init> <condition pos:start="39:33" pos:end="39:47"><expr pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:33">i</name> <operator pos:start="39:35" pos:end="39:35">&lt;</operator> <name pos:start="39:37" pos:end="39:46">nb_samples</name></expr>;</condition> <incr pos:start="39:49" pos:end="39:51"><expr pos:start="39:49" pos:end="39:51"><name pos:start="39:49" pos:end="39:49">i</name><operator pos:start="39:50" pos:end="39:51">++</operator></expr></incr>)</control> <block pos:start="39:54" pos:end="83:9">{<block_content pos:start="41:13" pos:end="81:55">

            <decl_stmt pos:start="41:13" pos:end="41:37"><decl pos:start="41:13" pos:end="41:36"><type pos:start="41:13" pos:end="41:24"><specifier pos:start="41:13" pos:end="41:17">const</specifier> <name pos:start="41:19" pos:end="41:24">double</name></type> <name pos:start="41:26" pos:end="41:27">in</name> <init pos:start="41:29" pos:end="41:36">= <expr pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:33">src</name><index pos:start="41:34" pos:end="41:36">[<expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:40"><expr pos:start="43:13" pos:end="43:39"><call pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:25">update_volume</name><argument_list pos:start="43:26" pos:end="43:39">(<argument pos:start="43:27" pos:end="43:28"><expr pos:start="43:27" pos:end="43:28"><name pos:start="43:27" pos:end="43:28">cp</name></expr></argument>, <argument pos:start="43:31" pos:end="43:38"><expr pos:start="43:31" pos:end="43:38"><call pos:start="43:31" pos:end="43:38"><name pos:start="43:31" pos:end="43:34">fabs</name><argument_list pos:start="43:35" pos:end="43:38">(<argument pos:start="43:36" pos:end="43:37"><expr pos:start="43:36" pos:end="43:37"><name pos:start="43:36" pos:end="43:37">in</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="47:13" pos:end="75:13"><if pos:start="47:13" pos:end="71:13">if <condition pos:start="47:16" pos:end="47:42">(<expr pos:start="47:17" pos:end="47:41"><name pos:start="47:17" pos:end="47:21">count</name> <operator pos:start="47:23" pos:end="47:24">&gt;=</operator> <name pos:start="47:26" pos:end="47:41"><name pos:start="47:26" pos:end="47:26">s</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:41">delay_samples</name></name></expr>)</condition> <block pos:start="47:44" pos:end="71:13">{<block_content pos:start="49:17" pos:end="69:90">

                <if_stmt pos:start="49:17" pos:end="63:17"><if pos:start="49:17" pos:end="63:17">if <condition pos:start="49:20" pos:end="49:31">(<expr pos:start="49:21" pos:end="49:30"><operator pos:start="49:21" pos:end="49:21">!</operator><name pos:start="49:22" pos:end="49:30">out_frame</name></expr>)</condition> <block pos:start="49:33" pos:end="63:17">{<block_content pos:start="51:21" pos:end="61:116">

                    <expr_stmt pos:start="51:21" pos:end="51:76"><expr pos:start="51:21" pos:end="51:75"><name pos:start="51:21" pos:end="51:29">out_frame</name> <operator pos:start="51:31" pos:end="51:31">=</operator> <call pos:start="51:33" pos:end="51:75"><name pos:start="51:33" pos:end="51:51">ff_get_audio_buffer</name><argument_list pos:start="51:52" pos:end="51:75">(<argument pos:start="51:53" pos:end="51:58"><expr pos:start="51:53" pos:end="51:58"><name pos:start="51:53" pos:end="51:58">inlink</name></expr></argument>, <argument pos:start="51:61" pos:end="51:74"><expr pos:start="51:61" pos:end="51:74"><name pos:start="51:61" pos:end="51:70">nb_samples</name> <operator pos:start="51:72" pos:end="51:72">-</operator> <name pos:start="51:74" pos:end="51:74">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="53:21" pos:end="55:47"><if pos:start="53:21" pos:end="55:47">if <condition pos:start="53:24" pos:end="53:35">(<expr pos:start="53:25" pos:end="53:34"><operator pos:start="53:25" pos:end="53:25">!</operator><name pos:start="53:26" pos:end="53:34">out_frame</name></expr>)</condition><block type="pseudo" pos:start="55:25" pos:end="55:47"><block_content pos:start="55:25" pos:end="55:47">

                        <return pos:start="55:25" pos:end="55:47">return <expr pos:start="55:32" pos:end="55:46"><call pos:start="55:32" pos:end="55:46"><name pos:start="55:32" pos:end="55:38">AVERROR</name><argument_list pos:start="55:39" pos:end="55:46">(<argument pos:start="55:40" pos:end="55:45"><expr pos:start="55:40" pos:end="55:45"><name pos:start="55:40" pos:end="55:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:58"><expr pos:start="57:21" pos:end="57:57"><call pos:start="57:21" pos:end="57:57"><name pos:start="57:21" pos:end="57:39">av_frame_copy_props</name><argument_list pos:start="57:40" pos:end="57:57">(<argument pos:start="57:41" pos:end="57:49"><expr pos:start="57:41" pos:end="57:49"><name pos:start="57:41" pos:end="57:49">out_frame</name></expr></argument>, <argument pos:start="57:52" pos:end="57:56"><expr pos:start="57:52" pos:end="57:56"><name pos:start="57:52" pos:end="57:56">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:44"><expr pos:start="59:21" pos:end="59:43"><name pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:29">out_frame</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:34">pts</name></name> <operator pos:start="59:36" pos:end="59:36">=</operator> <name pos:start="59:38" pos:end="59:43"><name pos:start="59:38" pos:end="59:38">s</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:43">pts</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:116"><expr pos:start="61:21" pos:end="61:115"><name pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:26">pts</name></name> <operator pos:start="61:28" pos:end="61:29">+=</operator> <macro pos:start="61:31" pos:end="61:115"><name pos:start="61:31" pos:end="61:42">av_rescale_q</name><argument_list pos:start="61:43" pos:end="61:115">(<argument pos:start="61:44" pos:end="61:57">nb_samples - i</argument>, <argument pos:start="61:60" pos:end="61:73">(AVRational){<literal type="number" pos:start="61:73" pos:end="61:73">1</literal></argument>, <argument pos:start="61:76" pos:end="61:95">inlink-&gt;sample_rate}</argument>, <argument pos:start="61:98" pos:end="61:114">inlink-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="67:17" pos:end="67:63"><expr pos:start="67:17" pos:end="67:62"><name pos:start="67:17" pos:end="67:19">dst</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <operator pos:start="67:23" pos:end="67:23">(</operator><name pos:start="67:24" pos:end="67:29">double</name> <operator pos:start="67:31" pos:end="67:31">*</operator><operator pos:start="67:32" pos:end="67:32">)</operator><name pos:start="67:33" pos:end="67:62"><name pos:start="67:33" pos:end="67:41">out_frame</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:56">extended_data</name><index pos:start="67:57" pos:end="67:62">[<expr pos:start="67:58" pos:end="67:61"><name pos:start="67:58" pos:end="67:61">chan</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:90"><expr pos:start="69:17" pos:end="69:89"><name pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:19">dst</name><index pos:start="69:20" pos:end="69:29">[<expr pos:start="69:21" pos:end="69:28"><name pos:start="69:21" pos:end="69:26">oindex</name><operator pos:start="69:27" pos:end="69:28">++</operator></expr>]</index></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <call pos:start="69:33" pos:end="69:89"><name pos:start="69:33" pos:end="69:40">av_clipd</name><argument_list pos:start="69:41" pos:end="69:89">(<argument pos:start="69:42" pos:end="69:81"><expr pos:start="69:42" pos:end="69:81"><name pos:start="69:42" pos:end="69:53"><name pos:start="69:42" pos:end="69:45">dbuf</name><index pos:start="69:46" pos:end="69:53">[<expr pos:start="69:47" pos:end="69:52"><name pos:start="69:47" pos:end="69:52">dindex</name></expr>]</index></name> <operator pos:start="69:55" pos:end="69:55">*</operator> <call pos:start="69:57" pos:end="69:81"><name pos:start="69:57" pos:end="69:66">get_volume</name><argument_list pos:start="69:67" pos:end="69:81">(<argument pos:start="69:68" pos:end="69:68"><expr pos:start="69:68" pos:end="69:68"><name pos:start="69:68" pos:end="69:68">s</name></expr></argument>, <argument pos:start="69:71" pos:end="69:80"><expr pos:start="69:71" pos:end="69:80"><name pos:start="69:71" pos:end="69:80"><name pos:start="69:71" pos:end="69:72">cp</name><operator pos:start="69:73" pos:end="69:74">-&gt;</operator><name pos:start="69:75" pos:end="69:80">volume</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:84" pos:end="69:85"><expr pos:start="69:84" pos:end="69:85"><operator pos:start="69:84" pos:end="69:84">-</operator><literal type="number" pos:start="69:85" pos:end="69:85">1</literal></expr></argument>, <argument pos:start="69:88" pos:end="69:88"><expr pos:start="69:88" pos:end="69:88"><literal type="number" pos:start="69:88" pos:end="69:88">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="71:15" pos:end="75:13">else <block pos:start="71:20" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:24">

                <expr_stmt pos:start="73:17" pos:end="73:24"><expr pos:start="73:17" pos:end="73:23"><name pos:start="73:17" pos:end="73:21">count</name><operator pos:start="73:22" pos:end="73:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:30"><expr pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:16">dbuf</name><index pos:start="79:17" pos:end="79:24">[<expr pos:start="79:18" pos:end="79:23"><name pos:start="79:18" pos:end="79:23">dindex</name></expr>]</index></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:29">in</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:55"><expr pos:start="81:13" pos:end="81:54"><name pos:start="81:13" pos:end="81:18">dindex</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <call pos:start="81:22" pos:end="81:54"><name pos:start="81:22" pos:end="81:24">MOD</name><argument_list pos:start="81:25" pos:end="81:54">(<argument pos:start="81:26" pos:end="81:35"><expr pos:start="81:26" pos:end="81:35"><name pos:start="81:26" pos:end="81:31">dindex</name> <operator pos:start="81:33" pos:end="81:33">+</operator> <literal type="number" pos:start="81:35" pos:end="81:35">1</literal></expr></argument>, <argument pos:start="81:38" pos:end="81:53"><expr pos:start="81:38" pos:end="81:53"><name pos:start="81:38" pos:end="81:53"><name pos:start="81:38" pos:end="81:38">s</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:53">delay_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="89:5" pos:end="89:27"><expr pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:18">delay_count</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:26">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:28"><expr pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:18"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:18">delay_index</name></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:27">dindex</name></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:26"><expr pos:start="95:5" pos:end="95:25"><call pos:start="95:5" pos:end="95:25"><name pos:start="95:5" pos:end="95:17">av_frame_free</name><argument_list pos:start="95:18" pos:end="95:25">(<argument pos:start="95:19" pos:end="95:24"><expr pos:start="95:19" pos:end="95:24"><operator pos:start="95:19" pos:end="95:19">&amp;</operator><name pos:start="95:20" pos:end="95:24">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:71">return <expr pos:start="97:12" pos:end="97:70"><ternary pos:start="97:12" pos:end="97:70"><condition pos:start="97:12" pos:end="97:22"><expr pos:start="97:12" pos:end="97:20"><name pos:start="97:12" pos:end="97:20">out_frame</name></expr> ?</condition><then pos:start="97:24" pos:end="97:66"> <expr pos:start="97:24" pos:end="97:66"><call pos:start="97:24" pos:end="97:66"><name pos:start="97:24" pos:end="97:38">ff_filter_frame</name><argument_list pos:start="97:39" pos:end="97:66">(<argument pos:start="97:40" pos:end="97:54"><expr pos:start="97:40" pos:end="97:54"><name pos:start="97:40" pos:end="97:54"><name pos:start="97:40" pos:end="97:42">ctx</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:51">outputs</name><index pos:start="97:52" pos:end="97:54">[<expr pos:start="97:53" pos:end="97:53"><literal type="number" pos:start="97:53" pos:end="97:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:57" pos:end="97:65"><expr pos:start="97:57" pos:end="97:65"><name pos:start="97:57" pos:end="97:65">out_frame</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="97:68" pos:end="97:70">: <expr pos:start="97:70" pos:end="97:70"><literal type="number" pos:start="97:70" pos:end="97:70">0</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
