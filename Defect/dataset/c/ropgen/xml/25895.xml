<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25895.c" pos:tabs="8"><function pos:start="1:1" pos:end="161:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:16">av_noreturn</name></type> <name pos:start="1:18" pos:end="1:29">exit_program</name><parameter_list pos:start="1:30" pos:end="1:38">(<parameter pos:start="1:31" pos:end="1:37"><decl pos:start="1:31" pos:end="1:37"><type pos:start="1:31" pos:end="1:33"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:37">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="161:1">{<block_content pos:start="5:5" pos:end="159:14">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="27:5">for <control pos:start="9:9" pos:end="9:41">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:36"><expr pos:start="9:17" pos:end="9:35"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:35">nb_filtergraphs</name></expr>;</condition> <incr pos:start="9:38" pos:end="9:40"><expr pos:start="9:38" pos:end="9:40"><name pos:start="9:38" pos:end="9:38">i</name><operator pos:start="9:39" pos:end="9:40">++</operator></expr></incr>)</control> <block pos:start="9:43" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:35">

        <expr_stmt pos:start="11:9" pos:end="11:53"><expr pos:start="11:9" pos:end="11:52"><call pos:start="11:9" pos:end="11:52"><name pos:start="11:9" pos:end="11:27">avfilter_graph_free</name><argument_list pos:start="11:28" pos:end="11:52">(<argument pos:start="11:29" pos:end="11:51"><expr pos:start="11:29" pos:end="11:51"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:44"><name pos:start="11:30" pos:end="11:41">filtergraphs</name><index pos:start="11:42" pos:end="11:44">[<expr pos:start="11:43" pos:end="11:43"><name pos:start="11:43" pos:end="11:43">i</name></expr>]</index></name><operator pos:start="11:45" pos:end="11:46">-&gt;</operator><name pos:start="11:47" pos:end="11:51">graph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="13:9" pos:end="15:50">for <control pos:start="13:13" pos:end="13:56">(<init pos:start="13:14" pos:end="13:19"><expr pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:14">j</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</init> <condition pos:start="13:21" pos:end="13:51"><expr pos:start="13:21" pos:end="13:50"><name pos:start="13:21" pos:end="13:21">j</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <name pos:start="13:25" pos:end="13:39"><name pos:start="13:25" pos:end="13:36">filtergraphs</name><index pos:start="13:37" pos:end="13:39">[<expr pos:start="13:38" pos:end="13:38"><name pos:start="13:38" pos:end="13:38">i</name></expr>]</index></name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:50">nb_inputs</name></expr>;</condition> <incr pos:start="13:53" pos:end="13:55"><expr pos:start="13:53" pos:end="13:55"><name pos:start="13:53" pos:end="13:53">j</name><operator pos:start="13:54" pos:end="13:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="15:13" pos:end="15:50"><block_content pos:start="15:13" pos:end="15:50">

            <expr_stmt pos:start="15:13" pos:end="15:50"><expr pos:start="15:13" pos:end="15:49"><call pos:start="15:13" pos:end="15:49"><name pos:start="15:13" pos:end="15:20">av_freep</name><argument_list pos:start="15:21" pos:end="15:49">(<argument pos:start="15:22" pos:end="15:48"><expr pos:start="15:22" pos:end="15:48"><operator pos:start="15:22" pos:end="15:22">&amp;</operator><name pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:34">filtergraphs</name><index pos:start="15:35" pos:end="15:37">[<expr pos:start="15:36" pos:end="15:36"><name pos:start="15:36" pos:end="15:36">i</name></expr>]</index></name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:48"><name pos:start="15:40" pos:end="15:45">inputs</name><index pos:start="15:46" pos:end="15:48">[<expr pos:start="15:47" pos:end="15:47"><name pos:start="15:47" pos:end="15:47">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="17:9" pos:end="17:43"><expr pos:start="17:9" pos:end="17:42"><call pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:16">av_freep</name><argument_list pos:start="17:17" pos:end="17:42">(<argument pos:start="17:18" pos:end="17:41"><expr pos:start="17:18" pos:end="17:41"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:33"><name pos:start="17:19" pos:end="17:30">filtergraphs</name><index pos:start="17:31" pos:end="17:33">[<expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">i</name></expr>]</index></name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:41">inputs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="19:9" pos:end="21:51">for <control pos:start="19:13" pos:end="19:57">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">j</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:52"><expr pos:start="19:21" pos:end="19:51"><name pos:start="19:21" pos:end="19:21">j</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:36">filtergraphs</name><index pos:start="19:37" pos:end="19:39">[<expr pos:start="19:38" pos:end="19:38"><name pos:start="19:38" pos:end="19:38">i</name></expr>]</index></name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:51">nb_outputs</name></expr>;</condition> <incr pos:start="19:54" pos:end="19:56"><expr pos:start="19:54" pos:end="19:56"><name pos:start="19:54" pos:end="19:54">j</name><operator pos:start="19:55" pos:end="19:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:13" pos:end="21:51"><block_content pos:start="21:13" pos:end="21:51">

            <expr_stmt pos:start="21:13" pos:end="21:51"><expr pos:start="21:13" pos:end="21:50"><call pos:start="21:13" pos:end="21:50"><name pos:start="21:13" pos:end="21:20">av_freep</name><argument_list pos:start="21:21" pos:end="21:50">(<argument pos:start="21:22" pos:end="21:49"><expr pos:start="21:22" pos:end="21:49"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:34">filtergraphs</name><index pos:start="21:35" pos:end="21:37">[<expr pos:start="21:36" pos:end="21:36"><name pos:start="21:36" pos:end="21:36">i</name></expr>]</index></name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:49"><name pos:start="21:40" pos:end="21:46">outputs</name><index pos:start="21:47" pos:end="21:49">[<expr pos:start="21:48" pos:end="21:48"><name pos:start="21:48" pos:end="21:48">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="23:9" pos:end="23:44"><expr pos:start="23:9" pos:end="23:43"><call pos:start="23:9" pos:end="23:43"><name pos:start="23:9" pos:end="23:16">av_freep</name><argument_list pos:start="23:17" pos:end="23:43">(<argument pos:start="23:18" pos:end="23:42"><expr pos:start="23:18" pos:end="23:42"><operator pos:start="23:18" pos:end="23:18">&amp;</operator><name pos:start="23:19" pos:end="23:33"><name pos:start="23:19" pos:end="23:30">filtergraphs</name><index pos:start="23:31" pos:end="23:33">[<expr pos:start="23:32" pos:end="23:32"><name pos:start="23:32" pos:end="23:32">i</name></expr>]</index></name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:42">outputs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><call pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:16">av_freep</name><argument_list pos:start="25:17" pos:end="25:34">(<argument pos:start="25:18" pos:end="25:33"><expr pos:start="25:18" pos:end="25:33"><operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:33"><name pos:start="25:19" pos:end="25:30">filtergraphs</name><index pos:start="25:31" pos:end="25:33">[<expr pos:start="25:32" pos:end="25:32"><name pos:start="25:32" pos:end="25:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><call pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:12">av_freep</name><argument_list pos:start="29:13" pos:end="29:27">(<argument pos:start="29:14" pos:end="29:26"><expr pos:start="29:14" pos:end="29:26"><operator pos:start="29:14" pos:end="29:14">&amp;</operator><name pos:start="29:15" pos:end="29:26">filtergraphs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:21">/* close files */</comment>

    <for pos:start="35:5" pos:end="49:5">for <control pos:start="35:9" pos:end="35:41">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:36"><expr pos:start="35:17" pos:end="35:35"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:35">nb_output_files</name></expr>;</condition> <incr pos:start="35:38" pos:end="35:40"><expr pos:start="35:38" pos:end="35:40"><name pos:start="35:38" pos:end="35:38">i</name><operator pos:start="35:39" pos:end="35:40">++</operator></expr></incr>)</control> <block pos:start="35:43" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:35">

        <decl_stmt pos:start="37:9" pos:end="37:50"><decl pos:start="37:9" pos:end="37:49"><type pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:23">AVFormatContext</name> <modifier pos:start="37:25" pos:end="37:25">*</modifier></type><name pos:start="37:26" pos:end="37:26">s</name> <init pos:start="37:28" pos:end="37:49">= <expr pos:start="37:30" pos:end="37:49"><name pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:41">output_files</name><index pos:start="37:42" pos:end="37:44">[<expr pos:start="37:43" pos:end="37:43"><name pos:start="37:43" pos:end="37:43">i</name></expr>]</index></name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:49">ctx</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="39:9" pos:end="41:30"><if pos:start="39:9" pos:end="41:30">if <condition pos:start="39:12" pos:end="39:57">(<expr pos:start="39:13" pos:end="39:56"><operator pos:start="39:13" pos:end="39:13">!</operator><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:31"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:24">oformat</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:31">flags</name></name> <operator pos:start="39:33" pos:end="39:33">&amp;</operator> <name pos:start="39:35" pos:end="39:46">AVFMT_NOFILE</name><operator pos:start="39:47" pos:end="39:47">)</operator> <operator pos:start="39:49" pos:end="39:50">&amp;&amp;</operator> <name pos:start="39:52" pos:end="39:56"><name pos:start="39:52" pos:end="39:52">s</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:56">pb</name></name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:30"><block_content pos:start="41:13" pos:end="41:30">

            <expr_stmt pos:start="41:13" pos:end="41:30"><expr pos:start="41:13" pos:end="41:29"><call pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:22">avio_close</name><argument_list pos:start="41:23" pos:end="41:29">(<argument pos:start="41:24" pos:end="41:28"><expr pos:start="41:24" pos:end="41:28"><name pos:start="41:24" pos:end="41:28"><name pos:start="41:24" pos:end="41:24">s</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:28">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><call pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:29">avformat_free_context</name><argument_list pos:start="43:30" pos:end="43:32">(<argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:45"><expr pos:start="45:9" pos:end="45:44"><call pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:20">av_dict_free</name><argument_list pos:start="45:21" pos:end="45:44">(<argument pos:start="45:22" pos:end="45:43"><expr pos:start="45:22" pos:end="45:43"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:37"><name pos:start="45:23" pos:end="45:34">output_files</name><index pos:start="45:35" pos:end="45:37">[<expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">i</name></expr>]</index></name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:43">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:35"><expr pos:start="47:9" pos:end="47:34"><call pos:start="47:9" pos:end="47:34"><name pos:start="47:9" pos:end="47:16">av_freep</name><argument_list pos:start="47:17" pos:end="47:34">(<argument pos:start="47:18" pos:end="47:33"><expr pos:start="47:18" pos:end="47:33"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:33"><name pos:start="47:19" pos:end="47:30">output_files</name><index pos:start="47:31" pos:end="47:33">[<expr pos:start="47:32" pos:end="47:32"><name pos:start="47:32" pos:end="47:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="51:5" pos:end="85:5">for <control pos:start="51:9" pos:end="51:43">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:38"><expr pos:start="51:17" pos:end="51:37"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:37">nb_output_streams</name></expr>;</condition> <incr pos:start="51:40" pos:end="51:42"><expr pos:start="51:40" pos:end="51:42"><name pos:start="51:40" pos:end="51:40">i</name><operator pos:start="51:41" pos:end="51:42">++</operator></expr></incr>)</control> <block pos:start="51:45" pos:end="85:5">{<block_content pos:start="53:9" pos:end="83:37">

        <decl_stmt pos:start="53:9" pos:end="53:78"><decl pos:start="53:9" pos:end="53:77"><type pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:32">AVBitStreamFilterContext</name> <modifier pos:start="53:34" pos:end="53:34">*</modifier></type><name pos:start="53:35" pos:end="53:38">bsfc</name> <init pos:start="53:40" pos:end="53:77">= <expr pos:start="53:42" pos:end="53:77"><name pos:start="53:42" pos:end="53:58"><name pos:start="53:42" pos:end="53:55">output_streams</name><index pos:start="53:56" pos:end="53:58">[<expr pos:start="53:57" pos:end="53:57"><name pos:start="53:57" pos:end="53:57">i</name></expr>]</index></name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:77">bitstream_filters</name></expr></init></decl>;</decl_stmt>

        <while pos:start="55:9" pos:end="63:9">while <condition pos:start="55:15" pos:end="55:20">(<expr pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:19">bsfc</name></expr>)</condition> <block pos:start="55:22" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:24">

            <decl_stmt pos:start="57:13" pos:end="57:56"><decl pos:start="57:13" pos:end="57:55"><type pos:start="57:13" pos:end="57:38"><name pos:start="57:13" pos:end="57:36">AVBitStreamFilterContext</name> <modifier pos:start="57:38" pos:end="57:38">*</modifier></type><name pos:start="57:39" pos:end="57:42">next</name> <init pos:start="57:44" pos:end="57:55">= <expr pos:start="57:46" pos:end="57:55"><name pos:start="57:46" pos:end="57:55"><name pos:start="57:46" pos:end="57:49">bsfc</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:55">next</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:44"><expr pos:start="59:13" pos:end="59:43"><call pos:start="59:13" pos:end="59:43"><name pos:start="59:13" pos:end="59:37">av_bitstream_filter_close</name><argument_list pos:start="59:38" pos:end="59:43">(<argument pos:start="59:39" pos:end="59:42"><expr pos:start="59:39" pos:end="59:42"><name pos:start="59:39" pos:end="59:42">bsfc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:24"><expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:16">bsfc</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:23">next</name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="65:9" pos:end="65:52"><expr pos:start="65:9" pos:end="65:51"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:22">output_streams</name><index pos:start="65:23" pos:end="65:25">[<expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">i</name></expr>]</index></name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:44">bitstream_filters</name> <operator pos:start="65:46" pos:end="65:46">=</operator> <name pos:start="65:48" pos:end="65:51">NULL</name></expr>;</expr_stmt>



        <if_stmt pos:start="69:9" pos:end="79:9"><if pos:start="69:9" pos:end="79:9">if <condition pos:start="69:12" pos:end="69:44">(<expr pos:start="69:13" pos:end="69:43"><name pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:26">output_streams</name><index pos:start="69:27" pos:end="69:29">[<expr pos:start="69:28" pos:end="69:28"><name pos:start="69:28" pos:end="69:28">i</name></expr>]</index></name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:43">output_frame</name></expr>)</condition> <block pos:start="69:46" pos:end="79:9">{<block_content pos:start="71:13" pos:end="77:29">

            <decl_stmt pos:start="71:13" pos:end="71:61"><decl pos:start="71:13" pos:end="71:60"><type pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:19">AVFrame</name> <modifier pos:start="71:21" pos:end="71:21">*</modifier></type><name pos:start="71:22" pos:end="71:26">frame</name> <init pos:start="71:28" pos:end="71:60">= <expr pos:start="71:30" pos:end="71:60"><name pos:start="71:30" pos:end="71:46"><name pos:start="71:30" pos:end="71:43">output_streams</name><index pos:start="71:44" pos:end="71:46">[<expr pos:start="71:45" pos:end="71:45"><name pos:start="71:45" pos:end="71:45">i</name></expr>]</index></name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:60">output_frame</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="73:13" pos:end="75:48"><if pos:start="73:13" pos:end="75:48">if <condition pos:start="73:16" pos:end="73:52">(<expr pos:start="73:17" pos:end="73:51"><name pos:start="73:17" pos:end="73:36"><name pos:start="73:17" pos:end="73:21">frame</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:36">extended_data</name></name> <operator pos:start="73:38" pos:end="73:39">!=</operator> <name pos:start="73:41" pos:end="73:51"><name pos:start="73:41" pos:end="73:45">frame</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:51">data</name></name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:48"><block_content pos:start="75:17" pos:end="75:48">

                <expr_stmt pos:start="75:17" pos:end="75:48"><expr pos:start="75:17" pos:end="75:47"><call pos:start="75:17" pos:end="75:47"><name pos:start="75:17" pos:end="75:24">av_freep</name><argument_list pos:start="75:25" pos:end="75:47">(<argument pos:start="75:26" pos:end="75:46"><expr pos:start="75:26" pos:end="75:46"><operator pos:start="75:26" pos:end="75:26">&amp;</operator><name pos:start="75:27" pos:end="75:46"><name pos:start="75:27" pos:end="75:31">frame</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:46">extended_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:29"><expr pos:start="77:13" pos:end="77:28"><call pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:20">av_freep</name><argument_list pos:start="77:21" pos:end="77:28">(<argument pos:start="77:22" pos:end="77:27"><expr pos:start="77:22" pos:end="77:27"><operator pos:start="77:22" pos:end="77:22">&amp;</operator><name pos:start="77:23" pos:end="77:27">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:53"><expr pos:start="81:9" pos:end="81:52"><call pos:start="81:9" pos:end="81:52"><name pos:start="81:9" pos:end="81:16">av_freep</name><argument_list pos:start="81:17" pos:end="81:52">(<argument pos:start="81:18" pos:end="81:51"><expr pos:start="81:18" pos:end="81:51"><operator pos:start="81:18" pos:end="81:18">&amp;</operator><name pos:start="81:19" pos:end="81:35"><name pos:start="81:19" pos:end="81:32">output_streams</name><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">i</name></expr>]</index></name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:51">filtered_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:37"><expr pos:start="83:9" pos:end="83:36"><call pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:16">av_freep</name><argument_list pos:start="83:17" pos:end="83:36">(<argument pos:start="83:18" pos:end="83:35"><expr pos:start="83:18" pos:end="83:35"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:35"><name pos:start="83:19" pos:end="83:32">output_streams</name><index pos:start="83:33" pos:end="83:35">[<expr pos:start="83:34" pos:end="83:34"><name pos:start="83:34" pos:end="83:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="87:5" pos:end="93:5">for <control pos:start="87:9" pos:end="87:40">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:35"><expr pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:34">nb_input_files</name></expr>;</condition> <incr pos:start="87:37" pos:end="87:39"><expr pos:start="87:37" pos:end="87:39"><name pos:start="87:37" pos:end="87:37">i</name><operator pos:start="87:38" pos:end="87:39">++</operator></expr></incr>)</control> <block pos:start="87:42" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:34">

        <expr_stmt pos:start="89:9" pos:end="89:51"><expr pos:start="89:9" pos:end="89:50"><call pos:start="89:9" pos:end="89:50"><name pos:start="89:9" pos:end="89:28">avformat_close_input</name><argument_list pos:start="89:29" pos:end="89:50">(<argument pos:start="89:30" pos:end="89:49"><expr pos:start="89:30" pos:end="89:49"><operator pos:start="89:30" pos:end="89:30">&amp;</operator><name pos:start="89:31" pos:end="89:44"><name pos:start="89:31" pos:end="89:41">input_files</name><index pos:start="89:42" pos:end="89:44">[<expr pos:start="89:43" pos:end="89:43"><name pos:start="89:43" pos:end="89:43">i</name></expr>]</index></name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:49">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><call pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:16">av_freep</name><argument_list pos:start="91:17" pos:end="91:33">(<argument pos:start="91:18" pos:end="91:32"><expr pos:start="91:18" pos:end="91:32"><operator pos:start="91:18" pos:end="91:18">&amp;</operator><name pos:start="91:19" pos:end="91:32"><name pos:start="91:19" pos:end="91:29">input_files</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><name pos:start="91:31" pos:end="91:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="95:5" pos:end="107:5">for <control pos:start="95:9" pos:end="95:42">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:37"><expr pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <name pos:start="95:21" pos:end="95:36">nb_input_streams</name></expr>;</condition> <incr pos:start="95:39" pos:end="95:41"><expr pos:start="95:39" pos:end="95:41"><name pos:start="95:39" pos:end="95:39">i</name><operator pos:start="95:40" pos:end="95:41">++</operator></expr></incr>)</control> <block pos:start="95:44" pos:end="107:5">{<block_content pos:start="97:9" pos:end="105:36">

        <expr_stmt pos:start="97:9" pos:end="97:51"><expr pos:start="97:9" pos:end="97:50"><call pos:start="97:9" pos:end="97:50"><name pos:start="97:9" pos:end="97:16">av_freep</name><argument_list pos:start="97:17" pos:end="97:50">(<argument pos:start="97:18" pos:end="97:49"><expr pos:start="97:18" pos:end="97:49"><operator pos:start="97:18" pos:end="97:18">&amp;</operator><name pos:start="97:19" pos:end="97:34"><name pos:start="97:19" pos:end="97:31">input_streams</name><index pos:start="97:32" pos:end="97:34">[<expr pos:start="97:33" pos:end="97:33"><name pos:start="97:33" pos:end="97:33">i</name></expr>]</index></name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:49">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:46"><expr pos:start="99:9" pos:end="99:45"><call pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:20">av_dict_free</name><argument_list pos:start="99:21" pos:end="99:45">(<argument pos:start="99:22" pos:end="99:44"><expr pos:start="99:22" pos:end="99:44"><operator pos:start="99:22" pos:end="99:22">&amp;</operator><name pos:start="99:23" pos:end="99:38"><name pos:start="99:23" pos:end="99:35">input_streams</name><index pos:start="99:36" pos:end="99:38">[<expr pos:start="99:37" pos:end="99:37"><name pos:start="99:37" pos:end="99:37">i</name></expr>]</index></name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:44">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:43"><expr pos:start="101:9" pos:end="101:42"><call pos:start="101:9" pos:end="101:42"><name pos:start="101:9" pos:end="101:24">free_buffer_pool</name><argument_list pos:start="101:25" pos:end="101:42">(<argument pos:start="101:26" pos:end="101:41"><expr pos:start="101:26" pos:end="101:41"><name pos:start="101:26" pos:end="101:41"><name pos:start="101:26" pos:end="101:38">input_streams</name><index pos:start="101:39" pos:end="101:41">[<expr pos:start="101:40" pos:end="101:40"><name pos:start="101:40" pos:end="101:40">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:45"><expr pos:start="103:9" pos:end="103:44"><call pos:start="103:9" pos:end="103:44"><name pos:start="103:9" pos:end="103:16">av_freep</name><argument_list pos:start="103:17" pos:end="103:44">(<argument pos:start="103:18" pos:end="103:43"><expr pos:start="103:18" pos:end="103:43"><operator pos:start="103:18" pos:end="103:18">&amp;</operator><name pos:start="103:19" pos:end="103:34"><name pos:start="103:19" pos:end="103:31">input_streams</name><index pos:start="103:32" pos:end="103:34">[<expr pos:start="103:33" pos:end="103:33"><name pos:start="103:33" pos:end="103:33">i</name></expr>]</index></name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:43">filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:36"><expr pos:start="105:9" pos:end="105:35"><call pos:start="105:9" pos:end="105:35"><name pos:start="105:9" pos:end="105:16">av_freep</name><argument_list pos:start="105:17" pos:end="105:35">(<argument pos:start="105:18" pos:end="105:34"><expr pos:start="105:18" pos:end="105:34"><operator pos:start="105:18" pos:end="105:18">&amp;</operator><name pos:start="105:19" pos:end="105:34"><name pos:start="105:19" pos:end="105:31">input_streams</name><index pos:start="105:32" pos:end="105:34">[<expr pos:start="105:33" pos:end="105:33"><name pos:start="105:33" pos:end="105:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="111:5" pos:end="113:28"><if pos:start="111:5" pos:end="113:28">if <condition pos:start="111:8" pos:end="111:20">(<expr pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:19">vstats_file</name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:28"><block_content pos:start="113:9" pos:end="113:28">

        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><call pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:14">fclose</name><argument_list pos:start="113:15" pos:end="113:27">(<argument pos:start="113:16" pos:end="113:26"><expr pos:start="113:16" pos:end="113:26"><name pos:start="113:16" pos:end="113:26">vstats_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:29"><expr pos:start="115:5" pos:end="115:28"><call pos:start="115:5" pos:end="115:28"><name pos:start="115:5" pos:end="115:11">av_free</name><argument_list pos:start="115:12" pos:end="115:28">(<argument pos:start="115:13" pos:end="115:27"><expr pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:27">vstats_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:29"><expr pos:start="119:5" pos:end="119:28"><call pos:start="119:5" pos:end="119:28"><name pos:start="119:5" pos:end="119:12">av_freep</name><argument_list pos:start="119:13" pos:end="119:28">(<argument pos:start="119:14" pos:end="119:27"><expr pos:start="119:14" pos:end="119:27"><operator pos:start="119:14" pos:end="119:14">&amp;</operator><name pos:start="119:15" pos:end="119:27">input_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:27"><expr pos:start="121:5" pos:end="121:26"><call pos:start="121:5" pos:end="121:26"><name pos:start="121:5" pos:end="121:12">av_freep</name><argument_list pos:start="121:13" pos:end="121:26">(<argument pos:start="121:14" pos:end="121:25"><expr pos:start="121:14" pos:end="121:25"><operator pos:start="121:14" pos:end="121:14">&amp;</operator><name pos:start="121:15" pos:end="121:25">input_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:30"><expr pos:start="123:5" pos:end="123:29"><call pos:start="123:5" pos:end="123:29"><name pos:start="123:5" pos:end="123:12">av_freep</name><argument_list pos:start="123:13" pos:end="123:29">(<argument pos:start="123:14" pos:end="123:28"><expr pos:start="123:14" pos:end="123:28"><operator pos:start="123:14" pos:end="123:14">&amp;</operator><name pos:start="123:15" pos:end="123:28">output_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:28"><expr pos:start="125:5" pos:end="125:27"><call pos:start="125:5" pos:end="125:27"><name pos:start="125:5" pos:end="125:12">av_freep</name><argument_list pos:start="125:13" pos:end="125:27">(<argument pos:start="125:14" pos:end="125:26"><expr pos:start="125:14" pos:end="125:26"><operator pos:start="125:14" pos:end="125:14">&amp;</operator><name pos:start="125:15" pos:end="125:26">output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:18"><expr pos:start="129:5" pos:end="129:17"><call pos:start="129:5" pos:end="129:17"><name pos:start="129:5" pos:end="129:15">uninit_opts</name><argument_list pos:start="129:16" pos:end="129:17">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:25"><expr pos:start="131:5" pos:end="131:24"><call pos:start="131:5" pos:end="131:24"><name pos:start="131:5" pos:end="131:12">av_freep</name><argument_list pos:start="131:13" pos:end="131:24">(<argument pos:start="131:14" pos:end="131:23"><expr pos:start="131:14" pos:end="131:23"><operator pos:start="131:14" pos:end="131:14">&amp;</operator><name pos:start="131:15" pos:end="131:23">audio_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:33"><expr pos:start="133:5" pos:end="133:32"><name pos:start="133:5" pos:end="133:28">allocated_audio_buf_size</name> <operator pos:start="133:30" pos:end="133:30">=</operator> <literal type="number" pos:start="133:32" pos:end="133:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:25"><expr pos:start="135:5" pos:end="135:24"><call pos:start="135:5" pos:end="135:24"><name pos:start="135:5" pos:end="135:12">av_freep</name><argument_list pos:start="135:13" pos:end="135:24">(<argument pos:start="135:14" pos:end="135:23"><expr pos:start="135:14" pos:end="135:23"><operator pos:start="135:14" pos:end="135:14">&amp;</operator><name pos:start="135:15" pos:end="135:23">async_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:33"><expr pos:start="137:5" pos:end="137:32"><name pos:start="137:5" pos:end="137:28">allocated_async_buf_size</name> <operator pos:start="137:30" pos:end="137:30">=</operator> <literal type="number" pos:start="137:32" pos:end="137:32">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:22"><expr pos:start="141:5" pos:end="141:21"><call pos:start="141:5" pos:end="141:21"><name pos:start="141:5" pos:end="141:19">avfilter_uninit</name><argument_list pos:start="141:20" pos:end="141:21">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:30"><expr pos:start="143:5" pos:end="143:29"><call pos:start="143:5" pos:end="143:29"><name pos:start="143:5" pos:end="143:27">avformat_network_deinit</name><argument_list pos:start="143:28" pos:end="143:29">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="147:5" pos:end="155:5"><if pos:start="147:5" pos:end="155:5">if <condition pos:start="147:8" pos:end="147:25">(<expr pos:start="147:9" pos:end="147:24"><name pos:start="147:9" pos:end="147:24">received_sigterm</name></expr>)</condition> <block pos:start="147:27" pos:end="155:5">{<block_content pos:start="149:9" pos:end="153:19">

        <expr_stmt pos:start="149:9" pos:end="151:39"><expr pos:start="149:9" pos:end="151:38"><call pos:start="149:9" pos:end="151:38"><name pos:start="149:9" pos:end="149:14">av_log</name><argument_list pos:start="149:15" pos:end="151:38">(<argument pos:start="149:16" pos:end="149:19"><expr pos:start="149:16" pos:end="149:19"><name pos:start="149:16" pos:end="149:19">NULL</name></expr></argument>, <argument pos:start="149:22" pos:end="149:32"><expr pos:start="149:22" pos:end="149:32"><name pos:start="149:22" pos:end="149:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="149:35" pos:end="149:70"><expr pos:start="149:35" pos:end="149:70"><literal type="string" pos:start="149:35" pos:end="149:70">"Received signal %d: terminating.\n"</literal></expr></argument>,

               <argument pos:start="151:16" pos:end="151:37"><expr pos:start="151:16" pos:end="151:37"><operator pos:start="151:16" pos:end="151:16">(</operator><name pos:start="151:17" pos:end="151:19">int</name><operator pos:start="151:20" pos:end="151:20">)</operator> <name pos:start="151:22" pos:end="151:37">received_sigterm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:19"><expr pos:start="153:9" pos:end="153:18"><call pos:start="153:9" pos:end="153:18"><name pos:start="153:9" pos:end="153:12">exit</name> <argument_list pos:start="153:14" pos:end="153:18">(<argument pos:start="153:15" pos:end="153:17"><expr pos:start="153:15" pos:end="153:17"><literal type="number" pos:start="153:15" pos:end="153:17">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:14"><expr pos:start="159:5" pos:end="159:13"><call pos:start="159:5" pos:end="159:13"><name pos:start="159:5" pos:end="159:8">exit</name><argument_list pos:start="159:9" pos:end="159:13">(<argument pos:start="159:10" pos:end="159:12"><expr pos:start="159:10" pos:end="159:12"><name pos:start="159:10" pos:end="159:12">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="159:16" pos:end="159:61">/* not all OS-es handle main() return value */</comment>

</block_content>}</block></function>
</unit>
