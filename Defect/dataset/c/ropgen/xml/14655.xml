<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14655.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">detach</name><parameter_list pos:start="1:19" pos:end="5:56">(<parameter pos:start="1:20" pos:end="1:40"><decl pos:start="1:20" pos:end="1:40"><type pos:start="1:20" pos:end="1:40"><name pos:start="1:20" pos:end="1:35">sPAPRDRConnector</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">drc</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:53">DeviceState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">d</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:49"><decl pos:start="3:20" pos:end="3:49"><type pos:start="3:20" pos:end="3:49"><name pos:start="3:20" pos:end="3:38">spapr_drc_detach_cb</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:49">detach_cb</name></decl></parameter>,

                   <parameter pos:start="5:20" pos:end="5:41"><decl pos:start="5:20" pos:end="5:41"><type pos:start="5:20" pos:end="5:41"><name pos:start="5:20" pos:end="5:23">void</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:41">detach_cb_opaque</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:55"><decl pos:start="5:44" pos:end="5:55"><type pos:start="5:44" pos:end="5:55"><name pos:start="5:44" pos:end="5:48">Error</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier><modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="125:1">{<block_content pos:start="9:5" pos:end="123:33">

    <expr_stmt pos:start="9:5" pos:end="9:43"><expr pos:start="9:5" pos:end="9:42"><call pos:start="9:5" pos:end="9:42"><name pos:start="9:5" pos:end="9:26">trace_spapr_drc_detach</name><argument_list pos:start="9:27" pos:end="9:42">(<argument pos:start="9:28" pos:end="9:41"><expr pos:start="9:28" pos:end="9:41"><call pos:start="9:28" pos:end="9:41"><name pos:start="9:28" pos:end="9:36">get_index</name><argument_list pos:start="9:37" pos:end="9:41">(<argument pos:start="9:38" pos:end="9:40"><expr pos:start="9:38" pos:end="9:40"><name pos:start="9:38" pos:end="9:40">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:7">drc</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:18">detach_cb</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:30">detach_cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:7">drc</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:25">detach_cb_opaque</name></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <name pos:start="15:29" pos:end="15:44">detach_cb_opaque</name></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="43:7">/* if we've signalled device presence to the guest, or if the guest

     * has gone ahead and configured the device (via manually-executed

     * device add via drmgr in guest, namely), we need to wait

     * for the guest to quiesce the device before completing detach.

     * Otherwise, we can assume the guest hasn't seen it and complete the

     * detach immediately. Note that there is a small race window

     * just before, or during, configuration, which is this context

     * refers mainly to fetching the device tree via RTAS.

     * During this window the device access will be arbitrated by

     * associated DRC, which will simply fail the RTAS calls as invalid.

     * This is recoverable within guest and current implementations of

     * drmgr should be able to cope.

     */</comment>

    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:44">(<expr pos:start="45:9" pos:end="45:43"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:23"><name pos:start="45:10" pos:end="45:12">drc</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:23">signalled</name></name> <operator pos:start="45:25" pos:end="45:26">&amp;&amp;</operator> <operator pos:start="45:28" pos:end="45:28">!</operator><name pos:start="45:29" pos:end="45:43"><name pos:start="45:29" pos:end="45:31">drc</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:43">configured</name></name></expr>)</condition> <block pos:start="45:46" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:65">

        <comment type="block" pos:start="47:9" pos:end="51:11">/* if the guest hasn't seen the device we can't rely on it to

         * set it back to an isolated state via RTAS, so do it here manually

         */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:65"><expr pos:start="53:9" pos:end="53:64"><name pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:11">drc</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:28">isolation_state</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <name pos:start="53:32" pos:end="53:64">SPAPR_DR_ISOLATION_STATE_ISOLATED</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:66">(<expr pos:start="59:9" pos:end="59:65"><name pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:11">drc</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:28">isolation_state</name></name> <operator pos:start="59:30" pos:end="59:31">!=</operator> <name pos:start="59:33" pos:end="59:65">SPAPR_DR_ISOLATION_STATE_ISOLATED</name></expr>)</condition> <block pos:start="59:68" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:15">

        <expr_stmt pos:start="61:9" pos:end="61:58"><expr pos:start="61:9" pos:end="61:57"><call pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:41">trace_spapr_drc_awaiting_isolated</name><argument_list pos:start="61:42" pos:end="61:57">(<argument pos:start="61:43" pos:end="61:56"><expr pos:start="61:43" pos:end="61:56"><call pos:start="61:43" pos:end="61:56"><name pos:start="61:43" pos:end="61:51">get_index</name><argument_list pos:start="61:52" pos:end="61:56">(<argument pos:start="61:53" pos:end="61:55"><expr pos:start="61:53" pos:end="61:55"><name pos:start="61:53" pos:end="61:55">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:11">drc</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:29">awaiting_release</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <name pos:start="63:33" pos:end="63:36">true</name></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="81:5"><if pos:start="71:5" pos:end="81:5">if <condition pos:start="71:8" pos:end="73:68">(<expr pos:start="71:9" pos:end="73:67"><name pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:11">drc</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:17">type</name></name> <operator pos:start="71:19" pos:end="71:20">!=</operator> <name pos:start="71:22" pos:end="71:48">SPAPR_DR_CONNECTOR_TYPE_PCI</name> <operator pos:start="71:50" pos:end="71:51">&amp;&amp;</operator>

        <name pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:11">drc</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:29">allocation_state</name></name> <operator pos:start="73:31" pos:end="73:32">!=</operator> <name pos:start="73:34" pos:end="73:67">SPAPR_DR_ALLOCATION_STATE_UNUSABLE</name></expr>)</condition> <block pos:start="73:70" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:15">

        <expr_stmt pos:start="75:9" pos:end="75:58"><expr pos:start="75:9" pos:end="75:57"><call pos:start="75:9" pos:end="75:57"><name pos:start="75:9" pos:end="75:41">trace_spapr_drc_awaiting_unusable</name><argument_list pos:start="75:42" pos:end="75:57">(<argument pos:start="75:43" pos:end="75:56"><expr pos:start="75:43" pos:end="75:56"><call pos:start="75:43" pos:end="75:56"><name pos:start="75:43" pos:end="75:51">get_index</name><argument_list pos:start="75:52" pos:end="75:56">(<argument pos:start="75:53" pos:end="75:55"><expr pos:start="75:53" pos:end="75:55"><name pos:start="75:53" pos:end="75:55">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:37"><expr pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:11">drc</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:29">awaiting_release</name></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <name pos:start="77:33" pos:end="77:36">true</name></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:33">(<expr pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:11">drc</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:32">awaiting_allocation</name></name></expr>)</condition> <block pos:start="85:35" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:15">

        <expr_stmt pos:start="87:9" pos:end="87:37"><expr pos:start="87:9" pos:end="87:36"><name pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:11">drc</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:29">awaiting_release</name></name> <operator pos:start="87:31" pos:end="87:31">=</operator> <name pos:start="87:33" pos:end="87:36">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:60"><expr pos:start="89:9" pos:end="89:59"><call pos:start="89:9" pos:end="89:59"><name pos:start="89:9" pos:end="89:43">trace_spapr_drc_awaiting_allocation</name><argument_list pos:start="89:44" pos:end="89:59">(<argument pos:start="89:45" pos:end="89:58"><expr pos:start="89:45" pos:end="89:58"><call pos:start="89:45" pos:end="89:58"><name pos:start="89:45" pos:end="89:53">get_index</name><argument_list pos:start="89:54" pos:end="89:58">(<argument pos:start="89:55" pos:end="89:57"><expr pos:start="89:55" pos:end="89:57"><name pos:start="89:55" pos:end="89:57">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:61"><expr pos:start="97:5" pos:end="97:60"><name pos:start="97:5" pos:end="97:24"><name pos:start="97:5" pos:end="97:7">drc</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:24">indicator_state</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:60">SPAPR_DR_INDICATOR_STATE_INACTIVE</name></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="105:5"><if pos:start="101:5" pos:end="105:5">if <condition pos:start="101:8" pos:end="101:23">(<expr pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:11">drc</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:22">detach_cb</name></name></expr>)</condition> <block pos:start="101:25" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:56">

        <expr_stmt pos:start="103:9" pos:end="103:56"><expr pos:start="103:9" pos:end="103:55"><call pos:start="103:9" pos:end="103:55"><name pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:11">drc</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:22">detach_cb</name></name><argument_list pos:start="103:23" pos:end="103:55">(<argument pos:start="103:24" pos:end="103:31"><expr pos:start="103:24" pos:end="103:31"><name pos:start="103:24" pos:end="103:31"><name pos:start="103:24" pos:end="103:26">drc</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:31">dev</name></name></expr></argument>, <argument pos:start="103:34" pos:end="103:54"><expr pos:start="103:34" pos:end="103:54"><name pos:start="103:34" pos:end="103:54"><name pos:start="103:34" pos:end="103:36">drc</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:54">detach_cb_opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:34"><expr pos:start="109:5" pos:end="109:33"><name pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:7">drc</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:25">awaiting_release</name></name> <operator pos:start="109:27" pos:end="109:27">=</operator> <name pos:start="109:29" pos:end="109:33">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:21"><expr pos:start="111:5" pos:end="111:20"><call pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:10">g_free</name><argument_list pos:start="111:11" pos:end="111:20">(<argument pos:start="111:12" pos:end="111:19"><expr pos:start="111:12" pos:end="111:19"><name pos:start="111:12" pos:end="111:19"><name pos:start="111:12" pos:end="111:14">drc</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:19">fdt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:20"><expr pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:12"><name pos:start="113:5" pos:end="113:7">drc</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:12">fdt</name></name> <operator pos:start="113:14" pos:end="113:14">=</operator> <name pos:start="113:16" pos:end="113:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:30"><expr pos:start="115:5" pos:end="115:29"><name pos:start="115:5" pos:end="115:25"><name pos:start="115:5" pos:end="115:7">drc</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:25">fdt_start_offset</name></name> <operator pos:start="115:27" pos:end="115:27">=</operator> <literal type="number" pos:start="115:29" pos:end="115:29">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:53"><expr pos:start="117:5" pos:end="117:52"><call pos:start="117:5" pos:end="117:52"><name pos:start="117:5" pos:end="117:23">object_property_del</name><argument_list pos:start="117:24" pos:end="117:52">(<argument pos:start="117:25" pos:end="117:35"><expr pos:start="117:25" pos:end="117:35"><call pos:start="117:25" pos:end="117:35"><name pos:start="117:25" pos:end="117:30">OBJECT</name><argument_list pos:start="117:31" pos:end="117:35">(<argument pos:start="117:32" pos:end="117:34"><expr pos:start="117:32" pos:end="117:34"><name pos:start="117:32" pos:end="117:34">drc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:38" pos:end="117:45"><expr pos:start="117:38" pos:end="117:45"><literal type="string" pos:start="117:38" pos:end="117:45">"device"</literal></expr></argument>, <argument pos:start="117:48" pos:end="117:51"><expr pos:start="117:48" pos:end="117:51"><name pos:start="117:48" pos:end="117:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:20"><expr pos:start="119:5" pos:end="119:19"><name pos:start="119:5" pos:end="119:12"><name pos:start="119:5" pos:end="119:7">drc</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:12">dev</name></name> <operator pos:start="119:14" pos:end="119:14">=</operator> <name pos:start="119:16" pos:end="119:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:26"><expr pos:start="121:5" pos:end="121:25"><name pos:start="121:5" pos:end="121:18"><name pos:start="121:5" pos:end="121:7">drc</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:18">detach_cb</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <name pos:start="121:22" pos:end="121:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:33"><expr pos:start="123:5" pos:end="123:32"><name pos:start="123:5" pos:end="123:25"><name pos:start="123:5" pos:end="123:7">drc</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:25">detach_cb_opaque</name></name> <operator pos:start="123:27" pos:end="123:27">=</operator> <name pos:start="123:29" pos:end="123:32">NULL</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
