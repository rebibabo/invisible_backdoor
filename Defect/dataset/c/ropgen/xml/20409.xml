<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20409.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">eject_device</name><parameter_list pos:start="1:24" pos:end="1:70">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:31">Monitor</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">mon</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:69"><decl pos:start="1:61" pos:end="1:69"><type pos:start="1:61" pos:end="1:69"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:69">force</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:13">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:31">(<expr pos:start="5:9" pos:end="5:30"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:30"><name pos:start="5:10" pos:end="5:26">bdrv_is_removable</name><argument_list pos:start="5:27" pos:end="5:30">(<argument pos:start="5:28" pos:end="5:29"><expr pos:start="5:28" pos:end="5:29"><name pos:start="5:28" pos:end="5:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:33" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:18">

        <expr_stmt pos:start="7:9" pos:end="7:75"><expr pos:start="7:9" pos:end="7:74"><call pos:start="7:9" pos:end="7:74"><name pos:start="7:9" pos:end="7:21">qerror_report</name><argument_list pos:start="7:22" pos:end="7:74">(<argument pos:start="7:23" pos:end="7:47"><expr pos:start="7:23" pos:end="7:47"><name pos:start="7:23" pos:end="7:47">QERR_DEVICE_NOT_REMOVABLE</name></expr></argument>, <argument pos:start="7:50" pos:end="7:73"><expr pos:start="7:50" pos:end="7:73"><call pos:start="7:50" pos:end="7:73"><name pos:start="7:50" pos:end="7:69">bdrv_get_device_name</name><argument_list pos:start="7:70" pos:end="7:73">(<argument pos:start="7:71" pos:end="7:72"><expr pos:start="7:71" pos:end="7:72"><name pos:start="7:71" pos:end="7:72">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="9:9" pos:end="9:18">return <expr pos:start="9:16" pos:end="9:17"><operator pos:start="9:16" pos:end="9:16">-</operator><literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:48">(<expr pos:start="13:9" pos:end="13:47"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:14">force</name> <operator pos:start="13:16" pos:end="13:17">&amp;&amp;</operator> <call pos:start="13:19" pos:end="13:47"><name pos:start="13:19" pos:end="13:43">bdrv_dev_is_medium_locked</name><argument_list pos:start="13:44" pos:end="13:47">(<argument pos:start="13:45" pos:end="13:46"><expr pos:start="13:45" pos:end="13:46"><name pos:start="13:45" pos:end="13:46">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:50" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:68"><expr pos:start="15:9" pos:end="15:67"><call pos:start="15:9" pos:end="15:67"><name pos:start="15:9" pos:end="15:21">qerror_report</name><argument_list pos:start="15:22" pos:end="15:67">(<argument pos:start="15:23" pos:end="15:40"><expr pos:start="15:23" pos:end="15:40"><name pos:start="15:23" pos:end="15:40">QERR_DEVICE_LOCKED</name></expr></argument>, <argument pos:start="15:43" pos:end="15:66"><expr pos:start="15:43" pos:end="15:66"><call pos:start="15:43" pos:end="15:66"><name pos:start="15:43" pos:end="15:62">bdrv_get_device_name</name><argument_list pos:start="15:63" pos:end="15:66">(<argument pos:start="15:64" pos:end="15:65"><expr pos:start="15:64" pos:end="15:65"><name pos:start="15:64" pos:end="15:65">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><call pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:14">bdrv_close</name><argument_list pos:start="21:15" pos:end="21:18">(<argument pos:start="21:16" pos:end="21:17"><expr pos:start="21:16" pos:end="21:17"><name pos:start="21:16" pos:end="21:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
