<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6701.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">virtio_blk_handle_rw_error</name><parameter_list pos:start="1:38" pos:end="3:17">(<parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:52">VirtIOBlockReq</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">req</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">error</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:16"><decl pos:start="3:5" pos:end="3:16"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:8">bool</name></type> <name pos:start="3:10" pos:end="3:16">is_read</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:47">

    <decl_stmt pos:start="7:5" pos:end="9:67"><decl pos:start="7:5" pos:end="9:66"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">BlockErrorAction</name></type> <name pos:start="7:22" pos:end="7:27">action</name> <init pos:start="7:29" pos:end="9:66">= <expr pos:start="7:31" pos:end="9:66"><call pos:start="7:31" pos:end="9:66"><name pos:start="7:31" pos:end="7:50">blk_get_error_action</name><argument_list pos:start="7:51" pos:end="9:66">(<argument pos:start="7:52" pos:end="7:64"><expr pos:start="7:52" pos:end="7:64"><name pos:start="7:52" pos:end="7:64"><name pos:start="7:52" pos:end="7:54">req</name><operator pos:start="7:55" pos:end="7:56">-&gt;</operator><name pos:start="7:57" pos:end="7:59">dev</name><operator pos:start="7:60" pos:end="7:61">-&gt;</operator><name pos:start="7:62" pos:end="7:64">blk</name></name></expr></argument>,

                                                   <argument pos:start="9:52" pos:end="9:58"><expr pos:start="9:52" pos:end="9:58"><name pos:start="9:52" pos:end="9:58">is_read</name></expr></argument>, <argument pos:start="9:61" pos:end="9:65"><expr pos:start="9:61" pos:end="9:65"><name pos:start="9:61" pos:end="9:65">error</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">VirtIOBlock</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">s</name> <init pos:start="11:20" pos:end="11:29">= <expr pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:24">req</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:29">dev</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:42">(<expr pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:14">action</name> <operator pos:start="15:16" pos:end="15:17">==</operator> <name pos:start="15:19" pos:end="15:41">BLOCK_ERROR_ACTION_STOP</name></expr>)</condition> <block pos:start="15:44" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:20">

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:11">req</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:17">next</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:25">rq</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:20"><expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:13">rq</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:19">req</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="29:5">else if <condition pos:start="21:15" pos:end="21:51">(<expr pos:start="21:16" pos:end="21:50"><name pos:start="21:16" pos:end="21:21">action</name> <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:50">BLOCK_ERROR_ACTION_REPORT</name></expr>)</condition> <block pos:start="21:53" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:37">

        <expr_stmt pos:start="23:9" pos:end="23:57"><expr pos:start="23:9" pos:end="23:56"><call pos:start="23:9" pos:end="23:56"><name pos:start="23:9" pos:end="23:31">virtio_blk_req_complete</name><argument_list pos:start="23:32" pos:end="23:56">(<argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:35">req</name></expr></argument>, <argument pos:start="23:38" pos:end="23:55"><expr pos:start="23:38" pos:end="23:55"><name pos:start="23:38" pos:end="23:55">VIRTIO_BLK_S_IOERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><call pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:23">block_acct_done</name><argument_list pos:start="25:24" pos:end="25:58">(<argument pos:start="25:25" pos:end="25:45"><expr pos:start="25:25" pos:end="25:45"><call pos:start="25:25" pos:end="25:45"><name pos:start="25:25" pos:end="25:37">blk_get_stats</name><argument_list pos:start="25:38" pos:end="25:45">(<argument pos:start="25:39" pos:end="25:44"><expr pos:start="25:39" pos:end="25:44"><name pos:start="25:39" pos:end="25:44"><name pos:start="25:39" pos:end="25:39">s</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:44">blk</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:48" pos:end="25:57"><expr pos:start="25:48" pos:end="25:57"><operator pos:start="25:48" pos:end="25:48">&amp;</operator><name pos:start="25:49" pos:end="25:57"><name pos:start="25:49" pos:end="25:51">req</name><operator pos:start="25:52" pos:end="25:53">-&gt;</operator><name pos:start="25:54" pos:end="25:57">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:37"><expr pos:start="27:9" pos:end="27:36"><call pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:31">virtio_blk_free_request</name><argument_list pos:start="27:32" pos:end="27:36">(<argument pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:35">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:53"><expr pos:start="33:5" pos:end="33:52"><call pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:20">blk_error_action</name><argument_list pos:start="33:21" pos:end="33:52">(<argument pos:start="33:22" pos:end="33:27"><expr pos:start="33:22" pos:end="33:27"><name pos:start="33:22" pos:end="33:27"><name pos:start="33:22" pos:end="33:22">s</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:27">blk</name></name></expr></argument>, <argument pos:start="33:30" pos:end="33:35"><expr pos:start="33:30" pos:end="33:35"><name pos:start="33:30" pos:end="33:35">action</name></expr></argument>, <argument pos:start="33:38" pos:end="33:44"><expr pos:start="33:38" pos:end="33:44"><name pos:start="33:38" pos:end="33:44">is_read</name></expr></argument>, <argument pos:start="33:47" pos:end="33:51"><expr pos:start="33:47" pos:end="33:51"><name pos:start="33:47" pos:end="33:51">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:47">return <expr pos:start="35:12" pos:end="35:46"><name pos:start="35:12" pos:end="35:17">action</name> <operator pos:start="35:19" pos:end="35:20">!=</operator> <name pos:start="35:22" pos:end="35:46">BLOCK_ERROR_ACTION_IGNORE</name></expr>;</return>

</block_content>}</block></function>
</unit>
