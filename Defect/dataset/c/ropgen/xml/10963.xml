<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10963.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:6">struct</name> <name pos:start="1:8" pos:end="1:16">icp_state</name></name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:34">xics_system_init</name><parameter_list pos:start="1:35" pos:end="1:47">(<parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:38"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:46">nr_irqs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUPPCState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">max_server_num</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:20">icp_state</name></name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:25">icp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:20">ics_state</name></name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:25">ics</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:18">max_server_num</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <operator pos:start="17:22" pos:end="17:22">-</operator><literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="29:5">for <control pos:start="19:9" pos:end="19:59">(<init pos:start="19:10" pos:end="19:25"><expr pos:start="19:10" pos:end="19:24"><name pos:start="19:10" pos:end="19:12">env</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:24">first_cpu</name></expr>;</init> <condition pos:start="19:27" pos:end="19:38"><expr pos:start="19:27" pos:end="19:37"><name pos:start="19:27" pos:end="19:29">env</name> <operator pos:start="19:31" pos:end="19:32">!=</operator> <name pos:start="19:34" pos:end="19:37">NULL</name></expr>;</condition> <incr pos:start="19:40" pos:end="19:58"><expr pos:start="19:40" pos:end="19:58"><name pos:start="19:40" pos:end="19:42">env</name> <operator pos:start="19:44" pos:end="19:44">=</operator> <name pos:start="19:46" pos:end="19:58"><name pos:start="19:46" pos:end="19:48">env</name><operator pos:start="19:49" pos:end="19:50">-&gt;</operator><name pos:start="19:51" pos:end="19:58">next_cpu</name></name></expr></incr>)</control> <block pos:start="19:61" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:9">

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:11">cpu</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:39"><name pos:start="21:15" pos:end="21:17">CPU</name><argument_list pos:start="21:18" pos:end="21:39">(<argument pos:start="21:19" pos:end="21:38"><expr pos:start="21:19" pos:end="21:38"><call pos:start="21:19" pos:end="21:38"><name pos:start="21:19" pos:end="21:33">ppc_env_get_cpu</name><argument_list pos:start="21:34" pos:end="21:38">(<argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:44">(<expr pos:start="23:13" pos:end="23:43"><name pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:15">cpu</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:26">cpu_index</name></name> <operator pos:start="23:28" pos:end="23:28">&gt;</operator> <name pos:start="23:30" pos:end="23:43">max_server_num</name></expr>)</condition> <block pos:start="23:46" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:44">

            <expr_stmt pos:start="25:13" pos:end="25:44"><expr pos:start="25:13" pos:end="25:43"><name pos:start="25:13" pos:end="25:26">max_server_num</name> <operator pos:start="25:28" pos:end="25:28">=</operator> <name pos:start="25:30" pos:end="25:43"><name pos:start="25:30" pos:end="25:32">cpu</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:43">cpu_index</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:7">icp</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:33"><name pos:start="33:11" pos:end="33:19">g_malloc0</name><argument_list pos:start="33:20" pos:end="33:33">(<argument pos:start="33:21" pos:end="33:32"><expr pos:start="33:21" pos:end="33:32"><sizeof pos:start="33:21" pos:end="33:32">sizeof<argument_list pos:start="33:27" pos:end="33:32">(<argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><operator pos:start="33:28" pos:end="33:28">*</operator><name pos:start="33:29" pos:end="33:31">icp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:7">icp</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:19">nr_servers</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:36">max_server_num</name> <operator pos:start="35:38" pos:end="35:38">+</operator> <literal type="number" pos:start="35:40" pos:end="35:40">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:73"><expr pos:start="37:5" pos:end="37:72"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:7">icp</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:11">ss</name></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:72"><name pos:start="37:15" pos:end="37:23">g_malloc0</name><argument_list pos:start="37:24" pos:end="37:72">(<argument pos:start="37:25" pos:end="37:71"><expr pos:start="37:25" pos:end="37:71"><name pos:start="37:25" pos:end="37:39"><name pos:start="37:25" pos:end="37:27">icp</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:39">nr_servers</name></name><operator pos:start="37:40" pos:end="37:40">*</operator><sizeof pos:start="37:41" pos:end="37:71">sizeof<argument_list pos:start="37:47" pos:end="37:71">(<argument pos:start="37:48" pos:end="37:70"><expr pos:start="37:48" pos:end="37:70">struct <name pos:start="37:55" pos:end="37:70">icp_server_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="77:5">for <control pos:start="41:9" pos:end="41:59">(<init pos:start="41:10" pos:end="41:25"><expr pos:start="41:10" pos:end="41:24"><name pos:start="41:10" pos:end="41:12">env</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:24">first_cpu</name></expr>;</init> <condition pos:start="41:27" pos:end="41:38"><expr pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:29">env</name> <operator pos:start="41:31" pos:end="41:32">!=</operator> <name pos:start="41:34" pos:end="41:37">NULL</name></expr>;</condition> <incr pos:start="41:40" pos:end="41:58"><expr pos:start="41:40" pos:end="41:58"><name pos:start="41:40" pos:end="41:42">env</name> <operator pos:start="41:44" pos:end="41:44">=</operator> <name pos:start="41:46" pos:end="41:58"><name pos:start="41:46" pos:end="41:48">env</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:58">next_cpu</name></name></expr></incr>)</control> <block pos:start="41:61" pos:end="77:5">{<block_content pos:start="43:9" pos:end="75:9">

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:11">cpu</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:39"><name pos:start="43:15" pos:end="43:17">CPU</name><argument_list pos:start="43:18" pos:end="43:39">(<argument pos:start="43:19" pos:end="43:38"><expr pos:start="43:19" pos:end="43:38"><call pos:start="43:19" pos:end="43:38"><name pos:start="43:19" pos:end="43:33">ppc_env_get_cpu</name><argument_list pos:start="43:34" pos:end="43:38">(<argument pos:start="43:35" pos:end="43:37"><expr pos:start="43:35" pos:end="43:37"><name pos:start="43:35" pos:end="43:37">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:63"><decl pos:start="45:9" pos:end="45:62"><type pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:14">struct</name> <name pos:start="45:16" pos:end="45:31">icp_server_state</name></name> <modifier pos:start="45:33" pos:end="45:33">*</modifier></type><name pos:start="45:34" pos:end="45:35">ss</name> <init pos:start="45:37" pos:end="45:62">= <expr pos:start="45:39" pos:end="45:62"><operator pos:start="45:39" pos:end="45:39">&amp;</operator><name pos:start="45:40" pos:end="45:62"><name pos:start="45:40" pos:end="45:42">icp</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:46">ss</name><index pos:start="45:47" pos:end="45:62">[<expr pos:start="45:48" pos:end="45:61"><name pos:start="45:48" pos:end="45:61"><name pos:start="45:48" pos:end="45:50">cpu</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:61">cpu_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <switch pos:start="49:9" pos:end="75:9">switch <condition pos:start="49:16" pos:end="49:31">(<expr pos:start="49:17" pos:end="49:30"><call pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:25">PPC_INPUT</name><argument_list pos:start="49:26" pos:end="49:30">(<argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:29">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:33" pos:end="75:9">{<block_content pos:start="51:9" pos:end="73:20">

        <case pos:start="51:9" pos:end="51:36">case <expr pos:start="51:14" pos:end="51:35"><name pos:start="51:14" pos:end="51:35">PPC_FLAGS_INPUT_POWER7</name></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:59"><expr pos:start="53:13" pos:end="53:58"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:14">ss</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:22">output</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:58"><name pos:start="53:26" pos:end="53:28">env</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:40">irq_inputs</name><index pos:start="53:41" pos:end="53:58">[<expr pos:start="53:42" pos:end="53:57"><name pos:start="53:42" pos:end="53:57">POWER7_INPUT_INT</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>



        <case pos:start="59:9" pos:end="59:33">case <expr pos:start="59:14" pos:end="59:32"><name pos:start="59:14" pos:end="59:32">PPC_FLAGS_INPUT_970</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:59"><expr pos:start="61:13" pos:end="61:58"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:14">ss</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:22">output</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:58"><name pos:start="61:26" pos:end="61:28">env</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:40">irq_inputs</name><index pos:start="61:41" pos:end="61:58">[<expr pos:start="61:42" pos:end="61:57"><name pos:start="61:42" pos:end="61:57">PPC970_INPUT_INT</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>



        <default pos:start="67:9" pos:end="67:16">default:</default>

            <expr_stmt pos:start="69:13" pos:end="71:32"><expr pos:start="69:13" pos:end="71:31"><call pos:start="69:13" pos:end="71:31"><name pos:start="69:13" pos:end="69:20">hw_error</name><argument_list pos:start="69:21" pos:end="71:31">(<argument pos:start="69:22" pos:end="71:30"><expr pos:start="69:22" pos:end="71:30"><literal type="string" pos:start="69:22" pos:end="69:74">"XICS interrupt model does not support this CPU bus "</literal>

                     <literal type="string" pos:start="71:22" pos:end="71:30">"model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:20"><expr pos:start="73:13" pos:end="73:19"><call pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:16">exit</name><argument_list pos:start="73:17" pos:end="73:19">(<argument pos:start="73:18" pos:end="73:18"><expr pos:start="73:18" pos:end="73:18"><literal type="number" pos:start="73:18" pos:end="73:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <expr_stmt pos:start="81:5" pos:end="81:34"><expr pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:7">ics</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:33"><name pos:start="81:11" pos:end="81:19">g_malloc0</name><argument_list pos:start="81:20" pos:end="81:33">(<argument pos:start="81:21" pos:end="81:32"><expr pos:start="81:21" pos:end="81:32"><sizeof pos:start="81:21" pos:end="81:32">sizeof<argument_list pos:start="81:27" pos:end="81:32">(<argument pos:start="81:28" pos:end="81:31"><expr pos:start="81:28" pos:end="81:31"><operator pos:start="81:28" pos:end="81:28">*</operator><name pos:start="81:29" pos:end="81:31">ics</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:27"><expr pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:16"><name pos:start="83:5" pos:end="83:7">ics</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:16">nr_irqs</name></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:26">nr_irqs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:32"><expr pos:start="85:5" pos:end="85:31"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:7">ics</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:15">offset</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:31">XICS_IRQ_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:66"><expr pos:start="87:5" pos:end="87:65"><name pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:7">ics</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:13">irqs</name></name> <operator pos:start="87:15" pos:end="87:15">=</operator> <call pos:start="87:17" pos:end="87:65"><name pos:start="87:17" pos:end="87:25">g_malloc0</name><argument_list pos:start="87:26" pos:end="87:65">(<argument pos:start="87:27" pos:end="87:64"><expr pos:start="87:27" pos:end="87:64"><name pos:start="87:27" pos:end="87:33">nr_irqs</name> <operator pos:start="87:35" pos:end="87:35">*</operator> <sizeof pos:start="87:37" pos:end="87:64">sizeof<argument_list pos:start="87:43" pos:end="87:64">(<argument pos:start="87:44" pos:end="87:63"><expr pos:start="87:44" pos:end="87:63">struct <name pos:start="87:51" pos:end="87:63">ics_irq_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:51"><expr pos:start="89:5" pos:end="89:50"><name pos:start="89:5" pos:end="89:14"><name pos:start="89:5" pos:end="89:7">ics</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:14">islsi</name></name> <operator pos:start="89:16" pos:end="89:16">=</operator> <call pos:start="89:18" pos:end="89:50"><name pos:start="89:18" pos:end="89:26">g_malloc0</name><argument_list pos:start="89:27" pos:end="89:50">(<argument pos:start="89:28" pos:end="89:49"><expr pos:start="89:28" pos:end="89:49"><name pos:start="89:28" pos:end="89:34">nr_irqs</name> <operator pos:start="89:36" pos:end="89:36">*</operator> <sizeof pos:start="89:38" pos:end="89:49">sizeof<argument_list pos:start="89:44" pos:end="89:49">(<argument pos:start="89:45" pos:end="89:48"><expr pos:start="89:45" pos:end="89:48"><name pos:start="89:45" pos:end="89:48">bool</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:19"><expr pos:start="93:5" pos:end="93:18"><name pos:start="93:5" pos:end="93:12"><name pos:start="93:5" pos:end="93:7">icp</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:12">ics</name></name> <operator pos:start="93:14" pos:end="93:14">=</operator> <name pos:start="93:16" pos:end="93:18">ics</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:19"><expr pos:start="95:5" pos:end="95:18"><name pos:start="95:5" pos:end="95:12"><name pos:start="95:5" pos:end="95:7">ics</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:12">icp</name></name> <operator pos:start="95:14" pos:end="95:14">=</operator> <name pos:start="95:16" pos:end="95:18">icp</name></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:63"><expr pos:start="99:5" pos:end="99:62"><name pos:start="99:5" pos:end="99:14"><name pos:start="99:5" pos:end="99:7">ics</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:14">qirqs</name></name> <operator pos:start="99:16" pos:end="99:16">=</operator> <call pos:start="99:18" pos:end="99:62"><name pos:start="99:18" pos:end="99:35">qemu_allocate_irqs</name><argument_list pos:start="99:36" pos:end="99:62">(<argument pos:start="99:37" pos:end="99:47"><expr pos:start="99:37" pos:end="99:47"><name pos:start="99:37" pos:end="99:47">ics_set_irq</name></expr></argument>, <argument pos:start="99:50" pos:end="99:52"><expr pos:start="99:50" pos:end="99:52"><name pos:start="99:50" pos:end="99:52">ics</name></expr></argument>, <argument pos:start="99:55" pos:end="99:61"><expr pos:start="99:55" pos:end="99:61"><name pos:start="99:55" pos:end="99:61">nr_irqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:45"><expr pos:start="103:5" pos:end="103:44"><call pos:start="103:5" pos:end="103:44"><name pos:start="103:5" pos:end="103:28">spapr_register_hypercall</name><argument_list pos:start="103:29" pos:end="103:44">(<argument pos:start="103:30" pos:end="103:35"><expr pos:start="103:30" pos:end="103:35"><name pos:start="103:30" pos:end="103:35">H_CPPR</name></expr></argument>, <argument pos:start="103:38" pos:end="103:43"><expr pos:start="103:38" pos:end="103:43"><name pos:start="103:38" pos:end="103:43">h_cppr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:43"><expr pos:start="105:5" pos:end="105:42"><call pos:start="105:5" pos:end="105:42"><name pos:start="105:5" pos:end="105:28">spapr_register_hypercall</name><argument_list pos:start="105:29" pos:end="105:42">(<argument pos:start="105:30" pos:end="105:34"><expr pos:start="105:30" pos:end="105:34"><name pos:start="105:30" pos:end="105:34">H_IPI</name></expr></argument>, <argument pos:start="105:37" pos:end="105:41"><expr pos:start="105:37" pos:end="105:41"><name pos:start="105:37" pos:end="105:41">h_ipi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:45"><expr pos:start="107:5" pos:end="107:44"><call pos:start="107:5" pos:end="107:44"><name pos:start="107:5" pos:end="107:28">spapr_register_hypercall</name><argument_list pos:start="107:29" pos:end="107:44">(<argument pos:start="107:30" pos:end="107:35"><expr pos:start="107:30" pos:end="107:35"><name pos:start="107:30" pos:end="107:35">H_XIRR</name></expr></argument>, <argument pos:start="107:38" pos:end="107:43"><expr pos:start="107:38" pos:end="107:43"><name pos:start="107:38" pos:end="107:43">h_xirr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:43"><expr pos:start="109:5" pos:end="109:42"><call pos:start="109:5" pos:end="109:42"><name pos:start="109:5" pos:end="109:28">spapr_register_hypercall</name><argument_list pos:start="109:29" pos:end="109:42">(<argument pos:start="109:30" pos:end="109:34"><expr pos:start="109:30" pos:end="109:34"><name pos:start="109:30" pos:end="109:34">H_EOI</name></expr></argument>, <argument pos:start="109:37" pos:end="109:41"><expr pos:start="109:37" pos:end="109:41"><name pos:start="109:37" pos:end="109:41">h_eoi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:55"><expr pos:start="113:5" pos:end="113:54"><call pos:start="113:5" pos:end="113:54"><name pos:start="113:5" pos:end="113:23">spapr_rtas_register</name><argument_list pos:start="113:24" pos:end="113:54">(<argument pos:start="113:25" pos:end="113:38"><expr pos:start="113:25" pos:end="113:38"><literal type="string" pos:start="113:25" pos:end="113:38">"ibm,set-xive"</literal></expr></argument>, <argument pos:start="113:41" pos:end="113:53"><expr pos:start="113:41" pos:end="113:53"><name pos:start="113:41" pos:end="113:53">rtas_set_xive</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:55"><expr pos:start="115:5" pos:end="115:54"><call pos:start="115:5" pos:end="115:54"><name pos:start="115:5" pos:end="115:23">spapr_rtas_register</name><argument_list pos:start="115:24" pos:end="115:54">(<argument pos:start="115:25" pos:end="115:38"><expr pos:start="115:25" pos:end="115:38"><literal type="string" pos:start="115:25" pos:end="115:38">"ibm,get-xive"</literal></expr></argument>, <argument pos:start="115:41" pos:end="115:53"><expr pos:start="115:41" pos:end="115:53"><name pos:start="115:41" pos:end="115:53">rtas_get_xive</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:53"><expr pos:start="117:5" pos:end="117:52"><call pos:start="117:5" pos:end="117:52"><name pos:start="117:5" pos:end="117:23">spapr_rtas_register</name><argument_list pos:start="117:24" pos:end="117:52">(<argument pos:start="117:25" pos:end="117:37"><expr pos:start="117:25" pos:end="117:37"><literal type="string" pos:start="117:25" pos:end="117:37">"ibm,int-off"</literal></expr></argument>, <argument pos:start="117:40" pos:end="117:51"><expr pos:start="117:40" pos:end="117:51"><name pos:start="117:40" pos:end="117:51">rtas_int_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:51"><expr pos:start="119:5" pos:end="119:50"><call pos:start="119:5" pos:end="119:50"><name pos:start="119:5" pos:end="119:23">spapr_rtas_register</name><argument_list pos:start="119:24" pos:end="119:50">(<argument pos:start="119:25" pos:end="119:36"><expr pos:start="119:25" pos:end="119:36"><literal type="string" pos:start="119:25" pos:end="119:36">"ibm,int-on"</literal></expr></argument>, <argument pos:start="119:39" pos:end="119:49"><expr pos:start="119:39" pos:end="119:49"><name pos:start="119:39" pos:end="119:49">rtas_int_on</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:41"><expr pos:start="123:5" pos:end="123:40"><call pos:start="123:5" pos:end="123:40"><name pos:start="123:5" pos:end="123:23">qemu_register_reset</name><argument_list pos:start="123:24" pos:end="123:40">(<argument pos:start="123:25" pos:end="123:34"><expr pos:start="123:25" pos:end="123:34"><name pos:start="123:25" pos:end="123:34">xics_reset</name></expr></argument>, <argument pos:start="123:37" pos:end="123:39"><expr pos:start="123:37" pos:end="123:39"><name pos:start="123:37" pos:end="123:39">icp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="127:5" pos:end="127:15">return <expr pos:start="127:12" pos:end="127:14"><name pos:start="127:12" pos:end="127:14">icp</name></expr>;</return>

</block_content>}</block></function>
</unit>
