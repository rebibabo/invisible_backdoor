<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13079.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:24">ff_mdct_init</name><parameter_list pos:start="1:25" pos:end="1:77">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">FFTContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:49"><decl pos:start="1:41" pos:end="1:49"><type pos:start="1:41" pos:end="1:49"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:49">nbits</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:62">inverse</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:70">double</name></type> <name pos:start="1:72" pos:end="1:76">scale</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:14">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>, <decl pos:start="5:12" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:13">n4</name></decl>, <decl pos:start="5:16" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:16">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:16">alpha</name></decl>, <decl pos:start="7:19" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:19" pos:end="7:23">theta</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">tstep</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><call pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:28">(<argument pos:start="13:12" pos:end="13:12"><expr pos:start="13:12" pos:end="13:12"><name pos:start="13:12" pos:end="13:12">s</name></expr></argument>, <argument pos:start="13:15" pos:end="13:15"><expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></argument>, <argument pos:start="13:18" pos:end="13:27"><expr pos:start="13:18" pos:end="13:27"><sizeof pos:start="13:18" pos:end="13:27">sizeof<argument_list pos:start="13:24" pos:end="13:27">(<argument pos:start="13:25" pos:end="13:26"><expr pos:start="13:25" pos:end="13:26"><operator pos:start="13:25" pos:end="13:25">*</operator><name pos:start="13:26" pos:end="13:26">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:5">n</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <literal type="number" pos:start="15:9" pos:end="15:9">1</literal> <operator pos:start="15:11" pos:end="15:12">&lt;&lt;</operator> <name pos:start="15:14" pos:end="15:18">nbits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:16">mdct_bits</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:24">nbits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:21"><expr pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:16">mdct_size</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:20">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:16"><expr pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:6">n4</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:10">n</name> <operator pos:start="21:12" pos:end="21:13">&gt;&gt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:18">permutation</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:38">FF_MDCT_PERM_NONE</name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:54">(<expr pos:start="27:9" pos:end="27:53"><call pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:19">ff_fft_init</name><argument_list pos:start="27:20" pos:end="27:49">(<argument pos:start="27:21" pos:end="27:21"><expr pos:start="27:21" pos:end="27:21"><name pos:start="27:21" pos:end="27:21">s</name></expr></argument>, <argument pos:start="27:24" pos:end="27:39"><expr pos:start="27:24" pos:end="27:39"><name pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:35">mdct_bits</name></name> <operator pos:start="27:37" pos:end="27:37">-</operator> <literal type="number" pos:start="27:39" pos:end="27:39">2</literal></expr></argument>, <argument pos:start="27:42" pos:end="27:48"><expr pos:start="27:42" pos:end="27:48"><name pos:start="27:42" pos:end="27:48">inverse</name></expr></argument>)</argument_list></call> <operator pos:start="27:51" pos:end="27:51">&lt;</operator> <literal type="number" pos:start="27:53" pos:end="27:53">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:49"><expr pos:start="33:5" pos:end="33:48"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:11">tcos</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:48"><name pos:start="33:15" pos:end="33:23">av_malloc</name><argument_list pos:start="33:24" pos:end="33:48">(<argument pos:start="33:25" pos:end="33:47"><expr pos:start="33:25" pos:end="33:47"><name pos:start="33:25" pos:end="33:25">n</name><operator pos:start="33:26" pos:end="33:26">/</operator><literal type="number" pos:start="33:27" pos:end="33:27">2</literal> <operator pos:start="33:29" pos:end="33:29">*</operator> <sizeof pos:start="33:31" pos:end="33:47">sizeof<argument_list pos:start="33:37" pos:end="33:47">(<argument pos:start="33:38" pos:end="33:46"><expr pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:46">FFTSample</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if <condition pos:start="35:8" pos:end="35:17">(<expr pos:start="35:9" pos:end="35:16"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:16"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:16">tcos</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <switch pos:start="41:5" pos:end="63:5">switch <condition pos:start="41:12" pos:end="41:27">(<expr pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:26">permutation</name></name></expr>)</condition> <block pos:start="41:29" pos:end="63:5">{<block_content pos:start="43:5" pos:end="61:18">

    <case pos:start="43:5" pos:end="43:27">case <expr pos:start="43:10" pos:end="43:26"><name pos:start="43:10" pos:end="43:26">FF_MDCT_PERM_NONE</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">tsin</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:25"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:25">tcos</name></name> <operator pos:start="45:27" pos:end="45:27">+</operator> <name pos:start="45:29" pos:end="45:30">n4</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:18"><expr pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:13">tstep</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:33">case <expr pos:start="51:10" pos:end="51:32"><name pos:start="51:10" pos:end="51:32">FF_MDCT_PERM_INTERLEAVE</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">tsin</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:25"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:25">tcos</name></name> <operator pos:start="53:27" pos:end="53:27">+</operator> <literal type="number" pos:start="53:29" pos:end="53:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:18"><expr pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:13">tstep</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <literal type="number" pos:start="55:17" pos:end="55:17">2</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">fail</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="67:5" pos:end="67:45"><expr pos:start="67:5" pos:end="67:44"><name pos:start="67:5" pos:end="67:9">theta</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <literal type="number" pos:start="67:13" pos:end="67:15">1.0</literal> <operator pos:start="67:17" pos:end="67:17">/</operator> <literal type="number" pos:start="67:19" pos:end="67:23">8.0</literal> <operator pos:start="67:23" pos:end="67:23">+</operator> <operator pos:start="67:25" pos:end="67:25">(</operator><ternary pos:start="67:26" pos:end="67:43"><condition pos:start="67:26" pos:end="67:36"><expr pos:start="67:26" pos:end="67:34"><name pos:start="67:26" pos:end="67:30">scale</name> <operator pos:start="67:32" pos:end="67:32">&lt;</operator> <literal type="number" pos:start="67:34" pos:end="67:34">0</literal></expr> ?</condition><then pos:start="67:38" pos:end="67:39"> <expr pos:start="67:38" pos:end="67:39"><name pos:start="67:38" pos:end="67:39">n4</name></expr> </then><else pos:start="67:41" pos:end="67:43">: <expr pos:start="67:43" pos:end="67:43"><literal type="number" pos:start="67:43" pos:end="67:43">0</literal></expr></else></ternary><operator pos:start="67:44" pos:end="67:44">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:30"><expr pos:start="69:5" pos:end="69:29"><name pos:start="69:5" pos:end="69:9">scale</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <call pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:16">sqrt</name><argument_list pos:start="69:17" pos:end="69:29">(<argument pos:start="69:18" pos:end="69:28"><expr pos:start="69:18" pos:end="69:28"><call pos:start="69:18" pos:end="69:28"><name pos:start="69:18" pos:end="69:21">fabs</name><argument_list pos:start="69:22" pos:end="69:28">(<argument pos:start="69:23" pos:end="69:27"><expr pos:start="69:23" pos:end="69:27"><name pos:start="69:23" pos:end="69:27">scale</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="71:5" pos:end="79:5">for<control pos:start="71:8" pos:end="71:21">(<init pos:start="71:9" pos:end="71:12"><expr pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:9">i</name><operator pos:start="71:10" pos:end="71:10">=</operator><literal type="number" pos:start="71:11" pos:end="71:11">0</literal></expr>;</init><condition pos:start="71:13" pos:end="71:17"><expr pos:start="71:13" pos:end="71:16"><name pos:start="71:13" pos:end="71:13">i</name><operator pos:start="71:14" pos:end="71:14">&lt;</operator><name pos:start="71:15" pos:end="71:16">n4</name></expr>;</condition><incr pos:start="71:18" pos:end="71:20"><expr pos:start="71:18" pos:end="71:20"><name pos:start="71:18" pos:end="71:18">i</name><operator pos:start="71:19" pos:end="71:20">++</operator></expr></incr>)</control> <block pos:start="71:23" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:47">

        <expr_stmt pos:start="73:9" pos:end="73:43"><expr pos:start="73:9" pos:end="73:42"><name pos:start="73:9" pos:end="73:13">alpha</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <literal type="number" pos:start="73:17" pos:end="73:17">2</literal> <operator pos:start="73:19" pos:end="73:19">*</operator> <name pos:start="73:21" pos:end="73:24">M_PI</name> <operator pos:start="73:26" pos:end="73:26">*</operator> <operator pos:start="73:28" pos:end="73:28">(</operator><name pos:start="73:29" pos:end="73:29">i</name> <operator pos:start="73:31" pos:end="73:31">+</operator> <name pos:start="73:33" pos:end="73:37">theta</name><operator pos:start="73:38" pos:end="73:38">)</operator> <operator pos:start="73:40" pos:end="73:40">/</operator> <name pos:start="73:42" pos:end="73:42">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:47"><expr pos:start="75:9" pos:end="75:46"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:15">tcos</name><index pos:start="75:16" pos:end="75:24">[<expr pos:start="75:17" pos:end="75:23"><name pos:start="75:17" pos:end="75:17">i</name><operator pos:start="75:18" pos:end="75:18">*</operator><name pos:start="75:19" pos:end="75:23">tstep</name></expr>]</index></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <operator pos:start="75:28" pos:end="75:28">-</operator><call pos:start="75:29" pos:end="75:38"><name pos:start="75:29" pos:end="75:31">cos</name><argument_list pos:start="75:32" pos:end="75:38">(<argument pos:start="75:33" pos:end="75:37"><expr pos:start="75:33" pos:end="75:37"><name pos:start="75:33" pos:end="75:37">alpha</name></expr></argument>)</argument_list></call> <operator pos:start="75:40" pos:end="75:40">*</operator> <name pos:start="75:42" pos:end="75:46">scale</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:47"><expr pos:start="77:9" pos:end="77:46"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">tsin</name><index pos:start="77:16" pos:end="77:24">[<expr pos:start="77:17" pos:end="77:23"><name pos:start="77:17" pos:end="77:17">i</name><operator pos:start="77:18" pos:end="77:18">*</operator><name pos:start="77:19" pos:end="77:23">tstep</name></expr>]</index></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <operator pos:start="77:28" pos:end="77:28">-</operator><call pos:start="77:29" pos:end="77:38"><name pos:start="77:29" pos:end="77:31">sin</name><argument_list pos:start="77:32" pos:end="77:38">(<argument pos:start="77:33" pos:end="77:37"><expr pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:37">alpha</name></expr></argument>)</argument_list></call> <operator pos:start="77:40" pos:end="77:40">*</operator> <name pos:start="77:42" pos:end="77:46">scale</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

 <label pos:start="83:2" pos:end="83:6"><name pos:start="83:2" pos:end="83:5">fail</name>:</label>

    <expr_stmt pos:start="85:5" pos:end="85:19"><expr pos:start="85:5" pos:end="85:18"><call pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:15">ff_mdct_end</name><argument_list pos:start="85:16" pos:end="85:18">(<argument pos:start="85:17" pos:end="85:17"><expr pos:start="85:17" pos:end="85:17"><name pos:start="85:17" pos:end="85:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:14">return <expr pos:start="87:12" pos:end="87:13"><operator pos:start="87:12" pos:end="87:12">-</operator><literal type="number" pos:start="87:13" pos:end="87:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
