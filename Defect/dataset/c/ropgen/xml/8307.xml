<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8307.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">aarch64_cpu_register</name><parameter_list pos:start="1:33" pos:end="1:56">(<parameter pos:start="1:34" pos:end="1:55"><decl pos:start="1:34" pos:end="1:55"><type pos:start="1:34" pos:end="1:51"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:49">ARMCPUInfo</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:35">

    <decl_stmt pos:start="5:5" pos:end="17:6"><decl pos:start="5:5" pos:end="17:5"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">TypeInfo</name></type> <name pos:start="5:14" pos:end="5:22">type_info</name> <init pos:start="5:24" pos:end="17:5">= <expr pos:start="5:26" pos:end="17:5"><block pos:start="5:26" pos:end="17:5">{

        <expr pos:start="7:9" pos:end="7:34"><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:15">parent</name> <operator pos:start="7:17" pos:end="7:17">=</operator> <name pos:start="7:19" pos:end="7:34">TYPE_AARCH64_CPU</name></expr>,

        <expr pos:start="9:9" pos:end="9:39"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:22">instance_size</name> <operator pos:start="9:24" pos:end="9:24">=</operator> <sizeof pos:start="9:26" pos:end="9:39">sizeof<argument_list pos:start="9:32" pos:end="9:39">(<argument pos:start="9:33" pos:end="9:38"><expr pos:start="9:33" pos:end="9:38"><name pos:start="9:33" pos:end="9:38">ARMCPU</name></expr></argument>)</argument_list></sizeof></expr>,

        <expr pos:start="11:9" pos:end="11:37"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:22">instance_init</name> <operator pos:start="11:24" pos:end="11:24">=</operator> <name pos:start="11:26" pos:end="11:37"><name pos:start="11:26" pos:end="11:29">info</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:37">initfn</name></name></expr>,

        <expr pos:start="13:9" pos:end="13:41"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:19">class_size</name> <operator pos:start="13:21" pos:end="13:21">=</operator> <sizeof pos:start="13:23" pos:end="13:41">sizeof<argument_list pos:start="13:29" pos:end="13:41">(<argument pos:start="13:30" pos:end="13:40"><expr pos:start="13:30" pos:end="13:40"><name pos:start="13:30" pos:end="13:40">ARMCPUClass</name></expr></argument>)</argument_list></sizeof></expr>,

        <expr pos:start="15:9" pos:end="15:38"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:19">class_init</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:38"><name pos:start="15:23" pos:end="15:26">info</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:38">class_init</name></name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:79">/* TODO: drop when we support more CPUs - all entries will have name set */</comment>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:19"><name pos:start="23:10" pos:end="23:13">info</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">name</name></name></expr>)</condition> <block pos:start="23:22" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:69"><expr pos:start="31:5" pos:end="31:68"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:13">type_info</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:18">name</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <call pos:start="31:22" pos:end="31:68"><name pos:start="31:22" pos:end="31:36">g_strdup_printf</name><argument_list pos:start="31:37" pos:end="31:68">(<argument pos:start="31:38" pos:end="31:55"><expr pos:start="31:38" pos:end="31:55"><literal type="string" pos:start="31:38" pos:end="31:42">"%s-"</literal> <name pos:start="31:44" pos:end="31:55">TYPE_ARM_CPU</name></expr></argument>, <argument pos:start="31:58" pos:end="31:67"><expr pos:start="31:58" pos:end="31:67"><name pos:start="31:58" pos:end="31:67"><name pos:start="31:58" pos:end="31:61">info</name><operator pos:start="31:62" pos:end="31:63">-&gt;</operator><name pos:start="31:64" pos:end="31:67">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><call pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:17">type_register</name><argument_list pos:start="33:18" pos:end="33:29">(<argument pos:start="33:19" pos:end="33:28"><expr pos:start="33:19" pos:end="33:28"><operator pos:start="33:19" pos:end="33:19">&amp;</operator><name pos:start="33:20" pos:end="33:28">type_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><call pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:10">g_free</name><argument_list pos:start="35:11" pos:end="35:34">(<argument pos:start="35:12" pos:end="35:33"><expr pos:start="35:12" pos:end="35:33"><operator pos:start="35:12" pos:end="35:12">(</operator><name pos:start="35:13" pos:end="35:16">void</name> <operator pos:start="35:18" pos:end="35:18">*</operator><operator pos:start="35:19" pos:end="35:19">)</operator><name pos:start="35:20" pos:end="35:33"><name pos:start="35:20" pos:end="35:28">type_info</name><operator pos:start="35:29" pos:end="35:29">.</operator><name pos:start="35:30" pos:end="35:33">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
