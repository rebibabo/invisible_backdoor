<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26094.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">mmu40x_get_physical_address</name> <parameter_list pos:start="1:33" pos:end="3:79">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:41">CPUState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:57">mmu_ctx_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">ctx</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:53"><decl pos:start="3:34" pos:end="3:53"><type pos:start="3:34" pos:end="3:53"><name pos:start="3:34" pos:end="3:45">target_ulong</name></type> <name pos:start="3:47" pos:end="3:53">address</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:61"><decl pos:start="3:56" pos:end="3:61"><type pos:start="3:56" pos:end="3:61"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:61">rw</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:78"><decl pos:start="3:64" pos:end="3:78"><type pos:start="3:64" pos:end="3:78"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:78">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="143:1">{<block_content pos:start="7:5" pos:end="141:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ppcemb_tlb_t</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">target_phys_addr_t</name></type> <name pos:start="9:24" pos:end="9:28">raddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>, <decl pos:start="11:17" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:20">zsel</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:25">zpr</name></decl>, <decl pos:start="11:28" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:28" pos:end="11:29">pr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">-</operator><literal type="number" pos:start="15:12" pos:end="15:12">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:9">raddr</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <operator pos:start="17:13" pos:end="17:13">-</operator><literal type="number" pos:start="17:14" pos:end="17:14">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:16"><expr pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:6">pr</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:15">msr_pr</name></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="126:0">for <control pos:start="21:9" pos:end="21:37">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:32"><expr pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:31"><name pos:start="21:21" pos:end="21:23">env</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:31">nb_tlb</name></name></expr>;</condition> <incr pos:start="21:34" pos:end="21:36"><expr pos:start="21:34" pos:end="21:36"><name pos:start="21:34" pos:end="21:34">i</name><operator pos:start="21:35" pos:end="21:36">++</operator></expr></incr>)</control> <block pos:start="21:39" pos:end="126:0">{<block_content pos:start="23:9" pos:end="121:9">

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:11">tlb</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">&amp;</operator><name pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:18">env</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:23">tlb</name><index pos:start="23:24" pos:end="23:26">[<expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">i</name></expr>]</index></name><operator pos:start="23:27" pos:end="23:27">.</operator><name pos:start="23:28" pos:end="23:31">tlbe</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:21"><if pos:start="25:9" pos:end="29:21">if <condition pos:start="25:12" pos:end="27:62">(<expr pos:start="25:13" pos:end="27:61"><call pos:start="25:13" pos:end="27:57"><name pos:start="25:13" pos:end="25:28">ppcemb_tlb_check</name><argument_list pos:start="25:29" pos:end="27:57">(<argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:32">env</name></expr></argument>, <argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">tlb</name></expr></argument>, <argument pos:start="25:40" pos:end="25:45"><expr pos:start="25:40" pos:end="25:45"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:45">raddr</name></expr></argument>, <argument pos:start="25:48" pos:end="25:54"><expr pos:start="25:48" pos:end="25:54"><name pos:start="25:48" pos:end="25:54">address</name></expr></argument>,

                             <argument pos:start="27:30" pos:end="27:50"><expr pos:start="27:30" pos:end="27:50"><name pos:start="27:30" pos:end="27:50"><name pos:start="27:30" pos:end="27:32">env</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:37">spr</name><index pos:start="27:38" pos:end="27:50">[<expr pos:start="27:39" pos:end="27:49"><name pos:start="27:39" pos:end="27:49">SPR_40x_PID</name></expr>]</index></name></expr></argument>, <argument pos:start="27:53" pos:end="27:53"><expr pos:start="27:53" pos:end="27:53"><literal type="number" pos:start="27:53" pos:end="27:53">0</literal></expr></argument>, <argument pos:start="27:56" pos:end="27:56"><expr pos:start="27:56" pos:end="27:56"><name pos:start="27:56" pos:end="27:56">i</name></expr></argument>)</argument_list></call> <operator pos:start="27:59" pos:end="27:59">&lt;</operator> <literal type="number" pos:start="27:61" pos:end="27:61">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:12">zsel</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:19">tlb</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:25">attr</name></name> <operator pos:start="31:27" pos:end="31:28">&gt;&gt;</operator> <literal type="number" pos:start="31:30" pos:end="31:30">4</literal><operator pos:start="31:31" pos:end="31:31">)</operator> <operator pos:start="31:33" pos:end="31:33">&amp;</operator> <literal type="number" pos:start="31:35" pos:end="31:37">0xF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="36:0"><expr pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:11">zpr</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <operator pos:start="33:15" pos:end="33:15">(</operator><name pos:start="33:16" pos:end="33:36"><name pos:start="33:16" pos:end="33:18">env</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:23">spr</name><index pos:start="33:24" pos:end="33:36">[<expr pos:start="33:25" pos:end="33:35"><name pos:start="33:25" pos:end="33:35">SPR_40x_ZPR</name></expr>]</index></name> <operator pos:start="33:38" pos:end="33:39">&gt;&gt;</operator> <operator pos:start="33:41" pos:end="33:41">(</operator><literal type="number" pos:start="33:42" pos:end="33:45">28</literal> <operator pos:start="33:45" pos:end="33:45">-</operator> <operator pos:start="33:47" pos:end="33:47">(</operator><literal type="number" pos:start="33:48" pos:end="33:48">2</literal> <operator pos:start="33:50" pos:end="33:50">*</operator> <name pos:start="33:52" pos:end="33:55">zsel</name><operator pos:start="33:56" pos:end="33:56">)</operator><operator pos:start="33:57" pos:end="33:57">)</operator><operator pos:start="33:58" pos:end="33:58">)</operator> <operator pos:start="33:60" pos:end="33:60">&amp;</operator> <literal type="number" pos:start="33:62" pos:end="33:64">0x3</literal></expr>;</expr_stmt>

<cpp:if pos:start="35:1" pos:end="35:32">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:32"><call pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:11">defined</name> <argument_list pos:start="35:13" pos:end="35:32">(<argument pos:start="35:14" pos:end="35:31"><expr pos:start="35:14" pos:end="35:31"><name pos:start="35:14" pos:end="35:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="37:9" pos:end="46:0"><if pos:start="37:9" pos:end="46:0">if <condition pos:start="37:12" pos:end="37:26">(<expr pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:20">loglevel</name> <operator pos:start="37:22" pos:end="37:23">!=</operator> <literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr>)</condition> <block pos:start="37:28" pos:end="46:0">{<block_content pos:start="39:13" pos:end="41:59">

            <expr_stmt pos:start="39:13" pos:end="41:59"><expr pos:start="39:13" pos:end="41:58"><call pos:start="39:13" pos:end="41:58"><name pos:start="39:13" pos:end="39:19">fprintf</name><argument_list pos:start="39:20" pos:end="41:58">(<argument pos:start="39:21" pos:end="39:27"><expr pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:27">logfile</name></expr></argument>, <argument pos:start="39:30" pos:end="39:74"><expr pos:start="39:30" pos:end="39:74"><literal type="string" pos:start="39:30" pos:end="39:74">"%s: TLB %d zsel %d zpr %d rw %d attr %08x\n"</literal></expr></argument>,

                    <argument pos:start="41:21" pos:end="41:28"><expr pos:start="41:21" pos:end="41:28"><name pos:start="41:21" pos:end="41:28">__func__</name></expr></argument>, <argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><name pos:start="41:31" pos:end="41:31">i</name></expr></argument>, <argument pos:start="41:34" pos:end="41:37"><expr pos:start="41:34" pos:end="41:37"><name pos:start="41:34" pos:end="41:37">zsel</name></expr></argument>, <argument pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:42">zpr</name></expr></argument>, <argument pos:start="41:45" pos:end="41:46"><expr pos:start="41:45" pos:end="41:46"><name pos:start="41:45" pos:end="41:46">rw</name></expr></argument>, <argument pos:start="41:49" pos:end="41:57"><expr pos:start="41:49" pos:end="41:57"><name pos:start="41:49" pos:end="41:57"><name pos:start="41:49" pos:end="41:51">tlb</name><operator pos:start="41:52" pos:end="41:53">-&gt;</operator><name pos:start="41:54" pos:end="41:57">attr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="47:9" pos:end="47:38">/* Check execute enable bit */</comment>

        <switch pos:start="49:9" pos:end="99:9">switch <condition pos:start="49:16" pos:end="49:20">(<expr pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:19">zpr</name></expr>)</condition> <block pos:start="49:22" pos:end="99:9">{<block_content pos:start="51:9" pos:end="97:18">

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="number" pos:start="51:14" pos:end="51:16">0x2</literal></expr>:</case>

            <if_stmt pos:start="53:13" pos:end="55:33"><if pos:start="53:13" pos:end="55:33">if <condition pos:start="53:16" pos:end="53:24">(<expr pos:start="53:17" pos:end="53:23"><name pos:start="53:17" pos:end="53:18">pr</name> <operator pos:start="53:20" pos:end="53:21">!=</operator> <literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:33"><block_content pos:start="55:17" pos:end="55:33">

                <goto pos:start="55:17" pos:end="55:33">goto <name pos:start="55:22" pos:end="55:32">check_perms</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="57:13" pos:end="57:31">/* No break here */</comment>

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="number" pos:start="59:14" pos:end="59:16">0x3</literal></expr>:</case>

            <comment type="block" pos:start="61:13" pos:end="61:38">/* All accesses granted */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:59"><expr pos:start="63:13" pos:end="63:58"><name pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:15">ctx</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:21">prot</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:33">PAGE_READ</name> <operator pos:start="63:35" pos:end="63:35">|</operator> <name pos:start="63:37" pos:end="63:46">PAGE_WRITE</name> <operator pos:start="63:48" pos:end="63:48">|</operator> <name pos:start="63:50" pos:end="63:58">PAGE_EXEC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:20"><expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <case pos:start="69:9" pos:end="69:17">case <expr pos:start="69:14" pos:end="69:16"><literal type="number" pos:start="69:14" pos:end="69:16">0x0</literal></expr>:</case>

            <if_stmt pos:start="71:13" pos:end="79:13"><if pos:start="71:13" pos:end="79:13">if <condition pos:start="71:16" pos:end="71:24">(<expr pos:start="71:17" pos:end="71:23"><name pos:start="71:17" pos:end="71:18">pr</name> <operator pos:start="71:20" pos:end="71:21">!=</operator> <literal type="number" pos:start="71:23" pos:end="71:23">0</literal></expr>)</condition> <block pos:start="71:26" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:22">

                <expr_stmt pos:start="73:17" pos:end="73:30"><expr pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:25"><name pos:start="73:17" pos:end="73:19">ctx</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:25">prot</name></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <literal type="number" pos:start="73:29" pos:end="73:29">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:25"><expr pos:start="75:17" pos:end="75:24"><name pos:start="75:17" pos:end="75:19">ret</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <operator pos:start="75:23" pos:end="75:23">-</operator><literal type="number" pos:start="75:24" pos:end="75:24">2</literal></expr>;</expr_stmt>

                <break pos:start="77:17" pos:end="77:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="81:13" pos:end="81:31">/* No break here */</comment>

        <case pos:start="83:9" pos:end="83:17">case <expr pos:start="83:14" pos:end="83:16"><literal type="number" pos:start="83:14" pos:end="83:16">0x1</literal></expr>:</case>

        <label pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:19">check_perms</name>:</label>

            <comment type="block" pos:start="87:13" pos:end="87:38">/* Check from TLB entry */</comment>

            <comment type="block" pos:start="89:13" pos:end="89:73">/* XXX: there is a problem here or in the TLB fill code... */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:34"><expr pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:15">ctx</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:21">prot</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:33"><name pos:start="91:25" pos:end="91:27">tlb</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:33">prot</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:15">ctx</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:21">prot</name></name> <operator pos:start="93:23" pos:end="93:24">|=</operator> <name pos:start="93:26" pos:end="93:34">PAGE_EXEC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:57"><expr pos:start="95:13" pos:end="95:56"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:56"><name pos:start="95:19" pos:end="95:28">check_prot</name><argument_list pos:start="95:29" pos:end="95:56">(<argument pos:start="95:30" pos:end="95:38"><expr pos:start="95:30" pos:end="95:38"><name pos:start="95:30" pos:end="95:38"><name pos:start="95:30" pos:end="95:32">ctx</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:38">prot</name></name></expr></argument>, <argument pos:start="95:41" pos:end="95:42"><expr pos:start="95:41" pos:end="95:42"><name pos:start="95:41" pos:end="95:42">rw</name></expr></argument>, <argument pos:start="95:45" pos:end="95:55"><expr pos:start="95:45" pos:end="95:55"><name pos:start="95:45" pos:end="95:55">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="101:9" pos:end="121:9"><if pos:start="101:9" pos:end="121:9">if <condition pos:start="101:12" pos:end="101:21">(<expr pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:18">&gt;=</operator> <literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>)</condition> <block pos:start="101:23" pos:end="121:9">{<block_content pos:start="103:13" pos:end="119:21">

            <expr_stmt pos:start="103:13" pos:end="106:0"><expr pos:start="103:13" pos:end="103:30"><name pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:15">ctx</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:22">raddr</name></name> <operator pos:start="103:24" pos:end="103:24">=</operator> <name pos:start="103:26" pos:end="103:30">raddr</name></expr>;</expr_stmt>

<cpp:if pos:start="105:1" pos:end="105:32">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:32"><call pos:start="105:5" pos:end="105:32"><name pos:start="105:5" pos:end="105:11">defined</name> <argument_list pos:start="105:13" pos:end="105:32">(<argument pos:start="105:14" pos:end="105:31"><expr pos:start="105:14" pos:end="105:31"><name pos:start="105:14" pos:end="105:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="107:13" pos:end="118:0"><if pos:start="107:13" pos:end="118:0">if <condition pos:start="107:16" pos:end="107:30">(<expr pos:start="107:17" pos:end="107:29"><name pos:start="107:17" pos:end="107:24">loglevel</name> <operator pos:start="107:26" pos:end="107:27">!=</operator> <literal type="number" pos:start="107:29" pos:end="107:29">0</literal></expr>)</condition> <block pos:start="107:32" pos:end="118:0">{<block_content pos:start="109:17" pos:end="113:29">

                <expr_stmt pos:start="109:17" pos:end="113:29"><expr pos:start="109:17" pos:end="113:28"><call pos:start="109:17" pos:end="113:28"><name pos:start="109:17" pos:end="109:23">fprintf</name><argument_list pos:start="109:24" pos:end="113:28">(<argument pos:start="109:25" pos:end="109:31"><expr pos:start="109:25" pos:end="109:31"><name pos:start="109:25" pos:end="109:31">logfile</name></expr></argument>, <argument pos:start="109:34" pos:end="111:34"><expr pos:start="109:34" pos:end="111:34"><literal type="string" pos:start="109:34" pos:end="109:54">"%s: access granted "</literal> <name pos:start="109:56" pos:end="109:60">ADDRX</name> <literal type="string" pos:start="109:62" pos:end="109:67">" =&gt; "</literal> <name pos:start="109:69" pos:end="109:72">REGX</name>

                        <literal type="string" pos:start="111:25" pos:end="111:34">" %d %d\n"</literal></expr></argument>, <argument pos:start="111:37" pos:end="111:44"><expr pos:start="111:37" pos:end="111:44"><name pos:start="111:37" pos:end="111:44">__func__</name></expr></argument>, <argument pos:start="111:47" pos:end="111:53"><expr pos:start="111:47" pos:end="111:53"><name pos:start="111:47" pos:end="111:53">address</name></expr></argument>, <argument pos:start="111:56" pos:end="111:65"><expr pos:start="111:56" pos:end="111:65"><name pos:start="111:56" pos:end="111:65"><name pos:start="111:56" pos:end="111:58">ctx</name><operator pos:start="111:59" pos:end="111:60">-&gt;</operator><name pos:start="111:61" pos:end="111:65">raddr</name></name></expr></argument>, <argument pos:start="111:68" pos:end="111:76"><expr pos:start="111:68" pos:end="111:76"><name pos:start="111:68" pos:end="111:76"><name pos:start="111:68" pos:end="111:70">ctx</name><operator pos:start="111:71" pos:end="111:72">-&gt;</operator><name pos:start="111:73" pos:end="111:76">prot</name></name></expr></argument>,

                        <argument pos:start="113:25" pos:end="113:27"><expr pos:start="113:25" pos:end="113:27"><name pos:start="113:25" pos:end="113:27">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="117:1" pos:end="117:6">#<cpp:directive pos:start="117:2" pos:end="117:6">endif</cpp:directive></cpp:endif>

            <return pos:start="119:13" pos:end="119:21">return <expr pos:start="119:20" pos:end="119:20"><literal type="number" pos:start="119:20" pos:end="119:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:if pos:start="125:1" pos:end="125:32">#<cpp:directive pos:start="125:2" pos:end="125:3">if</cpp:directive> <expr pos:start="125:5" pos:end="125:32"><call pos:start="125:5" pos:end="125:32"><name pos:start="125:5" pos:end="125:11">defined</name> <argument_list pos:start="125:13" pos:end="125:32">(<argument pos:start="125:14" pos:end="125:31"><expr pos:start="125:14" pos:end="125:31"><name pos:start="125:14" pos:end="125:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="127:5" pos:end="138:0"><if pos:start="127:5" pos:end="138:0">if <condition pos:start="127:8" pos:end="127:22">(<expr pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:16">loglevel</name> <operator pos:start="127:18" pos:end="127:19">!=</operator> <literal type="number" pos:start="127:21" pos:end="127:21">0</literal></expr>)</condition> <block pos:start="127:24" pos:end="138:0">{<block_content pos:start="129:9" pos:end="133:21">

        <expr_stmt pos:start="129:9" pos:end="133:21"><expr pos:start="129:9" pos:end="133:20"><call pos:start="129:9" pos:end="133:20"><name pos:start="129:9" pos:end="129:15">fprintf</name><argument_list pos:start="129:16" pos:end="133:20">(<argument pos:start="129:17" pos:end="129:23"><expr pos:start="129:17" pos:end="129:23"><name pos:start="129:17" pos:end="129:23">logfile</name></expr></argument>, <argument pos:start="129:26" pos:end="131:26"><expr pos:start="129:26" pos:end="131:26"><literal type="string" pos:start="129:26" pos:end="129:46">"%s: access refused "</literal> <name pos:start="129:48" pos:end="129:52">ADDRX</name> <literal type="string" pos:start="129:54" pos:end="129:59">" =&gt; "</literal> <name pos:start="129:61" pos:end="129:64">REGX</name>

                <literal type="string" pos:start="131:17" pos:end="131:26">" %d %d\n"</literal></expr></argument>, <argument pos:start="131:29" pos:end="131:36"><expr pos:start="131:29" pos:end="131:36"><name pos:start="131:29" pos:end="131:36">__func__</name></expr></argument>, <argument pos:start="131:39" pos:end="131:45"><expr pos:start="131:39" pos:end="131:45"><name pos:start="131:39" pos:end="131:45">address</name></expr></argument>, <argument pos:start="131:48" pos:end="131:52"><expr pos:start="131:48" pos:end="131:52"><name pos:start="131:48" pos:end="131:52">raddr</name></expr></argument>, <argument pos:start="131:55" pos:end="131:63"><expr pos:start="131:55" pos:end="131:63"><name pos:start="131:55" pos:end="131:63"><name pos:start="131:55" pos:end="131:57">ctx</name><operator pos:start="131:58" pos:end="131:59">-&gt;</operator><name pos:start="131:60" pos:end="131:63">prot</name></name></expr></argument>,

                <argument pos:start="133:17" pos:end="133:19"><expr pos:start="133:17" pos:end="133:19"><name pos:start="133:17" pos:end="133:19">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>



    <return pos:start="141:5" pos:end="141:15">return <expr pos:start="141:12" pos:end="141:14"><name pos:start="141:12" pos:end="141:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
