<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11331.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">encode_picture_lossless</name><parameter_list pos:start="1:35" pos:end="1:103">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:76"><decl pos:start="1:59" pos:end="1:76"><type pos:start="1:59" pos:end="1:76"><name pos:start="1:59" pos:end="1:66">unsigned</name> <name pos:start="1:68" pos:end="1:71">char</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:76">buf</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:90"><decl pos:start="1:79" pos:end="1:90"><type pos:start="1:79" pos:end="1:90"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:90">buf_size</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:102"><decl pos:start="1:93" pos:end="1:102"><type pos:start="1:93" pos:end="1:102"><name pos:start="1:93" pos:end="1:96">void</name> <modifier pos:start="1:98" pos:end="1:98">*</modifier></type><name pos:start="1:99" pos:end="1:102">data</name></decl></parameter>)</parameter_list><block pos:start="1:104" pos:end="275:1">{<block_content pos:start="3:5" pos:end="271:40">

    <decl_stmt pos:start="3:5" pos:end="3:48"><decl pos:start="3:5" pos:end="3:47"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:47">= <expr pos:start="3:32" pos:end="3:47"><name pos:start="3:32" pos:end="3:47"><name pos:start="3:32" pos:end="3:36">avctx</name><operator pos:start="3:37" pos:end="3:38">-&gt;</operator><name pos:start="3:39" pos:end="3:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:16">MJpegContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier> <specifier pos:start="5:20" pos:end="5:24">const</specifier></type> <name pos:start="5:26" pos:end="5:26">m</name> <init pos:start="5:28" pos:end="5:41">= <expr pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:30">s</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">mjpeg_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">pict</name> <init pos:start="7:19" pos:end="7:24">= <expr pos:start="7:21" pos:end="7:24"><name pos:start="7:21" pos:end="7:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:19">width</name><init pos:start="9:20" pos:end="9:29">= <expr pos:start="9:22" pos:end="9:29"><name pos:start="9:22" pos:end="9:29"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:29">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:20">height</name><init pos:start="11:21" pos:end="11:31">= <expr pos:start="11:23" pos:end="11:31"><name pos:start="11:23" pos:end="11:31"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:31">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:53"><decl pos:start="13:5" pos:end="13:52"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier> <specifier pos:start="13:15" pos:end="13:19">const</specifier></type> <name pos:start="13:21" pos:end="13:21">p</name><init pos:start="13:22" pos:end="13:52">= <expr pos:start="13:24" pos:end="13:52"><operator pos:start="13:24" pos:end="13:24">(</operator><name pos:start="13:25" pos:end="13:31">AVFrame</name><operator pos:start="13:32" pos:end="13:32">*</operator><operator pos:start="13:33" pos:end="13:33">)</operator><operator pos:start="13:34" pos:end="13:34">&amp;</operator><name pos:start="13:35" pos:end="13:52"><name pos:start="13:35" pos:end="13:35">s</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:52">current_picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:51"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:23">predictor</name><init pos:start="15:24" pos:end="15:51">= <expr pos:start="15:26" pos:end="15:51"><name pos:start="15:26" pos:end="15:49"><name pos:start="15:26" pos:end="15:30">avctx</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:49">prediction_method</name></name><operator pos:start="15:50" pos:end="15:50">+</operator><literal type="number" pos:start="15:51" pos:end="15:51">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><call pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:17">init_put_bits</name><argument_list pos:start="19:18" pos:end="19:40">(<argument pos:start="19:19" pos:end="19:24"><expr pos:start="19:19" pos:end="19:24"><operator pos:start="19:19" pos:end="19:19">&amp;</operator><name pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:24">pb</name></name></expr></argument>, <argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">buf</name></expr></argument>, <argument pos:start="19:32" pos:end="19:39"><expr pos:start="19:32" pos:end="19:39"><name pos:start="19:32" pos:end="19:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><operator pos:start="23:5" pos:end="23:5">*</operator><name pos:start="23:6" pos:end="23:6">p</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <operator pos:start="23:10" pos:end="23:10">*</operator><name pos:start="23:11" pos:end="23:14">pict</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">p</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:16">pict_type</name></name><operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:27">FF_I_TYPE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:20"><expr pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">p</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:16">key_frame</name></name><operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">1</literal></expr>;</expr_stmt>

    

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><call pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:24">mjpeg_picture_header</name><argument_list pos:start="31:25" pos:end="31:27">(<argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:18">header_bits</name></name><operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:42"><name pos:start="35:21" pos:end="35:34">put_bits_count</name><argument_list pos:start="35:35" pos:end="35:42">(<argument pos:start="35:36" pos:end="35:41"><expr pos:start="35:36" pos:end="35:41"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:41"><name pos:start="35:37" pos:end="35:37">s</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:41">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="255:5"><if pos:start="39:5" pos:end="121:5">if<condition pos:start="39:7" pos:end="39:40">(<expr pos:start="39:8" pos:end="39:39"><name pos:start="39:8" pos:end="39:21"><name pos:start="39:8" pos:end="39:12">avctx</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:21">pix_fmt</name></name> <operator pos:start="39:23" pos:end="39:24">==</operator> <name pos:start="39:26" pos:end="39:39">PIX_FMT_RGBA32</name></expr>)</condition><block pos:start="39:41" pos:end="121:5">{<block_content pos:start="41:9" pos:end="119:9">

        <decl_stmt pos:start="41:9" pos:end="41:20"><decl pos:start="41:9" pos:end="41:13"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:13">x</name></decl>, <decl pos:start="41:16" pos:end="41:16"><type ref="prev" pos:start="41:9" pos:end="41:11"/><name pos:start="41:16" pos:end="41:16">y</name></decl>, <decl pos:start="41:19" pos:end="41:19"><type ref="prev" pos:start="41:9" pos:end="41:11"/><name pos:start="41:19" pos:end="41:19">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:43"><decl pos:start="43:9" pos:end="43:42"><type pos:start="43:9" pos:end="43:17"><specifier pos:start="43:9" pos:end="43:13">const</specifier> <name pos:start="43:15" pos:end="43:17">int</name></type> <name pos:start="43:19" pos:end="43:26">linesize</name><init pos:start="43:27" pos:end="43:42">= <expr pos:start="43:29" pos:end="43:42"><name pos:start="43:29" pos:end="43:42"><name pos:start="43:29" pos:end="43:29">p</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:39">linesize</name><index pos:start="43:40" pos:end="43:42">[<expr pos:start="43:41" pos:end="43:41"><literal type="number" pos:start="43:41" pos:end="43:41">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:33"><decl pos:start="45:9" pos:end="45:32"><type pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16">uint16_t</name></type> <name pos:start="45:18" pos:end="45:32"><name pos:start="45:18" pos:end="45:23">buffer</name><index pos:start="45:24" pos:end="45:29">[<expr pos:start="45:25" pos:end="45:28"><literal type="number" pos:start="45:25" pos:end="45:28">2048</literal></expr>]</index><index pos:start="45:30" pos:end="45:32">[<expr pos:start="45:31" pos:end="45:31"><literal type="number" pos:start="45:31" pos:end="45:31">4</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:40"><decl pos:start="47:9" pos:end="47:19"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:16">left</name><index pos:start="47:17" pos:end="47:19">[<expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">3</literal></expr>]</index></name></decl>, <decl pos:start="47:22" pos:end="47:27"><type ref="prev" pos:start="47:9" pos:end="47:11"/><name pos:start="47:22" pos:end="47:27"><name pos:start="47:22" pos:end="47:24">top</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">3</literal></expr>]</index></name></decl>, <decl pos:start="47:30" pos:end="47:39"><type ref="prev" pos:start="47:9" pos:end="47:11"/><name pos:start="47:30" pos:end="47:39"><name pos:start="47:30" pos:end="47:36">topleft</name><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">3</literal></expr>]</index></name></decl>;</decl_stmt>



        <for pos:start="51:9" pos:end="55:9">for<control pos:start="51:12" pos:end="51:26">(<init pos:start="51:13" pos:end="51:16"><expr pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:13">i</name><operator pos:start="51:14" pos:end="51:14">=</operator><literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>;</init> <condition pos:start="51:18" pos:end="51:21"><expr pos:start="51:18" pos:end="51:20"><name pos:start="51:18" pos:end="51:18">i</name><operator pos:start="51:19" pos:end="51:19">&lt;</operator><literal type="number" pos:start="51:20" pos:end="51:20">3</literal></expr>;</condition> <incr pos:start="51:23" pos:end="51:25"><expr pos:start="51:23" pos:end="51:25"><name pos:start="51:23" pos:end="51:23">i</name><operator pos:start="51:24" pos:end="51:25">++</operator></expr></incr>)</control><block pos:start="51:27" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:39">

            <expr_stmt pos:start="53:13" pos:end="53:39"><expr pos:start="53:13" pos:end="53:38"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:18">buffer</name><index pos:start="53:19" pos:end="53:21">[<expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>]</index><index pos:start="53:22" pos:end="53:24">[<expr pos:start="53:23" pos:end="53:23"><name pos:start="53:23" pos:end="53:23">i</name></expr>]</index></name><operator pos:start="53:25" pos:end="53:25">=</operator> <literal type="number" pos:start="53:27" pos:end="53:27">1</literal> <operator pos:start="53:29" pos:end="53:30">&lt;&lt;</operator> <operator pos:start="53:32" pos:end="53:32">(</operator><literal type="number" pos:start="53:33" pos:end="53:35">9</literal> <operator pos:start="53:35" pos:end="53:35">-</operator> <literal type="number" pos:start="53:37" pos:end="53:37">1</literal><operator pos:start="53:38" pos:end="53:38">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="59:9" pos:end="119:9">for<control pos:start="59:12" pos:end="59:35">(<init pos:start="59:13" pos:end="59:18"><expr pos:start="59:13" pos:end="59:17"><name pos:start="59:13" pos:end="59:13">y</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>;</init> <condition pos:start="59:20" pos:end="59:30"><expr pos:start="59:20" pos:end="59:29"><name pos:start="59:20" pos:end="59:20">y</name> <operator pos:start="59:22" pos:end="59:22">&lt;</operator> <name pos:start="59:24" pos:end="59:29">height</name></expr>;</condition> <incr pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><name pos:start="59:32" pos:end="59:32">y</name><operator pos:start="59:33" pos:end="59:34">++</operator></expr></incr>)</control> <block pos:start="59:37" pos:end="119:9">{<block_content pos:start="61:13" pos:end="117:13">

            <decl_stmt pos:start="61:13" pos:end="61:60"><decl pos:start="61:13" pos:end="61:59"><type pos:start="61:13" pos:end="61:21"><specifier pos:start="61:13" pos:end="61:17">const</specifier> <name pos:start="61:19" pos:end="61:21">int</name></type> <name pos:start="61:23" pos:end="61:40">modified_predictor</name><init pos:start="61:41" pos:end="61:59">= <expr pos:start="61:43" pos:end="61:59"><ternary pos:start="61:43" pos:end="61:59"><condition pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:43"><name pos:start="61:43" pos:end="61:43">y</name></expr> ?</condition><then pos:start="61:47" pos:end="61:55"> <expr pos:start="61:47" pos:end="61:55"><name pos:start="61:47" pos:end="61:55">predictor</name></expr> </then><else pos:start="61:57" pos:end="61:59">: <expr pos:start="61:59" pos:end="61:59"><literal type="number" pos:start="61:59" pos:end="61:59">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="63:55"><decl pos:start="63:13" pos:end="63:54"><type pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:19">uint8_t</name> <modifier pos:start="63:21" pos:end="63:21">*</modifier></type><name pos:start="63:22" pos:end="63:24">ptr</name> <init pos:start="63:26" pos:end="63:54">= <expr pos:start="63:28" pos:end="63:54"><name pos:start="63:28" pos:end="63:37"><name pos:start="63:28" pos:end="63:28">p</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:34">data</name><index pos:start="63:35" pos:end="63:37">[<expr pos:start="63:36" pos:end="63:36"><literal type="number" pos:start="63:36" pos:end="63:36">0</literal></expr>]</index></name> <operator pos:start="63:39" pos:end="63:39">+</operator> <operator pos:start="63:41" pos:end="63:41">(</operator><name pos:start="63:42" pos:end="63:49">linesize</name> <operator pos:start="63:51" pos:end="63:51">*</operator> <name pos:start="63:53" pos:end="63:53">y</name><operator pos:start="63:54" pos:end="63:54">)</operator></expr></init></decl>;</decl_stmt>



            <for pos:start="67:13" pos:end="71:13">for<control pos:start="67:16" pos:end="67:30">(<init pos:start="67:17" pos:end="67:20"><expr pos:start="67:17" pos:end="67:19"><name pos:start="67:17" pos:end="67:17">i</name><operator pos:start="67:18" pos:end="67:18">=</operator><literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>;</init> <condition pos:start="67:22" pos:end="67:25"><expr pos:start="67:22" pos:end="67:24"><name pos:start="67:22" pos:end="67:22">i</name><operator pos:start="67:23" pos:end="67:23">&lt;</operator><literal type="number" pos:start="67:24" pos:end="67:24">3</literal></expr>;</condition> <incr pos:start="67:27" pos:end="67:29"><expr pos:start="67:27" pos:end="67:29"><name pos:start="67:27" pos:end="67:27">i</name><operator pos:start="67:28" pos:end="67:29">++</operator></expr></incr>)</control><block pos:start="67:31" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:58">

                <expr_stmt pos:start="69:17" pos:end="69:58"><expr pos:start="69:17" pos:end="69:57"><name pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:19">top</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><name pos:start="69:21" pos:end="69:21">i</name></expr>]</index></name><operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:31"><name pos:start="69:25" pos:end="69:28">left</name><index pos:start="69:29" pos:end="69:31">[<expr pos:start="69:30" pos:end="69:30"><name pos:start="69:30" pos:end="69:30">i</name></expr>]</index></name><operator pos:start="69:32" pos:end="69:32">=</operator> <name pos:start="69:34" pos:end="69:43"><name pos:start="69:34" pos:end="69:40">topleft</name><index pos:start="69:41" pos:end="69:43">[<expr pos:start="69:42" pos:end="69:42"><name pos:start="69:42" pos:end="69:42">i</name></expr>]</index></name><operator pos:start="69:44" pos:end="69:44">=</operator> <name pos:start="69:46" pos:end="69:57"><name pos:start="69:46" pos:end="69:51">buffer</name><index pos:start="69:52" pos:end="69:54">[<expr pos:start="69:53" pos:end="69:53"><literal type="number" pos:start="69:53" pos:end="69:53">0</literal></expr>]</index><index pos:start="69:55" pos:end="69:57">[<expr pos:start="69:56" pos:end="69:56"><name pos:start="69:56" pos:end="69:56">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="73:13" pos:end="117:13">for<control pos:start="73:16" pos:end="73:38">(<init pos:start="73:17" pos:end="73:22"><expr pos:start="73:17" pos:end="73:21"><name pos:start="73:17" pos:end="73:17">x</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <literal type="number" pos:start="73:21" pos:end="73:21">0</literal></expr>;</init> <condition pos:start="73:24" pos:end="73:33"><expr pos:start="73:24" pos:end="73:32"><name pos:start="73:24" pos:end="73:24">x</name> <operator pos:start="73:26" pos:end="73:26">&lt;</operator> <name pos:start="73:28" pos:end="73:32">width</name></expr>;</condition> <incr pos:start="73:35" pos:end="73:37"><expr pos:start="73:35" pos:end="73:37"><name pos:start="73:35" pos:end="73:35">x</name><operator pos:start="73:36" pos:end="73:37">++</operator></expr></incr>)</control> <block pos:start="73:40" pos:end="117:13">{<block_content pos:start="75:17" pos:end="115:17">

                <expr_stmt pos:start="75:17" pos:end="75:63"><expr pos:start="75:17" pos:end="75:62"><name pos:start="75:17" pos:end="75:28"><name pos:start="75:17" pos:end="75:22">buffer</name><index pos:start="75:23" pos:end="75:25">[<expr pos:start="75:24" pos:end="75:24"><name pos:start="75:24" pos:end="75:24">x</name></expr>]</index><index pos:start="75:26" pos:end="75:28">[<expr pos:start="75:27" pos:end="75:27"><literal type="number" pos:start="75:27" pos:end="75:27">1</literal></expr>]</index></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <name pos:start="75:32" pos:end="75:41"><name pos:start="75:32" pos:end="75:34">ptr</name><index pos:start="75:35" pos:end="75:41">[<expr pos:start="75:36" pos:end="75:40"><literal type="number" pos:start="75:36" pos:end="75:36">4</literal><operator pos:start="75:37" pos:end="75:37">*</operator><name pos:start="75:38" pos:end="75:38">x</name><operator pos:start="75:39" pos:end="75:39">+</operator><literal type="number" pos:start="75:40" pos:end="75:40">0</literal></expr>]</index></name> <operator pos:start="75:43" pos:end="75:43">-</operator> <name pos:start="75:45" pos:end="75:54"><name pos:start="75:45" pos:end="75:47">ptr</name><index pos:start="75:48" pos:end="75:54">[<expr pos:start="75:49" pos:end="75:53"><literal type="number" pos:start="75:49" pos:end="75:49">4</literal><operator pos:start="75:50" pos:end="75:50">*</operator><name pos:start="75:51" pos:end="75:51">x</name><operator pos:start="75:52" pos:end="75:52">+</operator><literal type="number" pos:start="75:53" pos:end="75:53">1</literal></expr>]</index></name> <operator pos:start="75:56" pos:end="75:56">+</operator> <literal type="number" pos:start="75:58" pos:end="75:62">0x100</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:63"><expr pos:start="77:17" pos:end="77:62"><name pos:start="77:17" pos:end="77:28"><name pos:start="77:17" pos:end="77:22">buffer</name><index pos:start="77:23" pos:end="77:25">[<expr pos:start="77:24" pos:end="77:24"><name pos:start="77:24" pos:end="77:24">x</name></expr>]</index><index pos:start="77:26" pos:end="77:28">[<expr pos:start="77:27" pos:end="77:27"><literal type="number" pos:start="77:27" pos:end="77:27">2</literal></expr>]</index></name> <operator pos:start="77:30" pos:end="77:30">=</operator> <name pos:start="77:32" pos:end="77:41"><name pos:start="77:32" pos:end="77:34">ptr</name><index pos:start="77:35" pos:end="77:41">[<expr pos:start="77:36" pos:end="77:40"><literal type="number" pos:start="77:36" pos:end="77:36">4</literal><operator pos:start="77:37" pos:end="77:37">*</operator><name pos:start="77:38" pos:end="77:38">x</name><operator pos:start="77:39" pos:end="77:39">+</operator><literal type="number" pos:start="77:40" pos:end="77:40">2</literal></expr>]</index></name> <operator pos:start="77:43" pos:end="77:43">-</operator> <name pos:start="77:45" pos:end="77:54"><name pos:start="77:45" pos:end="77:47">ptr</name><index pos:start="77:48" pos:end="77:54">[<expr pos:start="77:49" pos:end="77:53"><literal type="number" pos:start="77:49" pos:end="77:49">4</literal><operator pos:start="77:50" pos:end="77:50">*</operator><name pos:start="77:51" pos:end="77:51">x</name><operator pos:start="77:52" pos:end="77:52">+</operator><literal type="number" pos:start="77:53" pos:end="77:53">1</literal></expr>]</index></name> <operator pos:start="77:56" pos:end="77:56">+</operator> <literal type="number" pos:start="77:58" pos:end="77:62">0x100</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:75"><expr pos:start="79:17" pos:end="79:74"><name pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:22">buffer</name><index pos:start="79:23" pos:end="79:25">[<expr pos:start="79:24" pos:end="79:24"><name pos:start="79:24" pos:end="79:24">x</name></expr>]</index><index pos:start="79:26" pos:end="79:28">[<expr pos:start="79:27" pos:end="79:27"><literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr>]</index></name> <operator pos:start="79:30" pos:end="79:30">=</operator> <operator pos:start="79:32" pos:end="79:32">(</operator><name pos:start="79:33" pos:end="79:42"><name pos:start="79:33" pos:end="79:35">ptr</name><index pos:start="79:36" pos:end="79:42">[<expr pos:start="79:37" pos:end="79:41"><literal type="number" pos:start="79:37" pos:end="79:37">4</literal><operator pos:start="79:38" pos:end="79:38">*</operator><name pos:start="79:39" pos:end="79:39">x</name><operator pos:start="79:40" pos:end="79:40">+</operator><literal type="number" pos:start="79:41" pos:end="79:41">0</literal></expr>]</index></name> <operator pos:start="79:44" pos:end="79:44">+</operator> <literal type="number" pos:start="79:46" pos:end="79:46">2</literal><operator pos:start="79:47" pos:end="79:47">*</operator><name pos:start="79:48" pos:end="79:57"><name pos:start="79:48" pos:end="79:50">ptr</name><index pos:start="79:51" pos:end="79:57">[<expr pos:start="79:52" pos:end="79:56"><literal type="number" pos:start="79:52" pos:end="79:52">4</literal><operator pos:start="79:53" pos:end="79:53">*</operator><name pos:start="79:54" pos:end="79:54">x</name><operator pos:start="79:55" pos:end="79:55">+</operator><literal type="number" pos:start="79:56" pos:end="79:56">1</literal></expr>]</index></name> <operator pos:start="79:59" pos:end="79:59">+</operator> <name pos:start="79:61" pos:end="79:70"><name pos:start="79:61" pos:end="79:63">ptr</name><index pos:start="79:64" pos:end="79:70">[<expr pos:start="79:65" pos:end="79:69"><literal type="number" pos:start="79:65" pos:end="79:65">4</literal><operator pos:start="79:66" pos:end="79:66">*</operator><name pos:start="79:67" pos:end="79:67">x</name><operator pos:start="79:68" pos:end="79:68">+</operator><literal type="number" pos:start="79:69" pos:end="79:69">2</literal></expr>]</index></name><operator pos:start="79:71" pos:end="79:71">)</operator><operator pos:start="79:72" pos:end="79:73">&gt;&gt;</operator><literal type="number" pos:start="79:74" pos:end="79:74">2</literal></expr>;</expr_stmt>



                <for pos:start="83:17" pos:end="115:17">for<control pos:start="83:20" pos:end="83:32">(<init pos:start="83:21" pos:end="83:24"><expr pos:start="83:21" pos:end="83:23"><name pos:start="83:21" pos:end="83:21">i</name><operator pos:start="83:22" pos:end="83:22">=</operator><literal type="number" pos:start="83:23" pos:end="83:23">0</literal></expr>;</init><condition pos:start="83:25" pos:end="83:28"><expr pos:start="83:25" pos:end="83:27"><name pos:start="83:25" pos:end="83:25">i</name><operator pos:start="83:26" pos:end="83:26">&lt;</operator><literal type="number" pos:start="83:27" pos:end="83:27">3</literal></expr>;</condition><incr pos:start="83:29" pos:end="83:31"><expr pos:start="83:29" pos:end="83:31"><name pos:start="83:29" pos:end="83:29">i</name><operator pos:start="83:30" pos:end="83:31">++</operator></expr></incr>)</control> <block pos:start="83:34" pos:end="115:17">{<block_content pos:start="85:21" pos:end="113:107">

                    <decl_stmt pos:start="85:21" pos:end="85:35"><decl pos:start="85:21" pos:end="85:28"><type pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">int</name></type> <name pos:start="85:25" pos:end="85:28">pred</name></decl>, <decl pos:start="85:31" pos:end="85:34"><type ref="prev" pos:start="85:21" pos:end="85:23"/><name pos:start="85:31" pos:end="85:34">diff</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="89:21" pos:end="89:83"><expr pos:start="89:21" pos:end="89:82"><call pos:start="89:21" pos:end="89:82"><name pos:start="89:21" pos:end="89:27">PREDICT</name><argument_list pos:start="89:28" pos:end="89:82">(<argument pos:start="89:29" pos:end="89:32"><expr pos:start="89:29" pos:end="89:32"><name pos:start="89:29" pos:end="89:32">pred</name></expr></argument>, <argument pos:start="89:35" pos:end="89:44"><expr pos:start="89:35" pos:end="89:44"><name pos:start="89:35" pos:end="89:44"><name pos:start="89:35" pos:end="89:41">topleft</name><index pos:start="89:42" pos:end="89:44">[<expr pos:start="89:43" pos:end="89:43"><name pos:start="89:43" pos:end="89:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="89:47" pos:end="89:52"><expr pos:start="89:47" pos:end="89:52"><name pos:start="89:47" pos:end="89:52"><name pos:start="89:47" pos:end="89:49">top</name><index pos:start="89:50" pos:end="89:52">[<expr pos:start="89:51" pos:end="89:51"><name pos:start="89:51" pos:end="89:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="89:55" pos:end="89:61"><expr pos:start="89:55" pos:end="89:61"><name pos:start="89:55" pos:end="89:61"><name pos:start="89:55" pos:end="89:58">left</name><index pos:start="89:59" pos:end="89:61">[<expr pos:start="89:60" pos:end="89:60"><name pos:start="89:60" pos:end="89:60">i</name></expr>]</index></name></expr></argument>, <argument pos:start="89:64" pos:end="89:81"><expr pos:start="89:64" pos:end="89:81"><name pos:start="89:64" pos:end="89:81">modified_predictor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        

                    <expr_stmt pos:start="93:21" pos:end="93:39"><expr pos:start="93:21" pos:end="93:38"><name pos:start="93:21" pos:end="93:30"><name pos:start="93:21" pos:end="93:27">topleft</name><index pos:start="93:28" pos:end="93:30">[<expr pos:start="93:29" pos:end="93:29"><name pos:start="93:29" pos:end="93:29">i</name></expr>]</index></name><operator pos:start="93:31" pos:end="93:31">=</operator> <name pos:start="93:33" pos:end="93:38"><name pos:start="93:33" pos:end="93:35">top</name><index pos:start="93:36" pos:end="93:38">[<expr pos:start="93:37" pos:end="93:37"><name pos:start="93:37" pos:end="93:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:43"><expr pos:start="95:21" pos:end="95:42"><name pos:start="95:21" pos:end="95:26"><name pos:start="95:21" pos:end="95:23">top</name><index pos:start="95:24" pos:end="95:26">[<expr pos:start="95:25" pos:end="95:25"><name pos:start="95:25" pos:end="95:25">i</name></expr>]</index></name><operator pos:start="95:27" pos:end="95:27">=</operator> <name pos:start="95:29" pos:end="95:42"><name pos:start="95:29" pos:end="95:34">buffer</name><index pos:start="95:35" pos:end="95:39">[<expr pos:start="95:36" pos:end="95:38"><name pos:start="95:36" pos:end="95:36">x</name><operator pos:start="95:37" pos:end="95:37">+</operator><literal type="number" pos:start="95:38" pos:end="95:38">1</literal></expr>]</index><index pos:start="95:40" pos:end="95:42">[<expr pos:start="95:41" pos:end="95:41"><name pos:start="95:41" pos:end="95:41">i</name></expr>]</index></name></expr>;</expr_stmt>

                    

                    <expr_stmt pos:start="99:21" pos:end="99:42"><expr pos:start="99:21" pos:end="99:41"><name pos:start="99:21" pos:end="99:27"><name pos:start="99:21" pos:end="99:24">left</name><index pos:start="99:25" pos:end="99:27">[<expr pos:start="99:26" pos:end="99:26"><name pos:start="99:26" pos:end="99:26">i</name></expr>]</index></name><operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:41"><name pos:start="99:30" pos:end="99:35">buffer</name><index pos:start="99:36" pos:end="99:38">[<expr pos:start="99:37" pos:end="99:37"><name pos:start="99:37" pos:end="99:37">x</name></expr>]</index><index pos:start="99:39" pos:end="99:41">[<expr pos:start="99:40" pos:end="99:40"><name pos:start="99:40" pos:end="99:40">i</name></expr>]</index></name></expr>;</expr_stmt>



                    <expr_stmt pos:start="103:21" pos:end="103:67"><expr pos:start="103:21" pos:end="103:66"><name pos:start="103:21" pos:end="103:24">diff</name><operator pos:start="103:25" pos:end="103:25">=</operator> <operator pos:start="103:27" pos:end="103:27">(</operator><operator pos:start="103:28" pos:end="103:28">(</operator><name pos:start="103:29" pos:end="103:35"><name pos:start="103:29" pos:end="103:32">left</name><index pos:start="103:33" pos:end="103:35">[<expr pos:start="103:34" pos:end="103:34"><name pos:start="103:34" pos:end="103:34">i</name></expr>]</index></name> <operator pos:start="103:37" pos:end="103:37">-</operator> <name pos:start="103:39" pos:end="103:42">pred</name> <operator pos:start="103:44" pos:end="103:44">+</operator> <literal type="number" pos:start="103:46" pos:end="103:50">0x100</literal><operator pos:start="103:51" pos:end="103:51">)</operator><operator pos:start="103:52" pos:end="103:52">&amp;</operator><literal type="number" pos:start="103:53" pos:end="103:57">0x1FF</literal><operator pos:start="103:58" pos:end="103:58">)</operator> <operator pos:start="103:60" pos:end="103:60">-</operator> <literal type="number" pos:start="103:62" pos:end="103:66">0x100</literal></expr>;</expr_stmt>

                    

                    <if_stmt pos:start="107:21" pos:end="113:107"><if pos:start="107:21" pos:end="109:103">if<condition pos:start="107:23" pos:end="107:28">(<expr pos:start="107:24" pos:end="107:27"><name pos:start="107:24" pos:end="107:24">i</name><operator pos:start="107:25" pos:end="107:26">==</operator><literal type="number" pos:start="107:27" pos:end="107:27">0</literal></expr>)</condition><block type="pseudo" pos:start="109:25" pos:end="109:103"><block_content pos:start="109:25" pos:end="109:103">

                        <expr_stmt pos:start="109:25" pos:end="109:103"><expr pos:start="109:25" pos:end="109:102"><call pos:start="109:25" pos:end="109:102"><name pos:start="109:25" pos:end="109:39">mjpeg_encode_dc</name><argument_list pos:start="109:40" pos:end="109:102">(<argument pos:start="109:41" pos:end="109:41"><expr pos:start="109:41" pos:end="109:41"><name pos:start="109:41" pos:end="109:41">s</name></expr></argument>, <argument pos:start="109:44" pos:end="109:47"><expr pos:start="109:44" pos:end="109:47"><name pos:start="109:44" pos:end="109:47">diff</name></expr></argument>, <argument pos:start="109:50" pos:end="109:74"><expr pos:start="109:50" pos:end="109:74"><name pos:start="109:50" pos:end="109:74"><name pos:start="109:50" pos:end="109:50">m</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:74">huff_size_dc_luminance</name></name></expr></argument>, <argument pos:start="109:77" pos:end="109:101"><expr pos:start="109:77" pos:end="109:101"><name pos:start="109:77" pos:end="109:101"><name pos:start="109:77" pos:end="109:77">m</name><operator pos:start="109:78" pos:end="109:79">-&gt;</operator><name pos:start="109:80" pos:end="109:101">huff_code_dc_luminance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="109:105" pos:end="109:116">//FIXME ugly</comment>

                    <else pos:start="111:21" pos:end="113:107">else<block type="pseudo" pos:start="113:25" pos:end="113:107"><block_content pos:start="113:25" pos:end="113:107">

                        <expr_stmt pos:start="113:25" pos:end="113:107"><expr pos:start="113:25" pos:end="113:106"><call pos:start="113:25" pos:end="113:106"><name pos:start="113:25" pos:end="113:39">mjpeg_encode_dc</name><argument_list pos:start="113:40" pos:end="113:106">(<argument pos:start="113:41" pos:end="113:41"><expr pos:start="113:41" pos:end="113:41"><name pos:start="113:41" pos:end="113:41">s</name></expr></argument>, <argument pos:start="113:44" pos:end="113:47"><expr pos:start="113:44" pos:end="113:47"><name pos:start="113:44" pos:end="113:47">diff</name></expr></argument>, <argument pos:start="113:50" pos:end="113:76"><expr pos:start="113:50" pos:end="113:76"><name pos:start="113:50" pos:end="113:76"><name pos:start="113:50" pos:end="113:50">m</name><operator pos:start="113:51" pos:end="113:52">-&gt;</operator><name pos:start="113:53" pos:end="113:76">huff_size_dc_chrominance</name></name></expr></argument>, <argument pos:start="113:79" pos:end="113:105"><expr pos:start="113:79" pos:end="113:105"><name pos:start="113:79" pos:end="113:105"><name pos:start="113:79" pos:end="113:79">m</name><operator pos:start="113:80" pos:end="113:81">-&gt;</operator><name pos:start="113:82" pos:end="113:105">huff_code_dc_chrominance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if><else pos:start="121:6" pos:end="255:5">else<block pos:start="121:10" pos:end="255:5">{<block_content pos:start="123:9" pos:end="253:9">

        <decl_stmt pos:start="123:9" pos:end="123:26"><decl pos:start="123:9" pos:end="123:16"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:16">mb_x</name></decl>, <decl pos:start="123:19" pos:end="123:22"><type ref="prev" pos:start="123:9" pos:end="123:11"/><name pos:start="123:19" pos:end="123:22">mb_y</name></decl>, <decl pos:start="123:25" pos:end="123:25"><type ref="prev" pos:start="123:9" pos:end="123:11"/><name pos:start="123:25" pos:end="123:25">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="125:9" pos:end="125:87"><decl pos:start="125:9" pos:end="125:86"><type pos:start="125:9" pos:end="125:17"><specifier pos:start="125:9" pos:end="125:13">const</specifier> <name pos:start="125:15" pos:end="125:17">int</name></type> <name pos:start="125:19" pos:end="125:26">mb_width</name>  <init pos:start="125:29" pos:end="125:86">= <expr pos:start="125:31" pos:end="125:86"><operator pos:start="125:31" pos:end="125:31">(</operator><name pos:start="125:32" pos:end="125:36">width</name>  <operator pos:start="125:39" pos:end="125:39">+</operator> <name pos:start="125:41" pos:end="125:59"><name pos:start="125:41" pos:end="125:41">s</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:56">mjpeg_hsample</name><index pos:start="125:57" pos:end="125:59">[<expr pos:start="125:58" pos:end="125:58"><literal type="number" pos:start="125:58" pos:end="125:58">0</literal></expr>]</index></name> <operator pos:start="125:61" pos:end="125:61">-</operator> <literal type="number" pos:start="125:63" pos:end="125:63">1</literal><operator pos:start="125:64" pos:end="125:64">)</operator> <operator pos:start="125:66" pos:end="125:66">/</operator> <name pos:start="125:68" pos:end="125:86"><name pos:start="125:68" pos:end="125:68">s</name><operator pos:start="125:69" pos:end="125:70">-&gt;</operator><name pos:start="125:71" pos:end="125:83">mjpeg_hsample</name><index pos:start="125:84" pos:end="125:86">[<expr pos:start="125:85" pos:end="125:85"><literal type="number" pos:start="125:85" pos:end="125:85">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="127:9" pos:end="127:87"><decl pos:start="127:9" pos:end="127:86"><type pos:start="127:9" pos:end="127:17"><specifier pos:start="127:9" pos:end="127:13">const</specifier> <name pos:start="127:15" pos:end="127:17">int</name></type> <name pos:start="127:19" pos:end="127:27">mb_height</name> <init pos:start="127:29" pos:end="127:86">= <expr pos:start="127:31" pos:end="127:86"><operator pos:start="127:31" pos:end="127:31">(</operator><name pos:start="127:32" pos:end="127:37">height</name> <operator pos:start="127:39" pos:end="127:39">+</operator> <name pos:start="127:41" pos:end="127:59"><name pos:start="127:41" pos:end="127:41">s</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:56">mjpeg_vsample</name><index pos:start="127:57" pos:end="127:59">[<expr pos:start="127:58" pos:end="127:58"><literal type="number" pos:start="127:58" pos:end="127:58">0</literal></expr>]</index></name> <operator pos:start="127:61" pos:end="127:61">-</operator> <literal type="number" pos:start="127:63" pos:end="127:63">1</literal><operator pos:start="127:64" pos:end="127:64">)</operator> <operator pos:start="127:66" pos:end="127:66">/</operator> <name pos:start="127:68" pos:end="127:86"><name pos:start="127:68" pos:end="127:68">s</name><operator pos:start="127:69" pos:end="127:70">-&gt;</operator><name pos:start="127:71" pos:end="127:83">mjpeg_vsample</name><index pos:start="127:84" pos:end="127:86">[<expr pos:start="127:85" pos:end="127:85"><literal type="number" pos:start="127:85" pos:end="127:85">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        

        <for pos:start="131:9" pos:end="253:9">for<control pos:start="131:12" pos:end="131:47">(<init pos:start="131:13" pos:end="131:21"><expr pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:16">mb_y</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <literal type="number" pos:start="131:20" pos:end="131:20">0</literal></expr>;</init> <condition pos:start="131:23" pos:end="131:39"><expr pos:start="131:23" pos:end="131:38"><name pos:start="131:23" pos:end="131:26">mb_y</name> <operator pos:start="131:28" pos:end="131:28">&lt;</operator> <name pos:start="131:30" pos:end="131:38">mb_height</name></expr>;</condition> <incr pos:start="131:41" pos:end="131:46"><expr pos:start="131:41" pos:end="131:46"><name pos:start="131:41" pos:end="131:44">mb_y</name><operator pos:start="131:45" pos:end="131:46">++</operator></expr></incr>)</control> <block pos:start="131:49" pos:end="253:9">{<block_content pos:start="133:13" pos:end="251:13">

            <for pos:start="133:13" pos:end="251:13">for<control pos:start="133:16" pos:end="133:50">(<init pos:start="133:17" pos:end="133:25"><expr pos:start="133:17" pos:end="133:24"><name pos:start="133:17" pos:end="133:20">mb_x</name> <operator pos:start="133:22" pos:end="133:22">=</operator> <literal type="number" pos:start="133:24" pos:end="133:24">0</literal></expr>;</init> <condition pos:start="133:27" pos:end="133:42"><expr pos:start="133:27" pos:end="133:41"><name pos:start="133:27" pos:end="133:30">mb_x</name> <operator pos:start="133:32" pos:end="133:32">&lt;</operator> <name pos:start="133:34" pos:end="133:41">mb_width</name></expr>;</condition> <incr pos:start="133:44" pos:end="133:49"><expr pos:start="133:44" pos:end="133:49"><name pos:start="133:44" pos:end="133:47">mb_x</name><operator pos:start="133:48" pos:end="133:49">++</operator></expr></incr>)</control> <block pos:start="133:52" pos:end="251:13">{<block_content pos:start="135:17" pos:end="249:17">

                <if_stmt pos:start="135:17" pos:end="249:17"><if pos:start="135:17" pos:end="203:17">if<condition pos:start="135:19" pos:end="135:38">(<expr pos:start="135:20" pos:end="135:37"><name pos:start="135:20" pos:end="135:23">mb_x</name><operator pos:start="135:24" pos:end="135:25">==</operator><literal type="number" pos:start="135:26" pos:end="135:26">0</literal> <operator pos:start="135:28" pos:end="135:29">||</operator> <name pos:start="135:31" pos:end="135:34">mb_y</name><operator pos:start="135:35" pos:end="135:36">==</operator><literal type="number" pos:start="135:37" pos:end="135:37">0</literal></expr>)</condition><block pos:start="135:39" pos:end="203:17">{<block_content pos:start="137:21" pos:end="201:21">

                    <for pos:start="137:21" pos:end="201:21">for<control pos:start="137:24" pos:end="137:36">(<init pos:start="137:25" pos:end="137:28"><expr pos:start="137:25" pos:end="137:27"><name pos:start="137:25" pos:end="137:25">i</name><operator pos:start="137:26" pos:end="137:26">=</operator><literal type="number" pos:start="137:27" pos:end="137:27">0</literal></expr>;</init><condition pos:start="137:29" pos:end="137:32"><expr pos:start="137:29" pos:end="137:31"><name pos:start="137:29" pos:end="137:29">i</name><operator pos:start="137:30" pos:end="137:30">&lt;</operator><literal type="number" pos:start="137:31" pos:end="137:31">3</literal></expr>;</condition><incr pos:start="137:33" pos:end="137:35"><expr pos:start="137:33" pos:end="137:35"><name pos:start="137:33" pos:end="137:33">i</name><operator pos:start="137:34" pos:end="137:35">++</operator></expr></incr>)</control> <block pos:start="137:38" pos:end="201:21">{<block_content pos:start="139:25" pos:end="199:25">

                        <decl_stmt pos:start="139:25" pos:end="139:37"><decl pos:start="139:25" pos:end="139:36"><type pos:start="139:25" pos:end="139:33"><name pos:start="139:25" pos:end="139:31">uint8_t</name> <modifier pos:start="139:33" pos:end="139:33">*</modifier></type><name pos:start="139:34" pos:end="139:36">ptr</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="141:25" pos:end="141:49"><decl pos:start="141:25" pos:end="141:29"><type pos:start="141:25" pos:end="141:27"><name pos:start="141:25" pos:end="141:27">int</name></type> <name pos:start="141:29" pos:end="141:29">x</name></decl>, <decl pos:start="141:32" pos:end="141:32"><type ref="prev" pos:start="141:25" pos:end="141:27"/><name pos:start="141:32" pos:end="141:32">y</name></decl>, <decl pos:start="141:35" pos:end="141:35"><type ref="prev" pos:start="141:25" pos:end="141:27"/><name pos:start="141:35" pos:end="141:35">h</name></decl>, <decl pos:start="141:38" pos:end="141:38"><type ref="prev" pos:start="141:25" pos:end="141:27"/><name pos:start="141:38" pos:end="141:38">v</name></decl>, <decl pos:start="141:41" pos:end="141:48"><type ref="prev" pos:start="141:25" pos:end="141:27"/><name pos:start="141:41" pos:end="141:48">linesize</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="143:25" pos:end="143:48"><expr pos:start="143:25" pos:end="143:47"><name pos:start="143:25" pos:end="143:25">h</name> <operator pos:start="143:27" pos:end="143:27">=</operator> <name pos:start="143:29" pos:end="143:47"><name pos:start="143:29" pos:end="143:29">s</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:44">mjpeg_hsample</name><index pos:start="143:45" pos:end="143:47">[<expr pos:start="143:46" pos:end="143:46"><name pos:start="143:46" pos:end="143:46">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="145:25" pos:end="145:48"><expr pos:start="145:25" pos:end="145:47"><name pos:start="145:25" pos:end="145:25">v</name> <operator pos:start="145:27" pos:end="145:27">=</operator> <name pos:start="145:29" pos:end="145:47"><name pos:start="145:29" pos:end="145:29">s</name><operator pos:start="145:30" pos:end="145:31">-&gt;</operator><name pos:start="145:32" pos:end="145:44">mjpeg_vsample</name><index pos:start="145:45" pos:end="145:47">[<expr pos:start="145:46" pos:end="145:46"><name pos:start="145:46" pos:end="145:46">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="147:25" pos:end="147:49"><expr pos:start="147:25" pos:end="147:48"><name pos:start="147:25" pos:end="147:32">linesize</name><operator pos:start="147:33" pos:end="147:33">=</operator> <name pos:start="147:35" pos:end="147:48"><name pos:start="147:35" pos:end="147:35">p</name><operator pos:start="147:36" pos:end="147:37">-&gt;</operator><name pos:start="147:38" pos:end="147:45">linesize</name><index pos:start="147:46" pos:end="147:48">[<expr pos:start="147:47" pos:end="147:47"><name pos:start="147:47" pos:end="147:47">i</name></expr>]</index></name></expr>;</expr_stmt>



                        <for pos:start="151:25" pos:end="199:25">for<control pos:start="151:28" pos:end="151:42">(<init pos:start="151:29" pos:end="151:32"><expr pos:start="151:29" pos:end="151:31"><name pos:start="151:29" pos:end="151:29">y</name><operator pos:start="151:30" pos:end="151:30">=</operator><literal type="number" pos:start="151:31" pos:end="151:31">0</literal></expr>;</init> <condition pos:start="151:34" pos:end="151:37"><expr pos:start="151:34" pos:end="151:36"><name pos:start="151:34" pos:end="151:34">y</name><operator pos:start="151:35" pos:end="151:35">&lt;</operator><name pos:start="151:36" pos:end="151:36">v</name></expr>;</condition> <incr pos:start="151:39" pos:end="151:41"><expr pos:start="151:39" pos:end="151:41"><name pos:start="151:39" pos:end="151:39">y</name><operator pos:start="151:40" pos:end="151:41">++</operator></expr></incr>)</control><block pos:start="151:43" pos:end="199:25">{<block_content pos:start="153:29" pos:end="197:29">

                            <for pos:start="153:29" pos:end="197:29">for<control pos:start="153:32" pos:end="153:46">(<init pos:start="153:33" pos:end="153:36"><expr pos:start="153:33" pos:end="153:35"><name pos:start="153:33" pos:end="153:33">x</name><operator pos:start="153:34" pos:end="153:34">=</operator><literal type="number" pos:start="153:35" pos:end="153:35">0</literal></expr>;</init> <condition pos:start="153:38" pos:end="153:41"><expr pos:start="153:38" pos:end="153:40"><name pos:start="153:38" pos:end="153:38">x</name><operator pos:start="153:39" pos:end="153:39">&lt;</operator><name pos:start="153:40" pos:end="153:40">h</name></expr>;</condition> <incr pos:start="153:43" pos:end="153:45"><expr pos:start="153:43" pos:end="153:45"><name pos:start="153:43" pos:end="153:43">x</name><operator pos:start="153:44" pos:end="153:45">++</operator></expr></incr>)</control><block pos:start="153:47" pos:end="197:29">{<block_content pos:start="155:33" pos:end="195:136">

                                <decl_stmt pos:start="155:33" pos:end="155:41"><decl pos:start="155:33" pos:end="155:40"><type pos:start="155:33" pos:end="155:35"><name pos:start="155:33" pos:end="155:35">int</name></type> <name pos:start="155:37" pos:end="155:40">pred</name></decl>;</decl_stmt>



                                <expr_stmt pos:start="159:33" pos:end="159:96"><expr pos:start="159:33" pos:end="159:95"><name pos:start="159:33" pos:end="159:35">ptr</name> <operator pos:start="159:37" pos:end="159:37">=</operator> <name pos:start="159:39" pos:end="159:48"><name pos:start="159:39" pos:end="159:39">p</name><operator pos:start="159:40" pos:end="159:41">-&gt;</operator><name pos:start="159:42" pos:end="159:45">data</name><index pos:start="159:46" pos:end="159:48">[<expr pos:start="159:47" pos:end="159:47"><name pos:start="159:47" pos:end="159:47">i</name></expr>]</index></name> <operator pos:start="159:50" pos:end="159:50">+</operator> <operator pos:start="159:52" pos:end="159:52">(</operator><name pos:start="159:53" pos:end="159:60">linesize</name> <operator pos:start="159:62" pos:end="159:62">*</operator> <operator pos:start="159:64" pos:end="159:64">(</operator><name pos:start="159:65" pos:end="159:65">v</name> <operator pos:start="159:67" pos:end="159:67">*</operator> <name pos:start="159:69" pos:end="159:72">mb_y</name> <operator pos:start="159:74" pos:end="159:74">+</operator> <name pos:start="159:76" pos:end="159:76">y</name><operator pos:start="159:77" pos:end="159:77">)</operator><operator pos:start="159:78" pos:end="159:78">)</operator> <operator pos:start="159:80" pos:end="159:80">+</operator> <operator pos:start="159:82" pos:end="159:82">(</operator><name pos:start="159:83" pos:end="159:83">h</name> <operator pos:start="159:85" pos:end="159:85">*</operator> <name pos:start="159:87" pos:end="159:90">mb_x</name> <operator pos:start="159:92" pos:end="159:92">+</operator> <name pos:start="159:94" pos:end="159:94">x</name><operator pos:start="159:95" pos:end="159:95">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="159:98" pos:end="159:123">//FIXME optimize this crap</comment>

                                <if_stmt pos:start="161:33" pos:end="185:33"><if pos:start="161:33" pos:end="173:33">if<condition pos:start="161:35" pos:end="161:51">(<expr pos:start="161:36" pos:end="161:50"><name pos:start="161:36" pos:end="161:36">y</name><operator pos:start="161:37" pos:end="161:38">==</operator><literal type="number" pos:start="161:39" pos:end="161:39">0</literal> <operator pos:start="161:41" pos:end="161:42">&amp;&amp;</operator> <name pos:start="161:44" pos:end="161:47">mb_y</name><operator pos:start="161:48" pos:end="161:49">==</operator><literal type="number" pos:start="161:50" pos:end="161:50">0</literal></expr>)</condition><block pos:start="161:52" pos:end="173:33">{<block_content pos:start="163:37" pos:end="171:37">

                                    <if_stmt pos:start="163:37" pos:end="171:37"><if pos:start="163:37" pos:end="167:37">if<condition pos:start="163:39" pos:end="163:55">(<expr pos:start="163:40" pos:end="163:54"><name pos:start="163:40" pos:end="163:40">x</name><operator pos:start="163:41" pos:end="163:42">==</operator><literal type="number" pos:start="163:43" pos:end="163:43">0</literal> <operator pos:start="163:45" pos:end="163:46">&amp;&amp;</operator> <name pos:start="163:48" pos:end="163:51">mb_x</name><operator pos:start="163:52" pos:end="163:53">==</operator><literal type="number" pos:start="163:54" pos:end="163:54">0</literal></expr>)</condition><block pos:start="163:56" pos:end="167:37">{<block_content pos:start="165:41" pos:end="165:50">

                                        <expr_stmt pos:start="165:41" pos:end="165:50"><expr pos:start="165:41" pos:end="165:49"><name pos:start="165:41" pos:end="165:44">pred</name><operator pos:start="165:45" pos:end="165:45">=</operator> <literal type="number" pos:start="165:47" pos:end="165:49">128</literal></expr>;</expr_stmt>

                                    </block_content>}</block></if><else pos:start="167:38" pos:end="171:37">else<block pos:start="167:42" pos:end="171:37">{<block_content pos:start="169:41" pos:end="169:54">

                                        <expr_stmt pos:start="169:41" pos:end="169:54"><expr pos:start="169:41" pos:end="169:53"><name pos:start="169:41" pos:end="169:44">pred</name><operator pos:start="169:45" pos:end="169:45">=</operator> <name pos:start="169:47" pos:end="169:53"><name pos:start="169:47" pos:end="169:49">ptr</name><index pos:start="169:50" pos:end="169:53">[<expr pos:start="169:51" pos:end="169:52"><operator pos:start="169:51" pos:end="169:51">-</operator><literal type="number" pos:start="169:52" pos:end="169:52">1</literal></expr>]</index></name></expr>;</expr_stmt>

                                    </block_content>}</block></else></if_stmt>

                                </block_content>}</block></if><else pos:start="173:34" pos:end="185:33">else<block pos:start="173:38" pos:end="185:33">{<block_content pos:start="175:37" pos:end="183:37">

                                    <if_stmt pos:start="175:37" pos:end="183:37"><if pos:start="175:37" pos:end="179:37">if<condition pos:start="175:39" pos:end="175:55">(<expr pos:start="175:40" pos:end="175:54"><name pos:start="175:40" pos:end="175:40">x</name><operator pos:start="175:41" pos:end="175:42">==</operator><literal type="number" pos:start="175:43" pos:end="175:43">0</literal> <operator pos:start="175:45" pos:end="175:46">&amp;&amp;</operator> <name pos:start="175:48" pos:end="175:51">mb_x</name><operator pos:start="175:52" pos:end="175:53">==</operator><literal type="number" pos:start="175:54" pos:end="175:54">0</literal></expr>)</condition><block pos:start="175:56" pos:end="179:37">{<block_content pos:start="177:41" pos:end="177:61">

                                        <expr_stmt pos:start="177:41" pos:end="177:61"><expr pos:start="177:41" pos:end="177:60"><name pos:start="177:41" pos:end="177:44">pred</name><operator pos:start="177:45" pos:end="177:45">=</operator> <name pos:start="177:47" pos:end="177:60"><name pos:start="177:47" pos:end="177:49">ptr</name><index pos:start="177:50" pos:end="177:60">[<expr pos:start="177:51" pos:end="177:59"><operator pos:start="177:51" pos:end="177:51">-</operator><name pos:start="177:52" pos:end="177:59">linesize</name></expr>]</index></name></expr>;</expr_stmt>

                                    </block_content>}</block></if><else pos:start="179:38" pos:end="183:37">else<block pos:start="179:42" pos:end="183:37">{<block_content pos:start="181:41" pos:end="181:108">

                                        <expr_stmt pos:start="181:41" pos:end="181:108"><expr pos:start="181:41" pos:end="181:107"><call pos:start="181:41" pos:end="181:107"><name pos:start="181:41" pos:end="181:47">PREDICT</name><argument_list pos:start="181:48" pos:end="181:107">(<argument pos:start="181:49" pos:end="181:52"><expr pos:start="181:49" pos:end="181:52"><name pos:start="181:49" pos:end="181:52">pred</name></expr></argument>, <argument pos:start="181:55" pos:end="181:70"><expr pos:start="181:55" pos:end="181:70"><name pos:start="181:55" pos:end="181:70"><name pos:start="181:55" pos:end="181:57">ptr</name><index pos:start="181:58" pos:end="181:70">[<expr pos:start="181:59" pos:end="181:69"><operator pos:start="181:59" pos:end="181:59">-</operator><name pos:start="181:60" pos:end="181:67">linesize</name><operator pos:start="181:68" pos:end="181:68">-</operator><literal type="number" pos:start="181:69" pos:end="181:69">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="181:73" pos:end="181:86"><expr pos:start="181:73" pos:end="181:86"><name pos:start="181:73" pos:end="181:86"><name pos:start="181:73" pos:end="181:75">ptr</name><index pos:start="181:76" pos:end="181:86">[<expr pos:start="181:77" pos:end="181:85"><operator pos:start="181:77" pos:end="181:77">-</operator><name pos:start="181:78" pos:end="181:85">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="181:89" pos:end="181:95"><expr pos:start="181:89" pos:end="181:95"><name pos:start="181:89" pos:end="181:95"><name pos:start="181:89" pos:end="181:91">ptr</name><index pos:start="181:92" pos:end="181:95">[<expr pos:start="181:93" pos:end="181:94"><operator pos:start="181:93" pos:end="181:93">-</operator><literal type="number" pos:start="181:94" pos:end="181:94">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="181:98" pos:end="181:106"><expr pos:start="181:98" pos:end="181:106"><name pos:start="181:98" pos:end="181:106">predictor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></else></if_stmt>

                                </block_content>}</block></else></if_stmt>

                                

                                <if_stmt pos:start="189:33" pos:end="195:136"><if pos:start="189:33" pos:end="191:132">if<condition pos:start="189:35" pos:end="189:40">(<expr pos:start="189:36" pos:end="189:39"><name pos:start="189:36" pos:end="189:36">i</name><operator pos:start="189:37" pos:end="189:38">==</operator><literal type="number" pos:start="189:39" pos:end="189:39">0</literal></expr>)</condition><block type="pseudo" pos:start="191:37" pos:end="191:132"><block_content pos:start="191:37" pos:end="191:132">

                                    <expr_stmt pos:start="191:37" pos:end="191:132"><expr pos:start="191:37" pos:end="191:131"><call pos:start="191:37" pos:end="191:131"><name pos:start="191:37" pos:end="191:51">mjpeg_encode_dc</name><argument_list pos:start="191:52" pos:end="191:131">(<argument pos:start="191:53" pos:end="191:53"><expr pos:start="191:53" pos:end="191:53"><name pos:start="191:53" pos:end="191:53">s</name></expr></argument>, <argument pos:start="191:56" pos:end="191:76"><expr pos:start="191:56" pos:end="191:76"><operator pos:start="191:56" pos:end="191:56">(</operator><name pos:start="191:57" pos:end="191:62">int8_t</name><operator pos:start="191:63" pos:end="191:63">)</operator><operator pos:start="191:64" pos:end="191:64">(</operator><operator pos:start="191:65" pos:end="191:65">*</operator><name pos:start="191:66" pos:end="191:68">ptr</name> <operator pos:start="191:70" pos:end="191:70">-</operator> <name pos:start="191:72" pos:end="191:75">pred</name><operator pos:start="191:76" pos:end="191:76">)</operator></expr></argument>, <argument pos:start="191:79" pos:end="191:103"><expr pos:start="191:79" pos:end="191:103"><name pos:start="191:79" pos:end="191:103"><name pos:start="191:79" pos:end="191:79">m</name><operator pos:start="191:80" pos:end="191:81">-&gt;</operator><name pos:start="191:82" pos:end="191:103">huff_size_dc_luminance</name></name></expr></argument>, <argument pos:start="191:106" pos:end="191:130"><expr pos:start="191:106" pos:end="191:130"><name pos:start="191:106" pos:end="191:130"><name pos:start="191:106" pos:end="191:106">m</name><operator pos:start="191:107" pos:end="191:108">-&gt;</operator><name pos:start="191:109" pos:end="191:130">huff_code_dc_luminance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="191:134" pos:end="191:145">//FIXME ugly</comment>

                                <else pos:start="193:33" pos:end="195:136">else<block type="pseudo" pos:start="195:37" pos:end="195:136"><block_content pos:start="195:37" pos:end="195:136">

                                    <expr_stmt pos:start="195:37" pos:end="195:136"><expr pos:start="195:37" pos:end="195:135"><call pos:start="195:37" pos:end="195:135"><name pos:start="195:37" pos:end="195:51">mjpeg_encode_dc</name><argument_list pos:start="195:52" pos:end="195:135">(<argument pos:start="195:53" pos:end="195:53"><expr pos:start="195:53" pos:end="195:53"><name pos:start="195:53" pos:end="195:53">s</name></expr></argument>, <argument pos:start="195:56" pos:end="195:76"><expr pos:start="195:56" pos:end="195:76"><operator pos:start="195:56" pos:end="195:56">(</operator><name pos:start="195:57" pos:end="195:62">int8_t</name><operator pos:start="195:63" pos:end="195:63">)</operator><operator pos:start="195:64" pos:end="195:64">(</operator><operator pos:start="195:65" pos:end="195:65">*</operator><name pos:start="195:66" pos:end="195:68">ptr</name> <operator pos:start="195:70" pos:end="195:70">-</operator> <name pos:start="195:72" pos:end="195:75">pred</name><operator pos:start="195:76" pos:end="195:76">)</operator></expr></argument>, <argument pos:start="195:79" pos:end="195:105"><expr pos:start="195:79" pos:end="195:105"><name pos:start="195:79" pos:end="195:105"><name pos:start="195:79" pos:end="195:79">m</name><operator pos:start="195:80" pos:end="195:81">-&gt;</operator><name pos:start="195:82" pos:end="195:105">huff_size_dc_chrominance</name></name></expr></argument>, <argument pos:start="195:108" pos:end="195:134"><expr pos:start="195:108" pos:end="195:134"><name pos:start="195:108" pos:end="195:134"><name pos:start="195:108" pos:end="195:108">m</name><operator pos:start="195:109" pos:end="195:110">-&gt;</operator><name pos:start="195:111" pos:end="195:134">huff_code_dc_chrominance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></if><else pos:start="203:18" pos:end="249:17">else<block pos:start="203:22" pos:end="249:17">{<block_content pos:start="205:21" pos:end="247:21">

                    <for pos:start="205:21" pos:end="247:21">for<control pos:start="205:24" pos:end="205:36">(<init pos:start="205:25" pos:end="205:28"><expr pos:start="205:25" pos:end="205:27"><name pos:start="205:25" pos:end="205:25">i</name><operator pos:start="205:26" pos:end="205:26">=</operator><literal type="number" pos:start="205:27" pos:end="205:27">0</literal></expr>;</init><condition pos:start="205:29" pos:end="205:32"><expr pos:start="205:29" pos:end="205:31"><name pos:start="205:29" pos:end="205:29">i</name><operator pos:start="205:30" pos:end="205:30">&lt;</operator><literal type="number" pos:start="205:31" pos:end="205:31">3</literal></expr>;</condition><incr pos:start="205:33" pos:end="205:35"><expr pos:start="205:33" pos:end="205:35"><name pos:start="205:33" pos:end="205:33">i</name><operator pos:start="205:34" pos:end="205:35">++</operator></expr></incr>)</control> <block pos:start="205:38" pos:end="247:21">{<block_content pos:start="207:25" pos:end="245:25">

                        <decl_stmt pos:start="207:25" pos:end="207:37"><decl pos:start="207:25" pos:end="207:36"><type pos:start="207:25" pos:end="207:33"><name pos:start="207:25" pos:end="207:31">uint8_t</name> <modifier pos:start="207:33" pos:end="207:33">*</modifier></type><name pos:start="207:34" pos:end="207:36">ptr</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="209:25" pos:end="209:49"><decl pos:start="209:25" pos:end="209:29"><type pos:start="209:25" pos:end="209:27"><name pos:start="209:25" pos:end="209:27">int</name></type> <name pos:start="209:29" pos:end="209:29">x</name></decl>, <decl pos:start="209:32" pos:end="209:32"><type ref="prev" pos:start="209:25" pos:end="209:27"/><name pos:start="209:32" pos:end="209:32">y</name></decl>, <decl pos:start="209:35" pos:end="209:35"><type ref="prev" pos:start="209:25" pos:end="209:27"/><name pos:start="209:35" pos:end="209:35">h</name></decl>, <decl pos:start="209:38" pos:end="209:38"><type ref="prev" pos:start="209:25" pos:end="209:27"/><name pos:start="209:38" pos:end="209:38">v</name></decl>, <decl pos:start="209:41" pos:end="209:48"><type ref="prev" pos:start="209:25" pos:end="209:27"/><name pos:start="209:41" pos:end="209:48">linesize</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="211:25" pos:end="211:48"><expr pos:start="211:25" pos:end="211:47"><name pos:start="211:25" pos:end="211:25">h</name> <operator pos:start="211:27" pos:end="211:27">=</operator> <name pos:start="211:29" pos:end="211:47"><name pos:start="211:29" pos:end="211:29">s</name><operator pos:start="211:30" pos:end="211:31">-&gt;</operator><name pos:start="211:32" pos:end="211:44">mjpeg_hsample</name><index pos:start="211:45" pos:end="211:47">[<expr pos:start="211:46" pos:end="211:46"><name pos:start="211:46" pos:end="211:46">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="213:25" pos:end="213:48"><expr pos:start="213:25" pos:end="213:47"><name pos:start="213:25" pos:end="213:25">v</name> <operator pos:start="213:27" pos:end="213:27">=</operator> <name pos:start="213:29" pos:end="213:47"><name pos:start="213:29" pos:end="213:29">s</name><operator pos:start="213:30" pos:end="213:31">-&gt;</operator><name pos:start="213:32" pos:end="213:44">mjpeg_vsample</name><index pos:start="213:45" pos:end="213:47">[<expr pos:start="213:46" pos:end="213:46"><name pos:start="213:46" pos:end="213:46">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="215:25" pos:end="215:49"><expr pos:start="215:25" pos:end="215:48"><name pos:start="215:25" pos:end="215:32">linesize</name><operator pos:start="215:33" pos:end="215:33">=</operator> <name pos:start="215:35" pos:end="215:48"><name pos:start="215:35" pos:end="215:35">p</name><operator pos:start="215:36" pos:end="215:37">-&gt;</operator><name pos:start="215:38" pos:end="215:45">linesize</name><index pos:start="215:46" pos:end="215:48">[<expr pos:start="215:47" pos:end="215:47"><name pos:start="215:47" pos:end="215:47">i</name></expr>]</index></name></expr>;</expr_stmt>

                             

                        <for pos:start="219:25" pos:end="245:25">for<control pos:start="219:28" pos:end="219:42">(<init pos:start="219:29" pos:end="219:32"><expr pos:start="219:29" pos:end="219:31"><name pos:start="219:29" pos:end="219:29">y</name><operator pos:start="219:30" pos:end="219:30">=</operator><literal type="number" pos:start="219:31" pos:end="219:31">0</literal></expr>;</init> <condition pos:start="219:34" pos:end="219:37"><expr pos:start="219:34" pos:end="219:36"><name pos:start="219:34" pos:end="219:34">y</name><operator pos:start="219:35" pos:end="219:35">&lt;</operator><name pos:start="219:36" pos:end="219:36">v</name></expr>;</condition> <incr pos:start="219:39" pos:end="219:41"><expr pos:start="219:39" pos:end="219:41"><name pos:start="219:39" pos:end="219:39">y</name><operator pos:start="219:40" pos:end="219:41">++</operator></expr></incr>)</control><block pos:start="219:43" pos:end="245:25">{<block_content pos:start="221:29" pos:end="243:29">

                            <for pos:start="221:29" pos:end="243:29">for<control pos:start="221:32" pos:end="221:46">(<init pos:start="221:33" pos:end="221:36"><expr pos:start="221:33" pos:end="221:35"><name pos:start="221:33" pos:end="221:33">x</name><operator pos:start="221:34" pos:end="221:34">=</operator><literal type="number" pos:start="221:35" pos:end="221:35">0</literal></expr>;</init> <condition pos:start="221:38" pos:end="221:41"><expr pos:start="221:38" pos:end="221:40"><name pos:start="221:38" pos:end="221:38">x</name><operator pos:start="221:39" pos:end="221:39">&lt;</operator><name pos:start="221:40" pos:end="221:40">h</name></expr>;</condition> <incr pos:start="221:43" pos:end="221:45"><expr pos:start="221:43" pos:end="221:45"><name pos:start="221:43" pos:end="221:43">x</name><operator pos:start="221:44" pos:end="221:45">++</operator></expr></incr>)</control><block pos:start="221:47" pos:end="243:29">{<block_content pos:start="223:33" pos:end="241:136">

                                <decl_stmt pos:start="223:33" pos:end="223:41"><decl pos:start="223:33" pos:end="223:40"><type pos:start="223:33" pos:end="223:35"><name pos:start="223:33" pos:end="223:35">int</name></type> <name pos:start="223:37" pos:end="223:40">pred</name></decl>;</decl_stmt>



                                <expr_stmt pos:start="227:33" pos:end="227:96"><expr pos:start="227:33" pos:end="227:95"><name pos:start="227:33" pos:end="227:35">ptr</name> <operator pos:start="227:37" pos:end="227:37">=</operator> <name pos:start="227:39" pos:end="227:48"><name pos:start="227:39" pos:end="227:39">p</name><operator pos:start="227:40" pos:end="227:41">-&gt;</operator><name pos:start="227:42" pos:end="227:45">data</name><index pos:start="227:46" pos:end="227:48">[<expr pos:start="227:47" pos:end="227:47"><name pos:start="227:47" pos:end="227:47">i</name></expr>]</index></name> <operator pos:start="227:50" pos:end="227:50">+</operator> <operator pos:start="227:52" pos:end="227:52">(</operator><name pos:start="227:53" pos:end="227:60">linesize</name> <operator pos:start="227:62" pos:end="227:62">*</operator> <operator pos:start="227:64" pos:end="227:64">(</operator><name pos:start="227:65" pos:end="227:65">v</name> <operator pos:start="227:67" pos:end="227:67">*</operator> <name pos:start="227:69" pos:end="227:72">mb_y</name> <operator pos:start="227:74" pos:end="227:74">+</operator> <name pos:start="227:76" pos:end="227:76">y</name><operator pos:start="227:77" pos:end="227:77">)</operator><operator pos:start="227:78" pos:end="227:78">)</operator> <operator pos:start="227:80" pos:end="227:80">+</operator> <operator pos:start="227:82" pos:end="227:82">(</operator><name pos:start="227:83" pos:end="227:83">h</name> <operator pos:start="227:85" pos:end="227:85">*</operator> <name pos:start="227:87" pos:end="227:90">mb_x</name> <operator pos:start="227:92" pos:end="227:92">+</operator> <name pos:start="227:94" pos:end="227:94">x</name><operator pos:start="227:95" pos:end="227:95">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="227:98" pos:end="227:123">//FIXME optimize this crap</comment>

<comment type="line" pos:start="229:1" pos:end="229:54">//printf("%d %d %d %d %8X\n", mb_x, mb_y, x, y, ptr); </comment>

                                <expr_stmt pos:start="231:33" pos:end="231:100"><expr pos:start="231:33" pos:end="231:99"><call pos:start="231:33" pos:end="231:99"><name pos:start="231:33" pos:end="231:39">PREDICT</name><argument_list pos:start="231:40" pos:end="231:99">(<argument pos:start="231:41" pos:end="231:44"><expr pos:start="231:41" pos:end="231:44"><name pos:start="231:41" pos:end="231:44">pred</name></expr></argument>, <argument pos:start="231:47" pos:end="231:62"><expr pos:start="231:47" pos:end="231:62"><name pos:start="231:47" pos:end="231:62"><name pos:start="231:47" pos:end="231:49">ptr</name><index pos:start="231:50" pos:end="231:62">[<expr pos:start="231:51" pos:end="231:61"><operator pos:start="231:51" pos:end="231:51">-</operator><name pos:start="231:52" pos:end="231:59">linesize</name><operator pos:start="231:60" pos:end="231:60">-</operator><literal type="number" pos:start="231:61" pos:end="231:61">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="231:65" pos:end="231:78"><expr pos:start="231:65" pos:end="231:78"><name pos:start="231:65" pos:end="231:78"><name pos:start="231:65" pos:end="231:67">ptr</name><index pos:start="231:68" pos:end="231:78">[<expr pos:start="231:69" pos:end="231:77"><operator pos:start="231:69" pos:end="231:69">-</operator><name pos:start="231:70" pos:end="231:77">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="231:81" pos:end="231:87"><expr pos:start="231:81" pos:end="231:87"><name pos:start="231:81" pos:end="231:87"><name pos:start="231:81" pos:end="231:83">ptr</name><index pos:start="231:84" pos:end="231:87">[<expr pos:start="231:85" pos:end="231:86"><operator pos:start="231:85" pos:end="231:85">-</operator><literal type="number" pos:start="231:86" pos:end="231:86">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="231:90" pos:end="231:98"><expr pos:start="231:90" pos:end="231:98"><name pos:start="231:90" pos:end="231:98">predictor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                                <if_stmt pos:start="235:33" pos:end="241:136"><if pos:start="235:33" pos:end="237:132">if<condition pos:start="235:35" pos:end="235:40">(<expr pos:start="235:36" pos:end="235:39"><name pos:start="235:36" pos:end="235:36">i</name><operator pos:start="235:37" pos:end="235:38">==</operator><literal type="number" pos:start="235:39" pos:end="235:39">0</literal></expr>)</condition><block type="pseudo" pos:start="237:37" pos:end="237:132"><block_content pos:start="237:37" pos:end="237:132">

                                    <expr_stmt pos:start="237:37" pos:end="237:132"><expr pos:start="237:37" pos:end="237:131"><call pos:start="237:37" pos:end="237:131"><name pos:start="237:37" pos:end="237:51">mjpeg_encode_dc</name><argument_list pos:start="237:52" pos:end="237:131">(<argument pos:start="237:53" pos:end="237:53"><expr pos:start="237:53" pos:end="237:53"><name pos:start="237:53" pos:end="237:53">s</name></expr></argument>, <argument pos:start="237:56" pos:end="237:76"><expr pos:start="237:56" pos:end="237:76"><operator pos:start="237:56" pos:end="237:56">(</operator><name pos:start="237:57" pos:end="237:62">int8_t</name><operator pos:start="237:63" pos:end="237:63">)</operator><operator pos:start="237:64" pos:end="237:64">(</operator><operator pos:start="237:65" pos:end="237:65">*</operator><name pos:start="237:66" pos:end="237:68">ptr</name> <operator pos:start="237:70" pos:end="237:70">-</operator> <name pos:start="237:72" pos:end="237:75">pred</name><operator pos:start="237:76" pos:end="237:76">)</operator></expr></argument>, <argument pos:start="237:79" pos:end="237:103"><expr pos:start="237:79" pos:end="237:103"><name pos:start="237:79" pos:end="237:103"><name pos:start="237:79" pos:end="237:79">m</name><operator pos:start="237:80" pos:end="237:81">-&gt;</operator><name pos:start="237:82" pos:end="237:103">huff_size_dc_luminance</name></name></expr></argument>, <argument pos:start="237:106" pos:end="237:130"><expr pos:start="237:106" pos:end="237:130"><name pos:start="237:106" pos:end="237:130"><name pos:start="237:106" pos:end="237:106">m</name><operator pos:start="237:107" pos:end="237:108">-&gt;</operator><name pos:start="237:109" pos:end="237:130">huff_code_dc_luminance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="237:134" pos:end="237:145">//FIXME ugly</comment>

                                <else pos:start="239:33" pos:end="241:136">else<block type="pseudo" pos:start="241:37" pos:end="241:136"><block_content pos:start="241:37" pos:end="241:136">

                                    <expr_stmt pos:start="241:37" pos:end="241:136"><expr pos:start="241:37" pos:end="241:135"><call pos:start="241:37" pos:end="241:135"><name pos:start="241:37" pos:end="241:51">mjpeg_encode_dc</name><argument_list pos:start="241:52" pos:end="241:135">(<argument pos:start="241:53" pos:end="241:53"><expr pos:start="241:53" pos:end="241:53"><name pos:start="241:53" pos:end="241:53">s</name></expr></argument>, <argument pos:start="241:56" pos:end="241:76"><expr pos:start="241:56" pos:end="241:76"><operator pos:start="241:56" pos:end="241:56">(</operator><name pos:start="241:57" pos:end="241:62">int8_t</name><operator pos:start="241:63" pos:end="241:63">)</operator><operator pos:start="241:64" pos:end="241:64">(</operator><operator pos:start="241:65" pos:end="241:65">*</operator><name pos:start="241:66" pos:end="241:68">ptr</name> <operator pos:start="241:70" pos:end="241:70">-</operator> <name pos:start="241:72" pos:end="241:75">pred</name><operator pos:start="241:76" pos:end="241:76">)</operator></expr></argument>, <argument pos:start="241:79" pos:end="241:105"><expr pos:start="241:79" pos:end="241:105"><name pos:start="241:79" pos:end="241:105"><name pos:start="241:79" pos:end="241:79">m</name><operator pos:start="241:80" pos:end="241:81">-&gt;</operator><name pos:start="241:82" pos:end="241:105">huff_size_dc_chrominance</name></name></expr></argument>, <argument pos:start="241:108" pos:end="241:134"><expr pos:start="241:108" pos:end="241:134"><name pos:start="241:108" pos:end="241:134"><name pos:start="241:108" pos:end="241:108">m</name><operator pos:start="241:109" pos:end="241:110">-&gt;</operator><name pos:start="241:111" pos:end="241:134">huff_code_dc_chrominance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:13"><expr pos:start="259:5" pos:end="259:12"><call pos:start="259:5" pos:end="259:12"><name pos:start="259:5" pos:end="259:10">emms_c</name><argument_list pos:start="259:11" pos:end="259:12">()</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="263:5" pos:end="263:29"><expr pos:start="263:5" pos:end="263:28"><call pos:start="263:5" pos:end="263:28"><name pos:start="263:5" pos:end="263:25">mjpeg_picture_trailer</name><argument_list pos:start="263:26" pos:end="263:28">(<argument pos:start="263:27" pos:end="263:27"><expr pos:start="263:27" pos:end="263:27"><name pos:start="263:27" pos:end="263:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:24"><expr pos:start="265:5" pos:end="265:23"><name pos:start="265:5" pos:end="265:21"><name pos:start="265:5" pos:end="265:5">s</name><operator pos:start="265:6" pos:end="265:7">-&gt;</operator><name pos:start="265:8" pos:end="265:21">picture_number</name></name><operator pos:start="265:22" pos:end="265:23">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="269:5" pos:end="269:27"><expr pos:start="269:5" pos:end="269:26"><call pos:start="269:5" pos:end="269:26"><name pos:start="269:5" pos:end="269:18">flush_put_bits</name><argument_list pos:start="269:19" pos:end="269:26">(<argument pos:start="269:20" pos:end="269:25"><expr pos:start="269:20" pos:end="269:25"><operator pos:start="269:20" pos:end="269:20">&amp;</operator><name pos:start="269:21" pos:end="269:25"><name pos:start="269:21" pos:end="269:21">s</name><operator pos:start="269:22" pos:end="269:23">-&gt;</operator><name pos:start="269:24" pos:end="269:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="271:5" pos:end="271:40">return <expr pos:start="271:12" pos:end="271:39"><call pos:start="271:12" pos:end="271:27"><name pos:start="271:12" pos:end="271:19">pbBufPtr</name><argument_list pos:start="271:20" pos:end="271:27">(<argument pos:start="271:21" pos:end="271:26"><expr pos:start="271:21" pos:end="271:26"><operator pos:start="271:21" pos:end="271:21">&amp;</operator><name pos:start="271:22" pos:end="271:26"><name pos:start="271:22" pos:end="271:22">s</name><operator pos:start="271:23" pos:end="271:24">-&gt;</operator><name pos:start="271:25" pos:end="271:26">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="271:29" pos:end="271:29">-</operator> <name pos:start="271:31" pos:end="271:39"><name pos:start="271:31" pos:end="271:31">s</name><operator pos:start="271:32" pos:end="271:33">-&gt;</operator><name pos:start="271:34" pos:end="271:35">pb</name><operator pos:start="271:36" pos:end="271:36">.</operator><name pos:start="271:37" pos:end="271:39">buf</name></name></expr>;</return>

<comment type="line" pos:start="273:1" pos:end="273:42">//    return (put_bits_count(&amp;f-&gt;pb)+7)/8;</comment>

</block_content>}</block></function>
</unit>
