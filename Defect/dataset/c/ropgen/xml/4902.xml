<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4902.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">destroy_l2_mapping</name><parameter_list pos:start="1:31" pos:end="1:65">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:44">PhysPageEntry</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">lp</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:58">unsigned</name></type> <name pos:start="1:60" pos:end="1:64">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:22">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">PhysPageEntry</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">p</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">lp</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:28">u</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:33">node</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:11">(<expr pos:start="11:9" pos:end="11:10"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:10">p</name></expr>)</condition> <block pos:start="11:13" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="19:5" pos:end="31:5">for <control pos:start="19:9" pos:end="19:33">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:28"><expr pos:start="19:17" pos:end="19:27"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:27">L2_SIZE</name></expr>;</condition> <incr pos:start="19:30" pos:end="19:32"><expr pos:start="19:30" pos:end="19:32"><operator pos:start="19:30" pos:end="19:31">++</operator><name pos:start="19:32" pos:end="19:32">i</name></expr></incr>)</control> <block pos:start="19:35" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:22">(<expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:17">level</name> <operator pos:start="21:19" pos:end="21:19">&gt;</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>)</condition> <block pos:start="21:24" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:49">

            <expr_stmt pos:start="23:13" pos:end="23:49"><expr pos:start="23:13" pos:end="23:48"><call pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:30">destroy_l2_mapping</name><argument_list pos:start="23:31" pos:end="23:48">(<argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><operator pos:start="23:32" pos:end="23:32">&amp;</operator><name pos:start="23:33" pos:end="23:36"><name pos:start="23:33" pos:end="23:33">p</name><index pos:start="23:34" pos:end="23:36">[<expr pos:start="23:35" pos:end="23:35"><name pos:start="23:35" pos:end="23:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="23:39" pos:end="23:47"><expr pos:start="23:39" pos:end="23:47"><name pos:start="23:39" pos:end="23:43">level</name> <operator pos:start="23:45" pos:end="23:45">-</operator> <literal type="number" pos:start="23:47" pos:end="23:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="29:9">else <block pos:start="25:16" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:43">

            <expr_stmt pos:start="27:13" pos:end="27:43"><expr pos:start="27:13" pos:end="27:42"><call pos:start="27:13" pos:end="27:42"><name pos:start="27:13" pos:end="27:29">destroy_page_desc</name><argument_list pos:start="27:30" pos:end="27:42">(<argument pos:start="27:31" pos:end="27:41"><expr pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:31">p</name><index pos:start="27:32" pos:end="27:34">[<expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">i</name></expr>]</index></name><operator pos:start="27:35" pos:end="27:35">.</operator><name pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:36">u</name><operator pos:start="27:37" pos:end="27:37">.</operator><name pos:start="27:38" pos:end="27:41">leaf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="33:5" pos:end="33:14"><expr pos:start="33:5" pos:end="33:13"><call pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:10">g_free</name><argument_list pos:start="33:11" pos:end="33:13">(<argument pos:start="33:12" pos:end="33:12"><expr pos:start="33:12" pos:end="33:12"><name pos:start="33:12" pos:end="33:12">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:6">lp</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:9">u</name><operator pos:start="35:10" pos:end="35:10">.</operator><name pos:start="35:11" pos:end="35:14">node</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:21">NULL</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
