<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2106.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:27">dct_init</name><parameter_list pos:start="1:28" pos:end="1:46">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:42">MpegEncContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <expr_stmt pos:start="5:5" pos:end="5:41"><expr pos:start="5:5" pos:end="5:40"><call pos:start="5:5" pos:end="5:40"><name pos:start="5:5" pos:end="5:20">ff_blockdsp_init</name><argument_list pos:start="5:21" pos:end="5:40">(<argument pos:start="5:22" pos:end="5:29"><expr pos:start="5:22" pos:end="5:29"><operator pos:start="5:22" pos:end="5:22">&amp;</operator><name pos:start="5:23" pos:end="5:29"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:29">bdsp</name></name></expr></argument>, <argument pos:start="5:32" pos:end="5:39"><expr pos:start="5:32" pos:end="5:39"><name pos:start="5:32" pos:end="5:39"><name pos:start="5:32" pos:end="5:32">s</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:39">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:47"><expr pos:start="7:5" pos:end="7:46"><call pos:start="7:5" pos:end="7:46"><name pos:start="7:5" pos:end="7:19">ff_hpeldsp_init</name><argument_list pos:start="7:20" pos:end="7:46">(<argument pos:start="7:21" pos:end="7:28"><expr pos:start="7:21" pos:end="7:28"><operator pos:start="7:21" pos:end="7:21">&amp;</operator><name pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:22">s</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:28">hdsp</name></name></expr></argument>, <argument pos:start="7:31" pos:end="7:45"><expr pos:start="7:31" pos:end="7:45"><name pos:start="7:31" pos:end="7:45"><name pos:start="7:31" pos:end="7:31">s</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:38">avctx</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:45">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:39"><expr pos:start="9:5" pos:end="9:38"><call pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:18">ff_me_cmp_init</name><argument_list pos:start="9:19" pos:end="9:38">(<argument pos:start="9:20" pos:end="9:27"><expr pos:start="9:20" pos:end="9:27"><operator pos:start="9:20" pos:end="9:20">&amp;</operator><name pos:start="9:21" pos:end="9:27"><name pos:start="9:21" pos:end="9:21">s</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:27">mecc</name></name></expr></argument>, <argument pos:start="9:30" pos:end="9:37"><expr pos:start="9:30" pos:end="9:37"><name pos:start="9:30" pos:end="9:37"><name pos:start="9:30" pos:end="9:30">s</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><call pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:24">ff_mpegvideodsp_init</name><argument_list pos:start="11:25" pos:end="11:34">(<argument pos:start="11:26" pos:end="11:33"><expr pos:start="11:26" pos:end="11:33"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:33"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:33">mdsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:62"><expr pos:start="13:5" pos:end="13:61"><call pos:start="13:5" pos:end="13:61"><name pos:start="13:5" pos:end="13:20">ff_videodsp_init</name><argument_list pos:start="13:21" pos:end="13:61">(<argument pos:start="13:22" pos:end="13:29"><expr pos:start="13:22" pos:end="13:29"><operator pos:start="13:22" pos:end="13:22">&amp;</operator><name pos:start="13:23" pos:end="13:29"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:29">vdsp</name></name></expr></argument>, <argument pos:start="13:32" pos:end="13:60"><expr pos:start="13:32" pos:end="13:60"><name pos:start="13:32" pos:end="13:60"><name pos:start="13:32" pos:end="13:32">s</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:39">avctx</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:60">bits_per_raw_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:63"><expr pos:start="17:5" pos:end="17:62"><name pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:32">dct_unquantize_h263_intra</name></name> <operator pos:start="17:34" pos:end="17:34">=</operator> <name pos:start="17:36" pos:end="17:62">dct_unquantize_h263_intra_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:32">dct_unquantize_h263_inter</name></name> <operator pos:start="19:34" pos:end="19:34">=</operator> <name pos:start="19:36" pos:end="19:62">dct_unquantize_h263_inter_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:65"><expr pos:start="21:5" pos:end="21:64"><name pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:33">dct_unquantize_mpeg1_intra</name></name> <operator pos:start="21:35" pos:end="21:35">=</operator> <name pos:start="21:37" pos:end="21:64">dct_unquantize_mpeg1_intra_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:65"><expr pos:start="23:5" pos:end="23:64"><name pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:33">dct_unquantize_mpeg1_inter</name></name> <operator pos:start="23:35" pos:end="23:35">=</operator> <name pos:start="23:37" pos:end="23:64">dct_unquantize_mpeg1_inter_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:65"><expr pos:start="25:5" pos:end="25:64"><name pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:33">dct_unquantize_mpeg2_intra</name></name> <operator pos:start="25:35" pos:end="25:35">=</operator> <name pos:start="25:37" pos:end="25:64">dct_unquantize_mpeg2_intra_c</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:76"><if pos:start="27:5" pos:end="29:76">if <condition pos:start="27:8" pos:end="27:39">(<expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:16">flags</name></name> <operator pos:start="27:18" pos:end="27:18">&amp;</operator> <name pos:start="27:20" pos:end="27:38">CODEC_FLAG_BITEXACT</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:76"><block_content pos:start="29:9" pos:end="29:76">

        <expr_stmt pos:start="29:9" pos:end="29:76"><expr pos:start="29:9" pos:end="29:75"><name pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:37">dct_unquantize_mpeg2_intra</name></name> <operator pos:start="29:39" pos:end="29:39">=</operator> <name pos:start="29:41" pos:end="29:75">dct_unquantize_mpeg2_intra_bitexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:33">dct_unquantize_mpeg2_inter</name></name> <operator pos:start="31:35" pos:end="31:35">=</operator> <name pos:start="31:37" pos:end="31:64">dct_unquantize_mpeg2_inter_c</name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:35"><if pos:start="35:5" pos:end="37:35">if <condition pos:start="35:8" pos:end="35:29">(<expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:28">HAVE_INTRINSICS_NEON</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:35"><block_content pos:start="37:9" pos:end="37:35">

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:31">ff_mpv_common_init_neon</name><argument_list pos:start="37:32" pos:end="37:34">(<argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:34"><if pos:start="41:5" pos:end="43:34">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">ARCH_ARM</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:34"><block_content pos:start="43:9" pos:end="43:34">

        <expr_stmt pos:start="43:9" pos:end="43:34"><expr pos:start="43:9" pos:end="43:33"><call pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:30">ff_mpv_common_init_arm</name><argument_list pos:start="43:31" pos:end="43:33">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="47:34"><if pos:start="45:5" pos:end="47:34">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16">ARCH_PPC</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:34"><block_content pos:start="47:9" pos:end="47:34">

        <expr_stmt pos:start="47:9" pos:end="47:34"><expr pos:start="47:9" pos:end="47:33"><call pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:30">ff_mpv_common_init_ppc</name><argument_list pos:start="47:31" pos:end="47:33">(<argument pos:start="47:32" pos:end="47:32"><expr pos:start="47:32" pos:end="47:32"><name pos:start="47:32" pos:end="47:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="51:34"><if pos:start="49:5" pos:end="51:34">if <condition pos:start="49:8" pos:end="49:17">(<expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:16">ARCH_X86</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:34"><block_content pos:start="51:9" pos:end="51:34">

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><call pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:30">ff_mpv_common_init_x86</name><argument_list pos:start="51:31" pos:end="51:33">(<argument pos:start="51:32" pos:end="51:32"><expr pos:start="51:32" pos:end="51:32"><name pos:start="51:32" pos:end="51:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
