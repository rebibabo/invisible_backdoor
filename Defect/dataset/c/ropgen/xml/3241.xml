<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3241.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">qed_copy_from_backing_file</name><parameter_list pos:start="1:39" pos:end="7:52">(<parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:51">BDRVQEDState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:64">uint64_t</name></type> <name pos:start="1:66" pos:end="1:68">pos</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:51"><decl pos:start="3:40" pos:end="3:51"><type pos:start="3:40" pos:end="3:51"><name pos:start="3:40" pos:end="3:47">uint64_t</name></type> <name pos:start="3:49" pos:end="3:51">len</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><name pos:start="3:54" pos:end="3:61">uint64_t</name></type> <name pos:start="3:63" pos:end="3:68">offset</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:68"><decl pos:start="5:40" pos:end="5:68"><type pos:start="5:40" pos:end="5:68"><name pos:start="5:40" pos:end="5:64">BlockDriverCompletionFunc</name> <modifier pos:start="5:66" pos:end="5:66">*</modifier></type><name pos:start="5:67" pos:end="5:68">cb</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:51"><decl pos:start="7:40" pos:end="7:51"><type pos:start="7:40" pos:end="7:51"><name pos:start="7:40" pos:end="7:43">void</name> <modifier pos:start="7:45" pos:end="7:45">*</modifier></type><name pos:start="7:46" pos:end="7:51">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="45:1">{<block_content pos:start="11:5" pos:end="43:69">

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:25">CopyFromBackingFileCB</name> <modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:34">copy_cb</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:54">/* Skip copy entirely if there is no work to do */</comment>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">len</name> <operator pos:start="17:13" pos:end="17:14">==</operator> <literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>)</condition> <block pos:start="17:19" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><call pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:10">cb</name><argument_list pos:start="19:11" pos:end="19:21">(<argument pos:start="19:12" pos:end="19:17"><expr pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:17">opaque</name></expr></argument>, <argument pos:start="19:20" pos:end="19:20"><expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:56"><expr pos:start="27:5" pos:end="27:55"><name pos:start="27:5" pos:end="27:11">copy_cb</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:55"><name pos:start="27:15" pos:end="27:25">gencb_alloc</name><argument_list pos:start="27:26" pos:end="27:55">(<argument pos:start="27:27" pos:end="27:42"><expr pos:start="27:27" pos:end="27:42"><sizeof pos:start="27:27" pos:end="27:42">sizeof<argument_list pos:start="27:33" pos:end="27:42">(<argument pos:start="27:34" pos:end="27:41"><expr pos:start="27:34" pos:end="27:41"><operator pos:start="27:34" pos:end="27:34">*</operator><name pos:start="27:35" pos:end="27:41">copy_cb</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:45" pos:end="27:46"><expr pos:start="27:45" pos:end="27:46"><name pos:start="27:45" pos:end="27:46">cb</name></expr></argument>, <argument pos:start="27:49" pos:end="27:54"><expr pos:start="27:49" pos:end="27:54"><name pos:start="27:49" pos:end="27:54">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:11">copy_cb</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:14">s</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:18">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:11">copy_cb</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:19">offset</name></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:28">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:56"><expr pos:start="33:5" pos:end="33:55"><name pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:11">copy_cb</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:16">iov</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:25">iov_base</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <call pos:start="33:29" pos:end="33:55"><name pos:start="33:29" pos:end="33:43">qemu_blockalign</name><argument_list pos:start="33:44" pos:end="33:55">(<argument pos:start="33:45" pos:end="33:49"><expr pos:start="33:45" pos:end="33:49"><name pos:start="33:45" pos:end="33:49"><name pos:start="33:45" pos:end="33:45">s</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:49">bs</name></name></expr></argument>, <argument pos:start="33:52" pos:end="33:54"><expr pos:start="33:52" pos:end="33:54"><name pos:start="33:52" pos:end="33:54">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:11">copy_cb</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">iov</name><operator pos:start="35:17" pos:end="35:17">.</operator><name pos:start="35:18" pos:end="35:24">iov_len</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:30">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:63"><expr pos:start="37:5" pos:end="37:62"><call pos:start="37:5" pos:end="37:62"><name pos:start="37:5" pos:end="37:28">qemu_iovec_init_external</name><argument_list pos:start="37:29" pos:end="37:62">(<argument pos:start="37:30" pos:end="37:43"><expr pos:start="37:30" pos:end="37:43"><operator pos:start="37:30" pos:end="37:30">&amp;</operator><name pos:start="37:31" pos:end="37:43"><name pos:start="37:31" pos:end="37:37">copy_cb</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:43">qiov</name></name></expr></argument>, <argument pos:start="37:46" pos:end="37:58"><expr pos:start="37:46" pos:end="37:58"><operator pos:start="37:46" pos:end="37:46">&amp;</operator><name pos:start="37:47" pos:end="37:58"><name pos:start="37:47" pos:end="37:53">copy_cb</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:58">iov</name></name></expr></argument>, <argument pos:start="37:61" pos:end="37:61"><expr pos:start="37:61" pos:end="37:61"><literal type="number" pos:start="37:61" pos:end="37:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:69"><expr pos:start="41:5" pos:end="43:68"><call pos:start="41:5" pos:end="43:68"><name pos:start="41:5" pos:end="41:25">qed_read_backing_file</name><argument_list pos:start="41:26" pos:end="43:68">(<argument pos:start="41:27" pos:end="41:27"><expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">s</name></expr></argument>, <argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">pos</name></expr></argument>, <argument pos:start="41:35" pos:end="41:48"><expr pos:start="41:35" pos:end="41:48"><operator pos:start="41:35" pos:end="41:35">&amp;</operator><name pos:start="41:36" pos:end="41:48"><name pos:start="41:36" pos:end="41:42">copy_cb</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:48">qiov</name></name></expr></argument>,

                          <argument pos:start="43:27" pos:end="43:58"><expr pos:start="43:27" pos:end="43:58"><name pos:start="43:27" pos:end="43:58">qed_copy_from_backing_file_write</name></expr></argument>, <argument pos:start="43:61" pos:end="43:67"><expr pos:start="43:61" pos:end="43:67"><name pos:start="43:61" pos:end="43:67">copy_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
