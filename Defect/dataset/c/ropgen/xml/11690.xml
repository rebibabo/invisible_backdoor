<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11690.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">alsa_run_out</name> <parameter_list pos:start="1:25" pos:end="1:40">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:35">HWVoiceOut</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">hw</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:16">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">ALSAVoiceOut</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">alsa</name> <init pos:start="5:24" pos:end="5:44">= <expr pos:start="5:26" pos:end="5:44"><operator pos:start="5:26" pos:end="5:26">(</operator><name pos:start="5:27" pos:end="5:38">ALSAVoiceOut</name> <operator pos:start="5:40" pos:end="5:40">*</operator><operator pos:start="5:41" pos:end="5:41">)</operator> <name pos:start="5:43" pos:end="5:44">hw</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">rpos</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">live</name></decl>, <decl pos:start="7:21" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:24">decr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">st_sample_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:21">snd_pcm_sframes_t</name></type> <name pos:start="15:23" pos:end="15:27">avail</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:8">live</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:41"><name pos:start="19:12" pos:end="19:36">audio_pcm_hw_get_live_out</name> <argument_list pos:start="19:38" pos:end="19:41">(<argument pos:start="19:39" pos:end="19:40"><expr pos:start="19:39" pos:end="19:40"><name pos:start="19:39" pos:end="19:40">hw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:14">(<expr pos:start="21:9" pos:end="21:13"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:13">live</name></expr>)</condition> <block pos:start="21:16" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:9">avail</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:41"><name pos:start="29:13" pos:end="29:26">alsa_get_avail</name> <argument_list pos:start="29:28" pos:end="29:41">(<argument pos:start="29:29" pos:end="29:40"><expr pos:start="29:29" pos:end="29:40"><name pos:start="29:29" pos:end="29:40"><name pos:start="29:29" pos:end="29:32">alsa</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:40">handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:18">(<expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:13">avail</name> <operator pos:start="31:15" pos:end="31:15">&lt;</operator> <literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>)</condition> <block pos:start="31:20" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:17">

        <expr_stmt pos:start="33:9" pos:end="33:70"><expr pos:start="33:9" pos:end="33:69"><call pos:start="33:9" pos:end="33:69"><name pos:start="33:9" pos:end="33:13">dolog</name> <argument_list pos:start="33:15" pos:end="33:69">(<argument pos:start="33:16" pos:end="33:68"><expr pos:start="33:16" pos:end="33:68"><literal type="string" pos:start="33:16" pos:end="33:68">"Could not get number of available playback frames\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:8">decr</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:34"><name pos:start="41:12" pos:end="41:20">audio_MIN</name> <argument_list pos:start="41:22" pos:end="41:34">(<argument pos:start="41:23" pos:end="41:26"><expr pos:start="41:23" pos:end="41:26"><name pos:start="41:23" pos:end="41:26">live</name></expr></argument>, <argument pos:start="41:29" pos:end="41:33"><expr pos:start="41:29" pos:end="41:33"><name pos:start="41:29" pos:end="41:33">avail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:11">samples</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:18">decr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:8">rpos</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <name pos:start="45:12" pos:end="45:19"><name pos:start="45:12" pos:end="45:13">hw</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:19">rpos</name></name></expr>;</expr_stmt>

    <while pos:start="47:5" pos:end="143:5">while <condition pos:start="47:11" pos:end="47:19">(<expr pos:start="47:12" pos:end="47:18"><name pos:start="47:12" pos:end="47:18">samples</name></expr>)</condition> <block pos:start="47:21" pos:end="143:5">{<block_content pos:start="49:9" pos:end="141:9">

        <decl_stmt pos:start="49:9" pos:end="49:55"><decl pos:start="49:9" pos:end="49:54"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:33">left_till_end_samples</name> <init pos:start="49:35" pos:end="49:54">= <expr pos:start="49:37" pos:end="49:54"><name pos:start="49:37" pos:end="49:47"><name pos:start="49:37" pos:end="49:38">hw</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:47">samples</name></name> <operator pos:start="49:49" pos:end="49:49">-</operator> <name pos:start="49:51" pos:end="49:54">rpos</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:61"><decl pos:start="51:9" pos:end="51:60"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:15">len</name> <init pos:start="51:17" pos:end="51:60">= <expr pos:start="51:19" pos:end="51:60"><call pos:start="51:19" pos:end="51:60"><name pos:start="51:19" pos:end="51:27">audio_MIN</name> <argument_list pos:start="51:29" pos:end="51:60">(<argument pos:start="51:30" pos:end="51:36"><expr pos:start="51:30" pos:end="51:36"><name pos:start="51:30" pos:end="51:36">samples</name></expr></argument>, <argument pos:start="51:39" pos:end="51:59"><expr pos:start="51:39" pos:end="51:59"><name pos:start="51:39" pos:end="51:59">left_till_end_samples</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:34"><decl pos:start="53:9" pos:end="53:33"><type pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:25">snd_pcm_sframes_t</name></type> <name pos:start="53:27" pos:end="53:33">written</name></decl>;</decl_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:11">src</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:25"><name pos:start="57:15" pos:end="57:16">hw</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:25">mix_buf</name></name> <operator pos:start="57:27" pos:end="57:27">+</operator> <name pos:start="57:29" pos:end="57:32">rpos</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:62"><expr pos:start="59:9" pos:end="59:61"><name pos:start="59:9" pos:end="59:11">dst</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:61"><name pos:start="59:15" pos:end="59:21">advance</name> <argument_list pos:start="59:23" pos:end="59:61">(<argument pos:start="59:24" pos:end="59:36"><expr pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:27">alsa</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:36">pcm_buf</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:60"><expr pos:start="59:39" pos:end="59:60"><name pos:start="59:39" pos:end="59:42">rpos</name> <operator pos:start="59:44" pos:end="59:45">&lt;&lt;</operator> <name pos:start="59:47" pos:end="59:60"><name pos:start="59:47" pos:end="59:48">hw</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:54">info</name><operator pos:start="59:55" pos:end="59:55">.</operator><name pos:start="59:56" pos:end="59:60">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:33"><expr pos:start="63:9" pos:end="63:32"><call pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:10">hw</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:16">clip</name></name> <argument_list pos:start="63:18" pos:end="63:32">(<argument pos:start="63:19" pos:end="63:21"><expr pos:start="63:19" pos:end="63:21"><name pos:start="63:19" pos:end="63:21">dst</name></expr></argument>, <argument pos:start="63:24" pos:end="63:26"><expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">src</name></expr></argument>, <argument pos:start="63:29" pos:end="63:31"><expr pos:start="63:29" pos:end="63:31"><name pos:start="63:29" pos:end="63:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <while pos:start="67:9" pos:end="141:9">while <condition pos:start="67:15" pos:end="67:19">(<expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">len</name></expr>)</condition> <block pos:start="67:21" pos:end="141:9">{<block_content pos:start="69:13" pos:end="139:27">

            <expr_stmt pos:start="69:13" pos:end="69:62"><expr pos:start="69:13" pos:end="69:61"><name pos:start="69:13" pos:end="69:19">written</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:61"><name pos:start="69:23" pos:end="69:36">snd_pcm_writei</name> <argument_list pos:start="69:38" pos:end="69:61">(<argument pos:start="69:39" pos:end="69:50"><expr pos:start="69:39" pos:end="69:50"><name pos:start="69:39" pos:end="69:50"><name pos:start="69:39" pos:end="69:42">alsa</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:50">handle</name></name></expr></argument>, <argument pos:start="69:53" pos:end="69:55"><expr pos:start="69:53" pos:end="69:55"><name pos:start="69:53" pos:end="69:55">dst</name></expr></argument>, <argument pos:start="69:58" pos:end="69:60"><expr pos:start="69:58" pos:end="69:60"><name pos:start="69:58" pos:end="69:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="73:13" pos:end="127:13"><if pos:start="73:13" pos:end="127:13">if <condition pos:start="73:16" pos:end="73:29">(<expr pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:23">written</name> <operator pos:start="73:25" pos:end="73:26">&lt;=</operator> <literal type="number" pos:start="73:28" pos:end="73:28">0</literal></expr>)</condition> <block pos:start="73:31" pos:end="127:13">{<block_content pos:start="75:17" pos:end="125:17">

                <switch pos:start="75:17" pos:end="125:17">switch <condition pos:start="75:24" pos:end="75:32">(<expr pos:start="75:25" pos:end="75:31"><name pos:start="75:25" pos:end="75:31">written</name></expr>)</condition> <block pos:start="75:34" pos:end="125:17">{<block_content pos:start="77:17" pos:end="123:30">

                <case pos:start="77:17" pos:end="77:23">case <expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>:</case>

                    <if_stmt pos:start="79:21" pos:end="83:21"><if pos:start="79:21" pos:end="83:21">if <condition pos:start="79:24" pos:end="79:37">(<expr pos:start="79:25" pos:end="79:36"><name pos:start="79:25" pos:end="79:36"><name pos:start="79:25" pos:end="79:28">conf</name><operator pos:start="79:29" pos:end="79:29">.</operator><name pos:start="79:30" pos:end="79:36">verbose</name></name></expr>)</condition> <block pos:start="79:39" pos:end="83:21">{<block_content pos:start="81:25" pos:end="81:80">

                        <expr_stmt pos:start="81:25" pos:end="81:80"><expr pos:start="81:25" pos:end="81:79"><call pos:start="81:25" pos:end="81:79"><name pos:start="81:25" pos:end="81:29">dolog</name> <argument_list pos:start="81:31" pos:end="81:79">(<argument pos:start="81:32" pos:end="81:73"><expr pos:start="81:32" pos:end="81:73"><literal type="string" pos:start="81:32" pos:end="81:73">"Failed to write %d frames (wrote zero)\n"</literal></expr></argument>, <argument pos:start="81:76" pos:end="81:78"><expr pos:start="81:76" pos:end="81:78"><name pos:start="81:76" pos:end="81:78">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <goto pos:start="85:21" pos:end="85:30">goto <name pos:start="85:26" pos:end="85:29">exit</name>;</goto>



                <case pos:start="89:17" pos:end="89:28">case <expr pos:start="89:22" pos:end="89:27"><operator pos:start="89:22" pos:end="89:22">-</operator><name pos:start="89:23" pos:end="89:27">EPIPE</name></expr>:</case>

                    <if_stmt pos:start="91:21" pos:end="99:21"><if pos:start="91:21" pos:end="99:21">if <condition pos:start="91:24" pos:end="91:52">(<expr pos:start="91:25" pos:end="91:51"><call pos:start="91:25" pos:end="91:51"><name pos:start="91:25" pos:end="91:36">alsa_recover</name> <argument_list pos:start="91:38" pos:end="91:51">(<argument pos:start="91:39" pos:end="91:50"><expr pos:start="91:39" pos:end="91:50"><name pos:start="91:39" pos:end="91:50"><name pos:start="91:39" pos:end="91:42">alsa</name><operator pos:start="91:43" pos:end="91:44">-&gt;</operator><name pos:start="91:45" pos:end="91:50">handle</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:54" pos:end="99:21">{<block_content pos:start="93:25" pos:end="97:34">

                        <expr_stmt pos:start="93:25" pos:end="95:42"><expr pos:start="93:25" pos:end="95:41"><call pos:start="93:25" pos:end="95:41"><name pos:start="93:25" pos:end="93:35">alsa_logerr</name> <argument_list pos:start="93:37" pos:end="95:41">(<argument pos:start="93:38" pos:end="93:44"><expr pos:start="93:38" pos:end="93:44"><name pos:start="93:38" pos:end="93:44">written</name></expr></argument>, <argument pos:start="93:47" pos:end="93:75"><expr pos:start="93:47" pos:end="93:75"><literal type="string" pos:start="93:47" pos:end="93:75">"Failed to write %d frames\n"</literal></expr></argument>,

                                     <argument pos:start="95:38" pos:end="95:40"><expr pos:start="95:38" pos:end="95:40"><name pos:start="95:38" pos:end="95:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="97:25" pos:end="97:34">goto <name pos:start="97:30" pos:end="97:33">exit</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="101:21" pos:end="105:21"><if pos:start="101:21" pos:end="105:21">if <condition pos:start="101:24" pos:end="101:37">(<expr pos:start="101:25" pos:end="101:36"><name pos:start="101:25" pos:end="101:36"><name pos:start="101:25" pos:end="101:28">conf</name><operator pos:start="101:29" pos:end="101:29">.</operator><name pos:start="101:30" pos:end="101:36">verbose</name></name></expr>)</condition> <block pos:start="101:39" pos:end="105:21">{<block_content pos:start="103:25" pos:end="103:66">

                        <expr_stmt pos:start="103:25" pos:end="103:66"><expr pos:start="103:25" pos:end="103:65"><call pos:start="103:25" pos:end="103:65"><name pos:start="103:25" pos:end="103:29">dolog</name> <argument_list pos:start="103:31" pos:end="103:65">(<argument pos:start="103:32" pos:end="103:64"><expr pos:start="103:32" pos:end="103:64"><literal type="string" pos:start="103:32" pos:end="103:64">"Recovering from playback xrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <continue pos:start="107:21" pos:end="107:29">continue;</continue>



                <case pos:start="111:17" pos:end="111:29">case <expr pos:start="111:22" pos:end="111:28"><operator pos:start="111:22" pos:end="111:22">-</operator><name pos:start="111:23" pos:end="111:28">EAGAIN</name></expr>:</case>

                    <goto pos:start="113:21" pos:end="113:30">goto <name pos:start="113:26" pos:end="113:29">exit</name>;</goto>



                <default pos:start="117:17" pos:end="117:24">default:</default>

                    <expr_stmt pos:start="119:21" pos:end="121:43"><expr pos:start="119:21" pos:end="121:42"><call pos:start="119:21" pos:end="121:42"><name pos:start="119:21" pos:end="119:31">alsa_logerr</name> <argument_list pos:start="119:33" pos:end="121:42">(<argument pos:start="119:34" pos:end="119:40"><expr pos:start="119:34" pos:end="119:40"><name pos:start="119:34" pos:end="119:40">written</name></expr></argument>, <argument pos:start="119:43" pos:end="119:77"><expr pos:start="119:43" pos:end="119:77"><literal type="string" pos:start="119:43" pos:end="119:77">"Failed to write %d frames to %p\n"</literal></expr></argument>,

                                 <argument pos:start="121:34" pos:end="121:36"><expr pos:start="121:34" pos:end="121:36"><name pos:start="121:34" pos:end="121:36">len</name></expr></argument>, <argument pos:start="121:39" pos:end="121:41"><expr pos:start="121:39" pos:end="121:41"><name pos:start="121:39" pos:end="121:41">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="123:21" pos:end="123:30">goto <name pos:start="123:26" pos:end="123:29">exit</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="131:13" pos:end="131:50"><expr pos:start="131:13" pos:end="131:49"><name pos:start="131:13" pos:end="131:16">rpos</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <operator pos:start="131:20" pos:end="131:20">(</operator><name pos:start="131:21" pos:end="131:24">rpos</name> <operator pos:start="131:26" pos:end="131:26">+</operator> <name pos:start="131:28" pos:end="131:34">written</name><operator pos:start="131:35" pos:end="131:35">)</operator> <operator pos:start="131:37" pos:end="131:37">%</operator> <name pos:start="131:39" pos:end="131:49"><name pos:start="131:39" pos:end="131:40">hw</name><operator pos:start="131:41" pos:end="131:42">-&gt;</operator><name pos:start="131:43" pos:end="131:49">samples</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:31"><expr pos:start="133:13" pos:end="133:30"><name pos:start="133:13" pos:end="133:19">samples</name> <operator pos:start="133:21" pos:end="133:22">-=</operator> <name pos:start="133:24" pos:end="133:30">written</name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:27"><expr pos:start="135:13" pos:end="135:26"><name pos:start="135:13" pos:end="135:15">len</name> <operator pos:start="135:17" pos:end="135:18">-=</operator> <name pos:start="135:20" pos:end="135:26">written</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:59"><expr pos:start="137:13" pos:end="137:58"><name pos:start="137:13" pos:end="137:15">dst</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="137:58"><name pos:start="137:19" pos:end="137:25">advance</name> <argument_list pos:start="137:27" pos:end="137:58">(<argument pos:start="137:28" pos:end="137:30"><expr pos:start="137:28" pos:end="137:30"><name pos:start="137:28" pos:end="137:30">dst</name></expr></argument>, <argument pos:start="137:33" pos:end="137:57"><expr pos:start="137:33" pos:end="137:57"><name pos:start="137:33" pos:end="137:39">written</name> <operator pos:start="137:41" pos:end="137:42">&lt;&lt;</operator> <name pos:start="137:44" pos:end="137:57"><name pos:start="137:44" pos:end="137:45">hw</name><operator pos:start="137:46" pos:end="137:47">-&gt;</operator><name pos:start="137:48" pos:end="137:51">info</name><operator pos:start="137:52" pos:end="137:52">.</operator><name pos:start="137:53" pos:end="137:57">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:27"><expr pos:start="139:13" pos:end="139:26"><name pos:start="139:13" pos:end="139:15">src</name> <operator pos:start="139:17" pos:end="139:18">+=</operator> <name pos:start="139:20" pos:end="139:26">written</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>



 <label pos:start="147:2" pos:end="147:6"><name pos:start="147:2" pos:end="147:5">exit</name>:</label>

    <expr_stmt pos:start="149:5" pos:end="149:20"><expr pos:start="149:5" pos:end="149:19"><name pos:start="149:5" pos:end="149:12"><name pos:start="149:5" pos:end="149:6">hw</name><operator pos:start="149:7" pos:end="149:8">-&gt;</operator><name pos:start="149:9" pos:end="149:12">rpos</name></name> <operator pos:start="149:14" pos:end="149:14">=</operator> <name pos:start="149:16" pos:end="149:19">rpos</name></expr>;</expr_stmt>

    <return pos:start="151:5" pos:end="151:16">return <expr pos:start="151:12" pos:end="151:15"><name pos:start="151:12" pos:end="151:15">decr</name></expr>;</return>

</block_content>}</block></function>
</unit>
