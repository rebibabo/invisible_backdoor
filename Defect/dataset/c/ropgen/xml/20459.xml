<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20459.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">sdp_probe</name><parameter_list pos:start="1:21" pos:end="1:37">(<parameter pos:start="1:22" pos:end="1:36"><decl pos:start="1:22" pos:end="1:36"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">AVProbeData</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">p1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:61"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name> <init pos:start="5:19" pos:end="5:27">= <expr pos:start="5:21" pos:end="5:27"><name pos:start="5:21" pos:end="5:27"><name pos:start="5:21" pos:end="5:22">p1</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:27">buf</name></name></expr></init></decl>, <decl pos:start="5:30" pos:end="5:60"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:35">p_end</name> <init pos:start="5:37" pos:end="5:60">= <expr pos:start="5:39" pos:end="5:60"><name pos:start="5:39" pos:end="5:45"><name pos:start="5:39" pos:end="5:40">p1</name><operator pos:start="5:41" pos:end="5:42">-&gt;</operator><name pos:start="5:43" pos:end="5:45">buf</name></name> <operator pos:start="5:47" pos:end="5:47">+</operator> <name pos:start="5:49" pos:end="5:60"><name pos:start="5:49" pos:end="5:50">p1</name><operator pos:start="5:51" pos:end="5:52">-&gt;</operator><name pos:start="5:53" pos:end="5:60">buf_size</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:48">/* we look for a line beginning "c=IN IP" */</comment>

    <while pos:start="11:5" pos:end="31:5">while <condition pos:start="11:11" pos:end="11:35">(<expr pos:start="11:12" pos:end="11:34"><name pos:start="11:12" pos:end="11:12">p</name> <operator pos:start="11:14" pos:end="11:14">&lt;</operator> <name pos:start="11:16" pos:end="11:20">p_end</name> <operator pos:start="11:22" pos:end="11:23">&amp;&amp;</operator> <operator pos:start="11:25" pos:end="11:25">*</operator><name pos:start="11:26" pos:end="11:26">p</name> <operator pos:start="11:28" pos:end="11:29">!=</operator> <literal type="char" pos:start="11:31" pos:end="11:34">'\0'</literal></expr>)</condition> <block pos:start="11:37" pos:end="31:5">{<block_content pos:start="13:9" pos:end="29:16">

        <if_stmt pos:start="13:9" pos:end="17:43"><if pos:start="13:9" pos:end="17:43">if <condition pos:start="13:12" pos:end="15:44">(<expr pos:start="13:13" pos:end="15:43"><name pos:start="13:13" pos:end="13:13">p</name> <operator pos:start="13:15" pos:end="13:15">+</operator> <sizeof pos:start="13:17" pos:end="13:33">sizeof<argument_list pos:start="13:23" pos:end="13:33">(<argument pos:start="13:24" pos:end="13:32"><expr pos:start="13:24" pos:end="13:32"><literal type="string" pos:start="13:24" pos:end="13:32">"c=IN IP"</literal></expr></argument>)</argument_list></sizeof> <operator pos:start="13:35" pos:end="13:35">-</operator> <literal type="number" pos:start="13:37" pos:end="13:37">1</literal> <operator pos:start="13:39" pos:end="13:39">&lt;</operator> <name pos:start="13:41" pos:end="13:45">p_end</name> <operator pos:start="13:47" pos:end="13:48">&amp;&amp;</operator>

            <call pos:start="15:13" pos:end="15:43"><name pos:start="15:13" pos:end="15:23">av_strstart</name><argument_list pos:start="15:24" pos:end="15:43">(<argument pos:start="15:25" pos:end="15:25"><expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">p</name></expr></argument>, <argument pos:start="15:28" pos:end="15:36"><expr pos:start="15:28" pos:end="15:36"><literal type="string" pos:start="15:28" pos:end="15:36">"c=IN IP"</literal></expr></argument>, <argument pos:start="15:39" pos:end="15:42"><expr pos:start="15:39" pos:end="15:42"><name pos:start="15:39" pos:end="15:42">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:43"><block_content pos:start="17:13" pos:end="17:43">

            <return pos:start="17:13" pos:end="17:43">return <expr pos:start="17:20" pos:end="17:42"><name pos:start="17:20" pos:end="17:42">AVPROBE_SCORE_EXTENSION</name></expr>;</return></block_content></block></if></if_stmt>



        <while pos:start="21:9" pos:end="21:48">while <condition pos:start="21:15" pos:end="21:43">(<expr pos:start="21:16" pos:end="21:42"><name pos:start="21:16" pos:end="21:16">p</name> <operator pos:start="21:18" pos:end="21:18">&lt;</operator> <name pos:start="21:20" pos:end="21:24">p_end</name> <operator pos:start="21:26" pos:end="21:26">-</operator> <literal type="number" pos:start="21:28" pos:end="21:28">1</literal> <operator pos:start="21:30" pos:end="21:31">&amp;&amp;</operator> <operator pos:start="21:33" pos:end="21:33">*</operator><name pos:start="21:34" pos:end="21:34">p</name> <operator pos:start="21:36" pos:end="21:37">!=</operator> <literal type="char" pos:start="21:39" pos:end="21:42">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="21:45" pos:end="21:48"><block_content pos:start="21:45" pos:end="21:48"> <expr_stmt pos:start="21:45" pos:end="21:48"><expr pos:start="21:45" pos:end="21:47"><name pos:start="21:45" pos:end="21:45">p</name><operator pos:start="21:46" pos:end="21:47">++</operator></expr>;</expr_stmt></block_content></block></while>

        <if_stmt pos:start="23:9" pos:end="25:18"><if pos:start="23:9" pos:end="25:18">if <condition pos:start="23:12" pos:end="23:25">(<expr pos:start="23:13" pos:end="23:24"><operator pos:start="23:13" pos:end="23:14">++</operator><name pos:start="23:15" pos:end="23:15">p</name> <operator pos:start="23:17" pos:end="23:18">&gt;=</operator> <name pos:start="23:20" pos:end="23:24">p_end</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:18"><block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="29:16"><if pos:start="27:9" pos:end="29:16">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:14">p</name> <operator pos:start="27:16" pos:end="27:17">==</operator> <literal type="char" pos:start="27:19" pos:end="27:22">'\r'</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:16"><block_content pos:start="29:13" pos:end="29:16">

            <expr_stmt pos:start="29:13" pos:end="29:16"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:13">p</name><operator pos:start="29:14" pos:end="29:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
