<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17848.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">decode_frame_apng</name><parameter_list pos:start="1:29" pos:end="5:40">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">got_frame</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:39"><decl pos:start="5:25" pos:end="5:39"><type pos:start="5:25" pos:end="5:39"><name pos:start="5:25" pos:end="5:32">AVPacket</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="133:1">{<block_content pos:start="9:5" pos:end="131:15">

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:17">PNGDecContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier><specifier pos:start="9:20" pos:end="9:24">const</specifier></type> <name pos:start="9:26" pos:end="9:26">s</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:14">p</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><call pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:28">ff_thread_release_buffer</name><argument_list pos:start="17:29" pos:end="17:53">(<argument pos:start="17:30" pos:end="17:34"><expr pos:start="17:30" pos:end="17:34"><name pos:start="17:30" pos:end="17:34">avctx</name></expr></argument>, <argument pos:start="17:37" pos:end="17:52"><expr pos:start="17:37" pos:end="17:52"><operator pos:start="17:37" pos:end="17:37">&amp;</operator><name pos:start="17:38" pos:end="17:52"><name pos:start="17:38" pos:end="17:38">s</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:52">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:53"><expr pos:start="19:5" pos:end="19:52"><call pos:start="19:5" pos:end="19:52"><name pos:start="19:5" pos:end="19:10">FFSWAP</name><argument_list pos:start="19:11" pos:end="19:52">(<argument pos:start="19:12" pos:end="19:22"><expr pos:start="19:12" pos:end="19:22"><name pos:start="19:12" pos:end="19:22">ThreadFrame</name></expr></argument>, <argument pos:start="19:25" pos:end="19:34"><expr pos:start="19:25" pos:end="19:34"><name pos:start="19:25" pos:end="19:34"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:34">picture</name></name></expr></argument>, <argument pos:start="19:37" pos:end="19:51"><expr pos:start="19:37" pos:end="19:51"><name pos:start="19:37" pos:end="19:51"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:51">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">p</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:18">picture</name><operator pos:start="21:19" pos:end="21:19">.</operator><name pos:start="21:20" pos:end="21:20">f</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="75:5"><if pos:start="25:5" pos:end="75:5">if <condition pos:start="25:8" pos:end="25:31">(<expr pos:start="25:9" pos:end="25:30"><operator pos:start="25:9" pos:end="25:9">!</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:18"><name pos:start="25:11" pos:end="25:11">s</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:18">state</name></name> <operator pos:start="25:20" pos:end="25:20">&amp;</operator> <name pos:start="25:22" pos:end="25:29">PNG_IHDR</name><operator pos:start="25:30" pos:end="25:30">)</operator></expr>)</condition> <block pos:start="25:33" pos:end="75:5">{<block_content pos:start="27:9" pos:end="73:21">

        <decl_stmt pos:start="27:9" pos:end="27:31"><decl pos:start="27:9" pos:end="27:30"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:26">side_data_size</name> <init pos:start="27:28" pos:end="27:30">= <expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:34"><decl pos:start="29:9" pos:end="29:33"><type pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:15">uint8_t</name> <modifier pos:start="29:17" pos:end="29:17">*</modifier></type><name pos:start="29:18" pos:end="29:26">side_data</name> <init pos:start="29:28" pos:end="29:33">= <expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">NULL</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="31:9" pos:end="33:99"><if pos:start="31:9" pos:end="33:99">if <condition pos:start="31:12" pos:end="31:18">(<expr pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:17">avpkt</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:99"><block_content pos:start="33:13" pos:end="33:99">

            <expr_stmt pos:start="33:13" pos:end="33:99"><expr pos:start="33:13" pos:end="33:98"><name pos:start="33:13" pos:end="33:21">side_data</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:98"><name pos:start="33:25" pos:end="33:47">av_packet_get_side_data</name><argument_list pos:start="33:48" pos:end="33:98">(<argument pos:start="33:49" pos:end="33:53"><expr pos:start="33:49" pos:end="33:53"><name pos:start="33:49" pos:end="33:53">avpkt</name></expr></argument>, <argument pos:start="33:56" pos:end="33:80"><expr pos:start="33:56" pos:end="33:80"><name pos:start="33:56" pos:end="33:80">AV_PKT_DATA_NEW_EXTRADATA</name></expr></argument>, <argument pos:start="33:83" pos:end="33:97"><expr pos:start="33:83" pos:end="33:97"><operator pos:start="33:83" pos:end="33:83">&amp;</operator><name pos:start="33:84" pos:end="33:97">side_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="37:9" pos:end="51:9"><if pos:start="37:9" pos:end="51:9">if <condition pos:start="37:12" pos:end="37:27">(<expr pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:26">side_data_size</name></expr>)</condition> <block pos:start="37:29" pos:end="51:9">{<block_content pos:start="39:13" pos:end="49:65">

            <expr_stmt pos:start="39:13" pos:end="39:37"><expr pos:start="39:13" pos:end="39:36"><call pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:20">av_freep</name><argument_list pos:start="39:21" pos:end="39:36">(<argument pos:start="39:22" pos:end="39:35"><expr pos:start="39:22" pos:end="39:35"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:35"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:35">extra_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:86"><expr pos:start="41:13" pos:end="41:85"><name pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:25">extra_data</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="41:85"><name pos:start="41:29" pos:end="41:38">av_mallocz</name><argument_list pos:start="41:39" pos:end="41:85">(<argument pos:start="41:40" pos:end="41:84"><expr pos:start="41:40" pos:end="41:84"><name pos:start="41:40" pos:end="41:53">side_data_size</name> <operator pos:start="41:55" pos:end="41:55">+</operator> <name pos:start="41:57" pos:end="41:84">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:39"><if pos:start="43:13" pos:end="45:39">if <condition pos:start="43:16" pos:end="43:31">(<expr pos:start="43:17" pos:end="43:30"><operator pos:start="43:17" pos:end="43:17">!</operator><name pos:start="43:18" pos:end="43:30"><name pos:start="43:18" pos:end="43:18">s</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:30">extra_data</name></name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:39"><block_content pos:start="45:17" pos:end="45:39">

                <return pos:start="45:17" pos:end="45:39">return <expr pos:start="45:24" pos:end="45:38"><call pos:start="45:24" pos:end="45:38"><name pos:start="45:24" pos:end="45:30">AVERROR</name><argument_list pos:start="45:31" pos:end="45:38">(<argument pos:start="45:32" pos:end="45:37"><expr pos:start="45:32" pos:end="45:37"><name pos:start="45:32" pos:end="45:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:48"><expr pos:start="47:13" pos:end="47:47"><name pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:30">extra_data_size</name></name> <operator pos:start="47:32" pos:end="47:32">=</operator> <name pos:start="47:34" pos:end="47:47">side_data_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:65"><expr pos:start="49:13" pos:end="49:64"><call pos:start="49:13" pos:end="49:64"><name pos:start="49:13" pos:end="49:18">memcpy</name><argument_list pos:start="49:19" pos:end="49:64">(<argument pos:start="49:20" pos:end="49:32"><expr pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:32">extra_data</name></name></expr></argument>, <argument pos:start="49:35" pos:end="49:43"><expr pos:start="49:35" pos:end="49:43"><name pos:start="49:35" pos:end="49:43">side_data</name></expr></argument>, <argument pos:start="49:46" pos:end="49:63"><expr pos:start="49:46" pos:end="49:63"><name pos:start="49:46" pos:end="49:63"><name pos:start="49:46" pos:end="49:46">s</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:63">extra_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="55:9" pos:end="57:39"><if pos:start="55:9" pos:end="57:39">if <condition pos:start="55:12" pos:end="55:32">(<expr pos:start="55:13" pos:end="55:31"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:31"><name pos:start="55:14" pos:end="55:14">s</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:31">extra_data_size</name></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:39"><block_content pos:start="57:13" pos:end="57:39">

            <return pos:start="57:13" pos:end="57:39">return <expr pos:start="57:20" pos:end="57:38"><name pos:start="57:20" pos:end="57:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="61:9" pos:end="61:65">/* only init fields, there is no zlib use in extradata */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:42"><expr pos:start="63:9" pos:end="63:41"><name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:18">zstream</name><operator pos:start="63:19" pos:end="63:19">.</operator><name pos:start="63:20" pos:end="63:25">zalloc</name></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <name pos:start="63:29" pos:end="63:41">ff_png_zalloc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:18">zstream</name><operator pos:start="65:19" pos:end="65:19">.</operator><name pos:start="65:20" pos:end="65:24">zfree</name></name>  <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:40">ff_png_zfree</name></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:68"><expr pos:start="69:9" pos:end="69:67"><call pos:start="69:9" pos:end="69:67"><name pos:start="69:9" pos:end="69:24">bytestream2_init</name><argument_list pos:start="69:25" pos:end="69:67">(<argument pos:start="69:26" pos:end="69:31"><expr pos:start="69:26" pos:end="69:31"><operator pos:start="69:26" pos:end="69:26">&amp;</operator><name pos:start="69:27" pos:end="69:31"><name pos:start="69:27" pos:end="69:27">s</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:31">gb</name></name></expr></argument>, <argument pos:start="69:34" pos:end="69:46"><expr pos:start="69:34" pos:end="69:46"><name pos:start="69:34" pos:end="69:46"><name pos:start="69:34" pos:end="69:34">s</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:46">extra_data</name></name></expr></argument>, <argument pos:start="69:49" pos:end="69:66"><expr pos:start="69:49" pos:end="69:66"><name pos:start="69:49" pos:end="69:66"><name pos:start="69:49" pos:end="69:49">s</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:66">extra_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:21"><if pos:start="71:9" pos:end="73:21">if <condition pos:start="71:12" pos:end="71:64">(<expr pos:start="71:13" pos:end="71:63"><operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:16">ret</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:58"><name pos:start="71:20" pos:end="71:38">decode_frame_common</name><argument_list pos:start="71:39" pos:end="71:58">(<argument pos:start="71:40" pos:end="71:44"><expr pos:start="71:40" pos:end="71:44"><name pos:start="71:40" pos:end="71:44">avctx</name></expr></argument>, <argument pos:start="71:47" pos:end="71:47"><expr pos:start="71:47" pos:end="71:47"><name pos:start="71:47" pos:end="71:47">s</name></expr></argument>, <argument pos:start="71:50" pos:end="71:50"><expr pos:start="71:50" pos:end="71:50"><name pos:start="71:50" pos:end="71:50">p</name></expr></argument>, <argument pos:start="71:53" pos:end="71:57"><expr pos:start="71:53" pos:end="71:57"><name pos:start="71:53" pos:end="71:57">avpkt</name></expr></argument>)</argument_list></call><operator pos:start="71:59" pos:end="71:59">)</operator> <operator pos:start="71:61" pos:end="71:61">&lt;</operator> <literal type="number" pos:start="71:63" pos:end="71:63">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:21"><block_content pos:start="73:13" pos:end="73:21">

            <goto pos:start="73:13" pos:end="73:21">goto <name pos:start="73:18" pos:end="73:20">end</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:37">/* reset state for a new frame */</comment>

    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:49">(<expr pos:start="81:9" pos:end="81:48"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:12">ret</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="81:39"><name pos:start="81:16" pos:end="81:26">inflateInit</name><argument_list pos:start="81:27" pos:end="81:39">(<argument pos:start="81:28" pos:end="81:38"><expr pos:start="81:28" pos:end="81:38"><operator pos:start="81:28" pos:end="81:28">&amp;</operator><name pos:start="81:29" pos:end="81:38"><name pos:start="81:29" pos:end="81:29">s</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:38">zstream</name></name></expr></argument>)</argument_list></call><operator pos:start="81:40" pos:end="81:40">)</operator> <operator pos:start="81:42" pos:end="81:43">!=</operator> <name pos:start="81:45" pos:end="81:48">Z_OK</name></expr>)</condition> <block pos:start="81:51" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:17">

        <expr_stmt pos:start="83:9" pos:end="83:76"><expr pos:start="83:9" pos:end="83:75"><call pos:start="83:9" pos:end="83:75"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="83:75">(<argument pos:start="83:16" pos:end="83:20"><expr pos:start="83:16" pos:end="83:20"><name pos:start="83:16" pos:end="83:20">avctx</name></expr></argument>, <argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:37" pos:end="83:69"><expr pos:start="83:37" pos:end="83:69"><literal type="string" pos:start="83:37" pos:end="83:69">"inflateInit returned error %d\n"</literal></expr></argument>, <argument pos:start="83:72" pos:end="83:74"><expr pos:start="83:72" pos:end="83:74"><name pos:start="83:72" pos:end="83:74">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <name pos:start="85:15" pos:end="85:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="87:9" pos:end="87:17">goto <name pos:start="87:14" pos:end="87:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:13"><expr pos:start="91:5" pos:end="91:12"><name pos:start="91:5" pos:end="91:8"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:8">y</name></name> <operator pos:start="91:10" pos:end="91:10">=</operator> <literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:43"><expr pos:start="93:5" pos:end="93:42"><name pos:start="93:5" pos:end="93:12"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:12">state</name></name> <operator pos:start="93:14" pos:end="93:15">&amp;=</operator> <operator pos:start="93:17" pos:end="93:17">~</operator><operator pos:start="93:18" pos:end="93:18">(</operator><name pos:start="93:19" pos:end="93:26">PNG_IDAT</name> <operator pos:start="93:28" pos:end="93:28">|</operator> <name pos:start="93:30" pos:end="93:41">PNG_ALLIMAGE</name><operator pos:start="93:42" pos:end="93:42">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:55"><expr pos:start="95:5" pos:end="95:54"><call pos:start="95:5" pos:end="95:54"><name pos:start="95:5" pos:end="95:20">bytestream2_init</name><argument_list pos:start="95:21" pos:end="95:54">(<argument pos:start="95:22" pos:end="95:27"><expr pos:start="95:22" pos:end="95:27"><operator pos:start="95:22" pos:end="95:22">&amp;</operator><name pos:start="95:23" pos:end="95:27"><name pos:start="95:23" pos:end="95:23">s</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:27">gb</name></name></expr></argument>, <argument pos:start="95:30" pos:end="95:40"><expr pos:start="95:30" pos:end="95:40"><name pos:start="95:30" pos:end="95:40"><name pos:start="95:30" pos:end="95:34">avpkt</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:40">data</name></name></expr></argument>, <argument pos:start="95:43" pos:end="95:53"><expr pos:start="95:43" pos:end="95:53"><name pos:start="95:43" pos:end="95:53"><name pos:start="95:43" pos:end="95:47">avpkt</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:17"><if pos:start="97:5" pos:end="99:17">if <condition pos:start="97:8" pos:end="97:60">(<expr pos:start="97:9" pos:end="97:59"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:12">ret</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <call pos:start="97:16" pos:end="97:54"><name pos:start="97:16" pos:end="97:34">decode_frame_common</name><argument_list pos:start="97:35" pos:end="97:54">(<argument pos:start="97:36" pos:end="97:40"><expr pos:start="97:36" pos:end="97:40"><name pos:start="97:36" pos:end="97:40">avctx</name></expr></argument>, <argument pos:start="97:43" pos:end="97:43"><expr pos:start="97:43" pos:end="97:43"><name pos:start="97:43" pos:end="97:43">s</name></expr></argument>, <argument pos:start="97:46" pos:end="97:46"><expr pos:start="97:46" pos:end="97:46"><name pos:start="97:46" pos:end="97:46">p</name></expr></argument>, <argument pos:start="97:49" pos:end="97:53"><expr pos:start="97:49" pos:end="97:53"><name pos:start="97:49" pos:end="97:53">avpkt</name></expr></argument>)</argument_list></call><operator pos:start="97:55" pos:end="97:55">)</operator> <operator pos:start="97:57" pos:end="97:57">&lt;</operator> <literal type="number" pos:start="97:59" pos:end="97:59">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:17"><block_content pos:start="99:9" pos:end="99:17">

        <goto pos:start="99:9" pos:end="99:17">goto <name pos:start="99:14" pos:end="99:16">end</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="105:82"><if pos:start="103:5" pos:end="105:82">if <condition pos:start="103:8" pos:end="103:35">(<expr pos:start="103:9" pos:end="103:34"><operator pos:start="103:9" pos:end="103:9">!</operator><operator pos:start="103:10" pos:end="103:10">(</operator><name pos:start="103:11" pos:end="103:18"><name pos:start="103:11" pos:end="103:11">s</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:18">state</name></name> <operator pos:start="103:20" pos:end="103:20">&amp;</operator> <name pos:start="103:22" pos:end="103:33">PNG_ALLIMAGE</name><operator pos:start="103:34" pos:end="103:34">)</operator></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:82"><block_content pos:start="105:9" pos:end="105:82">

        <expr_stmt pos:start="105:9" pos:end="105:82"><expr pos:start="105:9" pos:end="105:81"><call pos:start="105:9" pos:end="105:81"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:81">(<argument pos:start="105:16" pos:end="105:20"><expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">avctx</name></expr></argument>, <argument pos:start="105:23" pos:end="105:36"><expr pos:start="105:23" pos:end="105:36"><name pos:start="105:23" pos:end="105:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="105:39" pos:end="105:80"><expr pos:start="105:39" pos:end="105:80"><literal type="string" pos:start="105:39" pos:end="105:80">"Frame did not contain a complete image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:46">(<expr pos:start="107:9" pos:end="107:45"><operator pos:start="107:9" pos:end="107:9">!</operator><operator pos:start="107:10" pos:end="107:10">(</operator><name pos:start="107:11" pos:end="107:18"><name pos:start="107:11" pos:end="107:11">s</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:18">state</name></name> <operator pos:start="107:20" pos:end="107:20">&amp;</operator> <operator pos:start="107:22" pos:end="107:22">(</operator><name pos:start="107:23" pos:end="107:34">PNG_ALLIMAGE</name><operator pos:start="107:35" pos:end="107:35">|</operator><name pos:start="107:36" pos:end="107:43">PNG_IDAT</name><operator pos:start="107:44" pos:end="107:44">)</operator><operator pos:start="107:45" pos:end="107:45">)</operator></expr>)</condition> <block pos:start="107:48" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:17">

        <expr_stmt pos:start="109:9" pos:end="109:34"><expr pos:start="109:9" pos:end="109:33"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <name pos:start="109:15" pos:end="109:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:17">goto <name pos:start="111:14" pos:end="111:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="117:17"><if pos:start="115:5" pos:end="117:17">if <condition pos:start="115:8" pos:end="115:53">(<expr pos:start="115:9" pos:end="115:52"><operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:12">ret</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="115:47"><name pos:start="115:16" pos:end="115:27">av_frame_ref</name><argument_list pos:start="115:28" pos:end="115:47">(<argument pos:start="115:29" pos:end="115:32"><expr pos:start="115:29" pos:end="115:32"><name pos:start="115:29" pos:end="115:32">data</name></expr></argument>, <argument pos:start="115:35" pos:end="115:46"><expr pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:35">s</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:44">picture</name><operator pos:start="115:45" pos:end="115:45">.</operator><name pos:start="115:46" pos:end="115:46">f</name></name></expr></argument>)</argument_list></call><operator pos:start="115:48" pos:end="115:48">)</operator> <operator pos:start="115:50" pos:end="115:50">&lt;</operator> <literal type="number" pos:start="115:52" pos:end="115:52">0</literal></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:17"><block_content pos:start="117:9" pos:end="117:17">

        <goto pos:start="117:9" pos:end="117:17">goto <name pos:start="117:14" pos:end="117:16">end</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:19"><expr pos:start="121:5" pos:end="121:18"><operator pos:start="121:5" pos:end="121:5">*</operator><name pos:start="121:6" pos:end="121:14">got_frame</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:35"><expr pos:start="123:5" pos:end="123:34"><name pos:start="123:5" pos:end="123:7">ret</name> <operator pos:start="123:9" pos:end="123:9">=</operator> <call pos:start="123:11" pos:end="123:34"><name pos:start="123:11" pos:end="123:26">bytestream2_tell</name><argument_list pos:start="123:27" pos:end="123:34">(<argument pos:start="123:28" pos:end="123:33"><expr pos:start="123:28" pos:end="123:33"><operator pos:start="123:28" pos:end="123:28">&amp;</operator><name pos:start="123:29" pos:end="123:33"><name pos:start="123:29" pos:end="123:29">s</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="127:1" pos:end="127:4"><name pos:start="127:1" pos:end="127:3">end</name>:</label>

    <expr_stmt pos:start="129:5" pos:end="129:28"><expr pos:start="129:5" pos:end="129:27"><call pos:start="129:5" pos:end="129:27"><name pos:start="129:5" pos:end="129:14">inflateEnd</name><argument_list pos:start="129:15" pos:end="129:27">(<argument pos:start="129:16" pos:end="129:26"><expr pos:start="129:16" pos:end="129:26"><operator pos:start="129:16" pos:end="129:16">&amp;</operator><name pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:26">zstream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="131:5" pos:end="131:15">return <expr pos:start="131:12" pos:end="131:14"><name pos:start="131:12" pos:end="131:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
