<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/692.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mxg_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="233:1">{<block_content pos:start="5:5" pos:end="231:23">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:28">startmarker_ptr</name></decl>, <decl pos:start="9:31" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:34">end</name></decl>, <decl pos:start="9:37" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:37" pos:end="9:37">*</modifier></type><name pos:start="9:38" pos:end="9:47">search_end</name></decl>, <decl pos:start="9:50" pos:end="9:55"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:50" pos:end="9:55">marker</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">MXGContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:19">mxg</name> <init pos:start="11:21" pos:end="11:34">= <expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:34">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="227:5">while <condition pos:start="15:11" pos:end="15:46">(<expr pos:start="15:12" pos:end="15:45"><operator pos:start="15:12" pos:end="15:12">!</operator><call pos:start="15:13" pos:end="15:28"><name pos:start="15:13" pos:end="15:21">avio_feof</name><argument_list pos:start="15:22" pos:end="15:28">(<argument pos:start="15:23" pos:end="15:27"><expr pos:start="15:23" pos:end="15:27"><name pos:start="15:23" pos:end="15:27"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:27">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:30" pos:end="15:31">&amp;&amp;</operator> <operator pos:start="15:33" pos:end="15:33">!</operator><name pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:34">s</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:38">pb</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:45">error</name></name></expr>)</condition><block pos:start="15:47" pos:end="227:5">{<block_content pos:start="17:9" pos:end="225:9">

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="27:9">if <condition pos:start="17:12" pos:end="17:45">(<expr pos:start="17:13" pos:end="17:44"><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:15">mxg</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:27">cache_size</name></name> <operator pos:start="17:29" pos:end="17:30">&lt;=</operator> <name pos:start="17:32" pos:end="17:44">OVERREAD_SIZE</name></expr>)</condition> <block pos:start="17:47" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:27">

            <comment type="block" pos:start="19:13" pos:end="19:40">/* update internal buffer */</comment>

            <expr_stmt pos:start="21:13" pos:end="21:75"><expr pos:start="21:13" pos:end="21:74"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:74"><name pos:start="21:19" pos:end="21:34">mxg_update_cache</name><argument_list pos:start="21:35" pos:end="21:74">(<argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><name pos:start="21:36" pos:end="21:36">s</name></expr></argument>, <argument pos:start="21:39" pos:end="21:73"><expr pos:start="21:39" pos:end="21:73"><name pos:start="21:39" pos:end="21:57">DEFAULT_PACKET_SIZE</name> <operator pos:start="21:59" pos:end="21:59">+</operator> <name pos:start="21:61" pos:end="21:73">OVERREAD_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="25:27"><if pos:start="23:13" pos:end="25:27">if <condition pos:start="23:16" pos:end="23:24">(<expr pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:19">ret</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:27"><block_content pos:start="25:17" pos:end="25:27">

                <return pos:start="25:17" pos:end="25:27">return <expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:11">end</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:29"><name pos:start="29:15" pos:end="29:17">mxg</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:29">buffer_ptr</name></name> <operator pos:start="29:31" pos:end="29:31">+</operator> <name pos:start="29:33" pos:end="29:47"><name pos:start="29:33" pos:end="29:35">mxg</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:47">cache_size</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="33:9" pos:end="33:38">/* find start marker - 0xff */</comment>

        <if_stmt pos:start="35:9" pos:end="51:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:44">(<expr pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:15">mxg</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:27">cache_size</name></name> <operator pos:start="35:29" pos:end="35:29">&gt;</operator> <name pos:start="35:31" pos:end="35:43">OVERREAD_SIZE</name></expr>)</condition> <block pos:start="35:46" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:80">

            <expr_stmt pos:start="37:13" pos:end="37:45"><expr pos:start="37:13" pos:end="37:44"><name pos:start="37:13" pos:end="37:22">search_end</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:28">end</name> <operator pos:start="37:30" pos:end="37:30">-</operator> <name pos:start="37:32" pos:end="37:44">OVERREAD_SIZE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:80"><expr pos:start="39:13" pos:end="39:79"><name pos:start="39:13" pos:end="39:27">startmarker_ptr</name> <operator pos:start="39:29" pos:end="39:29">=</operator> <call pos:start="39:31" pos:end="39:79"><name pos:start="39:31" pos:end="39:50">mxg_find_startmarker</name><argument_list pos:start="39:51" pos:end="39:79">(<argument pos:start="39:52" pos:end="39:66"><expr pos:start="39:52" pos:end="39:66"><name pos:start="39:52" pos:end="39:66"><name pos:start="39:52" pos:end="39:54">mxg</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:66">buffer_ptr</name></name></expr></argument>, <argument pos:start="39:69" pos:end="39:78"><expr pos:start="39:69" pos:end="39:78"><name pos:start="39:69" pos:end="39:78">search_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="51:9">else <block pos:start="41:16" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:53">

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:22">search_end</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:28">end</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:80"><expr pos:start="45:13" pos:end="45:79"><name pos:start="45:13" pos:end="45:27">startmarker_ptr</name> <operator pos:start="45:29" pos:end="45:29">=</operator> <call pos:start="45:31" pos:end="45:79"><name pos:start="45:31" pos:end="45:50">mxg_find_startmarker</name><argument_list pos:start="45:51" pos:end="45:79">(<argument pos:start="45:52" pos:end="45:66"><expr pos:start="45:52" pos:end="45:66"><name pos:start="45:52" pos:end="45:66"><name pos:start="45:52" pos:end="45:54">mxg</name><operator pos:start="45:55" pos:end="45:56">-&gt;</operator><name pos:start="45:57" pos:end="45:66">buffer_ptr</name></name></expr></argument>, <argument pos:start="45:69" pos:end="45:78"><expr pos:start="45:69" pos:end="45:78"><name pos:start="45:69" pos:end="45:78">search_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="49:53"><if pos:start="47:13" pos:end="49:53">if <condition pos:start="47:16" pos:end="49:46">(<expr pos:start="47:17" pos:end="49:45"><name pos:start="47:17" pos:end="47:31">startmarker_ptr</name> <operator pos:start="47:33" pos:end="47:34">&gt;=</operator> <name pos:start="47:36" pos:end="47:45">search_end</name> <operator pos:start="47:47" pos:end="47:47">-</operator> <literal type="number" pos:start="47:49" pos:end="47:49">1</literal> <operator pos:start="47:51" pos:end="47:52">||</operator>

                <operator pos:start="49:17" pos:end="49:17">*</operator><operator pos:start="49:18" pos:end="49:18">(</operator><name pos:start="49:19" pos:end="49:33">startmarker_ptr</name> <operator pos:start="49:35" pos:end="49:35">+</operator> <literal type="number" pos:start="49:37" pos:end="49:37">1</literal><operator pos:start="49:38" pos:end="49:38">)</operator> <operator pos:start="49:40" pos:end="49:41">!=</operator> <name pos:start="49:43" pos:end="49:45">EOI</name></expr>)</condition><block type="pseudo" pos:start="49:48" pos:end="49:53"><block_content pos:start="49:48" pos:end="49:53"> <break pos:start="49:48" pos:end="49:53">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="55:9" pos:end="225:9"><if pos:start="55:9" pos:end="217:9">if <condition pos:start="55:12" pos:end="55:42">(<expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:27">startmarker_ptr</name> <operator pos:start="55:29" pos:end="55:30">!=</operator> <name pos:start="55:32" pos:end="55:41">search_end</name></expr>)</condition> <block pos:start="55:44" pos:end="217:9">{<block_content pos:start="57:13" pos:end="215:13"> <comment type="block" pos:start="55:46" pos:end="55:69">/* start marker found */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:44"><expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:18">marker</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <operator pos:start="57:22" pos:end="57:22">*</operator><operator pos:start="57:23" pos:end="57:23">(</operator><name pos:start="57:24" pos:end="57:38">startmarker_ptr</name> <operator pos:start="57:40" pos:end="57:40">+</operator> <literal type="number" pos:start="57:42" pos:end="57:42">1</literal><operator pos:start="57:43" pos:end="57:43">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:50"><expr pos:start="59:13" pos:end="59:49"><name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:15">mxg</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:27">buffer_ptr</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:45">startmarker_ptr</name> <operator pos:start="59:47" pos:end="59:47">+</operator> <literal type="number" pos:start="59:49" pos:end="59:49">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:52"><expr pos:start="61:13" pos:end="61:51"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:15">mxg</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:27">cache_size</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <name pos:start="61:31" pos:end="61:33">end</name> <operator pos:start="61:35" pos:end="61:35">-</operator> <name pos:start="61:37" pos:end="61:51"><name pos:start="61:37" pos:end="61:39">mxg</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:51">buffer_ptr</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="65:13" pos:end="215:13"><if pos:start="65:13" pos:end="69:13">if <condition pos:start="65:16" pos:end="65:30">(<expr pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:22">marker</name> <operator pos:start="65:24" pos:end="65:25">==</operator> <name pos:start="65:27" pos:end="65:29">SOI</name></expr>)</condition> <block pos:start="65:32" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:47">

                <expr_stmt pos:start="67:17" pos:end="67:47"><expr pos:start="67:17" pos:end="67:46"><name pos:start="67:17" pos:end="67:28"><name pos:start="67:17" pos:end="67:19">mxg</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:28">soi_ptr</name></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <name pos:start="67:32" pos:end="67:46">startmarker_ptr</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="69:15" pos:end="123:13">else if <condition pos:start="69:23" pos:end="69:37">(<expr pos:start="69:24" pos:end="69:36"><name pos:start="69:24" pos:end="69:29">marker</name> <operator pos:start="69:31" pos:end="69:32">==</operator> <name pos:start="69:34" pos:end="69:36">EOI</name></expr>)</condition> <block pos:start="69:39" pos:end="123:13">{<block_content pos:start="71:17" pos:end="121:33">

                <if_stmt pos:start="71:17" pos:end="77:17"><if pos:start="71:17" pos:end="77:17">if <condition pos:start="71:20" pos:end="71:34">(<expr pos:start="71:21" pos:end="71:33"><operator pos:start="71:21" pos:end="71:21">!</operator><name pos:start="71:22" pos:end="71:33"><name pos:start="71:22" pos:end="71:24">mxg</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:33">soi_ptr</name></name></expr>)</condition> <block pos:start="71:36" pos:end="77:17">{<block_content pos:start="73:21" pos:end="75:29">

                    <expr_stmt pos:start="73:21" pos:end="73:82"><expr pos:start="73:21" pos:end="73:81"><call pos:start="73:21" pos:end="73:81"><name pos:start="73:21" pos:end="73:26">av_log</name><argument_list pos:start="73:27" pos:end="73:81">(<argument pos:start="73:28" pos:end="73:28"><expr pos:start="73:28" pos:end="73:28"><name pos:start="73:28" pos:end="73:28">s</name></expr></argument>, <argument pos:start="73:31" pos:end="73:44"><expr pos:start="73:31" pos:end="73:44"><name pos:start="73:31" pos:end="73:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="73:47" pos:end="73:80"><expr pos:start="73:47" pos:end="73:80"><literal type="string" pos:start="73:47" pos:end="73:80">"Found EOI before SOI, skipping\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="75:21" pos:end="75:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="81:17" pos:end="81:47"><expr pos:start="81:17" pos:end="81:46"><name pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:19">pkt</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:24">pts</name></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:35"><name pos:start="81:28" pos:end="81:30">pkt</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:35">dts</name></name> <operator pos:start="81:37" pos:end="81:37">=</operator> <name pos:start="81:39" pos:end="81:46"><name pos:start="81:39" pos:end="81:41">mxg</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:46">dts</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="86:0"><expr pos:start="83:17" pos:end="83:37"><name pos:start="83:17" pos:end="83:33"><name pos:start="83:17" pos:end="83:19">pkt</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:33">stream_index</name></name> <operator pos:start="83:35" pos:end="83:35">=</operator> <literal type="number" pos:start="83:37" pos:end="83:37">0</literal></expr>;</expr_stmt>

<cpp:if pos:start="85:1" pos:end="85:26">#<cpp:directive pos:start="85:2" pos:end="85:3">if</cpp:directive> <expr pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:26">FF_API_DESTRUCT_PACKET</name></expr></cpp:if>

<decl_stmt pos:start="87:1" pos:end="89:37"><decl pos:start="87:1" pos:end="89:36"><type pos:start="87:1" pos:end="87:31"><name pos:start="87:1" pos:end="87:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

                <name pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:19">pkt</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:29">destruct</name></name> <init pos:start="89:31" pos:end="89:36">= <expr pos:start="89:33" pos:end="89:36"><name pos:start="89:33" pos:end="89:36">NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="91:1" pos:end="95:33"><decl pos:start="91:1" pos:end="95:32"><type pos:start="91:1" pos:end="94:0"><name pos:start="91:1" pos:end="94:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="93:1" pos:end="93:6">#<cpp:directive pos:start="93:2" pos:end="93:6">endif</cpp:directive></cpp:endif>

                <name pos:start="95:17" pos:end="95:24"><name pos:start="95:17" pos:end="95:19">pkt</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:24">buf</name></name>  <init pos:start="95:27" pos:end="95:32">= <expr pos:start="95:29" pos:end="95:32"><name pos:start="95:29" pos:end="95:32">NULL</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:59"><expr pos:start="97:17" pos:end="97:58"><name pos:start="97:17" pos:end="97:25"><name pos:start="97:17" pos:end="97:19">pkt</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:25">size</name></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <name pos:start="97:29" pos:end="97:43"><name pos:start="97:29" pos:end="97:31">mxg</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:43">buffer_ptr</name></name> <operator pos:start="97:45" pos:end="97:45">-</operator> <name pos:start="97:47" pos:end="97:58"><name pos:start="97:47" pos:end="97:49">mxg</name><operator pos:start="97:50" pos:end="97:51">-&gt;</operator><name pos:start="97:52" pos:end="97:58">soi_ptr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:41"><expr pos:start="99:17" pos:end="99:40"><name pos:start="99:17" pos:end="99:25"><name pos:start="99:17" pos:end="99:19">pkt</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:25">data</name></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:40"><name pos:start="99:29" pos:end="99:31">mxg</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:40">soi_ptr</name></name></expr>;</expr_stmt>



                <if_stmt pos:start="103:17" pos:end="115:17"><if pos:start="103:17" pos:end="115:17">if <condition pos:start="103:20" pos:end="103:65">(<expr pos:start="103:21" pos:end="103:64"><name pos:start="103:21" pos:end="103:32"><name pos:start="103:21" pos:end="103:23">mxg</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:32">soi_ptr</name></name> <operator pos:start="103:34" pos:end="103:34">-</operator> <name pos:start="103:36" pos:end="103:46"><name pos:start="103:36" pos:end="103:38">mxg</name><operator pos:start="103:39" pos:end="103:40">-&gt;</operator><name pos:start="103:41" pos:end="103:46">buffer</name></name> <operator pos:start="103:48" pos:end="103:48">&gt;</operator> <name pos:start="103:50" pos:end="103:64"><name pos:start="103:50" pos:end="103:52">mxg</name><operator pos:start="103:53" pos:end="103:54">-&gt;</operator><name pos:start="103:55" pos:end="103:64">cache_size</name></name></expr>)</condition> <block pos:start="103:67" pos:end="115:17">{<block_content pos:start="105:21" pos:end="113:50">

                    <if_stmt pos:start="105:21" pos:end="109:21"><if pos:start="105:21" pos:end="109:21">if <condition pos:start="105:24" pos:end="105:44">(<expr pos:start="105:25" pos:end="105:43"><name pos:start="105:25" pos:end="105:39"><name pos:start="105:25" pos:end="105:27">mxg</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:39">cache_size</name></name> <operator pos:start="105:41" pos:end="105:41">&gt;</operator> <literal type="number" pos:start="105:43" pos:end="105:43">0</literal></expr>)</condition> <block pos:start="105:46" pos:end="109:21">{<block_content pos:start="107:25" pos:end="107:78">

                        <expr_stmt pos:start="107:25" pos:end="107:78"><expr pos:start="107:25" pos:end="107:77"><call pos:start="107:25" pos:end="107:77"><name pos:start="107:25" pos:end="107:30">memcpy</name><argument_list pos:start="107:31" pos:end="107:77">(<argument pos:start="107:32" pos:end="107:42"><expr pos:start="107:32" pos:end="107:42"><name pos:start="107:32" pos:end="107:42"><name pos:start="107:32" pos:end="107:34">mxg</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:42">buffer</name></name></expr></argument>, <argument pos:start="107:45" pos:end="107:59"><expr pos:start="107:45" pos:end="107:59"><name pos:start="107:45" pos:end="107:59"><name pos:start="107:45" pos:end="107:47">mxg</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:59">buffer_ptr</name></name></expr></argument>, <argument pos:start="107:62" pos:end="107:76"><expr pos:start="107:62" pos:end="107:76"><name pos:start="107:62" pos:end="107:76"><name pos:start="107:62" pos:end="107:64">mxg</name><operator pos:start="107:65" pos:end="107:66">-&gt;</operator><name pos:start="107:67" pos:end="107:76">cache_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="113:21" pos:end="113:50"><expr pos:start="113:21" pos:end="113:49"><name pos:start="113:21" pos:end="113:35"><name pos:start="113:21" pos:end="113:23">mxg</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:35">buffer_ptr</name></name> <operator pos:start="113:37" pos:end="113:37">=</operator> <name pos:start="113:39" pos:end="113:49"><name pos:start="113:39" pos:end="113:41">mxg</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:49">buffer</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:33"><expr pos:start="117:17" pos:end="117:32"><name pos:start="117:17" pos:end="117:28"><name pos:start="117:17" pos:end="117:19">mxg</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:28">soi_ptr</name></name> <operator pos:start="117:30" pos:end="117:30">=</operator> <literal type="number" pos:start="117:32" pos:end="117:32">0</literal></expr>;</expr_stmt>



                <return pos:start="121:17" pos:end="121:33">return <expr pos:start="121:24" pos:end="121:32"><name pos:start="121:24" pos:end="121:32"><name pos:start="121:24" pos:end="121:26">pkt</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:32">size</name></name></expr>;</return>

            </block_content>}</block></if> <if type="elseif" pos:start="123:15" pos:end="215:13">else if <condition pos:start="123:23" pos:end="125:59">( <expr pos:start="123:25" pos:end="125:57"><operator pos:start="123:25" pos:end="123:25">(</operator><name pos:start="123:26" pos:end="123:29">SOF0</name> <operator pos:start="123:31" pos:end="123:32">&lt;=</operator> <name pos:start="123:34" pos:end="123:39">marker</name> <operator pos:start="123:41" pos:end="123:42">&amp;&amp;</operator> <name pos:start="123:44" pos:end="123:49">marker</name> <operator pos:start="123:51" pos:end="123:52">&lt;=</operator> <name pos:start="123:54" pos:end="123:58">SOF15</name><operator pos:start="123:59" pos:end="123:59">)</operator> <operator pos:start="123:61" pos:end="123:62">||</operator>

                        <operator pos:start="125:25" pos:end="125:25">(</operator><name pos:start="125:26" pos:end="125:28">SOS</name>  <operator pos:start="125:31" pos:end="125:32">&lt;=</operator> <name pos:start="125:34" pos:end="125:39">marker</name> <operator pos:start="125:41" pos:end="125:42">&amp;&amp;</operator> <name pos:start="125:44" pos:end="125:49">marker</name> <operator pos:start="125:51" pos:end="125:52">&lt;=</operator> <name pos:start="125:54" pos:end="125:56">COM</name><operator pos:start="125:57" pos:end="125:57">)</operator></expr> )</condition> <block pos:start="125:61" pos:end="215:13">{<block_content pos:start="131:17" pos:end="213:17">

                <comment type="block" pos:start="127:17" pos:end="129:73">/* all other markers that start marker segment also contain

                   length value (see specification for JPEG Annex B.1) */</comment>

                <expr_stmt pos:start="131:17" pos:end="131:48"><expr pos:start="131:17" pos:end="131:47"><name pos:start="131:17" pos:end="131:20">size</name> <operator pos:start="131:22" pos:end="131:22">=</operator> <call pos:start="131:24" pos:end="131:47"><name pos:start="131:24" pos:end="131:30">AV_RB16</name><argument_list pos:start="131:31" pos:end="131:47">(<argument pos:start="131:32" pos:end="131:46"><expr pos:start="131:32" pos:end="131:46"><name pos:start="131:32" pos:end="131:46"><name pos:start="131:32" pos:end="131:34">mxg</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:46">buffer_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="133:17" pos:end="135:43"><if pos:start="133:17" pos:end="135:43">if <condition pos:start="133:20" pos:end="133:29">(<expr pos:start="133:21" pos:end="133:28"><name pos:start="133:21" pos:end="133:24">size</name> <operator pos:start="133:26" pos:end="133:26">&lt;</operator> <literal type="number" pos:start="133:28" pos:end="133:28">2</literal></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:43"><block_content pos:start="135:21" pos:end="135:43">

                    <return pos:start="135:21" pos:end="135:43">return <expr pos:start="135:28" pos:end="135:42"><call pos:start="135:28" pos:end="135:42"><name pos:start="135:28" pos:end="135:34">AVERROR</name><argument_list pos:start="135:35" pos:end="135:42">(<argument pos:start="135:36" pos:end="135:41"><expr pos:start="135:36" pos:end="135:41"><name pos:start="135:36" pos:end="135:41">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



                <if_stmt pos:start="139:17" pos:end="155:17"><if pos:start="139:17" pos:end="151:17">if <condition pos:start="139:20" pos:end="139:43">(<expr pos:start="139:21" pos:end="139:42"><name pos:start="139:21" pos:end="139:35"><name pos:start="139:21" pos:end="139:23">mxg</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:35">cache_size</name></name> <operator pos:start="139:37" pos:end="139:37">&lt;</operator> <name pos:start="139:39" pos:end="139:42">size</name></expr>)</condition> <block pos:start="139:45" pos:end="151:17">{<block_content pos:start="141:21" pos:end="149:40">

                    <expr_stmt pos:start="141:21" pos:end="141:52"><expr pos:start="141:21" pos:end="141:51"><name pos:start="141:21" pos:end="141:23">ret</name> <operator pos:start="141:25" pos:end="141:25">=</operator> <call pos:start="141:27" pos:end="141:51"><name pos:start="141:27" pos:end="141:42">mxg_update_cache</name><argument_list pos:start="141:43" pos:end="141:51">(<argument pos:start="141:44" pos:end="141:44"><expr pos:start="141:44" pos:end="141:44"><name pos:start="141:44" pos:end="141:44">s</name></expr></argument>, <argument pos:start="141:47" pos:end="141:50"><expr pos:start="141:47" pos:end="141:50"><name pos:start="141:47" pos:end="141:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="143:21" pos:end="145:35"><if pos:start="143:21" pos:end="145:35">if <condition pos:start="143:24" pos:end="143:32">(<expr pos:start="143:25" pos:end="143:31"><name pos:start="143:25" pos:end="143:27">ret</name> <operator pos:start="143:29" pos:end="143:29">&lt;</operator> <literal type="number" pos:start="143:31" pos:end="143:31">0</literal></expr>)</condition><block type="pseudo" pos:start="145:25" pos:end="145:35"><block_content pos:start="145:25" pos:end="145:35">

                        <return pos:start="145:25" pos:end="145:35">return <expr pos:start="145:32" pos:end="145:34"><name pos:start="145:32" pos:end="145:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:58"><expr pos:start="147:21" pos:end="147:57"><name pos:start="147:21" pos:end="147:35">startmarker_ptr</name> <operator pos:start="147:37" pos:end="147:37">=</operator> <name pos:start="147:39" pos:end="147:53"><name pos:start="147:39" pos:end="147:41">mxg</name><operator pos:start="147:42" pos:end="147:43">-&gt;</operator><name pos:start="147:44" pos:end="147:53">buffer_ptr</name></name> <operator pos:start="147:55" pos:end="147:55">-</operator> <literal type="number" pos:start="147:57" pos:end="147:57">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:40"><expr pos:start="149:21" pos:end="149:39"><name pos:start="149:21" pos:end="149:35"><name pos:start="149:21" pos:end="149:23">mxg</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:35">cache_size</name></name> <operator pos:start="149:37" pos:end="149:37">=</operator> <literal type="number" pos:start="149:39" pos:end="149:39">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="151:19" pos:end="155:17">else <block pos:start="151:24" pos:end="155:17">{<block_content pos:start="153:21" pos:end="153:44">

                    <expr_stmt pos:start="153:21" pos:end="153:44"><expr pos:start="153:21" pos:end="153:43"><name pos:start="153:21" pos:end="153:35"><name pos:start="153:21" pos:end="153:23">mxg</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:35">cache_size</name></name> <operator pos:start="153:37" pos:end="153:38">-=</operator> <name pos:start="153:40" pos:end="153:43">size</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="159:17" pos:end="159:40"><expr pos:start="159:17" pos:end="159:39"><name pos:start="159:17" pos:end="159:31"><name pos:start="159:17" pos:end="159:19">mxg</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:31">buffer_ptr</name></name> <operator pos:start="159:33" pos:end="159:34">+=</operator> <name pos:start="159:36" pos:end="159:39">size</name></expr>;</expr_stmt>



                <if_stmt pos:start="163:17" pos:end="213:17"><if pos:start="163:17" pos:end="205:17">if <condition pos:start="163:20" pos:end="163:50">(<expr pos:start="163:21" pos:end="163:49"><name pos:start="163:21" pos:end="163:26">marker</name> <operator pos:start="163:28" pos:end="163:29">==</operator> <name pos:start="163:31" pos:end="163:35">APP13</name> <operator pos:start="163:37" pos:end="163:38">&amp;&amp;</operator> <name pos:start="163:40" pos:end="163:43">size</name> <operator pos:start="163:45" pos:end="163:46">&gt;=</operator> <literal type="number" pos:start="163:48" pos:end="163:49">16</literal></expr>)</condition> <block pos:start="163:52" pos:end="205:17">{<block_content pos:start="167:21" pos:end="203:37"> <comment type="block" pos:start="163:54" pos:end="163:69">/* audio data */</comment>

                    <comment type="block" pos:start="165:21" pos:end="165:86">/* time (GMT) of first sample in usec since 1970, little-endian */</comment>

                    <expr_stmt pos:start="167:21" pos:end="167:71"><expr pos:start="167:21" pos:end="167:70"><name pos:start="167:21" pos:end="167:28"><name pos:start="167:21" pos:end="167:23">pkt</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:28">pts</name></name> <operator pos:start="167:30" pos:end="167:30">=</operator> <name pos:start="167:32" pos:end="167:39"><name pos:start="167:32" pos:end="167:34">pkt</name><operator pos:start="167:35" pos:end="167:36">-&gt;</operator><name pos:start="167:37" pos:end="167:39">dts</name></name> <operator pos:start="167:41" pos:end="167:41">=</operator> <call pos:start="167:43" pos:end="167:70"><name pos:start="167:43" pos:end="167:49">AV_RL64</name><argument_list pos:start="167:50" pos:end="167:70">(<argument pos:start="167:51" pos:end="167:69"><expr pos:start="167:51" pos:end="167:69"><name pos:start="167:51" pos:end="167:65">startmarker_ptr</name> <operator pos:start="167:67" pos:end="167:67">+</operator> <literal type="number" pos:start="167:69" pos:end="167:69">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="169:21" pos:end="172:0"><expr pos:start="169:21" pos:end="169:41"><name pos:start="169:21" pos:end="169:37"><name pos:start="169:21" pos:end="169:23">pkt</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:37">stream_index</name></name> <operator pos:start="169:39" pos:end="169:39">=</operator> <literal type="number" pos:start="169:41" pos:end="169:41">1</literal></expr>;</expr_stmt>

<cpp:if pos:start="171:1" pos:end="171:26">#<cpp:directive pos:start="171:2" pos:end="171:3">if</cpp:directive> <expr pos:start="171:5" pos:end="171:26"><name pos:start="171:5" pos:end="171:26">FF_API_DESTRUCT_PACKET</name></expr></cpp:if>

<decl_stmt pos:start="173:1" pos:end="175:41"><decl pos:start="173:1" pos:end="175:40"><type pos:start="173:1" pos:end="173:31"><name pos:start="173:1" pos:end="173:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

                    <name pos:start="175:21" pos:end="175:33"><name pos:start="175:21" pos:end="175:23">pkt</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:33">destruct</name></name> <init pos:start="175:35" pos:end="175:40">= <expr pos:start="175:37" pos:end="175:40"><name pos:start="175:37" pos:end="175:40">NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="177:1" pos:end="181:37"><decl pos:start="177:1" pos:end="181:36"><type pos:start="177:1" pos:end="180:0"><name pos:start="177:1" pos:end="180:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="179:1" pos:end="179:6">#<cpp:directive pos:start="179:2" pos:end="179:6">endif</cpp:directive></cpp:endif>

                    <name pos:start="181:21" pos:end="181:28"><name pos:start="181:21" pos:end="181:23">pkt</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:28">buf</name></name>  <init pos:start="181:31" pos:end="181:36">= <expr pos:start="181:33" pos:end="181:36"><name pos:start="181:33" pos:end="181:36">NULL</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:42"><expr pos:start="183:21" pos:end="183:41"><name pos:start="183:21" pos:end="183:29"><name pos:start="183:21" pos:end="183:23">pkt</name><operator pos:start="183:24" pos:end="183:25">-&gt;</operator><name pos:start="183:26" pos:end="183:29">size</name></name> <operator pos:start="183:31" pos:end="183:31">=</operator> <name pos:start="183:33" pos:end="183:36">size</name> <operator pos:start="183:38" pos:end="183:38">-</operator> <literal type="number" pos:start="183:40" pos:end="183:41">14</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:53"><expr pos:start="185:21" pos:end="185:52"><name pos:start="185:21" pos:end="185:29"><name pos:start="185:21" pos:end="185:23">pkt</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:29">data</name></name> <operator pos:start="185:31" pos:end="185:31">=</operator> <name pos:start="185:33" pos:end="185:47">startmarker_ptr</name> <operator pos:start="185:49" pos:end="185:49">+</operator> <literal type="number" pos:start="185:51" pos:end="185:52">16</literal></expr>;</expr_stmt>



                    <if_stmt pos:start="189:21" pos:end="199:21"><if pos:start="189:21" pos:end="199:21">if <condition pos:start="189:24" pos:end="189:72">(<expr pos:start="189:25" pos:end="189:71"><name pos:start="189:25" pos:end="189:39">startmarker_ptr</name> <operator pos:start="189:41" pos:end="189:41">-</operator> <name pos:start="189:43" pos:end="189:53"><name pos:start="189:43" pos:end="189:45">mxg</name><operator pos:start="189:46" pos:end="189:47">-&gt;</operator><name pos:start="189:48" pos:end="189:53">buffer</name></name> <operator pos:start="189:55" pos:end="189:55">&gt;</operator> <name pos:start="189:57" pos:end="189:71"><name pos:start="189:57" pos:end="189:59">mxg</name><operator pos:start="189:60" pos:end="189:61">-&gt;</operator><name pos:start="189:62" pos:end="189:71">cache_size</name></name></expr>)</condition> <block pos:start="189:74" pos:end="199:21">{<block_content pos:start="191:25" pos:end="197:54">

                        <if_stmt pos:start="191:25" pos:end="195:25"><if pos:start="191:25" pos:end="195:25">if <condition pos:start="191:28" pos:end="191:48">(<expr pos:start="191:29" pos:end="191:47"><name pos:start="191:29" pos:end="191:43"><name pos:start="191:29" pos:end="191:31">mxg</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:43">cache_size</name></name> <operator pos:start="191:45" pos:end="191:45">&gt;</operator> <literal type="number" pos:start="191:47" pos:end="191:47">0</literal></expr>)</condition> <block pos:start="191:50" pos:end="195:25">{<block_content pos:start="193:29" pos:end="193:82">

                            <expr_stmt pos:start="193:29" pos:end="193:82"><expr pos:start="193:29" pos:end="193:81"><call pos:start="193:29" pos:end="193:81"><name pos:start="193:29" pos:end="193:34">memcpy</name><argument_list pos:start="193:35" pos:end="193:81">(<argument pos:start="193:36" pos:end="193:46"><expr pos:start="193:36" pos:end="193:46"><name pos:start="193:36" pos:end="193:46"><name pos:start="193:36" pos:end="193:38">mxg</name><operator pos:start="193:39" pos:end="193:40">-&gt;</operator><name pos:start="193:41" pos:end="193:46">buffer</name></name></expr></argument>, <argument pos:start="193:49" pos:end="193:63"><expr pos:start="193:49" pos:end="193:63"><name pos:start="193:49" pos:end="193:63"><name pos:start="193:49" pos:end="193:51">mxg</name><operator pos:start="193:52" pos:end="193:53">-&gt;</operator><name pos:start="193:54" pos:end="193:63">buffer_ptr</name></name></expr></argument>, <argument pos:start="193:66" pos:end="193:80"><expr pos:start="193:66" pos:end="193:80"><name pos:start="193:66" pos:end="193:80"><name pos:start="193:66" pos:end="193:68">mxg</name><operator pos:start="193:69" pos:end="193:70">-&gt;</operator><name pos:start="193:71" pos:end="193:80">cache_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="197:25" pos:end="197:54"><expr pos:start="197:25" pos:end="197:53"><name pos:start="197:25" pos:end="197:39"><name pos:start="197:25" pos:end="197:27">mxg</name><operator pos:start="197:28" pos:end="197:29">-&gt;</operator><name pos:start="197:30" pos:end="197:39">buffer_ptr</name></name> <operator pos:start="197:41" pos:end="197:41">=</operator> <name pos:start="197:43" pos:end="197:53"><name pos:start="197:43" pos:end="197:45">mxg</name><operator pos:start="197:46" pos:end="197:47">-&gt;</operator><name pos:start="197:48" pos:end="197:53">buffer</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <return pos:start="203:21" pos:end="203:37">return <expr pos:start="203:28" pos:end="203:36"><name pos:start="203:28" pos:end="203:36"><name pos:start="203:28" pos:end="203:30">pkt</name><operator pos:start="203:31" pos:end="203:32">-&gt;</operator><name pos:start="203:33" pos:end="203:36">size</name></name></expr>;</return>

                </block_content>}</block></if> <if type="elseif" pos:start="205:19" pos:end="213:17">else if <condition pos:start="205:27" pos:end="207:67">(<expr pos:start="205:28" pos:end="207:66"><name pos:start="205:28" pos:end="205:33">marker</name> <operator pos:start="205:35" pos:end="205:36">==</operator> <name pos:start="205:38" pos:end="205:40">COM</name> <operator pos:start="205:42" pos:end="205:43">&amp;&amp;</operator> <name pos:start="205:45" pos:end="205:48">size</name> <operator pos:start="205:50" pos:end="205:51">&gt;=</operator> <literal type="number" pos:start="205:53" pos:end="205:54">18</literal> <operator pos:start="205:56" pos:end="205:57">&amp;&amp;</operator>

                           <operator pos:start="207:28" pos:end="207:28">!</operator><call pos:start="207:29" pos:end="207:66"><name pos:start="207:29" pos:end="207:35">strncmp</name><argument_list pos:start="207:36" pos:end="207:66">(<argument pos:start="207:37" pos:end="207:55"><expr pos:start="207:37" pos:end="207:55"><name pos:start="207:37" pos:end="207:51">startmarker_ptr</name> <operator pos:start="207:53" pos:end="207:53">+</operator> <literal type="number" pos:start="207:55" pos:end="207:55">4</literal></expr></argument>, <argument pos:start="207:58" pos:end="207:62"><expr pos:start="207:58" pos:end="207:62"><literal type="string" pos:start="207:58" pos:end="207:62">"MXF"</literal></expr></argument>, <argument pos:start="207:65" pos:end="207:65"><expr pos:start="207:65" pos:end="207:65"><literal type="number" pos:start="207:65" pos:end="207:65">3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="207:69" pos:end="213:17">{<block_content pos:start="211:21" pos:end="211:61">

                    <comment type="block" pos:start="209:21" pos:end="209:85">/* time (GMT) of video frame in usec since 1970, little-endian */</comment>

                    <expr_stmt pos:start="211:21" pos:end="211:61"><expr pos:start="211:21" pos:end="211:60"><name pos:start="211:21" pos:end="211:28"><name pos:start="211:21" pos:end="211:23">mxg</name><operator pos:start="211:24" pos:end="211:25">-&gt;</operator><name pos:start="211:26" pos:end="211:28">dts</name></name> <operator pos:start="211:30" pos:end="211:30">=</operator> <call pos:start="211:32" pos:end="211:60"><name pos:start="211:32" pos:end="211:38">AV_RL64</name><argument_list pos:start="211:39" pos:end="211:60">(<argument pos:start="211:40" pos:end="211:59"><expr pos:start="211:40" pos:end="211:59"><name pos:start="211:40" pos:end="211:54">startmarker_ptr</name> <operator pos:start="211:56" pos:end="211:56">+</operator> <literal type="number" pos:start="211:58" pos:end="211:59">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="217:11" pos:end="225:9">else <block pos:start="217:16" pos:end="225:9">{<block_content pos:start="221:13" pos:end="223:44">

            <comment type="block" pos:start="219:13" pos:end="219:40">/* start marker not found */</comment>

            <expr_stmt pos:start="221:13" pos:end="221:41"><expr pos:start="221:13" pos:end="221:40"><name pos:start="221:13" pos:end="221:27"><name pos:start="221:13" pos:end="221:15">mxg</name><operator pos:start="221:16" pos:end="221:17">-&gt;</operator><name pos:start="221:18" pos:end="221:27">buffer_ptr</name></name> <operator pos:start="221:29" pos:end="221:29">=</operator> <name pos:start="221:31" pos:end="221:40">search_end</name></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:44"><expr pos:start="223:13" pos:end="223:43"><name pos:start="223:13" pos:end="223:27"><name pos:start="223:13" pos:end="223:15">mxg</name><operator pos:start="223:16" pos:end="223:17">-&gt;</operator><name pos:start="223:18" pos:end="223:27">cache_size</name></name> <operator pos:start="223:29" pos:end="223:29">=</operator> <name pos:start="223:31" pos:end="223:43">OVERREAD_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="231:5" pos:end="231:23">return <expr pos:start="231:12" pos:end="231:22"><name pos:start="231:12" pos:end="231:22">AVERROR_EOF</name></expr>;</return>

</block_content>}</block></function>
</unit>
