<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14241.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:32">openpic_src_read</name><parameter_list pos:start="1:33" pos:end="1:75">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">uint64_t</name></type> <name pos:start="1:57" pos:end="1:60">addr</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:70">unsigned</name></type> <name pos:start="1:72" pos:end="1:74">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:18">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OpenPICState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">opp</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:19">retval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">idx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:60"><expr pos:start="13:5" pos:end="13:59"><call pos:start="13:5" pos:end="13:59"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:59">(<argument pos:start="13:13" pos:end="13:42"><expr pos:start="13:13" pos:end="13:42"><literal type="string" pos:start="13:13" pos:end="13:25">"%s: addr %#"</literal> <name pos:start="13:27" pos:end="13:37">HWADDR_PRIx</name> <literal type="string" pos:start="13:39" pos:end="13:42">"\n"</literal></expr></argument>, <argument pos:start="13:45" pos:end="13:52"><expr pos:start="13:45" pos:end="13:52"><name pos:start="13:45" pos:end="13:52">__func__</name></expr></argument>, <argument pos:start="13:55" pos:end="13:58"><expr pos:start="13:55" pos:end="13:58"><name pos:start="13:55" pos:end="13:58">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:10">retval</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:23">0xFFFFFFFF</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:12">addr</name> <operator pos:start="17:14" pos:end="17:14">&amp;</operator> <literal type="number" pos:start="17:16" pos:end="17:18">0xF</literal></expr>)</condition> <block pos:start="17:21" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:22">

        <return pos:start="19:9" pos:end="19:22">return <expr pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:21">retval</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:8">addr</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:15">addr</name> <operator pos:start="23:17" pos:end="23:17">&amp;</operator> <literal type="number" pos:start="23:19" pos:end="23:24">0xFFF0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:7">idx</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:14">addr</name> <operator pos:start="25:16" pos:end="25:17">&gt;&gt;</operator> <literal type="number" pos:start="25:19" pos:end="25:19">5</literal></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:12">addr</name> <operator pos:start="27:14" pos:end="27:14">&amp;</operator> <literal type="number" pos:start="27:16" pos:end="27:19">0x10</literal></expr>)</condition> <block pos:start="27:22" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:43">

        <comment type="block" pos:start="29:9" pos:end="29:34">/* EXDE / IFEDE / IEEDE */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:14">retval</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:42"><name pos:start="31:18" pos:end="31:32">read_IRQreg_idr</name><argument_list pos:start="31:33" pos:end="31:42">(<argument pos:start="31:34" pos:end="31:36"><expr pos:start="31:34" pos:end="31:36"><name pos:start="31:34" pos:end="31:36">opp</name></expr></argument>, <argument pos:start="31:39" pos:end="31:41"><expr pos:start="31:39" pos:end="31:41"><name pos:start="31:39" pos:end="31:41">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="39:5">else <block pos:start="33:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:44">

        <comment type="block" pos:start="35:9" pos:end="35:34">/* EXVP / IFEVP / IEEVP */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:14">retval</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:43"><name pos:start="37:18" pos:end="37:33">read_IRQreg_ivpr</name><argument_list pos:start="37:34" pos:end="37:43">(<argument pos:start="37:35" pos:end="37:37"><expr pos:start="37:35" pos:end="37:37"><name pos:start="37:35" pos:end="37:37">opp</name></expr></argument>, <argument pos:start="37:40" pos:end="37:42"><expr pos:start="37:40" pos:end="37:42"><name pos:start="37:40" pos:end="37:42">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:49"><expr pos:start="41:5" pos:end="41:48"><call pos:start="41:5" pos:end="41:48"><name pos:start="41:5" pos:end="41:11">DPRINTF</name><argument_list pos:start="41:12" pos:end="41:48">(<argument pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:29"><literal type="string" pos:start="41:13" pos:end="41:29">"%s: =&gt; 0x%08x\n"</literal></expr></argument>, <argument pos:start="41:32" pos:end="41:39"><expr pos:start="41:32" pos:end="41:39"><name pos:start="41:32" pos:end="41:39">__func__</name></expr></argument>, <argument pos:start="41:42" pos:end="41:47"><expr pos:start="41:42" pos:end="41:47"><name pos:start="41:42" pos:end="41:47">retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="45:5" pos:end="45:18">return <expr pos:start="45:12" pos:end="45:17"><name pos:start="45:12" pos:end="45:17">retval</name></expr>;</return>

</block_content>}</block></function>
</unit>
