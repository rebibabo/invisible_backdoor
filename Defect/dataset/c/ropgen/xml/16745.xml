<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16745.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">blockdev_mirror_common</name><parameter_list pos:start="1:35" pos:end="25:48">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:51">BlockDriverState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">bs</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:59"><decl pos:start="3:36" pos:end="3:59"><type pos:start="3:36" pos:end="3:59"><name pos:start="3:36" pos:end="3:51">BlockDriverState</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:59">target</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:52"><decl pos:start="5:36" pos:end="5:52"><type pos:start="5:36" pos:end="5:52"><name pos:start="5:36" pos:end="5:39">bool</name></type> <name pos:start="5:41" pos:end="5:52">has_replaces</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:74"><decl pos:start="5:55" pos:end="5:74"><type pos:start="5:55" pos:end="5:74"><specifier pos:start="5:55" pos:end="5:59">const</specifier> <name pos:start="5:61" pos:end="5:64">char</name> <modifier pos:start="5:66" pos:end="5:66">*</modifier></type><name pos:start="5:67" pos:end="5:74">replaces</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:59"><decl pos:start="7:36" pos:end="7:59"><type pos:start="7:36" pos:end="7:59"><name pos:start="7:36" pos:end="7:54"><name pos:start="7:36" pos:end="7:39">enum</name> <name pos:start="7:41" pos:end="7:54">MirrorSyncMode</name></name></type> <name pos:start="7:56" pos:end="7:59">sync</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:49"><decl pos:start="9:36" pos:end="9:49"><type pos:start="9:36" pos:end="9:49"><name pos:start="9:36" pos:end="9:39">bool</name></type> <name pos:start="9:41" pos:end="9:49">has_speed</name></decl></parameter>, <parameter pos:start="9:52" pos:end="9:64"><decl pos:start="9:52" pos:end="9:64"><type pos:start="9:52" pos:end="9:64"><name pos:start="9:52" pos:end="9:58">int64_t</name></type> <name pos:start="9:60" pos:end="9:64">speed</name></decl></parameter>,

                                   <parameter pos:start="11:36" pos:end="11:55"><decl pos:start="11:36" pos:end="11:55"><type pos:start="11:36" pos:end="11:55"><name pos:start="11:36" pos:end="11:39">bool</name></type> <name pos:start="11:41" pos:end="11:55">has_granularity</name></decl></parameter>, <parameter pos:start="11:58" pos:end="11:77"><decl pos:start="11:58" pos:end="11:77"><type pos:start="11:58" pos:end="11:77"><name pos:start="11:58" pos:end="11:65">uint32_t</name></type> <name pos:start="11:67" pos:end="11:77">granularity</name></decl></parameter>,

                                   <parameter pos:start="13:36" pos:end="13:52"><decl pos:start="13:36" pos:end="13:52"><type pos:start="13:36" pos:end="13:52"><name pos:start="13:36" pos:end="13:39">bool</name></type> <name pos:start="13:41" pos:end="13:52">has_buf_size</name></decl></parameter>, <parameter pos:start="13:55" pos:end="13:70"><decl pos:start="13:55" pos:end="13:70"><type pos:start="13:55" pos:end="13:70"><name pos:start="13:55" pos:end="13:61">int64_t</name></type> <name pos:start="13:63" pos:end="13:70">buf_size</name></decl></parameter>,

                                   <parameter pos:start="15:36" pos:end="15:59"><decl pos:start="15:36" pos:end="15:59"><type pos:start="15:36" pos:end="15:59"><name pos:start="15:36" pos:end="15:39">bool</name></type> <name pos:start="15:41" pos:end="15:59">has_on_source_error</name></decl></parameter>,

                                   <parameter pos:start="17:36" pos:end="17:66"><decl pos:start="17:36" pos:end="17:66"><type pos:start="17:36" pos:end="17:66"><name pos:start="17:36" pos:end="17:50">BlockdevOnError</name></type> <name pos:start="17:52" pos:end="17:66">on_source_error</name></decl></parameter>,

                                   <parameter pos:start="19:36" pos:end="19:59"><decl pos:start="19:36" pos:end="19:59"><type pos:start="19:36" pos:end="19:59"><name pos:start="19:36" pos:end="19:39">bool</name></type> <name pos:start="19:41" pos:end="19:59">has_on_target_error</name></decl></parameter>,

                                   <parameter pos:start="21:36" pos:end="21:66"><decl pos:start="21:36" pos:end="21:66"><type pos:start="21:36" pos:end="21:66"><name pos:start="21:36" pos:end="21:50">BlockdevOnError</name></type> <name pos:start="21:52" pos:end="21:66">on_target_error</name></decl></parameter>,

                                   <parameter pos:start="23:36" pos:end="23:49"><decl pos:start="23:36" pos:end="23:49"><type pos:start="23:36" pos:end="23:49"><name pos:start="23:36" pos:end="23:39">bool</name></type> <name pos:start="23:41" pos:end="23:49">has_unmap</name></decl></parameter>, <parameter pos:start="23:52" pos:end="23:61"><decl pos:start="23:52" pos:end="23:61"><type pos:start="23:52" pos:end="23:61"><name pos:start="23:52" pos:end="23:55">bool</name></type> <name pos:start="23:57" pos:end="23:61">unmap</name></decl></parameter>,

                                   <parameter pos:start="25:36" pos:end="25:47"><decl pos:start="25:36" pos:end="25:47"><type pos:start="25:36" pos:end="25:47"><name pos:start="25:36" pos:end="25:40">Error</name> <modifier pos:start="25:42" pos:end="25:42">*</modifier><modifier pos:start="25:43" pos:end="25:43">*</modifier></type><name pos:start="25:44" pos:end="25:47">errp</name></decl></parameter>)</parameter_list>

<block pos:start="27:1" pos:end="137:1">{<block_content pos:start="31:5" pos:end="135:41">



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:18">has_speed</name></expr>)</condition> <block pos:start="31:21" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:18">

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:13">speed</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:29">(<expr pos:start="37:9" pos:end="37:28"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:28">has_on_source_error</name></expr>)</condition> <block pos:start="37:31" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:51">

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:23">on_source_error</name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:50">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:29">(<expr pos:start="43:9" pos:end="43:28"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:28">has_on_target_error</name></expr>)</condition> <block pos:start="43:31" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:51">

        <expr_stmt pos:start="45:9" pos:end="45:51"><expr pos:start="45:9" pos:end="45:50"><name pos:start="45:9" pos:end="45:23">on_target_error</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:50">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:25">(<expr pos:start="49:9" pos:end="49:24"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:24">has_granularity</name></expr>)</condition> <block pos:start="49:27" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:24">

        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:19">granularity</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:22">(<expr pos:start="55:9" pos:end="55:21"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:21">has_buf_size</name></expr>)</condition> <block pos:start="55:24" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:21">

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:16">buf_size</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <literal type="number" pos:start="57:20" pos:end="57:20">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:19">(<expr pos:start="61:9" pos:end="61:18"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:18">has_unmap</name></expr>)</condition> <block pos:start="61:21" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:21">

        <expr_stmt pos:start="63:9" pos:end="63:21"><expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:13">unmap</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:20">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:78">(<expr pos:start="69:9" pos:end="69:77"><name pos:start="69:9" pos:end="69:19">granularity</name> <operator pos:start="69:21" pos:end="69:22">!=</operator> <literal type="number" pos:start="69:24" pos:end="69:24">0</literal> <operator pos:start="69:26" pos:end="69:27">&amp;&amp;</operator> <operator pos:start="69:29" pos:end="69:29">(</operator><name pos:start="69:30" pos:end="69:63"><name pos:start="69:30" pos:end="69:40">granularity</name> <argument_list type="generic" pos:start="69:42" pos:end="69:63">&lt; <argument pos:start="69:44" pos:end="69:61"><expr pos:start="69:44" pos:end="69:61"><literal type="number" pos:start="69:44" pos:end="69:46">512</literal> <operator pos:start="69:48" pos:end="69:49">||</operator> <name pos:start="69:51" pos:end="69:61">granularity</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="69:65" pos:end="69:71">1048576</literal> <operator pos:start="69:73" pos:end="69:73">*</operator> <literal type="number" pos:start="69:75" pos:end="69:76">64</literal><operator pos:start="69:77" pos:end="69:77">)</operator></expr>)</condition> <block pos:start="69:80" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:15">

        <expr_stmt pos:start="71:9" pos:end="73:52"><expr pos:start="71:9" pos:end="73:51"><call pos:start="71:9" pos:end="73:51"><name pos:start="71:9" pos:end="71:18">error_setg</name><argument_list pos:start="71:19" pos:end="73:51">(<argument pos:start="71:20" pos:end="71:23"><expr pos:start="71:20" pos:end="71:23"><name pos:start="71:20" pos:end="71:23">errp</name></expr></argument>, <argument pos:start="71:26" pos:end="71:53"><expr pos:start="71:26" pos:end="71:53"><name pos:start="71:26" pos:end="71:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="71:56" pos:end="71:68"><expr pos:start="71:56" pos:end="71:68"><literal type="string" pos:start="71:56" pos:end="71:68">"granularity"</literal></expr></argument>,

                   <argument pos:start="73:20" pos:end="73:50"><expr pos:start="73:20" pos:end="73:50"><literal type="string" pos:start="73:20" pos:end="73:50">"a value in range [512B, 64MB]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="87:5"><if pos:start="79:5" pos:end="87:5">if <condition pos:start="79:8" pos:end="79:40">(<expr pos:start="79:9" pos:end="79:39"><name pos:start="79:9" pos:end="79:19">granularity</name> <operator pos:start="79:21" pos:end="79:21">&amp;</operator> <operator pos:start="79:23" pos:end="79:23">(</operator><name pos:start="79:24" pos:end="79:34">granularity</name> <operator pos:start="79:36" pos:end="79:36">-</operator> <literal type="number" pos:start="79:38" pos:end="79:38">1</literal><operator pos:start="79:39" pos:end="79:39">)</operator></expr>)</condition> <block pos:start="79:42" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:15">

        <expr_stmt pos:start="81:9" pos:end="83:33"><expr pos:start="81:9" pos:end="83:32"><call pos:start="81:9" pos:end="83:32"><name pos:start="81:9" pos:end="81:18">error_setg</name><argument_list pos:start="81:19" pos:end="83:32">(<argument pos:start="81:20" pos:end="81:23"><expr pos:start="81:20" pos:end="81:23"><name pos:start="81:20" pos:end="81:23">errp</name></expr></argument>, <argument pos:start="81:26" pos:end="81:53"><expr pos:start="81:26" pos:end="81:53"><name pos:start="81:26" pos:end="81:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="81:56" pos:end="81:68"><expr pos:start="81:56" pos:end="81:68"><literal type="string" pos:start="81:56" pos:end="81:68">"granularity"</literal></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:31"><expr pos:start="83:20" pos:end="83:31"><literal type="string" pos:start="83:20" pos:end="83:31">"power of 2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:66">(<expr pos:start="91:9" pos:end="91:65"><call pos:start="91:9" pos:end="91:65"><name pos:start="91:9" pos:end="91:26">bdrv_op_is_blocked</name><argument_list pos:start="91:27" pos:end="91:65">(<argument pos:start="91:28" pos:end="91:29"><expr pos:start="91:28" pos:end="91:29"><name pos:start="91:28" pos:end="91:29">bs</name></expr></argument>, <argument pos:start="91:32" pos:end="91:58"><expr pos:start="91:32" pos:end="91:58"><name pos:start="91:32" pos:end="91:58">BLOCK_OP_TYPE_MIRROR_SOURCE</name></expr></argument>, <argument pos:start="91:61" pos:end="91:64"><expr pos:start="91:61" pos:end="91:64"><name pos:start="91:61" pos:end="91:64">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:68" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:15">

        <return pos:start="93:9" pos:end="93:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:70">(<expr pos:start="97:9" pos:end="97:69"><call pos:start="97:9" pos:end="97:69"><name pos:start="97:9" pos:end="97:26">bdrv_op_is_blocked</name><argument_list pos:start="97:27" pos:end="97:69">(<argument pos:start="97:28" pos:end="97:33"><expr pos:start="97:28" pos:end="97:33"><name pos:start="97:28" pos:end="97:33">target</name></expr></argument>, <argument pos:start="97:36" pos:end="97:62"><expr pos:start="97:36" pos:end="97:62"><name pos:start="97:36" pos:end="97:62">BLOCK_OP_TYPE_MIRROR_TARGET</name></expr></argument>, <argument pos:start="97:65" pos:end="97:68"><expr pos:start="97:65" pos:end="97:68"><name pos:start="97:65" pos:end="97:68">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:72" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:15">

        <return pos:start="99:9" pos:end="99:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:20">(<expr pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:14">target</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:19">blk</name></name></expr>)</condition> <block pos:start="103:22" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:15">

        <expr_stmt pos:start="105:9" pos:end="105:70"><expr pos:start="105:9" pos:end="105:69"><call pos:start="105:9" pos:end="105:69"><name pos:start="105:9" pos:end="105:18">error_setg</name><argument_list pos:start="105:19" pos:end="105:69">(<argument pos:start="105:20" pos:end="105:23"><expr pos:start="105:20" pos:end="105:23"><name pos:start="105:20" pos:end="105:23">errp</name></expr></argument>, <argument pos:start="105:26" pos:end="105:68"><expr pos:start="105:26" pos:end="105:68"><literal type="string" pos:start="105:26" pos:end="105:68">"Cannot mirror to an attached block device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:53">(<expr pos:start="113:9" pos:end="113:52"><operator pos:start="113:9" pos:end="113:9">!</operator><name pos:start="113:10" pos:end="113:20"><name pos:start="113:10" pos:end="113:11">bs</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:20">backing</name></name> <operator pos:start="113:22" pos:end="113:23">&amp;&amp;</operator> <name pos:start="113:25" pos:end="113:28">sync</name> <operator pos:start="113:30" pos:end="113:31">==</operator> <name pos:start="113:33" pos:end="113:52">MIRROR_SYNC_MODE_TOP</name></expr>)</condition> <block pos:start="113:55" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:37">

        <expr_stmt pos:start="115:9" pos:end="115:37"><expr pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:12">sync</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <name pos:start="115:16" pos:end="115:36">MIRROR_SYNC_MODE_FULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="121:5" pos:end="125:7">/* pass the node name to replace to mirror start since it's loose coupling

     * and will allow to check whether the node still exist at mirror completion

     */</comment>

    <expr_stmt pos:start="127:5" pos:end="135:41"><expr pos:start="127:5" pos:end="135:40"><call pos:start="127:5" pos:end="135:40"><name pos:start="127:5" pos:end="127:16">mirror_start</name><argument_list pos:start="127:17" pos:end="135:40">(<argument pos:start="127:18" pos:end="127:19"><expr pos:start="127:18" pos:end="127:19"><name pos:start="127:18" pos:end="127:19">bs</name></expr></argument>, <argument pos:start="127:22" pos:end="127:27"><expr pos:start="127:22" pos:end="127:27"><name pos:start="127:22" pos:end="127:27">target</name></expr></argument>,

                 <argument pos:start="129:18" pos:end="129:47"><expr pos:start="129:18" pos:end="129:47"><ternary pos:start="129:18" pos:end="129:47"><condition pos:start="129:18" pos:end="129:31"><expr pos:start="129:18" pos:end="129:29"><name pos:start="129:18" pos:end="129:29">has_replaces</name></expr> ?</condition><then pos:start="129:33" pos:end="129:40"> <expr pos:start="129:33" pos:end="129:40"><name pos:start="129:33" pos:end="129:40">replaces</name></expr> </then><else pos:start="129:42" pos:end="129:47">: <expr pos:start="129:44" pos:end="129:47"><name pos:start="129:44" pos:end="129:47">NULL</name></expr></else></ternary></expr></argument>,

                 <argument pos:start="131:18" pos:end="131:22"><expr pos:start="131:18" pos:end="131:22"><name pos:start="131:18" pos:end="131:22">speed</name></expr></argument>, <argument pos:start="131:25" pos:end="131:35"><expr pos:start="131:25" pos:end="131:35"><name pos:start="131:25" pos:end="131:35">granularity</name></expr></argument>, <argument pos:start="131:38" pos:end="131:45"><expr pos:start="131:38" pos:end="131:45"><name pos:start="131:38" pos:end="131:45">buf_size</name></expr></argument>, <argument pos:start="131:48" pos:end="131:51"><expr pos:start="131:48" pos:end="131:51"><name pos:start="131:48" pos:end="131:51">sync</name></expr></argument>,

                 <argument pos:start="133:18" pos:end="133:32"><expr pos:start="133:18" pos:end="133:32"><name pos:start="133:18" pos:end="133:32">on_source_error</name></expr></argument>, <argument pos:start="133:35" pos:end="133:49"><expr pos:start="133:35" pos:end="133:49"><name pos:start="133:35" pos:end="133:49">on_target_error</name></expr></argument>, <argument pos:start="133:52" pos:end="133:56"><expr pos:start="133:52" pos:end="133:56"><name pos:start="133:52" pos:end="133:56">unmap</name></expr></argument>,

                 <argument pos:start="135:18" pos:end="135:29"><expr pos:start="135:18" pos:end="135:29"><name pos:start="135:18" pos:end="135:29">block_job_cb</name></expr></argument>, <argument pos:start="135:32" pos:end="135:33"><expr pos:start="135:32" pos:end="135:33"><name pos:start="135:32" pos:end="135:33">bs</name></expr></argument>, <argument pos:start="135:36" pos:end="135:39"><expr pos:start="135:36" pos:end="135:39"><name pos:start="135:36" pos:end="135:39">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
