<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16675.c" pos:tabs="8"><function pos:start="1:1" pos:end="50:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:6">size_t</name></type> <name pos:start="1:8" pos:end="1:31">qemu_mempath_getpagesize</name><parameter_list pos:start="1:32" pos:end="1:53">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:44"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:52">mem_path</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="50:1">{<block_content pos:start="7:5" pos:end="48:25">

<cpp:ifdef pos:start="5:1" pos:end="5:19">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:19">CONFIG_LINUX</name></cpp:ifdef>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:17">statfs</name></name></type> <name pos:start="7:19" pos:end="7:20">fs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <do pos:start="13:5" pos:end="17:41">do <block pos:start="13:8" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:36">

        <expr_stmt pos:start="15:9" pos:end="15:36"><expr pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:35"><name pos:start="15:15" pos:end="15:20">statfs</name><argument_list pos:start="15:21" pos:end="15:35">(<argument pos:start="15:22" pos:end="15:29"><expr pos:start="15:22" pos:end="15:29"><name pos:start="15:22" pos:end="15:29">mem_path</name></expr></argument>, <argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><operator pos:start="15:32" pos:end="15:32">&amp;</operator><name pos:start="15:33" pos:end="15:34">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="17:13" pos:end="17:40">(<expr pos:start="17:14" pos:end="17:39"><name pos:start="17:14" pos:end="17:16">ret</name> <operator pos:start="17:18" pos:end="17:19">!=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">0</literal> <operator pos:start="17:23" pos:end="17:24">&amp;&amp;</operator> <name pos:start="17:26" pos:end="17:30">errno</name> <operator pos:start="17:32" pos:end="17:33">==</operator> <name pos:start="17:35" pos:end="17:39">EINTR</name></expr>)</condition>;</do>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:14">!=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>)</condition> <block pos:start="21:19" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:16">

        <expr_stmt pos:start="23:9" pos:end="25:33"><expr pos:start="23:9" pos:end="25:32"><call pos:start="23:9" pos:end="25:32"><name pos:start="23:9" pos:end="23:15">fprintf</name><argument_list pos:start="23:16" pos:end="25:32">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">stderr</name></expr></argument>, <argument pos:start="23:25" pos:end="23:61"><expr pos:start="23:25" pos:end="23:61"><literal type="string" pos:start="23:25" pos:end="23:61">"Couldn't statfs() memory path: %s\n"</literal></expr></argument>,

                <argument pos:start="25:17" pos:end="25:31"><expr pos:start="25:17" pos:end="25:31"><call pos:start="25:17" pos:end="25:31"><name pos:start="25:17" pos:end="25:24">strerror</name><argument_list pos:start="25:25" pos:end="25:31">(<argument pos:start="25:26" pos:end="25:30"><expr pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:30">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><call pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">exit</name><argument_list pos:start="27:13" pos:end="27:15">(<argument pos:start="27:14" pos:end="27:14"><expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:37">(<expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:10">fs</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:17">f_type</name></name> <operator pos:start="33:19" pos:end="33:20">==</operator> <name pos:start="33:22" pos:end="33:36">HUGETLBFS_MAGIC</name></expr>)</condition> <block pos:start="33:39" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:26">

        <comment type="block" pos:start="35:9" pos:end="35:54">/* It's hugepage, return the huge page size */</comment>

        <return pos:start="37:9" pos:end="37:26">return <expr pos:start="37:16" pos:end="37:25"><name pos:start="37:16" pos:end="37:25"><name pos:start="37:16" pos:end="37:17">fs</name><operator pos:start="37:18" pos:end="37:18">.</operator><name pos:start="37:19" pos:end="37:25">f_bsize</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>








    <return pos:start="48:5" pos:end="48:25">return <expr pos:start="48:12" pos:end="48:24"><call pos:start="48:12" pos:end="48:24"><name pos:start="48:12" pos:end="48:22">getpagesize</name><argument_list pos:start="48:23" pos:end="48:24">()</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
