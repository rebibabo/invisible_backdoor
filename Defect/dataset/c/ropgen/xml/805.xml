<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/805.c" pos:tabs="8"><function pos:start="1:1" pos:end="677:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">gen_pool32axf</name> <parameter_list pos:start="1:27" pos:end="1:80">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:39">CPUMIPSState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:58">DisasContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">ctx</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:71"><decl pos:start="1:66" pos:end="1:71"><type pos:start="1:66" pos:end="1:71"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:71">rt</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:79"><decl pos:start="1:74" pos:end="1:79"><type pos:start="1:74" pos:end="1:79"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:79">rs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="677:1">{<block_content pos:start="5:5" pos:end="675:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">extension</name> <init pos:start="5:19" pos:end="5:45">= <expr pos:start="5:21" pos:end="5:45"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:24">ctx</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opcode</name></name> <operator pos:start="5:34" pos:end="5:35">&gt;&gt;</operator> <literal type="number" pos:start="5:37" pos:end="5:37">6</literal><operator pos:start="5:38" pos:end="5:38">)</operator> <operator pos:start="5:40" pos:end="5:40">&amp;</operator> <literal type="number" pos:start="5:42" pos:end="5:45">0x3f</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">minor</name> <init pos:start="7:15" pos:end="7:41">= <expr pos:start="7:17" pos:end="7:41"><operator pos:start="7:17" pos:end="7:17">(</operator><name pos:start="7:18" pos:end="7:28"><name pos:start="7:18" pos:end="7:20">ctx</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:28">opcode</name></name> <operator pos:start="7:30" pos:end="7:31">&gt;&gt;</operator> <literal type="number" pos:start="7:33" pos:end="7:34">12</literal><operator pos:start="7:35" pos:end="7:35">)</operator> <operator pos:start="7:37" pos:end="7:37">&amp;</operator> <literal type="number" pos:start="7:39" pos:end="7:41">0xf</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:22">mips32_op</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="675:5">switch <condition pos:start="13:12" pos:end="13:22">(<expr pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:21">extension</name></expr>)</condition> <block pos:start="13:24" pos:end="675:5">{<block_content pos:start="15:5" pos:end="673:14">

    <case pos:start="15:5" pos:end="15:13">case <expr pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:12">TEQ</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:17">mips32_op</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:27">OPC_TEQ</name></expr>;</expr_stmt>

        <goto pos:start="19:9" pos:end="19:21">goto <name pos:start="19:14" pos:end="19:20">do_trap</name>;</goto>

    <case pos:start="21:5" pos:end="21:13">case <expr pos:start="21:10" pos:end="21:12"><name pos:start="21:10" pos:end="21:12">TGE</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:17">mips32_op</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:27">OPC_TGE</name></expr>;</expr_stmt>

        <goto pos:start="25:9" pos:end="25:21">goto <name pos:start="25:14" pos:end="25:20">do_trap</name>;</goto>

    <case pos:start="27:5" pos:end="27:14">case <expr pos:start="27:10" pos:end="27:13"><name pos:start="27:10" pos:end="27:13">TGEU</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:17">mips32_op</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:28">OPC_TGEU</name></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:21">goto <name pos:start="31:14" pos:end="31:20">do_trap</name>;</goto>

    <case pos:start="33:5" pos:end="33:13">case <expr pos:start="33:10" pos:end="33:12"><name pos:start="33:10" pos:end="33:12">TLT</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:17">mips32_op</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:27">OPC_TLT</name></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:21">goto <name pos:start="37:14" pos:end="37:20">do_trap</name>;</goto>

    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><name pos:start="39:10" pos:end="39:13">TLTU</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:17">mips32_op</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:28">OPC_TLTU</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:21">goto <name pos:start="43:14" pos:end="43:20">do_trap</name>;</goto>

    <case pos:start="45:5" pos:end="45:13">case <expr pos:start="45:10" pos:end="45:12"><name pos:start="45:10" pos:end="45:12">TNE</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:17">mips32_op</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:27">OPC_TNE</name></expr>;</expr_stmt>

    <label pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:11">do_trap</name>:</label>

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><call pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:16">gen_trap</name><argument_list pos:start="51:17" pos:end="51:44">(<argument pos:start="51:18" pos:end="51:20"><expr pos:start="51:18" pos:end="51:20"><name pos:start="51:18" pos:end="51:20">ctx</name></expr></argument>, <argument pos:start="51:23" pos:end="51:31"><expr pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:31">mips32_op</name></expr></argument>, <argument pos:start="51:34" pos:end="51:35"><expr pos:start="51:34" pos:end="51:35"><name pos:start="51:34" pos:end="51:35">rs</name></expr></argument>, <argument pos:start="51:38" pos:end="51:39"><expr pos:start="51:38" pos:end="51:39"><name pos:start="51:38" pos:end="51:39">rt</name></expr></argument>, <argument pos:start="51:42" pos:end="51:43"><expr pos:start="51:42" pos:end="51:43"><operator pos:start="51:42" pos:end="51:42">-</operator><literal type="number" pos:start="51:43" pos:end="51:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="56:0">break;</break>

<cpp:ifndef pos:start="55:1" pos:end="55:24">#<cpp:directive pos:start="55:2" pos:end="55:7">ifndef</cpp:directive> <name pos:start="55:9" pos:end="55:24">CONFIG_USER_ONLY</name></cpp:ifndef>

    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><name pos:start="57:10" pos:end="57:13">MFC0</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:19">case <expr pos:start="59:10" pos:end="59:18"><name pos:start="59:10" pos:end="59:13">MFC0</name> <operator pos:start="59:15" pos:end="59:15">+</operator> <literal type="number" pos:start="59:17" pos:end="59:18">32</literal></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><call pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:25">check_cp0_enabled</name><argument_list pos:start="61:26" pos:end="61:30">(<argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><name pos:start="61:27" pos:end="61:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:20">(<expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:14">rt</name> <operator pos:start="63:16" pos:end="63:17">==</operator> <literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>)</condition> <block pos:start="63:22" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:18">

            <comment type="block" pos:start="65:13" pos:end="65:31">/* Treat as NOP. */</comment>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:66"><expr pos:start="71:9" pos:end="71:65"><call pos:start="71:9" pos:end="71:65"><name pos:start="71:9" pos:end="71:16">gen_mfc0</name><argument_list pos:start="71:17" pos:end="71:65">(<argument pos:start="71:18" pos:end="71:20"><expr pos:start="71:18" pos:end="71:20"><name pos:start="71:18" pos:end="71:20">ctx</name></expr></argument>, <argument pos:start="71:23" pos:end="71:33"><expr pos:start="71:23" pos:end="71:33"><name pos:start="71:23" pos:end="71:33"><name pos:start="71:23" pos:end="71:29">cpu_gpr</name><index pos:start="71:30" pos:end="71:33">[<expr pos:start="71:31" pos:end="71:32"><name pos:start="71:31" pos:end="71:32">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="71:36" pos:end="71:37"><expr pos:start="71:36" pos:end="71:37"><name pos:start="71:36" pos:end="71:37">rs</name></expr></argument>, <argument pos:start="71:40" pos:end="71:64"><expr pos:start="71:40" pos:end="71:64"><operator pos:start="71:40" pos:end="71:40">(</operator><name pos:start="71:41" pos:end="71:51"><name pos:start="71:41" pos:end="71:43">ctx</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:51">opcode</name></name> <operator pos:start="71:53" pos:end="71:54">&gt;&gt;</operator> <literal type="number" pos:start="71:56" pos:end="71:57">11</literal><operator pos:start="71:58" pos:end="71:58">)</operator> <operator pos:start="71:60" pos:end="71:60">&amp;</operator> <literal type="number" pos:start="71:62" pos:end="71:64">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:14">case <expr pos:start="75:10" pos:end="75:13"><name pos:start="75:10" pos:end="75:13">MTC0</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:19">case <expr pos:start="77:10" pos:end="77:18"><name pos:start="77:10" pos:end="77:13">MTC0</name> <operator pos:start="77:15" pos:end="77:15">+</operator> <literal type="number" pos:start="77:17" pos:end="77:18">32</literal></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><call pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:25">check_cp0_enabled</name><argument_list pos:start="79:26" pos:end="79:30">(<argument pos:start="79:27" pos:end="79:29"><expr pos:start="79:27" pos:end="79:29"><name pos:start="79:27" pos:end="79:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="81:9" pos:end="93:9">{<block_content pos:start="83:13" pos:end="91:30">

            <decl_stmt pos:start="83:13" pos:end="83:37"><decl pos:start="83:13" pos:end="83:36"><type pos:start="83:13" pos:end="83:16"><name pos:start="83:13" pos:end="83:16">TCGv</name></type> <name pos:start="83:18" pos:end="83:19">t0</name> <init pos:start="83:21" pos:end="83:36">= <expr pos:start="83:23" pos:end="83:36"><call pos:start="83:23" pos:end="83:36"><name pos:start="83:23" pos:end="83:34">tcg_temp_new</name><argument_list pos:start="83:35" pos:end="83:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:33"><expr pos:start="87:13" pos:end="87:32"><call pos:start="87:13" pos:end="87:32"><name pos:start="87:13" pos:end="87:24">gen_load_gpr</name><argument_list pos:start="87:25" pos:end="87:32">(<argument pos:start="87:26" pos:end="87:27"><expr pos:start="87:26" pos:end="87:27"><name pos:start="87:26" pos:end="87:27">t0</name></expr></argument>, <argument pos:start="87:30" pos:end="87:31"><expr pos:start="87:30" pos:end="87:31"><name pos:start="87:30" pos:end="87:31">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:61"><expr pos:start="89:13" pos:end="89:60"><call pos:start="89:13" pos:end="89:60"><name pos:start="89:13" pos:end="89:20">gen_mtc0</name><argument_list pos:start="89:21" pos:end="89:60">(<argument pos:start="89:22" pos:end="89:24"><expr pos:start="89:22" pos:end="89:24"><name pos:start="89:22" pos:end="89:24">ctx</name></expr></argument>, <argument pos:start="89:27" pos:end="89:28"><expr pos:start="89:27" pos:end="89:28"><name pos:start="89:27" pos:end="89:28">t0</name></expr></argument>, <argument pos:start="89:31" pos:end="89:32"><expr pos:start="89:31" pos:end="89:32"><name pos:start="89:31" pos:end="89:32">rs</name></expr></argument>, <argument pos:start="89:35" pos:end="89:59"><expr pos:start="89:35" pos:end="89:59"><operator pos:start="89:35" pos:end="89:35">(</operator><name pos:start="89:36" pos:end="89:46"><name pos:start="89:36" pos:end="89:38">ctx</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:46">opcode</name></name> <operator pos:start="89:48" pos:end="89:49">&gt;&gt;</operator> <literal type="number" pos:start="89:51" pos:end="89:52">11</literal><operator pos:start="89:53" pos:end="89:53">)</operator> <operator pos:start="89:55" pos:end="89:55">&amp;</operator> <literal type="number" pos:start="89:57" pos:end="89:59">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:30"><expr pos:start="91:13" pos:end="91:29"><call pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:25">tcg_temp_free</name><argument_list pos:start="91:26" pos:end="91:29">(<argument pos:start="91:27" pos:end="91:28"><expr pos:start="91:27" pos:end="91:28"><name pos:start="91:27" pos:end="91:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="95:9" pos:end="98:0">break;</break>

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>

    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x2a</literal></expr>:</case>

        <switch pos:start="101:9" pos:end="131:9">switch <condition pos:start="101:16" pos:end="101:26">(<expr pos:start="101:17" pos:end="101:25"><name pos:start="101:17" pos:end="101:21">minor</name> <operator pos:start="101:23" pos:end="101:23">&amp;</operator> <literal type="number" pos:start="101:25" pos:end="101:25">3</literal></expr>)</condition> <block pos:start="101:28" pos:end="131:9">{<block_content pos:start="103:9" pos:end="129:35">

        <case pos:start="103:9" pos:end="103:22">case <expr pos:start="103:14" pos:end="103:21"><name pos:start="103:14" pos:end="103:21">MADD_ACC</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:71"><expr pos:start="105:13" pos:end="105:70"><call pos:start="105:13" pos:end="105:70"><name pos:start="105:13" pos:end="105:22">gen_muldiv</name><argument_list pos:start="105:23" pos:end="105:70">(<argument pos:start="105:24" pos:end="105:26"><expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:26">ctx</name></expr></argument>, <argument pos:start="105:29" pos:end="105:36"><expr pos:start="105:29" pos:end="105:36"><name pos:start="105:29" pos:end="105:36">OPC_MADD</name></expr></argument>, <argument pos:start="105:39" pos:end="105:61"><expr pos:start="105:39" pos:end="105:61"><operator pos:start="105:39" pos:end="105:39">(</operator><name pos:start="105:40" pos:end="105:50"><name pos:start="105:40" pos:end="105:42">ctx</name><operator pos:start="105:43" pos:end="105:44">-&gt;</operator><name pos:start="105:45" pos:end="105:50">opcode</name></name> <operator pos:start="105:52" pos:end="105:53">&gt;&gt;</operator> <literal type="number" pos:start="105:55" pos:end="105:56">14</literal><operator pos:start="105:57" pos:end="105:57">)</operator> <operator pos:start="105:59" pos:end="105:59">&amp;</operator> <literal type="number" pos:start="105:61" pos:end="105:61">3</literal></expr></argument>, <argument pos:start="105:64" pos:end="105:65"><expr pos:start="105:64" pos:end="105:65"><name pos:start="105:64" pos:end="105:65">rs</name></expr></argument>, <argument pos:start="105:68" pos:end="105:69"><expr pos:start="105:68" pos:end="105:69"><name pos:start="105:68" pos:end="105:69">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:23">case <expr pos:start="109:14" pos:end="109:22"><name pos:start="109:14" pos:end="109:22">MADDU_ACC</name></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:72"><expr pos:start="111:13" pos:end="111:71"><call pos:start="111:13" pos:end="111:71"><name pos:start="111:13" pos:end="111:22">gen_muldiv</name><argument_list pos:start="111:23" pos:end="111:71">(<argument pos:start="111:24" pos:end="111:26"><expr pos:start="111:24" pos:end="111:26"><name pos:start="111:24" pos:end="111:26">ctx</name></expr></argument>, <argument pos:start="111:29" pos:end="111:37"><expr pos:start="111:29" pos:end="111:37"><name pos:start="111:29" pos:end="111:37">OPC_MADDU</name></expr></argument>, <argument pos:start="111:40" pos:end="111:62"><expr pos:start="111:40" pos:end="111:62"><operator pos:start="111:40" pos:end="111:40">(</operator><name pos:start="111:41" pos:end="111:51"><name pos:start="111:41" pos:end="111:43">ctx</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:51">opcode</name></name> <operator pos:start="111:53" pos:end="111:54">&gt;&gt;</operator> <literal type="number" pos:start="111:56" pos:end="111:57">14</literal><operator pos:start="111:58" pos:end="111:58">)</operator> <operator pos:start="111:60" pos:end="111:60">&amp;</operator> <literal type="number" pos:start="111:62" pos:end="111:62">3</literal></expr></argument>, <argument pos:start="111:65" pos:end="111:66"><expr pos:start="111:65" pos:end="111:66"><name pos:start="111:65" pos:end="111:66">rs</name></expr></argument>, <argument pos:start="111:69" pos:end="111:70"><expr pos:start="111:69" pos:end="111:70"><name pos:start="111:69" pos:end="111:70">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <case pos:start="115:9" pos:end="115:22">case <expr pos:start="115:14" pos:end="115:21"><name pos:start="115:14" pos:end="115:21">MSUB_ACC</name></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:71"><expr pos:start="117:13" pos:end="117:70"><call pos:start="117:13" pos:end="117:70"><name pos:start="117:13" pos:end="117:22">gen_muldiv</name><argument_list pos:start="117:23" pos:end="117:70">(<argument pos:start="117:24" pos:end="117:26"><expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">ctx</name></expr></argument>, <argument pos:start="117:29" pos:end="117:36"><expr pos:start="117:29" pos:end="117:36"><name pos:start="117:29" pos:end="117:36">OPC_MSUB</name></expr></argument>, <argument pos:start="117:39" pos:end="117:61"><expr pos:start="117:39" pos:end="117:61"><operator pos:start="117:39" pos:end="117:39">(</operator><name pos:start="117:40" pos:end="117:50"><name pos:start="117:40" pos:end="117:42">ctx</name><operator pos:start="117:43" pos:end="117:44">-&gt;</operator><name pos:start="117:45" pos:end="117:50">opcode</name></name> <operator pos:start="117:52" pos:end="117:53">&gt;&gt;</operator> <literal type="number" pos:start="117:55" pos:end="117:56">14</literal><operator pos:start="117:57" pos:end="117:57">)</operator> <operator pos:start="117:59" pos:end="117:59">&amp;</operator> <literal type="number" pos:start="117:61" pos:end="117:61">3</literal></expr></argument>, <argument pos:start="117:64" pos:end="117:65"><expr pos:start="117:64" pos:end="117:65"><name pos:start="117:64" pos:end="117:65">rs</name></expr></argument>, <argument pos:start="117:68" pos:end="117:69"><expr pos:start="117:68" pos:end="117:69"><name pos:start="117:68" pos:end="117:69">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:23">case <expr pos:start="121:14" pos:end="121:22"><name pos:start="121:14" pos:end="121:22">MSUBU_ACC</name></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="123:72"><expr pos:start="123:13" pos:end="123:71"><call pos:start="123:13" pos:end="123:71"><name pos:start="123:13" pos:end="123:22">gen_muldiv</name><argument_list pos:start="123:23" pos:end="123:71">(<argument pos:start="123:24" pos:end="123:26"><expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">ctx</name></expr></argument>, <argument pos:start="123:29" pos:end="123:37"><expr pos:start="123:29" pos:end="123:37"><name pos:start="123:29" pos:end="123:37">OPC_MSUBU</name></expr></argument>, <argument pos:start="123:40" pos:end="123:62"><expr pos:start="123:40" pos:end="123:62"><operator pos:start="123:40" pos:end="123:40">(</operator><name pos:start="123:41" pos:end="123:51"><name pos:start="123:41" pos:end="123:43">ctx</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:51">opcode</name></name> <operator pos:start="123:53" pos:end="123:54">&gt;&gt;</operator> <literal type="number" pos:start="123:56" pos:end="123:57">14</literal><operator pos:start="123:58" pos:end="123:58">)</operator> <operator pos:start="123:60" pos:end="123:60">&amp;</operator> <literal type="number" pos:start="123:62" pos:end="123:62">3</literal></expr></argument>, <argument pos:start="123:65" pos:end="123:66"><expr pos:start="123:65" pos:end="123:66"><name pos:start="123:65" pos:end="123:66">rs</name></expr></argument>, <argument pos:start="123:69" pos:end="123:70"><expr pos:start="123:69" pos:end="123:70"><name pos:start="123:69" pos:end="123:70">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        <default pos:start="127:9" pos:end="127:16">default:</default>

            <goto pos:start="129:13" pos:end="129:35">goto <name pos:start="129:18" pos:end="129:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    <case pos:start="135:5" pos:end="135:14">case <expr pos:start="135:10" pos:end="135:13"><literal type="number" pos:start="135:10" pos:end="135:13">0x32</literal></expr>:</case>

        <switch pos:start="137:9" pos:end="155:9">switch <condition pos:start="137:16" pos:end="137:26">(<expr pos:start="137:17" pos:end="137:25"><name pos:start="137:17" pos:end="137:21">minor</name> <operator pos:start="137:23" pos:end="137:23">&amp;</operator> <literal type="number" pos:start="137:25" pos:end="137:25">3</literal></expr>)</condition> <block pos:start="137:28" pos:end="155:9">{<block_content pos:start="139:9" pos:end="153:35">

        <case pos:start="139:9" pos:end="139:22">case <expr pos:start="139:14" pos:end="139:21"><name pos:start="139:14" pos:end="139:21">MULT_ACC</name></expr>:</case>

            <expr_stmt pos:start="141:13" pos:end="141:71"><expr pos:start="141:13" pos:end="141:70"><call pos:start="141:13" pos:end="141:70"><name pos:start="141:13" pos:end="141:22">gen_muldiv</name><argument_list pos:start="141:23" pos:end="141:70">(<argument pos:start="141:24" pos:end="141:26"><expr pos:start="141:24" pos:end="141:26"><name pos:start="141:24" pos:end="141:26">ctx</name></expr></argument>, <argument pos:start="141:29" pos:end="141:36"><expr pos:start="141:29" pos:end="141:36"><name pos:start="141:29" pos:end="141:36">OPC_MULT</name></expr></argument>, <argument pos:start="141:39" pos:end="141:61"><expr pos:start="141:39" pos:end="141:61"><operator pos:start="141:39" pos:end="141:39">(</operator><name pos:start="141:40" pos:end="141:50"><name pos:start="141:40" pos:end="141:42">ctx</name><operator pos:start="141:43" pos:end="141:44">-&gt;</operator><name pos:start="141:45" pos:end="141:50">opcode</name></name> <operator pos:start="141:52" pos:end="141:53">&gt;&gt;</operator> <literal type="number" pos:start="141:55" pos:end="141:56">14</literal><operator pos:start="141:57" pos:end="141:57">)</operator> <operator pos:start="141:59" pos:end="141:59">&amp;</operator> <literal type="number" pos:start="141:61" pos:end="141:61">3</literal></expr></argument>, <argument pos:start="141:64" pos:end="141:65"><expr pos:start="141:64" pos:end="141:65"><name pos:start="141:64" pos:end="141:65">rs</name></expr></argument>, <argument pos:start="141:68" pos:end="141:69"><expr pos:start="141:68" pos:end="141:69"><name pos:start="141:68" pos:end="141:69">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:23">case <expr pos:start="145:14" pos:end="145:22"><name pos:start="145:14" pos:end="145:22">MULTU_ACC</name></expr>:</case>

            <expr_stmt pos:start="147:13" pos:end="147:72"><expr pos:start="147:13" pos:end="147:71"><call pos:start="147:13" pos:end="147:71"><name pos:start="147:13" pos:end="147:22">gen_muldiv</name><argument_list pos:start="147:23" pos:end="147:71">(<argument pos:start="147:24" pos:end="147:26"><expr pos:start="147:24" pos:end="147:26"><name pos:start="147:24" pos:end="147:26">ctx</name></expr></argument>, <argument pos:start="147:29" pos:end="147:37"><expr pos:start="147:29" pos:end="147:37"><name pos:start="147:29" pos:end="147:37">OPC_MULTU</name></expr></argument>, <argument pos:start="147:40" pos:end="147:62"><expr pos:start="147:40" pos:end="147:62"><operator pos:start="147:40" pos:end="147:40">(</operator><name pos:start="147:41" pos:end="147:51"><name pos:start="147:41" pos:end="147:43">ctx</name><operator pos:start="147:44" pos:end="147:45">-&gt;</operator><name pos:start="147:46" pos:end="147:51">opcode</name></name> <operator pos:start="147:53" pos:end="147:54">&gt;&gt;</operator> <literal type="number" pos:start="147:56" pos:end="147:57">14</literal><operator pos:start="147:58" pos:end="147:58">)</operator> <operator pos:start="147:60" pos:end="147:60">&amp;</operator> <literal type="number" pos:start="147:62" pos:end="147:62">3</literal></expr></argument>, <argument pos:start="147:65" pos:end="147:66"><expr pos:start="147:65" pos:end="147:66"><name pos:start="147:65" pos:end="147:66">rs</name></expr></argument>, <argument pos:start="147:69" pos:end="147:70"><expr pos:start="147:69" pos:end="147:70"><name pos:start="147:69" pos:end="147:70">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <default pos:start="151:9" pos:end="151:16">default:</default>

            <goto pos:start="153:13" pos:end="153:35">goto <name pos:start="153:18" pos:end="153:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:14">case <expr pos:start="159:10" pos:end="159:13"><literal type="number" pos:start="159:10" pos:end="159:13">0x2c</literal></expr>:</case>

        <switch pos:start="161:9" pos:end="295:9">switch <condition pos:start="161:16" pos:end="161:22">(<expr pos:start="161:17" pos:end="161:21"><name pos:start="161:17" pos:end="161:21">minor</name></expr>)</condition> <block pos:start="161:24" pos:end="295:9">{<block_content pos:start="163:9" pos:end="293:35">

        <case pos:start="163:9" pos:end="163:21">case <expr pos:start="163:14" pos:end="163:20"><name pos:start="163:14" pos:end="163:20">BITSWAP</name></expr>:</case>

            <expr_stmt pos:start="165:13" pos:end="165:42"><expr pos:start="165:13" pos:end="165:41"><call pos:start="165:13" pos:end="165:41"><name pos:start="165:13" pos:end="165:22">check_insn</name><argument_list pos:start="165:23" pos:end="165:41">(<argument pos:start="165:24" pos:end="165:26"><expr pos:start="165:24" pos:end="165:26"><name pos:start="165:24" pos:end="165:26">ctx</name></expr></argument>, <argument pos:start="165:29" pos:end="165:40"><expr pos:start="165:29" pos:end="165:40"><name pos:start="165:29" pos:end="165:40">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:50"><expr pos:start="167:13" pos:end="167:49"><call pos:start="167:13" pos:end="167:49"><name pos:start="167:13" pos:end="167:23">gen_bitswap</name><argument_list pos:start="167:24" pos:end="167:49">(<argument pos:start="167:25" pos:end="167:27"><expr pos:start="167:25" pos:end="167:27"><name pos:start="167:25" pos:end="167:27">ctx</name></expr></argument>, <argument pos:start="167:30" pos:end="167:40"><expr pos:start="167:30" pos:end="167:40"><name pos:start="167:30" pos:end="167:40">OPC_BITSWAP</name></expr></argument>, <argument pos:start="167:43" pos:end="167:44"><expr pos:start="167:43" pos:end="167:44"><name pos:start="167:43" pos:end="167:44">rs</name></expr></argument>, <argument pos:start="167:47" pos:end="167:48"><expr pos:start="167:47" pos:end="167:48"><name pos:start="167:47" pos:end="167:48">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <case pos:start="171:9" pos:end="171:17">case <expr pos:start="171:14" pos:end="171:16"><name pos:start="171:14" pos:end="171:16">SEB</name></expr>:</case>

            <expr_stmt pos:start="173:13" pos:end="173:44"><expr pos:start="173:13" pos:end="173:43"><call pos:start="173:13" pos:end="173:43"><name pos:start="173:13" pos:end="173:21">gen_bshfl</name><argument_list pos:start="173:22" pos:end="173:43">(<argument pos:start="173:23" pos:end="173:25"><expr pos:start="173:23" pos:end="173:25"><name pos:start="173:23" pos:end="173:25">ctx</name></expr></argument>, <argument pos:start="173:28" pos:end="173:34"><expr pos:start="173:28" pos:end="173:34"><name pos:start="173:28" pos:end="173:34">OPC_SEB</name></expr></argument>, <argument pos:start="173:37" pos:end="173:38"><expr pos:start="173:37" pos:end="173:38"><name pos:start="173:37" pos:end="173:38">rs</name></expr></argument>, <argument pos:start="173:41" pos:end="173:42"><expr pos:start="173:41" pos:end="173:42"><name pos:start="173:41" pos:end="173:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <case pos:start="177:9" pos:end="177:17">case <expr pos:start="177:14" pos:end="177:16"><name pos:start="177:14" pos:end="177:16">SEH</name></expr>:</case>

            <expr_stmt pos:start="179:13" pos:end="179:44"><expr pos:start="179:13" pos:end="179:43"><call pos:start="179:13" pos:end="179:43"><name pos:start="179:13" pos:end="179:21">gen_bshfl</name><argument_list pos:start="179:22" pos:end="179:43">(<argument pos:start="179:23" pos:end="179:25"><expr pos:start="179:23" pos:end="179:25"><name pos:start="179:23" pos:end="179:25">ctx</name></expr></argument>, <argument pos:start="179:28" pos:end="179:34"><expr pos:start="179:28" pos:end="179:34"><name pos:start="179:28" pos:end="179:34">OPC_SEH</name></expr></argument>, <argument pos:start="179:37" pos:end="179:38"><expr pos:start="179:37" pos:end="179:38"><name pos:start="179:37" pos:end="179:38">rs</name></expr></argument>, <argument pos:start="179:41" pos:end="179:42"><expr pos:start="179:41" pos:end="179:42"><name pos:start="179:41" pos:end="179:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        <case pos:start="183:9" pos:end="183:17">case <expr pos:start="183:14" pos:end="183:16"><name pos:start="183:14" pos:end="183:16">CLO</name></expr>:</case>

            <expr_stmt pos:start="185:13" pos:end="185:32"><expr pos:start="185:13" pos:end="185:31"><name pos:start="185:13" pos:end="185:21">mips32_op</name> <operator pos:start="185:23" pos:end="185:23">=</operator> <name pos:start="185:25" pos:end="185:31">OPC_CLO</name></expr>;</expr_stmt>

            <goto pos:start="187:13" pos:end="187:23">goto <name pos:start="187:18" pos:end="187:22">do_cl</name>;</goto>

        <case pos:start="189:9" pos:end="189:17">case <expr pos:start="189:14" pos:end="189:16"><name pos:start="189:14" pos:end="189:16">CLZ</name></expr>:</case>

            <expr_stmt pos:start="191:13" pos:end="191:32"><expr pos:start="191:13" pos:end="191:31"><name pos:start="191:13" pos:end="191:21">mips32_op</name> <operator pos:start="191:23" pos:end="191:23">=</operator> <name pos:start="191:25" pos:end="191:31">OPC_CLZ</name></expr>;</expr_stmt>

        <label pos:start="193:9" pos:end="193:14"><name pos:start="193:9" pos:end="193:13">do_cl</name>:</label>

            <expr_stmt pos:start="195:13" pos:end="195:40"><expr pos:start="195:13" pos:end="195:39"><call pos:start="195:13" pos:end="195:39"><name pos:start="195:13" pos:end="195:22">check_insn</name><argument_list pos:start="195:23" pos:end="195:39">(<argument pos:start="195:24" pos:end="195:26"><expr pos:start="195:24" pos:end="195:26"><name pos:start="195:24" pos:end="195:26">ctx</name></expr></argument>, <argument pos:start="195:29" pos:end="195:38"><expr pos:start="195:29" pos:end="195:38"><name pos:start="195:29" pos:end="195:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:43"><expr pos:start="197:13" pos:end="197:42"><call pos:start="197:13" pos:end="197:42"><name pos:start="197:13" pos:end="197:18">gen_cl</name><argument_list pos:start="197:19" pos:end="197:42">(<argument pos:start="197:20" pos:end="197:22"><expr pos:start="197:20" pos:end="197:22"><name pos:start="197:20" pos:end="197:22">ctx</name></expr></argument>, <argument pos:start="197:25" pos:end="197:33"><expr pos:start="197:25" pos:end="197:33"><name pos:start="197:25" pos:end="197:33">mips32_op</name></expr></argument>, <argument pos:start="197:36" pos:end="197:37"><expr pos:start="197:36" pos:end="197:37"><name pos:start="197:36" pos:end="197:37">rt</name></expr></argument>, <argument pos:start="197:40" pos:end="197:41"><expr pos:start="197:40" pos:end="197:41"><name pos:start="197:40" pos:end="197:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        <case pos:start="201:9" pos:end="201:19">case <expr pos:start="201:14" pos:end="201:18"><name pos:start="201:14" pos:end="201:18">RDHWR</name></expr>:</case>

            <expr_stmt pos:start="203:13" pos:end="203:35"><expr pos:start="203:13" pos:end="203:34"><call pos:start="203:13" pos:end="203:34"><name pos:start="203:13" pos:end="203:21">gen_rdhwr</name><argument_list pos:start="203:22" pos:end="203:34">(<argument pos:start="203:23" pos:end="203:25"><expr pos:start="203:23" pos:end="203:25"><name pos:start="203:23" pos:end="203:25">ctx</name></expr></argument>, <argument pos:start="203:28" pos:end="203:29"><expr pos:start="203:28" pos:end="203:29"><name pos:start="203:28" pos:end="203:29">rt</name></expr></argument>, <argument pos:start="203:32" pos:end="203:33"><expr pos:start="203:32" pos:end="203:33"><name pos:start="203:32" pos:end="203:33">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:18">case <expr pos:start="207:14" pos:end="207:17"><name pos:start="207:14" pos:end="207:17">WSBH</name></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="209:45"><expr pos:start="209:13" pos:end="209:44"><call pos:start="209:13" pos:end="209:44"><name pos:start="209:13" pos:end="209:21">gen_bshfl</name><argument_list pos:start="209:22" pos:end="209:44">(<argument pos:start="209:23" pos:end="209:25"><expr pos:start="209:23" pos:end="209:25"><name pos:start="209:23" pos:end="209:25">ctx</name></expr></argument>, <argument pos:start="209:28" pos:end="209:35"><expr pos:start="209:28" pos:end="209:35"><name pos:start="209:28" pos:end="209:35">OPC_WSBH</name></expr></argument>, <argument pos:start="209:38" pos:end="209:39"><expr pos:start="209:38" pos:end="209:39"><name pos:start="209:38" pos:end="209:39">rs</name></expr></argument>, <argument pos:start="209:42" pos:end="209:43"><expr pos:start="209:42" pos:end="209:43"><name pos:start="209:42" pos:end="209:43">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        <case pos:start="213:9" pos:end="213:18">case <expr pos:start="213:14" pos:end="213:17"><name pos:start="213:14" pos:end="213:17">MULT</name></expr>:</case>

            <expr_stmt pos:start="215:13" pos:end="215:54"><expr pos:start="215:13" pos:end="215:53"><call pos:start="215:13" pos:end="215:53"><name pos:start="215:13" pos:end="215:34">check_insn_opc_removed</name><argument_list pos:start="215:35" pos:end="215:53">(<argument pos:start="215:36" pos:end="215:38"><expr pos:start="215:36" pos:end="215:38"><name pos:start="215:36" pos:end="215:38">ctx</name></expr></argument>, <argument pos:start="215:41" pos:end="215:52"><expr pos:start="215:41" pos:end="215:52"><name pos:start="215:41" pos:end="215:52">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:33"><expr pos:start="217:13" pos:end="217:32"><name pos:start="217:13" pos:end="217:21">mips32_op</name> <operator pos:start="217:23" pos:end="217:23">=</operator> <name pos:start="217:25" pos:end="217:32">OPC_MULT</name></expr>;</expr_stmt>

            <goto pos:start="219:13" pos:end="219:24">goto <name pos:start="219:18" pos:end="219:23">do_mul</name>;</goto>

        <case pos:start="221:9" pos:end="221:19">case <expr pos:start="221:14" pos:end="221:18"><name pos:start="221:14" pos:end="221:18">MULTU</name></expr>:</case>

            <expr_stmt pos:start="223:13" pos:end="223:54"><expr pos:start="223:13" pos:end="223:53"><call pos:start="223:13" pos:end="223:53"><name pos:start="223:13" pos:end="223:34">check_insn_opc_removed</name><argument_list pos:start="223:35" pos:end="223:53">(<argument pos:start="223:36" pos:end="223:38"><expr pos:start="223:36" pos:end="223:38"><name pos:start="223:36" pos:end="223:38">ctx</name></expr></argument>, <argument pos:start="223:41" pos:end="223:52"><expr pos:start="223:41" pos:end="223:52"><name pos:start="223:41" pos:end="223:52">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:34"><expr pos:start="225:13" pos:end="225:33"><name pos:start="225:13" pos:end="225:21">mips32_op</name> <operator pos:start="225:23" pos:end="225:23">=</operator> <name pos:start="225:25" pos:end="225:33">OPC_MULTU</name></expr>;</expr_stmt>

            <goto pos:start="227:13" pos:end="227:24">goto <name pos:start="227:18" pos:end="227:23">do_mul</name>;</goto>

        <case pos:start="229:9" pos:end="229:17">case <expr pos:start="229:14" pos:end="229:16"><name pos:start="229:14" pos:end="229:16">DIV</name></expr>:</case>

            <expr_stmt pos:start="231:13" pos:end="231:54"><expr pos:start="231:13" pos:end="231:53"><call pos:start="231:13" pos:end="231:53"><name pos:start="231:13" pos:end="231:34">check_insn_opc_removed</name><argument_list pos:start="231:35" pos:end="231:53">(<argument pos:start="231:36" pos:end="231:38"><expr pos:start="231:36" pos:end="231:38"><name pos:start="231:36" pos:end="231:38">ctx</name></expr></argument>, <argument pos:start="231:41" pos:end="231:52"><expr pos:start="231:41" pos:end="231:52"><name pos:start="231:41" pos:end="231:52">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:32"><expr pos:start="233:13" pos:end="233:31"><name pos:start="233:13" pos:end="233:21">mips32_op</name> <operator pos:start="233:23" pos:end="233:23">=</operator> <name pos:start="233:25" pos:end="233:31">OPC_DIV</name></expr>;</expr_stmt>

            <goto pos:start="235:13" pos:end="235:24">goto <name pos:start="235:18" pos:end="235:23">do_div</name>;</goto>

        <case pos:start="237:9" pos:end="237:18">case <expr pos:start="237:14" pos:end="237:17"><name pos:start="237:14" pos:end="237:17">DIVU</name></expr>:</case>

            <expr_stmt pos:start="239:13" pos:end="239:54"><expr pos:start="239:13" pos:end="239:53"><call pos:start="239:13" pos:end="239:53"><name pos:start="239:13" pos:end="239:34">check_insn_opc_removed</name><argument_list pos:start="239:35" pos:end="239:53">(<argument pos:start="239:36" pos:end="239:38"><expr pos:start="239:36" pos:end="239:38"><name pos:start="239:36" pos:end="239:38">ctx</name></expr></argument>, <argument pos:start="239:41" pos:end="239:52"><expr pos:start="239:41" pos:end="239:52"><name pos:start="239:41" pos:end="239:52">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:33"><expr pos:start="241:13" pos:end="241:32"><name pos:start="241:13" pos:end="241:21">mips32_op</name> <operator pos:start="241:23" pos:end="241:23">=</operator> <name pos:start="241:25" pos:end="241:32">OPC_DIVU</name></expr>;</expr_stmt>

            <goto pos:start="243:13" pos:end="243:24">goto <name pos:start="243:18" pos:end="243:23">do_div</name>;</goto>

        <label pos:start="245:9" pos:end="245:15"><name pos:start="245:9" pos:end="245:14">do_div</name>:</label>

            <expr_stmt pos:start="247:13" pos:end="247:40"><expr pos:start="247:13" pos:end="247:39"><call pos:start="247:13" pos:end="247:39"><name pos:start="247:13" pos:end="247:22">check_insn</name><argument_list pos:start="247:23" pos:end="247:39">(<argument pos:start="247:24" pos:end="247:26"><expr pos:start="247:24" pos:end="247:26"><name pos:start="247:24" pos:end="247:26">ctx</name></expr></argument>, <argument pos:start="247:29" pos:end="247:38"><expr pos:start="247:29" pos:end="247:38"><name pos:start="247:29" pos:end="247:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:50"><expr pos:start="249:13" pos:end="249:49"><call pos:start="249:13" pos:end="249:49"><name pos:start="249:13" pos:end="249:22">gen_muldiv</name><argument_list pos:start="249:23" pos:end="249:49">(<argument pos:start="249:24" pos:end="249:26"><expr pos:start="249:24" pos:end="249:26"><name pos:start="249:24" pos:end="249:26">ctx</name></expr></argument>, <argument pos:start="249:29" pos:end="249:37"><expr pos:start="249:29" pos:end="249:37"><name pos:start="249:29" pos:end="249:37">mips32_op</name></expr></argument>, <argument pos:start="249:40" pos:end="249:40"><expr pos:start="249:40" pos:end="249:40"><literal type="number" pos:start="249:40" pos:end="249:40">0</literal></expr></argument>, <argument pos:start="249:43" pos:end="249:44"><expr pos:start="249:43" pos:end="249:44"><name pos:start="249:43" pos:end="249:44">rs</name></expr></argument>, <argument pos:start="249:47" pos:end="249:48"><expr pos:start="249:47" pos:end="249:48"><name pos:start="249:47" pos:end="249:48">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="251:13" pos:end="251:18">break;</break>

        <case pos:start="253:9" pos:end="253:18">case <expr pos:start="253:14" pos:end="253:17"><name pos:start="253:14" pos:end="253:17">MADD</name></expr>:</case>

            <expr_stmt pos:start="255:13" pos:end="255:54"><expr pos:start="255:13" pos:end="255:53"><call pos:start="255:13" pos:end="255:53"><name pos:start="255:13" pos:end="255:34">check_insn_opc_removed</name><argument_list pos:start="255:35" pos:end="255:53">(<argument pos:start="255:36" pos:end="255:38"><expr pos:start="255:36" pos:end="255:38"><name pos:start="255:36" pos:end="255:38">ctx</name></expr></argument>, <argument pos:start="255:41" pos:end="255:52"><expr pos:start="255:41" pos:end="255:52"><name pos:start="255:41" pos:end="255:52">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:33"><expr pos:start="257:13" pos:end="257:32"><name pos:start="257:13" pos:end="257:21">mips32_op</name> <operator pos:start="257:23" pos:end="257:23">=</operator> <name pos:start="257:25" pos:end="257:32">OPC_MADD</name></expr>;</expr_stmt>

            <goto pos:start="259:13" pos:end="259:24">goto <name pos:start="259:18" pos:end="259:23">do_mul</name>;</goto>

        <case pos:start="261:9" pos:end="261:19">case <expr pos:start="261:14" pos:end="261:18"><name pos:start="261:14" pos:end="261:18">MADDU</name></expr>:</case>

            <expr_stmt pos:start="263:13" pos:end="263:54"><expr pos:start="263:13" pos:end="263:53"><call pos:start="263:13" pos:end="263:53"><name pos:start="263:13" pos:end="263:34">check_insn_opc_removed</name><argument_list pos:start="263:35" pos:end="263:53">(<argument pos:start="263:36" pos:end="263:38"><expr pos:start="263:36" pos:end="263:38"><name pos:start="263:36" pos:end="263:38">ctx</name></expr></argument>, <argument pos:start="263:41" pos:end="263:52"><expr pos:start="263:41" pos:end="263:52"><name pos:start="263:41" pos:end="263:52">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:34"><expr pos:start="265:13" pos:end="265:33"><name pos:start="265:13" pos:end="265:21">mips32_op</name> <operator pos:start="265:23" pos:end="265:23">=</operator> <name pos:start="265:25" pos:end="265:33">OPC_MADDU</name></expr>;</expr_stmt>

            <goto pos:start="267:13" pos:end="267:24">goto <name pos:start="267:18" pos:end="267:23">do_mul</name>;</goto>

        <case pos:start="269:9" pos:end="269:18">case <expr pos:start="269:14" pos:end="269:17"><name pos:start="269:14" pos:end="269:17">MSUB</name></expr>:</case>

            <expr_stmt pos:start="271:13" pos:end="271:54"><expr pos:start="271:13" pos:end="271:53"><call pos:start="271:13" pos:end="271:53"><name pos:start="271:13" pos:end="271:34">check_insn_opc_removed</name><argument_list pos:start="271:35" pos:end="271:53">(<argument pos:start="271:36" pos:end="271:38"><expr pos:start="271:36" pos:end="271:38"><name pos:start="271:36" pos:end="271:38">ctx</name></expr></argument>, <argument pos:start="271:41" pos:end="271:52"><expr pos:start="271:41" pos:end="271:52"><name pos:start="271:41" pos:end="271:52">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:33"><expr pos:start="273:13" pos:end="273:32"><name pos:start="273:13" pos:end="273:21">mips32_op</name> <operator pos:start="273:23" pos:end="273:23">=</operator> <name pos:start="273:25" pos:end="273:32">OPC_MSUB</name></expr>;</expr_stmt>

            <goto pos:start="275:13" pos:end="275:24">goto <name pos:start="275:18" pos:end="275:23">do_mul</name>;</goto>

        <case pos:start="277:9" pos:end="277:19">case <expr pos:start="277:14" pos:end="277:18"><name pos:start="277:14" pos:end="277:18">MSUBU</name></expr>:</case>

            <expr_stmt pos:start="279:13" pos:end="279:54"><expr pos:start="279:13" pos:end="279:53"><call pos:start="279:13" pos:end="279:53"><name pos:start="279:13" pos:end="279:34">check_insn_opc_removed</name><argument_list pos:start="279:35" pos:end="279:53">(<argument pos:start="279:36" pos:end="279:38"><expr pos:start="279:36" pos:end="279:38"><name pos:start="279:36" pos:end="279:38">ctx</name></expr></argument>, <argument pos:start="279:41" pos:end="279:52"><expr pos:start="279:41" pos:end="279:52"><name pos:start="279:41" pos:end="279:52">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:34"><expr pos:start="281:13" pos:end="281:33"><name pos:start="281:13" pos:end="281:21">mips32_op</name> <operator pos:start="281:23" pos:end="281:23">=</operator> <name pos:start="281:25" pos:end="281:33">OPC_MSUBU</name></expr>;</expr_stmt>

        <label pos:start="283:9" pos:end="283:15"><name pos:start="283:9" pos:end="283:14">do_mul</name>:</label>

            <expr_stmt pos:start="285:13" pos:end="285:40"><expr pos:start="285:13" pos:end="285:39"><call pos:start="285:13" pos:end="285:39"><name pos:start="285:13" pos:end="285:22">check_insn</name><argument_list pos:start="285:23" pos:end="285:39">(<argument pos:start="285:24" pos:end="285:26"><expr pos:start="285:24" pos:end="285:26"><name pos:start="285:24" pos:end="285:26">ctx</name></expr></argument>, <argument pos:start="285:29" pos:end="285:38"><expr pos:start="285:29" pos:end="285:38"><name pos:start="285:29" pos:end="285:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:50"><expr pos:start="287:13" pos:end="287:49"><call pos:start="287:13" pos:end="287:49"><name pos:start="287:13" pos:end="287:22">gen_muldiv</name><argument_list pos:start="287:23" pos:end="287:49">(<argument pos:start="287:24" pos:end="287:26"><expr pos:start="287:24" pos:end="287:26"><name pos:start="287:24" pos:end="287:26">ctx</name></expr></argument>, <argument pos:start="287:29" pos:end="287:37"><expr pos:start="287:29" pos:end="287:37"><name pos:start="287:29" pos:end="287:37">mips32_op</name></expr></argument>, <argument pos:start="287:40" pos:end="287:40"><expr pos:start="287:40" pos:end="287:40"><literal type="number" pos:start="287:40" pos:end="287:40">0</literal></expr></argument>, <argument pos:start="287:43" pos:end="287:44"><expr pos:start="287:43" pos:end="287:44"><name pos:start="287:43" pos:end="287:44">rs</name></expr></argument>, <argument pos:start="287:47" pos:end="287:48"><expr pos:start="287:47" pos:end="287:48"><name pos:start="287:47" pos:end="287:48">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="289:13" pos:end="289:18">break;</break>

        <default pos:start="291:9" pos:end="291:16">default:</default>

            <goto pos:start="293:13" pos:end="293:35">goto <name pos:start="293:18" pos:end="293:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="297:9" pos:end="297:14">break;</break>

    <case pos:start="299:5" pos:end="299:14">case <expr pos:start="299:10" pos:end="299:13"><literal type="number" pos:start="299:10" pos:end="299:13">0x34</literal></expr>:</case>

        <switch pos:start="301:9" pos:end="323:9">switch <condition pos:start="301:16" pos:end="301:22">(<expr pos:start="301:17" pos:end="301:21"><name pos:start="301:17" pos:end="301:21">minor</name></expr>)</condition> <block pos:start="301:24" pos:end="323:9">{<block_content pos:start="303:9" pos:end="321:35">

        <case pos:start="303:9" pos:end="303:18">case <expr pos:start="303:14" pos:end="303:17"><name pos:start="303:14" pos:end="303:17">MFC2</name></expr>:</case>

        <case pos:start="305:9" pos:end="305:18">case <expr pos:start="305:14" pos:end="305:17"><name pos:start="305:14" pos:end="305:17">MTC2</name></expr>:</case>

        <case pos:start="307:9" pos:end="307:19">case <expr pos:start="307:14" pos:end="307:18"><name pos:start="307:14" pos:end="307:18">MFHC2</name></expr>:</case>

        <case pos:start="309:9" pos:end="309:19">case <expr pos:start="309:14" pos:end="309:18"><name pos:start="309:14" pos:end="309:18">MTHC2</name></expr>:</case>

        <case pos:start="311:9" pos:end="311:18">case <expr pos:start="311:14" pos:end="311:17"><name pos:start="311:14" pos:end="311:17">CFC2</name></expr>:</case>

        <case pos:start="313:9" pos:end="313:18">case <expr pos:start="313:14" pos:end="313:17"><name pos:start="313:14" pos:end="313:17">CTC2</name></expr>:</case>

            <expr_stmt pos:start="315:13" pos:end="315:53"><expr pos:start="315:13" pos:end="315:52"><call pos:start="315:13" pos:end="315:52"><name pos:start="315:13" pos:end="315:34">generate_exception_err</name><argument_list pos:start="315:35" pos:end="315:52">(<argument pos:start="315:36" pos:end="315:38"><expr pos:start="315:36" pos:end="315:38"><name pos:start="315:36" pos:end="315:38">ctx</name></expr></argument>, <argument pos:start="315:41" pos:end="315:48"><expr pos:start="315:41" pos:end="315:48"><name pos:start="315:41" pos:end="315:48">EXCP_CpU</name></expr></argument>, <argument pos:start="315:51" pos:end="315:51"><expr pos:start="315:51" pos:end="315:51"><literal type="number" pos:start="315:51" pos:end="315:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="317:13" pos:end="317:18">break;</break>

        <default pos:start="319:9" pos:end="319:16">default:</default>

            <goto pos:start="321:13" pos:end="321:35">goto <name pos:start="321:18" pos:end="321:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="325:9" pos:end="325:14">break;</break>

    <case pos:start="327:5" pos:end="327:14">case <expr pos:start="327:10" pos:end="327:13"><literal type="number" pos:start="327:10" pos:end="327:13">0x3c</literal></expr>:</case>

        <switch pos:start="329:9" pos:end="369:9">switch <condition pos:start="329:16" pos:end="329:22">(<expr pos:start="329:17" pos:end="329:21"><name pos:start="329:17" pos:end="329:21">minor</name></expr>)</condition> <block pos:start="329:24" pos:end="369:9">{<block_content pos:start="331:9" pos:end="367:35">

        <case pos:start="331:9" pos:end="331:18">case <expr pos:start="331:14" pos:end="331:17"><name pos:start="331:14" pos:end="331:17">JALR</name></expr>:</case>    <comment type="block" pos:start="331:23" pos:end="331:33">/* JALRC */</comment>

        <case pos:start="333:9" pos:end="333:21">case <expr pos:start="333:14" pos:end="333:20"><name pos:start="333:14" pos:end="333:20">JALR_HB</name></expr>:</case> <comment type="block" pos:start="333:23" pos:end="333:36">/* JALRC_HB */</comment>

            <if_stmt pos:start="335:13" pos:end="349:13"><if pos:start="335:13" pos:end="341:13">if <condition pos:start="335:16" pos:end="335:47">(<expr pos:start="335:17" pos:end="335:46"><name pos:start="335:17" pos:end="335:31"><name pos:start="335:17" pos:end="335:19">ctx</name><operator pos:start="335:20" pos:end="335:21">-&gt;</operator><name pos:start="335:22" pos:end="335:31">insn_flags</name></name> <operator pos:start="335:33" pos:end="335:33">&amp;</operator> <name pos:start="335:35" pos:end="335:46">ISA_MIPS32R6</name></expr>)</condition> <block pos:start="335:49" pos:end="341:13">{<block_content pos:start="339:17" pos:end="339:67">

                <comment type="block" pos:start="337:17" pos:end="337:37">/* JALRC, JALRC_HB */</comment>

                <expr_stmt pos:start="339:17" pos:end="339:67"><expr pos:start="339:17" pos:end="339:66"><call pos:start="339:17" pos:end="339:66"><name pos:start="339:17" pos:end="339:34">gen_compute_branch</name><argument_list pos:start="339:35" pos:end="339:66">(<argument pos:start="339:36" pos:end="339:38"><expr pos:start="339:36" pos:end="339:38"><name pos:start="339:36" pos:end="339:38">ctx</name></expr></argument>, <argument pos:start="339:41" pos:end="339:48"><expr pos:start="339:41" pos:end="339:48"><name pos:start="339:41" pos:end="339:48">OPC_JALR</name></expr></argument>, <argument pos:start="339:51" pos:end="339:51"><expr pos:start="339:51" pos:end="339:51"><literal type="number" pos:start="339:51" pos:end="339:51">4</literal></expr></argument>, <argument pos:start="339:54" pos:end="339:55"><expr pos:start="339:54" pos:end="339:55"><name pos:start="339:54" pos:end="339:55">rs</name></expr></argument>, <argument pos:start="339:58" pos:end="339:59"><expr pos:start="339:58" pos:end="339:59"><name pos:start="339:58" pos:end="339:59">rt</name></expr></argument>, <argument pos:start="339:62" pos:end="339:62"><expr pos:start="339:62" pos:end="339:62"><literal type="number" pos:start="339:62" pos:end="339:62">0</literal></expr></argument>, <argument pos:start="339:65" pos:end="339:65"><expr pos:start="339:65" pos:end="339:65"><literal type="number" pos:start="339:65" pos:end="339:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="341:15" pos:end="349:13">else <block pos:start="341:20" pos:end="349:13">{<block_content pos:start="345:17" pos:end="347:53">

                <comment type="block" pos:start="343:17" pos:end="343:35">/* JALR, JALR_HB */</comment>

                <expr_stmt pos:start="345:17" pos:end="345:67"><expr pos:start="345:17" pos:end="345:66"><call pos:start="345:17" pos:end="345:66"><name pos:start="345:17" pos:end="345:34">gen_compute_branch</name><argument_list pos:start="345:35" pos:end="345:66">(<argument pos:start="345:36" pos:end="345:38"><expr pos:start="345:36" pos:end="345:38"><name pos:start="345:36" pos:end="345:38">ctx</name></expr></argument>, <argument pos:start="345:41" pos:end="345:48"><expr pos:start="345:41" pos:end="345:48"><name pos:start="345:41" pos:end="345:48">OPC_JALR</name></expr></argument>, <argument pos:start="345:51" pos:end="345:51"><expr pos:start="345:51" pos:end="345:51"><literal type="number" pos:start="345:51" pos:end="345:51">4</literal></expr></argument>, <argument pos:start="345:54" pos:end="345:55"><expr pos:start="345:54" pos:end="345:55"><name pos:start="345:54" pos:end="345:55">rs</name></expr></argument>, <argument pos:start="345:58" pos:end="345:59"><expr pos:start="345:58" pos:end="345:59"><name pos:start="345:58" pos:end="345:59">rt</name></expr></argument>, <argument pos:start="345:62" pos:end="345:62"><expr pos:start="345:62" pos:end="345:62"><literal type="number" pos:start="345:62" pos:end="345:62">0</literal></expr></argument>, <argument pos:start="345:65" pos:end="345:65"><expr pos:start="345:65" pos:end="345:65"><literal type="number" pos:start="345:65" pos:end="345:65">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:53"><expr pos:start="347:17" pos:end="347:52"><name pos:start="347:17" pos:end="347:27"><name pos:start="347:17" pos:end="347:19">ctx</name><operator pos:start="347:20" pos:end="347:21">-&gt;</operator><name pos:start="347:22" pos:end="347:27">hflags</name></name> <operator pos:start="347:29" pos:end="347:30">|=</operator> <name pos:start="347:32" pos:end="347:52">MIPS_HFLAG_BDS_STRICT</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="351:13" pos:end="351:18">break;</break>

        <case pos:start="353:9" pos:end="353:19">case <expr pos:start="353:14" pos:end="353:18"><name pos:start="353:14" pos:end="353:18">JALRS</name></expr>:</case>

        <case pos:start="355:9" pos:end="355:22">case <expr pos:start="355:14" pos:end="355:21"><name pos:start="355:14" pos:end="355:21">JALRS_HB</name></expr>:</case>

            <expr_stmt pos:start="357:13" pos:end="357:54"><expr pos:start="357:13" pos:end="357:53"><call pos:start="357:13" pos:end="357:53"><name pos:start="357:13" pos:end="357:34">check_insn_opc_removed</name><argument_list pos:start="357:35" pos:end="357:53">(<argument pos:start="357:36" pos:end="357:38"><expr pos:start="357:36" pos:end="357:38"><name pos:start="357:36" pos:end="357:38">ctx</name></expr></argument>, <argument pos:start="357:41" pos:end="357:52"><expr pos:start="357:41" pos:end="357:52"><name pos:start="357:41" pos:end="357:52">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:63"><expr pos:start="359:13" pos:end="359:62"><call pos:start="359:13" pos:end="359:62"><name pos:start="359:13" pos:end="359:30">gen_compute_branch</name><argument_list pos:start="359:31" pos:end="359:62">(<argument pos:start="359:32" pos:end="359:34"><expr pos:start="359:32" pos:end="359:34"><name pos:start="359:32" pos:end="359:34">ctx</name></expr></argument>, <argument pos:start="359:37" pos:end="359:44"><expr pos:start="359:37" pos:end="359:44"><name pos:start="359:37" pos:end="359:44">OPC_JALR</name></expr></argument>, <argument pos:start="359:47" pos:end="359:47"><expr pos:start="359:47" pos:end="359:47"><literal type="number" pos:start="359:47" pos:end="359:47">4</literal></expr></argument>, <argument pos:start="359:50" pos:end="359:51"><expr pos:start="359:50" pos:end="359:51"><name pos:start="359:50" pos:end="359:51">rs</name></expr></argument>, <argument pos:start="359:54" pos:end="359:55"><expr pos:start="359:54" pos:end="359:55"><name pos:start="359:54" pos:end="359:55">rt</name></expr></argument>, <argument pos:start="359:58" pos:end="359:58"><expr pos:start="359:58" pos:end="359:58"><literal type="number" pos:start="359:58" pos:end="359:58">0</literal></expr></argument>, <argument pos:start="359:61" pos:end="359:61"><expr pos:start="359:61" pos:end="359:61"><literal type="number" pos:start="359:61" pos:end="359:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:49"><expr pos:start="361:13" pos:end="361:48"><name pos:start="361:13" pos:end="361:23"><name pos:start="361:13" pos:end="361:15">ctx</name><operator pos:start="361:16" pos:end="361:17">-&gt;</operator><name pos:start="361:18" pos:end="361:23">hflags</name></name> <operator pos:start="361:25" pos:end="361:26">|=</operator> <name pos:start="361:28" pos:end="361:48">MIPS_HFLAG_BDS_STRICT</name></expr>;</expr_stmt>

            <break pos:start="363:13" pos:end="363:18">break;</break>

        <default pos:start="365:9" pos:end="365:16">default:</default>

            <goto pos:start="367:13" pos:end="367:35">goto <name pos:start="367:18" pos:end="367:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="371:9" pos:end="371:14">break;</break>

    <case pos:start="373:5" pos:end="373:14">case <expr pos:start="373:10" pos:end="373:13"><literal type="number" pos:start="373:10" pos:end="373:13">0x05</literal></expr>:</case>

        <switch pos:start="375:9" pos:end="401:9">switch <condition pos:start="375:16" pos:end="375:22">(<expr pos:start="375:17" pos:end="375:21"><name pos:start="375:17" pos:end="375:21">minor</name></expr>)</condition> <block pos:start="375:24" pos:end="401:9">{<block_content pos:start="377:9" pos:end="399:35">

        <case pos:start="377:9" pos:end="377:20">case <expr pos:start="377:14" pos:end="377:19"><name pos:start="377:14" pos:end="377:19">RDPGPR</name></expr>:</case>

            <expr_stmt pos:start="379:13" pos:end="379:35"><expr pos:start="379:13" pos:end="379:34"><call pos:start="379:13" pos:end="379:34"><name pos:start="379:13" pos:end="379:29">check_cp0_enabled</name><argument_list pos:start="379:30" pos:end="379:34">(<argument pos:start="379:31" pos:end="379:33"><expr pos:start="379:31" pos:end="379:33"><name pos:start="379:31" pos:end="379:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:42"><expr pos:start="381:13" pos:end="381:41"><call pos:start="381:13" pos:end="381:41"><name pos:start="381:13" pos:end="381:22">check_insn</name><argument_list pos:start="381:23" pos:end="381:41">(<argument pos:start="381:24" pos:end="381:26"><expr pos:start="381:24" pos:end="381:26"><name pos:start="381:24" pos:end="381:26">ctx</name></expr></argument>, <argument pos:start="381:29" pos:end="381:40"><expr pos:start="381:29" pos:end="381:40"><name pos:start="381:29" pos:end="381:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:36"><expr pos:start="383:13" pos:end="383:35"><call pos:start="383:13" pos:end="383:35"><name pos:start="383:13" pos:end="383:27">gen_load_srsgpr</name><argument_list pos:start="383:28" pos:end="383:35">(<argument pos:start="383:29" pos:end="383:30"><expr pos:start="383:29" pos:end="383:30"><name pos:start="383:29" pos:end="383:30">rs</name></expr></argument>, <argument pos:start="383:33" pos:end="383:34"><expr pos:start="383:33" pos:end="383:34"><name pos:start="383:33" pos:end="383:34">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="385:13" pos:end="385:18">break;</break>

        <case pos:start="387:9" pos:end="387:20">case <expr pos:start="387:14" pos:end="387:19"><name pos:start="387:14" pos:end="387:19">WRPGPR</name></expr>:</case>

            <expr_stmt pos:start="389:13" pos:end="389:35"><expr pos:start="389:13" pos:end="389:34"><call pos:start="389:13" pos:end="389:34"><name pos:start="389:13" pos:end="389:29">check_cp0_enabled</name><argument_list pos:start="389:30" pos:end="389:34">(<argument pos:start="389:31" pos:end="389:33"><expr pos:start="389:31" pos:end="389:33"><name pos:start="389:31" pos:end="389:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:42"><expr pos:start="391:13" pos:end="391:41"><call pos:start="391:13" pos:end="391:41"><name pos:start="391:13" pos:end="391:22">check_insn</name><argument_list pos:start="391:23" pos:end="391:41">(<argument pos:start="391:24" pos:end="391:26"><expr pos:start="391:24" pos:end="391:26"><name pos:start="391:24" pos:end="391:26">ctx</name></expr></argument>, <argument pos:start="391:29" pos:end="391:40"><expr pos:start="391:29" pos:end="391:40"><name pos:start="391:29" pos:end="391:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:37"><expr pos:start="393:13" pos:end="393:36"><call pos:start="393:13" pos:end="393:36"><name pos:start="393:13" pos:end="393:28">gen_store_srsgpr</name><argument_list pos:start="393:29" pos:end="393:36">(<argument pos:start="393:30" pos:end="393:31"><expr pos:start="393:30" pos:end="393:31"><name pos:start="393:30" pos:end="393:31">rs</name></expr></argument>, <argument pos:start="393:34" pos:end="393:35"><expr pos:start="393:34" pos:end="393:35"><name pos:start="393:34" pos:end="393:35">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="395:13" pos:end="395:18">break;</break>

        <default pos:start="397:9" pos:end="397:16">default:</default>

            <goto pos:start="399:13" pos:end="399:35">goto <name pos:start="399:18" pos:end="399:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="403:9" pos:end="406:0">break;</break>

<cpp:ifndef pos:start="405:1" pos:end="405:24">#<cpp:directive pos:start="405:2" pos:end="405:7">ifndef</cpp:directive> <name pos:start="405:9" pos:end="405:24">CONFIG_USER_ONLY</name></cpp:ifndef>

    <case pos:start="407:5" pos:end="407:14">case <expr pos:start="407:10" pos:end="407:13"><literal type="number" pos:start="407:10" pos:end="407:13">0x0d</literal></expr>:</case>

        <switch pos:start="409:9" pos:end="473:9">switch <condition pos:start="409:16" pos:end="409:22">(<expr pos:start="409:17" pos:end="409:21"><name pos:start="409:17" pos:end="409:21">minor</name></expr>)</condition> <block pos:start="409:24" pos:end="473:9">{<block_content pos:start="411:9" pos:end="471:35">

        <case pos:start="411:9" pos:end="411:18">case <expr pos:start="411:14" pos:end="411:17"><name pos:start="411:14" pos:end="411:17">TLBP</name></expr>:</case>

            <expr_stmt pos:start="413:13" pos:end="413:33"><expr pos:start="413:13" pos:end="413:32"><name pos:start="413:13" pos:end="413:21">mips32_op</name> <operator pos:start="413:23" pos:end="413:23">=</operator> <name pos:start="413:25" pos:end="413:32">OPC_TLBP</name></expr>;</expr_stmt>

            <goto pos:start="415:13" pos:end="415:24">goto <name pos:start="415:18" pos:end="415:23">do_cp0</name>;</goto>

        <case pos:start="417:9" pos:end="417:18">case <expr pos:start="417:14" pos:end="417:17"><name pos:start="417:14" pos:end="417:17">TLBR</name></expr>:</case>

            <expr_stmt pos:start="419:13" pos:end="419:33"><expr pos:start="419:13" pos:end="419:32"><name pos:start="419:13" pos:end="419:21">mips32_op</name> <operator pos:start="419:23" pos:end="419:23">=</operator> <name pos:start="419:25" pos:end="419:32">OPC_TLBR</name></expr>;</expr_stmt>

            <goto pos:start="421:13" pos:end="421:24">goto <name pos:start="421:18" pos:end="421:23">do_cp0</name>;</goto>

        <case pos:start="423:9" pos:end="423:19">case <expr pos:start="423:14" pos:end="423:18"><name pos:start="423:14" pos:end="423:18">TLBWI</name></expr>:</case>

            <expr_stmt pos:start="425:13" pos:end="425:34"><expr pos:start="425:13" pos:end="425:33"><name pos:start="425:13" pos:end="425:21">mips32_op</name> <operator pos:start="425:23" pos:end="425:23">=</operator> <name pos:start="425:25" pos:end="425:33">OPC_TLBWI</name></expr>;</expr_stmt>

            <goto pos:start="427:13" pos:end="427:24">goto <name pos:start="427:18" pos:end="427:23">do_cp0</name>;</goto>

        <case pos:start="429:9" pos:end="429:19">case <expr pos:start="429:14" pos:end="429:18"><name pos:start="429:14" pos:end="429:18">TLBWR</name></expr>:</case>

            <expr_stmt pos:start="431:13" pos:end="431:34"><expr pos:start="431:13" pos:end="431:33"><name pos:start="431:13" pos:end="431:21">mips32_op</name> <operator pos:start="431:23" pos:end="431:23">=</operator> <name pos:start="431:25" pos:end="431:33">OPC_TLBWR</name></expr>;</expr_stmt>

            <goto pos:start="433:13" pos:end="433:24">goto <name pos:start="433:18" pos:end="433:23">do_cp0</name>;</goto>

        <case pos:start="435:9" pos:end="435:20">case <expr pos:start="435:14" pos:end="435:19"><name pos:start="435:14" pos:end="435:19">TLBINV</name></expr>:</case>

            <expr_stmt pos:start="437:13" pos:end="437:35"><expr pos:start="437:13" pos:end="437:34"><name pos:start="437:13" pos:end="437:21">mips32_op</name> <operator pos:start="437:23" pos:end="437:23">=</operator> <name pos:start="437:25" pos:end="437:34">OPC_TLBINV</name></expr>;</expr_stmt>

            <goto pos:start="439:13" pos:end="439:24">goto <name pos:start="439:18" pos:end="439:23">do_cp0</name>;</goto>

        <case pos:start="441:9" pos:end="441:21">case <expr pos:start="441:14" pos:end="441:20"><name pos:start="441:14" pos:end="441:20">TLBINVF</name></expr>:</case>

            <expr_stmt pos:start="443:13" pos:end="443:36"><expr pos:start="443:13" pos:end="443:35"><name pos:start="443:13" pos:end="443:21">mips32_op</name> <operator pos:start="443:23" pos:end="443:23">=</operator> <name pos:start="443:25" pos:end="443:35">OPC_TLBINVF</name></expr>;</expr_stmt>

            <goto pos:start="445:13" pos:end="445:24">goto <name pos:start="445:18" pos:end="445:23">do_cp0</name>;</goto>

        <case pos:start="447:9" pos:end="447:18">case <expr pos:start="447:14" pos:end="447:17"><name pos:start="447:14" pos:end="447:17">WAIT</name></expr>:</case>

            <expr_stmt pos:start="449:13" pos:end="449:33"><expr pos:start="449:13" pos:end="449:32"><name pos:start="449:13" pos:end="449:21">mips32_op</name> <operator pos:start="449:23" pos:end="449:23">=</operator> <name pos:start="449:25" pos:end="449:32">OPC_WAIT</name></expr>;</expr_stmt>

            <goto pos:start="451:13" pos:end="451:24">goto <name pos:start="451:18" pos:end="451:23">do_cp0</name>;</goto>

        <case pos:start="453:9" pos:end="453:19">case <expr pos:start="453:14" pos:end="453:18"><name pos:start="453:14" pos:end="453:18">DERET</name></expr>:</case>

            <expr_stmt pos:start="455:13" pos:end="455:34"><expr pos:start="455:13" pos:end="455:33"><name pos:start="455:13" pos:end="455:21">mips32_op</name> <operator pos:start="455:23" pos:end="455:23">=</operator> <name pos:start="455:25" pos:end="455:33">OPC_DERET</name></expr>;</expr_stmt>

            <goto pos:start="457:13" pos:end="457:24">goto <name pos:start="457:18" pos:end="457:23">do_cp0</name>;</goto>

        <case pos:start="459:9" pos:end="459:18">case <expr pos:start="459:14" pos:end="459:17"><name pos:start="459:14" pos:end="459:17">ERET</name></expr>:</case>

            <expr_stmt pos:start="461:13" pos:end="461:33"><expr pos:start="461:13" pos:end="461:32"><name pos:start="461:13" pos:end="461:21">mips32_op</name> <operator pos:start="461:23" pos:end="461:23">=</operator> <name pos:start="461:25" pos:end="461:32">OPC_ERET</name></expr>;</expr_stmt>

        <label pos:start="463:9" pos:end="463:15"><name pos:start="463:9" pos:end="463:14">do_cp0</name>:</label>

            <expr_stmt pos:start="465:13" pos:end="465:49"><expr pos:start="465:13" pos:end="465:48"><call pos:start="465:13" pos:end="465:48"><name pos:start="465:13" pos:end="465:19">gen_cp0</name><argument_list pos:start="465:20" pos:end="465:48">(<argument pos:start="465:21" pos:end="465:23"><expr pos:start="465:21" pos:end="465:23"><name pos:start="465:21" pos:end="465:23">env</name></expr></argument>, <argument pos:start="465:26" pos:end="465:28"><expr pos:start="465:26" pos:end="465:28"><name pos:start="465:26" pos:end="465:28">ctx</name></expr></argument>, <argument pos:start="465:31" pos:end="465:39"><expr pos:start="465:31" pos:end="465:39"><name pos:start="465:31" pos:end="465:39">mips32_op</name></expr></argument>, <argument pos:start="465:42" pos:end="465:43"><expr pos:start="465:42" pos:end="465:43"><name pos:start="465:42" pos:end="465:43">rt</name></expr></argument>, <argument pos:start="465:46" pos:end="465:47"><expr pos:start="465:46" pos:end="465:47"><name pos:start="465:46" pos:end="465:47">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="467:13" pos:end="467:18">break;</break>

        <default pos:start="469:9" pos:end="469:16">default:</default>

            <goto pos:start="471:13" pos:end="471:35">goto <name pos:start="471:18" pos:end="471:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="475:9" pos:end="475:14">break;</break>

    <case pos:start="477:5" pos:end="477:14">case <expr pos:start="477:10" pos:end="477:13"><literal type="number" pos:start="477:10" pos:end="477:13">0x1d</literal></expr>:</case>

        <switch pos:start="479:9" pos:end="537:9">switch <condition pos:start="479:16" pos:end="479:22">(<expr pos:start="479:17" pos:end="479:21"><name pos:start="479:17" pos:end="479:21">minor</name></expr>)</condition> <block pos:start="479:24" pos:end="537:9">{<block_content pos:start="481:9" pos:end="535:35">

        <case pos:start="481:9" pos:end="481:16">case <expr pos:start="481:14" pos:end="481:15"><name pos:start="481:14" pos:end="481:15">DI</name></expr>:</case>

            <expr_stmt pos:start="483:13" pos:end="483:35"><expr pos:start="483:13" pos:end="483:34"><call pos:start="483:13" pos:end="483:34"><name pos:start="483:13" pos:end="483:29">check_cp0_enabled</name><argument_list pos:start="483:30" pos:end="483:34">(<argument pos:start="483:31" pos:end="483:33"><expr pos:start="483:31" pos:end="483:33"><name pos:start="483:31" pos:end="483:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="485:13" pos:end="503:13">{<block_content pos:start="487:17" pos:end="501:34">

                <decl_stmt pos:start="487:17" pos:end="487:41"><decl pos:start="487:17" pos:end="487:40"><type pos:start="487:17" pos:end="487:20"><name pos:start="487:17" pos:end="487:20">TCGv</name></type> <name pos:start="487:22" pos:end="487:23">t0</name> <init pos:start="487:25" pos:end="487:40">= <expr pos:start="487:27" pos:end="487:40"><call pos:start="487:27" pos:end="487:40"><name pos:start="487:27" pos:end="487:38">tcg_temp_new</name><argument_list pos:start="487:39" pos:end="487:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="491:17" pos:end="491:39"><expr pos:start="491:17" pos:end="491:38"><call pos:start="491:17" pos:end="491:38"><name pos:start="491:17" pos:end="491:30">save_cpu_state</name><argument_list pos:start="491:31" pos:end="491:38">(<argument pos:start="491:32" pos:end="491:34"><expr pos:start="491:32" pos:end="491:34"><name pos:start="491:32" pos:end="491:34">ctx</name></expr></argument>, <argument pos:start="491:37" pos:end="491:37"><expr pos:start="491:37" pos:end="491:37"><literal type="number" pos:start="491:37" pos:end="491:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="493:17" pos:end="493:43"><expr pos:start="493:17" pos:end="493:42"><call pos:start="493:17" pos:end="493:42"><name pos:start="493:17" pos:end="493:29">gen_helper_di</name><argument_list pos:start="493:30" pos:end="493:42">(<argument pos:start="493:31" pos:end="493:32"><expr pos:start="493:31" pos:end="493:32"><name pos:start="493:31" pos:end="493:32">t0</name></expr></argument>, <argument pos:start="493:35" pos:end="493:41"><expr pos:start="493:35" pos:end="493:41"><name pos:start="493:35" pos:end="493:41">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="495:17" pos:end="495:38"><expr pos:start="495:17" pos:end="495:37"><call pos:start="495:17" pos:end="495:37"><name pos:start="495:17" pos:end="495:29">gen_store_gpr</name><argument_list pos:start="495:30" pos:end="495:37">(<argument pos:start="495:31" pos:end="495:32"><expr pos:start="495:31" pos:end="495:32"><name pos:start="495:31" pos:end="495:32">t0</name></expr></argument>, <argument pos:start="495:35" pos:end="495:36"><expr pos:start="495:35" pos:end="495:36"><name pos:start="495:35" pos:end="495:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="497:17" pos:end="497:81">/* Stop translation as we may have switched the execution mode */</comment>

                <expr_stmt pos:start="499:17" pos:end="499:38"><expr pos:start="499:17" pos:end="499:37"><name pos:start="499:17" pos:end="499:27"><name pos:start="499:17" pos:end="499:19">ctx</name><operator pos:start="499:20" pos:end="499:21">-&gt;</operator><name pos:start="499:22" pos:end="499:27">bstate</name></name> <operator pos:start="499:29" pos:end="499:29">=</operator> <name pos:start="499:31" pos:end="499:37">BS_STOP</name></expr>;</expr_stmt>

                <expr_stmt pos:start="501:17" pos:end="501:34"><expr pos:start="501:17" pos:end="501:33"><call pos:start="501:17" pos:end="501:33"><name pos:start="501:17" pos:end="501:29">tcg_temp_free</name><argument_list pos:start="501:30" pos:end="501:33">(<argument pos:start="501:31" pos:end="501:32"><expr pos:start="501:31" pos:end="501:32"><name pos:start="501:31" pos:end="501:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="505:13" pos:end="505:18">break;</break>

        <case pos:start="507:9" pos:end="507:16">case <expr pos:start="507:14" pos:end="507:15"><name pos:start="507:14" pos:end="507:15">EI</name></expr>:</case>

            <expr_stmt pos:start="509:13" pos:end="509:35"><expr pos:start="509:13" pos:end="509:34"><call pos:start="509:13" pos:end="509:34"><name pos:start="509:13" pos:end="509:29">check_cp0_enabled</name><argument_list pos:start="509:30" pos:end="509:34">(<argument pos:start="509:31" pos:end="509:33"><expr pos:start="509:31" pos:end="509:33"><name pos:start="509:31" pos:end="509:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="511:13" pos:end="529:13">{<block_content pos:start="513:17" pos:end="527:34">

                <decl_stmt pos:start="513:17" pos:end="513:41"><decl pos:start="513:17" pos:end="513:40"><type pos:start="513:17" pos:end="513:20"><name pos:start="513:17" pos:end="513:20">TCGv</name></type> <name pos:start="513:22" pos:end="513:23">t0</name> <init pos:start="513:25" pos:end="513:40">= <expr pos:start="513:27" pos:end="513:40"><call pos:start="513:27" pos:end="513:40"><name pos:start="513:27" pos:end="513:38">tcg_temp_new</name><argument_list pos:start="513:39" pos:end="513:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="517:17" pos:end="517:39"><expr pos:start="517:17" pos:end="517:38"><call pos:start="517:17" pos:end="517:38"><name pos:start="517:17" pos:end="517:30">save_cpu_state</name><argument_list pos:start="517:31" pos:end="517:38">(<argument pos:start="517:32" pos:end="517:34"><expr pos:start="517:32" pos:end="517:34"><name pos:start="517:32" pos:end="517:34">ctx</name></expr></argument>, <argument pos:start="517:37" pos:end="517:37"><expr pos:start="517:37" pos:end="517:37"><literal type="number" pos:start="517:37" pos:end="517:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="519:17" pos:end="519:43"><expr pos:start="519:17" pos:end="519:42"><call pos:start="519:17" pos:end="519:42"><name pos:start="519:17" pos:end="519:29">gen_helper_ei</name><argument_list pos:start="519:30" pos:end="519:42">(<argument pos:start="519:31" pos:end="519:32"><expr pos:start="519:31" pos:end="519:32"><name pos:start="519:31" pos:end="519:32">t0</name></expr></argument>, <argument pos:start="519:35" pos:end="519:41"><expr pos:start="519:35" pos:end="519:41"><name pos:start="519:35" pos:end="519:41">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="521:17" pos:end="521:38"><expr pos:start="521:17" pos:end="521:37"><call pos:start="521:17" pos:end="521:37"><name pos:start="521:17" pos:end="521:29">gen_store_gpr</name><argument_list pos:start="521:30" pos:end="521:37">(<argument pos:start="521:31" pos:end="521:32"><expr pos:start="521:31" pos:end="521:32"><name pos:start="521:31" pos:end="521:32">t0</name></expr></argument>, <argument pos:start="521:35" pos:end="521:36"><expr pos:start="521:35" pos:end="521:36"><name pos:start="521:35" pos:end="521:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="523:17" pos:end="523:81">/* Stop translation as we may have switched the execution mode */</comment>

                <expr_stmt pos:start="525:17" pos:end="525:38"><expr pos:start="525:17" pos:end="525:37"><name pos:start="525:17" pos:end="525:27"><name pos:start="525:17" pos:end="525:19">ctx</name><operator pos:start="525:20" pos:end="525:21">-&gt;</operator><name pos:start="525:22" pos:end="525:27">bstate</name></name> <operator pos:start="525:29" pos:end="525:29">=</operator> <name pos:start="525:31" pos:end="525:37">BS_STOP</name></expr>;</expr_stmt>

                <expr_stmt pos:start="527:17" pos:end="527:34"><expr pos:start="527:17" pos:end="527:33"><call pos:start="527:17" pos:end="527:33"><name pos:start="527:17" pos:end="527:29">tcg_temp_free</name><argument_list pos:start="527:30" pos:end="527:33">(<argument pos:start="527:31" pos:end="527:32"><expr pos:start="527:31" pos:end="527:32"><name pos:start="527:31" pos:end="527:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="531:13" pos:end="531:18">break;</break>

        <default pos:start="533:9" pos:end="533:16">default:</default>

            <goto pos:start="535:13" pos:end="535:35">goto <name pos:start="535:18" pos:end="535:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="539:9" pos:end="542:0">break;</break>

<cpp:endif pos:start="541:1" pos:end="541:6">#<cpp:directive pos:start="541:2" pos:end="541:6">endif</cpp:directive></cpp:endif>

    <case pos:start="543:5" pos:end="543:14">case <expr pos:start="543:10" pos:end="543:13"><literal type="number" pos:start="543:10" pos:end="543:13">0x2d</literal></expr>:</case>

        <switch pos:start="545:9" pos:end="587:9">switch <condition pos:start="545:16" pos:end="545:22">(<expr pos:start="545:17" pos:end="545:21"><name pos:start="545:17" pos:end="545:21">minor</name></expr>)</condition> <block pos:start="545:24" pos:end="587:9">{<block_content pos:start="547:9" pos:end="585:35">

        <case pos:start="547:9" pos:end="547:18">case <expr pos:start="547:14" pos:end="547:17"><name pos:start="547:14" pos:end="547:17">SYNC</name></expr>:</case>

            <comment type="block" pos:start="549:13" pos:end="549:21">/* NOP */</comment>

            <break pos:start="551:13" pos:end="551:18">break;</break>

        <case pos:start="553:9" pos:end="553:21">case <expr pos:start="553:14" pos:end="553:20"><name pos:start="553:14" pos:end="553:20">SYSCALL</name></expr>:</case>

            <expr_stmt pos:start="555:13" pos:end="555:54"><expr pos:start="555:13" pos:end="555:53"><call pos:start="555:13" pos:end="555:53"><name pos:start="555:13" pos:end="555:34">generate_exception_end</name><argument_list pos:start="555:35" pos:end="555:53">(<argument pos:start="555:36" pos:end="555:38"><expr pos:start="555:36" pos:end="555:38"><name pos:start="555:36" pos:end="555:38">ctx</name></expr></argument>, <argument pos:start="555:41" pos:end="555:52"><expr pos:start="555:41" pos:end="555:52"><name pos:start="555:41" pos:end="555:52">EXCP_SYSCALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="557:13" pos:end="557:18">break;</break>

        <case pos:start="559:9" pos:end="559:19">case <expr pos:start="559:14" pos:end="559:18"><name pos:start="559:14" pos:end="559:18">SDBBP</name></expr>:</case>

            <if_stmt pos:start="561:13" pos:end="579:13"><if pos:start="561:13" pos:end="565:13">if <condition pos:start="561:16" pos:end="561:55">(<expr pos:start="561:17" pos:end="561:54"><call pos:start="561:17" pos:end="561:54"><name pos:start="561:17" pos:end="561:22">is_uhi</name><argument_list pos:start="561:23" pos:end="561:54">(<argument pos:start="561:24" pos:end="561:53"><expr pos:start="561:24" pos:end="561:53"><call pos:start="561:24" pos:end="561:53"><name pos:start="561:24" pos:end="561:32">extract32</name><argument_list pos:start="561:33" pos:end="561:53">(<argument pos:start="561:34" pos:end="561:44"><expr pos:start="561:34" pos:end="561:44"><name pos:start="561:34" pos:end="561:44"><name pos:start="561:34" pos:end="561:36">ctx</name><operator pos:start="561:37" pos:end="561:38">-&gt;</operator><name pos:start="561:39" pos:end="561:44">opcode</name></name></expr></argument>, <argument pos:start="561:47" pos:end="561:48"><expr pos:start="561:47" pos:end="561:48"><literal type="number" pos:start="561:47" pos:end="561:48">16</literal></expr></argument>, <argument pos:start="561:51" pos:end="561:52"><expr pos:start="561:51" pos:end="561:52"><literal type="number" pos:start="561:51" pos:end="561:52">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="561:57" pos:end="565:13">{<block_content pos:start="563:17" pos:end="563:51">

                <expr_stmt pos:start="563:17" pos:end="563:51"><expr pos:start="563:17" pos:end="563:50"><call pos:start="563:17" pos:end="563:50"><name pos:start="563:17" pos:end="563:41">gen_helper_do_semihosting</name><argument_list pos:start="563:42" pos:end="563:50">(<argument pos:start="563:43" pos:end="563:49"><expr pos:start="563:43" pos:end="563:49"><name pos:start="563:43" pos:end="563:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="565:15" pos:end="579:13">else <block pos:start="565:20" pos:end="579:13">{<block_content pos:start="567:17" pos:end="577:17">

                <expr_stmt pos:start="567:17" pos:end="567:44"><expr pos:start="567:17" pos:end="567:43"><call pos:start="567:17" pos:end="567:43"><name pos:start="567:17" pos:end="567:26">check_insn</name><argument_list pos:start="567:27" pos:end="567:43">(<argument pos:start="567:28" pos:end="567:30"><expr pos:start="567:28" pos:end="567:30"><name pos:start="567:28" pos:end="567:30">ctx</name></expr></argument>, <argument pos:start="567:33" pos:end="567:42"><expr pos:start="567:33" pos:end="567:42"><name pos:start="567:33" pos:end="567:42">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="569:17" pos:end="577:17"><if pos:start="569:17" pos:end="573:17">if <condition pos:start="569:20" pos:end="569:50">(<expr pos:start="569:21" pos:end="569:49"><name pos:start="569:21" pos:end="569:31"><name pos:start="569:21" pos:end="569:23">ctx</name><operator pos:start="569:24" pos:end="569:25">-&gt;</operator><name pos:start="569:26" pos:end="569:31">hflags</name></name> <operator pos:start="569:33" pos:end="569:33">&amp;</operator> <name pos:start="569:35" pos:end="569:49">MIPS_HFLAG_SBRI</name></expr>)</condition> <block pos:start="569:52" pos:end="573:17">{<block_content pos:start="571:21" pos:end="571:57">

                    <expr_stmt pos:start="571:21" pos:end="571:57"><expr pos:start="571:21" pos:end="571:56"><call pos:start="571:21" pos:end="571:56"><name pos:start="571:21" pos:end="571:42">generate_exception_end</name><argument_list pos:start="571:43" pos:end="571:56">(<argument pos:start="571:44" pos:end="571:46"><expr pos:start="571:44" pos:end="571:46"><name pos:start="571:44" pos:end="571:46">ctx</name></expr></argument>, <argument pos:start="571:49" pos:end="571:55"><expr pos:start="571:49" pos:end="571:55"><name pos:start="571:49" pos:end="571:55">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="573:19" pos:end="577:17">else <block pos:start="573:24" pos:end="577:17">{<block_content pos:start="575:21" pos:end="575:58">

                    <expr_stmt pos:start="575:21" pos:end="575:58"><expr pos:start="575:21" pos:end="575:57"><call pos:start="575:21" pos:end="575:57"><name pos:start="575:21" pos:end="575:42">generate_exception_end</name><argument_list pos:start="575:43" pos:end="575:57">(<argument pos:start="575:44" pos:end="575:46"><expr pos:start="575:44" pos:end="575:46"><name pos:start="575:44" pos:end="575:46">ctx</name></expr></argument>, <argument pos:start="575:49" pos:end="575:56"><expr pos:start="575:49" pos:end="575:56"><name pos:start="575:49" pos:end="575:56">EXCP_DBp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="581:13" pos:end="581:18">break;</break>

        <default pos:start="583:9" pos:end="583:16">default:</default>

            <goto pos:start="585:13" pos:end="585:35">goto <name pos:start="585:18" pos:end="585:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="589:9" pos:end="589:14">break;</break>

    <case pos:start="591:5" pos:end="591:14">case <expr pos:start="591:10" pos:end="591:13"><literal type="number" pos:start="591:10" pos:end="591:13">0x01</literal></expr>:</case>

        <switch pos:start="593:9" pos:end="623:9">switch <condition pos:start="593:16" pos:end="593:26">(<expr pos:start="593:17" pos:end="593:25"><name pos:start="593:17" pos:end="593:21">minor</name> <operator pos:start="593:23" pos:end="593:23">&amp;</operator> <literal type="number" pos:start="593:25" pos:end="593:25">3</literal></expr>)</condition> <block pos:start="593:28" pos:end="623:9">{<block_content pos:start="595:9" pos:end="621:35">

        <case pos:start="595:9" pos:end="595:22">case <expr pos:start="595:14" pos:end="595:21"><name pos:start="595:14" pos:end="595:21">MFHI_ACC</name></expr>:</case>

            <expr_stmt pos:start="597:13" pos:end="597:52"><expr pos:start="597:13" pos:end="597:51"><call pos:start="597:13" pos:end="597:51"><name pos:start="597:13" pos:end="597:20">gen_HILO</name><argument_list pos:start="597:21" pos:end="597:51">(<argument pos:start="597:22" pos:end="597:24"><expr pos:start="597:22" pos:end="597:24"><name pos:start="597:22" pos:end="597:24">ctx</name></expr></argument>, <argument pos:start="597:27" pos:end="597:34"><expr pos:start="597:27" pos:end="597:34"><name pos:start="597:27" pos:end="597:34">OPC_MFHI</name></expr></argument>, <argument pos:start="597:37" pos:end="597:46"><expr pos:start="597:37" pos:end="597:46"><name pos:start="597:37" pos:end="597:41">minor</name> <operator pos:start="597:43" pos:end="597:44">&gt;&gt;</operator> <literal type="number" pos:start="597:46" pos:end="597:46">2</literal></expr></argument>, <argument pos:start="597:49" pos:end="597:50"><expr pos:start="597:49" pos:end="597:50"><name pos:start="597:49" pos:end="597:50">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="599:13" pos:end="599:18">break;</break>

        <case pos:start="601:9" pos:end="601:22">case <expr pos:start="601:14" pos:end="601:21"><name pos:start="601:14" pos:end="601:21">MFLO_ACC</name></expr>:</case>

            <expr_stmt pos:start="603:13" pos:end="603:52"><expr pos:start="603:13" pos:end="603:51"><call pos:start="603:13" pos:end="603:51"><name pos:start="603:13" pos:end="603:20">gen_HILO</name><argument_list pos:start="603:21" pos:end="603:51">(<argument pos:start="603:22" pos:end="603:24"><expr pos:start="603:22" pos:end="603:24"><name pos:start="603:22" pos:end="603:24">ctx</name></expr></argument>, <argument pos:start="603:27" pos:end="603:34"><expr pos:start="603:27" pos:end="603:34"><name pos:start="603:27" pos:end="603:34">OPC_MFLO</name></expr></argument>, <argument pos:start="603:37" pos:end="603:46"><expr pos:start="603:37" pos:end="603:46"><name pos:start="603:37" pos:end="603:41">minor</name> <operator pos:start="603:43" pos:end="603:44">&gt;&gt;</operator> <literal type="number" pos:start="603:46" pos:end="603:46">2</literal></expr></argument>, <argument pos:start="603:49" pos:end="603:50"><expr pos:start="603:49" pos:end="603:50"><name pos:start="603:49" pos:end="603:50">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="605:13" pos:end="605:18">break;</break>

        <case pos:start="607:9" pos:end="607:22">case <expr pos:start="607:14" pos:end="607:21"><name pos:start="607:14" pos:end="607:21">MTHI_ACC</name></expr>:</case>

            <expr_stmt pos:start="609:13" pos:end="609:52"><expr pos:start="609:13" pos:end="609:51"><call pos:start="609:13" pos:end="609:51"><name pos:start="609:13" pos:end="609:20">gen_HILO</name><argument_list pos:start="609:21" pos:end="609:51">(<argument pos:start="609:22" pos:end="609:24"><expr pos:start="609:22" pos:end="609:24"><name pos:start="609:22" pos:end="609:24">ctx</name></expr></argument>, <argument pos:start="609:27" pos:end="609:34"><expr pos:start="609:27" pos:end="609:34"><name pos:start="609:27" pos:end="609:34">OPC_MTHI</name></expr></argument>, <argument pos:start="609:37" pos:end="609:46"><expr pos:start="609:37" pos:end="609:46"><name pos:start="609:37" pos:end="609:41">minor</name> <operator pos:start="609:43" pos:end="609:44">&gt;&gt;</operator> <literal type="number" pos:start="609:46" pos:end="609:46">2</literal></expr></argument>, <argument pos:start="609:49" pos:end="609:50"><expr pos:start="609:49" pos:end="609:50"><name pos:start="609:49" pos:end="609:50">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="611:13" pos:end="611:18">break;</break>

        <case pos:start="613:9" pos:end="613:22">case <expr pos:start="613:14" pos:end="613:21"><name pos:start="613:14" pos:end="613:21">MTLO_ACC</name></expr>:</case>

            <expr_stmt pos:start="615:13" pos:end="615:52"><expr pos:start="615:13" pos:end="615:51"><call pos:start="615:13" pos:end="615:51"><name pos:start="615:13" pos:end="615:20">gen_HILO</name><argument_list pos:start="615:21" pos:end="615:51">(<argument pos:start="615:22" pos:end="615:24"><expr pos:start="615:22" pos:end="615:24"><name pos:start="615:22" pos:end="615:24">ctx</name></expr></argument>, <argument pos:start="615:27" pos:end="615:34"><expr pos:start="615:27" pos:end="615:34"><name pos:start="615:27" pos:end="615:34">OPC_MTLO</name></expr></argument>, <argument pos:start="615:37" pos:end="615:46"><expr pos:start="615:37" pos:end="615:46"><name pos:start="615:37" pos:end="615:41">minor</name> <operator pos:start="615:43" pos:end="615:44">&gt;&gt;</operator> <literal type="number" pos:start="615:46" pos:end="615:46">2</literal></expr></argument>, <argument pos:start="615:49" pos:end="615:50"><expr pos:start="615:49" pos:end="615:50"><name pos:start="615:49" pos:end="615:50">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="617:13" pos:end="617:18">break;</break>

        <default pos:start="619:9" pos:end="619:16">default:</default>

            <goto pos:start="621:13" pos:end="621:35">goto <name pos:start="621:18" pos:end="621:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="625:9" pos:end="625:14">break;</break>

    <case pos:start="627:5" pos:end="627:14">case <expr pos:start="627:10" pos:end="627:13"><literal type="number" pos:start="627:10" pos:end="627:13">0x35</literal></expr>:</case>

        <expr_stmt pos:start="629:9" pos:end="629:50"><expr pos:start="629:9" pos:end="629:49"><call pos:start="629:9" pos:end="629:49"><name pos:start="629:9" pos:end="629:30">check_insn_opc_removed</name><argument_list pos:start="629:31" pos:end="629:49">(<argument pos:start="629:32" pos:end="629:34"><expr pos:start="629:32" pos:end="629:34"><name pos:start="629:32" pos:end="629:34">ctx</name></expr></argument>, <argument pos:start="629:37" pos:end="629:48"><expr pos:start="629:37" pos:end="629:48"><name pos:start="629:37" pos:end="629:48">ISA_MIPS32R6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="631:9" pos:end="661:9">switch <condition pos:start="631:16" pos:end="631:22">(<expr pos:start="631:17" pos:end="631:21"><name pos:start="631:17" pos:end="631:21">minor</name></expr>)</condition> <block pos:start="631:24" pos:end="661:9">{<block_content pos:start="633:9" pos:end="659:35">

        <case pos:start="633:9" pos:end="633:20">case <expr pos:start="633:14" pos:end="633:19"><name pos:start="633:14" pos:end="633:19">MFHI32</name></expr>:</case>

            <expr_stmt pos:start="635:13" pos:end="635:43"><expr pos:start="635:13" pos:end="635:42"><call pos:start="635:13" pos:end="635:42"><name pos:start="635:13" pos:end="635:20">gen_HILO</name><argument_list pos:start="635:21" pos:end="635:42">(<argument pos:start="635:22" pos:end="635:24"><expr pos:start="635:22" pos:end="635:24"><name pos:start="635:22" pos:end="635:24">ctx</name></expr></argument>, <argument pos:start="635:27" pos:end="635:34"><expr pos:start="635:27" pos:end="635:34"><name pos:start="635:27" pos:end="635:34">OPC_MFHI</name></expr></argument>, <argument pos:start="635:37" pos:end="635:37"><expr pos:start="635:37" pos:end="635:37"><literal type="number" pos:start="635:37" pos:end="635:37">0</literal></expr></argument>, <argument pos:start="635:40" pos:end="635:41"><expr pos:start="635:40" pos:end="635:41"><name pos:start="635:40" pos:end="635:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="637:13" pos:end="637:18">break;</break>

        <case pos:start="639:9" pos:end="639:20">case <expr pos:start="639:14" pos:end="639:19"><name pos:start="639:14" pos:end="639:19">MFLO32</name></expr>:</case>

            <expr_stmt pos:start="641:13" pos:end="641:43"><expr pos:start="641:13" pos:end="641:42"><call pos:start="641:13" pos:end="641:42"><name pos:start="641:13" pos:end="641:20">gen_HILO</name><argument_list pos:start="641:21" pos:end="641:42">(<argument pos:start="641:22" pos:end="641:24"><expr pos:start="641:22" pos:end="641:24"><name pos:start="641:22" pos:end="641:24">ctx</name></expr></argument>, <argument pos:start="641:27" pos:end="641:34"><expr pos:start="641:27" pos:end="641:34"><name pos:start="641:27" pos:end="641:34">OPC_MFLO</name></expr></argument>, <argument pos:start="641:37" pos:end="641:37"><expr pos:start="641:37" pos:end="641:37"><literal type="number" pos:start="641:37" pos:end="641:37">0</literal></expr></argument>, <argument pos:start="641:40" pos:end="641:41"><expr pos:start="641:40" pos:end="641:41"><name pos:start="641:40" pos:end="641:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="643:13" pos:end="643:18">break;</break>

        <case pos:start="645:9" pos:end="645:20">case <expr pos:start="645:14" pos:end="645:19"><name pos:start="645:14" pos:end="645:19">MTHI32</name></expr>:</case>

            <expr_stmt pos:start="647:13" pos:end="647:43"><expr pos:start="647:13" pos:end="647:42"><call pos:start="647:13" pos:end="647:42"><name pos:start="647:13" pos:end="647:20">gen_HILO</name><argument_list pos:start="647:21" pos:end="647:42">(<argument pos:start="647:22" pos:end="647:24"><expr pos:start="647:22" pos:end="647:24"><name pos:start="647:22" pos:end="647:24">ctx</name></expr></argument>, <argument pos:start="647:27" pos:end="647:34"><expr pos:start="647:27" pos:end="647:34"><name pos:start="647:27" pos:end="647:34">OPC_MTHI</name></expr></argument>, <argument pos:start="647:37" pos:end="647:37"><expr pos:start="647:37" pos:end="647:37"><literal type="number" pos:start="647:37" pos:end="647:37">0</literal></expr></argument>, <argument pos:start="647:40" pos:end="647:41"><expr pos:start="647:40" pos:end="647:41"><name pos:start="647:40" pos:end="647:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="649:13" pos:end="649:18">break;</break>

        <case pos:start="651:9" pos:end="651:20">case <expr pos:start="651:14" pos:end="651:19"><name pos:start="651:14" pos:end="651:19">MTLO32</name></expr>:</case>

            <expr_stmt pos:start="653:13" pos:end="653:43"><expr pos:start="653:13" pos:end="653:42"><call pos:start="653:13" pos:end="653:42"><name pos:start="653:13" pos:end="653:20">gen_HILO</name><argument_list pos:start="653:21" pos:end="653:42">(<argument pos:start="653:22" pos:end="653:24"><expr pos:start="653:22" pos:end="653:24"><name pos:start="653:22" pos:end="653:24">ctx</name></expr></argument>, <argument pos:start="653:27" pos:end="653:34"><expr pos:start="653:27" pos:end="653:34"><name pos:start="653:27" pos:end="653:34">OPC_MTLO</name></expr></argument>, <argument pos:start="653:37" pos:end="653:37"><expr pos:start="653:37" pos:end="653:37"><literal type="number" pos:start="653:37" pos:end="653:37">0</literal></expr></argument>, <argument pos:start="653:40" pos:end="653:41"><expr pos:start="653:40" pos:end="653:41"><name pos:start="653:40" pos:end="653:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="655:13" pos:end="655:18">break;</break>

        <default pos:start="657:9" pos:end="657:16">default:</default>

            <goto pos:start="659:13" pos:end="659:35">goto <name pos:start="659:18" pos:end="659:34">pool32axf_invalid</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="663:9" pos:end="663:14">break;</break>

    <default pos:start="665:5" pos:end="665:12">default:</default>

    <label pos:start="667:5" pos:end="667:22"><name pos:start="667:5" pos:end="667:21">pool32axf_invalid</name>:</label>

        <expr_stmt pos:start="669:9" pos:end="669:32"><expr pos:start="669:9" pos:end="669:31"><call pos:start="669:9" pos:end="669:31"><name pos:start="669:9" pos:end="669:18">MIPS_INVAL</name><argument_list pos:start="669:19" pos:end="669:31">(<argument pos:start="669:20" pos:end="669:30"><expr pos:start="669:20" pos:end="669:30"><literal type="string" pos:start="669:20" pos:end="669:30">"pool32axf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="671:9" pos:end="671:45"><expr pos:start="671:9" pos:end="671:44"><call pos:start="671:9" pos:end="671:44"><name pos:start="671:9" pos:end="671:30">generate_exception_end</name><argument_list pos:start="671:31" pos:end="671:44">(<argument pos:start="671:32" pos:end="671:34"><expr pos:start="671:32" pos:end="671:34"><name pos:start="671:32" pos:end="671:34">ctx</name></expr></argument>, <argument pos:start="671:37" pos:end="671:43"><expr pos:start="671:37" pos:end="671:43"><name pos:start="671:37" pos:end="671:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="673:9" pos:end="673:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
