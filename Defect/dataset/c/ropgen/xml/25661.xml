<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25661.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:14">StrongARMState</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:27">sa1110_init</name><parameter_list pos:start="1:28" pos:end="3:69">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:40">MemoryRegion</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">sysmem</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:51"><decl pos:start="3:29" pos:end="3:51"><type pos:start="3:29" pos:end="3:51"><name pos:start="3:29" pos:end="3:36">unsigned</name> <name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:51">sdram_size</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><specifier pos:start="3:54" pos:end="3:58">const</specifier> <name pos:start="3:60" pos:end="3:63">char</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:68">rev</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="125:1">{<block_content pos:start="7:5" pos:end="123:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">StrongARMState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:14">g_new0</name><argument_list pos:start="13:15" pos:end="13:33">(<argument pos:start="13:16" pos:end="13:29"><expr pos:start="13:16" pos:end="13:29"><name pos:start="13:16" pos:end="13:29">StrongARMState</name></expr></argument>, <argument pos:start="13:32" pos:end="13:32"><expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">rev</name></expr>)</condition> <block pos:start="17:15" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:26">

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:11">rev</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <literal type="string" pos:start="19:15" pos:end="19:25">"sa1110-b5"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:15">strncmp</name><argument_list pos:start="25:16" pos:end="25:33">(<argument pos:start="25:17" pos:end="25:19"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">rev</name></expr></argument>, <argument pos:start="25:22" pos:end="25:29"><expr pos:start="25:22" pos:end="25:29"><literal type="string" pos:start="25:22" pos:end="25:29">"sa1110"</literal></expr></argument>, <argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">6</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:36" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:16">

        <expr_stmt pos:start="27:9" pos:end="27:61"><expr pos:start="27:9" pos:end="27:60"><call pos:start="27:9" pos:end="27:60"><name pos:start="27:9" pos:end="27:20">error_report</name><argument_list pos:start="27:21" pos:end="27:60">(<argument pos:start="27:22" pos:end="27:59"><expr pos:start="27:22" pos:end="27:59"><literal type="string" pos:start="27:22" pos:end="27:59">"Machine requires a SA1110 processor."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:16"><expr pos:start="29:9" pos:end="29:15"><call pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:12">exit</name><argument_list pos:start="29:13" pos:end="29:15">(<argument pos:start="29:14" pos:end="29:14"><expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:10">cpu</name></name> <operator pos:start="35:12" pos:end="35:12">=</operator> <call pos:start="35:14" pos:end="35:57"><name pos:start="35:14" pos:end="35:20">ARM_CPU</name><argument_list pos:start="35:21" pos:end="35:57">(<argument pos:start="35:22" pos:end="35:56"><expr pos:start="35:22" pos:end="35:56"><call pos:start="35:22" pos:end="35:56"><name pos:start="35:22" pos:end="35:37">cpu_generic_init</name><argument_list pos:start="35:38" pos:end="35:56">(<argument pos:start="35:39" pos:end="35:50"><expr pos:start="35:39" pos:end="35:50"><name pos:start="35:39" pos:end="35:50">TYPE_ARM_CPU</name></expr></argument>, <argument pos:start="35:53" pos:end="35:55"><expr pos:start="35:53" pos:end="35:55"><name pos:start="35:53" pos:end="35:55">rev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:15"><name pos:start="39:10" pos:end="39:10">s</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:15">cpu</name></name></expr>)</condition> <block pos:start="39:18" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:16">

        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><call pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:20">error_report</name><argument_list pos:start="41:21" pos:end="41:53">(<argument pos:start="41:22" pos:end="41:52"><expr pos:start="41:22" pos:end="41:52"><literal type="string" pos:start="41:22" pos:end="41:52">"Unable to find CPU definition"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:16"><expr pos:start="43:9" pos:end="43:15"><call pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:12">exit</name><argument_list pos:start="43:13" pos:end="43:15">(<argument pos:start="43:14" pos:end="43:14"><expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:53"><expr pos:start="49:5" pos:end="51:52"><call pos:start="49:5" pos:end="51:52"><name pos:start="49:5" pos:end="49:40">memory_region_allocate_system_memory</name><argument_list pos:start="49:41" pos:end="51:52">(<argument pos:start="49:42" pos:end="49:50"><expr pos:start="49:42" pos:end="49:50"><operator pos:start="49:42" pos:end="49:42">&amp;</operator><name pos:start="49:43" pos:end="49:50"><name pos:start="49:43" pos:end="49:43">s</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:50">sdram</name></name></expr></argument>, <argument pos:start="49:53" pos:end="49:56"><expr pos:start="49:53" pos:end="49:56"><name pos:start="49:53" pos:end="49:56">NULL</name></expr></argument>, <argument pos:start="49:59" pos:end="49:75"><expr pos:start="49:59" pos:end="49:75"><literal type="string" pos:start="49:59" pos:end="49:75">"strongarm.sdram"</literal></expr></argument>,

                                         <argument pos:start="51:42" pos:end="51:51"><expr pos:start="51:42" pos:end="51:51"><name pos:start="51:42" pos:end="51:51">sdram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:61"><expr pos:start="53:5" pos:end="53:60"><call pos:start="53:5" pos:end="53:60"><name pos:start="53:5" pos:end="53:31">memory_region_add_subregion</name><argument_list pos:start="53:32" pos:end="53:60">(<argument pos:start="53:33" pos:end="53:38"><expr pos:start="53:33" pos:end="53:38"><name pos:start="53:33" pos:end="53:38">sysmem</name></expr></argument>, <argument pos:start="53:41" pos:end="53:48"><expr pos:start="53:41" pos:end="53:48"><name pos:start="53:41" pos:end="53:48">SA_SDCS0</name></expr></argument>, <argument pos:start="53:51" pos:end="53:59"><expr pos:start="53:51" pos:end="53:59"><operator pos:start="53:51" pos:end="53:51">&amp;</operator><name pos:start="53:52" pos:end="53:59"><name pos:start="53:52" pos:end="53:52">s</name><operator pos:start="53:53" pos:end="53:54">-&gt;</operator><name pos:start="53:55" pos:end="53:59">sdram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="63:26"><expr pos:start="57:5" pos:end="63:25"><name pos:start="57:5" pos:end="57:10"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:10">pic</name></name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="63:25"><name pos:start="57:14" pos:end="57:34">sysbus_create_varargs</name><argument_list pos:start="57:35" pos:end="63:25">(<argument pos:start="57:36" pos:end="57:50"><expr pos:start="57:36" pos:end="57:50"><literal type="string" pos:start="57:36" pos:end="57:50">"strongarm_pic"</literal></expr></argument>, <argument pos:start="57:53" pos:end="57:62"><expr pos:start="57:53" pos:end="57:62"><literal type="number" pos:start="57:53" pos:end="57:62">0x90050000</literal></expr></argument>,

                    <argument pos:start="59:21" pos:end="59:65"><expr pos:start="59:21" pos:end="59:65"><call pos:start="59:21" pos:end="59:65"><name pos:start="59:21" pos:end="59:36">qdev_get_gpio_in</name><argument_list pos:start="59:37" pos:end="59:65">(<argument pos:start="59:38" pos:end="59:51"><expr pos:start="59:38" pos:end="59:51"><call pos:start="59:38" pos:end="59:51"><name pos:start="59:38" pos:end="59:43">DEVICE</name><argument_list pos:start="59:44" pos:end="59:51">(<argument pos:start="59:45" pos:end="59:50"><expr pos:start="59:45" pos:end="59:50"><name pos:start="59:45" pos:end="59:50"><name pos:start="59:45" pos:end="59:45">s</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:50">cpu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:54" pos:end="59:64"><expr pos:start="59:54" pos:end="59:64"><name pos:start="59:54" pos:end="59:64">ARM_CPU_IRQ</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="61:21" pos:end="61:65"><expr pos:start="61:21" pos:end="61:65"><call pos:start="61:21" pos:end="61:65"><name pos:start="61:21" pos:end="61:36">qdev_get_gpio_in</name><argument_list pos:start="61:37" pos:end="61:65">(<argument pos:start="61:38" pos:end="61:51"><expr pos:start="61:38" pos:end="61:51"><call pos:start="61:38" pos:end="61:51"><name pos:start="61:38" pos:end="61:43">DEVICE</name><argument_list pos:start="61:44" pos:end="61:51">(<argument pos:start="61:45" pos:end="61:50"><expr pos:start="61:45" pos:end="61:50"><name pos:start="61:45" pos:end="61:50"><name pos:start="61:45" pos:end="61:45">s</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:50">cpu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:54" pos:end="61:64"><expr pos:start="61:54" pos:end="61:64"><name pos:start="61:54" pos:end="61:64">ARM_CPU_FIQ</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="63:21" pos:end="63:24"><expr pos:start="63:21" pos:end="63:24"><name pos:start="63:21" pos:end="63:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="77:26"><expr pos:start="67:5" pos:end="77:25"><call pos:start="67:5" pos:end="77:25"><name pos:start="67:5" pos:end="67:25">sysbus_create_varargs</name><argument_list pos:start="67:26" pos:end="77:25">(<argument pos:start="67:27" pos:end="67:40"><expr pos:start="67:27" pos:end="67:40"><literal type="string" pos:start="67:27" pos:end="67:40">"pxa25x-timer"</literal></expr></argument>, <argument pos:start="67:43" pos:end="67:52"><expr pos:start="67:43" pos:end="67:52"><literal type="number" pos:start="67:43" pos:end="67:52">0x90000000</literal></expr></argument>,

                    <argument pos:start="69:21" pos:end="69:58"><expr pos:start="69:21" pos:end="69:58"><call pos:start="69:21" pos:end="69:58"><name pos:start="69:21" pos:end="69:36">qdev_get_gpio_in</name><argument_list pos:start="69:37" pos:end="69:58">(<argument pos:start="69:38" pos:end="69:43"><expr pos:start="69:38" pos:end="69:43"><name pos:start="69:38" pos:end="69:43"><name pos:start="69:38" pos:end="69:38">s</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:43">pic</name></name></expr></argument>, <argument pos:start="69:46" pos:end="69:57"><expr pos:start="69:46" pos:end="69:57"><name pos:start="69:46" pos:end="69:57">SA_PIC_OSTC0</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="71:21" pos:end="71:58"><expr pos:start="71:21" pos:end="71:58"><call pos:start="71:21" pos:end="71:58"><name pos:start="71:21" pos:end="71:36">qdev_get_gpio_in</name><argument_list pos:start="71:37" pos:end="71:58">(<argument pos:start="71:38" pos:end="71:43"><expr pos:start="71:38" pos:end="71:43"><name pos:start="71:38" pos:end="71:43"><name pos:start="71:38" pos:end="71:38">s</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:43">pic</name></name></expr></argument>, <argument pos:start="71:46" pos:end="71:57"><expr pos:start="71:46" pos:end="71:57"><name pos:start="71:46" pos:end="71:57">SA_PIC_OSTC1</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="73:21" pos:end="73:58"><expr pos:start="73:21" pos:end="73:58"><call pos:start="73:21" pos:end="73:58"><name pos:start="73:21" pos:end="73:36">qdev_get_gpio_in</name><argument_list pos:start="73:37" pos:end="73:58">(<argument pos:start="73:38" pos:end="73:43"><expr pos:start="73:38" pos:end="73:43"><name pos:start="73:38" pos:end="73:43"><name pos:start="73:38" pos:end="73:38">s</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:43">pic</name></name></expr></argument>, <argument pos:start="73:46" pos:end="73:57"><expr pos:start="73:46" pos:end="73:57"><name pos:start="73:46" pos:end="73:57">SA_PIC_OSTC2</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="75:21" pos:end="75:58"><expr pos:start="75:21" pos:end="75:58"><call pos:start="75:21" pos:end="75:58"><name pos:start="75:21" pos:end="75:36">qdev_get_gpio_in</name><argument_list pos:start="75:37" pos:end="75:58">(<argument pos:start="75:38" pos:end="75:43"><expr pos:start="75:38" pos:end="75:43"><name pos:start="75:38" pos:end="75:43"><name pos:start="75:38" pos:end="75:38">s</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:43">pic</name></name></expr></argument>, <argument pos:start="75:46" pos:end="75:57"><expr pos:start="75:46" pos:end="75:57"><name pos:start="75:46" pos:end="75:57">SA_PIC_OSTC3</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="77:21" pos:end="77:24"><expr pos:start="77:21" pos:end="77:24"><name pos:start="77:21" pos:end="77:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="83:64"><expr pos:start="81:5" pos:end="83:63"><call pos:start="81:5" pos:end="83:63"><name pos:start="81:5" pos:end="81:24">sysbus_create_simple</name><argument_list pos:start="81:25" pos:end="83:63">(<argument pos:start="81:26" pos:end="81:43"><expr pos:start="81:26" pos:end="81:43"><name pos:start="81:26" pos:end="81:43">TYPE_STRONGARM_RTC</name></expr></argument>, <argument pos:start="81:46" pos:end="81:55"><expr pos:start="81:46" pos:end="81:55"><literal type="number" pos:start="81:46" pos:end="81:55">0x90010000</literal></expr></argument>,

                    <argument pos:start="83:21" pos:end="83:62"><expr pos:start="83:21" pos:end="83:62"><call pos:start="83:21" pos:end="83:62"><name pos:start="83:21" pos:end="83:36">qdev_get_gpio_in</name><argument_list pos:start="83:37" pos:end="83:62">(<argument pos:start="83:38" pos:end="83:43"><expr pos:start="83:38" pos:end="83:43"><name pos:start="83:38" pos:end="83:43"><name pos:start="83:38" pos:end="83:38">s</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:43">pic</name></name></expr></argument>, <argument pos:start="83:46" pos:end="83:61"><expr pos:start="83:46" pos:end="83:61"><name pos:start="83:46" pos:end="83:61">SA_PIC_RTC_ALARM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:54"><expr pos:start="87:5" pos:end="87:53"><name pos:start="87:5" pos:end="87:11"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:11">gpio</name></name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:53"><name pos:start="87:15" pos:end="87:33">strongarm_gpio_init</name><argument_list pos:start="87:34" pos:end="87:53">(<argument pos:start="87:35" pos:end="87:44"><expr pos:start="87:35" pos:end="87:44"><literal type="number" pos:start="87:35" pos:end="87:44">0x90040000</literal></expr></argument>, <argument pos:start="87:47" pos:end="87:52"><expr pos:start="87:47" pos:end="87:52"><name pos:start="87:47" pos:end="87:52"><name pos:start="87:47" pos:end="87:47">s</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:52">pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:73"><expr pos:start="91:5" pos:end="91:72"><name pos:start="91:5" pos:end="91:10"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:10">ppc</name></name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:72"><name pos:start="91:14" pos:end="91:34">sysbus_create_varargs</name><argument_list pos:start="91:35" pos:end="91:72">(<argument pos:start="91:36" pos:end="91:53"><expr pos:start="91:36" pos:end="91:53"><name pos:start="91:36" pos:end="91:53">TYPE_STRONGARM_PPC</name></expr></argument>, <argument pos:start="91:56" pos:end="91:65"><expr pos:start="91:56" pos:end="91:65"><literal type="number" pos:start="91:56" pos:end="91:65">0x90060000</literal></expr></argument>, <argument pos:start="91:68" pos:end="91:71"><expr pos:start="91:68" pos:end="91:71"><name pos:start="91:68" pos:end="91:71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="95:5" pos:end="111:5">for <control pos:start="95:9" pos:end="95:42">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:37"><expr pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:25">sa_serial</name><index pos:start="95:26" pos:end="95:28">[<expr pos:start="95:27" pos:end="95:27"><name pos:start="95:27" pos:end="95:27">i</name></expr>]</index></name><operator pos:start="95:29" pos:end="95:29">.</operator><name pos:start="95:30" pos:end="95:36">io_base</name></expr>;</condition> <incr pos:start="95:39" pos:end="95:41"><expr pos:start="95:39" pos:end="95:41"><name pos:start="95:39" pos:end="95:39">i</name><operator pos:start="95:40" pos:end="95:41">++</operator></expr></incr>)</control> <block pos:start="95:44" pos:end="111:5">{<block_content pos:start="97:9" pos:end="109:60">

        <decl_stmt pos:start="97:9" pos:end="97:66"><decl pos:start="97:9" pos:end="97:65"><type pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:19">DeviceState</name> <modifier pos:start="97:21" pos:end="97:21">*</modifier></type><name pos:start="97:22" pos:end="97:24">dev</name> <init pos:start="97:26" pos:end="97:65">= <expr pos:start="97:28" pos:end="97:65"><call pos:start="97:28" pos:end="97:65"><name pos:start="97:28" pos:end="97:38">qdev_create</name><argument_list pos:start="97:39" pos:end="97:65">(<argument pos:start="97:40" pos:end="97:43"><expr pos:start="97:40" pos:end="97:43"><name pos:start="97:40" pos:end="97:43">NULL</name></expr></argument>, <argument pos:start="97:46" pos:end="97:64"><expr pos:start="97:46" pos:end="97:64"><name pos:start="97:46" pos:end="97:64">TYPE_STRONGARM_UART</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:57"><expr pos:start="99:9" pos:end="99:56"><call pos:start="99:9" pos:end="99:56"><name pos:start="99:9" pos:end="99:25">qdev_prop_set_chr</name><argument_list pos:start="99:26" pos:end="99:56">(<argument pos:start="99:27" pos:end="99:29"><expr pos:start="99:27" pos:end="99:29"><name pos:start="99:27" pos:end="99:29">dev</name></expr></argument>, <argument pos:start="99:32" pos:end="99:40"><expr pos:start="99:32" pos:end="99:40"><literal type="string" pos:start="99:32" pos:end="99:40">"chardev"</literal></expr></argument>, <argument pos:start="99:43" pos:end="99:55"><expr pos:start="99:43" pos:end="99:55"><name pos:start="99:43" pos:end="99:55"><name pos:start="99:43" pos:end="99:52">serial_hds</name><index pos:start="99:53" pos:end="99:55">[<expr pos:start="99:54" pos:end="99:54"><name pos:start="99:54" pos:end="99:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><call pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:24">qdev_init_nofail</name><argument_list pos:start="101:25" pos:end="101:29">(<argument pos:start="101:26" pos:end="101:28"><expr pos:start="101:26" pos:end="101:28"><name pos:start="101:26" pos:end="101:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="105:38"><expr pos:start="103:9" pos:end="105:37"><call pos:start="103:9" pos:end="105:37"><name pos:start="103:9" pos:end="103:23">sysbus_mmio_map</name><argument_list pos:start="103:24" pos:end="105:37">(<argument pos:start="103:25" pos:end="103:43"><expr pos:start="103:25" pos:end="103:43"><call pos:start="103:25" pos:end="103:43"><name pos:start="103:25" pos:end="103:38">SYS_BUS_DEVICE</name><argument_list pos:start="103:39" pos:end="103:43">(<argument pos:start="103:40" pos:end="103:42"><expr pos:start="103:40" pos:end="103:42"><name pos:start="103:40" pos:end="103:42">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:46" pos:end="103:46"><expr pos:start="103:46" pos:end="103:46"><literal type="number" pos:start="103:46" pos:end="103:46">0</literal></expr></argument>,

                <argument pos:start="105:17" pos:end="105:36"><expr pos:start="105:17" pos:end="105:36"><name pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:25">sa_serial</name><index pos:start="105:26" pos:end="105:28">[<expr pos:start="105:27" pos:end="105:27"><name pos:start="105:27" pos:end="105:27">i</name></expr>]</index></name><operator pos:start="105:29" pos:end="105:29">.</operator><name pos:start="105:30" pos:end="105:36">io_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="109:60"><expr pos:start="107:9" pos:end="109:59"><call pos:start="107:9" pos:end="109:59"><name pos:start="107:9" pos:end="107:26">sysbus_connect_irq</name><argument_list pos:start="107:27" pos:end="109:59">(<argument pos:start="107:28" pos:end="107:46"><expr pos:start="107:28" pos:end="107:46"><call pos:start="107:28" pos:end="107:46"><name pos:start="107:28" pos:end="107:41">SYS_BUS_DEVICE</name><argument_list pos:start="107:42" pos:end="107:46">(<argument pos:start="107:43" pos:end="107:45"><expr pos:start="107:43" pos:end="107:45"><name pos:start="107:43" pos:end="107:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:49" pos:end="107:49"><expr pos:start="107:49" pos:end="107:49"><literal type="number" pos:start="107:49" pos:end="107:49">0</literal></expr></argument>,

                <argument pos:start="109:17" pos:end="109:58"><expr pos:start="109:17" pos:end="109:58"><call pos:start="109:17" pos:end="109:58"><name pos:start="109:17" pos:end="109:32">qdev_get_gpio_in</name><argument_list pos:start="109:33" pos:end="109:58">(<argument pos:start="109:34" pos:end="109:39"><expr pos:start="109:34" pos:end="109:39"><name pos:start="109:34" pos:end="109:39"><name pos:start="109:34" pos:end="109:34">s</name><operator pos:start="109:35" pos:end="109:36">-&gt;</operator><name pos:start="109:37" pos:end="109:39">pic</name></name></expr></argument>, <argument pos:start="109:42" pos:end="109:57"><expr pos:start="109:42" pos:end="109:57"><name pos:start="109:42" pos:end="109:53"><name pos:start="109:42" pos:end="109:50">sa_serial</name><index pos:start="109:51" pos:end="109:53">[<expr pos:start="109:52" pos:end="109:52"><name pos:start="109:52" pos:end="109:52">i</name></expr>]</index></name><operator pos:start="109:54" pos:end="109:54">.</operator><name pos:start="109:55" pos:end="109:57">irq</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="115:5" pos:end="117:60"><expr pos:start="115:5" pos:end="117:59"><name pos:start="115:5" pos:end="115:10"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:10">ssp</name></name> <operator pos:start="115:12" pos:end="115:12">=</operator> <call pos:start="115:14" pos:end="117:59"><name pos:start="115:14" pos:end="115:34">sysbus_create_varargs</name><argument_list pos:start="115:35" pos:end="117:59">(<argument pos:start="115:36" pos:end="115:53"><expr pos:start="115:36" pos:end="115:53"><name pos:start="115:36" pos:end="115:53">TYPE_STRONGARM_SSP</name></expr></argument>, <argument pos:start="115:56" pos:end="115:65"><expr pos:start="115:56" pos:end="115:65"><literal type="number" pos:start="115:56" pos:end="115:65">0x80070000</literal></expr></argument>,

                <argument pos:start="117:17" pos:end="117:52"><expr pos:start="117:17" pos:end="117:52"><call pos:start="117:17" pos:end="117:52"><name pos:start="117:17" pos:end="117:32">qdev_get_gpio_in</name><argument_list pos:start="117:33" pos:end="117:52">(<argument pos:start="117:34" pos:end="117:39"><expr pos:start="117:34" pos:end="117:39"><name pos:start="117:34" pos:end="117:39"><name pos:start="117:34" pos:end="117:34">s</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:39">pic</name></name></expr></argument>, <argument pos:start="117:42" pos:end="117:51"><expr pos:start="117:42" pos:end="117:51"><name pos:start="117:42" pos:end="117:51">SA_PIC_SSP</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:55" pos:end="117:58"><expr pos:start="117:55" pos:end="117:58"><name pos:start="117:55" pos:end="117:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:61"><expr pos:start="119:5" pos:end="119:60"><name pos:start="119:5" pos:end="119:14"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:14">ssp_bus</name></name> <operator pos:start="119:16" pos:end="119:16">=</operator> <operator pos:start="119:18" pos:end="119:18">(</operator><name pos:start="119:19" pos:end="119:24">SSIBus</name> <operator pos:start="119:26" pos:end="119:26">*</operator><operator pos:start="119:27" pos:end="119:27">)</operator><call pos:start="119:28" pos:end="119:60"><name pos:start="119:28" pos:end="119:45">qdev_get_child_bus</name><argument_list pos:start="119:46" pos:end="119:60">(<argument pos:start="119:47" pos:end="119:52"><expr pos:start="119:47" pos:end="119:52"><name pos:start="119:47" pos:end="119:52"><name pos:start="119:47" pos:end="119:47">s</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:52">ssp</name></name></expr></argument>, <argument pos:start="119:55" pos:end="119:59"><expr pos:start="119:55" pos:end="119:59"><literal type="string" pos:start="119:55" pos:end="119:59">"ssi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><name pos:start="123:12" pos:end="123:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
