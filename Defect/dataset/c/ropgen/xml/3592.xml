<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3592.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">usb_host_info</name><parameter_list pos:start="1:19" pos:end="1:52">(<parameter pos:start="1:20" pos:end="1:31"><decl pos:start="1:20" pos:end="1:31"><type pos:start="1:20" pos:end="1:31"><name pos:start="1:20" pos:end="1:26">Monitor</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">mon</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:44">QDict</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:37">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:17">libusb_device</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">devs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:35">libusb_device_descriptor</name></name></type> <name pos:start="7:37" pos:end="7:41">ddesc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:13">port</name><index pos:start="9:14" pos:end="9:17">[<expr pos:start="9:15" pos:end="9:16"><literal type="number" pos:start="9:15" pos:end="9:16">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">n</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><call pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:21">usb_host_init</name><argument_list pos:start="15:22" pos:end="15:23">()</argument_list></call> <operator pos:start="15:25" pos:end="15:26">!=</operator> <literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>)</condition> <block pos:start="15:31" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:5">n</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:30">libusb_get_device_list</name><argument_list pos:start="23:31" pos:end="23:42">(<argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:34">ctx</name></expr></argument>, <argument pos:start="23:37" pos:end="23:41"><expr pos:start="23:37" pos:end="23:41"><operator pos:start="23:37" pos:end="23:37">&amp;</operator><name pos:start="23:38" pos:end="23:41">devs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="81:5">for <control pos:start="25:9" pos:end="25:27">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:21">n</name></expr>;</condition> <incr pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:24">i</name><operator pos:start="25:25" pos:end="25:26">++</operator></expr></incr>)</control> <block pos:start="25:29" pos:end="81:5">{<block_content pos:start="27:9" pos:end="79:34">

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:63">(<expr pos:start="27:13" pos:end="27:62"><call pos:start="27:13" pos:end="27:57"><name pos:start="27:13" pos:end="27:40">libusb_get_device_descriptor</name><argument_list pos:start="27:41" pos:end="27:57">(<argument pos:start="27:42" pos:end="27:48"><expr pos:start="27:42" pos:end="27:48"><name pos:start="27:42" pos:end="27:48"><name pos:start="27:42" pos:end="27:45">devs</name><index pos:start="27:46" pos:end="27:48">[<expr pos:start="27:47" pos:end="27:47"><name pos:start="27:47" pos:end="27:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="27:51" pos:end="27:56"><expr pos:start="27:51" pos:end="27:56"><operator pos:start="27:51" pos:end="27:51">&amp;</operator><name pos:start="27:52" pos:end="27:56">ddesc</name></expr></argument>)</argument_list></call> <operator pos:start="27:59" pos:end="27:60">!=</operator> <literal type="number" pos:start="27:62" pos:end="27:62">0</literal></expr>)</condition> <block pos:start="27:65" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:51">(<expr pos:start="33:13" pos:end="33:50"><name pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:17">ddesc</name><operator pos:start="33:18" pos:end="33:18">.</operator><name pos:start="33:19" pos:end="33:30">bDeviceClass</name></name> <operator pos:start="33:32" pos:end="33:33">==</operator> <name pos:start="33:35" pos:end="33:50">LIBUSB_CLASS_HUB</name></expr>)</condition> <block pos:start="33:53" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><call pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:25">usb_host_get_port</name><argument_list pos:start="39:26" pos:end="39:54">(<argument pos:start="39:27" pos:end="39:33"><expr pos:start="39:27" pos:end="39:33"><name pos:start="39:27" pos:end="39:33"><name pos:start="39:27" pos:end="39:30">devs</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="39:36" pos:end="39:39"><expr pos:start="39:36" pos:end="39:39"><name pos:start="39:36" pos:end="39:39">port</name></expr></argument>, <argument pos:start="39:42" pos:end="39:53"><expr pos:start="39:42" pos:end="39:53"><sizeof pos:start="39:42" pos:end="39:53">sizeof<argument_list pos:start="39:48" pos:end="39:53">(<argument pos:start="39:49" pos:end="39:52"><expr pos:start="39:49" pos:end="39:52"><name pos:start="39:49" pos:end="39:52">port</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="49:69"><expr pos:start="41:9" pos:end="49:68"><call pos:start="41:9" pos:end="49:68"><name pos:start="41:9" pos:end="41:22">monitor_printf</name><argument_list pos:start="41:23" pos:end="49:68">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">mon</name></expr></argument>, <argument pos:start="41:29" pos:end="41:73"><expr pos:start="41:29" pos:end="41:73"><literal type="string" pos:start="41:29" pos:end="41:73">"  Bus %d, Addr %d, Port %s, Speed %s Mb/s\n"</literal></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:53"><expr pos:start="43:24" pos:end="43:53"><call pos:start="43:24" pos:end="43:53"><name pos:start="43:24" pos:end="43:44">libusb_get_bus_number</name><argument_list pos:start="43:45" pos:end="43:53">(<argument pos:start="43:46" pos:end="43:52"><expr pos:start="43:46" pos:end="43:52"><name pos:start="43:46" pos:end="43:52"><name pos:start="43:46" pos:end="43:49">devs</name><index pos:start="43:50" pos:end="43:52">[<expr pos:start="43:51" pos:end="43:51"><name pos:start="43:51" pos:end="43:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="45:24" pos:end="45:57"><expr pos:start="45:24" pos:end="45:57"><call pos:start="45:24" pos:end="45:57"><name pos:start="45:24" pos:end="45:48">libusb_get_device_address</name><argument_list pos:start="45:49" pos:end="45:57">(<argument pos:start="45:50" pos:end="45:56"><expr pos:start="45:50" pos:end="45:56"><name pos:start="45:50" pos:end="45:56"><name pos:start="45:50" pos:end="45:53">devs</name><index pos:start="45:54" pos:end="45:56">[<expr pos:start="45:55" pos:end="45:55"><name pos:start="45:55" pos:end="45:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="47:24" pos:end="47:27"><expr pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:27">port</name></expr></argument>,

                       <argument pos:start="49:24" pos:end="49:67"><expr pos:start="49:24" pos:end="49:67"><name pos:start="49:24" pos:end="49:67"><name pos:start="49:24" pos:end="49:33">speed_name</name><index pos:start="49:34" pos:end="49:67">[<expr pos:start="49:35" pos:end="49:66"><call pos:start="49:35" pos:end="49:66"><name pos:start="49:35" pos:end="49:57">libusb_get_device_speed</name><argument_list pos:start="49:58" pos:end="49:66">(<argument pos:start="49:59" pos:end="49:65"><expr pos:start="49:59" pos:end="49:65"><name pos:start="49:59" pos:end="49:65"><name pos:start="49:59" pos:end="49:62">devs</name><index pos:start="49:63" pos:end="49:65">[<expr pos:start="49:64" pos:end="49:64"><name pos:start="49:64" pos:end="49:64">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:67"><expr pos:start="51:9" pos:end="51:66"><call pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:22">monitor_printf</name><argument_list pos:start="51:23" pos:end="51:66">(<argument pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">mon</name></expr></argument>, <argument pos:start="51:29" pos:end="51:45"><expr pos:start="51:29" pos:end="51:45"><literal type="string" pos:start="51:29" pos:end="51:45">"    Class %02x:"</literal></expr></argument>, <argument pos:start="51:48" pos:end="51:65"><expr pos:start="51:48" pos:end="51:65"><name pos:start="51:48" pos:end="51:65"><name pos:start="51:48" pos:end="51:52">ddesc</name><operator pos:start="51:53" pos:end="51:53">.</operator><name pos:start="51:54" pos:end="51:65">bDeviceClass</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="55:56"><expr pos:start="53:9" pos:end="55:55"><call pos:start="53:9" pos:end="55:55"><name pos:start="53:9" pos:end="53:22">monitor_printf</name><argument_list pos:start="53:23" pos:end="55:55">(<argument pos:start="53:24" pos:end="53:26"><expr pos:start="53:24" pos:end="53:26"><name pos:start="53:24" pos:end="53:26">mon</name></expr></argument>, <argument pos:start="53:29" pos:end="53:51"><expr pos:start="53:29" pos:end="53:51"><literal type="string" pos:start="53:29" pos:end="53:51">" USB device %04x:%04x"</literal></expr></argument>,

                       <argument pos:start="55:24" pos:end="55:37"><expr pos:start="55:24" pos:end="55:37"><name pos:start="55:24" pos:end="55:37"><name pos:start="55:24" pos:end="55:28">ddesc</name><operator pos:start="55:29" pos:end="55:29">.</operator><name pos:start="55:30" pos:end="55:37">idVendor</name></name></expr></argument>, <argument pos:start="55:40" pos:end="55:54"><expr pos:start="55:40" pos:end="55:54"><name pos:start="55:40" pos:end="55:54"><name pos:start="55:40" pos:end="55:44">ddesc</name><operator pos:start="55:45" pos:end="55:45">.</operator><name pos:start="55:46" pos:end="55:54">idProduct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="77:9"><if pos:start="57:9" pos:end="77:9">if <condition pos:start="57:12" pos:end="57:27">(<expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:17">ddesc</name><operator pos:start="57:18" pos:end="57:18">.</operator><name pos:start="57:19" pos:end="57:26">iProduct</name></name></expr>)</condition> <block pos:start="57:29" pos:end="77:9">{<block_content pos:start="59:13" pos:end="75:13">

            <decl_stmt pos:start="59:13" pos:end="59:41"><decl pos:start="59:13" pos:end="59:40"><type pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:32">libusb_device_handle</name> <modifier pos:start="59:34" pos:end="59:34">*</modifier></type><name pos:start="59:35" pos:end="59:40">handle</name></decl>;</decl_stmt>

            <if_stmt pos:start="61:13" pos:end="75:13"><if pos:start="61:13" pos:end="75:13">if <condition pos:start="61:16" pos:end="61:51">(<expr pos:start="61:17" pos:end="61:50"><call pos:start="61:17" pos:end="61:45"><name pos:start="61:17" pos:end="61:27">libusb_open</name><argument_list pos:start="61:28" pos:end="61:45">(<argument pos:start="61:29" pos:end="61:35"><expr pos:start="61:29" pos:end="61:35"><name pos:start="61:29" pos:end="61:35"><name pos:start="61:29" pos:end="61:32">devs</name><index pos:start="61:33" pos:end="61:35">[<expr pos:start="61:34" pos:end="61:34"><name pos:start="61:34" pos:end="61:34">i</name></expr>]</index></name></expr></argument>, <argument pos:start="61:38" pos:end="61:44"><expr pos:start="61:38" pos:end="61:44"><operator pos:start="61:38" pos:end="61:38">&amp;</operator><name pos:start="61:39" pos:end="61:44">handle</name></expr></argument>)</argument_list></call> <operator pos:start="61:47" pos:end="61:48">==</operator> <literal type="number" pos:start="61:50" pos:end="61:50">0</literal></expr>)</condition> <block pos:start="61:53" pos:end="75:13">{<block_content pos:start="63:17" pos:end="73:50">

                <decl_stmt pos:start="63:17" pos:end="63:44"><decl pos:start="63:17" pos:end="63:43"><type pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:24">unsigned</name> <name pos:start="63:26" pos:end="63:29">char</name></type> <name pos:start="63:31" pos:end="63:38"><name pos:start="63:31" pos:end="63:34">name</name><index pos:start="63:35" pos:end="63:38">[<expr pos:start="63:36" pos:end="63:37"><literal type="number" pos:start="63:36" pos:end="63:37">64</literal></expr>]</index></name> <init pos:start="63:40" pos:end="63:43">= <expr pos:start="63:42" pos:end="63:43"><literal type="string" pos:start="63:42" pos:end="63:43">""</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="65:17" pos:end="69:71"><expr pos:start="65:17" pos:end="69:70"><call pos:start="65:17" pos:end="69:70"><name pos:start="65:17" pos:end="65:50">libusb_get_string_descriptor_ascii</name><argument_list pos:start="65:51" pos:end="69:70">(<argument pos:start="65:52" pos:end="65:57"><expr pos:start="65:52" pos:end="65:57"><name pos:start="65:52" pos:end="65:57">handle</name></expr></argument>,

                                                   <argument pos:start="67:52" pos:end="67:65"><expr pos:start="67:52" pos:end="67:65"><name pos:start="67:52" pos:end="67:65"><name pos:start="67:52" pos:end="67:56">ddesc</name><operator pos:start="67:57" pos:end="67:57">.</operator><name pos:start="67:58" pos:end="67:65">iProduct</name></name></expr></argument>,

                                                   <argument pos:start="69:52" pos:end="69:55"><expr pos:start="69:52" pos:end="69:55"><name pos:start="69:52" pos:end="69:55">name</name></expr></argument>, <argument pos:start="69:58" pos:end="69:69"><expr pos:start="69:58" pos:end="69:69"><sizeof pos:start="69:58" pos:end="69:69">sizeof<argument_list pos:start="69:64" pos:end="69:69">(<argument pos:start="69:65" pos:end="69:68"><expr pos:start="69:65" pos:end="69:68"><name pos:start="69:65" pos:end="69:68">name</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:37"><expr pos:start="71:17" pos:end="71:36"><call pos:start="71:17" pos:end="71:36"><name pos:start="71:17" pos:end="71:28">libusb_close</name><argument_list pos:start="71:29" pos:end="71:36">(<argument pos:start="71:30" pos:end="71:35"><expr pos:start="71:30" pos:end="71:35"><name pos:start="71:30" pos:end="71:35">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:50"><expr pos:start="73:17" pos:end="73:49"><call pos:start="73:17" pos:end="73:49"><name pos:start="73:17" pos:end="73:30">monitor_printf</name><argument_list pos:start="73:31" pos:end="73:49">(<argument pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:34">mon</name></expr></argument>, <argument pos:start="73:37" pos:end="73:42"><expr pos:start="73:37" pos:end="73:42"><literal type="string" pos:start="73:37" pos:end="73:42">", %s"</literal></expr></argument>, <argument pos:start="73:45" pos:end="73:48"><expr pos:start="73:45" pos:end="73:48"><name pos:start="73:45" pos:end="73:48">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:34"><expr pos:start="79:9" pos:end="79:33"><call pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:22">monitor_printf</name><argument_list pos:start="79:23" pos:end="79:33">(<argument pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:26">mon</name></expr></argument>, <argument pos:start="79:29" pos:end="79:32"><expr pos:start="79:29" pos:end="79:32"><literal type="string" pos:start="79:29" pos:end="79:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="83:5" pos:end="83:37"><expr pos:start="83:5" pos:end="83:36"><call pos:start="83:5" pos:end="83:36"><name pos:start="83:5" pos:end="83:27">libusb_free_device_list</name><argument_list pos:start="83:28" pos:end="83:36">(<argument pos:start="83:29" pos:end="83:32"><expr pos:start="83:29" pos:end="83:32"><name pos:start="83:29" pos:end="83:32">devs</name></expr></argument>, <argument pos:start="83:35" pos:end="83:35"><expr pos:start="83:35" pos:end="83:35"><literal type="number" pos:start="83:35" pos:end="83:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
