<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22376.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">ram_save_compressed_page</name><parameter_list pos:start="1:36" pos:end="3:52">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:44">RAMState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">rs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:71"><decl pos:start="1:51" pos:end="1:71"><type pos:start="1:51" pos:end="1:71"><name pos:start="1:51" pos:end="1:66">PageSearchStatus</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">pss</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:51"><decl pos:start="3:37" pos:end="3:51"><type pos:start="3:37" pos:end="3:51"><name pos:start="3:37" pos:end="3:40">bool</name></type> <name pos:start="3:42" pos:end="3:51">last_stage</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:17">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">pages</name> <init pos:start="7:15" pos:end="7:18">= <expr pos:start="7:17" pos:end="7:18"><operator pos:start="7:17" pos:end="7:17">-</operator><literal type="number" pos:start="7:18" pos:end="7:18">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:23">bytes_xmit</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:17">blen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">RAMBlock</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:19">block</name> <init pos:start="15:21" pos:end="15:32">= <expr pos:start="15:23" pos:end="15:32"><name pos:start="15:23" pos:end="15:32"><name pos:start="15:23" pos:end="15:25">pss</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:32">block</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:54"><decl pos:start="17:5" pos:end="17:53"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:14">ram_addr_t</name></type> <name pos:start="17:16" pos:end="17:21">offset</name> <init pos:start="17:23" pos:end="17:53">= <expr pos:start="17:25" pos:end="17:53"><name pos:start="17:25" pos:end="17:33"><name pos:start="17:25" pos:end="17:27">pss</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:33">page</name></name> <operator pos:start="17:35" pos:end="17:36">&lt;&lt;</operator> <name pos:start="17:38" pos:end="17:53">TARGET_PAGE_BITS</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:5">p</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:13">block</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:19">host</name></name> <operator pos:start="21:21" pos:end="21:21">+</operator> <name pos:start="21:23" pos:end="21:28">offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:71"><expr pos:start="25:5" pos:end="27:70"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="27:70"><name pos:start="25:11" pos:end="25:31">ram_control_save_page</name><argument_list pos:start="25:32" pos:end="27:70">(<argument pos:start="25:33" pos:end="25:37"><expr pos:start="25:33" pos:end="25:37"><name pos:start="25:33" pos:end="25:37"><name pos:start="25:33" pos:end="25:34">rs</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:37">f</name></name></expr></argument>, <argument pos:start="25:40" pos:end="25:52"><expr pos:start="25:40" pos:end="25:52"><name pos:start="25:40" pos:end="25:52"><name pos:start="25:40" pos:end="25:44">block</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:52">offset</name></name></expr></argument>,

                                <argument pos:start="27:33" pos:end="27:38"><expr pos:start="27:33" pos:end="27:38"><name pos:start="27:33" pos:end="27:38">offset</name></expr></argument>, <argument pos:start="27:41" pos:end="27:56"><expr pos:start="27:41" pos:end="27:56"><name pos:start="27:41" pos:end="27:56">TARGET_PAGE_SIZE</name></expr></argument>, <argument pos:start="27:59" pos:end="27:69"><expr pos:start="27:59" pos:end="27:69"><operator pos:start="27:59" pos:end="27:59">&amp;</operator><name pos:start="27:60" pos:end="27:69">bytes_xmit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:18">bytes_xmit</name></expr>)</condition> <block pos:start="29:21" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:10">rs</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:29">bytes_transferred</name></name> <operator pos:start="31:31" pos:end="31:32">+=</operator> <name pos:start="31:34" pos:end="31:43">bytes_xmit</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:13">pages</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="125:5"><if pos:start="37:5" pos:end="53:5">if <condition pos:start="37:8" pos:end="37:41">(<expr pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:14">!=</operator> <name pos:start="37:16" pos:end="37:40">RAM_SAVE_CONTROL_NOT_SUPP</name></expr>)</condition> <block pos:start="37:43" pos:end="53:5">{<block_content pos:start="39:9" pos:end="51:9">

        <if_stmt pos:start="39:9" pos:end="51:9"><if pos:start="39:9" pos:end="51:9">if <condition pos:start="39:12" pos:end="39:44">(<expr pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:18">!=</operator> <name pos:start="39:20" pos:end="39:43">RAM_SAVE_CONTROL_DELAYED</name></expr>)</condition> <block pos:start="39:46" pos:end="51:9">{<block_content pos:start="41:13" pos:end="49:13">

            <if_stmt pos:start="41:13" pos:end="49:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:31">(<expr pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:26">bytes_xmit</name> <operator pos:start="41:28" pos:end="41:28">&gt;</operator> <literal type="number" pos:start="41:30" pos:end="41:30">0</literal></expr>)</condition> <block pos:start="41:33" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:33">

                <expr_stmt pos:start="43:17" pos:end="43:33"><expr pos:start="43:17" pos:end="43:32"><name pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:18">rs</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:30">norm_pages</name></name><operator pos:start="43:31" pos:end="43:32">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="45:15" pos:end="49:13">else if <condition pos:start="45:23" pos:end="45:39">(<expr pos:start="45:24" pos:end="45:38"><name pos:start="45:24" pos:end="45:33">bytes_xmit</name> <operator pos:start="45:35" pos:end="45:36">==</operator> <literal type="number" pos:start="45:38" pos:end="45:38">0</literal></expr>)</condition> <block pos:start="45:41" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:33">

                <expr_stmt pos:start="47:17" pos:end="47:33"><expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:18">rs</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:30">zero_pages</name></name><operator pos:start="47:31" pos:end="47:32">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="125:5">else <block pos:start="53:12" pos:end="125:5">{<block_content pos:start="67:9" pos:end="123:9">

        <comment type="block" pos:start="55:9" pos:end="65:11">/* When starting the process of a new block, the first page of

         * the block should be sent out before other pages in the same

         * block, and all the pages in last block should have been sent

         * out, keeping this order is important, because the 'cont' flag

         * is used to avoid resending the block name.

         */</comment>

        <if_stmt pos:start="67:9" pos:end="123:9"><if pos:start="67:9" pos:end="109:9">if <condition pos:start="67:12" pos:end="67:41">(<expr pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:17">block</name> <operator pos:start="67:19" pos:end="67:20">!=</operator> <name pos:start="67:22" pos:end="67:40"><name pos:start="67:22" pos:end="67:23">rs</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:40">last_sent_block</name></name></expr>)</condition> <block pos:start="67:43" pos:end="109:9">{<block_content pos:start="69:13" pos:end="107:13">

            <expr_stmt pos:start="69:13" pos:end="69:38"><expr pos:start="69:13" pos:end="69:37"><call pos:start="69:13" pos:end="69:37"><name pos:start="69:13" pos:end="69:33">flush_compressed_data</name><argument_list pos:start="69:34" pos:end="69:37">(<argument pos:start="69:35" pos:end="69:36"><expr pos:start="69:35" pos:end="69:36"><name pos:start="69:35" pos:end="69:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:57"><expr pos:start="71:13" pos:end="71:56"><name pos:start="71:13" pos:end="71:17">pages</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="71:56"><name pos:start="71:21" pos:end="71:34">save_zero_page</name><argument_list pos:start="71:35" pos:end="71:56">(<argument pos:start="71:36" pos:end="71:37"><expr pos:start="71:36" pos:end="71:37"><name pos:start="71:36" pos:end="71:37">rs</name></expr></argument>, <argument pos:start="71:40" pos:end="71:44"><expr pos:start="71:40" pos:end="71:44"><name pos:start="71:40" pos:end="71:44">block</name></expr></argument>, <argument pos:start="71:47" pos:end="71:52"><expr pos:start="71:47" pos:end="71:52"><name pos:start="71:47" pos:end="71:52">offset</name></expr></argument>, <argument pos:start="71:55" pos:end="71:55"><expr pos:start="71:55" pos:end="71:55"><name pos:start="71:55" pos:end="71:55">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="101:13"><if pos:start="73:13" pos:end="101:13">if <condition pos:start="73:16" pos:end="73:28">(<expr pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:21">pages</name> <operator pos:start="73:23" pos:end="73:24">==</operator> <operator pos:start="73:26" pos:end="73:26">-</operator><literal type="number" pos:start="73:27" pos:end="73:27">1</literal></expr>)</condition> <block pos:start="73:30" pos:end="101:13">{<block_content pos:start="77:17" pos:end="99:17">

                <comment type="block" pos:start="75:17" pos:end="75:77">/* Make sure the first page is sent out before other pages */</comment>

                <expr_stmt pos:start="77:17" pos:end="79:75"><expr pos:start="77:17" pos:end="79:74"><name pos:start="77:17" pos:end="77:26">bytes_xmit</name> <operator pos:start="77:28" pos:end="77:28">=</operator> <call pos:start="77:30" pos:end="79:74"><name pos:start="77:30" pos:end="77:45">save_page_header</name><argument_list pos:start="77:46" pos:end="79:74">(<argument pos:start="77:47" pos:end="77:48"><expr pos:start="77:47" pos:end="77:48"><name pos:start="77:47" pos:end="77:48">rs</name></expr></argument>, <argument pos:start="77:51" pos:end="77:55"><expr pos:start="77:51" pos:end="77:55"><name pos:start="77:51" pos:end="77:55">block</name></expr></argument>, <argument pos:start="77:58" pos:end="79:73"><expr pos:start="77:58" pos:end="79:73"><name pos:start="77:58" pos:end="77:63">offset</name> <operator pos:start="77:65" pos:end="77:65">|</operator>

                                              <name pos:start="79:47" pos:end="79:73">RAM_SAVE_FLAG_COMPRESS_PAGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="83:75"><expr pos:start="81:17" pos:end="83:74"><name pos:start="81:17" pos:end="81:20">blen</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <call pos:start="81:24" pos:end="83:74"><name pos:start="81:24" pos:end="81:48">qemu_put_compression_data</name><argument_list pos:start="81:49" pos:end="83:74">(<argument pos:start="81:50" pos:end="81:54"><expr pos:start="81:50" pos:end="81:54"><name pos:start="81:50" pos:end="81:54"><name pos:start="81:50" pos:end="81:51">rs</name><operator pos:start="81:52" pos:end="81:53">-&gt;</operator><name pos:start="81:54" pos:end="81:54">f</name></name></expr></argument>, <argument pos:start="81:57" pos:end="81:57"><expr pos:start="81:57" pos:end="81:57"><name pos:start="81:57" pos:end="81:57">p</name></expr></argument>, <argument pos:start="81:60" pos:end="81:75"><expr pos:start="81:60" pos:end="81:75"><name pos:start="81:60" pos:end="81:75">TARGET_PAGE_SIZE</name></expr></argument>,

                                                 <argument pos:start="83:50" pos:end="83:73"><expr pos:start="83:50" pos:end="83:73"><call pos:start="83:50" pos:end="83:73"><name pos:start="83:50" pos:end="83:71">migrate_compress_level</name><argument_list pos:start="83:72" pos:end="83:73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="85:17" pos:end="99:17"><if pos:start="85:17" pos:end="93:17">if <condition pos:start="85:20" pos:end="85:29">(<expr pos:start="85:21" pos:end="85:28"><name pos:start="85:21" pos:end="85:24">blen</name> <operator pos:start="85:26" pos:end="85:26">&gt;</operator> <literal type="number" pos:start="85:28" pos:end="85:28">0</literal></expr>)</condition> <block pos:start="85:31" pos:end="93:17">{<block_content pos:start="87:21" pos:end="91:30">

                    <expr_stmt pos:start="87:21" pos:end="87:63"><expr pos:start="87:21" pos:end="87:62"><name pos:start="87:21" pos:end="87:41"><name pos:start="87:21" pos:end="87:22">rs</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:41">bytes_transferred</name></name> <operator pos:start="87:43" pos:end="87:44">+=</operator> <name pos:start="87:46" pos:end="87:55">bytes_xmit</name> <operator pos:start="87:57" pos:end="87:57">+</operator> <name pos:start="87:59" pos:end="87:62">blen</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:37"><expr pos:start="89:21" pos:end="89:36"><name pos:start="89:21" pos:end="89:34"><name pos:start="89:21" pos:end="89:22">rs</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:34">norm_pages</name></name><operator pos:start="89:35" pos:end="89:36">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:30"><expr pos:start="91:21" pos:end="91:29"><name pos:start="91:21" pos:end="91:25">pages</name> <operator pos:start="91:27" pos:end="91:27">=</operator> <literal type="number" pos:start="91:29" pos:end="91:29">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="93:19" pos:end="99:17">else <block pos:start="93:24" pos:end="99:17">{<block_content pos:start="95:21" pos:end="97:60">

                    <expr_stmt pos:start="95:21" pos:end="95:53"><expr pos:start="95:21" pos:end="95:52"><call pos:start="95:21" pos:end="95:52"><name pos:start="95:21" pos:end="95:39">qemu_file_set_error</name><argument_list pos:start="95:40" pos:end="95:52">(<argument pos:start="95:41" pos:end="95:45"><expr pos:start="95:41" pos:end="95:45"><name pos:start="95:41" pos:end="95:45"><name pos:start="95:41" pos:end="95:42">rs</name><operator pos:start="95:43" pos:end="95:44">-&gt;</operator><name pos:start="95:45" pos:end="95:45">f</name></name></expr></argument>, <argument pos:start="95:48" pos:end="95:51"><expr pos:start="95:48" pos:end="95:51"><name pos:start="95:48" pos:end="95:51">blen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:60"><expr pos:start="97:21" pos:end="97:59"><call pos:start="97:21" pos:end="97:59"><name pos:start="97:21" pos:end="97:32">error_report</name><argument_list pos:start="97:33" pos:end="97:59">(<argument pos:start="97:34" pos:end="97:58"><expr pos:start="97:34" pos:end="97:58"><literal type="string" pos:start="97:34" pos:end="97:58">"compressed data failed!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="103:13" pos:end="107:13"><if pos:start="103:13" pos:end="107:13">if <condition pos:start="103:16" pos:end="103:26">(<expr pos:start="103:17" pos:end="103:25"><name pos:start="103:17" pos:end="103:21">pages</name> <operator pos:start="103:23" pos:end="103:23">&gt;</operator> <literal type="number" pos:start="103:25" pos:end="103:25">0</literal></expr>)</condition> <block pos:start="103:28" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:63">

                <expr_stmt pos:start="105:17" pos:end="105:63"><expr pos:start="105:17" pos:end="105:62"><call pos:start="105:17" pos:end="105:62"><name pos:start="105:17" pos:end="105:33">ram_release_pages</name><argument_list pos:start="105:34" pos:end="105:62">(<argument pos:start="105:35" pos:end="105:46"><expr pos:start="105:35" pos:end="105:46"><name pos:start="105:35" pos:end="105:46"><name pos:start="105:35" pos:end="105:39">block</name><operator pos:start="105:40" pos:end="105:41">-&gt;</operator><name pos:start="105:42" pos:end="105:46">idstr</name></name></expr></argument>, <argument pos:start="105:49" pos:end="105:54"><expr pos:start="105:49" pos:end="105:54"><name pos:start="105:49" pos:end="105:54">offset</name></expr></argument>, <argument pos:start="105:57" pos:end="105:61"><expr pos:start="105:57" pos:end="105:61"><name pos:start="105:57" pos:end="105:61">pages</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="123:9">else <block pos:start="109:16" pos:end="123:9">{<block_content pos:start="111:13" pos:end="121:13">

            <expr_stmt pos:start="111:13" pos:end="111:57"><expr pos:start="111:13" pos:end="111:56"><name pos:start="111:13" pos:end="111:17">pages</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <call pos:start="111:21" pos:end="111:56"><name pos:start="111:21" pos:end="111:34">save_zero_page</name><argument_list pos:start="111:35" pos:end="111:56">(<argument pos:start="111:36" pos:end="111:37"><expr pos:start="111:36" pos:end="111:37"><name pos:start="111:36" pos:end="111:37">rs</name></expr></argument>, <argument pos:start="111:40" pos:end="111:44"><expr pos:start="111:40" pos:end="111:44"><name pos:start="111:40" pos:end="111:44">block</name></expr></argument>, <argument pos:start="111:47" pos:end="111:52"><expr pos:start="111:47" pos:end="111:52"><name pos:start="111:47" pos:end="111:52">offset</name></expr></argument>, <argument pos:start="111:55" pos:end="111:55"><expr pos:start="111:55" pos:end="111:55"><name pos:start="111:55" pos:end="111:55">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="121:13"><if pos:start="113:13" pos:end="117:13">if <condition pos:start="113:16" pos:end="113:28">(<expr pos:start="113:17" pos:end="113:27"><name pos:start="113:17" pos:end="113:21">pages</name> <operator pos:start="113:23" pos:end="113:24">==</operator> <operator pos:start="113:26" pos:end="113:26">-</operator><literal type="number" pos:start="113:27" pos:end="113:27">1</literal></expr>)</condition> <block pos:start="113:30" pos:end="117:13">{<block_content pos:start="115:17" pos:end="115:75">

                <expr_stmt pos:start="115:17" pos:end="115:75"><expr pos:start="115:17" pos:end="115:74"><name pos:start="115:17" pos:end="115:21">pages</name> <operator pos:start="115:23" pos:end="115:23">=</operator> <call pos:start="115:25" pos:end="115:74"><name pos:start="115:25" pos:end="115:55">compress_page_with_multi_thread</name><argument_list pos:start="115:56" pos:end="115:74">(<argument pos:start="115:57" pos:end="115:58"><expr pos:start="115:57" pos:end="115:58"><name pos:start="115:57" pos:end="115:58">rs</name></expr></argument>, <argument pos:start="115:61" pos:end="115:65"><expr pos:start="115:61" pos:end="115:65"><name pos:start="115:61" pos:end="115:65">block</name></expr></argument>, <argument pos:start="115:68" pos:end="115:73"><expr pos:start="115:68" pos:end="115:73"><name pos:start="115:68" pos:end="115:73">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="117:15" pos:end="121:13">else <block pos:start="117:20" pos:end="121:13">{<block_content pos:start="119:17" pos:end="119:63">

                <expr_stmt pos:start="119:17" pos:end="119:63"><expr pos:start="119:17" pos:end="119:62"><call pos:start="119:17" pos:end="119:62"><name pos:start="119:17" pos:end="119:33">ram_release_pages</name><argument_list pos:start="119:34" pos:end="119:62">(<argument pos:start="119:35" pos:end="119:46"><expr pos:start="119:35" pos:end="119:46"><name pos:start="119:35" pos:end="119:46"><name pos:start="119:35" pos:end="119:39">block</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:46">idstr</name></name></expr></argument>, <argument pos:start="119:49" pos:end="119:54"><expr pos:start="119:49" pos:end="119:54"><name pos:start="119:49" pos:end="119:54">offset</name></expr></argument>, <argument pos:start="119:57" pos:end="119:61"><expr pos:start="119:57" pos:end="119:61"><name pos:start="119:57" pos:end="119:61">pages</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="129:5" pos:end="129:17">return <expr pos:start="129:12" pos:end="129:16"><name pos:start="129:12" pos:end="129:16">pages</name></expr>;</return>

</block_content>}</block></function>
</unit>
