<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18913.c" pos:tabs="8"><function pos:start="1:1" pos:end="277:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bdrv_open_common</name><parameter_list pos:start="1:28" pos:end="3:62">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:72"><decl pos:start="1:51" pos:end="1:72"><type pos:start="1:51" pos:end="1:72"><name pos:start="1:51" pos:end="1:66">BlockDriverState</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">file</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:9">QDict</name> <modifier pos:start="3:11" pos:end="3:11">*</modifier></type><name pos:start="3:12" pos:end="3:18">options</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:29"><decl pos:start="3:21" pos:end="3:29"><type pos:start="3:21" pos:end="3:29"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:29">flags</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:47"><decl pos:start="3:32" pos:end="3:47"><type pos:start="3:32" pos:end="3:47"><name pos:start="3:32" pos:end="3:42">BlockDriver</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">drv</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:54">Error</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier><modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="277:1">{<block_content pos:start="7:5" pos:end="275:15">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">open_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:25">node_name</name> <init pos:start="11:27" pos:end="11:32">= <expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:20">local_err</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><call pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:23">(<argument pos:start="17:12" pos:end="17:22"><expr pos:start="17:12" pos:end="17:22"><name pos:start="17:12" pos:end="17:14">drv</name> <operator pos:start="17:16" pos:end="17:17">!=</operator> <name pos:start="17:19" pos:end="17:22">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><call pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:28">(<argument pos:start="19:12" pos:end="19:27"><expr pos:start="19:12" pos:end="19:27"><name pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:13">bs</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:19">file</name></name> <operator pos:start="19:21" pos:end="19:22">==</operator> <name pos:start="19:24" pos:end="19:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><call pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:53">(<argument pos:start="21:12" pos:end="21:52"><expr pos:start="21:12" pos:end="21:52"><name pos:start="21:12" pos:end="21:18">options</name> <operator pos:start="21:20" pos:end="21:21">!=</operator> <name pos:start="21:23" pos:end="21:26">NULL</name> <operator pos:start="21:28" pos:end="21:29">&amp;&amp;</operator> <name pos:start="21:31" pos:end="21:41"><name pos:start="21:31" pos:end="21:32">bs</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:41">options</name></name> <operator pos:start="21:43" pos:end="21:44">!=</operator> <name pos:start="21:46" pos:end="21:52">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:12">file</name> <operator pos:start="25:14" pos:end="25:15">!=</operator> <name pos:start="25:17" pos:end="25:20">NULL</name></expr>)</condition> <block pos:start="25:23" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:34">

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:16">filename</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:33"><name pos:start="27:20" pos:end="27:23">file</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:33">filename</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:58">

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:16">filename</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:57"><name pos:start="31:20" pos:end="31:36">qdict_get_try_str</name><argument_list pos:start="31:37" pos:end="31:57">(<argument pos:start="31:38" pos:end="31:44"><expr pos:start="31:38" pos:end="31:44"><name pos:start="31:38" pos:end="31:44">options</name></expr></argument>, <argument pos:start="31:47" pos:end="31:56"><expr pos:start="31:47" pos:end="31:56"><literal type="string" pos:start="31:47" pos:end="31:56">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:46">(<expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:11">drv</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:32">bdrv_needs_filename</name></name> <operator pos:start="37:34" pos:end="37:35">&amp;&amp;</operator> <operator pos:start="37:37" pos:end="37:37">!</operator><name pos:start="37:38" pos:end="37:45">filename</name></expr>)</condition> <block pos:start="37:48" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:23">

        <expr_stmt pos:start="39:9" pos:end="41:37"><expr pos:start="39:9" pos:end="41:36"><call pos:start="39:9" pos:end="41:36"><name pos:start="39:9" pos:end="39:18">error_setg</name><argument_list pos:start="39:19" pos:end="41:36">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">errp</name></expr></argument>, <argument pos:start="39:26" pos:end="39:69"><expr pos:start="39:26" pos:end="39:69"><literal type="string" pos:start="39:26" pos:end="39:69">"The '%s' block driver requires a file name"</literal></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:35"><expr pos:start="41:20" pos:end="41:35"><name pos:start="41:20" pos:end="41:35"><name pos:start="41:20" pos:end="41:22">drv</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:35">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:23">return <expr pos:start="43:16" pos:end="43:22"><operator pos:start="43:16" pos:end="43:16">-</operator><name pos:start="43:17" pos:end="43:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:72"><expr pos:start="49:5" pos:end="49:71"><call pos:start="49:5" pos:end="49:71"><name pos:start="49:5" pos:end="49:26">trace_bdrv_open_common</name><argument_list pos:start="49:27" pos:end="49:71">(<argument pos:start="49:28" pos:end="49:29"><expr pos:start="49:28" pos:end="49:29"><name pos:start="49:28" pos:end="49:29">bs</name></expr></argument>, <argument pos:start="49:32" pos:end="49:45"><expr pos:start="49:32" pos:end="49:45"><ternary pos:start="49:32" pos:end="49:45"><condition pos:start="49:32" pos:end="49:41"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:39">filename</name></expr> ?</condition><then/><else pos:start="49:42" pos:end="49:45">: <expr pos:start="49:44" pos:end="49:45"><literal type="string" pos:start="49:44" pos:end="49:45">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="49:48" pos:end="49:52"><expr pos:start="49:48" pos:end="49:52"><name pos:start="49:48" pos:end="49:52">flags</name></expr></argument>, <argument pos:start="49:55" pos:end="49:70"><expr pos:start="49:55" pos:end="49:70"><name pos:start="49:55" pos:end="49:70"><name pos:start="49:55" pos:end="49:57">drv</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:70">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:56"><expr pos:start="53:5" pos:end="53:55"><name pos:start="53:5" pos:end="53:13">node_name</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:55"><name pos:start="53:17" pos:end="53:33">qdict_get_try_str</name><argument_list pos:start="53:34" pos:end="53:55">(<argument pos:start="53:35" pos:end="53:41"><expr pos:start="53:35" pos:end="53:41"><name pos:start="53:35" pos:end="53:41">options</name></expr></argument>, <argument pos:start="53:44" pos:end="53:54"><expr pos:start="53:44" pos:end="53:54"><literal type="string" pos:start="53:44" pos:end="53:54">"node-name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:53"><expr pos:start="55:5" pos:end="55:52"><call pos:start="55:5" pos:end="55:52"><name pos:start="55:5" pos:end="55:25">bdrv_assign_node_name</name><argument_list pos:start="55:26" pos:end="55:52">(<argument pos:start="55:27" pos:end="55:28"><expr pos:start="55:27" pos:end="55:28"><name pos:start="55:27" pos:end="55:28">bs</name></expr></argument>, <argument pos:start="55:31" pos:end="55:39"><expr pos:start="55:31" pos:end="55:39"><name pos:start="55:31" pos:end="55:39">node_name</name></expr></argument>, <argument pos:start="55:42" pos:end="55:51"><expr pos:start="55:42" pos:end="55:51"><operator pos:start="55:42" pos:end="55:42">&amp;</operator><name pos:start="55:43" pos:end="55:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:18">(<expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:17">local_err</name></expr>)</condition> <block pos:start="57:20" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:23">

        <expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><call pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:23">error_propagate</name><argument_list pos:start="59:24" pos:end="59:40">(<argument pos:start="59:25" pos:end="59:28"><expr pos:start="59:25" pos:end="59:28"><name pos:start="59:25" pos:end="59:28">errp</name></expr></argument>, <argument pos:start="59:31" pos:end="59:39"><expr pos:start="59:31" pos:end="59:39"><name pos:start="59:31" pos:end="59:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:23">return <expr pos:start="61:16" pos:end="61:22"><operator pos:start="61:16" pos:end="61:16">-</operator><name pos:start="61:17" pos:end="61:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><call pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:13">qdict_del</name><argument_list pos:start="65:14" pos:end="65:35">(<argument pos:start="65:15" pos:end="65:21"><expr pos:start="65:15" pos:end="65:21"><name pos:start="65:15" pos:end="65:21">options</name></expr></argument>, <argument pos:start="65:24" pos:end="65:34"><expr pos:start="65:24" pos:end="65:34"><literal type="string" pos:start="65:24" pos:end="65:34">"node-name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="73:33">/* bdrv_open() with directly using a protocol as drv. This layer is already

     * opened, so assign it to bs (while file becomes a closed BlockDriverState)

     * and return immediately. */</comment>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:44">(<expr pos:start="75:9" pos:end="75:43"><name pos:start="75:9" pos:end="75:12">file</name> <operator pos:start="75:14" pos:end="75:15">!=</operator> <name pos:start="75:17" pos:end="75:20">NULL</name> <operator pos:start="75:22" pos:end="75:23">&amp;&amp;</operator> <name pos:start="75:25" pos:end="75:43"><name pos:start="75:25" pos:end="75:27">drv</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:43">bdrv_file_open</name></name></expr>)</condition> <block pos:start="75:46" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:17">

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><call pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:17">bdrv_swap</name><argument_list pos:start="77:18" pos:end="77:27">(<argument pos:start="77:19" pos:end="77:22"><expr pos:start="77:19" pos:end="77:22"><name pos:start="77:19" pos:end="77:22">file</name></expr></argument>, <argument pos:start="77:25" pos:end="77:26"><expr pos:start="77:25" pos:end="77:26"><name pos:start="77:25" pos:end="77:26">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:17">return <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:27"><expr pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:6">bs</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:18">open_flags</name></name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:26">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:31"><expr pos:start="87:5" pos:end="87:30"><name pos:start="87:5" pos:end="87:24"><name pos:start="87:5" pos:end="87:6">bs</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:24">guest_block_size</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <literal type="number" pos:start="87:28" pos:end="87:30">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:32"><expr pos:start="89:5" pos:end="89:31"><name pos:start="89:5" pos:end="89:25"><name pos:start="89:5" pos:end="89:6">bs</name><operator pos:start="89:7" pos:end="89:8">-&gt;</operator><name pos:start="89:9" pos:end="89:25">request_alignment</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <literal type="number" pos:start="89:29" pos:end="89:31">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:31"><expr pos:start="91:5" pos:end="91:30"><name pos:start="91:5" pos:end="91:23"><name pos:start="91:5" pos:end="91:6">bs</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:23">zero_beyond_eof</name></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <name pos:start="91:27" pos:end="91:30">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:44"><expr pos:start="93:5" pos:end="93:43"><name pos:start="93:5" pos:end="93:14">open_flags</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <call pos:start="93:18" pos:end="93:43"><name pos:start="93:18" pos:end="93:32">bdrv_open_flags</name><argument_list pos:start="93:33" pos:end="93:43">(<argument pos:start="93:34" pos:end="93:35"><expr pos:start="93:34" pos:end="93:35"><name pos:start="93:34" pos:end="93:35">bs</name></expr></argument>, <argument pos:start="93:38" pos:end="93:42"><expr pos:start="93:38" pos:end="93:42"><name pos:start="93:38" pos:end="93:42">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:48"><expr pos:start="95:5" pos:end="95:47"><name pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:6">bs</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:17">read_only</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <operator pos:start="95:21" pos:end="95:21">!</operator><operator pos:start="95:22" pos:end="95:22">(</operator><name pos:start="95:23" pos:end="95:32">open_flags</name> <operator pos:start="95:34" pos:end="95:34">&amp;</operator> <name pos:start="95:36" pos:end="95:46">BDRV_O_RDWR</name><operator pos:start="95:47" pos:end="95:47">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="113:5"><if pos:start="99:5" pos:end="113:5">if <condition pos:start="99:8" pos:end="99:71">(<expr pos:start="99:9" pos:end="99:70"><name pos:start="99:9" pos:end="99:26">use_bdrv_whitelist</name> <operator pos:start="99:28" pos:end="99:29">&amp;&amp;</operator> <operator pos:start="99:31" pos:end="99:31">!</operator><call pos:start="99:32" pos:end="99:70"><name pos:start="99:32" pos:end="99:50">bdrv_is_whitelisted</name><argument_list pos:start="99:51" pos:end="99:70">(<argument pos:start="99:52" pos:end="99:54"><expr pos:start="99:52" pos:end="99:54"><name pos:start="99:52" pos:end="99:54">drv</name></expr></argument>, <argument pos:start="99:57" pos:end="99:69"><expr pos:start="99:57" pos:end="99:69"><name pos:start="99:57" pos:end="99:69"><name pos:start="99:57" pos:end="99:58">bs</name><operator pos:start="99:59" pos:end="99:60">-&gt;</operator><name pos:start="99:61" pos:end="99:69">read_only</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:73" pos:end="113:5">{<block_content pos:start="101:9" pos:end="111:24">

        <expr_stmt pos:start="101:9" pos:end="109:37"><expr pos:start="101:9" pos:end="109:36"><call pos:start="101:9" pos:end="109:36"><name pos:start="101:9" pos:end="101:18">error_setg</name><argument_list pos:start="101:19" pos:end="109:36">(<argument pos:start="101:20" pos:end="101:23"><expr pos:start="101:20" pos:end="101:23"><name pos:start="101:20" pos:end="101:23">errp</name></expr></argument>,

                   <argument pos:start="103:20" pos:end="107:58"><expr pos:start="103:20" pos:end="107:58"><ternary pos:start="103:20" pos:end="107:58"><condition pos:start="103:20" pos:end="105:25"><expr pos:start="103:20" pos:end="103:67"><operator pos:start="103:20" pos:end="103:20">!</operator><name pos:start="103:21" pos:end="103:33"><name pos:start="103:21" pos:end="103:22">bs</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:33">read_only</name></name> <operator pos:start="103:35" pos:end="103:36">&amp;&amp;</operator> <call pos:start="103:38" pos:end="103:67"><name pos:start="103:38" pos:end="103:56">bdrv_is_whitelisted</name><argument_list pos:start="103:57" pos:end="103:67">(<argument pos:start="103:58" pos:end="103:60"><expr pos:start="103:58" pos:end="103:60"><name pos:start="103:58" pos:end="103:60">drv</name></expr></argument>, <argument pos:start="103:63" pos:end="103:66"><expr pos:start="103:63" pos:end="103:66"><name pos:start="103:63" pos:end="103:66">true</name></expr></argument>)</argument_list></call></expr>

                        ?</condition><then pos:start="105:27" pos:end="105:78"> <expr pos:start="105:27" pos:end="105:78"><literal type="string" pos:start="105:27" pos:end="105:78">"Driver '%s' can only be used for read-only devices"</literal></expr>

                        </then><else pos:start="107:25" pos:end="107:58">: <expr pos:start="107:27" pos:end="107:58"><literal type="string" pos:start="107:27" pos:end="107:58">"Driver '%s' is not whitelisted"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="109:20" pos:end="109:35"><expr pos:start="109:20" pos:end="109:35"><name pos:start="109:20" pos:end="109:35"><name pos:start="109:20" pos:end="109:22">drv</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:35">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:24">return <expr pos:start="111:16" pos:end="111:23"><operator pos:start="111:16" pos:end="111:16">-</operator><name pos:start="111:17" pos:end="111:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:34"><expr pos:start="117:5" pos:end="117:33"><call pos:start="117:5" pos:end="117:33"><name pos:start="117:5" pos:end="117:10">assert</name><argument_list pos:start="117:11" pos:end="117:33">(<argument pos:start="117:12" pos:end="117:32"><expr pos:start="117:12" pos:end="117:32"><name pos:start="117:12" pos:end="117:27"><name pos:start="117:12" pos:end="117:13">bs</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:27">copy_on_read</name></name> <operator pos:start="117:29" pos:end="117:30">==</operator> <literal type="number" pos:start="117:32" pos:end="117:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:36" pos:end="117:79">/* bdrv_new() and bdrv_close() make it so */</comment>

    <if_stmt pos:start="119:5" pos:end="133:5"><if pos:start="119:5" pos:end="133:5">if <condition pos:start="119:8" pos:end="119:36">(<expr pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:13">flags</name> <operator pos:start="119:15" pos:end="119:15">&amp;</operator> <name pos:start="119:17" pos:end="119:35">BDRV_O_COPY_ON_READ</name></expr>)</condition> <block pos:start="119:38" pos:end="133:5">{<block_content pos:start="121:9" pos:end="131:9">

        <if_stmt pos:start="121:9" pos:end="131:9"><if pos:start="121:9" pos:end="125:9">if <condition pos:start="121:12" pos:end="121:27">(<expr pos:start="121:13" pos:end="121:26"><operator pos:start="121:13" pos:end="121:13">!</operator><name pos:start="121:14" pos:end="121:26"><name pos:start="121:14" pos:end="121:15">bs</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:26">read_only</name></name></expr>)</condition> <block pos:start="121:29" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:41">

            <expr_stmt pos:start="123:13" pos:end="123:41"><expr pos:start="123:13" pos:end="123:40"><call pos:start="123:13" pos:end="123:40"><name pos:start="123:13" pos:end="123:36">bdrv_enable_copy_on_read</name><argument_list pos:start="123:37" pos:end="123:40">(<argument pos:start="123:38" pos:end="123:39"><expr pos:start="123:38" pos:end="123:39"><name pos:start="123:38" pos:end="123:39">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="125:11" pos:end="131:9">else <block pos:start="125:16" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:27">

            <expr_stmt pos:start="127:13" pos:end="127:75"><expr pos:start="127:13" pos:end="127:74"><call pos:start="127:13" pos:end="127:74"><name pos:start="127:13" pos:end="127:22">error_setg</name><argument_list pos:start="127:23" pos:end="127:74">(<argument pos:start="127:24" pos:end="127:27"><expr pos:start="127:24" pos:end="127:27"><name pos:start="127:24" pos:end="127:27">errp</name></expr></argument>, <argument pos:start="127:30" pos:end="127:73"><expr pos:start="127:30" pos:end="127:73"><literal type="string" pos:start="127:30" pos:end="127:73">"Can't use copy-on-read on read-only device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="129:13" pos:end="129:27">return <expr pos:start="129:20" pos:end="129:26"><operator pos:start="129:20" pos:end="129:20">-</operator><name pos:start="129:21" pos:end="129:26">EINVAL</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="145:5"><if pos:start="137:5" pos:end="141:5">if <condition pos:start="137:8" pos:end="137:25">(<expr pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:16">filename</name> <operator pos:start="137:18" pos:end="137:19">!=</operator> <name pos:start="137:21" pos:end="137:24">NULL</name></expr>)</condition> <block pos:start="137:27" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:62">

        <expr_stmt pos:start="139:9" pos:end="139:62"><expr pos:start="139:9" pos:end="139:61"><call pos:start="139:9" pos:end="139:61"><name pos:start="139:9" pos:end="139:15">pstrcpy</name><argument_list pos:start="139:16" pos:end="139:61">(<argument pos:start="139:17" pos:end="139:28"><expr pos:start="139:17" pos:end="139:28"><name pos:start="139:17" pos:end="139:28"><name pos:start="139:17" pos:end="139:18">bs</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:28">filename</name></name></expr></argument>, <argument pos:start="139:31" pos:end="139:50"><expr pos:start="139:31" pos:end="139:50"><sizeof pos:start="139:31" pos:end="139:50">sizeof<argument_list pos:start="139:37" pos:end="139:50">(<argument pos:start="139:38" pos:end="139:49"><expr pos:start="139:38" pos:end="139:49"><name pos:start="139:38" pos:end="139:49"><name pos:start="139:38" pos:end="139:39">bs</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:49">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="139:53" pos:end="139:60"><expr pos:start="139:53" pos:end="139:60"><name pos:start="139:53" pos:end="139:60">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="141:7" pos:end="145:5">else <block pos:start="141:12" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:31">

        <expr_stmt pos:start="143:9" pos:end="143:31"><expr pos:start="143:9" pos:end="143:30"><name pos:start="143:9" pos:end="143:23"><name pos:start="143:9" pos:end="143:10">bs</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:20">filename</name><index pos:start="143:21" pos:end="143:23">[<expr pos:start="143:22" pos:end="143:22"><literal type="number" pos:start="143:22" pos:end="143:22">0</literal></expr>]</index></name> <operator pos:start="143:25" pos:end="143:25">=</operator> <literal type="char" pos:start="143:27" pos:end="143:30">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:74"><expr pos:start="147:5" pos:end="147:73"><call pos:start="147:5" pos:end="147:73"><name pos:start="147:5" pos:end="147:11">pstrcpy</name><argument_list pos:start="147:12" pos:end="147:73">(<argument pos:start="147:13" pos:end="147:30"><expr pos:start="147:13" pos:end="147:30"><name pos:start="147:13" pos:end="147:30"><name pos:start="147:13" pos:end="147:14">bs</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:30">exact_filename</name></name></expr></argument>, <argument pos:start="147:33" pos:end="147:58"><expr pos:start="147:33" pos:end="147:58"><sizeof pos:start="147:33" pos:end="147:58">sizeof<argument_list pos:start="147:39" pos:end="147:58">(<argument pos:start="147:40" pos:end="147:57"><expr pos:start="147:40" pos:end="147:57"><name pos:start="147:40" pos:end="147:57"><name pos:start="147:40" pos:end="147:41">bs</name><operator pos:start="147:42" pos:end="147:43">-&gt;</operator><name pos:start="147:44" pos:end="147:57">exact_filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="147:61" pos:end="147:72"><expr pos:start="147:61" pos:end="147:72"><name pos:start="147:61" pos:end="147:72"><name pos:start="147:61" pos:end="147:62">bs</name><operator pos:start="147:63" pos:end="147:64">-&gt;</operator><name pos:start="147:65" pos:end="147:72">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:18"><expr pos:start="151:5" pos:end="151:17"><name pos:start="151:5" pos:end="151:11"><name pos:start="151:5" pos:end="151:6">bs</name><operator pos:start="151:7" pos:end="151:8">-&gt;</operator><name pos:start="151:9" pos:end="151:11">drv</name></name> <operator pos:start="151:13" pos:end="151:13">=</operator> <name pos:start="151:15" pos:end="151:17">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:47"><expr pos:start="153:5" pos:end="153:46"><name pos:start="153:5" pos:end="153:14"><name pos:start="153:5" pos:end="153:6">bs</name><operator pos:start="153:7" pos:end="153:8">-&gt;</operator><name pos:start="153:9" pos:end="153:14">opaque</name></name> <operator pos:start="153:16" pos:end="153:16">=</operator> <call pos:start="153:18" pos:end="153:46"><name pos:start="153:18" pos:end="153:26">g_malloc0</name><argument_list pos:start="153:27" pos:end="153:46">(<argument pos:start="153:28" pos:end="153:45"><expr pos:start="153:28" pos:end="153:45"><name pos:start="153:28" pos:end="153:45"><name pos:start="153:28" pos:end="153:30">drv</name><operator pos:start="153:31" pos:end="153:32">-&gt;</operator><name pos:start="153:33" pos:end="153:45">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:57"><expr pos:start="157:5" pos:end="157:56"><name pos:start="157:5" pos:end="157:26"><name pos:start="157:5" pos:end="157:6">bs</name><operator pos:start="157:7" pos:end="157:8">-&gt;</operator><name pos:start="157:9" pos:end="157:26">enable_write_cache</name></name> <operator pos:start="157:28" pos:end="157:28">=</operator> <operator pos:start="157:30" pos:end="157:30">!</operator><operator pos:start="157:31" pos:end="157:31">!</operator><operator pos:start="157:32" pos:end="157:32">(</operator><name pos:start="157:33" pos:end="157:37">flags</name> <operator pos:start="157:39" pos:end="157:39">&amp;</operator> <name pos:start="157:41" pos:end="157:55">BDRV_O_CACHE_WB</name><operator pos:start="157:56" pos:end="157:56">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:61">/* Open the image, either directly or using a protocol */</comment>

    <if_stmt pos:start="163:5" pos:end="189:5"><if pos:start="163:5" pos:end="171:5">if <condition pos:start="163:8" pos:end="163:28">(<expr pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:11">drv</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:27">bdrv_file_open</name></name></expr>)</condition> <block pos:start="163:30" pos:end="171:5">{<block_content pos:start="165:9" pos:end="169:71">

        <expr_stmt pos:start="165:9" pos:end="165:29"><expr pos:start="165:9" pos:end="165:28"><call pos:start="165:9" pos:end="165:28"><name pos:start="165:9" pos:end="165:14">assert</name><argument_list pos:start="165:15" pos:end="165:28">(<argument pos:start="165:16" pos:end="165:27"><expr pos:start="165:16" pos:end="165:27"><name pos:start="165:16" pos:end="165:19">file</name> <operator pos:start="165:21" pos:end="165:22">==</operator> <name pos:start="165:24" pos:end="165:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:62"><expr pos:start="167:9" pos:end="167:61"><call pos:start="167:9" pos:end="167:61"><name pos:start="167:9" pos:end="167:14">assert</name><argument_list pos:start="167:15" pos:end="167:61">(<argument pos:start="167:16" pos:end="167:60"><expr pos:start="167:16" pos:end="167:60"><operator pos:start="167:16" pos:end="167:16">!</operator><name pos:start="167:17" pos:end="167:40"><name pos:start="167:17" pos:end="167:19">drv</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:40">bdrv_needs_filename</name></name> <operator pos:start="167:42" pos:end="167:43">||</operator> <name pos:start="167:45" pos:end="167:52">filename</name> <operator pos:start="167:54" pos:end="167:55">!=</operator> <name pos:start="167:57" pos:end="167:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:71"><expr pos:start="169:9" pos:end="169:70"><name pos:start="169:9" pos:end="169:11">ret</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <call pos:start="169:15" pos:end="169:70"><name pos:start="169:15" pos:end="169:33"><name pos:start="169:15" pos:end="169:17">drv</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:33">bdrv_file_open</name></name><argument_list pos:start="169:34" pos:end="169:70">(<argument pos:start="169:35" pos:end="169:36"><expr pos:start="169:35" pos:end="169:36"><name pos:start="169:35" pos:end="169:36">bs</name></expr></argument>, <argument pos:start="169:39" pos:end="169:45"><expr pos:start="169:39" pos:end="169:45"><name pos:start="169:39" pos:end="169:45">options</name></expr></argument>, <argument pos:start="169:48" pos:end="169:57"><expr pos:start="169:48" pos:end="169:57"><name pos:start="169:48" pos:end="169:57">open_flags</name></expr></argument>, <argument pos:start="169:60" pos:end="169:69"><expr pos:start="169:60" pos:end="169:69"><operator pos:start="169:60" pos:end="169:60">&amp;</operator><name pos:start="169:61" pos:end="169:69">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="171:7" pos:end="189:5">else <block pos:start="171:12" pos:end="189:5">{<block_content pos:start="173:9" pos:end="187:66">

        <if_stmt pos:start="173:9" pos:end="183:9"><if pos:start="173:9" pos:end="183:9">if <condition pos:start="173:12" pos:end="173:25">(<expr pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:16">file</name> <operator pos:start="173:18" pos:end="173:19">==</operator> <name pos:start="173:21" pos:end="173:24">NULL</name></expr>)</condition> <block pos:start="173:27" pos:end="183:9">{<block_content pos:start="175:13" pos:end="181:31">

            <expr_stmt pos:start="175:13" pos:end="177:59"><expr pos:start="175:13" pos:end="177:58"><call pos:start="175:13" pos:end="177:58"><name pos:start="175:13" pos:end="175:22">error_setg</name><argument_list pos:start="175:23" pos:end="177:58">(<argument pos:start="175:24" pos:end="175:27"><expr pos:start="175:24" pos:end="175:27"><name pos:start="175:24" pos:end="175:27">errp</name></expr></argument>, <argument pos:start="175:30" pos:end="177:39"><expr pos:start="175:30" pos:end="177:39"><literal type="string" pos:start="175:30" pos:end="175:72">"Can't use '%s' as a block driver for the "</literal>

                       <literal type="string" pos:start="177:24" pos:end="177:39">"protocol level"</literal></expr></argument>, <argument pos:start="177:42" pos:end="177:57"><expr pos:start="177:42" pos:end="177:57"><name pos:start="177:42" pos:end="177:57"><name pos:start="177:42" pos:end="177:44">drv</name><operator pos:start="177:45" pos:end="177:46">-&gt;</operator><name pos:start="177:47" pos:end="177:57">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:26"><expr pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:15">ret</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <operator pos:start="179:19" pos:end="179:19">-</operator><name pos:start="179:20" pos:end="179:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="181:13" pos:end="181:31">goto <name pos:start="181:18" pos:end="181:30">free_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:24"><expr pos:start="185:9" pos:end="185:23"><name pos:start="185:9" pos:end="185:16"><name pos:start="185:9" pos:end="185:10">bs</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:16">file</name></name> <operator pos:start="185:18" pos:end="185:18">=</operator> <name pos:start="185:20" pos:end="185:23">file</name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:66"><expr pos:start="187:9" pos:end="187:65"><name pos:start="187:9" pos:end="187:11">ret</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <call pos:start="187:15" pos:end="187:65"><name pos:start="187:15" pos:end="187:28"><name pos:start="187:15" pos:end="187:17">drv</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:28">bdrv_open</name></name><argument_list pos:start="187:29" pos:end="187:65">(<argument pos:start="187:30" pos:end="187:31"><expr pos:start="187:30" pos:end="187:31"><name pos:start="187:30" pos:end="187:31">bs</name></expr></argument>, <argument pos:start="187:34" pos:end="187:40"><expr pos:start="187:34" pos:end="187:40"><name pos:start="187:34" pos:end="187:40">options</name></expr></argument>, <argument pos:start="187:43" pos:end="187:52"><expr pos:start="187:43" pos:end="187:52"><name pos:start="187:43" pos:end="187:52">open_flags</name></expr></argument>, <argument pos:start="187:55" pos:end="187:64"><expr pos:start="187:55" pos:end="187:64"><operator pos:start="187:55" pos:end="187:55">&amp;</operator><name pos:start="187:56" pos:end="187:64">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="193:5" pos:end="211:5"><if pos:start="193:5" pos:end="211:5">if <condition pos:start="193:8" pos:end="193:16">(<expr pos:start="193:9" pos:end="193:15"><name pos:start="193:9" pos:end="193:11">ret</name> <operator pos:start="193:13" pos:end="193:13">&lt;</operator> <literal type="number" pos:start="193:15" pos:end="193:15">0</literal></expr>)</condition> <block pos:start="193:18" pos:end="211:5">{<block_content pos:start="195:9" pos:end="209:27">

        <if_stmt pos:start="195:9" pos:end="207:9"><if pos:start="195:9" pos:end="199:9">if <condition pos:start="195:12" pos:end="195:22">(<expr pos:start="195:13" pos:end="195:21"><name pos:start="195:13" pos:end="195:21">local_err</name></expr>)</condition> <block pos:start="195:24" pos:end="199:9">{<block_content pos:start="197:13" pos:end="197:45">

            <expr_stmt pos:start="197:13" pos:end="197:45"><expr pos:start="197:13" pos:end="197:44"><call pos:start="197:13" pos:end="197:44"><name pos:start="197:13" pos:end="197:27">error_propagate</name><argument_list pos:start="197:28" pos:end="197:44">(<argument pos:start="197:29" pos:end="197:32"><expr pos:start="197:29" pos:end="197:32"><name pos:start="197:29" pos:end="197:32">errp</name></expr></argument>, <argument pos:start="197:35" pos:end="197:43"><expr pos:start="197:35" pos:end="197:43"><name pos:start="197:35" pos:end="197:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="199:11" pos:end="203:9">else if <condition pos:start="199:19" pos:end="199:35">(<expr pos:start="199:20" pos:end="199:34"><name pos:start="199:20" pos:end="199:34"><name pos:start="199:20" pos:end="199:21">bs</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:31">filename</name><index pos:start="199:32" pos:end="199:34">[<expr pos:start="199:33" pos:end="199:33"><literal type="number" pos:start="199:33" pos:end="199:33">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="199:37" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:78">

            <expr_stmt pos:start="201:13" pos:end="201:78"><expr pos:start="201:13" pos:end="201:77"><call pos:start="201:13" pos:end="201:77"><name pos:start="201:13" pos:end="201:28">error_setg_errno</name><argument_list pos:start="201:29" pos:end="201:77">(<argument pos:start="201:30" pos:end="201:33"><expr pos:start="201:30" pos:end="201:33"><name pos:start="201:30" pos:end="201:33">errp</name></expr></argument>, <argument pos:start="201:36" pos:end="201:39"><expr pos:start="201:36" pos:end="201:39"><operator pos:start="201:36" pos:end="201:36">-</operator><name pos:start="201:37" pos:end="201:39">ret</name></expr></argument>, <argument pos:start="201:42" pos:end="201:62"><expr pos:start="201:42" pos:end="201:62"><literal type="string" pos:start="201:42" pos:end="201:62">"Could not open '%s'"</literal></expr></argument>, <argument pos:start="201:65" pos:end="201:76"><expr pos:start="201:65" pos:end="201:76"><name pos:start="201:65" pos:end="201:76"><name pos:start="201:65" pos:end="201:66">bs</name><operator pos:start="201:67" pos:end="201:68">-&gt;</operator><name pos:start="201:69" pos:end="201:76">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="207:9">else <block pos:start="203:16" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:65">

            <expr_stmt pos:start="205:13" pos:end="205:65"><expr pos:start="205:13" pos:end="205:64"><call pos:start="205:13" pos:end="205:64"><name pos:start="205:13" pos:end="205:28">error_setg_errno</name><argument_list pos:start="205:29" pos:end="205:64">(<argument pos:start="205:30" pos:end="205:33"><expr pos:start="205:30" pos:end="205:33"><name pos:start="205:30" pos:end="205:33">errp</name></expr></argument>, <argument pos:start="205:36" pos:end="205:39"><expr pos:start="205:36" pos:end="205:39"><operator pos:start="205:36" pos:end="205:36">-</operator><name pos:start="205:37" pos:end="205:39">ret</name></expr></argument>, <argument pos:start="205:42" pos:end="205:63"><expr pos:start="205:42" pos:end="205:63"><literal type="string" pos:start="205:42" pos:end="205:63">"Could not open image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <goto pos:start="209:9" pos:end="209:27">goto <name pos:start="209:14" pos:end="209:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="215:5" pos:end="225:5"><if pos:start="215:5" pos:end="225:5">if <condition pos:start="215:8" pos:end="215:22">(<expr pos:start="215:9" pos:end="215:21"><name pos:start="215:9" pos:end="215:21"><name pos:start="215:9" pos:end="215:10">bs</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:21">encrypted</name></name></expr>)</condition> <block pos:start="215:24" pos:end="225:5">{<block_content pos:start="217:9" pos:end="223:50">

        <expr_stmt pos:start="217:9" pos:end="217:56"><expr pos:start="217:9" pos:end="217:55"><call pos:start="217:9" pos:end="217:55"><name pos:start="217:9" pos:end="217:20">error_report</name><argument_list pos:start="217:21" pos:end="217:55">(<argument pos:start="217:22" pos:end="217:54"><expr pos:start="217:22" pos:end="217:54"><literal type="string" pos:start="217:22" pos:end="217:54">"Encrypted images are deprecated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="223:50"><expr pos:start="219:9" pos:end="223:49"><call pos:start="219:9" pos:end="223:49"><name pos:start="219:9" pos:end="219:20">error_printf</name><argument_list pos:start="219:21" pos:end="223:49">(<argument pos:start="219:22" pos:end="223:48"><expr pos:start="219:22" pos:end="223:48"><literal type="string" pos:start="219:22" pos:end="219:78">"Support for them will be removed in a future release.\n"</literal>

                     <literal type="string" pos:start="221:22" pos:end="221:75">"You can use 'qemu-img convert' to convert your image"</literal>

                     <literal type="string" pos:start="223:22" pos:end="223:48">" to an unencrypted one.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:55"><expr pos:start="229:5" pos:end="229:54"><name pos:start="229:5" pos:end="229:7">ret</name> <operator pos:start="229:9" pos:end="229:9">=</operator> <call pos:start="229:11" pos:end="229:54"><name pos:start="229:11" pos:end="229:31">refresh_total_sectors</name><argument_list pos:start="229:32" pos:end="229:54">(<argument pos:start="229:33" pos:end="229:34"><expr pos:start="229:33" pos:end="229:34"><name pos:start="229:33" pos:end="229:34">bs</name></expr></argument>, <argument pos:start="229:37" pos:end="229:53"><expr pos:start="229:37" pos:end="229:53"><name pos:start="229:37" pos:end="229:53"><name pos:start="229:37" pos:end="229:38">bs</name><operator pos:start="229:39" pos:end="229:40">-&gt;</operator><name pos:start="229:41" pos:end="229:53">total_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="237:5"><if pos:start="231:5" pos:end="237:5">if <condition pos:start="231:8" pos:end="231:16">(<expr pos:start="231:9" pos:end="231:15"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">&lt;</operator> <literal type="number" pos:start="231:15" pos:end="231:15">0</literal></expr>)</condition> <block pos:start="231:18" pos:end="237:5">{<block_content pos:start="233:9" pos:end="235:27">

        <expr_stmt pos:start="233:9" pos:end="233:77"><expr pos:start="233:9" pos:end="233:76"><call pos:start="233:9" pos:end="233:76"><name pos:start="233:9" pos:end="233:24">error_setg_errno</name><argument_list pos:start="233:25" pos:end="233:76">(<argument pos:start="233:26" pos:end="233:29"><expr pos:start="233:26" pos:end="233:29"><name pos:start="233:26" pos:end="233:29">errp</name></expr></argument>, <argument pos:start="233:32" pos:end="233:35"><expr pos:start="233:32" pos:end="233:35"><operator pos:start="233:32" pos:end="233:32">-</operator><name pos:start="233:33" pos:end="233:35">ret</name></expr></argument>, <argument pos:start="233:38" pos:end="233:75"><expr pos:start="233:38" pos:end="233:75"><literal type="string" pos:start="233:38" pos:end="233:75">"Could not refresh total sector count"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="235:9" pos:end="235:27">goto <name pos:start="235:14" pos:end="235:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:40"><expr pos:start="241:5" pos:end="241:39"><call pos:start="241:5" pos:end="241:39"><name pos:start="241:5" pos:end="241:23">bdrv_refresh_limits</name><argument_list pos:start="241:24" pos:end="241:39">(<argument pos:start="241:25" pos:end="241:26"><expr pos:start="241:25" pos:end="241:26"><name pos:start="241:25" pos:end="241:26">bs</name></expr></argument>, <argument pos:start="241:29" pos:end="241:38"><expr pos:start="241:29" pos:end="241:38"><operator pos:start="241:29" pos:end="241:29">&amp;</operator><name pos:start="241:30" pos:end="241:38">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="243:5" pos:end="251:5"><if pos:start="243:5" pos:end="251:5">if <condition pos:start="243:8" pos:end="243:18">(<expr pos:start="243:9" pos:end="243:17"><name pos:start="243:9" pos:end="243:17">local_err</name></expr>)</condition> <block pos:start="243:20" pos:end="251:5">{<block_content pos:start="245:9" pos:end="249:27">

        <expr_stmt pos:start="245:9" pos:end="245:41"><expr pos:start="245:9" pos:end="245:40"><call pos:start="245:9" pos:end="245:40"><name pos:start="245:9" pos:end="245:23">error_propagate</name><argument_list pos:start="245:24" pos:end="245:40">(<argument pos:start="245:25" pos:end="245:28"><expr pos:start="245:25" pos:end="245:28"><name pos:start="245:25" pos:end="245:28">errp</name></expr></argument>, <argument pos:start="245:31" pos:end="245:39"><expr pos:start="245:31" pos:end="245:39"><name pos:start="245:31" pos:end="245:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:22"><expr pos:start="247:9" pos:end="247:21"><name pos:start="247:9" pos:end="247:11">ret</name> <operator pos:start="247:13" pos:end="247:13">=</operator> <operator pos:start="247:15" pos:end="247:15">-</operator><name pos:start="247:16" pos:end="247:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="249:9" pos:end="249:27">goto <name pos:start="249:14" pos:end="249:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="255:5" pos:end="255:40"><expr pos:start="255:5" pos:end="255:39"><call pos:start="255:5" pos:end="255:39"><name pos:start="255:5" pos:end="255:10">assert</name><argument_list pos:start="255:11" pos:end="255:39">(<argument pos:start="255:12" pos:end="255:38"><expr pos:start="255:12" pos:end="255:38"><call pos:start="255:12" pos:end="255:33"><name pos:start="255:12" pos:end="255:29">bdrv_opt_mem_align</name><argument_list pos:start="255:30" pos:end="255:33">(<argument pos:start="255:31" pos:end="255:32"><expr pos:start="255:31" pos:end="255:32"><name pos:start="255:31" pos:end="255:32">bs</name></expr></argument>)</argument_list></call> <operator pos:start="255:35" pos:end="255:36">!=</operator> <literal type="number" pos:start="255:38" pos:end="255:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:40"><expr pos:start="257:5" pos:end="257:39"><call pos:start="257:5" pos:end="257:39"><name pos:start="257:5" pos:end="257:10">assert</name><argument_list pos:start="257:11" pos:end="257:39">(<argument pos:start="257:12" pos:end="257:38"><expr pos:start="257:12" pos:end="257:38"><call pos:start="257:12" pos:end="257:33"><name pos:start="257:12" pos:end="257:29">bdrv_min_mem_align</name><argument_list pos:start="257:30" pos:end="257:33">(<argument pos:start="257:31" pos:end="257:32"><expr pos:start="257:31" pos:end="257:32"><name pos:start="257:31" pos:end="257:32">bs</name></expr></argument>)</argument_list></call> <operator pos:start="257:35" pos:end="257:36">!=</operator> <literal type="number" pos:start="257:38" pos:end="257:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:51"><expr pos:start="259:5" pos:end="259:50"><call pos:start="259:5" pos:end="259:50"><name pos:start="259:5" pos:end="259:10">assert</name><argument_list pos:start="259:11" pos:end="259:50">(<argument pos:start="259:12" pos:end="259:49"><expr pos:start="259:12" pos:end="259:49"><operator pos:start="259:12" pos:end="259:12">(</operator><name pos:start="259:13" pos:end="259:33"><name pos:start="259:13" pos:end="259:14">bs</name><operator pos:start="259:15" pos:end="259:16">-&gt;</operator><name pos:start="259:17" pos:end="259:33">request_alignment</name></name> <operator pos:start="259:35" pos:end="259:36">!=</operator> <literal type="number" pos:start="259:38" pos:end="259:38">0</literal><operator pos:start="259:39" pos:end="259:39">)</operator> <operator pos:start="259:41" pos:end="259:42">||</operator> <name pos:start="259:44" pos:end="259:49"><name pos:start="259:44" pos:end="259:45">bs</name><operator pos:start="259:46" pos:end="259:47">-&gt;</operator><name pos:start="259:48" pos:end="259:49">sg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="261:5" pos:end="261:13">return <expr pos:start="261:12" pos:end="261:12"><literal type="number" pos:start="261:12" pos:end="261:12">0</literal></expr>;</return>



<label pos:start="265:1" pos:end="265:14"><name pos:start="265:1" pos:end="265:13">free_and_fail</name>:</label>

    <expr_stmt pos:start="267:5" pos:end="267:20"><expr pos:start="267:5" pos:end="267:19"><name pos:start="267:5" pos:end="267:12"><name pos:start="267:5" pos:end="267:6">bs</name><operator pos:start="267:7" pos:end="267:8">-&gt;</operator><name pos:start="267:9" pos:end="267:12">file</name></name> <operator pos:start="267:14" pos:end="267:14">=</operator> <name pos:start="267:16" pos:end="267:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:23"><expr pos:start="269:5" pos:end="269:22"><call pos:start="269:5" pos:end="269:22"><name pos:start="269:5" pos:end="269:10">g_free</name><argument_list pos:start="269:11" pos:end="269:22">(<argument pos:start="269:12" pos:end="269:21"><expr pos:start="269:12" pos:end="269:21"><name pos:start="269:12" pos:end="269:21"><name pos:start="269:12" pos:end="269:13">bs</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:21">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="271:5" pos:end="271:22"><expr pos:start="271:5" pos:end="271:21"><name pos:start="271:5" pos:end="271:14"><name pos:start="271:5" pos:end="271:6">bs</name><operator pos:start="271:7" pos:end="271:8">-&gt;</operator><name pos:start="271:9" pos:end="271:14">opaque</name></name> <operator pos:start="271:16" pos:end="271:16">=</operator> <name pos:start="271:18" pos:end="271:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:19"><expr pos:start="273:5" pos:end="273:18"><name pos:start="273:5" pos:end="273:11"><name pos:start="273:5" pos:end="273:6">bs</name><operator pos:start="273:7" pos:end="273:8">-&gt;</operator><name pos:start="273:9" pos:end="273:11">drv</name></name> <operator pos:start="273:13" pos:end="273:13">=</operator> <name pos:start="273:15" pos:end="273:18">NULL</name></expr>;</expr_stmt>

    <return pos:start="275:5" pos:end="275:15">return <expr pos:start="275:12" pos:end="275:14"><name pos:start="275:12" pos:end="275:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
