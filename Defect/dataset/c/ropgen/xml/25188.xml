<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25188.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">win_stdio_close</name><parameter_list pos:start="1:28" pos:end="1:49">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">CharDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">chr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:16">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">WinStdioCharState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">stdio</name> <init pos:start="5:30" pos:end="5:42">= <expr pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:34">chr</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:42">opaque</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:56">(<expr pos:start="9:9" pos:end="9:55"><name pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:13">stdio</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:31">hInputReadyEvent</name></name> <operator pos:start="9:33" pos:end="9:34">!=</operator> <name pos:start="9:36" pos:end="9:55">INVALID_HANDLE_VALUE</name></expr>)</condition> <block pos:start="9:58" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:45">

        <expr_stmt pos:start="11:9" pos:end="11:45"><expr pos:start="11:9" pos:end="11:44"><call pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:19">CloseHandle</name><argument_list pos:start="11:20" pos:end="11:44">(<argument pos:start="11:21" pos:end="11:43"><expr pos:start="11:21" pos:end="11:43"><name pos:start="11:21" pos:end="11:43"><name pos:start="11:21" pos:end="11:25">stdio</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:43">hInputReadyEvent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:55">(<expr pos:start="15:9" pos:end="15:54"><name pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:13">stdio</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:30">hInputDoneEvent</name></name> <operator pos:start="15:32" pos:end="15:33">!=</operator> <name pos:start="15:35" pos:end="15:54">INVALID_HANDLE_VALUE</name></expr>)</condition> <block pos:start="15:57" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:44">

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><call pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:19">CloseHandle</name><argument_list pos:start="17:20" pos:end="17:43">(<argument pos:start="17:21" pos:end="17:42"><expr pos:start="17:21" pos:end="17:42"><name pos:start="17:21" pos:end="17:42"><name pos:start="17:21" pos:end="17:25">stdio</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:42">hInputDoneEvent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:52">(<expr pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:13">stdio</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:27">hInputThread</name></name> <operator pos:start="21:29" pos:end="21:30">!=</operator> <name pos:start="21:32" pos:end="21:51">INVALID_HANDLE_VALUE</name></expr>)</condition> <block pos:start="21:54" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:48">

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><call pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:23">TerminateThread</name><argument_list pos:start="23:24" pos:end="23:47">(<argument pos:start="23:25" pos:end="23:43"><expr pos:start="23:25" pos:end="23:43"><name pos:start="23:25" pos:end="23:43"><name pos:start="23:25" pos:end="23:29">stdio</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:43">hInputThread</name></name></expr></argument>, <argument pos:start="23:46" pos:end="23:46"><expr pos:start="23:46" pos:end="23:46"><literal type="number" pos:start="23:46" pos:end="23:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><call pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:10">g_free</name><argument_list pos:start="29:11" pos:end="29:23">(<argument pos:start="29:12" pos:end="29:22"><expr pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:14">chr</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:22">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:16"><expr pos:start="31:5" pos:end="31:15"><call pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:10">g_free</name><argument_list pos:start="31:11" pos:end="31:15">(<argument pos:start="31:12" pos:end="31:14"><expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
