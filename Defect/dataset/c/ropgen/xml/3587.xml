<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3587.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">balloon_parse</name><parameter_list pos:start="1:25" pos:end="1:41">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:37"><specifier pos:start="1:26" pos:end="1:30">const</specifier> <name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:14">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QemuOpts</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">opts</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:33">(<expr pos:start="9:9" pos:end="9:32"><call pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:14">strcmp</name><argument_list pos:start="9:15" pos:end="9:27">(<argument pos:start="9:16" pos:end="9:18"><expr pos:start="9:16" pos:end="9:18"><name pos:start="9:16" pos:end="9:18">arg</name></expr></argument>, <argument pos:start="9:21" pos:end="9:26"><expr pos:start="9:21" pos:end="9:26"><literal type="string" pos:start="9:21" pos:end="9:26">"none"</literal></expr></argument>)</argument_list></call> <operator pos:start="9:29" pos:end="9:30">==</operator> <literal type="number" pos:start="9:32" pos:end="9:32">0</literal></expr>)</condition> <block pos:start="9:35" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="41:5"><if pos:start="17:5" pos:end="41:5">if <condition pos:start="17:8" pos:end="17:35">(<expr pos:start="17:9" pos:end="17:34"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:34"><name pos:start="17:10" pos:end="17:16">strncmp</name><argument_list pos:start="17:17" pos:end="17:34">(<argument pos:start="17:18" pos:end="17:20"><expr pos:start="17:18" pos:end="17:20"><name pos:start="17:18" pos:end="17:20">arg</name></expr></argument>, <argument pos:start="17:23" pos:end="17:30"><expr pos:start="17:23" pos:end="17:30"><literal type="string" pos:start="17:23" pos:end="17:30">"virtio"</literal></expr></argument>, <argument pos:start="17:33" pos:end="17:33"><expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">6</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:37" pos:end="41:5">{<block_content pos:start="19:9" pos:end="39:17">

        <if_stmt pos:start="19:9" pos:end="35:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:26">(<expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:15">arg</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">6</literal></expr>]</index></name> <operator pos:start="19:20" pos:end="19:21">==</operator> <literal type="char" pos:start="19:23" pos:end="19:25">','</literal></expr>)</condition> <block pos:start="19:28" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:27">

            <comment type="block" pos:start="21:13" pos:end="21:43">/* have params -&gt; parse them */</comment>

            <expr_stmt pos:start="23:13" pos:end="23:71"><expr pos:start="23:13" pos:end="23:70"><name pos:start="23:13" pos:end="23:16">opts</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:70"><name pos:start="23:20" pos:end="23:34">qemu_opts_parse</name><argument_list pos:start="23:35" pos:end="23:70">(<argument pos:start="23:36" pos:end="23:59"><expr pos:start="23:36" pos:end="23:59"><call pos:start="23:36" pos:end="23:59"><name pos:start="23:36" pos:end="23:49">qemu_find_opts</name><argument_list pos:start="23:50" pos:end="23:59">(<argument pos:start="23:51" pos:end="23:58"><expr pos:start="23:51" pos:end="23:58"><literal type="string" pos:start="23:51" pos:end="23:58">"device"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:62" pos:end="23:66"><expr pos:start="23:62" pos:end="23:66"><name pos:start="23:62" pos:end="23:64">arg</name><operator pos:start="23:65" pos:end="23:65">+</operator><literal type="number" pos:start="23:66" pos:end="23:66">7</literal></expr></argument>, <argument pos:start="23:69" pos:end="23:69"><expr pos:start="23:69" pos:end="23:69"><literal type="number" pos:start="23:69" pos:end="23:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="27:27"><if pos:start="25:13" pos:end="27:27">if <condition pos:start="25:16" pos:end="25:22">(<expr pos:start="25:17" pos:end="25:21"><operator pos:start="25:17" pos:end="25:17">!</operator><name pos:start="25:18" pos:end="25:21">opts</name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:27"><block_content pos:start="27:17" pos:end="27:27">

                <return pos:start="27:17" pos:end="27:27">return  <expr pos:start="27:25" pos:end="27:26"><operator pos:start="27:25" pos:end="27:25">-</operator><literal type="number" pos:start="27:26" pos:end="27:26">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="35:9">else <block pos:start="29:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:71">

            <comment type="block" pos:start="31:13" pos:end="31:35">/* create empty opts */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:71"><expr pos:start="33:13" pos:end="33:70"><name pos:start="33:13" pos:end="33:16">opts</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:70"><name pos:start="33:20" pos:end="33:35">qemu_opts_create</name><argument_list pos:start="33:36" pos:end="33:70">(<argument pos:start="33:37" pos:end="33:60"><expr pos:start="33:37" pos:end="33:60"><call pos:start="33:37" pos:end="33:60"><name pos:start="33:37" pos:end="33:50">qemu_find_opts</name><argument_list pos:start="33:51" pos:end="33:60">(<argument pos:start="33:52" pos:end="33:59"><expr pos:start="33:52" pos:end="33:59"><literal type="string" pos:start="33:52" pos:end="33:59">"device"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:63" pos:end="33:66"><expr pos:start="33:63" pos:end="33:66"><name pos:start="33:63" pos:end="33:66">NULL</name></expr></argument>, <argument pos:start="33:69" pos:end="33:69"><expr pos:start="33:69" pos:end="33:69"><literal type="number" pos:start="33:69" pos:end="33:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:55"><expr pos:start="37:9" pos:end="37:54"><call pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:20">qemu_opt_set</name><argument_list pos:start="37:21" pos:end="37:54">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">opts</name></expr></argument>, <argument pos:start="37:28" pos:end="37:35"><expr pos:start="37:28" pos:end="37:35"><literal type="string" pos:start="37:28" pos:end="37:35">"driver"</literal></expr></argument>, <argument pos:start="37:38" pos:end="37:53"><expr pos:start="37:38" pos:end="37:53"><literal type="string" pos:start="37:38" pos:end="37:53">"virtio-balloon"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="45:5" pos:end="45:14">return <expr pos:start="45:12" pos:end="45:13"><operator pos:start="45:12" pos:end="45:12">-</operator><literal type="number" pos:start="45:13" pos:end="45:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
