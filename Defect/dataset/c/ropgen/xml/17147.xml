<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17147.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:21"><name pos:start="1:1" pos:end="1:13">hadamard_func</name><argument_list pos:start="1:14" pos:end="1:21">(<argument pos:start="1:15" pos:end="1:20">mmxext</argument>)</argument_list></macro>

<macro pos:start="3:1" pos:end="3:19"><name pos:start="3:1" pos:end="3:13">hadamard_func</name><argument_list pos:start="3:14" pos:end="3:19">(<argument pos:start="3:15" pos:end="3:18">sse2</argument>)</argument_list></macro>

<macro pos:start="5:1" pos:end="5:20"><name pos:start="5:1" pos:end="5:13">hadamard_func</name><argument_list pos:start="5:14" pos:end="5:20">(<argument pos:start="5:15" pos:end="5:19">ssse3</argument>)</argument_list></macro>



<function pos:start="9:1" pos:end="237:1"><type pos:start="9:1" pos:end="9:12"><name pos:start="9:1" pos:end="9:7">av_cold</name> <name pos:start="9:9" pos:end="9:12">void</name></type> <name pos:start="9:14" pos:end="9:35">ff_dsputilenc_init_mmx</name><parameter_list pos:start="9:36" pos:end="9:73">(<parameter pos:start="9:37" pos:end="9:49"><decl pos:start="9:37" pos:end="9:49"><type pos:start="9:37" pos:end="9:49"><name pos:start="9:37" pos:end="9:46">DSPContext</name> <modifier pos:start="9:48" pos:end="9:48">*</modifier></type><name pos:start="9:49" pos:end="9:49">c</name></decl></parameter>, <parameter pos:start="9:52" pos:end="9:72"><decl pos:start="9:52" pos:end="9:72"><type pos:start="9:52" pos:end="9:72"><name pos:start="9:52" pos:end="9:65">AVCodecContext</name> <modifier pos:start="9:67" pos:end="9:67">*</modifier></type><name pos:start="9:68" pos:end="9:72">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="237:1">{<block_content pos:start="13:5" pos:end="235:38">

    <decl_stmt pos:start="13:5" pos:end="18:0"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">cpu_flags</name> <init pos:start="13:19" pos:end="13:38">= <expr pos:start="13:21" pos:end="13:38"><call pos:start="13:21" pos:end="13:38"><name pos:start="13:21" pos:end="13:36">av_get_cpu_flags</name><argument_list pos:start="13:37" pos:end="13:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="17:1" pos:end="17:13">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:13">HAVE_YASM</name></expr></cpp:if>

    <decl_stmt pos:start="19:5" pos:end="19:47"><decl pos:start="19:5" pos:end="19:46"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">bit_depth</name> <init pos:start="19:19" pos:end="19:46">= <expr pos:start="19:21" pos:end="19:46"><name pos:start="19:21" pos:end="19:46"><name pos:start="19:21" pos:end="19:25">avctx</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:46">bits_per_raw_sample</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:32">(<expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:20">EXTERNAL_MMX</name><argument_list pos:start="23:21" pos:end="23:31">(<argument pos:start="23:22" pos:end="23:30"><expr pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:34" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:40">

        <if_stmt pos:start="25:9" pos:end="27:46"><if pos:start="25:9" pos:end="27:46">if <condition pos:start="25:12" pos:end="25:27">(<expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:21">bit_depth</name> <operator pos:start="25:23" pos:end="25:24">&lt;=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">8</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:46"><block_content pos:start="27:13" pos:end="27:46">

            <expr_stmt pos:start="27:13" pos:end="27:46"><expr pos:start="27:13" pos:end="27:45"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:13">c</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">get_pixels</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:45">ff_get_pixels_mmx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:9">c</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:22">diff_pixels</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:43">ff_diff_pixels_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">c</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:18">pix_sum</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:37">ff_pix_sum16_mmx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:9">c</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:20">pix_norm1</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:39">ff_pix_norm1_mmx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="50:0"><if pos:start="39:5" pos:end="50:0">if <condition pos:start="39:8" pos:end="39:33">(<expr pos:start="39:9" pos:end="39:32"><call pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:21">EXTERNAL_SSE2</name><argument_list pos:start="39:22" pos:end="39:32">(<argument pos:start="39:23" pos:end="39:31"><expr pos:start="39:23" pos:end="39:31"><name pos:start="39:23" pos:end="39:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="50:0"><block_content pos:start="41:9" pos:end="50:0">

        <if_stmt pos:start="41:9" pos:end="50:0"><if pos:start="41:9" pos:end="50:0">if <condition pos:start="41:12" pos:end="41:27">(<expr pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:21">bit_depth</name> <operator pos:start="41:23" pos:end="41:24">&lt;=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">8</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="50:0"><block_content pos:start="43:13" pos:end="50:0">

            <expr_stmt pos:start="43:13" pos:end="50:0"><expr pos:start="43:13" pos:end="43:46"><name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:13">c</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:25">get_pixels</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:46">ff_get_pixels_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="45:8" pos:end="45:22">/* HAVE_YASM */</comment>



<cpp:if pos:start="49:1" pos:end="49:19">#<cpp:directive pos:start="49:2" pos:end="49:3">if</cpp:directive> <expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:19">HAVE_INLINE_ASM</name></expr></cpp:if>

    <if_stmt pos:start="51:5" pos:end="184:0"><if pos:start="51:5" pos:end="184:0">if <condition pos:start="51:8" pos:end="51:36">(<expr pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:17">cpu_flags</name> <operator pos:start="51:19" pos:end="51:19">&amp;</operator> <name pos:start="51:21" pos:end="51:35">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="51:38" pos:end="184:0">{<block_content pos:start="53:9" pos:end="179:9">

        <decl_stmt pos:start="53:9" pos:end="53:45"><decl pos:start="53:9" pos:end="53:44"><type pos:start="53:9" pos:end="53:17"><specifier pos:start="53:9" pos:end="53:13">const</specifier> <name pos:start="53:15" pos:end="53:17">int</name></type> <name pos:start="53:19" pos:end="53:26">dct_algo</name> <init pos:start="53:28" pos:end="53:44">= <expr pos:start="53:30" pos:end="53:44"><name pos:start="53:30" pos:end="53:44"><name pos:start="53:30" pos:end="53:34">avctx</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:44">dct_algo</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="55:9" pos:end="73:9"><if pos:start="55:9" pos:end="73:9">if <condition pos:start="55:12" pos:end="57:60">(<expr pos:start="55:13" pos:end="57:59"><name pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:17">avctx</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:38">bits_per_raw_sample</name></name> <operator pos:start="55:40" pos:end="55:41">&lt;=</operator> <literal type="number" pos:start="55:43" pos:end="55:43">8</literal> <operator pos:start="55:45" pos:end="55:46">&amp;&amp;</operator>

            <operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:21">dct_algo</name><operator pos:start="57:22" pos:end="57:23">==</operator><name pos:start="57:24" pos:end="57:34">FF_DCT_AUTO</name> <operator pos:start="57:36" pos:end="57:37">||</operator> <name pos:start="57:39" pos:end="57:46">dct_algo</name><operator pos:start="57:47" pos:end="57:48">==</operator><name pos:start="57:49" pos:end="57:58">FF_DCT_MMX</name><operator pos:start="57:59" pos:end="57:59">)</operator></expr>)</condition> <block pos:start="57:62" pos:end="73:9">{<block_content pos:start="59:13" pos:end="71:13">

            <if_stmt pos:start="59:13" pos:end="71:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:45">(<expr pos:start="59:17" pos:end="59:44"><name pos:start="59:17" pos:end="59:25">cpu_flags</name> <operator pos:start="59:27" pos:end="59:27">&amp;</operator> <name pos:start="59:29" pos:end="59:44">AV_CPU_FLAG_SSE2</name></expr>)</condition> <block pos:start="59:47" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:39">

                <expr_stmt pos:start="61:17" pos:end="61:39"><expr pos:start="61:17" pos:end="61:38"><name pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:17">c</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:23">fdct</name></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:38">ff_fdct_sse2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="63:15" pos:end="67:13">else if <condition pos:start="63:23" pos:end="63:54">(<expr pos:start="63:24" pos:end="63:53"><name pos:start="63:24" pos:end="63:32">cpu_flags</name> <operator pos:start="63:34" pos:end="63:34">&amp;</operator> <name pos:start="63:36" pos:end="63:53">AV_CPU_FLAG_MMXEXT</name></expr>)</condition> <block pos:start="63:56" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:41">

                <expr_stmt pos:start="65:17" pos:end="65:41"><expr pos:start="65:17" pos:end="65:40"><name pos:start="65:17" pos:end="65:23"><name pos:start="65:17" pos:end="65:17">c</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:23">fdct</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <name pos:start="65:27" pos:end="65:40">ff_fdct_mmxext</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="67:14" pos:end="71:13">else<block pos:start="67:18" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:38">

                <expr_stmt pos:start="69:17" pos:end="69:38"><expr pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:17">c</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:23">fdct</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:37">ff_fdct_mmx</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>





        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:9">c</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:21">diff_bytes</name></name><operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:37">diff_bytes_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:48"><expr pos:start="81:9" pos:end="81:47"><name pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:9">c</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:26">sum_abs_dctelem</name></name><operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:47">sum_abs_dctelem_mmx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:30"><expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:9">c</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:14">sse</name><index pos:start="85:15" pos:end="85:17">[<expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">0</literal></expr>]</index></name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:29">sse16_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:9">c</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:14">sse</name><index pos:start="87:15" pos:end="87:17">[<expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">1</literal></expr>]</index></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:28">sse8_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:37"><expr pos:start="89:9" pos:end="89:36"><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:9">c</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:15">vsad</name><index pos:start="89:16" pos:end="89:18">[<expr pos:start="89:17" pos:end="89:17"><literal type="number" pos:start="89:17" pos:end="89:17">4</literal></expr>]</index></name><operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:36">vsad_intra16_mmx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:32"><expr pos:start="93:9" pos:end="93:31"><name pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:9">c</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:15">nsse</name><index pos:start="93:16" pos:end="93:18">[<expr pos:start="93:17" pos:end="93:17"><literal type="number" pos:start="93:17" pos:end="93:17">0</literal></expr>]</index></name> <operator pos:start="93:20" pos:end="93:20">=</operator> <name pos:start="93:22" pos:end="93:31">nsse16_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:9">c</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:15">nsse</name><index pos:start="95:16" pos:end="95:18">[<expr pos:start="95:17" pos:end="95:17"><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>]</index></name> <operator pos:start="95:20" pos:end="95:20">=</operator> <name pos:start="95:22" pos:end="95:30">nsse8_mmx</name></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="101:9"><if pos:start="97:9" pos:end="101:9">if<condition pos:start="97:11" pos:end="97:49">(<expr pos:start="97:12" pos:end="97:48"><operator pos:start="97:12" pos:end="97:12">!</operator><operator pos:start="97:13" pos:end="97:13">(</operator><name pos:start="97:14" pos:end="97:25"><name pos:start="97:14" pos:end="97:18">avctx</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:25">flags</name></name> <operator pos:start="97:27" pos:end="97:27">&amp;</operator> <name pos:start="97:29" pos:end="97:47">CODEC_FLAG_BITEXACT</name><operator pos:start="97:48" pos:end="97:48">)</operator></expr>)</condition><block pos:start="97:50" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:36">

            <expr_stmt pos:start="99:13" pos:end="99:36"><expr pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:22"><name pos:start="99:13" pos:end="99:13">c</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:19">vsad</name><index pos:start="99:20" pos:end="99:22">[<expr pos:start="99:21" pos:end="99:21"><literal type="number" pos:start="99:21" pos:end="99:21">0</literal></expr>]</index></name> <operator pos:start="99:24" pos:end="99:24">=</operator> <name pos:start="99:26" pos:end="99:35">vsad16_mmx</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if<condition pos:start="105:11" pos:end="105:49">(<expr pos:start="105:12" pos:end="105:48"><operator pos:start="105:12" pos:end="105:12">!</operator><operator pos:start="105:13" pos:end="105:13">(</operator><name pos:start="105:14" pos:end="105:25"><name pos:start="105:14" pos:end="105:18">avctx</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:25">flags</name></name> <operator pos:start="105:27" pos:end="105:27">&amp;</operator> <name pos:start="105:29" pos:end="105:47">CODEC_FLAG_BITEXACT</name><operator pos:start="105:48" pos:end="105:48">)</operator></expr>)</condition><block pos:start="105:50" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:46">

            <expr_stmt pos:start="107:13" pos:end="107:46"><expr pos:start="107:13" pos:end="107:45"><name pos:start="107:13" pos:end="107:27"><name pos:start="107:13" pos:end="107:13">c</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:27">try_8x8basis</name></name><operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:45">try_8x8basis_mmx</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:42"><expr pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:9">c</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:23">add_8x8basis</name></name><operator pos:start="111:24" pos:end="111:24">=</operator> <name pos:start="111:26" pos:end="111:41">add_8x8basis_mmx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:53"><expr pos:start="115:9" pos:end="115:52"><name pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:9">c</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:28">ssd_int8_vs_int16</name></name> <operator pos:start="115:30" pos:end="115:30">=</operator> <name pos:start="115:32" pos:end="115:52">ssd_int8_vs_int16_mmx</name></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="137:9"><if pos:start="119:9" pos:end="137:9">if <condition pos:start="119:12" pos:end="119:43">(<expr pos:start="119:13" pos:end="119:42"><name pos:start="119:13" pos:end="119:21">cpu_flags</name> <operator pos:start="119:23" pos:end="119:23">&amp;</operator> <name pos:start="119:25" pos:end="119:42">AV_CPU_FLAG_MMXEXT</name></expr>)</condition> <block pos:start="119:45" pos:end="137:9">{<block_content pos:start="121:13" pos:end="135:78">

            <expr_stmt pos:start="121:13" pos:end="121:56"><expr pos:start="121:13" pos:end="121:55"><name pos:start="121:13" pos:end="121:30"><name pos:start="121:13" pos:end="121:13">c</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:30">sum_abs_dctelem</name></name> <operator pos:start="121:32" pos:end="121:32">=</operator> <name pos:start="121:34" pos:end="121:55">sum_abs_dctelem_mmxext</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:53"><expr pos:start="123:13" pos:end="123:52"><name pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:13">c</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:19">vsad</name><index pos:start="123:20" pos:end="123:22">[<expr pos:start="123:21" pos:end="123:21"><literal type="number" pos:start="123:21" pos:end="123:21">4</literal></expr>]</index></name>         <operator pos:start="123:32" pos:end="123:32">=</operator> <name pos:start="123:34" pos:end="123:52">vsad_intra16_mmxext</name></expr>;</expr_stmt>



            <if_stmt pos:start="127:13" pos:end="131:13"><if pos:start="127:13" pos:end="131:13">if<condition pos:start="127:15" pos:end="127:53">(<expr pos:start="127:16" pos:end="127:52"><operator pos:start="127:16" pos:end="127:16">!</operator><operator pos:start="127:17" pos:end="127:17">(</operator><name pos:start="127:18" pos:end="127:29"><name pos:start="127:18" pos:end="127:22">avctx</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:29">flags</name></name> <operator pos:start="127:31" pos:end="127:31">&amp;</operator> <name pos:start="127:33" pos:end="127:51">CODEC_FLAG_BITEXACT</name><operator pos:start="127:52" pos:end="127:52">)</operator></expr>)</condition><block pos:start="127:54" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:43">

                <expr_stmt pos:start="129:17" pos:end="129:43"><expr pos:start="129:17" pos:end="129:42"><name pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:17">c</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:23">vsad</name><index pos:start="129:24" pos:end="129:26">[<expr pos:start="129:25" pos:end="129:25"><literal type="number" pos:start="129:25" pos:end="129:25">0</literal></expr>]</index></name> <operator pos:start="129:28" pos:end="129:28">=</operator> <name pos:start="129:30" pos:end="129:42">vsad16_mmxext</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:78"><expr pos:start="135:13" pos:end="135:77"><name pos:start="135:13" pos:end="135:41"><name pos:start="135:13" pos:end="135:13">c</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:41">sub_hfyu_median_prediction</name></name> <operator pos:start="135:43" pos:end="135:43">=</operator> <name pos:start="135:45" pos:end="135:77">sub_hfyu_median_prediction_mmxext</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="141:9" pos:end="150:0"><if pos:start="141:9" pos:end="150:0">if <condition pos:start="141:12" pos:end="141:41">(<expr pos:start="141:13" pos:end="141:40"><name pos:start="141:13" pos:end="141:21">cpu_flags</name> <operator pos:start="141:23" pos:end="141:23">&amp;</operator> <name pos:start="141:25" pos:end="141:40">AV_CPU_FLAG_SSE2</name></expr>)</condition> <block pos:start="141:43" pos:end="150:0">{<block_content pos:start="143:13" pos:end="143:53">

            <expr_stmt pos:start="143:13" pos:end="143:53"><expr pos:start="143:13" pos:end="143:52"><name pos:start="143:13" pos:end="143:30"><name pos:start="143:13" pos:end="143:13">c</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:30">sum_abs_dctelem</name></name><operator pos:start="143:31" pos:end="143:31">=</operator> <name pos:start="143:33" pos:end="143:52">sum_abs_dctelem_sse2</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



<cpp:if pos:start="149:1" pos:end="149:21">#<cpp:directive pos:start="149:2" pos:end="149:3">if</cpp:directive> <expr pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:21">HAVE_SSSE3_INLINE</name></expr></cpp:if>

        <if_stmt pos:start="151:9" pos:end="166:0"><if pos:start="151:9" pos:end="166:0">if <condition pos:start="151:12" pos:end="151:42">(<expr pos:start="151:13" pos:end="151:41"><name pos:start="151:13" pos:end="151:21">cpu_flags</name> <operator pos:start="151:23" pos:end="151:23">&amp;</operator> <name pos:start="151:25" pos:end="151:41">AV_CPU_FLAG_SSSE3</name></expr>)</condition> <block pos:start="151:44" pos:end="166:0">{<block_content pos:start="153:13" pos:end="161:54">

            <if_stmt pos:start="153:13" pos:end="157:13"><if pos:start="153:13" pos:end="157:13">if<condition pos:start="153:15" pos:end="153:53">(<expr pos:start="153:16" pos:end="153:52"><operator pos:start="153:16" pos:end="153:16">!</operator><operator pos:start="153:17" pos:end="153:17">(</operator><name pos:start="153:18" pos:end="153:29"><name pos:start="153:18" pos:end="153:22">avctx</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:29">flags</name></name> <operator pos:start="153:31" pos:end="153:31">&amp;</operator> <name pos:start="153:33" pos:end="153:51">CODEC_FLAG_BITEXACT</name><operator pos:start="153:52" pos:end="153:52">)</operator></expr>)</condition><block pos:start="153:54" pos:end="157:13">{<block_content pos:start="155:17" pos:end="155:52">

                <expr_stmt pos:start="155:17" pos:end="155:52"><expr pos:start="155:17" pos:end="155:51"><name pos:start="155:17" pos:end="155:31"><name pos:start="155:17" pos:end="155:17">c</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:31">try_8x8basis</name></name><operator pos:start="155:32" pos:end="155:32">=</operator> <name pos:start="155:34" pos:end="155:51">try_8x8basis_ssse3</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:48"><expr pos:start="159:13" pos:end="159:47"><name pos:start="159:13" pos:end="159:27"><name pos:start="159:13" pos:end="159:13">c</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:27">add_8x8basis</name></name><operator pos:start="159:28" pos:end="159:28">=</operator> <name pos:start="159:30" pos:end="159:47">add_8x8basis_ssse3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:54"><expr pos:start="161:13" pos:end="161:53"><name pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:13">c</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:30">sum_abs_dctelem</name></name><operator pos:start="161:31" pos:end="161:31">=</operator> <name pos:start="161:33" pos:end="161:53">sum_abs_dctelem_ssse3</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>



        <if_stmt pos:start="169:9" pos:end="179:9"><if pos:start="169:9" pos:end="179:9">if <condition pos:start="169:12" pos:end="169:42">(<expr pos:start="169:13" pos:end="169:41"><name pos:start="169:13" pos:end="169:21">cpu_flags</name> <operator pos:start="169:23" pos:end="169:23">&amp;</operator> <name pos:start="169:25" pos:end="169:41">AV_CPU_FLAG_3DNOW</name></expr>)</condition> <block pos:start="169:44" pos:end="179:9">{<block_content pos:start="171:13" pos:end="177:48">

            <if_stmt pos:start="171:13" pos:end="175:13"><if pos:start="171:13" pos:end="175:13">if<condition pos:start="171:15" pos:end="171:53">(<expr pos:start="171:16" pos:end="171:52"><operator pos:start="171:16" pos:end="171:16">!</operator><operator pos:start="171:17" pos:end="171:17">(</operator><name pos:start="171:18" pos:end="171:29"><name pos:start="171:18" pos:end="171:22">avctx</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:29">flags</name></name> <operator pos:start="171:31" pos:end="171:31">&amp;</operator> <name pos:start="171:33" pos:end="171:51">CODEC_FLAG_BITEXACT</name><operator pos:start="171:52" pos:end="171:52">)</operator></expr>)</condition><block pos:start="171:54" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:52">

                <expr_stmt pos:start="173:17" pos:end="173:52"><expr pos:start="173:17" pos:end="173:51"><name pos:start="173:17" pos:end="173:31"><name pos:start="173:17" pos:end="173:17">c</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:31">try_8x8basis</name></name><operator pos:start="173:32" pos:end="173:32">=</operator> <name pos:start="173:34" pos:end="173:51">try_8x8basis_3dnow</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:48"><expr pos:start="177:13" pos:end="177:47"><name pos:start="177:13" pos:end="177:27"><name pos:start="177:13" pos:end="177:13">c</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:27">add_8x8basis</name></name><operator pos:start="177:28" pos:end="177:28">=</operator> <name pos:start="177:30" pos:end="177:47">add_8x8basis_3dnow</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="183:1" pos:end="183:6">#<cpp:directive pos:start="183:2" pos:end="183:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="183:8" pos:end="183:28">/* HAVE_INLINE_ASM */</comment>



    <if_stmt pos:start="187:5" pos:end="231:5"><if pos:start="187:5" pos:end="231:5">if <condition pos:start="187:8" pos:end="187:32">(<expr pos:start="187:9" pos:end="187:31"><call pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:20">EXTERNAL_MMX</name><argument_list pos:start="187:21" pos:end="187:31">(<argument pos:start="187:22" pos:end="187:30"><expr pos:start="187:22" pos:end="187:30"><name pos:start="187:22" pos:end="187:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="187:34" pos:end="231:5">{<block_content pos:start="189:9" pos:end="229:9">

        <expr_stmt pos:start="189:9" pos:end="189:55"><expr pos:start="189:9" pos:end="189:54"><name pos:start="189:9" pos:end="189:28"><name pos:start="189:9" pos:end="189:9">c</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:25">hadamard8_diff</name><index pos:start="189:26" pos:end="189:28">[<expr pos:start="189:27" pos:end="189:27"><literal type="number" pos:start="189:27" pos:end="189:27">0</literal></expr>]</index></name> <operator pos:start="189:30" pos:end="189:30">=</operator> <name pos:start="189:32" pos:end="189:54">ff_hadamard8_diff16_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:53"><expr pos:start="191:9" pos:end="191:52"><name pos:start="191:9" pos:end="191:28"><name pos:start="191:9" pos:end="191:9">c</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:25">hadamard8_diff</name><index pos:start="191:26" pos:end="191:28">[<expr pos:start="191:27" pos:end="191:27"><literal type="number" pos:start="191:27" pos:end="191:27">1</literal></expr>]</index></name> <operator pos:start="191:30" pos:end="191:30">=</operator> <name pos:start="191:32" pos:end="191:52">ff_hadamard8_diff_mmx</name></expr>;</expr_stmt>



        <if_stmt pos:start="195:9" pos:end="201:9"><if pos:start="195:9" pos:end="201:9">if <condition pos:start="195:12" pos:end="195:39">(<expr pos:start="195:13" pos:end="195:38"><call pos:start="195:13" pos:end="195:38"><name pos:start="195:13" pos:end="195:27">EXTERNAL_MMXEXT</name><argument_list pos:start="195:28" pos:end="195:38">(<argument pos:start="195:29" pos:end="195:37"><expr pos:start="195:29" pos:end="195:37"><name pos:start="195:29" pos:end="195:37">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="195:41" pos:end="201:9">{<block_content pos:start="197:13" pos:end="199:60">

            <expr_stmt pos:start="197:13" pos:end="197:62"><expr pos:start="197:13" pos:end="197:61"><name pos:start="197:13" pos:end="197:32"><name pos:start="197:13" pos:end="197:13">c</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:29">hadamard8_diff</name><index pos:start="197:30" pos:end="197:32">[<expr pos:start="197:31" pos:end="197:31"><literal type="number" pos:start="197:31" pos:end="197:31">0</literal></expr>]</index></name> <operator pos:start="197:34" pos:end="197:34">=</operator> <name pos:start="197:36" pos:end="197:61">ff_hadamard8_diff16_mmxext</name></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:60"><expr pos:start="199:13" pos:end="199:59"><name pos:start="199:13" pos:end="199:32"><name pos:start="199:13" pos:end="199:13">c</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:29">hadamard8_diff</name><index pos:start="199:30" pos:end="199:32">[<expr pos:start="199:31" pos:end="199:31"><literal type="number" pos:start="199:31" pos:end="199:31">1</literal></expr>]</index></name> <operator pos:start="199:34" pos:end="199:34">=</operator> <name pos:start="199:36" pos:end="199:59">ff_hadamard8_diff_mmxext</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="205:9" pos:end="219:9"><if pos:start="205:9" pos:end="219:9">if <condition pos:start="205:12" pos:end="205:37">(<expr pos:start="205:13" pos:end="205:36"><call pos:start="205:13" pos:end="205:36"><name pos:start="205:13" pos:end="205:25">EXTERNAL_SSE2</name><argument_list pos:start="205:26" pos:end="205:36">(<argument pos:start="205:27" pos:end="205:35"><expr pos:start="205:27" pos:end="205:35"><name pos:start="205:27" pos:end="205:35">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="205:39" pos:end="219:9">{<block_content pos:start="207:13" pos:end="218:0">

            <expr_stmt pos:start="207:13" pos:end="212:0"><expr pos:start="207:13" pos:end="207:37"><name pos:start="207:13" pos:end="207:21"><name pos:start="207:13" pos:end="207:13">c</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:18">sse</name><index pos:start="207:19" pos:end="207:21">[<expr pos:start="207:20" pos:end="207:20"><literal type="number" pos:start="207:20" pos:end="207:20">0</literal></expr>]</index></name> <operator pos:start="207:23" pos:end="207:23">=</operator> <name pos:start="207:25" pos:end="207:37">ff_sse16_sse2</name></expr>;</expr_stmt>



<cpp:if pos:start="211:1" pos:end="211:22">#<cpp:directive pos:start="211:2" pos:end="211:3">if</cpp:directive> <expr pos:start="211:5" pos:end="211:22"><name pos:start="211:5" pos:end="211:22">HAVE_ALIGNED_STACK</name></expr></cpp:if>

            <expr_stmt pos:start="213:13" pos:end="213:60"><expr pos:start="213:13" pos:end="213:59"><name pos:start="213:13" pos:end="213:32"><name pos:start="213:13" pos:end="213:13">c</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:29">hadamard8_diff</name><index pos:start="213:30" pos:end="213:32">[<expr pos:start="213:31" pos:end="213:31"><literal type="number" pos:start="213:31" pos:end="213:31">0</literal></expr>]</index></name> <operator pos:start="213:34" pos:end="213:34">=</operator> <name pos:start="213:36" pos:end="213:59">ff_hadamard8_diff16_sse2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="218:0"><expr pos:start="215:13" pos:end="215:57"><name pos:start="215:13" pos:end="215:32"><name pos:start="215:13" pos:end="215:13">c</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:29">hadamard8_diff</name><index pos:start="215:30" pos:end="215:32">[<expr pos:start="215:31" pos:end="215:31"><literal type="number" pos:start="215:31" pos:end="215:31">1</literal></expr>]</index></name> <operator pos:start="215:34" pos:end="215:34">=</operator> <name pos:start="215:36" pos:end="215:57">ff_hadamard8_diff_sse2</name></expr>;</expr_stmt>

<cpp:endif pos:start="217:1" pos:end="217:6">#<cpp:directive pos:start="217:2" pos:end="217:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="223:9" pos:end="229:9"><if pos:start="223:9" pos:end="229:9">if <condition pos:start="223:12" pos:end="223:60">(<expr pos:start="223:13" pos:end="223:59"><call pos:start="223:13" pos:end="223:37"><name pos:start="223:13" pos:end="223:26">EXTERNAL_SSSE3</name><argument_list pos:start="223:27" pos:end="223:37">(<argument pos:start="223:28" pos:end="223:36"><expr pos:start="223:28" pos:end="223:36"><name pos:start="223:28" pos:end="223:36">cpu_flags</name></expr></argument>)</argument_list></call> <operator pos:start="223:39" pos:end="223:40">&amp;&amp;</operator> <name pos:start="223:42" pos:end="223:59">HAVE_ALIGNED_STACK</name></expr>)</condition> <block pos:start="223:62" pos:end="229:9">{<block_content pos:start="225:13" pos:end="227:59">

            <expr_stmt pos:start="225:13" pos:end="225:61"><expr pos:start="225:13" pos:end="225:60"><name pos:start="225:13" pos:end="225:32"><name pos:start="225:13" pos:end="225:13">c</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:29">hadamard8_diff</name><index pos:start="225:30" pos:end="225:32">[<expr pos:start="225:31" pos:end="225:31"><literal type="number" pos:start="225:31" pos:end="225:31">0</literal></expr>]</index></name> <operator pos:start="225:34" pos:end="225:34">=</operator> <name pos:start="225:36" pos:end="225:60">ff_hadamard8_diff16_ssse3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:59"><expr pos:start="227:13" pos:end="227:58"><name pos:start="227:13" pos:end="227:32"><name pos:start="227:13" pos:end="227:13">c</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:29">hadamard8_diff</name><index pos:start="227:30" pos:end="227:32">[<expr pos:start="227:31" pos:end="227:31"><literal type="number" pos:start="227:31" pos:end="227:31">1</literal></expr>]</index></name> <operator pos:start="227:34" pos:end="227:34">=</operator> <name pos:start="227:36" pos:end="227:58">ff_hadamard8_diff_ssse3</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="235:5" pos:end="235:38"><expr pos:start="235:5" pos:end="235:37"><call pos:start="235:5" pos:end="235:37"><name pos:start="235:5" pos:end="235:27">ff_dsputil_init_pix_mmx</name><argument_list pos:start="235:28" pos:end="235:37">(<argument pos:start="235:29" pos:end="235:29"><expr pos:start="235:29" pos:end="235:29"><name pos:start="235:29" pos:end="235:29">c</name></expr></argument>, <argument pos:start="235:32" pos:end="235:36"><expr pos:start="235:32" pos:end="235:36"><name pos:start="235:32" pos:end="235:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
