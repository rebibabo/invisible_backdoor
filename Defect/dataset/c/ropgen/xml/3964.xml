<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3964.c" pos:tabs="8"><function pos:start="1:1" pos:end="208:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">asfrtp_parse_packet</name><parameter_list pos:start="1:31" pos:end="7:70">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><name pos:start="1:52" pos:end="1:65">PayloadContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">asf</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:39">AVStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:43">st</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">AVPacket</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:58">pkt</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:50"><decl pos:start="5:32" pos:end="5:50"><type pos:start="5:32" pos:end="5:50"><name pos:start="5:32" pos:end="5:39">uint32_t</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:50">timestamp</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:49"><decl pos:start="7:32" pos:end="7:49"><type pos:start="7:32" pos:end="7:49"><specifier pos:start="7:32" pos:end="7:36">const</specifier> <name pos:start="7:38" pos:end="7:44">uint8_t</name> <modifier pos:start="7:46" pos:end="7:46">*</modifier></type><name pos:start="7:47" pos:end="7:49">buf</name></decl></parameter>, <parameter pos:start="7:52" pos:end="7:58"><decl pos:start="7:52" pos:end="7:58"><type pos:start="7:52" pos:end="7:58"><name pos:start="7:52" pos:end="7:54">int</name></type> <name pos:start="7:56" pos:end="7:58">len</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:69"><decl pos:start="7:61" pos:end="7:69"><type pos:start="7:61" pos:end="7:69"><name pos:start="7:61" pos:end="7:63">int</name></type> <name pos:start="7:65" pos:end="7:69">flags</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="208:1">{<block_content pos:start="11:5" pos:end="206:31">

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">AVIOContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pb</name> <init pos:start="11:21" pos:end="11:30">= <expr pos:start="11:23" pos:end="11:30"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:26">asf</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">res</name></decl>, <decl pos:start="13:14" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:19">mflags</name></decl>, <decl pos:start="13:22" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:28">len_off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">RTSPState</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:17">rt</name> <init pos:start="15:19" pos:end="15:32">= <expr pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:21">s</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:32">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="170:5"><if pos:start="19:5" pos:end="170:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:11">rt</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:20">asf_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="24:5" pos:end="170:5"><block_content pos:start="24:5" pos:end="170:5">




    <if_stmt pos:start="24:5" pos:end="170:5"><if pos:start="24:5" pos:end="170:5">if <condition pos:start="24:8" pos:end="24:16">(<expr pos:start="24:9" pos:end="24:15"><name pos:start="24:9" pos:end="24:11">len</name> <operator pos:start="24:13" pos:end="24:13">&gt;</operator> <literal type="number" pos:start="24:15" pos:end="24:15">0</literal></expr>)</condition> <block pos:start="24:18" pos:end="170:5">{<block_content pos:start="26:9" pos:end="168:29">

        <decl_stmt pos:start="26:9" pos:end="26:29"><decl pos:start="26:9" pos:end="26:15"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:15">off</name></decl>, <decl pos:start="26:18" pos:end="26:28"><type ref="prev" pos:start="26:9" pos:end="26:11"/><name pos:start="26:18" pos:end="26:24">out_len</name> <init pos:start="26:26" pos:end="26:28">= <expr pos:start="26:28" pos:end="26:28"><literal type="number" pos:start="26:28" pos:end="26:28">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="30:9" pos:end="35:28"><if pos:start="30:9" pos:end="35:28">if <condition pos:start="30:12" pos:end="30:20">(<expr pos:start="30:13" pos:end="30:19"><name pos:start="30:13" pos:end="30:15">len</name> <operator pos:start="30:17" pos:end="30:17">&lt;</operator> <literal type="number" pos:start="30:19" pos:end="30:19">4</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:28"><block_content pos:start="35:9" pos:end="35:28">




        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><call pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:16">av_freep</name><argument_list pos:start="35:17" pos:end="35:27">(<argument pos:start="35:18" pos:end="35:26"><expr pos:start="35:18" pos:end="35:26"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:26"><name pos:start="35:19" pos:end="35:21">asf</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:26">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:67"><expr pos:start="39:9" pos:end="39:66"><call pos:start="39:9" pos:end="39:66"><name pos:start="39:9" pos:end="39:25">ffio_init_context</name><argument_list pos:start="39:26" pos:end="39:66">(<argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">pb</name></expr></argument>, <argument pos:start="39:31" pos:end="39:33"><expr pos:start="39:31" pos:end="39:33"><name pos:start="39:31" pos:end="39:33">buf</name></expr></argument>, <argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:38">len</name></expr></argument>, <argument pos:start="39:41" pos:end="39:41"><expr pos:start="39:41" pos:end="39:41"><literal type="number" pos:start="39:41" pos:end="39:41">0</literal></expr></argument>, <argument pos:start="39:44" pos:end="39:47"><expr pos:start="39:44" pos:end="39:47"><name pos:start="39:44" pos:end="39:47">NULL</name></expr></argument>, <argument pos:start="39:50" pos:end="39:53"><expr pos:start="39:50" pos:end="39:53"><name pos:start="39:50" pos:end="39:53">NULL</name></expr></argument>, <argument pos:start="39:56" pos:end="39:59"><expr pos:start="39:56" pos:end="39:59"><name pos:start="39:56" pos:end="39:59">NULL</name></expr></argument>, <argument pos:start="39:62" pos:end="39:65"><expr pos:start="39:62" pos:end="39:65"><name pos:start="39:62" pos:end="39:65">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <while pos:start="43:9" pos:end="158:9">while <condition pos:start="43:15" pos:end="43:39">(<expr pos:start="43:16" pos:end="43:38"><call pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:24">avio_tell</name><argument_list pos:start="43:25" pos:end="43:28">(<argument pos:start="43:26" pos:end="43:27"><expr pos:start="43:26" pos:end="43:27"><name pos:start="43:26" pos:end="43:27">pb</name></expr></argument>)</argument_list></call> <operator pos:start="43:30" pos:end="43:30">+</operator> <literal type="number" pos:start="43:32" pos:end="43:32">4</literal> <operator pos:start="43:34" pos:end="43:34">&lt;</operator> <name pos:start="43:36" pos:end="43:38">len</name></expr>)</condition> <block pos:start="43:41" pos:end="158:9">{<block_content pos:start="45:13" pos:end="156:13">

            <decl_stmt pos:start="45:13" pos:end="45:42"><decl pos:start="45:13" pos:end="45:41"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:25">start_off</name> <init pos:start="45:27" pos:end="45:41">= <expr pos:start="45:29" pos:end="45:41"><call pos:start="45:29" pos:end="45:41"><name pos:start="45:29" pos:end="45:37">avio_tell</name><argument_list pos:start="45:38" pos:end="45:41">(<argument pos:start="45:39" pos:end="45:40"><expr pos:start="45:39" pos:end="45:40"><name pos:start="45:39" pos:end="45:40">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:33"><expr pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:18">mflags</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:32"><name pos:start="49:22" pos:end="49:28">avio_r8</name><argument_list pos:start="49:29" pos:end="49:32">(<argument pos:start="49:30" pos:end="49:31"><expr pos:start="49:30" pos:end="49:31"><name pos:start="49:30" pos:end="49:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:38"><if pos:start="51:13" pos:end="53:38">if <condition pos:start="51:16" pos:end="51:30">(<expr pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:22">mflags</name> <operator pos:start="51:24" pos:end="51:24">&amp;</operator> <literal type="number" pos:start="51:26" pos:end="51:29">0x80</literal></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:38"><block_content pos:start="53:17" pos:end="53:38">

                <expr_stmt pos:start="53:17" pos:end="53:38"><expr pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:21">flags</name> <operator pos:start="53:23" pos:end="53:24">|=</operator> <name pos:start="53:26" pos:end="53:37">RTP_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:19">len_off</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <call pos:start="55:23" pos:end="55:35"><name pos:start="55:23" pos:end="55:31">avio_rb24</name><argument_list pos:start="55:32" pos:end="55:35">(<argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:33"><if pos:start="57:13" pos:end="59:33">if <condition pos:start="57:16" pos:end="57:30">(<expr pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:22">mflags</name> <operator pos:start="57:24" pos:end="57:24">&amp;</operator> <literal type="number" pos:start="57:26" pos:end="57:29">0x20</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:33"><block_content pos:start="59:17" pos:end="59:33">   <comment type="block" format="doxygen" pos:start="57:34" pos:end="57:59">/**&lt; relative timestamp */</comment>

                <expr_stmt pos:start="59:17" pos:end="59:33"><expr pos:start="59:17" pos:end="59:32"><call pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:25">avio_skip</name><argument_list pos:start="59:26" pos:end="59:32">(<argument pos:start="59:27" pos:end="59:28"><expr pos:start="59:27" pos:end="59:28"><name pos:start="59:27" pos:end="59:28">pb</name></expr></argument>, <argument pos:start="59:31" pos:end="59:31"><expr pos:start="59:31" pos:end="59:31"><literal type="number" pos:start="59:31" pos:end="59:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="61:13" pos:end="63:33"><if pos:start="61:13" pos:end="63:33">if <condition pos:start="61:16" pos:end="61:30">(<expr pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:22">mflags</name> <operator pos:start="61:24" pos:end="61:24">&amp;</operator> <literal type="number" pos:start="61:26" pos:end="61:29">0x10</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:33"><block_content pos:start="63:17" pos:end="63:33">   <comment type="block" format="doxygen" pos:start="61:34" pos:end="61:53">/**&lt; has duration */</comment>

                <expr_stmt pos:start="63:17" pos:end="63:33"><expr pos:start="63:17" pos:end="63:32"><call pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:25">avio_skip</name><argument_list pos:start="63:26" pos:end="63:32">(<argument pos:start="63:27" pos:end="63:28"><expr pos:start="63:27" pos:end="63:28"><name pos:start="63:27" pos:end="63:28">pb</name></expr></argument>, <argument pos:start="63:31" pos:end="63:31"><expr pos:start="63:31" pos:end="63:31"><literal type="number" pos:start="63:31" pos:end="63:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="65:13" pos:end="67:33"><if pos:start="65:13" pos:end="67:33">if <condition pos:start="65:16" pos:end="65:29">(<expr pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:22">mflags</name> <operator pos:start="65:24" pos:end="65:24">&amp;</operator> <literal type="number" pos:start="65:26" pos:end="65:28">0x8</literal></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:33"><block_content pos:start="67:17" pos:end="67:33">    <comment type="block" format="doxygen" pos:start="65:34" pos:end="65:56">/**&lt; has location ID */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:33"><expr pos:start="67:17" pos:end="67:32"><call pos:start="67:17" pos:end="67:32"><name pos:start="67:17" pos:end="67:25">avio_skip</name><argument_list pos:start="67:26" pos:end="67:32">(<argument pos:start="67:27" pos:end="67:28"><expr pos:start="67:27" pos:end="67:28"><name pos:start="67:27" pos:end="67:28">pb</name></expr></argument>, <argument pos:start="67:31" pos:end="67:31"><expr pos:start="67:31" pos:end="67:31"><literal type="number" pos:start="67:31" pos:end="67:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:15">off</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:31"><name pos:start="69:19" pos:end="69:27">avio_tell</name><argument_list pos:start="69:28" pos:end="69:31">(<argument pos:start="69:29" pos:end="69:30"><expr pos:start="69:29" pos:end="69:30"><name pos:start="69:29" pos:end="69:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="73:13" pos:end="156:13"><if pos:start="73:13" pos:end="122:13">if <condition pos:start="73:16" pos:end="73:33">(<expr pos:start="73:17" pos:end="73:32"><operator pos:start="73:17" pos:end="73:17">!</operator><operator pos:start="73:18" pos:end="73:18">(</operator><name pos:start="73:19" pos:end="73:24">mflags</name> <operator pos:start="73:26" pos:end="73:26">&amp;</operator> <literal type="number" pos:start="73:28" pos:end="73:31">0x40</literal><operator pos:start="73:32" pos:end="73:32">)</operator></expr>)</condition> <block pos:start="73:35" pos:end="122:13">{<block_content pos:start="87:17" pos:end="120:35">

                <comment type="block" format="doxygen" pos:start="75:17" pos:end="85:19">/**

                 * If 0x40 is not set, the len_off field specifies an offset

                 * of this packet's payload data in the complete (reassembled)

                 * ASF packet. This is used to spread one ASF packet over

                 * multiple RTP packets.

                 */</comment>

                <if_stmt pos:start="87:17" pos:end="97:17"><if pos:start="87:17" pos:end="97:17">if <condition pos:start="87:20" pos:end="87:69">(<expr pos:start="87:21" pos:end="87:68"><name pos:start="87:21" pos:end="87:31"><name pos:start="87:21" pos:end="87:23">asf</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:31">pktbuf</name></name> <operator pos:start="87:33" pos:end="87:34">&amp;&amp;</operator> <name pos:start="87:36" pos:end="87:42">len_off</name> <operator pos:start="87:44" pos:end="87:45">!=</operator> <call pos:start="87:47" pos:end="87:68"><name pos:start="87:47" pos:end="87:55">avio_tell</name><argument_list pos:start="87:56" pos:end="87:68">(<argument pos:start="87:57" pos:end="87:67"><expr pos:start="87:57" pos:end="87:67"><name pos:start="87:57" pos:end="87:67"><name pos:start="87:57" pos:end="87:59">asf</name><operator pos:start="87:60" pos:end="87:61">-&gt;</operator><name pos:start="87:62" pos:end="87:67">pktbuf</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:71" pos:end="97:17">{<block_content pos:start="89:21" pos:end="95:31">

                    <decl_stmt pos:start="89:21" pos:end="89:31"><decl pos:start="89:21" pos:end="89:30"><type pos:start="89:21" pos:end="89:29"><name pos:start="89:21" pos:end="89:27">uint8_t</name> <modifier pos:start="89:29" pos:end="89:29">*</modifier></type><name pos:start="89:30" pos:end="89:30">p</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:56"><expr pos:start="91:21" pos:end="91:55"><call pos:start="91:21" pos:end="91:55"><name pos:start="91:21" pos:end="91:38">avio_close_dyn_buf</name><argument_list pos:start="91:39" pos:end="91:55">(<argument pos:start="91:40" pos:end="91:50"><expr pos:start="91:40" pos:end="91:50"><name pos:start="91:40" pos:end="91:50"><name pos:start="91:40" pos:end="91:42">asf</name><operator pos:start="91:43" pos:end="91:44">-&gt;</operator><name pos:start="91:45" pos:end="91:50">pktbuf</name></name></expr></argument>, <argument pos:start="91:53" pos:end="91:54"><expr pos:start="91:53" pos:end="91:54"><operator pos:start="91:53" pos:end="91:53">&amp;</operator><name pos:start="91:54" pos:end="91:54">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:39"><expr pos:start="93:21" pos:end="93:38"><name pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:23">asf</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:31">pktbuf</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <name pos:start="93:35" pos:end="93:38">NULL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:31"><expr pos:start="95:21" pos:end="95:30"><call pos:start="95:21" pos:end="95:30"><name pos:start="95:21" pos:end="95:27">av_free</name><argument_list pos:start="95:28" pos:end="95:30">(<argument pos:start="95:29" pos:end="95:29"><expr pos:start="95:29" pos:end="95:29"><name pos:start="95:29" pos:end="95:29">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="99:17" pos:end="103:31"><if pos:start="99:17" pos:end="103:31">if <condition pos:start="99:20" pos:end="101:64">(<expr pos:start="99:21" pos:end="101:63"><operator pos:start="99:21" pos:end="99:21">!</operator><name pos:start="99:22" pos:end="99:28">len_off</name> <operator pos:start="99:30" pos:end="99:31">&amp;&amp;</operator> <operator pos:start="99:33" pos:end="99:33">!</operator><name pos:start="99:34" pos:end="99:44"><name pos:start="99:34" pos:end="99:36">asf</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:44">pktbuf</name></name> <operator pos:start="99:46" pos:end="99:47">&amp;&amp;</operator>

                    <operator pos:start="101:21" pos:end="101:21">(</operator><name pos:start="101:22" pos:end="101:24">res</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <call pos:start="101:28" pos:end="101:58"><name pos:start="101:28" pos:end="101:44">avio_open_dyn_buf</name><argument_list pos:start="101:45" pos:end="101:58">(<argument pos:start="101:46" pos:end="101:57"><expr pos:start="101:46" pos:end="101:57"><operator pos:start="101:46" pos:end="101:46">&amp;</operator><name pos:start="101:47" pos:end="101:57"><name pos:start="101:47" pos:end="101:49">asf</name><operator pos:start="101:50" pos:end="101:51">-&gt;</operator><name pos:start="101:52" pos:end="101:57">pktbuf</name></name></expr></argument>)</argument_list></call><operator pos:start="101:59" pos:end="101:59">)</operator> <operator pos:start="101:61" pos:end="101:61">&lt;</operator> <literal type="number" pos:start="101:63" pos:end="101:63">0</literal></expr>)</condition><block type="pseudo" pos:start="103:21" pos:end="103:31"><block_content pos:start="103:21" pos:end="103:31">

                    <return pos:start="103:21" pos:end="103:31">return <expr pos:start="103:28" pos:end="103:30"><name pos:start="103:28" pos:end="103:30">res</name></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="105:17" pos:end="107:40"><if pos:start="105:17" pos:end="107:40">if <condition pos:start="105:20" pos:end="105:33">(<expr pos:start="105:21" pos:end="105:32"><operator pos:start="105:21" pos:end="105:21">!</operator><name pos:start="105:22" pos:end="105:32"><name pos:start="105:22" pos:end="105:24">asf</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:32">pktbuf</name></name></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:40"><block_content pos:start="107:21" pos:end="107:40">

                    <return pos:start="107:21" pos:end="107:40">return <expr pos:start="107:28" pos:end="107:39"><call pos:start="107:28" pos:end="107:39"><name pos:start="107:28" pos:end="107:34">AVERROR</name><argument_list pos:start="107:35" pos:end="107:39">(<argument pos:start="107:36" pos:end="107:38"><expr pos:start="107:36" pos:end="107:38"><name pos:start="107:36" pos:end="107:38">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="111:17" pos:end="111:62"><expr pos:start="111:17" pos:end="111:61"><call pos:start="111:17" pos:end="111:61"><name pos:start="111:17" pos:end="111:26">avio_write</name><argument_list pos:start="111:27" pos:end="111:61">(<argument pos:start="111:28" pos:end="111:38"><expr pos:start="111:28" pos:end="111:38"><name pos:start="111:28" pos:end="111:38"><name pos:start="111:28" pos:end="111:30">asf</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:38">pktbuf</name></name></expr></argument>, <argument pos:start="111:41" pos:end="111:49"><expr pos:start="111:41" pos:end="111:49"><name pos:start="111:41" pos:end="111:43">buf</name> <operator pos:start="111:45" pos:end="111:45">+</operator> <name pos:start="111:47" pos:end="111:49">off</name></expr></argument>, <argument pos:start="111:52" pos:end="111:60"><expr pos:start="111:52" pos:end="111:60"><name pos:start="111:52" pos:end="111:54">len</name> <operator pos:start="111:56" pos:end="111:56">-</operator> <name pos:start="111:58" pos:end="111:60">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:41"><expr pos:start="113:17" pos:end="113:40"><call pos:start="113:17" pos:end="113:40"><name pos:start="113:17" pos:end="113:25">avio_skip</name><argument_list pos:start="113:26" pos:end="113:40">(<argument pos:start="113:27" pos:end="113:28"><expr pos:start="113:27" pos:end="113:28"><name pos:start="113:27" pos:end="113:28">pb</name></expr></argument>, <argument pos:start="113:31" pos:end="113:39"><expr pos:start="113:31" pos:end="113:39"><name pos:start="113:31" pos:end="113:33">len</name> <operator pos:start="113:35" pos:end="113:35">-</operator> <name pos:start="113:37" pos:end="113:39">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="115:17" pos:end="118:73"><if pos:start="115:17" pos:end="118:73">if <condition pos:start="115:20" pos:end="115:47">(<expr pos:start="115:21" pos:end="115:46"><operator pos:start="115:21" pos:end="115:21">!</operator><operator pos:start="115:22" pos:end="115:22">(</operator><name pos:start="115:23" pos:end="115:27">flags</name> <operator pos:start="115:29" pos:end="115:29">&amp;</operator> <name pos:start="115:31" pos:end="115:45">RTP_FLAG_MARKER</name><operator pos:start="115:46" pos:end="115:46">)</operator></expr>)</condition><block type="pseudo" pos:start="118:17" pos:end="118:73"><block_content pos:start="118:17" pos:end="118:73">


                <expr_stmt pos:start="118:17" pos:end="118:73"><expr pos:start="118:17" pos:end="118:72"><name pos:start="118:17" pos:end="118:23">out_len</name>     <operator pos:start="118:29" pos:end="118:29">=</operator> <call pos:start="118:31" pos:end="118:72"><name pos:start="118:31" pos:end="118:48">avio_close_dyn_buf</name><argument_list pos:start="118:49" pos:end="118:72">(<argument pos:start="118:50" pos:end="118:60"><expr pos:start="118:50" pos:end="118:60"><name pos:start="118:50" pos:end="118:60"><name pos:start="118:50" pos:end="118:52">asf</name><operator pos:start="118:53" pos:end="118:54">-&gt;</operator><name pos:start="118:55" pos:end="118:60">pktbuf</name></name></expr></argument>, <argument pos:start="118:63" pos:end="118:71"><expr pos:start="118:63" pos:end="118:71"><operator pos:start="118:63" pos:end="118:63">&amp;</operator><name pos:start="118:64" pos:end="118:71"><name pos:start="118:64" pos:end="118:66">asf</name><operator pos:start="118:67" pos:end="118:68">-&gt;</operator><name pos:start="118:69" pos:end="118:71">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="120:17" pos:end="120:35"><expr pos:start="120:17" pos:end="120:34"><name pos:start="120:17" pos:end="120:27"><name pos:start="120:17" pos:end="120:19">asf</name><operator pos:start="120:20" pos:end="120:21">-&gt;</operator><name pos:start="120:22" pos:end="120:27">pktbuf</name></name> <operator pos:start="120:29" pos:end="120:29">=</operator> <name pos:start="120:31" pos:end="120:34">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="122:15" pos:end="156:13">else <block pos:start="122:20" pos:end="156:13">{<block_content pos:start="140:17" pos:end="154:39">

                <comment type="block" format="doxygen" pos:start="124:17" pos:end="136:19">/**

                 * If 0x40 is set, the len_off field specifies the length of

                 * the next ASF packet that can be read from this payload

                 * data alone. This is commonly the same as the payload size,

                 * but could be less in case of packet splitting (i.e.

                 * multiple ASF packets in one RTP packet).

                 */</comment>



                <decl_stmt pos:start="140:17" pos:end="140:56"><decl pos:start="140:17" pos:end="140:55"><type pos:start="140:17" pos:end="140:19"><name pos:start="140:17" pos:end="140:19">int</name></type> <name pos:start="140:21" pos:end="140:27">cur_len</name> <init pos:start="140:29" pos:end="140:55">= <expr pos:start="140:31" pos:end="140:55"><name pos:start="140:31" pos:end="140:39">start_off</name> <operator pos:start="140:41" pos:end="140:41">+</operator> <name pos:start="140:43" pos:end="140:49">len_off</name> <operator pos:start="140:51" pos:end="140:51">-</operator> <name pos:start="140:53" pos:end="140:55">off</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="142:17" pos:end="142:39"><decl pos:start="142:17" pos:end="142:38"><type pos:start="142:17" pos:end="142:19"><name pos:start="142:17" pos:end="142:19">int</name></type> <name pos:start="142:21" pos:end="142:28">prev_len</name> <init pos:start="142:30" pos:end="142:38">= <expr pos:start="142:32" pos:end="142:38"><name pos:start="142:32" pos:end="142:38">out_len</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="144:17" pos:end="144:35"><expr pos:start="144:17" pos:end="144:34"><name pos:start="144:17" pos:end="144:23">out_len</name> <operator pos:start="144:25" pos:end="144:26">+=</operator> <name pos:start="144:28" pos:end="144:34">cur_len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="146:17" pos:end="146:57"><expr pos:start="146:17" pos:end="146:56"><name pos:start="146:17" pos:end="146:24"><name pos:start="146:17" pos:end="146:19">asf</name><operator pos:start="146:20" pos:end="146:21">-&gt;</operator><name pos:start="146:22" pos:end="146:24">buf</name></name> <operator pos:start="146:26" pos:end="146:26">=</operator> <call pos:start="146:28" pos:end="146:56"><name pos:start="146:28" pos:end="146:37">av_realloc</name><argument_list pos:start="146:38" pos:end="146:56">(<argument pos:start="146:39" pos:end="146:46"><expr pos:start="146:39" pos:end="146:46"><name pos:start="146:39" pos:end="146:46"><name pos:start="146:39" pos:end="146:41">asf</name><operator pos:start="146:42" pos:end="146:43">-&gt;</operator><name pos:start="146:44" pos:end="146:46">buf</name></name></expr></argument>, <argument pos:start="146:49" pos:end="146:55"><expr pos:start="146:49" pos:end="146:55"><name pos:start="146:49" pos:end="146:55">out_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="150:17" pos:end="152:50"><expr pos:start="150:17" pos:end="152:49"><call pos:start="150:17" pos:end="152:49"><name pos:start="150:17" pos:end="150:22">memcpy</name><argument_list pos:start="150:23" pos:end="152:49">(<argument pos:start="150:24" pos:end="150:42"><expr pos:start="150:24" pos:end="150:42"><name pos:start="150:24" pos:end="150:31"><name pos:start="150:24" pos:end="150:26">asf</name><operator pos:start="150:27" pos:end="150:28">-&gt;</operator><name pos:start="150:29" pos:end="150:31">buf</name></name> <operator pos:start="150:33" pos:end="150:33">+</operator> <name pos:start="150:35" pos:end="150:42">prev_len</name></expr></argument>, <argument pos:start="150:45" pos:end="150:53"><expr pos:start="150:45" pos:end="150:53"><name pos:start="150:45" pos:end="150:47">buf</name> <operator pos:start="150:49" pos:end="150:49">+</operator> <name pos:start="150:51" pos:end="150:53">off</name></expr></argument>,

                       <argument pos:start="152:24" pos:end="152:48"><expr pos:start="152:24" pos:end="152:48"><call pos:start="152:24" pos:end="152:48"><name pos:start="152:24" pos:end="152:28">FFMIN</name><argument_list pos:start="152:29" pos:end="152:48">(<argument pos:start="152:30" pos:end="152:36"><expr pos:start="152:30" pos:end="152:36"><name pos:start="152:30" pos:end="152:36">cur_len</name></expr></argument>, <argument pos:start="152:39" pos:end="152:47"><expr pos:start="152:39" pos:end="152:47"><name pos:start="152:39" pos:end="152:41">len</name> <operator pos:start="152:43" pos:end="152:43">-</operator> <name pos:start="152:45" pos:end="152:47">off</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="154:17" pos:end="154:39"><expr pos:start="154:17" pos:end="154:38"><call pos:start="154:17" pos:end="154:38"><name pos:start="154:17" pos:end="154:25">avio_skip</name><argument_list pos:start="154:26" pos:end="154:38">(<argument pos:start="154:27" pos:end="154:28"><expr pos:start="154:27" pos:end="154:28"><name pos:start="154:27" pos:end="154:28">pb</name></expr></argument>, <argument pos:start="154:31" pos:end="154:37"><expr pos:start="154:31" pos:end="154:37"><name pos:start="154:31" pos:end="154:37">cur_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>



        <expr_stmt pos:start="162:9" pos:end="162:47"><expr pos:start="162:9" pos:end="162:46"><call pos:start="162:9" pos:end="162:46"><name pos:start="162:9" pos:end="162:23">init_packetizer</name><argument_list pos:start="162:24" pos:end="162:46">(<argument pos:start="162:25" pos:end="162:26"><expr pos:start="162:25" pos:end="162:26"><name pos:start="162:25" pos:end="162:26">pb</name></expr></argument>, <argument pos:start="162:29" pos:end="162:36"><expr pos:start="162:29" pos:end="162:36"><name pos:start="162:29" pos:end="162:36"><name pos:start="162:29" pos:end="162:31">asf</name><operator pos:start="162:32" pos:end="162:33">-&gt;</operator><name pos:start="162:34" pos:end="162:36">buf</name></name></expr></argument>, <argument pos:start="162:39" pos:end="162:45"><expr pos:start="162:39" pos:end="162:45"><name pos:start="162:39" pos:end="162:45">out_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="164:9" pos:end="164:34"><expr pos:start="164:9" pos:end="164:33"><name pos:start="164:9" pos:end="164:15"><name pos:start="164:9" pos:end="164:10">pb</name><operator pos:start="164:11" pos:end="164:12">-&gt;</operator><name pos:start="164:13" pos:end="164:15">pos</name></name> <operator pos:start="164:17" pos:end="164:18">+=</operator> <name pos:start="164:20" pos:end="164:33"><name pos:start="164:20" pos:end="164:21">rt</name><operator pos:start="164:22" pos:end="164:23">-&gt;</operator><name pos:start="164:24" pos:end="164:33">asf_pb_pos</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="166:9" pos:end="166:28"><expr pos:start="166:9" pos:end="166:27"><name pos:start="166:9" pos:end="166:23"><name pos:start="166:9" pos:end="166:10">pb</name><operator pos:start="166:11" pos:end="166:12">-&gt;</operator><name pos:start="166:13" pos:end="166:23">eof_reached</name></name> <operator pos:start="166:25" pos:end="166:25">=</operator> <literal type="number" pos:start="166:27" pos:end="166:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="168:9" pos:end="168:29"><expr pos:start="168:9" pos:end="168:28"><name pos:start="168:9" pos:end="168:23"><name pos:start="168:9" pos:end="168:10">rt</name><operator pos:start="168:11" pos:end="168:12">-&gt;</operator><name pos:start="168:13" pos:end="168:19">asf_ctx</name><operator pos:start="168:20" pos:end="168:21">-&gt;</operator><name pos:start="168:22" pos:end="168:23">pb</name></name> <operator pos:start="168:25" pos:end="168:25">=</operator> <name pos:start="168:27" pos:end="168:28">pb</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <for pos:start="174:5" pos:end="202:5">for <control pos:start="174:9" pos:end="174:12">(<init pos:start="174:10" pos:end="174:10">;</init><condition pos:start="174:11" pos:end="174:11">;</condition><incr/>)</control> <block pos:start="174:14" pos:end="202:5">{<block_content pos:start="176:9" pos:end="200:28">

        <decl_stmt pos:start="176:9" pos:end="176:14"><decl pos:start="176:9" pos:end="176:13"><type pos:start="176:9" pos:end="176:11"><name pos:start="176:9" pos:end="176:11">int</name></type> <name pos:start="176:13" pos:end="176:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="180:9" pos:end="180:47"><expr pos:start="180:9" pos:end="180:46"><name pos:start="180:9" pos:end="180:11">res</name> <operator pos:start="180:13" pos:end="180:13">=</operator> <call pos:start="180:15" pos:end="180:46"><name pos:start="180:15" pos:end="180:28">av_read_packet</name><argument_list pos:start="180:29" pos:end="180:46">(<argument pos:start="180:30" pos:end="180:40"><expr pos:start="180:30" pos:end="180:40"><name pos:start="180:30" pos:end="180:40"><name pos:start="180:30" pos:end="180:31">rt</name><operator pos:start="180:32" pos:end="180:33">-&gt;</operator><name pos:start="180:34" pos:end="180:40">asf_ctx</name></name></expr></argument>, <argument pos:start="180:43" pos:end="180:45"><expr pos:start="180:43" pos:end="180:45"><name pos:start="180:43" pos:end="180:45">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="182:9" pos:end="182:39"><expr pos:start="182:9" pos:end="182:38"><name pos:start="182:9" pos:end="182:22"><name pos:start="182:9" pos:end="182:10">rt</name><operator pos:start="182:11" pos:end="182:12">-&gt;</operator><name pos:start="182:13" pos:end="182:22">asf_pb_pos</name></name> <operator pos:start="182:24" pos:end="182:24">=</operator> <call pos:start="182:26" pos:end="182:38"><name pos:start="182:26" pos:end="182:34">avio_tell</name><argument_list pos:start="182:35" pos:end="182:38">(<argument pos:start="182:36" pos:end="182:37"><expr pos:start="182:36" pos:end="182:37"><name pos:start="182:36" pos:end="182:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="184:9" pos:end="186:18"><if pos:start="184:9" pos:end="186:18">if <condition pos:start="184:12" pos:end="184:21">(<expr pos:start="184:13" pos:end="184:20"><name pos:start="184:13" pos:end="184:15">res</name> <operator pos:start="184:17" pos:end="184:18">!=</operator> <literal type="number" pos:start="184:20" pos:end="184:20">0</literal></expr>)</condition><block type="pseudo" pos:start="186:13" pos:end="186:18"><block_content pos:start="186:13" pos:end="186:18">

            <break pos:start="186:13" pos:end="186:18">break;</break></block_content></block></if></if_stmt>

        <for pos:start="188:9" pos:end="198:9">for <control pos:start="188:13" pos:end="188:43">(<init pos:start="188:14" pos:end="188:19"><expr pos:start="188:14" pos:end="188:18"><name pos:start="188:14" pos:end="188:14">i</name> <operator pos:start="188:16" pos:end="188:16">=</operator> <literal type="number" pos:start="188:18" pos:end="188:18">0</literal></expr>;</init> <condition pos:start="188:21" pos:end="188:38"><expr pos:start="188:21" pos:end="188:37"><name pos:start="188:21" pos:end="188:21">i</name> <operator pos:start="188:23" pos:end="188:23">&lt;</operator> <name pos:start="188:25" pos:end="188:37"><name pos:start="188:25" pos:end="188:25">s</name><operator pos:start="188:26" pos:end="188:27">-&gt;</operator><name pos:start="188:28" pos:end="188:37">nb_streams</name></name></expr>;</condition> <incr pos:start="188:40" pos:end="188:42"><expr pos:start="188:40" pos:end="188:42"><name pos:start="188:40" pos:end="188:40">i</name><operator pos:start="188:41" pos:end="188:42">++</operator></expr></incr>)</control> <block pos:start="188:45" pos:end="198:9">{<block_content pos:start="190:13" pos:end="196:13">

            <if_stmt pos:start="190:13" pos:end="196:13"><if pos:start="190:13" pos:end="196:13">if <condition pos:start="190:16" pos:end="190:81">(<expr pos:start="190:17" pos:end="190:80"><name pos:start="190:17" pos:end="190:29"><name pos:start="190:17" pos:end="190:17">s</name><operator pos:start="190:18" pos:end="190:19">-&gt;</operator><name pos:start="190:20" pos:end="190:26">streams</name><index pos:start="190:27" pos:end="190:29">[<expr pos:start="190:28" pos:end="190:28"><name pos:start="190:28" pos:end="190:28">i</name></expr>]</index></name><operator pos:start="190:30" pos:end="190:31">-&gt;</operator><name pos:start="190:32" pos:end="190:33">id</name> <operator pos:start="190:35" pos:end="190:36">==</operator> <name pos:start="190:38" pos:end="190:76"><name pos:start="190:38" pos:end="190:39">rt</name><operator pos:start="190:40" pos:end="190:41">-&gt;</operator><name pos:start="190:42" pos:end="190:48">asf_ctx</name><operator pos:start="190:49" pos:end="190:50">-&gt;</operator><name pos:start="190:51" pos:end="190:57">streams</name><index pos:start="190:58" pos:end="190:76">[<expr pos:start="190:59" pos:end="190:75"><name pos:start="190:59" pos:end="190:75"><name pos:start="190:59" pos:end="190:61">pkt</name><operator pos:start="190:62" pos:end="190:63">-&gt;</operator><name pos:start="190:64" pos:end="190:75">stream_index</name></name></expr>]</index></name><operator pos:start="190:77" pos:end="190:78">-&gt;</operator><name pos:start="190:79" pos:end="190:80">id</name></expr>)</condition> <block pos:start="190:83" pos:end="196:13">{<block_content pos:start="192:17" pos:end="194:25">

                <expr_stmt pos:start="192:17" pos:end="192:38"><expr pos:start="192:17" pos:end="192:37"><name pos:start="192:17" pos:end="192:33"><name pos:start="192:17" pos:end="192:19">pkt</name><operator pos:start="192:20" pos:end="192:21">-&gt;</operator><name pos:start="192:22" pos:end="192:33">stream_index</name></name> <operator pos:start="192:35" pos:end="192:35">=</operator> <name pos:start="192:37" pos:end="192:37">i</name></expr>;</expr_stmt>

                <return pos:start="194:17" pos:end="194:25">return <expr pos:start="194:24" pos:end="194:24"><literal type="number" pos:start="194:24" pos:end="194:24">1</literal></expr>;</return> <comment type="line" pos:start="194:27" pos:end="194:59">// FIXME: return 0 if last packet</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="200:9" pos:end="200:28"><expr pos:start="200:9" pos:end="200:27"><call pos:start="200:9" pos:end="200:27"><name pos:start="200:9" pos:end="200:22">av_free_packet</name><argument_list pos:start="200:23" pos:end="200:27">(<argument pos:start="200:24" pos:end="200:26"><expr pos:start="200:24" pos:end="200:26"><name pos:start="200:24" pos:end="200:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="206:5" pos:end="206:31">return <expr pos:start="206:12" pos:end="206:30"><ternary pos:start="206:12" pos:end="206:30"><condition pos:start="206:12" pos:end="206:21"><expr pos:start="206:12" pos:end="206:19"><name pos:start="206:12" pos:end="206:14">res</name> <operator pos:start="206:16" pos:end="206:17">==</operator> <literal type="number" pos:start="206:19" pos:end="206:19">1</literal></expr> ?</condition><then pos:start="206:23" pos:end="206:24"> <expr pos:start="206:23" pos:end="206:24"><operator pos:start="206:23" pos:end="206:23">-</operator><literal type="number" pos:start="206:24" pos:end="206:24">1</literal></expr> </then><else pos:start="206:26" pos:end="206:30">: <expr pos:start="206:28" pos:end="206:30"><name pos:start="206:28" pos:end="206:30">res</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function></unit>
