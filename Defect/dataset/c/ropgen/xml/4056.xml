<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4056.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_slice</name><parameter_list pos:start="1:24" pos:end="1:53">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">c</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">FFV1Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">fs</name> <init pos:start="5:21" pos:end="5:35">= <expr pos:start="5:23" pos:end="5:35"><operator pos:start="5:23" pos:end="5:23">*</operator><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:28">void</name> <operator pos:start="5:30" pos:end="5:30">*</operator><operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:35">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">FFV1Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">f</name>  <init pos:start="7:21" pos:end="7:42">= <expr pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:24">fs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">width</name></decl>, <decl pos:start="9:16" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:21">height</name></decl>, <decl pos:start="9:24" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:24">x</name></decl>, <decl pos:start="9:27" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:27">y</name></decl>, <decl pos:start="9:30" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:32">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="15:23"><decl pos:start="11:5" pos:end="15:22"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:16">ps</name> <init pos:start="11:18" pos:end="15:22">= <expr pos:start="11:20" pos:end="15:22"><ternary pos:start="11:20" pos:end="15:22"><condition pos:start="11:20" pos:end="13:20"><expr pos:start="11:20" pos:end="11:84"><operator pos:start="11:20" pos:end="11:20">(</operator><call pos:start="11:21" pos:end="11:51"><name pos:start="11:21" pos:end="11:39">av_pix_fmt_desc_get</name><argument_list pos:start="11:40" pos:end="11:51">(<argument pos:start="11:41" pos:end="11:50"><expr pos:start="11:41" pos:end="11:50"><name pos:start="11:41" pos:end="11:50"><name pos:start="11:41" pos:end="11:41">c</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:50">pix_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="11:52" pos:end="11:53">-&gt;</operator><name pos:start="11:54" pos:end="11:58">flags</name> <operator pos:start="11:60" pos:end="11:60">&amp;</operator> <name pos:start="11:62" pos:end="11:83">AV_PIX_FMT_FLAG_PLANAR</name><operator pos:start="11:84" pos:end="11:84">)</operator></expr>

                   ?</condition><then pos:start="13:22" pos:end="13:53"> <expr pos:start="13:22" pos:end="13:53"><operator pos:start="13:22" pos:end="13:22">(</operator><name pos:start="13:23" pos:end="13:44"><name pos:start="13:23" pos:end="13:23">c</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:44">bits_per_raw_sample</name></name> <operator pos:start="13:46" pos:end="13:46">&gt;</operator> <literal type="number" pos:start="13:48" pos:end="13:48">8</literal><operator pos:start="13:49" pos:end="13:49">)</operator> <operator pos:start="13:51" pos:end="13:51">+</operator> <literal type="number" pos:start="13:53" pos:end="13:53">1</literal></expr>

                   </then><else pos:start="15:20" pos:end="15:22">: <expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier><specifier pos:start="17:14" pos:end="17:18">const</specifier></type> <name pos:start="17:20" pos:end="17:20">p</name> <init pos:start="17:22" pos:end="17:29">= <expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:24">f</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:29">cur</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:9">f</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:18">version</name></name> <operator pos:start="21:20" pos:end="21:20">&gt;</operator> <literal type="number" pos:start="21:22" pos:end="21:22">2</literal></expr>)</condition> <block pos:start="21:25" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:43">(<expr pos:start="23:13" pos:end="23:42"><call pos:start="23:13" pos:end="23:38"><name pos:start="23:13" pos:end="23:31">decode_slice_header</name><argument_list pos:start="23:32" pos:end="23:38">(<argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><name pos:start="23:33" pos:end="23:33">f</name></expr></argument>, <argument pos:start="23:36" pos:end="23:37"><expr pos:start="23:36" pos:end="23:37"><name pos:start="23:36" pos:end="23:37">fs</name></expr></argument>)</argument_list></call> <operator pos:start="23:40" pos:end="23:40">&lt;</operator> <literal type="number" pos:start="23:42" pos:end="23:42">0</literal></expr>)</condition> <block pos:start="23:45" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:39">

            <expr_stmt pos:start="25:13" pos:end="25:34"><expr pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:14">fs</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:29">slice_damaged</name></name> <operator pos:start="25:31" pos:end="25:31">=</operator> <literal type="number" pos:start="25:33" pos:end="25:33">1</literal></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:39">return <expr pos:start="27:20" pos:end="27:38"><name pos:start="27:20" pos:end="27:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:19"><if pos:start="33:5" pos:end="35:19">if <condition pos:start="33:8" pos:end="33:49">(<expr pos:start="33:9" pos:end="33:48"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:12">ret</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:43"><name pos:start="33:16" pos:end="33:36">ffv1_init_slice_state</name><argument_list pos:start="33:37" pos:end="33:43">(<argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><name pos:start="33:38" pos:end="33:38">f</name></expr></argument>, <argument pos:start="33:41" pos:end="33:42"><expr pos:start="33:41" pos:end="33:42"><name pos:start="33:41" pos:end="33:42">fs</name></expr></argument>)</argument_list></call><operator pos:start="33:44" pos:end="33:44">)</operator> <operator pos:start="33:46" pos:end="33:46">&lt;</operator> <literal type="number" pos:start="33:48" pos:end="33:48">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:19"><block_content pos:start="35:9" pos:end="35:19">

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:38"><if pos:start="37:5" pos:end="39:38">if <condition pos:start="37:8" pos:end="37:26">(<expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:9">f</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:14">cur</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:25">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:38"><block_content pos:start="39:9" pos:end="39:38">

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><call pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:30">ffv1_clear_slice_state</name><argument_list pos:start="39:31" pos:end="39:37">(<argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">f</name></expr></argument>, <argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:9">width</name>  <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:28"><name pos:start="41:14" pos:end="41:15">fs</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:28">slice_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:10">height</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <name pos:start="43:14" pos:end="43:29"><name pos:start="43:14" pos:end="43:15">fs</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:29">slice_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:25"><expr pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:5">x</name>      <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:24"><name pos:start="45:14" pos:end="45:15">fs</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:24">slice_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:5">y</name>      <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:24"><name pos:start="47:14" pos:end="47:15">fs</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:24">slice_y</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="65:5"><if pos:start="51:5" pos:end="65:5">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:15"><name pos:start="51:10" pos:end="51:11">fs</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:15">ac</name></name></expr>)</condition> <block pos:start="51:18" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:47">

        <if_stmt pos:start="53:9" pos:end="55:49"><if pos:start="53:9" pos:end="55:49">if <condition pos:start="53:12" pos:end="53:70">(<expr pos:start="53:13" pos:end="53:69"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:13">f</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:22">version</name></name> <operator pos:start="53:24" pos:end="53:25">==</operator> <literal type="number" pos:start="53:27" pos:end="53:27">3</literal> <operator pos:start="53:29" pos:end="53:30">&amp;&amp;</operator> <name pos:start="53:32" pos:end="53:47"><name pos:start="53:32" pos:end="53:32">f</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:47">minor_version</name></name> <operator pos:start="53:49" pos:end="53:49">&gt;</operator> <literal type="number" pos:start="53:51" pos:end="53:51">1</literal> <operator pos:start="53:53" pos:end="53:54">||</operator> <name pos:start="53:56" pos:end="53:65"><name pos:start="53:56" pos:end="53:56">f</name><operator pos:start="53:57" pos:end="53:58">-&gt;</operator><name pos:start="53:59" pos:end="53:65">version</name></name> <operator pos:start="53:67" pos:end="53:67">&gt;</operator> <literal type="number" pos:start="53:69" pos:end="53:69">3</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:49"><block_content pos:start="55:13" pos:end="55:49">

            <macro pos:start="55:13" pos:end="55:48"><name pos:start="55:13" pos:end="55:19">get_rac</name><argument_list pos:start="55:20" pos:end="55:48">(<argument pos:start="55:21" pos:end="55:26">&amp;fs-&gt;c</argument>, <argument pos:start="55:29" pos:end="55:47">(uint8_t[]) { <literal type="number" pos:start="55:43" pos:end="55:45">129</literal> }</argument>)</argument_list></macro><empty_stmt pos:start="55:49" pos:end="55:49">;</empty_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:109"><expr pos:start="57:9" pos:end="57:108"><name pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:10">fs</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:25">ac_byte_count</name></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <ternary pos:start="57:29" pos:end="57:108"><condition pos:start="57:29" pos:end="57:58"><expr pos:start="57:29" pos:end="57:56"><name pos:start="57:29" pos:end="57:38"><name pos:start="57:29" pos:end="57:29">f</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:38">version</name></name> <operator pos:start="57:40" pos:end="57:40">&gt;</operator> <literal type="number" pos:start="57:42" pos:end="57:42">2</literal> <operator pos:start="57:44" pos:end="57:45">||</operator> <operator pos:start="57:47" pos:end="57:47">(</operator><operator pos:start="57:48" pos:end="57:48">!</operator><name pos:start="57:49" pos:end="57:49">x</name> <operator pos:start="57:51" pos:end="57:52">&amp;&amp;</operator> <operator pos:start="57:54" pos:end="57:54">!</operator><name pos:start="57:55" pos:end="57:55">y</name><operator pos:start="57:56" pos:end="57:56">)</operator></expr> ?</condition><then pos:start="57:60" pos:end="57:104"> <expr pos:start="57:60" pos:end="57:104"><name pos:start="57:60" pos:end="57:75"><name pos:start="57:60" pos:end="57:61">fs</name><operator pos:start="57:62" pos:end="57:63">-&gt;</operator><name pos:start="57:64" pos:end="57:64">c</name><operator pos:start="57:65" pos:end="57:65">.</operator><name pos:start="57:66" pos:end="57:75">bytestream</name></name> <operator pos:start="57:77" pos:end="57:77">-</operator> <name pos:start="57:79" pos:end="57:100"><name pos:start="57:79" pos:end="57:80">fs</name><operator pos:start="57:81" pos:end="57:82">-&gt;</operator><name pos:start="57:83" pos:end="57:83">c</name><operator pos:start="57:84" pos:end="57:84">.</operator><name pos:start="57:85" pos:end="57:100">bytestream_start</name></name> <operator pos:start="57:102" pos:end="57:102">-</operator> <literal type="number" pos:start="57:104" pos:end="57:104">1</literal></expr> </then><else pos:start="57:106" pos:end="57:108">: <expr pos:start="57:108" pos:end="57:108"><literal type="number" pos:start="57:108" pos:end="57:108">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="63:47"><expr pos:start="59:9" pos:end="63:46"><call pos:start="59:9" pos:end="63:46"><name pos:start="59:9" pos:end="59:21">init_get_bits</name><argument_list pos:start="59:22" pos:end="63:46">(<argument pos:start="59:23" pos:end="59:29"><expr pos:start="59:23" pos:end="59:29"><operator pos:start="59:23" pos:end="59:23">&amp;</operator><name pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:25">fs</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:29">gb</name></name></expr></argument>, <argument pos:start="59:32" pos:end="59:73"><expr pos:start="59:32" pos:end="59:73"><name pos:start="59:32" pos:end="59:53"><name pos:start="59:32" pos:end="59:33">fs</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:36">c</name><operator pos:start="59:37" pos:end="59:37">.</operator><name pos:start="59:38" pos:end="59:53">bytestream_start</name></name> <operator pos:start="59:55" pos:end="59:55">+</operator> <name pos:start="59:57" pos:end="59:73"><name pos:start="59:57" pos:end="59:58">fs</name><operator pos:start="59:59" pos:end="59:60">-&gt;</operator><name pos:start="59:61" pos:end="59:73">ac_byte_count</name></name></expr></argument>,

                      <argument pos:start="61:23" pos:end="63:45"><expr pos:start="61:23" pos:end="63:45"><operator pos:start="61:23" pos:end="61:23">(</operator><name pos:start="61:24" pos:end="61:43"><name pos:start="61:24" pos:end="61:25">fs</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:28">c</name><operator pos:start="61:29" pos:end="61:29">.</operator><name pos:start="61:30" pos:end="61:43">bytestream_end</name></name> <operator pos:start="61:45" pos:end="61:45">-</operator> <name pos:start="61:47" pos:end="61:68"><name pos:start="61:47" pos:end="61:48">fs</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:51">c</name><operator pos:start="61:52" pos:end="61:52">.</operator><name pos:start="61:53" pos:end="61:68">bytestream_start</name></name> <operator pos:start="61:70" pos:end="61:70">-</operator>

                       <name pos:start="63:24" pos:end="63:40"><name pos:start="63:24" pos:end="63:25">fs</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:40">ac_byte_count</name></name><operator pos:start="63:41" pos:end="63:41">)</operator> <operator pos:start="63:43" pos:end="63:43">*</operator> <literal type="number" pos:start="63:45" pos:end="63:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><call pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:14">av_assert1</name><argument_list pos:start="69:15" pos:end="69:31">(<argument pos:start="69:16" pos:end="69:30"><expr pos:start="69:16" pos:end="69:30"><name pos:start="69:16" pos:end="69:20">width</name> <operator pos:start="69:22" pos:end="69:23">&amp;&amp;</operator> <name pos:start="69:25" pos:end="69:30">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="123:5"><if pos:start="71:5" pos:end="113:5">if <condition pos:start="71:8" pos:end="71:27">(<expr pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:9">f</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:21">colorspace</name></name> <operator pos:start="71:23" pos:end="71:24">==</operator> <literal type="number" pos:start="71:26" pos:end="71:26">0</literal></expr>)</condition> <block pos:start="71:29" pos:end="113:5">{<block_content pos:start="73:9" pos:end="111:28">

        <decl_stmt pos:start="73:9" pos:end="73:67"><decl pos:start="73:9" pos:end="73:66"><type pos:start="73:9" pos:end="73:17"><specifier pos:start="73:9" pos:end="73:13">const</specifier> <name pos:start="73:15" pos:end="73:17">int</name></type> <name pos:start="73:19" pos:end="73:30">chroma_width</name>  <init pos:start="73:33" pos:end="73:66">= <expr pos:start="73:35" pos:end="73:66"><operator pos:start="73:35" pos:end="73:35">-</operator><operator pos:start="73:36" pos:end="73:36">(</operator><operator pos:start="73:37" pos:end="73:37">(</operator><operator pos:start="73:38" pos:end="73:38">-</operator><name pos:start="73:39" pos:end="73:43">width</name><operator pos:start="73:44" pos:end="73:44">)</operator> <operator pos:start="73:46" pos:end="73:47">&gt;&gt;</operator> <name pos:start="73:49" pos:end="73:65"><name pos:start="73:49" pos:end="73:49">f</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:65">chroma_h_shift</name></name><operator pos:start="73:66" pos:end="73:66">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:68"><decl pos:start="75:9" pos:end="75:67"><type pos:start="75:9" pos:end="75:17"><specifier pos:start="75:9" pos:end="75:13">const</specifier> <name pos:start="75:15" pos:end="75:17">int</name></type> <name pos:start="75:19" pos:end="75:31">chroma_height</name> <init pos:start="75:33" pos:end="75:67">= <expr pos:start="75:35" pos:end="75:67"><operator pos:start="75:35" pos:end="75:35">-</operator><operator pos:start="75:36" pos:end="75:36">(</operator><operator pos:start="75:37" pos:end="75:37">(</operator><operator pos:start="75:38" pos:end="75:38">-</operator><name pos:start="75:39" pos:end="75:44">height</name><operator pos:start="75:45" pos:end="75:45">)</operator> <operator pos:start="75:47" pos:end="75:48">&gt;&gt;</operator> <name pos:start="75:50" pos:end="75:66"><name pos:start="75:50" pos:end="75:50">f</name><operator pos:start="75:51" pos:end="75:52">-&gt;</operator><name pos:start="75:53" pos:end="75:66">chroma_v_shift</name></name><operator pos:start="75:67" pos:end="75:67">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:57"><decl pos:start="77:9" pos:end="77:56"><type pos:start="77:9" pos:end="77:17"><specifier pos:start="77:9" pos:end="77:13">const</specifier> <name pos:start="77:15" pos:end="77:17">int</name></type> <name pos:start="77:19" pos:end="77:20">cx</name>            <init pos:start="77:33" pos:end="77:56">= <expr pos:start="77:35" pos:end="77:56"><name pos:start="77:35" pos:end="77:35">x</name> <operator pos:start="77:37" pos:end="77:38">&gt;&gt;</operator> <name pos:start="77:40" pos:end="77:56"><name pos:start="77:40" pos:end="77:40">f</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:56">chroma_h_shift</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:57"><decl pos:start="79:9" pos:end="79:56"><type pos:start="79:9" pos:end="79:17"><specifier pos:start="79:9" pos:end="79:13">const</specifier> <name pos:start="79:15" pos:end="79:17">int</name></type> <name pos:start="79:19" pos:end="79:20">cy</name>            <init pos:start="79:33" pos:end="79:56">= <expr pos:start="79:35" pos:end="79:56"><name pos:start="79:35" pos:end="79:35">y</name> <operator pos:start="79:37" pos:end="79:38">&gt;&gt;</operator> <name pos:start="79:40" pos:end="79:56"><name pos:start="79:40" pos:end="79:40">f</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:56">chroma_v_shift</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="81:9" pos:end="85:24"><expr pos:start="81:9" pos:end="85:23"><call pos:start="81:9" pos:end="85:23"><name pos:start="81:9" pos:end="81:20">decode_plane</name><argument_list pos:start="81:21" pos:end="85:23">(<argument pos:start="81:22" pos:end="81:23"><expr pos:start="81:22" pos:end="81:23"><name pos:start="81:22" pos:end="81:23">fs</name></expr></argument>, <argument pos:start="81:26" pos:end="81:65"><expr pos:start="81:26" pos:end="81:65"><name pos:start="81:26" pos:end="81:35"><name pos:start="81:26" pos:end="81:26">p</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:32">data</name><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><literal type="number" pos:start="81:34" pos:end="81:34">0</literal></expr>]</index></name> <operator pos:start="81:37" pos:end="81:37">+</operator> <name pos:start="81:39" pos:end="81:40">ps</name> <operator pos:start="81:42" pos:end="81:42">*</operator> <name pos:start="81:44" pos:end="81:44">x</name> <operator pos:start="81:46" pos:end="81:46">+</operator> <name pos:start="81:48" pos:end="81:48">y</name> <operator pos:start="81:50" pos:end="81:50">*</operator> <name pos:start="81:52" pos:end="81:65"><name pos:start="81:52" pos:end="81:52">p</name><operator pos:start="81:53" pos:end="81:54">-&gt;</operator><name pos:start="81:55" pos:end="81:62">linesize</name><index pos:start="81:63" pos:end="81:65">[<expr pos:start="81:64" pos:end="81:64"><literal type="number" pos:start="81:64" pos:end="81:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="81:68" pos:end="81:72"><expr pos:start="81:68" pos:end="81:72"><name pos:start="81:68" pos:end="81:72">width</name></expr></argument>,

                     <argument pos:start="83:22" pos:end="83:27"><expr pos:start="83:22" pos:end="83:27"><name pos:start="83:22" pos:end="83:27">height</name></expr></argument>, <argument pos:start="83:30" pos:end="83:43"><expr pos:start="83:30" pos:end="83:43"><name pos:start="83:30" pos:end="83:43"><name pos:start="83:30" pos:end="83:30">p</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:40">linesize</name><index pos:start="83:41" pos:end="83:43">[<expr pos:start="83:42" pos:end="83:42"><literal type="number" pos:start="83:42" pos:end="83:42">0</literal></expr>]</index></name></expr></argument>,

                     <argument pos:start="85:22" pos:end="85:22"><expr pos:start="85:22" pos:end="85:22"><literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="103:9"><if pos:start="89:9" pos:end="103:9">if <condition pos:start="89:12" pos:end="89:29">(<expr pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:13">f</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:28">chroma_planes</name></name></expr>)</condition> <block pos:start="89:31" pos:end="103:9">{<block_content pos:start="91:13" pos:end="101:28">

            <expr_stmt pos:start="91:13" pos:end="95:28"><expr pos:start="91:13" pos:end="95:27"><call pos:start="91:13" pos:end="95:27"><name pos:start="91:13" pos:end="91:24">decode_plane</name><argument_list pos:start="91:25" pos:end="95:27">(<argument pos:start="91:26" pos:end="91:27"><expr pos:start="91:26" pos:end="91:27"><name pos:start="91:26" pos:end="91:27">fs</name></expr></argument>, <argument pos:start="91:30" pos:end="91:71"><expr pos:start="91:30" pos:end="91:71"><name pos:start="91:30" pos:end="91:39"><name pos:start="91:30" pos:end="91:30">p</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:36">data</name><index pos:start="91:37" pos:end="91:39">[<expr pos:start="91:38" pos:end="91:38"><literal type="number" pos:start="91:38" pos:end="91:38">1</literal></expr>]</index></name> <operator pos:start="91:41" pos:end="91:41">+</operator> <name pos:start="91:43" pos:end="91:44">ps</name> <operator pos:start="91:46" pos:end="91:46">*</operator> <name pos:start="91:48" pos:end="91:49">cx</name> <operator pos:start="91:51" pos:end="91:51">+</operator> <name pos:start="91:53" pos:end="91:54">cy</name> <operator pos:start="91:56" pos:end="91:56">*</operator> <name pos:start="91:58" pos:end="91:71"><name pos:start="91:58" pos:end="91:58">p</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:68">linesize</name><index pos:start="91:69" pos:end="91:71">[<expr pos:start="91:70" pos:end="91:70"><literal type="number" pos:start="91:70" pos:end="91:70">1</literal></expr>]</index></name></expr></argument>,

                         <argument pos:start="93:26" pos:end="93:37"><expr pos:start="93:26" pos:end="93:37"><name pos:start="93:26" pos:end="93:37">chroma_width</name></expr></argument>, <argument pos:start="93:40" pos:end="93:52"><expr pos:start="93:40" pos:end="93:52"><name pos:start="93:40" pos:end="93:52">chroma_height</name></expr></argument>, <argument pos:start="93:55" pos:end="93:68"><expr pos:start="93:55" pos:end="93:68"><name pos:start="93:55" pos:end="93:68"><name pos:start="93:55" pos:end="93:55">p</name><operator pos:start="93:56" pos:end="93:57">-&gt;</operator><name pos:start="93:58" pos:end="93:65">linesize</name><index pos:start="93:66" pos:end="93:68">[<expr pos:start="93:67" pos:end="93:67"><literal type="number" pos:start="93:67" pos:end="93:67">1</literal></expr>]</index></name></expr></argument>,

                         <argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><literal type="number" pos:start="95:26" pos:end="95:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="101:28"><expr pos:start="97:13" pos:end="101:27"><call pos:start="97:13" pos:end="101:27"><name pos:start="97:13" pos:end="97:24">decode_plane</name><argument_list pos:start="97:25" pos:end="101:27">(<argument pos:start="97:26" pos:end="97:27"><expr pos:start="97:26" pos:end="97:27"><name pos:start="97:26" pos:end="97:27">fs</name></expr></argument>, <argument pos:start="97:30" pos:end="97:71"><expr pos:start="97:30" pos:end="97:71"><name pos:start="97:30" pos:end="97:39"><name pos:start="97:30" pos:end="97:30">p</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:36">data</name><index pos:start="97:37" pos:end="97:39">[<expr pos:start="97:38" pos:end="97:38"><literal type="number" pos:start="97:38" pos:end="97:38">2</literal></expr>]</index></name> <operator pos:start="97:41" pos:end="97:41">+</operator> <name pos:start="97:43" pos:end="97:44">ps</name> <operator pos:start="97:46" pos:end="97:46">*</operator> <name pos:start="97:48" pos:end="97:49">cx</name> <operator pos:start="97:51" pos:end="97:51">+</operator> <name pos:start="97:53" pos:end="97:54">cy</name> <operator pos:start="97:56" pos:end="97:56">*</operator> <name pos:start="97:58" pos:end="97:71"><name pos:start="97:58" pos:end="97:58">p</name><operator pos:start="97:59" pos:end="97:60">-&gt;</operator><name pos:start="97:61" pos:end="97:68">linesize</name><index pos:start="97:69" pos:end="97:71">[<expr pos:start="97:70" pos:end="97:70"><literal type="number" pos:start="97:70" pos:end="97:70">2</literal></expr>]</index></name></expr></argument>,

                         <argument pos:start="99:26" pos:end="99:37"><expr pos:start="99:26" pos:end="99:37"><name pos:start="99:26" pos:end="99:37">chroma_width</name></expr></argument>, <argument pos:start="99:40" pos:end="99:52"><expr pos:start="99:40" pos:end="99:52"><name pos:start="99:40" pos:end="99:52">chroma_height</name></expr></argument>, <argument pos:start="99:55" pos:end="99:68"><expr pos:start="99:55" pos:end="99:68"><name pos:start="99:55" pos:end="99:68"><name pos:start="99:55" pos:end="99:55">p</name><operator pos:start="99:56" pos:end="99:57">-&gt;</operator><name pos:start="99:58" pos:end="99:65">linesize</name><index pos:start="99:66" pos:end="99:68">[<expr pos:start="99:67" pos:end="99:67"><literal type="number" pos:start="99:67" pos:end="99:67">2</literal></expr>]</index></name></expr></argument>,

                         <argument pos:start="101:26" pos:end="101:26"><expr pos:start="101:26" pos:end="101:26"><literal type="number" pos:start="101:26" pos:end="101:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="111:28"><if pos:start="105:9" pos:end="111:28">if <condition pos:start="105:12" pos:end="105:29">(<expr pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:14">fs</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:28">transparency</name></name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="111:28"><block_content pos:start="107:13" pos:end="111:28">

            <expr_stmt pos:start="107:13" pos:end="111:28"><expr pos:start="107:13" pos:end="111:27"><call pos:start="107:13" pos:end="111:27"><name pos:start="107:13" pos:end="107:24">decode_plane</name><argument_list pos:start="107:25" pos:end="111:27">(<argument pos:start="107:26" pos:end="107:27"><expr pos:start="107:26" pos:end="107:27"><name pos:start="107:26" pos:end="107:27">fs</name></expr></argument>, <argument pos:start="107:30" pos:end="107:69"><expr pos:start="107:30" pos:end="107:69"><name pos:start="107:30" pos:end="107:39"><name pos:start="107:30" pos:end="107:30">p</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:36">data</name><index pos:start="107:37" pos:end="107:39">[<expr pos:start="107:38" pos:end="107:38"><literal type="number" pos:start="107:38" pos:end="107:38">3</literal></expr>]</index></name> <operator pos:start="107:41" pos:end="107:41">+</operator> <name pos:start="107:43" pos:end="107:44">ps</name> <operator pos:start="107:46" pos:end="107:46">*</operator> <name pos:start="107:48" pos:end="107:48">x</name> <operator pos:start="107:50" pos:end="107:50">+</operator> <name pos:start="107:52" pos:end="107:52">y</name> <operator pos:start="107:54" pos:end="107:54">*</operator> <name pos:start="107:56" pos:end="107:69"><name pos:start="107:56" pos:end="107:56">p</name><operator pos:start="107:57" pos:end="107:58">-&gt;</operator><name pos:start="107:59" pos:end="107:66">linesize</name><index pos:start="107:67" pos:end="107:69">[<expr pos:start="107:68" pos:end="107:68"><literal type="number" pos:start="107:68" pos:end="107:68">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:72" pos:end="107:76"><expr pos:start="107:72" pos:end="107:76"><name pos:start="107:72" pos:end="107:76">width</name></expr></argument>,

                         <argument pos:start="109:26" pos:end="109:31"><expr pos:start="109:26" pos:end="109:31"><name pos:start="109:26" pos:end="109:31">height</name></expr></argument>, <argument pos:start="109:34" pos:end="109:47"><expr pos:start="109:34" pos:end="109:47"><name pos:start="109:34" pos:end="109:47"><name pos:start="109:34" pos:end="109:34">p</name><operator pos:start="109:35" pos:end="109:36">-&gt;</operator><name pos:start="109:37" pos:end="109:44">linesize</name><index pos:start="109:45" pos:end="109:47">[<expr pos:start="109:46" pos:end="109:46"><literal type="number" pos:start="109:46" pos:end="109:46">3</literal></expr>]</index></name></expr></argument>,

                         <argument pos:start="111:26" pos:end="111:26"><expr pos:start="111:26" pos:end="111:26"><literal type="number" pos:start="111:26" pos:end="111:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="123:5">else <block pos:start="113:12" pos:end="123:5">{<block_content pos:start="115:9" pos:end="121:65">

        <decl_stmt pos:start="115:9" pos:end="119:74"><decl pos:start="115:9" pos:end="119:73"><type pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:15">uint8_t</name> <modifier pos:start="115:17" pos:end="115:17">*</modifier></type><name pos:start="115:18" pos:end="115:26"><name pos:start="115:18" pos:end="115:23">planes</name><index pos:start="115:24" pos:end="115:26">[<expr pos:start="115:25" pos:end="115:25"><literal type="number" pos:start="115:25" pos:end="115:25">3</literal></expr>]</index></name> <init pos:start="115:28" pos:end="119:73">= <expr pos:start="115:30" pos:end="119:73"><block pos:start="115:30" pos:end="119:73">{ <expr pos:start="115:32" pos:end="115:71"><name pos:start="115:32" pos:end="115:41"><name pos:start="115:32" pos:end="115:32">p</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:38">data</name><index pos:start="115:39" pos:end="115:41">[<expr pos:start="115:40" pos:end="115:40"><literal type="number" pos:start="115:40" pos:end="115:40">0</literal></expr>]</index></name> <operator pos:start="115:43" pos:end="115:43">+</operator> <name pos:start="115:45" pos:end="115:46">ps</name> <operator pos:start="115:48" pos:end="115:48">*</operator> <name pos:start="115:50" pos:end="115:50">x</name> <operator pos:start="115:52" pos:end="115:52">+</operator> <name pos:start="115:54" pos:end="115:54">y</name> <operator pos:start="115:56" pos:end="115:56">*</operator> <name pos:start="115:58" pos:end="115:71"><name pos:start="115:58" pos:end="115:58">p</name><operator pos:start="115:59" pos:end="115:60">-&gt;</operator><name pos:start="115:61" pos:end="115:68">linesize</name><index pos:start="115:69" pos:end="115:71">[<expr pos:start="115:70" pos:end="115:70"><literal type="number" pos:start="115:70" pos:end="115:70">0</literal></expr>]</index></name></expr>,

                               <expr pos:start="117:32" pos:end="117:71"><name pos:start="117:32" pos:end="117:41"><name pos:start="117:32" pos:end="117:32">p</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:38">data</name><index pos:start="117:39" pos:end="117:41">[<expr pos:start="117:40" pos:end="117:40"><literal type="number" pos:start="117:40" pos:end="117:40">1</literal></expr>]</index></name> <operator pos:start="117:43" pos:end="117:43">+</operator> <name pos:start="117:45" pos:end="117:46">ps</name> <operator pos:start="117:48" pos:end="117:48">*</operator> <name pos:start="117:50" pos:end="117:50">x</name> <operator pos:start="117:52" pos:end="117:52">+</operator> <name pos:start="117:54" pos:end="117:54">y</name> <operator pos:start="117:56" pos:end="117:56">*</operator> <name pos:start="117:58" pos:end="117:71"><name pos:start="117:58" pos:end="117:58">p</name><operator pos:start="117:59" pos:end="117:60">-&gt;</operator><name pos:start="117:61" pos:end="117:68">linesize</name><index pos:start="117:69" pos:end="117:71">[<expr pos:start="117:70" pos:end="117:70"><literal type="number" pos:start="117:70" pos:end="117:70">1</literal></expr>]</index></name></expr>,

                               <expr pos:start="119:32" pos:end="119:71"><name pos:start="119:32" pos:end="119:41"><name pos:start="119:32" pos:end="119:32">p</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:38">data</name><index pos:start="119:39" pos:end="119:41">[<expr pos:start="119:40" pos:end="119:40"><literal type="number" pos:start="119:40" pos:end="119:40">2</literal></expr>]</index></name> <operator pos:start="119:43" pos:end="119:43">+</operator> <name pos:start="119:45" pos:end="119:46">ps</name> <operator pos:start="119:48" pos:end="119:48">*</operator> <name pos:start="119:50" pos:end="119:50">x</name> <operator pos:start="119:52" pos:end="119:52">+</operator> <name pos:start="119:54" pos:end="119:54">y</name> <operator pos:start="119:56" pos:end="119:56">*</operator> <name pos:start="119:58" pos:end="119:71"><name pos:start="119:58" pos:end="119:58">p</name><operator pos:start="119:59" pos:end="119:60">-&gt;</operator><name pos:start="119:61" pos:end="119:68">linesize</name><index pos:start="119:69" pos:end="119:71">[<expr pos:start="119:70" pos:end="119:70"><literal type="number" pos:start="119:70" pos:end="119:70">2</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:65"><expr pos:start="121:9" pos:end="121:64"><call pos:start="121:9" pos:end="121:64"><name pos:start="121:9" pos:end="121:24">decode_rgb_frame</name><argument_list pos:start="121:25" pos:end="121:64">(<argument pos:start="121:26" pos:end="121:27"><expr pos:start="121:26" pos:end="121:27"><name pos:start="121:26" pos:end="121:27">fs</name></expr></argument>, <argument pos:start="121:30" pos:end="121:35"><expr pos:start="121:30" pos:end="121:35"><name pos:start="121:30" pos:end="121:35">planes</name></expr></argument>, <argument pos:start="121:38" pos:end="121:42"><expr pos:start="121:38" pos:end="121:42"><name pos:start="121:38" pos:end="121:42">width</name></expr></argument>, <argument pos:start="121:45" pos:end="121:50"><expr pos:start="121:45" pos:end="121:50"><name pos:start="121:45" pos:end="121:50">height</name></expr></argument>, <argument pos:start="121:53" pos:end="121:63"><expr pos:start="121:53" pos:end="121:63"><name pos:start="121:53" pos:end="121:63"><name pos:start="121:53" pos:end="121:53">p</name><operator pos:start="121:54" pos:end="121:55">-&gt;</operator><name pos:start="121:56" pos:end="121:63">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="125:5" pos:end="143:5"><if pos:start="125:5" pos:end="143:5">if <condition pos:start="125:8" pos:end="125:33">(<expr pos:start="125:9" pos:end="125:32"><name pos:start="125:9" pos:end="125:14"><name pos:start="125:9" pos:end="125:10">fs</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:14">ac</name></name> <operator pos:start="125:16" pos:end="125:17">&amp;&amp;</operator> <name pos:start="125:19" pos:end="125:28"><name pos:start="125:19" pos:end="125:19">f</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:28">version</name></name> <operator pos:start="125:30" pos:end="125:30">&gt;</operator> <literal type="number" pos:start="125:32" pos:end="125:32">2</literal></expr>)</condition> <block pos:start="125:35" pos:end="143:5">{<block_content pos:start="127:9" pos:end="141:9">

        <decl_stmt pos:start="127:9" pos:end="127:14"><decl pos:start="127:9" pos:end="127:13"><type pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:11">int</name></type> <name pos:start="127:13" pos:end="127:13">v</name></decl>;</decl_stmt>

        <macro pos:start="129:9" pos:end="129:44"><name pos:start="129:9" pos:end="129:15">get_rac</name><argument_list pos:start="129:16" pos:end="129:44">(<argument pos:start="129:17" pos:end="129:22">&amp;fs-&gt;c</argument>, <argument pos:start="129:25" pos:end="129:43">(uint8_t[]) { <literal type="number" pos:start="129:39" pos:end="129:41">129</literal> }</argument>)</argument_list></macro><empty_stmt pos:start="129:45" pos:end="129:45">;</empty_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:68"><expr pos:start="131:9" pos:end="131:67"><name pos:start="131:9" pos:end="131:9">v</name> <operator pos:start="131:11" pos:end="131:11">=</operator> <name pos:start="131:13" pos:end="131:32"><name pos:start="131:13" pos:end="131:14">fs</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:17">c</name><operator pos:start="131:18" pos:end="131:18">.</operator><name pos:start="131:19" pos:end="131:32">bytestream_end</name></name> <operator pos:start="131:34" pos:end="131:34">-</operator> <name pos:start="131:36" pos:end="131:51"><name pos:start="131:36" pos:end="131:37">fs</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:40">c</name><operator pos:start="131:41" pos:end="131:41">.</operator><name pos:start="131:42" pos:end="131:51">bytestream</name></name> <operator pos:start="131:53" pos:end="131:53">-</operator> <literal type="number" pos:start="131:55" pos:end="131:57">2</literal> <operator pos:start="131:57" pos:end="131:57">-</operator> <literal type="number" pos:start="131:59" pos:end="131:59">5</literal> <operator pos:start="131:61" pos:end="131:61">*</operator> <name pos:start="131:63" pos:end="131:67"><name pos:start="131:63" pos:end="131:63">f</name><operator pos:start="131:64" pos:end="131:65">-&gt;</operator><name pos:start="131:66" pos:end="131:67">ec</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="141:9"><if pos:start="133:9" pos:end="141:9">if <condition pos:start="133:12" pos:end="133:14">(<expr pos:start="133:13" pos:end="133:13"><name pos:start="133:13" pos:end="133:13">v</name></expr>)</condition> <block pos:start="133:16" pos:end="141:9">{<block_content pos:start="135:13" pos:end="139:34">

            <expr_stmt pos:start="135:13" pos:end="137:22"><expr pos:start="135:13" pos:end="137:21"><call pos:start="135:13" pos:end="137:21"><name pos:start="135:13" pos:end="135:18">av_log</name><argument_list pos:start="135:19" pos:end="137:21">(<argument pos:start="135:20" pos:end="135:27"><expr pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:20">f</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:27">avctx</name></name></expr></argument>, <argument pos:start="135:30" pos:end="135:41"><expr pos:start="135:30" pos:end="135:41"><name pos:start="135:30" pos:end="135:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:44" pos:end="135:79"><expr pos:start="135:44" pos:end="135:79"><literal type="string" pos:start="135:44" pos:end="135:79">"bytestream end mismatching by %d\n"</literal></expr></argument>,

                   <argument pos:start="137:20" pos:end="137:20"><expr pos:start="137:20" pos:end="137:20"><name pos:start="137:20" pos:end="137:20">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:34"><expr pos:start="139:13" pos:end="139:33"><name pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:14">fs</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:29">slice_damaged</name></name> <operator pos:start="139:31" pos:end="139:31">=</operator> <literal type="number" pos:start="139:33" pos:end="139:33">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:13"><expr pos:start="147:5" pos:end="147:12"><call pos:start="147:5" pos:end="147:12"><name pos:start="147:5" pos:end="147:10">emms_c</name><argument_list pos:start="147:11" pos:end="147:12">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="151:5" pos:end="151:13">return <expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
