<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8070.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">BdrvDirtyBitmap</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:41">bdrv_create_dirty_bitmap</name><parameter_list pos:start="1:42" pos:end="3:55">(<parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:58">BlockDriverState</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">bs</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:79">granularity</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:47">Error</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier><modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:18">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:23">bitmap_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">BdrvDirtyBitmap</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:27">bitmap</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><call pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:50">(<argument pos:start="13:12" pos:end="13:49"><expr pos:start="13:12" pos:end="13:49"><operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:23">granularity</name> <operator pos:start="13:25" pos:end="13:25">&amp;</operator> <operator pos:start="13:27" pos:end="13:27">(</operator><name pos:start="13:28" pos:end="13:38">granularity</name> <operator pos:start="13:40" pos:end="13:40">-</operator> <literal type="number" pos:start="13:42" pos:end="13:42">1</literal><operator pos:start="13:43" pos:end="13:43">)</operator><operator pos:start="13:44" pos:end="13:44">)</operator> <operator pos:start="13:46" pos:end="13:47">==</operator> <literal type="number" pos:start="13:49" pos:end="13:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:15">granularity</name> <operator pos:start="17:17" pos:end="17:19">&gt;&gt;=</operator> <name pos:start="17:21" pos:end="17:36">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><call pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:23">(<argument pos:start="19:12" pos:end="19:22"><expr pos:start="19:12" pos:end="19:22"><name pos:start="19:12" pos:end="19:22">granularity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:15">bitmap_size</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:37"><name pos:start="21:19" pos:end="21:33">bdrv_nb_sectors</name><argument_list pos:start="21:34" pos:end="21:37">(<argument pos:start="21:35" pos:end="21:36"><expr pos:start="21:35" pos:end="21:36"><name pos:start="21:35" pos:end="21:36">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:19">bitmap_size</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>)</condition> <block pos:start="23:26" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:20">

        <expr_stmt pos:start="25:9" pos:end="25:79"><expr pos:start="25:9" pos:end="25:78"><call pos:start="25:9" pos:end="25:78"><name pos:start="25:9" pos:end="25:24">error_setg_errno</name><argument_list pos:start="25:25" pos:end="25:78">(<argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">errp</name></expr></argument>, <argument pos:start="25:32" pos:end="25:43"><expr pos:start="25:32" pos:end="25:43"><operator pos:start="25:32" pos:end="25:32">-</operator><name pos:start="25:33" pos:end="25:43">bitmap_size</name></expr></argument>, <argument pos:start="25:46" pos:end="25:77"><expr pos:start="25:46" pos:end="25:77"><literal type="string" pos:start="25:46" pos:end="25:77">"could not get length of device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:13">errno</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <operator pos:start="27:17" pos:end="27:17">-</operator><name pos:start="27:18" pos:end="27:28">bitmap_size</name></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:10">bitmap</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:39"><name pos:start="33:14" pos:end="33:19">g_new0</name><argument_list pos:start="33:20" pos:end="33:39">(<argument pos:start="33:21" pos:end="33:35"><expr pos:start="33:21" pos:end="33:35"><name pos:start="33:21" pos:end="33:35">BdrvDirtyBitmap</name></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:70"><expr pos:start="35:5" pos:end="35:69"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:10">bitmap</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:18">bitmap</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:69"><name pos:start="35:22" pos:end="35:34">hbitmap_alloc</name><argument_list pos:start="35:35" pos:end="35:69">(<argument pos:start="35:36" pos:end="35:46"><expr pos:start="35:36" pos:end="35:46"><name pos:start="35:36" pos:end="35:46">bitmap_size</name></expr></argument>, <argument pos:start="35:49" pos:end="35:68"><expr pos:start="35:49" pos:end="35:68"><call pos:start="35:49" pos:end="35:64"><name pos:start="35:49" pos:end="35:51">ffs</name><argument_list pos:start="35:52" pos:end="35:64">(<argument pos:start="35:53" pos:end="35:63"><expr pos:start="35:53" pos:end="35:63"><name pos:start="35:53" pos:end="35:63">granularity</name></expr></argument>)</argument_list></call> <operator pos:start="35:66" pos:end="35:66">-</operator> <literal type="number" pos:start="35:68" pos:end="35:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><call pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:21">QLIST_INSERT_HEAD</name><argument_list pos:start="37:22" pos:end="37:55">(<argument pos:start="37:23" pos:end="37:40"><expr pos:start="37:23" pos:end="37:40"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:40"><name pos:start="37:24" pos:end="37:25">bs</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:40">dirty_bitmaps</name></name></expr></argument>, <argument pos:start="37:43" pos:end="37:48"><expr pos:start="37:43" pos:end="37:48"><name pos:start="37:43" pos:end="37:48">bitmap</name></expr></argument>, <argument pos:start="37:51" pos:end="37:54"><expr pos:start="37:51" pos:end="37:54"><name pos:start="37:51" pos:end="37:54">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="39:18">return <expr pos:start="39:12" pos:end="39:17"><name pos:start="39:12" pos:end="39:17">bitmap</name></expr>;</return>

</block_content>}</block></function>
</unit>
