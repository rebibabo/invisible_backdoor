<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26636.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ff_riff_write_info_tag</name><parameter_list pos:start="1:28" pos:end="1:78">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:39">AVIOContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">pb</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">tag</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:77"><decl pos:start="1:63" pos:end="1:77"><type pos:start="1:63" pos:end="1:77"><specifier pos:start="1:63" pos:end="1:67">const</specifier> <name pos:start="1:69" pos:end="1:72">char</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name> <init pos:start="5:13" pos:end="5:25">= <expr pos:start="5:15" pos:end="5:25"><call pos:start="5:15" pos:end="5:25"><name pos:start="5:15" pos:end="5:20">strlen</name><argument_list pos:start="5:21" pos:end="5:25">(<argument pos:start="5:22" pos:end="5:24"><expr pos:start="5:22" pos:end="5:24"><name pos:start="5:22" pos:end="5:24">str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="21:5"><if pos:start="7:5" pos:end="21:5">if <condition pos:start="7:8" pos:end="7:16">(<expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:11">len</name> <operator pos:start="7:13" pos:end="7:13">&gt;</operator> <literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr>)</condition> <block pos:start="7:18" pos:end="21:5">{<block_content pos:start="9:9" pos:end="19:27">

        <expr_stmt pos:start="9:9" pos:end="9:14"><expr pos:start="9:9" pos:end="9:13"><name pos:start="9:9" pos:end="9:11">len</name><operator pos:start="9:12" pos:end="9:13">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:30"><expr pos:start="11:9" pos:end="11:29"><call pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:20">ffio_wfourcc</name><argument_list pos:start="11:21" pos:end="11:29">(<argument pos:start="11:22" pos:end="11:23"><expr pos:start="11:22" pos:end="11:23"><name pos:start="11:22" pos:end="11:23">pb</name></expr></argument>, <argument pos:start="11:26" pos:end="11:28"><expr pos:start="11:26" pos:end="11:28"><name pos:start="11:26" pos:end="11:28">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:27"><expr pos:start="13:9" pos:end="13:26"><call pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:17">avio_wl32</name><argument_list pos:start="13:18" pos:end="13:26">(<argument pos:start="13:19" pos:end="13:20"><expr pos:start="13:19" pos:end="13:20"><name pos:start="13:19" pos:end="13:20">pb</name></expr></argument>, <argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:20">avio_put_str</name><argument_list pos:start="15:21" pos:end="15:29">(<argument pos:start="15:22" pos:end="15:23"><expr pos:start="15:22" pos:end="15:23"><name pos:start="15:22" pos:end="15:23">pb</name></expr></argument>, <argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:27"><if pos:start="17:9" pos:end="19:27">if <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:15">len</name> <operator pos:start="17:17" pos:end="17:17">&amp;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">1</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:27"><block_content pos:start="19:13" pos:end="19:27">

            <expr_stmt pos:start="19:13" pos:end="19:27"><expr pos:start="19:13" pos:end="19:26"><call pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:19">avio_w8</name><argument_list pos:start="19:20" pos:end="19:26">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">pb</name></expr></argument>, <argument pos:start="19:25" pos:end="19:25"><expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
