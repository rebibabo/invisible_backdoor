<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24714.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">migrate_params_apply</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:61"><decl pos:start="1:34" pos:end="1:61"><type pos:start="1:34" pos:end="1:55"><name pos:start="1:34" pos:end="1:53">MigrateSetParameters</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:61">params</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:45">= <expr pos:start="5:25" pos:end="5:45"><call pos:start="5:25" pos:end="5:45"><name pos:start="5:25" pos:end="5:43">migrate_get_current</name><argument_list pos:start="5:44" pos:end="5:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:64">/* TODO use QAPI_CLONE() instead of duplicating it inline */</comment>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:14">params</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:34">has_compress_level</name></name></expr>)</condition> <block pos:start="13:37" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:62">

        <expr_stmt pos:start="15:9" pos:end="15:62"><expr pos:start="15:9" pos:end="15:61"><name pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:21">parameters</name><operator pos:start="15:22" pos:end="15:22">.</operator><name pos:start="15:23" pos:end="15:36">compress_level</name></name> <operator pos:start="15:38" pos:end="15:38">=</operator> <name pos:start="15:40" pos:end="15:61"><name pos:start="15:40" pos:end="15:45">params</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:61">compress_level</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:37">(<expr pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:14">params</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:36">has_compress_threads</name></name></expr>)</condition> <block pos:start="21:39" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:66">

        <expr_stmt pos:start="23:9" pos:end="23:66"><expr pos:start="23:9" pos:end="23:65"><name pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:21">parameters</name><operator pos:start="23:22" pos:end="23:22">.</operator><name pos:start="23:23" pos:end="23:38">compress_threads</name></name> <operator pos:start="23:40" pos:end="23:40">=</operator> <name pos:start="23:42" pos:end="23:65"><name pos:start="23:42" pos:end="23:47">params</name><operator pos:start="23:48" pos:end="23:49">-&gt;</operator><name pos:start="23:50" pos:end="23:65">compress_threads</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:39">(<expr pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:14">params</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:38">has_decompress_threads</name></name></expr>)</condition> <block pos:start="29:41" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:70">

        <expr_stmt pos:start="31:9" pos:end="31:70"><expr pos:start="31:9" pos:end="31:69"><name pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">parameters</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:40">decompress_threads</name></name> <operator pos:start="31:42" pos:end="31:42">=</operator> <name pos:start="31:44" pos:end="31:69"><name pos:start="31:44" pos:end="31:49">params</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:69">decompress_threads</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:41">(<expr pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:14">params</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:40">has_cpu_throttle_initial</name></name></expr>)</condition> <block pos:start="37:43" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:74">

        <expr_stmt pos:start="39:9" pos:end="39:74"><expr pos:start="39:9" pos:end="39:73"><name pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:21">parameters</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:42">cpu_throttle_initial</name></name> <operator pos:start="39:44" pos:end="39:44">=</operator> <name pos:start="39:46" pos:end="39:73"><name pos:start="39:46" pos:end="39:51">params</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:73">cpu_throttle_initial</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:43">(<expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:14">params</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:42">has_cpu_throttle_increment</name></name></expr>)</condition> <block pos:start="45:45" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:78">

        <expr_stmt pos:start="47:9" pos:end="47:78"><expr pos:start="47:9" pos:end="47:77"><name pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:21">parameters</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:44">cpu_throttle_increment</name></name> <operator pos:start="47:46" pos:end="47:46">=</operator> <name pos:start="47:48" pos:end="47:77"><name pos:start="47:48" pos:end="47:53">params</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:77">cpu_throttle_increment</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:30">(<expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:14">params</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:29">has_tls_creds</name></name></expr>)</condition> <block pos:start="53:32" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:62">

        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><call pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:14">g_free</name><argument_list pos:start="55:15" pos:end="55:39">(<argument pos:start="55:16" pos:end="55:38"><expr pos:start="55:16" pos:end="55:38"><name pos:start="55:16" pos:end="55:38"><name pos:start="55:16" pos:end="55:16">s</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:28">parameters</name><operator pos:start="55:29" pos:end="55:29">.</operator><name pos:start="55:30" pos:end="55:38">tls_creds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:62"><expr pos:start="57:9" pos:end="57:61"><name pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:21">parameters</name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:31">tls_creds</name></name> <operator pos:start="57:33" pos:end="57:33">=</operator> <call pos:start="57:35" pos:end="57:61"><name pos:start="57:35" pos:end="57:42">g_strdup</name><argument_list pos:start="57:43" pos:end="57:61">(<argument pos:start="57:44" pos:end="57:60"><expr pos:start="57:44" pos:end="57:60"><name pos:start="57:44" pos:end="57:60"><name pos:start="57:44" pos:end="57:49">params</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:60">tls_creds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:33">(<expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:14">params</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:32">has_tls_hostname</name></name></expr>)</condition> <block pos:start="63:35" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:68">

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><call pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:14">g_free</name><argument_list pos:start="65:15" pos:end="65:42">(<argument pos:start="65:16" pos:end="65:41"><expr pos:start="65:16" pos:end="65:41"><name pos:start="65:16" pos:end="65:41"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:28">parameters</name><operator pos:start="65:29" pos:end="65:29">.</operator><name pos:start="65:30" pos:end="65:41">tls_hostname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:68"><expr pos:start="67:9" pos:end="67:67"><name pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:21">parameters</name><operator pos:start="67:22" pos:end="67:22">.</operator><name pos:start="67:23" pos:end="67:34">tls_hostname</name></name> <operator pos:start="67:36" pos:end="67:36">=</operator> <call pos:start="67:38" pos:end="67:67"><name pos:start="67:38" pos:end="67:45">g_strdup</name><argument_list pos:start="67:46" pos:end="67:67">(<argument pos:start="67:47" pos:end="67:66"><expr pos:start="67:47" pos:end="67:66"><name pos:start="67:47" pos:end="67:66"><name pos:start="67:47" pos:end="67:52">params</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:66">tls_hostname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="85:5"><if pos:start="73:5" pos:end="85:5">if <condition pos:start="73:8" pos:end="73:34">(<expr pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:14">params</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:33">has_max_bandwidth</name></name></expr>)</condition> <block pos:start="73:36" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:9">

        <expr_stmt pos:start="75:9" pos:end="75:60"><expr pos:start="75:9" pos:end="75:59"><name pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:21">parameters</name><operator pos:start="75:22" pos:end="75:22">.</operator><name pos:start="75:23" pos:end="75:35">max_bandwidth</name></name> <operator pos:start="75:37" pos:end="75:37">=</operator> <name pos:start="75:39" pos:end="75:59"><name pos:start="75:39" pos:end="75:44">params</name><operator pos:start="75:45" pos:end="75:46">-&gt;</operator><name pos:start="75:47" pos:end="75:59">max_bandwidth</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:27">(<expr pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:26">to_dst_file</name></name></expr>)</condition> <block pos:start="77:29" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:80">

            <expr_stmt pos:start="79:13" pos:end="81:80"><expr pos:start="79:13" pos:end="81:79"><call pos:start="79:13" pos:end="81:79"><name pos:start="79:13" pos:end="79:36">qemu_file_set_rate_limit</name><argument_list pos:start="79:37" pos:end="81:79">(<argument pos:start="79:38" pos:end="79:51"><expr pos:start="79:38" pos:end="79:51"><name pos:start="79:38" pos:end="79:51"><name pos:start="79:38" pos:end="79:38">s</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:51">to_dst_file</name></name></expr></argument>,

                                <argument pos:start="81:33" pos:end="81:78"><expr pos:start="81:33" pos:end="81:78"><name pos:start="81:33" pos:end="81:59"><name pos:start="81:33" pos:end="81:33">s</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:45">parameters</name><operator pos:start="81:46" pos:end="81:46">.</operator><name pos:start="81:47" pos:end="81:59">max_bandwidth</name></name> <operator pos:start="81:61" pos:end="81:61">/</operator> <name pos:start="81:63" pos:end="81:78">XFER_LIMIT_RATIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:35">(<expr pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:14">params</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:34">has_downtime_limit</name></name></expr>)</condition> <block pos:start="89:37" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:62">

        <expr_stmt pos:start="91:9" pos:end="91:62"><expr pos:start="91:9" pos:end="91:61"><name pos:start="91:9" pos:end="91:36"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:21">parameters</name><operator pos:start="91:22" pos:end="91:22">.</operator><name pos:start="91:23" pos:end="91:36">downtime_limit</name></name> <operator pos:start="91:38" pos:end="91:38">=</operator> <name pos:start="91:40" pos:end="91:61"><name pos:start="91:40" pos:end="91:45">params</name><operator pos:start="91:46" pos:end="91:47">-&gt;</operator><name pos:start="91:48" pos:end="91:61">downtime_limit</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="107:5"><if pos:start="97:5" pos:end="107:5">if <condition pos:start="97:8" pos:end="97:39">(<expr pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:14">params</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:38">has_x_checkpoint_delay</name></name></expr>)</condition> <block pos:start="97:41" pos:end="107:5">{<block_content pos:start="99:9" pos:end="105:9">

        <expr_stmt pos:start="99:9" pos:end="99:70"><expr pos:start="99:9" pos:end="99:69"><name pos:start="99:9" pos:end="99:40"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:21">parameters</name><operator pos:start="99:22" pos:end="99:22">.</operator><name pos:start="99:23" pos:end="99:40">x_checkpoint_delay</name></name> <operator pos:start="99:42" pos:end="99:42">=</operator> <name pos:start="99:44" pos:end="99:69"><name pos:start="99:44" pos:end="99:49">params</name><operator pos:start="99:50" pos:end="99:51">-&gt;</operator><name pos:start="99:52" pos:end="99:69">x_checkpoint_delay</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:38">(<expr pos:start="101:13" pos:end="101:37"><call pos:start="101:13" pos:end="101:37"><name pos:start="101:13" pos:end="101:35">migration_in_colo_state</name><argument_list pos:start="101:36" pos:end="101:37">()</argument_list></call></expr>)</condition> <block pos:start="101:40" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:38">

            <expr_stmt pos:start="103:13" pos:end="103:38"><expr pos:start="103:13" pos:end="103:37"><call pos:start="103:13" pos:end="103:37"><name pos:start="103:13" pos:end="103:34">colo_checkpoint_notify</name><argument_list pos:start="103:35" pos:end="103:37">(<argument pos:start="103:36" pos:end="103:36"><expr pos:start="103:36" pos:end="103:36"><name pos:start="103:36" pos:end="103:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:38">(<expr pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:14">params</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:37">has_block_incremental</name></name></expr>)</condition> <block pos:start="111:40" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:68">

        <expr_stmt pos:start="113:9" pos:end="113:68"><expr pos:start="113:9" pos:end="113:67"><name pos:start="113:9" pos:end="113:39"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:21">parameters</name><operator pos:start="113:22" pos:end="113:22">.</operator><name pos:start="113:23" pos:end="113:39">block_incremental</name></name> <operator pos:start="113:41" pos:end="113:41">=</operator> <name pos:start="113:43" pos:end="113:67"><name pos:start="113:43" pos:end="113:48">params</name><operator pos:start="113:49" pos:end="113:50">-&gt;</operator><name pos:start="113:51" pos:end="113:67">block_incremental</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
