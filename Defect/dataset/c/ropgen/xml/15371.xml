<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15371.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">qemu_rdma_drain_cq</name><parameter_list pos:start="1:30" pos:end="1:61">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:41"><name pos:start="1:31" pos:end="1:38">QEMUFile</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:54">RDMAContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">rdma</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><call pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:29">qemu_rdma_write_flush</name><argument_list pos:start="9:30" pos:end="9:38">(<argument pos:start="9:31" pos:end="9:31"><expr pos:start="9:31" pos:end="9:31"><name pos:start="9:31" pos:end="9:31">f</name></expr></argument>, <argument pos:start="9:34" pos:end="9:37"><expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">rdma</name></expr></argument>)</argument_list></call> <operator pos:start="9:40" pos:end="9:40">&lt;</operator> <literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr>)</condition> <block pos:start="9:45" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:20">

        <return pos:start="11:9" pos:end="11:20">return <expr pos:start="11:16" pos:end="11:19"><operator pos:start="11:16" pos:end="11:16">-</operator><name pos:start="11:17" pos:end="11:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="17:5" pos:end="29:5">while <condition pos:start="17:11" pos:end="17:25">(<expr pos:start="17:12" pos:end="17:24"><name pos:start="17:12" pos:end="17:24"><name pos:start="17:12" pos:end="17:15">rdma</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:24">nb_sent</name></name></expr>)</condition> <block pos:start="17:27" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:9">

        <expr_stmt pos:start="19:9" pos:end="19:73"><expr pos:start="19:9" pos:end="19:72"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:72"><name pos:start="19:15" pos:end="19:38">qemu_rdma_block_for_wrid</name><argument_list pos:start="19:39" pos:end="19:72">(<argument pos:start="19:40" pos:end="19:43"><expr pos:start="19:40" pos:end="19:43"><name pos:start="19:40" pos:end="19:43">rdma</name></expr></argument>, <argument pos:start="19:46" pos:end="19:65"><expr pos:start="19:46" pos:end="19:65"><name pos:start="19:46" pos:end="19:65">RDMA_WRID_RDMA_WRITE</name></expr></argument>, <argument pos:start="19:68" pos:end="19:71"><expr pos:start="19:68" pos:end="19:71"><name pos:start="19:68" pos:end="19:71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition> <block pos:start="21:22" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:24">

            <expr_stmt pos:start="23:13" pos:end="23:73"><expr pos:start="23:13" pos:end="23:72"><call pos:start="23:13" pos:end="23:72"><name pos:start="23:13" pos:end="23:19">fprintf</name><argument_list pos:start="23:20" pos:end="23:72">(<argument pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:26">stderr</name></expr></argument>, <argument pos:start="23:29" pos:end="23:71"><expr pos:start="23:29" pos:end="23:71"><literal type="string" pos:start="23:29" pos:end="23:71">"rdma migration: complete polling error!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:24">return <expr pos:start="25:20" pos:end="25:23"><operator pos:start="25:20" pos:end="25:20">-</operator><name pos:start="25:21" pos:end="25:23">EIO</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><call pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:32">qemu_rdma_unregister_waiting</name><argument_list pos:start="33:33" pos:end="33:38">(<argument pos:start="33:34" pos:end="33:37"><expr pos:start="33:34" pos:end="33:37"><name pos:start="33:34" pos:end="33:37">rdma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
