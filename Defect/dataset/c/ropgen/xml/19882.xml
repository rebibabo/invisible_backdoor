<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19882.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:32">pci_default_read_config</name><parameter_list pos:start="1:33" pos:end="3:59">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:42">PCIDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">d</name></decl></parameter>, 

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><name pos:start="3:34" pos:end="3:41">uint32_t</name></type> <name pos:start="3:43" pos:end="3:49">address</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:58"><decl pos:start="3:52" pos:end="3:58"><type pos:start="3:52" pos:end="3:58"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:58">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:15">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>

    <switch pos:start="9:5" pos:end="31:5">switch<condition pos:start="9:11" pos:end="9:15">(<expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:14">len</name></expr>)</condition> <block pos:start="9:17" pos:end="31:5">{<block_content pos:start="11:5" pos:end="29:14">

    <case pos:start="11:5" pos:end="11:11">case <expr pos:start="11:10" pos:end="11:10"><literal type="number" pos:start="11:10" pos:end="11:10">1</literal></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:33"><expr pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:11">val</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:32"><name pos:start="13:15" pos:end="13:15">d</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:23">config</name><index pos:start="13:24" pos:end="13:32">[<expr pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:31">address</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">2</literal></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:62"><expr pos:start="19:9" pos:end="19:61"><name pos:start="19:9" pos:end="19:11">val</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:61"><name pos:start="19:15" pos:end="19:25">le16_to_cpu</name><argument_list pos:start="19:26" pos:end="19:61">(<argument pos:start="19:27" pos:end="19:60"><expr pos:start="19:27" pos:end="19:60"><operator pos:start="19:27" pos:end="19:27">*</operator><operator pos:start="19:28" pos:end="19:28">(</operator><name pos:start="19:29" pos:end="19:36">uint16_t</name> <operator pos:start="19:38" pos:end="19:38">*</operator><operator pos:start="19:39" pos:end="19:39">)</operator><operator pos:start="19:40" pos:end="19:40">(</operator><name pos:start="19:41" pos:end="19:49"><name pos:start="19:41" pos:end="19:41">d</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:49">config</name></name> <operator pos:start="19:51" pos:end="19:51">+</operator> <name pos:start="19:53" pos:end="19:59">address</name><operator pos:start="19:60" pos:end="19:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <default pos:start="23:5" pos:end="23:12">default:</default>

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">4</literal></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:62"><expr pos:start="27:9" pos:end="27:61"><name pos:start="27:9" pos:end="27:11">val</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:61"><name pos:start="27:15" pos:end="27:25">le32_to_cpu</name><argument_list pos:start="27:26" pos:end="27:61">(<argument pos:start="27:27" pos:end="27:60"><expr pos:start="27:27" pos:end="27:60"><operator pos:start="27:27" pos:end="27:27">*</operator><operator pos:start="27:28" pos:end="27:28">(</operator><name pos:start="27:29" pos:end="27:36">uint32_t</name> <operator pos:start="27:38" pos:end="27:38">*</operator><operator pos:start="27:39" pos:end="27:39">)</operator><operator pos:start="27:40" pos:end="27:40">(</operator><name pos:start="27:41" pos:end="27:49"><name pos:start="27:41" pos:end="27:41">d</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:49">config</name></name> <operator pos:start="27:51" pos:end="27:51">+</operator> <name pos:start="27:53" pos:end="27:59">address</name><operator pos:start="27:60" pos:end="27:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="33:5" pos:end="33:15">return <expr pos:start="33:12" pos:end="33:14"><name pos:start="33:12" pos:end="33:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
