<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10651.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">dequantize_slice_buffered</name><parameter_list pos:start="1:38" pos:end="1:135">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:49">SnowContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:71"><decl pos:start="1:55" pos:end="1:71"><type pos:start="1:55" pos:end="1:71"><name pos:start="1:55" pos:end="1:66">slice_buffer</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type> <name pos:start="1:70" pos:end="1:71">sb</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:83"><decl pos:start="1:74" pos:end="1:83"><type pos:start="1:74" pos:end="1:83"><name pos:start="1:74" pos:end="1:80">SubBand</name> <modifier pos:start="1:82" pos:end="1:82">*</modifier></type><name pos:start="1:83" pos:end="1:83">b</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:98"><decl pos:start="1:86" pos:end="1:98"><type pos:start="1:86" pos:end="1:98"><name pos:start="1:86" pos:end="1:93">IDWTELEM</name> <modifier pos:start="1:95" pos:end="1:95">*</modifier></type><name pos:start="1:96" pos:end="1:98">src</name></decl></parameter>, <parameter pos:start="1:101" pos:end="1:110"><decl pos:start="1:101" pos:end="1:110"><type pos:start="1:101" pos:end="1:110"><name pos:start="1:101" pos:end="1:103">int</name></type> <name pos:start="1:105" pos:end="1:110">stride</name></decl></parameter>, <parameter pos:start="1:113" pos:end="1:123"><decl pos:start="1:113" pos:end="1:123"><type pos:start="1:113" pos:end="1:123"><name pos:start="1:113" pos:end="1:115">int</name></type> <name pos:start="1:117" pos:end="1:123">start_y</name></decl></parameter>, <parameter pos:start="1:126" pos:end="1:134"><decl pos:start="1:126" pos:end="1:134"><type pos:start="1:126" pos:end="1:134"><name pos:start="1:126" pos:end="1:128">int</name></type> <name pos:start="1:130" pos:end="1:134">end_y</name></decl></parameter>)</parameter_list><block pos:start="1:136" pos:end="43:1">{<block_content pos:start="3:5" pos:end="41:5">

    <decl_stmt pos:start="3:5" pos:end="3:26"><decl pos:start="3:5" pos:end="3:25"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:15">w</name><init pos:start="3:16" pos:end="3:25">= <expr pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:18">b</name><operator pos:start="3:19" pos:end="3:20">-&gt;</operator><name pos:start="3:21" pos:end="3:25">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:59"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:18">qlog</name><init pos:start="5:19" pos:end="5:59">= <expr pos:start="5:21" pos:end="5:59"><call pos:start="5:21" pos:end="5:59"><name pos:start="5:21" pos:end="5:27">av_clip</name><argument_list pos:start="5:28" pos:end="5:59">(<argument pos:start="5:29" pos:end="5:45"><expr pos:start="5:29" pos:end="5:45"><name pos:start="5:29" pos:end="5:35"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">qlog</name></name> <operator pos:start="5:37" pos:end="5:37">+</operator> <name pos:start="5:39" pos:end="5:45"><name pos:start="5:39" pos:end="5:39">b</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:45">qlog</name></name></expr></argument>, <argument pos:start="5:48" pos:end="5:48"><expr pos:start="5:48" pos:end="5:48"><literal type="number" pos:start="5:48" pos:end="5:48">0</literal></expr></argument>, <argument pos:start="5:51" pos:end="5:58"><expr pos:start="5:51" pos:end="5:58"><name pos:start="5:51" pos:end="5:55">QROOT</name><operator pos:start="5:56" pos:end="5:56">*</operator><literal type="number" pos:start="5:57" pos:end="5:58">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:18">qmul</name><init pos:start="7:19" pos:end="7:59">= <expr pos:start="7:21" pos:end="7:59"><name pos:start="7:21" pos:end="7:43"><name pos:start="7:21" pos:end="7:27">ff_qexp</name><index pos:start="7:28" pos:end="7:43">[<expr pos:start="7:29" pos:end="7:42"><name pos:start="7:29" pos:end="7:32">qlog</name><operator pos:start="7:33" pos:end="7:33">&amp;</operator><operator pos:start="7:34" pos:end="7:34">(</operator><name pos:start="7:35" pos:end="7:39">QROOT</name><operator pos:start="7:40" pos:end="7:40">-</operator><literal type="number" pos:start="7:41" pos:end="7:41">1</literal><operator pos:start="7:42" pos:end="7:42">)</operator></expr>]</index></name><operator pos:start="7:44" pos:end="7:45">&lt;&lt;</operator><operator pos:start="7:46" pos:end="7:46">(</operator><name pos:start="7:47" pos:end="7:50">qlog</name><operator pos:start="7:51" pos:end="7:52">&gt;&gt;</operator><name pos:start="7:53" pos:end="7:58">QSHIFT</name><operator pos:start="7:59" pos:end="7:59">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:18">qadd</name><init pos:start="9:19" pos:end="9:48">= <expr pos:start="9:21" pos:end="9:48"><operator pos:start="9:21" pos:end="9:21">(</operator><name pos:start="9:22" pos:end="9:29"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:29">qbias</name></name><operator pos:start="9:30" pos:end="9:30">*</operator><name pos:start="9:31" pos:end="9:34">qmul</name><operator pos:start="9:35" pos:end="9:35">)</operator><operator pos:start="9:36" pos:end="9:37">&gt;&gt;</operator><name pos:start="9:38" pos:end="9:48">QBIAS_SHIFT</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">x</name></decl>,<decl pos:start="11:11" pos:end="11:11"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:11" pos:end="11:11">y</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="15:40"><if pos:start="15:5" pos:end="15:40">if<condition pos:start="15:7" pos:end="15:32">(<expr pos:start="15:8" pos:end="15:31"><name pos:start="15:8" pos:end="15:14"><name pos:start="15:8" pos:end="15:8">s</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:14">qlog</name></name> <operator pos:start="15:16" pos:end="15:17">==</operator> <name pos:start="15:19" pos:end="15:31">LOSSLESS_QLOG</name></expr>)</condition><block type="pseudo" pos:start="15:34" pos:end="15:40"><block_content pos:start="15:34" pos:end="15:40"> <return pos:start="15:34" pos:end="15:40">return;</return></block_content></block></if></if_stmt>



    <for pos:start="19:5" pos:end="41:5">for<control pos:start="19:8" pos:end="19:32">(<init pos:start="19:9" pos:end="19:18"><expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">y</name><operator pos:start="19:10" pos:end="19:10">=</operator><name pos:start="19:11" pos:end="19:17">start_y</name></expr>;</init> <condition pos:start="19:20" pos:end="19:27"><expr pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:20">y</name><operator pos:start="19:21" pos:end="19:21">&lt;</operator><name pos:start="19:22" pos:end="19:26">end_y</name></expr>;</condition> <incr pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:29">y</name><operator pos:start="19:30" pos:end="19:31">++</operator></expr></incr>)</control><block pos:start="19:33" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:9">

<comment type="line" pos:start="21:1" pos:end="21:86">//        DWTELEM * line = slice_buffer_get_line_from_address(sb, src + (y * stride));</comment>

        <decl_stmt pos:start="23:9" pos:end="23:110"><decl pos:start="23:9" pos:end="23:109"><type pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:16">IDWTELEM</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type> <name pos:start="23:20" pos:end="23:23">line</name> <init pos:start="23:25" pos:end="23:109">= <expr pos:start="23:27" pos:end="23:109"><call pos:start="23:27" pos:end="23:91"><name pos:start="23:27" pos:end="23:47">slice_buffer_get_line</name><argument_list pos:start="23:48" pos:end="23:91">(<argument pos:start="23:49" pos:end="23:50"><expr pos:start="23:49" pos:end="23:50"><name pos:start="23:49" pos:end="23:50">sb</name></expr></argument>, <argument pos:start="23:53" pos:end="23:90"><expr pos:start="23:53" pos:end="23:90"><operator pos:start="23:53" pos:end="23:53">(</operator><name pos:start="23:54" pos:end="23:54">y</name> <operator pos:start="23:56" pos:end="23:56">*</operator> <name pos:start="23:58" pos:end="23:71"><name pos:start="23:58" pos:end="23:58">b</name><operator pos:start="23:59" pos:end="23:60">-&gt;</operator><name pos:start="23:61" pos:end="23:71">stride_line</name></name><operator pos:start="23:72" pos:end="23:72">)</operator> <operator pos:start="23:74" pos:end="23:74">+</operator> <name pos:start="23:76" pos:end="23:90"><name pos:start="23:76" pos:end="23:76">b</name><operator pos:start="23:77" pos:end="23:78">-&gt;</operator><name pos:start="23:79" pos:end="23:90">buf_y_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:93" pos:end="23:93">+</operator> <name pos:start="23:95" pos:end="23:109"><name pos:start="23:95" pos:end="23:95">b</name><operator pos:start="23:96" pos:end="23:97">-&gt;</operator><name pos:start="23:98" pos:end="23:109">buf_x_offset</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="25:9" pos:end="39:9">for<control pos:start="25:12" pos:end="25:26">(<init pos:start="25:13" pos:end="25:16"><expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:13">x</name><operator pos:start="25:14" pos:end="25:14">=</operator><literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>;</init> <condition pos:start="25:18" pos:end="25:21"><expr pos:start="25:18" pos:end="25:20"><name pos:start="25:18" pos:end="25:18">x</name><operator pos:start="25:19" pos:end="25:19">&lt;</operator><name pos:start="25:20" pos:end="25:20">w</name></expr>;</condition> <incr pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:23">x</name><operator pos:start="25:24" pos:end="25:25">++</operator></expr></incr>)</control><block pos:start="25:27" pos:end="39:9">{<block_content pos:start="27:13" pos:end="37:13">

            <decl_stmt pos:start="27:13" pos:end="27:27"><decl pos:start="27:13" pos:end="27:26"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:17">i</name><init pos:start="27:18" pos:end="27:26">= <expr pos:start="27:20" pos:end="27:26"><name pos:start="27:20" pos:end="27:26"><name pos:start="27:20" pos:end="27:23">line</name><index pos:start="27:24" pos:end="27:26">[<expr pos:start="27:25" pos:end="27:25"><name pos:start="27:25" pos:end="27:25">x</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="29:13" pos:end="37:13"><if pos:start="29:13" pos:end="33:13">if<condition pos:start="29:15" pos:end="29:19">(<expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:16">i</name><operator pos:start="29:17" pos:end="29:17">&lt;</operator><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>)</condition><block pos:start="29:20" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:58">

                <expr_stmt pos:start="31:17" pos:end="31:58"><expr pos:start="31:17" pos:end="31:57"><name pos:start="31:17" pos:end="31:23"><name pos:start="31:17" pos:end="31:20">line</name><index pos:start="31:21" pos:end="31:23">[<expr pos:start="31:22" pos:end="31:22"><name pos:start="31:22" pos:end="31:22">x</name></expr>]</index></name><operator pos:start="31:24" pos:end="31:24">=</operator> <operator pos:start="31:26" pos:end="31:26">-</operator><operator pos:start="31:27" pos:end="31:27">(</operator><operator pos:start="31:28" pos:end="31:28">(</operator><operator pos:start="31:29" pos:end="31:29">-</operator><name pos:start="31:30" pos:end="31:30">i</name><operator pos:start="31:31" pos:end="31:31">*</operator><name pos:start="31:32" pos:end="31:35">qmul</name> <operator pos:start="31:37" pos:end="31:37">+</operator> <name pos:start="31:39" pos:end="31:42">qadd</name><operator pos:start="31:43" pos:end="31:43">)</operator><operator pos:start="31:44" pos:end="31:45">&gt;&gt;</operator><operator pos:start="31:46" pos:end="31:46">(</operator><name pos:start="31:47" pos:end="31:55">QEXPSHIFT</name><operator pos:start="31:56" pos:end="31:56">)</operator><operator pos:start="31:57" pos:end="31:57">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="31:60" pos:end="31:85">//FIXME try different bias</comment>

            </block_content>}</block></if><if type="elseif" pos:start="33:14" pos:end="37:13">else if<condition pos:start="33:21" pos:end="33:25">(<expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:22">i</name><operator pos:start="33:23" pos:end="33:23">&gt;</operator><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>)</condition><block pos:start="33:26" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:58">

                <expr_stmt pos:start="35:17" pos:end="35:58"><expr pos:start="35:17" pos:end="35:57"><name pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:20">line</name><index pos:start="35:21" pos:end="35:23">[<expr pos:start="35:22" pos:end="35:22"><name pos:start="35:22" pos:end="35:22">x</name></expr>]</index></name><operator pos:start="35:24" pos:end="35:24">=</operator>  <operator pos:start="35:27" pos:end="35:27">(</operator><operator pos:start="35:28" pos:end="35:28">(</operator> <name pos:start="35:30" pos:end="35:30">i</name><operator pos:start="35:31" pos:end="35:31">*</operator><name pos:start="35:32" pos:end="35:35">qmul</name> <operator pos:start="35:37" pos:end="35:37">+</operator> <name pos:start="35:39" pos:end="35:42">qadd</name><operator pos:start="35:43" pos:end="35:43">)</operator><operator pos:start="35:44" pos:end="35:45">&gt;&gt;</operator><operator pos:start="35:46" pos:end="35:46">(</operator><name pos:start="35:47" pos:end="35:55">QEXPSHIFT</name><operator pos:start="35:56" pos:end="35:56">)</operator><operator pos:start="35:57" pos:end="35:57">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
