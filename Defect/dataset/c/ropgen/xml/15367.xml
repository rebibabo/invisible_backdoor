<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15367.c" pos:tabs="8"><function pos:start="1:1" pos:end="11:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">microdrive_realize</name><parameter_list pos:start="1:31" pos:end="1:62">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:42">DeviceState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:54">Error</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="11:1">{<block_content pos:start="5:5" pos:end="9:66">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">MicroDriveState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">md</name> <init pos:start="5:25" pos:end="5:41">= <expr pos:start="5:27" pos:end="5:41"><call pos:start="5:27" pos:end="5:41"><name pos:start="5:27" pos:end="5:36">MICRODRIVE</name><argument_list pos:start="5:37" pos:end="5:41">(<argument pos:start="5:38" pos:end="5:40"><expr pos:start="5:38" pos:end="5:40"><name pos:start="5:38" pos:end="5:40">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:66"><expr pos:start="9:5" pos:end="9:65"><call pos:start="9:5" pos:end="9:65"><name pos:start="9:5" pos:end="9:13">ide_init2</name><argument_list pos:start="9:14" pos:end="9:65">(<argument pos:start="9:15" pos:end="9:22"><expr pos:start="9:15" pos:end="9:22"><operator pos:start="9:15" pos:end="9:15">&amp;</operator><name pos:start="9:16" pos:end="9:22"><name pos:start="9:16" pos:end="9:17">md</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:22">bus</name></name></expr></argument>, <argument pos:start="9:25" pos:end="9:64"><expr pos:start="9:25" pos:end="9:64"><call pos:start="9:25" pos:end="9:61"><name pos:start="9:25" pos:end="9:42">qemu_allocate_irqs</name><argument_list pos:start="9:43" pos:end="9:61">(<argument pos:start="9:44" pos:end="9:53"><expr pos:start="9:44" pos:end="9:53"><name pos:start="9:44" pos:end="9:53">md_set_irq</name></expr></argument>, <argument pos:start="9:56" pos:end="9:57"><expr pos:start="9:56" pos:end="9:57"><name pos:start="9:56" pos:end="9:57">md</name></expr></argument>, <argument pos:start="9:60" pos:end="9:60"><expr pos:start="9:60" pos:end="9:60"><literal type="number" pos:start="9:60" pos:end="9:60">1</literal></expr></argument>)</argument_list></call><index pos:start="9:62" pos:end="9:64">[<expr pos:start="9:63" pos:end="9:63"><literal type="number" pos:start="9:63" pos:end="9:63">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
