<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20175.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">m48t59_t</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:25">m48t59_init_isa</name><parameter_list pos:start="1:26" pos:end="1:68">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:34">uint32_t</name></type> <name pos:start="1:36" pos:end="1:42">io_base</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">uint16_t</name></type> <name pos:start="1:54" pos:end="1:57">size</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:67"><decl pos:start="1:60" pos:end="1:67"><type pos:start="1:60" pos:end="1:67"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:67">type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">M48t59ISAState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ISADevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">m48t59_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:15">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:7">dev</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:34"><name pos:start="13:11" pos:end="13:20">isa_create</name><argument_list pos:start="13:21" pos:end="13:34">(<argument pos:start="13:22" pos:end="13:33"><expr pos:start="13:22" pos:end="13:33"><literal type="string" pos:start="13:22" pos:end="13:33">"m48t59_isa"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><call pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:24">qdev_prop_set_uint32</name><argument_list pos:start="15:25" pos:end="15:50">(<argument pos:start="15:26" pos:end="15:35"><expr pos:start="15:26" pos:end="15:35"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:35"><name pos:start="15:27" pos:end="15:29">dev</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:35">qdev</name></name></expr></argument>, <argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><literal type="string" pos:start="15:38" pos:end="15:43">"type"</literal></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><call pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:24">qdev_prop_set_uint32</name><argument_list pos:start="17:25" pos:end="17:50">(<argument pos:start="17:26" pos:end="17:35"><expr pos:start="17:26" pos:end="17:35"><operator pos:start="17:26" pos:end="17:26">&amp;</operator><name pos:start="17:27" pos:end="17:35"><name pos:start="17:27" pos:end="17:29">dev</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:35">qdev</name></name></expr></argument>, <argument pos:start="17:38" pos:end="17:43"><expr pos:start="17:38" pos:end="17:43"><literal type="string" pos:start="17:38" pos:end="17:43">"size"</literal></expr></argument>, <argument pos:start="17:46" pos:end="17:49"><expr pos:start="17:46" pos:end="17:49"><name pos:start="17:46" pos:end="17:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><call pos:start="19:5" pos:end="19:56"><name pos:start="19:5" pos:end="19:24">qdev_prop_set_uint32</name><argument_list pos:start="19:25" pos:end="19:56">(<argument pos:start="19:26" pos:end="19:35"><expr pos:start="19:26" pos:end="19:35"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:35"><name pos:start="19:27" pos:end="19:29">dev</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:35">qdev</name></name></expr></argument>, <argument pos:start="19:38" pos:end="19:46"><expr pos:start="19:38" pos:end="19:46"><literal type="string" pos:start="19:38" pos:end="19:46">"io_base"</literal></expr></argument>, <argument pos:start="19:49" pos:end="19:55"><expr pos:start="19:49" pos:end="19:55"><name pos:start="19:49" pos:end="19:55">io_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:13">qdev_init</name><argument_list pos:start="21:14" pos:end="21:25">(<argument pos:start="21:15" pos:end="21:24"><expr pos:start="21:15" pos:end="21:24"><operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:18">dev</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:47"><expr pos:start="23:5" pos:end="23:46"><name pos:start="23:5" pos:end="23:5">d</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:46"><name pos:start="23:9" pos:end="23:17">DO_UPCAST</name><argument_list pos:start="23:18" pos:end="23:46">(<argument pos:start="23:19" pos:end="23:32"><expr pos:start="23:19" pos:end="23:32"><name pos:start="23:19" pos:end="23:32">M48t59ISAState</name></expr></argument>, <argument pos:start="23:35" pos:end="23:40"><expr pos:start="23:35" pos:end="23:40"><name pos:start="23:35" pos:end="23:40">busdev</name></expr></argument>, <argument pos:start="23:43" pos:end="23:45"><expr pos:start="23:43" pos:end="23:45"><name pos:start="23:43" pos:end="23:45">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:5">s</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <operator pos:start="25:9" pos:end="25:9">&amp;</operator><name pos:start="25:10" pos:end="25:17"><name pos:start="25:10" pos:end="25:10">d</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">state</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:15">io_base</name> <operator pos:start="29:17" pos:end="29:18">!=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>)</condition> <block pos:start="29:23" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:65">

        <expr_stmt pos:start="31:9" pos:end="31:63"><expr pos:start="31:9" pos:end="31:62"><call pos:start="31:9" pos:end="31:62"><name pos:start="31:9" pos:end="31:28">register_ioport_read</name><argument_list pos:start="31:29" pos:end="31:62">(<argument pos:start="31:30" pos:end="31:36"><expr pos:start="31:30" pos:end="31:36"><name pos:start="31:30" pos:end="31:36">io_base</name></expr></argument>, <argument pos:start="31:39" pos:end="31:42"><expr pos:start="31:39" pos:end="31:42"><literal type="number" pos:start="31:39" pos:end="31:42">0x04</literal></expr></argument>, <argument pos:start="31:45" pos:end="31:45"><expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">1</literal></expr></argument>, <argument pos:start="31:48" pos:end="31:58"><expr pos:start="31:48" pos:end="31:58"><name pos:start="31:48" pos:end="31:58">NVRAM_readb</name></expr></argument>, <argument pos:start="31:61" pos:end="31:61"><expr pos:start="31:61" pos:end="31:61"><name pos:start="31:61" pos:end="31:61">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><call pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:29">register_ioport_write</name><argument_list pos:start="33:30" pos:end="33:64">(<argument pos:start="33:31" pos:end="33:37"><expr pos:start="33:31" pos:end="33:37"><name pos:start="33:31" pos:end="33:37">io_base</name></expr></argument>, <argument pos:start="33:40" pos:end="33:43"><expr pos:start="33:40" pos:end="33:43"><literal type="number" pos:start="33:40" pos:end="33:43">0x04</literal></expr></argument>, <argument pos:start="33:46" pos:end="33:46"><expr pos:start="33:46" pos:end="33:46"><literal type="number" pos:start="33:46" pos:end="33:46">1</literal></expr></argument>, <argument pos:start="33:49" pos:end="33:60"><expr pos:start="33:49" pos:end="33:60"><name pos:start="33:49" pos:end="33:60">NVRAM_writeb</name></expr></argument>, <argument pos:start="33:63" pos:end="33:63"><expr pos:start="33:63" pos:end="33:63"><name pos:start="33:63" pos:end="33:63">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><name pos:start="39:12" pos:end="39:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
