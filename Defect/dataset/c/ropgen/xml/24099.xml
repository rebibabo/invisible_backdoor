<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24099.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">helper_xssubqp</name><parameter_list pos:start="1:20" pos:end="1:54">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:31">CPUPPCState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:46">uint32_t</name></type> <name pos:start="1:48" pos:end="1:53">opcode</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:28">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">ppc_vsr_t</name></type> <name pos:start="5:15" pos:end="5:16">xt</name></decl>, <decl pos:start="5:19" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:13"/><name pos:start="5:19" pos:end="5:20">xa</name></decl>, <decl pos:start="5:23" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:13"/><name pos:start="5:23" pos:end="5:24">xb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">float_status</name></type> <name pos:start="7:18" pos:end="7:22">tstat</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><call pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:10">getVSR</name><argument_list pos:start="11:11" pos:end="11:37">(<argument pos:start="11:12" pos:end="11:26"><expr pos:start="11:12" pos:end="11:26"><call pos:start="11:12" pos:end="11:21"><name pos:start="11:12" pos:end="11:13">rA</name><argument_list pos:start="11:14" pos:end="11:21">(<argument pos:start="11:15" pos:end="11:20"><expr pos:start="11:15" pos:end="11:20"><name pos:start="11:15" pos:end="11:20">opcode</name></expr></argument>)</argument_list></call> <operator pos:start="11:23" pos:end="11:23">+</operator> <literal type="number" pos:start="11:25" pos:end="11:26">32</literal></expr></argument>, <argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:31">xa</name></expr></argument>, <argument pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><call pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:10">getVSR</name><argument_list pos:start="13:11" pos:end="13:37">(<argument pos:start="13:12" pos:end="13:26"><expr pos:start="13:12" pos:end="13:26"><call pos:start="13:12" pos:end="13:21"><name pos:start="13:12" pos:end="13:13">rB</name><argument_list pos:start="13:14" pos:end="13:21">(<argument pos:start="13:15" pos:end="13:20"><expr pos:start="13:15" pos:end="13:20"><name pos:start="13:15" pos:end="13:20">opcode</name></expr></argument>)</argument_list></call> <operator pos:start="13:23" pos:end="13:23">+</operator> <literal type="number" pos:start="13:25" pos:end="13:26">32</literal></expr></argument>, <argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><operator pos:start="13:29" pos:end="13:29">&amp;</operator><name pos:start="13:30" pos:end="13:31">xb</name></expr></argument>, <argument pos:start="13:34" pos:end="13:36"><expr pos:start="13:34" pos:end="13:36"><name pos:start="13:34" pos:end="13:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><call pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:10">getVSR</name><argument_list pos:start="15:11" pos:end="15:37">(<argument pos:start="15:12" pos:end="15:26"><expr pos:start="15:12" pos:end="15:26"><call pos:start="15:12" pos:end="15:21"><name pos:start="15:12" pos:end="15:13">rD</name><argument_list pos:start="15:14" pos:end="15:21">(<argument pos:start="15:15" pos:end="15:20"><expr pos:start="15:15" pos:end="15:20"><name pos:start="15:15" pos:end="15:20">opcode</name></expr></argument>)</argument_list></call> <operator pos:start="15:23" pos:end="15:23">+</operator> <literal type="number" pos:start="15:25" pos:end="15:26">32</literal></expr></argument>, <argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><operator pos:start="15:29" pos:end="15:29">&amp;</operator><name pos:start="15:30" pos:end="15:31">xt</name></expr></argument>, <argument pos:start="15:34" pos:end="15:36"><expr pos:start="15:34" pos:end="15:36"><name pos:start="15:34" pos:end="15:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><call pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:25">helper_reset_fpstatus</name><argument_list pos:start="17:26" pos:end="17:30">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:34">(<expr pos:start="21:9" pos:end="21:33"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:16">unlikely</name><argument_list pos:start="21:17" pos:end="21:33">(<argument pos:start="21:18" pos:end="21:32"><expr pos:start="21:18" pos:end="21:32"><call pos:start="21:18" pos:end="21:27"><name pos:start="21:18" pos:end="21:19">Rc</name><argument_list pos:start="21:20" pos:end="21:27">(<argument pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:26">opcode</name></expr></argument>)</argument_list></call> <operator pos:start="21:29" pos:end="21:30">!=</operator> <literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:36" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:16">

        <comment type="block" pos:start="23:9" pos:end="23:69">/* TODO: Support xssubqp after round-to-odd is implemented */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><call pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:13">abort</name><argument_list pos:start="25:14" pos:end="25:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:9">tstat</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:15">env</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:26">fp_status</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><call pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:29">set_float_exception_flags</name><argument_list pos:start="33:30" pos:end="33:40">(<argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">0</literal></expr></argument>, <argument pos:start="33:34" pos:end="33:39"><expr pos:start="33:34" pos:end="33:39"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:39">tstat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:6">xt</name><operator pos:start="35:7" pos:end="35:7">.</operator><name pos:start="35:8" pos:end="35:11">f128</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:52"><name pos:start="35:15" pos:end="35:26">float128_sub</name><argument_list pos:start="35:27" pos:end="35:52">(<argument pos:start="35:28" pos:end="35:34"><expr pos:start="35:28" pos:end="35:34"><name pos:start="35:28" pos:end="35:34"><name pos:start="35:28" pos:end="35:29">xa</name><operator pos:start="35:30" pos:end="35:30">.</operator><name pos:start="35:31" pos:end="35:34">f128</name></name></expr></argument>, <argument pos:start="35:37" pos:end="35:43"><expr pos:start="35:37" pos:end="35:43"><name pos:start="35:37" pos:end="35:43"><name pos:start="35:37" pos:end="35:38">xb</name><operator pos:start="35:39" pos:end="35:39">.</operator><name pos:start="35:40" pos:end="35:43">f128</name></name></expr></argument>, <argument pos:start="35:46" pos:end="35:51"><expr pos:start="35:46" pos:end="35:51"><operator pos:start="35:46" pos:end="35:46">&amp;</operator><name pos:start="35:47" pos:end="35:51">tstat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:72"><expr pos:start="37:5" pos:end="37:71"><name pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:7">env</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:18">fp_status</name><operator pos:start="37:19" pos:end="37:19">.</operator><name pos:start="37:20" pos:end="37:40">float_exception_flags</name></name> <operator pos:start="37:42" pos:end="37:43">|=</operator> <name pos:start="37:45" pos:end="37:71"><name pos:start="37:45" pos:end="37:49">tstat</name><operator pos:start="37:50" pos:end="37:50">.</operator><name pos:start="37:51" pos:end="37:71">float_exception_flags</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="55:5"><if pos:start="41:5" pos:end="55:5">if <condition pos:start="41:8" pos:end="41:67">(<expr pos:start="41:9" pos:end="41:66"><call pos:start="41:9" pos:end="41:66"><name pos:start="41:9" pos:end="41:16">unlikely</name><argument_list pos:start="41:17" pos:end="41:66">(<argument pos:start="41:18" pos:end="41:65"><expr pos:start="41:18" pos:end="41:65"><name pos:start="41:18" pos:end="41:44"><name pos:start="41:18" pos:end="41:22">tstat</name><operator pos:start="41:23" pos:end="41:23">.</operator><name pos:start="41:24" pos:end="41:44">float_exception_flags</name></name> <operator pos:start="41:46" pos:end="41:46">&amp;</operator> <name pos:start="41:48" pos:end="41:65">float_flag_invalid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:69" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:9">

        <if_stmt pos:start="43:9" pos:end="53:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:75">(<expr pos:start="43:13" pos:end="43:74"><call pos:start="43:13" pos:end="43:41"><name pos:start="43:13" pos:end="43:32">float128_is_infinity</name><argument_list pos:start="43:33" pos:end="43:41">(<argument pos:start="43:34" pos:end="43:40"><expr pos:start="43:34" pos:end="43:40"><name pos:start="43:34" pos:end="43:40"><name pos:start="43:34" pos:end="43:35">xa</name><operator pos:start="43:36" pos:end="43:36">.</operator><name pos:start="43:37" pos:end="43:40">f128</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:43" pos:end="43:44">&amp;&amp;</operator> <call pos:start="43:46" pos:end="43:74"><name pos:start="43:46" pos:end="43:65">float128_is_infinity</name><argument_list pos:start="43:66" pos:end="43:74">(<argument pos:start="43:67" pos:end="43:73"><expr pos:start="43:67" pos:end="43:73"><name pos:start="43:67" pos:end="43:73"><name pos:start="43:67" pos:end="43:68">xb</name><operator pos:start="43:69" pos:end="43:69">.</operator><name pos:start="43:70" pos:end="43:73">f128</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:77" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:65">

            <expr_stmt pos:start="45:13" pos:end="45:65"><expr pos:start="45:13" pos:end="45:64"><call pos:start="45:13" pos:end="45:64"><name pos:start="45:13" pos:end="45:33">float_invalid_op_excp</name><argument_list pos:start="45:34" pos:end="45:64">(<argument pos:start="45:35" pos:end="45:37"><expr pos:start="45:35" pos:end="45:37"><name pos:start="45:35" pos:end="45:37">env</name></expr></argument>, <argument pos:start="45:40" pos:end="45:60"><expr pos:start="45:40" pos:end="45:60"><name pos:start="45:40" pos:end="45:60">POWERPC_EXCP_FP_VXISI</name></expr></argument>, <argument pos:start="45:63" pos:end="45:63"><expr pos:start="45:63" pos:end="45:63"><literal type="number" pos:start="45:63" pos:end="45:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="53:9">else if <condition pos:start="47:19" pos:end="49:62">(<expr pos:start="47:20" pos:end="49:61"><call pos:start="47:20" pos:end="47:61"><name pos:start="47:20" pos:end="47:44">float128_is_signaling_nan</name><argument_list pos:start="47:45" pos:end="47:61">(<argument pos:start="47:46" pos:end="47:52"><expr pos:start="47:46" pos:end="47:52"><name pos:start="47:46" pos:end="47:52"><name pos:start="47:46" pos:end="47:47">xa</name><operator pos:start="47:48" pos:end="47:48">.</operator><name pos:start="47:49" pos:end="47:52">f128</name></name></expr></argument>, <argument pos:start="47:55" pos:end="47:60"><expr pos:start="47:55" pos:end="47:60"><operator pos:start="47:55" pos:end="47:55">&amp;</operator><name pos:start="47:56" pos:end="47:60">tstat</name></expr></argument>)</argument_list></call> <operator pos:start="47:63" pos:end="47:64">||</operator>

                   <call pos:start="49:20" pos:end="49:61"><name pos:start="49:20" pos:end="49:44">float128_is_signaling_nan</name><argument_list pos:start="49:45" pos:end="49:61">(<argument pos:start="49:46" pos:end="49:52"><expr pos:start="49:46" pos:end="49:52"><name pos:start="49:46" pos:end="49:52"><name pos:start="49:46" pos:end="49:47">xb</name><operator pos:start="49:48" pos:end="49:48">.</operator><name pos:start="49:49" pos:end="49:52">f128</name></name></expr></argument>, <argument pos:start="49:55" pos:end="49:60"><expr pos:start="49:55" pos:end="49:60"><operator pos:start="49:55" pos:end="49:55">&amp;</operator><name pos:start="49:56" pos:end="49:60">tstat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:64" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:66">

            <expr_stmt pos:start="51:13" pos:end="51:66"><expr pos:start="51:13" pos:end="51:65"><call pos:start="51:13" pos:end="51:65"><name pos:start="51:13" pos:end="51:33">float_invalid_op_excp</name><argument_list pos:start="51:34" pos:end="51:65">(<argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><name pos:start="51:35" pos:end="51:37">env</name></expr></argument>, <argument pos:start="51:40" pos:end="51:61"><expr pos:start="51:40" pos:end="51:61"><name pos:start="51:40" pos:end="51:61">POWERPC_EXCP_FP_VXSNAN</name></expr></argument>, <argument pos:start="51:64" pos:end="51:64"><expr pos:start="51:64" pos:end="51:64"><literal type="number" pos:start="51:64" pos:end="51:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:47"><expr pos:start="59:5" pos:end="59:46"><call pos:start="59:5" pos:end="59:46"><name pos:start="59:5" pos:end="59:32">helper_compute_fprf_float128</name><argument_list pos:start="59:33" pos:end="59:46">(<argument pos:start="59:34" pos:end="59:36"><expr pos:start="59:34" pos:end="59:36"><name pos:start="59:34" pos:end="59:36">env</name></expr></argument>, <argument pos:start="59:39" pos:end="59:45"><expr pos:start="59:39" pos:end="59:45"><name pos:start="59:39" pos:end="59:45"><name pos:start="59:39" pos:end="59:40">xt</name><operator pos:start="59:41" pos:end="59:41">.</operator><name pos:start="59:42" pos:end="59:45">f128</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:38"><expr pos:start="61:5" pos:end="61:37"><call pos:start="61:5" pos:end="61:37"><name pos:start="61:5" pos:end="61:10">putVSR</name><argument_list pos:start="61:11" pos:end="61:37">(<argument pos:start="61:12" pos:end="61:26"><expr pos:start="61:12" pos:end="61:26"><call pos:start="61:12" pos:end="61:21"><name pos:start="61:12" pos:end="61:13">rD</name><argument_list pos:start="61:14" pos:end="61:21">(<argument pos:start="61:15" pos:end="61:20"><expr pos:start="61:15" pos:end="61:20"><name pos:start="61:15" pos:end="61:20">opcode</name></expr></argument>)</argument_list></call> <operator pos:start="61:23" pos:end="61:23">+</operator> <literal type="number" pos:start="61:25" pos:end="61:26">32</literal></expr></argument>, <argument pos:start="61:29" pos:end="61:31"><expr pos:start="61:29" pos:end="61:31"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:31">xt</name></expr></argument>, <argument pos:start="61:34" pos:end="61:36"><expr pos:start="61:34" pos:end="61:36"><name pos:start="61:34" pos:end="61:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:28"><expr pos:start="63:5" pos:end="63:27"><call pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:22">float_check_status</name><argument_list pos:start="63:23" pos:end="63:27">(<argument pos:start="63:24" pos:end="63:26"><expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
