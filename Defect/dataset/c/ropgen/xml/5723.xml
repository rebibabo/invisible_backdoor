<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5723.c" pos:tabs="8"><function pos:start="1:1" pos:end="329:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">hls_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="329:1">{<block_content pos:start="5:5" pos:end="327:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">HLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">hls</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name> <init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:48">= <expr pos:start="9:20" pos:end="9:48"><name pos:start="9:20" pos:end="9:48"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">streams</name><index pos:start="9:30" pos:end="9:48">[<expr pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:33">pkt</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:47">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:19">end_pts</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">is_ref_pkt</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>, <decl pos:start="15:18" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:26">can_split</name> <init pos:start="15:28" pos:end="15:30">= <expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">1</literal></expr></init></decl>, <decl pos:start="15:33" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:33" pos:end="15:33">i</name></decl>, <decl pos:start="15:36" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:36" pos:end="15:36">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">stream_index</name> <init pos:start="17:22" pos:end="17:24">= <expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">range_length</name> <init pos:start="19:22" pos:end="19:24">= <expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:19">buffer</name> <init pos:start="21:21" pos:end="21:26">= <expr pos:start="21:23" pos:end="21:26"><name pos:start="21:23" pos:end="21:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:29"><decl pos:start="23:5" pos:end="23:28"><type pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:17">VariantStream</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:21">vs</name> <init pos:start="23:23" pos:end="23:28">= <expr pos:start="23:25" pos:end="23:28"><name pos:start="23:25" pos:end="23:28">NULL</name></expr></init></decl>;</decl_stmt>



    <for pos:start="27:5" pos:end="61:5">for <control pos:start="27:9" pos:end="27:44">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:39"><expr pos:start="27:17" pos:end="27:38"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:38"><name pos:start="27:21" pos:end="27:23">hls</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:38">nb_varstreams</name></name></expr>;</condition> <incr pos:start="27:41" pos:end="27:43"><expr pos:start="27:41" pos:end="27:43"><name pos:start="27:41" pos:end="27:41">i</name><operator pos:start="27:42" pos:end="27:43">++</operator></expr></incr>)</control> <block pos:start="27:46" pos:end="61:5">{<block_content pos:start="29:9" pos:end="59:18">

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:10">vs</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <operator pos:start="29:14" pos:end="29:14">&amp;</operator><name pos:start="29:15" pos:end="29:33"><name pos:start="29:15" pos:end="29:17">hls</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:30">var_streams</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">i</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="53:9">for <control pos:start="31:13" pos:end="31:44">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">j</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:39"><expr pos:start="31:21" pos:end="31:38"><name pos:start="31:21" pos:end="31:21">j</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:38"><name pos:start="31:25" pos:end="31:26">vs</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:38">nb_streams</name></name></expr>;</condition> <incr pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:41">j</name><operator pos:start="31:42" pos:end="31:43">++</operator></expr></incr>)</control> <block pos:start="31:46" pos:end="53:9">{<block_content pos:start="33:13" pos:end="51:13">

            <if_stmt pos:start="33:13" pos:end="51:13"><if pos:start="33:13" pos:end="51:13">if <condition pos:start="33:16" pos:end="33:37">(<expr pos:start="33:17" pos:end="33:36"><name pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:18">vs</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:27">streams</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><name pos:start="33:29" pos:end="33:29">j</name></expr>]</index></name> <operator pos:start="33:32" pos:end="33:33">==</operator> <name pos:start="33:35" pos:end="33:36">st</name></expr>)</condition> <block pos:start="33:39" pos:end="51:13">{<block_content pos:start="35:17" pos:end="49:22">

                <if_stmt pos:start="35:17" pos:end="47:17"><if pos:start="35:17" pos:end="41:17">if<condition pos:start="35:19" pos:end="35:71">( <expr pos:start="35:21" pos:end="35:69"><name pos:start="35:21" pos:end="35:44"><name pos:start="35:21" pos:end="35:22">st</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:32">codecpar</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:44">codec_type</name></name> <operator pos:start="35:46" pos:end="35:47">==</operator> <name pos:start="35:49" pos:end="35:69">AVMEDIA_TYPE_SUBTITLE</name></expr> )</condition> <block pos:start="35:73" pos:end="41:17">{<block_content pos:start="37:21" pos:end="39:37">

                    <expr_stmt pos:start="37:21" pos:end="37:37"><expr pos:start="37:21" pos:end="37:36"><name pos:start="37:21" pos:end="37:22">oc</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:36"><name pos:start="37:26" pos:end="37:27">vs</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:36">vtt_avf</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="39:21" pos:end="39:37"><expr pos:start="39:21" pos:end="39:36"><name pos:start="39:21" pos:end="39:32">stream_index</name> <operator pos:start="39:34" pos:end="39:34">=</operator> <literal type="number" pos:start="39:36" pos:end="39:36">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="41:19" pos:end="47:17">else <block pos:start="41:24" pos:end="47:17">{<block_content pos:start="43:21" pos:end="45:37">

                    <expr_stmt pos:start="43:21" pos:end="43:33"><expr pos:start="43:21" pos:end="43:32"><name pos:start="43:21" pos:end="43:22">oc</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:32"><name pos:start="43:26" pos:end="43:27">vs</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:32">avf</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:37"><expr pos:start="45:21" pos:end="45:36"><name pos:start="45:21" pos:end="45:32">stream_index</name> <operator pos:start="45:34" pos:end="45:34">=</operator> <name pos:start="45:36" pos:end="45:36">j</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="49:17" pos:end="49:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="57:9" pos:end="59:18"><if pos:start="57:9" pos:end="59:18">if <condition pos:start="57:12" pos:end="57:15">(<expr pos:start="57:13" pos:end="57:14"><name pos:start="57:13" pos:end="57:14">oc</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:18"><block_content pos:start="59:13" pos:end="59:18">

            <break pos:start="59:13" pos:end="59:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:12">(<expr pos:start="65:9" pos:end="65:11"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:11">oc</name></expr>)</condition> <block pos:start="65:14" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:31">

        <expr_stmt pos:start="67:9" pos:end="67:75"><expr pos:start="67:9" pos:end="67:74"><call pos:start="67:9" pos:end="67:74"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:74">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">s</name></expr></argument>, <argument pos:start="67:19" pos:end="67:30"><expr pos:start="67:19" pos:end="67:30"><name pos:start="67:19" pos:end="67:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:33" pos:end="67:73"><expr pos:start="67:33" pos:end="67:73"><literal type="string" pos:start="67:33" pos:end="67:73">"Unable to find mapping variant stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:31">return <expr pos:start="69:16" pos:end="69:30"><call pos:start="69:16" pos:end="69:30"><name pos:start="69:16" pos:end="69:22">AVERROR</name><argument_list pos:start="69:23" pos:end="69:30">(<argument pos:start="69:24" pos:end="69:29"><expr pos:start="69:24" pos:end="69:29"><name pos:start="69:24" pos:end="69:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:47"><expr pos:start="75:5" pos:end="75:46"><name pos:start="75:5" pos:end="75:11">end_pts</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:33"><name pos:start="75:15" pos:end="75:17">hls</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:33">recording_time</name></name> <operator pos:start="75:35" pos:end="75:35">*</operator> <name pos:start="75:37" pos:end="75:46"><name pos:start="75:37" pos:end="75:38">vs</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:46">number</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="91:5"><if pos:start="79:5" pos:end="91:5">if <condition pos:start="79:8" pos:end="79:82">(<expr pos:start="79:9" pos:end="79:81"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:10">vs</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:20">sequence</name></name> <operator pos:start="79:22" pos:end="79:22">-</operator> <name pos:start="79:24" pos:end="79:37"><name pos:start="79:24" pos:end="79:25">vs</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:37">nb_entries</name></name> <operator pos:start="79:39" pos:end="79:39">&gt;</operator> <name pos:start="79:41" pos:end="79:59"><name pos:start="79:41" pos:end="79:43">hls</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:59">start_sequence</name></name> <operator pos:start="79:61" pos:end="79:62">&amp;&amp;</operator> <name pos:start="79:64" pos:end="79:77"><name pos:start="79:64" pos:end="79:66">hls</name><operator pos:start="79:67" pos:end="79:68">-&gt;</operator><name pos:start="79:69" pos:end="79:77">init_time</name></name> <operator pos:start="79:79" pos:end="79:79">&gt;</operator> <literal type="number" pos:start="79:81" pos:end="79:81">0</literal></expr>)</condition> <block pos:start="79:84" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:55">

        <comment type="block" pos:start="81:9" pos:end="81:76">/* reset end_pts, hls-&gt;recording_time at end of the init hls list */</comment>

        <decl_stmt pos:start="83:9" pos:end="83:75"><decl pos:start="83:9" pos:end="83:74"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:25">init_list_dur</name> <init pos:start="83:27" pos:end="83:74">= <expr pos:start="83:29" pos:end="83:74"><name pos:start="83:29" pos:end="83:42"><name pos:start="83:29" pos:end="83:31">hls</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:42">init_time</name></name> <operator pos:start="83:44" pos:end="83:44">*</operator> <name pos:start="83:46" pos:end="83:59"><name pos:start="83:46" pos:end="83:47">vs</name><operator pos:start="83:48" pos:end="83:49">-&gt;</operator><name pos:start="83:50" pos:end="83:59">nb_entries</name></name> <operator pos:start="83:61" pos:end="83:61">*</operator> <name pos:start="83:63" pos:end="83:74">AV_TIME_BASE</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:94"><decl pos:start="85:9" pos:end="85:93"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:31">after_init_list_dur</name> <init pos:start="85:33" pos:end="85:93">= <expr pos:start="85:35" pos:end="85:93"><operator pos:start="85:35" pos:end="85:35">(</operator><name pos:start="85:36" pos:end="85:47"><name pos:start="85:36" pos:end="85:37">vs</name><operator pos:start="85:38" pos:end="85:39">-&gt;</operator><name pos:start="85:40" pos:end="85:47">sequence</name></name> <operator pos:start="85:49" pos:end="85:49">-</operator> <name pos:start="85:51" pos:end="85:64"><name pos:start="85:51" pos:end="85:52">vs</name><operator pos:start="85:53" pos:end="85:54">-&gt;</operator><name pos:start="85:55" pos:end="85:64">nb_entries</name></name> <operator pos:start="85:66" pos:end="85:66">)</operator> <operator pos:start="85:68" pos:end="85:68">*</operator> <name pos:start="85:70" pos:end="85:78"><name pos:start="85:70" pos:end="85:72">hls</name><operator pos:start="85:73" pos:end="85:74">-&gt;</operator><name pos:start="85:75" pos:end="85:78">time</name></name> <operator pos:start="85:80" pos:end="85:80">*</operator> <name pos:start="85:82" pos:end="85:93">AV_TIME_BASE</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:55"><expr pos:start="87:9" pos:end="87:54"><name pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:11">hls</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:27">recording_time</name></name> <operator pos:start="87:29" pos:end="87:29">=</operator> <name pos:start="87:31" pos:end="87:39"><name pos:start="87:31" pos:end="87:33">hls</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:39">time</name></name> <operator pos:start="87:41" pos:end="87:41">*</operator> <name pos:start="87:43" pos:end="87:54">AV_TIME_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:55"><expr pos:start="89:9" pos:end="89:53"><name pos:start="89:9" pos:end="89:15">end_pts</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:31">init_list_dur</name> <operator pos:start="89:33" pos:end="89:33">+</operator> <name pos:start="89:35" pos:end="89:53">after_init_list_dur</name></expr> ;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:40">(<expr pos:start="95:9" pos:end="95:39"><name pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:10">vs</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:21">start_pts</name></name> <operator pos:start="95:23" pos:end="95:24">==</operator> <name pos:start="95:26" pos:end="95:39">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="95:42" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:33">

        <expr_stmt pos:start="97:9" pos:end="97:33"><expr pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:10">vs</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:21">start_pts</name></name> <operator pos:start="97:23" pos:end="97:23">=</operator> <name pos:start="97:25" pos:end="97:32"><name pos:start="97:25" pos:end="97:27">pkt</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:32">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:33"><expr pos:start="99:9" pos:end="99:32"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:10">vs</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:19">end_pts</name></name>   <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:32"><name pos:start="99:25" pos:end="99:27">pkt</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:32">pts</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="105:22">(<expr pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:10">vs</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:21">has_video</name></name></expr>)</condition> <block pos:start="105:24" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:68">

        <expr_stmt pos:start="107:9" pos:end="109:89"><expr pos:start="107:9" pos:end="109:88"><name pos:start="107:9" pos:end="107:17">can_split</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:44"><name pos:start="107:21" pos:end="107:22">st</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:32">codecpar</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:44">codec_type</name></name> <operator pos:start="107:46" pos:end="107:47">==</operator> <name pos:start="107:49" pos:end="107:66">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="107:68" pos:end="107:69">&amp;&amp;</operator>

                    <operator pos:start="109:21" pos:end="109:21">(</operator><operator pos:start="109:22" pos:end="109:22">(</operator><name pos:start="109:23" pos:end="109:32"><name pos:start="109:23" pos:end="109:25">pkt</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:32">flags</name></name> <operator pos:start="109:34" pos:end="109:34">&amp;</operator> <name pos:start="109:36" pos:end="109:50">AV_PKT_FLAG_KEY</name><operator pos:start="109:51" pos:end="109:51">)</operator> <operator pos:start="109:53" pos:end="109:54">||</operator> <operator pos:start="109:56" pos:end="109:56">(</operator><name pos:start="109:57" pos:end="109:66"><name pos:start="109:57" pos:end="109:59">hls</name><operator pos:start="109:60" pos:end="109:61">-&gt;</operator><name pos:start="109:62" pos:end="109:66">flags</name></name> <operator pos:start="109:68" pos:end="109:68">&amp;</operator> <name pos:start="109:70" pos:end="109:86">HLS_SPLIT_BY_TIME</name><operator pos:start="109:87" pos:end="109:87">)</operator><operator pos:start="109:88" pos:end="109:88">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:68"><expr pos:start="111:9" pos:end="111:67"><name pos:start="111:9" pos:end="111:18">is_ref_pkt</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:45"><name pos:start="111:22" pos:end="111:23">st</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:33">codecpar</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:45">codec_type</name></name> <operator pos:start="111:47" pos:end="111:48">==</operator> <name pos:start="111:50" pos:end="111:67">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="117:35"><if pos:start="115:5" pos:end="117:35">if <condition pos:start="115:8" pos:end="115:35">(<expr pos:start="115:9" pos:end="115:34"><name pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:11">pkt</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:16">pts</name></name> <operator pos:start="115:18" pos:end="115:19">==</operator> <name pos:start="115:21" pos:end="115:34">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:35"><block_content pos:start="117:9" pos:end="117:35">

        <expr_stmt pos:start="117:9" pos:end="117:35"><expr pos:start="117:9" pos:end="117:34"><name pos:start="117:9" pos:end="117:18">is_ref_pkt</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <name pos:start="117:22" pos:end="117:30">can_split</name> <operator pos:start="117:32" pos:end="117:32">=</operator> <literal type="number" pos:start="117:34" pos:end="117:34">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="151:5"><if pos:start="121:5" pos:end="151:5">if <condition pos:start="121:8" pos:end="121:19">(<expr pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:18">is_ref_pkt</name></expr>)</condition> <block pos:start="121:21" pos:end="151:5">{<block_content pos:start="123:9" pos:end="147:9">

        <if_stmt pos:start="123:9" pos:end="147:9"><if pos:start="123:9" pos:end="133:9">if <condition pos:start="123:12" pos:end="123:26">(<expr pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:14">vs</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:25">new_start</name></name></expr>)</condition> <block pos:start="123:28" pos:end="133:9">{<block_content pos:start="125:13" pos:end="131:86">

            <expr_stmt pos:start="125:13" pos:end="125:30"><expr pos:start="125:13" pos:end="125:29"><name pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:14">vs</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:25">new_start</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <literal type="number" pos:start="125:29" pos:end="125:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="129:79"><expr pos:start="127:13" pos:end="129:78"><name pos:start="127:13" pos:end="127:24"><name pos:start="127:13" pos:end="127:14">vs</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:24">duration</name></name> <operator pos:start="127:26" pos:end="127:26">=</operator> <operator pos:start="127:28" pos:end="127:28">(</operator><name pos:start="127:29" pos:end="127:34">double</name><operator pos:start="127:35" pos:end="127:35">)</operator><operator pos:start="127:36" pos:end="127:36">(</operator><name pos:start="127:37" pos:end="127:44"><name pos:start="127:37" pos:end="127:39">pkt</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:44">pts</name></name> <operator pos:start="127:46" pos:end="127:46">-</operator> <name pos:start="127:48" pos:end="127:58"><name pos:start="127:48" pos:end="127:49">vs</name><operator pos:start="127:50" pos:end="127:51">-&gt;</operator><name pos:start="127:52" pos:end="127:58">end_pts</name></name><operator pos:start="127:59" pos:end="127:59">)</operator>

                                       <operator pos:start="129:40" pos:end="129:40">*</operator> <name pos:start="129:42" pos:end="129:58"><name pos:start="129:42" pos:end="129:43">st</name><operator pos:start="129:44" pos:end="129:45">-&gt;</operator><name pos:start="129:46" pos:end="129:54">time_base</name><operator pos:start="129:55" pos:end="129:55">.</operator><name pos:start="129:56" pos:end="129:58">num</name></name> <operator pos:start="129:60" pos:end="129:60">/</operator> <name pos:start="129:62" pos:end="129:78"><name pos:start="129:62" pos:end="129:63">st</name><operator pos:start="129:64" pos:end="129:65">-&gt;</operator><name pos:start="129:66" pos:end="129:74">time_base</name><operator pos:start="129:75" pos:end="129:75">.</operator><name pos:start="129:76" pos:end="129:78">den</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:86"><expr pos:start="131:13" pos:end="131:85"><name pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:14">vs</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:19">dpp</name></name> <operator pos:start="131:21" pos:end="131:21">=</operator> <operator pos:start="131:23" pos:end="131:23">(</operator><name pos:start="131:24" pos:end="131:29">double</name><operator pos:start="131:30" pos:end="131:30">)</operator><operator pos:start="131:31" pos:end="131:31">(</operator><name pos:start="131:32" pos:end="131:44"><name pos:start="131:32" pos:end="131:34">pkt</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:44">duration</name></name><operator pos:start="131:45" pos:end="131:45">)</operator> <operator pos:start="131:47" pos:end="131:47">*</operator> <name pos:start="131:49" pos:end="131:65"><name pos:start="131:49" pos:end="131:50">st</name><operator pos:start="131:51" pos:end="131:52">-&gt;</operator><name pos:start="131:53" pos:end="131:61">time_base</name><operator pos:start="131:62" pos:end="131:62">.</operator><name pos:start="131:63" pos:end="131:65">num</name></name> <operator pos:start="131:67" pos:end="131:67">/</operator> <name pos:start="131:69" pos:end="131:85"><name pos:start="131:69" pos:end="131:70">st</name><operator pos:start="131:71" pos:end="131:72">-&gt;</operator><name pos:start="131:73" pos:end="131:81">time_base</name><operator pos:start="131:82" pos:end="131:82">.</operator><name pos:start="131:83" pos:end="131:85">den</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="133:11" pos:end="147:9">else <block pos:start="133:16" pos:end="147:9">{<block_content pos:start="135:13" pos:end="145:13">

            <if_stmt pos:start="135:13" pos:end="145:13"><if pos:start="135:13" pos:end="139:13">if <condition pos:start="135:16" pos:end="135:30">(<expr pos:start="135:17" pos:end="135:29"><name pos:start="135:17" pos:end="135:29"><name pos:start="135:17" pos:end="135:19">pkt</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:29">duration</name></name></expr>)</condition> <block pos:start="135:32" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:96">

                <expr_stmt pos:start="137:17" pos:end="137:96"><expr pos:start="137:17" pos:end="137:95"><name pos:start="137:17" pos:end="137:28"><name pos:start="137:17" pos:end="137:18">vs</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:28">duration</name></name> <operator pos:start="137:30" pos:end="137:31">+=</operator> <operator pos:start="137:33" pos:end="137:33">(</operator><name pos:start="137:34" pos:end="137:39">double</name><operator pos:start="137:40" pos:end="137:40">)</operator><operator pos:start="137:41" pos:end="137:41">(</operator><name pos:start="137:42" pos:end="137:54"><name pos:start="137:42" pos:end="137:44">pkt</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:54">duration</name></name><operator pos:start="137:55" pos:end="137:55">)</operator> <operator pos:start="137:57" pos:end="137:57">*</operator> <name pos:start="137:59" pos:end="137:75"><name pos:start="137:59" pos:end="137:60">st</name><operator pos:start="137:61" pos:end="137:62">-&gt;</operator><name pos:start="137:63" pos:end="137:71">time_base</name><operator pos:start="137:72" pos:end="137:72">.</operator><name pos:start="137:73" pos:end="137:75">num</name></name> <operator pos:start="137:77" pos:end="137:77">/</operator> <name pos:start="137:79" pos:end="137:95"><name pos:start="137:79" pos:end="137:80">st</name><operator pos:start="137:81" pos:end="137:82">-&gt;</operator><name pos:start="137:83" pos:end="137:91">time_base</name><operator pos:start="137:92" pos:end="137:92">.</operator><name pos:start="137:93" pos:end="137:95">den</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="139:15" pos:end="145:13">else <block pos:start="139:20" pos:end="145:13">{<block_content pos:start="141:17" pos:end="143:104">

                <expr_stmt pos:start="141:17" pos:end="141:114"><expr pos:start="141:17" pos:end="141:113"><call pos:start="141:17" pos:end="141:113"><name pos:start="141:17" pos:end="141:22">av_log</name><argument_list pos:start="141:23" pos:end="141:113">(<argument pos:start="141:24" pos:end="141:24"><expr pos:start="141:24" pos:end="141:24"><name pos:start="141:24" pos:end="141:24">s</name></expr></argument>, <argument pos:start="141:27" pos:end="141:40"><expr pos:start="141:27" pos:end="141:40"><name pos:start="141:27" pos:end="141:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="141:43" pos:end="141:112"><expr pos:start="141:43" pos:end="141:112"><literal type="string" pos:start="141:43" pos:end="141:112">"pkt-&gt;duration = 0, maybe the hls segment duration will not precise\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:104"><expr pos:start="143:17" pos:end="143:103"><name pos:start="143:17" pos:end="143:28"><name pos:start="143:17" pos:end="143:18">vs</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:28">duration</name></name> <operator pos:start="143:30" pos:end="143:30">=</operator> <operator pos:start="143:32" pos:end="143:32">(</operator><name pos:start="143:33" pos:end="143:38">double</name><operator pos:start="143:39" pos:end="143:39">)</operator><operator pos:start="143:40" pos:end="143:40">(</operator><name pos:start="143:41" pos:end="143:48"><name pos:start="143:41" pos:end="143:43">pkt</name><operator pos:start="143:44" pos:end="143:45">-&gt;</operator><name pos:start="143:46" pos:end="143:48">pts</name></name> <operator pos:start="143:50" pos:end="143:50">-</operator> <name pos:start="143:52" pos:end="143:62"><name pos:start="143:52" pos:end="143:53">vs</name><operator pos:start="143:54" pos:end="143:55">-&gt;</operator><name pos:start="143:56" pos:end="143:62">end_pts</name></name><operator pos:start="143:63" pos:end="143:63">)</operator> <operator pos:start="143:65" pos:end="143:65">*</operator> <name pos:start="143:67" pos:end="143:83"><name pos:start="143:67" pos:end="143:68">st</name><operator pos:start="143:69" pos:end="143:70">-&gt;</operator><name pos:start="143:71" pos:end="143:79">time_base</name><operator pos:start="143:80" pos:end="143:80">.</operator><name pos:start="143:81" pos:end="143:83">num</name></name> <operator pos:start="143:85" pos:end="143:85">/</operator> <name pos:start="143:87" pos:end="143:103"><name pos:start="143:87" pos:end="143:88">st</name><operator pos:start="143:89" pos:end="143:90">-&gt;</operator><name pos:start="143:91" pos:end="143:99">time_base</name><operator pos:start="143:100" pos:end="143:100">.</operator><name pos:start="143:101" pos:end="143:103">den</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="155:5" pos:end="317:5"><if pos:start="155:5" pos:end="317:5">if <condition pos:start="155:8" pos:end="157:65">(<expr pos:start="155:9" pos:end="157:64"><name pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:10">vs</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:27">packets_written</name></name> <operator pos:start="155:29" pos:end="155:30">&amp;&amp;</operator> <name pos:start="155:32" pos:end="155:40">can_split</name> <operator pos:start="155:42" pos:end="155:43">&amp;&amp;</operator> <call pos:start="155:45" pos:end="157:59"><name pos:start="155:45" pos:end="155:57">av_compare_ts</name><argument_list pos:start="155:58" pos:end="157:59">(<argument pos:start="155:59" pos:end="155:82"><expr pos:start="155:59" pos:end="155:82"><name pos:start="155:59" pos:end="155:66"><name pos:start="155:59" pos:end="155:61">pkt</name><operator pos:start="155:62" pos:end="155:63">-&gt;</operator><name pos:start="155:64" pos:end="155:66">pts</name></name> <operator pos:start="155:68" pos:end="155:68">-</operator> <name pos:start="155:70" pos:end="155:82"><name pos:start="155:70" pos:end="155:71">vs</name><operator pos:start="155:72" pos:end="155:73">-&gt;</operator><name pos:start="155:74" pos:end="155:82">start_pts</name></name></expr></argument>, <argument pos:start="155:85" pos:end="155:97"><expr pos:start="155:85" pos:end="155:97"><name pos:start="155:85" pos:end="155:97"><name pos:start="155:85" pos:end="155:86">st</name><operator pos:start="155:87" pos:end="155:88">-&gt;</operator><name pos:start="155:89" pos:end="155:97">time_base</name></name></expr></argument>,

                                   <argument pos:start="157:36" pos:end="157:42"><expr pos:start="157:36" pos:end="157:42"><name pos:start="157:36" pos:end="157:42">end_pts</name></expr></argument>, <argument pos:start="157:45" pos:end="157:58"><expr pos:start="157:45" pos:end="157:58"><name pos:start="157:45" pos:end="157:58">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call> <operator pos:start="157:61" pos:end="157:62">&gt;=</operator> <literal type="number" pos:start="157:64" pos:end="157:64">0</literal></expr>)</condition> <block pos:start="157:67" pos:end="317:5">{<block_content pos:start="159:9" pos:end="315:13">

        <decl_stmt pos:start="159:9" pos:end="159:30"><decl pos:start="159:9" pos:end="159:29"><type pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:15">int64_t</name></type> <name pos:start="159:17" pos:end="159:29">new_start_pos</name></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:58"><decl pos:start="161:9" pos:end="161:57"><type pos:start="161:9" pos:end="161:14"><name pos:start="161:9" pos:end="161:12">char</name> <modifier pos:start="161:14" pos:end="161:14">*</modifier></type><name pos:start="161:15" pos:end="161:26">old_filename</name> <init pos:start="161:28" pos:end="161:57">= <expr pos:start="161:30" pos:end="161:57"><call pos:start="161:30" pos:end="161:57"><name pos:start="161:30" pos:end="161:38">av_strdup</name><argument_list pos:start="161:39" pos:end="161:57">(<argument pos:start="161:40" pos:end="161:56"><expr pos:start="161:40" pos:end="161:56"><name pos:start="161:40" pos:end="161:56"><name pos:start="161:40" pos:end="161:41">vs</name><operator pos:start="161:42" pos:end="161:43">-&gt;</operator><name pos:start="161:44" pos:end="161:46">avf</name><operator pos:start="161:47" pos:end="161:48">-&gt;</operator><name pos:start="161:49" pos:end="161:56">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="163:9" pos:end="163:87"><decl pos:start="163:9" pos:end="163:86"><type pos:start="163:9" pos:end="163:11"><name pos:start="163:9" pos:end="163:11">int</name></type> <name pos:start="163:13" pos:end="163:26">byterange_mode</name> <init pos:start="163:28" pos:end="163:86">= <expr pos:start="163:30" pos:end="163:86"><operator pos:start="163:30" pos:end="163:30">(</operator><name pos:start="163:31" pos:end="163:40"><name pos:start="163:31" pos:end="163:33">hls</name><operator pos:start="163:34" pos:end="163:35">-&gt;</operator><name pos:start="163:36" pos:end="163:40">flags</name></name> <operator pos:start="163:42" pos:end="163:42">&amp;</operator> <name pos:start="163:44" pos:end="163:58">HLS_SINGLE_FILE</name><operator pos:start="163:59" pos:end="163:59">)</operator> <operator pos:start="163:61" pos:end="163:62">||</operator> <operator pos:start="163:64" pos:end="163:64">(</operator><name pos:start="163:65" pos:end="163:81"><name pos:start="163:65" pos:end="163:67">hls</name><operator pos:start="163:68" pos:end="163:69">-&gt;</operator><name pos:start="163:70" pos:end="163:81">max_seg_size</name></name> <operator pos:start="163:83" pos:end="163:83">&gt;</operator> <literal type="number" pos:start="163:85" pos:end="163:85">0</literal><operator pos:start="163:86" pos:end="163:86">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="167:9" pos:end="171:9"><if pos:start="167:9" pos:end="171:9">if <condition pos:start="167:12" pos:end="167:26">(<expr pos:start="167:13" pos:end="167:25"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:25">old_filename</name></expr>)</condition> <block pos:start="167:28" pos:end="171:9">{<block_content pos:start="169:13" pos:end="169:35">

            <return pos:start="169:13" pos:end="169:35">return <expr pos:start="169:20" pos:end="169:34"><call pos:start="169:20" pos:end="169:34"><name pos:start="169:20" pos:end="169:26">AVERROR</name><argument_list pos:start="169:27" pos:end="169:34">(<argument pos:start="169:28" pos:end="169:33"><expr pos:start="169:28" pos:end="169:33"><name pos:start="169:28" pos:end="169:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:38"><expr pos:start="175:9" pos:end="175:37"><call pos:start="175:9" pos:end="175:37"><name pos:start="175:9" pos:end="175:22">av_write_frame</name><argument_list pos:start="175:23" pos:end="175:37">(<argument pos:start="175:24" pos:end="175:30"><expr pos:start="175:24" pos:end="175:30"><name pos:start="175:24" pos:end="175:30"><name pos:start="175:24" pos:end="175:25">vs</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:30">avf</name></name></expr></argument>, <argument pos:start="175:33" pos:end="175:36"><expr pos:start="175:33" pos:end="175:36"><name pos:start="175:33" pos:end="175:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="175:40" pos:end="175:68">/* Flush any buffered data */</comment>



        <expr_stmt pos:start="179:9" pos:end="179:47"><expr pos:start="179:9" pos:end="179:46"><name pos:start="179:9" pos:end="179:21">new_start_pos</name> <operator pos:start="179:23" pos:end="179:23">=</operator> <call pos:start="179:25" pos:end="179:46"><name pos:start="179:25" pos:end="179:33">avio_tell</name><argument_list pos:start="179:34" pos:end="179:46">(<argument pos:start="179:35" pos:end="179:45"><expr pos:start="179:35" pos:end="179:45"><name pos:start="179:35" pos:end="179:45"><name pos:start="179:35" pos:end="179:36">vs</name><operator pos:start="179:37" pos:end="179:38">-&gt;</operator><name pos:start="179:39" pos:end="179:41">avf</name><operator pos:start="179:42" pos:end="179:43">-&gt;</operator><name pos:start="179:44" pos:end="179:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:49"><expr pos:start="181:9" pos:end="181:48"><name pos:start="181:9" pos:end="181:16"><name pos:start="181:9" pos:end="181:10">vs</name><operator pos:start="181:11" pos:end="181:12">-&gt;</operator><name pos:start="181:13" pos:end="181:16">size</name></name> <operator pos:start="181:18" pos:end="181:18">=</operator> <name pos:start="181:20" pos:end="181:32">new_start_pos</name> <operator pos:start="181:34" pos:end="181:34">-</operator> <name pos:start="181:36" pos:end="181:48"><name pos:start="181:36" pos:end="181:37">vs</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:48">start_pos</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="185:9" pos:end="215:9"><if pos:start="185:9" pos:end="215:9">if <condition pos:start="185:12" pos:end="185:28">(<expr pos:start="185:13" pos:end="185:27"><operator pos:start="185:13" pos:end="185:13">!</operator><name pos:start="185:14" pos:end="185:27">byterange_mode</name></expr>)</condition> <block pos:start="185:30" pos:end="215:9">{<block_content pos:start="187:13" pos:end="213:13">

            <if_stmt pos:start="187:13" pos:end="207:13"><if pos:start="187:13" pos:end="203:13">if <condition pos:start="187:16" pos:end="187:81">(<expr pos:start="187:17" pos:end="187:80"><name pos:start="187:17" pos:end="187:33"><name pos:start="187:17" pos:end="187:19">hls</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:33">segment_type</name></name> <operator pos:start="187:35" pos:end="187:36">==</operator> <name pos:start="187:38" pos:end="187:54">SEGMENT_TYPE_FMP4</name> <operator pos:start="187:56" pos:end="187:57">&amp;&amp;</operator> <operator pos:start="187:59" pos:end="187:59">!</operator><name pos:start="187:60" pos:end="187:80"><name pos:start="187:60" pos:end="187:61">vs</name><operator pos:start="187:62" pos:end="187:63">-&gt;</operator><name pos:start="187:64" pos:end="187:80">init_range_length</name></name></expr>)</condition> <block pos:start="187:83" pos:end="203:13">{<block_content pos:start="189:17" pos:end="201:48">

                <expr_stmt pos:start="189:17" pos:end="189:35"><expr pos:start="189:17" pos:end="189:34"><call pos:start="189:17" pos:end="189:34"><name pos:start="189:17" pos:end="189:26">avio_flush</name><argument_list pos:start="189:27" pos:end="189:34">(<argument pos:start="189:28" pos:end="189:33"><expr pos:start="189:28" pos:end="189:33"><name pos:start="189:28" pos:end="189:33"><name pos:start="189:28" pos:end="189:29">oc</name><operator pos:start="189:30" pos:end="189:31">-&gt;</operator><name pos:start="189:32" pos:end="189:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:67"><expr pos:start="191:17" pos:end="191:66"><name pos:start="191:17" pos:end="191:28">range_length</name> <operator pos:start="191:30" pos:end="191:30">=</operator> <call pos:start="191:32" pos:end="191:66"><name pos:start="191:32" pos:end="191:49">avio_close_dyn_buf</name><argument_list pos:start="191:50" pos:end="191:66">(<argument pos:start="191:51" pos:end="191:56"><expr pos:start="191:51" pos:end="191:56"><name pos:start="191:51" pos:end="191:56"><name pos:start="191:51" pos:end="191:52">oc</name><operator pos:start="191:53" pos:end="191:54">-&gt;</operator><name pos:start="191:55" pos:end="191:56">pb</name></name></expr></argument>, <argument pos:start="191:59" pos:end="191:65"><expr pos:start="191:59" pos:end="191:65"><operator pos:start="191:59" pos:end="191:59">&amp;</operator><name pos:start="191:60" pos:end="191:65">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:58"><expr pos:start="193:17" pos:end="193:57"><call pos:start="193:17" pos:end="193:57"><name pos:start="193:17" pos:end="193:26">avio_write</name><argument_list pos:start="193:27" pos:end="193:57">(<argument pos:start="193:28" pos:end="193:34"><expr pos:start="193:28" pos:end="193:34"><name pos:start="193:28" pos:end="193:34"><name pos:start="193:28" pos:end="193:29">vs</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:34">out</name></name></expr></argument>, <argument pos:start="193:37" pos:end="193:42"><expr pos:start="193:37" pos:end="193:42"><name pos:start="193:37" pos:end="193:42">buffer</name></expr></argument>, <argument pos:start="193:45" pos:end="193:56"><expr pos:start="193:45" pos:end="193:56"><name pos:start="193:45" pos:end="193:56">range_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:53"><expr pos:start="195:17" pos:end="195:52"><name pos:start="195:17" pos:end="195:37"><name pos:start="195:17" pos:end="195:18">vs</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:37">init_range_length</name></name> <operator pos:start="195:39" pos:end="195:39">=</operator> <name pos:start="195:41" pos:end="195:52">range_length</name></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:43"><expr pos:start="197:17" pos:end="197:42"><call pos:start="197:17" pos:end="197:42"><name pos:start="197:17" pos:end="197:33">avio_open_dyn_buf</name><argument_list pos:start="197:34" pos:end="197:42">(<argument pos:start="197:35" pos:end="197:41"><expr pos:start="197:35" pos:end="197:41"><operator pos:start="197:35" pos:end="197:35">&amp;</operator><name pos:start="197:36" pos:end="197:41"><name pos:start="197:36" pos:end="197:37">oc</name><operator pos:start="197:38" pos:end="197:39">-&gt;</operator><name pos:start="197:40" pos:end="197:41">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:40"><expr pos:start="199:17" pos:end="199:39"><name pos:start="199:17" pos:end="199:35"><name pos:start="199:17" pos:end="199:18">vs</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:35">packets_written</name></name> <operator pos:start="199:37" pos:end="199:37">=</operator> <literal type="number" pos:start="199:39" pos:end="199:39">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:48"><expr pos:start="201:17" pos:end="201:47"><call pos:start="201:17" pos:end="201:47"><name pos:start="201:17" pos:end="201:34">ff_format_io_close</name><argument_list pos:start="201:35" pos:end="201:47">(<argument pos:start="201:36" pos:end="201:36"><expr pos:start="201:36" pos:end="201:36"><name pos:start="201:36" pos:end="201:36">s</name></expr></argument>, <argument pos:start="201:39" pos:end="201:46"><expr pos:start="201:39" pos:end="201:46"><operator pos:start="201:39" pos:end="201:39">&amp;</operator><name pos:start="201:40" pos:end="201:46"><name pos:start="201:40" pos:end="201:41">vs</name><operator pos:start="201:42" pos:end="201:43">-&gt;</operator><name pos:start="201:44" pos:end="201:46">out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="203:15" pos:end="207:13">else <block pos:start="203:20" pos:end="207:13">{<block_content pos:start="205:17" pos:end="205:47">

                <expr_stmt pos:start="205:17" pos:end="205:47"><expr pos:start="205:17" pos:end="205:46"><call pos:start="205:17" pos:end="205:46"><name pos:start="205:17" pos:end="205:34">ff_format_io_close</name><argument_list pos:start="205:35" pos:end="205:46">(<argument pos:start="205:36" pos:end="205:36"><expr pos:start="205:36" pos:end="205:36"><name pos:start="205:36" pos:end="205:36">s</name></expr></argument>, <argument pos:start="205:39" pos:end="205:45"><expr pos:start="205:39" pos:end="205:45"><operator pos:start="205:39" pos:end="205:39">&amp;</operator><name pos:start="205:40" pos:end="205:45"><name pos:start="205:40" pos:end="205:41">oc</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="209:13" pos:end="213:13"><if pos:start="209:13" pos:end="213:13">if <condition pos:start="209:16" pos:end="209:28">(<expr pos:start="209:17" pos:end="209:27"><name pos:start="209:17" pos:end="209:27"><name pos:start="209:17" pos:end="209:18">vs</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:27">vtt_avf</name></name></expr>)</condition> <block pos:start="209:30" pos:end="213:13">{<block_content pos:start="211:17" pos:end="211:56">

                <expr_stmt pos:start="211:17" pos:end="211:56"><expr pos:start="211:17" pos:end="211:55"><call pos:start="211:17" pos:end="211:55"><name pos:start="211:17" pos:end="211:34">ff_format_io_close</name><argument_list pos:start="211:35" pos:end="211:55">(<argument pos:start="211:36" pos:end="211:36"><expr pos:start="211:36" pos:end="211:36"><name pos:start="211:36" pos:end="211:36">s</name></expr></argument>, <argument pos:start="211:39" pos:end="211:54"><expr pos:start="211:39" pos:end="211:54"><operator pos:start="211:39" pos:end="211:39">&amp;</operator><name pos:start="211:40" pos:end="211:54"><name pos:start="211:40" pos:end="211:41">vs</name><operator pos:start="211:42" pos:end="211:43">-&gt;</operator><name pos:start="211:44" pos:end="211:50">vtt_avf</name><operator pos:start="211:51" pos:end="211:52">-&gt;</operator><name pos:start="211:53" pos:end="211:54">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="217:9" pos:end="227:9"><if pos:start="217:9" pos:end="227:9">if <condition pos:start="217:12" pos:end="217:60">(<expr pos:start="217:13" pos:end="217:59"><operator pos:start="217:13" pos:end="217:13">(</operator><name pos:start="217:14" pos:end="217:23"><name pos:start="217:14" pos:end="217:16">hls</name><operator pos:start="217:17" pos:end="217:18">-&gt;</operator><name pos:start="217:19" pos:end="217:23">flags</name></name> <operator pos:start="217:25" pos:end="217:25">&amp;</operator> <name pos:start="217:27" pos:end="217:39">HLS_TEMP_FILE</name><operator pos:start="217:40" pos:end="217:40">)</operator> <operator pos:start="217:42" pos:end="217:43">&amp;&amp;</operator> <name pos:start="217:45" pos:end="217:59"><name pos:start="217:45" pos:end="217:46">oc</name><operator pos:start="217:47" pos:end="217:48">-&gt;</operator><name pos:start="217:49" pos:end="217:56">filename</name><index pos:start="217:57" pos:end="217:59">[<expr pos:start="217:58" pos:end="217:58"><literal type="number" pos:start="217:58" pos:end="217:58">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="217:62" pos:end="227:9">{<block_content pos:start="219:13" pos:end="225:40">

            <if_stmt pos:start="219:13" pos:end="223:88"><if pos:start="219:13" pos:end="223:88">if <condition pos:start="219:16" pos:end="219:76">(<expr pos:start="219:17" pos:end="219:75"><operator pos:start="219:17" pos:end="219:17">!</operator><operator pos:start="219:18" pos:end="219:18">(</operator><name pos:start="219:19" pos:end="219:28"><name pos:start="219:19" pos:end="219:21">hls</name><operator pos:start="219:22" pos:end="219:23">-&gt;</operator><name pos:start="219:24" pos:end="219:28">flags</name></name> <operator pos:start="219:30" pos:end="219:30">&amp;</operator> <name pos:start="219:32" pos:end="219:46">HLS_SINGLE_FILE</name><operator pos:start="219:47" pos:end="219:47">)</operator> <operator pos:start="219:49" pos:end="219:50">||</operator> <operator pos:start="219:52" pos:end="219:52">(</operator><name pos:start="219:53" pos:end="219:69"><name pos:start="219:53" pos:end="219:55">hls</name><operator pos:start="219:56" pos:end="219:57">-&gt;</operator><name pos:start="219:58" pos:end="219:69">max_seg_size</name></name> <operator pos:start="219:71" pos:end="219:72">&lt;=</operator> <literal type="number" pos:start="219:74" pos:end="219:74">0</literal><operator pos:start="219:75" pos:end="219:75">)</operator></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="223:88"><block_content pos:start="221:17" pos:end="223:88">

                <if_stmt pos:start="221:17" pos:end="223:88"><if pos:start="221:17" pos:end="223:88">if <condition pos:start="221:20" pos:end="221:115">(<expr pos:start="221:21" pos:end="221:114"><operator pos:start="221:21" pos:end="221:21">(</operator><name pos:start="221:22" pos:end="221:49"><name pos:start="221:22" pos:end="221:23">vs</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:28">avf</name><operator pos:start="221:29" pos:end="221:30">-&gt;</operator><name pos:start="221:31" pos:end="221:37">oformat</name><operator pos:start="221:38" pos:end="221:39">-&gt;</operator><name pos:start="221:40" pos:end="221:49">priv_class</name></name> <operator pos:start="221:51" pos:end="221:52">&amp;&amp;</operator> <name pos:start="221:54" pos:end="221:71"><name pos:start="221:54" pos:end="221:55">vs</name><operator pos:start="221:56" pos:end="221:57">-&gt;</operator><name pos:start="221:58" pos:end="221:60">avf</name><operator pos:start="221:61" pos:end="221:62">-&gt;</operator><name pos:start="221:63" pos:end="221:71">priv_data</name></name><operator pos:start="221:72" pos:end="221:72">)</operator> <operator pos:start="221:74" pos:end="221:75">&amp;&amp;</operator> <name pos:start="221:77" pos:end="221:93"><name pos:start="221:77" pos:end="221:79">hls</name><operator pos:start="221:80" pos:end="221:81">-&gt;</operator><name pos:start="221:82" pos:end="221:93">segment_type</name></name> <operator pos:start="221:95" pos:end="221:96">!=</operator> <name pos:start="221:98" pos:end="221:114">SEGMENT_TYPE_FMP4</name></expr>)</condition><block type="pseudo" pos:start="223:21" pos:end="223:88"><block_content pos:start="223:21" pos:end="223:88">

                    <expr_stmt pos:start="223:21" pos:end="223:88"><expr pos:start="223:21" pos:end="223:87"><call pos:start="223:21" pos:end="223:87"><name pos:start="223:21" pos:end="223:30">av_opt_set</name><argument_list pos:start="223:31" pos:end="223:87">(<argument pos:start="223:32" pos:end="223:49"><expr pos:start="223:32" pos:end="223:49"><name pos:start="223:32" pos:end="223:49"><name pos:start="223:32" pos:end="223:33">vs</name><operator pos:start="223:34" pos:end="223:35">-&gt;</operator><name pos:start="223:36" pos:end="223:38">avf</name><operator pos:start="223:39" pos:end="223:40">-&gt;</operator><name pos:start="223:41" pos:end="223:49">priv_data</name></name></expr></argument>, <argument pos:start="223:52" pos:end="223:65"><expr pos:start="223:52" pos:end="223:65"><literal type="string" pos:start="223:52" pos:end="223:65">"mpegts_flags"</literal></expr></argument>, <argument pos:start="223:68" pos:end="223:83"><expr pos:start="223:68" pos:end="223:83"><literal type="string" pos:start="223:68" pos:end="223:83">"resend_headers"</literal></expr></argument>, <argument pos:start="223:86" pos:end="223:86"><expr pos:start="223:86" pos:end="223:86"><literal type="number" pos:start="223:86" pos:end="223:86">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:40"><expr pos:start="225:13" pos:end="225:39"><call pos:start="225:13" pos:end="225:39"><name pos:start="225:13" pos:end="225:32">hls_rename_temp_file</name><argument_list pos:start="225:33" pos:end="225:39">(<argument pos:start="225:34" pos:end="225:34"><expr pos:start="225:34" pos:end="225:34"><name pos:start="225:34" pos:end="225:34">s</name></expr></argument>, <argument pos:start="225:37" pos:end="225:38"><expr pos:start="225:37" pos:end="225:38"><name pos:start="225:37" pos:end="225:38">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="231:9" pos:end="235:9"><if pos:start="231:9" pos:end="235:9">if <condition pos:start="231:12" pos:end="231:31">(<expr pos:start="231:13" pos:end="231:30"><name pos:start="231:13" pos:end="231:30"><name pos:start="231:13" pos:end="231:14">vs</name><operator pos:start="231:15" pos:end="231:16">-&gt;</operator><name pos:start="231:17" pos:end="231:30">fmp4_init_mode</name></name></expr>)</condition> <block pos:start="231:33" pos:end="235:9">{<block_content pos:start="233:13" pos:end="233:25">

            <expr_stmt pos:start="233:13" pos:end="233:25"><expr pos:start="233:13" pos:end="233:24"><name pos:start="233:13" pos:end="233:22"><name pos:start="233:13" pos:end="233:14">vs</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:22">number</name></name><operator pos:start="233:23" pos:end="233:24">--</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="239:9" pos:end="241:88"><if pos:start="239:9" pos:end="241:88">if <condition pos:start="239:12" pos:end="239:50">(<expr pos:start="239:13" pos:end="239:49"><operator pos:start="239:13" pos:end="239:13">!</operator><name pos:start="239:14" pos:end="239:31"><name pos:start="239:14" pos:end="239:15">vs</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:31">fmp4_init_mode</name></name> <operator pos:start="239:33" pos:end="239:34">||</operator> <name pos:start="239:36" pos:end="239:49">byterange_mode</name></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:88"><block_content pos:start="241:13" pos:end="241:88">

            <expr_stmt pos:start="241:13" pos:end="241:88"><expr pos:start="241:13" pos:end="241:87"><name pos:start="241:13" pos:end="241:15">ret</name> <operator pos:start="241:17" pos:end="241:17">=</operator> <call pos:start="241:19" pos:end="241:87"><name pos:start="241:19" pos:end="241:36">hls_append_segment</name><argument_list pos:start="241:37" pos:end="241:87">(<argument pos:start="241:38" pos:end="241:38"><expr pos:start="241:38" pos:end="241:38"><name pos:start="241:38" pos:end="241:38">s</name></expr></argument>, <argument pos:start="241:41" pos:end="241:43"><expr pos:start="241:41" pos:end="241:43"><name pos:start="241:41" pos:end="241:43">hls</name></expr></argument>, <argument pos:start="241:46" pos:end="241:47"><expr pos:start="241:46" pos:end="241:47"><name pos:start="241:46" pos:end="241:47">vs</name></expr></argument>, <argument pos:start="241:50" pos:end="241:61"><expr pos:start="241:50" pos:end="241:61"><name pos:start="241:50" pos:end="241:61"><name pos:start="241:50" pos:end="241:51">vs</name><operator pos:start="241:52" pos:end="241:53">-&gt;</operator><name pos:start="241:54" pos:end="241:61">duration</name></name></expr></argument>, <argument pos:start="241:64" pos:end="241:76"><expr pos:start="241:64" pos:end="241:76"><name pos:start="241:64" pos:end="241:76"><name pos:start="241:64" pos:end="241:65">vs</name><operator pos:start="241:66" pos:end="241:67">-&gt;</operator><name pos:start="241:68" pos:end="241:76">start_pos</name></name></expr></argument>, <argument pos:start="241:79" pos:end="241:86"><expr pos:start="241:79" pos:end="241:86"><name pos:start="241:79" pos:end="241:86"><name pos:start="241:79" pos:end="241:80">vs</name><operator pos:start="241:81" pos:end="241:82">-&gt;</operator><name pos:start="241:83" pos:end="241:86">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:38"><expr pos:start="243:9" pos:end="243:37"><name pos:start="243:9" pos:end="243:21"><name pos:start="243:9" pos:end="243:10">vs</name><operator pos:start="243:11" pos:end="243:12">-&gt;</operator><name pos:start="243:13" pos:end="243:21">start_pos</name></name> <operator pos:start="243:23" pos:end="243:23">=</operator> <name pos:start="243:25" pos:end="243:37">new_start_pos</name></expr>;</expr_stmt>

        <if_stmt pos:start="245:9" pos:end="251:9"><if pos:start="245:9" pos:end="251:9">if <condition pos:start="245:12" pos:end="245:20">(<expr pos:start="245:13" pos:end="245:19"><name pos:start="245:13" pos:end="245:15">ret</name> <operator pos:start="245:17" pos:end="245:17">&lt;</operator> <literal type="number" pos:start="245:19" pos:end="245:19">0</literal></expr>)</condition> <block pos:start="245:22" pos:end="251:9">{<block_content pos:start="247:13" pos:end="249:23">

            <expr_stmt pos:start="247:13" pos:end="247:34"><expr pos:start="247:13" pos:end="247:33"><call pos:start="247:13" pos:end="247:33"><name pos:start="247:13" pos:end="247:19">av_free</name><argument_list pos:start="247:20" pos:end="247:33">(<argument pos:start="247:21" pos:end="247:32"><expr pos:start="247:21" pos:end="247:32"><name pos:start="247:21" pos:end="247:32">old_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="249:13" pos:end="249:23">return <expr pos:start="249:20" pos:end="249:22"><name pos:start="249:20" pos:end="249:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="255:9" pos:end="255:31"><expr pos:start="255:9" pos:end="255:30"><name pos:start="255:9" pos:end="255:19"><name pos:start="255:9" pos:end="255:10">vs</name><operator pos:start="255:11" pos:end="255:12">-&gt;</operator><name pos:start="255:13" pos:end="255:19">end_pts</name></name> <operator pos:start="255:21" pos:end="255:21">=</operator> <name pos:start="255:23" pos:end="255:30"><name pos:start="255:23" pos:end="255:25">pkt</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:30">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:25"><expr pos:start="257:9" pos:end="257:24"><name pos:start="257:9" pos:end="257:20"><name pos:start="257:9" pos:end="257:10">vs</name><operator pos:start="257:11" pos:end="257:12">-&gt;</operator><name pos:start="257:13" pos:end="257:20">duration</name></name> <operator pos:start="257:22" pos:end="257:22">=</operator> <literal type="number" pos:start="257:24" pos:end="257:24">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="261:9" pos:end="261:31"><expr pos:start="261:9" pos:end="261:30"><name pos:start="261:9" pos:end="261:26"><name pos:start="261:9" pos:end="261:10">vs</name><operator pos:start="261:11" pos:end="261:12">-&gt;</operator><name pos:start="261:13" pos:end="261:26">fmp4_init_mode</name></name> <operator pos:start="261:28" pos:end="261:28">=</operator> <literal type="number" pos:start="261:30" pos:end="261:30">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="263:9" pos:end="295:9"><if pos:start="263:9" pos:end="267:9">if <condition pos:start="263:12" pos:end="263:41">(<expr pos:start="263:13" pos:end="263:40"><name pos:start="263:13" pos:end="263:22"><name pos:start="263:13" pos:end="263:15">hls</name><operator pos:start="263:16" pos:end="263:17">-&gt;</operator><name pos:start="263:18" pos:end="263:22">flags</name></name> <operator pos:start="263:24" pos:end="263:24">&amp;</operator> <name pos:start="263:26" pos:end="263:40">HLS_SINGLE_FILE</name></expr>)</condition> <block pos:start="263:43" pos:end="267:9">{<block_content pos:start="265:13" pos:end="265:25">

            <expr_stmt pos:start="265:13" pos:end="265:25"><expr pos:start="265:13" pos:end="265:24"><name pos:start="265:13" pos:end="265:22"><name pos:start="265:13" pos:end="265:14">vs</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:22">number</name></name><operator pos:start="265:23" pos:end="265:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="267:11" pos:end="289:9">else if <condition pos:start="267:19" pos:end="267:41">(<expr pos:start="267:20" pos:end="267:40"><name pos:start="267:20" pos:end="267:36"><name pos:start="267:20" pos:end="267:22">hls</name><operator pos:start="267:23" pos:end="267:24">-&gt;</operator><name pos:start="267:25" pos:end="267:36">max_seg_size</name></name> <operator pos:start="267:38" pos:end="267:38">&gt;</operator> <literal type="number" pos:start="267:40" pos:end="267:40">0</literal></expr>)</condition> <block pos:start="267:43" pos:end="289:9">{<block_content pos:start="269:13" pos:end="287:25">

            <if_stmt pos:start="269:13" pos:end="285:13"><if pos:start="269:13" pos:end="285:13">if <condition pos:start="269:16" pos:end="269:51">(<expr pos:start="269:17" pos:end="269:50"><name pos:start="269:17" pos:end="269:29"><name pos:start="269:17" pos:end="269:18">vs</name><operator pos:start="269:19" pos:end="269:20">-&gt;</operator><name pos:start="269:21" pos:end="269:29">start_pos</name></name> <operator pos:start="269:31" pos:end="269:32">&gt;=</operator> <name pos:start="269:34" pos:end="269:50"><name pos:start="269:34" pos:end="269:36">hls</name><operator pos:start="269:37" pos:end="269:38">-&gt;</operator><name pos:start="269:39" pos:end="269:50">max_seg_size</name></name></expr>)</condition> <block pos:start="269:53" pos:end="285:13">{<block_content pos:start="271:17" pos:end="283:29">

                <expr_stmt pos:start="271:17" pos:end="271:31"><expr pos:start="271:17" pos:end="271:30"><name pos:start="271:17" pos:end="271:28"><name pos:start="271:17" pos:end="271:18">vs</name><operator pos:start="271:19" pos:end="271:20">-&gt;</operator><name pos:start="271:21" pos:end="271:28">sequence</name></name><operator pos:start="271:29" pos:end="271:30">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:60"><expr pos:start="273:17" pos:end="273:59"><call pos:start="273:17" pos:end="273:59"><name pos:start="273:17" pos:end="273:36">sls_flag_file_rename</name><argument_list pos:start="273:37" pos:end="273:59">(<argument pos:start="273:38" pos:end="273:40"><expr pos:start="273:38" pos:end="273:40"><name pos:start="273:38" pos:end="273:40">hls</name></expr></argument>, <argument pos:start="273:43" pos:end="273:44"><expr pos:start="273:43" pos:end="273:44"><name pos:start="273:43" pos:end="273:44">vs</name></expr></argument>, <argument pos:start="273:47" pos:end="273:58"><expr pos:start="273:47" pos:end="273:58"><name pos:start="273:47" pos:end="273:58">old_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:39"><expr pos:start="275:17" pos:end="275:38"><name pos:start="275:17" pos:end="275:19">ret</name> <operator pos:start="275:21" pos:end="275:21">=</operator> <call pos:start="275:23" pos:end="275:38"><name pos:start="275:23" pos:end="275:31">hls_start</name><argument_list pos:start="275:32" pos:end="275:38">(<argument pos:start="275:33" pos:end="275:33"><expr pos:start="275:33" pos:end="275:33"><name pos:start="275:33" pos:end="275:33">s</name></expr></argument>, <argument pos:start="275:36" pos:end="275:37"><expr pos:start="275:36" pos:end="275:37"><name pos:start="275:36" pos:end="275:37">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:34"><expr pos:start="277:17" pos:end="277:33"><name pos:start="277:17" pos:end="277:29"><name pos:start="277:17" pos:end="277:18">vs</name><operator pos:start="277:19" pos:end="277:20">-&gt;</operator><name pos:start="277:21" pos:end="277:29">start_pos</name></name> <operator pos:start="277:31" pos:end="277:31">=</operator> <literal type="number" pos:start="277:33" pos:end="277:33">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="279:17" pos:end="281:75">/* When split segment by byte, the duration is short than hls_time,

                 * so it is not enough one segment duration as hls_time, */</comment>

                <expr_stmt pos:start="283:17" pos:end="283:29"><expr pos:start="283:17" pos:end="283:28"><name pos:start="283:17" pos:end="283:26"><name pos:start="283:17" pos:end="283:18">vs</name><operator pos:start="283:19" pos:end="283:20">-&gt;</operator><name pos:start="283:21" pos:end="283:26">number</name></name><operator pos:start="283:27" pos:end="283:28">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:25"><expr pos:start="287:13" pos:end="287:24"><name pos:start="287:13" pos:end="287:22"><name pos:start="287:13" pos:end="287:14">vs</name><operator pos:start="287:15" pos:end="287:16">-&gt;</operator><name pos:start="287:17" pos:end="287:22">number</name></name><operator pos:start="287:23" pos:end="287:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="289:11" pos:end="295:9">else <block pos:start="289:16" pos:end="295:9">{<block_content pos:start="291:13" pos:end="293:35">

            <expr_stmt pos:start="291:13" pos:end="291:56"><expr pos:start="291:13" pos:end="291:55"><call pos:start="291:13" pos:end="291:55"><name pos:start="291:13" pos:end="291:32">sls_flag_file_rename</name><argument_list pos:start="291:33" pos:end="291:55">(<argument pos:start="291:34" pos:end="291:36"><expr pos:start="291:34" pos:end="291:36"><name pos:start="291:34" pos:end="291:36">hls</name></expr></argument>, <argument pos:start="291:39" pos:end="291:40"><expr pos:start="291:39" pos:end="291:40"><name pos:start="291:39" pos:end="291:40">vs</name></expr></argument>, <argument pos:start="291:43" pos:end="291:54"><expr pos:start="291:43" pos:end="291:54"><name pos:start="291:43" pos:end="291:54">old_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:35"><expr pos:start="293:13" pos:end="293:34"><name pos:start="293:13" pos:end="293:15">ret</name> <operator pos:start="293:17" pos:end="293:17">=</operator> <call pos:start="293:19" pos:end="293:34"><name pos:start="293:19" pos:end="293:27">hls_start</name><argument_list pos:start="293:28" pos:end="293:34">(<argument pos:start="293:29" pos:end="293:29"><expr pos:start="293:29" pos:end="293:29"><name pos:start="293:29" pos:end="293:29">s</name></expr></argument>, <argument pos:start="293:32" pos:end="293:33"><expr pos:start="293:32" pos:end="293:33"><name pos:start="293:32" pos:end="293:33">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:30"><expr pos:start="297:9" pos:end="297:29"><call pos:start="297:9" pos:end="297:29"><name pos:start="297:9" pos:end="297:15">av_free</name><argument_list pos:start="297:16" pos:end="297:29">(<argument pos:start="297:17" pos:end="297:28"><expr pos:start="297:17" pos:end="297:28"><name pos:start="297:17" pos:end="297:28">old_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="301:9" pos:end="305:9"><if pos:start="301:9" pos:end="305:9">if <condition pos:start="301:12" pos:end="301:20">(<expr pos:start="301:13" pos:end="301:19"><name pos:start="301:13" pos:end="301:15">ret</name> <operator pos:start="301:17" pos:end="301:17">&lt;</operator> <literal type="number" pos:start="301:19" pos:end="301:19">0</literal></expr>)</condition> <block pos:start="301:22" pos:end="305:9">{<block_content pos:start="303:13" pos:end="303:23">

            <return pos:start="303:13" pos:end="303:23">return <expr pos:start="303:20" pos:end="303:22"><name pos:start="303:20" pos:end="303:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="309:9" pos:end="315:13"><if pos:start="309:9" pos:end="315:13">if <condition pos:start="309:12" pos:end="309:50">(<expr pos:start="309:13" pos:end="309:49"><operator pos:start="309:13" pos:end="309:13">!</operator><name pos:start="309:14" pos:end="309:31"><name pos:start="309:14" pos:end="309:15">vs</name><operator pos:start="309:16" pos:end="309:17">-&gt;</operator><name pos:start="309:18" pos:end="309:31">fmp4_init_mode</name></name> <operator pos:start="309:33" pos:end="309:34">||</operator> <name pos:start="309:36" pos:end="309:49">byterange_mode</name></expr>)</condition><block type="pseudo" pos:start="311:13" pos:end="315:13"><block_content pos:start="311:13" pos:end="315:13">

            <if_stmt pos:start="311:13" pos:end="315:13"><if pos:start="311:13" pos:end="315:13">if <condition pos:start="311:16" pos:end="311:49">(<expr pos:start="311:17" pos:end="311:48"><operator pos:start="311:17" pos:end="311:17">(</operator><name pos:start="311:18" pos:end="311:20">ret</name> <operator pos:start="311:22" pos:end="311:22">=</operator> <call pos:start="311:24" pos:end="311:43"><name pos:start="311:24" pos:end="311:33">hls_window</name><argument_list pos:start="311:34" pos:end="311:43">(<argument pos:start="311:35" pos:end="311:35"><expr pos:start="311:35" pos:end="311:35"><name pos:start="311:35" pos:end="311:35">s</name></expr></argument>, <argument pos:start="311:38" pos:end="311:38"><expr pos:start="311:38" pos:end="311:38"><literal type="number" pos:start="311:38" pos:end="311:38">0</literal></expr></argument>, <argument pos:start="311:41" pos:end="311:42"><expr pos:start="311:41" pos:end="311:42"><name pos:start="311:41" pos:end="311:42">vs</name></expr></argument>)</argument_list></call><operator pos:start="311:44" pos:end="311:44">)</operator> <operator pos:start="311:46" pos:end="311:46">&lt;</operator> <literal type="number" pos:start="311:48" pos:end="311:48">0</literal></expr>)</condition> <block pos:start="311:51" pos:end="315:13">{<block_content pos:start="313:17" pos:end="313:27">

                <return pos:start="313:17" pos:end="313:27">return <expr pos:start="313:24" pos:end="313:26"><name pos:start="313:24" pos:end="313:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="321:5" pos:end="321:26"><expr pos:start="321:5" pos:end="321:25"><name pos:start="321:5" pos:end="321:23"><name pos:start="321:5" pos:end="321:6">vs</name><operator pos:start="321:7" pos:end="321:8">-&gt;</operator><name pos:start="321:9" pos:end="321:23">packets_written</name></name><operator pos:start="321:24" pos:end="321:25">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:56"><expr pos:start="323:5" pos:end="323:55"><name pos:start="323:5" pos:end="323:7">ret</name> <operator pos:start="323:9" pos:end="323:9">=</operator> <call pos:start="323:11" pos:end="323:55"><name pos:start="323:11" pos:end="323:26">ff_write_chained</name><argument_list pos:start="323:27" pos:end="323:55">(<argument pos:start="323:28" pos:end="323:29"><expr pos:start="323:28" pos:end="323:29"><name pos:start="323:28" pos:end="323:29">oc</name></expr></argument>, <argument pos:start="323:32" pos:end="323:43"><expr pos:start="323:32" pos:end="323:43"><name pos:start="323:32" pos:end="323:43">stream_index</name></expr></argument>, <argument pos:start="323:46" pos:end="323:48"><expr pos:start="323:46" pos:end="323:48"><name pos:start="323:46" pos:end="323:48">pkt</name></expr></argument>, <argument pos:start="323:51" pos:end="323:51"><expr pos:start="323:51" pos:end="323:51"><name pos:start="323:51" pos:end="323:51">s</name></expr></argument>, <argument pos:start="323:54" pos:end="323:54"><expr pos:start="323:54" pos:end="323:54"><literal type="number" pos:start="323:54" pos:end="323:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="327:5" pos:end="327:15">return <expr pos:start="327:12" pos:end="327:14"><name pos:start="327:12" pos:end="327:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
