<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22520.c" pos:tabs="8"><function pos:start="1:1" pos:end="434:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">sd_rsp_type_t</name></type> <name pos:start="1:22" pos:end="1:38">sd_normal_command</name><parameter_list pos:start="1:39" pos:end="2:53">(<parameter pos:start="1:40" pos:end="1:50"><decl pos:start="1:40" pos:end="1:50"><type pos:start="1:40" pos:end="1:50"><name pos:start="1:40" pos:end="1:46">SDState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">sd</name></decl></parameter>,
                                       <parameter pos:start="2:40" pos:end="2:52"><decl pos:start="2:40" pos:end="2:52"><type pos:start="2:40" pos:end="2:52"><name pos:start="2:40" pos:end="2:48">SDRequest</name></type> <name pos:start="2:50" pos:end="2:52">req</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="434:1">{<block_content pos:start="4:5" pos:end="433:61">
    <decl_stmt pos:start="4:5" pos:end="4:26"><decl pos:start="4:5" pos:end="4:25"><type pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:12">uint32_t</name></type> <name pos:start="4:14" pos:end="4:16">rca</name> <init pos:start="4:18" pos:end="4:25">= <expr pos:start="4:20" pos:end="4:25"><literal type="number" pos:start="4:20" pos:end="4:25">0x0000</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:78"><decl pos:start="5:5" pos:end="5:77"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:17">addr</name> <init pos:start="5:19" pos:end="5:77">= <expr pos:start="5:21" pos:end="5:77"><ternary pos:start="5:21" pos:end="5:77"><condition pos:start="5:21" pos:end="5:43"><expr pos:start="5:21" pos:end="5:41"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:28"><name pos:start="5:22" pos:end="5:23">sd</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:28">ocr</name></name> <operator pos:start="5:30" pos:end="5:30">&amp;</operator> <operator pos:start="5:32" pos:end="5:32">(</operator><literal type="number" pos:start="5:33" pos:end="5:33">1</literal> <operator pos:start="5:35" pos:end="5:36">&lt;&lt;</operator> <literal type="number" pos:start="5:38" pos:end="5:39">30</literal><operator pos:start="5:40" pos:end="5:40">)</operator><operator pos:start="5:41" pos:end="5:41">)</operator></expr> ?</condition><then pos:start="5:45" pos:end="5:67"> <expr pos:start="5:45" pos:end="5:67"><operator pos:start="5:45" pos:end="5:45">(</operator><name pos:start="5:46" pos:end="5:53">uint64_t</name><operator pos:start="5:54" pos:end="5:54">)</operator> <name pos:start="5:56" pos:end="5:62"><name pos:start="5:56" pos:end="5:58">req</name><operator pos:start="5:59" pos:end="5:59">.</operator><name pos:start="5:60" pos:end="5:62">arg</name></name> <operator pos:start="5:64" pos:end="5:65">&lt;&lt;</operator> <literal type="number" pos:start="5:67" pos:end="5:67">9</literal></expr> </then><else pos:start="5:69" pos:end="5:77">: <expr pos:start="5:71" pos:end="5:77"><name pos:start="5:71" pos:end="5:77"><name pos:start="5:71" pos:end="5:73">req</name><operator pos:start="5:74" pos:end="5:74">.</operator><name pos:start="5:75" pos:end="5:77">arg</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="7:28"><if pos:start="6:5" pos:end="7:28">if <condition pos:start="6:8" pos:end="6:73">(<expr pos:start="6:9" pos:end="6:72"><name pos:start="6:9" pos:end="6:28"><name pos:start="6:9" pos:end="6:19">sd_cmd_type</name><index pos:start="6:20" pos:end="6:28">[<expr pos:start="6:21" pos:end="6:27"><name pos:start="6:21" pos:end="6:27"><name pos:start="6:21" pos:end="6:23">req</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:27">cmd</name></name></expr>]</index></name> <operator pos:start="6:30" pos:end="6:31">==</operator> <name pos:start="6:33" pos:end="6:37">sd_ac</name> <operator pos:start="6:39" pos:end="6:40">||</operator> <name pos:start="6:42" pos:end="6:61"><name pos:start="6:42" pos:end="6:52">sd_cmd_type</name><index pos:start="6:53" pos:end="6:61">[<expr pos:start="6:54" pos:end="6:60"><name pos:start="6:54" pos:end="6:60"><name pos:start="6:54" pos:end="6:56">req</name><operator pos:start="6:57" pos:end="6:57">.</operator><name pos:start="6:58" pos:end="6:60">cmd</name></name></expr>]</index></name> <operator pos:start="6:63" pos:end="6:64">==</operator> <name pos:start="6:66" pos:end="6:72">sd_adtc</name></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:28"><block_content pos:start="7:9" pos:end="7:28">
        <expr_stmt pos:start="7:9" pos:end="7:28"><expr pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:11">rca</name> <operator pos:start="7:13" pos:end="7:13">=</operator> <name pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:17">req</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:21">arg</name></name> <operator pos:start="7:23" pos:end="7:24">&gt;&gt;</operator> <literal type="number" pos:start="7:26" pos:end="7:27">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:68"><expr pos:start="8:5" pos:end="8:67"><call pos:start="8:5" pos:end="8:67"><name pos:start="8:5" pos:end="8:11">DPRINTF</name><argument_list pos:start="8:12" pos:end="8:67">(<argument pos:start="8:13" pos:end="8:37"><expr pos:start="8:13" pos:end="8:37"><literal type="string" pos:start="8:13" pos:end="8:37">"CMD%d 0x%08x state %d\n"</literal></expr></argument>, <argument pos:start="8:40" pos:end="8:46"><expr pos:start="8:40" pos:end="8:46"><name pos:start="8:40" pos:end="8:46"><name pos:start="8:40" pos:end="8:42">req</name><operator pos:start="8:43" pos:end="8:43">.</operator><name pos:start="8:44" pos:end="8:46">cmd</name></name></expr></argument>, <argument pos:start="8:49" pos:end="8:55"><expr pos:start="8:49" pos:end="8:55"><name pos:start="8:49" pos:end="8:55"><name pos:start="8:49" pos:end="8:51">req</name><operator pos:start="8:52" pos:end="8:52">.</operator><name pos:start="8:53" pos:end="8:55">arg</name></name></expr></argument>, <argument pos:start="8:58" pos:end="8:66"><expr pos:start="8:58" pos:end="8:66"><name pos:start="8:58" pos:end="8:66"><name pos:start="8:58" pos:end="8:59">sd</name><operator pos:start="8:60" pos:end="8:61">-&gt;</operator><name pos:start="8:62" pos:end="8:66">state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <switch pos:start="9:5" pos:end="432:5">switch <condition pos:start="9:12" pos:end="9:20">(<expr pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:15">req</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:19">cmd</name></name></expr>)</condition> <block pos:start="9:22" pos:end="432:5">{<block_content pos:start="11:5" pos:end="431:76">
    <comment type="block" pos:start="10:5" pos:end="10:46">/* Basic commands (Class 0 and Class 1) */</comment>
    <case pos:start="11:5" pos:end="11:11">case <expr pos:start="11:10" pos:end="11:10"><literal type="number" pos:start="11:10" pos:end="11:10">0</literal></expr>:</case>	<comment type="block" pos:start="11:17" pos:end="11:43">/* CMD0:   GO_IDLE_STATE */</comment>
        <switch pos:start="12:9" pos:end="19:9">switch <condition pos:start="12:16" pos:end="12:26">(<expr pos:start="12:17" pos:end="12:25"><name pos:start="12:17" pos:end="12:25"><name pos:start="12:17" pos:end="12:18">sd</name><operator pos:start="12:19" pos:end="12:20">-&gt;</operator><name pos:start="12:21" pos:end="12:25">state</name></name></expr>)</condition> <block pos:start="12:28" pos:end="19:9">{<block_content pos:start="13:9" pos:end="18:43">
        <case pos:start="13:9" pos:end="13:31">case <expr pos:start="13:14" pos:end="13:30"><name pos:start="13:14" pos:end="13:30">sd_inactive_state</name></expr>:</case>
            <return pos:start="14:13" pos:end="14:43">return <expr pos:start="14:20" pos:end="14:42"><ternary pos:start="14:20" pos:end="14:42"><condition pos:start="14:20" pos:end="14:28"><expr pos:start="14:20" pos:end="14:26"><name pos:start="14:20" pos:end="14:26"><name pos:start="14:20" pos:end="14:21">sd</name><operator pos:start="14:22" pos:end="14:23">-&gt;</operator><name pos:start="14:24" pos:end="14:26">spi</name></name></expr> ?</condition><then pos:start="14:30" pos:end="14:34"> <expr pos:start="14:30" pos:end="14:34"><name pos:start="14:30" pos:end="14:34">sd_r1</name></expr> </then><else pos:start="14:36" pos:end="14:42">: <expr pos:start="14:38" pos:end="14:42"><name pos:start="14:38" pos:end="14:42">sd_r0</name></expr></else></ternary></expr>;</return>
        <default pos:start="15:9" pos:end="15:16">default:</default>
            <expr_stmt pos:start="16:13" pos:end="16:38"><expr pos:start="16:13" pos:end="16:37"><name pos:start="16:13" pos:end="16:21"><name pos:start="16:13" pos:end="16:14">sd</name><operator pos:start="16:15" pos:end="16:16">-&gt;</operator><name pos:start="16:17" pos:end="16:21">state</name></name> <operator pos:start="16:23" pos:end="16:23">=</operator> <name pos:start="16:25" pos:end="16:37">sd_idle_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:35"><expr pos:start="17:13" pos:end="17:34"><call pos:start="17:13" pos:end="17:34"><name pos:start="17:13" pos:end="17:20">sd_reset</name><argument_list pos:start="17:21" pos:end="17:34">(<argument pos:start="17:22" pos:end="17:23"><expr pos:start="17:22" pos:end="17:23"><name pos:start="17:22" pos:end="17:23">sd</name></expr></argument>, <argument pos:start="17:26" pos:end="17:33"><expr pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:27">sd</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:33">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="18:13" pos:end="18:43">return <expr pos:start="18:20" pos:end="18:42"><ternary pos:start="18:20" pos:end="18:42"><condition pos:start="18:20" pos:end="18:28"><expr pos:start="18:20" pos:end="18:26"><name pos:start="18:20" pos:end="18:26"><name pos:start="18:20" pos:end="18:21">sd</name><operator pos:start="18:22" pos:end="18:23">-&gt;</operator><name pos:start="18:24" pos:end="18:26">spi</name></name></expr> ?</condition><then pos:start="18:30" pos:end="18:34"> <expr pos:start="18:30" pos:end="18:34"><name pos:start="18:30" pos:end="18:34">sd_r1</name></expr> </then><else pos:start="18:36" pos:end="18:42">: <expr pos:start="18:38" pos:end="18:42"><name pos:start="18:38" pos:end="18:42">sd_r0</name></expr></else></ternary></expr>;</return>
        </block_content>}</block></switch>
        <break pos:start="20:9" pos:end="20:14">break;</break>
    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">1</literal></expr>:</case>	<comment type="block" pos:start="21:17" pos:end="21:41">/* CMD1:   SEND_OP_CMD */</comment>
        <if_stmt pos:start="22:9" pos:end="23:25"><if pos:start="22:9" pos:end="23:25">if <condition pos:start="22:12" pos:end="22:21">(<expr pos:start="22:13" pos:end="22:20"><operator pos:start="22:13" pos:end="22:13">!</operator><name pos:start="22:14" pos:end="22:20"><name pos:start="22:14" pos:end="22:15">sd</name><operator pos:start="22:16" pos:end="22:17">-&gt;</operator><name pos:start="22:18" pos:end="22:20">spi</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:25"><block_content pos:start="23:13" pos:end="23:25">
            <goto pos:start="23:13" pos:end="23:25">goto <name pos:start="23:18" pos:end="23:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:38"><expr pos:start="24:9" pos:end="24:37"><name pos:start="24:9" pos:end="24:17"><name pos:start="24:9" pos:end="24:10">sd</name><operator pos:start="24:11" pos:end="24:12">-&gt;</operator><name pos:start="24:13" pos:end="24:17">state</name></name> <operator pos:start="24:19" pos:end="24:19">=</operator> <name pos:start="24:21" pos:end="24:37">sd_transfer_state</name></expr>;</expr_stmt>
        <return pos:start="25:9" pos:end="25:21">return <expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">sd_r1</name></expr>;</return>
    <case pos:start="26:5" pos:end="26:11">case <expr pos:start="26:10" pos:end="26:10"><literal type="number" pos:start="26:10" pos:end="26:10">2</literal></expr>:</case>	<comment type="block" pos:start="26:17" pos:end="26:42">/* CMD2:   ALL_SEND_CID */</comment>
        <if_stmt pos:start="27:9" pos:end="28:25"><if pos:start="27:9" pos:end="28:25">if <condition pos:start="27:12" pos:end="27:20">(<expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:14">sd</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="28:13" pos:end="28:25"><block_content pos:start="28:13" pos:end="28:25">
            <goto pos:start="28:13" pos:end="28:25">goto <name pos:start="28:18" pos:end="28:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="29:9" pos:end="35:9">switch <condition pos:start="29:16" pos:end="29:26">(<expr pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:18">sd</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:25">state</name></name></expr>)</condition> <block pos:start="29:28" pos:end="35:9">{<block_content pos:start="30:9" pos:end="34:18">
        <case pos:start="30:9" pos:end="30:28">case <expr pos:start="30:14" pos:end="30:27"><name pos:start="30:14" pos:end="30:27">sd_ready_state</name></expr>:</case>
            <expr_stmt pos:start="31:13" pos:end="31:48"><expr pos:start="31:13" pos:end="31:47"><name pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:14">sd</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">state</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:47">sd_identification_state</name></expr>;</expr_stmt>
            <return pos:start="32:13" pos:end="32:27">return <expr pos:start="32:20" pos:end="32:26"><name pos:start="32:20" pos:end="32:26">sd_r2_i</name></expr>;</return>
        <default pos:start="33:9" pos:end="33:16">default:</default>
            <break pos:start="34:13" pos:end="34:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="36:9" pos:end="36:14">break;</break>
    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">3</literal></expr>:</case>	<comment type="block" pos:start="37:17" pos:end="37:48">/* CMD3:   SEND_RELATIVE_ADDR */</comment>
        <if_stmt pos:start="38:9" pos:end="39:25"><if pos:start="38:9" pos:end="39:25">if <condition pos:start="38:12" pos:end="38:20">(<expr pos:start="38:13" pos:end="38:19"><name pos:start="38:13" pos:end="38:19"><name pos:start="38:13" pos:end="38:14">sd</name><operator pos:start="38:15" pos:end="38:16">-&gt;</operator><name pos:start="38:17" pos:end="38:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:25"><block_content pos:start="39:13" pos:end="39:25">
            <goto pos:start="39:13" pos:end="39:25">goto <name pos:start="39:18" pos:end="39:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="40:9" pos:end="48:9">switch <condition pos:start="40:16" pos:end="40:26">(<expr pos:start="40:17" pos:end="40:25"><name pos:start="40:17" pos:end="40:25"><name pos:start="40:17" pos:end="40:18">sd</name><operator pos:start="40:19" pos:end="40:20">-&gt;</operator><name pos:start="40:21" pos:end="40:25">state</name></name></expr>)</condition> <block pos:start="40:28" pos:end="48:9">{<block_content pos:start="41:9" pos:end="47:18">
        <case pos:start="41:9" pos:end="41:37">case <expr pos:start="41:14" pos:end="41:36"><name pos:start="41:14" pos:end="41:36">sd_identification_state</name></expr>:</case>
        <case pos:start="42:9" pos:end="42:30">case <expr pos:start="42:14" pos:end="42:29"><name pos:start="42:14" pos:end="42:29">sd_standby_state</name></expr>:</case>
            <expr_stmt pos:start="43:13" pos:end="43:41"><expr pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:14">sd</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:21">state</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:40">sd_standby_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="44:13" pos:end="44:27"><expr pos:start="44:13" pos:end="44:26"><call pos:start="44:13" pos:end="44:26"><name pos:start="44:13" pos:end="44:22">sd_set_rca</name><argument_list pos:start="44:23" pos:end="44:26">(<argument pos:start="44:24" pos:end="44:25"><expr pos:start="44:24" pos:end="44:25"><name pos:start="44:24" pos:end="44:25">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="45:13" pos:end="45:25">return <expr pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:24">sd_r6</name></expr>;</return>
        <default pos:start="46:9" pos:end="46:16">default:</default>
            <break pos:start="47:13" pos:end="47:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="49:9" pos:end="49:14">break;</break>
    <case pos:start="50:5" pos:end="50:11">case <expr pos:start="50:10" pos:end="50:10"><literal type="number" pos:start="50:10" pos:end="50:10">4</literal></expr>:</case>	<comment type="block" pos:start="50:17" pos:end="50:38">/* CMD4:   SEND_DSR */</comment>
        <if_stmt pos:start="51:9" pos:end="52:25"><if pos:start="51:9" pos:end="52:25">if <condition pos:start="51:12" pos:end="51:20">(<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:14">sd</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="52:13" pos:end="52:25"><block_content pos:start="52:13" pos:end="52:25">
            <goto pos:start="52:13" pos:end="52:25">goto <name pos:start="52:18" pos:end="52:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="53:9" pos:end="58:9">switch <condition pos:start="53:16" pos:end="53:26">(<expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:18">sd</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:25">state</name></name></expr>)</condition> <block pos:start="53:28" pos:end="58:9">{<block_content pos:start="54:9" pos:end="57:18">
        <case pos:start="54:9" pos:end="54:30">case <expr pos:start="54:14" pos:end="54:29"><name pos:start="54:14" pos:end="54:29">sd_standby_state</name></expr>:</case>
            <break pos:start="55:13" pos:end="55:18">break;</break>
        <default pos:start="56:9" pos:end="56:16">default:</default>
            <break pos:start="57:13" pos:end="57:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="59:9" pos:end="59:14">break;</break>
    <case pos:start="60:5" pos:end="60:11">case <expr pos:start="60:10" pos:end="60:10"><literal type="number" pos:start="60:10" pos:end="60:10">5</literal></expr>:</case> <comment type="block" pos:start="60:13" pos:end="60:47">/* CMD5: reserved for SDIO cards */</comment>
    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">6</literal></expr>:</case>	<comment type="block" pos:start="61:17" pos:end="61:45">/* CMD6:   SWITCH_FUNCTION */</comment>
        <if_stmt pos:start="62:9" pos:end="63:25"><if pos:start="62:9" pos:end="63:25">if <condition pos:start="62:12" pos:end="62:20">(<expr pos:start="62:13" pos:end="62:19"><name pos:start="62:13" pos:end="62:19"><name pos:start="62:13" pos:end="62:14">sd</name><operator pos:start="62:15" pos:end="62:16">-&gt;</operator><name pos:start="62:17" pos:end="62:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:25"><block_content pos:start="63:13" pos:end="63:25">
            <goto pos:start="63:13" pos:end="63:25">goto <name pos:start="63:18" pos:end="63:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="64:9" pos:end="73:9">switch <condition pos:start="64:16" pos:end="64:25">(<expr pos:start="64:17" pos:end="64:24"><name pos:start="64:17" pos:end="64:24"><name pos:start="64:17" pos:end="64:18">sd</name><operator pos:start="64:19" pos:end="64:20">-&gt;</operator><name pos:start="64:21" pos:end="64:24">mode</name></name></expr>)</condition> <block pos:start="64:27" pos:end="73:9">{<block_content pos:start="65:9" pos:end="72:18">
        <case pos:start="65:9" pos:end="65:35">case <expr pos:start="65:14" pos:end="65:34"><name pos:start="65:14" pos:end="65:34">sd_data_transfer_mode</name></expr>:</case>
            <expr_stmt pos:start="66:13" pos:end="66:44"><expr pos:start="66:13" pos:end="66:43"><call pos:start="66:13" pos:end="66:43"><name pos:start="66:13" pos:end="66:30">sd_function_switch</name><argument_list pos:start="66:31" pos:end="66:43">(<argument pos:start="66:32" pos:end="66:33"><expr pos:start="66:32" pos:end="66:33"><name pos:start="66:32" pos:end="66:33">sd</name></expr></argument>, <argument pos:start="66:36" pos:end="66:42"><expr pos:start="66:36" pos:end="66:42"><name pos:start="66:36" pos:end="66:42"><name pos:start="66:36" pos:end="66:38">req</name><operator pos:start="66:39" pos:end="66:39">.</operator><name pos:start="66:40" pos:end="66:42">arg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="67:13" pos:end="67:45"><expr pos:start="67:13" pos:end="67:44"><name pos:start="67:13" pos:end="67:21"><name pos:start="67:13" pos:end="67:14">sd</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:21">state</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:44">sd_sendingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="68:13" pos:end="68:31"><expr pos:start="68:13" pos:end="68:30"><name pos:start="68:13" pos:end="68:26"><name pos:start="68:13" pos:end="68:14">sd</name><operator pos:start="68:15" pos:end="68:16">-&gt;</operator><name pos:start="68:17" pos:end="68:26">data_start</name></name> <operator pos:start="68:28" pos:end="68:28">=</operator> <literal type="number" pos:start="68:30" pos:end="68:30">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:14">sd</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:27">data_offset</name></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <literal type="number" pos:start="69:31" pos:end="69:31">0</literal></expr>;</expr_stmt>
            <return pos:start="70:13" pos:end="70:25">return <expr pos:start="70:20" pos:end="70:24"><name pos:start="70:20" pos:end="70:24">sd_r1</name></expr>;</return>
        <default pos:start="71:9" pos:end="71:16">default:</default>
            <break pos:start="72:13" pos:end="72:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="74:9" pos:end="74:14">break;</break>
    <case pos:start="75:5" pos:end="75:11">case <expr pos:start="75:10" pos:end="75:10"><literal type="number" pos:start="75:10" pos:end="75:10">7</literal></expr>:</case>	<comment type="block" pos:start="75:17" pos:end="75:50">/* CMD7:   SELECT/DESELECT_CARD */</comment>
        <if_stmt pos:start="76:9" pos:end="77:25"><if pos:start="76:9" pos:end="77:25">if <condition pos:start="76:12" pos:end="76:20">(<expr pos:start="76:13" pos:end="76:19"><name pos:start="76:13" pos:end="76:19"><name pos:start="76:13" pos:end="76:14">sd</name><operator pos:start="76:15" pos:end="76:16">-&gt;</operator><name pos:start="76:17" pos:end="76:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:25"><block_content pos:start="77:13" pos:end="77:25">
            <goto pos:start="77:13" pos:end="77:25">goto <name pos:start="77:18" pos:end="77:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="78:9" pos:end="100:9">switch <condition pos:start="78:16" pos:end="78:26">(<expr pos:start="78:17" pos:end="78:25"><name pos:start="78:17" pos:end="78:25"><name pos:start="78:17" pos:end="78:18">sd</name><operator pos:start="78:19" pos:end="78:20">-&gt;</operator><name pos:start="78:21" pos:end="78:25">state</name></name></expr>)</condition> <block pos:start="78:28" pos:end="100:9">{<block_content pos:start="79:9" pos:end="99:18">
        <case pos:start="79:9" pos:end="79:30">case <expr pos:start="79:14" pos:end="79:29"><name pos:start="79:14" pos:end="79:29">sd_standby_state</name></expr>:</case>
            <if_stmt pos:start="80:13" pos:end="81:42"><if pos:start="80:13" pos:end="81:42">if <condition pos:start="80:16" pos:end="80:31">(<expr pos:start="80:17" pos:end="80:30"><name pos:start="80:17" pos:end="80:23"><name pos:start="80:17" pos:end="80:18">sd</name><operator pos:start="80:19" pos:end="80:20">-&gt;</operator><name pos:start="80:21" pos:end="80:23">rca</name></name> <operator pos:start="80:25" pos:end="80:26">!=</operator> <name pos:start="80:28" pos:end="80:30">rca</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:42"><block_content pos:start="81:13" pos:end="81:42">
            <expr_stmt pos:start="81:13" pos:end="81:42"><expr pos:start="81:13" pos:end="81:41"><name pos:start="81:13" pos:end="81:21"><name pos:start="81:13" pos:end="81:14">sd</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:21">state</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:41">sd_transfer_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <return pos:start="82:13" pos:end="82:26">return <expr pos:start="82:20" pos:end="82:25"><name pos:start="82:20" pos:end="82:25">sd_r1b</name></expr>;</return>
        <case pos:start="83:9" pos:end="83:31">case <expr pos:start="83:14" pos:end="83:30"><name pos:start="83:14" pos:end="83:30">sd_transfer_state</name></expr>:</case>
        <case pos:start="84:9" pos:end="84:34">case <expr pos:start="84:14" pos:end="84:33"><name pos:start="84:14" pos:end="84:33">sd_sendingdata_state</name></expr>:</case>
            <if_stmt pos:start="85:13" pos:end="86:22"><if pos:start="85:13" pos:end="86:22">if <condition pos:start="85:16" pos:end="85:31">(<expr pos:start="85:17" pos:end="85:30"><name pos:start="85:17" pos:end="85:23"><name pos:start="85:17" pos:end="85:18">sd</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:23">rca</name></name> <operator pos:start="85:25" pos:end="85:26">==</operator> <name pos:start="85:28" pos:end="85:30">rca</name></expr>)</condition><block type="pseudo" pos:start="86:17" pos:end="86:22"><block_content pos:start="86:17" pos:end="86:22">
                <break pos:start="86:17" pos:end="86:22">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="87:13" pos:end="87:41"><expr pos:start="87:13" pos:end="87:40"><name pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:14">sd</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:21">state</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:40">sd_standby_state</name></expr>;</expr_stmt>
            <return pos:start="88:13" pos:end="88:26">return <expr pos:start="88:20" pos:end="88:25"><name pos:start="88:20" pos:end="88:25">sd_r1b</name></expr>;</return>
        <case pos:start="89:9" pos:end="89:33">case <expr pos:start="89:14" pos:end="89:32"><name pos:start="89:14" pos:end="89:32">sd_disconnect_state</name></expr>:</case>
            <if_stmt pos:start="90:13" pos:end="91:45"><if pos:start="90:13" pos:end="91:45">if <condition pos:start="90:16" pos:end="90:31">(<expr pos:start="90:17" pos:end="90:30"><name pos:start="90:17" pos:end="90:23"><name pos:start="90:17" pos:end="90:18">sd</name><operator pos:start="90:19" pos:end="90:20">-&gt;</operator><name pos:start="90:21" pos:end="90:23">rca</name></name> <operator pos:start="90:25" pos:end="90:26">!=</operator> <name pos:start="90:28" pos:end="90:30">rca</name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:45"><block_content pos:start="91:13" pos:end="91:45">
            <expr_stmt pos:start="91:13" pos:end="91:45"><expr pos:start="91:13" pos:end="91:44"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:14">sd</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:21">state</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:44">sd_programming_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <return pos:start="92:13" pos:end="92:26">return <expr pos:start="92:20" pos:end="92:25"><name pos:start="92:20" pos:end="92:25">sd_r1b</name></expr>;</return>
        <case pos:start="93:9" pos:end="93:34">case <expr pos:start="93:14" pos:end="93:33"><name pos:start="93:14" pos:end="93:33">sd_programming_state</name></expr>:</case>
            <if_stmt pos:start="94:13" pos:end="95:22"><if pos:start="94:13" pos:end="95:22">if <condition pos:start="94:16" pos:end="94:31">(<expr pos:start="94:17" pos:end="94:30"><name pos:start="94:17" pos:end="94:23"><name pos:start="94:17" pos:end="94:18">sd</name><operator pos:start="94:19" pos:end="94:20">-&gt;</operator><name pos:start="94:21" pos:end="94:23">rca</name></name> <operator pos:start="94:25" pos:end="94:26">==</operator> <name pos:start="94:28" pos:end="94:30">rca</name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:22"><block_content pos:start="95:17" pos:end="95:22">
                <break pos:start="95:17" pos:end="95:22">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="96:13" pos:end="96:44"><expr pos:start="96:13" pos:end="96:43"><name pos:start="96:13" pos:end="96:21"><name pos:start="96:13" pos:end="96:14">sd</name><operator pos:start="96:15" pos:end="96:16">-&gt;</operator><name pos:start="96:17" pos:end="96:21">state</name></name> <operator pos:start="96:23" pos:end="96:23">=</operator> <name pos:start="96:25" pos:end="96:43">sd_disconnect_state</name></expr>;</expr_stmt>
            <return pos:start="97:13" pos:end="97:26">return <expr pos:start="97:20" pos:end="97:25"><name pos:start="97:20" pos:end="97:25">sd_r1b</name></expr>;</return>
        <default pos:start="98:9" pos:end="98:16">default:</default>
            <break pos:start="99:13" pos:end="99:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="101:9" pos:end="101:14">break;</break>
    <case pos:start="102:5" pos:end="102:11">case <expr pos:start="102:10" pos:end="102:10"><literal type="number" pos:start="102:10" pos:end="102:10">8</literal></expr>:</case>	<comment type="block" pos:start="102:17" pos:end="102:42">/* CMD8:   SEND_IF_COND */</comment>
        <comment type="block" pos:start="103:9" pos:end="103:63">/* Physical Layer Specification Version 2.00 command */</comment>
        <switch pos:start="104:9" pos:end="115:9">switch <condition pos:start="104:16" pos:end="104:26">(<expr pos:start="104:17" pos:end="104:25"><name pos:start="104:17" pos:end="104:25"><name pos:start="104:17" pos:end="104:18">sd</name><operator pos:start="104:19" pos:end="104:20">-&gt;</operator><name pos:start="104:21" pos:end="104:25">state</name></name></expr>)</condition> <block pos:start="104:28" pos:end="115:9">{<block_content pos:start="105:9" pos:end="114:18">
        <case pos:start="105:9" pos:end="105:27">case <expr pos:start="105:14" pos:end="105:26"><name pos:start="105:14" pos:end="105:26">sd_idle_state</name></expr>:</case>
            <expr_stmt pos:start="106:13" pos:end="106:24"><expr pos:start="106:13" pos:end="106:23"><name pos:start="106:13" pos:end="106:19"><name pos:start="106:13" pos:end="106:14">sd</name><operator pos:start="106:15" pos:end="106:16">-&gt;</operator><name pos:start="106:17" pos:end="106:19">vhs</name></name> <operator pos:start="106:21" pos:end="106:21">=</operator> <literal type="number" pos:start="106:23" pos:end="106:23">0</literal></expr>;</expr_stmt>
            <comment type="block" pos:start="107:13" pos:end="107:65">/* No response if not exactly one VHS bit is set.  */</comment>
            <if_stmt pos:start="108:13" pos:end="109:47"><if pos:start="108:13" pos:end="109:47">if <condition pos:start="108:16" pos:end="108:69">(<expr pos:start="108:17" pos:end="108:68"><operator pos:start="108:17" pos:end="108:17">!</operator><operator pos:start="108:18" pos:end="108:18">(</operator><name pos:start="108:19" pos:end="108:25"><name pos:start="108:19" pos:end="108:21">req</name><operator pos:start="108:22" pos:end="108:22">.</operator><name pos:start="108:23" pos:end="108:25">arg</name></name> <operator pos:start="108:27" pos:end="108:28">&gt;&gt;</operator> <literal type="number" pos:start="108:30" pos:end="108:30">8</literal><operator pos:start="108:31" pos:end="108:31">)</operator> <operator pos:start="108:33" pos:end="108:34">||</operator> <operator pos:start="108:36" pos:end="108:36">(</operator><name pos:start="108:37" pos:end="108:43"><name pos:start="108:37" pos:end="108:39">req</name><operator pos:start="108:40" pos:end="108:40">.</operator><name pos:start="108:41" pos:end="108:43">arg</name></name> <operator pos:start="108:45" pos:end="108:46">&gt;&gt;</operator> <call pos:start="108:48" pos:end="108:67"><name pos:start="108:48" pos:end="108:50">ffs</name><argument_list pos:start="108:51" pos:end="108:67">(<argument pos:start="108:52" pos:end="108:66"><expr pos:start="108:52" pos:end="108:66"><name pos:start="108:52" pos:end="108:58"><name pos:start="108:52" pos:end="108:54">req</name><operator pos:start="108:55" pos:end="108:55">.</operator><name pos:start="108:56" pos:end="108:58">arg</name></name> <operator pos:start="108:60" pos:end="108:60">&amp;</operator> <operator pos:start="108:62" pos:end="108:62">~</operator><literal type="number" pos:start="108:63" pos:end="108:66">0xff</literal></expr></argument>)</argument_list></call><operator pos:start="108:68" pos:end="108:68">)</operator></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:47"><block_content pos:start="109:17" pos:end="109:47">
                <return pos:start="109:17" pos:end="109:47">return <expr pos:start="109:24" pos:end="109:46"><ternary pos:start="109:24" pos:end="109:46"><condition pos:start="109:24" pos:end="109:32"><expr pos:start="109:24" pos:end="109:30"><name pos:start="109:24" pos:end="109:30"><name pos:start="109:24" pos:end="109:25">sd</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:30">spi</name></name></expr> ?</condition><then pos:start="109:34" pos:end="109:38"> <expr pos:start="109:34" pos:end="109:38"><name pos:start="109:34" pos:end="109:38">sd_r7</name></expr> </then><else pos:start="109:40" pos:end="109:46">: <expr pos:start="109:42" pos:end="109:46"><name pos:start="109:42" pos:end="109:46">sd_r0</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>
            <comment type="block" pos:start="110:13" pos:end="110:26">/* Accept.  */</comment>
            <expr_stmt pos:start="111:13" pos:end="111:30"><expr pos:start="111:13" pos:end="111:29"><name pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:14">sd</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:19">vhs</name></name> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:29"><name pos:start="111:23" pos:end="111:25">req</name><operator pos:start="111:26" pos:end="111:26">.</operator><name pos:start="111:27" pos:end="111:29">arg</name></name></expr>;</expr_stmt>
            <return pos:start="112:13" pos:end="112:25">return <expr pos:start="112:20" pos:end="112:24"><name pos:start="112:20" pos:end="112:24">sd_r7</name></expr>;</return>
        <default pos:start="113:9" pos:end="113:16">default:</default>
            <break pos:start="114:13" pos:end="114:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="116:9" pos:end="116:14">break;</break>
    <case pos:start="117:5" pos:end="117:11">case <expr pos:start="117:10" pos:end="117:10"><literal type="number" pos:start="117:10" pos:end="117:10">9</literal></expr>:</case>	<comment type="block" pos:start="117:17" pos:end="117:38">/* CMD9:   SEND_CSD */</comment>
        <switch pos:start="118:9" pos:end="132:9">switch <condition pos:start="118:16" pos:end="118:26">(<expr pos:start="118:17" pos:end="118:25"><name pos:start="118:17" pos:end="118:25"><name pos:start="118:17" pos:end="118:18">sd</name><operator pos:start="118:19" pos:end="118:20">-&gt;</operator><name pos:start="118:21" pos:end="118:25">state</name></name></expr>)</condition> <block pos:start="118:28" pos:end="132:9">{<block_content pos:start="119:9" pos:end="131:18">
        <case pos:start="119:9" pos:end="119:30">case <expr pos:start="119:14" pos:end="119:29"><name pos:start="119:14" pos:end="119:29">sd_standby_state</name></expr>:</case>
            <if_stmt pos:start="120:13" pos:end="121:27"><if pos:start="120:13" pos:end="121:27">if <condition pos:start="120:16" pos:end="120:31">(<expr pos:start="120:17" pos:end="120:30"><name pos:start="120:17" pos:end="120:23"><name pos:start="120:17" pos:end="120:18">sd</name><operator pos:start="120:19" pos:end="120:20">-&gt;</operator><name pos:start="120:21" pos:end="120:23">rca</name></name> <operator pos:start="120:25" pos:end="120:26">!=</operator> <name pos:start="120:28" pos:end="120:30">rca</name></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:27"><block_content pos:start="121:13" pos:end="121:27">
            <return pos:start="121:13" pos:end="121:27">return <expr pos:start="121:20" pos:end="121:26"><name pos:start="121:20" pos:end="121:26">sd_r2_s</name></expr>;</return></block_content></block></if></if_stmt>
        <case pos:start="122:9" pos:end="122:31">case <expr pos:start="122:14" pos:end="122:30"><name pos:start="122:14" pos:end="122:30">sd_transfer_state</name></expr>:</case>
            <if_stmt pos:start="123:13" pos:end="124:22"><if pos:start="123:13" pos:end="124:22">if <condition pos:start="123:16" pos:end="123:25">(<expr pos:start="123:17" pos:end="123:24"><operator pos:start="123:17" pos:end="123:17">!</operator><name pos:start="123:18" pos:end="123:24"><name pos:start="123:18" pos:end="123:19">sd</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:24">spi</name></name></expr>)</condition><block type="pseudo" pos:start="124:17" pos:end="124:22"><block_content pos:start="124:17" pos:end="124:22">
                <break pos:start="124:17" pos:end="124:22">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="125:13" pos:end="125:45"><expr pos:start="125:13" pos:end="125:44"><name pos:start="125:13" pos:end="125:21"><name pos:start="125:13" pos:end="125:14">sd</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:21">state</name></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:44">sd_sendingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="126:13" pos:end="126:42"><expr pos:start="126:13" pos:end="126:41"><call pos:start="126:13" pos:end="126:41"><name pos:start="126:13" pos:end="126:18">memcpy</name><argument_list pos:start="126:19" pos:end="126:41">(<argument pos:start="126:20" pos:end="126:27"><expr pos:start="126:20" pos:end="126:27"><name pos:start="126:20" pos:end="126:27"><name pos:start="126:20" pos:end="126:21">sd</name><operator pos:start="126:22" pos:end="126:23">-&gt;</operator><name pos:start="126:24" pos:end="126:27">data</name></name></expr></argument>, <argument pos:start="126:30" pos:end="126:36"><expr pos:start="126:30" pos:end="126:36"><name pos:start="126:30" pos:end="126:36"><name pos:start="126:30" pos:end="126:31">sd</name><operator pos:start="126:32" pos:end="126:33">-&gt;</operator><name pos:start="126:34" pos:end="126:36">csd</name></name></expr></argument>, <argument pos:start="126:39" pos:end="126:40"><expr pos:start="126:39" pos:end="126:40"><literal type="number" pos:start="126:39" pos:end="126:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="127:13" pos:end="127:34"><expr pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:14">sd</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:26">data_start</name></name> <operator pos:start="127:28" pos:end="127:28">=</operator> <name pos:start="127:30" pos:end="127:33">addr</name></expr>;</expr_stmt>
            <expr_stmt pos:start="128:13" pos:end="128:32"><expr pos:start="128:13" pos:end="128:31"><name pos:start="128:13" pos:end="128:27"><name pos:start="128:13" pos:end="128:14">sd</name><operator pos:start="128:15" pos:end="128:16">-&gt;</operator><name pos:start="128:17" pos:end="128:27">data_offset</name></name> <operator pos:start="128:29" pos:end="128:29">=</operator> <literal type="number" pos:start="128:31" pos:end="128:31">0</literal></expr>;</expr_stmt>
            <return pos:start="129:13" pos:end="129:25">return <expr pos:start="129:20" pos:end="129:24"><name pos:start="129:20" pos:end="129:24">sd_r1</name></expr>;</return>
        <default pos:start="130:9" pos:end="130:16">default:</default>
            <break pos:start="131:13" pos:end="131:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="133:9" pos:end="133:14">break;</break>
    <case pos:start="134:5" pos:end="134:12">case <expr pos:start="134:10" pos:end="134:11"><literal type="number" pos:start="134:10" pos:end="134:11">10</literal></expr>:</case>	<comment type="block" pos:start="134:17" pos:end="134:38">/* CMD10:  SEND_CID */</comment>
        <switch pos:start="135:9" pos:end="149:9">switch <condition pos:start="135:16" pos:end="135:26">(<expr pos:start="135:17" pos:end="135:25"><name pos:start="135:17" pos:end="135:25"><name pos:start="135:17" pos:end="135:18">sd</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:25">state</name></name></expr>)</condition> <block pos:start="135:28" pos:end="149:9">{<block_content pos:start="136:9" pos:end="148:18">
        <case pos:start="136:9" pos:end="136:30">case <expr pos:start="136:14" pos:end="136:29"><name pos:start="136:14" pos:end="136:29">sd_standby_state</name></expr>:</case>
            <if_stmt pos:start="137:13" pos:end="138:27"><if pos:start="137:13" pos:end="138:27">if <condition pos:start="137:16" pos:end="137:31">(<expr pos:start="137:17" pos:end="137:30"><name pos:start="137:17" pos:end="137:23"><name pos:start="137:17" pos:end="137:18">sd</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:23">rca</name></name> <operator pos:start="137:25" pos:end="137:26">!=</operator> <name pos:start="137:28" pos:end="137:30">rca</name></expr>)</condition><block type="pseudo" pos:start="138:13" pos:end="138:27"><block_content pos:start="138:13" pos:end="138:27">
            <return pos:start="138:13" pos:end="138:27">return <expr pos:start="138:20" pos:end="138:26"><name pos:start="138:20" pos:end="138:26">sd_r2_i</name></expr>;</return></block_content></block></if></if_stmt>
        <case pos:start="139:9" pos:end="139:31">case <expr pos:start="139:14" pos:end="139:30"><name pos:start="139:14" pos:end="139:30">sd_transfer_state</name></expr>:</case>
            <if_stmt pos:start="140:13" pos:end="141:22"><if pos:start="140:13" pos:end="141:22">if <condition pos:start="140:16" pos:end="140:25">(<expr pos:start="140:17" pos:end="140:24"><operator pos:start="140:17" pos:end="140:17">!</operator><name pos:start="140:18" pos:end="140:24"><name pos:start="140:18" pos:end="140:19">sd</name><operator pos:start="140:20" pos:end="140:21">-&gt;</operator><name pos:start="140:22" pos:end="140:24">spi</name></name></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:22"><block_content pos:start="141:17" pos:end="141:22">
                <break pos:start="141:17" pos:end="141:22">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="142:13" pos:end="142:45"><expr pos:start="142:13" pos:end="142:44"><name pos:start="142:13" pos:end="142:21"><name pos:start="142:13" pos:end="142:14">sd</name><operator pos:start="142:15" pos:end="142:16">-&gt;</operator><name pos:start="142:17" pos:end="142:21">state</name></name> <operator pos:start="142:23" pos:end="142:23">=</operator> <name pos:start="142:25" pos:end="142:44">sd_sendingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="143:13" pos:end="143:42"><expr pos:start="143:13" pos:end="143:41"><call pos:start="143:13" pos:end="143:41"><name pos:start="143:13" pos:end="143:18">memcpy</name><argument_list pos:start="143:19" pos:end="143:41">(<argument pos:start="143:20" pos:end="143:27"><expr pos:start="143:20" pos:end="143:27"><name pos:start="143:20" pos:end="143:27"><name pos:start="143:20" pos:end="143:21">sd</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:27">data</name></name></expr></argument>, <argument pos:start="143:30" pos:end="143:36"><expr pos:start="143:30" pos:end="143:36"><name pos:start="143:30" pos:end="143:36"><name pos:start="143:30" pos:end="143:31">sd</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:36">cid</name></name></expr></argument>, <argument pos:start="143:39" pos:end="143:40"><expr pos:start="143:39" pos:end="143:40"><literal type="number" pos:start="143:39" pos:end="143:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="144:13" pos:end="144:34"><expr pos:start="144:13" pos:end="144:33"><name pos:start="144:13" pos:end="144:26"><name pos:start="144:13" pos:end="144:14">sd</name><operator pos:start="144:15" pos:end="144:16">-&gt;</operator><name pos:start="144:17" pos:end="144:26">data_start</name></name> <operator pos:start="144:28" pos:end="144:28">=</operator> <name pos:start="144:30" pos:end="144:33">addr</name></expr>;</expr_stmt>
            <expr_stmt pos:start="145:13" pos:end="145:32"><expr pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:27"><name pos:start="145:13" pos:end="145:14">sd</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:27">data_offset</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <literal type="number" pos:start="145:31" pos:end="145:31">0</literal></expr>;</expr_stmt>
            <return pos:start="146:13" pos:end="146:25">return <expr pos:start="146:20" pos:end="146:24"><name pos:start="146:20" pos:end="146:24">sd_r1</name></expr>;</return>
        <default pos:start="147:9" pos:end="147:16">default:</default>
            <break pos:start="148:13" pos:end="148:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="150:9" pos:end="150:14">break;</break>
    <case pos:start="151:5" pos:end="151:12">case <expr pos:start="151:10" pos:end="151:11"><literal type="number" pos:start="151:10" pos:end="151:11">11</literal></expr>:</case>	<comment type="block" pos:start="151:17" pos:end="151:49">/* CMD11:  READ_DAT_UNTIL_STOP */</comment>
        <if_stmt pos:start="152:9" pos:end="153:25"><if pos:start="152:9" pos:end="153:25">if <condition pos:start="152:12" pos:end="152:20">(<expr pos:start="152:13" pos:end="152:19"><name pos:start="152:13" pos:end="152:19"><name pos:start="152:13" pos:end="152:14">sd</name><operator pos:start="152:15" pos:end="152:16">-&gt;</operator><name pos:start="152:17" pos:end="152:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:25"><block_content pos:start="153:13" pos:end="153:25">
            <goto pos:start="153:13" pos:end="153:25">goto <name pos:start="153:18" pos:end="153:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="154:9" pos:end="163:9">switch <condition pos:start="154:16" pos:end="154:26">(<expr pos:start="154:17" pos:end="154:25"><name pos:start="154:17" pos:end="154:25"><name pos:start="154:17" pos:end="154:18">sd</name><operator pos:start="154:19" pos:end="154:20">-&gt;</operator><name pos:start="154:21" pos:end="154:25">state</name></name></expr>)</condition> <block pos:start="154:28" pos:end="163:9">{<block_content pos:start="155:9" pos:end="162:18">
        <case pos:start="155:9" pos:end="155:31">case <expr pos:start="155:14" pos:end="155:30"><name pos:start="155:14" pos:end="155:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="156:13" pos:end="156:45"><expr pos:start="156:13" pos:end="156:44"><name pos:start="156:13" pos:end="156:21"><name pos:start="156:13" pos:end="156:14">sd</name><operator pos:start="156:15" pos:end="156:16">-&gt;</operator><name pos:start="156:17" pos:end="156:21">state</name></name> <operator pos:start="156:23" pos:end="156:23">=</operator> <name pos:start="156:25" pos:end="156:44">sd_sendingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="157:13" pos:end="157:37"><expr pos:start="157:13" pos:end="157:36"><name pos:start="157:13" pos:end="157:26"><name pos:start="157:13" pos:end="157:14">sd</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:26">data_start</name></name> <operator pos:start="157:28" pos:end="157:28">=</operator> <name pos:start="157:30" pos:end="157:36"><name pos:start="157:30" pos:end="157:32">req</name><operator pos:start="157:33" pos:end="157:33">.</operator><name pos:start="157:34" pos:end="157:36">arg</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="158:13" pos:end="158:32"><expr pos:start="158:13" pos:end="158:31"><name pos:start="158:13" pos:end="158:27"><name pos:start="158:13" pos:end="158:14">sd</name><operator pos:start="158:15" pos:end="158:16">-&gt;</operator><name pos:start="158:17" pos:end="158:27">data_offset</name></name> <operator pos:start="158:29" pos:end="158:29">=</operator> <literal type="number" pos:start="158:31" pos:end="158:31">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="159:13" pos:end="160:49"><if pos:start="159:13" pos:end="160:49">if <condition pos:start="159:16" pos:end="159:56">(<expr pos:start="159:17" pos:end="159:55"><name pos:start="159:17" pos:end="159:30"><name pos:start="159:17" pos:end="159:18">sd</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:30">data_start</name></name> <operator pos:start="159:32" pos:end="159:32">+</operator> <name pos:start="159:34" pos:end="159:44"><name pos:start="159:34" pos:end="159:35">sd</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:44">blk_len</name></name> <operator pos:start="159:46" pos:end="159:46">&gt;</operator> <name pos:start="159:48" pos:end="159:55"><name pos:start="159:48" pos:end="159:49">sd</name><operator pos:start="159:50" pos:end="159:51">-&gt;</operator><name pos:start="159:52" pos:end="159:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="160:17" pos:end="160:49"><block_content pos:start="160:17" pos:end="160:49">
                <expr_stmt pos:start="160:17" pos:end="160:49"><expr pos:start="160:17" pos:end="160:48"><name pos:start="160:17" pos:end="160:31"><name pos:start="160:17" pos:end="160:18">sd</name><operator pos:start="160:19" pos:end="160:20">-&gt;</operator><name pos:start="160:21" pos:end="160:31">card_status</name></name> <operator pos:start="160:33" pos:end="160:34">|=</operator> <name pos:start="160:36" pos:end="160:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <default pos:start="161:9" pos:end="161:16">default:</default>
            <break pos:start="162:13" pos:end="162:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="164:9" pos:end="164:14">break;</break>
    <case pos:start="165:5" pos:end="165:12">case <expr pos:start="165:10" pos:end="165:11"><literal type="number" pos:start="165:10" pos:end="165:11">12</literal></expr>:</case>	<comment type="block" pos:start="165:17" pos:end="165:47">/* CMD12:  STOP_TRANSMISSION */</comment>
        <switch pos:start="166:9" pos:end="177:9">switch <condition pos:start="166:16" pos:end="166:26">(<expr pos:start="166:17" pos:end="166:25"><name pos:start="166:17" pos:end="166:25"><name pos:start="166:17" pos:end="166:18">sd</name><operator pos:start="166:19" pos:end="166:20">-&gt;</operator><name pos:start="166:21" pos:end="166:25">state</name></name></expr>)</condition> <block pos:start="166:28" pos:end="177:9">{<block_content pos:start="167:9" pos:end="176:18">
        <case pos:start="167:9" pos:end="167:34">case <expr pos:start="167:14" pos:end="167:33"><name pos:start="167:14" pos:end="167:33">sd_sendingdata_state</name></expr>:</case>
            <expr_stmt pos:start="168:13" pos:end="168:42"><expr pos:start="168:13" pos:end="168:41"><name pos:start="168:13" pos:end="168:21"><name pos:start="168:13" pos:end="168:14">sd</name><operator pos:start="168:15" pos:end="168:16">-&gt;</operator><name pos:start="168:17" pos:end="168:21">state</name></name> <operator pos:start="168:23" pos:end="168:23">=</operator> <name pos:start="168:25" pos:end="168:41">sd_transfer_state</name></expr>;</expr_stmt>
            <return pos:start="169:13" pos:end="169:26">return <expr pos:start="169:20" pos:end="169:25"><name pos:start="169:20" pos:end="169:25">sd_r1b</name></expr>;</return>
        <case pos:start="170:9" pos:end="170:36">case <expr pos:start="170:14" pos:end="170:35"><name pos:start="170:14" pos:end="170:35">sd_receivingdata_state</name></expr>:</case>
            <expr_stmt pos:start="171:13" pos:end="171:45"><expr pos:start="171:13" pos:end="171:44"><name pos:start="171:13" pos:end="171:21"><name pos:start="171:13" pos:end="171:14">sd</name><operator pos:start="171:15" pos:end="171:16">-&gt;</operator><name pos:start="171:17" pos:end="171:21">state</name></name> <operator pos:start="171:23" pos:end="171:23">=</operator> <name pos:start="171:25" pos:end="171:44">sd_programming_state</name></expr>;</expr_stmt>
            <comment type="block" pos:start="172:13" pos:end="172:54">/* Bzzzzzzztt .... Operation complete.  */</comment>
            <expr_stmt pos:start="173:13" pos:end="173:42"><expr pos:start="173:13" pos:end="173:41"><name pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:14">sd</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:21">state</name></name> <operator pos:start="173:23" pos:end="173:23">=</operator> <name pos:start="173:25" pos:end="173:41">sd_transfer_state</name></expr>;</expr_stmt>
            <return pos:start="174:13" pos:end="174:26">return <expr pos:start="174:20" pos:end="174:25"><name pos:start="174:20" pos:end="174:25">sd_r1b</name></expr>;</return>
        <default pos:start="175:9" pos:end="175:16">default:</default>
            <break pos:start="176:13" pos:end="176:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="178:9" pos:end="178:14">break;</break>
    <case pos:start="179:5" pos:end="179:12">case <expr pos:start="179:10" pos:end="179:11"><literal type="number" pos:start="179:10" pos:end="179:11">13</literal></expr>:</case>	<comment type="block" pos:start="179:17" pos:end="179:41">/* CMD13:  SEND_STATUS */</comment>
        <switch pos:start="180:9" pos:end="186:9">switch <condition pos:start="180:16" pos:end="180:25">(<expr pos:start="180:17" pos:end="180:24"><name pos:start="180:17" pos:end="180:24"><name pos:start="180:17" pos:end="180:18">sd</name><operator pos:start="180:19" pos:end="180:20">-&gt;</operator><name pos:start="180:21" pos:end="180:24">mode</name></name></expr>)</condition> <block pos:start="180:27" pos:end="186:9">{<block_content pos:start="181:9" pos:end="185:18">
        <case pos:start="181:9" pos:end="181:35">case <expr pos:start="181:14" pos:end="181:34"><name pos:start="181:14" pos:end="181:34">sd_data_transfer_mode</name></expr>:</case>
            <if_stmt pos:start="182:13" pos:end="183:25"><if pos:start="182:13" pos:end="183:25">if <condition pos:start="182:16" pos:end="182:31">(<expr pos:start="182:17" pos:end="182:30"><name pos:start="182:17" pos:end="182:23"><name pos:start="182:17" pos:end="182:18">sd</name><operator pos:start="182:19" pos:end="182:20">-&gt;</operator><name pos:start="182:21" pos:end="182:23">rca</name></name> <operator pos:start="182:25" pos:end="182:26">!=</operator> <name pos:start="182:28" pos:end="182:30">rca</name></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:25"><block_content pos:start="183:13" pos:end="183:25">
            <return pos:start="183:13" pos:end="183:25">return <expr pos:start="183:20" pos:end="183:24"><name pos:start="183:20" pos:end="183:24">sd_r1</name></expr>;</return></block_content></block></if></if_stmt>
        <default pos:start="184:9" pos:end="184:16">default:</default>
            <break pos:start="185:13" pos:end="185:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="187:9" pos:end="187:14">break;</break>
    <case pos:start="188:5" pos:end="188:12">case <expr pos:start="188:10" pos:end="188:11"><literal type="number" pos:start="188:10" pos:end="188:11">15</literal></expr>:</case>	<comment type="block" pos:start="188:17" pos:end="188:47">/* CMD15:  GO_INACTIVE_STATE */</comment>
        <if_stmt pos:start="189:9" pos:end="190:25"><if pos:start="189:9" pos:end="190:25">if <condition pos:start="189:12" pos:end="189:20">(<expr pos:start="189:13" pos:end="189:19"><name pos:start="189:13" pos:end="189:19"><name pos:start="189:13" pos:end="189:14">sd</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="190:13" pos:end="190:25"><block_content pos:start="190:13" pos:end="190:25">
            <goto pos:start="190:13" pos:end="190:25">goto <name pos:start="190:18" pos:end="190:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="191:9" pos:end="197:9">switch <condition pos:start="191:16" pos:end="191:25">(<expr pos:start="191:17" pos:end="191:24"><name pos:start="191:17" pos:end="191:24"><name pos:start="191:17" pos:end="191:18">sd</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:24">mode</name></name></expr>)</condition> <block pos:start="191:27" pos:end="197:9">{<block_content pos:start="192:9" pos:end="196:18">
        <case pos:start="192:9" pos:end="192:35">case <expr pos:start="192:14" pos:end="192:34"><name pos:start="192:14" pos:end="192:34">sd_data_transfer_mode</name></expr>:</case>
            <if_stmt pos:start="193:13" pos:end="194:42"><if pos:start="193:13" pos:end="194:42">if <condition pos:start="193:16" pos:end="193:31">(<expr pos:start="193:17" pos:end="193:30"><name pos:start="193:17" pos:end="193:23"><name pos:start="193:17" pos:end="193:18">sd</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:23">rca</name></name> <operator pos:start="193:25" pos:end="193:26">!=</operator> <name pos:start="193:28" pos:end="193:30">rca</name></expr>)</condition><block type="pseudo" pos:start="194:13" pos:end="194:42"><block_content pos:start="194:13" pos:end="194:42">
            <expr_stmt pos:start="194:13" pos:end="194:42"><expr pos:start="194:13" pos:end="194:41"><name pos:start="194:13" pos:end="194:21"><name pos:start="194:13" pos:end="194:14">sd</name><operator pos:start="194:15" pos:end="194:16">-&gt;</operator><name pos:start="194:17" pos:end="194:21">state</name></name> <operator pos:start="194:23" pos:end="194:23">=</operator> <name pos:start="194:25" pos:end="194:41">sd_inactive_state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <default pos:start="195:9" pos:end="195:16">default:</default>
            <break pos:start="196:13" pos:end="196:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="198:9" pos:end="198:14">break;</break>
    <comment type="block" pos:start="199:5" pos:end="199:40">/* Block read commands (Classs 2) */</comment>
    <case pos:start="200:5" pos:end="200:12">case <expr pos:start="200:10" pos:end="200:11"><literal type="number" pos:start="200:10" pos:end="200:11">16</literal></expr>:</case>	<comment type="block" pos:start="200:17" pos:end="200:42">/* CMD16:  SET_BLOCKLEN */</comment>
        <switch pos:start="201:9" pos:end="210:9">switch <condition pos:start="201:16" pos:end="201:26">(<expr pos:start="201:17" pos:end="201:25"><name pos:start="201:17" pos:end="201:25"><name pos:start="201:17" pos:end="201:18">sd</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:25">state</name></name></expr>)</condition> <block pos:start="201:28" pos:end="210:9">{<block_content pos:start="202:9" pos:end="209:18">
        <case pos:start="202:9" pos:end="202:31">case <expr pos:start="202:14" pos:end="202:30"><name pos:start="202:14" pos:end="202:30">sd_transfer_state</name></expr>:</case>
            <if_stmt pos:start="203:13" pos:end="206:38"><if pos:start="203:13" pos:end="204:51">if <condition pos:start="203:16" pos:end="203:47">(<expr pos:start="203:17" pos:end="203:46"><name pos:start="203:17" pos:end="203:23"><name pos:start="203:17" pos:end="203:19">req</name><operator pos:start="203:20" pos:end="203:20">.</operator><name pos:start="203:21" pos:end="203:23">arg</name></name> <operator pos:start="203:25" pos:end="203:25">&gt;</operator> <operator pos:start="203:27" pos:end="203:27">(</operator><literal type="number" pos:start="203:28" pos:end="203:28">1</literal> <operator pos:start="203:30" pos:end="203:31">&lt;&lt;</operator> <name pos:start="203:33" pos:end="203:45">HWBLOCK_SHIFT</name><operator pos:start="203:46" pos:end="203:46">)</operator></expr>)</condition><block type="pseudo" pos:start="204:17" pos:end="204:51"><block_content pos:start="204:17" pos:end="204:51">
                <expr_stmt pos:start="204:17" pos:end="204:51"><expr pos:start="204:17" pos:end="204:50"><name pos:start="204:17" pos:end="204:31"><name pos:start="204:17" pos:end="204:18">sd</name><operator pos:start="204:19" pos:end="204:20">-&gt;</operator><name pos:start="204:21" pos:end="204:31">card_status</name></name> <operator pos:start="204:33" pos:end="204:34">|=</operator> <name pos:start="204:36" pos:end="204:50">BLOCK_LEN_ERROR</name></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="205:13" pos:end="206:38">else<block type="pseudo" pos:start="206:17" pos:end="206:38"><block_content pos:start="206:17" pos:end="206:38">
                <expr_stmt pos:start="206:17" pos:end="206:38"><expr pos:start="206:17" pos:end="206:37"><name pos:start="206:17" pos:end="206:27"><name pos:start="206:17" pos:end="206:18">sd</name><operator pos:start="206:19" pos:end="206:20">-&gt;</operator><name pos:start="206:21" pos:end="206:27">blk_len</name></name> <operator pos:start="206:29" pos:end="206:29">=</operator> <name pos:start="206:31" pos:end="206:37"><name pos:start="206:31" pos:end="206:33">req</name><operator pos:start="206:34" pos:end="206:34">.</operator><name pos:start="206:35" pos:end="206:37">arg</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <return pos:start="207:13" pos:end="207:25">return <expr pos:start="207:20" pos:end="207:24"><name pos:start="207:20" pos:end="207:24">sd_r1</name></expr>;</return>
        <default pos:start="208:9" pos:end="208:16">default:</default>
            <break pos:start="209:13" pos:end="209:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="211:9" pos:end="211:14">break;</break>
    <case pos:start="212:5" pos:end="212:12">case <expr pos:start="212:10" pos:end="212:11"><literal type="number" pos:start="212:10" pos:end="212:11">17</literal></expr>:</case>	<comment type="block" pos:start="212:17" pos:end="212:47">/* CMD17:  READ_SINGLE_BLOCK */</comment>
        <switch pos:start="213:9" pos:end="223:9">switch <condition pos:start="213:16" pos:end="213:26">(<expr pos:start="213:17" pos:end="213:25"><name pos:start="213:17" pos:end="213:25"><name pos:start="213:17" pos:end="213:18">sd</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:25">state</name></name></expr>)</condition> <block pos:start="213:28" pos:end="223:9">{<block_content pos:start="214:9" pos:end="222:18">
        <case pos:start="214:9" pos:end="214:31">case <expr pos:start="214:14" pos:end="214:30"><name pos:start="214:14" pos:end="214:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="215:13" pos:end="215:45"><expr pos:start="215:13" pos:end="215:44"><name pos:start="215:13" pos:end="215:21"><name pos:start="215:13" pos:end="215:14">sd</name><operator pos:start="215:15" pos:end="215:16">-&gt;</operator><name pos:start="215:17" pos:end="215:21">state</name></name> <operator pos:start="215:23" pos:end="215:23">=</operator> <name pos:start="215:25" pos:end="215:44">sd_sendingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="216:13" pos:end="216:34"><expr pos:start="216:13" pos:end="216:33"><name pos:start="216:13" pos:end="216:26"><name pos:start="216:13" pos:end="216:14">sd</name><operator pos:start="216:15" pos:end="216:16">-&gt;</operator><name pos:start="216:17" pos:end="216:26">data_start</name></name> <operator pos:start="216:28" pos:end="216:28">=</operator> <name pos:start="216:30" pos:end="216:33">addr</name></expr>;</expr_stmt>
            <expr_stmt pos:start="217:13" pos:end="217:32"><expr pos:start="217:13" pos:end="217:31"><name pos:start="217:13" pos:end="217:27"><name pos:start="217:13" pos:end="217:14">sd</name><operator pos:start="217:15" pos:end="217:16">-&gt;</operator><name pos:start="217:17" pos:end="217:27">data_offset</name></name> <operator pos:start="217:29" pos:end="217:29">=</operator> <literal type="number" pos:start="217:31" pos:end="217:31">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="218:13" pos:end="219:49"><if pos:start="218:13" pos:end="219:49">if <condition pos:start="218:16" pos:end="218:56">(<expr pos:start="218:17" pos:end="218:55"><name pos:start="218:17" pos:end="218:30"><name pos:start="218:17" pos:end="218:18">sd</name><operator pos:start="218:19" pos:end="218:20">-&gt;</operator><name pos:start="218:21" pos:end="218:30">data_start</name></name> <operator pos:start="218:32" pos:end="218:32">+</operator> <name pos:start="218:34" pos:end="218:44"><name pos:start="218:34" pos:end="218:35">sd</name><operator pos:start="218:36" pos:end="218:37">-&gt;</operator><name pos:start="218:38" pos:end="218:44">blk_len</name></name> <operator pos:start="218:46" pos:end="218:46">&gt;</operator> <name pos:start="218:48" pos:end="218:55"><name pos:start="218:48" pos:end="218:49">sd</name><operator pos:start="218:50" pos:end="218:51">-&gt;</operator><name pos:start="218:52" pos:end="218:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="219:17" pos:end="219:49"><block_content pos:start="219:17" pos:end="219:49">
                <expr_stmt pos:start="219:17" pos:end="219:49"><expr pos:start="219:17" pos:end="219:48"><name pos:start="219:17" pos:end="219:31"><name pos:start="219:17" pos:end="219:18">sd</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:31">card_status</name></name> <operator pos:start="219:33" pos:end="219:34">|=</operator> <name pos:start="219:36" pos:end="219:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <return pos:start="220:13" pos:end="220:25">return <expr pos:start="220:20" pos:end="220:24"><name pos:start="220:20" pos:end="220:24">sd_r1</name></expr>;</return>
        <default pos:start="221:9" pos:end="221:16">default:</default>
            <break pos:start="222:13" pos:end="222:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="224:9" pos:end="224:14">break;</break>
    <case pos:start="225:5" pos:end="225:12">case <expr pos:start="225:10" pos:end="225:11"><literal type="number" pos:start="225:10" pos:end="225:11">18</literal></expr>:</case>	<comment type="block" pos:start="225:17" pos:end="225:49">/* CMD18:  READ_MULTIPLE_BLOCK */</comment>
        <switch pos:start="226:9" pos:end="236:9">switch <condition pos:start="226:16" pos:end="226:26">(<expr pos:start="226:17" pos:end="226:25"><name pos:start="226:17" pos:end="226:25"><name pos:start="226:17" pos:end="226:18">sd</name><operator pos:start="226:19" pos:end="226:20">-&gt;</operator><name pos:start="226:21" pos:end="226:25">state</name></name></expr>)</condition> <block pos:start="226:28" pos:end="236:9">{<block_content pos:start="227:9" pos:end="235:18">
        <case pos:start="227:9" pos:end="227:31">case <expr pos:start="227:14" pos:end="227:30"><name pos:start="227:14" pos:end="227:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="228:13" pos:end="228:45"><expr pos:start="228:13" pos:end="228:44"><name pos:start="228:13" pos:end="228:21"><name pos:start="228:13" pos:end="228:14">sd</name><operator pos:start="228:15" pos:end="228:16">-&gt;</operator><name pos:start="228:17" pos:end="228:21">state</name></name> <operator pos:start="228:23" pos:end="228:23">=</operator> <name pos:start="228:25" pos:end="228:44">sd_sendingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="229:13" pos:end="229:34"><expr pos:start="229:13" pos:end="229:33"><name pos:start="229:13" pos:end="229:26"><name pos:start="229:13" pos:end="229:14">sd</name><operator pos:start="229:15" pos:end="229:16">-&gt;</operator><name pos:start="229:17" pos:end="229:26">data_start</name></name> <operator pos:start="229:28" pos:end="229:28">=</operator> <name pos:start="229:30" pos:end="229:33">addr</name></expr>;</expr_stmt>
            <expr_stmt pos:start="230:13" pos:end="230:32"><expr pos:start="230:13" pos:end="230:31"><name pos:start="230:13" pos:end="230:27"><name pos:start="230:13" pos:end="230:14">sd</name><operator pos:start="230:15" pos:end="230:16">-&gt;</operator><name pos:start="230:17" pos:end="230:27">data_offset</name></name> <operator pos:start="230:29" pos:end="230:29">=</operator> <literal type="number" pos:start="230:31" pos:end="230:31">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="231:13" pos:end="232:49"><if pos:start="231:13" pos:end="232:49">if <condition pos:start="231:16" pos:end="231:56">(<expr pos:start="231:17" pos:end="231:55"><name pos:start="231:17" pos:end="231:30"><name pos:start="231:17" pos:end="231:18">sd</name><operator pos:start="231:19" pos:end="231:20">-&gt;</operator><name pos:start="231:21" pos:end="231:30">data_start</name></name> <operator pos:start="231:32" pos:end="231:32">+</operator> <name pos:start="231:34" pos:end="231:44"><name pos:start="231:34" pos:end="231:35">sd</name><operator pos:start="231:36" pos:end="231:37">-&gt;</operator><name pos:start="231:38" pos:end="231:44">blk_len</name></name> <operator pos:start="231:46" pos:end="231:46">&gt;</operator> <name pos:start="231:48" pos:end="231:55"><name pos:start="231:48" pos:end="231:49">sd</name><operator pos:start="231:50" pos:end="231:51">-&gt;</operator><name pos:start="231:52" pos:end="231:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="232:17" pos:end="232:49"><block_content pos:start="232:17" pos:end="232:49">
                <expr_stmt pos:start="232:17" pos:end="232:49"><expr pos:start="232:17" pos:end="232:48"><name pos:start="232:17" pos:end="232:31"><name pos:start="232:17" pos:end="232:18">sd</name><operator pos:start="232:19" pos:end="232:20">-&gt;</operator><name pos:start="232:21" pos:end="232:31">card_status</name></name> <operator pos:start="232:33" pos:end="232:34">|=</operator> <name pos:start="232:36" pos:end="232:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <return pos:start="233:13" pos:end="233:25">return <expr pos:start="233:20" pos:end="233:24"><name pos:start="233:20" pos:end="233:24">sd_r1</name></expr>;</return>
        <default pos:start="234:9" pos:end="234:16">default:</default>
            <break pos:start="235:13" pos:end="235:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="237:9" pos:end="237:14">break;</break>
    <comment type="block" pos:start="238:5" pos:end="238:40">/* Block write commands (Class 4) */</comment>
    <case pos:start="239:5" pos:end="239:12">case <expr pos:start="239:10" pos:end="239:11"><literal type="number" pos:start="239:10" pos:end="239:11">24</literal></expr>:</case>	<comment type="block" pos:start="239:17" pos:end="239:48">/* CMD24:  WRITE_SINGLE_BLOCK */</comment>
        <if_stmt pos:start="240:9" pos:end="241:35"><if pos:start="240:9" pos:end="241:35">if <condition pos:start="240:12" pos:end="240:20">(<expr pos:start="240:13" pos:end="240:19"><name pos:start="240:13" pos:end="240:19"><name pos:start="240:13" pos:end="240:14">sd</name><operator pos:start="240:15" pos:end="240:16">-&gt;</operator><name pos:start="240:17" pos:end="240:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:35"><block_content pos:start="241:13" pos:end="241:35">
            <goto pos:start="241:13" pos:end="241:35">goto <name pos:start="241:18" pos:end="241:34">unimplemented_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="242:9" pos:end="260:9">switch <condition pos:start="242:16" pos:end="242:26">(<expr pos:start="242:17" pos:end="242:25"><name pos:start="242:17" pos:end="242:25"><name pos:start="242:17" pos:end="242:18">sd</name><operator pos:start="242:19" pos:end="242:20">-&gt;</operator><name pos:start="242:21" pos:end="242:25">state</name></name></expr>)</condition> <block pos:start="242:28" pos:end="260:9">{<block_content pos:start="243:9" pos:end="259:18">
        <case pos:start="243:9" pos:end="243:31">case <expr pos:start="243:14" pos:end="243:30"><name pos:start="243:14" pos:end="243:30">sd_transfer_state</name></expr>:</case>
            <comment type="block" pos:start="244:13" pos:end="244:55">/* Writing in SPI mode not implemented.  */</comment>
            <if_stmt pos:start="245:13" pos:end="246:22"><if pos:start="245:13" pos:end="246:22">if <condition pos:start="245:16" pos:end="245:24">(<expr pos:start="245:17" pos:end="245:23"><name pos:start="245:17" pos:end="245:23"><name pos:start="245:17" pos:end="245:18">sd</name><operator pos:start="245:19" pos:end="245:20">-&gt;</operator><name pos:start="245:21" pos:end="245:23">spi</name></name></expr>)</condition><block type="pseudo" pos:start="246:17" pos:end="246:22"><block_content pos:start="246:17" pos:end="246:22">
                <break pos:start="246:17" pos:end="246:22">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="247:13" pos:end="247:47"><expr pos:start="247:13" pos:end="247:46"><name pos:start="247:13" pos:end="247:21"><name pos:start="247:13" pos:end="247:14">sd</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:21">state</name></name> <operator pos:start="247:23" pos:end="247:23">=</operator> <name pos:start="247:25" pos:end="247:46">sd_receivingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="248:13" pos:end="248:34"><expr pos:start="248:13" pos:end="248:33"><name pos:start="248:13" pos:end="248:26"><name pos:start="248:13" pos:end="248:14">sd</name><operator pos:start="248:15" pos:end="248:16">-&gt;</operator><name pos:start="248:17" pos:end="248:26">data_start</name></name> <operator pos:start="248:28" pos:end="248:28">=</operator> <name pos:start="248:30" pos:end="248:33">addr</name></expr>;</expr_stmt>
            <expr_stmt pos:start="249:13" pos:end="249:32"><expr pos:start="249:13" pos:end="249:31"><name pos:start="249:13" pos:end="249:27"><name pos:start="249:13" pos:end="249:14">sd</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:27">data_offset</name></name> <operator pos:start="249:29" pos:end="249:29">=</operator> <literal type="number" pos:start="249:31" pos:end="249:31">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="250:13" pos:end="250:32"><expr pos:start="250:13" pos:end="250:31"><name pos:start="250:13" pos:end="250:27"><name pos:start="250:13" pos:end="250:14">sd</name><operator pos:start="250:15" pos:end="250:16">-&gt;</operator><name pos:start="250:17" pos:end="250:27">blk_written</name></name> <operator pos:start="250:29" pos:end="250:29">=</operator> <literal type="number" pos:start="250:31" pos:end="250:31">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="251:13" pos:end="252:49"><if pos:start="251:13" pos:end="252:49">if <condition pos:start="251:16" pos:end="251:56">(<expr pos:start="251:17" pos:end="251:55"><name pos:start="251:17" pos:end="251:30"><name pos:start="251:17" pos:end="251:18">sd</name><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:30">data_start</name></name> <operator pos:start="251:32" pos:end="251:32">+</operator> <name pos:start="251:34" pos:end="251:44"><name pos:start="251:34" pos:end="251:35">sd</name><operator pos:start="251:36" pos:end="251:37">-&gt;</operator><name pos:start="251:38" pos:end="251:44">blk_len</name></name> <operator pos:start="251:46" pos:end="251:46">&gt;</operator> <name pos:start="251:48" pos:end="251:55"><name pos:start="251:48" pos:end="251:49">sd</name><operator pos:start="251:50" pos:end="251:51">-&gt;</operator><name pos:start="251:52" pos:end="251:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="252:17" pos:end="252:49"><block_content pos:start="252:17" pos:end="252:49">
                <expr_stmt pos:start="252:17" pos:end="252:49"><expr pos:start="252:17" pos:end="252:48"><name pos:start="252:17" pos:end="252:31"><name pos:start="252:17" pos:end="252:18">sd</name><operator pos:start="252:19" pos:end="252:20">-&gt;</operator><name pos:start="252:21" pos:end="252:31">card_status</name></name> <operator pos:start="252:33" pos:end="252:34">|=</operator> <name pos:start="252:36" pos:end="252:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="253:13" pos:end="254:48"><if pos:start="253:13" pos:end="254:48">if <condition pos:start="253:16" pos:end="253:47">(<expr pos:start="253:17" pos:end="253:46"><call pos:start="253:17" pos:end="253:46"><name pos:start="253:17" pos:end="253:26">sd_wp_addr</name><argument_list pos:start="253:27" pos:end="253:46">(<argument pos:start="253:28" pos:end="253:29"><expr pos:start="253:28" pos:end="253:29"><name pos:start="253:28" pos:end="253:29">sd</name></expr></argument>, <argument pos:start="253:32" pos:end="253:45"><expr pos:start="253:32" pos:end="253:45"><name pos:start="253:32" pos:end="253:45"><name pos:start="253:32" pos:end="253:33">sd</name><operator pos:start="253:34" pos:end="253:35">-&gt;</operator><name pos:start="253:36" pos:end="253:45">data_start</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="254:17" pos:end="254:48"><block_content pos:start="254:17" pos:end="254:48">
                <expr_stmt pos:start="254:17" pos:end="254:48"><expr pos:start="254:17" pos:end="254:47"><name pos:start="254:17" pos:end="254:31"><name pos:start="254:17" pos:end="254:18">sd</name><operator pos:start="254:19" pos:end="254:20">-&gt;</operator><name pos:start="254:21" pos:end="254:31">card_status</name></name> <operator pos:start="254:33" pos:end="254:34">|=</operator> <name pos:start="254:36" pos:end="254:47">WP_VIOLATION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="255:13" pos:end="256:48"><if pos:start="255:13" pos:end="256:48">if <condition pos:start="255:16" pos:end="255:35">(<expr pos:start="255:17" pos:end="255:34"><name pos:start="255:17" pos:end="255:27"><name pos:start="255:17" pos:end="255:18">sd</name><operator pos:start="255:19" pos:end="255:20">-&gt;</operator><name pos:start="255:21" pos:end="255:23">csd</name><index pos:start="255:24" pos:end="255:27">[<expr pos:start="255:25" pos:end="255:26"><literal type="number" pos:start="255:25" pos:end="255:26">14</literal></expr>]</index></name> <operator pos:start="255:29" pos:end="255:29">&amp;</operator> <literal type="number" pos:start="255:31" pos:end="255:34">0x30</literal></expr>)</condition><block type="pseudo" pos:start="256:17" pos:end="256:48"><block_content pos:start="256:17" pos:end="256:48">
                <expr_stmt pos:start="256:17" pos:end="256:48"><expr pos:start="256:17" pos:end="256:47"><name pos:start="256:17" pos:end="256:31"><name pos:start="256:17" pos:end="256:18">sd</name><operator pos:start="256:19" pos:end="256:20">-&gt;</operator><name pos:start="256:21" pos:end="256:31">card_status</name></name> <operator pos:start="256:33" pos:end="256:34">|=</operator> <name pos:start="256:36" pos:end="256:47">WP_VIOLATION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <return pos:start="257:13" pos:end="257:25">return <expr pos:start="257:20" pos:end="257:24"><name pos:start="257:20" pos:end="257:24">sd_r1</name></expr>;</return>
        <default pos:start="258:9" pos:end="258:16">default:</default>
            <break pos:start="259:13" pos:end="259:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="261:9" pos:end="261:14">break;</break>
    <case pos:start="262:5" pos:end="262:12">case <expr pos:start="262:10" pos:end="262:11"><literal type="number" pos:start="262:10" pos:end="262:11">25</literal></expr>:</case>	<comment type="block" pos:start="262:17" pos:end="262:50">/* CMD25:  WRITE_MULTIPLE_BLOCK */</comment>
        <if_stmt pos:start="263:9" pos:end="264:35"><if pos:start="263:9" pos:end="264:35">if <condition pos:start="263:12" pos:end="263:20">(<expr pos:start="263:13" pos:end="263:19"><name pos:start="263:13" pos:end="263:19"><name pos:start="263:13" pos:end="263:14">sd</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="264:13" pos:end="264:35"><block_content pos:start="264:13" pos:end="264:35">
            <goto pos:start="264:13" pos:end="264:35">goto <name pos:start="264:18" pos:end="264:34">unimplemented_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="265:9" pos:end="283:9">switch <condition pos:start="265:16" pos:end="265:26">(<expr pos:start="265:17" pos:end="265:25"><name pos:start="265:17" pos:end="265:25"><name pos:start="265:17" pos:end="265:18">sd</name><operator pos:start="265:19" pos:end="265:20">-&gt;</operator><name pos:start="265:21" pos:end="265:25">state</name></name></expr>)</condition> <block pos:start="265:28" pos:end="283:9">{<block_content pos:start="266:9" pos:end="282:18">
        <case pos:start="266:9" pos:end="266:31">case <expr pos:start="266:14" pos:end="266:30"><name pos:start="266:14" pos:end="266:30">sd_transfer_state</name></expr>:</case>
            <comment type="block" pos:start="267:13" pos:end="267:55">/* Writing in SPI mode not implemented.  */</comment>
            <if_stmt pos:start="268:13" pos:end="269:22"><if pos:start="268:13" pos:end="269:22">if <condition pos:start="268:16" pos:end="268:24">(<expr pos:start="268:17" pos:end="268:23"><name pos:start="268:17" pos:end="268:23"><name pos:start="268:17" pos:end="268:18">sd</name><operator pos:start="268:19" pos:end="268:20">-&gt;</operator><name pos:start="268:21" pos:end="268:23">spi</name></name></expr>)</condition><block type="pseudo" pos:start="269:17" pos:end="269:22"><block_content pos:start="269:17" pos:end="269:22">
                <break pos:start="269:17" pos:end="269:22">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="270:13" pos:end="270:47"><expr pos:start="270:13" pos:end="270:46"><name pos:start="270:13" pos:end="270:21"><name pos:start="270:13" pos:end="270:14">sd</name><operator pos:start="270:15" pos:end="270:16">-&gt;</operator><name pos:start="270:17" pos:end="270:21">state</name></name> <operator pos:start="270:23" pos:end="270:23">=</operator> <name pos:start="270:25" pos:end="270:46">sd_receivingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="271:13" pos:end="271:34"><expr pos:start="271:13" pos:end="271:33"><name pos:start="271:13" pos:end="271:26"><name pos:start="271:13" pos:end="271:14">sd</name><operator pos:start="271:15" pos:end="271:16">-&gt;</operator><name pos:start="271:17" pos:end="271:26">data_start</name></name> <operator pos:start="271:28" pos:end="271:28">=</operator> <name pos:start="271:30" pos:end="271:33">addr</name></expr>;</expr_stmt>
            <expr_stmt pos:start="272:13" pos:end="272:32"><expr pos:start="272:13" pos:end="272:31"><name pos:start="272:13" pos:end="272:27"><name pos:start="272:13" pos:end="272:14">sd</name><operator pos:start="272:15" pos:end="272:16">-&gt;</operator><name pos:start="272:17" pos:end="272:27">data_offset</name></name> <operator pos:start="272:29" pos:end="272:29">=</operator> <literal type="number" pos:start="272:31" pos:end="272:31">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="273:13" pos:end="273:32"><expr pos:start="273:13" pos:end="273:31"><name pos:start="273:13" pos:end="273:27"><name pos:start="273:13" pos:end="273:14">sd</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:27">blk_written</name></name> <operator pos:start="273:29" pos:end="273:29">=</operator> <literal type="number" pos:start="273:31" pos:end="273:31">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="274:13" pos:end="275:49"><if pos:start="274:13" pos:end="275:49">if <condition pos:start="274:16" pos:end="274:56">(<expr pos:start="274:17" pos:end="274:55"><name pos:start="274:17" pos:end="274:30"><name pos:start="274:17" pos:end="274:18">sd</name><operator pos:start="274:19" pos:end="274:20">-&gt;</operator><name pos:start="274:21" pos:end="274:30">data_start</name></name> <operator pos:start="274:32" pos:end="274:32">+</operator> <name pos:start="274:34" pos:end="274:44"><name pos:start="274:34" pos:end="274:35">sd</name><operator pos:start="274:36" pos:end="274:37">-&gt;</operator><name pos:start="274:38" pos:end="274:44">blk_len</name></name> <operator pos:start="274:46" pos:end="274:46">&gt;</operator> <name pos:start="274:48" pos:end="274:55"><name pos:start="274:48" pos:end="274:49">sd</name><operator pos:start="274:50" pos:end="274:51">-&gt;</operator><name pos:start="274:52" pos:end="274:55">size</name></name></expr>)</condition><block type="pseudo" pos:start="275:17" pos:end="275:49"><block_content pos:start="275:17" pos:end="275:49">
                <expr_stmt pos:start="275:17" pos:end="275:49"><expr pos:start="275:17" pos:end="275:48"><name pos:start="275:17" pos:end="275:31"><name pos:start="275:17" pos:end="275:18">sd</name><operator pos:start="275:19" pos:end="275:20">-&gt;</operator><name pos:start="275:21" pos:end="275:31">card_status</name></name> <operator pos:start="275:33" pos:end="275:34">|=</operator> <name pos:start="275:36" pos:end="275:48">ADDRESS_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="276:13" pos:end="277:48"><if pos:start="276:13" pos:end="277:48">if <condition pos:start="276:16" pos:end="276:47">(<expr pos:start="276:17" pos:end="276:46"><call pos:start="276:17" pos:end="276:46"><name pos:start="276:17" pos:end="276:26">sd_wp_addr</name><argument_list pos:start="276:27" pos:end="276:46">(<argument pos:start="276:28" pos:end="276:29"><expr pos:start="276:28" pos:end="276:29"><name pos:start="276:28" pos:end="276:29">sd</name></expr></argument>, <argument pos:start="276:32" pos:end="276:45"><expr pos:start="276:32" pos:end="276:45"><name pos:start="276:32" pos:end="276:45"><name pos:start="276:32" pos:end="276:33">sd</name><operator pos:start="276:34" pos:end="276:35">-&gt;</operator><name pos:start="276:36" pos:end="276:45">data_start</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:48"><block_content pos:start="277:17" pos:end="277:48">
                <expr_stmt pos:start="277:17" pos:end="277:48"><expr pos:start="277:17" pos:end="277:47"><name pos:start="277:17" pos:end="277:31"><name pos:start="277:17" pos:end="277:18">sd</name><operator pos:start="277:19" pos:end="277:20">-&gt;</operator><name pos:start="277:21" pos:end="277:31">card_status</name></name> <operator pos:start="277:33" pos:end="277:34">|=</operator> <name pos:start="277:36" pos:end="277:47">WP_VIOLATION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="278:13" pos:end="279:48"><if pos:start="278:13" pos:end="279:48">if <condition pos:start="278:16" pos:end="278:35">(<expr pos:start="278:17" pos:end="278:34"><name pos:start="278:17" pos:end="278:27"><name pos:start="278:17" pos:end="278:18">sd</name><operator pos:start="278:19" pos:end="278:20">-&gt;</operator><name pos:start="278:21" pos:end="278:23">csd</name><index pos:start="278:24" pos:end="278:27">[<expr pos:start="278:25" pos:end="278:26"><literal type="number" pos:start="278:25" pos:end="278:26">14</literal></expr>]</index></name> <operator pos:start="278:29" pos:end="278:29">&amp;</operator> <literal type="number" pos:start="278:31" pos:end="278:34">0x30</literal></expr>)</condition><block type="pseudo" pos:start="279:17" pos:end="279:48"><block_content pos:start="279:17" pos:end="279:48">
                <expr_stmt pos:start="279:17" pos:end="279:48"><expr pos:start="279:17" pos:end="279:47"><name pos:start="279:17" pos:end="279:31"><name pos:start="279:17" pos:end="279:18">sd</name><operator pos:start="279:19" pos:end="279:20">-&gt;</operator><name pos:start="279:21" pos:end="279:31">card_status</name></name> <operator pos:start="279:33" pos:end="279:34">|=</operator> <name pos:start="279:36" pos:end="279:47">WP_VIOLATION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <return pos:start="280:13" pos:end="280:25">return <expr pos:start="280:20" pos:end="280:24"><name pos:start="280:20" pos:end="280:24">sd_r1</name></expr>;</return>
        <default pos:start="281:9" pos:end="281:16">default:</default>
            <break pos:start="282:13" pos:end="282:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="284:9" pos:end="284:14">break;</break>
    <case pos:start="285:5" pos:end="285:12">case <expr pos:start="285:10" pos:end="285:11"><literal type="number" pos:start="285:10" pos:end="285:11">26</literal></expr>:</case>	<comment type="block" pos:start="285:17" pos:end="285:41">/* CMD26:  PROGRAM_CID */</comment>
        <if_stmt pos:start="286:9" pos:end="287:25"><if pos:start="286:9" pos:end="287:25">if <condition pos:start="286:12" pos:end="286:20">(<expr pos:start="286:13" pos:end="286:19"><name pos:start="286:13" pos:end="286:19"><name pos:start="286:13" pos:end="286:14">sd</name><operator pos:start="286:15" pos:end="286:16">-&gt;</operator><name pos:start="286:17" pos:end="286:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="287:13" pos:end="287:25"><block_content pos:start="287:13" pos:end="287:25">
            <goto pos:start="287:13" pos:end="287:25">goto <name pos:start="287:18" pos:end="287:24">bad_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="288:9" pos:end="296:9">switch <condition pos:start="288:16" pos:end="288:26">(<expr pos:start="288:17" pos:end="288:25"><name pos:start="288:17" pos:end="288:25"><name pos:start="288:17" pos:end="288:18">sd</name><operator pos:start="288:19" pos:end="288:20">-&gt;</operator><name pos:start="288:21" pos:end="288:25">state</name></name></expr>)</condition> <block pos:start="288:28" pos:end="296:9">{<block_content pos:start="289:9" pos:end="295:18">
        <case pos:start="289:9" pos:end="289:31">case <expr pos:start="289:14" pos:end="289:30"><name pos:start="289:14" pos:end="289:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="290:13" pos:end="290:47"><expr pos:start="290:13" pos:end="290:46"><name pos:start="290:13" pos:end="290:21"><name pos:start="290:13" pos:end="290:14">sd</name><operator pos:start="290:15" pos:end="290:16">-&gt;</operator><name pos:start="290:17" pos:end="290:21">state</name></name> <operator pos:start="290:23" pos:end="290:23">=</operator> <name pos:start="290:25" pos:end="290:46">sd_receivingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="291:13" pos:end="291:31"><expr pos:start="291:13" pos:end="291:30"><name pos:start="291:13" pos:end="291:26"><name pos:start="291:13" pos:end="291:14">sd</name><operator pos:start="291:15" pos:end="291:16">-&gt;</operator><name pos:start="291:17" pos:end="291:26">data_start</name></name> <operator pos:start="291:28" pos:end="291:28">=</operator> <literal type="number" pos:start="291:30" pos:end="291:30">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="292:13" pos:end="292:32"><expr pos:start="292:13" pos:end="292:31"><name pos:start="292:13" pos:end="292:27"><name pos:start="292:13" pos:end="292:14">sd</name><operator pos:start="292:15" pos:end="292:16">-&gt;</operator><name pos:start="292:17" pos:end="292:27">data_offset</name></name> <operator pos:start="292:29" pos:end="292:29">=</operator> <literal type="number" pos:start="292:31" pos:end="292:31">0</literal></expr>;</expr_stmt>
            <return pos:start="293:13" pos:end="293:25">return <expr pos:start="293:20" pos:end="293:24"><name pos:start="293:20" pos:end="293:24">sd_r1</name></expr>;</return>
        <default pos:start="294:9" pos:end="294:16">default:</default>
            <break pos:start="295:13" pos:end="295:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="297:9" pos:end="297:14">break;</break>
    <case pos:start="298:5" pos:end="298:12">case <expr pos:start="298:10" pos:end="298:11"><literal type="number" pos:start="298:10" pos:end="298:11">27</literal></expr>:</case>	<comment type="block" pos:start="298:17" pos:end="298:41">/* CMD27:  PROGRAM_CSD */</comment>
        <if_stmt pos:start="299:9" pos:end="300:35"><if pos:start="299:9" pos:end="300:35">if <condition pos:start="299:12" pos:end="299:20">(<expr pos:start="299:13" pos:end="299:19"><name pos:start="299:13" pos:end="299:19"><name pos:start="299:13" pos:end="299:14">sd</name><operator pos:start="299:15" pos:end="299:16">-&gt;</operator><name pos:start="299:17" pos:end="299:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="300:13" pos:end="300:35"><block_content pos:start="300:13" pos:end="300:35">
            <goto pos:start="300:13" pos:end="300:35">goto <name pos:start="300:18" pos:end="300:34">unimplemented_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="301:9" pos:end="309:9">switch <condition pos:start="301:16" pos:end="301:26">(<expr pos:start="301:17" pos:end="301:25"><name pos:start="301:17" pos:end="301:25"><name pos:start="301:17" pos:end="301:18">sd</name><operator pos:start="301:19" pos:end="301:20">-&gt;</operator><name pos:start="301:21" pos:end="301:25">state</name></name></expr>)</condition> <block pos:start="301:28" pos:end="309:9">{<block_content pos:start="302:9" pos:end="308:18">
        <case pos:start="302:9" pos:end="302:31">case <expr pos:start="302:14" pos:end="302:30"><name pos:start="302:14" pos:end="302:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="303:13" pos:end="303:47"><expr pos:start="303:13" pos:end="303:46"><name pos:start="303:13" pos:end="303:21"><name pos:start="303:13" pos:end="303:14">sd</name><operator pos:start="303:15" pos:end="303:16">-&gt;</operator><name pos:start="303:17" pos:end="303:21">state</name></name> <operator pos:start="303:23" pos:end="303:23">=</operator> <name pos:start="303:25" pos:end="303:46">sd_receivingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="304:13" pos:end="304:31"><expr pos:start="304:13" pos:end="304:30"><name pos:start="304:13" pos:end="304:26"><name pos:start="304:13" pos:end="304:14">sd</name><operator pos:start="304:15" pos:end="304:16">-&gt;</operator><name pos:start="304:17" pos:end="304:26">data_start</name></name> <operator pos:start="304:28" pos:end="304:28">=</operator> <literal type="number" pos:start="304:30" pos:end="304:30">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="305:13" pos:end="305:32"><expr pos:start="305:13" pos:end="305:31"><name pos:start="305:13" pos:end="305:27"><name pos:start="305:13" pos:end="305:14">sd</name><operator pos:start="305:15" pos:end="305:16">-&gt;</operator><name pos:start="305:17" pos:end="305:27">data_offset</name></name> <operator pos:start="305:29" pos:end="305:29">=</operator> <literal type="number" pos:start="305:31" pos:end="305:31">0</literal></expr>;</expr_stmt>
            <return pos:start="306:13" pos:end="306:25">return <expr pos:start="306:20" pos:end="306:24"><name pos:start="306:20" pos:end="306:24">sd_r1</name></expr>;</return>
        <default pos:start="307:9" pos:end="307:16">default:</default>
            <break pos:start="308:13" pos:end="308:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="310:9" pos:end="310:14">break;</break>
    <comment type="block" pos:start="311:5" pos:end="311:36">/* Write protection (Class 6) */</comment>
    <case pos:start="312:5" pos:end="312:12">case <expr pos:start="312:10" pos:end="312:11"><literal type="number" pos:start="312:10" pos:end="312:11">28</literal></expr>:</case>	<comment type="block" pos:start="312:17" pos:end="312:44">/* CMD28:  SET_WRITE_PROT */</comment>
        <switch pos:start="313:9" pos:end="327:9">switch <condition pos:start="313:16" pos:end="313:26">(<expr pos:start="313:17" pos:end="313:25"><name pos:start="313:17" pos:end="313:25"><name pos:start="313:17" pos:end="313:18">sd</name><operator pos:start="313:19" pos:end="313:20">-&gt;</operator><name pos:start="313:21" pos:end="313:25">state</name></name></expr>)</condition> <block pos:start="313:28" pos:end="327:9">{<block_content pos:start="314:9" pos:end="326:18">
        <case pos:start="314:9" pos:end="314:31">case <expr pos:start="314:14" pos:end="314:30"><name pos:start="314:14" pos:end="314:30">sd_transfer_state</name></expr>:</case>
            <if_stmt pos:start="315:13" pos:end="318:13"><if pos:start="315:13" pos:end="318:13">if <condition pos:start="315:16" pos:end="315:33">(<expr pos:start="315:17" pos:end="315:32"><name pos:start="315:17" pos:end="315:20">addr</name> <operator pos:start="315:22" pos:end="315:23">&gt;=</operator> <name pos:start="315:25" pos:end="315:32"><name pos:start="315:25" pos:end="315:26">sd</name><operator pos:start="315:27" pos:end="315:28">-&gt;</operator><name pos:start="315:29" pos:end="315:32">size</name></name></expr>)</condition> <block pos:start="315:35" pos:end="318:13">{<block_content pos:start="316:17" pos:end="317:30">
                <expr_stmt pos:start="316:17" pos:end="316:48"><expr pos:start="316:17" pos:end="316:47"><name pos:start="316:17" pos:end="316:31"><name pos:start="316:17" pos:end="316:18">sd</name><operator pos:start="316:19" pos:end="316:20">-&gt;</operator><name pos:start="316:21" pos:end="316:31">card_status</name></name> <operator pos:start="316:33" pos:end="316:33">=</operator> <name pos:start="316:35" pos:end="316:47">ADDRESS_ERROR</name></expr>;</expr_stmt>
                <return pos:start="317:17" pos:end="317:30">return <expr pos:start="317:24" pos:end="317:29"><name pos:start="317:24" pos:end="317:29">sd_r1b</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="319:13" pos:end="319:45"><expr pos:start="319:13" pos:end="319:44"><name pos:start="319:13" pos:end="319:21"><name pos:start="319:13" pos:end="319:14">sd</name><operator pos:start="319:15" pos:end="319:16">-&gt;</operator><name pos:start="319:17" pos:end="319:21">state</name></name> <operator pos:start="319:23" pos:end="319:23">=</operator> <name pos:start="319:25" pos:end="319:44">sd_programming_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="320:13" pos:end="321:63"><expr pos:start="320:13" pos:end="321:62"><name pos:start="320:13" pos:end="321:58"><name pos:start="320:13" pos:end="320:14">sd</name><operator pos:start="320:15" pos:end="320:16">-&gt;</operator><name pos:start="320:17" pos:end="320:25">wp_groups</name><index pos:start="320:26" pos:end="321:58">[<expr pos:start="320:27" pos:end="321:57"><name pos:start="320:27" pos:end="320:30">addr</name> <operator pos:start="320:32" pos:end="320:33">&gt;&gt;</operator> <operator pos:start="320:35" pos:end="320:35">(</operator><name pos:start="320:36" pos:end="320:48">HWBLOCK_SHIFT</name> <operator pos:start="320:50" pos:end="320:50">+</operator>
                            <name pos:start="321:29" pos:end="321:40">SECTOR_SHIFT</name> <operator pos:start="321:42" pos:end="321:42">+</operator> <name pos:start="321:44" pos:end="321:56">WPGROUP_SHIFT</name><operator pos:start="321:57" pos:end="321:57">)</operator></expr>]</index></name> <operator pos:start="321:60" pos:end="321:60">=</operator> <literal type="number" pos:start="321:62" pos:end="321:62">1</literal></expr>;</expr_stmt>
            <comment type="block" pos:start="322:13" pos:end="322:54">/* Bzzzzzzztt .... Operation complete.  */</comment>
            <expr_stmt pos:start="323:13" pos:end="323:42"><expr pos:start="323:13" pos:end="323:41"><name pos:start="323:13" pos:end="323:21"><name pos:start="323:13" pos:end="323:14">sd</name><operator pos:start="323:15" pos:end="323:16">-&gt;</operator><name pos:start="323:17" pos:end="323:21">state</name></name> <operator pos:start="323:23" pos:end="323:23">=</operator> <name pos:start="323:25" pos:end="323:41">sd_transfer_state</name></expr>;</expr_stmt>
            <return pos:start="324:13" pos:end="324:26">return <expr pos:start="324:20" pos:end="324:25"><name pos:start="324:20" pos:end="324:25">sd_r1b</name></expr>;</return>
        <default pos:start="325:9" pos:end="325:16">default:</default>
            <break pos:start="326:13" pos:end="326:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="328:9" pos:end="328:14">break;</break>
    <case pos:start="329:5" pos:end="329:12">case <expr pos:start="329:10" pos:end="329:11"><literal type="number" pos:start="329:10" pos:end="329:11">29</literal></expr>:</case>	<comment type="block" pos:start="329:17" pos:end="329:44">/* CMD29:  CLR_WRITE_PROT */</comment>
        <switch pos:start="330:9" pos:end="344:9">switch <condition pos:start="330:16" pos:end="330:26">(<expr pos:start="330:17" pos:end="330:25"><name pos:start="330:17" pos:end="330:25"><name pos:start="330:17" pos:end="330:18">sd</name><operator pos:start="330:19" pos:end="330:20">-&gt;</operator><name pos:start="330:21" pos:end="330:25">state</name></name></expr>)</condition> <block pos:start="330:28" pos:end="344:9">{<block_content pos:start="331:9" pos:end="343:18">
        <case pos:start="331:9" pos:end="331:31">case <expr pos:start="331:14" pos:end="331:30"><name pos:start="331:14" pos:end="331:30">sd_transfer_state</name></expr>:</case>
            <if_stmt pos:start="332:13" pos:end="335:13"><if pos:start="332:13" pos:end="335:13">if <condition pos:start="332:16" pos:end="332:33">(<expr pos:start="332:17" pos:end="332:32"><name pos:start="332:17" pos:end="332:20">addr</name> <operator pos:start="332:22" pos:end="332:23">&gt;=</operator> <name pos:start="332:25" pos:end="332:32"><name pos:start="332:25" pos:end="332:26">sd</name><operator pos:start="332:27" pos:end="332:28">-&gt;</operator><name pos:start="332:29" pos:end="332:32">size</name></name></expr>)</condition> <block pos:start="332:35" pos:end="335:13">{<block_content pos:start="333:17" pos:end="334:30">
                <expr_stmt pos:start="333:17" pos:end="333:48"><expr pos:start="333:17" pos:end="333:47"><name pos:start="333:17" pos:end="333:31"><name pos:start="333:17" pos:end="333:18">sd</name><operator pos:start="333:19" pos:end="333:20">-&gt;</operator><name pos:start="333:21" pos:end="333:31">card_status</name></name> <operator pos:start="333:33" pos:end="333:33">=</operator> <name pos:start="333:35" pos:end="333:47">ADDRESS_ERROR</name></expr>;</expr_stmt>
                <return pos:start="334:17" pos:end="334:30">return <expr pos:start="334:24" pos:end="334:29"><name pos:start="334:24" pos:end="334:29">sd_r1b</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="336:13" pos:end="336:45"><expr pos:start="336:13" pos:end="336:44"><name pos:start="336:13" pos:end="336:21"><name pos:start="336:13" pos:end="336:14">sd</name><operator pos:start="336:15" pos:end="336:16">-&gt;</operator><name pos:start="336:17" pos:end="336:21">state</name></name> <operator pos:start="336:23" pos:end="336:23">=</operator> <name pos:start="336:25" pos:end="336:44">sd_programming_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="337:13" pos:end="338:63"><expr pos:start="337:13" pos:end="338:62"><name pos:start="337:13" pos:end="338:58"><name pos:start="337:13" pos:end="337:14">sd</name><operator pos:start="337:15" pos:end="337:16">-&gt;</operator><name pos:start="337:17" pos:end="337:25">wp_groups</name><index pos:start="337:26" pos:end="338:58">[<expr pos:start="337:27" pos:end="338:57"><name pos:start="337:27" pos:end="337:30">addr</name> <operator pos:start="337:32" pos:end="337:33">&gt;&gt;</operator> <operator pos:start="337:35" pos:end="337:35">(</operator><name pos:start="337:36" pos:end="337:48">HWBLOCK_SHIFT</name> <operator pos:start="337:50" pos:end="337:50">+</operator>
                            <name pos:start="338:29" pos:end="338:40">SECTOR_SHIFT</name> <operator pos:start="338:42" pos:end="338:42">+</operator> <name pos:start="338:44" pos:end="338:56">WPGROUP_SHIFT</name><operator pos:start="338:57" pos:end="338:57">)</operator></expr>]</index></name> <operator pos:start="338:60" pos:end="338:60">=</operator> <literal type="number" pos:start="338:62" pos:end="338:62">0</literal></expr>;</expr_stmt>
            <comment type="block" pos:start="339:13" pos:end="339:54">/* Bzzzzzzztt .... Operation complete.  */</comment>
            <expr_stmt pos:start="340:13" pos:end="340:42"><expr pos:start="340:13" pos:end="340:41"><name pos:start="340:13" pos:end="340:21"><name pos:start="340:13" pos:end="340:14">sd</name><operator pos:start="340:15" pos:end="340:16">-&gt;</operator><name pos:start="340:17" pos:end="340:21">state</name></name> <operator pos:start="340:23" pos:end="340:23">=</operator> <name pos:start="340:25" pos:end="340:41">sd_transfer_state</name></expr>;</expr_stmt>
            <return pos:start="341:13" pos:end="341:26">return <expr pos:start="341:20" pos:end="341:25"><name pos:start="341:20" pos:end="341:25">sd_r1b</name></expr>;</return>
        <default pos:start="342:9" pos:end="342:16">default:</default>
            <break pos:start="343:13" pos:end="343:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="345:9" pos:end="345:14">break;</break>
    <case pos:start="346:5" pos:end="346:12">case <expr pos:start="346:10" pos:end="346:11"><literal type="number" pos:start="346:10" pos:end="346:11">30</literal></expr>:</case>	<comment type="block" pos:start="346:17" pos:end="346:45">/* CMD30:  SEND_WRITE_PROT */</comment>
        <switch pos:start="347:9" pos:end="356:9">switch <condition pos:start="347:16" pos:end="347:26">(<expr pos:start="347:17" pos:end="347:25"><name pos:start="347:17" pos:end="347:25"><name pos:start="347:17" pos:end="347:18">sd</name><operator pos:start="347:19" pos:end="347:20">-&gt;</operator><name pos:start="347:21" pos:end="347:25">state</name></name></expr>)</condition> <block pos:start="347:28" pos:end="356:9">{<block_content pos:start="348:9" pos:end="355:18">
        <case pos:start="348:9" pos:end="348:31">case <expr pos:start="348:14" pos:end="348:30"><name pos:start="348:14" pos:end="348:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="349:13" pos:end="349:45"><expr pos:start="349:13" pos:end="349:44"><name pos:start="349:13" pos:end="349:21"><name pos:start="349:13" pos:end="349:14">sd</name><operator pos:start="349:15" pos:end="349:16">-&gt;</operator><name pos:start="349:17" pos:end="349:21">state</name></name> <operator pos:start="349:23" pos:end="349:23">=</operator> <name pos:start="349:25" pos:end="349:44">sd_sendingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="350:13" pos:end="350:60"><expr pos:start="350:13" pos:end="350:59"><operator pos:start="350:13" pos:end="350:13">*</operator><operator pos:start="350:14" pos:end="350:14">(</operator><name pos:start="350:15" pos:end="350:22">uint32_t</name> <operator pos:start="350:24" pos:end="350:24">*</operator><operator pos:start="350:25" pos:end="350:25">)</operator> <name pos:start="350:27" pos:end="350:34"><name pos:start="350:27" pos:end="350:28">sd</name><operator pos:start="350:29" pos:end="350:30">-&gt;</operator><name pos:start="350:31" pos:end="350:34">data</name></name> <operator pos:start="350:36" pos:end="350:36">=</operator> <call pos:start="350:38" pos:end="350:59"><name pos:start="350:38" pos:end="350:46">sd_wpbits</name><argument_list pos:start="350:47" pos:end="350:59">(<argument pos:start="350:48" pos:end="350:49"><expr pos:start="350:48" pos:end="350:49"><name pos:start="350:48" pos:end="350:49">sd</name></expr></argument>, <argument pos:start="350:52" pos:end="350:58"><expr pos:start="350:52" pos:end="350:58"><name pos:start="350:52" pos:end="350:58"><name pos:start="350:52" pos:end="350:54">req</name><operator pos:start="350:55" pos:end="350:55">.</operator><name pos:start="350:56" pos:end="350:58">arg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="351:13" pos:end="351:34"><expr pos:start="351:13" pos:end="351:33"><name pos:start="351:13" pos:end="351:26"><name pos:start="351:13" pos:end="351:14">sd</name><operator pos:start="351:15" pos:end="351:16">-&gt;</operator><name pos:start="351:17" pos:end="351:26">data_start</name></name> <operator pos:start="351:28" pos:end="351:28">=</operator> <name pos:start="351:30" pos:end="351:33">addr</name></expr>;</expr_stmt>
            <expr_stmt pos:start="352:13" pos:end="352:32"><expr pos:start="352:13" pos:end="352:31"><name pos:start="352:13" pos:end="352:27"><name pos:start="352:13" pos:end="352:14">sd</name><operator pos:start="352:15" pos:end="352:16">-&gt;</operator><name pos:start="352:17" pos:end="352:27">data_offset</name></name> <operator pos:start="352:29" pos:end="352:29">=</operator> <literal type="number" pos:start="352:31" pos:end="352:31">0</literal></expr>;</expr_stmt>
            <return pos:start="353:13" pos:end="353:26">return <expr pos:start="353:20" pos:end="353:25"><name pos:start="353:20" pos:end="353:25">sd_r1b</name></expr>;</return>
        <default pos:start="354:9" pos:end="354:16">default:</default>
            <break pos:start="355:13" pos:end="355:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="357:9" pos:end="357:14">break;</break>
    <comment type="block" pos:start="358:5" pos:end="358:34">/* Erase commands (Class 5) */</comment>
    <case pos:start="359:5" pos:end="359:12">case <expr pos:start="359:10" pos:end="359:11"><literal type="number" pos:start="359:10" pos:end="359:11">32</literal></expr>:</case>	<comment type="block" pos:start="359:17" pos:end="359:48">/* CMD32:  ERASE_WR_BLK_START */</comment>
        <switch pos:start="360:9" pos:end="366:9">switch <condition pos:start="360:16" pos:end="360:26">(<expr pos:start="360:17" pos:end="360:25"><name pos:start="360:17" pos:end="360:25"><name pos:start="360:17" pos:end="360:18">sd</name><operator pos:start="360:19" pos:end="360:20">-&gt;</operator><name pos:start="360:21" pos:end="360:25">state</name></name></expr>)</condition> <block pos:start="360:28" pos:end="366:9">{<block_content pos:start="361:9" pos:end="365:18">
        <case pos:start="361:9" pos:end="361:31">case <expr pos:start="361:14" pos:end="361:30"><name pos:start="361:14" pos:end="361:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="362:13" pos:end="362:38"><expr pos:start="362:13" pos:end="362:37"><name pos:start="362:13" pos:end="362:27"><name pos:start="362:13" pos:end="362:14">sd</name><operator pos:start="362:15" pos:end="362:16">-&gt;</operator><name pos:start="362:17" pos:end="362:27">erase_start</name></name> <operator pos:start="362:29" pos:end="362:29">=</operator> <name pos:start="362:31" pos:end="362:37"><name pos:start="362:31" pos:end="362:33">req</name><operator pos:start="362:34" pos:end="362:34">.</operator><name pos:start="362:35" pos:end="362:37">arg</name></name></expr>;</expr_stmt>
            <return pos:start="363:13" pos:end="363:25">return <expr pos:start="363:20" pos:end="363:24"><name pos:start="363:20" pos:end="363:24">sd_r1</name></expr>;</return>
        <default pos:start="364:9" pos:end="364:16">default:</default>
            <break pos:start="365:13" pos:end="365:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="367:9" pos:end="367:14">break;</break>
    <case pos:start="368:5" pos:end="368:12">case <expr pos:start="368:10" pos:end="368:11"><literal type="number" pos:start="368:10" pos:end="368:11">33</literal></expr>:</case>	<comment type="block" pos:start="368:17" pos:end="368:46">/* CMD33:  ERASE_WR_BLK_END */</comment>
        <switch pos:start="369:9" pos:end="375:9">switch <condition pos:start="369:16" pos:end="369:26">(<expr pos:start="369:17" pos:end="369:25"><name pos:start="369:17" pos:end="369:25"><name pos:start="369:17" pos:end="369:18">sd</name><operator pos:start="369:19" pos:end="369:20">-&gt;</operator><name pos:start="369:21" pos:end="369:25">state</name></name></expr>)</condition> <block pos:start="369:28" pos:end="375:9">{<block_content pos:start="370:9" pos:end="374:18">
        <case pos:start="370:9" pos:end="370:31">case <expr pos:start="370:14" pos:end="370:30"><name pos:start="370:14" pos:end="370:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="371:13" pos:end="371:36"><expr pos:start="371:13" pos:end="371:35"><name pos:start="371:13" pos:end="371:25"><name pos:start="371:13" pos:end="371:14">sd</name><operator pos:start="371:15" pos:end="371:16">-&gt;</operator><name pos:start="371:17" pos:end="371:25">erase_end</name></name> <operator pos:start="371:27" pos:end="371:27">=</operator> <name pos:start="371:29" pos:end="371:35"><name pos:start="371:29" pos:end="371:31">req</name><operator pos:start="371:32" pos:end="371:32">.</operator><name pos:start="371:33" pos:end="371:35">arg</name></name></expr>;</expr_stmt>
            <return pos:start="372:13" pos:end="372:25">return <expr pos:start="372:20" pos:end="372:24"><name pos:start="372:20" pos:end="372:24">sd_r1</name></expr>;</return>
        <default pos:start="373:9" pos:end="373:16">default:</default>
            <break pos:start="374:13" pos:end="374:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="376:9" pos:end="376:14">break;</break>
    <case pos:start="377:5" pos:end="377:12">case <expr pos:start="377:10" pos:end="377:11"><literal type="number" pos:start="377:10" pos:end="377:11">38</literal></expr>:</case>	<comment type="block" pos:start="377:17" pos:end="377:35">/* CMD38:  ERASE */</comment>
        <switch pos:start="378:9" pos:end="391:9">switch <condition pos:start="378:16" pos:end="378:26">(<expr pos:start="378:17" pos:end="378:25"><name pos:start="378:17" pos:end="378:25"><name pos:start="378:17" pos:end="378:18">sd</name><operator pos:start="378:19" pos:end="378:20">-&gt;</operator><name pos:start="378:21" pos:end="378:25">state</name></name></expr>)</condition> <block pos:start="378:28" pos:end="391:9">{<block_content pos:start="379:9" pos:end="390:18">
        <case pos:start="379:9" pos:end="379:31">case <expr pos:start="379:14" pos:end="379:30"><name pos:start="379:14" pos:end="379:30">sd_transfer_state</name></expr>:</case>
            <if_stmt pos:start="380:13" pos:end="383:13"><if pos:start="380:13" pos:end="383:13">if <condition pos:start="380:16" pos:end="380:35">(<expr pos:start="380:17" pos:end="380:34"><name pos:start="380:17" pos:end="380:27"><name pos:start="380:17" pos:end="380:18">sd</name><operator pos:start="380:19" pos:end="380:20">-&gt;</operator><name pos:start="380:21" pos:end="380:23">csd</name><index pos:start="380:24" pos:end="380:27">[<expr pos:start="380:25" pos:end="380:26"><literal type="number" pos:start="380:25" pos:end="380:26">14</literal></expr>]</index></name> <operator pos:start="380:29" pos:end="380:29">&amp;</operator> <literal type="number" pos:start="380:31" pos:end="380:34">0x30</literal></expr>)</condition> <block pos:start="380:37" pos:end="383:13">{<block_content pos:start="381:17" pos:end="382:30">
                <expr_stmt pos:start="381:17" pos:end="381:48"><expr pos:start="381:17" pos:end="381:47"><name pos:start="381:17" pos:end="381:31"><name pos:start="381:17" pos:end="381:18">sd</name><operator pos:start="381:19" pos:end="381:20">-&gt;</operator><name pos:start="381:21" pos:end="381:31">card_status</name></name> <operator pos:start="381:33" pos:end="381:34">|=</operator> <name pos:start="381:36" pos:end="381:47">WP_VIOLATION</name></expr>;</expr_stmt>
                <return pos:start="382:17" pos:end="382:30">return <expr pos:start="382:24" pos:end="382:29"><name pos:start="382:24" pos:end="382:29">sd_r1b</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="384:13" pos:end="384:45"><expr pos:start="384:13" pos:end="384:44"><name pos:start="384:13" pos:end="384:21"><name pos:start="384:13" pos:end="384:14">sd</name><operator pos:start="384:15" pos:end="384:16">-&gt;</operator><name pos:start="384:17" pos:end="384:21">state</name></name> <operator pos:start="384:23" pos:end="384:23">=</operator> <name pos:start="384:25" pos:end="384:44">sd_programming_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="385:13" pos:end="385:25"><expr pos:start="385:13" pos:end="385:24"><call pos:start="385:13" pos:end="385:24"><name pos:start="385:13" pos:end="385:20">sd_erase</name><argument_list pos:start="385:21" pos:end="385:24">(<argument pos:start="385:22" pos:end="385:23"><expr pos:start="385:22" pos:end="385:23"><name pos:start="385:22" pos:end="385:23">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="386:13" pos:end="386:54">/* Bzzzzzzztt .... Operation complete.  */</comment>
            <expr_stmt pos:start="387:13" pos:end="387:42"><expr pos:start="387:13" pos:end="387:41"><name pos:start="387:13" pos:end="387:21"><name pos:start="387:13" pos:end="387:14">sd</name><operator pos:start="387:15" pos:end="387:16">-&gt;</operator><name pos:start="387:17" pos:end="387:21">state</name></name> <operator pos:start="387:23" pos:end="387:23">=</operator> <name pos:start="387:25" pos:end="387:41">sd_transfer_state</name></expr>;</expr_stmt>
            <return pos:start="388:13" pos:end="388:26">return <expr pos:start="388:20" pos:end="388:25"><name pos:start="388:20" pos:end="388:25">sd_r1b</name></expr>;</return>
        <default pos:start="389:9" pos:end="389:16">default:</default>
            <break pos:start="390:13" pos:end="390:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="392:9" pos:end="392:14">break;</break>
    <comment type="block" pos:start="393:5" pos:end="393:38">/* Lock card commands (Class 7) */</comment>
    <case pos:start="394:5" pos:end="394:12">case <expr pos:start="394:10" pos:end="394:11"><literal type="number" pos:start="394:10" pos:end="394:11">42</literal></expr>:</case>	<comment type="block" pos:start="394:17" pos:end="394:41">/* CMD42:  LOCK_UNLOCK */</comment>
        <if_stmt pos:start="395:9" pos:end="396:35"><if pos:start="395:9" pos:end="396:35">if <condition pos:start="395:12" pos:end="395:20">(<expr pos:start="395:13" pos:end="395:19"><name pos:start="395:13" pos:end="395:19"><name pos:start="395:13" pos:end="395:14">sd</name><operator pos:start="395:15" pos:end="395:16">-&gt;</operator><name pos:start="395:17" pos:end="395:19">spi</name></name></expr>)</condition><block type="pseudo" pos:start="396:13" pos:end="396:35"><block_content pos:start="396:13" pos:end="396:35">
            <goto pos:start="396:13" pos:end="396:35">goto <name pos:start="396:18" pos:end="396:34">unimplemented_cmd</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="397:9" pos:end="405:9">switch <condition pos:start="397:16" pos:end="397:26">(<expr pos:start="397:17" pos:end="397:25"><name pos:start="397:17" pos:end="397:25"><name pos:start="397:17" pos:end="397:18">sd</name><operator pos:start="397:19" pos:end="397:20">-&gt;</operator><name pos:start="397:21" pos:end="397:25">state</name></name></expr>)</condition> <block pos:start="397:28" pos:end="405:9">{<block_content pos:start="398:9" pos:end="404:18">
        <case pos:start="398:9" pos:end="398:31">case <expr pos:start="398:14" pos:end="398:30"><name pos:start="398:14" pos:end="398:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="399:13" pos:end="399:47"><expr pos:start="399:13" pos:end="399:46"><name pos:start="399:13" pos:end="399:21"><name pos:start="399:13" pos:end="399:14">sd</name><operator pos:start="399:15" pos:end="399:16">-&gt;</operator><name pos:start="399:17" pos:end="399:21">state</name></name> <operator pos:start="399:23" pos:end="399:23">=</operator> <name pos:start="399:25" pos:end="399:46">sd_receivingdata_state</name></expr>;</expr_stmt>
            <expr_stmt pos:start="400:13" pos:end="400:31"><expr pos:start="400:13" pos:end="400:30"><name pos:start="400:13" pos:end="400:26"><name pos:start="400:13" pos:end="400:14">sd</name><operator pos:start="400:15" pos:end="400:16">-&gt;</operator><name pos:start="400:17" pos:end="400:26">data_start</name></name> <operator pos:start="400:28" pos:end="400:28">=</operator> <literal type="number" pos:start="400:30" pos:end="400:30">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="401:13" pos:end="401:32"><expr pos:start="401:13" pos:end="401:31"><name pos:start="401:13" pos:end="401:27"><name pos:start="401:13" pos:end="401:14">sd</name><operator pos:start="401:15" pos:end="401:16">-&gt;</operator><name pos:start="401:17" pos:end="401:27">data_offset</name></name> <operator pos:start="401:29" pos:end="401:29">=</operator> <literal type="number" pos:start="401:31" pos:end="401:31">0</literal></expr>;</expr_stmt>
            <return pos:start="402:13" pos:end="402:25">return <expr pos:start="402:20" pos:end="402:24"><name pos:start="402:20" pos:end="402:24">sd_r1</name></expr>;</return>
        <default pos:start="403:9" pos:end="403:16">default:</default>
            <break pos:start="404:13" pos:end="404:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="406:9" pos:end="406:14">break;</break>
    <comment type="block" pos:start="407:5" pos:end="407:49">/* Application specific commands (Class 8) */</comment>
    <case pos:start="408:5" pos:end="408:12">case <expr pos:start="408:10" pos:end="408:11"><literal type="number" pos:start="408:10" pos:end="408:11">55</literal></expr>:</case>	<comment type="block" pos:start="408:17" pos:end="408:37">/* CMD55:  APP_CMD */</comment>
        <if_stmt pos:start="409:9" pos:end="410:35"><if pos:start="409:9" pos:end="410:35">if <condition pos:start="409:12" pos:end="409:27">(<expr pos:start="409:13" pos:end="409:26"><name pos:start="409:13" pos:end="409:19"><name pos:start="409:13" pos:end="409:14">sd</name><operator pos:start="409:15" pos:end="409:16">-&gt;</operator><name pos:start="409:17" pos:end="409:19">rca</name></name> <operator pos:start="409:21" pos:end="409:22">!=</operator> <name pos:start="409:24" pos:end="409:26">rca</name></expr>)</condition><block type="pseudo" pos:start="410:9" pos:end="410:35"><block_content pos:start="410:9" pos:end="410:35">
        <expr_stmt pos:start="410:9" pos:end="410:35"><expr pos:start="410:9" pos:end="410:34"><name pos:start="410:9" pos:end="410:23"><name pos:start="410:9" pos:end="410:10">sd</name><operator pos:start="410:11" pos:end="410:12">-&gt;</operator><name pos:start="410:13" pos:end="410:23">card_status</name></name> <operator pos:start="410:25" pos:end="410:26">|=</operator> <name pos:start="410:28" pos:end="410:34">APP_CMD</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <return pos:start="411:9" pos:end="411:21">return <expr pos:start="411:16" pos:end="411:20"><name pos:start="411:16" pos:end="411:20">sd_r1</name></expr>;</return>
    <case pos:start="412:5" pos:end="412:12">case <expr pos:start="412:10" pos:end="412:11"><literal type="number" pos:start="412:10" pos:end="412:11">56</literal></expr>:</case>	<comment type="block" pos:start="412:17" pos:end="412:37">/* CMD56:  GEN_CMD */</comment>
        <expr_stmt pos:start="413:9" pos:end="413:57"><expr pos:start="413:9" pos:end="413:56"><call pos:start="413:9" pos:end="413:56"><name pos:start="413:9" pos:end="413:15">fprintf</name><argument_list pos:start="413:16" pos:end="413:56">(<argument pos:start="413:17" pos:end="413:22"><expr pos:start="413:17" pos:end="413:22"><name pos:start="413:17" pos:end="413:22">stderr</name></expr></argument>, <argument pos:start="413:25" pos:end="413:46"><expr pos:start="413:25" pos:end="413:46"><literal type="string" pos:start="413:25" pos:end="413:46">"SD: GEN_CMD 0x%08x\n"</literal></expr></argument>, <argument pos:start="413:49" pos:end="413:55"><expr pos:start="413:49" pos:end="413:55"><name pos:start="413:49" pos:end="413:55"><name pos:start="413:49" pos:end="413:51">req</name><operator pos:start="413:52" pos:end="413:52">.</operator><name pos:start="413:53" pos:end="413:55">arg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <switch pos:start="414:9" pos:end="424:9">switch <condition pos:start="414:16" pos:end="414:26">(<expr pos:start="414:17" pos:end="414:25"><name pos:start="414:17" pos:end="414:25"><name pos:start="414:17" pos:end="414:18">sd</name><operator pos:start="414:19" pos:end="414:20">-&gt;</operator><name pos:start="414:21" pos:end="414:25">state</name></name></expr>)</condition> <block pos:start="414:28" pos:end="424:9">{<block_content pos:start="415:9" pos:end="423:18">
        <case pos:start="415:9" pos:end="415:31">case <expr pos:start="415:14" pos:end="415:30"><name pos:start="415:14" pos:end="415:30">sd_transfer_state</name></expr>:</case>
            <expr_stmt pos:start="416:13" pos:end="416:32"><expr pos:start="416:13" pos:end="416:31"><name pos:start="416:13" pos:end="416:27"><name pos:start="416:13" pos:end="416:14">sd</name><operator pos:start="416:15" pos:end="416:16">-&gt;</operator><name pos:start="416:17" pos:end="416:27">data_offset</name></name> <operator pos:start="416:29" pos:end="416:29">=</operator> <literal type="number" pos:start="416:31" pos:end="416:31">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="417:13" pos:end="420:51"><if pos:start="417:13" pos:end="418:49">if <condition pos:start="417:16" pos:end="417:28">(<expr pos:start="417:17" pos:end="417:27"><name pos:start="417:17" pos:end="417:23"><name pos:start="417:17" pos:end="417:19">req</name><operator pos:start="417:20" pos:end="417:20">.</operator><name pos:start="417:21" pos:end="417:23">arg</name></name> <operator pos:start="417:25" pos:end="417:25">&amp;</operator> <literal type="number" pos:start="417:27" pos:end="417:27">1</literal></expr>)</condition><block type="pseudo" pos:start="418:17" pos:end="418:49"><block_content pos:start="418:17" pos:end="418:49">
                <expr_stmt pos:start="418:17" pos:end="418:49"><expr pos:start="418:17" pos:end="418:48"><name pos:start="418:17" pos:end="418:25"><name pos:start="418:17" pos:end="418:18">sd</name><operator pos:start="418:19" pos:end="418:20">-&gt;</operator><name pos:start="418:21" pos:end="418:25">state</name></name> <operator pos:start="418:27" pos:end="418:27">=</operator> <name pos:start="418:29" pos:end="418:48">sd_sendingdata_state</name></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="419:13" pos:end="420:51">else<block type="pseudo" pos:start="420:17" pos:end="420:51"><block_content pos:start="420:17" pos:end="420:51">
                <expr_stmt pos:start="420:17" pos:end="420:51"><expr pos:start="420:17" pos:end="420:50"><name pos:start="420:17" pos:end="420:25"><name pos:start="420:17" pos:end="420:18">sd</name><operator pos:start="420:19" pos:end="420:20">-&gt;</operator><name pos:start="420:21" pos:end="420:25">state</name></name> <operator pos:start="420:27" pos:end="420:27">=</operator> <name pos:start="420:29" pos:end="420:50">sd_receivingdata_state</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <return pos:start="421:13" pos:end="421:25">return <expr pos:start="421:20" pos:end="421:24"><name pos:start="421:20" pos:end="421:24">sd_r1</name></expr>;</return>
        <default pos:start="422:9" pos:end="422:16">default:</default>
            <break pos:start="423:13" pos:end="423:18">break;</break>
        </block_content>}</block></switch>
        <break pos:start="425:9" pos:end="425:14">break;</break>
    <default pos:start="426:5" pos:end="426:12">default:</default>
    <label pos:start="427:5" pos:end="427:12"><name pos:start="427:5" pos:end="427:11">bad_cmd</name>:</label>
        <expr_stmt pos:start="428:9" pos:end="428:56"><expr pos:start="428:9" pos:end="428:55"><call pos:start="428:9" pos:end="428:55"><name pos:start="428:9" pos:end="428:15">fprintf</name><argument_list pos:start="428:16" pos:end="428:55">(<argument pos:start="428:17" pos:end="428:22"><expr pos:start="428:17" pos:end="428:22"><name pos:start="428:17" pos:end="428:22">stderr</name></expr></argument>, <argument pos:start="428:25" pos:end="428:45"><expr pos:start="428:25" pos:end="428:45"><literal type="string" pos:start="428:25" pos:end="428:45">"SD: Unknown CMD%i\n"</literal></expr></argument>, <argument pos:start="428:48" pos:end="428:54"><expr pos:start="428:48" pos:end="428:54"><name pos:start="428:48" pos:end="428:54"><name pos:start="428:48" pos:end="428:50">req</name><operator pos:start="428:51" pos:end="428:51">.</operator><name pos:start="428:52" pos:end="428:54">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <label pos:start="429:5" pos:end="429:22"><name pos:start="429:5" pos:end="429:21">unimplemented_cmd</name>:</label>
        <comment type="block" pos:start="430:9" pos:end="430:80">/* Commands that are recognised but not yet implemented in SPI mode.  */</comment>
        <expr_stmt pos:start="431:9" pos:end="431:76"><expr pos:start="431:9" pos:end="431:75"><call pos:start="431:9" pos:end="431:75"><name pos:start="431:9" pos:end="431:15">fprintf</name><argument_list pos:start="431:16" pos:end="431:75">(<argument pos:start="431:17" pos:end="431:22"><expr pos:start="431:17" pos:end="431:22"><name pos:start="431:17" pos:end="431:22">stderr</name></expr></argument>, <argument pos:start="431:25" pos:end="431:65"><expr pos:start="431:25" pos:end="431:65"><literal type="string" pos:start="431:25" pos:end="431:65">"SD: CMD%i not implemented in SPI mode\n"</literal></expr></argument>, <argument pos:start="431:68" pos:end="431:74"><expr pos:start="431:68" pos:end="431:74"><name pos:start="431:68" pos:end="431:74"><name pos:start="431:68" pos:end="431:70">req</name><operator pos:start="431:71" pos:end="431:71">.</operator><name pos:start="431:72" pos:end="431:74">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></switch>
    <expr_stmt pos:start="433:5" pos:end="433:61"><expr pos:start="433:5" pos:end="433:60"><call pos:start="433:5" pos:end="433:60"><name pos:start="433:5" pos:end="433:11">fprintf</name><argument_list pos:start="433:12" pos:end="433:60">(<argument pos:start="433:13" pos:end="433:18"><expr pos:start="433:13" pos:end="433:18"><name pos:start="433:13" pos:end="433:18">stderr</name></expr></argument>, <argument pos:start="433:21" pos:end="433:50"><expr pos:start="433:21" pos:end="433:50"><literal type="string" pos:start="433:21" pos:end="433:50">"SD: CMD%i in a wrong state\n"</literal></expr></argument>, <argument pos:start="433:53" pos:end="433:59"><expr pos:start="433:53" pos:end="433:59"><name pos:start="433:53" pos:end="433:59"><name pos:start="433:53" pos:end="433:55">req</name><operator pos:start="433:56" pos:end="433:56">.</operator><name pos:start="433:57" pos:end="433:59">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
