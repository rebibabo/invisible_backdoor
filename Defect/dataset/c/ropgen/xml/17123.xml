<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17123.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">QEMUSizedBuffer</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:26">qsb_clone</name><parameter_list pos:start="1:27" pos:end="1:54">(<parameter pos:start="1:28" pos:end="1:53"><decl pos:start="1:28" pos:end="1:53"><type pos:start="1:28" pos:end="1:50"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:48">QEMUSizedBuffer</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">qsb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:15">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">QEMUSizedBuffer</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">out</name> <init pos:start="5:26" pos:end="5:64">= <expr pos:start="5:28" pos:end="5:64"><call pos:start="5:28" pos:end="5:64"><name pos:start="5:28" pos:end="5:37">qsb_create</name><argument_list pos:start="5:38" pos:end="5:64">(<argument pos:start="5:39" pos:end="5:42"><expr pos:start="5:39" pos:end="5:42"><name pos:start="5:39" pos:end="5:42">NULL</name></expr></argument>, <argument pos:start="5:45" pos:end="5:63"><expr pos:start="5:45" pos:end="5:63"><call pos:start="5:45" pos:end="5:63"><name pos:start="5:45" pos:end="5:58">qsb_get_length</name><argument_list pos:start="5:59" pos:end="5:63">(<argument pos:start="5:60" pos:end="5:62"><expr pos:start="5:60" pos:end="5:62"><name pos:start="5:60" pos:end="5:62">qsb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:12">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:15">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">off_t</name></type> <name pos:start="11:11" pos:end="11:13">pos</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">out</name></expr>)</condition> <block pos:start="15:15" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="23:5" pos:end="39:5">for <control pos:start="23:9" pos:end="23:36">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:31"><expr pos:start="23:17" pos:end="23:30"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:30"><name pos:start="23:21" pos:end="23:23">qsb</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:30">n_iov</name></name></expr>;</condition> <incr pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:33">i</name><operator pos:start="23:34" pos:end="23:35">++</operator></expr></incr>)</control> <block pos:start="23:38" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:19">

        <expr_stmt pos:start="25:9" pos:end="27:54"><expr pos:start="25:9" pos:end="27:53"><name pos:start="25:9" pos:end="25:11">res</name> <operator pos:start="25:13" pos:end="25:13">=</operator>  <call pos:start="25:16" pos:end="27:53"><name pos:start="25:16" pos:end="25:27">qsb_write_at</name><argument_list pos:start="25:28" pos:end="27:53">(<argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">out</name></expr></argument>, <argument pos:start="25:34" pos:end="25:53"><expr pos:start="25:34" pos:end="25:53"><name pos:start="25:34" pos:end="25:44"><name pos:start="25:34" pos:end="25:36">qsb</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:41">iov</name><index pos:start="25:42" pos:end="25:44">[<expr pos:start="25:43" pos:end="25:43"><name pos:start="25:43" pos:end="25:43">i</name></expr>]</index></name><operator pos:start="25:45" pos:end="25:45">.</operator><name pos:start="25:46" pos:end="25:53">iov_base</name></expr></argument>,

                            <argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">pos</name></expr></argument>, <argument pos:start="27:34" pos:end="27:52"><expr pos:start="27:34" pos:end="27:52"><name pos:start="27:34" pos:end="27:44"><name pos:start="27:34" pos:end="27:36">qsb</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:41">iov</name><index pos:start="27:42" pos:end="27:44">[<expr pos:start="27:43" pos:end="27:43"><name pos:start="27:43" pos:end="27:43">i</name></expr>]</index></name><operator pos:start="27:45" pos:end="27:45">.</operator><name pos:start="27:46" pos:end="27:52">iov_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">res</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition> <block pos:start="29:22" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:24">

            <expr_stmt pos:start="31:13" pos:end="31:26"><expr pos:start="31:13" pos:end="31:25"><call pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:20">qsb_free</name><argument_list pos:start="31:21" pos:end="31:25">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:24">return <expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:11">pos</name> <operator pos:start="37:13" pos:end="37:14">+=</operator> <name pos:start="37:16" pos:end="37:18">res</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="43:5" pos:end="43:15">return <expr pos:start="43:12" pos:end="43:14"><name pos:start="43:12" pos:end="43:14">out</name></expr>;</return>

</block_content>}</block></function>
</unit>
