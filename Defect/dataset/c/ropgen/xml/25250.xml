<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25250.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">wc3_read_packet</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:35">AVPacket</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="189:1">{<block_content pos:start="7:5" pos:end="187:15">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">Wc3DemuxContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">wc3</name> <init pos:start="7:26" pos:end="7:39">= <expr pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">fourcc_tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">packet_read</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name></type> <name pos:start="19:19" pos:end="19:28"><name pos:start="19:19" pos:end="19:22">text</name><index pos:start="19:23" pos:end="19:28">[<expr pos:start="19:24" pos:end="19:27"><literal type="number" pos:start="19:24" pos:end="19:27">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:32"><decl pos:start="21:5" pos:end="21:31"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:31">palette_number</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:19"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:17">char</name></type> <name pos:start="25:19" pos:end="25:19">r</name></decl>, <decl pos:start="25:22" pos:end="25:22"><type ref="prev" pos:start="25:5" pos:end="25:17"/><name pos:start="25:22" pos:end="25:22">g</name></decl>, <decl pos:start="25:25" pos:end="25:25"><type ref="prev" pos:start="25:5" pos:end="25:17"/><name pos:start="25:25" pos:end="25:25">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:27"><decl pos:start="27:5" pos:end="27:26"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:26">base_palette_index</name></decl>;</decl_stmt>



    <while pos:start="31:5" pos:end="183:5">while <condition pos:start="31:11" pos:end="31:24">(<expr pos:start="31:12" pos:end="31:23"><operator pos:start="31:12" pos:end="31:12">!</operator><name pos:start="31:13" pos:end="31:23">packet_read</name></expr>)</condition> <block pos:start="31:26" pos:end="183:5">{<block_content pos:start="35:9" pos:end="181:9">



        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:18">fourcc_tag</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:33"><name pos:start="35:22" pos:end="35:29">get_le32</name><argument_list pos:start="35:30" pos:end="35:33">(<argument pos:start="35:31" pos:end="35:32"><expr pos:start="35:31" pos:end="35:32"><name pos:start="35:31" pos:end="35:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:44">/* chunk sizes are 16-bit aligned */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:12">size</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <operator pos:start="39:16" pos:end="39:16">(</operator><call pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:24">get_be32</name><argument_list pos:start="39:25" pos:end="39:28">(<argument pos:start="39:26" pos:end="39:27"><expr pos:start="39:26" pos:end="39:27"><name pos:start="39:26" pos:end="39:27">pb</name></expr></argument>)</argument_list></call> <operator pos:start="39:30" pos:end="39:30">+</operator> <literal type="number" pos:start="39:32" pos:end="39:32">1</literal><operator pos:start="39:33" pos:end="39:33">)</operator> <operator pos:start="39:35" pos:end="39:35">&amp;</operator> <operator pos:start="39:37" pos:end="39:37">(</operator><operator pos:start="39:38" pos:end="39:38">~</operator><literal type="number" pos:start="39:39" pos:end="39:39">1</literal><operator pos:start="39:40" pos:end="39:40">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:32"><if pos:start="41:9" pos:end="43:32">if <condition pos:start="41:12" pos:end="41:25">(<expr pos:start="41:13" pos:end="41:24"><call pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:20">url_feof</name><argument_list pos:start="41:21" pos:end="41:24">(<argument pos:start="41:22" pos:end="41:23"><expr pos:start="41:22" pos:end="41:23"><name pos:start="41:22" pos:end="41:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:32"><block_content pos:start="43:13" pos:end="43:32">

            <return pos:start="43:13" pos:end="43:32">return <expr pos:start="43:20" pos:end="43:31"><call pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:26">AVERROR</name><argument_list pos:start="43:27" pos:end="43:31">(<argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <switch pos:start="47:9" pos:end="181:9">switch <condition pos:start="47:16" pos:end="47:27">(<expr pos:start="47:17" pos:end="47:26"><name pos:start="47:17" pos:end="47:26">fourcc_tag</name></expr>)</condition> <block pos:start="47:29" pos:end="181:9">{<block_content pos:start="51:9" pos:end="179:18">



        <case pos:start="51:9" pos:end="51:22">case <expr pos:start="51:14" pos:end="51:21"><name pos:start="51:14" pos:end="51:21">BRCH_TAG</name></expr>:</case>

            <comment type="block" pos:start="53:13" pos:end="53:23">/* no-op */</comment>

            <break pos:start="55:13" pos:end="55:18">break;</break>



        <case pos:start="59:9" pos:end="59:22">case <expr pos:start="59:14" pos:end="59:21"><name pos:start="59:14" pos:end="59:21">SHOT_TAG</name></expr>:</case>

            <comment type="block" pos:start="61:13" pos:end="61:37">/* load up new palette */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:42"><expr pos:start="63:13" pos:end="63:41"><name pos:start="63:13" pos:end="63:26">palette_number</name> <operator pos:start="63:28" pos:end="63:28">=</operator> <call pos:start="63:30" pos:end="63:41"><name pos:start="63:30" pos:end="63:37">get_le32</name><argument_list pos:start="63:38" pos:end="63:41">(<argument pos:start="63:39" pos:end="63:40"><expr pos:start="63:39" pos:end="63:40"><name pos:start="63:39" pos:end="63:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="67:43"><if pos:start="65:13" pos:end="67:43">if <condition pos:start="65:16" pos:end="65:53">(<expr pos:start="65:17" pos:end="65:52"><name pos:start="65:17" pos:end="65:30">palette_number</name> <operator pos:start="65:32" pos:end="65:33">&gt;=</operator> <name pos:start="65:35" pos:end="65:52"><name pos:start="65:35" pos:end="65:37">wc3</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:52">palette_count</name></name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:43"><block_content pos:start="67:17" pos:end="67:43">

                <return pos:start="67:17" pos:end="67:43">return <expr pos:start="67:24" pos:end="67:42"><name pos:start="67:24" pos:end="67:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:68"><expr pos:start="69:13" pos:end="69:67"><name pos:start="69:13" pos:end="69:30">base_palette_index</name> <operator pos:start="69:32" pos:end="69:32">=</operator> <name pos:start="69:34" pos:end="69:47">palette_number</name> <operator pos:start="69:49" pos:end="69:49">*</operator> <name pos:start="69:51" pos:end="69:63">PALETTE_COUNT</name> <operator pos:start="69:65" pos:end="69:65">*</operator> <literal type="number" pos:start="69:67" pos:end="69:67">3</literal></expr>;</expr_stmt>

            <for pos:start="71:13" pos:end="81:13">for <control pos:start="71:17" pos:end="71:47">(<init pos:start="71:18" pos:end="71:23"><expr pos:start="71:18" pos:end="71:22"><name pos:start="71:18" pos:end="71:18">i</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</init> <condition pos:start="71:25" pos:end="71:42"><expr pos:start="71:25" pos:end="71:41"><name pos:start="71:25" pos:end="71:25">i</name> <operator pos:start="71:27" pos:end="71:27">&lt;</operator> <name pos:start="71:29" pos:end="71:41">PALETTE_COUNT</name></expr>;</condition> <incr pos:start="71:44" pos:end="71:46"><expr pos:start="71:44" pos:end="71:46"><name pos:start="71:44" pos:end="71:44">i</name><operator pos:start="71:45" pos:end="71:46">++</operator></expr></incr>)</control> <block pos:start="71:49" pos:end="81:13">{<block_content pos:start="73:17" pos:end="79:77">

                <expr_stmt pos:start="73:17" pos:end="73:66"><expr pos:start="73:17" pos:end="73:65"><name pos:start="73:17" pos:end="73:17">r</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:65"><name pos:start="73:21" pos:end="73:23">wc3</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:33">palettes</name><index pos:start="73:34" pos:end="73:65">[<expr pos:start="73:35" pos:end="73:64"><name pos:start="73:35" pos:end="73:52">base_palette_index</name> <operator pos:start="73:54" pos:end="73:54">+</operator> <name pos:start="73:56" pos:end="73:56">i</name> <operator pos:start="73:58" pos:end="73:58">*</operator> <literal type="number" pos:start="73:60" pos:end="73:62">3</literal> <operator pos:start="73:62" pos:end="73:62">+</operator> <literal type="number" pos:start="73:64" pos:end="73:64">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:66"><expr pos:start="75:17" pos:end="75:65"><name pos:start="75:17" pos:end="75:17">g</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:65"><name pos:start="75:21" pos:end="75:23">wc3</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:33">palettes</name><index pos:start="75:34" pos:end="75:65">[<expr pos:start="75:35" pos:end="75:64"><name pos:start="75:35" pos:end="75:52">base_palette_index</name> <operator pos:start="75:54" pos:end="75:54">+</operator> <name pos:start="75:56" pos:end="75:56">i</name> <operator pos:start="75:58" pos:end="75:58">*</operator> <literal type="number" pos:start="75:60" pos:end="75:62">3</literal> <operator pos:start="75:62" pos:end="75:62">+</operator> <literal type="number" pos:start="75:64" pos:end="75:64">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:66"><expr pos:start="77:17" pos:end="77:65"><name pos:start="77:17" pos:end="77:17">b</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <name pos:start="77:21" pos:end="77:65"><name pos:start="77:21" pos:end="77:23">wc3</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:33">palettes</name><index pos:start="77:34" pos:end="77:65">[<expr pos:start="77:35" pos:end="77:64"><name pos:start="77:35" pos:end="77:52">base_palette_index</name> <operator pos:start="77:54" pos:end="77:54">+</operator> <name pos:start="77:56" pos:end="77:56">i</name> <operator pos:start="77:58" pos:end="77:58">*</operator> <literal type="number" pos:start="77:60" pos:end="77:62">3</literal> <operator pos:start="77:62" pos:end="77:62">+</operator> <literal type="number" pos:start="77:64" pos:end="77:64">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:77"><expr pos:start="79:17" pos:end="79:76"><name pos:start="79:17" pos:end="79:47"><name pos:start="79:17" pos:end="79:19">wc3</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:36">palette_control</name><operator pos:start="79:37" pos:end="79:37">.</operator><name pos:start="79:38" pos:end="79:44">palette</name><index pos:start="79:45" pos:end="79:47">[<expr pos:start="79:46" pos:end="79:46"><name pos:start="79:46" pos:end="79:46">i</name></expr>]</index></name> <operator pos:start="79:49" pos:end="79:49">=</operator> <operator pos:start="79:51" pos:end="79:51">(</operator><name pos:start="79:52" pos:end="79:52">r</name> <operator pos:start="79:54" pos:end="79:55">&lt;&lt;</operator> <literal type="number" pos:start="79:57" pos:end="79:58">16</literal><operator pos:start="79:59" pos:end="79:59">)</operator> <operator pos:start="79:61" pos:end="79:61">|</operator> <operator pos:start="79:63" pos:end="79:63">(</operator><name pos:start="79:64" pos:end="79:64">g</name> <operator pos:start="79:66" pos:end="79:67">&lt;&lt;</operator> <literal type="number" pos:start="79:69" pos:end="79:69">8</literal><operator pos:start="79:70" pos:end="79:70">)</operator> <operator pos:start="79:72" pos:end="79:72">|</operator> <operator pos:start="79:74" pos:end="79:74">(</operator><name pos:start="79:75" pos:end="79:75">b</name><operator pos:start="79:76" pos:end="79:76">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="83:13" pos:end="83:53"><expr pos:start="83:13" pos:end="83:52"><name pos:start="83:13" pos:end="83:48"><name pos:start="83:13" pos:end="83:15">wc3</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:32">palette_control</name><operator pos:start="83:33" pos:end="83:33">.</operator><name pos:start="83:34" pos:end="83:48">palette_changed</name></name> <operator pos:start="83:50" pos:end="83:50">=</operator> <literal type="number" pos:start="83:52" pos:end="83:52">1</literal></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>



        <case pos:start="89:9" pos:end="89:22">case <expr pos:start="89:14" pos:end="89:21"><name pos:start="89:14" pos:end="89:21">VGA__TAG</name></expr>:</case>

            <comment type="block" pos:start="91:13" pos:end="91:38">/* send out video chunk */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:46"><expr pos:start="93:13" pos:end="93:45"><name pos:start="93:13" pos:end="93:15">ret</name><operator pos:start="93:16" pos:end="93:16">=</operator> <call pos:start="93:18" pos:end="93:45"><name pos:start="93:18" pos:end="93:30">av_get_packet</name><argument_list pos:start="93:31" pos:end="93:45">(<argument pos:start="93:32" pos:end="93:33"><expr pos:start="93:32" pos:end="93:33"><name pos:start="93:32" pos:end="93:33">pb</name></expr></argument>, <argument pos:start="93:36" pos:end="93:38"><expr pos:start="93:36" pos:end="93:38"><name pos:start="93:36" pos:end="93:38">pkt</name></expr></argument>, <argument pos:start="93:41" pos:end="93:44"><expr pos:start="93:41" pos:end="93:44"><name pos:start="93:41" pos:end="93:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:56"><expr pos:start="95:13" pos:end="95:55"><name pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:15">pkt</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:29">stream_index</name></name> <operator pos:start="95:31" pos:end="95:31">=</operator> <name pos:start="95:33" pos:end="95:55"><name pos:start="95:33" pos:end="95:35">wc3</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:55">video_stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:32"><expr pos:start="97:13" pos:end="97:31"><name pos:start="97:13" pos:end="97:20"><name pos:start="97:13" pos:end="97:15">pkt</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:20">pts</name></name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:31"><name pos:start="97:24" pos:end="97:26">wc3</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:31">pts</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:28"><expr pos:start="99:13" pos:end="99:27"><name pos:start="99:13" pos:end="99:23">packet_read</name> <operator pos:start="99:25" pos:end="99:25">=</operator> <literal type="number" pos:start="99:27" pos:end="99:27">1</literal></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>



        <case pos:start="105:9" pos:end="114:0">case <expr pos:start="105:14" pos:end="105:21"><name pos:start="105:14" pos:end="105:21">TEXT_TAG</name></expr>:</case>

            <comment type="block" pos:start="107:13" pos:end="107:32">/* subtitle chunk */</comment>

<cpp:if pos:start="109:1" pos:end="109:5">#<cpp:directive pos:start="109:2" pos:end="109:3">if</cpp:directive> <expr pos:start="109:5" pos:end="109:5"><literal type="number" pos:start="109:5" pos:end="109:5">0</literal></expr></cpp:if>

            url_fseek(pb, size, SEEK_CUR);

<cpp:else pos:start="113:1" pos:end="113:5">#<cpp:directive pos:start="113:2" pos:end="113:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="115:13" pos:end="138:0"><if pos:start="115:13" pos:end="117:35">if <condition pos:start="115:16" pos:end="115:92">(<expr pos:start="115:17" pos:end="115:91"><operator pos:start="115:17" pos:end="115:17">(</operator><name pos:start="115:18" pos:end="115:25">unsigned</name><operator pos:start="115:26" pos:end="115:26">)</operator><name pos:start="115:27" pos:end="115:30">size</name> <operator pos:start="115:32" pos:end="115:32">&gt;</operator> <sizeof pos:start="115:34" pos:end="115:45">sizeof<argument_list pos:start="115:40" pos:end="115:45">(<argument pos:start="115:41" pos:end="115:44"><expr pos:start="115:41" pos:end="115:44"><name pos:start="115:41" pos:end="115:44">text</name></expr></argument>)</argument_list></sizeof> <operator pos:start="115:47" pos:end="115:48">||</operator> <operator pos:start="115:50" pos:end="115:50">(</operator><name pos:start="115:51" pos:end="115:53">ret</name> <operator pos:start="115:55" pos:end="115:55">=</operator> <call pos:start="115:57" pos:end="115:82"><name pos:start="115:57" pos:end="115:66">get_buffer</name><argument_list pos:start="115:67" pos:end="115:82">(<argument pos:start="115:68" pos:end="115:69"><expr pos:start="115:68" pos:end="115:69"><name pos:start="115:68" pos:end="115:69">pb</name></expr></argument>, <argument pos:start="115:72" pos:end="115:75"><expr pos:start="115:72" pos:end="115:75"><name pos:start="115:72" pos:end="115:75">text</name></expr></argument>, <argument pos:start="115:78" pos:end="115:81"><expr pos:start="115:78" pos:end="115:81"><name pos:start="115:78" pos:end="115:81">size</name></expr></argument>)</argument_list></call><operator pos:start="115:83" pos:end="115:83">)</operator> <operator pos:start="115:85" pos:end="115:86">!=</operator> <name pos:start="115:88" pos:end="115:91">size</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:35"><block_content pos:start="117:17" pos:end="117:35">

                <expr_stmt pos:start="117:17" pos:end="117:35"><expr pos:start="117:17" pos:end="117:34"><name pos:start="117:17" pos:end="117:19">ret</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <call pos:start="117:23" pos:end="117:34"><name pos:start="117:23" pos:end="117:29">AVERROR</name><argument_list pos:start="117:30" pos:end="117:34">(<argument pos:start="117:31" pos:end="117:33"><expr pos:start="117:31" pos:end="117:33"><name pos:start="117:31" pos:end="117:33">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="119:13" pos:end="138:0">else <block pos:start="119:18" pos:end="138:0">{<block_content pos:start="121:17" pos:end="133:74">

                <decl_stmt pos:start="121:17" pos:end="121:26"><decl pos:start="121:17" pos:end="121:25"><type pos:start="121:17" pos:end="121:19"><name pos:start="121:17" pos:end="121:19">int</name></type> <name pos:start="121:21" pos:end="121:21">i</name> <init pos:start="121:23" pos:end="121:25">= <expr pos:start="121:25" pos:end="121:25"><literal type="number" pos:start="121:25" pos:end="121:25">0</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:61"><expr pos:start="123:17" pos:end="123:60"><call pos:start="123:17" pos:end="123:60"><name pos:start="123:17" pos:end="123:22">av_log</name> <argument_list pos:start="123:24" pos:end="123:60">(<argument pos:start="123:25" pos:end="123:25"><expr pos:start="123:25" pos:end="123:25"><name pos:start="123:25" pos:end="123:25">s</name></expr></argument>, <argument pos:start="123:28" pos:end="123:39"><expr pos:start="123:28" pos:end="123:39"><name pos:start="123:28" pos:end="123:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="123:42" pos:end="123:59"><expr pos:start="123:42" pos:end="123:59"><literal type="string" pos:start="123:42" pos:end="123:59">"Subtitle time!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:74"><expr pos:start="125:17" pos:end="125:73"><call pos:start="125:17" pos:end="125:73"><name pos:start="125:17" pos:end="125:22">av_log</name> <argument_list pos:start="125:24" pos:end="125:73">(<argument pos:start="125:25" pos:end="125:25"><expr pos:start="125:25" pos:end="125:25"><name pos:start="125:25" pos:end="125:25">s</name></expr></argument>, <argument pos:start="125:28" pos:end="125:39"><expr pos:start="125:28" pos:end="125:39"><name pos:start="125:28" pos:end="125:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="125:42" pos:end="125:58"><expr pos:start="125:42" pos:end="125:58"><literal type="string" pos:start="125:42" pos:end="125:58">"  inglish: %s\n"</literal></expr></argument>, <argument pos:start="125:61" pos:end="125:72"><expr pos:start="125:61" pos:end="125:72"><operator pos:start="125:61" pos:end="125:61">&amp;</operator><name pos:start="125:62" pos:end="125:72"><name pos:start="125:62" pos:end="125:65">text</name><index pos:start="125:66" pos:end="125:72">[<expr pos:start="125:67" pos:end="125:71"><name pos:start="125:67" pos:end="125:67">i</name> <operator pos:start="125:69" pos:end="125:69">+</operator> <literal type="number" pos:start="125:71" pos:end="125:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:33"><expr pos:start="127:17" pos:end="127:32"><name pos:start="127:17" pos:end="127:17">i</name> <operator pos:start="127:19" pos:end="127:20">+=</operator> <name pos:start="127:22" pos:end="127:28"><name pos:start="127:22" pos:end="127:25">text</name><index pos:start="127:26" pos:end="127:28">[<expr pos:start="127:27" pos:end="127:27"><name pos:start="127:27" pos:end="127:27">i</name></expr>]</index></name> <operator pos:start="127:30" pos:end="127:30">+</operator> <literal type="number" pos:start="127:32" pos:end="127:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:74"><expr pos:start="129:17" pos:end="129:73"><call pos:start="129:17" pos:end="129:73"><name pos:start="129:17" pos:end="129:22">av_log</name> <argument_list pos:start="129:24" pos:end="129:73">(<argument pos:start="129:25" pos:end="129:25"><expr pos:start="129:25" pos:end="129:25"><name pos:start="129:25" pos:end="129:25">s</name></expr></argument>, <argument pos:start="129:28" pos:end="129:39"><expr pos:start="129:28" pos:end="129:39"><name pos:start="129:28" pos:end="129:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="129:42" pos:end="129:58"><expr pos:start="129:42" pos:end="129:58"><literal type="string" pos:start="129:42" pos:end="129:58">"  doytsch: %s\n"</literal></expr></argument>, <argument pos:start="129:61" pos:end="129:72"><expr pos:start="129:61" pos:end="129:72"><operator pos:start="129:61" pos:end="129:61">&amp;</operator><name pos:start="129:62" pos:end="129:72"><name pos:start="129:62" pos:end="129:65">text</name><index pos:start="129:66" pos:end="129:72">[<expr pos:start="129:67" pos:end="129:71"><name pos:start="129:67" pos:end="129:67">i</name> <operator pos:start="129:69" pos:end="129:69">+</operator> <literal type="number" pos:start="129:71" pos:end="129:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:33"><expr pos:start="131:17" pos:end="131:32"><name pos:start="131:17" pos:end="131:17">i</name> <operator pos:start="131:19" pos:end="131:20">+=</operator> <name pos:start="131:22" pos:end="131:28"><name pos:start="131:22" pos:end="131:25">text</name><index pos:start="131:26" pos:end="131:28">[<expr pos:start="131:27" pos:end="131:27"><name pos:start="131:27" pos:end="131:27">i</name></expr>]</index></name> <operator pos:start="131:30" pos:end="131:30">+</operator> <literal type="number" pos:start="131:32" pos:end="131:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:74"><expr pos:start="133:17" pos:end="133:73"><call pos:start="133:17" pos:end="133:73"><name pos:start="133:17" pos:end="133:22">av_log</name> <argument_list pos:start="133:24" pos:end="133:73">(<argument pos:start="133:25" pos:end="133:25"><expr pos:start="133:25" pos:end="133:25"><name pos:start="133:25" pos:end="133:25">s</name></expr></argument>, <argument pos:start="133:28" pos:end="133:39"><expr pos:start="133:28" pos:end="133:39"><name pos:start="133:28" pos:end="133:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="133:42" pos:end="133:58"><expr pos:start="133:42" pos:end="133:58"><literal type="string" pos:start="133:42" pos:end="133:58">"  fronsay: %s\n"</literal></expr></argument>, <argument pos:start="133:61" pos:end="133:72"><expr pos:start="133:61" pos:end="133:72"><operator pos:start="133:61" pos:end="133:61">&amp;</operator><name pos:start="133:62" pos:end="133:72"><name pos:start="133:62" pos:end="133:65">text</name><index pos:start="133:66" pos:end="133:72">[<expr pos:start="133:67" pos:end="133:71"><name pos:start="133:67" pos:end="133:67">i</name> <operator pos:start="133:69" pos:end="133:69">+</operator> <literal type="number" pos:start="133:71" pos:end="133:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>

            <break pos:start="139:13" pos:end="139:18">break;</break>



        <case pos:start="143:9" pos:end="143:22">case <expr pos:start="143:14" pos:end="143:21"><name pos:start="143:14" pos:end="143:21">AUDI_TAG</name></expr>:</case>

            <comment type="block" pos:start="145:13" pos:end="145:38">/* send out audio chunk */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:46"><expr pos:start="147:13" pos:end="147:45"><name pos:start="147:13" pos:end="147:15">ret</name><operator pos:start="147:16" pos:end="147:16">=</operator> <call pos:start="147:18" pos:end="147:45"><name pos:start="147:18" pos:end="147:30">av_get_packet</name><argument_list pos:start="147:31" pos:end="147:45">(<argument pos:start="147:32" pos:end="147:33"><expr pos:start="147:32" pos:end="147:33"><name pos:start="147:32" pos:end="147:33">pb</name></expr></argument>, <argument pos:start="147:36" pos:end="147:38"><expr pos:start="147:36" pos:end="147:38"><name pos:start="147:36" pos:end="147:38">pkt</name></expr></argument>, <argument pos:start="147:41" pos:end="147:44"><expr pos:start="147:41" pos:end="147:44"><name pos:start="147:41" pos:end="147:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:56"><expr pos:start="149:13" pos:end="149:55"><name pos:start="149:13" pos:end="149:29"><name pos:start="149:13" pos:end="149:15">pkt</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:29">stream_index</name></name> <operator pos:start="149:31" pos:end="149:31">=</operator> <name pos:start="149:33" pos:end="149:55"><name pos:start="149:33" pos:end="149:35">wc3</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:55">audio_stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:32"><expr pos:start="151:13" pos:end="151:31"><name pos:start="151:13" pos:end="151:20"><name pos:start="151:13" pos:end="151:15">pkt</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:20">pts</name></name> <operator pos:start="151:22" pos:end="151:22">=</operator> <name pos:start="151:24" pos:end="151:31"><name pos:start="151:24" pos:end="151:26">wc3</name><operator pos:start="151:27" pos:end="151:28">-&gt;</operator><name pos:start="151:29" pos:end="151:31">pts</name></name></expr>;</expr_stmt>



            <comment type="block" pos:start="155:13" pos:end="155:37">/* time to advance pts */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:23"><expr pos:start="157:13" pos:end="157:22"><name pos:start="157:13" pos:end="157:20"><name pos:start="157:13" pos:end="157:15">wc3</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:20">pts</name></name><operator pos:start="157:21" pos:end="157:22">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="161:13" pos:end="161:28"><expr pos:start="161:13" pos:end="161:27"><name pos:start="161:13" pos:end="161:23">packet_read</name> <operator pos:start="161:25" pos:end="161:25">=</operator> <literal type="number" pos:start="161:27" pos:end="161:27">1</literal></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>



        <default pos:start="167:9" pos:end="167:16">default:</default>

            <expr_stmt pos:start="169:13" pos:end="173:123"><expr pos:start="169:13" pos:end="173:122"><call pos:start="169:13" pos:end="173:122"><name pos:start="169:13" pos:end="169:18">av_log</name> <argument_list pos:start="169:20" pos:end="173:122">(<argument pos:start="169:21" pos:end="169:21"><expr pos:start="169:21" pos:end="169:21"><name pos:start="169:21" pos:end="169:21">s</name></expr></argument>, <argument pos:start="169:24" pos:end="169:35"><expr pos:start="169:24" pos:end="169:35"><name pos:start="169:24" pos:end="169:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="169:38" pos:end="169:96"><expr pos:start="169:38" pos:end="169:96"><literal type="string" pos:start="169:38" pos:end="169:96">"  unrecognized WC3 chunk: %c%c%c%c (0x%02X%02X%02X%02X)\n"</literal></expr></argument>,

                <argument pos:start="171:17" pos:end="171:35"><expr pos:start="171:17" pos:end="171:35"><operator pos:start="171:17" pos:end="171:17">(</operator><name pos:start="171:18" pos:end="171:24">uint8_t</name><operator pos:start="171:25" pos:end="171:25">)</operator><name pos:start="171:26" pos:end="171:35">fourcc_tag</name></expr></argument>, <argument pos:start="171:38" pos:end="171:63"><expr pos:start="171:38" pos:end="171:63"><operator pos:start="171:38" pos:end="171:38">(</operator><name pos:start="171:39" pos:end="171:45">uint8_t</name><operator pos:start="171:46" pos:end="171:46">)</operator><operator pos:start="171:47" pos:end="171:47">(</operator><name pos:start="171:48" pos:end="171:57">fourcc_tag</name> <operator pos:start="171:59" pos:end="171:60">&gt;&gt;</operator> <literal type="number" pos:start="171:62" pos:end="171:62">8</literal><operator pos:start="171:63" pos:end="171:63">)</operator></expr></argument>, <argument pos:start="171:66" pos:end="171:92"><expr pos:start="171:66" pos:end="171:92"><operator pos:start="171:66" pos:end="171:66">(</operator><name pos:start="171:67" pos:end="171:73">uint8_t</name><operator pos:start="171:74" pos:end="171:74">)</operator><operator pos:start="171:75" pos:end="171:75">(</operator><name pos:start="171:76" pos:end="171:85">fourcc_tag</name> <operator pos:start="171:87" pos:end="171:88">&gt;&gt;</operator> <literal type="number" pos:start="171:90" pos:end="171:91">16</literal><operator pos:start="171:92" pos:end="171:92">)</operator></expr></argument>, <argument pos:start="171:95" pos:end="171:121"><expr pos:start="171:95" pos:end="171:121"><operator pos:start="171:95" pos:end="171:95">(</operator><name pos:start="171:96" pos:end="171:102">uint8_t</name><operator pos:start="171:103" pos:end="171:103">)</operator><operator pos:start="171:104" pos:end="171:104">(</operator><name pos:start="171:105" pos:end="171:114">fourcc_tag</name> <operator pos:start="171:116" pos:end="171:117">&gt;&gt;</operator> <literal type="number" pos:start="171:119" pos:end="171:120">24</literal><operator pos:start="171:121" pos:end="171:121">)</operator></expr></argument>,

                <argument pos:start="173:17" pos:end="173:35"><expr pos:start="173:17" pos:end="173:35"><operator pos:start="173:17" pos:end="173:17">(</operator><name pos:start="173:18" pos:end="173:24">uint8_t</name><operator pos:start="173:25" pos:end="173:25">)</operator><name pos:start="173:26" pos:end="173:35">fourcc_tag</name></expr></argument>, <argument pos:start="173:38" pos:end="173:63"><expr pos:start="173:38" pos:end="173:63"><operator pos:start="173:38" pos:end="173:38">(</operator><name pos:start="173:39" pos:end="173:45">uint8_t</name><operator pos:start="173:46" pos:end="173:46">)</operator><operator pos:start="173:47" pos:end="173:47">(</operator><name pos:start="173:48" pos:end="173:57">fourcc_tag</name> <operator pos:start="173:59" pos:end="173:60">&gt;&gt;</operator> <literal type="number" pos:start="173:62" pos:end="173:62">8</literal><operator pos:start="173:63" pos:end="173:63">)</operator></expr></argument>, <argument pos:start="173:66" pos:end="173:92"><expr pos:start="173:66" pos:end="173:92"><operator pos:start="173:66" pos:end="173:66">(</operator><name pos:start="173:67" pos:end="173:73">uint8_t</name><operator pos:start="173:74" pos:end="173:74">)</operator><operator pos:start="173:75" pos:end="173:75">(</operator><name pos:start="173:76" pos:end="173:85">fourcc_tag</name> <operator pos:start="173:87" pos:end="173:88">&gt;&gt;</operator> <literal type="number" pos:start="173:90" pos:end="173:91">16</literal><operator pos:start="173:92" pos:end="173:92">)</operator></expr></argument>, <argument pos:start="173:95" pos:end="173:121"><expr pos:start="173:95" pos:end="173:121"><operator pos:start="173:95" pos:end="173:95">(</operator><name pos:start="173:96" pos:end="173:102">uint8_t</name><operator pos:start="173:103" pos:end="173:103">)</operator><operator pos:start="173:104" pos:end="173:104">(</operator><name pos:start="173:105" pos:end="173:114">fourcc_tag</name> <operator pos:start="173:116" pos:end="173:117">&gt;&gt;</operator> <literal type="number" pos:start="173:119" pos:end="173:120">24</literal><operator pos:start="173:121" pos:end="173:121">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:38"><expr pos:start="175:13" pos:end="175:37"><name pos:start="175:13" pos:end="175:15">ret</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <name pos:start="175:19" pos:end="175:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:28"><expr pos:start="177:13" pos:end="177:27"><name pos:start="177:13" pos:end="177:23">packet_read</name> <operator pos:start="177:25" pos:end="177:25">=</operator> <literal type="number" pos:start="177:27" pos:end="177:27">1</literal></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <return pos:start="187:5" pos:end="187:15">return <expr pos:start="187:12" pos:end="187:14"><name pos:start="187:12" pos:end="187:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
