<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/912.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">cpu_signal_handler</name><parameter_list pos:start="1:23" pos:end="1:63">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:26">int</name></type> <name pos:start="1:28" pos:end="1:38">host_signum</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:44">void</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">pinfo</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">puc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:58">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">siginfo_t</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">info</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27">pinfo</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">ucontext_t</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">uc</name> <init pos:start="7:20" pos:end="7:24">= <expr pos:start="7:22" pos:end="7:24"><name pos:start="7:22" pos:end="7:24">puc</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:20">ip</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">is_write</name> <init pos:start="11:18" pos:end="11:20">= <expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:6">ip</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <name pos:start="15:10" pos:end="15:30"><name pos:start="15:10" pos:end="15:11">uc</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:24">uc_mcontext</name><operator pos:start="15:25" pos:end="15:25">.</operator><name pos:start="15:26" pos:end="15:30">sc_ip</name></name></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="45:5">switch <condition pos:start="17:12" pos:end="17:24">(<expr pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:23">host_signum</name></expr>)</condition> <block pos:start="17:26" pos:end="45:5">{<block_content pos:start="19:5" pos:end="43:14">

    <case pos:start="19:5" pos:end="19:16">case <expr pos:start="19:10" pos:end="19:15"><name pos:start="19:10" pos:end="19:15">SIGILL</name></expr>:</case>

    <case pos:start="21:5" pos:end="21:16">case <expr pos:start="21:10" pos:end="21:15"><name pos:start="21:10" pos:end="21:15">SIGFPE</name></expr>:</case>

    <case pos:start="23:5" pos:end="23:17">case <expr pos:start="23:10" pos:end="23:16"><name pos:start="23:10" pos:end="23:16">SIGSEGV</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:16">case <expr pos:start="25:10" pos:end="25:15"><name pos:start="25:10" pos:end="25:15">SIGBUS</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:17">case <expr pos:start="27:10" pos:end="27:16"><name pos:start="27:10" pos:end="27:16">SIGTRAP</name></expr>:</case>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:64">(<expr pos:start="29:13" pos:end="29:63"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:16">info</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:25">si_code</name></name> <operator pos:start="29:27" pos:end="29:28">&amp;&amp;</operator> <operator pos:start="29:30" pos:end="29:30">(</operator><name pos:start="29:31" pos:end="29:48"><name pos:start="29:31" pos:end="29:34">info</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:48">si_segvflags</name></name> <operator pos:start="29:50" pos:end="29:50">&amp;</operator> <name pos:start="29:52" pos:end="29:62">__ISR_VALID</name><operator pos:start="29:63" pos:end="29:63">)</operator></expr>)</condition> <block pos:start="29:66" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:48">

            <comment type="block" pos:start="31:13" pos:end="31:50">/* ISR.W (write-access) is bit 33:  */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:48"><expr pos:start="33:13" pos:end="33:47"><name pos:start="33:13" pos:end="33:20">is_write</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <operator pos:start="33:24" pos:end="33:24">(</operator><name pos:start="33:25" pos:end="33:36"><name pos:start="33:25" pos:end="33:28">info</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:36">si_isr</name></name> <operator pos:start="33:38" pos:end="33:39">&gt;&gt;</operator> <literal type="number" pos:start="33:41" pos:end="33:42">33</literal><operator pos:start="33:43" pos:end="33:43">)</operator> <operator pos:start="33:45" pos:end="33:45">&amp;</operator> <literal type="number" pos:start="33:47" pos:end="33:47">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>



    <default pos:start="41:5" pos:end="41:12">default:</default>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="47:5" pos:end="51:58">return <expr pos:start="47:12" pos:end="51:57"><call pos:start="47:12" pos:end="51:57"><name pos:start="47:12" pos:end="47:28">handle_cpu_signal</name><argument_list pos:start="47:29" pos:end="51:57">(<argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><name pos:start="47:30" pos:end="47:31">ip</name></expr></argument>, <argument pos:start="47:34" pos:end="47:61"><expr pos:start="47:34" pos:end="47:61"><operator pos:start="47:34" pos:end="47:34">(</operator><name pos:start="47:35" pos:end="47:42">unsigned</name> <name pos:start="47:44" pos:end="47:47">long</name><operator pos:start="47:48" pos:end="47:48">)</operator><name pos:start="47:49" pos:end="47:61"><name pos:start="47:49" pos:end="47:52">info</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:61">si_addr</name></name></expr></argument>,

                             <argument pos:start="49:30" pos:end="49:37"><expr pos:start="49:30" pos:end="49:37"><name pos:start="49:30" pos:end="49:37">is_write</name></expr></argument>,

                             <argument pos:start="51:30" pos:end="51:56"><expr pos:start="51:30" pos:end="51:56"><operator pos:start="51:30" pos:end="51:30">(</operator><name pos:start="51:31" pos:end="51:38">sigset_t</name> <operator pos:start="51:40" pos:end="51:40">*</operator><operator pos:start="51:41" pos:end="51:41">)</operator><operator pos:start="51:42" pos:end="51:42">&amp;</operator><name pos:start="51:43" pos:end="51:56"><name pos:start="51:43" pos:end="51:44">uc</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:56">uc_sigmask</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
