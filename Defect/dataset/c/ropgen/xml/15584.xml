<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15584.c" pos:tabs="8"><function pos:start="1:1" pos:end="150:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">film_read_packet</name><parameter_list pos:start="1:28" pos:end="3:42">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="150:1">{<block_content pos:start="7:5" pos:end="148:15">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">FilmDemuxContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">film</name> <init pos:start="7:28" pos:end="7:41">= <expr pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:30">s</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">film_sample</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:23">sample</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">left</name></decl>, <decl pos:start="17:15" pos:end="17:19"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:19">right</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="26:55"><if pos:start="21:5" pos:end="26:55">if <condition pos:start="21:8" pos:end="21:51">(<expr pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:12">film</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:28">current_sample</name></name> <operator pos:start="21:30" pos:end="21:31">&gt;=</operator> <name pos:start="21:33" pos:end="21:50"><name pos:start="21:33" pos:end="21:36">film</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:50">sample_count</name></name></expr>)</condition><block type="pseudo" pos:start="26:5" pos:end="26:55"><block_content pos:start="26:5" pos:end="26:55">




    <expr_stmt pos:start="26:5" pos:end="26:55"><expr pos:start="26:5" pos:end="26:54"><name pos:start="26:5" pos:end="26:10">sample</name> <operator pos:start="26:12" pos:end="26:12">=</operator> <operator pos:start="26:14" pos:end="26:14">&amp;</operator><name pos:start="26:15" pos:end="26:54"><name pos:start="26:15" pos:end="26:18">film</name><operator pos:start="26:19" pos:end="26:20">-&gt;</operator><name pos:start="26:21" pos:end="26:32">sample_table</name><index pos:start="26:33" pos:end="26:54">[<expr pos:start="26:34" pos:end="26:53"><name pos:start="26:34" pos:end="26:53"><name pos:start="26:34" pos:end="26:37">film</name><operator pos:start="26:38" pos:end="26:39">-&gt;</operator><name pos:start="26:40" pos:end="26:53">current_sample</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="30:5" pos:end="30:61">/* position the stream (will probably be there anyway) */</comment>

    <expr_stmt pos:start="32:5" pos:end="32:51"><expr pos:start="32:5" pos:end="32:50"><call pos:start="32:5" pos:end="32:50"><name pos:start="32:5" pos:end="32:13">avio_seek</name><argument_list pos:start="32:14" pos:end="32:50">(<argument pos:start="32:15" pos:end="32:16"><expr pos:start="32:15" pos:end="32:16"><name pos:start="32:15" pos:end="32:16">pb</name></expr></argument>, <argument pos:start="32:19" pos:end="32:39"><expr pos:start="32:19" pos:end="32:39"><name pos:start="32:19" pos:end="32:39"><name pos:start="32:19" pos:end="32:24">sample</name><operator pos:start="32:25" pos:end="32:26">-&gt;</operator><name pos:start="32:27" pos:end="32:39">sample_offset</name></name></expr></argument>, <argument pos:start="32:42" pos:end="32:49"><expr pos:start="32:42" pos:end="32:49"><name pos:start="32:42" pos:end="32:49">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="36:5" pos:end="36:70">/* do a special song and dance when loading FILM Cinepak chunks */</comment>

    <if_stmt pos:start="38:5" pos:end="134:5"><if pos:start="38:5" pos:end="50:5">if <condition pos:start="38:8" pos:end="40:47">(<expr pos:start="38:9" pos:end="40:46"><operator pos:start="38:9" pos:end="38:9">(</operator><name pos:start="38:10" pos:end="38:23"><name pos:start="38:10" pos:end="38:15">sample</name><operator pos:start="38:16" pos:end="38:17">-&gt;</operator><name pos:start="38:18" pos:end="38:23">stream</name></name> <operator pos:start="38:25" pos:end="38:26">==</operator> <name pos:start="38:28" pos:end="38:51"><name pos:start="38:28" pos:end="38:31">film</name><operator pos:start="38:32" pos:end="38:33">-&gt;</operator><name pos:start="38:34" pos:end="38:51">video_stream_index</name></name><operator pos:start="38:52" pos:end="38:52">)</operator> <operator pos:start="38:54" pos:end="38:55">&amp;&amp;</operator>

        <operator pos:start="40:9" pos:end="40:9">(</operator><name pos:start="40:10" pos:end="40:25"><name pos:start="40:10" pos:end="40:13">film</name><operator pos:start="40:14" pos:end="40:15">-&gt;</operator><name pos:start="40:16" pos:end="40:25">video_type</name></name> <operator pos:start="40:27" pos:end="40:28">==</operator> <name pos:start="40:30" pos:end="40:45">CODEC_ID_CINEPAK</name><operator pos:start="40:46" pos:end="40:46">)</operator></expr>)</condition> <block pos:start="40:49" pos:end="50:5">{<block_content pos:start="42:9" pos:end="48:54">

        <expr_stmt pos:start="42:9" pos:end="42:32"><expr pos:start="42:9" pos:end="42:31"><name pos:start="42:9" pos:end="42:16"><name pos:start="42:9" pos:end="42:11">pkt</name><operator pos:start="42:12" pos:end="42:13">-&gt;</operator><name pos:start="42:14" pos:end="42:16">pos</name></name><operator pos:start="42:17" pos:end="42:17">=</operator> <call pos:start="42:19" pos:end="42:31"><name pos:start="42:19" pos:end="42:27">avio_tell</name><argument_list pos:start="42:28" pos:end="42:31">(<argument pos:start="42:29" pos:end="42:30"><expr pos:start="42:29" pos:end="42:30"><name pos:start="42:29" pos:end="42:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="44:9" pos:end="46:35"><if pos:start="44:9" pos:end="46:35">if <condition pos:start="44:12" pos:end="44:52">(<expr pos:start="44:13" pos:end="44:51"><call pos:start="44:13" pos:end="44:51"><name pos:start="44:13" pos:end="44:25">av_new_packet</name><argument_list pos:start="44:26" pos:end="44:51">(<argument pos:start="44:27" pos:end="44:29"><expr pos:start="44:27" pos:end="44:29"><name pos:start="44:27" pos:end="44:29">pkt</name></expr></argument>, <argument pos:start="44:32" pos:end="44:50"><expr pos:start="44:32" pos:end="44:50"><name pos:start="44:32" pos:end="44:50"><name pos:start="44:32" pos:end="44:37">sample</name><operator pos:start="44:38" pos:end="44:39">-&gt;</operator><name pos:start="44:40" pos:end="44:50">sample_size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="46:13" pos:end="46:35"><block_content pos:start="46:13" pos:end="46:35">

            <return pos:start="46:13" pos:end="46:35">return <expr pos:start="46:20" pos:end="46:34"><call pos:start="46:20" pos:end="46:34"><name pos:start="46:20" pos:end="46:26">AVERROR</name><argument_list pos:start="46:27" pos:end="46:34">(<argument pos:start="46:28" pos:end="46:33"><expr pos:start="46:28" pos:end="46:33"><name pos:start="46:28" pos:end="46:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="48:9" pos:end="48:54"><expr pos:start="48:9" pos:end="48:53"><call pos:start="48:9" pos:end="48:53"><name pos:start="48:9" pos:end="48:17">avio_read</name><argument_list pos:start="48:18" pos:end="48:53">(<argument pos:start="48:19" pos:end="48:20"><expr pos:start="48:19" pos:end="48:20"><name pos:start="48:19" pos:end="48:20">pb</name></expr></argument>, <argument pos:start="48:23" pos:end="48:31"><expr pos:start="48:23" pos:end="48:31"><name pos:start="48:23" pos:end="48:31"><name pos:start="48:23" pos:end="48:25">pkt</name><operator pos:start="48:26" pos:end="48:27">-&gt;</operator><name pos:start="48:28" pos:end="48:31">data</name></name></expr></argument>, <argument pos:start="48:34" pos:end="48:52"><expr pos:start="48:34" pos:end="48:52"><name pos:start="48:34" pos:end="48:52"><name pos:start="48:34" pos:end="48:39">sample</name><operator pos:start="48:40" pos:end="48:41">-&gt;</operator><name pos:start="48:42" pos:end="48:52">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="50:7" pos:end="126:5">else if <condition pos:start="50:15" pos:end="54:49">(<expr pos:start="50:16" pos:end="54:48"><operator pos:start="50:16" pos:end="50:16">(</operator><name pos:start="50:17" pos:end="50:30"><name pos:start="50:17" pos:end="50:22">sample</name><operator pos:start="50:23" pos:end="50:24">-&gt;</operator><name pos:start="50:25" pos:end="50:30">stream</name></name> <operator pos:start="50:32" pos:end="50:33">==</operator> <name pos:start="50:35" pos:end="50:58"><name pos:start="50:35" pos:end="50:38">film</name><operator pos:start="50:39" pos:end="50:40">-&gt;</operator><name pos:start="50:41" pos:end="50:58">audio_stream_index</name></name><operator pos:start="50:59" pos:end="50:59">)</operator> <operator pos:start="50:61" pos:end="50:62">&amp;&amp;</operator>

        <operator pos:start="52:9" pos:end="52:9">(</operator><name pos:start="52:10" pos:end="52:29"><name pos:start="52:10" pos:end="52:13">film</name><operator pos:start="52:14" pos:end="52:15">-&gt;</operator><name pos:start="52:16" pos:end="52:29">audio_channels</name></name> <operator pos:start="52:31" pos:end="52:32">==</operator> <literal type="number" pos:start="52:34" pos:end="52:34">2</literal><operator pos:start="52:35" pos:end="52:35">)</operator> <operator pos:start="52:37" pos:end="52:38">&amp;&amp;</operator>

        <operator pos:start="54:9" pos:end="54:9">(</operator><name pos:start="54:10" pos:end="54:25"><name pos:start="54:10" pos:end="54:13">film</name><operator pos:start="54:14" pos:end="54:15">-&gt;</operator><name pos:start="54:16" pos:end="54:25">audio_type</name></name> <operator pos:start="54:27" pos:end="54:28">!=</operator> <name pos:start="54:30" pos:end="54:47">CODEC_ID_ADPCM_ADX</name><operator pos:start="54:48" pos:end="54:48">)</operator></expr>)</condition> <block pos:start="54:51" pos:end="126:5">{<block_content pos:start="62:9" pos:end="124:9">

        <comment type="block" pos:start="56:9" pos:end="56:48">/* stereo PCM needs to be interleaved */</comment>





        <if_stmt pos:start="62:9" pos:end="64:35"><if pos:start="62:9" pos:end="64:35">if <condition pos:start="62:12" pos:end="62:52">(<expr pos:start="62:13" pos:end="62:51"><call pos:start="62:13" pos:end="62:51"><name pos:start="62:13" pos:end="62:25">av_new_packet</name><argument_list pos:start="62:26" pos:end="62:51">(<argument pos:start="62:27" pos:end="62:29"><expr pos:start="62:27" pos:end="62:29"><name pos:start="62:27" pos:end="62:29">pkt</name></expr></argument>, <argument pos:start="62:32" pos:end="62:50"><expr pos:start="62:32" pos:end="62:50"><name pos:start="62:32" pos:end="62:50"><name pos:start="62:32" pos:end="62:37">sample</name><operator pos:start="62:38" pos:end="62:39">-&gt;</operator><name pos:start="62:40" pos:end="62:50">sample_size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="64:13" pos:end="64:35"><block_content pos:start="64:13" pos:end="64:35">

            <return pos:start="64:13" pos:end="64:35">return <expr pos:start="64:20" pos:end="64:34"><call pos:start="64:20" pos:end="64:34"><name pos:start="64:20" pos:end="64:26">AVERROR</name><argument_list pos:start="64:27" pos:end="64:34">(<argument pos:start="64:28" pos:end="64:33"><expr pos:start="64:28" pos:end="64:33"><name pos:start="64:28" pos:end="64:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="68:9" pos:end="68:61">/* make sure the interleave buffer is large enough */</comment>

        <if_stmt pos:start="70:9" pos:end="86:9"><if pos:start="70:9" pos:end="86:9">if <condition pos:start="70:12" pos:end="70:59">(<expr pos:start="70:13" pos:end="70:58"><name pos:start="70:13" pos:end="70:31"><name pos:start="70:13" pos:end="70:18">sample</name><operator pos:start="70:19" pos:end="70:20">-&gt;</operator><name pos:start="70:21" pos:end="70:31">sample_size</name></name> <operator pos:start="70:33" pos:end="70:33">&gt;</operator> <name pos:start="70:35" pos:end="70:58"><name pos:start="70:35" pos:end="70:38">film</name><operator pos:start="70:39" pos:end="70:40">-&gt;</operator><name pos:start="70:41" pos:end="70:58">stereo_buffer_size</name></name></expr>)</condition> <block pos:start="70:61" pos:end="86:9">{<block_content pos:start="72:13" pos:end="84:13">

            <expr_stmt pos:start="72:13" pos:end="72:41"><expr pos:start="72:13" pos:end="72:40"><call pos:start="72:13" pos:end="72:40"><name pos:start="72:13" pos:end="72:19">av_free</name><argument_list pos:start="72:20" pos:end="72:40">(<argument pos:start="72:21" pos:end="72:39"><expr pos:start="72:21" pos:end="72:39"><name pos:start="72:21" pos:end="72:39"><name pos:start="72:21" pos:end="72:24">film</name><operator pos:start="72:25" pos:end="72:26">-&gt;</operator><name pos:start="72:27" pos:end="72:39">stereo_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="74:13" pos:end="74:59"><expr pos:start="74:13" pos:end="74:58"><name pos:start="74:13" pos:end="74:36"><name pos:start="74:13" pos:end="74:16">film</name><operator pos:start="74:17" pos:end="74:18">-&gt;</operator><name pos:start="74:19" pos:end="74:36">stereo_buffer_size</name></name> <operator pos:start="74:38" pos:end="74:38">=</operator> <name pos:start="74:40" pos:end="74:58"><name pos:start="74:40" pos:end="74:45">sample</name><operator pos:start="74:46" pos:end="74:47">-&gt;</operator><name pos:start="74:48" pos:end="74:58">sample_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="76:13" pos:end="76:70"><expr pos:start="76:13" pos:end="76:69"><name pos:start="76:13" pos:end="76:31"><name pos:start="76:13" pos:end="76:16">film</name><operator pos:start="76:17" pos:end="76:18">-&gt;</operator><name pos:start="76:19" pos:end="76:31">stereo_buffer</name></name> <operator pos:start="76:33" pos:end="76:33">=</operator> <call pos:start="76:35" pos:end="76:69"><name pos:start="76:35" pos:end="76:43">av_malloc</name><argument_list pos:start="76:44" pos:end="76:69">(<argument pos:start="76:45" pos:end="76:68"><expr pos:start="76:45" pos:end="76:68"><name pos:start="76:45" pos:end="76:68"><name pos:start="76:45" pos:end="76:48">film</name><operator pos:start="76:49" pos:end="76:50">-&gt;</operator><name pos:start="76:51" pos:end="76:68">stereo_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="78:13" pos:end="84:13"><if pos:start="78:13" pos:end="84:13">if <condition pos:start="78:16" pos:end="78:37">(<expr pos:start="78:17" pos:end="78:36"><operator pos:start="78:17" pos:end="78:17">!</operator><name pos:start="78:18" pos:end="78:36"><name pos:start="78:18" pos:end="78:21">film</name><operator pos:start="78:22" pos:end="78:23">-&gt;</operator><name pos:start="78:24" pos:end="78:36">stereo_buffer</name></name></expr>)</condition> <block pos:start="78:39" pos:end="84:13">{<block_content pos:start="80:17" pos:end="82:39">

                <expr_stmt pos:start="80:17" pos:end="80:45"><expr pos:start="80:17" pos:end="80:44"><name pos:start="80:17" pos:end="80:40"><name pos:start="80:17" pos:end="80:20">film</name><operator pos:start="80:21" pos:end="80:22">-&gt;</operator><name pos:start="80:23" pos:end="80:40">stereo_buffer_size</name></name> <operator pos:start="80:42" pos:end="80:42">=</operator> <literal type="number" pos:start="80:44" pos:end="80:44">0</literal></expr>;</expr_stmt>

                <return pos:start="82:17" pos:end="82:39">return <expr pos:start="82:24" pos:end="82:38"><call pos:start="82:24" pos:end="82:38"><name pos:start="82:24" pos:end="82:30">AVERROR</name><argument_list pos:start="82:31" pos:end="82:38">(<argument pos:start="82:32" pos:end="82:37"><expr pos:start="82:32" pos:end="82:37"><name pos:start="82:32" pos:end="82:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="90:9" pos:end="90:32"><expr pos:start="90:9" pos:end="90:31"><name pos:start="90:9" pos:end="90:16"><name pos:start="90:9" pos:end="90:11">pkt</name><operator pos:start="90:12" pos:end="90:13">-&gt;</operator><name pos:start="90:14" pos:end="90:16">pos</name></name><operator pos:start="90:17" pos:end="90:17">=</operator> <call pos:start="90:19" pos:end="90:31"><name pos:start="90:19" pos:end="90:27">avio_tell</name><argument_list pos:start="90:28" pos:end="90:31">(<argument pos:start="90:29" pos:end="90:30"><expr pos:start="90:29" pos:end="90:30"><name pos:start="90:29" pos:end="90:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="92:9" pos:end="92:70"><expr pos:start="92:9" pos:end="92:69"><name pos:start="92:9" pos:end="92:11">ret</name> <operator pos:start="92:13" pos:end="92:13">=</operator> <call pos:start="92:15" pos:end="92:69"><name pos:start="92:15" pos:end="92:23">avio_read</name><argument_list pos:start="92:24" pos:end="92:69">(<argument pos:start="92:25" pos:end="92:26"><expr pos:start="92:25" pos:end="92:26"><name pos:start="92:25" pos:end="92:26">pb</name></expr></argument>, <argument pos:start="92:29" pos:end="92:47"><expr pos:start="92:29" pos:end="92:47"><name pos:start="92:29" pos:end="92:47"><name pos:start="92:29" pos:end="92:32">film</name><operator pos:start="92:33" pos:end="92:34">-&gt;</operator><name pos:start="92:35" pos:end="92:47">stereo_buffer</name></name></expr></argument>, <argument pos:start="92:50" pos:end="92:68"><expr pos:start="92:50" pos:end="92:68"><name pos:start="92:50" pos:end="92:68"><name pos:start="92:50" pos:end="92:55">sample</name><operator pos:start="92:56" pos:end="92:57">-&gt;</operator><name pos:start="92:58" pos:end="92:68">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="94:9" pos:end="96:31"><if pos:start="94:9" pos:end="96:31">if <condition pos:start="94:12" pos:end="94:39">(<expr pos:start="94:13" pos:end="94:38"><name pos:start="94:13" pos:end="94:15">ret</name> <operator pos:start="94:17" pos:end="94:18">!=</operator> <name pos:start="94:20" pos:end="94:38"><name pos:start="94:20" pos:end="94:25">sample</name><operator pos:start="94:26" pos:end="94:27">-&gt;</operator><name pos:start="94:28" pos:end="94:38">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="96:13" pos:end="96:31"><block_content pos:start="96:13" pos:end="96:31">

            <expr_stmt pos:start="96:13" pos:end="96:31"><expr pos:start="96:13" pos:end="96:30"><name pos:start="96:13" pos:end="96:15">ret</name> <operator pos:start="96:17" pos:end="96:17">=</operator> <call pos:start="96:19" pos:end="96:30"><name pos:start="96:19" pos:end="96:25">AVERROR</name><argument_list pos:start="96:26" pos:end="96:30">(<argument pos:start="96:27" pos:end="96:29"><expr pos:start="96:27" pos:end="96:29"><name pos:start="96:27" pos:end="96:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="100:9" pos:end="100:17"><expr pos:start="100:9" pos:end="100:16"><name pos:start="100:9" pos:end="100:12">left</name> <operator pos:start="100:14" pos:end="100:14">=</operator> <literal type="number" pos:start="100:16" pos:end="100:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="102:9" pos:end="102:40"><expr pos:start="102:9" pos:end="102:39"><name pos:start="102:9" pos:end="102:13">right</name> <operator pos:start="102:15" pos:end="102:15">=</operator> <name pos:start="102:17" pos:end="102:35"><name pos:start="102:17" pos:end="102:22">sample</name><operator pos:start="102:23" pos:end="102:24">-&gt;</operator><name pos:start="102:25" pos:end="102:35">sample_size</name></name> <operator pos:start="102:37" pos:end="102:37">/</operator> <literal type="number" pos:start="102:39" pos:end="102:39">2</literal></expr>;</expr_stmt>

        <for pos:start="104:9" pos:end="124:9">for <control pos:start="104:13" pos:end="104:46">(<init pos:start="104:14" pos:end="104:19"><expr pos:start="104:14" pos:end="104:18"><name pos:start="104:14" pos:end="104:14">i</name> <operator pos:start="104:16" pos:end="104:16">=</operator> <literal type="number" pos:start="104:18" pos:end="104:18">0</literal></expr>;</init> <condition pos:start="104:21" pos:end="104:44"><expr pos:start="104:21" pos:end="104:43"><name pos:start="104:21" pos:end="104:21">i</name> <operator pos:start="104:23" pos:end="104:23">&lt;</operator> <name pos:start="104:25" pos:end="104:43"><name pos:start="104:25" pos:end="104:30">sample</name><operator pos:start="104:31" pos:end="104:32">-&gt;</operator><name pos:start="104:33" pos:end="104:43">sample_size</name></name></expr>;</condition> <incr/>)</control> <block pos:start="104:48" pos:end="124:9">{<block_content pos:start="106:13" pos:end="122:13">

            <if_stmt pos:start="106:13" pos:end="122:13"><if pos:start="106:13" pos:end="112:13">if <condition pos:start="106:16" pos:end="106:38">(<expr pos:start="106:17" pos:end="106:37"><name pos:start="106:17" pos:end="106:32"><name pos:start="106:17" pos:end="106:20">film</name><operator pos:start="106:21" pos:end="106:22">-&gt;</operator><name pos:start="106:23" pos:end="106:32">audio_bits</name></name> <operator pos:start="106:34" pos:end="106:35">==</operator> <literal type="number" pos:start="106:37" pos:end="106:37">8</literal></expr>)</condition> <block pos:start="106:40" pos:end="112:13">{<block_content pos:start="108:17" pos:end="110:62">

                <expr_stmt pos:start="108:17" pos:end="108:61"><expr pos:start="108:17" pos:end="108:60"><name pos:start="108:17" pos:end="108:30"><name pos:start="108:17" pos:end="108:19">pkt</name><operator pos:start="108:20" pos:end="108:21">-&gt;</operator><name pos:start="108:22" pos:end="108:25">data</name><index pos:start="108:26" pos:end="108:30">[<expr pos:start="108:27" pos:end="108:29"><name pos:start="108:27" pos:end="108:27">i</name><operator pos:start="108:28" pos:end="108:29">++</operator></expr>]</index></name> <operator pos:start="108:32" pos:end="108:32">=</operator> <name pos:start="108:34" pos:end="108:60"><name pos:start="108:34" pos:end="108:37">film</name><operator pos:start="108:38" pos:end="108:39">-&gt;</operator><name pos:start="108:40" pos:end="108:52">stereo_buffer</name><index pos:start="108:53" pos:end="108:60">[<expr pos:start="108:54" pos:end="108:59"><name pos:start="108:54" pos:end="108:57">left</name><operator pos:start="108:58" pos:end="108:59">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="110:17" pos:end="110:62"><expr pos:start="110:17" pos:end="110:61"><name pos:start="110:17" pos:end="110:30"><name pos:start="110:17" pos:end="110:19">pkt</name><operator pos:start="110:20" pos:end="110:21">-&gt;</operator><name pos:start="110:22" pos:end="110:25">data</name><index pos:start="110:26" pos:end="110:30">[<expr pos:start="110:27" pos:end="110:29"><name pos:start="110:27" pos:end="110:27">i</name><operator pos:start="110:28" pos:end="110:29">++</operator></expr>]</index></name> <operator pos:start="110:32" pos:end="110:32">=</operator> <name pos:start="110:34" pos:end="110:61"><name pos:start="110:34" pos:end="110:37">film</name><operator pos:start="110:38" pos:end="110:39">-&gt;</operator><name pos:start="110:40" pos:end="110:52">stereo_buffer</name><index pos:start="110:53" pos:end="110:61">[<expr pos:start="110:54" pos:end="110:60"><name pos:start="110:54" pos:end="110:58">right</name><operator pos:start="110:59" pos:end="110:60">++</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="112:15" pos:end="122:13">else <block pos:start="112:20" pos:end="122:13">{<block_content pos:start="114:17" pos:end="120:62">

                <expr_stmt pos:start="114:17" pos:end="114:61"><expr pos:start="114:17" pos:end="114:60"><name pos:start="114:17" pos:end="114:30"><name pos:start="114:17" pos:end="114:19">pkt</name><operator pos:start="114:20" pos:end="114:21">-&gt;</operator><name pos:start="114:22" pos:end="114:25">data</name><index pos:start="114:26" pos:end="114:30">[<expr pos:start="114:27" pos:end="114:29"><name pos:start="114:27" pos:end="114:27">i</name><operator pos:start="114:28" pos:end="114:29">++</operator></expr>]</index></name> <operator pos:start="114:32" pos:end="114:32">=</operator> <name pos:start="114:34" pos:end="114:60"><name pos:start="114:34" pos:end="114:37">film</name><operator pos:start="114:38" pos:end="114:39">-&gt;</operator><name pos:start="114:40" pos:end="114:52">stereo_buffer</name><index pos:start="114:53" pos:end="114:60">[<expr pos:start="114:54" pos:end="114:59"><name pos:start="114:54" pos:end="114:57">left</name><operator pos:start="114:58" pos:end="114:59">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="116:17" pos:end="116:61"><expr pos:start="116:17" pos:end="116:60"><name pos:start="116:17" pos:end="116:30"><name pos:start="116:17" pos:end="116:19">pkt</name><operator pos:start="116:20" pos:end="116:21">-&gt;</operator><name pos:start="116:22" pos:end="116:25">data</name><index pos:start="116:26" pos:end="116:30">[<expr pos:start="116:27" pos:end="116:29"><name pos:start="116:27" pos:end="116:27">i</name><operator pos:start="116:28" pos:end="116:29">++</operator></expr>]</index></name> <operator pos:start="116:32" pos:end="116:32">=</operator> <name pos:start="116:34" pos:end="116:60"><name pos:start="116:34" pos:end="116:37">film</name><operator pos:start="116:38" pos:end="116:39">-&gt;</operator><name pos:start="116:40" pos:end="116:52">stereo_buffer</name><index pos:start="116:53" pos:end="116:60">[<expr pos:start="116:54" pos:end="116:59"><name pos:start="116:54" pos:end="116:57">left</name><operator pos:start="116:58" pos:end="116:59">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="118:17" pos:end="118:62"><expr pos:start="118:17" pos:end="118:61"><name pos:start="118:17" pos:end="118:30"><name pos:start="118:17" pos:end="118:19">pkt</name><operator pos:start="118:20" pos:end="118:21">-&gt;</operator><name pos:start="118:22" pos:end="118:25">data</name><index pos:start="118:26" pos:end="118:30">[<expr pos:start="118:27" pos:end="118:29"><name pos:start="118:27" pos:end="118:27">i</name><operator pos:start="118:28" pos:end="118:29">++</operator></expr>]</index></name> <operator pos:start="118:32" pos:end="118:32">=</operator> <name pos:start="118:34" pos:end="118:61"><name pos:start="118:34" pos:end="118:37">film</name><operator pos:start="118:38" pos:end="118:39">-&gt;</operator><name pos:start="118:40" pos:end="118:52">stereo_buffer</name><index pos:start="118:53" pos:end="118:61">[<expr pos:start="118:54" pos:end="118:60"><name pos:start="118:54" pos:end="118:58">right</name><operator pos:start="118:59" pos:end="118:60">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="120:17" pos:end="120:62"><expr pos:start="120:17" pos:end="120:61"><name pos:start="120:17" pos:end="120:30"><name pos:start="120:17" pos:end="120:19">pkt</name><operator pos:start="120:20" pos:end="120:21">-&gt;</operator><name pos:start="120:22" pos:end="120:25">data</name><index pos:start="120:26" pos:end="120:30">[<expr pos:start="120:27" pos:end="120:29"><name pos:start="120:27" pos:end="120:27">i</name><operator pos:start="120:28" pos:end="120:29">++</operator></expr>]</index></name> <operator pos:start="120:32" pos:end="120:32">=</operator> <name pos:start="120:34" pos:end="120:61"><name pos:start="120:34" pos:end="120:37">film</name><operator pos:start="120:38" pos:end="120:39">-&gt;</operator><name pos:start="120:40" pos:end="120:52">stereo_buffer</name><index pos:start="120:53" pos:end="120:61">[<expr pos:start="120:54" pos:end="120:60"><name pos:start="120:54" pos:end="120:58">right</name><operator pos:start="120:59" pos:end="120:60">++</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="126:7" pos:end="134:5">else <block pos:start="126:12" pos:end="134:5">{<block_content pos:start="128:9" pos:end="132:31">

        <expr_stmt pos:start="128:9" pos:end="128:57"><expr pos:start="128:9" pos:end="128:56"><name pos:start="128:9" pos:end="128:11">ret</name><operator pos:start="128:12" pos:end="128:12">=</operator> <call pos:start="128:14" pos:end="128:56"><name pos:start="128:14" pos:end="128:26">av_get_packet</name><argument_list pos:start="128:27" pos:end="128:56">(<argument pos:start="128:28" pos:end="128:29"><expr pos:start="128:28" pos:end="128:29"><name pos:start="128:28" pos:end="128:29">pb</name></expr></argument>, <argument pos:start="128:32" pos:end="128:34"><expr pos:start="128:32" pos:end="128:34"><name pos:start="128:32" pos:end="128:34">pkt</name></expr></argument>, <argument pos:start="128:37" pos:end="128:55"><expr pos:start="128:37" pos:end="128:55"><name pos:start="128:37" pos:end="128:55"><name pos:start="128:37" pos:end="128:42">sample</name><operator pos:start="128:43" pos:end="128:44">-&gt;</operator><name pos:start="128:45" pos:end="128:55">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="130:9" pos:end="132:31"><if pos:start="130:9" pos:end="132:31">if <condition pos:start="130:12" pos:end="130:39">(<expr pos:start="130:13" pos:end="130:38"><name pos:start="130:13" pos:end="130:15">ret</name> <operator pos:start="130:17" pos:end="130:18">!=</operator> <name pos:start="130:20" pos:end="130:38"><name pos:start="130:20" pos:end="130:25">sample</name><operator pos:start="130:26" pos:end="130:27">-&gt;</operator><name pos:start="130:28" pos:end="130:38">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="132:13" pos:end="132:31"><block_content pos:start="132:13" pos:end="132:31">

            <expr_stmt pos:start="132:13" pos:end="132:31"><expr pos:start="132:13" pos:end="132:30"><name pos:start="132:13" pos:end="132:15">ret</name> <operator pos:start="132:17" pos:end="132:17">=</operator> <call pos:start="132:19" pos:end="132:30"><name pos:start="132:19" pos:end="132:25">AVERROR</name><argument_list pos:start="132:26" pos:end="132:30">(<argument pos:start="132:27" pos:end="132:29"><expr pos:start="132:27" pos:end="132:29"><name pos:start="132:27" pos:end="132:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="138:5" pos:end="138:39"><expr pos:start="138:5" pos:end="138:38"><name pos:start="138:5" pos:end="138:21"><name pos:start="138:5" pos:end="138:7">pkt</name><operator pos:start="138:8" pos:end="138:9">-&gt;</operator><name pos:start="138:10" pos:end="138:21">stream_index</name></name> <operator pos:start="138:23" pos:end="138:23">=</operator> <name pos:start="138:25" pos:end="138:38"><name pos:start="138:25" pos:end="138:30">sample</name><operator pos:start="138:31" pos:end="138:32">-&gt;</operator><name pos:start="138:33" pos:end="138:38">stream</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="140:5" pos:end="140:27"><expr pos:start="140:5" pos:end="140:26"><name pos:start="140:5" pos:end="140:12"><name pos:start="140:5" pos:end="140:7">pkt</name><operator pos:start="140:8" pos:end="140:9">-&gt;</operator><name pos:start="140:10" pos:end="140:12">pts</name></name> <operator pos:start="140:14" pos:end="140:14">=</operator> <name pos:start="140:16" pos:end="140:26"><name pos:start="140:16" pos:end="140:21">sample</name><operator pos:start="140:22" pos:end="140:23">-&gt;</operator><name pos:start="140:24" pos:end="140:26">pts</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="144:5" pos:end="144:27"><expr pos:start="144:5" pos:end="144:26"><name pos:start="144:5" pos:end="144:24"><name pos:start="144:5" pos:end="144:8">film</name><operator pos:start="144:9" pos:end="144:10">-&gt;</operator><name pos:start="144:11" pos:end="144:24">current_sample</name></name><operator pos:start="144:25" pos:end="144:26">++</operator></expr>;</expr_stmt>



    <return pos:start="148:5" pos:end="148:15">return <expr pos:start="148:12" pos:end="148:14"><name pos:start="148:12" pos:end="148:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
