<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7878.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mov_flush_fragment</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="235:1">{<block_content pos:start="5:5" pos:end="233:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MOVMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">mov</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:22">first_track</name> <init pos:start="7:24" pos:end="7:27">= <expr pos:start="7:26" pos:end="7:27"><operator pos:start="7:26" pos:end="7:26">-</operator><literal type="number" pos:start="7:27" pos:end="7:27">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:21">mdat_size</name> <init pos:start="9:23" pos:end="9:25">= <expr pos:start="9:25" pos:end="9:25"><literal type="number" pos:start="9:25" pos:end="9:25">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:45">(<expr pos:start="13:9" pos:end="13:44"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:20"><name pos:start="13:11" pos:end="13:13">mov</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:20">flags</name></name> <operator pos:start="13:22" pos:end="13:22">&amp;</operator> <name pos:start="13:24" pos:end="13:43">FF_MOV_FLAG_FRAGMENT</name><operator pos:start="13:44" pos:end="13:44">)</operator></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="111:5"><if pos:start="19:5" pos:end="111:5">if <condition pos:start="19:8" pos:end="19:28">(<expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:11">mov</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">fragments</name></name> <operator pos:start="19:24" pos:end="19:25">==</operator> <literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr>)</condition> <block pos:start="19:30" pos:end="111:5">{<block_content pos:start="21:9" pos:end="109:17">

        <decl_stmt pos:start="21:9" pos:end="21:39"><decl pos:start="21:9" pos:end="21:38"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">int64_t</name></type> <name pos:start="21:17" pos:end="21:19">pos</name> <init pos:start="21:21" pos:end="21:38">= <expr pos:start="21:23" pos:end="21:38"><call pos:start="21:23" pos:end="21:38"><name pos:start="21:23" pos:end="21:31">avio_tell</name><argument_list pos:start="21:32" pos:end="21:38">(<argument pos:start="21:33" pos:end="21:37"><expr pos:start="21:33" pos:end="21:37"><name pos:start="21:33" pos:end="21:37"><name pos:start="21:33" pos:end="21:33">s</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:37">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:21"><decl pos:start="23:9" pos:end="23:20"><type pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:15">uint8_t</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:20">buf</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:32"><decl pos:start="25:9" pos:end="25:20"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:20">buf_size</name></decl>, <decl pos:start="25:23" pos:end="25:31"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:23" pos:end="25:31">moov_size</name></decl>;</decl_stmt>



        <for pos:start="29:9" pos:end="33:22">for <control pos:start="29:13" pos:end="29:45">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:40"><expr pos:start="29:21" pos:end="29:39"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:39"><name pos:start="29:25" pos:end="29:27">mov</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:39">nb_streams</name></name></expr>;</condition> <incr pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><name pos:start="29:42" pos:end="29:42">i</name><operator pos:start="29:43" pos:end="29:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:13" pos:end="33:22"><block_content pos:start="31:13" pos:end="33:22">

            <if_stmt pos:start="31:13" pos:end="33:22"><if pos:start="31:13" pos:end="33:22">if <condition pos:start="31:16" pos:end="31:38">(<expr pos:start="31:17" pos:end="31:37"><operator pos:start="31:17" pos:end="31:17">!</operator><name pos:start="31:18" pos:end="31:31"><name pos:start="31:18" pos:end="31:20">mov</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:28">tracks</name><index pos:start="31:29" pos:end="31:31">[<expr pos:start="31:30" pos:end="31:30"><name pos:start="31:30" pos:end="31:30">i</name></expr>]</index></name><operator pos:start="31:32" pos:end="31:32">.</operator><name pos:start="31:33" pos:end="31:37">entry</name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:22"><block_content pos:start="33:17" pos:end="33:22">

                <break pos:start="33:17" pos:end="33:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>

        <comment type="block" pos:start="35:9" pos:end="35:70">/* Don't write the initial moov unless all tracks have data */</comment>

        <if_stmt pos:start="37:9" pos:end="39:21"><if pos:start="37:9" pos:end="39:21">if <condition pos:start="37:12" pos:end="37:32">(<expr pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:13">i</name> <operator pos:start="37:15" pos:end="37:15">&lt;</operator> <name pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:19">mov</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:31">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <return pos:start="39:13" pos:end="39:21">return <expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:17">moov_size</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:36"><name pos:start="43:21" pos:end="43:33">get_moov_size</name><argument_list pos:start="43:34" pos:end="43:36">(<argument pos:start="43:35" pos:end="43:35"><expr pos:start="43:35" pos:end="43:35"><name pos:start="43:35" pos:end="43:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="45:9" pos:end="47:61">for <control pos:start="45:13" pos:end="45:45">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:40"><expr pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:21">i</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <name pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:27">mov</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:39">nb_streams</name></name></expr>;</condition> <incr pos:start="45:42" pos:end="45:44"><expr pos:start="45:42" pos:end="45:44"><name pos:start="45:42" pos:end="45:42">i</name><operator pos:start="45:43" pos:end="45:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:13" pos:end="47:61"><block_content pos:start="47:13" pos:end="47:61">

            <expr_stmt pos:start="47:13" pos:end="47:61"><expr pos:start="47:13" pos:end="47:60"><name pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:15">mov</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:23">tracks</name><index pos:start="47:24" pos:end="47:26">[<expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">i</name></expr>]</index></name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:38">data_offset</name> <operator pos:start="47:40" pos:end="47:40">=</operator> <name pos:start="47:42" pos:end="47:44">pos</name> <operator pos:start="47:46" pos:end="47:46">+</operator> <name pos:start="47:48" pos:end="47:56">moov_size</name> <operator pos:start="47:58" pos:end="47:58">+</operator> <literal type="number" pos:start="47:60" pos:end="47:60">8</literal></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="51:9" pos:end="53:47"><if pos:start="51:9" pos:end="53:47">if <condition pos:start="51:12" pos:end="51:48">(<expr pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:15">mov</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:22">flags</name></name> <operator pos:start="51:24" pos:end="51:24">&amp;</operator> <name pos:start="51:26" pos:end="51:47">FF_MOV_FLAG_DELAY_MOOV</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:47"><block_content pos:start="53:13" pos:end="53:47">

            <expr_stmt pos:start="53:13" pos:end="53:47"><expr pos:start="53:13" pos:end="53:46"><call pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:36">mov_write_identification</name><argument_list pos:start="53:37" pos:end="53:46">(<argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:38">s</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:42">pb</name></name></expr></argument>, <argument pos:start="53:45" pos:end="53:45"><expr pos:start="53:45" pos:end="53:45"><name pos:start="53:45" pos:end="53:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:42"><expr pos:start="55:9" pos:end="55:41"><call pos:start="55:9" pos:end="55:41"><name pos:start="55:9" pos:end="55:26">mov_write_moov_tag</name><argument_list pos:start="55:27" pos:end="55:41">(<argument pos:start="55:28" pos:end="55:32"><expr pos:start="55:28" pos:end="55:32"><name pos:start="55:28" pos:end="55:32"><name pos:start="55:28" pos:end="55:28">s</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:32">pb</name></name></expr></argument>, <argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><name pos:start="55:35" pos:end="55:37">mov</name></expr></argument>, <argument pos:start="55:40" pos:end="55:40"><expr pos:start="55:40" pos:end="55:40"><name pos:start="55:40" pos:end="55:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="71:9"><if pos:start="59:9" pos:end="71:9">if <condition pos:start="59:12" pos:end="59:48">(<expr pos:start="59:13" pos:end="59:47"><name pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:15">mov</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:22">flags</name></name> <operator pos:start="59:24" pos:end="59:24">&amp;</operator> <name pos:start="59:26" pos:end="59:47">FF_MOV_FLAG_DELAY_MOOV</name></expr>)</condition> <block pos:start="59:50" pos:end="71:9">{<block_content pos:start="61:13" pos:end="69:21">

            <if_stmt pos:start="61:13" pos:end="63:58"><if pos:start="61:13" pos:end="63:58">if <condition pos:start="61:16" pos:end="61:51">(<expr pos:start="61:17" pos:end="61:50"><name pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:19">mov</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:26">flags</name></name> <operator pos:start="61:28" pos:end="61:28">&amp;</operator> <name pos:start="61:30" pos:end="61:50">FF_MOV_FLAG_FASTSTART</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:58"><block_content pos:start="63:17" pos:end="63:58">

                <expr_stmt pos:start="63:17" pos:end="63:58"><expr pos:start="63:17" pos:end="63:57"><name pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:19">mov</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:38">reserved_moov_pos</name></name> <operator pos:start="63:40" pos:end="63:40">=</operator> <call pos:start="63:42" pos:end="63:57"><name pos:start="63:42" pos:end="63:50">avio_tell</name><argument_list pos:start="63:51" pos:end="63:57">(<argument pos:start="63:52" pos:end="63:56"><expr pos:start="63:52" pos:end="63:56"><name pos:start="63:52" pos:end="63:56"><name pos:start="63:52" pos:end="63:52">s</name><operator pos:start="63:53" pos:end="63:54">-&gt;</operator><name pos:start="63:55" pos:end="63:56">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:30"><expr pos:start="65:13" pos:end="65:29"><call pos:start="65:13" pos:end="65:29"><name pos:start="65:13" pos:end="65:22">avio_flush</name><argument_list pos:start="65:23" pos:end="65:29">(<argument pos:start="65:24" pos:end="65:28"><expr pos:start="65:24" pos:end="65:28"><name pos:start="65:24" pos:end="65:28"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:28">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:29"><expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:15">mov</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:26">fragments</name></name><operator pos:start="67:27" pos:end="67:28">++</operator></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:21">return <expr pos:start="69:20" pos:end="69:20"><literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:59"><expr pos:start="75:9" pos:end="75:58"><name pos:start="75:9" pos:end="75:16">buf_size</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="75:58"><name pos:start="75:20" pos:end="75:37">avio_close_dyn_buf</name><argument_list pos:start="75:38" pos:end="75:58">(<argument pos:start="75:39" pos:end="75:51"><expr pos:start="75:39" pos:end="75:51"><name pos:start="75:39" pos:end="75:51"><name pos:start="75:39" pos:end="75:41">mov</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:51">mdat_buf</name></name></expr></argument>, <argument pos:start="75:54" pos:end="75:57"><expr pos:start="75:54" pos:end="75:57"><operator pos:start="75:54" pos:end="75:54">&amp;</operator><name pos:start="75:55" pos:end="75:57">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:29"><expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:11">mov</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:21">mdat_buf</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:28">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:39"><expr pos:start="79:9" pos:end="79:38"><call pos:start="79:9" pos:end="79:38"><name pos:start="79:9" pos:end="79:17">avio_wb32</name><argument_list pos:start="79:18" pos:end="79:38">(<argument pos:start="79:19" pos:end="79:23"><expr pos:start="79:19" pos:end="79:23"><name pos:start="79:19" pos:end="79:23"><name pos:start="79:19" pos:end="79:19">s</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:23">pb</name></name></expr></argument>, <argument pos:start="79:26" pos:end="79:37"><expr pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:33">buf_size</name> <operator pos:start="79:35" pos:end="79:35">+</operator> <literal type="number" pos:start="79:37" pos:end="79:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><call pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:20">ffio_wfourcc</name><argument_list pos:start="81:21" pos:end="81:35">(<argument pos:start="81:22" pos:end="81:26"><expr pos:start="81:22" pos:end="81:26"><name pos:start="81:22" pos:end="81:26"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:26">pb</name></name></expr></argument>, <argument pos:start="81:29" pos:end="81:34"><expr pos:start="81:29" pos:end="81:34"><literal type="string" pos:start="81:29" pos:end="81:34">"mdat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:41"><expr pos:start="83:9" pos:end="83:40"><call pos:start="83:9" pos:end="83:40"><name pos:start="83:9" pos:end="83:18">avio_write</name><argument_list pos:start="83:19" pos:end="83:40">(<argument pos:start="83:20" pos:end="83:24"><expr pos:start="83:20" pos:end="83:24"><name pos:start="83:20" pos:end="83:24"><name pos:start="83:20" pos:end="83:20">s</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:24">pb</name></name></expr></argument>, <argument pos:start="83:27" pos:end="83:29"><expr pos:start="83:27" pos:end="83:29"><name pos:start="83:27" pos:end="83:29">buf</name></expr></argument>, <argument pos:start="83:32" pos:end="83:39"><expr pos:start="83:32" pos:end="83:39"><name pos:start="83:32" pos:end="83:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:21"><expr pos:start="85:9" pos:end="85:20"><call pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:15">av_free</name><argument_list pos:start="85:16" pos:end="85:20">(<argument pos:start="85:17" pos:end="85:19"><expr pos:start="85:17" pos:end="85:19"><name pos:start="85:17" pos:end="85:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:25"><expr pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:11">mov</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:22">fragments</name></name><operator pos:start="89:23" pos:end="89:24">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:11">mov</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:22">mdat_size</name></name> <operator pos:start="91:24" pos:end="91:24">=</operator> <literal type="number" pos:start="91:26" pos:end="91:26">0</literal></expr>;</expr_stmt>

        <for pos:start="93:9" pos:end="105:9">for <control pos:start="93:13" pos:end="93:45">(<init pos:start="93:14" pos:end="93:19"><expr pos:start="93:14" pos:end="93:18"><name pos:start="93:14" pos:end="93:14">i</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>;</init> <condition pos:start="93:21" pos:end="93:40"><expr pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:21">i</name> <operator pos:start="93:23" pos:end="93:23">&lt;</operator> <name pos:start="93:25" pos:end="93:39"><name pos:start="93:25" pos:end="93:27">mov</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:39">nb_streams</name></name></expr>;</condition> <incr pos:start="93:42" pos:end="93:44"><expr pos:start="93:42" pos:end="93:44"><name pos:start="93:42" pos:end="93:42">i</name><operator pos:start="93:43" pos:end="93:44">++</operator></expr></incr>)</control> <block pos:start="93:47" pos:end="105:9">{<block_content pos:start="95:13" pos:end="103:37">

            <if_stmt pos:start="95:13" pos:end="101:75"><if pos:start="95:13" pos:end="101:75">if <condition pos:start="95:16" pos:end="95:37">(<expr pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:30"><name pos:start="95:17" pos:end="95:19">mov</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:27">tracks</name><index pos:start="95:28" pos:end="95:30">[<expr pos:start="95:29" pos:end="95:29"><name pos:start="95:29" pos:end="95:29">i</name></expr>]</index></name><operator pos:start="95:31" pos:end="95:31">.</operator><name pos:start="95:32" pos:end="95:36">entry</name></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="101:75"><block_content pos:start="97:17" pos:end="101:75">

                <expr_stmt pos:start="97:17" pos:end="101:75"><expr pos:start="97:17" pos:end="101:74"><name pos:start="97:17" pos:end="97:30"><name pos:start="97:17" pos:end="97:19">mov</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:27">tracks</name><index pos:start="97:28" pos:end="97:30">[<expr pos:start="97:29" pos:end="97:29"><name pos:start="97:29" pos:end="97:29">i</name></expr>]</index></name><operator pos:start="97:31" pos:end="97:31">.</operator><name pos:start="97:32" pos:end="97:41">frag_start</name> <operator pos:start="97:43" pos:end="97:44">+=</operator> <name pos:start="97:46" pos:end="97:59"><name pos:start="97:46" pos:end="97:48">mov</name><operator pos:start="97:49" pos:end="97:50">-&gt;</operator><name pos:start="97:51" pos:end="97:56">tracks</name><index pos:start="97:57" pos:end="97:59">[<expr pos:start="97:58" pos:end="97:58"><name pos:start="97:58" pos:end="97:58">i</name></expr>]</index></name><operator pos:start="97:60" pos:end="97:60">.</operator><name pos:start="97:61" pos:end="97:69">start_dts</name> <operator pos:start="97:71" pos:end="97:71">+</operator>

                                             <name pos:start="99:46" pos:end="99:59"><name pos:start="99:46" pos:end="99:48">mov</name><operator pos:start="99:49" pos:end="99:50">-&gt;</operator><name pos:start="99:51" pos:end="99:56">tracks</name><index pos:start="99:57" pos:end="99:59">[<expr pos:start="99:58" pos:end="99:58"><name pos:start="99:58" pos:end="99:58">i</name></expr>]</index></name><operator pos:start="99:60" pos:end="99:60">.</operator><name pos:start="99:61" pos:end="99:74">track_duration</name> <operator pos:start="99:76" pos:end="99:76">-</operator>

                                             <name pos:start="101:46" pos:end="101:59"><name pos:start="101:46" pos:end="101:48">mov</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:56">tracks</name><index pos:start="101:57" pos:end="101:59">[<expr pos:start="101:58" pos:end="101:58"><name pos:start="101:58" pos:end="101:58">i</name></expr>]</index></name><operator pos:start="101:60" pos:end="101:60">.</operator><name pos:start="101:61" pos:end="101:70"><name pos:start="101:61" pos:end="101:67">cluster</name><index pos:start="101:68" pos:end="101:70">[<expr pos:start="101:69" pos:end="101:69"><literal type="number" pos:start="101:69" pos:end="101:69">0</literal></expr>]</index></name><operator pos:start="101:71" pos:end="101:71">.</operator><name pos:start="101:72" pos:end="101:74">dts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:37"><expr pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:26"><name pos:start="103:13" pos:end="103:15">mov</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:23">tracks</name><index pos:start="103:24" pos:end="103:26">[<expr pos:start="103:25" pos:end="103:25"><name pos:start="103:25" pos:end="103:25">i</name></expr>]</index></name><operator pos:start="103:27" pos:end="103:27">.</operator><name pos:start="103:28" pos:end="103:32">entry</name> <operator pos:start="103:34" pos:end="103:34">=</operator> <literal type="number" pos:start="103:36" pos:end="103:36">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="107:9" pos:end="107:26"><expr pos:start="107:9" pos:end="107:25"><call pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:18">avio_flush</name><argument_list pos:start="107:19" pos:end="107:25">(<argument pos:start="107:20" pos:end="107:24"><expr pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:20">s</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:24">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:17">return <expr pos:start="109:16" pos:end="109:16"><literal type="number" pos:start="109:16" pos:end="109:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="115:5" pos:end="137:5">for <control pos:start="115:9" pos:end="115:41">(<init pos:start="115:10" pos:end="115:15"><expr pos:start="115:10" pos:end="115:14"><name pos:start="115:10" pos:end="115:10">i</name> <operator pos:start="115:12" pos:end="115:12">=</operator> <literal type="number" pos:start="115:14" pos:end="115:14">0</literal></expr>;</init> <condition pos:start="115:17" pos:end="115:36"><expr pos:start="115:17" pos:end="115:35"><name pos:start="115:17" pos:end="115:17">i</name> <operator pos:start="115:19" pos:end="115:19">&lt;</operator> <name pos:start="115:21" pos:end="115:35"><name pos:start="115:21" pos:end="115:23">mov</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:35">nb_streams</name></name></expr>;</condition> <incr pos:start="115:38" pos:end="115:40"><expr pos:start="115:38" pos:end="115:40"><name pos:start="115:38" pos:end="115:38">i</name><operator pos:start="115:39" pos:end="115:40">++</operator></expr></incr>)</control> <block pos:start="115:43" pos:end="137:5">{<block_content pos:start="117:9" pos:end="135:28">

        <decl_stmt pos:start="117:9" pos:end="117:42"><decl pos:start="117:9" pos:end="117:41"><type pos:start="117:9" pos:end="117:18"><name pos:start="117:9" pos:end="117:16">MOVTrack</name> <modifier pos:start="117:18" pos:end="117:18">*</modifier></type><name pos:start="117:19" pos:end="117:23">track</name> <init pos:start="117:25" pos:end="117:41">= <expr pos:start="117:27" pos:end="117:41"><operator pos:start="117:27" pos:end="117:27">&amp;</operator><name pos:start="117:28" pos:end="117:41"><name pos:start="117:28" pos:end="117:30">mov</name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:38">tracks</name><index pos:start="117:39" pos:end="117:41">[<expr pos:start="117:40" pos:end="117:40"><name pos:start="117:40" pos:end="117:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="119:9" pos:end="125:43"><if pos:start="119:9" pos:end="121:35">if <condition pos:start="119:12" pos:end="119:51">(<expr pos:start="119:13" pos:end="119:50"><name pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:15">mov</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:22">flags</name></name> <operator pos:start="119:24" pos:end="119:24">&amp;</operator> <name pos:start="119:26" pos:end="119:50">FF_MOV_FLAG_SEPARATE_MOOF</name></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:35"><block_content pos:start="121:13" pos:end="121:35">

            <expr_stmt pos:start="121:13" pos:end="121:35"><expr pos:start="121:13" pos:end="121:34"><name pos:start="121:13" pos:end="121:30"><name pos:start="121:13" pos:end="121:17">track</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:30">data_offset</name></name> <operator pos:start="121:32" pos:end="121:32">=</operator> <literal type="number" pos:start="121:34" pos:end="121:34">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="123:9" pos:end="125:43">else<block type="pseudo" pos:start="125:13" pos:end="125:43"><block_content pos:start="125:13" pos:end="125:43">

            <expr_stmt pos:start="125:13" pos:end="125:43"><expr pos:start="125:13" pos:end="125:42"><name pos:start="125:13" pos:end="125:30"><name pos:start="125:13" pos:end="125:17">track</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:30">data_offset</name></name> <operator pos:start="125:32" pos:end="125:32">=</operator> <name pos:start="125:34" pos:end="125:42">mdat_size</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="127:9" pos:end="129:21"><if pos:start="127:9" pos:end="129:21">if <condition pos:start="127:12" pos:end="127:29">(<expr pos:start="127:13" pos:end="127:28"><operator pos:start="127:13" pos:end="127:13">!</operator><name pos:start="127:14" pos:end="127:28"><name pos:start="127:14" pos:end="127:18">track</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:28">mdat_buf</name></name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:21"><block_content pos:start="129:13" pos:end="129:21">

            <continue pos:start="129:13" pos:end="129:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:48"><expr pos:start="131:9" pos:end="131:47"><name pos:start="131:9" pos:end="131:17">mdat_size</name> <operator pos:start="131:19" pos:end="131:20">+=</operator> <call pos:start="131:22" pos:end="131:47"><name pos:start="131:22" pos:end="131:30">avio_tell</name><argument_list pos:start="131:31" pos:end="131:47">(<argument pos:start="131:32" pos:end="131:46"><expr pos:start="131:32" pos:end="131:46"><name pos:start="131:32" pos:end="131:46"><name pos:start="131:32" pos:end="131:36">track</name><operator pos:start="131:37" pos:end="131:38">-&gt;</operator><name pos:start="131:39" pos:end="131:46">mdat_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="135:28"><if pos:start="133:9" pos:end="135:28">if <condition pos:start="133:12" pos:end="133:28">(<expr pos:start="133:13" pos:end="133:27"><name pos:start="133:13" pos:end="133:23">first_track</name> <operator pos:start="133:25" pos:end="133:25">&lt;</operator> <literal type="number" pos:start="133:27" pos:end="133:27">0</literal></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:28"><block_content pos:start="135:13" pos:end="135:28">

            <expr_stmt pos:start="135:13" pos:end="135:28"><expr pos:start="135:13" pos:end="135:27"><name pos:start="135:13" pos:end="135:23">first_track</name> <operator pos:start="135:25" pos:end="135:25">=</operator> <name pos:start="135:27" pos:end="135:27">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="141:5" pos:end="143:17"><if pos:start="141:5" pos:end="143:17">if <condition pos:start="141:8" pos:end="141:19">(<expr pos:start="141:9" pos:end="141:18"><operator pos:start="141:9" pos:end="141:9">!</operator><name pos:start="141:10" pos:end="141:18">mdat_size</name></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:17"><block_content pos:start="143:9" pos:end="143:17">

        <return pos:start="143:9" pos:end="143:17">return <expr pos:start="143:16" pos:end="143:16"><literal type="number" pos:start="143:16" pos:end="143:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="147:5" pos:end="223:5">for <control pos:start="147:9" pos:end="147:41">(<init pos:start="147:10" pos:end="147:15"><expr pos:start="147:10" pos:end="147:14"><name pos:start="147:10" pos:end="147:10">i</name> <operator pos:start="147:12" pos:end="147:12">=</operator> <literal type="number" pos:start="147:14" pos:end="147:14">0</literal></expr>;</init> <condition pos:start="147:17" pos:end="147:36"><expr pos:start="147:17" pos:end="147:35"><name pos:start="147:17" pos:end="147:17">i</name> <operator pos:start="147:19" pos:end="147:19">&lt;</operator> <name pos:start="147:21" pos:end="147:35"><name pos:start="147:21" pos:end="147:23">mov</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:35">nb_streams</name></name></expr>;</condition> <incr pos:start="147:38" pos:end="147:40"><expr pos:start="147:38" pos:end="147:40"><name pos:start="147:38" pos:end="147:38">i</name><operator pos:start="147:39" pos:end="147:40">++</operator></expr></incr>)</control> <block pos:start="147:43" pos:end="223:5">{<block_content pos:start="149:9" pos:end="221:21">

        <decl_stmt pos:start="149:9" pos:end="149:42"><decl pos:start="149:9" pos:end="149:41"><type pos:start="149:9" pos:end="149:18"><name pos:start="149:9" pos:end="149:16">MOVTrack</name> <modifier pos:start="149:18" pos:end="149:18">*</modifier></type><name pos:start="149:19" pos:end="149:23">track</name> <init pos:start="149:25" pos:end="149:41">= <expr pos:start="149:27" pos:end="149:41"><operator pos:start="149:27" pos:end="149:27">&amp;</operator><name pos:start="149:28" pos:end="149:41"><name pos:start="149:28" pos:end="149:30">mov</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:38">tracks</name><index pos:start="149:39" pos:end="149:41">[<expr pos:start="149:40" pos:end="149:40"><name pos:start="149:40" pos:end="149:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="151:9" pos:end="151:55"><decl pos:start="151:9" pos:end="151:20"><type pos:start="151:9" pos:end="151:11"><name pos:start="151:9" pos:end="151:11">int</name></type> <name pos:start="151:13" pos:end="151:20">buf_size</name></decl>, <decl pos:start="151:23" pos:end="151:36"><type ref="prev" pos:start="151:9" pos:end="151:11"/><name pos:start="151:23" pos:end="151:32">write_moof</name> <init pos:start="151:34" pos:end="151:36">= <expr pos:start="151:36" pos:end="151:36"><literal type="number" pos:start="151:36" pos:end="151:36">1</literal></expr></init></decl>, <decl pos:start="151:39" pos:end="151:54"><type ref="prev" pos:start="151:9" pos:end="151:11"/><name pos:start="151:39" pos:end="151:49">moof_tracks</name> <init pos:start="151:51" pos:end="151:54">= <expr pos:start="151:53" pos:end="151:54"><operator pos:start="151:53" pos:end="151:53">-</operator><literal type="number" pos:start="151:54" pos:end="151:54">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="153:9" pos:end="153:21"><decl pos:start="153:9" pos:end="153:20"><type pos:start="153:9" pos:end="153:17"><name pos:start="153:9" pos:end="153:15">uint8_t</name> <modifier pos:start="153:17" pos:end="153:17">*</modifier></type><name pos:start="153:18" pos:end="153:20">buf</name></decl>;</decl_stmt>

        <decl_stmt pos:start="155:9" pos:end="155:29"><decl pos:start="155:9" pos:end="155:28"><type pos:start="155:9" pos:end="155:15"><name pos:start="155:9" pos:end="155:15">int64_t</name></type> <name pos:start="155:17" pos:end="155:24">duration</name> <init pos:start="155:26" pos:end="155:28">= <expr pos:start="155:28" pos:end="155:28"><literal type="number" pos:start="155:28" pos:end="155:28">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="159:9" pos:end="163:45"><if pos:start="159:9" pos:end="163:45">if <condition pos:start="159:12" pos:end="159:25">(<expr pos:start="159:13" pos:end="159:24"><name pos:start="159:13" pos:end="159:24"><name pos:start="159:13" pos:end="159:17">track</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:24">entry</name></name></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="163:45"><block_content pos:start="161:13" pos:end="163:45">

            <expr_stmt pos:start="161:13" pos:end="163:45"><expr pos:start="161:13" pos:end="163:44"><name pos:start="161:13" pos:end="161:20">duration</name> <operator pos:start="161:22" pos:end="161:22">=</operator> <name pos:start="161:24" pos:end="161:39"><name pos:start="161:24" pos:end="161:28">track</name><operator pos:start="161:29" pos:end="161:30">-&gt;</operator><name pos:start="161:31" pos:end="161:39">start_dts</name></name> <operator pos:start="161:41" pos:end="161:41">+</operator> <name pos:start="161:43" pos:end="161:63"><name pos:start="161:43" pos:end="161:47">track</name><operator pos:start="161:48" pos:end="161:49">-&gt;</operator><name pos:start="161:50" pos:end="161:63">track_duration</name></name> <operator pos:start="161:65" pos:end="161:65">-</operator>

                       <name pos:start="163:24" pos:end="163:40"><name pos:start="163:24" pos:end="163:28">track</name><operator pos:start="163:29" pos:end="163:30">-&gt;</operator><name pos:start="163:31" pos:end="163:37">cluster</name><index pos:start="163:38" pos:end="163:40">[<expr pos:start="163:39" pos:end="163:39"><literal type="number" pos:start="163:39" pos:end="163:39">0</literal></expr>]</index></name><operator pos:start="163:41" pos:end="163:41">.</operator><name pos:start="163:42" pos:end="163:44">dts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="165:9" pos:end="179:9"><if pos:start="165:9" pos:end="175:9">if <condition pos:start="165:12" pos:end="165:51">(<expr pos:start="165:13" pos:end="165:50"><name pos:start="165:13" pos:end="165:22"><name pos:start="165:13" pos:end="165:15">mov</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:22">flags</name></name> <operator pos:start="165:24" pos:end="165:24">&amp;</operator> <name pos:start="165:26" pos:end="165:50">FF_MOV_FLAG_SEPARATE_MOOF</name></expr>)</condition> <block pos:start="165:53" pos:end="175:9">{<block_content pos:start="167:13" pos:end="173:28">

            <if_stmt pos:start="167:13" pos:end="169:25"><if pos:start="167:13" pos:end="169:25">if <condition pos:start="167:16" pos:end="167:33">(<expr pos:start="167:17" pos:end="167:32"><operator pos:start="167:17" pos:end="167:17">!</operator><name pos:start="167:18" pos:end="167:32"><name pos:start="167:18" pos:end="167:22">track</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:32">mdat_buf</name></name></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:25"><block_content pos:start="169:17" pos:end="169:25">

                <continue pos:start="169:17" pos:end="169:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:51"><expr pos:start="171:13" pos:end="171:50"><name pos:start="171:13" pos:end="171:21">mdat_size</name> <operator pos:start="171:23" pos:end="171:23">=</operator> <call pos:start="171:25" pos:end="171:50"><name pos:start="171:25" pos:end="171:33">avio_tell</name><argument_list pos:start="171:34" pos:end="171:50">(<argument pos:start="171:35" pos:end="171:49"><expr pos:start="171:35" pos:end="171:49"><name pos:start="171:35" pos:end="171:49"><name pos:start="171:35" pos:end="171:39">track</name><operator pos:start="171:40" pos:end="171:41">-&gt;</operator><name pos:start="171:42" pos:end="171:49">mdat_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:28"><expr pos:start="173:13" pos:end="173:27"><name pos:start="173:13" pos:end="173:23">moof_tracks</name> <operator pos:start="173:25" pos:end="173:25">=</operator> <name pos:start="173:27" pos:end="173:27">i</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="175:11" pos:end="179:9">else <block pos:start="175:16" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:42">

            <expr_stmt pos:start="177:13" pos:end="177:42"><expr pos:start="177:13" pos:end="177:41"><name pos:start="177:13" pos:end="177:22">write_moof</name> <operator pos:start="177:24" pos:end="177:24">=</operator> <name pos:start="177:26" pos:end="177:26">i</name> <operator pos:start="177:28" pos:end="177:29">==</operator> <name pos:start="177:31" pos:end="177:41">first_track</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="183:9" pos:end="199:9"><if pos:start="183:9" pos:end="199:9">if <condition pos:start="183:12" pos:end="183:23">(<expr pos:start="183:13" pos:end="183:22"><name pos:start="183:13" pos:end="183:22">write_moof</name></expr>)</condition> <block pos:start="183:25" pos:end="199:9">{<block_content pos:start="185:13" pos:end="197:40">

            <expr_stmt pos:start="185:13" pos:end="185:30"><expr pos:start="185:13" pos:end="185:29"><call pos:start="185:13" pos:end="185:29"><name pos:start="185:13" pos:end="185:22">avio_flush</name><argument_list pos:start="185:23" pos:end="185:29">(<argument pos:start="185:24" pos:end="185:28"><expr pos:start="185:24" pos:end="185:28"><name pos:start="185:24" pos:end="185:28"><name pos:start="185:24" pos:end="185:24">s</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:28">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="189:13" pos:end="189:67"><expr pos:start="189:13" pos:end="189:66"><call pos:start="189:13" pos:end="189:66"><name pos:start="189:13" pos:end="189:30">mov_write_moof_tag</name><argument_list pos:start="189:31" pos:end="189:66">(<argument pos:start="189:32" pos:end="189:36"><expr pos:start="189:32" pos:end="189:36"><name pos:start="189:32" pos:end="189:36"><name pos:start="189:32" pos:end="189:32">s</name><operator pos:start="189:33" pos:end="189:34">-&gt;</operator><name pos:start="189:35" pos:end="189:36">pb</name></name></expr></argument>, <argument pos:start="189:39" pos:end="189:41"><expr pos:start="189:39" pos:end="189:41"><name pos:start="189:39" pos:end="189:41">mov</name></expr></argument>, <argument pos:start="189:44" pos:end="189:54"><expr pos:start="189:44" pos:end="189:54"><name pos:start="189:44" pos:end="189:54">moof_tracks</name></expr></argument>, <argument pos:start="189:57" pos:end="189:65"><expr pos:start="189:57" pos:end="189:65"><name pos:start="189:57" pos:end="189:65">mdat_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:29"><expr pos:start="191:13" pos:end="191:28"><name pos:start="191:13" pos:end="191:26"><name pos:start="191:13" pos:end="191:15">mov</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:26">fragments</name></name><operator pos:start="191:27" pos:end="191:28">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="195:13" pos:end="195:44"><expr pos:start="195:13" pos:end="195:43"><call pos:start="195:13" pos:end="195:43"><name pos:start="195:13" pos:end="195:21">avio_wb32</name><argument_list pos:start="195:22" pos:end="195:43">(<argument pos:start="195:23" pos:end="195:27"><expr pos:start="195:23" pos:end="195:27"><name pos:start="195:23" pos:end="195:27"><name pos:start="195:23" pos:end="195:23">s</name><operator pos:start="195:24" pos:end="195:25">-&gt;</operator><name pos:start="195:26" pos:end="195:27">pb</name></name></expr></argument>, <argument pos:start="195:30" pos:end="195:42"><expr pos:start="195:30" pos:end="195:42"><name pos:start="195:30" pos:end="195:38">mdat_size</name> <operator pos:start="195:40" pos:end="195:40">+</operator> <literal type="number" pos:start="195:42" pos:end="195:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:40"><expr pos:start="197:13" pos:end="197:39"><call pos:start="197:13" pos:end="197:39"><name pos:start="197:13" pos:end="197:24">ffio_wfourcc</name><argument_list pos:start="197:25" pos:end="197:39">(<argument pos:start="197:26" pos:end="197:30"><expr pos:start="197:26" pos:end="197:30"><name pos:start="197:26" pos:end="197:30"><name pos:start="197:26" pos:end="197:26">s</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:30">pb</name></name></expr></argument>, <argument pos:start="197:33" pos:end="197:38"><expr pos:start="197:33" pos:end="197:38"><literal type="string" pos:start="197:33" pos:end="197:38">"mdat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="203:9" pos:end="205:42"><if pos:start="203:9" pos:end="205:42">if <condition pos:start="203:12" pos:end="203:25">(<expr pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:17">track</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:24">entry</name></name></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:42"><block_content pos:start="205:13" pos:end="205:42">

            <expr_stmt pos:start="205:13" pos:end="205:42"><expr pos:start="205:13" pos:end="205:41"><name pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:17">track</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:29">frag_start</name></name> <operator pos:start="205:31" pos:end="205:32">+=</operator> <name pos:start="205:34" pos:end="205:41">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:25"><expr pos:start="207:9" pos:end="207:24"><name pos:start="207:9" pos:end="207:20"><name pos:start="207:9" pos:end="207:13">track</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:20">entry</name></name> <operator pos:start="207:22" pos:end="207:22">=</operator> <literal type="number" pos:start="207:24" pos:end="207:24">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="211:21"><if pos:start="209:9" pos:end="211:21">if <condition pos:start="209:12" pos:end="209:29">(<expr pos:start="209:13" pos:end="209:28"><operator pos:start="209:13" pos:end="209:13">!</operator><name pos:start="209:14" pos:end="209:28"><name pos:start="209:14" pos:end="209:18">track</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:28">mdat_buf</name></name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:21"><block_content pos:start="211:13" pos:end="211:21">

            <continue pos:start="211:13" pos:end="211:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:61"><expr pos:start="213:9" pos:end="213:60"><name pos:start="213:9" pos:end="213:16">buf_size</name> <operator pos:start="213:18" pos:end="213:18">=</operator> <call pos:start="213:20" pos:end="213:60"><name pos:start="213:20" pos:end="213:37">avio_close_dyn_buf</name><argument_list pos:start="213:38" pos:end="213:60">(<argument pos:start="213:39" pos:end="213:53"><expr pos:start="213:39" pos:end="213:53"><name pos:start="213:39" pos:end="213:53"><name pos:start="213:39" pos:end="213:43">track</name><operator pos:start="213:44" pos:end="213:45">-&gt;</operator><name pos:start="213:46" pos:end="213:53">mdat_buf</name></name></expr></argument>, <argument pos:start="213:56" pos:end="213:59"><expr pos:start="213:56" pos:end="213:59"><operator pos:start="213:56" pos:end="213:56">&amp;</operator><name pos:start="213:57" pos:end="213:59">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:31"><expr pos:start="215:9" pos:end="215:30"><name pos:start="215:9" pos:end="215:23"><name pos:start="215:9" pos:end="215:13">track</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:23">mdat_buf</name></name> <operator pos:start="215:25" pos:end="215:25">=</operator> <name pos:start="215:27" pos:end="215:30">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="219:9" pos:end="219:41"><expr pos:start="219:9" pos:end="219:40"><call pos:start="219:9" pos:end="219:40"><name pos:start="219:9" pos:end="219:18">avio_write</name><argument_list pos:start="219:19" pos:end="219:40">(<argument pos:start="219:20" pos:end="219:24"><expr pos:start="219:20" pos:end="219:24"><name pos:start="219:20" pos:end="219:24"><name pos:start="219:20" pos:end="219:20">s</name><operator pos:start="219:21" pos:end="219:22">-&gt;</operator><name pos:start="219:23" pos:end="219:24">pb</name></name></expr></argument>, <argument pos:start="219:27" pos:end="219:29"><expr pos:start="219:27" pos:end="219:29"><name pos:start="219:27" pos:end="219:29">buf</name></expr></argument>, <argument pos:start="219:32" pos:end="219:39"><expr pos:start="219:32" pos:end="219:39"><name pos:start="219:32" pos:end="219:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:21"><expr pos:start="221:9" pos:end="221:20"><call pos:start="221:9" pos:end="221:20"><name pos:start="221:9" pos:end="221:15">av_free</name><argument_list pos:start="221:16" pos:end="221:20">(<argument pos:start="221:17" pos:end="221:19"><expr pos:start="221:17" pos:end="221:19"><name pos:start="221:17" pos:end="221:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="227:5" pos:end="227:23"><expr pos:start="227:5" pos:end="227:22"><name pos:start="227:5" pos:end="227:18"><name pos:start="227:5" pos:end="227:7">mov</name><operator pos:start="227:8" pos:end="227:9">-&gt;</operator><name pos:start="227:10" pos:end="227:18">mdat_size</name></name> <operator pos:start="227:20" pos:end="227:20">=</operator> <literal type="number" pos:start="227:22" pos:end="227:22">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:22"><expr pos:start="231:5" pos:end="231:21"><call pos:start="231:5" pos:end="231:21"><name pos:start="231:5" pos:end="231:14">avio_flush</name><argument_list pos:start="231:15" pos:end="231:21">(<argument pos:start="231:16" pos:end="231:20"><expr pos:start="231:16" pos:end="231:20"><name pos:start="231:16" pos:end="231:20"><name pos:start="231:16" pos:end="231:16">s</name><operator pos:start="231:17" pos:end="231:18">-&gt;</operator><name pos:start="231:19" pos:end="231:20">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="233:5" pos:end="233:13">return <expr pos:start="233:12" pos:end="233:12"><literal type="number" pos:start="233:12" pos:end="233:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
