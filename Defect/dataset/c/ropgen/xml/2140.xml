<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2140.c" pos:tabs="8"><function pos:start="1:1" pos:end="82:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">cpudef_setfield</name><parameter_list pos:start="1:27" pos:end="1:75">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">name</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">str</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:66">void</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:74">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="82:1">{<block_content pos:start="5:5" pos:end="80:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">x86_def_t</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">def</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="70:5"><if pos:start="11:5" pos:end="16:5">if <condition pos:start="11:8" pos:end="11:30">(<expr pos:start="11:9" pos:end="11:29"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:29"><name pos:start="11:10" pos:end="11:15">strcmp</name><argument_list pos:start="11:16" pos:end="11:29">(<argument pos:start="11:17" pos:end="11:20"><expr pos:start="11:17" pos:end="11:20"><name pos:start="11:17" pos:end="11:20">name</name></expr></argument>, <argument pos:start="11:23" pos:end="11:28"><expr pos:start="11:23" pos:end="11:28"><literal type="string" pos:start="11:23" pos:end="11:28">"name"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:32" pos:end="16:5">{<block_content pos:start="14:9" pos:end="14:34">


        <expr_stmt pos:start="14:9" pos:end="14:34"><expr pos:start="14:9" pos:end="14:33"><name pos:start="14:9" pos:end="14:17"><name pos:start="14:9" pos:end="14:11">def</name><operator pos:start="14:12" pos:end="14:13">-&gt;</operator><name pos:start="14:14" pos:end="14:17">name</name></name> <operator pos:start="14:19" pos:end="14:19">=</operator> <call pos:start="14:21" pos:end="14:33"><name pos:start="14:21" pos:end="14:28">g_strdup</name><argument_list pos:start="14:29" pos:end="14:33">(<argument pos:start="14:30" pos:end="14:32"><expr pos:start="14:30" pos:end="14:32"><name pos:start="14:30" pos:end="14:32">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="16:7" pos:end="20:5">else if <condition pos:start="16:15" pos:end="16:41">(<expr pos:start="16:16" pos:end="16:40"><operator pos:start="16:16" pos:end="16:16">!</operator><call pos:start="16:17" pos:end="16:40"><name pos:start="16:17" pos:end="16:22">strcmp</name><argument_list pos:start="16:23" pos:end="16:40">(<argument pos:start="16:24" pos:end="16:27"><expr pos:start="16:24" pos:end="16:27"><name pos:start="16:24" pos:end="16:27">name</name></expr></argument>, <argument pos:start="16:30" pos:end="16:39"><expr pos:start="16:30" pos:end="16:39"><literal type="string" pos:start="16:30" pos:end="16:39">"model_id"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:43" pos:end="20:5">{<block_content pos:start="18:9" pos:end="18:60">

        <expr_stmt pos:start="18:9" pos:end="18:60"><expr pos:start="18:9" pos:end="18:59"><call pos:start="18:9" pos:end="18:59"><name pos:start="18:9" pos:end="18:15">strncpy</name><argument_list pos:start="18:16" pos:end="18:59">(<argument pos:start="18:17" pos:end="18:29"><expr pos:start="18:17" pos:end="18:29"><name pos:start="18:17" pos:end="18:29"><name pos:start="18:17" pos:end="18:19">def</name><operator pos:start="18:20" pos:end="18:21">-&gt;</operator><name pos:start="18:22" pos:end="18:29">model_id</name></name></expr></argument>, <argument pos:start="18:32" pos:end="18:34"><expr pos:start="18:32" pos:end="18:34"><name pos:start="18:32" pos:end="18:34">str</name></expr></argument>, <argument pos:start="18:37" pos:end="18:58"><expr pos:start="18:37" pos:end="18:58"><sizeof pos:start="18:37" pos:end="18:58">sizeof <argument_list pos:start="18:44" pos:end="18:58">(<argument pos:start="18:45" pos:end="18:57"><expr pos:start="18:45" pos:end="18:57"><name pos:start="18:45" pos:end="18:57"><name pos:start="18:45" pos:end="18:47">def</name><operator pos:start="18:48" pos:end="18:49">-&gt;</operator><name pos:start="18:50" pos:end="18:57">model_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="20:7" pos:end="24:5">else if <condition pos:start="20:15" pos:end="20:38">(<expr pos:start="20:16" pos:end="20:37"><operator pos:start="20:16" pos:end="20:16">!</operator><call pos:start="20:17" pos:end="20:37"><name pos:start="20:17" pos:end="20:22">strcmp</name><argument_list pos:start="20:23" pos:end="20:37">(<argument pos:start="20:24" pos:end="20:27"><expr pos:start="20:24" pos:end="20:27"><name pos:start="20:24" pos:end="20:27">name</name></expr></argument>, <argument pos:start="20:30" pos:end="20:36"><expr pos:start="20:30" pos:end="20:36"><literal type="string" pos:start="20:30" pos:end="20:36">"level"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="20:40" pos:end="24:5">{<block_content pos:start="22:9" pos:end="22:41">

        <macro pos:start="22:9" pos:end="22:41"><name pos:start="22:9" pos:end="22:17">setscalar</name><argument_list pos:start="22:18" pos:end="22:41">(<argument pos:start="22:19" pos:end="22:29">&amp;def-&gt;level</argument>, <argument pos:start="22:32" pos:end="22:34">str</argument>, <argument pos:start="22:37" pos:end="22:40">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <if type="elseif" pos:start="24:7" pos:end="32:5">else if <condition pos:start="24:15" pos:end="24:39">(<expr pos:start="24:16" pos:end="24:38"><operator pos:start="24:16" pos:end="24:16">!</operator><call pos:start="24:17" pos:end="24:38"><name pos:start="24:17" pos:end="24:22">strcmp</name><argument_list pos:start="24:23" pos:end="24:38">(<argument pos:start="24:24" pos:end="24:27"><expr pos:start="24:24" pos:end="24:27"><name pos:start="24:24" pos:end="24:27">name</name></expr></argument>, <argument pos:start="24:30" pos:end="24:37"><expr pos:start="24:30" pos:end="24:37"><literal type="string" pos:start="24:30" pos:end="24:37">"vendor"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="24:41" pos:end="32:5">{<block_content pos:start="26:9" pos:end="30:38">

        <expr_stmt pos:start="26:9" pos:end="26:38"><expr pos:start="26:9" pos:end="26:37"><call pos:start="26:9" pos:end="26:37"><name pos:start="26:9" pos:end="26:13">cpyid</name><argument_list pos:start="26:14" pos:end="26:37">(<argument pos:start="26:15" pos:end="26:21"><expr pos:start="26:15" pos:end="26:21"><operator pos:start="26:15" pos:end="26:15">&amp;</operator><name pos:start="26:16" pos:end="26:21"><name pos:start="26:16" pos:end="26:18">str</name><index pos:start="26:19" pos:end="26:21">[<expr pos:start="26:20" pos:end="26:20"><literal type="number" pos:start="26:20" pos:end="26:20">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="26:24" pos:end="26:36"><expr pos:start="26:24" pos:end="26:36"><operator pos:start="26:24" pos:end="26:24">&amp;</operator><name pos:start="26:25" pos:end="26:36"><name pos:start="26:25" pos:end="26:27">def</name><operator pos:start="26:28" pos:end="26:29">-&gt;</operator><name pos:start="26:30" pos:end="26:36">vendor1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="28:9" pos:end="28:38"><expr pos:start="28:9" pos:end="28:37"><call pos:start="28:9" pos:end="28:37"><name pos:start="28:9" pos:end="28:13">cpyid</name><argument_list pos:start="28:14" pos:end="28:37">(<argument pos:start="28:15" pos:end="28:21"><expr pos:start="28:15" pos:end="28:21"><operator pos:start="28:15" pos:end="28:15">&amp;</operator><name pos:start="28:16" pos:end="28:21"><name pos:start="28:16" pos:end="28:18">str</name><index pos:start="28:19" pos:end="28:21">[<expr pos:start="28:20" pos:end="28:20"><literal type="number" pos:start="28:20" pos:end="28:20">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="28:24" pos:end="28:36"><expr pos:start="28:24" pos:end="28:36"><operator pos:start="28:24" pos:end="28:24">&amp;</operator><name pos:start="28:25" pos:end="28:36"><name pos:start="28:25" pos:end="28:27">def</name><operator pos:start="28:28" pos:end="28:29">-&gt;</operator><name pos:start="28:30" pos:end="28:36">vendor2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="30:9" pos:end="30:38"><expr pos:start="30:9" pos:end="30:37"><call pos:start="30:9" pos:end="30:37"><name pos:start="30:9" pos:end="30:13">cpyid</name><argument_list pos:start="30:14" pos:end="30:37">(<argument pos:start="30:15" pos:end="30:21"><expr pos:start="30:15" pos:end="30:21"><operator pos:start="30:15" pos:end="30:15">&amp;</operator><name pos:start="30:16" pos:end="30:21"><name pos:start="30:16" pos:end="30:18">str</name><index pos:start="30:19" pos:end="30:21">[<expr pos:start="30:20" pos:end="30:20"><literal type="number" pos:start="30:20" pos:end="30:20">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="30:24" pos:end="30:36"><expr pos:start="30:24" pos:end="30:36"><operator pos:start="30:24" pos:end="30:24">&amp;</operator><name pos:start="30:25" pos:end="30:36"><name pos:start="30:25" pos:end="30:27">def</name><operator pos:start="30:28" pos:end="30:29">-&gt;</operator><name pos:start="30:30" pos:end="30:36">vendor3</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="32:7" pos:end="36:5">else if <condition pos:start="32:15" pos:end="32:39">(<expr pos:start="32:16" pos:end="32:38"><operator pos:start="32:16" pos:end="32:16">!</operator><call pos:start="32:17" pos:end="32:38"><name pos:start="32:17" pos:end="32:22">strcmp</name><argument_list pos:start="32:23" pos:end="32:38">(<argument pos:start="32:24" pos:end="32:27"><expr pos:start="32:24" pos:end="32:27"><name pos:start="32:24" pos:end="32:27">name</name></expr></argument>, <argument pos:start="32:30" pos:end="32:37"><expr pos:start="32:30" pos:end="32:37"><literal type="string" pos:start="32:30" pos:end="32:37">"family"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="32:41" pos:end="36:5">{<block_content pos:start="34:9" pos:end="34:42">

        <macro pos:start="34:9" pos:end="34:42"><name pos:start="34:9" pos:end="34:17">setscalar</name><argument_list pos:start="34:18" pos:end="34:42">(<argument pos:start="34:19" pos:end="34:30">&amp;def-&gt;family</argument>, <argument pos:start="34:33" pos:end="34:35">str</argument>, <argument pos:start="34:38" pos:end="34:41">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <if type="elseif" pos:start="36:7" pos:end="40:5">else if <condition pos:start="36:15" pos:end="36:38">(<expr pos:start="36:16" pos:end="36:37"><operator pos:start="36:16" pos:end="36:16">!</operator><call pos:start="36:17" pos:end="36:37"><name pos:start="36:17" pos:end="36:22">strcmp</name><argument_list pos:start="36:23" pos:end="36:37">(<argument pos:start="36:24" pos:end="36:27"><expr pos:start="36:24" pos:end="36:27"><name pos:start="36:24" pos:end="36:27">name</name></expr></argument>, <argument pos:start="36:30" pos:end="36:36"><expr pos:start="36:30" pos:end="36:36"><literal type="string" pos:start="36:30" pos:end="36:36">"model"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="36:40" pos:end="40:5">{<block_content pos:start="38:9" pos:end="38:41">

        <macro pos:start="38:9" pos:end="38:41"><name pos:start="38:9" pos:end="38:17">setscalar</name><argument_list pos:start="38:18" pos:end="38:41">(<argument pos:start="38:19" pos:end="38:29">&amp;def-&gt;model</argument>, <argument pos:start="38:32" pos:end="38:34">str</argument>, <argument pos:start="38:37" pos:end="38:40">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <if type="elseif" pos:start="40:7" pos:end="44:5">else if <condition pos:start="40:15" pos:end="40:41">(<expr pos:start="40:16" pos:end="40:40"><operator pos:start="40:16" pos:end="40:16">!</operator><call pos:start="40:17" pos:end="40:40"><name pos:start="40:17" pos:end="40:22">strcmp</name><argument_list pos:start="40:23" pos:end="40:40">(<argument pos:start="40:24" pos:end="40:27"><expr pos:start="40:24" pos:end="40:27"><name pos:start="40:24" pos:end="40:27">name</name></expr></argument>, <argument pos:start="40:30" pos:end="40:39"><expr pos:start="40:30" pos:end="40:39"><literal type="string" pos:start="40:30" pos:end="40:39">"stepping"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="40:43" pos:end="44:5">{<block_content pos:start="42:9" pos:end="42:44">

        <macro pos:start="42:9" pos:end="42:44"><name pos:start="42:9" pos:end="42:17">setscalar</name><argument_list pos:start="42:18" pos:end="42:44">(<argument pos:start="42:19" pos:end="42:32">&amp;def-&gt;stepping</argument>, <argument pos:start="42:35" pos:end="42:37">str</argument>, <argument pos:start="42:40" pos:end="42:43">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <if type="elseif" pos:start="44:7" pos:end="48:5">else if <condition pos:start="44:15" pos:end="44:44">(<expr pos:start="44:16" pos:end="44:43"><operator pos:start="44:16" pos:end="44:16">!</operator><call pos:start="44:17" pos:end="44:43"><name pos:start="44:17" pos:end="44:22">strcmp</name><argument_list pos:start="44:23" pos:end="44:43">(<argument pos:start="44:24" pos:end="44:27"><expr pos:start="44:24" pos:end="44:27"><name pos:start="44:24" pos:end="44:27">name</name></expr></argument>, <argument pos:start="44:30" pos:end="44:42"><expr pos:start="44:30" pos:end="44:42"><literal type="string" pos:start="44:30" pos:end="44:42">"feature_edx"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="44:46" pos:end="48:5">{<block_content pos:start="46:9" pos:end="46:61">

        <expr_stmt pos:start="46:9" pos:end="46:61"><expr pos:start="46:9" pos:end="46:60"><call pos:start="46:9" pos:end="46:60"><name pos:start="46:9" pos:end="46:19">setfeatures</name><argument_list pos:start="46:20" pos:end="46:60">(<argument pos:start="46:21" pos:end="46:34"><expr pos:start="46:21" pos:end="46:34"><operator pos:start="46:21" pos:end="46:21">&amp;</operator><name pos:start="46:22" pos:end="46:34"><name pos:start="46:22" pos:end="46:24">def</name><operator pos:start="46:25" pos:end="46:26">-&gt;</operator><name pos:start="46:27" pos:end="46:34">features</name></name></expr></argument>, <argument pos:start="46:37" pos:end="46:39"><expr pos:start="46:37" pos:end="46:39"><name pos:start="46:37" pos:end="46:39">str</name></expr></argument>, <argument pos:start="46:42" pos:end="46:53"><expr pos:start="46:42" pos:end="46:53"><name pos:start="46:42" pos:end="46:53">feature_name</name></expr></argument>, <argument pos:start="46:56" pos:end="46:59"><expr pos:start="46:56" pos:end="46:59"><operator pos:start="46:56" pos:end="46:56">&amp;</operator><name pos:start="46:57" pos:end="46:59">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="48:7" pos:end="52:5">else if <condition pos:start="48:15" pos:end="48:44">(<expr pos:start="48:16" pos:end="48:43"><operator pos:start="48:16" pos:end="48:16">!</operator><call pos:start="48:17" pos:end="48:43"><name pos:start="48:17" pos:end="48:22">strcmp</name><argument_list pos:start="48:23" pos:end="48:43">(<argument pos:start="48:24" pos:end="48:27"><expr pos:start="48:24" pos:end="48:27"><name pos:start="48:24" pos:end="48:27">name</name></expr></argument>, <argument pos:start="48:30" pos:end="48:42"><expr pos:start="48:30" pos:end="48:42"><literal type="string" pos:start="48:30" pos:end="48:42">"feature_ecx"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="48:46" pos:end="52:5">{<block_content pos:start="50:9" pos:end="50:69">

        <expr_stmt pos:start="50:9" pos:end="50:69"><expr pos:start="50:9" pos:end="50:68"><call pos:start="50:9" pos:end="50:68"><name pos:start="50:9" pos:end="50:19">setfeatures</name><argument_list pos:start="50:20" pos:end="50:68">(<argument pos:start="50:21" pos:end="50:38"><expr pos:start="50:21" pos:end="50:38"><operator pos:start="50:21" pos:end="50:21">&amp;</operator><name pos:start="50:22" pos:end="50:38"><name pos:start="50:22" pos:end="50:24">def</name><operator pos:start="50:25" pos:end="50:26">-&gt;</operator><name pos:start="50:27" pos:end="50:38">ext_features</name></name></expr></argument>, <argument pos:start="50:41" pos:end="50:43"><expr pos:start="50:41" pos:end="50:43"><name pos:start="50:41" pos:end="50:43">str</name></expr></argument>, <argument pos:start="50:46" pos:end="50:61"><expr pos:start="50:46" pos:end="50:61"><name pos:start="50:46" pos:end="50:61">ext_feature_name</name></expr></argument>, <argument pos:start="50:64" pos:end="50:67"><expr pos:start="50:64" pos:end="50:67"><operator pos:start="50:64" pos:end="50:64">&amp;</operator><name pos:start="50:65" pos:end="50:67">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="52:7" pos:end="56:5">else if <condition pos:start="52:15" pos:end="52:47">(<expr pos:start="52:16" pos:end="52:46"><operator pos:start="52:16" pos:end="52:16">!</operator><call pos:start="52:17" pos:end="52:46"><name pos:start="52:17" pos:end="52:22">strcmp</name><argument_list pos:start="52:23" pos:end="52:46">(<argument pos:start="52:24" pos:end="52:27"><expr pos:start="52:24" pos:end="52:27"><name pos:start="52:24" pos:end="52:27">name</name></expr></argument>, <argument pos:start="52:30" pos:end="52:45"><expr pos:start="52:30" pos:end="52:45"><literal type="string" pos:start="52:30" pos:end="52:45">"extfeature_edx"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="52:49" pos:end="56:5">{<block_content pos:start="54:9" pos:end="54:71">

        <expr_stmt pos:start="54:9" pos:end="54:71"><expr pos:start="54:9" pos:end="54:70"><call pos:start="54:9" pos:end="54:70"><name pos:start="54:9" pos:end="54:19">setfeatures</name><argument_list pos:start="54:20" pos:end="54:70">(<argument pos:start="54:21" pos:end="54:39"><expr pos:start="54:21" pos:end="54:39"><operator pos:start="54:21" pos:end="54:21">&amp;</operator><name pos:start="54:22" pos:end="54:39"><name pos:start="54:22" pos:end="54:24">def</name><operator pos:start="54:25" pos:end="54:26">-&gt;</operator><name pos:start="54:27" pos:end="54:39">ext2_features</name></name></expr></argument>, <argument pos:start="54:42" pos:end="54:44"><expr pos:start="54:42" pos:end="54:44"><name pos:start="54:42" pos:end="54:44">str</name></expr></argument>, <argument pos:start="54:47" pos:end="54:63"><expr pos:start="54:47" pos:end="54:63"><name pos:start="54:47" pos:end="54:63">ext2_feature_name</name></expr></argument>, <argument pos:start="54:66" pos:end="54:69"><expr pos:start="54:66" pos:end="54:69"><operator pos:start="54:66" pos:end="54:66">&amp;</operator><name pos:start="54:67" pos:end="54:69">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="56:7" pos:end="60:5">else if <condition pos:start="56:15" pos:end="56:47">(<expr pos:start="56:16" pos:end="56:46"><operator pos:start="56:16" pos:end="56:16">!</operator><call pos:start="56:17" pos:end="56:46"><name pos:start="56:17" pos:end="56:22">strcmp</name><argument_list pos:start="56:23" pos:end="56:46">(<argument pos:start="56:24" pos:end="56:27"><expr pos:start="56:24" pos:end="56:27"><name pos:start="56:24" pos:end="56:27">name</name></expr></argument>, <argument pos:start="56:30" pos:end="56:45"><expr pos:start="56:30" pos:end="56:45"><literal type="string" pos:start="56:30" pos:end="56:45">"extfeature_ecx"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="56:49" pos:end="60:5">{<block_content pos:start="58:9" pos:end="58:71">

        <expr_stmt pos:start="58:9" pos:end="58:71"><expr pos:start="58:9" pos:end="58:70"><call pos:start="58:9" pos:end="58:70"><name pos:start="58:9" pos:end="58:19">setfeatures</name><argument_list pos:start="58:20" pos:end="58:70">(<argument pos:start="58:21" pos:end="58:39"><expr pos:start="58:21" pos:end="58:39"><operator pos:start="58:21" pos:end="58:21">&amp;</operator><name pos:start="58:22" pos:end="58:39"><name pos:start="58:22" pos:end="58:24">def</name><operator pos:start="58:25" pos:end="58:26">-&gt;</operator><name pos:start="58:27" pos:end="58:39">ext3_features</name></name></expr></argument>, <argument pos:start="58:42" pos:end="58:44"><expr pos:start="58:42" pos:end="58:44"><name pos:start="58:42" pos:end="58:44">str</name></expr></argument>, <argument pos:start="58:47" pos:end="58:63"><expr pos:start="58:47" pos:end="58:63"><name pos:start="58:47" pos:end="58:63">ext3_feature_name</name></expr></argument>, <argument pos:start="58:66" pos:end="58:69"><expr pos:start="58:66" pos:end="58:69"><operator pos:start="58:66" pos:end="58:66">&amp;</operator><name pos:start="58:67" pos:end="58:69">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="60:7" pos:end="64:5">else if <condition pos:start="60:15" pos:end="60:39">(<expr pos:start="60:16" pos:end="60:38"><operator pos:start="60:16" pos:end="60:16">!</operator><call pos:start="60:17" pos:end="60:38"><name pos:start="60:17" pos:end="60:22">strcmp</name><argument_list pos:start="60:23" pos:end="60:38">(<argument pos:start="60:24" pos:end="60:27"><expr pos:start="60:24" pos:end="60:27"><name pos:start="60:24" pos:end="60:27">name</name></expr></argument>, <argument pos:start="60:30" pos:end="60:37"><expr pos:start="60:30" pos:end="60:37"><literal type="string" pos:start="60:30" pos:end="60:37">"xlevel"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="60:41" pos:end="64:5">{<block_content pos:start="62:9" pos:end="62:42">

        <macro pos:start="62:9" pos:end="62:42"><name pos:start="62:9" pos:end="62:17">setscalar</name><argument_list pos:start="62:18" pos:end="62:42">(<argument pos:start="62:19" pos:end="62:30">&amp;def-&gt;xlevel</argument>, <argument pos:start="62:33" pos:end="62:35">str</argument>, <argument pos:start="62:38" pos:end="62:41">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <else pos:start="64:7" pos:end="70:5">else <block pos:start="64:12" pos:end="70:5">{<block_content pos:start="66:9" pos:end="68:19">

        <expr_stmt pos:start="66:9" pos:end="66:72"><expr pos:start="66:9" pos:end="66:71"><call pos:start="66:9" pos:end="66:71"><name pos:start="66:9" pos:end="66:15">fprintf</name><argument_list pos:start="66:16" pos:end="66:71">(<argument pos:start="66:17" pos:end="66:22"><expr pos:start="66:17" pos:end="66:22"><name pos:start="66:17" pos:end="66:22">stderr</name></expr></argument>, <argument pos:start="66:25" pos:end="66:59"><expr pos:start="66:25" pos:end="66:59"><literal type="string" pos:start="66:25" pos:end="66:59">"error: unknown option [%s = %s]\n"</literal></expr></argument>, <argument pos:start="66:62" pos:end="66:65"><expr pos:start="66:62" pos:end="66:65"><name pos:start="66:62" pos:end="66:65">name</name></expr></argument>, <argument pos:start="66:68" pos:end="66:70"><expr pos:start="66:68" pos:end="66:70"><name pos:start="66:68" pos:end="66:70">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="68:9" pos:end="68:19">return <expr pos:start="68:16" pos:end="68:18"><operator pos:start="68:16" pos:end="68:16">(</operator><literal type="number" pos:start="68:17" pos:end="68:17">1</literal><operator pos:start="68:18" pos:end="68:18">)</operator></expr>;</return>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="72:5" pos:end="78:5"><if pos:start="72:5" pos:end="78:5">if <condition pos:start="72:8" pos:end="72:12">(<expr pos:start="72:9" pos:end="72:11"><name pos:start="72:9" pos:end="72:11">err</name></expr>)</condition> <block pos:start="72:14" pos:end="78:5">{<block_content pos:start="74:9" pos:end="76:19">

        <expr_stmt pos:start="74:9" pos:end="74:74"><expr pos:start="74:9" pos:end="74:73"><call pos:start="74:9" pos:end="74:73"><name pos:start="74:9" pos:end="74:15">fprintf</name><argument_list pos:start="74:16" pos:end="74:73">(<argument pos:start="74:17" pos:end="74:22"><expr pos:start="74:17" pos:end="74:22"><name pos:start="74:17" pos:end="74:22">stderr</name></expr></argument>, <argument pos:start="74:25" pos:end="74:61"><expr pos:start="74:25" pos:end="74:61"><literal type="string" pos:start="74:25" pos:end="74:61">"error: bad option value [%s = %s]\n"</literal></expr></argument>, <argument pos:start="74:64" pos:end="74:67"><expr pos:start="74:64" pos:end="74:67"><name pos:start="74:64" pos:end="74:67">name</name></expr></argument>, <argument pos:start="74:70" pos:end="74:72"><expr pos:start="74:70" pos:end="74:72"><name pos:start="74:70" pos:end="74:72">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="76:9" pos:end="76:19">return <expr pos:start="76:16" pos:end="76:18"><operator pos:start="76:16" pos:end="76:16">(</operator><literal type="number" pos:start="76:17" pos:end="76:17">1</literal><operator pos:start="76:18" pos:end="76:18">)</operator></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="80:5" pos:end="80:15">return <expr pos:start="80:12" pos:end="80:14"><operator pos:start="80:12" pos:end="80:12">(</operator><literal type="number" pos:start="80:13" pos:end="80:13">0</literal><operator pos:start="80:14" pos:end="80:14">)</operator></expr>;</return>

</block_content>}</block></function></unit>
