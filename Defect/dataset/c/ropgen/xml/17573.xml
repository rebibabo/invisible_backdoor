<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17573.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">rtc_realizefn</name><parameter_list pos:start="1:26" pos:end="1:57">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:37">DeviceState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:49">Error</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier><modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:55">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">ISADevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">isadev</name> <init pos:start="5:23" pos:end="5:39">= <expr pos:start="5:25" pos:end="5:39"><call pos:start="5:25" pos:end="5:39"><name pos:start="5:25" pos:end="5:34">ISA_DEVICE</name><argument_list pos:start="5:35" pos:end="5:39">(<argument pos:start="5:36" pos:end="5:38"><expr pos:start="5:36" pos:end="5:38"><name pos:start="5:36" pos:end="5:38">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">RTCState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:35">= <expr pos:start="7:19" pos:end="7:35"><call pos:start="7:19" pos:end="7:35"><name pos:start="7:19" pos:end="7:30">MC146818_RTC</name><argument_list pos:start="7:31" pos:end="7:35">(<argument pos:start="7:32" pos:end="7:34"><expr pos:start="7:32" pos:end="7:34"><name pos:start="7:32" pos:end="7:34">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">base</name> <init pos:start="9:14" pos:end="9:19">= <expr pos:start="9:16" pos:end="9:19"><literal type="number" pos:start="9:16" pos:end="9:19">0x70</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:16">cmos_data</name><index pos:start="13:17" pos:end="13:27">[<expr pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:26">RTC_REG_A</name></expr>]</index></name> <operator pos:start="13:29" pos:end="13:29">=</operator> <literal type="number" pos:start="13:31" pos:end="13:34">0x26</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:16">cmos_data</name><index pos:start="15:17" pos:end="15:27">[<expr pos:start="15:18" pos:end="15:26"><name pos:start="15:18" pos:end="15:26">RTC_REG_B</name></expr>]</index></name> <operator pos:start="15:29" pos:end="15:29">=</operator> <literal type="number" pos:start="15:31" pos:end="15:34">0x02</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:16">cmos_data</name><index pos:start="17:17" pos:end="17:27">[<expr pos:start="17:18" pos:end="17:26"><name pos:start="17:18" pos:end="17:26">RTC_REG_C</name></expr>]</index></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <literal type="number" pos:start="17:31" pos:end="17:34">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:16">cmos_data</name><index pos:start="19:17" pos:end="19:27">[<expr pos:start="19:18" pos:end="19:26"><name pos:start="19:18" pos:end="19:26">RTC_REG_D</name></expr>]</index></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <literal type="number" pos:start="19:31" pos:end="19:34">0x80</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="37:7">/* This is for historical reasons.  The default base year qdev property

     * was set to 2000 for most machine types before the century byte was

     * implemented.

     *

     * This if statement means that the century byte will be always 0

     * (at least until 2079...) for base_year = 1980, but will be set

     * correctly for base_year = 2000.

     */</comment>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:29">(<expr pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:20">base_year</name></name> <operator pos:start="39:22" pos:end="39:23">==</operator> <literal type="number" pos:start="39:25" pos:end="39:28">2000</literal></expr>)</condition> <block pos:start="39:31" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:25">

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:20">base_year</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <literal type="number" pos:start="41:24" pos:end="41:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="52:0"><expr pos:start="47:5" pos:end="47:34"><call pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:26">rtc_set_date_from_host</name><argument_list pos:start="47:27" pos:end="47:34">(<argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33">isadev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="51:1" pos:end="51:18">#<cpp:directive pos:start="51:2" pos:end="51:6">ifdef</cpp:directive> <name pos:start="51:8" pos:end="51:18">TARGET_I386</name></cpp:ifdef>

    <switch pos:start="53:5" pos:end="76:0">switch <condition pos:start="53:12" pos:end="53:32">(<expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:31">lost_tick_policy</name></name></expr>)</condition> <block pos:start="53:34" pos:end="76:0">{<block_content pos:start="55:5" pos:end="71:15">

    <case pos:start="55:5" pos:end="55:31">case <expr pos:start="55:10" pos:end="55:30"><name pos:start="55:10" pos:end="55:30">LOST_TICK_POLICY_SLEW</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="59:60"><expr pos:start="57:9" pos:end="59:59"><name pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:26">coalesced_timer</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator>

            <call pos:start="59:13" pos:end="59:59"><name pos:start="59:13" pos:end="59:24">timer_new_ns</name><argument_list pos:start="59:25" pos:end="59:59">(<argument pos:start="59:26" pos:end="59:34"><expr pos:start="59:26" pos:end="59:34"><name pos:start="59:26" pos:end="59:34">rtc_clock</name></expr></argument>, <argument pos:start="59:37" pos:end="59:55"><expr pos:start="59:37" pos:end="59:55"><name pos:start="59:37" pos:end="59:55">rtc_coalesced_timer</name></expr></argument>, <argument pos:start="59:58" pos:end="59:58"><expr pos:start="59:58" pos:end="59:58"><name pos:start="59:58" pos:end="59:58">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:34">case <expr pos:start="63:10" pos:end="63:33"><name pos:start="63:10" pos:end="63:33">LOST_TICK_POLICY_DISCARD</name></expr>:</case>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <default pos:start="67:5" pos:end="67:12">default:</default>

        <expr_stmt pos:start="69:9" pos:end="69:54"><expr pos:start="69:9" pos:end="69:53"><call pos:start="69:9" pos:end="69:53"><name pos:start="69:9" pos:end="69:18">error_setg</name><argument_list pos:start="69:19" pos:end="69:53">(<argument pos:start="69:20" pos:end="69:23"><expr pos:start="69:20" pos:end="69:23"><name pos:start="69:20" pos:end="69:23">errp</name></expr></argument>, <argument pos:start="69:26" pos:end="69:52"><expr pos:start="69:26" pos:end="69:52"><literal type="string" pos:start="69:26" pos:end="69:52">"Invalid lost tick policy."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:15">return;</return>

    </block_content>}</block></switch>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="79:5" pos:end="79:71"><expr pos:start="79:5" pos:end="79:70"><name pos:start="79:5" pos:end="79:21"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:21">periodic_timer</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <call pos:start="79:25" pos:end="79:70"><name pos:start="79:25" pos:end="79:36">timer_new_ns</name><argument_list pos:start="79:37" pos:end="79:70">(<argument pos:start="79:38" pos:end="79:46"><expr pos:start="79:38" pos:end="79:46"><name pos:start="79:38" pos:end="79:46">rtc_clock</name></expr></argument>, <argument pos:start="79:49" pos:end="79:66"><expr pos:start="79:49" pos:end="79:66"><name pos:start="79:49" pos:end="79:66">rtc_periodic_timer</name></expr></argument>, <argument pos:start="79:69" pos:end="79:69"><expr pos:start="79:69" pos:end="79:69"><name pos:start="79:69" pos:end="79:69">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:67"><expr pos:start="81:5" pos:end="81:66"><name pos:start="81:5" pos:end="81:19"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:19">update_timer</name></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <call pos:start="81:23" pos:end="81:66"><name pos:start="81:23" pos:end="81:34">timer_new_ns</name><argument_list pos:start="81:35" pos:end="81:66">(<argument pos:start="81:36" pos:end="81:44"><expr pos:start="81:36" pos:end="81:44"><name pos:start="81:36" pos:end="81:44">rtc_clock</name></expr></argument>, <argument pos:start="81:47" pos:end="81:62"><expr pos:start="81:47" pos:end="81:62"><name pos:start="81:47" pos:end="81:62">rtc_update_timer</name></expr></argument>, <argument pos:start="81:65" pos:end="81:65"><expr pos:start="81:65" pos:end="81:65"><name pos:start="81:65" pos:end="81:65">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:26"><expr pos:start="83:5" pos:end="83:25"><call pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:22">check_update_timer</name><argument_list pos:start="83:23" pos:end="83:25">(<argument pos:start="83:24" pos:end="83:24"><expr pos:start="83:24" pos:end="83:24"><name pos:start="83:24" pos:end="83:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:60"><expr pos:start="87:5" pos:end="87:59"><name pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:27">clock_reset_notifier</name><operator pos:start="87:28" pos:end="87:28">.</operator><name pos:start="87:29" pos:end="87:34">notify</name></name> <operator pos:start="87:36" pos:end="87:36">=</operator> <name pos:start="87:38" pos:end="87:59">rtc_notify_clock_reset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="91:65"><expr pos:start="89:5" pos:end="91:64"><call pos:start="89:5" pos:end="91:64"><name pos:start="89:5" pos:end="89:38">qemu_clock_register_reset_notifier</name><argument_list pos:start="89:39" pos:end="91:64">(<argument pos:start="89:40" pos:end="89:48"><expr pos:start="89:40" pos:end="89:48"><name pos:start="89:40" pos:end="89:48">rtc_clock</name></expr></argument>,

                                       <argument pos:start="91:40" pos:end="91:63"><expr pos:start="91:40" pos:end="91:63"><operator pos:start="91:40" pos:end="91:40">&amp;</operator><name pos:start="91:41" pos:end="91:63"><name pos:start="91:41" pos:end="91:41">s</name><operator pos:start="91:42" pos:end="91:43">-&gt;</operator><name pos:start="91:44" pos:end="91:63">clock_reset_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:52"><expr pos:start="95:5" pos:end="95:51"><name pos:start="95:5" pos:end="95:30"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:23">suspend_notifier</name><operator pos:start="95:24" pos:end="95:24">.</operator><name pos:start="95:25" pos:end="95:30">notify</name></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <name pos:start="95:34" pos:end="95:51">rtc_notify_suspend</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:57"><expr pos:start="97:5" pos:end="97:56"><call pos:start="97:5" pos:end="97:56"><name pos:start="97:5" pos:end="97:34">qemu_register_suspend_notifier</name><argument_list pos:start="97:35" pos:end="97:56">(<argument pos:start="97:36" pos:end="97:55"><expr pos:start="97:36" pos:end="97:55"><operator pos:start="97:36" pos:end="97:36">&amp;</operator><name pos:start="97:37" pos:end="97:55"><name pos:start="97:37" pos:end="97:37">s</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:55">suspend_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:69"><expr pos:start="101:5" pos:end="101:68"><call pos:start="101:5" pos:end="101:68"><name pos:start="101:5" pos:end="101:25">memory_region_init_io</name><argument_list pos:start="101:26" pos:end="101:68">(<argument pos:start="101:27" pos:end="101:32"><expr pos:start="101:27" pos:end="101:32"><operator pos:start="101:27" pos:end="101:27">&amp;</operator><name pos:start="101:28" pos:end="101:32"><name pos:start="101:28" pos:end="101:28">s</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:32">io</name></name></expr></argument>, <argument pos:start="101:35" pos:end="101:43"><expr pos:start="101:35" pos:end="101:43"><call pos:start="101:35" pos:end="101:43"><name pos:start="101:35" pos:end="101:40">OBJECT</name><argument_list pos:start="101:41" pos:end="101:43">(<argument pos:start="101:42" pos:end="101:42"><expr pos:start="101:42" pos:end="101:42"><name pos:start="101:42" pos:end="101:42">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:46" pos:end="101:54"><expr pos:start="101:46" pos:end="101:54"><operator pos:start="101:46" pos:end="101:46">&amp;</operator><name pos:start="101:47" pos:end="101:54">cmos_ops</name></expr></argument>, <argument pos:start="101:57" pos:end="101:57"><expr pos:start="101:57" pos:end="101:57"><name pos:start="101:57" pos:end="101:57">s</name></expr></argument>, <argument pos:start="101:60" pos:end="101:64"><expr pos:start="101:60" pos:end="101:64"><literal type="string" pos:start="101:60" pos:end="101:64">"rtc"</literal></expr></argument>, <argument pos:start="101:67" pos:end="101:67"><expr pos:start="101:67" pos:end="101:67"><literal type="number" pos:start="101:67" pos:end="101:67">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:46"><expr pos:start="103:5" pos:end="103:45"><call pos:start="103:5" pos:end="103:45"><name pos:start="103:5" pos:end="103:23">isa_register_ioport</name><argument_list pos:start="103:24" pos:end="103:45">(<argument pos:start="103:25" pos:end="103:30"><expr pos:start="103:25" pos:end="103:30"><name pos:start="103:25" pos:end="103:30">isadev</name></expr></argument>, <argument pos:start="103:33" pos:end="103:38"><expr pos:start="103:33" pos:end="103:38"><operator pos:start="103:33" pos:end="103:33">&amp;</operator><name pos:start="103:34" pos:end="103:38"><name pos:start="103:34" pos:end="103:34">s</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:38">io</name></name></expr></argument>, <argument pos:start="103:41" pos:end="103:44"><expr pos:start="103:41" pos:end="103:44"><name pos:start="103:41" pos:end="103:44">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:46"><expr pos:start="107:5" pos:end="107:45"><call pos:start="107:5" pos:end="107:45"><name pos:start="107:5" pos:end="107:31">qdev_set_legacy_instance_id</name><argument_list pos:start="107:32" pos:end="107:45">(<argument pos:start="107:33" pos:end="107:35"><expr pos:start="107:33" pos:end="107:35"><name pos:start="107:33" pos:end="107:35">dev</name></expr></argument>, <argument pos:start="107:38" pos:end="107:41"><expr pos:start="107:38" pos:end="107:41"><name pos:start="107:38" pos:end="107:41">base</name></expr></argument>, <argument pos:start="107:44" pos:end="107:44"><expr pos:start="107:44" pos:end="107:44"><literal type="number" pos:start="107:44" pos:end="107:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:38"><expr pos:start="109:5" pos:end="109:37"><call pos:start="109:5" pos:end="109:37"><name pos:start="109:5" pos:end="109:23">qemu_register_reset</name><argument_list pos:start="109:24" pos:end="109:37">(<argument pos:start="109:25" pos:end="109:33"><expr pos:start="109:25" pos:end="109:33"><name pos:start="109:25" pos:end="109:33">rtc_reset</name></expr></argument>, <argument pos:start="109:36" pos:end="109:36"><expr pos:start="109:36" pos:end="109:36"><name pos:start="109:36" pos:end="109:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="115:59"><expr pos:start="113:5" pos:end="115:58"><call pos:start="113:5" pos:end="115:58"><name pos:start="113:5" pos:end="113:23">object_property_add</name><argument_list pos:start="113:24" pos:end="115:58">(<argument pos:start="113:25" pos:end="113:33"><expr pos:start="113:25" pos:end="113:33"><call pos:start="113:25" pos:end="113:33"><name pos:start="113:25" pos:end="113:30">OBJECT</name><argument_list pos:start="113:31" pos:end="113:33">(<argument pos:start="113:32" pos:end="113:32"><expr pos:start="113:32" pos:end="113:32"><name pos:start="113:32" pos:end="113:32">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:36" pos:end="113:41"><expr pos:start="113:36" pos:end="113:41"><literal type="string" pos:start="113:36" pos:end="113:41">"date"</literal></expr></argument>, <argument pos:start="113:44" pos:end="113:54"><expr pos:start="113:44" pos:end="113:54"><literal type="string" pos:start="113:44" pos:end="113:54">"struct tm"</literal></expr></argument>,

                        <argument pos:start="115:25" pos:end="115:36"><expr pos:start="115:25" pos:end="115:36"><name pos:start="115:25" pos:end="115:36">rtc_get_date</name></expr></argument>, <argument pos:start="115:39" pos:end="115:42"><expr pos:start="115:39" pos:end="115:42"><name pos:start="115:39" pos:end="115:42">NULL</name></expr></argument>, <argument pos:start="115:45" pos:end="115:48"><expr pos:start="115:45" pos:end="115:48"><name pos:start="115:45" pos:end="115:48">NULL</name></expr></argument>, <argument pos:start="115:51" pos:end="115:51"><expr pos:start="115:51" pos:end="115:51"><name pos:start="115:51" pos:end="115:51">s</name></expr></argument>, <argument pos:start="115:54" pos:end="115:57"><expr pos:start="115:54" pos:end="115:57"><name pos:start="115:54" pos:end="115:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="121:55"><expr pos:start="119:5" pos:end="121:54"><call pos:start="119:5" pos:end="121:54"><name pos:start="119:5" pos:end="119:29">object_property_add_alias</name><argument_list pos:start="119:30" pos:end="121:54">(<argument pos:start="119:31" pos:end="119:48"><expr pos:start="119:31" pos:end="119:48"><call pos:start="119:31" pos:end="119:48"><name pos:start="119:31" pos:end="119:46">qdev_get_machine</name><argument_list pos:start="119:47" pos:end="119:48">()</argument_list></call></expr></argument>, <argument pos:start="119:51" pos:end="119:60"><expr pos:start="119:51" pos:end="119:60"><literal type="string" pos:start="119:51" pos:end="119:60">"rtc-time"</literal></expr></argument>,

                              <argument pos:start="121:31" pos:end="121:39"><expr pos:start="121:31" pos:end="121:39"><call pos:start="121:31" pos:end="121:39"><name pos:start="121:31" pos:end="121:36">OBJECT</name><argument_list pos:start="121:37" pos:end="121:39">(<argument pos:start="121:38" pos:end="121:38"><expr pos:start="121:38" pos:end="121:38"><name pos:start="121:38" pos:end="121:38">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="121:42" pos:end="121:47"><expr pos:start="121:42" pos:end="121:47"><literal type="string" pos:start="121:42" pos:end="121:47">"date"</literal></expr></argument>, <argument pos:start="121:50" pos:end="121:53"><expr pos:start="121:50" pos:end="121:53"><name pos:start="121:50" pos:end="121:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
