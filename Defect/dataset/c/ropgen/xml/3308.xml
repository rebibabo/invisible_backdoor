<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3308.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:16">coroutine_fn</name></type> <name pos:start="1:18" pos:end="1:33">qed_find_cluster</name><parameter_list pos:start="1:34" pos:end="5:55">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:46">BDRVQEDState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><name pos:start="1:52" pos:end="1:61">QEDRequest</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:70">request</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:46"><decl pos:start="3:35" pos:end="3:46"><type pos:start="3:35" pos:end="3:46"><name pos:start="3:35" pos:end="3:42">uint64_t</name></type> <name pos:start="3:44" pos:end="3:46">pos</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:59"><decl pos:start="3:49" pos:end="3:59"><type pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:54">size_t</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:59">len</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:54"><decl pos:start="5:35" pos:end="5:54"><type pos:start="5:35" pos:end="5:54"><name pos:start="5:35" pos:end="5:42">uint64_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:54">img_offset</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="107:1">{<block_content pos:start="9:5" pos:end="105:15">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:22">l2_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19">offset</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:22">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:18">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="25:7">/* Limit length to L2 boundary.  Requests are broken up at the L2 boundary

     * so that a request acts on one L2 table at a time.

     */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:72"><expr pos:start="27:5" pos:end="27:71"><operator pos:start="27:5" pos:end="27:5">*</operator><name pos:start="27:6" pos:end="27:8">len</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:71"><name pos:start="27:12" pos:end="27:14">MIN</name><argument_list pos:start="27:15" pos:end="27:71">(<argument pos:start="27:16" pos:end="27:19"><expr pos:start="27:16" pos:end="27:19"><operator pos:start="27:16" pos:end="27:16">*</operator><name pos:start="27:17" pos:end="27:19">len</name></expr></argument>, <argument pos:start="27:22" pos:end="27:70"><expr pos:start="27:22" pos:end="27:70"><operator pos:start="27:22" pos:end="27:22">(</operator><operator pos:start="27:23" pos:end="27:23">(</operator><operator pos:start="27:24" pos:end="27:24">(</operator><name pos:start="27:25" pos:end="27:27">pos</name> <operator pos:start="27:29" pos:end="27:30">&gt;&gt;</operator> <name pos:start="27:32" pos:end="27:42"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:42">l1_shift</name></name><operator pos:start="27:43" pos:end="27:43">)</operator> <operator pos:start="27:45" pos:end="27:45">+</operator> <literal type="number" pos:start="27:47" pos:end="27:47">1</literal><operator pos:start="27:48" pos:end="27:48">)</operator> <operator pos:start="27:50" pos:end="27:51">&lt;&lt;</operator> <name pos:start="27:53" pos:end="27:63"><name pos:start="27:53" pos:end="27:53">s</name><operator pos:start="27:54" pos:end="27:55">-&gt;</operator><name pos:start="27:56" pos:end="27:63">l1_shift</name></name><operator pos:start="27:64" pos:end="27:64">)</operator> <operator pos:start="27:66" pos:end="27:66">-</operator> <name pos:start="27:68" pos:end="27:70">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:59"><expr pos:start="31:5" pos:end="31:58"><name pos:start="31:5" pos:end="31:13">l2_offset</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:58"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:27">l1_table</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:36">offsets</name><index pos:start="31:37" pos:end="31:58">[<expr pos:start="31:38" pos:end="31:57"><call pos:start="31:38" pos:end="31:57"><name pos:start="31:38" pos:end="31:49">qed_l1_index</name><argument_list pos:start="31:50" pos:end="31:57">(<argument pos:start="31:51" pos:end="31:51"><expr pos:start="31:51" pos:end="31:51"><name pos:start="31:51" pos:end="31:51">s</name></expr></argument>, <argument pos:start="31:54" pos:end="31:56"><expr pos:start="31:54" pos:end="31:56"><name pos:start="31:54" pos:end="31:56">pos</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:49">(<expr pos:start="33:9" pos:end="33:48"><call pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:37">qed_offset_is_unalloc_cluster</name><argument_list pos:start="33:38" pos:end="33:48">(<argument pos:start="33:39" pos:end="33:47"><expr pos:start="33:39" pos:end="33:47"><name pos:start="33:39" pos:end="33:47">l2_offset</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:51" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:30">

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:19">img_offset</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:30">return <expr pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:29">QED_CLUSTER_L1</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:46">(<expr pos:start="41:9" pos:end="41:45"><operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:45"><name pos:start="41:10" pos:end="41:31">qed_check_table_offset</name><argument_list pos:start="41:32" pos:end="41:45">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">s</name></expr></argument>, <argument pos:start="41:36" pos:end="41:44"><expr pos:start="41:36" pos:end="41:44"><name pos:start="41:36" pos:end="41:44">l2_offset</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:48" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:23">

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><operator pos:start="43:9" pos:end="43:9">*</operator><name pos:start="43:10" pos:end="43:19">img_offset</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <operator pos:start="43:23" pos:end="43:23">*</operator><name pos:start="43:24" pos:end="43:26">len</name> <operator pos:start="43:28" pos:end="43:28">=</operator> <literal type="number" pos:start="43:30" pos:end="43:30">0</literal></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:23">return <expr pos:start="45:16" pos:end="45:22"><operator pos:start="45:16" pos:end="45:16">-</operator><name pos:start="45:17" pos:end="45:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:50"><name pos:start="51:11" pos:end="51:27">qed_read_l2_table</name><argument_list pos:start="51:28" pos:end="51:50">(<argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">s</name></expr></argument>, <argument pos:start="51:32" pos:end="51:38"><expr pos:start="51:32" pos:end="51:38"><name pos:start="51:32" pos:end="51:38">request</name></expr></argument>, <argument pos:start="51:41" pos:end="51:49"><expr pos:start="51:41" pos:end="51:49"><name pos:start="51:41" pos:end="51:49">l2_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:19"><expr pos:start="53:5" pos:end="53:18"><call pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:15">qed_acquire</name><argument_list pos:start="53:16" pos:end="53:18">(<argument pos:start="53:17" pos:end="53:17"><expr pos:start="53:17" pos:end="53:17"><name pos:start="53:17" pos:end="53:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:12">(<expr pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">ret</name></expr>)</condition> <block pos:start="55:14" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:17">

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:33"><expr pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:9">index</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:24">qed_l2_index</name><argument_list pos:start="63:25" pos:end="63:32">(<argument pos:start="63:26" pos:end="63:26"><expr pos:start="63:26" pos:end="63:26"><name pos:start="63:26" pos:end="63:26">s</name></expr></argument>, <argument pos:start="63:29" pos:end="63:31"><expr pos:start="63:29" pos:end="63:31"><name pos:start="63:29" pos:end="63:31">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:73"><expr pos:start="65:5" pos:end="65:72"><name pos:start="65:5" pos:end="65:5">n</name> <operator pos:start="65:7" pos:end="65:7">=</operator> <call pos:start="65:9" pos:end="65:72"><name pos:start="65:9" pos:end="65:29">qed_bytes_to_clusters</name><argument_list pos:start="65:30" pos:end="65:72">(<argument pos:start="65:31" pos:end="65:31"><expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">s</name></expr></argument>, <argument pos:start="65:34" pos:end="65:71"><expr pos:start="65:34" pos:end="65:71"><call pos:start="65:34" pos:end="65:64"><name pos:start="65:34" pos:end="65:56">qed_offset_into_cluster</name><argument_list pos:start="65:57" pos:end="65:64">(<argument pos:start="65:58" pos:end="65:58"><expr pos:start="65:58" pos:end="65:58"><name pos:start="65:58" pos:end="65:58">s</name></expr></argument>, <argument pos:start="65:61" pos:end="65:63"><expr pos:start="65:61" pos:end="65:63"><name pos:start="65:61" pos:end="65:63">pos</name></expr></argument>)</argument_list></call> <operator pos:start="65:66" pos:end="65:66">+</operator> <operator pos:start="65:68" pos:end="65:68">*</operator><name pos:start="65:69" pos:end="65:71">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:57"><expr pos:start="67:5" pos:end="69:56"><name pos:start="67:5" pos:end="67:5">n</name> <operator pos:start="67:7" pos:end="67:7">=</operator> <call pos:start="67:9" pos:end="69:56"><name pos:start="67:9" pos:end="67:37">qed_count_contiguous_clusters</name><argument_list pos:start="67:38" pos:end="69:56">(<argument pos:start="67:39" pos:end="67:39"><expr pos:start="67:39" pos:end="67:39"><name pos:start="67:39" pos:end="67:39">s</name></expr></argument>, <argument pos:start="67:42" pos:end="67:65"><expr pos:start="67:42" pos:end="67:65"><name pos:start="67:42" pos:end="67:65"><name pos:start="67:42" pos:end="67:48">request</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:58">l2_table</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:65">table</name></name></expr></argument>,

                                      <argument pos:start="69:39" pos:end="69:43"><expr pos:start="69:39" pos:end="69:43"><name pos:start="69:39" pos:end="69:43">index</name></expr></argument>, <argument pos:start="69:46" pos:end="69:46"><expr pos:start="69:46" pos:end="69:46"><name pos:start="69:46" pos:end="69:46">n</name></expr></argument>, <argument pos:start="69:49" pos:end="69:55"><expr pos:start="69:49" pos:end="69:55"><operator pos:start="69:49" pos:end="69:49">&amp;</operator><name pos:start="69:50" pos:end="69:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="89:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:46">(<expr pos:start="73:9" pos:end="73:45"><call pos:start="73:9" pos:end="73:45"><name pos:start="73:9" pos:end="73:37">qed_offset_is_unalloc_cluster</name><argument_list pos:start="73:38" pos:end="73:45">(<argument pos:start="73:39" pos:end="73:44"><expr pos:start="73:39" pos:end="73:44"><name pos:start="73:39" pos:end="73:44">offset</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:48" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:29">

        <expr_stmt pos:start="75:9" pos:end="75:29"><expr pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:28">QED_CLUSTER_L2</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="81:5">else if <condition pos:start="77:15" pos:end="77:50">(<expr pos:start="77:16" pos:end="77:49"><call pos:start="77:16" pos:end="77:49"><name pos:start="77:16" pos:end="77:41">qed_offset_is_zero_cluster</name><argument_list pos:start="77:42" pos:end="77:49">(<argument pos:start="77:43" pos:end="77:48"><expr pos:start="77:43" pos:end="77:48"><name pos:start="77:43" pos:end="77:48">offset</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:52" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:31">

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:30">QED_CLUSTER_ZERO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="81:7" pos:end="85:5">else if <condition pos:start="81:15" pos:end="81:51">(<expr pos:start="81:16" pos:end="81:50"><call pos:start="81:16" pos:end="81:50"><name pos:start="81:16" pos:end="81:39">qed_check_cluster_offset</name><argument_list pos:start="81:40" pos:end="81:50">(<argument pos:start="81:41" pos:end="81:41"><expr pos:start="81:41" pos:end="81:41"><name pos:start="81:41" pos:end="81:41">s</name></expr></argument>, <argument pos:start="81:44" pos:end="81:49"><expr pos:start="81:44" pos:end="81:49"><name pos:start="81:44" pos:end="81:49">offset</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:53" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:32">

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:31">QED_CLUSTER_FOUND</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="89:5">else <block pos:start="85:12" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:22">

        <expr_stmt pos:start="87:9" pos:end="87:22"><expr pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <operator pos:start="87:15" pos:end="87:15">-</operator><name pos:start="87:16" pos:end="87:21">EINVAL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="95:77"><expr pos:start="93:5" pos:end="95:76"><operator pos:start="93:5" pos:end="93:5">*</operator><name pos:start="93:6" pos:end="93:8">len</name> <operator pos:start="93:10" pos:end="93:10">=</operator> <call pos:start="93:12" pos:end="95:76"><name pos:start="93:12" pos:end="93:14">MIN</name><argument_list pos:start="93:15" pos:end="95:76">(<argument pos:start="93:16" pos:end="93:19"><expr pos:start="93:16" pos:end="93:19"><operator pos:start="93:16" pos:end="93:16">*</operator><name pos:start="93:17" pos:end="93:19">len</name></expr></argument>,

               <argument pos:start="95:16" pos:end="95:75"><expr pos:start="95:16" pos:end="95:75"><name pos:start="95:16" pos:end="95:16">n</name> <operator pos:start="95:18" pos:end="95:18">*</operator> <name pos:start="95:20" pos:end="95:41"><name pos:start="95:20" pos:end="95:20">s</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:28">header</name><operator pos:start="95:29" pos:end="95:29">.</operator><name pos:start="95:30" pos:end="95:41">cluster_size</name></name> <operator pos:start="95:43" pos:end="95:43">-</operator> <call pos:start="95:45" pos:end="95:75"><name pos:start="95:45" pos:end="95:67">qed_offset_into_cluster</name><argument_list pos:start="95:68" pos:end="95:75">(<argument pos:start="95:69" pos:end="95:69"><expr pos:start="95:69" pos:end="95:69"><name pos:start="95:69" pos:end="95:69">s</name></expr></argument>, <argument pos:start="95:72" pos:end="95:74"><expr pos:start="95:72" pos:end="95:74"><name pos:start="95:72" pos:end="95:74">pos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="99:1" pos:end="99:4"><name pos:start="99:1" pos:end="99:3">out</name>:</label>

    <expr_stmt pos:start="101:5" pos:end="101:25"><expr pos:start="101:5" pos:end="101:24"><operator pos:start="101:5" pos:end="101:5">*</operator><name pos:start="101:6" pos:end="101:15">img_offset</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:24">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:19"><expr pos:start="103:5" pos:end="103:18"><call pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:15">qed_release</name><argument_list pos:start="103:16" pos:end="103:18">(<argument pos:start="103:17" pos:end="103:17"><expr pos:start="103:17" pos:end="103:17"><name pos:start="103:17" pos:end="103:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:15">return <expr pos:start="105:12" pos:end="105:14"><name pos:start="105:12" pos:end="105:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
