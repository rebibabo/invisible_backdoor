<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4529.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">ff_qsv_enc_init</name><parameter_list pos:start="1:20" pos:end="1:60">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:41"><name pos:start="1:21" pos:end="1:34">AVCodecContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">avctx</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:56">QSVEncContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:20">opaque_alloc</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:57"><expr pos:start="11:5" pos:end="11:56"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:5">q</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">param</name><operator pos:start="11:13" pos:end="11:13">.</operator><name pos:start="11:14" pos:end="11:22">IOPattern</name></name>  <operator pos:start="11:25" pos:end="11:25">=</operator> <name pos:start="11:27" pos:end="11:56">MFX_IOPATTERN_IN_SYSTEM_MEMORY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:5">q</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">param</name><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:23">AsyncDepth</name></name> <operator pos:start="13:25" pos:end="13:25">=</operator> <name pos:start="13:27" pos:end="13:40"><name pos:start="13:27" pos:end="13:27">q</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:40">async_depth</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:101"><expr pos:start="17:5" pos:end="19:100"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:5">q</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:17">async_fifo</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="19:100"><name pos:start="17:21" pos:end="17:33">av_fifo_alloc</name><argument_list pos:start="17:34" pos:end="19:100">(<argument pos:start="17:35" pos:end="19:99"><expr pos:start="17:35" pos:end="19:99"><operator pos:start="17:35" pos:end="17:35">(</operator><literal type="number" pos:start="17:36" pos:end="17:38">1</literal> <operator pos:start="17:38" pos:end="17:38">+</operator> <name pos:start="17:40" pos:end="17:53"><name pos:start="17:40" pos:end="17:40">q</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:53">async_depth</name></name><operator pos:start="17:54" pos:end="17:54">)</operator> <operator pos:start="17:56" pos:end="17:56">*</operator>

                                  <operator pos:start="19:35" pos:end="19:35">(</operator><sizeof pos:start="19:36" pos:end="19:51">sizeof<argument_list pos:start="19:42" pos:end="19:51">(<argument pos:start="19:43" pos:end="19:50"><expr pos:start="19:43" pos:end="19:50"><name pos:start="19:43" pos:end="19:50">AVPacket</name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:53" pos:end="19:53">+</operator> <sizeof pos:start="19:55" pos:end="19:74">sizeof<argument_list pos:start="19:61" pos:end="19:74">(<argument pos:start="19:62" pos:end="19:73"><expr pos:start="19:62" pos:end="19:73"><name pos:start="19:62" pos:end="19:73">mfxSyncPoint</name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:76" pos:end="19:76">+</operator> <sizeof pos:start="19:78" pos:end="19:98">sizeof<argument_list pos:start="19:84" pos:end="19:98">(<argument pos:start="19:85" pos:end="19:97"><expr pos:start="19:85" pos:end="19:97"><name pos:start="19:85" pos:end="19:96">mfxBitstream</name><operator pos:start="19:97" pos:end="19:97">*</operator></expr></argument>)</argument_list></sizeof><operator pos:start="19:99" pos:end="19:99">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:22"><name pos:start="21:10" pos:end="21:10">q</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:22">async_fifo</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="41:5"><if pos:start="27:5" pos:end="41:5">if <condition pos:start="27:8" pos:end="27:31">(<expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:30">hwaccel_context</name></name></expr>)</condition> <block pos:start="27:33" pos:end="41:5">{<block_content pos:start="29:9" pos:end="39:41">

        <decl_stmt pos:start="29:9" pos:end="29:51"><decl pos:start="29:9" pos:end="29:50"><type pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:20">AVQSVContext</name> <modifier pos:start="29:22" pos:end="29:22">*</modifier></type><name pos:start="29:23" pos:end="29:25">qsv</name> <init pos:start="29:27" pos:end="29:50">= <expr pos:start="29:29" pos:end="29:50"><name pos:start="29:29" pos:end="29:50"><name pos:start="29:29" pos:end="29:33">avctx</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:50">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:9">q</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:18">session</name></name>         <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:41"><name pos:start="33:30" pos:end="33:32">qsv</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:41">session</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:9">q</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:16">param</name><operator pos:start="35:17" pos:end="35:17">.</operator><name pos:start="35:18" pos:end="35:26">IOPattern</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:43"><name pos:start="35:30" pos:end="35:32">qsv</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:43">iopattern</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:20">opaque_alloc</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:40"><name pos:start="39:24" pos:end="39:26">qsv</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:40">opaque_alloc</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="59:5"><if pos:start="45:5" pos:end="59:5">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:19"><name pos:start="45:10" pos:end="45:10">q</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:19">session</name></name></expr>)</condition> <block pos:start="45:22" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:41">

        <expr_stmt pos:start="47:9" pos:end="49:60"><expr pos:start="47:9" pos:end="49:59"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="49:59"><name pos:start="47:15" pos:end="47:42">ff_qsv_init_internal_session</name><argument_list pos:start="47:43" pos:end="49:59">(<argument pos:start="47:44" pos:end="47:48"><expr pos:start="47:44" pos:end="47:48"><name pos:start="47:44" pos:end="47:48">avctx</name></expr></argument>, <argument pos:start="47:51" pos:end="47:70"><expr pos:start="47:51" pos:end="47:70"><operator pos:start="47:51" pos:end="47:51">&amp;</operator><name pos:start="47:52" pos:end="47:70"><name pos:start="47:52" pos:end="47:52">q</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:70">internal_session</name></name></expr></argument>,

                                           <argument pos:start="49:44" pos:end="49:58"><expr pos:start="49:44" pos:end="49:58"><name pos:start="49:44" pos:end="49:58"><name pos:start="49:44" pos:end="49:44">q</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:58">load_plugins</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:23"><if pos:start="51:9" pos:end="53:23">if <condition pos:start="51:12" pos:end="51:20">(<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:23"><block_content pos:start="53:13" pos:end="53:23">

            <return pos:start="53:13" pos:end="53:23">return <expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:9">q</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:18">session</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:40"><name pos:start="57:22" pos:end="57:22">q</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:40">internal_session</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:36"><name pos:start="63:11" pos:end="63:26">init_video_param</name><argument_list pos:start="63:27" pos:end="63:36">(<argument pos:start="63:28" pos:end="63:32"><expr pos:start="63:28" pos:end="63:32"><name pos:start="63:28" pos:end="63:32">avctx</name></expr></argument>, <argument pos:start="63:35" pos:end="63:35"><expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:19"><if pos:start="65:5" pos:end="67:19">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">&lt;</operator> <literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:19"><block_content pos:start="67:9" pos:end="67:19">

        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:69"><expr pos:start="71:5" pos:end="71:68"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:68"><name pos:start="71:11" pos:end="71:36">MFXVideoENCODE_QueryIOSurf</name><argument_list pos:start="71:37" pos:end="71:68">(<argument pos:start="71:38" pos:end="71:47"><expr pos:start="71:38" pos:end="71:47"><name pos:start="71:38" pos:end="71:47"><name pos:start="71:38" pos:end="71:38">q</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:47">session</name></name></expr></argument>, <argument pos:start="71:50" pos:end="71:58"><expr pos:start="71:50" pos:end="71:58"><operator pos:start="71:50" pos:end="71:50">&amp;</operator><name pos:start="71:51" pos:end="71:58"><name pos:start="71:51" pos:end="71:51">q</name><operator pos:start="71:52" pos:end="71:53">-&gt;</operator><name pos:start="71:54" pos:end="71:58">param</name></name></expr></argument>, <argument pos:start="71:61" pos:end="71:67"><expr pos:start="71:61" pos:end="71:67"><operator pos:start="71:61" pos:end="71:61">&amp;</operator><name pos:start="71:62" pos:end="71:67"><name pos:start="71:62" pos:end="71:62">q</name><operator pos:start="71:63" pos:end="71:64">-&gt;</operator><name pos:start="71:65" pos:end="71:67">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:16">(<expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">&lt;</operator> <literal type="number" pos:start="73:15" pos:end="73:15">0</literal></expr>)</condition> <block pos:start="73:18" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:33">

        <expr_stmt pos:start="75:9" pos:end="75:80"><expr pos:start="75:9" pos:end="75:79"><call pos:start="75:9" pos:end="75:79"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:79">(<argument pos:start="75:16" pos:end="75:20"><expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">avctx</name></expr></argument>, <argument pos:start="75:23" pos:end="75:34"><expr pos:start="75:23" pos:end="75:34"><name pos:start="75:23" pos:end="75:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:37" pos:end="75:78"><expr pos:start="75:37" pos:end="75:78"><literal type="string" pos:start="75:37" pos:end="75:78">"Error querying the encoding parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:33">return <expr pos:start="77:16" pos:end="77:32"><call pos:start="77:16" pos:end="77:32"><name pos:start="77:16" pos:end="77:27">ff_qsv_error</name><argument_list pos:start="77:28" pos:end="77:32">(<argument pos:start="77:29" pos:end="77:31"><expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:31">ret</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="91:5"><if pos:start="83:5" pos:end="91:5">if <condition pos:start="83:8" pos:end="83:21">(<expr pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:20">opaque_alloc</name></expr>)</condition> <block pos:start="83:23" pos:end="91:5">{<block_content pos:start="85:9" pos:end="89:23">

        <expr_stmt pos:start="85:9" pos:end="85:46"><expr pos:start="85:9" pos:end="85:45"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:45"><name pos:start="85:15" pos:end="85:35">qsv_init_opaque_alloc</name><argument_list pos:start="85:36" pos:end="85:45">(<argument pos:start="85:37" pos:end="85:41"><expr pos:start="85:37" pos:end="85:41"><name pos:start="85:37" pos:end="85:41">avctx</name></expr></argument>, <argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><name pos:start="85:44" pos:end="85:44">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:23"><if pos:start="87:9" pos:end="89:23">if <condition pos:start="87:12" pos:end="87:20">(<expr pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:17">&lt;</operator> <literal type="number" pos:start="87:19" pos:end="87:19">0</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:23"><block_content pos:start="89:13" pos:end="89:23">

            <return pos:start="89:13" pos:end="89:23">return <expr pos:start="89:20" pos:end="89:22"><name pos:start="89:20" pos:end="89:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="149:5"><if pos:start="95:5" pos:end="143:5">if <condition pos:start="95:8" pos:end="95:31">(<expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:13">avctx</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:30">hwaccel_context</name></name></expr>)</condition> <block pos:start="95:33" pos:end="143:5">{<block_content pos:start="97:9" pos:end="141:9">

        <decl_stmt pos:start="97:9" pos:end="97:51"><decl pos:start="97:9" pos:end="97:50"><type pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:20">AVQSVContext</name> <modifier pos:start="97:22" pos:end="97:22">*</modifier></type><name pos:start="97:23" pos:end="97:25">qsv</name> <init pos:start="97:27" pos:end="97:50">= <expr pos:start="97:29" pos:end="97:50"><name pos:start="97:29" pos:end="97:50"><name pos:start="97:29" pos:end="97:33">avctx</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:50">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:17"><decl pos:start="99:9" pos:end="99:13"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:13">i</name></decl>, <decl pos:start="99:16" pos:end="99:16"><type ref="prev" pos:start="99:9" pos:end="99:11"/><name pos:start="99:16" pos:end="99:16">j</name></decl>;</decl_stmt>



        <expr_stmt pos:start="103:9" pos:end="105:61"><expr pos:start="103:9" pos:end="105:60"><name pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:9">q</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:19">extparam</name></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <call pos:start="103:23" pos:end="105:60"><name pos:start="103:23" pos:end="103:38">av_mallocz_array</name><argument_list pos:start="103:39" pos:end="105:60">(<argument pos:start="103:40" pos:end="103:84"><expr pos:start="103:40" pos:end="103:84"><name pos:start="103:40" pos:end="103:58"><name pos:start="103:40" pos:end="103:42">qsv</name><operator pos:start="103:43" pos:end="103:44">-&gt;</operator><name pos:start="103:45" pos:end="103:58">nb_ext_buffers</name></name> <operator pos:start="103:60" pos:end="103:60">+</operator> <name pos:start="103:62" pos:end="103:84"><name pos:start="103:62" pos:end="103:62">q</name><operator pos:start="103:63" pos:end="103:64">-&gt;</operator><name pos:start="103:65" pos:end="103:84">nb_extparam_internal</name></name></expr></argument>,

                                       <argument pos:start="105:40" pos:end="105:59"><expr pos:start="105:40" pos:end="105:59"><sizeof pos:start="105:40" pos:end="105:59">sizeof<argument_list pos:start="105:46" pos:end="105:59">(<argument pos:start="105:47" pos:end="105:58"><expr pos:start="105:47" pos:end="105:58"><operator pos:start="105:47" pos:end="105:47">*</operator><name pos:start="105:48" pos:end="105:58"><name pos:start="105:48" pos:end="105:48">q</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:58">extparam</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="109:35"><if pos:start="107:9" pos:end="109:35">if <condition pos:start="107:12" pos:end="107:25">(<expr pos:start="107:13" pos:end="107:24"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:24"><name pos:start="107:14" pos:end="107:14">q</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:24">extparam</name></name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:35"><block_content pos:start="109:13" pos:end="109:35">

            <return pos:start="109:13" pos:end="109:35">return <expr pos:start="109:20" pos:end="109:34"><call pos:start="109:20" pos:end="109:34"><name pos:start="109:20" pos:end="109:26">AVERROR</name><argument_list pos:start="109:27" pos:end="109:34">(<argument pos:start="109:28" pos:end="109:33"><expr pos:start="109:28" pos:end="109:33"><name pos:start="109:28" pos:end="109:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:40"><expr pos:start="113:9" pos:end="113:39"><name pos:start="113:9" pos:end="113:25"><name pos:start="113:9" pos:end="113:9">q</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:16">param</name><operator pos:start="113:17" pos:end="113:17">.</operator><name pos:start="113:18" pos:end="113:25">ExtParam</name></name> <operator pos:start="113:27" pos:end="113:27">=</operator> <name pos:start="113:29" pos:end="113:39"><name pos:start="113:29" pos:end="113:29">q</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:39">extparam</name></name></expr>;</expr_stmt>

        <for pos:start="115:9" pos:end="117:55">for <control pos:start="115:13" pos:end="115:49">(<init pos:start="115:14" pos:end="115:19"><expr pos:start="115:14" pos:end="115:18"><name pos:start="115:14" pos:end="115:14">i</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <literal type="number" pos:start="115:18" pos:end="115:18">0</literal></expr>;</init> <condition pos:start="115:21" pos:end="115:44"><expr pos:start="115:21" pos:end="115:43"><name pos:start="115:21" pos:end="115:21">i</name> <operator pos:start="115:23" pos:end="115:23">&lt;</operator> <name pos:start="115:25" pos:end="115:43"><name pos:start="115:25" pos:end="115:27">qsv</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:43">nb_ext_buffers</name></name></expr>;</condition> <incr pos:start="115:46" pos:end="115:48"><expr pos:start="115:46" pos:end="115:48"><name pos:start="115:46" pos:end="115:46">i</name><operator pos:start="115:47" pos:end="115:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="117:13" pos:end="117:55"><block_content pos:start="117:13" pos:end="117:55">

            <expr_stmt pos:start="117:13" pos:end="117:55"><expr pos:start="117:13" pos:end="117:54"><name pos:start="117:13" pos:end="117:32"><name pos:start="117:13" pos:end="117:13">q</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:20">param</name><operator pos:start="117:21" pos:end="117:21">.</operator><name pos:start="117:22" pos:end="117:29">ExtParam</name><index pos:start="117:30" pos:end="117:32">[<expr pos:start="117:31" pos:end="117:31"><name pos:start="117:31" pos:end="117:31">i</name></expr>]</index></name> <operator pos:start="117:34" pos:end="117:34">=</operator> <name pos:start="117:36" pos:end="117:54"><name pos:start="117:36" pos:end="117:38">qsv</name><operator pos:start="117:39" pos:end="117:40">-&gt;</operator><name pos:start="117:41" pos:end="117:51">ext_buffers</name><index pos:start="117:52" pos:end="117:54">[<expr pos:start="117:53" pos:end="117:53"><name pos:start="117:53" pos:end="117:53">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="119:9" pos:end="119:51"><expr pos:start="119:9" pos:end="119:50"><name pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:9">q</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:16">param</name><operator pos:start="119:17" pos:end="119:17">.</operator><name pos:start="119:18" pos:end="119:28">NumExtParam</name></name> <operator pos:start="119:30" pos:end="119:30">=</operator> <name pos:start="119:32" pos:end="119:50"><name pos:start="119:32" pos:end="119:34">qsv</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:50">nb_ext_buffers</name></name></expr>;</expr_stmt>



        <for pos:start="123:9" pos:end="141:9">for <control pos:start="123:13" pos:end="123:53">(<init pos:start="123:14" pos:end="123:19"><expr pos:start="123:14" pos:end="123:18"><name pos:start="123:14" pos:end="123:14">i</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>;</init> <condition pos:start="123:21" pos:end="123:48"><expr pos:start="123:21" pos:end="123:47"><name pos:start="123:21" pos:end="123:21">i</name> <operator pos:start="123:23" pos:end="123:23">&lt;</operator> <name pos:start="123:25" pos:end="123:47"><name pos:start="123:25" pos:end="123:25">q</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:47">nb_extparam_internal</name></name></expr>;</condition> <incr pos:start="123:50" pos:end="123:52"><expr pos:start="123:50" pos:end="123:52"><name pos:start="123:50" pos:end="123:50">i</name><operator pos:start="123:51" pos:end="123:52">++</operator></expr></incr>)</control> <block pos:start="123:55" pos:end="141:9">{<block_content pos:start="125:13" pos:end="139:80">

            <for pos:start="125:13" pos:end="131:13">for <control pos:start="125:17" pos:end="125:53">(<init pos:start="125:18" pos:end="125:23"><expr pos:start="125:18" pos:end="125:22"><name pos:start="125:18" pos:end="125:18">j</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <literal type="number" pos:start="125:22" pos:end="125:22">0</literal></expr>;</init> <condition pos:start="125:25" pos:end="125:48"><expr pos:start="125:25" pos:end="125:47"><name pos:start="125:25" pos:end="125:25">j</name> <operator pos:start="125:27" pos:end="125:27">&lt;</operator> <name pos:start="125:29" pos:end="125:47"><name pos:start="125:29" pos:end="125:31">qsv</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:47">nb_ext_buffers</name></name></expr>;</condition> <incr pos:start="125:50" pos:end="125:52"><expr pos:start="125:50" pos:end="125:52"><name pos:start="125:50" pos:end="125:50">j</name><operator pos:start="125:51" pos:end="125:52">++</operator></expr></incr>)</control> <block pos:start="125:55" pos:end="131:13">{<block_content pos:start="127:17" pos:end="129:26">

                <if_stmt pos:start="127:17" pos:end="129:26"><if pos:start="127:17" pos:end="129:26">if <condition pos:start="127:20" pos:end="127:87">(<expr pos:start="127:21" pos:end="127:86"><name pos:start="127:21" pos:end="127:39"><name pos:start="127:21" pos:end="127:23">qsv</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:36">ext_buffers</name><index pos:start="127:37" pos:end="127:39">[<expr pos:start="127:38" pos:end="127:38"><name pos:start="127:38" pos:end="127:38">j</name></expr>]</index></name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:49">BufferId</name> <operator pos:start="127:51" pos:end="127:52">==</operator> <name pos:start="127:54" pos:end="127:76"><name pos:start="127:54" pos:end="127:54">q</name><operator pos:start="127:55" pos:end="127:56">-&gt;</operator><name pos:start="127:57" pos:end="127:73">extparam_internal</name><index pos:start="127:74" pos:end="127:76">[<expr pos:start="127:75" pos:end="127:75"><name pos:start="127:75" pos:end="127:75">i</name></expr>]</index></name><operator pos:start="127:77" pos:end="127:78">-&gt;</operator><name pos:start="127:79" pos:end="127:86">BufferId</name></expr>)</condition><block type="pseudo" pos:start="129:21" pos:end="129:26"><block_content pos:start="129:21" pos:end="129:26">

                    <break pos:start="129:21" pos:end="129:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="133:13" pos:end="135:25"><if pos:start="133:13" pos:end="135:25">if <condition pos:start="133:16" pos:end="133:40">(<expr pos:start="133:17" pos:end="133:39"><name pos:start="133:17" pos:end="133:17">j</name> <operator pos:start="133:19" pos:end="133:19">&lt;</operator> <name pos:start="133:21" pos:end="133:39"><name pos:start="133:21" pos:end="133:23">qsv</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:39">nb_ext_buffers</name></name></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:25"><block_content pos:start="135:17" pos:end="135:25">

                <continue pos:start="135:17" pos:end="135:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:80"><expr pos:start="139:13" pos:end="139:79"><name pos:start="139:13" pos:end="139:53"><name pos:start="139:13" pos:end="139:13">q</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:20">param</name><operator pos:start="139:21" pos:end="139:21">.</operator><name pos:start="139:22" pos:end="139:29">ExtParam</name><index pos:start="139:30" pos:end="139:53">[<expr pos:start="139:31" pos:end="139:52"><name pos:start="139:31" pos:end="139:50"><name pos:start="139:31" pos:end="139:31">q</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:38">param</name><operator pos:start="139:39" pos:end="139:39">.</operator><name pos:start="139:40" pos:end="139:50">NumExtParam</name></name><operator pos:start="139:51" pos:end="139:52">++</operator></expr>]</index></name> <operator pos:start="139:55" pos:end="139:55">=</operator> <name pos:start="139:57" pos:end="139:79"><name pos:start="139:57" pos:end="139:57">q</name><operator pos:start="139:58" pos:end="139:59">-&gt;</operator><name pos:start="139:60" pos:end="139:76">extparam_internal</name><index pos:start="139:77" pos:end="139:79">[<expr pos:start="139:78" pos:end="139:78"><name pos:start="139:78" pos:end="139:78">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="143:7" pos:end="149:5">else <block pos:start="143:12" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:55">

        <expr_stmt pos:start="145:9" pos:end="145:52"><expr pos:start="145:9" pos:end="145:51"><name pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:9">q</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:16">param</name><operator pos:start="145:17" pos:end="145:17">.</operator><name pos:start="145:18" pos:end="145:25">ExtParam</name></name>    <operator pos:start="145:30" pos:end="145:30">=</operator> <name pos:start="145:32" pos:end="145:51"><name pos:start="145:32" pos:end="145:32">q</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:51">extparam_internal</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:55"><expr pos:start="147:9" pos:end="147:54"><name pos:start="147:9" pos:end="147:28"><name pos:start="147:9" pos:end="147:9">q</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:16">param</name><operator pos:start="147:17" pos:end="147:17">.</operator><name pos:start="147:18" pos:end="147:28">NumExtParam</name></name> <operator pos:start="147:30" pos:end="147:30">=</operator> <name pos:start="147:32" pos:end="147:54"><name pos:start="147:32" pos:end="147:32">q</name><operator pos:start="147:33" pos:end="147:34">-&gt;</operator><name pos:start="147:35" pos:end="147:54">nb_extparam_internal</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:53"><expr pos:start="153:5" pos:end="153:52"><name pos:start="153:5" pos:end="153:7">ret</name> <operator pos:start="153:9" pos:end="153:9">=</operator> <call pos:start="153:11" pos:end="153:52"><name pos:start="153:11" pos:end="153:29">MFXVideoENCODE_Init</name><argument_list pos:start="153:30" pos:end="153:52">(<argument pos:start="153:31" pos:end="153:40"><expr pos:start="153:31" pos:end="153:40"><name pos:start="153:31" pos:end="153:40"><name pos:start="153:31" pos:end="153:31">q</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:40">session</name></name></expr></argument>, <argument pos:start="153:43" pos:end="153:51"><expr pos:start="153:43" pos:end="153:51"><operator pos:start="153:43" pos:end="153:43">&amp;</operator><name pos:start="153:44" pos:end="153:51"><name pos:start="153:44" pos:end="153:44">q</name><operator pos:start="153:45" pos:end="153:46">-&gt;</operator><name pos:start="153:47" pos:end="153:51">param</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="161:5"><if pos:start="155:5" pos:end="161:5">if <condition pos:start="155:8" pos:end="155:16">(<expr pos:start="155:9" pos:end="155:15"><name pos:start="155:9" pos:end="155:11">ret</name> <operator pos:start="155:13" pos:end="155:13">&lt;</operator> <literal type="number" pos:start="155:15" pos:end="155:15">0</literal></expr>)</condition> <block pos:start="155:18" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:33">

        <expr_stmt pos:start="157:9" pos:end="157:72"><expr pos:start="157:9" pos:end="157:71"><call pos:start="157:9" pos:end="157:71"><name pos:start="157:9" pos:end="157:14">av_log</name><argument_list pos:start="157:15" pos:end="157:71">(<argument pos:start="157:16" pos:end="157:20"><expr pos:start="157:16" pos:end="157:20"><name pos:start="157:16" pos:end="157:20">avctx</name></expr></argument>, <argument pos:start="157:23" pos:end="157:34"><expr pos:start="157:23" pos:end="157:34"><name pos:start="157:23" pos:end="157:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:37" pos:end="157:70"><expr pos:start="157:37" pos:end="157:70"><literal type="string" pos:start="157:37" pos:end="157:70">"Error initializing the encoder\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="159:9" pos:end="159:33">return <expr pos:start="159:16" pos:end="159:32"><call pos:start="159:16" pos:end="159:32"><name pos:start="159:16" pos:end="159:27">ff_qsv_error</name><argument_list pos:start="159:28" pos:end="159:32">(<argument pos:start="159:29" pos:end="159:31"><expr pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:31">ret</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:44"><expr pos:start="165:5" pos:end="165:43"><name pos:start="165:5" pos:end="165:7">ret</name> <operator pos:start="165:9" pos:end="165:9">=</operator> <call pos:start="165:11" pos:end="165:43"><name pos:start="165:11" pos:end="165:33">qsv_retrieve_enc_params</name><argument_list pos:start="165:34" pos:end="165:43">(<argument pos:start="165:35" pos:end="165:39"><expr pos:start="165:35" pos:end="165:39"><name pos:start="165:35" pos:end="165:39">avctx</name></expr></argument>, <argument pos:start="165:42" pos:end="165:42"><expr pos:start="165:42" pos:end="165:42"><name pos:start="165:42" pos:end="165:42">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="173:5"><if pos:start="167:5" pos:end="173:5">if <condition pos:start="167:8" pos:end="167:16">(<expr pos:start="167:9" pos:end="167:15"><name pos:start="167:9" pos:end="167:11">ret</name> <operator pos:start="167:13" pos:end="167:13">&lt;</operator> <literal type="number" pos:start="167:15" pos:end="167:15">0</literal></expr>)</condition> <block pos:start="167:18" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:19">

        <expr_stmt pos:start="169:9" pos:end="169:79"><expr pos:start="169:9" pos:end="169:78"><call pos:start="169:9" pos:end="169:78"><name pos:start="169:9" pos:end="169:14">av_log</name><argument_list pos:start="169:15" pos:end="169:78">(<argument pos:start="169:16" pos:end="169:20"><expr pos:start="169:16" pos:end="169:20"><name pos:start="169:16" pos:end="169:20">avctx</name></expr></argument>, <argument pos:start="169:23" pos:end="169:34"><expr pos:start="169:23" pos:end="169:34"><name pos:start="169:23" pos:end="169:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="169:37" pos:end="169:77"><expr pos:start="169:37" pos:end="169:77"><literal type="string" pos:start="169:37" pos:end="169:77">"Error retrieving encoding parameters.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="171:9" pos:end="171:19">return <expr pos:start="171:16" pos:end="171:18"><name pos:start="171:16" pos:end="171:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:21"><expr pos:start="177:5" pos:end="177:20"><name pos:start="177:5" pos:end="177:12"><name pos:start="177:5" pos:end="177:5">q</name><operator pos:start="177:6" pos:end="177:7">-&gt;</operator><name pos:start="177:8" pos:end="177:12">avctx</name></name> <operator pos:start="177:14" pos:end="177:14">=</operator> <name pos:start="177:16" pos:end="177:20">avctx</name></expr>;</expr_stmt>



    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
