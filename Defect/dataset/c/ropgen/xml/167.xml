<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/167.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:10">ram_addr_t</name></type> <name pos:start="1:12" pos:end="1:34">qemu_ram_alloc_from_ptr</name><parameter_list pos:start="1:35" pos:end="3:66">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:45">ram_addr_t</name></type> <name pos:start="1:47" pos:end="1:50">size</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">host</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:51"><decl pos:start="3:36" pos:end="3:51"><type pos:start="3:36" pos:end="3:51"><name pos:start="3:36" pos:end="3:47">MemoryRegion</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:51">mr</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:65"><decl pos:start="3:54" pos:end="3:65"><type pos:start="3:54" pos:end="3:65"><name pos:start="3:54" pos:end="3:58">Error</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier><modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:16">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">RAMBlock</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:23">new_block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">ram_addr_t</name></type> <name pos:start="9:16" pos:end="9:19">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:8">size</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:34"><name pos:start="15:12" pos:end="15:28">TARGET_PAGE_ALIGN</name><argument_list pos:start="15:29" pos:end="15:34">(<argument pos:start="15:30" pos:end="15:33"><expr pos:start="15:30" pos:end="15:33"><name pos:start="15:30" pos:end="15:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:13">new_block</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:45"><name pos:start="17:17" pos:end="17:25">g_malloc0</name><argument_list pos:start="17:26" pos:end="17:45">(<argument pos:start="17:27" pos:end="17:44"><expr pos:start="17:27" pos:end="17:44"><sizeof pos:start="17:27" pos:end="17:44">sizeof<argument_list pos:start="17:33" pos:end="17:44">(<argument pos:start="17:34" pos:end="17:43"><expr pos:start="17:34" pos:end="17:43"><operator pos:start="17:34" pos:end="17:34">*</operator><name pos:start="17:35" pos:end="17:43">new_block</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:13">new_block</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:17">mr</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:22">mr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:13">new_block</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:26">used_length</name></name> <operator pos:start="21:28" pos:end="21:28">=</operator> <name pos:start="21:30" pos:end="21:33">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:13">new_block</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">max_length</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <name pos:start="23:29" pos:end="23:36">max_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13">new_block</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:17">fd</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <operator pos:start="25:21" pos:end="25:21">-</operator><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:13">new_block</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:19">host</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:26">host</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:13">(<expr pos:start="29:9" pos:end="29:12"><name pos:start="29:9" pos:end="29:12">host</name></expr>)</condition> <block pos:start="29:15" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:41">

        <expr_stmt pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:17">new_block</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:24">flags</name></name> <operator pos:start="31:26" pos:end="31:27">|=</operator> <name pos:start="31:29" pos:end="31:40">RAM_PREALLOC</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:48"><expr pos:start="35:5" pos:end="35:47"><name pos:start="35:5" pos:end="35:8">addr</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:47"><name pos:start="35:12" pos:end="35:24">ram_block_add</name><argument_list pos:start="35:25" pos:end="35:47">(<argument pos:start="35:26" pos:end="35:34"><expr pos:start="35:26" pos:end="35:34"><name pos:start="35:26" pos:end="35:34">new_block</name></expr></argument>, <argument pos:start="35:37" pos:end="35:46"><expr pos:start="35:37" pos:end="35:46"><operator pos:start="35:37" pos:end="35:37">&amp;</operator><name pos:start="35:38" pos:end="35:46">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:18">(<expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:17">local_err</name></expr>)</condition> <block pos:start="37:20" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:18">

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><call pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:14">g_free</name><argument_list pos:start="39:15" pos:end="39:25">(<argument pos:start="39:16" pos:end="39:24"><expr pos:start="39:16" pos:end="39:24"><name pos:start="39:16" pos:end="39:24">new_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:41"><expr pos:start="41:9" pos:end="41:40"><call pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:23">error_propagate</name><argument_list pos:start="41:24" pos:end="41:40">(<argument pos:start="41:25" pos:end="41:28"><expr pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:28">errp</name></expr></argument>, <argument pos:start="41:31" pos:end="41:39"><expr pos:start="41:31" pos:end="41:39"><name pos:start="41:31" pos:end="41:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="47:5" pos:end="47:16">return <expr pos:start="47:12" pos:end="47:15"><name pos:start="47:12" pos:end="47:15">addr</name></expr>;</return>

</block_content>}</block></function>
</unit>
