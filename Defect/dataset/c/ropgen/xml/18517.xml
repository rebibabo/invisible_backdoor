<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18517.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">destroy_nic</name><parameter_list pos:start="1:17" pos:end="1:51">(<parameter pos:start="1:18" pos:end="1:39"><decl pos:start="1:18" pos:end="1:39"><type pos:start="1:18" pos:end="1:39"><name pos:start="1:18" pos:end="1:29">dev_match_fn</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:39">match_fn</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:50"><decl pos:start="1:42" pos:end="1:50"><type pos:start="1:42" pos:end="1:50"><name pos:start="1:42" pos:end="1:45">void</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">NICInfo</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">nic</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="37:5">for <control pos:start="11:9" pos:end="11:34">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:29"><expr pos:start="11:17" pos:end="11:28"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:28">MAX_NICS</name></expr>;</condition> <incr pos:start="11:31" pos:end="11:33"><expr pos:start="11:31" pos:end="11:33"><name pos:start="11:31" pos:end="11:31">i</name><operator pos:start="11:32" pos:end="11:33">++</operator></expr></incr>)</control> <block pos:start="11:36" pos:end="37:5">{<block_content pos:start="13:9" pos:end="35:9">

        <expr_stmt pos:start="13:9" pos:end="13:27"><expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:11">nic</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <operator pos:start="13:15" pos:end="13:15">&amp;</operator><name pos:start="13:16" pos:end="13:26"><name pos:start="13:16" pos:end="13:23">nd_table</name><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="35:9"><if pos:start="15:9" pos:end="35:9">if <condition pos:start="15:12" pos:end="15:22">(<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:15">nic</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">used</name></name></expr>)</condition> <block pos:start="15:24" pos:end="35:9">{<block_content pos:start="17:13" pos:end="33:13">

            <if_stmt pos:start="17:13" pos:end="33:13"><if pos:start="17:13" pos:end="33:13">if <condition pos:start="17:16" pos:end="17:60">(<expr pos:start="17:17" pos:end="17:59"><name pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:19">nic</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:28">private</name></name> <operator pos:start="17:30" pos:end="17:31">&amp;&amp;</operator> <call pos:start="17:33" pos:end="17:59"><name pos:start="17:33" pos:end="17:40">match_fn</name><argument_list pos:start="17:41" pos:end="17:59">(<argument pos:start="17:42" pos:end="17:53"><expr pos:start="17:42" pos:end="17:53"><name pos:start="17:42" pos:end="17:53"><name pos:start="17:42" pos:end="17:44">nic</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:53">private</name></name></expr></argument>, <argument pos:start="17:56" pos:end="17:58"><expr pos:start="17:56" pos:end="17:58"><name pos:start="17:56" pos:end="17:58">arg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:62" pos:end="33:13">{<block_content pos:start="19:17" pos:end="31:39">

                <if_stmt pos:start="19:17" pos:end="29:17"><if pos:start="19:17" pos:end="29:17">if <condition pos:start="19:20" pos:end="19:30">(<expr pos:start="19:21" pos:end="19:29"><name pos:start="19:21" pos:end="19:29"><name pos:start="19:21" pos:end="19:23">nic</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:29">vlan</name></name></expr>)</condition> <block pos:start="19:32" pos:end="29:17">{<block_content pos:start="21:21" pos:end="27:49">

                    <decl_stmt pos:start="21:21" pos:end="21:40"><decl pos:start="21:21" pos:end="21:39"><type pos:start="21:21" pos:end="21:37"><name pos:start="21:21" pos:end="21:35">VLANClientState</name> <modifier pos:start="21:37" pos:end="21:37">*</modifier></type><name pos:start="21:38" pos:end="21:39">vc</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="23:21" pos:end="23:72"><expr pos:start="23:21" pos:end="23:71"><name pos:start="23:21" pos:end="23:22">vc</name> <operator pos:start="23:24" pos:end="23:24">=</operator> <call pos:start="23:26" pos:end="23:71"><name pos:start="23:26" pos:end="23:46">qemu_find_vlan_client</name><argument_list pos:start="23:47" pos:end="23:71">(<argument pos:start="23:48" pos:end="23:56"><expr pos:start="23:48" pos:end="23:56"><name pos:start="23:48" pos:end="23:56"><name pos:start="23:48" pos:end="23:50">nic</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:56">vlan</name></name></expr></argument>, <argument pos:start="23:59" pos:end="23:70"><expr pos:start="23:59" pos:end="23:70"><name pos:start="23:59" pos:end="23:70"><name pos:start="23:59" pos:end="23:61">nic</name><operator pos:start="23:62" pos:end="23:63">-&gt;</operator><name pos:start="23:64" pos:end="23:70">private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="25:21" pos:end="27:49"><if pos:start="25:21" pos:end="27:49">if <condition pos:start="25:24" pos:end="25:27">(<expr pos:start="25:25" pos:end="25:26"><name pos:start="25:25" pos:end="25:26">vc</name></expr>)</condition><block type="pseudo" pos:start="27:25" pos:end="27:49"><block_content pos:start="27:25" pos:end="27:49">

                        <expr_stmt pos:start="27:25" pos:end="27:49"><expr pos:start="27:25" pos:end="27:48"><call pos:start="27:25" pos:end="27:48"><name pos:start="27:25" pos:end="27:44">qemu_del_vlan_client</name><argument_list pos:start="27:45" pos:end="27:48">(<argument pos:start="27:46" pos:end="27:47"><expr pos:start="27:46" pos:end="27:47"><name pos:start="27:46" pos:end="27:47">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="31:17" pos:end="31:39"><expr pos:start="31:17" pos:end="31:38"><call pos:start="31:17" pos:end="31:38"><name pos:start="31:17" pos:end="31:33">net_client_uninit</name><argument_list pos:start="31:34" pos:end="31:38">(<argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">nic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
