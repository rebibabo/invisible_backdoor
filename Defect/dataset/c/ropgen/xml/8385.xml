<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8385.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">parse_uri</name><parameter_list pos:start="1:21" pos:end="1:72">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:41">filename</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">options</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:64">Error</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier><modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:19">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">URI</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:12">uri</name> <init pos:start="5:14" pos:end="5:19">= <expr pos:start="5:16" pos:end="5:19"><name pos:start="5:16" pos:end="5:19">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">QueryParams</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">qp</name> <init pos:start="7:21" pos:end="7:26">= <expr pos:start="7:23" pos:end="7:26"><name pos:start="7:23" pos:end="7:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:7">uri</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:29"><name pos:start="13:11" pos:end="13:19">uri_parse</name><argument_list pos:start="13:20" pos:end="13:29">(<argument pos:start="13:21" pos:end="13:28"><expr pos:start="13:21" pos:end="13:28"><name pos:start="13:21" pos:end="13:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">uri</name></expr>)</condition> <block pos:start="15:15" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:23">

        <return pos:start="17:9" pos:end="17:23">return <expr pos:start="17:16" pos:end="17:22"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:40">(<expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:14">strcmp</name><argument_list pos:start="23:15" pos:end="23:34">(<argument pos:start="23:16" pos:end="23:26"><expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:18">uri</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:26">scheme</name></name></expr></argument>, <argument pos:start="23:29" pos:end="23:33"><expr pos:start="23:29" pos:end="23:33"><literal type="string" pos:start="23:29" pos:end="23:33">"ssh"</literal></expr></argument>)</argument_list></call> <operator pos:start="23:36" pos:end="23:37">!=</operator> <literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr>)</condition> <block pos:start="23:42" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:17">

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><call pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="25:52">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="25:51"><expr pos:start="25:26" pos:end="25:51"><literal type="string" pos:start="25:26" pos:end="25:51">"URI scheme must be 'ssh'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:17">goto <name pos:start="27:14" pos:end="27:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:53">(<expr pos:start="33:9" pos:end="33:52"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:20"><name pos:start="33:10" pos:end="33:12">uri</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:20">server</name></name> <operator pos:start="33:22" pos:end="33:23">||</operator> <call pos:start="33:25" pos:end="33:47"><name pos:start="33:25" pos:end="33:30">strcmp</name><argument_list pos:start="33:31" pos:end="33:47">(<argument pos:start="33:32" pos:end="33:42"><expr pos:start="33:32" pos:end="33:42"><name pos:start="33:32" pos:end="33:42"><name pos:start="33:32" pos:end="33:34">uri</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:42">server</name></name></expr></argument>, <argument pos:start="33:45" pos:end="33:46"><expr pos:start="33:45" pos:end="33:46"><literal type="string" pos:start="33:45" pos:end="33:46">""</literal></expr></argument>)</argument_list></call> <operator pos:start="33:49" pos:end="33:50">==</operator> <literal type="number" pos:start="33:52" pos:end="33:52">0</literal></expr>)</condition> <block pos:start="33:55" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><call pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:18">error_setg</name><argument_list pos:start="35:19" pos:end="35:51">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">errp</name></expr></argument>, <argument pos:start="35:26" pos:end="35:50"><expr pos:start="35:26" pos:end="35:50"><literal type="string" pos:start="35:26" pos:end="35:50">"missing hostname in URI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:17">goto <name pos:start="37:14" pos:end="37:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:49">(<expr pos:start="43:9" pos:end="43:48"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:18"><name pos:start="43:10" pos:end="43:12">uri</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:18">path</name></name> <operator pos:start="43:20" pos:end="43:21">||</operator> <call pos:start="43:23" pos:end="43:43"><name pos:start="43:23" pos:end="43:28">strcmp</name><argument_list pos:start="43:29" pos:end="43:43">(<argument pos:start="43:30" pos:end="43:38"><expr pos:start="43:30" pos:end="43:38"><name pos:start="43:30" pos:end="43:38"><name pos:start="43:30" pos:end="43:32">uri</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:38">path</name></name></expr></argument>, <argument pos:start="43:41" pos:end="43:42"><expr pos:start="43:41" pos:end="43:42"><literal type="string" pos:start="43:41" pos:end="43:42">""</literal></expr></argument>)</argument_list></call> <operator pos:start="43:45" pos:end="43:46">==</operator> <literal type="number" pos:start="43:48" pos:end="43:48">0</literal></expr>)</condition> <block pos:start="43:51" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:17">

        <expr_stmt pos:start="45:9" pos:end="45:55"><expr pos:start="45:9" pos:end="45:54"><call pos:start="45:9" pos:end="45:54"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="45:54">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">errp</name></expr></argument>, <argument pos:start="45:26" pos:end="45:53"><expr pos:start="45:26" pos:end="45:53"><literal type="string" pos:start="45:26" pos:end="45:53">"missing remote path in URI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:17">goto <name pos:start="47:14" pos:end="47:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:40"><expr pos:start="53:5" pos:end="53:39"><name pos:start="53:5" pos:end="53:6">qp</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <call pos:start="53:10" pos:end="53:39"><name pos:start="53:10" pos:end="53:27">query_params_parse</name><argument_list pos:start="53:28" pos:end="53:39">(<argument pos:start="53:29" pos:end="53:38"><expr pos:start="53:29" pos:end="53:38"><name pos:start="53:29" pos:end="53:38"><name pos:start="53:29" pos:end="53:31">uri</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:38">query</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:12">(<expr pos:start="55:9" pos:end="55:11"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:11">qp</name></expr>)</condition> <block pos:start="55:14" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:17">

        <expr_stmt pos:start="57:9" pos:end="57:61"><expr pos:start="57:9" pos:end="57:60"><call pos:start="57:9" pos:end="57:60"><name pos:start="57:9" pos:end="57:18">error_setg</name><argument_list pos:start="57:19" pos:end="57:60">(<argument pos:start="57:20" pos:end="57:23"><expr pos:start="57:20" pos:end="57:23"><name pos:start="57:20" pos:end="57:23">errp</name></expr></argument>, <argument pos:start="57:26" pos:end="57:59"><expr pos:start="57:26" pos:end="57:59"><literal type="string" pos:start="57:26" pos:end="57:59">"could not parse query parameters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:17">goto <name pos:start="59:14" pos:end="59:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if<condition pos:start="65:7" pos:end="65:47">(<expr pos:start="65:8" pos:end="65:46"><name pos:start="65:8" pos:end="65:16"><name pos:start="65:8" pos:end="65:10">uri</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:16">user</name></name> <operator pos:start="65:18" pos:end="65:19">&amp;&amp;</operator> <call pos:start="65:21" pos:end="65:41"><name pos:start="65:21" pos:end="65:26">strcmp</name><argument_list pos:start="65:27" pos:end="65:41">(<argument pos:start="65:28" pos:end="65:36"><expr pos:start="65:28" pos:end="65:36"><name pos:start="65:28" pos:end="65:36"><name pos:start="65:28" pos:end="65:30">uri</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:36">user</name></name></expr></argument>, <argument pos:start="65:39" pos:end="65:40"><expr pos:start="65:39" pos:end="65:40"><literal type="string" pos:start="65:39" pos:end="65:40">""</literal></expr></argument>)</argument_list></call> <operator pos:start="65:43" pos:end="65:44">!=</operator> <literal type="number" pos:start="65:46" pos:end="65:46">0</literal></expr>)</condition> <block pos:start="65:49" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:64">

        <expr_stmt pos:start="67:9" pos:end="67:64"><expr pos:start="67:9" pos:end="67:63"><call pos:start="67:9" pos:end="67:63"><name pos:start="67:9" pos:end="67:17">qdict_put</name><argument_list pos:start="67:18" pos:end="67:63">(<argument pos:start="67:19" pos:end="67:25"><expr pos:start="67:19" pos:end="67:25"><name pos:start="67:19" pos:end="67:25">options</name></expr></argument>, <argument pos:start="67:28" pos:end="67:33"><expr pos:start="67:28" pos:end="67:33"><literal type="string" pos:start="67:28" pos:end="67:33">"user"</literal></expr></argument>, <argument pos:start="67:36" pos:end="67:62"><expr pos:start="67:36" pos:end="67:62"><call pos:start="67:36" pos:end="67:62"><name pos:start="67:36" pos:end="67:51">qstring_from_str</name><argument_list pos:start="67:52" pos:end="67:62">(<argument pos:start="67:53" pos:end="67:61"><expr pos:start="67:53" pos:end="67:61"><name pos:start="67:53" pos:end="67:61"><name pos:start="67:53" pos:end="67:55">uri</name><operator pos:start="67:56" pos:end="67:57">-&gt;</operator><name pos:start="67:58" pos:end="67:61">user</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:62"><expr pos:start="73:5" pos:end="73:61"><call pos:start="73:5" pos:end="73:61"><name pos:start="73:5" pos:end="73:13">qdict_put</name><argument_list pos:start="73:14" pos:end="73:61">(<argument pos:start="73:15" pos:end="73:21"><expr pos:start="73:15" pos:end="73:21"><name pos:start="73:15" pos:end="73:21">options</name></expr></argument>, <argument pos:start="73:24" pos:end="73:29"><expr pos:start="73:24" pos:end="73:29"><literal type="string" pos:start="73:24" pos:end="73:29">"host"</literal></expr></argument>, <argument pos:start="73:32" pos:end="73:60"><expr pos:start="73:32" pos:end="73:60"><call pos:start="73:32" pos:end="73:60"><name pos:start="73:32" pos:end="73:47">qstring_from_str</name><argument_list pos:start="73:48" pos:end="73:60">(<argument pos:start="73:49" pos:end="73:59"><expr pos:start="73:49" pos:end="73:59"><name pos:start="73:49" pos:end="73:59"><name pos:start="73:49" pos:end="73:51">uri</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:59">server</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:18">(<expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:11">uri</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:17">port</name></name></expr>)</condition> <block pos:start="77:20" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:61">

        <expr_stmt pos:start="79:9" pos:end="79:61"><expr pos:start="79:9" pos:end="79:60"><call pos:start="79:9" pos:end="79:60"><name pos:start="79:9" pos:end="79:17">qdict_put</name><argument_list pos:start="79:18" pos:end="79:60">(<argument pos:start="79:19" pos:end="79:25"><expr pos:start="79:19" pos:end="79:25"><name pos:start="79:19" pos:end="79:25">options</name></expr></argument>, <argument pos:start="79:28" pos:end="79:33"><expr pos:start="79:28" pos:end="79:33"><literal type="string" pos:start="79:28" pos:end="79:33">"port"</literal></expr></argument>, <argument pos:start="79:36" pos:end="79:59"><expr pos:start="79:36" pos:end="79:59"><call pos:start="79:36" pos:end="79:59"><name pos:start="79:36" pos:end="79:48">qint_from_int</name><argument_list pos:start="79:49" pos:end="79:59">(<argument pos:start="79:50" pos:end="79:58"><expr pos:start="79:50" pos:end="79:58"><name pos:start="79:50" pos:end="79:58"><name pos:start="79:50" pos:end="79:52">uri</name><operator pos:start="79:53" pos:end="79:54">-&gt;</operator><name pos:start="79:55" pos:end="79:58">port</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:60"><expr pos:start="85:5" pos:end="85:59"><call pos:start="85:5" pos:end="85:59"><name pos:start="85:5" pos:end="85:13">qdict_put</name><argument_list pos:start="85:14" pos:end="85:59">(<argument pos:start="85:15" pos:end="85:21"><expr pos:start="85:15" pos:end="85:21"><name pos:start="85:15" pos:end="85:21">options</name></expr></argument>, <argument pos:start="85:24" pos:end="85:29"><expr pos:start="85:24" pos:end="85:29"><literal type="string" pos:start="85:24" pos:end="85:29">"path"</literal></expr></argument>, <argument pos:start="85:32" pos:end="85:58"><expr pos:start="85:32" pos:end="85:58"><call pos:start="85:32" pos:end="85:58"><name pos:start="85:32" pos:end="85:47">qstring_from_str</name><argument_list pos:start="85:48" pos:end="85:58">(<argument pos:start="85:49" pos:end="85:57"><expr pos:start="85:49" pos:end="85:57"><name pos:start="85:49" pos:end="85:57"><name pos:start="85:49" pos:end="85:51">uri</name><operator pos:start="85:52" pos:end="85:53">-&gt;</operator><name pos:start="85:54" pos:end="85:57">path</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="89:5" pos:end="93:7">/* Pick out any query parameters that we understand, and ignore

     * the rest.

     */</comment>

    <for pos:start="95:5" pos:end="105:5">for <control pos:start="95:9" pos:end="95:31">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:26"><expr pos:start="95:17" pos:end="95:25"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <name pos:start="95:21" pos:end="95:25"><name pos:start="95:21" pos:end="95:22">qp</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:25">n</name></name></expr>;</condition> <incr pos:start="95:28" pos:end="95:30"><expr pos:start="95:28" pos:end="95:30"><operator pos:start="95:28" pos:end="95:29">++</operator><name pos:start="95:30" pos:end="95:30">i</name></expr></incr>)</control> <block pos:start="95:33" pos:end="105:5">{<block_content pos:start="97:9" pos:end="103:9">

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:57">(<expr pos:start="97:13" pos:end="97:56"><call pos:start="97:13" pos:end="97:51"><name pos:start="97:13" pos:end="97:18">strcmp</name><argument_list pos:start="97:19" pos:end="97:51">(<argument pos:start="97:20" pos:end="97:32"><expr pos:start="97:20" pos:end="97:32"><name pos:start="97:20" pos:end="97:27"><name pos:start="97:20" pos:end="97:21">qp</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:24">p</name><index pos:start="97:25" pos:end="97:27">[<expr pos:start="97:26" pos:end="97:26"><name pos:start="97:26" pos:end="97:26">i</name></expr>]</index></name><operator pos:start="97:28" pos:end="97:28">.</operator><name pos:start="97:29" pos:end="97:32">name</name></expr></argument>, <argument pos:start="97:35" pos:end="97:50"><expr pos:start="97:35" pos:end="97:50"><literal type="string" pos:start="97:35" pos:end="97:50">"host_key_check"</literal></expr></argument>)</argument_list></call> <operator pos:start="97:53" pos:end="97:54">==</operator> <literal type="number" pos:start="97:56" pos:end="97:56">0</literal></expr>)</condition> <block pos:start="97:59" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:56">

            <expr_stmt pos:start="99:13" pos:end="101:56"><expr pos:start="99:13" pos:end="101:55"><call pos:start="99:13" pos:end="101:55"><name pos:start="99:13" pos:end="99:21">qdict_put</name><argument_list pos:start="99:22" pos:end="101:55">(<argument pos:start="99:23" pos:end="99:29"><expr pos:start="99:23" pos:end="99:29"><name pos:start="99:23" pos:end="99:29">options</name></expr></argument>, <argument pos:start="99:32" pos:end="99:47"><expr pos:start="99:32" pos:end="99:47"><literal type="string" pos:start="99:32" pos:end="99:47">"host_key_check"</literal></expr></argument>,

                      <argument pos:start="101:23" pos:end="101:54"><expr pos:start="101:23" pos:end="101:54"><call pos:start="101:23" pos:end="101:54"><name pos:start="101:23" pos:end="101:38">qstring_from_str</name><argument_list pos:start="101:39" pos:end="101:54">(<argument pos:start="101:40" pos:end="101:53"><expr pos:start="101:40" pos:end="101:53"><name pos:start="101:40" pos:end="101:47"><name pos:start="101:40" pos:end="101:41">qp</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:44">p</name><index pos:start="101:45" pos:end="101:47">[<expr pos:start="101:46" pos:end="101:46"><name pos:start="101:46" pos:end="101:46">i</name></expr>]</index></name><operator pos:start="101:48" pos:end="101:48">.</operator><name pos:start="101:49" pos:end="101:53">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="109:5" pos:end="109:26"><expr pos:start="109:5" pos:end="109:25"><call pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:21">query_params_free</name><argument_list pos:start="109:22" pos:end="109:25">(<argument pos:start="109:23" pos:end="109:24"><expr pos:start="109:23" pos:end="109:24"><name pos:start="109:23" pos:end="109:24">qp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:18"><expr pos:start="111:5" pos:end="111:17"><call pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:12">uri_free</name><argument_list pos:start="111:13" pos:end="111:17">(<argument pos:start="111:14" pos:end="111:16"><expr pos:start="111:14" pos:end="111:16"><name pos:start="111:14" pos:end="111:16">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>



 <label pos:start="117:2" pos:end="117:5"><name pos:start="117:2" pos:end="117:4">err</name>:</label>

    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:11">(<expr pos:start="119:9" pos:end="119:10"><name pos:start="119:9" pos:end="119:10">qp</name></expr>)</condition> <block pos:start="119:13" pos:end="123:5">{<block_content pos:start="121:7" pos:end="121:28">

      <expr_stmt pos:start="121:7" pos:end="121:28"><expr pos:start="121:7" pos:end="121:27"><call pos:start="121:7" pos:end="121:27"><name pos:start="121:7" pos:end="121:23">query_params_free</name><argument_list pos:start="121:24" pos:end="121:27">(<argument pos:start="121:25" pos:end="121:26"><expr pos:start="121:25" pos:end="121:26"><name pos:start="121:25" pos:end="121:26">qp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="129:5"><if pos:start="125:5" pos:end="129:5">if <condition pos:start="125:8" pos:end="125:12">(<expr pos:start="125:9" pos:end="125:11"><name pos:start="125:9" pos:end="125:11">uri</name></expr>)</condition> <block pos:start="125:14" pos:end="129:5">{<block_content pos:start="127:7" pos:end="127:20">

      <expr_stmt pos:start="127:7" pos:end="127:20"><expr pos:start="127:7" pos:end="127:19"><call pos:start="127:7" pos:end="127:19"><name pos:start="127:7" pos:end="127:14">uri_free</name><argument_list pos:start="127:15" pos:end="127:19">(<argument pos:start="127:16" pos:end="127:18"><expr pos:start="127:16" pos:end="127:18"><name pos:start="127:16" pos:end="127:18">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="131:5" pos:end="131:19">return <expr pos:start="131:12" pos:end="131:18"><operator pos:start="131:12" pos:end="131:12">-</operator><name pos:start="131:13" pos:end="131:18">EINVAL</name></expr>;</return>

</block_content>}</block></function>
</unit>
