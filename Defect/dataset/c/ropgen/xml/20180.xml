<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20180.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:38"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">ff_mpeg4_decode_picture_header</name><parameter_list pos:start="1:35" pos:end="1:75">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:50">Mpeg4DecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">ctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:74"><decl pos:start="1:58" pos:end="1:74"><type pos:start="1:58" pos:end="1:74"><name pos:start="1:58" pos:end="1:70">GetBitContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:74">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="231:38">{<block_content pos:start="5:5" pos:end="231:38">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:31">= <expr pos:start="5:25" pos:end="5:31"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:28">ctx</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:31">m</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:22">startcode</name></decl>, <decl pos:start="7:25" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:25" pos:end="7:25">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">vol</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:32">/* search next start code */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><call pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:18">align_get_bits</name><argument_list pos:start="17:19" pos:end="17:22">(<argument pos:start="17:20" pos:end="17:21"><expr pos:start="17:20" pos:end="17:21"><name pos:start="17:20" pos:end="17:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="231:38"><if pos:start="21:5" pos:end="231:38">if <condition pos:start="21:8" pos:end="21:73">(<expr pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:20">codec_tag</name></name> <operator pos:start="21:22" pos:end="21:23">==</operator> <call pos:start="21:25" pos:end="21:39"><name pos:start="21:25" pos:end="21:31">AV_RL32</name><argument_list pos:start="21:32" pos:end="21:39">(<argument pos:start="21:33" pos:end="21:38"><expr pos:start="21:33" pos:end="21:38"><literal type="string" pos:start="21:33" pos:end="21:38">"WV1F"</literal></expr></argument>)</argument_list></call> <operator pos:start="21:41" pos:end="21:42">&amp;&amp;</operator> <call pos:start="21:44" pos:end="21:60"><name pos:start="21:44" pos:end="21:52">show_bits</name><argument_list pos:start="21:53" pos:end="21:60">(<argument pos:start="21:54" pos:end="21:55"><expr pos:start="21:54" pos:end="21:55"><name pos:start="21:54" pos:end="21:55">gb</name></expr></argument>, <argument pos:start="21:58" pos:end="21:59"><expr pos:start="21:58" pos:end="21:59"><literal type="number" pos:start="21:58" pos:end="21:59">24</literal></expr></argument>)</argument_list></call> <operator pos:start="21:62" pos:end="21:63">==</operator> <literal type="number" pos:start="21:65" pos:end="21:72">0x575630</literal></expr>)</condition> <block pos:start="21:75" pos:end="231:38">{<block_content pos:start="23:9" pos:end="231:38">

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><call pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:17">skip_bits</name><argument_list pos:start="23:18" pos:end="23:25">(<argument pos:start="23:19" pos:end="23:20"><expr pos:start="23:19" pos:end="23:20"><name pos:start="23:19" pos:end="23:20">gb</name></expr></argument>, <argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><literal type="number" pos:start="23:23" pos:end="23:24">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:21"><if pos:start="25:9" pos:end="27:21">if <condition pos:start="25:12" pos:end="25:36">(<expr pos:start="25:13" pos:end="25:35"><call pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:20">get_bits</name><argument_list pos:start="25:21" pos:end="25:27">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><name pos:start="25:22" pos:end="25:23">gb</name></expr></argument>, <argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">8</literal></expr></argument>)</argument_list></call> <operator pos:start="25:29" pos:end="25:30">==</operator> <literal type="number" pos:start="25:32" pos:end="25:35">0xF0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <goto pos:start="27:13" pos:end="27:21">goto <name pos:start="27:18" pos:end="27:20">end</name>;</goto></block_content></block></if></if_stmt>




    <expr_stmt pos:start="32:5" pos:end="32:21"><expr pos:start="32:5" pos:end="32:20"><name pos:start="32:5" pos:end="32:13">startcode</name> <operator pos:start="32:15" pos:end="32:15">=</operator> <literal type="number" pos:start="32:17" pos:end="32:20">0xff</literal></expr>;</expr_stmt>

    <for pos:start="34:5" pos:end="231:38">for <control pos:start="34:9" pos:end="34:12">(<init pos:start="34:10" pos:end="34:10">;</init><condition pos:start="34:11" pos:end="34:11">;</condition><incr/>)</control> <block pos:start="34:14" pos:end="231:38">{<block_content pos:start="36:9" pos:end="231:38">

        <if_stmt pos:start="36:9" pos:end="231:38"><if pos:start="36:9" pos:end="231:38">if <condition pos:start="36:12" pos:end="36:51">(<expr pos:start="36:13" pos:end="36:50"><call pos:start="36:13" pos:end="36:30"><name pos:start="36:13" pos:end="36:26">get_bits_count</name><argument_list pos:start="36:27" pos:end="36:30">(<argument pos:start="36:28" pos:end="36:29"><expr pos:start="36:28" pos:end="36:29"><name pos:start="36:28" pos:end="36:29">gb</name></expr></argument>)</argument_list></call> <operator pos:start="36:32" pos:end="36:33">&gt;=</operator> <name pos:start="36:35" pos:end="36:50"><name pos:start="36:35" pos:end="36:36">gb</name><operator pos:start="36:37" pos:end="36:38">-&gt;</operator><name pos:start="36:39" pos:end="36:50">size_in_bits</name></name></expr>)</condition> <block pos:start="36:53" pos:end="231:38">{<block_content pos:start="38:13" pos:end="231:38">

            <if_stmt pos:start="38:13" pos:end="48:26"><if pos:start="38:13" pos:end="46:13">if <condition pos:start="38:16" pos:end="40:100">(<expr pos:start="38:17" pos:end="40:99"><name pos:start="38:17" pos:end="38:32"><name pos:start="38:17" pos:end="38:18">gb</name><operator pos:start="38:19" pos:end="38:20">-&gt;</operator><name pos:start="38:21" pos:end="38:32">size_in_bits</name></name> <operator pos:start="38:34" pos:end="38:35">==</operator> <literal type="number" pos:start="38:37" pos:end="38:37">8</literal> <operator pos:start="38:39" pos:end="38:40">&amp;&amp;</operator>

                <operator pos:start="40:17" pos:end="40:17">(</operator><name pos:start="40:18" pos:end="40:34"><name pos:start="40:18" pos:end="40:20">ctx</name><operator pos:start="40:21" pos:end="40:22">-&gt;</operator><name pos:start="40:23" pos:end="40:34">divx_version</name></name> <operator pos:start="40:36" pos:end="40:37">&gt;=</operator> <literal type="number" pos:start="40:39" pos:end="40:39">0</literal> <operator pos:start="40:41" pos:end="40:42">||</operator> <name pos:start="40:44" pos:end="40:58"><name pos:start="40:44" pos:end="40:46">ctx</name><operator pos:start="40:47" pos:end="40:48">-&gt;</operator><name pos:start="40:49" pos:end="40:58">xvid_build</name></name> <operator pos:start="40:60" pos:end="40:61">&gt;=</operator> <literal type="number" pos:start="40:63" pos:end="40:63">0</literal><operator pos:start="40:64" pos:end="40:64">)</operator> <operator pos:start="40:66" pos:end="40:67">||</operator> <name pos:start="40:69" pos:end="40:80"><name pos:start="40:69" pos:end="40:69">s</name><operator pos:start="40:70" pos:end="40:71">-&gt;</operator><name pos:start="40:72" pos:end="40:80">codec_tag</name></name> <operator pos:start="40:82" pos:end="40:83">==</operator> <call pos:start="40:85" pos:end="40:99"><name pos:start="40:85" pos:end="40:91">AV_RL32</name><argument_list pos:start="40:92" pos:end="40:99">(<argument pos:start="40:93" pos:end="40:98"><expr pos:start="40:93" pos:end="40:98"><literal type="string" pos:start="40:93" pos:end="40:98">"QMP4"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="40:102" pos:end="46:13">{<block_content pos:start="42:17" pos:end="44:37">

                <expr_stmt pos:start="42:17" pos:end="42:86"><expr pos:start="42:17" pos:end="42:85"><call pos:start="42:17" pos:end="42:85"><name pos:start="42:17" pos:end="42:22">av_log</name><argument_list pos:start="42:23" pos:end="42:85">(<argument pos:start="42:24" pos:end="42:31"><expr pos:start="42:24" pos:end="42:31"><name pos:start="42:24" pos:end="42:31"><name pos:start="42:24" pos:end="42:24">s</name><operator pos:start="42:25" pos:end="42:26">-&gt;</operator><name pos:start="42:27" pos:end="42:31">avctx</name></name></expr></argument>, <argument pos:start="42:34" pos:end="42:47"><expr pos:start="42:34" pos:end="42:47"><name pos:start="42:34" pos:end="42:47">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="42:50" pos:end="42:66"><expr pos:start="42:50" pos:end="42:66"><literal type="string" pos:start="42:50" pos:end="42:66">"frame skip %d\n"</literal></expr></argument>, <argument pos:start="42:69" pos:end="42:84"><expr pos:start="42:69" pos:end="42:84"><name pos:start="42:69" pos:end="42:84"><name pos:start="42:69" pos:end="42:70">gb</name><operator pos:start="42:71" pos:end="42:72">-&gt;</operator><name pos:start="42:73" pos:end="42:84">size_in_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="44:17" pos:end="44:37">return <expr pos:start="44:24" pos:end="44:36"><name pos:start="44:24" pos:end="44:36">FRAME_SKIPPED</name></expr>;</return>  <comment type="line" pos:start="44:40" pos:end="44:50">// divx bug</comment>

            </block_content>}</block></if> <else pos:start="46:15" pos:end="48:26">else<block type="pseudo" pos:start="48:17" pos:end="48:26"><block_content pos:start="48:17" pos:end="48:26">

                <return pos:start="48:17" pos:end="48:26">return <expr pos:start="48:24" pos:end="48:25"><operator pos:start="48:24" pos:end="48:24">-</operator><literal type="number" pos:start="48:25" pos:end="48:25">1</literal></expr>;</return></block_content></block></else></if_stmt>  <comment type="line" pos:start="48:29" pos:end="48:44">// end of stream</comment>




        <comment type="block" pos:start="53:9" pos:end="53:41">/* use the bits after the test */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:9">v</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <call pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:20">get_bits</name><argument_list pos:start="55:21" pos:end="55:27">(<argument pos:start="55:22" pos:end="55:23"><expr pos:start="55:22" pos:end="55:23"><name pos:start="55:22" pos:end="55:23">gb</name></expr></argument>, <argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:56"><expr pos:start="57:9" pos:end="57:55"><name pos:start="57:9" pos:end="57:17">startcode</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <operator pos:start="57:21" pos:end="57:21">(</operator><operator pos:start="57:22" pos:end="57:22">(</operator><name pos:start="57:23" pos:end="57:31">startcode</name> <operator pos:start="57:33" pos:end="57:34">&lt;&lt;</operator> <literal type="number" pos:start="57:36" pos:end="57:36">8</literal><operator pos:start="57:37" pos:end="57:37">)</operator> <operator pos:start="57:39" pos:end="57:39">|</operator> <name pos:start="57:41" pos:end="57:41">v</name><operator pos:start="57:42" pos:end="57:42">)</operator> <operator pos:start="57:44" pos:end="57:44">&amp;</operator> <literal type="number" pos:start="57:46" pos:end="57:55">0xffffffff</literal></expr>;</expr_stmt>



        <if_stmt pos:start="61:9" pos:end="63:21"><if pos:start="61:9" pos:end="63:21">if <condition pos:start="61:12" pos:end="61:46">(<expr pos:start="61:13" pos:end="61:45"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:22">startcode</name> <operator pos:start="61:24" pos:end="61:24">&amp;</operator> <literal type="number" pos:start="61:26" pos:end="61:35">0xFFFFFF00</literal><operator pos:start="61:36" pos:end="61:36">)</operator> <operator pos:start="61:38" pos:end="61:39">!=</operator> <literal type="number" pos:start="61:41" pos:end="61:45">0x100</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:21"><block_content pos:start="63:13" pos:end="63:21">

            <continue pos:start="63:13" pos:end="63:21">continue;</continue></block_content></block></if></if_stmt>  <comment type="line" pos:start="63:24" pos:end="63:38">// no startcode</comment>



        <if_stmt pos:start="67:9" pos:end="231:38"><if pos:start="67:9" pos:end="231:38">if <condition pos:start="67:12" pos:end="67:49">(<expr pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:20">avctx</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:27">debug</name></name> <operator pos:start="67:29" pos:end="67:29">&amp;</operator> <name pos:start="67:31" pos:end="67:48">FF_DEBUG_STARTCODE</name></expr>)</condition> <block pos:start="67:51" pos:end="231:38">{<block_content pos:start="69:13" pos:end="231:38">

            <expr_stmt pos:start="69:13" pos:end="69:73"><expr pos:start="69:13" pos:end="69:72"><call pos:start="69:13" pos:end="69:72"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="69:72">(<argument pos:start="69:20" pos:end="69:27"><expr pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:20">s</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:27">avctx</name></name></expr></argument>, <argument pos:start="69:30" pos:end="69:41"><expr pos:start="69:30" pos:end="69:41"><name pos:start="69:30" pos:end="69:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="69:44" pos:end="69:60"><expr pos:start="69:44" pos:end="69:60"><literal type="string" pos:start="69:44" pos:end="69:60">"startcode: %3X "</literal></expr></argument>, <argument pos:start="69:63" pos:end="69:71"><expr pos:start="69:63" pos:end="69:71"><name pos:start="69:63" pos:end="69:71">startcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="177:63"><if pos:start="71:13" pos:end="73:69">if <condition pos:start="71:16" pos:end="71:35">(<expr pos:start="71:17" pos:end="71:34"><name pos:start="71:17" pos:end="71:25">startcode</name> <operator pos:start="71:27" pos:end="71:28">&lt;=</operator> <literal type="number" pos:start="71:30" pos:end="71:34">0x11F</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:69"><block_content pos:start="73:17" pos:end="73:69">

                <expr_stmt pos:start="73:17" pos:end="73:69"><expr pos:start="73:17" pos:end="73:68"><call pos:start="73:17" pos:end="73:68"><name pos:start="73:17" pos:end="73:22">av_log</name><argument_list pos:start="73:23" pos:end="73:68">(<argument pos:start="73:24" pos:end="73:31"><expr pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:31">avctx</name></name></expr></argument>, <argument pos:start="73:34" pos:end="73:45"><expr pos:start="73:34" pos:end="73:45"><name pos:start="73:34" pos:end="73:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:48" pos:end="73:67"><expr pos:start="73:48" pos:end="73:67"><literal type="string" pos:start="73:48" pos:end="73:67">"Video Object Start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="75:13" pos:end="77:75">else if <condition pos:start="75:21" pos:end="75:40">(<expr pos:start="75:22" pos:end="75:39"><name pos:start="75:22" pos:end="75:30">startcode</name> <operator pos:start="75:32" pos:end="75:33">&lt;=</operator> <literal type="number" pos:start="75:35" pos:end="75:39">0x12F</literal></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:75"><block_content pos:start="77:17" pos:end="77:75">

                <expr_stmt pos:start="77:17" pos:end="77:75"><expr pos:start="77:17" pos:end="77:74"><call pos:start="77:17" pos:end="77:74"><name pos:start="77:17" pos:end="77:22">av_log</name><argument_list pos:start="77:23" pos:end="77:74">(<argument pos:start="77:24" pos:end="77:31"><expr pos:start="77:24" pos:end="77:31"><name pos:start="77:24" pos:end="77:31"><name pos:start="77:24" pos:end="77:24">s</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:31">avctx</name></name></expr></argument>, <argument pos:start="77:34" pos:end="77:45"><expr pos:start="77:34" pos:end="77:45"><name pos:start="77:34" pos:end="77:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="77:48" pos:end="77:73"><expr pos:start="77:48" pos:end="77:73"><literal type="string" pos:start="77:48" pos:end="77:73">"Video Object Layer Start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="79:13" pos:end="81:59">else if <condition pos:start="79:21" pos:end="79:40">(<expr pos:start="79:22" pos:end="79:39"><name pos:start="79:22" pos:end="79:30">startcode</name> <operator pos:start="79:32" pos:end="79:33">&lt;=</operator> <literal type="number" pos:start="79:35" pos:end="79:39">0x13F</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:59"><block_content pos:start="81:17" pos:end="81:59">

                <expr_stmt pos:start="81:17" pos:end="81:59"><expr pos:start="81:17" pos:end="81:58"><call pos:start="81:17" pos:end="81:58"><name pos:start="81:17" pos:end="81:22">av_log</name><argument_list pos:start="81:23" pos:end="81:58">(<argument pos:start="81:24" pos:end="81:31"><expr pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:31">avctx</name></name></expr></argument>, <argument pos:start="81:34" pos:end="81:45"><expr pos:start="81:34" pos:end="81:45"><name pos:start="81:34" pos:end="81:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="81:48" pos:end="81:57"><expr pos:start="81:48" pos:end="81:57"><literal type="string" pos:start="81:48" pos:end="81:57">"Reserved"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="83:13" pos:end="85:63">else if <condition pos:start="83:21" pos:end="83:40">(<expr pos:start="83:22" pos:end="83:39"><name pos:start="83:22" pos:end="83:30">startcode</name> <operator pos:start="83:32" pos:end="83:33">&lt;=</operator> <literal type="number" pos:start="83:35" pos:end="83:39">0x15F</literal></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:63"><block_content pos:start="85:17" pos:end="85:63">

                <expr_stmt pos:start="85:17" pos:end="85:63"><expr pos:start="85:17" pos:end="85:62"><call pos:start="85:17" pos:end="85:62"><name pos:start="85:17" pos:end="85:22">av_log</name><argument_list pos:start="85:23" pos:end="85:62">(<argument pos:start="85:24" pos:end="85:31"><expr pos:start="85:24" pos:end="85:31"><name pos:start="85:24" pos:end="85:31"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:31">avctx</name></name></expr></argument>, <argument pos:start="85:34" pos:end="85:45"><expr pos:start="85:34" pos:end="85:45"><name pos:start="85:34" pos:end="85:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="85:48" pos:end="85:61"><expr pos:start="85:48" pos:end="85:61"><literal type="string" pos:start="85:48" pos:end="85:61">"FGS bp start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="87:13" pos:end="89:59">else if <condition pos:start="87:21" pos:end="87:40">(<expr pos:start="87:22" pos:end="87:39"><name pos:start="87:22" pos:end="87:30">startcode</name> <operator pos:start="87:32" pos:end="87:33">&lt;=</operator> <literal type="number" pos:start="87:35" pos:end="87:39">0x1AF</literal></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:59"><block_content pos:start="89:17" pos:end="89:59">

                <expr_stmt pos:start="89:17" pos:end="89:59"><expr pos:start="89:17" pos:end="89:58"><call pos:start="89:17" pos:end="89:58"><name pos:start="89:17" pos:end="89:22">av_log</name><argument_list pos:start="89:23" pos:end="89:58">(<argument pos:start="89:24" pos:end="89:31"><expr pos:start="89:24" pos:end="89:31"><name pos:start="89:24" pos:end="89:31"><name pos:start="89:24" pos:end="89:24">s</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:31">avctx</name></name></expr></argument>, <argument pos:start="89:34" pos:end="89:45"><expr pos:start="89:34" pos:end="89:45"><name pos:start="89:34" pos:end="89:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="89:48" pos:end="89:57"><expr pos:start="89:48" pos:end="89:57"><literal type="string" pos:start="89:48" pos:end="89:57">"Reserved"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="91:13" pos:end="93:74">else if <condition pos:start="91:21" pos:end="91:40">(<expr pos:start="91:22" pos:end="91:39"><name pos:start="91:22" pos:end="91:30">startcode</name> <operator pos:start="91:32" pos:end="91:33">==</operator> <literal type="number" pos:start="91:35" pos:end="91:39">0x1B0</literal></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:74"><block_content pos:start="93:17" pos:end="93:74">

                <expr_stmt pos:start="93:17" pos:end="93:74"><expr pos:start="93:17" pos:end="93:73"><call pos:start="93:17" pos:end="93:73"><name pos:start="93:17" pos:end="93:22">av_log</name><argument_list pos:start="93:23" pos:end="93:73">(<argument pos:start="93:24" pos:end="93:31"><expr pos:start="93:24" pos:end="93:31"><name pos:start="93:24" pos:end="93:31"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:31">avctx</name></name></expr></argument>, <argument pos:start="93:34" pos:end="93:45"><expr pos:start="93:34" pos:end="93:45"><name pos:start="93:34" pos:end="93:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="93:48" pos:end="93:72"><expr pos:start="93:48" pos:end="93:72"><literal type="string" pos:start="93:48" pos:end="93:72">"Visual Object Seq Start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="95:13" pos:end="97:72">else if <condition pos:start="95:21" pos:end="95:40">(<expr pos:start="95:22" pos:end="95:39"><name pos:start="95:22" pos:end="95:30">startcode</name> <operator pos:start="95:32" pos:end="95:33">==</operator> <literal type="number" pos:start="95:35" pos:end="95:39">0x1B1</literal></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:72"><block_content pos:start="97:17" pos:end="97:72">

                <expr_stmt pos:start="97:17" pos:end="97:72"><expr pos:start="97:17" pos:end="97:71"><call pos:start="97:17" pos:end="97:71"><name pos:start="97:17" pos:end="97:22">av_log</name><argument_list pos:start="97:23" pos:end="97:71">(<argument pos:start="97:24" pos:end="97:31"><expr pos:start="97:24" pos:end="97:31"><name pos:start="97:24" pos:end="97:31"><name pos:start="97:24" pos:end="97:24">s</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:31">avctx</name></name></expr></argument>, <argument pos:start="97:34" pos:end="97:45"><expr pos:start="97:34" pos:end="97:45"><name pos:start="97:34" pos:end="97:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="97:48" pos:end="97:70"><expr pos:start="97:48" pos:end="97:70"><literal type="string" pos:start="97:48" pos:end="97:70">"Visual Object Seq End"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="99:13" pos:end="101:60">else if <condition pos:start="99:21" pos:end="99:40">(<expr pos:start="99:22" pos:end="99:39"><name pos:start="99:22" pos:end="99:30">startcode</name> <operator pos:start="99:32" pos:end="99:33">==</operator> <literal type="number" pos:start="99:35" pos:end="99:39">0x1B2</literal></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:60"><block_content pos:start="101:17" pos:end="101:60">

                <expr_stmt pos:start="101:17" pos:end="101:60"><expr pos:start="101:17" pos:end="101:59"><call pos:start="101:17" pos:end="101:59"><name pos:start="101:17" pos:end="101:22">av_log</name><argument_list pos:start="101:23" pos:end="101:59">(<argument pos:start="101:24" pos:end="101:31"><expr pos:start="101:24" pos:end="101:31"><name pos:start="101:24" pos:end="101:31"><name pos:start="101:24" pos:end="101:24">s</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:31">avctx</name></name></expr></argument>, <argument pos:start="101:34" pos:end="101:45"><expr pos:start="101:34" pos:end="101:45"><name pos:start="101:34" pos:end="101:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="101:48" pos:end="101:58"><expr pos:start="101:48" pos:end="101:58"><literal type="string" pos:start="101:48" pos:end="101:58">"User Data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="103:13" pos:end="105:69">else if <condition pos:start="103:21" pos:end="103:40">(<expr pos:start="103:22" pos:end="103:39"><name pos:start="103:22" pos:end="103:30">startcode</name> <operator pos:start="103:32" pos:end="103:33">==</operator> <literal type="number" pos:start="103:35" pos:end="103:39">0x1B3</literal></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:69"><block_content pos:start="105:17" pos:end="105:69">

                <expr_stmt pos:start="105:17" pos:end="105:69"><expr pos:start="105:17" pos:end="105:68"><call pos:start="105:17" pos:end="105:68"><name pos:start="105:17" pos:end="105:22">av_log</name><argument_list pos:start="105:23" pos:end="105:68">(<argument pos:start="105:24" pos:end="105:31"><expr pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:31">avctx</name></name></expr></argument>, <argument pos:start="105:34" pos:end="105:45"><expr pos:start="105:34" pos:end="105:45"><name pos:start="105:34" pos:end="105:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="105:48" pos:end="105:67"><expr pos:start="105:48" pos:end="105:67"><literal type="string" pos:start="105:48" pos:end="105:67">"Group of VOP start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="107:13" pos:end="109:70">else if <condition pos:start="107:21" pos:end="107:40">(<expr pos:start="107:22" pos:end="107:39"><name pos:start="107:22" pos:end="107:30">startcode</name> <operator pos:start="107:32" pos:end="107:33">==</operator> <literal type="number" pos:start="107:35" pos:end="107:39">0x1B4</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:70"><block_content pos:start="109:17" pos:end="109:70">

                <expr_stmt pos:start="109:17" pos:end="109:70"><expr pos:start="109:17" pos:end="109:69"><call pos:start="109:17" pos:end="109:69"><name pos:start="109:17" pos:end="109:22">av_log</name><argument_list pos:start="109:23" pos:end="109:69">(<argument pos:start="109:24" pos:end="109:31"><expr pos:start="109:24" pos:end="109:31"><name pos:start="109:24" pos:end="109:31"><name pos:start="109:24" pos:end="109:24">s</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:31">avctx</name></name></expr></argument>, <argument pos:start="109:34" pos:end="109:45"><expr pos:start="109:34" pos:end="109:45"><name pos:start="109:34" pos:end="109:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="109:48" pos:end="109:68"><expr pos:start="109:48" pos:end="109:68"><literal type="string" pos:start="109:48" pos:end="109:68">"Video Session Error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="111:13" pos:end="113:70">else if <condition pos:start="111:21" pos:end="111:40">(<expr pos:start="111:22" pos:end="111:39"><name pos:start="111:22" pos:end="111:30">startcode</name> <operator pos:start="111:32" pos:end="111:33">==</operator> <literal type="number" pos:start="111:35" pos:end="111:39">0x1B5</literal></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:70"><block_content pos:start="113:17" pos:end="113:70">

                <expr_stmt pos:start="113:17" pos:end="113:70"><expr pos:start="113:17" pos:end="113:69"><call pos:start="113:17" pos:end="113:69"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="113:69">(<argument pos:start="113:24" pos:end="113:31"><expr pos:start="113:24" pos:end="113:31"><name pos:start="113:24" pos:end="113:31"><name pos:start="113:24" pos:end="113:24">s</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:31">avctx</name></name></expr></argument>, <argument pos:start="113:34" pos:end="113:45"><expr pos:start="113:34" pos:end="113:45"><name pos:start="113:34" pos:end="113:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="113:48" pos:end="113:68"><expr pos:start="113:48" pos:end="113:68"><literal type="string" pos:start="113:48" pos:end="113:68">"Visual Object Start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="115:13" pos:end="117:75">else if <condition pos:start="115:21" pos:end="115:40">(<expr pos:start="115:22" pos:end="115:39"><name pos:start="115:22" pos:end="115:30">startcode</name> <operator pos:start="115:32" pos:end="115:33">==</operator> <literal type="number" pos:start="115:35" pos:end="115:39">0x1B6</literal></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:75"><block_content pos:start="117:17" pos:end="117:75">

                <expr_stmt pos:start="117:17" pos:end="117:75"><expr pos:start="117:17" pos:end="117:74"><call pos:start="117:17" pos:end="117:74"><name pos:start="117:17" pos:end="117:22">av_log</name><argument_list pos:start="117:23" pos:end="117:74">(<argument pos:start="117:24" pos:end="117:31"><expr pos:start="117:24" pos:end="117:31"><name pos:start="117:24" pos:end="117:31"><name pos:start="117:24" pos:end="117:24">s</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:31">avctx</name></name></expr></argument>, <argument pos:start="117:34" pos:end="117:45"><expr pos:start="117:34" pos:end="117:45"><name pos:start="117:34" pos:end="117:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="117:48" pos:end="117:73"><expr pos:start="117:48" pos:end="117:73"><literal type="string" pos:start="117:48" pos:end="117:73">"Video Object Plane start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="119:13" pos:end="121:62">else if <condition pos:start="119:21" pos:end="119:40">(<expr pos:start="119:22" pos:end="119:39"><name pos:start="119:22" pos:end="119:30">startcode</name> <operator pos:start="119:32" pos:end="119:33">==</operator> <literal type="number" pos:start="119:35" pos:end="119:39">0x1B7</literal></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:62"><block_content pos:start="121:17" pos:end="121:62">

                <expr_stmt pos:start="121:17" pos:end="121:62"><expr pos:start="121:17" pos:end="121:61"><call pos:start="121:17" pos:end="121:61"><name pos:start="121:17" pos:end="121:22">av_log</name><argument_list pos:start="121:23" pos:end="121:61">(<argument pos:start="121:24" pos:end="121:31"><expr pos:start="121:24" pos:end="121:31"><name pos:start="121:24" pos:end="121:31"><name pos:start="121:24" pos:end="121:24">s</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:31">avctx</name></name></expr></argument>, <argument pos:start="121:34" pos:end="121:45"><expr pos:start="121:34" pos:end="121:45"><name pos:start="121:34" pos:end="121:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="121:48" pos:end="121:60"><expr pos:start="121:48" pos:end="121:60"><literal type="string" pos:start="121:48" pos:end="121:60">"slice start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="123:13" pos:end="125:66">else if <condition pos:start="123:21" pos:end="123:40">(<expr pos:start="123:22" pos:end="123:39"><name pos:start="123:22" pos:end="123:30">startcode</name> <operator pos:start="123:32" pos:end="123:33">==</operator> <literal type="number" pos:start="123:35" pos:end="123:39">0x1B8</literal></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:66"><block_content pos:start="125:17" pos:end="125:66">

                <expr_stmt pos:start="125:17" pos:end="125:66"><expr pos:start="125:17" pos:end="125:65"><call pos:start="125:17" pos:end="125:65"><name pos:start="125:17" pos:end="125:22">av_log</name><argument_list pos:start="125:23" pos:end="125:65">(<argument pos:start="125:24" pos:end="125:31"><expr pos:start="125:24" pos:end="125:31"><name pos:start="125:24" pos:end="125:31"><name pos:start="125:24" pos:end="125:24">s</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:31">avctx</name></name></expr></argument>, <argument pos:start="125:34" pos:end="125:45"><expr pos:start="125:34" pos:end="125:45"><name pos:start="125:34" pos:end="125:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="125:48" pos:end="125:64"><expr pos:start="125:48" pos:end="125:64"><literal type="string" pos:start="125:48" pos:end="125:64">"extension start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="127:13" pos:end="129:60">else if <condition pos:start="127:21" pos:end="127:40">(<expr pos:start="127:22" pos:end="127:39"><name pos:start="127:22" pos:end="127:30">startcode</name> <operator pos:start="127:32" pos:end="127:33">==</operator> <literal type="number" pos:start="127:35" pos:end="127:39">0x1B9</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:60"><block_content pos:start="129:17" pos:end="129:60">

                <expr_stmt pos:start="129:17" pos:end="129:60"><expr pos:start="129:17" pos:end="129:59"><call pos:start="129:17" pos:end="129:59"><name pos:start="129:17" pos:end="129:22">av_log</name><argument_list pos:start="129:23" pos:end="129:59">(<argument pos:start="129:24" pos:end="129:31"><expr pos:start="129:24" pos:end="129:31"><name pos:start="129:24" pos:end="129:31"><name pos:start="129:24" pos:end="129:24">s</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:31">avctx</name></name></expr></argument>, <argument pos:start="129:34" pos:end="129:45"><expr pos:start="129:34" pos:end="129:45"><name pos:start="129:34" pos:end="129:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="129:48" pos:end="129:58"><expr pos:start="129:48" pos:end="129:58"><literal type="string" pos:start="129:48" pos:end="129:58">"fgs start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="131:13" pos:end="133:67">else if <condition pos:start="131:21" pos:end="131:40">(<expr pos:start="131:22" pos:end="131:39"><name pos:start="131:22" pos:end="131:30">startcode</name> <operator pos:start="131:32" pos:end="131:33">==</operator> <literal type="number" pos:start="131:35" pos:end="131:39">0x1BA</literal></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:67"><block_content pos:start="133:17" pos:end="133:67">

                <expr_stmt pos:start="133:17" pos:end="133:67"><expr pos:start="133:17" pos:end="133:66"><call pos:start="133:17" pos:end="133:66"><name pos:start="133:17" pos:end="133:22">av_log</name><argument_list pos:start="133:23" pos:end="133:66">(<argument pos:start="133:24" pos:end="133:31"><expr pos:start="133:24" pos:end="133:31"><name pos:start="133:24" pos:end="133:31"><name pos:start="133:24" pos:end="133:24">s</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:31">avctx</name></name></expr></argument>, <argument pos:start="133:34" pos:end="133:45"><expr pos:start="133:34" pos:end="133:45"><name pos:start="133:34" pos:end="133:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="133:48" pos:end="133:65"><expr pos:start="133:48" pos:end="133:65"><literal type="string" pos:start="133:48" pos:end="133:65">"FBA Object start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="135:13" pos:end="137:73">else if <condition pos:start="135:21" pos:end="135:40">(<expr pos:start="135:22" pos:end="135:39"><name pos:start="135:22" pos:end="135:30">startcode</name> <operator pos:start="135:32" pos:end="135:33">==</operator> <literal type="number" pos:start="135:35" pos:end="135:39">0x1BB</literal></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:73"><block_content pos:start="137:17" pos:end="137:73">

                <expr_stmt pos:start="137:17" pos:end="137:73"><expr pos:start="137:17" pos:end="137:72"><call pos:start="137:17" pos:end="137:72"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="137:72">(<argument pos:start="137:24" pos:end="137:31"><expr pos:start="137:24" pos:end="137:31"><name pos:start="137:24" pos:end="137:31"><name pos:start="137:24" pos:end="137:24">s</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:31">avctx</name></name></expr></argument>, <argument pos:start="137:34" pos:end="137:45"><expr pos:start="137:34" pos:end="137:45"><name pos:start="137:34" pos:end="137:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="137:48" pos:end="137:71"><expr pos:start="137:48" pos:end="137:71"><literal type="string" pos:start="137:48" pos:end="137:71">"FBA Object Plane start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="139:13" pos:end="141:68">else if <condition pos:start="139:21" pos:end="139:40">(<expr pos:start="139:22" pos:end="139:39"><name pos:start="139:22" pos:end="139:30">startcode</name> <operator pos:start="139:32" pos:end="139:33">==</operator> <literal type="number" pos:start="139:35" pos:end="139:39">0x1BC</literal></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:68"><block_content pos:start="141:17" pos:end="141:68">

                <expr_stmt pos:start="141:17" pos:end="141:68"><expr pos:start="141:17" pos:end="141:67"><call pos:start="141:17" pos:end="141:67"><name pos:start="141:17" pos:end="141:22">av_log</name><argument_list pos:start="141:23" pos:end="141:67">(<argument pos:start="141:24" pos:end="141:31"><expr pos:start="141:24" pos:end="141:31"><name pos:start="141:24" pos:end="141:31"><name pos:start="141:24" pos:end="141:24">s</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:31">avctx</name></name></expr></argument>, <argument pos:start="141:34" pos:end="141:45"><expr pos:start="141:34" pos:end="141:45"><name pos:start="141:34" pos:end="141:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="141:48" pos:end="141:66"><expr pos:start="141:48" pos:end="141:66"><literal type="string" pos:start="141:48" pos:end="141:66">"Mesh Object start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="143:13" pos:end="145:74">else if <condition pos:start="143:21" pos:end="143:40">(<expr pos:start="143:22" pos:end="143:39"><name pos:start="143:22" pos:end="143:30">startcode</name> <operator pos:start="143:32" pos:end="143:33">==</operator> <literal type="number" pos:start="143:35" pos:end="143:39">0x1BD</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:74"><block_content pos:start="145:17" pos:end="145:74">

                <expr_stmt pos:start="145:17" pos:end="145:74"><expr pos:start="145:17" pos:end="145:73"><call pos:start="145:17" pos:end="145:73"><name pos:start="145:17" pos:end="145:22">av_log</name><argument_list pos:start="145:23" pos:end="145:73">(<argument pos:start="145:24" pos:end="145:31"><expr pos:start="145:24" pos:end="145:31"><name pos:start="145:24" pos:end="145:31"><name pos:start="145:24" pos:end="145:24">s</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:31">avctx</name></name></expr></argument>, <argument pos:start="145:34" pos:end="145:45"><expr pos:start="145:34" pos:end="145:45"><name pos:start="145:34" pos:end="145:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="145:48" pos:end="145:72"><expr pos:start="145:48" pos:end="145:72"><literal type="string" pos:start="145:48" pos:end="145:72">"Mesh Object Plane start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="147:13" pos:end="149:77">else if <condition pos:start="147:21" pos:end="147:40">(<expr pos:start="147:22" pos:end="147:39"><name pos:start="147:22" pos:end="147:30">startcode</name> <operator pos:start="147:32" pos:end="147:33">==</operator> <literal type="number" pos:start="147:35" pos:end="147:39">0x1BE</literal></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:77"><block_content pos:start="149:17" pos:end="149:77">

                <expr_stmt pos:start="149:17" pos:end="149:77"><expr pos:start="149:17" pos:end="149:76"><call pos:start="149:17" pos:end="149:76"><name pos:start="149:17" pos:end="149:22">av_log</name><argument_list pos:start="149:23" pos:end="149:76">(<argument pos:start="149:24" pos:end="149:31"><expr pos:start="149:24" pos:end="149:31"><name pos:start="149:24" pos:end="149:31"><name pos:start="149:24" pos:end="149:24">s</name><operator pos:start="149:25" pos:end="149:26">-&gt;</operator><name pos:start="149:27" pos:end="149:31">avctx</name></name></expr></argument>, <argument pos:start="149:34" pos:end="149:45"><expr pos:start="149:34" pos:end="149:45"><name pos:start="149:34" pos:end="149:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="149:48" pos:end="149:75"><expr pos:start="149:48" pos:end="149:75"><literal type="string" pos:start="149:48" pos:end="149:75">"Still Texture Object start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="151:13" pos:end="153:78">else if <condition pos:start="151:21" pos:end="151:40">(<expr pos:start="151:22" pos:end="151:39"><name pos:start="151:22" pos:end="151:30">startcode</name> <operator pos:start="151:32" pos:end="151:33">==</operator> <literal type="number" pos:start="151:35" pos:end="151:39">0x1BF</literal></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:78"><block_content pos:start="153:17" pos:end="153:78">

                <expr_stmt pos:start="153:17" pos:end="153:78"><expr pos:start="153:17" pos:end="153:77"><call pos:start="153:17" pos:end="153:77"><name pos:start="153:17" pos:end="153:22">av_log</name><argument_list pos:start="153:23" pos:end="153:77">(<argument pos:start="153:24" pos:end="153:31"><expr pos:start="153:24" pos:end="153:31"><name pos:start="153:24" pos:end="153:31"><name pos:start="153:24" pos:end="153:24">s</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:31">avctx</name></name></expr></argument>, <argument pos:start="153:34" pos:end="153:45"><expr pos:start="153:34" pos:end="153:45"><name pos:start="153:34" pos:end="153:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="153:48" pos:end="153:76"><expr pos:start="153:48" pos:end="153:76"><literal type="string" pos:start="153:48" pos:end="153:76">"Texture Spatial Layer start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="155:13" pos:end="157:74">else if <condition pos:start="155:21" pos:end="155:40">(<expr pos:start="155:22" pos:end="155:39"><name pos:start="155:22" pos:end="155:30">startcode</name> <operator pos:start="155:32" pos:end="155:33">==</operator> <literal type="number" pos:start="155:35" pos:end="155:39">0x1C0</literal></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:74"><block_content pos:start="157:17" pos:end="157:74">

                <expr_stmt pos:start="157:17" pos:end="157:74"><expr pos:start="157:17" pos:end="157:73"><call pos:start="157:17" pos:end="157:73"><name pos:start="157:17" pos:end="157:22">av_log</name><argument_list pos:start="157:23" pos:end="157:73">(<argument pos:start="157:24" pos:end="157:31"><expr pos:start="157:24" pos:end="157:31"><name pos:start="157:24" pos:end="157:31"><name pos:start="157:24" pos:end="157:24">s</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:31">avctx</name></name></expr></argument>, <argument pos:start="157:34" pos:end="157:45"><expr pos:start="157:34" pos:end="157:45"><name pos:start="157:34" pos:end="157:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="157:48" pos:end="157:72"><expr pos:start="157:48" pos:end="157:72"><literal type="string" pos:start="157:48" pos:end="157:72">"Texture SNR Layer start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="159:13" pos:end="161:69">else if <condition pos:start="159:21" pos:end="159:40">(<expr pos:start="159:22" pos:end="159:39"><name pos:start="159:22" pos:end="159:30">startcode</name> <operator pos:start="159:32" pos:end="159:33">==</operator> <literal type="number" pos:start="159:35" pos:end="159:39">0x1C1</literal></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:69"><block_content pos:start="161:17" pos:end="161:69">

                <expr_stmt pos:start="161:17" pos:end="161:69"><expr pos:start="161:17" pos:end="161:68"><call pos:start="161:17" pos:end="161:68"><name pos:start="161:17" pos:end="161:22">av_log</name><argument_list pos:start="161:23" pos:end="161:68">(<argument pos:start="161:24" pos:end="161:31"><expr pos:start="161:24" pos:end="161:31"><name pos:start="161:24" pos:end="161:31"><name pos:start="161:24" pos:end="161:24">s</name><operator pos:start="161:25" pos:end="161:26">-&gt;</operator><name pos:start="161:27" pos:end="161:31">avctx</name></name></expr></argument>, <argument pos:start="161:34" pos:end="161:45"><expr pos:start="161:34" pos:end="161:45"><name pos:start="161:34" pos:end="161:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="161:48" pos:end="161:67"><expr pos:start="161:48" pos:end="161:67"><literal type="string" pos:start="161:48" pos:end="161:67">"Texture Tile start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="163:13" pos:end="165:76">else if <condition pos:start="163:21" pos:end="163:40">(<expr pos:start="163:22" pos:end="163:39"><name pos:start="163:22" pos:end="163:30">startcode</name> <operator pos:start="163:32" pos:end="163:33">==</operator> <literal type="number" pos:start="163:35" pos:end="163:39">0x1C2</literal></expr>)</condition><block type="pseudo" pos:start="165:17" pos:end="165:76"><block_content pos:start="165:17" pos:end="165:76">

                <expr_stmt pos:start="165:17" pos:end="165:76"><expr pos:start="165:17" pos:end="165:75"><call pos:start="165:17" pos:end="165:75"><name pos:start="165:17" pos:end="165:22">av_log</name><argument_list pos:start="165:23" pos:end="165:75">(<argument pos:start="165:24" pos:end="165:31"><expr pos:start="165:24" pos:end="165:31"><name pos:start="165:24" pos:end="165:31"><name pos:start="165:24" pos:end="165:24">s</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:31">avctx</name></name></expr></argument>, <argument pos:start="165:34" pos:end="165:45"><expr pos:start="165:34" pos:end="165:45"><name pos:start="165:34" pos:end="165:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="165:48" pos:end="165:74"><expr pos:start="165:48" pos:end="165:74"><literal type="string" pos:start="165:48" pos:end="165:74">"Texture Shape Layer start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="167:13" pos:end="169:65">else if <condition pos:start="167:21" pos:end="167:40">(<expr pos:start="167:22" pos:end="167:39"><name pos:start="167:22" pos:end="167:30">startcode</name> <operator pos:start="167:32" pos:end="167:33">==</operator> <literal type="number" pos:start="167:35" pos:end="167:39">0x1C3</literal></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:65"><block_content pos:start="169:17" pos:end="169:65">

                <expr_stmt pos:start="169:17" pos:end="169:65"><expr pos:start="169:17" pos:end="169:64"><call pos:start="169:17" pos:end="169:64"><name pos:start="169:17" pos:end="169:22">av_log</name><argument_list pos:start="169:23" pos:end="169:64">(<argument pos:start="169:24" pos:end="169:31"><expr pos:start="169:24" pos:end="169:31"><name pos:start="169:24" pos:end="169:31"><name pos:start="169:24" pos:end="169:24">s</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:31">avctx</name></name></expr></argument>, <argument pos:start="169:34" pos:end="169:45"><expr pos:start="169:34" pos:end="169:45"><name pos:start="169:34" pos:end="169:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="169:48" pos:end="169:63"><expr pos:start="169:48" pos:end="169:63"><literal type="string" pos:start="169:48" pos:end="169:63">"stuffing start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="171:13" pos:end="173:59">else if <condition pos:start="171:21" pos:end="171:40">(<expr pos:start="171:22" pos:end="171:39"><name pos:start="171:22" pos:end="171:30">startcode</name> <operator pos:start="171:32" pos:end="171:33">&lt;=</operator> <literal type="number" pos:start="171:35" pos:end="171:39">0x1C5</literal></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:59"><block_content pos:start="173:17" pos:end="173:59">

                <expr_stmt pos:start="173:17" pos:end="173:59"><expr pos:start="173:17" pos:end="173:58"><call pos:start="173:17" pos:end="173:58"><name pos:start="173:17" pos:end="173:22">av_log</name><argument_list pos:start="173:23" pos:end="173:58">(<argument pos:start="173:24" pos:end="173:31"><expr pos:start="173:24" pos:end="173:31"><name pos:start="173:24" pos:end="173:31"><name pos:start="173:24" pos:end="173:24">s</name><operator pos:start="173:25" pos:end="173:26">-&gt;</operator><name pos:start="173:27" pos:end="173:31">avctx</name></name></expr></argument>, <argument pos:start="173:34" pos:end="173:45"><expr pos:start="173:34" pos:end="173:45"><name pos:start="173:34" pos:end="173:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="173:48" pos:end="173:57"><expr pos:start="173:48" pos:end="173:57"><literal type="string" pos:start="173:48" pos:end="173:57">"reserved"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="175:13" pos:end="177:63">else if <condition pos:start="175:21" pos:end="175:40">(<expr pos:start="175:22" pos:end="175:39"><name pos:start="175:22" pos:end="175:30">startcode</name> <operator pos:start="175:32" pos:end="175:33">&lt;=</operator> <literal type="number" pos:start="175:35" pos:end="175:39">0x1FF</literal></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:63"><block_content pos:start="177:17" pos:end="177:63">

                <expr_stmt pos:start="177:17" pos:end="177:63"><expr pos:start="177:17" pos:end="177:62"><call pos:start="177:17" pos:end="177:62"><name pos:start="177:17" pos:end="177:22">av_log</name><argument_list pos:start="177:23" pos:end="177:62">(<argument pos:start="177:24" pos:end="177:31"><expr pos:start="177:24" pos:end="177:31"><name pos:start="177:24" pos:end="177:31"><name pos:start="177:24" pos:end="177:24">s</name><operator pos:start="177:25" pos:end="177:26">-&gt;</operator><name pos:start="177:27" pos:end="177:31">avctx</name></name></expr></argument>, <argument pos:start="177:34" pos:end="177:45"><expr pos:start="177:34" pos:end="177:45"><name pos:start="177:34" pos:end="177:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="177:48" pos:end="177:61"><expr pos:start="177:48" pos:end="177:61"><literal type="string" pos:start="177:48" pos:end="177:61">"System start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:75"><expr pos:start="179:13" pos:end="179:74"><call pos:start="179:13" pos:end="179:74"><name pos:start="179:13" pos:end="179:18">av_log</name><argument_list pos:start="179:19" pos:end="179:74">(<argument pos:start="179:20" pos:end="179:27"><expr pos:start="179:20" pos:end="179:27"><name pos:start="179:20" pos:end="179:27"><name pos:start="179:20" pos:end="179:20">s</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:27">avctx</name></name></expr></argument>, <argument pos:start="179:30" pos:end="179:41"><expr pos:start="179:30" pos:end="179:41"><name pos:start="179:30" pos:end="179:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="179:44" pos:end="179:53"><expr pos:start="179:44" pos:end="179:53"><literal type="string" pos:start="179:44" pos:end="179:53">" at %d\n"</literal></expr></argument>, <argument pos:start="179:56" pos:end="179:73"><expr pos:start="179:56" pos:end="179:73"><call pos:start="179:56" pos:end="179:73"><name pos:start="179:56" pos:end="179:69">get_bits_count</name><argument_list pos:start="179:70" pos:end="179:73">(<argument pos:start="179:71" pos:end="179:72"><expr pos:start="179:71" pos:end="179:72"><name pos:start="179:71" pos:end="179:72">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <if_stmt pos:start="184:9" pos:end="231:38"><if pos:start="184:9" pos:end="195:9">if <condition pos:start="184:12" pos:end="184:53">(<expr pos:start="184:13" pos:end="184:52"><name pos:start="184:13" pos:end="184:21">startcode</name> <operator pos:start="184:23" pos:end="184:24">&gt;=</operator> <literal type="number" pos:start="184:26" pos:end="184:30">0x120</literal> <operator pos:start="184:32" pos:end="184:33">&amp;&amp;</operator> <name pos:start="184:35" pos:end="184:43">startcode</name> <operator pos:start="184:45" pos:end="184:46">&lt;=</operator> <literal type="number" pos:start="184:48" pos:end="184:52">0x12F</literal></expr>)</condition> <block pos:start="184:55" pos:end="195:9">{<block_content pos:start="191:13" pos:end="193:27">






            <if_stmt pos:start="191:13" pos:end="193:27"><if pos:start="191:13" pos:end="193:27">if <condition pos:start="191:16" pos:end="191:55">(<expr pos:start="191:17" pos:end="191:54"><operator pos:start="191:17" pos:end="191:17">(</operator><name pos:start="191:18" pos:end="191:20">ret</name> <operator pos:start="191:22" pos:end="191:22">=</operator> <call pos:start="191:24" pos:end="191:49"><name pos:start="191:24" pos:end="191:40">decode_vol_header</name><argument_list pos:start="191:41" pos:end="191:49">(<argument pos:start="191:42" pos:end="191:44"><expr pos:start="191:42" pos:end="191:44"><name pos:start="191:42" pos:end="191:44">ctx</name></expr></argument>, <argument pos:start="191:47" pos:end="191:48"><expr pos:start="191:47" pos:end="191:48"><name pos:start="191:47" pos:end="191:48">gb</name></expr></argument>)</argument_list></call><operator pos:start="191:50" pos:end="191:50">)</operator> <operator pos:start="191:52" pos:end="191:52">&lt;</operator> <literal type="number" pos:start="191:54" pos:end="191:54">0</literal></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:27"><block_content pos:start="193:17" pos:end="193:27">

                <return pos:start="193:17" pos:end="193:27">return <expr pos:start="193:24" pos:end="193:26"><name pos:start="193:24" pos:end="193:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="195:11" pos:end="199:9">else if <condition pos:start="195:19" pos:end="195:52">(<expr pos:start="195:20" pos:end="195:51"><name pos:start="195:20" pos:end="195:28">startcode</name> <operator pos:start="195:30" pos:end="195:31">==</operator> <name pos:start="195:33" pos:end="195:51">USER_DATA_STARTCODE</name></expr>)</condition> <block pos:start="195:54" pos:end="199:9">{<block_content pos:start="197:13" pos:end="197:38">

            <expr_stmt pos:start="197:13" pos:end="197:38"><expr pos:start="197:13" pos:end="197:37"><call pos:start="197:13" pos:end="197:37"><name pos:start="197:13" pos:end="197:28">decode_user_data</name><argument_list pos:start="197:29" pos:end="197:37">(<argument pos:start="197:30" pos:end="197:32"><expr pos:start="197:30" pos:end="197:32"><name pos:start="197:30" pos:end="197:32">ctx</name></expr></argument>, <argument pos:start="197:35" pos:end="197:36"><expr pos:start="197:35" pos:end="197:36"><name pos:start="197:35" pos:end="197:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="199:11" pos:end="203:9">else if <condition pos:start="199:19" pos:end="199:46">(<expr pos:start="199:20" pos:end="199:45"><name pos:start="199:20" pos:end="199:28">startcode</name> <operator pos:start="199:30" pos:end="199:31">==</operator> <name pos:start="199:33" pos:end="199:45">GOP_STARTCODE</name></expr>)</condition> <block pos:start="199:48" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:43">

            <expr_stmt pos:start="201:13" pos:end="201:43"><expr pos:start="201:13" pos:end="201:42"><call pos:start="201:13" pos:end="201:42"><name pos:start="201:13" pos:end="201:35">mpeg4_decode_gop_header</name><argument_list pos:start="201:36" pos:end="201:42">(<argument pos:start="201:37" pos:end="201:37"><expr pos:start="201:37" pos:end="201:37"><name pos:start="201:37" pos:end="201:37">s</name></expr></argument>, <argument pos:start="201:40" pos:end="201:41"><expr pos:start="201:40" pos:end="201:41"><name pos:start="201:40" pos:end="201:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="203:11" pos:end="207:9">else if <condition pos:start="203:19" pos:end="203:46">(<expr pos:start="203:20" pos:end="203:45"><name pos:start="203:20" pos:end="203:28">startcode</name> <operator pos:start="203:30" pos:end="203:31">==</operator> <name pos:start="203:33" pos:end="203:45">VOS_STARTCODE</name></expr>)</condition> <block pos:start="203:48" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:46">

            <expr_stmt pos:start="205:13" pos:end="205:46"><expr pos:start="205:13" pos:end="205:45"><call pos:start="205:13" pos:end="205:45"><name pos:start="205:13" pos:end="205:38">mpeg4_decode_profile_level</name><argument_list pos:start="205:39" pos:end="205:45">(<argument pos:start="205:40" pos:end="205:40"><expr pos:start="205:40" pos:end="205:40"><name pos:start="205:40" pos:end="205:40">s</name></expr></argument>, <argument pos:start="205:43" pos:end="205:44"><expr pos:start="205:43" pos:end="205:44"><name pos:start="205:43" pos:end="205:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="207:11" pos:end="231:38">else if <condition pos:start="207:19" pos:end="207:46">(<expr pos:start="207:20" pos:end="207:45"><name pos:start="207:20" pos:end="207:28">startcode</name> <operator pos:start="207:30" pos:end="207:31">==</operator> <name pos:start="207:33" pos:end="207:45">VOP_STARTCODE</name></expr>)</condition> <block pos:start="207:48" pos:end="231:38">{<block_content pos:start="209:13" pos:end="231:38">

            <break pos:start="209:13" pos:end="209:18">break;</break>




        <expr_stmt pos:start="214:9" pos:end="214:27"><expr pos:start="214:9" pos:end="214:26"><call pos:start="214:9" pos:end="214:26"><name pos:start="214:9" pos:end="214:22">align_get_bits</name><argument_list pos:start="214:23" pos:end="214:26">(<argument pos:start="214:24" pos:end="214:25"><expr pos:start="214:24" pos:end="214:25"><name pos:start="214:24" pos:end="214:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="216:9" pos:end="216:25"><expr pos:start="216:9" pos:end="216:24"><name pos:start="216:9" pos:end="216:17">startcode</name> <operator pos:start="216:19" pos:end="216:19">=</operator> <literal type="number" pos:start="216:21" pos:end="216:24">0xff</literal></expr>;</expr_stmt>




<label pos:start="221:1" pos:end="221:4"><name pos:start="221:1" pos:end="221:3">end</name>:</label>

    <if_stmt pos:start="223:5" pos:end="225:25"><if pos:start="223:5" pos:end="225:25">if <condition pos:start="223:8" pos:end="223:50">(<expr pos:start="223:9" pos:end="223:49"><name pos:start="223:9" pos:end="223:23"><name pos:start="223:9" pos:end="223:9">s</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:16">avctx</name><operator pos:start="223:17" pos:end="223:18">-&gt;</operator><name pos:start="223:19" pos:end="223:23">flags</name></name> <operator pos:start="223:25" pos:end="223:25">&amp;</operator> <name pos:start="223:27" pos:end="223:49">AV_CODEC_FLAG_LOW_DELAY</name></expr>)</condition><block type="pseudo" pos:start="225:9" pos:end="225:25"><block_content pos:start="225:9" pos:end="225:25">

        <expr_stmt pos:start="225:9" pos:end="225:25"><expr pos:start="225:9" pos:end="225:24"><name pos:start="225:9" pos:end="225:20"><name pos:start="225:9" pos:end="225:9">s</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:20">low_delay</name></name> <operator pos:start="225:22" pos:end="225:22">=</operator> <literal type="number" pos:start="225:24" pos:end="225:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:43"><expr pos:start="227:5" pos:end="227:42"><name pos:start="227:5" pos:end="227:26"><name pos:start="227:5" pos:end="227:5">s</name><operator pos:start="227:6" pos:end="227:7">-&gt;</operator><name pos:start="227:8" pos:end="227:12">avctx</name><operator pos:start="227:13" pos:end="227:14">-&gt;</operator><name pos:start="227:15" pos:end="227:26">has_b_frames</name></name> <operator pos:start="227:28" pos:end="227:28">=</operator> <operator pos:start="227:30" pos:end="227:30">!</operator><name pos:start="227:31" pos:end="227:42"><name pos:start="227:31" pos:end="227:31">s</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:42">low_delay</name></name></expr>;</expr_stmt>



    <return pos:start="231:5" pos:end="231:38">return <expr pos:start="231:12" pos:end="231:37"><call pos:start="231:12" pos:end="231:37"><name pos:start="231:12" pos:end="231:28">decode_vop_header</name><argument_list pos:start="231:29" pos:end="231:37">(<argument pos:start="231:30" pos:end="231:32"><expr pos:start="231:30" pos:end="231:32"><name pos:start="231:30" pos:end="231:32">ctx</name></expr></argument>, <argument pos:start="231:35" pos:end="231:36"><expr pos:start="231:35" pos:end="231:36"><name pos:start="231:35" pos:end="231:36">gb</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function>
</unit>
