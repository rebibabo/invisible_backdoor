<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7853.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">cirrus_bitblt_cputovideo_next</name><parameter_list pos:start="1:42" pos:end="1:61">(<parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:58"><name pos:start="1:43" pos:end="1:56">CirrusVGAState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type> <name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">copy_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:20">end_ptr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="65:5"><if pos:start="11:5" pos:end="65:5">if <condition pos:start="11:8" pos:end="11:33">(<expr pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:28">cirrus_srccounter</name></name> <operator pos:start="11:30" pos:end="11:30">&gt;</operator> <literal type="number" pos:start="11:32" pos:end="11:32">0</literal></expr>)</condition> <block pos:start="11:35" pos:end="65:5">{<block_content pos:start="13:9" pos:end="63:9">

        <if_stmt pos:start="13:9" pos:end="63:9"><if pos:start="13:9" pos:end="23:9">if <condition pos:start="13:12" pos:end="13:60">(<expr pos:start="13:13" pos:end="13:59"><name pos:start="13:13" pos:end="13:30"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:30">cirrus_blt_mode</name></name> <operator pos:start="13:32" pos:end="13:32">&amp;</operator> <name pos:start="13:34" pos:end="13:59">CIRRUS_BLTMODE_PATTERNCOPY</name></expr>)</condition> <block pos:start="13:62" pos:end="23:9">{<block_content pos:start="15:13" pos:end="21:35">

            <expr_stmt pos:start="15:13" pos:end="15:55"><expr pos:start="15:13" pos:end="15:54"><call pos:start="15:13" pos:end="15:54"><name pos:start="15:13" pos:end="15:44">cirrus_bitblt_common_patterncopy</name><argument_list pos:start="15:45" pos:end="15:54">(<argument pos:start="15:46" pos:end="15:46"><expr pos:start="15:46" pos:end="15:46"><name pos:start="15:46" pos:end="15:46">s</name></expr></argument>, <argument pos:start="15:49" pos:end="15:53"><expr pos:start="15:49" pos:end="15:53"><name pos:start="15:49" pos:end="15:53">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:15">the_end</name>:</label>

            <expr_stmt pos:start="19:13" pos:end="19:37"><expr pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:32">cirrus_srccounter</name></name> <operator pos:start="19:34" pos:end="19:34">=</operator> <literal type="number" pos:start="19:36" pos:end="19:36">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:35"><expr pos:start="21:13" pos:end="21:34"><call pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:31">cirrus_bitblt_reset</name><argument_list pos:start="21:32" pos:end="21:34">(<argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="63:9">else <block pos:start="23:16" pos:end="63:9">{<block_content pos:start="27:13" pos:end="61:63">

            <comment type="block" pos:start="25:13" pos:end="25:40">/* at least one scan line */</comment>

            <do pos:start="27:13" pos:end="61:63">do <block pos:start="27:16" pos:end="61:13">{<block_content pos:start="29:17" pos:end="59:81">

                <expr_stmt pos:start="29:17" pos:end="31:82"><expr pos:start="29:17" pos:end="31:81"><call pos:start="29:17" pos:end="31:81">(<modifier pos:start="29:18" pos:end="29:18">*</modifier><name pos:start="29:19" pos:end="29:31"><name pos:start="29:19" pos:end="29:19">s</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:31">cirrus_rop</name></name>)<argument_list pos:start="29:33" pos:end="31:81">(<argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">s</name></expr></argument>, <argument pos:start="29:37" pos:end="29:75"><expr pos:start="29:37" pos:end="29:75"><name pos:start="29:37" pos:end="29:51"><name pos:start="29:37" pos:end="29:37">s</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:42">vga</name><operator pos:start="29:43" pos:end="29:43">.</operator><name pos:start="29:44" pos:end="29:51">vram_ptr</name></name> <operator pos:start="29:53" pos:end="29:53">+</operator> <name pos:start="29:55" pos:end="29:75"><name pos:start="29:55" pos:end="29:55">s</name><operator pos:start="29:56" pos:end="29:57">-&gt;</operator><name pos:start="29:58" pos:end="29:75">cirrus_blt_dstaddr</name></name></expr></argument>,

                                  <argument pos:start="31:35" pos:end="31:50"><expr pos:start="31:35" pos:end="31:50"><name pos:start="31:35" pos:end="31:50"><name pos:start="31:35" pos:end="31:35">s</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:50">cirrus_bltbuf</name></name></expr></argument>, <argument pos:start="31:53" pos:end="31:53"><expr pos:start="31:53" pos:end="31:53"><literal type="number" pos:start="31:53" pos:end="31:53">0</literal></expr></argument>, <argument pos:start="31:56" pos:end="31:56"><expr pos:start="31:56" pos:end="31:56"><literal type="number" pos:start="31:56" pos:end="31:56">0</literal></expr></argument>, <argument pos:start="31:59" pos:end="31:77"><expr pos:start="31:59" pos:end="31:77"><name pos:start="31:59" pos:end="31:77"><name pos:start="31:59" pos:end="31:59">s</name><operator pos:start="31:60" pos:end="31:61">-&gt;</operator><name pos:start="31:62" pos:end="31:77">cirrus_blt_width</name></name></expr></argument>, <argument pos:start="31:80" pos:end="31:80"><expr pos:start="31:80" pos:end="31:80"><literal type="number" pos:start="31:80" pos:end="31:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="35:65"><expr pos:start="33:17" pos:end="35:64"><call pos:start="33:17" pos:end="35:64"><name pos:start="33:17" pos:end="33:40">cirrus_invalidate_region</name><argument_list pos:start="33:41" pos:end="35:64">(<argument pos:start="33:42" pos:end="33:42"><expr pos:start="33:42" pos:end="33:42"><name pos:start="33:42" pos:end="33:42">s</name></expr></argument>, <argument pos:start="33:45" pos:end="33:65"><expr pos:start="33:45" pos:end="33:65"><name pos:start="33:45" pos:end="33:65"><name pos:start="33:45" pos:end="33:45">s</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:65">cirrus_blt_dstaddr</name></name></expr></argument>, <argument pos:start="33:68" pos:end="33:68"><expr pos:start="33:68" pos:end="33:68"><literal type="number" pos:start="33:68" pos:end="33:68">0</literal></expr></argument>,

                                         <argument pos:start="35:42" pos:end="35:60"><expr pos:start="35:42" pos:end="35:60"><name pos:start="35:42" pos:end="35:60"><name pos:start="35:42" pos:end="35:42">s</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:60">cirrus_blt_width</name></name></expr></argument>, <argument pos:start="35:63" pos:end="35:63"><expr pos:start="35:63" pos:end="35:63"><literal type="number" pos:start="35:63" pos:end="35:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:64"><expr pos:start="37:17" pos:end="37:63"><name pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:37">cirrus_blt_dstaddr</name></name> <operator pos:start="37:39" pos:end="37:40">+=</operator> <name pos:start="37:42" pos:end="37:63"><name pos:start="37:42" pos:end="37:42">s</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:63">cirrus_blt_dstpitch</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:63"><expr pos:start="39:17" pos:end="39:62"><name pos:start="39:17" pos:end="39:36"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:36">cirrus_srccounter</name></name> <operator pos:start="39:38" pos:end="39:39">-=</operator> <name pos:start="39:41" pos:end="39:62"><name pos:start="39:41" pos:end="39:41">s</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:62">cirrus_blt_srcpitch</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="41:17" pos:end="43:33"><if pos:start="41:17" pos:end="43:33">if <condition pos:start="41:20" pos:end="41:46">(<expr pos:start="41:21" pos:end="41:45"><name pos:start="41:21" pos:end="41:40"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:40">cirrus_srccounter</name></name> <operator pos:start="41:42" pos:end="41:43">&lt;=</operator> <literal type="number" pos:start="41:45" pos:end="41:45">0</literal></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:33"><block_content pos:start="43:21" pos:end="43:33">

                    <goto pos:start="43:21" pos:end="43:33">goto <name pos:start="43:26" pos:end="43:32">the_end</name>;</goto></block_content></block></if></if_stmt>

                <comment type="block" pos:start="45:17" pos:end="47:71">/* more bytes than needed can be transferred because of

                   word alignment, so we keep them for the next line */</comment>

                <comment type="block" pos:start="49:17" pos:end="49:62">/* XXX: keep alignment to speed up transfer */</comment>

                <expr_stmt pos:start="51:17" pos:end="51:68"><expr pos:start="51:17" pos:end="51:67"><name pos:start="51:17" pos:end="51:23">end_ptr</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:42"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:42">cirrus_bltbuf</name></name> <operator pos:start="51:44" pos:end="51:44">+</operator> <name pos:start="51:46" pos:end="51:67"><name pos:start="51:46" pos:end="51:46">s</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:67">cirrus_blt_srcpitch</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:60"><expr pos:start="53:17" pos:end="53:59"><name pos:start="53:17" pos:end="53:26">copy_count</name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:49"><name pos:start="53:30" pos:end="53:30">s</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:49">cirrus_srcptr_end</name></name> <operator pos:start="53:51" pos:end="53:51">-</operator> <name pos:start="53:53" pos:end="53:59">end_ptr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:63"><expr pos:start="55:17" pos:end="55:62"><call pos:start="55:17" pos:end="55:62"><name pos:start="55:17" pos:end="55:23">memmove</name><argument_list pos:start="55:24" pos:end="55:62">(<argument pos:start="55:25" pos:end="55:40"><expr pos:start="55:25" pos:end="55:40"><name pos:start="55:25" pos:end="55:40"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:40">cirrus_bltbuf</name></name></expr></argument>, <argument pos:start="55:43" pos:end="55:49"><expr pos:start="55:43" pos:end="55:49"><name pos:start="55:43" pos:end="55:49">end_ptr</name></expr></argument>, <argument pos:start="55:52" pos:end="55:61"><expr pos:start="55:52" pos:end="55:61"><name pos:start="55:52" pos:end="55:61">copy_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:65"><expr pos:start="57:17" pos:end="57:64"><name pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:32">cirrus_srcptr</name></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:51"><name pos:start="57:36" pos:end="57:36">s</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:51">cirrus_bltbuf</name></name> <operator pos:start="57:53" pos:end="57:53">+</operator> <name pos:start="57:55" pos:end="57:64">copy_count</name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:81"><expr pos:start="59:17" pos:end="59:80"><name pos:start="59:17" pos:end="59:36"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:36">cirrus_srcptr_end</name></name> <operator pos:start="59:38" pos:end="59:38">=</operator> <name pos:start="59:40" pos:end="59:55"><name pos:start="59:40" pos:end="59:40">s</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:55">cirrus_bltbuf</name></name> <operator pos:start="59:57" pos:end="59:57">+</operator> <name pos:start="59:59" pos:end="59:80"><name pos:start="59:59" pos:end="59:59">s</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:80">cirrus_blt_srcpitch</name></name></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="61:21" pos:end="61:62">(<expr pos:start="61:22" pos:end="61:61"><name pos:start="61:22" pos:end="61:37"><name pos:start="61:22" pos:end="61:22">s</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:37">cirrus_srcptr</name></name> <operator pos:start="61:39" pos:end="61:40">&gt;=</operator> <name pos:start="61:42" pos:end="61:61"><name pos:start="61:42" pos:end="61:42">s</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:61">cirrus_srcptr_end</name></name></expr>)</condition>;</do>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
