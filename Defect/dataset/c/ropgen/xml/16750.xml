<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16750.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_dozi</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:51">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:15">target_long</name></type> <name pos:start="5:17" pos:end="5:20">simm</name> <init pos:start="5:22" pos:end="5:40">= <expr pos:start="5:24" pos:end="5:40"><call pos:start="5:24" pos:end="5:40"><name pos:start="5:24" pos:end="5:27">SIMM</name><argument_list pos:start="5:28" pos:end="5:40">(<argument pos:start="5:29" pos:end="5:39"><expr pos:start="5:29" pos:end="5:39"><name pos:start="5:29" pos:end="5:39"><name pos:start="5:29" pos:end="5:31">ctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:39">opcode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">l1</name> <init pos:start="7:12" pos:end="7:28">= <expr pos:start="7:14" pos:end="7:28"><call pos:start="7:14" pos:end="7:28"><name pos:start="7:14" pos:end="7:26">gen_new_label</name><argument_list pos:start="7:27" pos:end="7:28">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">l2</name> <init pos:start="9:12" pos:end="9:28">= <expr pos:start="9:14" pos:end="9:28"><call pos:start="9:14" pos:end="9:28"><name pos:start="9:14" pos:end="9:26">gen_new_label</name><argument_list pos:start="9:27" pos:end="9:28">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:72"><expr pos:start="11:5" pos:end="11:71"><call pos:start="11:5" pos:end="11:71"><name pos:start="11:5" pos:end="11:22">tcg_gen_brcondi_tl</name><argument_list pos:start="11:23" pos:end="11:71">(<argument pos:start="11:24" pos:end="11:34"><expr pos:start="11:24" pos:end="11:34"><name pos:start="11:24" pos:end="11:34">TCG_COND_LT</name></expr></argument>, <argument pos:start="11:37" pos:end="11:60"><expr pos:start="11:37" pos:end="11:60"><name pos:start="11:37" pos:end="11:60"><name pos:start="11:37" pos:end="11:43">cpu_gpr</name><index pos:start="11:44" pos:end="11:60">[<expr pos:start="11:45" pos:end="11:59"><call pos:start="11:45" pos:end="11:59"><name pos:start="11:45" pos:end="11:46">rA</name><argument_list pos:start="11:47" pos:end="11:59">(<argument pos:start="11:48" pos:end="11:58"><expr pos:start="11:48" pos:end="11:58"><name pos:start="11:48" pos:end="11:58"><name pos:start="11:48" pos:end="11:50">ctx</name><operator pos:start="11:51" pos:end="11:52">-&gt;</operator><name pos:start="11:53" pos:end="11:58">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="11:63" pos:end="11:66"><expr pos:start="11:63" pos:end="11:66"><name pos:start="11:63" pos:end="11:66">simm</name></expr></argument>, <argument pos:start="11:69" pos:end="11:70"><expr pos:start="11:69" pos:end="11:70"><name pos:start="11:69" pos:end="11:70">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:79"><expr pos:start="13:5" pos:end="13:78"><call pos:start="13:5" pos:end="13:78"><name pos:start="13:5" pos:end="13:20">tcg_gen_subfi_tl</name><argument_list pos:start="13:21" pos:end="13:78">(<argument pos:start="13:22" pos:end="13:45"><expr pos:start="13:22" pos:end="13:45"><name pos:start="13:22" pos:end="13:45"><name pos:start="13:22" pos:end="13:28">cpu_gpr</name><index pos:start="13:29" pos:end="13:45">[<expr pos:start="13:30" pos:end="13:44"><call pos:start="13:30" pos:end="13:44"><name pos:start="13:30" pos:end="13:31">rD</name><argument_list pos:start="13:32" pos:end="13:44">(<argument pos:start="13:33" pos:end="13:43"><expr pos:start="13:33" pos:end="13:43"><name pos:start="13:33" pos:end="13:43"><name pos:start="13:33" pos:end="13:35">ctx</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:43">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="13:48" pos:end="13:51"><expr pos:start="13:48" pos:end="13:51"><name pos:start="13:48" pos:end="13:51">simm</name></expr></argument>, <argument pos:start="13:54" pos:end="13:77"><expr pos:start="13:54" pos:end="13:77"><name pos:start="13:54" pos:end="13:77"><name pos:start="13:54" pos:end="13:60">cpu_gpr</name><index pos:start="13:61" pos:end="13:77">[<expr pos:start="13:62" pos:end="13:76"><call pos:start="13:62" pos:end="13:76"><name pos:start="13:62" pos:end="13:63">rA</name><argument_list pos:start="13:64" pos:end="13:76">(<argument pos:start="13:65" pos:end="13:75"><expr pos:start="13:65" pos:end="13:75"><name pos:start="13:65" pos:end="13:75"><name pos:start="13:65" pos:end="13:67">ctx</name><operator pos:start="13:68" pos:end="13:69">-&gt;</operator><name pos:start="13:70" pos:end="13:75">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><call pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:14">tcg_gen_br</name><argument_list pos:start="15:15" pos:end="15:18">(<argument pos:start="15:16" pos:end="15:17"><expr pos:start="15:16" pos:end="15:17"><name pos:start="15:16" pos:end="15:17">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><call pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17">gen_set_label</name><argument_list pos:start="17:18" pos:end="17:21">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><call pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:19">tcg_gen_movi_tl</name><argument_list pos:start="19:20" pos:end="19:48">(<argument pos:start="19:21" pos:end="19:44"><expr pos:start="19:21" pos:end="19:44"><name pos:start="19:21" pos:end="19:44"><name pos:start="19:21" pos:end="19:27">cpu_gpr</name><index pos:start="19:28" pos:end="19:44">[<expr pos:start="19:29" pos:end="19:43"><call pos:start="19:29" pos:end="19:43"><name pos:start="19:29" pos:end="19:30">rD</name><argument_list pos:start="19:31" pos:end="19:43">(<argument pos:start="19:32" pos:end="19:42"><expr pos:start="19:32" pos:end="19:42"><name pos:start="19:32" pos:end="19:42"><name pos:start="19:32" pos:end="19:34">ctx</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:42">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="19:47" pos:end="19:47"><expr pos:start="19:47" pos:end="19:47"><literal type="number" pos:start="19:47" pos:end="19:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><call pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:17">gen_set_label</name><argument_list pos:start="21:18" pos:end="21:21">(<argument pos:start="21:19" pos:end="21:20"><expr pos:start="21:19" pos:end="21:20"><name pos:start="21:19" pos:end="21:20">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:51"><if pos:start="23:5" pos:end="25:51">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><call pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:16">unlikely</name><argument_list pos:start="23:17" pos:end="23:38">(<argument pos:start="23:18" pos:end="23:37"><expr pos:start="23:18" pos:end="23:37"><call pos:start="23:18" pos:end="23:32"><name pos:start="23:18" pos:end="23:19">Rc</name><argument_list pos:start="23:20" pos:end="23:32">(<argument pos:start="23:21" pos:end="23:31"><expr pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:23">ctx</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:31">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:34" pos:end="23:35">!=</operator> <literal type="number" pos:start="23:37" pos:end="23:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:51"><block_content pos:start="25:9" pos:end="25:51">

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><call pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:19">gen_set_Rc0</name><argument_list pos:start="25:20" pos:end="25:50">(<argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">ctx</name></expr></argument>, <argument pos:start="25:26" pos:end="25:49"><expr pos:start="25:26" pos:end="25:49"><name pos:start="25:26" pos:end="25:49"><name pos:start="25:26" pos:end="25:32">cpu_gpr</name><index pos:start="25:33" pos:end="25:49">[<expr pos:start="25:34" pos:end="25:48"><call pos:start="25:34" pos:end="25:48"><name pos:start="25:34" pos:end="25:35">rD</name><argument_list pos:start="25:36" pos:end="25:48">(<argument pos:start="25:37" pos:end="25:47"><expr pos:start="25:37" pos:end="25:47"><name pos:start="25:37" pos:end="25:47"><name pos:start="25:37" pos:end="25:39">ctx</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:47">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
