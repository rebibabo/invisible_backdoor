<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23879.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">mkv_write_simpletag</name><parameter_list pos:start="1:32" pos:end="1:70">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:43">AVIOContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">pb</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:69"><decl pos:start="1:50" pos:end="1:69"><type pos:start="1:50" pos:end="1:69"><name pos:start="1:50" pos:end="1:66">AVDictionaryEntry</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:69">t</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:19">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">key</name> <init pos:start="5:18" pos:end="5:36">= <expr pos:start="5:20" pos:end="5:36"><call pos:start="5:20" pos:end="5:36"><name pos:start="5:20" pos:end="5:28">av_strdup</name><argument_list pos:start="5:29" pos:end="5:36">(<argument pos:start="5:30" pos:end="5:35"><expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:30">t</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:35">key</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">p</name>   <init pos:start="7:18" pos:end="7:22">= <expr pos:start="7:20" pos:end="7:22"><name pos:start="7:20" pos:end="7:22">key</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">lang</name> <init pos:start="9:25" pos:end="9:30">= <expr pos:start="9:27" pos:end="9:30"><name pos:start="9:27" pos:end="9:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">ebml_master</name></type> <name pos:start="11:17" pos:end="11:19">tag</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:15"><if pos:start="15:5" pos:end="19:15">if <condition pos:start="15:8" pos:end="17:66">(<expr pos:start="15:9" pos:end="17:65"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:10">p</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:28"><name pos:start="15:14" pos:end="15:20">strrchr</name><argument_list pos:start="15:21" pos:end="15:28">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">p</name></expr></argument>, <argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><literal type="char" pos:start="15:25" pos:end="15:27">'-'</literal></expr></argument>)</argument_list></call><operator pos:start="15:29" pos:end="15:29">)</operator> <operator pos:start="15:31" pos:end="15:32">&amp;&amp;</operator>

        <operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:13">lang</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:64"><name pos:start="17:17" pos:end="17:34">av_convert_lang_to</name><argument_list pos:start="17:35" pos:end="17:64">(<argument pos:start="17:36" pos:end="17:40"><expr pos:start="17:36" pos:end="17:40"><name pos:start="17:36" pos:end="17:36">p</name> <operator pos:start="17:38" pos:end="17:38">+</operator> <literal type="number" pos:start="17:40" pos:end="17:40">1</literal></expr></argument>, <argument pos:start="17:43" pos:end="17:63"><expr pos:start="17:43" pos:end="17:63"><name pos:start="17:43" pos:end="17:63">AV_LANG_ISO639_2_BIBL</name></expr></argument>)</argument_list></call><operator pos:start="17:65" pos:end="17:65">)</operator></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:15"><block_content pos:start="19:9" pos:end="19:15">

        <expr_stmt pos:start="19:9" pos:end="19:15"><expr pos:start="19:9" pos:end="19:14"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:10">p</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:12"><expr pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:5">p</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <name pos:start="23:9" pos:end="23:11">key</name></expr>;</expr_stmt>

    <while pos:start="25:5" pos:end="37:5">while <condition pos:start="25:11" pos:end="25:14">(<expr pos:start="25:12" pos:end="25:13"><operator pos:start="25:12" pos:end="25:12">*</operator><name pos:start="25:13" pos:end="25:13">p</name></expr>)</condition> <block pos:start="25:16" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:12">

        <if_stmt pos:start="27:9" pos:end="33:28"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:22">(<expr pos:start="27:13" pos:end="27:21"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:14">p</name> <operator pos:start="27:16" pos:end="27:17">==</operator> <literal type="char" pos:start="27:19" pos:end="27:21">' '</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <expr_stmt pos:start="29:13" pos:end="29:21"><expr pos:start="29:13" pos:end="29:20"><operator pos:start="29:13" pos:end="29:13">*</operator><name pos:start="29:14" pos:end="29:14">p</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="char" pos:start="29:18" pos:end="29:20">'_'</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="31:9" pos:end="33:28">else if <condition pos:start="31:17" pos:end="31:40">(<expr pos:start="31:18" pos:end="31:39"><operator pos:start="31:18" pos:end="31:18">*</operator><name pos:start="31:19" pos:end="31:19">p</name> <operator pos:start="31:21" pos:end="31:22">&gt;=</operator> <literal type="char" pos:start="31:24" pos:end="31:26">'a'</literal> <operator pos:start="31:28" pos:end="31:29">&amp;&amp;</operator> <operator pos:start="31:31" pos:end="31:31">*</operator><name pos:start="31:32" pos:end="31:32">p</name> <operator pos:start="31:34" pos:end="31:35">&lt;=</operator> <literal type="char" pos:start="31:37" pos:end="31:39">'z'</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:28"><block_content pos:start="33:13" pos:end="33:28">

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:14">p</name> <operator pos:start="33:16" pos:end="33:17">-=</operator> <literal type="char" pos:start="33:19" pos:end="33:21">'a'</literal> <operator pos:start="33:23" pos:end="33:23">-</operator> <literal type="char" pos:start="33:25" pos:end="33:27">'A'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:12"><expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:9">p</name><operator pos:start="35:10" pos:end="35:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="41:5" pos:end="41:58"><expr pos:start="41:5" pos:end="41:57"><name pos:start="41:5" pos:end="41:7">tag</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:57"><name pos:start="41:11" pos:end="41:27">start_ebml_master</name><argument_list pos:start="41:28" pos:end="41:57">(<argument pos:start="41:29" pos:end="41:30"><expr pos:start="41:29" pos:end="41:30"><name pos:start="41:29" pos:end="41:30">pb</name></expr></argument>, <argument pos:start="41:33" pos:end="41:53"><expr pos:start="41:33" pos:end="41:53"><name pos:start="41:33" pos:end="41:53">MATROSKA_ID_SIMPLETAG</name></expr></argument>, <argument pos:start="41:56" pos:end="41:56"><expr pos:start="41:56" pos:end="41:56"><literal type="number" pos:start="41:56" pos:end="41:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><call pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:19">put_ebml_string</name><argument_list pos:start="43:20" pos:end="43:49">(<argument pos:start="43:21" pos:end="43:22"><expr pos:start="43:21" pos:end="43:22"><name pos:start="43:21" pos:end="43:22">pb</name></expr></argument>, <argument pos:start="43:25" pos:end="43:43"><expr pos:start="43:25" pos:end="43:43"><name pos:start="43:25" pos:end="43:43">MATROSKA_ID_TAGNAME</name></expr></argument>, <argument pos:start="43:46" pos:end="43:48"><expr pos:start="43:46" pos:end="43:48"><name pos:start="43:46" pos:end="43:48">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:55"><if pos:start="45:5" pos:end="47:55">if <condition pos:start="45:8" pos:end="45:13">(<expr pos:start="45:9" pos:end="45:12"><name pos:start="45:9" pos:end="45:12">lang</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:55"><block_content pos:start="47:9" pos:end="47:55">

        <expr_stmt pos:start="47:9" pos:end="47:55"><expr pos:start="47:9" pos:end="47:54"><call pos:start="47:9" pos:end="47:54"><name pos:start="47:9" pos:end="47:23">put_ebml_string</name><argument_list pos:start="47:24" pos:end="47:54">(<argument pos:start="47:25" pos:end="47:26"><expr pos:start="47:25" pos:end="47:26"><name pos:start="47:25" pos:end="47:26">pb</name></expr></argument>, <argument pos:start="47:29" pos:end="47:47"><expr pos:start="47:29" pos:end="47:47"><name pos:start="47:29" pos:end="47:47">MATROSKA_ID_TAGLANG</name></expr></argument>, <argument pos:start="47:50" pos:end="47:53"><expr pos:start="47:50" pos:end="47:53"><name pos:start="47:50" pos:end="47:53">lang</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><call pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:19">put_ebml_string</name><argument_list pos:start="49:20" pos:end="49:56">(<argument pos:start="49:21" pos:end="49:22"><expr pos:start="49:21" pos:end="49:22"><name pos:start="49:21" pos:end="49:22">pb</name></expr></argument>, <argument pos:start="49:25" pos:end="49:45"><expr pos:start="49:25" pos:end="49:45"><name pos:start="49:25" pos:end="49:45">MATROSKA_ID_TAGSTRING</name></expr></argument>, <argument pos:start="49:48" pos:end="49:55"><expr pos:start="49:48" pos:end="49:55"><name pos:start="49:48" pos:end="49:55"><name pos:start="49:48" pos:end="49:48">t</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:55">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><call pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:19">end_ebml_master</name><argument_list pos:start="51:20" pos:end="51:28">(<argument pos:start="51:21" pos:end="51:22"><expr pos:start="51:21" pos:end="51:22"><name pos:start="51:21" pos:end="51:22">pb</name></expr></argument>, <argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:27">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><call pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:12">av_freep</name><argument_list pos:start="55:13" pos:end="55:18">(<argument pos:start="55:14" pos:end="55:17"><expr pos:start="55:14" pos:end="55:17"><operator pos:start="55:14" pos:end="55:14">&amp;</operator><name pos:start="55:15" pos:end="55:17">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
