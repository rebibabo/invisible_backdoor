<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24003.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:65"><name pos:start="1:1" pos:end="1:21">iscsi_allocmap_update</name><argument_list pos:start="1:22" pos:end="3:65">(<argument pos:start="1:23" pos:end="1:40">IscsiLun *iscsilun</argument>, <argument pos:start="1:43" pos:end="1:60">int64_t sector_num</argument>,

                      <argument pos:start="3:23" pos:end="3:36">int nb_sectors</argument>, <argument pos:start="3:39" pos:end="3:52">bool allocated</argument>, <argument pos:start="3:55" pos:end="3:64">bool valid</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:5">

    <decl_stmt pos:start="7:5" pos:end="7:75"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:27">cl_num_expanded</name></decl>, <decl pos:start="7:30" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:30" pos:end="7:44">nb_cls_expanded</name></decl>, <decl pos:start="7:47" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:47" pos:end="7:59">cl_num_shrunk</name></decl>, <decl pos:start="7:62" pos:end="7:74"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:62" pos:end="7:74">nb_cls_shrunk</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:35">(<expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:16">iscsilun</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:26">allocmap</name></name> <operator pos:start="11:28" pos:end="11:29">==</operator> <name pos:start="11:31" pos:end="11:34">NULL</name></expr>)</condition> <block pos:start="11:37" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="17:5" pos:end="17:58">/* expand to entirely contain all affected clusters */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:61"><expr pos:start="19:5" pos:end="19:60"><name pos:start="19:5" pos:end="19:19">cl_num_expanded</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:32">sector_num</name> <operator pos:start="19:34" pos:end="19:34">/</operator> <name pos:start="19:36" pos:end="19:60"><name pos:start="19:36" pos:end="19:43">iscsilun</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:60">cluster_sectors</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:80"><expr pos:start="21:5" pos:end="23:79"><name pos:start="21:5" pos:end="21:19">nb_cls_expanded</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <call pos:start="21:23" pos:end="23:61"><name pos:start="21:23" pos:end="21:34">DIV_ROUND_UP</name><argument_list pos:start="21:35" pos:end="23:61">(<argument pos:start="21:36" pos:end="21:58"><expr pos:start="21:36" pos:end="21:58"><name pos:start="21:36" pos:end="21:45">sector_num</name> <operator pos:start="21:47" pos:end="21:47">+</operator> <name pos:start="21:49" pos:end="21:58">nb_sectors</name></expr></argument>,

                                   <argument pos:start="23:36" pos:end="23:60"><expr pos:start="23:36" pos:end="23:60"><name pos:start="23:36" pos:end="23:60"><name pos:start="23:36" pos:end="23:43">iscsilun</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:60">cluster_sectors</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:63" pos:end="23:63">-</operator> <name pos:start="23:65" pos:end="23:79">cl_num_expanded</name></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:60">/* shrink to touch only completely contained clusters */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:72"><expr pos:start="27:5" pos:end="27:71"><name pos:start="27:5" pos:end="27:17">cl_num_shrunk</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:71"><name pos:start="27:21" pos:end="27:32">DIV_ROUND_UP</name><argument_list pos:start="27:33" pos:end="27:71">(<argument pos:start="27:34" pos:end="27:43"><expr pos:start="27:34" pos:end="27:43"><name pos:start="27:34" pos:end="27:43">sector_num</name></expr></argument>, <argument pos:start="27:46" pos:end="27:70"><expr pos:start="27:46" pos:end="27:70"><name pos:start="27:46" pos:end="27:70"><name pos:start="27:46" pos:end="27:53">iscsilun</name><operator pos:start="27:54" pos:end="27:55">-&gt;</operator><name pos:start="27:56" pos:end="27:70">cluster_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:38"><expr pos:start="29:5" pos:end="31:37"><name pos:start="29:5" pos:end="29:17">nb_cls_shrunk</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <operator pos:start="29:21" pos:end="29:21">(</operator><name pos:start="29:22" pos:end="29:31">sector_num</name> <operator pos:start="29:33" pos:end="29:33">+</operator> <name pos:start="29:35" pos:end="29:44">nb_sectors</name><operator pos:start="29:45" pos:end="29:45">)</operator> <operator pos:start="29:47" pos:end="29:47">/</operator> <name pos:start="29:49" pos:end="29:73"><name pos:start="29:49" pos:end="29:56">iscsilun</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:73">cluster_sectors</name></name>

                      <operator pos:start="31:23" pos:end="31:23">-</operator> <name pos:start="31:25" pos:end="31:37">cl_num_shrunk</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">allocated</name></expr>)</condition> <block pos:start="33:20" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:73">

        <expr_stmt pos:start="35:9" pos:end="35:73"><expr pos:start="35:9" pos:end="35:72"><call pos:start="35:9" pos:end="35:72"><name pos:start="35:9" pos:end="35:18">bitmap_set</name><argument_list pos:start="35:19" pos:end="35:72">(<argument pos:start="35:20" pos:end="35:37"><expr pos:start="35:20" pos:end="35:37"><name pos:start="35:20" pos:end="35:37"><name pos:start="35:20" pos:end="35:27">iscsilun</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:37">allocmap</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:54"><expr pos:start="35:40" pos:end="35:54"><name pos:start="35:40" pos:end="35:54">cl_num_expanded</name></expr></argument>, <argument pos:start="35:57" pos:end="35:71"><expr pos:start="35:57" pos:end="35:71"><name pos:start="35:57" pos:end="35:71">nb_cls_expanded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="41:5">else <block pos:start="37:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:71">

        <expr_stmt pos:start="39:9" pos:end="39:71"><expr pos:start="39:9" pos:end="39:70"><call pos:start="39:9" pos:end="39:70"><name pos:start="39:9" pos:end="39:20">bitmap_clear</name><argument_list pos:start="39:21" pos:end="39:70">(<argument pos:start="39:22" pos:end="39:39"><expr pos:start="39:22" pos:end="39:39"><name pos:start="39:22" pos:end="39:39"><name pos:start="39:22" pos:end="39:29">iscsilun</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:39">allocmap</name></name></expr></argument>, <argument pos:start="39:42" pos:end="39:54"><expr pos:start="39:42" pos:end="39:54"><name pos:start="39:42" pos:end="39:54">cl_num_shrunk</name></expr></argument>, <argument pos:start="39:57" pos:end="39:69"><expr pos:start="39:57" pos:end="39:69"><name pos:start="39:57" pos:end="39:69">nb_cls_shrunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:41">(<expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:16">iscsilun</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:32">allocmap_valid</name></name> <operator pos:start="45:34" pos:end="45:35">==</operator> <name pos:start="45:37" pos:end="45:40">NULL</name></expr>)</condition> <block pos:start="45:43" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:15">

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:14">(<expr pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:13">valid</name></expr>)</condition> <block pos:start="51:16" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:75">

        <expr_stmt pos:start="53:9" pos:end="53:75"><expr pos:start="53:9" pos:end="53:74"><call pos:start="53:9" pos:end="53:74"><name pos:start="53:9" pos:end="53:18">bitmap_set</name><argument_list pos:start="53:19" pos:end="53:74">(<argument pos:start="53:20" pos:end="53:43"><expr pos:start="53:20" pos:end="53:43"><name pos:start="53:20" pos:end="53:43"><name pos:start="53:20" pos:end="53:27">iscsilun</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:43">allocmap_valid</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:58"><expr pos:start="53:46" pos:end="53:58"><name pos:start="53:46" pos:end="53:58">cl_num_shrunk</name></expr></argument>, <argument pos:start="53:61" pos:end="53:73"><expr pos:start="53:61" pos:end="53:73"><name pos:start="53:61" pos:end="53:73">nb_cls_shrunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="61:5">else <block pos:start="55:12" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:38">

        <expr_stmt pos:start="57:9" pos:end="59:38"><expr pos:start="57:9" pos:end="59:37"><call pos:start="57:9" pos:end="59:37"><name pos:start="57:9" pos:end="57:20">bitmap_clear</name><argument_list pos:start="57:21" pos:end="59:37">(<argument pos:start="57:22" pos:end="57:45"><expr pos:start="57:22" pos:end="57:45"><name pos:start="57:22" pos:end="57:45"><name pos:start="57:22" pos:end="57:29">iscsilun</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:45">allocmap_valid</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:62"><expr pos:start="57:48" pos:end="57:62"><name pos:start="57:48" pos:end="57:62">cl_num_expanded</name></expr></argument>,

                     <argument pos:start="59:22" pos:end="59:36"><expr pos:start="59:22" pos:end="59:36"><name pos:start="59:22" pos:end="59:36">nb_cls_expanded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
