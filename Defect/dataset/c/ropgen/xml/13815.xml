<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13815.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">gen_srs</name><parameter_list pos:start="1:20" pos:end="3:66">(<parameter pos:start="1:21" pos:end="1:35"><decl pos:start="1:21" pos:end="1:35"><type pos:start="1:21" pos:end="1:35"><name pos:start="1:21" pos:end="1:32">DisasContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:33"><decl pos:start="3:21" pos:end="3:33"><type pos:start="3:21" pos:end="3:33"><name pos:start="3:21" pos:end="3:28">uint32_t</name></type> <name pos:start="3:30" pos:end="3:33">mode</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:49"><decl pos:start="3:36" pos:end="3:49"><type pos:start="3:36" pos:end="3:49"><name pos:start="3:36" pos:end="3:43">uint32_t</name></type> <name pos:start="3:45" pos:end="3:49">amode</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:65"><decl pos:start="3:52" pos:end="3:65"><type pos:start="3:52" pos:end="3:65"><name pos:start="3:52" pos:end="3:55">bool</name></type> <name pos:start="3:57" pos:end="3:65">writeback</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:28">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:18">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">TCGv_i32</name></type> <name pos:start="9:14" pos:end="9:17">addr</name> <init pos:start="9:19" pos:end="9:38">= <expr pos:start="9:21" pos:end="9:38"><call pos:start="9:21" pos:end="9:38"><name pos:start="9:21" pos:end="9:36">tcg_temp_new_i32</name><argument_list pos:start="9:37" pos:end="9:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">TCGv_i32</name></type> <name pos:start="11:14" pos:end="11:16">tmp</name> <init pos:start="11:18" pos:end="11:38">= <expr pos:start="11:20" pos:end="11:38"><call pos:start="11:20" pos:end="11:38"><name pos:start="11:20" pos:end="11:32">tcg_const_i32</name><argument_list pos:start="11:33" pos:end="11:38">(<argument pos:start="11:34" pos:end="11:37"><expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">mode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><call pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:29">gen_helper_get_r13_banked</name><argument_list pos:start="13:30" pos:end="13:49">(<argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">addr</name></expr></argument>, <argument pos:start="13:37" pos:end="13:43"><expr pos:start="13:37" pos:end="13:43"><name pos:start="13:37" pos:end="13:43">cpu_env</name></expr></argument>, <argument pos:start="13:46" pos:end="13:48"><expr pos:start="13:46" pos:end="13:48"><name pos:start="13:46" pos:end="13:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:21">tcg_temp_free_i32</name><argument_list pos:start="15:22" pos:end="15:26">(<argument pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="47:5">switch <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">amode</name></expr>)</condition> <block pos:start="17:20" pos:end="47:5">{<block_content pos:start="19:5" pos:end="45:16">

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">0</literal></expr>:</case> <comment type="block" pos:start="19:13" pos:end="19:20">/* DA */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:20"><expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:14">offset</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <operator pos:start="21:18" pos:end="21:18">-</operator><literal type="number" pos:start="21:19" pos:end="21:19">4</literal></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">1</literal></expr>:</case> <comment type="block" pos:start="25:13" pos:end="25:20">/* IA */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:19"><expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:14">offset</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">2</literal></expr>:</case> <comment type="block" pos:start="31:13" pos:end="31:20">/* DB */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:20"><expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:14">offset</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <operator pos:start="33:18" pos:end="33:18">-</operator><literal type="number" pos:start="33:19" pos:end="33:19">8</literal></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">3</literal></expr>:</case> <comment type="block" pos:start="37:13" pos:end="37:20">/* IB */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:14">offset</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">4</literal></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <default pos:start="43:5" pos:end="43:12">default:</default>

        <expr_stmt pos:start="45:9" pos:end="45:16"><expr pos:start="45:9" pos:end="45:15"><call pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:13">abort</name><argument_list pos:start="45:14" pos:end="45:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><call pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:20">tcg_gen_addi_i32</name><argument_list pos:start="49:21" pos:end="49:40">(<argument pos:start="49:22" pos:end="49:25"><expr pos:start="49:22" pos:end="49:25"><name pos:start="49:22" pos:end="49:25">addr</name></expr></argument>, <argument pos:start="49:28" pos:end="49:31"><expr pos:start="49:28" pos:end="49:31"><name pos:start="49:28" pos:end="49:31">addr</name></expr></argument>, <argument pos:start="49:34" pos:end="49:39"><expr pos:start="49:34" pos:end="49:39"><name pos:start="49:34" pos:end="49:39">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:26"><expr pos:start="51:5" pos:end="51:25"><name pos:start="51:5" pos:end="51:7">tmp</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:25"><name pos:start="51:11" pos:end="51:18">load_reg</name><argument_list pos:start="51:19" pos:end="51:25">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">s</name></expr></argument>, <argument pos:start="51:23" pos:end="51:24"><expr pos:start="51:23" pos:end="51:24"><literal type="number" pos:start="51:23" pos:end="51:24">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:47"><expr pos:start="53:5" pos:end="53:46"><call pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:17">gen_aa32_st32</name><argument_list pos:start="53:18" pos:end="53:46">(<argument pos:start="53:19" pos:end="53:21"><expr pos:start="53:19" pos:end="53:21"><name pos:start="53:19" pos:end="53:21">tmp</name></expr></argument>, <argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">addr</name></expr></argument>, <argument pos:start="53:30" pos:end="53:45"><expr pos:start="53:30" pos:end="53:45"><call pos:start="53:30" pos:end="53:45"><name pos:start="53:30" pos:end="53:42">get_mem_index</name><argument_list pos:start="53:43" pos:end="53:45">(<argument pos:start="53:44" pos:end="53:44"><expr pos:start="53:44" pos:end="53:44"><name pos:start="53:44" pos:end="53:44">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><call pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:21">tcg_temp_free_i32</name><argument_list pos:start="55:22" pos:end="55:26">(<argument pos:start="55:23" pos:end="55:25"><expr pos:start="55:23" pos:end="55:25"><name pos:start="55:23" pos:end="55:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:31"><expr pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:7">tmp</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:30"><name pos:start="57:11" pos:end="57:24">load_cpu_field</name><argument_list pos:start="57:25" pos:end="57:30">(<argument pos:start="57:26" pos:end="57:29"><expr pos:start="57:26" pos:end="57:29"><name pos:start="57:26" pos:end="57:29">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><call pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:20">tcg_gen_addi_i32</name><argument_list pos:start="59:21" pos:end="59:35">(<argument pos:start="59:22" pos:end="59:25"><expr pos:start="59:22" pos:end="59:25"><name pos:start="59:22" pos:end="59:25">addr</name></expr></argument>, <argument pos:start="59:28" pos:end="59:31"><expr pos:start="59:28" pos:end="59:31"><name pos:start="59:28" pos:end="59:31">addr</name></expr></argument>, <argument pos:start="59:34" pos:end="59:34"><expr pos:start="59:34" pos:end="59:34"><literal type="number" pos:start="59:34" pos:end="59:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:47"><expr pos:start="61:5" pos:end="61:46"><call pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:17">gen_aa32_st32</name><argument_list pos:start="61:18" pos:end="61:46">(<argument pos:start="61:19" pos:end="61:21"><expr pos:start="61:19" pos:end="61:21"><name pos:start="61:19" pos:end="61:21">tmp</name></expr></argument>, <argument pos:start="61:24" pos:end="61:27"><expr pos:start="61:24" pos:end="61:27"><name pos:start="61:24" pos:end="61:27">addr</name></expr></argument>, <argument pos:start="61:30" pos:end="61:45"><expr pos:start="61:30" pos:end="61:45"><call pos:start="61:30" pos:end="61:45"><name pos:start="61:30" pos:end="61:42">get_mem_index</name><argument_list pos:start="61:43" pos:end="61:45">(<argument pos:start="61:44" pos:end="61:44"><expr pos:start="61:44" pos:end="61:44"><name pos:start="61:44" pos:end="61:44">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><call pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:21">tcg_temp_free_i32</name><argument_list pos:start="63:22" pos:end="63:26">(<argument pos:start="63:23" pos:end="63:25"><expr pos:start="63:23" pos:end="63:25"><name pos:start="63:23" pos:end="63:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="107:5"><if pos:start="65:5" pos:end="107:5">if <condition pos:start="65:8" pos:end="65:18">(<expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:17">writeback</name></expr>)</condition> <block pos:start="65:20" pos:end="107:5">{<block_content pos:start="67:9" pos:end="105:31">

        <switch pos:start="67:9" pos:end="97:9">switch <condition pos:start="67:16" pos:end="67:22">(<expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:21">amode</name></expr>)</condition> <block pos:start="67:24" pos:end="97:9">{<block_content pos:start="69:9" pos:end="95:20">

        <case pos:start="69:9" pos:end="69:15">case <expr pos:start="69:14" pos:end="69:14"><literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:24"><expr pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:18">offset</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <operator pos:start="71:22" pos:end="71:22">-</operator><literal type="number" pos:start="71:23" pos:end="71:23">8</literal></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:15">case <expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">1</literal></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:23"><expr pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:18">offset</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">4</literal></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:15">case <expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">2</literal></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:24"><expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:18">offset</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <operator pos:start="83:22" pos:end="83:22">-</operator><literal type="number" pos:start="83:23" pos:end="83:23">4</literal></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:15">case <expr pos:start="87:14" pos:end="87:14"><literal type="number" pos:start="87:14" pos:end="87:14">3</literal></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:23"><expr pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:18">offset</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <default pos:start="93:9" pos:end="93:16">default:</default>

            <expr_stmt pos:start="95:13" pos:end="95:20"><expr pos:start="95:13" pos:end="95:19"><call pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:17">abort</name><argument_list pos:start="95:18" pos:end="95:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="99:9" pos:end="99:45"><expr pos:start="99:9" pos:end="99:44"><call pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:24">tcg_gen_addi_i32</name><argument_list pos:start="99:25" pos:end="99:44">(<argument pos:start="99:26" pos:end="99:29"><expr pos:start="99:26" pos:end="99:29"><name pos:start="99:26" pos:end="99:29">addr</name></expr></argument>, <argument pos:start="99:32" pos:end="99:35"><expr pos:start="99:32" pos:end="99:35"><name pos:start="99:32" pos:end="99:35">addr</name></expr></argument>, <argument pos:start="99:38" pos:end="99:43"><expr pos:start="99:38" pos:end="99:43"><name pos:start="99:38" pos:end="99:43">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:34"><expr pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:11">tmp</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:33"><name pos:start="101:15" pos:end="101:27">tcg_const_i32</name><argument_list pos:start="101:28" pos:end="101:33">(<argument pos:start="101:29" pos:end="101:32"><expr pos:start="101:29" pos:end="101:32"><name pos:start="101:29" pos:end="101:32">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:54"><expr pos:start="103:9" pos:end="103:53"><call pos:start="103:9" pos:end="103:53"><name pos:start="103:9" pos:end="103:33">gen_helper_set_r13_banked</name><argument_list pos:start="103:34" pos:end="103:53">(<argument pos:start="103:35" pos:end="103:41"><expr pos:start="103:35" pos:end="103:41"><name pos:start="103:35" pos:end="103:41">cpu_env</name></expr></argument>, <argument pos:start="103:44" pos:end="103:46"><expr pos:start="103:44" pos:end="103:46"><name pos:start="103:44" pos:end="103:46">tmp</name></expr></argument>, <argument pos:start="103:49" pos:end="103:52"><expr pos:start="103:49" pos:end="103:52"><name pos:start="103:49" pos:end="103:52">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:31"><expr pos:start="105:9" pos:end="105:30"><call pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:25">tcg_temp_free_i32</name><argument_list pos:start="105:26" pos:end="105:30">(<argument pos:start="105:27" pos:end="105:29"><expr pos:start="105:27" pos:end="105:29"><name pos:start="105:27" pos:end="105:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:28"><expr pos:start="109:5" pos:end="109:27"><call pos:start="109:5" pos:end="109:27"><name pos:start="109:5" pos:end="109:21">tcg_temp_free_i32</name><argument_list pos:start="109:22" pos:end="109:27">(<argument pos:start="109:23" pos:end="109:26"><expr pos:start="109:23" pos:end="109:26"><name pos:start="109:23" pos:end="109:26">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
