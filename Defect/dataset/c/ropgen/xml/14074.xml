<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14074.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">read_key</name><parameter_list pos:start="1:20" pos:end="1:25">(<parameter pos:start="1:21" pos:end="1:24"><decl pos:start="1:21" pos:end="1:24"><type pos:start="1:21" pos:end="1:24"><name pos:start="1:21" pos:end="1:24">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:14">

<cpp:if pos:start="5:1" pos:end="5:18">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18">HAVE_TERMIOS_H</name></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:20">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:18">timeval</name></name></type> <name pos:start="11:20" pos:end="11:21">tv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">fd_set</name></type> <name pos:start="13:12" pos:end="13:15">rfds</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><call pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11">FD_ZERO</name><argument_list pos:start="17:12" pos:end="17:18">(<argument pos:start="17:13" pos:end="17:17"><expr pos:start="17:13" pos:end="17:17"><operator pos:start="17:13" pos:end="17:13">&amp;</operator><name pos:start="17:14" pos:end="17:17">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:21"><expr pos:start="19:5" pos:end="19:20"><call pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:10">FD_SET</name><argument_list pos:start="19:11" pos:end="19:20">(<argument pos:start="19:12" pos:end="19:12"><expr pos:start="19:12" pos:end="19:12"><literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr></argument>, <argument pos:start="19:15" pos:end="19:19"><expr pos:start="19:15" pos:end="19:19"><operator pos:start="19:15" pos:end="19:15">&amp;</operator><name pos:start="19:16" pos:end="19:19">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:6">tv</name><operator pos:start="21:7" pos:end="21:7">.</operator><name pos:start="21:8" pos:end="21:13">tv_sec</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:6">tv</name><operator pos:start="23:7" pos:end="23:7">.</operator><name pos:start="23:8" pos:end="23:14">tv_usec</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:5">n</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <call pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:14">select</name><argument_list pos:start="25:15" pos:end="25:41">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">1</literal></expr></argument>, <argument pos:start="25:19" pos:end="25:23"><expr pos:start="25:19" pos:end="25:23"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:23">rfds</name></expr></argument>, <argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">NULL</name></expr></argument>, <argument pos:start="25:32" pos:end="25:35"><expr pos:start="25:32" pos:end="25:35"><name pos:start="25:32" pos:end="25:35">NULL</name></expr></argument>, <argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:40">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="42:0"><if pos:start="27:5" pos:end="42:0">if <condition pos:start="27:8" pos:end="27:14">(<expr pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:9">n</name> <operator pos:start="27:11" pos:end="27:11">&gt;</operator> <literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr>)</condition> <block pos:start="27:16" pos:end="42:0">{<block_content pos:start="29:9" pos:end="37:17">

        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:9">n</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:16">read</name><argument_list pos:start="29:17" pos:end="29:27">(<argument pos:start="29:18" pos:end="29:18"><expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr></argument>, <argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:23">ch</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:22"><if pos:start="31:9" pos:end="33:22">if <condition pos:start="31:12" pos:end="31:19">(<expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:13">n</name> <operator pos:start="31:15" pos:end="31:16">==</operator> <literal type="number" pos:start="31:18" pos:end="31:18">1</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:22"><block_content pos:start="33:13" pos:end="33:22">

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><name pos:start="33:20" pos:end="33:21">ch</name></expr>;</return></block_content></block></if></if_stmt>



        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">n</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:elif pos:start="41:1" pos:end="41:18">#<cpp:directive pos:start="41:2" pos:end="41:5">elif</cpp:directive> <expr pos:start="41:7" pos:end="41:18"><name pos:start="41:7" pos:end="41:18">HAVE_CONIO_H</name></expr></cpp:elif>

    <if_stmt pos:start="43:5" pos:end="48:0"><if pos:start="43:5" pos:end="48:0">if<condition pos:start="43:7" pos:end="43:15">(<expr pos:start="43:8" pos:end="43:14"><call pos:start="43:8" pos:end="43:14"><name pos:start="43:8" pos:end="43:12">kbhit</name><argument_list pos:start="43:13" pos:end="43:14">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="48:0"><block_content pos:start="45:9" pos:end="48:0">

        <return pos:start="45:9" pos:end="48:0">return<expr pos:start="45:15" pos:end="45:23"><operator pos:start="45:15" pos:end="45:15">(</operator><call pos:start="45:16" pos:end="45:22"><name pos:start="45:16" pos:end="45:20">getch</name><argument_list pos:start="45:21" pos:end="45:22">()</argument_list></call><operator pos:start="45:23" pos:end="45:23">)</operator></expr>;</return></block_content></block></if></if_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

    <return pos:start="49:5" pos:end="49:14">return <expr pos:start="49:12" pos:end="49:13"><operator pos:start="49:12" pos:end="49:12">-</operator><literal type="number" pos:start="49:13" pos:end="49:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
