<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11956.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:39"><name pos:start="1:1" pos:end="1:21">pvscsi_convert_sglist</name><argument_list pos:start="1:22" pos:end="1:39">(<argument pos:start="1:23" pos:end="1:38">PVSCSIRequest *r</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">chunk_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:24">data_length</name> <init pos:start="7:26" pos:end="7:41">= <expr pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:28">r</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:33">req</name><operator pos:start="7:34" pos:end="7:34">.</operator><name pos:start="7:35" pos:end="7:41">dataLen</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">PVSCSISGState</name></type> <name pos:start="9:19" pos:end="9:20">sg</name> <init pos:start="9:22" pos:end="9:28">= <expr pos:start="9:24" pos:end="9:28"><name pos:start="9:24" pos:end="9:28"><name pos:start="9:24" pos:end="9:24">r</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:28">sg</name></name></expr></init></decl>;</decl_stmt>

    <while pos:start="11:5" pos:end="41:5">while <condition pos:start="11:11" pos:end="11:23">(<expr pos:start="11:12" pos:end="11:22"><name pos:start="11:12" pos:end="11:22">data_length</name></expr>)</condition> <block pos:start="11:25" pos:end="41:5">{<block_content pos:start="13:9" pos:end="39:31">

        <while pos:start="13:9" pos:end="21:9">while <condition pos:start="13:15" pos:end="13:25">(<expr pos:start="13:16" pos:end="13:24"><operator pos:start="13:16" pos:end="13:16">!</operator><name pos:start="13:17" pos:end="13:24"><name pos:start="13:17" pos:end="13:18">sg</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:24">resid</name></name></expr>)</condition> <block pos:start="13:27" pos:end="21:9">{<block_content pos:start="15:13" pos:end="19:53">

            <expr_stmt pos:start="15:13" pos:end="15:41"><expr pos:start="15:13" pos:end="15:40"><call pos:start="15:13" pos:end="15:40"><name pos:start="15:13" pos:end="15:35">pvscsi_get_next_sg_elem</name><argument_list pos:start="15:36" pos:end="15:40">(<argument pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:39">sg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="19:53"><expr pos:start="17:13" pos:end="19:52"><call pos:start="17:13" pos:end="19:52"><name pos:start="17:13" pos:end="17:39">trace_pvscsi_convert_sglist</name><argument_list pos:start="17:40" pos:end="19:52">(<argument pos:start="17:41" pos:end="17:54"><expr pos:start="17:41" pos:end="17:54"><name pos:start="17:41" pos:end="17:54"><name pos:start="17:41" pos:end="17:41">r</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:46">req</name><operator pos:start="17:47" pos:end="17:47">.</operator><name pos:start="17:48" pos:end="17:54">context</name></name></expr></argument>, <argument pos:start="17:57" pos:end="17:70"><expr pos:start="17:57" pos:end="17:70"><name pos:start="17:57" pos:end="17:70"><name pos:start="17:57" pos:end="17:57">r</name><operator pos:start="17:58" pos:end="17:59">-&gt;</operator><name pos:start="17:60" pos:end="17:61">sg</name><operator pos:start="17:62" pos:end="17:62">.</operator><name pos:start="17:63" pos:end="17:70">dataAddr</name></name></expr></argument>,

                                        <argument pos:start="19:41" pos:end="19:51"><expr pos:start="19:41" pos:end="19:51"><name pos:start="19:41" pos:end="19:51"><name pos:start="19:41" pos:end="19:41">r</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:45">sg</name><operator pos:start="19:46" pos:end="19:46">.</operator><name pos:start="19:47" pos:end="19:51">resid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:14">assert</name><argument_list pos:start="23:15" pos:end="23:31">(<argument pos:start="23:16" pos:end="23:30"><expr pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:26">data_length</name> <operator pos:start="23:28" pos:end="23:28">&gt;</operator> <literal type="number" pos:start="23:30" pos:end="23:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:18">chunk_size</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:58"><name pos:start="25:22" pos:end="25:24">MIN</name><argument_list pos:start="25:25" pos:end="25:58">(<argument pos:start="25:26" pos:end="25:47"><expr pos:start="25:26" pos:end="25:47"><operator pos:start="25:26" pos:end="25:26">(</operator><name pos:start="25:27" pos:end="25:34">unsigned</name><operator pos:start="25:35" pos:end="25:35">)</operator> <name pos:start="25:37" pos:end="25:47">data_length</name></expr></argument>, <argument pos:start="25:50" pos:end="25:57"><expr pos:start="25:50" pos:end="25:57"><name pos:start="25:50" pos:end="25:57"><name pos:start="25:50" pos:end="25:51">sg</name><operator pos:start="25:52" pos:end="25:52">.</operator><name pos:start="25:53" pos:end="25:57">resid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:22">chunk_size</name></expr>)</condition> <block pos:start="27:25" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:62">

            <expr_stmt pos:start="29:13" pos:end="29:62"><expr pos:start="29:13" pos:end="29:61"><call pos:start="29:13" pos:end="29:61"><name pos:start="29:13" pos:end="29:27">qemu_sglist_add</name><argument_list pos:start="29:28" pos:end="29:61">(<argument pos:start="29:29" pos:end="29:35"><expr pos:start="29:29" pos:end="29:35"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:30">r</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:35">sgl</name></name></expr></argument>, <argument pos:start="29:38" pos:end="29:48"><expr pos:start="29:38" pos:end="29:48"><name pos:start="29:38" pos:end="29:48"><name pos:start="29:38" pos:end="29:39">sg</name><operator pos:start="29:40" pos:end="29:40">.</operator><name pos:start="29:41" pos:end="29:48">dataAddr</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:60"><expr pos:start="29:51" pos:end="29:60"><name pos:start="29:51" pos:end="29:60">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:10">sg</name><operator pos:start="35:11" pos:end="35:11">.</operator><name pos:start="35:12" pos:end="35:19">dataAddr</name></name> <operator pos:start="35:21" pos:end="35:22">+=</operator> <name pos:start="35:24" pos:end="35:33">chunk_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:19">data_length</name> <operator pos:start="37:21" pos:end="37:22">-=</operator> <name pos:start="37:24" pos:end="37:33">chunk_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:10">sg</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:16">resid</name></name> <operator pos:start="39:18" pos:end="39:19">-=</operator> <name pos:start="39:21" pos:end="39:30">chunk_size</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block>
</unit>
