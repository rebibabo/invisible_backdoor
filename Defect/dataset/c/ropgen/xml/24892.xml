<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24892.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:29">kvmppc_create_spapr_tce</name><parameter_list pos:start="1:30" pos:end="1:77">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:38">uint32_t</name></type> <name pos:start="1:40" pos:end="1:44">liobn</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:66">window_size</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:76"><decl pos:start="1:69" pos:end="1:76"><type pos:start="1:69" pos:end="1:76"><name pos:start="1:69" pos:end="1:71">int</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:76">pfd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:17">

    <decl_stmt pos:start="5:5" pos:end="11:6"><decl pos:start="5:5" pos:end="11:5"><type pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:31">kvm_create_spapr_tce</name></name></type> <name pos:start="5:33" pos:end="5:36">args</name> <init pos:start="5:38" pos:end="11:5">= <expr pos:start="5:40" pos:end="11:5"><block pos:start="5:40" pos:end="11:5">{

        <expr pos:start="7:9" pos:end="7:22"><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:14">liobn</name> <operator pos:start="7:16" pos:end="7:16">=</operator> <name pos:start="7:18" pos:end="7:22">liobn</name></expr>,

        <expr pos:start="9:9" pos:end="9:34"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:20">window_size</name> <operator pos:start="9:22" pos:end="9:22">=</operator> <name pos:start="9:24" pos:end="9:34">window_size</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">long</name></type> <name pos:start="13:10" pos:end="13:12">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:11"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">void</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:15">table</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="25:7">/* Must set fd to -1 so we don't try to munmap when called for

     * destroying the table, which the upper layers -will- do

     */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><operator pos:start="27:5" pos:end="27:5">*</operator><name pos:start="27:6" pos:end="27:8">pfd</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <operator pos:start="27:12" pos:end="27:12">-</operator><literal type="number" pos:start="27:13" pos:end="27:13">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:22">cap_spapr_tce</name></expr>)</condition> <block pos:start="29:25" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:20">

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:62"><expr pos:start="37:5" pos:end="37:61"><name pos:start="37:5" pos:end="37:6">fd</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <call pos:start="37:10" pos:end="37:61"><name pos:start="37:10" pos:end="37:21">kvm_vm_ioctl</name><argument_list pos:start="37:22" pos:end="37:61">(<argument pos:start="37:23" pos:end="37:31"><expr pos:start="37:23" pos:end="37:31"><name pos:start="37:23" pos:end="37:31">kvm_state</name></expr></argument>, <argument pos:start="37:34" pos:end="37:53"><expr pos:start="37:34" pos:end="37:53"><name pos:start="37:34" pos:end="37:53">KVM_CREATE_SPAPR_TCE</name></expr></argument>, <argument pos:start="37:56" pos:end="37:60"><expr pos:start="37:56" pos:end="37:60"><operator pos:start="37:56" pos:end="37:56">&amp;</operator><name pos:start="37:57" pos:end="37:60">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:15">(<expr pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:10">fd</name> <operator pos:start="39:12" pos:end="39:12">&lt;</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>)</condition> <block pos:start="39:17" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:20">

        <expr_stmt pos:start="41:9" pos:end="43:23"><expr pos:start="41:9" pos:end="43:22"><call pos:start="41:9" pos:end="43:22"><name pos:start="41:9" pos:end="41:15">fprintf</name><argument_list pos:start="41:16" pos:end="43:22">(<argument pos:start="41:17" pos:end="41:22"><expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:22">stderr</name></expr></argument>, <argument pos:start="41:25" pos:end="41:74"><expr pos:start="41:25" pos:end="41:74"><literal type="string" pos:start="41:25" pos:end="41:74">"KVM: Failed to create TCE table for liobn 0x%x\n"</literal></expr></argument>,

                <argument pos:start="43:17" pos:end="43:21"><expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:21">liobn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:20">return <expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:74"><expr pos:start="51:5" pos:end="51:73"><name pos:start="51:5" pos:end="51:7">len</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <operator pos:start="51:11" pos:end="51:11">(</operator><name pos:start="51:12" pos:end="51:22">window_size</name> <operator pos:start="51:24" pos:end="51:24">/</operator> <name pos:start="51:26" pos:end="51:48">SPAPR_VIO_TCE_PAGE_SIZE</name><operator pos:start="51:49" pos:end="51:49">)</operator> <operator pos:start="51:51" pos:end="51:51">*</operator> <sizeof pos:start="51:53" pos:end="51:73">sizeof<argument_list pos:start="51:59" pos:end="51:73">(<argument pos:start="51:60" pos:end="51:72"><expr pos:start="51:60" pos:end="51:72"><name pos:start="51:60" pos:end="51:72">VIOsPAPR_RTCE</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:43">/* FIXME: round this up to page size */</comment>



    <expr_stmt pos:start="57:5" pos:end="57:69"><expr pos:start="57:5" pos:end="57:68"><name pos:start="57:5" pos:end="57:9">table</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:68"><name pos:start="57:13" pos:end="57:16">mmap</name><argument_list pos:start="57:17" pos:end="57:68">(<argument pos:start="57:18" pos:end="57:21"><expr pos:start="57:18" pos:end="57:21"><name pos:start="57:18" pos:end="57:21">NULL</name></expr></argument>, <argument pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:26">len</name></expr></argument>, <argument pos:start="57:29" pos:end="57:48"><expr pos:start="57:29" pos:end="57:48"><name pos:start="57:29" pos:end="57:37">PROT_READ</name><operator pos:start="57:38" pos:end="57:38">|</operator><name pos:start="57:39" pos:end="57:48">PROT_WRITE</name></expr></argument>, <argument pos:start="57:51" pos:end="57:60"><expr pos:start="57:51" pos:end="57:60"><name pos:start="57:51" pos:end="57:60">MAP_SHARED</name></expr></argument>, <argument pos:start="57:63" pos:end="57:64"><expr pos:start="57:63" pos:end="57:64"><name pos:start="57:63" pos:end="57:64">fd</name></expr></argument>, <argument pos:start="57:67" pos:end="57:67"><expr pos:start="57:67" pos:end="57:67"><literal type="number" pos:start="57:67" pos:end="57:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="69:5">if <condition pos:start="59:8" pos:end="59:28">(<expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:13">table</name> <operator pos:start="59:15" pos:end="59:16">==</operator> <name pos:start="59:18" pos:end="59:27">MAP_FAILED</name></expr>)</condition> <block pos:start="59:30" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:20">

        <expr_stmt pos:start="61:9" pos:end="63:23"><expr pos:start="61:9" pos:end="63:22"><call pos:start="61:9" pos:end="63:22"><name pos:start="61:9" pos:end="61:15">fprintf</name><argument_list pos:start="61:16" pos:end="63:22">(<argument pos:start="61:17" pos:end="61:22"><expr pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:22">stderr</name></expr></argument>, <argument pos:start="61:25" pos:end="61:71"><expr pos:start="61:25" pos:end="61:71"><literal type="string" pos:start="61:25" pos:end="61:71">"KVM: Failed to map TCE table for liobn 0x%x\n"</literal></expr></argument>,

                <argument pos:start="63:17" pos:end="63:21"><expr pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:21">liobn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:18"><expr pos:start="65:9" pos:end="65:17"><call pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:13">close</name><argument_list pos:start="65:14" pos:end="65:17">(<argument pos:start="65:15" pos:end="65:16"><expr pos:start="65:15" pos:end="65:16"><name pos:start="65:15" pos:end="65:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:20">return <expr pos:start="67:16" pos:end="67:19"><name pos:start="67:16" pos:end="67:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:14"><expr pos:start="73:5" pos:end="73:13"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:8">pfd</name> <operator pos:start="73:10" pos:end="73:10">=</operator> <name pos:start="73:12" pos:end="73:13">fd</name></expr>;</expr_stmt>

    <return pos:start="75:5" pos:end="75:17">return <expr pos:start="75:12" pos:end="75:16"><name pos:start="75:12" pos:end="75:16">table</name></expr>;</return>

</block_content>}</block></function>
</unit>
