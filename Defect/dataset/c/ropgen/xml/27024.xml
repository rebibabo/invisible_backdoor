<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27024.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:26">h_read</name><parameter_list pos:start="1:27" pos:end="3:67">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:37">PowerPCCPU</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">cpu</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:67"><decl pos:start="1:45" pos:end="1:67"><type pos:start="1:45" pos:end="1:67"><name pos:start="1:45" pos:end="1:60">sPAPREnvironment</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">spapr</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:46"><decl pos:start="3:28" pos:end="3:46"><type pos:start="3:28" pos:end="3:46"><name pos:start="3:28" pos:end="3:39">target_ulong</name></type> <name pos:start="3:41" pos:end="3:46">opcode</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:66"><decl pos:start="3:49" pos:end="3:66"><type pos:start="3:49" pos:end="3:66"><name pos:start="3:49" pos:end="3:60">target_ulong</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:66">args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:21">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:22">flags</name> <init pos:start="9:24" pos:end="9:32">= <expr pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:29">args</name><index pos:start="9:30" pos:end="9:32">[<expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:26">pte_index</name> <init pos:start="11:28" pos:end="11:36">= <expr pos:start="11:30" pos:end="11:36"><name pos:start="11:30" pos:end="11:36"><name pos:start="11:30" pos:end="11:33">args</name><index pos:start="11:34" pos:end="11:36">[<expr pos:start="11:35" pos:end="11:35"><literal type="number" pos:start="11:35" pos:end="11:35">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">hpte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:15">ridx</name></decl>, <decl pos:start="15:18" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:26">n_entries</name> <init pos:start="15:28" pos:end="15:30">= <expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:57">(<expr pos:start="19:9" pos:end="19:56"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:18">pte_index</name> <operator pos:start="19:20" pos:end="19:20">*</operator> <name pos:start="19:22" pos:end="19:37">HASH_PTE_SIZE_64</name><operator pos:start="19:38" pos:end="19:38">)</operator> <operator pos:start="19:40" pos:end="19:40">&amp;</operator> <operator pos:start="19:42" pos:end="19:42">~</operator><name pos:start="19:43" pos:end="19:56"><name pos:start="19:43" pos:end="19:45">env</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:56">htab_mask</name></name></expr>)</condition> <block pos:start="19:59" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:27">

        <return pos:start="21:9" pos:end="21:27">return <expr pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:13">flags</name> <operator pos:start="27:15" pos:end="27:15">&amp;</operator> <name pos:start="27:17" pos:end="27:24">H_READ_4</name></expr>)</condition> <block pos:start="27:27" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:22">

        <comment type="block" pos:start="29:9" pos:end="29:42">/* Clear the two low order bits */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:17">pte_index</name> <operator pos:start="31:19" pos:end="31:20">&amp;=</operator> <operator pos:start="31:22" pos:end="31:22">~</operator><operator pos:start="31:23" pos:end="31:23">(</operator><literal type="number" pos:start="31:24" pos:end="31:27">3ULL</literal><operator pos:start="31:28" pos:end="31:28">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:17">n_entries</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <literal type="number" pos:start="33:21" pos:end="33:21">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:63"><expr pos:start="39:5" pos:end="39:62"><name pos:start="39:5" pos:end="39:8">hpte</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <name pos:start="39:12" pos:end="39:29"><name pos:start="39:12" pos:end="39:14">env</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:29">external_htab</name></name> <operator pos:start="39:31" pos:end="39:31">+</operator> <operator pos:start="39:33" pos:end="39:33">(</operator><name pos:start="39:34" pos:end="39:42">pte_index</name> <operator pos:start="39:44" pos:end="39:44">*</operator> <name pos:start="39:46" pos:end="39:61">HASH_PTE_SIZE_64</name><operator pos:start="39:62" pos:end="39:62">)</operator></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="51:5">for <control pos:start="43:9" pos:end="43:45">(<init pos:start="43:10" pos:end="43:25"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr><operator pos:start="43:15" pos:end="43:15">,</operator> <expr pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:20">ridx</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <literal type="number" pos:start="43:24" pos:end="43:24">0</literal></expr>;</init> <condition pos:start="43:27" pos:end="43:40"><expr pos:start="43:27" pos:end="43:39"><name pos:start="43:27" pos:end="43:27">i</name> <operator pos:start="43:29" pos:end="43:29">&lt;</operator> <name pos:start="43:31" pos:end="43:39">n_entries</name></expr>;</condition> <incr pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:42">i</name><operator pos:start="43:43" pos:end="43:44">++</operator></expr></incr>)</control> <block pos:start="43:47" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:33">

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:12">args</name><index pos:start="45:13" pos:end="45:20">[<expr pos:start="45:14" pos:end="45:19"><name pos:start="45:14" pos:end="45:17">ridx</name><operator pos:start="45:18" pos:end="45:19">++</operator></expr>]</index></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:34"><name pos:start="45:24" pos:end="45:28">ldq_p</name><argument_list pos:start="45:29" pos:end="45:34">(<argument pos:start="45:30" pos:end="45:33"><expr pos:start="45:30" pos:end="45:33"><name pos:start="45:30" pos:end="45:33">hpte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:12">args</name><index pos:start="47:13" pos:end="47:20">[<expr pos:start="47:14" pos:end="47:19"><name pos:start="47:14" pos:end="47:17">ridx</name><operator pos:start="47:18" pos:end="47:19">++</operator></expr>]</index></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:57"><name pos:start="47:24" pos:end="47:28">ldq_p</name><argument_list pos:start="47:29" pos:end="47:57">(<argument pos:start="47:30" pos:end="47:56"><expr pos:start="47:30" pos:end="47:56"><name pos:start="47:30" pos:end="47:33">hpte</name> <operator pos:start="47:35" pos:end="47:35">+</operator> <operator pos:start="47:37" pos:end="47:37">(</operator><name pos:start="47:38" pos:end="47:53">HASH_PTE_SIZE_64</name><operator pos:start="47:54" pos:end="47:54">/</operator><literal type="number" pos:start="47:55" pos:end="47:55">2</literal><operator pos:start="47:56" pos:end="47:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:12">hpte</name> <operator pos:start="49:14" pos:end="49:15">+=</operator> <name pos:start="49:17" pos:end="49:32">HASH_PTE_SIZE_64</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="55:5" pos:end="55:21">return <expr pos:start="55:12" pos:end="55:20"><name pos:start="55:12" pos:end="55:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
