<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19904.c" pos:tabs="8"><function pos:start="1:1" pos:end="399:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">decode_dvd_subtitles</name><parameter_list pos:start="1:32" pos:end="3:65">(<parameter pos:start="1:33" pos:end="1:54"><decl pos:start="1:33" pos:end="1:54"><type pos:start="1:33" pos:end="1:54"><name pos:start="1:33" pos:end="1:42">AVSubtitle</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:54">sub_header</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">buf</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="399:1">{<block_content pos:start="7:5" pos:end="397:14">

    <decl_stmt pos:start="7:5" pos:end="7:74"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">cmd_pos</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">pos</name></decl>, <decl pos:start="7:23" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:25">cmd</name></decl>, <decl pos:start="7:28" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:29">x1</name></decl>, <decl pos:start="7:32" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:33">y1</name></decl>, <decl pos:start="7:36" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:36" pos:end="7:37">x2</name></decl>, <decl pos:start="7:40" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:41">y2</name></decl>, <decl pos:start="7:44" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:44" pos:end="7:50">offset1</name></decl>, <decl pos:start="7:53" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:59">offset2</name></decl>, <decl pos:start="7:62" pos:end="7:73"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:62" pos:end="7:73">next_cmd_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">big_offsets</name></decl>, <decl pos:start="9:22" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:32">offset_size</name></decl>, <decl pos:start="9:35" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:35" pos:end="9:41">is_8bit</name> <init pos:start="9:43" pos:end="9:45">= <expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:30">yuv_palette</name> <init pos:start="11:32" pos:end="11:34">= <expr pos:start="11:34" pos:end="11:34"><literal type="number" pos:start="11:34" pos:end="11:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:20">colormap</name><index pos:start="13:21" pos:end="13:23">[<expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">4</literal></expr>]</index></name></decl>, <decl pos:start="13:26" pos:end="13:35"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:26" pos:end="13:35"><name pos:start="13:26" pos:end="13:30">alpha</name><index pos:start="13:31" pos:end="13:35">[<expr pos:start="13:32" pos:end="13:34"><literal type="number" pos:start="13:32" pos:end="13:34">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">date</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">is_menu</name> <init pos:start="19:17" pos:end="19:19">= <expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:21">10</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:14">sub_header</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">rects</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:28">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:14">sub_header</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:25">num_rects</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:14">sub_header</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:22">format</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:14">sub_header</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:34">start_display_time</name></name> <operator pos:start="33:36" pos:end="33:36">=</operator> <literal type="number" pos:start="33:38" pos:end="33:38">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:14">sub_header</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:32">end_display_time</name></name> <operator pos:start="35:34" pos:end="35:34">=</operator> <literal type="number" pos:start="35:36" pos:end="35:36">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="55:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:26">(<expr pos:start="39:9" pos:end="39:25"><call pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:15">AV_RB16</name><argument_list pos:start="39:16" pos:end="39:20">(<argument pos:start="39:17" pos:end="39:19"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">buf</name></expr></argument>)</argument_list></call> <operator pos:start="39:22" pos:end="39:23">==</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>)</condition> <block pos:start="39:28" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:20">   <comment type="block" pos:start="39:32" pos:end="39:70">/* HD subpicture with 4-byte offsets */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:19">big_offsets</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:19">offset_size</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="number" pos:start="43:23" pos:end="43:23">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:15">cmd_pos</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">6</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="55:5">else <block pos:start="47:12" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:20">

        <expr_stmt pos:start="49:9" pos:end="49:24"><expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:19">big_offsets</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:19">offset_size</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <literal type="number" pos:start="51:23" pos:end="51:23">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:20"><expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:15">cmd_pos</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <literal type="number" pos:start="53:19" pos:end="53:19">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:41"><expr pos:start="59:5" pos:end="59:40"><name pos:start="59:5" pos:end="59:11">cmd_pos</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:40"><name pos:start="59:15" pos:end="59:25">READ_OFFSET</name><argument_list pos:start="59:26" pos:end="59:40">(<argument pos:start="59:27" pos:end="59:39"><expr pos:start="59:27" pos:end="59:39"><name pos:start="59:27" pos:end="59:29">buf</name> <operator pos:start="59:31" pos:end="59:31">+</operator> <name pos:start="59:33" pos:end="59:39">cmd_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="63:5" pos:end="371:5">while <condition pos:start="63:11" pos:end="63:50">(<expr pos:start="63:12" pos:end="63:49"><operator pos:start="63:12" pos:end="63:12">(</operator><name pos:start="63:13" pos:end="63:19">cmd_pos</name> <operator pos:start="63:21" pos:end="63:21">+</operator> <literal type="number" pos:start="63:23" pos:end="63:25">2</literal> <operator pos:start="63:25" pos:end="63:25">+</operator> <name pos:start="63:27" pos:end="63:37">offset_size</name><operator pos:start="63:38" pos:end="63:38">)</operator> <operator pos:start="63:40" pos:end="63:40">&lt;</operator> <name pos:start="63:42" pos:end="63:49">buf_size</name></expr>)</condition> <block pos:start="63:52" pos:end="371:5">{<block_content pos:start="65:9" pos:end="369:31">

        <expr_stmt pos:start="65:9" pos:end="65:38"><expr pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:12">date</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:37"><name pos:start="65:16" pos:end="65:22">AV_RB16</name><argument_list pos:start="65:23" pos:end="65:37">(<argument pos:start="65:24" pos:end="65:36"><expr pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:26">buf</name> <operator pos:start="65:28" pos:end="65:28">+</operator> <name pos:start="65:30" pos:end="65:36">cmd_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:54"><expr pos:start="67:9" pos:end="67:53"><name pos:start="67:9" pos:end="67:20">next_cmd_pos</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <call pos:start="67:24" pos:end="67:53"><name pos:start="67:24" pos:end="67:34">READ_OFFSET</name><argument_list pos:start="67:35" pos:end="67:53">(<argument pos:start="67:36" pos:end="67:52"><expr pos:start="67:36" pos:end="67:52"><name pos:start="67:36" pos:end="67:38">buf</name> <operator pos:start="67:40" pos:end="67:40">+</operator> <name pos:start="67:42" pos:end="67:48">cmd_pos</name> <operator pos:start="67:50" pos:end="67:50">+</operator> <literal type="number" pos:start="67:52" pos:end="67:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="71:45"><expr pos:start="69:9" pos:end="71:44"><call pos:start="69:9" pos:end="71:44"><name pos:start="69:9" pos:end="69:15">dprintf</name><argument_list pos:start="69:16" pos:end="71:44">(<argument pos:start="69:17" pos:end="69:20"><expr pos:start="69:17" pos:end="69:20"><name pos:start="69:17" pos:end="69:20">NULL</name></expr></argument>, <argument pos:start="69:23" pos:end="69:60"><expr pos:start="69:23" pos:end="69:60"><literal type="string" pos:start="69:23" pos:end="69:60">"cmd_pos=0x%04x next=0x%04x date=%d\n"</literal></expr></argument>,

                <argument pos:start="71:17" pos:end="71:23"><expr pos:start="71:17" pos:end="71:23"><name pos:start="71:17" pos:end="71:23">cmd_pos</name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">next_cmd_pos</name></expr></argument>, <argument pos:start="71:40" pos:end="71:43"><expr pos:start="71:40" pos:end="71:43"><name pos:start="71:40" pos:end="71:43">date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:11">pos</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:21">cmd_pos</name> <operator pos:start="73:23" pos:end="73:23">+</operator> <literal type="number" pos:start="73:25" pos:end="73:27">2</literal> <operator pos:start="73:27" pos:end="73:27">+</operator> <name pos:start="73:29" pos:end="73:39">offset_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:21"><expr pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:15">offset1</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <operator pos:start="75:19" pos:end="75:19">-</operator><literal type="number" pos:start="75:20" pos:end="75:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:21"><expr pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:15">offset2</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <operator pos:start="77:19" pos:end="77:19">-</operator><literal type="number" pos:start="77:20" pos:end="77:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:10">x1</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <name pos:start="79:14" pos:end="79:15">y1</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:20">x2</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:25">y2</name> <operator pos:start="79:27" pos:end="79:27">=</operator> <literal type="number" pos:start="79:29" pos:end="79:29">0</literal></expr>;</expr_stmt>

        <while pos:start="81:9" pos:end="259:9">while <condition pos:start="81:15" pos:end="81:30">(<expr pos:start="81:16" pos:end="81:29"><name pos:start="81:16" pos:end="81:18">pos</name> <operator pos:start="81:20" pos:end="81:20">&lt;</operator> <name pos:start="81:22" pos:end="81:29">buf_size</name></expr>)</condition> <block pos:start="81:32" pos:end="259:9">{<block_content pos:start="83:13" pos:end="257:13">

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:15">cmd</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <name pos:start="83:19" pos:end="83:28"><name pos:start="83:19" pos:end="83:21">buf</name><index pos:start="83:22" pos:end="83:28">[<expr pos:start="83:23" pos:end="83:27"><name pos:start="83:23" pos:end="83:25">pos</name><operator pos:start="83:26" pos:end="83:27">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:45"><expr pos:start="85:13" pos:end="85:44"><call pos:start="85:13" pos:end="85:44"><name pos:start="85:13" pos:end="85:19">dprintf</name><argument_list pos:start="85:20" pos:end="85:44">(<argument pos:start="85:21" pos:end="85:24"><expr pos:start="85:21" pos:end="85:24"><name pos:start="85:21" pos:end="85:24">NULL</name></expr></argument>, <argument pos:start="85:27" pos:end="85:38"><expr pos:start="85:27" pos:end="85:38"><literal type="string" pos:start="85:27" pos:end="85:38">"cmd=%02x\n"</literal></expr></argument>, <argument pos:start="85:41" pos:end="85:43"><expr pos:start="85:41" pos:end="85:43"><name pos:start="85:41" pos:end="85:43">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="87:13" pos:end="257:13">switch<condition pos:start="87:19" pos:end="87:23">(<expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">cmd</name></expr>)</condition> <block pos:start="87:25" pos:end="257:13">{<block_content pos:start="89:13" pos:end="255:29">

            <case pos:start="89:13" pos:end="89:22">case <expr pos:start="89:18" pos:end="89:21"><literal type="number" pos:start="89:18" pos:end="89:21">0x00</literal></expr>:</case>

                <comment type="block" pos:start="91:17" pos:end="91:37">/* menu subpicture */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:28"><expr pos:start="93:17" pos:end="93:27"><name pos:start="93:17" pos:end="93:23">is_menu</name> <operator pos:start="93:25" pos:end="93:25">=</operator> <literal type="number" pos:start="93:27" pos:end="93:27">1</literal></expr>;</expr_stmt>

                <break pos:start="95:17" pos:end="95:22">break;</break>

            <case pos:start="97:13" pos:end="97:22">case <expr pos:start="97:18" pos:end="97:21"><literal type="number" pos:start="97:18" pos:end="97:21">0x01</literal></expr>:</case>

                <comment type="block" pos:start="99:17" pos:end="99:36">/* set start date */</comment>

                <expr_stmt pos:start="101:17" pos:end="101:67"><expr pos:start="101:17" pos:end="101:66"><name pos:start="101:17" pos:end="101:46"><name pos:start="101:17" pos:end="101:26">sub_header</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:46">start_display_time</name></name> <operator pos:start="101:48" pos:end="101:48">=</operator> <operator pos:start="101:50" pos:end="101:50">(</operator><name pos:start="101:51" pos:end="101:54">date</name> <operator pos:start="101:56" pos:end="101:57">&lt;&lt;</operator> <literal type="number" pos:start="101:59" pos:end="101:60">10</literal><operator pos:start="101:61" pos:end="101:61">)</operator> <operator pos:start="101:63" pos:end="101:63">/</operator> <literal type="number" pos:start="101:65" pos:end="101:66">90</literal></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            <case pos:start="105:13" pos:end="105:22">case <expr pos:start="105:18" pos:end="105:21"><literal type="number" pos:start="105:18" pos:end="105:21">0x02</literal></expr>:</case>

                <comment type="block" pos:start="107:17" pos:end="107:34">/* set end date */</comment>

                <expr_stmt pos:start="109:17" pos:end="109:65"><expr pos:start="109:17" pos:end="109:64"><name pos:start="109:17" pos:end="109:44"><name pos:start="109:17" pos:end="109:26">sub_header</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:44">end_display_time</name></name> <operator pos:start="109:46" pos:end="109:46">=</operator> <operator pos:start="109:48" pos:end="109:48">(</operator><name pos:start="109:49" pos:end="109:52">date</name> <operator pos:start="109:54" pos:end="109:55">&lt;&lt;</operator> <literal type="number" pos:start="109:57" pos:end="109:58">10</literal><operator pos:start="109:59" pos:end="109:59">)</operator> <operator pos:start="109:61" pos:end="109:61">/</operator> <literal type="number" pos:start="109:63" pos:end="109:64">90</literal></expr>;</expr_stmt>

                <break pos:start="111:17" pos:end="111:22">break;</break>

            <case pos:start="113:13" pos:end="113:22">case <expr pos:start="113:18" pos:end="113:21"><literal type="number" pos:start="113:18" pos:end="113:21">0x03</literal></expr>:</case>

                <comment type="block" pos:start="115:17" pos:end="115:34">/* set colormap */</comment>

                <if_stmt pos:start="117:17" pos:end="119:30"><if pos:start="117:17" pos:end="119:30">if <condition pos:start="117:20" pos:end="117:41">(<expr pos:start="117:21" pos:end="117:40"><operator pos:start="117:21" pos:end="117:21">(</operator><name pos:start="117:22" pos:end="117:29">buf_size</name> <operator pos:start="117:31" pos:end="117:31">-</operator> <name pos:start="117:33" pos:end="117:35">pos</name><operator pos:start="117:36" pos:end="117:36">)</operator> <operator pos:start="117:38" pos:end="117:38">&lt;</operator> <literal type="number" pos:start="117:40" pos:end="117:40">2</literal></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:30"><block_content pos:start="119:21" pos:end="119:30">

                    <goto pos:start="119:21" pos:end="119:30">goto <name pos:start="119:26" pos:end="119:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:44"><expr pos:start="121:17" pos:end="121:43"><name pos:start="121:17" pos:end="121:27"><name pos:start="121:17" pos:end="121:24">colormap</name><index pos:start="121:25" pos:end="121:27">[<expr pos:start="121:26" pos:end="121:26"><literal type="number" pos:start="121:26" pos:end="121:26">3</literal></expr>]</index></name> <operator pos:start="121:29" pos:end="121:29">=</operator> <name pos:start="121:31" pos:end="121:38"><name pos:start="121:31" pos:end="121:33">buf</name><index pos:start="121:34" pos:end="121:38">[<expr pos:start="121:35" pos:end="121:37"><name pos:start="121:35" pos:end="121:37">pos</name></expr>]</index></name> <operator pos:start="121:40" pos:end="121:41">&gt;&gt;</operator> <literal type="number" pos:start="121:43" pos:end="121:43">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:46"><expr pos:start="123:17" pos:end="123:45"><name pos:start="123:17" pos:end="123:27"><name pos:start="123:17" pos:end="123:24">colormap</name><index pos:start="123:25" pos:end="123:27">[<expr pos:start="123:26" pos:end="123:26"><literal type="number" pos:start="123:26" pos:end="123:26">2</literal></expr>]</index></name> <operator pos:start="123:29" pos:end="123:29">=</operator> <name pos:start="123:31" pos:end="123:38"><name pos:start="123:31" pos:end="123:33">buf</name><index pos:start="123:34" pos:end="123:38">[<expr pos:start="123:35" pos:end="123:37"><name pos:start="123:35" pos:end="123:37">pos</name></expr>]</index></name> <operator pos:start="123:40" pos:end="123:40">&amp;</operator> <literal type="number" pos:start="123:42" pos:end="123:45">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:48"><expr pos:start="125:17" pos:end="125:47"><name pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:24">colormap</name><index pos:start="125:25" pos:end="125:27">[<expr pos:start="125:26" pos:end="125:26"><literal type="number" pos:start="125:26" pos:end="125:26">1</literal></expr>]</index></name> <operator pos:start="125:29" pos:end="125:29">=</operator> <name pos:start="125:31" pos:end="125:42"><name pos:start="125:31" pos:end="125:33">buf</name><index pos:start="125:34" pos:end="125:42">[<expr pos:start="125:35" pos:end="125:41"><name pos:start="125:35" pos:end="125:37">pos</name> <operator pos:start="125:39" pos:end="125:39">+</operator> <literal type="number" pos:start="125:41" pos:end="125:41">1</literal></expr>]</index></name> <operator pos:start="125:44" pos:end="125:45">&gt;&gt;</operator> <literal type="number" pos:start="125:47" pos:end="125:47">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:50"><expr pos:start="127:17" pos:end="127:49"><name pos:start="127:17" pos:end="127:27"><name pos:start="127:17" pos:end="127:24">colormap</name><index pos:start="127:25" pos:end="127:27">[<expr pos:start="127:26" pos:end="127:26"><literal type="number" pos:start="127:26" pos:end="127:26">0</literal></expr>]</index></name> <operator pos:start="127:29" pos:end="127:29">=</operator> <name pos:start="127:31" pos:end="127:42"><name pos:start="127:31" pos:end="127:33">buf</name><index pos:start="127:34" pos:end="127:42">[<expr pos:start="127:35" pos:end="127:41"><name pos:start="127:35" pos:end="127:37">pos</name> <operator pos:start="127:39" pos:end="127:39">+</operator> <literal type="number" pos:start="127:41" pos:end="127:41">1</literal></expr>]</index></name> <operator pos:start="127:44" pos:end="127:44">&amp;</operator> <literal type="number" pos:start="127:46" pos:end="127:49">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:25"><expr pos:start="129:17" pos:end="129:24"><name pos:start="129:17" pos:end="129:19">pos</name> <operator pos:start="129:21" pos:end="129:22">+=</operator> <literal type="number" pos:start="129:24" pos:end="129:24">2</literal></expr>;</expr_stmt>

                <break pos:start="131:17" pos:end="131:22">break;</break>

            <case pos:start="133:13" pos:end="133:22">case <expr pos:start="133:18" pos:end="133:21"><literal type="number" pos:start="133:18" pos:end="133:21">0x04</literal></expr>:</case>

                <comment type="block" pos:start="135:17" pos:end="135:31">/* set alpha */</comment>

                <if_stmt pos:start="137:17" pos:end="139:30"><if pos:start="137:17" pos:end="139:30">if <condition pos:start="137:20" pos:end="137:41">(<expr pos:start="137:21" pos:end="137:40"><operator pos:start="137:21" pos:end="137:21">(</operator><name pos:start="137:22" pos:end="137:29">buf_size</name> <operator pos:start="137:31" pos:end="137:31">-</operator> <name pos:start="137:33" pos:end="137:35">pos</name><operator pos:start="137:36" pos:end="137:36">)</operator> <operator pos:start="137:38" pos:end="137:38">&lt;</operator> <literal type="number" pos:start="137:40" pos:end="137:40">2</literal></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:30"><block_content pos:start="139:21" pos:end="139:30">

                    <goto pos:start="139:21" pos:end="139:30">goto <name pos:start="139:26" pos:end="139:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:41"><expr pos:start="141:17" pos:end="141:40"><name pos:start="141:17" pos:end="141:24"><name pos:start="141:17" pos:end="141:21">alpha</name><index pos:start="141:22" pos:end="141:24">[<expr pos:start="141:23" pos:end="141:23"><literal type="number" pos:start="141:23" pos:end="141:23">3</literal></expr>]</index></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:35"><name pos:start="141:28" pos:end="141:30">buf</name><index pos:start="141:31" pos:end="141:35">[<expr pos:start="141:32" pos:end="141:34"><name pos:start="141:32" pos:end="141:34">pos</name></expr>]</index></name> <operator pos:start="141:37" pos:end="141:38">&gt;&gt;</operator> <literal type="number" pos:start="141:40" pos:end="141:40">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:43"><expr pos:start="143:17" pos:end="143:42"><name pos:start="143:17" pos:end="143:24"><name pos:start="143:17" pos:end="143:21">alpha</name><index pos:start="143:22" pos:end="143:24">[<expr pos:start="143:23" pos:end="143:23"><literal type="number" pos:start="143:23" pos:end="143:23">2</literal></expr>]</index></name> <operator pos:start="143:26" pos:end="143:26">=</operator> <name pos:start="143:28" pos:end="143:35"><name pos:start="143:28" pos:end="143:30">buf</name><index pos:start="143:31" pos:end="143:35">[<expr pos:start="143:32" pos:end="143:34"><name pos:start="143:32" pos:end="143:34">pos</name></expr>]</index></name> <operator pos:start="143:37" pos:end="143:37">&amp;</operator> <literal type="number" pos:start="143:39" pos:end="143:42">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:45"><expr pos:start="145:17" pos:end="145:44"><name pos:start="145:17" pos:end="145:24"><name pos:start="145:17" pos:end="145:21">alpha</name><index pos:start="145:22" pos:end="145:24">[<expr pos:start="145:23" pos:end="145:23"><literal type="number" pos:start="145:23" pos:end="145:23">1</literal></expr>]</index></name> <operator pos:start="145:26" pos:end="145:26">=</operator> <name pos:start="145:28" pos:end="145:39"><name pos:start="145:28" pos:end="145:30">buf</name><index pos:start="145:31" pos:end="145:39">[<expr pos:start="145:32" pos:end="145:38"><name pos:start="145:32" pos:end="145:34">pos</name> <operator pos:start="145:36" pos:end="145:36">+</operator> <literal type="number" pos:start="145:38" pos:end="145:38">1</literal></expr>]</index></name> <operator pos:start="145:41" pos:end="145:42">&gt;&gt;</operator> <literal type="number" pos:start="145:44" pos:end="145:44">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:47"><expr pos:start="147:17" pos:end="147:46"><name pos:start="147:17" pos:end="147:24"><name pos:start="147:17" pos:end="147:21">alpha</name><index pos:start="147:22" pos:end="147:24">[<expr pos:start="147:23" pos:end="147:23"><literal type="number" pos:start="147:23" pos:end="147:23">0</literal></expr>]</index></name> <operator pos:start="147:26" pos:end="147:26">=</operator> <name pos:start="147:28" pos:end="147:39"><name pos:start="147:28" pos:end="147:30">buf</name><index pos:start="147:31" pos:end="147:39">[<expr pos:start="147:32" pos:end="147:38"><name pos:start="147:32" pos:end="147:34">pos</name> <operator pos:start="147:36" pos:end="147:36">+</operator> <literal type="number" pos:start="147:38" pos:end="147:38">1</literal></expr>]</index></name> <operator pos:start="147:41" pos:end="147:41">&amp;</operator> <literal type="number" pos:start="147:43" pos:end="147:46">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:25"><expr pos:start="149:17" pos:end="149:24"><name pos:start="149:17" pos:end="149:19">pos</name> <operator pos:start="149:21" pos:end="149:22">+=</operator> <literal type="number" pos:start="149:24" pos:end="149:24">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:83"><expr pos:start="151:13" pos:end="151:82"><call pos:start="151:13" pos:end="151:82"><name pos:start="151:13" pos:end="151:19">dprintf</name><argument_list pos:start="151:20" pos:end="151:82">(<argument pos:start="151:21" pos:end="151:24"><expr pos:start="151:21" pos:end="151:24"><name pos:start="151:21" pos:end="151:24">NULL</name></expr></argument>, <argument pos:start="151:27" pos:end="151:44"><expr pos:start="151:27" pos:end="151:44"><literal type="string" pos:start="151:27" pos:end="151:44">"alpha=%x%x%x%x\n"</literal></expr></argument>, <argument pos:start="151:47" pos:end="151:54"><expr pos:start="151:47" pos:end="151:54"><name pos:start="151:47" pos:end="151:54"><name pos:start="151:47" pos:end="151:51">alpha</name><index pos:start="151:52" pos:end="151:54">[<expr pos:start="151:53" pos:end="151:53"><literal type="number" pos:start="151:53" pos:end="151:53">0</literal></expr>]</index></name></expr></argument>,<argument pos:start="151:56" pos:end="151:63"><expr pos:start="151:56" pos:end="151:63"><name pos:start="151:56" pos:end="151:63"><name pos:start="151:56" pos:end="151:60">alpha</name><index pos:start="151:61" pos:end="151:63">[<expr pos:start="151:62" pos:end="151:62"><literal type="number" pos:start="151:62" pos:end="151:62">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="151:65" pos:end="151:72"><expr pos:start="151:65" pos:end="151:72"><name pos:start="151:65" pos:end="151:72"><name pos:start="151:65" pos:end="151:69">alpha</name><index pos:start="151:70" pos:end="151:72">[<expr pos:start="151:71" pos:end="151:71"><literal type="number" pos:start="151:71" pos:end="151:71">2</literal></expr>]</index></name></expr></argument>,<argument pos:start="151:74" pos:end="151:81"><expr pos:start="151:74" pos:end="151:81"><name pos:start="151:74" pos:end="151:81"><name pos:start="151:74" pos:end="151:78">alpha</name><index pos:start="151:79" pos:end="151:81">[<expr pos:start="151:80" pos:end="151:80"><literal type="number" pos:start="151:80" pos:end="151:80">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="153:17" pos:end="153:22">break;</break>

            <case pos:start="155:13" pos:end="155:22">case <expr pos:start="155:18" pos:end="155:21"><literal type="number" pos:start="155:18" pos:end="155:21">0x05</literal></expr>:</case>

            <case pos:start="157:13" pos:end="157:22">case <expr pos:start="157:18" pos:end="157:21"><literal type="number" pos:start="157:18" pos:end="157:21">0x85</literal></expr>:</case>

                <if_stmt pos:start="159:17" pos:end="161:30"><if pos:start="159:17" pos:end="161:30">if <condition pos:start="159:20" pos:end="159:41">(<expr pos:start="159:21" pos:end="159:40"><operator pos:start="159:21" pos:end="159:21">(</operator><name pos:start="159:22" pos:end="159:29">buf_size</name> <operator pos:start="159:31" pos:end="159:31">-</operator> <name pos:start="159:33" pos:end="159:35">pos</name><operator pos:start="159:36" pos:end="159:36">)</operator> <operator pos:start="159:38" pos:end="159:38">&lt;</operator> <literal type="number" pos:start="159:40" pos:end="159:40">6</literal></expr>)</condition><block type="pseudo" pos:start="161:21" pos:end="161:30"><block_content pos:start="161:21" pos:end="161:30">

                    <goto pos:start="161:21" pos:end="161:30">goto <name pos:start="161:26" pos:end="161:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:59"><expr pos:start="163:17" pos:end="163:58"><name pos:start="163:17" pos:end="163:18">x1</name> <operator pos:start="163:20" pos:end="163:20">=</operator> <operator pos:start="163:22" pos:end="163:22">(</operator><name pos:start="163:23" pos:end="163:30"><name pos:start="163:23" pos:end="163:25">buf</name><index pos:start="163:26" pos:end="163:30">[<expr pos:start="163:27" pos:end="163:29"><name pos:start="163:27" pos:end="163:29">pos</name></expr>]</index></name> <operator pos:start="163:32" pos:end="163:33">&lt;&lt;</operator> <literal type="number" pos:start="163:35" pos:end="163:35">4</literal><operator pos:start="163:36" pos:end="163:36">)</operator> <operator pos:start="163:38" pos:end="163:38">|</operator> <operator pos:start="163:40" pos:end="163:40">(</operator><name pos:start="163:41" pos:end="163:52"><name pos:start="163:41" pos:end="163:43">buf</name><index pos:start="163:44" pos:end="163:52">[<expr pos:start="163:45" pos:end="163:51"><name pos:start="163:45" pos:end="163:47">pos</name> <operator pos:start="163:49" pos:end="163:49">+</operator> <literal type="number" pos:start="163:51" pos:end="163:51">1</literal></expr>]</index></name> <operator pos:start="163:54" pos:end="163:55">&gt;&gt;</operator> <literal type="number" pos:start="163:57" pos:end="163:57">4</literal><operator pos:start="163:58" pos:end="163:58">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:65"><expr pos:start="165:17" pos:end="165:64"><name pos:start="165:17" pos:end="165:18">x2</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <operator pos:start="165:22" pos:end="165:22">(</operator><operator pos:start="165:23" pos:end="165:23">(</operator><name pos:start="165:24" pos:end="165:35"><name pos:start="165:24" pos:end="165:26">buf</name><index pos:start="165:27" pos:end="165:35">[<expr pos:start="165:28" pos:end="165:34"><name pos:start="165:28" pos:end="165:30">pos</name> <operator pos:start="165:32" pos:end="165:32">+</operator> <literal type="number" pos:start="165:34" pos:end="165:34">1</literal></expr>]</index></name> <operator pos:start="165:37" pos:end="165:37">&amp;</operator> <literal type="number" pos:start="165:39" pos:end="165:42">0x0f</literal><operator pos:start="165:43" pos:end="165:43">)</operator> <operator pos:start="165:45" pos:end="165:46">&lt;&lt;</operator> <literal type="number" pos:start="165:48" pos:end="165:48">8</literal><operator pos:start="165:49" pos:end="165:49">)</operator> <operator pos:start="165:51" pos:end="165:51">|</operator> <name pos:start="165:53" pos:end="165:64"><name pos:start="165:53" pos:end="165:55">buf</name><index pos:start="165:56" pos:end="165:64">[<expr pos:start="165:57" pos:end="165:63"><name pos:start="165:57" pos:end="165:59">pos</name> <operator pos:start="165:61" pos:end="165:61">+</operator> <literal type="number" pos:start="165:63" pos:end="165:63">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:63"><expr pos:start="167:17" pos:end="167:62"><name pos:start="167:17" pos:end="167:18">y1</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <operator pos:start="167:22" pos:end="167:22">(</operator><name pos:start="167:23" pos:end="167:34"><name pos:start="167:23" pos:end="167:25">buf</name><index pos:start="167:26" pos:end="167:34">[<expr pos:start="167:27" pos:end="167:33"><name pos:start="167:27" pos:end="167:29">pos</name> <operator pos:start="167:31" pos:end="167:31">+</operator> <literal type="number" pos:start="167:33" pos:end="167:33">3</literal></expr>]</index></name> <operator pos:start="167:36" pos:end="167:37">&lt;&lt;</operator> <literal type="number" pos:start="167:39" pos:end="167:39">4</literal><operator pos:start="167:40" pos:end="167:40">)</operator> <operator pos:start="167:42" pos:end="167:42">|</operator> <operator pos:start="167:44" pos:end="167:44">(</operator><name pos:start="167:45" pos:end="167:56"><name pos:start="167:45" pos:end="167:47">buf</name><index pos:start="167:48" pos:end="167:56">[<expr pos:start="167:49" pos:end="167:55"><name pos:start="167:49" pos:end="167:51">pos</name> <operator pos:start="167:53" pos:end="167:53">+</operator> <literal type="number" pos:start="167:55" pos:end="167:55">4</literal></expr>]</index></name> <operator pos:start="167:58" pos:end="167:59">&gt;&gt;</operator> <literal type="number" pos:start="167:61" pos:end="167:61">4</literal><operator pos:start="167:62" pos:end="167:62">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:65"><expr pos:start="169:17" pos:end="169:64"><name pos:start="169:17" pos:end="169:18">y2</name> <operator pos:start="169:20" pos:end="169:20">=</operator> <operator pos:start="169:22" pos:end="169:22">(</operator><operator pos:start="169:23" pos:end="169:23">(</operator><name pos:start="169:24" pos:end="169:35"><name pos:start="169:24" pos:end="169:26">buf</name><index pos:start="169:27" pos:end="169:35">[<expr pos:start="169:28" pos:end="169:34"><name pos:start="169:28" pos:end="169:30">pos</name> <operator pos:start="169:32" pos:end="169:32">+</operator> <literal type="number" pos:start="169:34" pos:end="169:34">4</literal></expr>]</index></name> <operator pos:start="169:37" pos:end="169:37">&amp;</operator> <literal type="number" pos:start="169:39" pos:end="169:42">0x0f</literal><operator pos:start="169:43" pos:end="169:43">)</operator> <operator pos:start="169:45" pos:end="169:46">&lt;&lt;</operator> <literal type="number" pos:start="169:48" pos:end="169:48">8</literal><operator pos:start="169:49" pos:end="169:49">)</operator> <operator pos:start="169:51" pos:end="169:51">|</operator> <name pos:start="169:53" pos:end="169:64"><name pos:start="169:53" pos:end="169:55">buf</name><index pos:start="169:56" pos:end="169:64">[<expr pos:start="169:57" pos:end="169:63"><name pos:start="169:57" pos:end="169:59">pos</name> <operator pos:start="169:61" pos:end="169:61">+</operator> <literal type="number" pos:start="169:63" pos:end="169:63">5</literal></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="171:17" pos:end="173:32"><if pos:start="171:17" pos:end="173:32">if <condition pos:start="171:20" pos:end="171:31">(<expr pos:start="171:21" pos:end="171:30"><name pos:start="171:21" pos:end="171:23">cmd</name> <operator pos:start="171:25" pos:end="171:25">&amp;</operator> <literal type="number" pos:start="171:27" pos:end="171:30">0x80</literal></expr>)</condition><block type="pseudo" pos:start="173:21" pos:end="173:32"><block_content pos:start="173:21" pos:end="173:32">

                    <expr_stmt pos:start="173:21" pos:end="173:32"><expr pos:start="173:21" pos:end="173:31"><name pos:start="173:21" pos:end="173:27">is_8bit</name> <operator pos:start="173:29" pos:end="173:29">=</operator> <literal type="number" pos:start="173:31" pos:end="173:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:75"><expr pos:start="175:17" pos:end="175:74"><call pos:start="175:17" pos:end="175:74"><name pos:start="175:17" pos:end="175:23">dprintf</name><argument_list pos:start="175:24" pos:end="175:74">(<argument pos:start="175:25" pos:end="175:28"><expr pos:start="175:25" pos:end="175:28"><name pos:start="175:25" pos:end="175:28">NULL</name></expr></argument>, <argument pos:start="175:31" pos:end="175:57"><expr pos:start="175:31" pos:end="175:57"><literal type="string" pos:start="175:31" pos:end="175:57">"x1=%d x2=%d y1=%d y2=%d\n"</literal></expr></argument>, <argument pos:start="175:60" pos:end="175:61"><expr pos:start="175:60" pos:end="175:61"><name pos:start="175:60" pos:end="175:61">x1</name></expr></argument>, <argument pos:start="175:64" pos:end="175:65"><expr pos:start="175:64" pos:end="175:65"><name pos:start="175:64" pos:end="175:65">x2</name></expr></argument>, <argument pos:start="175:68" pos:end="175:69"><expr pos:start="175:68" pos:end="175:69"><name pos:start="175:68" pos:end="175:69">y1</name></expr></argument>, <argument pos:start="175:72" pos:end="175:73"><expr pos:start="175:72" pos:end="175:73"><name pos:start="175:72" pos:end="175:73">y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:25"><expr pos:start="177:17" pos:end="177:24"><name pos:start="177:17" pos:end="177:19">pos</name> <operator pos:start="177:21" pos:end="177:22">+=</operator> <literal type="number" pos:start="177:24" pos:end="177:24">6</literal></expr>;</expr_stmt>

                <break pos:start="179:17" pos:end="179:22">break;</break>

            <case pos:start="181:13" pos:end="181:22">case <expr pos:start="181:18" pos:end="181:21"><literal type="number" pos:start="181:18" pos:end="181:21">0x06</literal></expr>:</case>

                <if_stmt pos:start="183:17" pos:end="185:30"><if pos:start="183:17" pos:end="185:30">if <condition pos:start="183:20" pos:end="183:41">(<expr pos:start="183:21" pos:end="183:40"><operator pos:start="183:21" pos:end="183:21">(</operator><name pos:start="183:22" pos:end="183:29">buf_size</name> <operator pos:start="183:31" pos:end="183:31">-</operator> <name pos:start="183:33" pos:end="183:35">pos</name><operator pos:start="183:36" pos:end="183:36">)</operator> <operator pos:start="183:38" pos:end="183:38">&lt;</operator> <literal type="number" pos:start="183:40" pos:end="183:40">4</literal></expr>)</condition><block type="pseudo" pos:start="185:21" pos:end="185:30"><block_content pos:start="185:21" pos:end="185:30">

                    <goto pos:start="185:21" pos:end="185:30">goto <name pos:start="185:26" pos:end="185:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:45"><expr pos:start="187:17" pos:end="187:44"><name pos:start="187:17" pos:end="187:23">offset1</name> <operator pos:start="187:25" pos:end="187:25">=</operator> <call pos:start="187:27" pos:end="187:44"><name pos:start="187:27" pos:end="187:33">AV_RB16</name><argument_list pos:start="187:34" pos:end="187:44">(<argument pos:start="187:35" pos:end="187:43"><expr pos:start="187:35" pos:end="187:43"><name pos:start="187:35" pos:end="187:37">buf</name> <operator pos:start="187:39" pos:end="187:39">+</operator> <name pos:start="187:41" pos:end="187:43">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:49"><expr pos:start="189:17" pos:end="189:48"><name pos:start="189:17" pos:end="189:23">offset2</name> <operator pos:start="189:25" pos:end="189:25">=</operator> <call pos:start="189:27" pos:end="189:48"><name pos:start="189:27" pos:end="189:33">AV_RB16</name><argument_list pos:start="189:34" pos:end="189:48">(<argument pos:start="189:35" pos:end="189:47"><expr pos:start="189:35" pos:end="189:47"><name pos:start="189:35" pos:end="189:37">buf</name> <operator pos:start="189:39" pos:end="189:39">+</operator> <name pos:start="189:41" pos:end="189:43">pos</name> <operator pos:start="189:45" pos:end="189:45">+</operator> <literal type="number" pos:start="189:47" pos:end="189:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:83"><expr pos:start="191:17" pos:end="191:82"><call pos:start="191:17" pos:end="191:82"><name pos:start="191:17" pos:end="191:23">dprintf</name><argument_list pos:start="191:24" pos:end="191:82">(<argument pos:start="191:25" pos:end="191:28"><expr pos:start="191:25" pos:end="191:28"><name pos:start="191:25" pos:end="191:28">NULL</name></expr></argument>, <argument pos:start="191:31" pos:end="191:63"><expr pos:start="191:31" pos:end="191:63"><literal type="string" pos:start="191:31" pos:end="191:63">"offset1=0x%04x offset2=0x%04x\n"</literal></expr></argument>, <argument pos:start="191:66" pos:end="191:72"><expr pos:start="191:66" pos:end="191:72"><name pos:start="191:66" pos:end="191:72">offset1</name></expr></argument>, <argument pos:start="191:75" pos:end="191:81"><expr pos:start="191:75" pos:end="191:81"><name pos:start="191:75" pos:end="191:81">offset2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:25"><expr pos:start="193:17" pos:end="193:24"><name pos:start="193:17" pos:end="193:19">pos</name> <operator pos:start="193:21" pos:end="193:22">+=</operator> <literal type="number" pos:start="193:24" pos:end="193:24">4</literal></expr>;</expr_stmt>

                <break pos:start="195:17" pos:end="195:22">break;</break>

            <case pos:start="197:13" pos:end="197:22">case <expr pos:start="197:18" pos:end="197:21"><literal type="number" pos:start="197:18" pos:end="197:21">0x86</literal></expr>:</case>

                <if_stmt pos:start="199:17" pos:end="201:30"><if pos:start="199:17" pos:end="201:30">if <condition pos:start="199:20" pos:end="199:41">(<expr pos:start="199:21" pos:end="199:40"><operator pos:start="199:21" pos:end="199:21">(</operator><name pos:start="199:22" pos:end="199:29">buf_size</name> <operator pos:start="199:31" pos:end="199:31">-</operator> <name pos:start="199:33" pos:end="199:35">pos</name><operator pos:start="199:36" pos:end="199:36">)</operator> <operator pos:start="199:38" pos:end="199:38">&lt;</operator> <literal type="number" pos:start="199:40" pos:end="199:40">8</literal></expr>)</condition><block type="pseudo" pos:start="201:21" pos:end="201:30"><block_content pos:start="201:21" pos:end="201:30">

                    <goto pos:start="201:21" pos:end="201:30">goto <name pos:start="201:26" pos:end="201:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:45"><expr pos:start="203:17" pos:end="203:44"><name pos:start="203:17" pos:end="203:23">offset1</name> <operator pos:start="203:25" pos:end="203:25">=</operator> <call pos:start="203:27" pos:end="203:44"><name pos:start="203:27" pos:end="203:33">AV_RB32</name><argument_list pos:start="203:34" pos:end="203:44">(<argument pos:start="203:35" pos:end="203:43"><expr pos:start="203:35" pos:end="203:43"><name pos:start="203:35" pos:end="203:37">buf</name> <operator pos:start="203:39" pos:end="203:39">+</operator> <name pos:start="203:41" pos:end="203:43">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:49"><expr pos:start="205:17" pos:end="205:48"><name pos:start="205:17" pos:end="205:23">offset2</name> <operator pos:start="205:25" pos:end="205:25">=</operator> <call pos:start="205:27" pos:end="205:48"><name pos:start="205:27" pos:end="205:33">AV_RB32</name><argument_list pos:start="205:34" pos:end="205:48">(<argument pos:start="205:35" pos:end="205:47"><expr pos:start="205:35" pos:end="205:47"><name pos:start="205:35" pos:end="205:37">buf</name> <operator pos:start="205:39" pos:end="205:39">+</operator> <name pos:start="205:41" pos:end="205:43">pos</name> <operator pos:start="205:45" pos:end="205:45">+</operator> <literal type="number" pos:start="205:47" pos:end="205:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:83"><expr pos:start="207:17" pos:end="207:82"><call pos:start="207:17" pos:end="207:82"><name pos:start="207:17" pos:end="207:23">dprintf</name><argument_list pos:start="207:24" pos:end="207:82">(<argument pos:start="207:25" pos:end="207:28"><expr pos:start="207:25" pos:end="207:28"><name pos:start="207:25" pos:end="207:28">NULL</name></expr></argument>, <argument pos:start="207:31" pos:end="207:63"><expr pos:start="207:31" pos:end="207:63"><literal type="string" pos:start="207:31" pos:end="207:63">"offset1=0x%04x offset2=0x%04x\n"</literal></expr></argument>, <argument pos:start="207:66" pos:end="207:72"><expr pos:start="207:66" pos:end="207:72"><name pos:start="207:66" pos:end="207:72">offset1</name></expr></argument>, <argument pos:start="207:75" pos:end="207:81"><expr pos:start="207:75" pos:end="207:81"><name pos:start="207:75" pos:end="207:81">offset2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:25"><expr pos:start="209:17" pos:end="209:24"><name pos:start="209:17" pos:end="209:19">pos</name> <operator pos:start="209:21" pos:end="209:22">+=</operator> <literal type="number" pos:start="209:24" pos:end="209:24">8</literal></expr>;</expr_stmt>

                <break pos:start="211:17" pos:end="211:22">break;</break>



            <case pos:start="215:13" pos:end="215:22">case <expr pos:start="215:18" pos:end="215:21"><literal type="number" pos:start="215:18" pos:end="215:21">0x83</literal></expr>:</case>

                <comment type="block" pos:start="217:17" pos:end="217:36">/* HD set palette */</comment>

                <if_stmt pos:start="219:17" pos:end="221:30"><if pos:start="219:17" pos:end="221:30">if <condition pos:start="219:20" pos:end="219:43">(<expr pos:start="219:21" pos:end="219:42"><operator pos:start="219:21" pos:end="219:21">(</operator><name pos:start="219:22" pos:end="219:29">buf_size</name> <operator pos:start="219:31" pos:end="219:31">-</operator> <name pos:start="219:33" pos:end="219:35">pos</name><operator pos:start="219:36" pos:end="219:36">)</operator> <operator pos:start="219:38" pos:end="219:38">&lt;</operator> <literal type="number" pos:start="219:40" pos:end="219:42">768</literal></expr>)</condition><block type="pseudo" pos:start="221:21" pos:end="221:30"><block_content pos:start="221:21" pos:end="221:30">

                    <goto pos:start="221:21" pos:end="221:30">goto <name pos:start="221:26" pos:end="221:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:40"><expr pos:start="223:17" pos:end="223:39"><name pos:start="223:17" pos:end="223:27">yuv_palette</name> <operator pos:start="223:29" pos:end="223:29">=</operator> <name pos:start="223:31" pos:end="223:33">buf</name> <operator pos:start="223:35" pos:end="223:35">+</operator> <name pos:start="223:37" pos:end="223:39">pos</name></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:27"><expr pos:start="225:17" pos:end="225:26"><name pos:start="225:17" pos:end="225:19">pos</name> <operator pos:start="225:21" pos:end="225:22">+=</operator> <literal type="number" pos:start="225:24" pos:end="225:26">768</literal></expr>;</expr_stmt>

                <break pos:start="227:17" pos:end="227:22">break;</break>

            <case pos:start="229:13" pos:end="229:22">case <expr pos:start="229:18" pos:end="229:21"><literal type="number" pos:start="229:18" pos:end="229:21">0x84</literal></expr>:</case>

                <comment type="block" pos:start="231:17" pos:end="231:45">/* HD set contrast (alpha) */</comment>

                <if_stmt pos:start="233:17" pos:end="235:30"><if pos:start="233:17" pos:end="235:30">if <condition pos:start="233:20" pos:end="233:43">(<expr pos:start="233:21" pos:end="233:42"><operator pos:start="233:21" pos:end="233:21">(</operator><name pos:start="233:22" pos:end="233:29">buf_size</name> <operator pos:start="233:31" pos:end="233:31">-</operator> <name pos:start="233:33" pos:end="233:35">pos</name><operator pos:start="233:36" pos:end="233:36">)</operator> <operator pos:start="233:38" pos:end="233:38">&lt;</operator> <literal type="number" pos:start="233:40" pos:end="233:42">256</literal></expr>)</condition><block type="pseudo" pos:start="235:21" pos:end="235:30"><block_content pos:start="235:21" pos:end="235:30">

                    <goto pos:start="235:21" pos:end="235:30">goto <name pos:start="235:26" pos:end="235:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <for pos:start="237:17" pos:end="239:49">for <control pos:start="237:21" pos:end="237:41">(<init pos:start="237:22" pos:end="237:27"><expr pos:start="237:22" pos:end="237:26"><name pos:start="237:22" pos:end="237:22">i</name> <operator pos:start="237:24" pos:end="237:24">=</operator> <literal type="number" pos:start="237:26" pos:end="237:26">0</literal></expr>;</init> <condition pos:start="237:29" pos:end="237:36"><expr pos:start="237:29" pos:end="237:35"><name pos:start="237:29" pos:end="237:29">i</name> <operator pos:start="237:31" pos:end="237:31">&lt;</operator> <literal type="number" pos:start="237:33" pos:end="237:35">256</literal></expr>;</condition> <incr pos:start="237:38" pos:end="237:40"><expr pos:start="237:38" pos:end="237:40"><name pos:start="237:38" pos:end="237:38">i</name><operator pos:start="237:39" pos:end="237:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="239:21" pos:end="239:49"><block_content pos:start="239:21" pos:end="239:49">

                    <expr_stmt pos:start="239:21" pos:end="239:49"><expr pos:start="239:21" pos:end="239:48"><name pos:start="239:21" pos:end="239:28"><name pos:start="239:21" pos:end="239:25">alpha</name><index pos:start="239:26" pos:end="239:28">[<expr pos:start="239:27" pos:end="239:27"><name pos:start="239:27" pos:end="239:27">i</name></expr>]</index></name> <operator pos:start="239:30" pos:end="239:30">=</operator> <literal type="number" pos:start="239:32" pos:end="239:37">0xFF</literal> <operator pos:start="239:37" pos:end="239:37">-</operator> <name pos:start="239:39" pos:end="239:48"><name pos:start="239:39" pos:end="239:41">buf</name><index pos:start="239:42" pos:end="239:48">[<expr pos:start="239:43" pos:end="239:47"><name pos:start="239:43" pos:end="239:45">pos</name><operator pos:start="239:46" pos:end="239:46">+</operator><name pos:start="239:47" pos:end="239:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="241:17" pos:end="241:27"><expr pos:start="241:17" pos:end="241:26"><name pos:start="241:17" pos:end="241:19">pos</name> <operator pos:start="241:21" pos:end="241:22">+=</operator> <literal type="number" pos:start="241:24" pos:end="241:26">256</literal></expr>;</expr_stmt>

                <break pos:start="243:17" pos:end="243:22">break;</break>



            <case pos:start="247:13" pos:end="247:22">case <expr pos:start="247:18" pos:end="247:21"><literal type="number" pos:start="247:18" pos:end="247:21">0xff</literal></expr>:</case>

                <goto pos:start="249:17" pos:end="249:29">goto <name pos:start="249:22" pos:end="249:28">the_end</name>;</goto>

            <default pos:start="251:13" pos:end="251:20">default:</default>

                <expr_stmt pos:start="253:17" pos:end="253:77"><expr pos:start="253:17" pos:end="253:76"><call pos:start="253:17" pos:end="253:76"><name pos:start="253:17" pos:end="253:23">dprintf</name><argument_list pos:start="253:24" pos:end="253:76">(<argument pos:start="253:25" pos:end="253:28"><expr pos:start="253:25" pos:end="253:28"><name pos:start="253:25" pos:end="253:28">NULL</name></expr></argument>, <argument pos:start="253:31" pos:end="253:70"><expr pos:start="253:31" pos:end="253:70"><literal type="string" pos:start="253:31" pos:end="253:70">"unrecognised subpicture command 0x%x\n"</literal></expr></argument>, <argument pos:start="253:73" pos:end="253:75"><expr pos:start="253:73" pos:end="253:75"><name pos:start="253:73" pos:end="253:75">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="255:17" pos:end="255:29">goto <name pos:start="255:22" pos:end="255:28">the_end</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></while>

    <label pos:start="261:5" pos:end="261:12"><name pos:start="261:5" pos:end="261:11">the_end</name>:</label>

        <if_stmt pos:start="263:9" pos:end="363:9"><if pos:start="263:9" pos:end="363:9">if <condition pos:start="263:12" pos:end="263:25">(<expr pos:start="263:13" pos:end="263:24"><name pos:start="263:13" pos:end="263:19">offset1</name> <operator pos:start="263:21" pos:end="263:22">&gt;=</operator> <literal type="number" pos:start="263:24" pos:end="263:24">0</literal></expr>)</condition> <block pos:start="263:27" pos:end="363:9">{<block_content pos:start="265:13" pos:end="361:13">

            <decl_stmt pos:start="265:13" pos:end="265:21"><decl pos:start="265:13" pos:end="265:17"><type pos:start="265:13" pos:end="265:15"><name pos:start="265:13" pos:end="265:15">int</name></type> <name pos:start="265:17" pos:end="265:17">w</name></decl>, <decl pos:start="265:20" pos:end="265:20"><type ref="prev" pos:start="265:13" pos:end="265:15"/><name pos:start="265:20" pos:end="265:20">h</name></decl>;</decl_stmt>

            <decl_stmt pos:start="267:13" pos:end="267:28"><decl pos:start="267:13" pos:end="267:27"><type pos:start="267:13" pos:end="267:21"><name pos:start="267:13" pos:end="267:19">uint8_t</name> <modifier pos:start="267:21" pos:end="267:21">*</modifier></type><name pos:start="267:22" pos:end="267:27">bitmap</name></decl>;</decl_stmt>



            <comment type="block" pos:start="271:13" pos:end="271:35">/* decode the bitmap */</comment>

            <expr_stmt pos:start="273:13" pos:end="273:28"><expr pos:start="273:13" pos:end="273:27"><name pos:start="273:13" pos:end="273:13">w</name> <operator pos:start="273:15" pos:end="273:15">=</operator> <name pos:start="273:17" pos:end="273:18">x2</name> <operator pos:start="273:20" pos:end="273:20">-</operator> <name pos:start="273:22" pos:end="273:23">x1</name> <operator pos:start="273:25" pos:end="273:25">+</operator> <literal type="number" pos:start="273:27" pos:end="273:27">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="275:13" pos:end="277:22"><if pos:start="275:13" pos:end="277:22">if <condition pos:start="275:16" pos:end="275:22">(<expr pos:start="275:17" pos:end="275:21"><name pos:start="275:17" pos:end="275:17">w</name> <operator pos:start="275:19" pos:end="275:19">&lt;</operator> <literal type="number" pos:start="275:21" pos:end="275:21">0</literal></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:22"><block_content pos:start="277:17" pos:end="277:22">

                <expr_stmt pos:start="277:17" pos:end="277:22"><expr pos:start="277:17" pos:end="277:21"><name pos:start="277:17" pos:end="277:17">w</name> <operator pos:start="277:19" pos:end="277:19">=</operator> <literal type="number" pos:start="277:21" pos:end="277:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:24"><expr pos:start="279:13" pos:end="279:23"><name pos:start="279:13" pos:end="279:13">h</name> <operator pos:start="279:15" pos:end="279:15">=</operator> <name pos:start="279:17" pos:end="279:18">y2</name> <operator pos:start="279:20" pos:end="279:20">-</operator> <name pos:start="279:22" pos:end="279:23">y1</name></expr>;</expr_stmt>

            <if_stmt pos:start="281:13" pos:end="283:22"><if pos:start="281:13" pos:end="283:22">if <condition pos:start="281:16" pos:end="281:22">(<expr pos:start="281:17" pos:end="281:21"><name pos:start="281:17" pos:end="281:17">h</name> <operator pos:start="281:19" pos:end="281:19">&lt;</operator> <literal type="number" pos:start="281:21" pos:end="281:21">0</literal></expr>)</condition><block type="pseudo" pos:start="283:17" pos:end="283:22"><block_content pos:start="283:17" pos:end="283:22">

                <expr_stmt pos:start="283:17" pos:end="283:22"><expr pos:start="283:17" pos:end="283:21"><name pos:start="283:17" pos:end="283:17">h</name> <operator pos:start="283:19" pos:end="283:19">=</operator> <literal type="number" pos:start="283:21" pos:end="283:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="285:13" pos:end="361:13"><if pos:start="285:13" pos:end="361:13">if <condition pos:start="285:16" pos:end="285:31">(<expr pos:start="285:17" pos:end="285:30"><name pos:start="285:17" pos:end="285:17">w</name> <operator pos:start="285:19" pos:end="285:19">&gt;</operator> <literal type="number" pos:start="285:21" pos:end="285:21">0</literal> <operator pos:start="285:23" pos:end="285:24">&amp;&amp;</operator> <name pos:start="285:26" pos:end="285:26">h</name> <operator pos:start="285:28" pos:end="285:28">&gt;</operator> <literal type="number" pos:start="285:30" pos:end="285:30">0</literal></expr>)</condition> <block pos:start="285:33" pos:end="361:13">{<block_content pos:start="287:17" pos:end="359:59">

                <if_stmt pos:start="287:17" pos:end="303:17"><if pos:start="287:17" pos:end="303:17">if <condition pos:start="287:20" pos:end="287:46">(<expr pos:start="287:21" pos:end="287:45"><name pos:start="287:21" pos:end="287:37"><name pos:start="287:21" pos:end="287:30">sub_header</name><operator pos:start="287:31" pos:end="287:32">-&gt;</operator><name pos:start="287:33" pos:end="287:37">rects</name></name> <operator pos:start="287:39" pos:end="287:40">!=</operator> <name pos:start="287:42" pos:end="287:45">NULL</name></expr>)</condition> <block pos:start="287:48" pos:end="303:17">{<block_content pos:start="289:21" pos:end="301:46">

                    <for pos:start="289:21" pos:end="297:21">for <control pos:start="289:25" pos:end="289:63">(<init pos:start="289:26" pos:end="289:31"><expr pos:start="289:26" pos:end="289:30"><name pos:start="289:26" pos:end="289:26">i</name> <operator pos:start="289:28" pos:end="289:28">=</operator> <literal type="number" pos:start="289:30" pos:end="289:30">0</literal></expr>;</init> <condition pos:start="289:33" pos:end="289:58"><expr pos:start="289:33" pos:end="289:57"><name pos:start="289:33" pos:end="289:33">i</name> <operator pos:start="289:35" pos:end="289:35">&lt;</operator> <name pos:start="289:37" pos:end="289:57"><name pos:start="289:37" pos:end="289:46">sub_header</name><operator pos:start="289:47" pos:end="289:48">-&gt;</operator><name pos:start="289:49" pos:end="289:57">num_rects</name></name></expr>;</condition> <incr pos:start="289:60" pos:end="289:62"><expr pos:start="289:60" pos:end="289:62"><name pos:start="289:60" pos:end="289:60">i</name><operator pos:start="289:61" pos:end="289:62">++</operator></expr></incr>)</control> <block pos:start="289:65" pos:end="297:21">{<block_content pos:start="291:25" pos:end="295:56">

                        <expr_stmt pos:start="291:25" pos:end="291:70"><expr pos:start="291:25" pos:end="291:69"><call pos:start="291:25" pos:end="291:69"><name pos:start="291:25" pos:end="291:32">av_freep</name><argument_list pos:start="291:33" pos:end="291:69">(<argument pos:start="291:34" pos:end="291:68"><expr pos:start="291:34" pos:end="291:68"><operator pos:start="291:34" pos:end="291:34">&amp;</operator><name pos:start="291:35" pos:end="291:54"><name pos:start="291:35" pos:end="291:44">sub_header</name><operator pos:start="291:45" pos:end="291:46">-&gt;</operator><name pos:start="291:47" pos:end="291:51">rects</name><index pos:start="291:52" pos:end="291:54">[<expr pos:start="291:53" pos:end="291:53"><name pos:start="291:53" pos:end="291:53">i</name></expr>]</index></name><operator pos:start="291:55" pos:end="291:56">-&gt;</operator><name pos:start="291:57" pos:end="291:68"><name pos:start="291:57" pos:end="291:60">pict</name><operator pos:start="291:61" pos:end="291:61">.</operator><name pos:start="291:62" pos:end="291:65">data</name><index pos:start="291:66" pos:end="291:68">[<expr pos:start="291:67" pos:end="291:67"><literal type="number" pos:start="291:67" pos:end="291:67">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="293:25" pos:end="293:70"><expr pos:start="293:25" pos:end="293:69"><call pos:start="293:25" pos:end="293:69"><name pos:start="293:25" pos:end="293:32">av_freep</name><argument_list pos:start="293:33" pos:end="293:69">(<argument pos:start="293:34" pos:end="293:68"><expr pos:start="293:34" pos:end="293:68"><operator pos:start="293:34" pos:end="293:34">&amp;</operator><name pos:start="293:35" pos:end="293:54"><name pos:start="293:35" pos:end="293:44">sub_header</name><operator pos:start="293:45" pos:end="293:46">-&gt;</operator><name pos:start="293:47" pos:end="293:51">rects</name><index pos:start="293:52" pos:end="293:54">[<expr pos:start="293:53" pos:end="293:53"><name pos:start="293:53" pos:end="293:53">i</name></expr>]</index></name><operator pos:start="293:55" pos:end="293:56">-&gt;</operator><name pos:start="293:57" pos:end="293:68"><name pos:start="293:57" pos:end="293:60">pict</name><operator pos:start="293:61" pos:end="293:61">.</operator><name pos:start="293:62" pos:end="293:65">data</name><index pos:start="293:66" pos:end="293:68">[<expr pos:start="293:67" pos:end="293:67"><literal type="number" pos:start="293:67" pos:end="293:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="295:25" pos:end="295:56"><expr pos:start="295:25" pos:end="295:55"><call pos:start="295:25" pos:end="295:55"><name pos:start="295:25" pos:end="295:32">av_freep</name><argument_list pos:start="295:33" pos:end="295:55">(<argument pos:start="295:34" pos:end="295:54"><expr pos:start="295:34" pos:end="295:54"><operator pos:start="295:34" pos:end="295:34">&amp;</operator><name pos:start="295:35" pos:end="295:54"><name pos:start="295:35" pos:end="295:44">sub_header</name><operator pos:start="295:45" pos:end="295:46">-&gt;</operator><name pos:start="295:47" pos:end="295:51">rects</name><index pos:start="295:52" pos:end="295:54">[<expr pos:start="295:53" pos:end="295:53"><name pos:start="295:53" pos:end="295:53">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="299:21" pos:end="299:49"><expr pos:start="299:21" pos:end="299:48"><call pos:start="299:21" pos:end="299:48"><name pos:start="299:21" pos:end="299:28">av_freep</name><argument_list pos:start="299:29" pos:end="299:48">(<argument pos:start="299:30" pos:end="299:47"><expr pos:start="299:30" pos:end="299:47"><operator pos:start="299:30" pos:end="299:30">&amp;</operator><name pos:start="299:31" pos:end="299:47"><name pos:start="299:31" pos:end="299:40">sub_header</name><operator pos:start="299:41" pos:end="299:42">-&gt;</operator><name pos:start="299:43" pos:end="299:47">rects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="301:21" pos:end="301:46"><expr pos:start="301:21" pos:end="301:45"><name pos:start="301:21" pos:end="301:41"><name pos:start="301:21" pos:end="301:30">sub_header</name><operator pos:start="301:31" pos:end="301:32">-&gt;</operator><name pos:start="301:33" pos:end="301:41">num_rects</name></name> <operator pos:start="301:43" pos:end="301:43">=</operator> <literal type="number" pos:start="301:45" pos:end="301:45">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="307:17" pos:end="307:42"><expr pos:start="307:17" pos:end="307:41"><name pos:start="307:17" pos:end="307:22">bitmap</name> <operator pos:start="307:24" pos:end="307:24">=</operator> <call pos:start="307:26" pos:end="307:41"><name pos:start="307:26" pos:end="307:34">av_malloc</name><argument_list pos:start="307:35" pos:end="307:41">(<argument pos:start="307:36" pos:end="307:40"><expr pos:start="307:36" pos:end="307:40"><name pos:start="307:36" pos:end="307:36">w</name> <operator pos:start="307:38" pos:end="307:38">*</operator> <name pos:start="307:40" pos:end="307:40">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:75"><expr pos:start="309:17" pos:end="309:74"><name pos:start="309:17" pos:end="309:33"><name pos:start="309:17" pos:end="309:26">sub_header</name><operator pos:start="309:27" pos:end="309:28">-&gt;</operator><name pos:start="309:29" pos:end="309:33">rects</name></name> <operator pos:start="309:35" pos:end="309:35">=</operator> <call pos:start="309:37" pos:end="309:74"><name pos:start="309:37" pos:end="309:46">av_mallocz</name><argument_list pos:start="309:47" pos:end="309:74">(<argument pos:start="309:48" pos:end="309:73"><expr pos:start="309:48" pos:end="309:73"><sizeof pos:start="309:48" pos:end="309:73">sizeof<argument_list pos:start="309:54" pos:end="309:73">(<argument pos:start="309:55" pos:end="309:72"><expr pos:start="309:55" pos:end="309:72"><operator pos:start="309:55" pos:end="309:55">*</operator><name pos:start="309:56" pos:end="309:72"><name pos:start="309:56" pos:end="309:65">sub_header</name><operator pos:start="309:66" pos:end="309:67">-&gt;</operator><name pos:start="309:68" pos:end="309:72">rects</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="311:17" pos:end="311:74"><expr pos:start="311:17" pos:end="311:73"><name pos:start="311:17" pos:end="311:36"><name pos:start="311:17" pos:end="311:26">sub_header</name><operator pos:start="311:27" pos:end="311:28">-&gt;</operator><name pos:start="311:29" pos:end="311:33">rects</name><index pos:start="311:34" pos:end="311:36">[<expr pos:start="311:35" pos:end="311:35"><literal type="number" pos:start="311:35" pos:end="311:35">0</literal></expr>]</index></name> <operator pos:start="311:38" pos:end="311:38">=</operator> <call pos:start="311:40" pos:end="311:73"><name pos:start="311:40" pos:end="311:49">av_mallocz</name><argument_list pos:start="311:50" pos:end="311:73">(<argument pos:start="311:51" pos:end="311:72"><expr pos:start="311:51" pos:end="311:72"><sizeof pos:start="311:51" pos:end="311:72">sizeof<argument_list pos:start="311:57" pos:end="311:72">(<argument pos:start="311:58" pos:end="311:71"><expr pos:start="311:58" pos:end="311:71"><name pos:start="311:58" pos:end="311:71">AVSubtitleRect</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:42"><expr pos:start="313:17" pos:end="313:41"><name pos:start="313:17" pos:end="313:37"><name pos:start="313:17" pos:end="313:26">sub_header</name><operator pos:start="313:27" pos:end="313:28">-&gt;</operator><name pos:start="313:29" pos:end="313:37">num_rects</name></name> <operator pos:start="313:39" pos:end="313:39">=</operator> <literal type="number" pos:start="313:41" pos:end="313:41">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:60"><expr pos:start="315:17" pos:end="315:59"><name pos:start="315:17" pos:end="315:36"><name pos:start="315:17" pos:end="315:26">sub_header</name><operator pos:start="315:27" pos:end="315:28">-&gt;</operator><name pos:start="315:29" pos:end="315:33">rects</name><index pos:start="315:34" pos:end="315:36">[<expr pos:start="315:35" pos:end="315:35"><literal type="number" pos:start="315:35" pos:end="315:35">0</literal></expr>]</index></name><operator pos:start="315:37" pos:end="315:38">-&gt;</operator><name pos:start="315:39" pos:end="315:50"><name pos:start="315:39" pos:end="315:42">pict</name><operator pos:start="315:43" pos:end="315:43">.</operator><name pos:start="315:44" pos:end="315:47">data</name><index pos:start="315:48" pos:end="315:50">[<expr pos:start="315:49" pos:end="315:49"><literal type="number" pos:start="315:49" pos:end="315:49">0</literal></expr>]</index></name> <operator pos:start="315:52" pos:end="315:52">=</operator> <name pos:start="315:54" pos:end="315:59">bitmap</name></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="319:60"><expr pos:start="317:17" pos:end="319:59"><call pos:start="317:17" pos:end="319:59"><name pos:start="317:17" pos:end="317:26">decode_rle</name><argument_list pos:start="317:27" pos:end="319:59">(<argument pos:start="317:28" pos:end="317:33"><expr pos:start="317:28" pos:end="317:33"><name pos:start="317:28" pos:end="317:33">bitmap</name></expr></argument>, <argument pos:start="317:36" pos:end="317:40"><expr pos:start="317:36" pos:end="317:40"><name pos:start="317:36" pos:end="317:36">w</name> <operator pos:start="317:38" pos:end="317:38">*</operator> <literal type="number" pos:start="317:40" pos:end="317:40">2</literal></expr></argument>, <argument pos:start="317:43" pos:end="317:43"><expr pos:start="317:43" pos:end="317:43"><name pos:start="317:43" pos:end="317:43">w</name></expr></argument>, <argument pos:start="317:46" pos:end="317:56"><expr pos:start="317:46" pos:end="317:56"><operator pos:start="317:46" pos:end="317:46">(</operator><name pos:start="317:47" pos:end="317:47">h</name> <operator pos:start="317:49" pos:end="317:49">+</operator> <literal type="number" pos:start="317:51" pos:end="317:51">1</literal><operator pos:start="317:52" pos:end="317:52">)</operator> <operator pos:start="317:54" pos:end="317:54">/</operator> <literal type="number" pos:start="317:56" pos:end="317:56">2</literal></expr></argument>,

                           <argument pos:start="319:28" pos:end="319:30"><expr pos:start="319:28" pos:end="319:30"><name pos:start="319:28" pos:end="319:30">buf</name></expr></argument>, <argument pos:start="319:33" pos:end="319:39"><expr pos:start="319:33" pos:end="319:39"><name pos:start="319:33" pos:end="319:39">offset1</name></expr></argument>, <argument pos:start="319:42" pos:end="319:49"><expr pos:start="319:42" pos:end="319:49"><name pos:start="319:42" pos:end="319:49">buf_size</name></expr></argument>, <argument pos:start="319:52" pos:end="319:58"><expr pos:start="319:52" pos:end="319:58"><name pos:start="319:52" pos:end="319:58">is_8bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="321:17" pos:end="323:60"><expr pos:start="321:17" pos:end="323:59"><call pos:start="321:17" pos:end="323:59"><name pos:start="321:17" pos:end="321:26">decode_rle</name><argument_list pos:start="321:27" pos:end="323:59">(<argument pos:start="321:28" pos:end="321:37"><expr pos:start="321:28" pos:end="321:37"><name pos:start="321:28" pos:end="321:33">bitmap</name> <operator pos:start="321:35" pos:end="321:35">+</operator> <name pos:start="321:37" pos:end="321:37">w</name></expr></argument>, <argument pos:start="321:40" pos:end="321:44"><expr pos:start="321:40" pos:end="321:44"><name pos:start="321:40" pos:end="321:40">w</name> <operator pos:start="321:42" pos:end="321:42">*</operator> <literal type="number" pos:start="321:44" pos:end="321:44">2</literal></expr></argument>, <argument pos:start="321:47" pos:end="321:47"><expr pos:start="321:47" pos:end="321:47"><name pos:start="321:47" pos:end="321:47">w</name></expr></argument>, <argument pos:start="321:50" pos:end="321:54"><expr pos:start="321:50" pos:end="321:54"><name pos:start="321:50" pos:end="321:50">h</name> <operator pos:start="321:52" pos:end="321:52">/</operator> <literal type="number" pos:start="321:54" pos:end="321:54">2</literal></expr></argument>,

                           <argument pos:start="323:28" pos:end="323:30"><expr pos:start="323:28" pos:end="323:30"><name pos:start="323:28" pos:end="323:30">buf</name></expr></argument>, <argument pos:start="323:33" pos:end="323:39"><expr pos:start="323:33" pos:end="323:39"><name pos:start="323:33" pos:end="323:39">offset2</name></expr></argument>, <argument pos:start="323:42" pos:end="323:49"><expr pos:start="323:42" pos:end="323:49"><name pos:start="323:42" pos:end="323:49">buf_size</name></expr></argument>, <argument pos:start="323:52" pos:end="323:58"><expr pos:start="323:52" pos:end="323:58"><name pos:start="323:52" pos:end="323:58">is_8bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="325:17" pos:end="347:17"><if pos:start="325:17" pos:end="337:17">if <condition pos:start="325:20" pos:end="325:28">(<expr pos:start="325:21" pos:end="325:27"><name pos:start="325:21" pos:end="325:27">is_8bit</name></expr>)</condition> <block pos:start="325:30" pos:end="337:17">{<block_content pos:start="327:21" pos:end="335:106">

                    <if_stmt pos:start="327:21" pos:end="329:34"><if pos:start="327:21" pos:end="329:34">if <condition pos:start="327:24" pos:end="327:41">(<expr pos:start="327:25" pos:end="327:40"><name pos:start="327:25" pos:end="327:35">yuv_palette</name> <operator pos:start="327:37" pos:end="327:38">==</operator> <literal type="number" pos:start="327:40" pos:end="327:40">0</literal></expr>)</condition><block type="pseudo" pos:start="329:25" pos:end="329:34"><block_content pos:start="329:25" pos:end="329:34">

                        <goto pos:start="329:25" pos:end="329:34">goto <name pos:start="329:30" pos:end="329:33">fail</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="331:21" pos:end="331:76"><expr pos:start="331:21" pos:end="331:75"><name pos:start="331:21" pos:end="331:40"><name pos:start="331:21" pos:end="331:30">sub_header</name><operator pos:start="331:31" pos:end="331:32">-&gt;</operator><name pos:start="331:33" pos:end="331:37">rects</name><index pos:start="331:38" pos:end="331:40">[<expr pos:start="331:39" pos:end="331:39"><literal type="number" pos:start="331:39" pos:end="331:39">0</literal></expr>]</index></name><operator pos:start="331:41" pos:end="331:42">-&gt;</operator><name pos:start="331:43" pos:end="331:54"><name pos:start="331:43" pos:end="331:46">pict</name><operator pos:start="331:47" pos:end="331:47">.</operator><name pos:start="331:48" pos:end="331:51">data</name><index pos:start="331:52" pos:end="331:54">[<expr pos:start="331:53" pos:end="331:53"><literal type="number" pos:start="331:53" pos:end="331:53">1</literal></expr>]</index></name> <operator pos:start="331:56" pos:end="331:56">=</operator> <call pos:start="331:58" pos:end="331:75"><name pos:start="331:58" pos:end="331:66">av_malloc</name><argument_list pos:start="331:67" pos:end="331:75">(<argument pos:start="331:68" pos:end="331:74"><expr pos:start="331:68" pos:end="331:74"><literal type="number" pos:start="331:68" pos:end="331:70">256</literal> <operator pos:start="331:72" pos:end="331:72">*</operator> <literal type="number" pos:start="331:74" pos:end="331:74">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="333:21" pos:end="333:58"><expr pos:start="333:21" pos:end="333:57"><name pos:start="333:21" pos:end="333:40"><name pos:start="333:21" pos:end="333:30">sub_header</name><operator pos:start="333:31" pos:end="333:32">-&gt;</operator><name pos:start="333:33" pos:end="333:37">rects</name><index pos:start="333:38" pos:end="333:40">[<expr pos:start="333:39" pos:end="333:39"><literal type="number" pos:start="333:39" pos:end="333:39">0</literal></expr>]</index></name><operator pos:start="333:41" pos:end="333:42">-&gt;</operator><name pos:start="333:43" pos:end="333:51">nb_colors</name> <operator pos:start="333:53" pos:end="333:53">=</operator> <literal type="number" pos:start="333:55" pos:end="333:57">256</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="335:21" pos:end="335:106"><expr pos:start="335:21" pos:end="335:105"><call pos:start="335:21" pos:end="335:105"><name pos:start="335:21" pos:end="335:33">yuv_a_to_rgba</name><argument_list pos:start="335:34" pos:end="335:105">(<argument pos:start="335:35" pos:end="335:45"><expr pos:start="335:35" pos:end="335:45"><name pos:start="335:35" pos:end="335:45">yuv_palette</name></expr></argument>, <argument pos:start="335:48" pos:end="335:52"><expr pos:start="335:48" pos:end="335:52"><name pos:start="335:48" pos:end="335:52">alpha</name></expr></argument>, <argument pos:start="335:55" pos:end="335:99"><expr pos:start="335:55" pos:end="335:99"><operator pos:start="335:55" pos:end="335:55">(</operator><name pos:start="335:56" pos:end="335:63">uint32_t</name><operator pos:start="335:64" pos:end="335:64">*</operator><operator pos:start="335:65" pos:end="335:65">)</operator><name pos:start="335:66" pos:end="335:85"><name pos:start="335:66" pos:end="335:75">sub_header</name><operator pos:start="335:76" pos:end="335:77">-&gt;</operator><name pos:start="335:78" pos:end="335:82">rects</name><index pos:start="335:83" pos:end="335:85">[<expr pos:start="335:84" pos:end="335:84"><literal type="number" pos:start="335:84" pos:end="335:84">0</literal></expr>]</index></name><operator pos:start="335:86" pos:end="335:87">-&gt;</operator><name pos:start="335:88" pos:end="335:99"><name pos:start="335:88" pos:end="335:91">pict</name><operator pos:start="335:92" pos:end="335:92">.</operator><name pos:start="335:93" pos:end="335:96">data</name><index pos:start="335:97" pos:end="335:99">[<expr pos:start="335:98" pos:end="335:98"><literal type="number" pos:start="335:98" pos:end="335:98">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="335:102" pos:end="335:104"><expr pos:start="335:102" pos:end="335:104"><literal type="number" pos:start="335:102" pos:end="335:104">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="337:19" pos:end="347:17">else <block pos:start="337:24" pos:end="347:17">{<block_content pos:start="339:21" pos:end="345:61">

                    <expr_stmt pos:start="339:21" pos:end="339:74"><expr pos:start="339:21" pos:end="339:73"><name pos:start="339:21" pos:end="339:40"><name pos:start="339:21" pos:end="339:30">sub_header</name><operator pos:start="339:31" pos:end="339:32">-&gt;</operator><name pos:start="339:33" pos:end="339:37">rects</name><index pos:start="339:38" pos:end="339:40">[<expr pos:start="339:39" pos:end="339:39"><literal type="number" pos:start="339:39" pos:end="339:39">0</literal></expr>]</index></name><operator pos:start="339:41" pos:end="339:42">-&gt;</operator><name pos:start="339:43" pos:end="339:54"><name pos:start="339:43" pos:end="339:46">pict</name><operator pos:start="339:47" pos:end="339:47">.</operator><name pos:start="339:48" pos:end="339:51">data</name><index pos:start="339:52" pos:end="339:54">[<expr pos:start="339:53" pos:end="339:53"><literal type="number" pos:start="339:53" pos:end="339:53">1</literal></expr>]</index></name> <operator pos:start="339:56" pos:end="339:56">=</operator> <call pos:start="339:58" pos:end="339:73"><name pos:start="339:58" pos:end="339:66">av_malloc</name><argument_list pos:start="339:67" pos:end="339:73">(<argument pos:start="339:68" pos:end="339:72"><expr pos:start="339:68" pos:end="339:72"><literal type="number" pos:start="339:68" pos:end="339:68">4</literal> <operator pos:start="339:70" pos:end="339:70">*</operator> <literal type="number" pos:start="339:72" pos:end="339:72">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="341:21" pos:end="341:56"><expr pos:start="341:21" pos:end="341:55"><name pos:start="341:21" pos:end="341:40"><name pos:start="341:21" pos:end="341:30">sub_header</name><operator pos:start="341:31" pos:end="341:32">-&gt;</operator><name pos:start="341:33" pos:end="341:37">rects</name><index pos:start="341:38" pos:end="341:40">[<expr pos:start="341:39" pos:end="341:39"><literal type="number" pos:start="341:39" pos:end="341:39">0</literal></expr>]</index></name><operator pos:start="341:41" pos:end="341:42">-&gt;</operator><name pos:start="341:43" pos:end="341:51">nb_colors</name> <operator pos:start="341:53" pos:end="341:53">=</operator> <literal type="number" pos:start="341:55" pos:end="341:55">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="343:21" pos:end="345:61"><expr pos:start="343:21" pos:end="345:60"><call pos:start="343:21" pos:end="345:60"><name pos:start="343:21" pos:end="343:33">guess_palette</name><argument_list pos:start="343:34" pos:end="345:60">(<argument pos:start="343:35" pos:end="343:79"><expr pos:start="343:35" pos:end="343:79"><operator pos:start="343:35" pos:end="343:35">(</operator><name pos:start="343:36" pos:end="343:43">uint32_t</name><operator pos:start="343:44" pos:end="343:44">*</operator><operator pos:start="343:45" pos:end="343:45">)</operator><name pos:start="343:46" pos:end="343:65"><name pos:start="343:46" pos:end="343:55">sub_header</name><operator pos:start="343:56" pos:end="343:57">-&gt;</operator><name pos:start="343:58" pos:end="343:62">rects</name><index pos:start="343:63" pos:end="343:65">[<expr pos:start="343:64" pos:end="343:64"><literal type="number" pos:start="343:64" pos:end="343:64">0</literal></expr>]</index></name><operator pos:start="343:66" pos:end="343:67">-&gt;</operator><name pos:start="343:68" pos:end="343:79"><name pos:start="343:68" pos:end="343:71">pict</name><operator pos:start="343:72" pos:end="343:72">.</operator><name pos:start="343:73" pos:end="343:76">data</name><index pos:start="343:77" pos:end="343:79">[<expr pos:start="343:78" pos:end="343:78"><literal type="number" pos:start="343:78" pos:end="343:78">1</literal></expr>]</index></name></expr></argument>,

                                  <argument pos:start="345:35" pos:end="345:42"><expr pos:start="345:35" pos:end="345:42"><name pos:start="345:35" pos:end="345:42">colormap</name></expr></argument>, <argument pos:start="345:45" pos:end="345:49"><expr pos:start="345:45" pos:end="345:49"><name pos:start="345:45" pos:end="345:49">alpha</name></expr></argument>, <argument pos:start="345:52" pos:end="345:59"><expr pos:start="345:52" pos:end="345:59"><literal type="number" pos:start="345:52" pos:end="345:59">0xffff00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="349:17" pos:end="349:45"><expr pos:start="349:17" pos:end="349:44"><name pos:start="349:17" pos:end="349:36"><name pos:start="349:17" pos:end="349:26">sub_header</name><operator pos:start="349:27" pos:end="349:28">-&gt;</operator><name pos:start="349:29" pos:end="349:33">rects</name><index pos:start="349:34" pos:end="349:36">[<expr pos:start="349:35" pos:end="349:35"><literal type="number" pos:start="349:35" pos:end="349:35">0</literal></expr>]</index></name><operator pos:start="349:37" pos:end="349:38">-&gt;</operator><name pos:start="349:39" pos:end="349:39">x</name> <operator pos:start="349:41" pos:end="349:41">=</operator> <name pos:start="349:43" pos:end="349:44">x1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="351:17" pos:end="351:45"><expr pos:start="351:17" pos:end="351:44"><name pos:start="351:17" pos:end="351:36"><name pos:start="351:17" pos:end="351:26">sub_header</name><operator pos:start="351:27" pos:end="351:28">-&gt;</operator><name pos:start="351:29" pos:end="351:33">rects</name><index pos:start="351:34" pos:end="351:36">[<expr pos:start="351:35" pos:end="351:35"><literal type="number" pos:start="351:35" pos:end="351:35">0</literal></expr>]</index></name><operator pos:start="351:37" pos:end="351:38">-&gt;</operator><name pos:start="351:39" pos:end="351:39">y</name> <operator pos:start="351:41" pos:end="351:41">=</operator> <name pos:start="351:43" pos:end="351:44">y1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="353:17" pos:end="353:44"><expr pos:start="353:17" pos:end="353:43"><name pos:start="353:17" pos:end="353:36"><name pos:start="353:17" pos:end="353:26">sub_header</name><operator pos:start="353:27" pos:end="353:28">-&gt;</operator><name pos:start="353:29" pos:end="353:33">rects</name><index pos:start="353:34" pos:end="353:36">[<expr pos:start="353:35" pos:end="353:35"><literal type="number" pos:start="353:35" pos:end="353:35">0</literal></expr>]</index></name><operator pos:start="353:37" pos:end="353:38">-&gt;</operator><name pos:start="353:39" pos:end="353:39">w</name> <operator pos:start="353:41" pos:end="353:41">=</operator> <name pos:start="353:43" pos:end="353:43">w</name></expr>;</expr_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:44"><expr pos:start="355:17" pos:end="355:43"><name pos:start="355:17" pos:end="355:36"><name pos:start="355:17" pos:end="355:26">sub_header</name><operator pos:start="355:27" pos:end="355:28">-&gt;</operator><name pos:start="355:29" pos:end="355:33">rects</name><index pos:start="355:34" pos:end="355:36">[<expr pos:start="355:35" pos:end="355:35"><literal type="number" pos:start="355:35" pos:end="355:35">0</literal></expr>]</index></name><operator pos:start="355:37" pos:end="355:38">-&gt;</operator><name pos:start="355:39" pos:end="355:39">h</name> <operator pos:start="355:41" pos:end="355:41">=</operator> <name pos:start="355:43" pos:end="355:43">h</name></expr>;</expr_stmt>

                <expr_stmt pos:start="357:17" pos:end="357:61"><expr pos:start="357:17" pos:end="357:60"><name pos:start="357:17" pos:end="357:36"><name pos:start="357:17" pos:end="357:26">sub_header</name><operator pos:start="357:27" pos:end="357:28">-&gt;</operator><name pos:start="357:29" pos:end="357:33">rects</name><index pos:start="357:34" pos:end="357:36">[<expr pos:start="357:35" pos:end="357:35"><literal type="number" pos:start="357:35" pos:end="357:35">0</literal></expr>]</index></name><operator pos:start="357:37" pos:end="357:38">-&gt;</operator><name pos:start="357:39" pos:end="357:42">type</name> <operator pos:start="357:44" pos:end="357:44">=</operator> <name pos:start="357:46" pos:end="357:60">SUBTITLE_BITMAP</name></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:59"><expr pos:start="359:17" pos:end="359:58"><name pos:start="359:17" pos:end="359:36"><name pos:start="359:17" pos:end="359:26">sub_header</name><operator pos:start="359:27" pos:end="359:28">-&gt;</operator><name pos:start="359:29" pos:end="359:33">rects</name><index pos:start="359:34" pos:end="359:36">[<expr pos:start="359:35" pos:end="359:35"><literal type="number" pos:start="359:35" pos:end="359:35">0</literal></expr>]</index></name><operator pos:start="359:37" pos:end="359:38">-&gt;</operator><name pos:start="359:39" pos:end="359:54"><name pos:start="359:39" pos:end="359:42">pict</name><operator pos:start="359:43" pos:end="359:43">.</operator><name pos:start="359:44" pos:end="359:51">linesize</name><index pos:start="359:52" pos:end="359:54">[<expr pos:start="359:53" pos:end="359:53"><literal type="number" pos:start="359:53" pos:end="359:53">0</literal></expr>]</index></name> <operator pos:start="359:56" pos:end="359:56">=</operator> <name pos:start="359:58" pos:end="359:58">w</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="365:9" pos:end="367:18"><if pos:start="365:9" pos:end="367:18">if <condition pos:start="365:12" pos:end="365:36">(<expr pos:start="365:13" pos:end="365:35"><name pos:start="365:13" pos:end="365:24">next_cmd_pos</name> <operator pos:start="365:26" pos:end="365:27">==</operator> <name pos:start="365:29" pos:end="365:35">cmd_pos</name></expr>)</condition><block type="pseudo" pos:start="367:13" pos:end="367:18"><block_content pos:start="367:13" pos:end="367:18">

            <break pos:start="367:13" pos:end="367:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:31"><expr pos:start="369:9" pos:end="369:30"><name pos:start="369:9" pos:end="369:15">cmd_pos</name> <operator pos:start="369:17" pos:end="369:17">=</operator> <name pos:start="369:19" pos:end="369:30">next_cmd_pos</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="373:5" pos:end="375:23"><if pos:start="373:5" pos:end="375:23">if <condition pos:start="373:8" pos:end="373:34">(<expr pos:start="373:9" pos:end="373:33"><name pos:start="373:9" pos:end="373:29"><name pos:start="373:9" pos:end="373:18">sub_header</name><operator pos:start="373:19" pos:end="373:20">-&gt;</operator><name pos:start="373:21" pos:end="373:29">num_rects</name></name> <operator pos:start="373:31" pos:end="373:31">&gt;</operator> <literal type="number" pos:start="373:33" pos:end="373:33">0</literal></expr>)</condition><block type="pseudo" pos:start="375:9" pos:end="375:23"><block_content pos:start="375:9" pos:end="375:23">

        <return pos:start="375:9" pos:end="375:23">return <expr pos:start="375:16" pos:end="375:22"><name pos:start="375:16" pos:end="375:22">is_menu</name></expr>;</return></block_content></block></if></if_stmt>

 <label pos:start="377:2" pos:end="377:6"><name pos:start="377:2" pos:end="377:5">fail</name>:</label>

    <if_stmt pos:start="379:5" pos:end="395:5"><if pos:start="379:5" pos:end="395:5">if <condition pos:start="379:8" pos:end="379:34">(<expr pos:start="379:9" pos:end="379:33"><name pos:start="379:9" pos:end="379:25"><name pos:start="379:9" pos:end="379:18">sub_header</name><operator pos:start="379:19" pos:end="379:20">-&gt;</operator><name pos:start="379:21" pos:end="379:25">rects</name></name> <operator pos:start="379:27" pos:end="379:28">!=</operator> <name pos:start="379:30" pos:end="379:33">NULL</name></expr>)</condition> <block pos:start="379:36" pos:end="395:5">{<block_content pos:start="381:9" pos:end="393:34">

        <for pos:start="381:9" pos:end="389:9">for <control pos:start="381:13" pos:end="381:51">(<init pos:start="381:14" pos:end="381:19"><expr pos:start="381:14" pos:end="381:18"><name pos:start="381:14" pos:end="381:14">i</name> <operator pos:start="381:16" pos:end="381:16">=</operator> <literal type="number" pos:start="381:18" pos:end="381:18">0</literal></expr>;</init> <condition pos:start="381:21" pos:end="381:46"><expr pos:start="381:21" pos:end="381:45"><name pos:start="381:21" pos:end="381:21">i</name> <operator pos:start="381:23" pos:end="381:23">&lt;</operator> <name pos:start="381:25" pos:end="381:45"><name pos:start="381:25" pos:end="381:34">sub_header</name><operator pos:start="381:35" pos:end="381:36">-&gt;</operator><name pos:start="381:37" pos:end="381:45">num_rects</name></name></expr>;</condition> <incr pos:start="381:48" pos:end="381:50"><expr pos:start="381:48" pos:end="381:50"><name pos:start="381:48" pos:end="381:48">i</name><operator pos:start="381:49" pos:end="381:50">++</operator></expr></incr>)</control> <block pos:start="381:53" pos:end="389:9">{<block_content pos:start="383:13" pos:end="387:44">

            <expr_stmt pos:start="383:13" pos:end="383:58"><expr pos:start="383:13" pos:end="383:57"><call pos:start="383:13" pos:end="383:57"><name pos:start="383:13" pos:end="383:20">av_freep</name><argument_list pos:start="383:21" pos:end="383:57">(<argument pos:start="383:22" pos:end="383:56"><expr pos:start="383:22" pos:end="383:56"><operator pos:start="383:22" pos:end="383:22">&amp;</operator><name pos:start="383:23" pos:end="383:42"><name pos:start="383:23" pos:end="383:32">sub_header</name><operator pos:start="383:33" pos:end="383:34">-&gt;</operator><name pos:start="383:35" pos:end="383:39">rects</name><index pos:start="383:40" pos:end="383:42">[<expr pos:start="383:41" pos:end="383:41"><name pos:start="383:41" pos:end="383:41">i</name></expr>]</index></name><operator pos:start="383:43" pos:end="383:44">-&gt;</operator><name pos:start="383:45" pos:end="383:56"><name pos:start="383:45" pos:end="383:48">pict</name><operator pos:start="383:49" pos:end="383:49">.</operator><name pos:start="383:50" pos:end="383:53">data</name><index pos:start="383:54" pos:end="383:56">[<expr pos:start="383:55" pos:end="383:55"><literal type="number" pos:start="383:55" pos:end="383:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="385:13" pos:end="385:58"><expr pos:start="385:13" pos:end="385:57"><call pos:start="385:13" pos:end="385:57"><name pos:start="385:13" pos:end="385:20">av_freep</name><argument_list pos:start="385:21" pos:end="385:57">(<argument pos:start="385:22" pos:end="385:56"><expr pos:start="385:22" pos:end="385:56"><operator pos:start="385:22" pos:end="385:22">&amp;</operator><name pos:start="385:23" pos:end="385:42"><name pos:start="385:23" pos:end="385:32">sub_header</name><operator pos:start="385:33" pos:end="385:34">-&gt;</operator><name pos:start="385:35" pos:end="385:39">rects</name><index pos:start="385:40" pos:end="385:42">[<expr pos:start="385:41" pos:end="385:41"><name pos:start="385:41" pos:end="385:41">i</name></expr>]</index></name><operator pos:start="385:43" pos:end="385:44">-&gt;</operator><name pos:start="385:45" pos:end="385:56"><name pos:start="385:45" pos:end="385:48">pict</name><operator pos:start="385:49" pos:end="385:49">.</operator><name pos:start="385:50" pos:end="385:53">data</name><index pos:start="385:54" pos:end="385:56">[<expr pos:start="385:55" pos:end="385:55"><literal type="number" pos:start="385:55" pos:end="385:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:44"><expr pos:start="387:13" pos:end="387:43"><call pos:start="387:13" pos:end="387:43"><name pos:start="387:13" pos:end="387:20">av_freep</name><argument_list pos:start="387:21" pos:end="387:43">(<argument pos:start="387:22" pos:end="387:42"><expr pos:start="387:22" pos:end="387:42"><operator pos:start="387:22" pos:end="387:22">&amp;</operator><name pos:start="387:23" pos:end="387:42"><name pos:start="387:23" pos:end="387:32">sub_header</name><operator pos:start="387:33" pos:end="387:34">-&gt;</operator><name pos:start="387:35" pos:end="387:39">rects</name><index pos:start="387:40" pos:end="387:42">[<expr pos:start="387:41" pos:end="387:41"><name pos:start="387:41" pos:end="387:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="391:9" pos:end="391:37"><expr pos:start="391:9" pos:end="391:36"><call pos:start="391:9" pos:end="391:36"><name pos:start="391:9" pos:end="391:16">av_freep</name><argument_list pos:start="391:17" pos:end="391:36">(<argument pos:start="391:18" pos:end="391:35"><expr pos:start="391:18" pos:end="391:35"><operator pos:start="391:18" pos:end="391:18">&amp;</operator><name pos:start="391:19" pos:end="391:35"><name pos:start="391:19" pos:end="391:28">sub_header</name><operator pos:start="391:29" pos:end="391:30">-&gt;</operator><name pos:start="391:31" pos:end="391:35">rects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:34"><expr pos:start="393:9" pos:end="393:33"><name pos:start="393:9" pos:end="393:29"><name pos:start="393:9" pos:end="393:18">sub_header</name><operator pos:start="393:19" pos:end="393:20">-&gt;</operator><name pos:start="393:21" pos:end="393:29">num_rects</name></name> <operator pos:start="393:31" pos:end="393:31">=</operator> <literal type="number" pos:start="393:33" pos:end="393:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="397:5" pos:end="397:14">return <expr pos:start="397:12" pos:end="397:13"><operator pos:start="397:12" pos:end="397:12">-</operator><literal type="number" pos:start="397:13" pos:end="397:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
