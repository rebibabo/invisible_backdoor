<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6538.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">thread_pool_cancel</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:47">BlockDriverAIOCB</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">acb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:42">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">ThreadPoolElement</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:27">elem</name> <init pos:start="5:29" pos:end="5:54">= <expr pos:start="5:31" pos:end="5:54"><operator pos:start="5:31" pos:end="5:31">(</operator><name pos:start="5:32" pos:end="5:48">ThreadPoolElement</name> <operator pos:start="5:50" pos:end="5:50">*</operator><operator pos:start="5:51" pos:end="5:51">)</operator><name pos:start="5:52" pos:end="5:54">acb</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">ThreadPool</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">pool</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:27">elem</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:33">pool</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:56"><expr pos:start="11:5" pos:end="11:55"><call pos:start="11:5" pos:end="11:55"><name pos:start="11:5" pos:end="11:28">trace_thread_pool_cancel</name><argument_list pos:start="11:29" pos:end="11:55">(<argument pos:start="11:30" pos:end="11:33"><expr pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:33">elem</name></expr></argument>, <argument pos:start="11:36" pos:end="11:54"><expr pos:start="11:36" pos:end="11:54"><name pos:start="11:36" pos:end="11:54"><name pos:start="11:36" pos:end="11:39">elem</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:47">common</name><operator pos:start="11:48" pos:end="11:48">.</operator><name pos:start="11:49" pos:end="11:54">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><call pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:19">qemu_mutex_lock</name><argument_list pos:start="15:20" pos:end="15:32">(<argument pos:start="15:21" pos:end="15:31"><expr pos:start="15:21" pos:end="15:31"><operator pos:start="15:21" pos:end="15:21">&amp;</operator><name pos:start="15:22" pos:end="15:31"><name pos:start="15:22" pos:end="15:25">pool</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="49:5"><if pos:start="17:5" pos:end="37:5">if <condition pos:start="17:8" pos:end="29:47">(<expr pos:start="17:9" pos:end="29:46"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:12">elem</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:19">state</name></name> <operator pos:start="17:21" pos:end="17:22">==</operator> <name pos:start="17:24" pos:end="17:36">THREAD_QUEUED</name> <operator pos:start="17:38" pos:end="17:39">&amp;&amp;</operator>

        <comment type="block" pos:start="19:9" pos:end="27:11">/* No thread has yet started working on elem. we can try to "steal"

         * the item from the worker if we can get a signal from the

         * semaphore.  Because this is non-blocking, we can do it with

         * the lock taken and ensure that elem will remain THREAD_QUEUED.

         */</comment>

        <call pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:26">qemu_sem_timedwait</name><argument_list pos:start="29:27" pos:end="29:41">(<argument pos:start="29:28" pos:end="29:37"><expr pos:start="29:28" pos:end="29:37"><operator pos:start="29:28" pos:end="29:28">&amp;</operator><name pos:start="29:29" pos:end="29:37"><name pos:start="29:29" pos:end="29:32">pool</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:37">sem</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:40"><expr pos:start="29:40" pos:end="29:40"><literal type="number" pos:start="29:40" pos:end="29:40">0</literal></expr></argument>)</argument_list></call> <operator pos:start="29:43" pos:end="29:44">==</operator> <literal type="number" pos:start="29:46" pos:end="29:46">0</literal></expr>)</condition> <block pos:start="29:49" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:44">

        <expr_stmt pos:start="31:9" pos:end="31:55"><expr pos:start="31:9" pos:end="31:54"><call pos:start="31:9" pos:end="31:54"><name pos:start="31:9" pos:end="31:21">QTAILQ_REMOVE</name><argument_list pos:start="31:22" pos:end="31:54">(<argument pos:start="31:23" pos:end="31:41"><expr pos:start="31:23" pos:end="31:41"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:41"><name pos:start="31:24" pos:end="31:27">pool</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:41">request_list</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:47"><expr pos:start="31:44" pos:end="31:47"><name pos:start="31:44" pos:end="31:47">elem</name></expr></argument>, <argument pos:start="31:50" pos:end="31:53"><expr pos:start="31:50" pos:end="31:53"><name pos:start="31:50" pos:end="31:53">reqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:12">elem</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:19">state</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:37">THREAD_CANCELED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><call pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:26">event_notifier_set</name><argument_list pos:start="35:27" pos:end="35:43">(<argument pos:start="35:28" pos:end="35:42"><expr pos:start="35:28" pos:end="35:42"><operator pos:start="35:28" pos:end="35:28">&amp;</operator><name pos:start="35:29" pos:end="35:42"><name pos:start="35:29" pos:end="35:32">pool</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:42">notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="49:5">else <block pos:start="37:12" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:38">

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:12">pool</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:35">pending_cancellations</name></name><operator pos:start="39:36" pos:end="39:37">++</operator></expr>;</expr_stmt>

        <while pos:start="41:9" pos:end="45:9">while <condition pos:start="41:15" pos:end="41:76">(<expr pos:start="41:16" pos:end="41:75"><name pos:start="41:16" pos:end="41:26"><name pos:start="41:16" pos:end="41:19">elem</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:26">state</name></name> <operator pos:start="41:28" pos:end="41:29">!=</operator> <name pos:start="41:31" pos:end="41:45">THREAD_CANCELED</name> <operator pos:start="41:47" pos:end="41:48">&amp;&amp;</operator> <name pos:start="41:50" pos:end="41:60"><name pos:start="41:50" pos:end="41:53">elem</name><operator pos:start="41:54" pos:end="41:55">-&gt;</operator><name pos:start="41:56" pos:end="41:60">state</name></name> <operator pos:start="41:62" pos:end="41:63">!=</operator> <name pos:start="41:65" pos:end="41:75">THREAD_DONE</name></expr>)</condition> <block pos:start="41:78" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:61">

            <expr_stmt pos:start="43:13" pos:end="43:61"><expr pos:start="43:13" pos:end="43:60"><call pos:start="43:13" pos:end="43:60"><name pos:start="43:13" pos:end="43:26">qemu_cond_wait</name><argument_list pos:start="43:27" pos:end="43:60">(<argument pos:start="43:28" pos:end="43:46"><expr pos:start="43:28" pos:end="43:46"><operator pos:start="43:28" pos:end="43:28">&amp;</operator><name pos:start="43:29" pos:end="43:46"><name pos:start="43:29" pos:end="43:32">pool</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:46">check_cancel</name></name></expr></argument>, <argument pos:start="43:49" pos:end="43:59"><expr pos:start="43:49" pos:end="43:59"><operator pos:start="43:49" pos:end="43:49">&amp;</operator><name pos:start="43:50" pos:end="43:59"><name pos:start="43:50" pos:end="43:53">pool</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:59">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:12">pool</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:35">pending_cancellations</name></name><operator pos:start="47:36" pos:end="47:37">--</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:35"><expr pos:start="51:5" pos:end="51:34"><call pos:start="51:5" pos:end="51:34"><name pos:start="51:5" pos:end="51:21">qemu_mutex_unlock</name><argument_list pos:start="51:22" pos:end="51:34">(<argument pos:start="51:23" pos:end="51:33"><expr pos:start="51:23" pos:end="51:33"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:33"><name pos:start="51:24" pos:end="51:27">pool</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><call pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:24">event_notifier_ready</name><argument_list pos:start="53:25" pos:end="53:41">(<argument pos:start="53:26" pos:end="53:40"><expr pos:start="53:26" pos:end="53:40"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:40"><name pos:start="53:27" pos:end="53:30">pool</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:40">notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
