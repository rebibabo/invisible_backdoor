<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9648.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">create_shared_memory_BAR</name><parameter_list pos:start="1:36" pos:end="3:49">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:48">IVShmemState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:59"><decl pos:start="1:54" pos:end="1:59"><type pos:start="1:54" pos:end="1:59"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:59">fd</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:68">uint8_t</name></type> <name pos:start="1:70" pos:end="1:73">attr</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:48"><decl pos:start="3:37" pos:end="3:48"><type pos:start="3:37" pos:end="3:48"><name pos:start="3:37" pos:end="3:41">Error</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier><modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:13">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type> <name pos:start="7:12" pos:end="7:14">ptr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:76"><expr pos:start="11:5" pos:end="11:75"><name pos:start="11:5" pos:end="11:7">ptr</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:75"><name pos:start="11:11" pos:end="11:14">mmap</name><argument_list pos:start="11:15" pos:end="11:75">(<argument pos:start="11:16" pos:end="11:16"><expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr></argument>, <argument pos:start="11:19" pos:end="11:33"><expr pos:start="11:19" pos:end="11:33"><name pos:start="11:19" pos:end="11:33"><name pos:start="11:19" pos:end="11:19">s</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:33">ivshmem_size</name></name></expr></argument>, <argument pos:start="11:36" pos:end="11:55"><expr pos:start="11:36" pos:end="11:55"><name pos:start="11:36" pos:end="11:44">PROT_READ</name><operator pos:start="11:45" pos:end="11:45">|</operator><name pos:start="11:46" pos:end="11:55">PROT_WRITE</name></expr></argument>, <argument pos:start="11:58" pos:end="11:67"><expr pos:start="11:58" pos:end="11:67"><name pos:start="11:58" pos:end="11:67">MAP_SHARED</name></expr></argument>, <argument pos:start="11:70" pos:end="11:71"><expr pos:start="11:70" pos:end="11:71"><name pos:start="11:70" pos:end="11:71">fd</name></expr></argument>, <argument pos:start="11:74" pos:end="11:74"><expr pos:start="11:74" pos:end="11:74"><literal type="number" pos:start="11:74" pos:end="11:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:11">ptr</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <name pos:start="13:16" pos:end="13:25">MAP_FAILED</name></expr>)</condition> <block pos:start="13:28" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:70"><expr pos:start="15:9" pos:end="15:69"><call pos:start="15:9" pos:end="15:69"><name pos:start="15:9" pos:end="15:24">error_setg_errno</name><argument_list pos:start="15:25" pos:end="15:69">(<argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">errp</name></expr></argument>, <argument pos:start="15:32" pos:end="15:36"><expr pos:start="15:32" pos:end="15:36"><name pos:start="15:32" pos:end="15:36">errno</name></expr></argument>, <argument pos:start="15:39" pos:end="15:68"><expr pos:start="15:39" pos:end="15:68"><literal type="string" pos:start="15:39" pos:end="15:68">"Failed to mmap shared memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:13">shm_fd</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:18">fd</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:53"><expr pos:start="27:5" pos:end="29:52"><call pos:start="27:5" pos:end="29:52"><name pos:start="27:5" pos:end="27:30">memory_region_init_ram_ptr</name><argument_list pos:start="27:31" pos:end="29:52">(<argument pos:start="27:32" pos:end="27:42"><expr pos:start="27:32" pos:end="27:42"><operator pos:start="27:32" pos:end="27:32">&amp;</operator><name pos:start="27:33" pos:end="27:42"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:42">ivshmem</name></name></expr></argument>, <argument pos:start="27:45" pos:end="27:53"><expr pos:start="27:45" pos:end="27:53"><call pos:start="27:45" pos:end="27:53"><name pos:start="27:45" pos:end="27:50">OBJECT</name><argument_list pos:start="27:51" pos:end="27:53">(<argument pos:start="27:52" pos:end="27:52"><expr pos:start="27:52" pos:end="27:52"><name pos:start="27:52" pos:end="27:52">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:56" pos:end="27:69"><expr pos:start="27:56" pos:end="27:69"><literal type="string" pos:start="27:56" pos:end="27:69">"ivshmem.bar2"</literal></expr></argument>,

                               <argument pos:start="29:32" pos:end="29:46"><expr pos:start="29:32" pos:end="29:46"><name pos:start="29:32" pos:end="29:46"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:46">ivshmem_size</name></name></expr></argument>, <argument pos:start="29:49" pos:end="29:51"><expr pos:start="29:49" pos:end="29:51"><name pos:start="29:49" pos:end="29:51">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:49"><expr pos:start="31:5" pos:end="31:48"><call pos:start="31:5" pos:end="31:48"><name pos:start="31:5" pos:end="31:24">vmstate_register_ram</name><argument_list pos:start="31:25" pos:end="31:48">(<argument pos:start="31:26" pos:end="31:36"><expr pos:start="31:26" pos:end="31:36"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:36"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:36">ivshmem</name></name></expr></argument>, <argument pos:start="31:39" pos:end="31:47"><expr pos:start="31:39" pos:end="31:47"><call pos:start="31:39" pos:end="31:47"><name pos:start="31:39" pos:end="31:44">DEVICE</name><argument_list pos:start="31:45" pos:end="31:47">(<argument pos:start="31:46" pos:end="31:46"><expr pos:start="31:46" pos:end="31:46"><name pos:start="31:46" pos:end="31:46">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:57"><expr pos:start="33:5" pos:end="33:56"><call pos:start="33:5" pos:end="33:56"><name pos:start="33:5" pos:end="33:31">memory_region_add_subregion</name><argument_list pos:start="33:32" pos:end="33:56">(<argument pos:start="33:33" pos:end="33:39"><expr pos:start="33:33" pos:end="33:39"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:39"><name pos:start="33:34" pos:end="33:34">s</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:39">bar</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:42"><expr pos:start="33:42" pos:end="33:42"><literal type="number" pos:start="33:42" pos:end="33:42">0</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:55"><expr pos:start="33:45" pos:end="33:55"><operator pos:start="33:45" pos:end="33:45">&amp;</operator><name pos:start="33:46" pos:end="33:55"><name pos:start="33:46" pos:end="33:46">s</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:55">ivshmem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:34">/* region for shared memory */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><call pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:20">pci_register_bar</name><argument_list pos:start="39:21" pos:end="39:53">(<argument pos:start="39:22" pos:end="39:34"><expr pos:start="39:22" pos:end="39:34"><call pos:start="39:22" pos:end="39:34"><name pos:start="39:22" pos:end="39:31">PCI_DEVICE</name><argument_list pos:start="39:32" pos:end="39:34">(<argument pos:start="39:33" pos:end="39:33"><expr pos:start="39:33" pos:end="39:33"><name pos:start="39:33" pos:end="39:33">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:37" pos:end="39:37"><expr pos:start="39:37" pos:end="39:37"><literal type="number" pos:start="39:37" pos:end="39:37">2</literal></expr></argument>, <argument pos:start="39:40" pos:end="39:43"><expr pos:start="39:40" pos:end="39:43"><name pos:start="39:40" pos:end="39:43">attr</name></expr></argument>, <argument pos:start="39:46" pos:end="39:52"><expr pos:start="39:46" pos:end="39:52"><operator pos:start="39:46" pos:end="39:46">&amp;</operator><name pos:start="39:47" pos:end="39:52"><name pos:start="39:47" pos:end="39:47">s</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:52">bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
