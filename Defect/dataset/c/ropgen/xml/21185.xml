<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21185.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_flac_parse_picture</name><parameter_list pos:start="1:26" pos:end="1:73">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">buf</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:72">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:15">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:21"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:19">CodecMime</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:25">mime</name> <init pos:start="5:27" pos:end="5:46">= <expr pos:start="5:29" pos:end="5:46"><name pos:start="5:29" pos:end="5:46">ff_id3v2_mime_tags</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:8">enum</name> <name pos:start="7:10" pos:end="7:18">AVCodecID</name></name></type> <name pos:start="7:20" pos:end="7:21">id</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40">AV_CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVBufferRef</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">data</name> <init pos:start="9:23" pos:end="9:28">= <expr pos:start="9:25" pos:end="9:28"><name pos:start="9:25" pos:end="9:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:20">mimetype</name><index pos:start="11:21" pos:end="11:24">[<expr pos:start="11:22" pos:end="11:23"><literal type="number" pos:start="11:22" pos:end="11:23">64</literal></expr>]</index></name></decl>, <decl pos:start="11:27" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:31">desc</name> <init pos:start="11:33" pos:end="11:38">= <expr pos:start="11:35" pos:end="11:38"><name pos:start="11:35" pos:end="11:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AVIOContext</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:19">pb</name> <init pos:start="13:21" pos:end="13:26">= <expr pos:start="13:23" pos:end="13:26"><name pos:start="13:23" pos:end="13:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AVStream</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">type</name></decl>, <decl pos:start="17:15" pos:end="17:19"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:19">width</name></decl>, <decl pos:start="17:22" pos:end="17:27"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:22" pos:end="17:27">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">len</name></decl>, <decl pos:start="19:14" pos:end="19:20"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:16">ret</name> <init pos:start="19:18" pos:end="19:20">= <expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:70"><expr pos:start="23:5" pos:end="23:69"><name pos:start="23:5" pos:end="23:6">pb</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:69"><name pos:start="23:10" pos:end="23:27">avio_alloc_context</name><argument_list pos:start="23:28" pos:end="23:69">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">buf</name></expr></argument>, <argument pos:start="23:34" pos:end="23:41"><expr pos:start="23:34" pos:end="23:41"><name pos:start="23:34" pos:end="23:41">buf_size</name></expr></argument>, <argument pos:start="23:44" pos:end="23:44"><expr pos:start="23:44" pos:end="23:44"><literal type="number" pos:start="23:44" pos:end="23:44">0</literal></expr></argument>, <argument pos:start="23:47" pos:end="23:50"><expr pos:start="23:47" pos:end="23:50"><name pos:start="23:47" pos:end="23:50">NULL</name></expr></argument>, <argument pos:start="23:53" pos:end="23:56"><expr pos:start="23:53" pos:end="23:56"><name pos:start="23:53" pos:end="23:56">NULL</name></expr></argument>, <argument pos:start="23:59" pos:end="23:62"><expr pos:start="23:59" pos:end="23:62"><name pos:start="23:59" pos:end="23:62">NULL</name></expr></argument>, <argument pos:start="23:65" pos:end="23:68"><expr pos:start="23:65" pos:end="23:68"><name pos:start="23:65" pos:end="23:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:11">pb</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:31">/* read the picture type */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:8">type</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <call pos:start="33:12" pos:end="33:24"><name pos:start="33:12" pos:end="33:20">avio_rb32</name><argument_list pos:start="33:21" pos:end="33:24">(<argument pos:start="33:22" pos:end="33:23"><expr pos:start="33:22" pos:end="33:23"><name pos:start="33:22" pos:end="33:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="49:5">if <condition pos:start="35:8" pos:end="35:67">(<expr pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:12">type</name> <operator pos:start="35:14" pos:end="35:15">&gt;=</operator> <call pos:start="35:17" pos:end="35:54"><name pos:start="35:17" pos:end="35:30">FF_ARRAY_ELEMS</name><argument_list pos:start="35:31" pos:end="35:54">(<argument pos:start="35:32" pos:end="35:53"><expr pos:start="35:32" pos:end="35:53"><name pos:start="35:32" pos:end="35:53">ff_id3v2_picture_types</name></expr></argument>)</argument_list></call> <operator pos:start="35:56" pos:end="35:57">||</operator> <name pos:start="35:59" pos:end="35:62">type</name> <operator pos:start="35:64" pos:end="35:64">&lt;</operator> <literal type="number" pos:start="35:66" pos:end="35:66">0</literal></expr>)</condition> <block pos:start="35:69" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:17">

        <expr_stmt pos:start="37:9" pos:end="37:69"><expr pos:start="37:9" pos:end="37:68"><call pos:start="37:9" pos:end="37:68"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:68">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">s</name></expr></argument>, <argument pos:start="37:19" pos:end="37:30"><expr pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:33" pos:end="37:61"><expr pos:start="37:33" pos:end="37:61"><literal type="string" pos:start="37:33" pos:end="37:61">"Invalid picture type: %d.\n"</literal></expr></argument>, <argument pos:start="37:64" pos:end="37:67"><expr pos:start="37:64" pos:end="37:67"><name pos:start="37:64" pos:end="37:67">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:49">(<expr pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:32">error_recognition</name></name> <operator pos:start="39:34" pos:end="39:34">&amp;</operator> <name pos:start="39:36" pos:end="39:48">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="39:51" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:22">

            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="43:13" pos:end="43:22">goto <name pos:start="43:18" pos:end="43:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:17"><expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:12">type</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:26">/* picture mimetype */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:24"><expr pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:7">len</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:23"><name pos:start="55:11" pos:end="55:19">avio_rb32</name><argument_list pos:start="55:20" pos:end="55:23">(<argument pos:start="55:21" pos:end="55:22"><expr pos:start="55:21" pos:end="55:22"><name pos:start="55:21" pos:end="55:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="71:5"><if pos:start="57:5" pos:end="71:5">if <condition pos:start="57:8" pos:end="59:73">(<expr pos:start="57:9" pos:end="59:72"><name pos:start="57:9" pos:end="57:11">len</name> <operator pos:start="57:13" pos:end="57:14">&lt;=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">0</literal> <operator pos:start="57:18" pos:end="57:19">||</operator>

        <call pos:start="59:9" pos:end="59:65"><name pos:start="59:9" pos:end="59:17">avio_read</name><argument_list pos:start="59:18" pos:end="59:65">(<argument pos:start="59:19" pos:end="59:20"><expr pos:start="59:19" pos:end="59:20"><name pos:start="59:19" pos:end="59:20">pb</name></expr></argument>, <argument pos:start="59:23" pos:end="59:30"><expr pos:start="59:23" pos:end="59:30"><name pos:start="59:23" pos:end="59:30">mimetype</name></expr></argument>, <argument pos:start="59:33" pos:end="59:64"><expr pos:start="59:33" pos:end="59:64"><call pos:start="59:33" pos:end="59:64"><name pos:start="59:33" pos:end="59:37">FFMIN</name><argument_list pos:start="59:38" pos:end="59:64">(<argument pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:41">len</name></expr></argument>, <argument pos:start="59:44" pos:end="59:63"><expr pos:start="59:44" pos:end="59:63"><sizeof pos:start="59:44" pos:end="59:59">sizeof<argument_list pos:start="59:50" pos:end="59:59">(<argument pos:start="59:51" pos:end="59:58"><expr pos:start="59:51" pos:end="59:58"><name pos:start="59:51" pos:end="59:58">mimetype</name></expr></argument>)</argument_list></sizeof> <operator pos:start="59:61" pos:end="59:61">-</operator> <literal type="number" pos:start="59:63" pos:end="59:63">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="59:67" pos:end="59:68">!=</operator> <name pos:start="59:70" pos:end="59:72">len</name></expr>)</condition> <block pos:start="59:75" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:18">

        <expr_stmt pos:start="61:9" pos:end="63:29"><expr pos:start="61:9" pos:end="63:28"><call pos:start="61:9" pos:end="63:28"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="63:28">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">s</name></expr></argument>, <argument pos:start="61:19" pos:end="61:30"><expr pos:start="61:19" pos:end="61:30"><name pos:start="61:19" pos:end="61:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:33" pos:end="63:27"><expr pos:start="61:33" pos:end="63:27"><literal type="string" pos:start="61:33" pos:end="61:75">"Could not read mimetype from an attached "</literal>

               <literal type="string" pos:start="63:16" pos:end="63:27">"picture.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:38"><if pos:start="65:9" pos:end="67:38">if <condition pos:start="65:12" pos:end="65:49">(<expr pos:start="65:13" pos:end="65:48"><name pos:start="65:13" pos:end="65:32"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:32">error_recognition</name></name> <operator pos:start="65:34" pos:end="65:34">&amp;</operator> <name pos:start="65:36" pos:end="65:48">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:38"><block_content pos:start="67:13" pos:end="67:38">

            <expr_stmt pos:start="67:13" pos:end="67:38"><expr pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <goto pos:start="69:9" pos:end="69:18">goto <name pos:start="69:14" pos:end="69:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:22"><expr pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:12">mimetype</name><index pos:start="73:13" pos:end="73:17">[<expr pos:start="73:14" pos:end="73:16"><name pos:start="73:14" pos:end="73:16">len</name></expr>]</index></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <literal type="number" pos:start="73:21" pos:end="73:21">0</literal></expr>;</expr_stmt>



    <while pos:start="77:5" pos:end="89:5">while <condition pos:start="77:11" pos:end="77:40">(<expr pos:start="77:12" pos:end="77:39"><name pos:start="77:12" pos:end="77:19"><name pos:start="77:12" pos:end="77:15">mime</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:19">id</name></name> <operator pos:start="77:21" pos:end="77:22">!=</operator> <name pos:start="77:24" pos:end="77:39">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="77:42" pos:end="89:5">{<block_content pos:start="79:9" pos:end="87:15">

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:60">(<expr pos:start="79:13" pos:end="79:59"><operator pos:start="79:13" pos:end="79:13">!</operator><call pos:start="79:14" pos:end="79:59"><name pos:start="79:14" pos:end="79:20">strncmp</name><argument_list pos:start="79:21" pos:end="79:59">(<argument pos:start="79:22" pos:end="79:30"><expr pos:start="79:22" pos:end="79:30"><name pos:start="79:22" pos:end="79:30"><name pos:start="79:22" pos:end="79:25">mime</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:30">str</name></name></expr></argument>, <argument pos:start="79:33" pos:end="79:40"><expr pos:start="79:33" pos:end="79:40"><name pos:start="79:33" pos:end="79:40">mimetype</name></expr></argument>, <argument pos:start="79:43" pos:end="79:58"><expr pos:start="79:43" pos:end="79:58"><sizeof pos:start="79:43" pos:end="79:58">sizeof<argument_list pos:start="79:49" pos:end="79:58">(<argument pos:start="79:50" pos:end="79:57"><expr pos:start="79:50" pos:end="79:57"><name pos:start="79:50" pos:end="79:57">mimetype</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:62" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:18">

            <expr_stmt pos:start="81:13" pos:end="81:26"><expr pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:14">id</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:25"><name pos:start="81:18" pos:end="81:21">mime</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:25">id</name></name></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:15"><expr pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:12">mime</name><operator pos:start="87:13" pos:end="87:14">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="91:5" pos:end="103:5"><if pos:start="91:5" pos:end="103:5">if <condition pos:start="91:8" pos:end="91:31">(<expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:10">id</name> <operator pos:start="91:12" pos:end="91:13">==</operator> <name pos:start="91:15" pos:end="91:30">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="91:33" pos:end="103:5">{<block_content pos:start="93:9" pos:end="101:18">

        <expr_stmt pos:start="93:9" pos:end="95:25"><expr pos:start="93:9" pos:end="95:24"><call pos:start="93:9" pos:end="95:24"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="95:24">(<argument pos:start="93:16" pos:end="93:16"><expr pos:start="93:16" pos:end="93:16"><name pos:start="93:16" pos:end="93:16">s</name></expr></argument>, <argument pos:start="93:19" pos:end="93:30"><expr pos:start="93:19" pos:end="93:30"><name pos:start="93:19" pos:end="93:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:33" pos:end="93:74"><expr pos:start="93:33" pos:end="93:74"><literal type="string" pos:start="93:33" pos:end="93:74">"Unknown attached picture mimetype: %s.\n"</literal></expr></argument>,

               <argument pos:start="95:16" pos:end="95:23"><expr pos:start="95:16" pos:end="95:23"><name pos:start="95:16" pos:end="95:23">mimetype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:38"><if pos:start="97:9" pos:end="99:38">if <condition pos:start="97:12" pos:end="97:49">(<expr pos:start="97:13" pos:end="97:48"><name pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:32">error_recognition</name></name> <operator pos:start="97:34" pos:end="97:34">&amp;</operator> <name pos:start="97:36" pos:end="97:48">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:38"><block_content pos:start="99:13" pos:end="99:38">

            <expr_stmt pos:start="99:13" pos:end="99:38"><expr pos:start="99:13" pos:end="99:37"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <name pos:start="99:19" pos:end="99:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <goto pos:start="101:9" pos:end="101:18">goto <name pos:start="101:14" pos:end="101:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:29">/* picture description */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:24"><expr pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:7">len</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:23"><name pos:start="109:11" pos:end="109:19">avio_rb32</name><argument_list pos:start="109:20" pos:end="109:23">(<argument pos:start="109:21" pos:end="109:22"><expr pos:start="109:21" pos:end="109:22"><name pos:start="109:21" pos:end="109:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="137:5"><if pos:start="111:5" pos:end="137:5">if <condition pos:start="111:8" pos:end="111:16">(<expr pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:11">len</name> <operator pos:start="111:13" pos:end="111:13">&gt;</operator> <literal type="number" pos:start="111:15" pos:end="111:15">0</literal></expr>)</condition> <block pos:start="111:18" pos:end="137:5">{<block_content pos:start="113:9" pos:end="135:22">

        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:41">(<expr pos:start="113:13" pos:end="113:40"><operator pos:start="113:13" pos:end="113:13">!</operator><operator pos:start="113:14" pos:end="113:14">(</operator><name pos:start="113:15" pos:end="113:18">desc</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:39"><name pos:start="113:22" pos:end="113:30">av_malloc</name><argument_list pos:start="113:31" pos:end="113:39">(<argument pos:start="113:32" pos:end="113:38"><expr pos:start="113:32" pos:end="113:38"><name pos:start="113:32" pos:end="113:34">len</name> <operator pos:start="113:36" pos:end="113:36">+</operator> <literal type="number" pos:start="113:38" pos:end="113:38">1</literal></expr></argument>)</argument_list></call><operator pos:start="113:40" pos:end="113:40">)</operator></expr>)</condition> <block pos:start="113:43" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:22">

            <expr_stmt pos:start="115:13" pos:end="115:34"><expr pos:start="115:13" pos:end="115:33"><name pos:start="115:13" pos:end="115:15">ret</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <call pos:start="115:19" pos:end="115:33"><name pos:start="115:19" pos:end="115:25">AVERROR</name><argument_list pos:start="115:26" pos:end="115:33">(<argument pos:start="115:27" pos:end="115:32"><expr pos:start="115:27" pos:end="115:32"><name pos:start="115:27" pos:end="115:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="117:13" pos:end="117:22">goto <name pos:start="117:18" pos:end="117:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="133:9"><if pos:start="123:9" pos:end="133:9">if <condition pos:start="123:12" pos:end="123:44">(<expr pos:start="123:13" pos:end="123:43"><call pos:start="123:13" pos:end="123:36"><name pos:start="123:13" pos:end="123:21">avio_read</name><argument_list pos:start="123:22" pos:end="123:36">(<argument pos:start="123:23" pos:end="123:24"><expr pos:start="123:23" pos:end="123:24"><name pos:start="123:23" pos:end="123:24">pb</name></expr></argument>, <argument pos:start="123:27" pos:end="123:30"><expr pos:start="123:27" pos:end="123:30"><name pos:start="123:27" pos:end="123:30">desc</name></expr></argument>, <argument pos:start="123:33" pos:end="123:35"><expr pos:start="123:33" pos:end="123:35"><name pos:start="123:33" pos:end="123:35">len</name></expr></argument>)</argument_list></call> <operator pos:start="123:38" pos:end="123:39">!=</operator> <name pos:start="123:41" pos:end="123:43">len</name></expr>)</condition> <block pos:start="123:46" pos:end="133:9">{<block_content pos:start="125:13" pos:end="131:22">

            <expr_stmt pos:start="125:13" pos:end="125:85"><expr pos:start="125:13" pos:end="125:84"><call pos:start="125:13" pos:end="125:84"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:84">(<argument pos:start="125:20" pos:end="125:20"><expr pos:start="125:20" pos:end="125:20"><name pos:start="125:20" pos:end="125:20">s</name></expr></argument>, <argument pos:start="125:23" pos:end="125:34"><expr pos:start="125:23" pos:end="125:34"><name pos:start="125:23" pos:end="125:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:37" pos:end="125:83"><expr pos:start="125:37" pos:end="125:83"><literal type="string" pos:start="125:37" pos:end="125:83">"Error reading attached picture description.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="129:35"><if pos:start="127:13" pos:end="129:35">if <condition pos:start="127:16" pos:end="127:53">(<expr pos:start="127:17" pos:end="127:52"><name pos:start="127:17" pos:end="127:36"><name pos:start="127:17" pos:end="127:17">s</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:36">error_recognition</name></name> <operator pos:start="127:38" pos:end="127:38">&amp;</operator> <name pos:start="127:40" pos:end="127:52">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:35"><block_content pos:start="129:17" pos:end="129:35">

                <expr_stmt pos:start="129:17" pos:end="129:35"><expr pos:start="129:17" pos:end="129:34"><name pos:start="129:17" pos:end="129:19">ret</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <call pos:start="129:23" pos:end="129:34"><name pos:start="129:23" pos:end="129:29">AVERROR</name><argument_list pos:start="129:30" pos:end="129:34">(<argument pos:start="129:31" pos:end="129:33"><expr pos:start="129:31" pos:end="129:33"><name pos:start="129:31" pos:end="129:33">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <goto pos:start="131:13" pos:end="131:22">goto <name pos:start="131:18" pos:end="131:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:22"><expr pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:17"><name pos:start="135:9" pos:end="135:12">desc</name><index pos:start="135:13" pos:end="135:17">[<expr pos:start="135:14" pos:end="135:16"><name pos:start="135:14" pos:end="135:16">len</name></expr>]</index></name> <operator pos:start="135:19" pos:end="135:19">=</operator> <literal type="number" pos:start="135:21" pos:end="135:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="141:5" pos:end="141:26">/* picture metadata */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:27"><expr pos:start="143:5" pos:end="143:26"><name pos:start="143:5" pos:end="143:9">width</name>  <operator pos:start="143:12" pos:end="143:12">=</operator> <call pos:start="143:14" pos:end="143:26"><name pos:start="143:14" pos:end="143:22">avio_rb32</name><argument_list pos:start="143:23" pos:end="143:26">(<argument pos:start="143:24" pos:end="143:25"><expr pos:start="143:24" pos:end="143:25"><name pos:start="143:24" pos:end="143:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:27"><expr pos:start="145:5" pos:end="145:26"><name pos:start="145:5" pos:end="145:10">height</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <call pos:start="145:14" pos:end="145:26"><name pos:start="145:14" pos:end="145:22">avio_rb32</name><argument_list pos:start="145:23" pos:end="145:26">(<argument pos:start="145:24" pos:end="145:25"><expr pos:start="145:24" pos:end="145:25"><name pos:start="145:24" pos:end="145:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:21"><expr pos:start="147:5" pos:end="147:20"><call pos:start="147:5" pos:end="147:20"><name pos:start="147:5" pos:end="147:13">avio_skip</name><argument_list pos:start="147:14" pos:end="147:20">(<argument pos:start="147:15" pos:end="147:16"><expr pos:start="147:15" pos:end="147:16"><name pos:start="147:15" pos:end="147:16">pb</name></expr></argument>, <argument pos:start="147:19" pos:end="147:19"><expr pos:start="147:19" pos:end="147:19"><literal type="number" pos:start="147:19" pos:end="147:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="151:5" pos:end="151:22">/* picture data */</comment>

    <expr_stmt pos:start="153:5" pos:end="153:24"><expr pos:start="153:5" pos:end="153:23"><name pos:start="153:5" pos:end="153:7">len</name> <operator pos:start="153:9" pos:end="153:9">=</operator> <call pos:start="153:11" pos:end="153:23"><name pos:start="153:11" pos:end="153:19">avio_rb32</name><argument_list pos:start="153:20" pos:end="153:23">(<argument pos:start="153:21" pos:end="153:22"><expr pos:start="153:21" pos:end="153:22"><name pos:start="153:21" pos:end="153:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="165:5"><if pos:start="155:5" pos:end="165:5">if <condition pos:start="155:8" pos:end="155:17">(<expr pos:start="155:9" pos:end="155:16"><name pos:start="155:9" pos:end="155:11">len</name> <operator pos:start="155:13" pos:end="155:14">&lt;=</operator> <literal type="number" pos:start="155:16" pos:end="155:16">0</literal></expr>)</condition> <block pos:start="155:19" pos:end="165:5">{<block_content pos:start="157:9" pos:end="163:18">

        <expr_stmt pos:start="157:9" pos:end="157:77"><expr pos:start="157:9" pos:end="157:76"><call pos:start="157:9" pos:end="157:76"><name pos:start="157:9" pos:end="157:14">av_log</name><argument_list pos:start="157:15" pos:end="157:76">(<argument pos:start="157:16" pos:end="157:16"><expr pos:start="157:16" pos:end="157:16"><name pos:start="157:16" pos:end="157:16">s</name></expr></argument>, <argument pos:start="157:19" pos:end="157:30"><expr pos:start="157:19" pos:end="157:30"><name pos:start="157:19" pos:end="157:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:33" pos:end="157:70"><expr pos:start="157:33" pos:end="157:70"><literal type="string" pos:start="157:33" pos:end="157:70">"Invalid attached picture size: %d.\n"</literal></expr></argument>, <argument pos:start="157:73" pos:end="157:75"><expr pos:start="157:73" pos:end="157:75"><name pos:start="157:73" pos:end="157:75">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="161:38"><if pos:start="159:9" pos:end="161:38">if <condition pos:start="159:12" pos:end="159:49">(<expr pos:start="159:13" pos:end="159:48"><name pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:32">error_recognition</name></name> <operator pos:start="159:34" pos:end="159:34">&amp;</operator> <name pos:start="159:36" pos:end="159:48">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:38"><block_content pos:start="161:13" pos:end="161:38">

            <expr_stmt pos:start="161:13" pos:end="161:38"><expr pos:start="161:13" pos:end="161:37"><name pos:start="161:13" pos:end="161:15">ret</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <name pos:start="161:19" pos:end="161:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <goto pos:start="163:9" pos:end="163:18">goto <name pos:start="163:14" pos:end="163:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="167:5" pos:end="173:5"><if pos:start="167:5" pos:end="173:5">if <condition pos:start="167:8" pos:end="167:39">(<expr pos:start="167:9" pos:end="167:38"><operator pos:start="167:9" pos:end="167:9">!</operator><operator pos:start="167:10" pos:end="167:10">(</operator><name pos:start="167:11" pos:end="167:14">data</name> <operator pos:start="167:16" pos:end="167:16">=</operator> <call pos:start="167:18" pos:end="167:37"><name pos:start="167:18" pos:end="167:32">av_buffer_alloc</name><argument_list pos:start="167:33" pos:end="167:37">(<argument pos:start="167:34" pos:end="167:36"><expr pos:start="167:34" pos:end="167:36"><name pos:start="167:34" pos:end="167:36">len</name></expr></argument>)</argument_list></call><operator pos:start="167:38" pos:end="167:38">)</operator></expr>)</condition> <block pos:start="167:41" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:18">

        <expr_stmt pos:start="169:9" pos:end="169:30"><expr pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:11">ret</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <call pos:start="169:15" pos:end="169:29"><name pos:start="169:15" pos:end="169:21">AVERROR</name><argument_list pos:start="169:22" pos:end="169:29">(<argument pos:start="169:23" pos:end="169:28"><expr pos:start="169:23" pos:end="169:28"><name pos:start="169:23" pos:end="169:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="171:9" pos:end="171:18">goto <name pos:start="171:14" pos:end="171:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="175:5" pos:end="185:5"><if pos:start="175:5" pos:end="185:5">if <condition pos:start="175:8" pos:end="175:46">(<expr pos:start="175:9" pos:end="175:45"><call pos:start="175:9" pos:end="175:38"><name pos:start="175:9" pos:end="175:17">avio_read</name><argument_list pos:start="175:18" pos:end="175:38">(<argument pos:start="175:19" pos:end="175:20"><expr pos:start="175:19" pos:end="175:20"><name pos:start="175:19" pos:end="175:20">pb</name></expr></argument>, <argument pos:start="175:23" pos:end="175:32"><expr pos:start="175:23" pos:end="175:32"><name pos:start="175:23" pos:end="175:32"><name pos:start="175:23" pos:end="175:26">data</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:32">data</name></name></expr></argument>, <argument pos:start="175:35" pos:end="175:37"><expr pos:start="175:35" pos:end="175:37"><name pos:start="175:35" pos:end="175:37">len</name></expr></argument>)</argument_list></call> <operator pos:start="175:40" pos:end="175:41">!=</operator> <name pos:start="175:43" pos:end="175:45">len</name></expr>)</condition> <block pos:start="175:48" pos:end="185:5">{<block_content pos:start="177:9" pos:end="183:18">

        <expr_stmt pos:start="177:9" pos:end="177:74"><expr pos:start="177:9" pos:end="177:73"><call pos:start="177:9" pos:end="177:73"><name pos:start="177:9" pos:end="177:14">av_log</name><argument_list pos:start="177:15" pos:end="177:73">(<argument pos:start="177:16" pos:end="177:16"><expr pos:start="177:16" pos:end="177:16"><name pos:start="177:16" pos:end="177:16">s</name></expr></argument>, <argument pos:start="177:19" pos:end="177:30"><expr pos:start="177:19" pos:end="177:30"><name pos:start="177:19" pos:end="177:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="177:33" pos:end="177:72"><expr pos:start="177:33" pos:end="177:72"><literal type="string" pos:start="177:33" pos:end="177:72">"Error reading attached picture data.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="181:31"><if pos:start="179:9" pos:end="181:31">if <condition pos:start="179:12" pos:end="179:49">(<expr pos:start="179:13" pos:end="179:48"><name pos:start="179:13" pos:end="179:32"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:32">error_recognition</name></name> <operator pos:start="179:34" pos:end="179:34">&amp;</operator> <name pos:start="179:36" pos:end="179:48">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:31"><block_content pos:start="181:13" pos:end="181:31">

            <expr_stmt pos:start="181:13" pos:end="181:31"><expr pos:start="181:13" pos:end="181:30"><name pos:start="181:13" pos:end="181:15">ret</name> <operator pos:start="181:17" pos:end="181:17">=</operator> <call pos:start="181:19" pos:end="181:30"><name pos:start="181:19" pos:end="181:25">AVERROR</name><argument_list pos:start="181:26" pos:end="181:30">(<argument pos:start="181:27" pos:end="181:29"><expr pos:start="181:27" pos:end="181:29"><name pos:start="181:27" pos:end="181:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <goto pos:start="183:9" pos:end="183:18">goto <name pos:start="183:14" pos:end="183:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:38"><expr pos:start="189:5" pos:end="189:37"><name pos:start="189:5" pos:end="189:6">st</name> <operator pos:start="189:8" pos:end="189:8">=</operator> <call pos:start="189:10" pos:end="189:37"><name pos:start="189:10" pos:end="189:28">avformat_new_stream</name><argument_list pos:start="189:29" pos:end="189:37">(<argument pos:start="189:30" pos:end="189:30"><expr pos:start="189:30" pos:end="189:30"><name pos:start="189:30" pos:end="189:30">s</name></expr></argument>, <argument pos:start="189:33" pos:end="189:36"><expr pos:start="189:33" pos:end="189:36"><name pos:start="189:33" pos:end="189:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="197:5"><if pos:start="191:5" pos:end="197:5">if <condition pos:start="191:8" pos:end="191:12">(<expr pos:start="191:9" pos:end="191:11"><operator pos:start="191:9" pos:end="191:9">!</operator><name pos:start="191:10" pos:end="191:11">st</name></expr>)</condition> <block pos:start="191:14" pos:end="197:5">{<block_content pos:start="193:9" pos:end="195:18">

        <expr_stmt pos:start="193:9" pos:end="193:30"><expr pos:start="193:9" pos:end="193:29"><name pos:start="193:9" pos:end="193:11">ret</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <call pos:start="193:15" pos:end="193:29"><name pos:start="193:15" pos:end="193:21">AVERROR</name><argument_list pos:start="193:22" pos:end="193:29">(<argument pos:start="193:23" pos:end="193:28"><expr pos:start="193:23" pos:end="193:28"><name pos:start="193:23" pos:end="193:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="195:9" pos:end="195:18">goto <name pos:start="195:14" pos:end="195:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:38"><expr pos:start="201:5" pos:end="201:37"><call pos:start="201:5" pos:end="201:37"><name pos:start="201:5" pos:end="201:18">av_init_packet</name><argument_list pos:start="201:19" pos:end="201:37">(<argument pos:start="201:20" pos:end="201:36"><expr pos:start="201:20" pos:end="201:36"><operator pos:start="201:20" pos:end="201:20">&amp;</operator><name pos:start="201:21" pos:end="201:36"><name pos:start="201:21" pos:end="201:22">st</name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:36">attached_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:41"><expr pos:start="203:5" pos:end="203:40"><name pos:start="203:5" pos:end="203:24"><name pos:start="203:5" pos:end="203:6">st</name><operator pos:start="203:7" pos:end="203:8">-&gt;</operator><name pos:start="203:9" pos:end="203:20">attached_pic</name><operator pos:start="203:21" pos:end="203:21">.</operator><name pos:start="203:22" pos:end="203:24">buf</name></name>          <operator pos:start="203:35" pos:end="203:35">=</operator> <name pos:start="203:37" pos:end="203:40">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:47"><expr pos:start="205:5" pos:end="205:46"><name pos:start="205:5" pos:end="205:25"><name pos:start="205:5" pos:end="205:6">st</name><operator pos:start="205:7" pos:end="205:8">-&gt;</operator><name pos:start="205:9" pos:end="205:20">attached_pic</name><operator pos:start="205:21" pos:end="205:21">.</operator><name pos:start="205:22" pos:end="205:25">data</name></name>         <operator pos:start="205:35" pos:end="205:35">=</operator> <name pos:start="205:37" pos:end="205:46"><name pos:start="205:37" pos:end="205:40">data</name><operator pos:start="205:41" pos:end="205:42">-&gt;</operator><name pos:start="205:43" pos:end="205:46">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:40"><expr pos:start="207:5" pos:end="207:39"><name pos:start="207:5" pos:end="207:25"><name pos:start="207:5" pos:end="207:6">st</name><operator pos:start="207:7" pos:end="207:8">-&gt;</operator><name pos:start="207:9" pos:end="207:20">attached_pic</name><operator pos:start="207:21" pos:end="207:21">.</operator><name pos:start="207:22" pos:end="207:25">size</name></name>         <operator pos:start="207:35" pos:end="207:35">=</operator> <name pos:start="207:37" pos:end="207:39">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:46"><expr pos:start="209:5" pos:end="209:45"><name pos:start="209:5" pos:end="209:33"><name pos:start="209:5" pos:end="209:6">st</name><operator pos:start="209:7" pos:end="209:8">-&gt;</operator><name pos:start="209:9" pos:end="209:20">attached_pic</name><operator pos:start="209:21" pos:end="209:21">.</operator><name pos:start="209:22" pos:end="209:33">stream_index</name></name> <operator pos:start="209:35" pos:end="209:35">=</operator> <name pos:start="209:37" pos:end="209:45"><name pos:start="209:37" pos:end="209:38">st</name><operator pos:start="209:39" pos:end="209:40">-&gt;</operator><name pos:start="209:41" pos:end="209:45">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:52"><expr pos:start="211:5" pos:end="211:51"><name pos:start="211:5" pos:end="211:26"><name pos:start="211:5" pos:end="211:6">st</name><operator pos:start="211:7" pos:end="211:8">-&gt;</operator><name pos:start="211:9" pos:end="211:20">attached_pic</name><operator pos:start="211:21" pos:end="211:21">.</operator><name pos:start="211:22" pos:end="211:26">flags</name></name>       <operator pos:start="211:34" pos:end="211:35">|=</operator> <name pos:start="211:37" pos:end="211:51">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:56"><expr pos:start="215:5" pos:end="215:55"><name pos:start="215:5" pos:end="215:19"><name pos:start="215:5" pos:end="215:6">st</name><operator pos:start="215:7" pos:end="215:8">-&gt;</operator><name pos:start="215:9" pos:end="215:19">disposition</name></name>      <operator pos:start="215:26" pos:end="215:27">|=</operator> <name pos:start="215:29" pos:end="215:55">AV_DISPOSITION_ATTACHED_PIC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:47"><expr pos:start="217:5" pos:end="217:46"><name pos:start="217:5" pos:end="217:25"><name pos:start="217:5" pos:end="217:6">st</name><operator pos:start="217:7" pos:end="217:8">-&gt;</operator><name pos:start="217:9" pos:end="217:13">codec</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:25">codec_type</name></name> <operator pos:start="217:27" pos:end="217:27">=</operator> <name pos:start="217:29" pos:end="217:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:31"><expr pos:start="219:5" pos:end="219:30"><name pos:start="219:5" pos:end="219:23"><name pos:start="219:5" pos:end="219:6">st</name><operator pos:start="219:7" pos:end="219:8">-&gt;</operator><name pos:start="219:9" pos:end="219:13">codec</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:23">codec_id</name></name>   <operator pos:start="219:27" pos:end="219:27">=</operator> <name pos:start="219:29" pos:end="219:30">id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:34"><expr pos:start="221:5" pos:end="221:33"><name pos:start="221:5" pos:end="221:20"><name pos:start="221:5" pos:end="221:6">st</name><operator pos:start="221:7" pos:end="221:8">-&gt;</operator><name pos:start="221:9" pos:end="221:13">codec</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:20">width</name></name>      <operator pos:start="221:27" pos:end="221:27">=</operator> <name pos:start="221:29" pos:end="221:33">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:35"><expr pos:start="223:5" pos:end="223:34"><name pos:start="223:5" pos:end="223:21"><name pos:start="223:5" pos:end="223:6">st</name><operator pos:start="223:7" pos:end="223:8">-&gt;</operator><name pos:start="223:9" pos:end="223:13">codec</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:21">height</name></name>     <operator pos:start="223:27" pos:end="223:27">=</operator> <name pos:start="223:29" pos:end="223:34">height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:75"><expr pos:start="225:5" pos:end="225:74"><call pos:start="225:5" pos:end="225:74"><name pos:start="225:5" pos:end="225:15">av_dict_set</name><argument_list pos:start="225:16" pos:end="225:74">(<argument pos:start="225:17" pos:end="225:29"><expr pos:start="225:17" pos:end="225:29"><operator pos:start="225:17" pos:end="225:17">&amp;</operator><name pos:start="225:18" pos:end="225:29"><name pos:start="225:18" pos:end="225:19">st</name><operator pos:start="225:20" pos:end="225:21">-&gt;</operator><name pos:start="225:22" pos:end="225:29">metadata</name></name></expr></argument>, <argument pos:start="225:32" pos:end="225:40"><expr pos:start="225:32" pos:end="225:40"><literal type="string" pos:start="225:32" pos:end="225:40">"comment"</literal></expr></argument>, <argument pos:start="225:43" pos:end="225:70"><expr pos:start="225:43" pos:end="225:70"><name pos:start="225:43" pos:end="225:70"><name pos:start="225:43" pos:end="225:64">ff_id3v2_picture_types</name><index pos:start="225:65" pos:end="225:70">[<expr pos:start="225:66" pos:end="225:69"><name pos:start="225:66" pos:end="225:69">type</name></expr>]</index></name></expr></argument>, <argument pos:start="225:73" pos:end="225:73"><expr pos:start="225:73" pos:end="225:73"><literal type="number" pos:start="225:73" pos:end="225:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="227:5" pos:end="229:75"><if pos:start="227:5" pos:end="229:75">if <condition pos:start="227:8" pos:end="227:13">(<expr pos:start="227:9" pos:end="227:12"><name pos:start="227:9" pos:end="227:12">desc</name></expr>)</condition><block type="pseudo" pos:start="229:9" pos:end="229:75"><block_content pos:start="229:9" pos:end="229:75">

        <expr_stmt pos:start="229:9" pos:end="229:75"><expr pos:start="229:9" pos:end="229:74"><call pos:start="229:9" pos:end="229:74"><name pos:start="229:9" pos:end="229:19">av_dict_set</name><argument_list pos:start="229:20" pos:end="229:74">(<argument pos:start="229:21" pos:end="229:33"><expr pos:start="229:21" pos:end="229:33"><operator pos:start="229:21" pos:end="229:21">&amp;</operator><name pos:start="229:22" pos:end="229:33"><name pos:start="229:22" pos:end="229:23">st</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:33">metadata</name></name></expr></argument>, <argument pos:start="229:36" pos:end="229:42"><expr pos:start="229:36" pos:end="229:42"><literal type="string" pos:start="229:36" pos:end="229:42">"title"</literal></expr></argument>, <argument pos:start="229:45" pos:end="229:48"><expr pos:start="229:45" pos:end="229:48"><name pos:start="229:45" pos:end="229:48">desc</name></expr></argument>, <argument pos:start="229:51" pos:end="229:73"><expr pos:start="229:51" pos:end="229:73"><name pos:start="229:51" pos:end="229:73">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="233:5" pos:end="233:18"><expr pos:start="233:5" pos:end="233:17"><call pos:start="233:5" pos:end="233:17"><name pos:start="233:5" pos:end="233:12">av_freep</name><argument_list pos:start="233:13" pos:end="233:17">(<argument pos:start="233:14" pos:end="233:16"><expr pos:start="233:14" pos:end="233:16"><operator pos:start="233:14" pos:end="233:14">&amp;</operator><name pos:start="233:15" pos:end="233:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="237:5" pos:end="237:13">return <expr pos:start="237:12" pos:end="237:12"><literal type="number" pos:start="237:12" pos:end="237:12">0</literal></expr>;</return>



<label pos:start="241:1" pos:end="241:5"><name pos:start="241:1" pos:end="241:4">fail</name>:</label>

    <expr_stmt pos:start="243:5" pos:end="243:27"><expr pos:start="243:5" pos:end="243:26"><call pos:start="243:5" pos:end="243:26"><name pos:start="243:5" pos:end="243:19">av_buffer_unref</name><argument_list pos:start="243:20" pos:end="243:26">(<argument pos:start="243:21" pos:end="243:25"><expr pos:start="243:21" pos:end="243:25"><operator pos:start="243:21" pos:end="243:21">&amp;</operator><name pos:start="243:22" pos:end="243:25">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:20"><expr pos:start="245:5" pos:end="245:19"><call pos:start="245:5" pos:end="245:19"><name pos:start="245:5" pos:end="245:12">av_freep</name><argument_list pos:start="245:13" pos:end="245:19">(<argument pos:start="245:14" pos:end="245:18"><expr pos:start="245:14" pos:end="245:18"><operator pos:start="245:14" pos:end="245:14">&amp;</operator><name pos:start="245:15" pos:end="245:18">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:18"><expr pos:start="247:5" pos:end="247:17"><call pos:start="247:5" pos:end="247:17"><name pos:start="247:5" pos:end="247:12">av_freep</name><argument_list pos:start="247:13" pos:end="247:17">(<argument pos:start="247:14" pos:end="247:16"><expr pos:start="247:14" pos:end="247:16"><operator pos:start="247:14" pos:end="247:14">&amp;</operator><name pos:start="247:15" pos:end="247:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="251:5" pos:end="251:15">return <expr pos:start="251:12" pos:end="251:14"><name pos:start="251:12" pos:end="251:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
