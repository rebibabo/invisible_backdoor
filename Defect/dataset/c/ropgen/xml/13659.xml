<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13659.c" pos:tabs="8"><function pos:start="1:1" pos:end="60:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">realize</name><parameter_list pos:start="1:20" pos:end="1:49">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:31">DeviceState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">d</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:41">Error</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier><modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="60:1">{<block_content pos:start="5:5" pos:end="58:37">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">sPAPRDRConnector</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">drc</name> <init pos:start="5:27" pos:end="5:49">= <expr pos:start="5:29" pos:end="5:49"><call pos:start="5:29" pos:end="5:49"><name pos:start="5:29" pos:end="5:46">SPAPR_DR_CONNECTOR</name><argument_list pos:start="5:47" pos:end="5:49">(<argument pos:start="5:48" pos:end="5:48"><expr pos:start="5:48" pos:end="5:48"><name pos:start="5:48" pos:end="5:48">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">sPAPRDRConnectorClass</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:31">drck</name> <init pos:start="7:33" pos:end="7:67">= <expr pos:start="7:35" pos:end="7:67"><call pos:start="7:35" pos:end="7:67"><name pos:start="7:35" pos:end="7:62">SPAPR_DR_CONNECTOR_GET_CLASS</name><argument_list pos:start="7:63" pos:end="7:67">(<argument pos:start="7:64" pos:end="7:66"><expr pos:start="7:64" pos:end="7:66"><name pos:start="7:64" pos:end="7:66">drc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">Object</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:26">root_container</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:23"><name pos:start="11:10" pos:end="11:18">link_name</name><index pos:start="11:19" pos:end="11:23">[<expr pos:start="11:20" pos:end="11:22"><literal type="number" pos:start="11:20" pos:end="11:22">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">gchar</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:21">child_name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:14">err</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:54"><expr pos:start="19:5" pos:end="19:53"><call pos:start="19:5" pos:end="19:53"><name pos:start="19:5" pos:end="19:12">DPRINTFN</name><argument_list pos:start="19:13" pos:end="19:53">(<argument pos:start="19:14" pos:end="19:30"><expr pos:start="19:14" pos:end="19:30"><literal type="string" pos:start="19:14" pos:end="19:30">"drc realize: %x"</literal></expr></argument>, <argument pos:start="19:33" pos:end="19:52"><expr pos:start="19:33" pos:end="19:52"><call pos:start="19:33" pos:end="19:52"><name pos:start="19:33" pos:end="19:47"><name pos:start="19:33" pos:end="19:36">drck</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:47">get_index</name></name><argument_list pos:start="19:48" pos:end="19:52">(<argument pos:start="19:49" pos:end="19:51"><expr pos:start="19:49" pos:end="19:51"><name pos:start="19:49" pos:end="19:51">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="33:7">/* NOTE: we do this as part of realize/unrealize due to the fact

     * that the guest will communicate with the DRC via RTAS calls

     * referencing the global DRC index. By unlinking the DRC

     * from DRC_CONTAINER_PATH/&lt;drc_index&gt; we effectively make it

     * inaccessible by the guest, since lookups rely on this path

     * existing in the composition tree

     */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:74"><expr pos:start="35:5" pos:end="35:73"><name pos:start="35:5" pos:end="35:18">root_container</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:73"><name pos:start="35:22" pos:end="35:34">container_get</name><argument_list pos:start="35:35" pos:end="35:73">(<argument pos:start="35:36" pos:end="35:52"><expr pos:start="35:36" pos:end="35:52"><call pos:start="35:36" pos:end="35:52"><name pos:start="35:36" pos:end="35:50">object_get_root</name><argument_list pos:start="35:51" pos:end="35:52">()</argument_list></call></expr></argument>, <argument pos:start="35:55" pos:end="35:72"><expr pos:start="35:55" pos:end="35:72"><name pos:start="35:55" pos:end="35:72">DRC_CONTAINER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:71"><expr pos:start="37:5" pos:end="37:70"><call pos:start="37:5" pos:end="37:70"><name pos:start="37:5" pos:end="37:12">snprintf</name><argument_list pos:start="37:13" pos:end="37:70">(<argument pos:start="37:14" pos:end="37:22"><expr pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:22">link_name</name></expr></argument>, <argument pos:start="37:25" pos:end="37:41"><expr pos:start="37:25" pos:end="37:41"><sizeof pos:start="37:25" pos:end="37:41">sizeof<argument_list pos:start="37:31" pos:end="37:41">(<argument pos:start="37:32" pos:end="37:40"><expr pos:start="37:32" pos:end="37:40"><name pos:start="37:32" pos:end="37:40">link_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="37:44" pos:end="37:47"><expr pos:start="37:44" pos:end="37:47"><literal type="string" pos:start="37:44" pos:end="37:47">"%x"</literal></expr></argument>, <argument pos:start="37:50" pos:end="37:69"><expr pos:start="37:50" pos:end="37:69"><call pos:start="37:50" pos:end="37:69"><name pos:start="37:50" pos:end="37:64"><name pos:start="37:50" pos:end="37:53">drck</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:64">get_index</name></name><argument_list pos:start="37:65" pos:end="37:69">(<argument pos:start="37:66" pos:end="37:68"><expr pos:start="37:66" pos:end="37:68"><name pos:start="37:66" pos:end="37:68">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:66"><expr pos:start="39:5" pos:end="39:65"><name pos:start="39:5" pos:end="39:14">child_name</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <call pos:start="39:18" pos:end="39:65"><name pos:start="39:18" pos:end="39:52">object_get_canonical_path_component</name><argument_list pos:start="39:53" pos:end="39:65">(<argument pos:start="39:54" pos:end="39:64"><expr pos:start="39:54" pos:end="39:64"><call pos:start="39:54" pos:end="39:64"><name pos:start="39:54" pos:end="39:59">OBJECT</name><argument_list pos:start="39:60" pos:end="39:64">(<argument pos:start="39:61" pos:end="39:63"><expr pos:start="39:61" pos:end="39:63"><name pos:start="39:61" pos:end="39:63">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><call pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:12">DPRINTFN</name><argument_list pos:start="41:13" pos:end="41:46">(<argument pos:start="41:14" pos:end="41:33"><expr pos:start="41:14" pos:end="41:33"><literal type="string" pos:start="41:14" pos:end="41:33">"drc child name: %s"</literal></expr></argument>, <argument pos:start="41:36" pos:end="41:45"><expr pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:45">child_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:60"><expr pos:start="43:5" pos:end="45:59"><call pos:start="43:5" pos:end="45:59"><name pos:start="43:5" pos:end="43:29">object_property_add_alias</name><argument_list pos:start="43:30" pos:end="45:59">(<argument pos:start="43:31" pos:end="43:44"><expr pos:start="43:31" pos:end="43:44"><name pos:start="43:31" pos:end="43:44">root_container</name></expr></argument>, <argument pos:start="43:47" pos:end="43:55"><expr pos:start="43:47" pos:end="43:55"><name pos:start="43:47" pos:end="43:55">link_name</name></expr></argument>,

                              <argument pos:start="45:31" pos:end="45:40"><expr pos:start="45:31" pos:end="45:40"><name pos:start="45:31" pos:end="45:40"><name pos:start="45:31" pos:end="45:33">drc</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:40">owner</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:52"><expr pos:start="45:43" pos:end="45:52"><name pos:start="45:43" pos:end="45:52">child_name</name></expr></argument>, <argument pos:start="45:55" pos:end="45:58"><expr pos:start="45:55" pos:end="45:58"><operator pos:start="45:55" pos:end="45:55">&amp;</operator><name pos:start="45:56" pos:end="45:58">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:12">(<expr pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">err</name></expr>)</condition> <block pos:start="47:14" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:34">

        <expr_stmt pos:start="49:9" pos:end="49:50"><expr pos:start="49:9" pos:end="49:49"><call pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:20">error_report</name><argument_list pos:start="49:21" pos:end="49:49">(<argument pos:start="49:22" pos:end="49:25"><expr pos:start="49:22" pos:end="49:25"><literal type="string" pos:start="49:22" pos:end="49:25">"%s"</literal></expr></argument>, <argument pos:start="49:28" pos:end="49:48"><expr pos:start="49:28" pos:end="49:48"><call pos:start="49:28" pos:end="49:48"><name pos:start="49:28" pos:end="49:43">error_get_pretty</name><argument_list pos:start="49:44" pos:end="49:48">(<argument pos:start="49:45" pos:end="49:47"><expr pos:start="49:45" pos:end="49:47"><name pos:start="49:45" pos:end="49:47">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><call pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:18">error_free</name><argument_list pos:start="51:19" pos:end="51:23">(<argument pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><call pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:20">object_unref</name><argument_list pos:start="53:21" pos:end="53:33">(<argument pos:start="53:22" pos:end="53:32"><expr pos:start="53:22" pos:end="53:32"><call pos:start="53:22" pos:end="53:32"><name pos:start="53:22" pos:end="53:27">OBJECT</name><argument_list pos:start="53:28" pos:end="53:32">(<argument pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:31">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>


    <expr_stmt pos:start="58:5" pos:end="58:37"><expr pos:start="58:5" pos:end="58:36"><call pos:start="58:5" pos:end="58:36"><name pos:start="58:5" pos:end="58:12">DPRINTFN</name><argument_list pos:start="58:13" pos:end="58:36">(<argument pos:start="58:14" pos:end="58:35"><expr pos:start="58:14" pos:end="58:35"><literal type="string" pos:start="58:14" pos:end="58:35">"drc realize complete"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
