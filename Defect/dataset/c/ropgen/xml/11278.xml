<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11278.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:12">AC3_NAME</name></type>(<name pos:start="1:14" pos:end="1:25">encode_frame</name>)<parameter_list pos:start="1:27" pos:end="3:69">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:65">avpkt</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:47"><decl pos:start="3:28" pos:end="3:47"><type pos:start="3:28" pos:end="3:47"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:40">AVFrame</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:47">frame</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:68"><decl pos:start="3:50" pos:end="3:68"><type pos:start="3:50" pos:end="3:68"><name pos:start="3:50" pos:end="3:52">int</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:68">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="119:1">{<block_content pos:start="7:5" pos:end="117:13">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">AC3EncodeContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:44">(<expr pos:start="13:9" pos:end="13:43"><name pos:start="13:9" pos:end="13:43"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:18">options</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:43">allow_per_frame_metadata</name></name></expr>)</condition> <block pos:start="13:46" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:23">

        <expr_stmt pos:start="15:9" pos:end="15:42"><expr pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:41"><name pos:start="15:15" pos:end="15:38">ff_ac3_validate_metadata</name><argument_list pos:start="15:39" pos:end="15:41">(<argument pos:start="15:40" pos:end="15:40"><expr pos:start="15:40" pos:end="15:40"><name pos:start="15:40" pos:end="15:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:23"><if pos:start="17:9" pos:end="19:23">if <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">ret</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:23"><block_content pos:start="19:13" pos:end="19:23">

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:36"><if pos:start="25:5" pos:end="27:36">if <condition pos:start="25:8" pos:end="25:45">(<expr pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:20">bit_alloc</name><operator pos:start="25:21" pos:end="25:21">.</operator><name pos:start="25:22" pos:end="25:28">sr_code</name></name> <operator pos:start="25:30" pos:end="25:31">==</operator> <literal type="number" pos:start="25:33" pos:end="25:33">1</literal> <operator pos:start="25:35" pos:end="25:36">||</operator> <name pos:start="25:38" pos:end="25:44"><name pos:start="25:38" pos:end="25:38">s</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:44">eac3</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:36"><block_content pos:start="27:9" pos:end="27:36">

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><call pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:32">ff_ac3_adjust_frame_size</name><argument_list pos:start="27:33" pos:end="27:35">(<argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:63"><expr pos:start="31:5" pos:end="31:62"><call pos:start="31:5" pos:end="31:62"><name pos:start="31:5" pos:end="31:22">copy_input_samples</name><argument_list pos:start="31:23" pos:end="31:62">(<argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">s</name></expr></argument>, <argument pos:start="31:27" pos:end="31:61"><expr pos:start="31:27" pos:end="31:61"><operator pos:start="31:27" pos:end="31:27">(</operator><name pos:start="31:28" pos:end="31:37">SampleType</name> <operator pos:start="31:39" pos:end="31:39">*</operator><operator pos:start="31:40" pos:end="31:40">*</operator><operator pos:start="31:41" pos:end="31:41">)</operator><name pos:start="31:42" pos:end="31:61"><name pos:start="31:42" pos:end="31:46">frame</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:61">extended_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><call pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:14">apply_mdct</name><argument_list pos:start="35:15" pos:end="35:17">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="41:30"><if pos:start="39:5" pos:end="41:30">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:22">fixed_point</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:30"><block_content pos:start="41:9" pos:end="41:30">

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><call pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:26">scale_coefficients</name><argument_list pos:start="41:27" pos:end="41:29">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="47:67"><expr pos:start="45:5" pos:end="47:66"><call pos:start="45:5" pos:end="47:66"><name pos:start="45:5" pos:end="45:21">clip_coefficients</name><argument_list pos:start="45:22" pos:end="47:66">(<argument pos:start="45:23" pos:end="45:29"><expr pos:start="45:23" pos:end="45:29"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:29">dsp</name></name></expr></argument>, <argument pos:start="45:32" pos:end="45:56"><expr pos:start="45:32" pos:end="45:56"><name pos:start="45:32" pos:end="45:43"><name pos:start="45:32" pos:end="45:32">s</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:40">blocks</name><index pos:start="45:41" pos:end="45:43">[<expr pos:start="45:42" pos:end="45:42"><literal type="number" pos:start="45:42" pos:end="45:42">0</literal></expr>]</index></name><operator pos:start="45:44" pos:end="45:44">.</operator><name pos:start="45:45" pos:end="45:56"><name pos:start="45:45" pos:end="45:53">mdct_coef</name><index pos:start="45:54" pos:end="45:56">[<expr pos:start="45:55" pos:end="45:55"><literal type="number" pos:start="45:55" pos:end="45:55">1</literal></expr>]</index></name></expr></argument>,

                      <argument pos:start="47:23" pos:end="47:65"><expr pos:start="47:23" pos:end="47:65"><name pos:start="47:23" pos:end="47:35">AC3_MAX_COEFS</name> <operator pos:start="47:37" pos:end="47:37">*</operator> <name pos:start="47:39" pos:end="47:51"><name pos:start="47:39" pos:end="47:39">s</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:51">num_blocks</name></name> <operator pos:start="47:53" pos:end="47:53">*</operator> <name pos:start="47:55" pos:end="47:65"><name pos:start="47:55" pos:end="47:55">s</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:65">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:13">cpl_on</name></name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:30">cpl_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:40"><expr pos:start="53:5" pos:end="53:39"><call pos:start="53:5" pos:end="53:39"><name pos:start="53:5" pos:end="53:36">ff_ac3_compute_coupling_strategy</name><argument_list pos:start="53:37" pos:end="53:39">(<argument pos:start="53:38" pos:end="53:38"><expr pos:start="53:38" pos:end="53:38"><name pos:start="53:38" pos:end="53:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="59:34"><if pos:start="57:5" pos:end="59:34">if <condition pos:start="57:8" pos:end="57:18">(<expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:17">cpl_on</name></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:34"><block_content pos:start="59:9" pos:end="59:34">

        <expr_stmt pos:start="59:9" pos:end="59:34"><expr pos:start="59:9" pos:end="59:33"><call pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:30">apply_channel_coupling</name><argument_list pos:start="59:31" pos:end="59:33">(<argument pos:start="59:32" pos:end="59:32"><expr pos:start="59:32" pos:end="59:32"><name pos:start="59:32" pos:end="59:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><call pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:32">compute_rematrixing_strategy</name><argument_list pos:start="63:33" pos:end="63:35">(<argument pos:start="63:34" pos:end="63:34"><expr pos:start="63:34" pos:end="63:34"><name pos:start="63:34" pos:end="63:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="69:30"><if pos:start="67:5" pos:end="69:30">if <condition pos:start="67:8" pos:end="67:24">(<expr pos:start="67:9" pos:end="67:23"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:23"><name pos:start="67:10" pos:end="67:10">s</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:23">fixed_point</name></name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:30"><block_content pos:start="69:9" pos:end="69:30">

        <expr_stmt pos:start="69:9" pos:end="69:30"><expr pos:start="69:9" pos:end="69:29"><call pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:26">scale_coefficients</name><argument_list pos:start="69:27" pos:end="69:29">(<argument pos:start="69:28" pos:end="69:28"><expr pos:start="69:28" pos:end="69:28"><name pos:start="69:28" pos:end="69:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:32"><expr pos:start="73:5" pos:end="73:31"><call pos:start="73:5" pos:end="73:31"><name pos:start="73:5" pos:end="73:28">ff_ac3_apply_rematrixing</name><argument_list pos:start="73:29" pos:end="73:31">(<argument pos:start="73:30" pos:end="73:30"><expr pos:start="73:30" pos:end="73:30"><name pos:start="73:30" pos:end="73:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:32"><expr pos:start="77:5" pos:end="77:31"><call pos:start="77:5" pos:end="77:31"><name pos:start="77:5" pos:end="77:28">ff_ac3_process_exponents</name><argument_list pos:start="77:29" pos:end="77:31">(<argument pos:start="77:30" pos:end="77:30"><expr pos:start="77:30" pos:end="77:30"><name pos:start="77:30" pos:end="77:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:43"><expr pos:start="81:5" pos:end="81:42"><name pos:start="81:5" pos:end="81:7">ret</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:42"><name pos:start="81:11" pos:end="81:39">ff_ac3_compute_bit_allocation</name><argument_list pos:start="81:40" pos:end="81:42">(<argument pos:start="81:41" pos:end="81:41"><expr pos:start="81:41" pos:end="81:41"><name pos:start="81:41" pos:end="81:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:12">(<expr pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">ret</name></expr>)</condition> <block pos:start="83:14" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:19">

        <expr_stmt pos:start="85:9" pos:end="85:92"><expr pos:start="85:9" pos:end="85:91"><call pos:start="85:9" pos:end="85:91"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:91">(<argument pos:start="85:16" pos:end="85:20"><expr pos:start="85:16" pos:end="85:20"><name pos:start="85:16" pos:end="85:20">avctx</name></expr></argument>, <argument pos:start="85:23" pos:end="85:34"><expr pos:start="85:23" pos:end="85:34"><name pos:start="85:23" pos:end="85:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:37" pos:end="85:90"><expr pos:start="85:37" pos:end="85:90"><literal type="string" pos:start="85:37" pos:end="85:90">"Bit allocation failed. Try increasing the bitrate.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:19">return <expr pos:start="87:16" pos:end="87:18"><name pos:start="87:16" pos:end="87:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:30"><expr pos:start="93:5" pos:end="93:29"><call pos:start="93:5" pos:end="93:29"><name pos:start="93:5" pos:end="93:26">ff_ac3_group_exponents</name><argument_list pos:start="93:27" pos:end="93:29">(<argument pos:start="93:28" pos:end="93:28"><expr pos:start="93:28" pos:end="93:28"><name pos:start="93:28" pos:end="93:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:33"><expr pos:start="97:5" pos:end="97:32"><call pos:start="97:5" pos:end="97:32"><name pos:start="97:5" pos:end="97:29">ff_ac3_quantize_mantissas</name><argument_list pos:start="97:30" pos:end="97:32">(<argument pos:start="97:31" pos:end="97:31"><expr pos:start="97:31" pos:end="97:31"><name pos:start="97:31" pos:end="97:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="103:19"><if pos:start="101:5" pos:end="103:19">if <condition pos:start="101:8" pos:end="101:62">(<expr pos:start="101:9" pos:end="101:61"><operator pos:start="101:9" pos:end="101:9">(</operator><name pos:start="101:10" pos:end="101:12">ret</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <call pos:start="101:16" pos:end="101:60"><name pos:start="101:16" pos:end="101:31">ff_alloc_packet2</name><argument_list pos:start="101:32" pos:end="101:60">(<argument pos:start="101:33" pos:end="101:37"><expr pos:start="101:33" pos:end="101:37"><name pos:start="101:33" pos:end="101:37">avctx</name></expr></argument>, <argument pos:start="101:40" pos:end="101:44"><expr pos:start="101:40" pos:end="101:44"><name pos:start="101:40" pos:end="101:44">avpkt</name></expr></argument>, <argument pos:start="101:47" pos:end="101:59"><expr pos:start="101:47" pos:end="101:59"><name pos:start="101:47" pos:end="101:59"><name pos:start="101:47" pos:end="101:47">s</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:59">frame_size</name></name></expr></argument>)</argument_list></call><operator pos:start="101:61" pos:end="101:61">)</operator></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:19"><block_content pos:start="103:9" pos:end="103:19">

        <return pos:start="103:9" pos:end="103:19">return <expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:40"><expr pos:start="105:5" pos:end="105:39"><call pos:start="105:5" pos:end="105:39"><name pos:start="105:5" pos:end="105:23">ff_ac3_output_frame</name><argument_list pos:start="105:24" pos:end="105:39">(<argument pos:start="105:25" pos:end="105:25"><expr pos:start="105:25" pos:end="105:25"><name pos:start="105:25" pos:end="105:25">s</name></expr></argument>, <argument pos:start="105:28" pos:end="105:38"><expr pos:start="105:28" pos:end="105:38"><name pos:start="105:28" pos:end="105:38"><name pos:start="105:28" pos:end="105:32">avpkt</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:38">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="111:79"><if pos:start="109:5" pos:end="111:79">if <condition pos:start="109:8" pos:end="109:37">(<expr pos:start="109:9" pos:end="109:36"><name pos:start="109:9" pos:end="109:18"><name pos:start="109:9" pos:end="109:13">frame</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:18">pts</name></name> <operator pos:start="109:20" pos:end="109:21">!=</operator> <name pos:start="109:23" pos:end="109:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:79"><block_content pos:start="111:9" pos:end="111:79">

        <expr_stmt pos:start="111:9" pos:end="111:79"><expr pos:start="111:9" pos:end="111:78"><name pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:13">avpkt</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:18">pts</name></name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:31"><name pos:start="111:22" pos:end="111:26">frame</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:31">pts</name></name> <operator pos:start="111:33" pos:end="111:33">-</operator> <call pos:start="111:35" pos:end="111:78"><name pos:start="111:35" pos:end="111:57">ff_samples_to_time_base</name><argument_list pos:start="111:58" pos:end="111:78">(<argument pos:start="111:59" pos:end="111:63"><expr pos:start="111:59" pos:end="111:63"><name pos:start="111:59" pos:end="111:63">avctx</name></expr></argument>, <argument pos:start="111:66" pos:end="111:77"><expr pos:start="111:66" pos:end="111:77"><name pos:start="111:66" pos:end="111:77"><name pos:start="111:66" pos:end="111:70">avctx</name><operator pos:start="111:71" pos:end="111:72">-&gt;</operator><name pos:start="111:73" pos:end="111:77">delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:24"><expr pos:start="115:5" pos:end="115:23"><operator pos:start="115:5" pos:end="115:5">*</operator><name pos:start="115:6" pos:end="115:19">got_packet_ptr</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <literal type="number" pos:start="115:23" pos:end="115:23">1</literal></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
