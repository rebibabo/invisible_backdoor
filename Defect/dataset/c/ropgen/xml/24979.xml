<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24979.c" pos:tabs="8"><function pos:start="1:1" pos:end="78:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">v9fs_remove</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="78:1">{<block_content pos:start="5:5" pos:end="76:35">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">V9fsFidState</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">V9fsPDU</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pdu</name> <init pos:start="13:18" pos:end="13:25">= <expr pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><call pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:17">pdu_unmarshal</name><argument_list pos:start="17:18" pos:end="17:41">(<argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">pdu</name></expr></argument>, <argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">offset</name></expr></argument>, <argument pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><literal type="string" pos:start="17:32" pos:end="17:34">"d"</literal></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><operator pos:start="17:37" pos:end="17:37">&amp;</operator><name pos:start="17:38" pos:end="17:40">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="22:5" pos:end="22:29"><expr pos:start="22:5" pos:end="22:28"><name pos:start="22:5" pos:end="22:8">fidp</name> <operator pos:start="22:10" pos:end="22:10">=</operator> <call pos:start="22:12" pos:end="22:28"><name pos:start="22:12" pos:end="22:18">get_fid</name><argument_list pos:start="22:19" pos:end="22:28">(<argument pos:start="22:20" pos:end="22:22"><expr pos:start="22:20" pos:end="22:22"><name pos:start="22:20" pos:end="22:22">pdu</name></expr></argument>, <argument pos:start="22:25" pos:end="22:27"><expr pos:start="22:25" pos:end="22:27"><name pos:start="22:25" pos:end="22:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="24:5" pos:end="30:5"><if pos:start="24:5" pos:end="30:5">if <condition pos:start="24:8" pos:end="24:21">(<expr pos:start="24:9" pos:end="24:20"><name pos:start="24:9" pos:end="24:12">fidp</name> <operator pos:start="24:14" pos:end="24:15">==</operator> <name pos:start="24:17" pos:end="24:20">NULL</name></expr>)</condition> <block pos:start="24:23" pos:end="30:5">{<block_content pos:start="26:9" pos:end="28:23">

        <expr_stmt pos:start="26:9" pos:end="26:22"><expr pos:start="26:9" pos:end="26:21"><name pos:start="26:9" pos:end="26:11">err</name> <operator pos:start="26:13" pos:end="26:13">=</operator> <operator pos:start="26:15" pos:end="26:15">-</operator><name pos:start="26:16" pos:end="26:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="28:9" pos:end="28:23">goto <name pos:start="28:14" pos:end="28:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="32:5" pos:end="32:59">/* if fs driver is not path based, return EOPNOTSUPP */</comment>

    <if_stmt pos:start="34:5" pos:end="40:5"><if pos:start="34:5" pos:end="40:5">if <condition pos:start="34:8" pos:end="34:48">(<expr pos:start="34:9" pos:end="34:47"><operator pos:start="34:9" pos:end="34:9">!</operator><name pos:start="34:10" pos:end="34:26"><name pos:start="34:10" pos:end="34:12">pdu</name><operator pos:start="34:13" pos:end="34:14">-&gt;</operator><name pos:start="34:15" pos:end="34:15">s</name><operator pos:start="34:16" pos:end="34:17">-&gt;</operator><name pos:start="34:18" pos:end="34:20">ctx</name><operator pos:start="34:21" pos:end="34:21">.</operator><name pos:start="34:22" pos:end="34:26">flags</name></name> <operator pos:start="34:28" pos:end="34:28">&amp;</operator> <name pos:start="34:30" pos:end="34:47">PATHNAME_FSCONTEXT</name></expr>)</condition> <block pos:start="34:50" pos:end="40:5">{<block_content pos:start="36:9" pos:end="38:21">

        <expr_stmt pos:start="36:9" pos:end="36:26"><expr pos:start="36:9" pos:end="36:25"><name pos:start="36:9" pos:end="36:11">err</name> <operator pos:start="36:13" pos:end="36:13">=</operator> <operator pos:start="36:15" pos:end="36:15">-</operator><name pos:start="36:16" pos:end="36:25">EOPNOTSUPP</name></expr>;</expr_stmt>

        <goto pos:start="38:9" pos:end="38:21">goto <name pos:start="38:14" pos:end="38:20">out_err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="42:5" pos:end="48:7">/*

     * IF the file is unlinked, we cannot reopen

     * the file later. So don't reclaim fd

     */</comment>

    <expr_stmt pos:start="50:5" pos:end="50:53"><expr pos:start="50:5" pos:end="50:52"><name pos:start="50:5" pos:end="50:7">err</name> <operator pos:start="50:9" pos:end="50:9">=</operator> <call pos:start="50:11" pos:end="50:52"><name pos:start="50:11" pos:end="50:34">v9fs_mark_fids_unreclaim</name><argument_list pos:start="50:35" pos:end="50:52">(<argument pos:start="50:36" pos:end="50:38"><expr pos:start="50:36" pos:end="50:38"><name pos:start="50:36" pos:end="50:38">pdu</name></expr></argument>, <argument pos:start="50:41" pos:end="50:51"><expr pos:start="50:41" pos:end="50:51"><operator pos:start="50:41" pos:end="50:41">&amp;</operator><name pos:start="50:42" pos:end="50:51"><name pos:start="50:42" pos:end="50:45">fidp</name><operator pos:start="50:46" pos:end="50:47">-&gt;</operator><name pos:start="50:48" pos:end="50:51">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="52:5" pos:end="56:5"><if pos:start="52:5" pos:end="56:5">if <condition pos:start="52:8" pos:end="52:16">(<expr pos:start="52:9" pos:end="52:15"><name pos:start="52:9" pos:end="52:11">err</name> <operator pos:start="52:13" pos:end="52:13">&lt;</operator> <literal type="number" pos:start="52:15" pos:end="52:15">0</literal></expr>)</condition> <block pos:start="52:18" pos:end="56:5">{<block_content pos:start="54:9" pos:end="54:21">

        <goto pos:start="54:9" pos:end="54:21">goto <name pos:start="54:14" pos:end="54:20">out_err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="58:5" pos:end="58:43"><expr pos:start="58:5" pos:end="58:42"><name pos:start="58:5" pos:end="58:7">err</name> <operator pos:start="58:9" pos:end="58:9">=</operator> <call pos:start="58:11" pos:end="58:42"><name pos:start="58:11" pos:end="58:24">v9fs_co_remove</name><argument_list pos:start="58:25" pos:end="58:42">(<argument pos:start="58:26" pos:end="58:28"><expr pos:start="58:26" pos:end="58:28"><name pos:start="58:26" pos:end="58:28">pdu</name></expr></argument>, <argument pos:start="58:31" pos:end="58:41"><expr pos:start="58:31" pos:end="58:41"><operator pos:start="58:31" pos:end="58:31">&amp;</operator><name pos:start="58:32" pos:end="58:41"><name pos:start="58:32" pos:end="58:35">fidp</name><operator pos:start="58:36" pos:end="58:37">-&gt;</operator><name pos:start="58:38" pos:end="58:41">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="60:5" pos:end="64:5"><if pos:start="60:5" pos:end="64:5">if <condition pos:start="60:8" pos:end="60:13">(<expr pos:start="60:9" pos:end="60:12"><operator pos:start="60:9" pos:end="60:9">!</operator><name pos:start="60:10" pos:end="60:12">err</name></expr>)</condition> <block pos:start="60:15" pos:end="64:5">{<block_content pos:start="62:9" pos:end="62:21">

        <expr_stmt pos:start="62:9" pos:end="62:21"><expr pos:start="62:9" pos:end="62:20"><name pos:start="62:9" pos:end="62:11">err</name> <operator pos:start="62:13" pos:end="62:13">=</operator> <name pos:start="62:15" pos:end="62:20">offset</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="66:1" pos:end="66:8"><name pos:start="66:1" pos:end="66:7">out_err</name>:</label>

    <comment type="block" pos:start="68:5" pos:end="68:68">/* For TREMOVE we need to clunk the fid even on failed remove */</comment>

    <expr_stmt pos:start="70:5" pos:end="70:33"><expr pos:start="70:5" pos:end="70:32"><call pos:start="70:5" pos:end="70:32"><name pos:start="70:5" pos:end="70:13">clunk_fid</name><argument_list pos:start="70:14" pos:end="70:32">(<argument pos:start="70:15" pos:end="70:20"><expr pos:start="70:15" pos:end="70:20"><name pos:start="70:15" pos:end="70:20"><name pos:start="70:15" pos:end="70:17">pdu</name><operator pos:start="70:18" pos:end="70:19">-&gt;</operator><name pos:start="70:20" pos:end="70:20">s</name></name></expr></argument>, <argument pos:start="70:23" pos:end="70:31"><expr pos:start="70:23" pos:end="70:31"><name pos:start="70:23" pos:end="70:31"><name pos:start="70:23" pos:end="70:26">fidp</name><operator pos:start="70:27" pos:end="70:28">-&gt;</operator><name pos:start="70:29" pos:end="70:31">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="72:5" pos:end="72:23"><expr pos:start="72:5" pos:end="72:22"><call pos:start="72:5" pos:end="72:22"><name pos:start="72:5" pos:end="72:11">put_fid</name><argument_list pos:start="72:12" pos:end="72:22">(<argument pos:start="72:13" pos:end="72:15"><expr pos:start="72:13" pos:end="72:15"><name pos:start="72:13" pos:end="72:15">pdu</name></expr></argument>, <argument pos:start="72:18" pos:end="72:21"><expr pos:start="72:18" pos:end="72:21"><name pos:start="72:18" pos:end="72:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="74:1" pos:end="74:10"><name pos:start="74:1" pos:end="74:9">out_nofid</name>:</label>

    <expr_stmt pos:start="76:5" pos:end="76:35"><expr pos:start="76:5" pos:end="76:34"><call pos:start="76:5" pos:end="76:34"><name pos:start="76:5" pos:end="76:16">complete_pdu</name><argument_list pos:start="76:17" pos:end="76:34">(<argument pos:start="76:18" pos:end="76:23"><expr pos:start="76:18" pos:end="76:23"><name pos:start="76:18" pos:end="76:23"><name pos:start="76:18" pos:end="76:20">pdu</name><operator pos:start="76:21" pos:end="76:22">-&gt;</operator><name pos:start="76:23" pos:end="76:23">s</name></name></expr></argument>, <argument pos:start="76:26" pos:end="76:28"><expr pos:start="76:26" pos:end="76:28"><name pos:start="76:26" pos:end="76:28">pdu</name></expr></argument>, <argument pos:start="76:31" pos:end="76:33"><expr pos:start="76:31" pos:end="76:33"><name pos:start="76:31" pos:end="76:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
