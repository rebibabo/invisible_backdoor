<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9037.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:33">aio_dispatch_handlers</name><parameter_list pos:start="1:34" pos:end="1:50">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:44">AioContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:20">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AioHandler</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">node</name></decl>, <decl pos:start="5:23" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:17">progress</name> <init pos:start="7:19" pos:end="7:25">= <expr pos:start="7:21" pos:end="7:25"><name pos:start="7:21" pos:end="7:25">false</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="17:7">/*

     * We have to walk very carefully in case aio_set_fd_handler is

     * called while we're walking.

     */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:20">qemu_lockcnt_inc</name><argument_list pos:start="19:21" pos:end="19:37">(<argument pos:start="19:22" pos:end="19:36"><expr pos:start="19:22" pos:end="19:36"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:36"><name pos:start="19:23" pos:end="19:25">ctx</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:36">list_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="23:5" pos:end="23:63"><name pos:start="23:5" pos:end="23:26">QLIST_FOREACH_SAFE_RCU</name><argument_list pos:start="23:27" pos:end="23:63">(<argument pos:start="23:28" pos:end="23:31">node</argument>, <argument pos:start="23:34" pos:end="23:51">&amp;ctx-&gt;aio_handlers</argument>, <argument pos:start="23:54" pos:end="23:57">node</argument>, <argument pos:start="23:60" pos:end="23:62">tmp</argument>)</argument_list></macro> <block pos:start="23:65" pos:end="87:5">{<block_content pos:start="25:9" pos:end="85:9">

        <decl_stmt pos:start="25:9" pos:end="25:20"><decl pos:start="25:9" pos:end="25:19"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:19">revents</name></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:15">revents</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:35"><name pos:start="29:19" pos:end="29:22">node</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:27">pfd</name><operator pos:start="29:28" pos:end="29:28">.</operator><name pos:start="29:29" pos:end="29:35">revents</name></name> <operator pos:start="29:37" pos:end="29:37">&amp;</operator> <name pos:start="29:39" pos:end="29:54"><name pos:start="29:39" pos:end="29:42">node</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:47">pfd</name><operator pos:start="29:48" pos:end="29:48">.</operator><name pos:start="29:49" pos:end="29:54">events</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:12">node</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:17">pfd</name><operator pos:start="31:18" pos:end="31:18">.</operator><name pos:start="31:19" pos:end="31:25">revents</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="35:9" pos:end="55:9"><if pos:start="35:9" pos:end="55:9">if <condition pos:start="35:12" pos:end="41:26">(<expr pos:start="35:13" pos:end="41:25"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:26"><name pos:start="35:14" pos:end="35:17">node</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:26">deleted</name></name> <operator pos:start="35:28" pos:end="35:29">&amp;&amp;</operator>

            <operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:20">revents</name> <operator pos:start="37:22" pos:end="37:22">&amp;</operator> <operator pos:start="37:24" pos:end="37:24">(</operator><name pos:start="37:25" pos:end="37:31">G_IO_IN</name> <operator pos:start="37:33" pos:end="37:33">|</operator> <name pos:start="37:35" pos:end="37:42">G_IO_HUP</name> <operator pos:start="37:44" pos:end="37:44">|</operator> <name pos:start="37:46" pos:end="37:53">G_IO_ERR</name><operator pos:start="37:54" pos:end="37:54">)</operator><operator pos:start="37:55" pos:end="37:55">)</operator> <operator pos:start="37:57" pos:end="37:58">&amp;&amp;</operator>

            <call pos:start="39:13" pos:end="39:50"><name pos:start="39:13" pos:end="39:26">aio_node_check</name><argument_list pos:start="39:27" pos:end="39:50">(<argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">ctx</name></expr></argument>, <argument pos:start="39:33" pos:end="39:49"><expr pos:start="39:33" pos:end="39:49"><name pos:start="39:33" pos:end="39:49"><name pos:start="39:33" pos:end="39:36">node</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:49">is_external</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:52" pos:end="39:53">&amp;&amp;</operator>

            <name pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:16">node</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:25">io_read</name></name></expr>)</condition> <block pos:start="41:28" pos:end="55:9">{<block_content pos:start="43:13" pos:end="53:13">

            <expr_stmt pos:start="43:13" pos:end="43:40"><expr pos:start="43:13" pos:end="43:39"><call pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:16">node</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:25">io_read</name></name><argument_list pos:start="43:26" pos:end="43:39">(<argument pos:start="43:27" pos:end="43:38"><expr pos:start="43:27" pos:end="43:38"><name pos:start="43:27" pos:end="43:38"><name pos:start="43:27" pos:end="43:30">node</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:38">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="47:13" pos:end="47:57">/* aio_notify() does not count as progress */</comment>

            <if_stmt pos:start="49:13" pos:end="53:13"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:47">(<expr pos:start="49:17" pos:end="49:46"><name pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:20">node</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:28">opaque</name></name> <operator pos:start="49:30" pos:end="49:31">!=</operator> <operator pos:start="49:33" pos:end="49:33">&amp;</operator><name pos:start="49:34" pos:end="49:46"><name pos:start="49:34" pos:end="49:36">ctx</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:46">notifier</name></name></expr>)</condition> <block pos:start="49:49" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:32">

                <expr_stmt pos:start="51:17" pos:end="51:32"><expr pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:24">progress</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:31">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="69:9"><if pos:start="57:9" pos:end="69:9">if <condition pos:start="57:12" pos:end="63:27">(<expr pos:start="57:13" pos:end="63:26"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:26"><name pos:start="57:14" pos:end="57:17">node</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:26">deleted</name></name> <operator pos:start="57:28" pos:end="57:29">&amp;&amp;</operator>

            <operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:20">revents</name> <operator pos:start="59:22" pos:end="59:22">&amp;</operator> <operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:32">G_IO_OUT</name> <operator pos:start="59:34" pos:end="59:34">|</operator> <name pos:start="59:36" pos:end="59:43">G_IO_ERR</name><operator pos:start="59:44" pos:end="59:44">)</operator><operator pos:start="59:45" pos:end="59:45">)</operator> <operator pos:start="59:47" pos:end="59:48">&amp;&amp;</operator>

            <call pos:start="61:13" pos:end="61:50"><name pos:start="61:13" pos:end="61:26">aio_node_check</name><argument_list pos:start="61:27" pos:end="61:50">(<argument pos:start="61:28" pos:end="61:30"><expr pos:start="61:28" pos:end="61:30"><name pos:start="61:28" pos:end="61:30">ctx</name></expr></argument>, <argument pos:start="61:33" pos:end="61:49"><expr pos:start="61:33" pos:end="61:49"><name pos:start="61:33" pos:end="61:49"><name pos:start="61:33" pos:end="61:36">node</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:49">is_external</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:52" pos:end="61:53">&amp;&amp;</operator>

            <name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:16">node</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:26">io_write</name></name></expr>)</condition> <block pos:start="63:29" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:28">

            <expr_stmt pos:start="65:13" pos:end="65:41"><expr pos:start="65:13" pos:end="65:40"><call pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:16">node</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:26">io_write</name></name><argument_list pos:start="65:27" pos:end="65:40">(<argument pos:start="65:28" pos:end="65:39"><expr pos:start="65:28" pos:end="65:39"><name pos:start="65:28" pos:end="65:39"><name pos:start="65:28" pos:end="65:31">node</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:39">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:28"><expr pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:20">progress</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:27">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="85:9"><if pos:start="73:9" pos:end="85:9">if <condition pos:start="73:12" pos:end="73:26">(<expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:16">node</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:25">deleted</name></name></expr>)</condition> <block pos:start="73:28" pos:end="85:9">{<block_content pos:start="75:13" pos:end="83:13">

            <if_stmt pos:start="75:13" pos:end="83:13"><if pos:start="75:13" pos:end="83:13">if <condition pos:start="75:16" pos:end="75:58">(<expr pos:start="75:17" pos:end="75:57"><call pos:start="75:17" pos:end="75:57"><name pos:start="75:17" pos:end="75:40">qemu_lockcnt_dec_if_lock</name><argument_list pos:start="75:41" pos:end="75:57">(<argument pos:start="75:42" pos:end="75:56"><expr pos:start="75:42" pos:end="75:56"><operator pos:start="75:42" pos:end="75:42">&amp;</operator><name pos:start="75:43" pos:end="75:56"><name pos:start="75:43" pos:end="75:45">ctx</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:56">list_lock</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:60" pos:end="83:13">{<block_content pos:start="77:17" pos:end="81:61">

                <expr_stmt pos:start="77:17" pos:end="77:41"><expr pos:start="77:17" pos:end="77:40"><call pos:start="77:17" pos:end="77:40"><name pos:start="77:17" pos:end="77:28">QLIST_REMOVE</name><argument_list pos:start="77:29" pos:end="77:40">(<argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:33">node</name></expr></argument>, <argument pos:start="77:36" pos:end="77:39"><expr pos:start="77:36" pos:end="77:39"><name pos:start="77:36" pos:end="77:39">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:29"><expr pos:start="79:17" pos:end="79:28"><call pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:22">g_free</name><argument_list pos:start="79:23" pos:end="79:28">(<argument pos:start="79:24" pos:end="79:27"><expr pos:start="79:24" pos:end="79:27"><name pos:start="79:24" pos:end="79:27">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:61"><expr pos:start="81:17" pos:end="81:60"><call pos:start="81:17" pos:end="81:60"><name pos:start="81:17" pos:end="81:43">qemu_lockcnt_inc_and_unlock</name><argument_list pos:start="81:44" pos:end="81:60">(<argument pos:start="81:45" pos:end="81:59"><expr pos:start="81:45" pos:end="81:59"><operator pos:start="81:45" pos:end="81:45">&amp;</operator><name pos:start="81:46" pos:end="81:59"><name pos:start="81:46" pos:end="81:48">ctx</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:59">list_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="91:5" pos:end="91:38"><expr pos:start="91:5" pos:end="91:37"><call pos:start="91:5" pos:end="91:37"><name pos:start="91:5" pos:end="91:20">qemu_lockcnt_dec</name><argument_list pos:start="91:21" pos:end="91:37">(<argument pos:start="91:22" pos:end="91:36"><expr pos:start="91:22" pos:end="91:36"><operator pos:start="91:22" pos:end="91:22">&amp;</operator><name pos:start="91:23" pos:end="91:36"><name pos:start="91:23" pos:end="91:25">ctx</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:36">list_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:20">return <expr pos:start="93:12" pos:end="93:19"><name pos:start="93:12" pos:end="93:19">progress</name></expr>;</return>

</block_content>}</block></function>
</unit>
