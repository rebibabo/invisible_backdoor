<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11499.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">write_codec_attr</name><parameter_list pos:start="1:29" pos:end="1:61">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">AVStream</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">st</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:56">VariantStream</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">vs</name></decl></parameter>)</parameter_list> <block pos:start="1:63" pos:end="87:1">{<block_content pos:start="3:5" pos:end="85:11">

    <decl_stmt pos:start="3:5" pos:end="3:46"><decl pos:start="3:5" pos:end="3:45"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:20">codec_strlen</name> <init pos:start="3:22" pos:end="3:45">= <expr pos:start="3:24" pos:end="3:45"><call pos:start="3:24" pos:end="3:45"><name pos:start="3:24" pos:end="3:29">strlen</name><argument_list pos:start="3:30" pos:end="3:45">(<argument pos:start="3:31" pos:end="3:44"><expr pos:start="3:31" pos:end="3:44"><name pos:start="3:31" pos:end="3:44"><name pos:start="3:31" pos:end="3:32">vs</name><operator pos:start="3:33" pos:end="3:34">-&gt;</operator><name pos:start="3:35" pos:end="3:44">codec_attr</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:13">attr</name><index pos:start="5:14" pos:end="5:17">[<expr pos:start="5:15" pos:end="5:16"><literal type="number" pos:start="5:15" pos:end="5:16">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:15"><if pos:start="9:5" pos:end="11:15">if <condition pos:start="9:8" pos:end="9:58">(<expr pos:start="9:9" pos:end="9:57"><name pos:start="9:9" pos:end="9:32"><name pos:start="9:9" pos:end="9:10">st</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:20">codecpar</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:32">codec_type</name></name> <operator pos:start="9:34" pos:end="9:35">==</operator> <name pos:start="9:37" pos:end="9:57">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:15"><block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:63">(<expr pos:start="13:9" pos:end="13:62"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:10">vs</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:23">attr_status</name></name> <operator pos:start="13:25" pos:end="13:26">==</operator> <name pos:start="13:28" pos:end="13:62">CODEC_ATTRIBUTE_WILL_NOT_BE_WRITTEN</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="61:5"><if pos:start="19:5" pos:end="35:5">if <condition pos:start="19:8" pos:end="19:51">(<expr pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:10">st</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:20">codecpar</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:30">codec_id</name></name> <operator pos:start="19:32" pos:end="19:33">==</operator> <name pos:start="19:35" pos:end="19:50">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="19:53" pos:end="35:5">{<block_content pos:start="21:9" pos:end="33:9">

        <decl_stmt pos:start="21:9" pos:end="21:48"><decl pos:start="21:9" pos:end="21:47"><type pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:15">uint8_t</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:21">data</name> <init pos:start="21:23" pos:end="21:47">= <expr pos:start="21:25" pos:end="21:47"><name pos:start="21:25" pos:end="21:47"><name pos:start="21:25" pos:end="21:26">st</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:36">codecpar</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:47">extradata</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="33:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:88">(<expr pos:start="23:13" pos:end="23:87"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:20"><name pos:start="23:14" pos:end="23:17">data</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>]</index></name> <operator pos:start="23:22" pos:end="23:22">|</operator> <name pos:start="23:24" pos:end="23:30"><name pos:start="23:24" pos:end="23:27">data</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr>]</index></name> <operator pos:start="23:32" pos:end="23:32">|</operator> <name pos:start="23:34" pos:end="23:40"><name pos:start="23:34" pos:end="23:37">data</name><index pos:start="23:38" pos:end="23:40">[<expr pos:start="23:39" pos:end="23:39"><literal type="number" pos:start="23:39" pos:end="23:39">2</literal></expr>]</index></name><operator pos:start="23:41" pos:end="23:41">)</operator> <operator pos:start="23:43" pos:end="23:44">==</operator> <literal type="number" pos:start="23:46" pos:end="23:46">0</literal> <operator pos:start="23:48" pos:end="23:49">&amp;&amp;</operator> <name pos:start="23:51" pos:end="23:57"><name pos:start="23:51" pos:end="23:54">data</name><index pos:start="23:55" pos:end="23:57">[<expr pos:start="23:56" pos:end="23:56"><literal type="number" pos:start="23:56" pos:end="23:56">3</literal></expr>]</index></name> <operator pos:start="23:59" pos:end="23:60">==</operator> <literal type="number" pos:start="23:62" pos:end="23:62">1</literal> <operator pos:start="23:64" pos:end="23:65">&amp;&amp;</operator> <operator pos:start="23:67" pos:end="23:67">(</operator><name pos:start="23:68" pos:end="23:74"><name pos:start="23:68" pos:end="23:71">data</name><index pos:start="23:72" pos:end="23:74">[<expr pos:start="23:73" pos:end="23:73"><literal type="number" pos:start="23:73" pos:end="23:73">4</literal></expr>]</index></name> <operator pos:start="23:76" pos:end="23:76">&amp;</operator> <literal type="number" pos:start="23:78" pos:end="23:81">0x1F</literal><operator pos:start="23:82" pos:end="23:82">)</operator> <operator pos:start="23:84" pos:end="23:85">==</operator> <literal type="number" pos:start="23:87" pos:end="23:87">7</literal></expr>)</condition> <block pos:start="23:90" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:69">

            <expr_stmt pos:start="25:13" pos:end="27:69"><expr pos:start="25:13" pos:end="27:68"><call pos:start="25:13" pos:end="27:68"><name pos:start="25:13" pos:end="25:20">snprintf</name><argument_list pos:start="25:21" pos:end="27:68">(<argument pos:start="25:22" pos:end="25:25"><expr pos:start="25:22" pos:end="25:25"><name pos:start="25:22" pos:end="25:25">attr</name></expr></argument>, <argument pos:start="25:28" pos:end="25:39"><expr pos:start="25:28" pos:end="25:39"><sizeof pos:start="25:28" pos:end="25:39">sizeof<argument_list pos:start="25:34" pos:end="25:39">(<argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><name pos:start="25:35" pos:end="25:38">attr</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="27:22" pos:end="27:40"><expr pos:start="27:22" pos:end="27:40"><literal type="string" pos:start="27:22" pos:end="27:40">"avc1.%02x%02x%02x"</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:49"><expr pos:start="27:43" pos:end="27:49"><name pos:start="27:43" pos:end="27:49"><name pos:start="27:43" pos:end="27:46">data</name><index pos:start="27:47" pos:end="27:49">[<expr pos:start="27:48" pos:end="27:48"><literal type="number" pos:start="27:48" pos:end="27:48">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:52" pos:end="27:58"><expr pos:start="27:52" pos:end="27:58"><name pos:start="27:52" pos:end="27:58"><name pos:start="27:52" pos:end="27:55">data</name><index pos:start="27:56" pos:end="27:58">[<expr pos:start="27:57" pos:end="27:57"><literal type="number" pos:start="27:57" pos:end="27:57">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:61" pos:end="27:67"><expr pos:start="27:61" pos:end="27:67"><name pos:start="27:61" pos:end="27:67"><name pos:start="27:61" pos:end="27:64">data</name><index pos:start="27:65" pos:end="27:67">[<expr pos:start="27:66" pos:end="27:66"><literal type="number" pos:start="27:66" pos:end="27:66">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="33:9">else <block pos:start="29:16" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:22">

            <goto pos:start="31:13" pos:end="31:22">goto <name pos:start="31:18" pos:end="31:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="39:5">else if <condition pos:start="35:15" pos:end="35:57">(<expr pos:start="35:16" pos:end="35:56"><name pos:start="35:16" pos:end="35:37"><name pos:start="35:16" pos:end="35:17">st</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:27">codecpar</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:37">codec_id</name></name> <operator pos:start="35:39" pos:end="35:40">==</operator> <name pos:start="35:42" pos:end="35:56">AV_CODEC_ID_MP2</name></expr>)</condition> <block pos:start="35:59" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:51">

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><call pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:16">snprintf</name><argument_list pos:start="37:17" pos:end="37:50">(<argument pos:start="37:18" pos:end="37:21"><expr pos:start="37:18" pos:end="37:21"><name pos:start="37:18" pos:end="37:21">attr</name></expr></argument>, <argument pos:start="37:24" pos:end="37:35"><expr pos:start="37:24" pos:end="37:35"><sizeof pos:start="37:24" pos:end="37:35">sizeof<argument_list pos:start="37:30" pos:end="37:35">(<argument pos:start="37:31" pos:end="37:34"><expr pos:start="37:31" pos:end="37:34"><name pos:start="37:31" pos:end="37:34">attr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="37:38" pos:end="37:49"><expr pos:start="37:38" pos:end="37:49"><literal type="string" pos:start="37:38" pos:end="37:49">"mp4a.40.33"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="43:5">else if <condition pos:start="39:15" pos:end="39:57">(<expr pos:start="39:16" pos:end="39:56"><name pos:start="39:16" pos:end="39:37"><name pos:start="39:16" pos:end="39:17">st</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:27">codecpar</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:37">codec_id</name></name> <operator pos:start="39:39" pos:end="39:40">==</operator> <name pos:start="39:42" pos:end="39:56">AV_CODEC_ID_MP3</name></expr>)</condition> <block pos:start="39:59" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:51">

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><call pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:16">snprintf</name><argument_list pos:start="41:17" pos:end="41:50">(<argument pos:start="41:18" pos:end="41:21"><expr pos:start="41:18" pos:end="41:21"><name pos:start="41:18" pos:end="41:21">attr</name></expr></argument>, <argument pos:start="41:24" pos:end="41:35"><expr pos:start="41:24" pos:end="41:35"><sizeof pos:start="41:24" pos:end="41:35">sizeof<argument_list pos:start="41:30" pos:end="41:35">(<argument pos:start="41:31" pos:end="41:34"><expr pos:start="41:31" pos:end="41:34"><name pos:start="41:31" pos:end="41:34">attr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:38" pos:end="41:49"><expr pos:start="41:38" pos:end="41:49"><literal type="string" pos:start="41:38" pos:end="41:49">"mp4a.40.34"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="49:5">else if <condition pos:start="43:15" pos:end="43:57">(<expr pos:start="43:16" pos:end="43:56"><name pos:start="43:16" pos:end="43:37"><name pos:start="43:16" pos:end="43:17">st</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:27">codecpar</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:37">codec_id</name></name> <operator pos:start="43:39" pos:end="43:40">==</operator> <name pos:start="43:42" pos:end="43:56">AV_CODEC_ID_AAC</name></expr>)</condition> <block pos:start="43:59" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:50">

        <comment type="block" pos:start="45:9" pos:end="45:98">/* TODO : For HE-AAC, HE-AACv2, the last digit needs to be set to 5 and 29 respectively */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><call pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:16">snprintf</name><argument_list pos:start="47:17" pos:end="47:49">(<argument pos:start="47:18" pos:end="47:21"><expr pos:start="47:18" pos:end="47:21"><name pos:start="47:18" pos:end="47:21">attr</name></expr></argument>, <argument pos:start="47:24" pos:end="47:35"><expr pos:start="47:24" pos:end="47:35"><sizeof pos:start="47:24" pos:end="47:35">sizeof<argument_list pos:start="47:30" pos:end="47:35">(<argument pos:start="47:31" pos:end="47:34"><expr pos:start="47:31" pos:end="47:34"><name pos:start="47:31" pos:end="47:34">attr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="47:38" pos:end="47:48"><expr pos:start="47:38" pos:end="47:48"><literal type="string" pos:start="47:38" pos:end="47:48">"mp4a.40.2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="53:5">else if <condition pos:start="49:15" pos:end="49:57">(<expr pos:start="49:16" pos:end="49:56"><name pos:start="49:16" pos:end="49:37"><name pos:start="49:16" pos:end="49:17">st</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:27">codecpar</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:37">codec_id</name></name> <operator pos:start="49:39" pos:end="49:40">==</operator> <name pos:start="49:42" pos:end="49:56">AV_CODEC_ID_AC3</name></expr>)</condition> <block pos:start="49:59" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:45">

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><call pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:16">snprintf</name><argument_list pos:start="51:17" pos:end="51:44">(<argument pos:start="51:18" pos:end="51:21"><expr pos:start="51:18" pos:end="51:21"><name pos:start="51:18" pos:end="51:21">attr</name></expr></argument>, <argument pos:start="51:24" pos:end="51:35"><expr pos:start="51:24" pos:end="51:35"><sizeof pos:start="51:24" pos:end="51:35">sizeof<argument_list pos:start="51:30" pos:end="51:35">(<argument pos:start="51:31" pos:end="51:34"><expr pos:start="51:31" pos:end="51:34"><name pos:start="51:31" pos:end="51:34">attr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="51:38" pos:end="51:43"><expr pos:start="51:38" pos:end="51:43"><literal type="string" pos:start="51:38" pos:end="51:43">"ac-3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="57:5">else if <condition pos:start="53:15" pos:end="53:58">(<expr pos:start="53:16" pos:end="53:57"><name pos:start="53:16" pos:end="53:37"><name pos:start="53:16" pos:end="53:17">st</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:27">codecpar</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:37">codec_id</name></name> <operator pos:start="53:39" pos:end="53:40">==</operator> <name pos:start="53:42" pos:end="53:57">AV_CODEC_ID_EAC3</name></expr>)</condition> <block pos:start="53:60" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:45">

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><call pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:16">snprintf</name><argument_list pos:start="55:17" pos:end="55:44">(<argument pos:start="55:18" pos:end="55:21"><expr pos:start="55:18" pos:end="55:21"><name pos:start="55:18" pos:end="55:21">attr</name></expr></argument>, <argument pos:start="55:24" pos:end="55:35"><expr pos:start="55:24" pos:end="55:35"><sizeof pos:start="55:24" pos:end="55:35">sizeof<argument_list pos:start="55:30" pos:end="55:35">(<argument pos:start="55:31" pos:end="55:34"><expr pos:start="55:31" pos:end="55:34"><name pos:start="55:31" pos:end="55:34">attr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:38" pos:end="55:43"><expr pos:start="55:38" pos:end="55:43"><literal type="string" pos:start="55:38" pos:end="55:43">"ec-3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="61:5">else <block pos:start="57:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:18">

        <goto pos:start="59:9" pos:end="59:18">goto <name pos:start="59:14" pos:end="59:17">fail</name>;</goto>

    </block_content>}</block></else></if_stmt>

    <comment type="line" pos:start="63:5" pos:end="63:52">// Don't write the same attribute multiple times</comment>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:42">(<expr pos:start="65:9" pos:end="65:41"><operator pos:start="65:9" pos:end="65:9">!</operator><call pos:start="65:10" pos:end="65:41"><name pos:start="65:10" pos:end="65:19">av_stristr</name><argument_list pos:start="65:20" pos:end="65:41">(<argument pos:start="65:21" pos:end="65:34"><expr pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:22">vs</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:34">codec_attr</name></name></expr></argument>, <argument pos:start="65:37" pos:end="65:40"><expr pos:start="65:37" pos:end="65:40"><name pos:start="65:37" pos:end="65:40">attr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:44" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:56">

        <expr_stmt pos:start="67:9" pos:end="71:56"><expr pos:start="67:9" pos:end="71:55"><call pos:start="67:9" pos:end="71:55"><name pos:start="67:9" pos:end="67:16">snprintf</name><argument_list pos:start="67:17" pos:end="71:55">(<argument pos:start="67:18" pos:end="67:46"><expr pos:start="67:18" pos:end="67:46"><name pos:start="67:18" pos:end="67:31"><name pos:start="67:18" pos:end="67:19">vs</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:31">codec_attr</name></name> <operator pos:start="67:33" pos:end="67:33">+</operator> <name pos:start="67:35" pos:end="67:46">codec_strlen</name></expr></argument>,

                 <argument pos:start="69:18" pos:end="69:54"><expr pos:start="69:18" pos:end="69:54"><sizeof pos:start="69:18" pos:end="69:39">sizeof<argument_list pos:start="69:24" pos:end="69:39">(<argument pos:start="69:25" pos:end="69:38"><expr pos:start="69:25" pos:end="69:38"><name pos:start="69:25" pos:end="69:38"><name pos:start="69:25" pos:end="69:26">vs</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:38">codec_attr</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="69:41" pos:end="69:41">-</operator> <name pos:start="69:43" pos:end="69:54">codec_strlen</name></expr></argument>,

                 <argument pos:start="71:18" pos:end="71:23"><expr pos:start="71:18" pos:end="71:23"><literal type="string" pos:start="71:18" pos:end="71:23">"%s%s"</literal></expr></argument>, <argument pos:start="71:26" pos:end="71:48"><expr pos:start="71:26" pos:end="71:48"><ternary pos:start="71:26" pos:end="71:48"><condition pos:start="71:26" pos:end="71:39"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">codec_strlen</name></expr> ?</condition><then pos:start="71:41" pos:end="71:43"> <expr pos:start="71:41" pos:end="71:43"><literal type="string" pos:start="71:41" pos:end="71:43">","</literal></expr> </then><else pos:start="71:45" pos:end="71:48">: <expr pos:start="71:47" pos:end="71:48"><literal type="string" pos:start="71:47" pos:end="71:48">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="71:51" pos:end="71:54"><expr pos:start="71:51" pos:end="71:54"><name pos:start="71:51" pos:end="71:54">attr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="75:5" pos:end="75:11">return;</return>



<label pos:start="79:1" pos:end="79:5"><name pos:start="79:1" pos:end="79:4">fail</name>:</label>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:6">vs</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:18">codec_attr</name><index pos:start="81:19" pos:end="81:21">[<expr pos:start="81:20" pos:end="81:20"><literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>]</index></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="char" pos:start="81:25" pos:end="81:28">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:58"><expr pos:start="83:5" pos:end="83:57"><name pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:6">vs</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:19">attr_status</name></name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:57">CODEC_ATTRIBUTE_WILL_NOT_BE_WRITTEN</name></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:11">return;</return>

</block_content>}</block></function>
</unit>
