<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5735.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">load_input_picture</name><parameter_list pos:start="1:30" pos:end="1:66">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:44">MpegEncContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:56">AVFrame</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:65">pic_arg</name></decl></parameter>)</parameter_list><block pos:start="1:67" pos:end="209:1">{<block_content pos:start="3:5" pos:end="207:13">

    <decl_stmt pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:21"><type pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:11">AVFrame</name> <modifier pos:start="3:13" pos:end="3:13">*</modifier></type><name pos:start="3:14" pos:end="3:16">pic</name><init pos:start="3:17" pos:end="3:21">=<expr pos:start="3:18" pos:end="3:21"><name pos:start="3:18" pos:end="3:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:28">encoding_delay</name><init pos:start="9:29" pos:end="9:45">= <expr pos:start="9:31" pos:end="9:45"><name pos:start="9:31" pos:end="9:45"><name pos:start="9:31" pos:end="9:31">s</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:45">max_b_frames</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">direct</name><init pos:start="11:15" pos:end="11:16">=<expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="63:5"><if pos:start="15:5" pos:end="63:5">if<condition pos:start="15:7" pos:end="15:15">(<expr pos:start="15:8" pos:end="15:14"><name pos:start="15:8" pos:end="15:14">pic_arg</name></expr>)</condition><block pos:start="15:16" pos:end="63:5">{<block_content pos:start="17:9" pos:end="61:9">

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:11">pts</name><operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:20">pic_arg</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:25">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:15">pic_arg</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:39">display_picture_number</name></name><operator pos:start="19:40" pos:end="19:40">=</operator> <name pos:start="19:42" pos:end="19:64"><name pos:start="19:42" pos:end="19:42">s</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:64">input_picture_number</name></name><operator pos:start="19:65" pos:end="19:66">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="23:9" pos:end="61:9"><if pos:start="23:9" pos:end="45:9">if<condition pos:start="23:11" pos:end="23:33">(<expr pos:start="23:12" pos:end="23:32"><name pos:start="23:12" pos:end="23:14">pts</name> <operator pos:start="23:16" pos:end="23:17">!=</operator> <name pos:start="23:19" pos:end="23:32">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="23:34" pos:end="45:9">{<block_content pos:start="25:13" pos:end="43:39">

            <if_stmt pos:start="25:13" pos:end="41:13"><if pos:start="25:13" pos:end="41:13">if<condition pos:start="25:15" pos:end="25:55">(<expr pos:start="25:16" pos:end="25:54"><name pos:start="25:16" pos:end="25:36"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:36">user_specified_pts</name></name> <operator pos:start="25:38" pos:end="25:39">!=</operator> <name pos:start="25:41" pos:end="25:54">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="25:56" pos:end="41:13">{<block_content pos:start="27:17" pos:end="39:17">

                <decl_stmt pos:start="27:17" pos:end="27:34"><decl pos:start="27:17" pos:end="27:33"><type pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:23">int64_t</name></type> <name pos:start="27:25" pos:end="27:28">time</name><init pos:start="27:29" pos:end="27:33">= <expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">pts</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="29:17" pos:end="29:52"><decl pos:start="29:17" pos:end="29:51"><type pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:23">int64_t</name></type> <name pos:start="29:25" pos:end="29:28">last</name><init pos:start="29:29" pos:end="29:51">= <expr pos:start="29:31" pos:end="29:51"><name pos:start="29:31" pos:end="29:51"><name pos:start="29:31" pos:end="29:31">s</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:51">user_specified_pts</name></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="33:17" pos:end="39:17"><if pos:start="33:17" pos:end="39:17">if<condition pos:start="33:19" pos:end="33:32">(<expr pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:23">time</name> <operator pos:start="33:25" pos:end="33:26">&lt;=</operator> <name pos:start="33:28" pos:end="33:31">last</name></expr>)</condition><block pos:start="33:33" pos:end="39:17">{<block_content pos:start="35:21" pos:end="37:30">

                    <expr_stmt pos:start="35:21" pos:end="35:135"><expr pos:start="35:21" pos:end="35:134"><call pos:start="35:21" pos:end="35:134"><name pos:start="35:21" pos:end="35:26">av_log</name><argument_list pos:start="35:27" pos:end="35:134">(<argument pos:start="35:28" pos:end="35:35"><expr pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:35">avctx</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:49"><expr pos:start="35:38" pos:end="35:49"><name pos:start="35:38" pos:end="35:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:52" pos:end="35:105"><expr pos:start="35:52" pos:end="35:105"><literal type="string" pos:start="35:52" pos:end="35:79">"Error, Invalid timestamp=%"</literal><name pos:start="35:80" pos:end="35:85">PRId64</name><literal type="string" pos:start="35:86" pos:end="35:95">", last=%"</literal><name pos:start="35:96" pos:end="35:101">PRId64</name><literal type="string" pos:start="35:102" pos:end="35:105">"\n"</literal></expr></argument>, <argument pos:start="35:108" pos:end="35:110"><expr pos:start="35:108" pos:end="35:110"><name pos:start="35:108" pos:end="35:110">pts</name></expr></argument>, <argument pos:start="35:113" pos:end="35:133"><expr pos:start="35:113" pos:end="35:133"><name pos:start="35:113" pos:end="35:133"><name pos:start="35:113" pos:end="35:113">s</name><operator pos:start="35:114" pos:end="35:115">-&gt;</operator><name pos:start="35:116" pos:end="35:133">user_specified_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="37:21" pos:end="37:30">return <expr pos:start="37:28" pos:end="37:29"><operator pos:start="37:28" pos:end="37:28">-</operator><literal type="number" pos:start="37:29" pos:end="37:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:39"><expr pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:33">user_specified_pts</name></name><operator pos:start="43:34" pos:end="43:34">=</operator> <name pos:start="43:36" pos:end="43:38">pts</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="45:10" pos:end="61:9">else<block pos:start="45:14" pos:end="61:9">{<block_content pos:start="47:13" pos:end="59:13">

            <if_stmt pos:start="47:13" pos:end="59:13"><if pos:start="47:13" pos:end="55:13">if<condition pos:start="47:15" pos:end="47:55">(<expr pos:start="47:16" pos:end="47:54"><name pos:start="47:16" pos:end="47:36"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:36">user_specified_pts</name></name> <operator pos:start="47:38" pos:end="47:39">!=</operator> <name pos:start="47:41" pos:end="47:54">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="47:56" pos:end="55:13">{<block_content pos:start="49:17" pos:end="53:107">

                <expr_stmt pos:start="49:17" pos:end="51:47"><expr pos:start="49:17" pos:end="51:46"><name pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:17">s</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:37">user_specified_pts</name></name><operator pos:start="49:38" pos:end="49:38">=</operator>

                <name pos:start="51:17" pos:end="51:19">pts</name><operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:42"><name pos:start="51:22" pos:end="51:22">s</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:42">user_specified_pts</name></name> <operator pos:start="51:44" pos:end="51:44">+</operator> <literal type="number" pos:start="51:46" pos:end="51:46">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:107"><expr pos:start="53:17" pos:end="53:106"><call pos:start="53:17" pos:end="53:106"><name pos:start="53:17" pos:end="53:22">av_log</name><argument_list pos:start="53:23" pos:end="53:106">(<argument pos:start="53:24" pos:end="53:31"><expr pos:start="53:24" pos:end="53:31"><name pos:start="53:24" pos:end="53:31"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:31">avctx</name></name></expr></argument>, <argument pos:start="53:34" pos:end="53:44"><expr pos:start="53:34" pos:end="53:44"><name pos:start="53:34" pos:end="53:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="53:47" pos:end="53:100"><expr pos:start="53:47" pos:end="53:100"><literal type="string" pos:start="53:47" pos:end="53:89">"Warning: AVFrame.pts=? trying to guess (%"</literal><name pos:start="53:90" pos:end="53:95">PRId64</name><literal type="string" pos:start="53:96" pos:end="53:100">")\n"</literal></expr></argument>, <argument pos:start="53:103" pos:end="53:105"><expr pos:start="53:103" pos:end="53:105"><name pos:start="53:103" pos:end="53:105">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="55:14" pos:end="59:13">else<block pos:start="55:18" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:53">

                <expr_stmt pos:start="57:17" pos:end="57:53"><expr pos:start="57:17" pos:end="57:52"><name pos:start="57:17" pos:end="57:19">pts</name><operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:52"><name pos:start="57:22" pos:end="57:28">pic_arg</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:52">display_picture_number</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="67:3" pos:end="191:3"><if pos:start="67:3" pos:end="191:3">if<condition pos:start="67:5" pos:end="67:13">(<expr pos:start="67:6" pos:end="67:12"><name pos:start="67:6" pos:end="67:12">pic_arg</name></expr>)</condition><block pos:start="67:14" pos:end="191:3">{<block_content pos:start="69:5" pos:end="189:18">

    <if_stmt pos:start="69:5" pos:end="69:74"><if pos:start="69:5" pos:end="69:74">if<condition pos:start="69:7" pos:end="69:64">(<expr pos:start="69:8" pos:end="69:63"><name pos:start="69:8" pos:end="69:21">encoding_delay</name> <operator pos:start="69:23" pos:end="69:24">&amp;&amp;</operator> <operator pos:start="69:26" pos:end="69:26">!</operator><operator pos:start="69:27" pos:end="69:27">(</operator><name pos:start="69:28" pos:end="69:35"><name pos:start="69:28" pos:end="69:28">s</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:35">flags</name></name><operator pos:start="69:36" pos:end="69:36">&amp;</operator><name pos:start="69:37" pos:end="69:62">CODEC_FLAG_INPUT_PRESERVED</name><operator pos:start="69:63" pos:end="69:63">)</operator></expr>)</condition><block type="pseudo" pos:start="69:66" pos:end="69:74"><block_content pos:start="69:66" pos:end="69:74"> <expr_stmt pos:start="69:66" pos:end="69:74"><expr pos:start="69:66" pos:end="69:73"><name pos:start="69:66" pos:end="69:71">direct</name><operator pos:start="69:72" pos:end="69:72">=</operator><literal type="number" pos:start="69:73" pos:end="69:73">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="71:53"><if pos:start="71:5" pos:end="71:53">if<condition pos:start="71:7" pos:end="71:43">(<expr pos:start="71:8" pos:end="71:42"><name pos:start="71:8" pos:end="71:27"><name pos:start="71:8" pos:end="71:14">pic_arg</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:24">linesize</name><index pos:start="71:25" pos:end="71:27">[<expr pos:start="71:26" pos:end="71:26"><literal type="number" pos:start="71:26" pos:end="71:26">0</literal></expr>]</index></name> <operator pos:start="71:29" pos:end="71:30">!=</operator> <name pos:start="71:32" pos:end="71:42"><name pos:start="71:32" pos:end="71:32">s</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:42">linesize</name></name></expr>)</condition><block type="pseudo" pos:start="71:45" pos:end="71:53"><block_content pos:start="71:45" pos:end="71:53"> <expr_stmt pos:start="71:45" pos:end="71:53"><expr pos:start="71:45" pos:end="71:52"><name pos:start="71:45" pos:end="71:50">direct</name><operator pos:start="71:51" pos:end="71:51">=</operator><literal type="number" pos:start="71:52" pos:end="71:52">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="73:55"><if pos:start="73:5" pos:end="73:55">if<condition pos:start="73:7" pos:end="73:45">(<expr pos:start="73:8" pos:end="73:44"><name pos:start="73:8" pos:end="73:27"><name pos:start="73:8" pos:end="73:14">pic_arg</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:24">linesize</name><index pos:start="73:25" pos:end="73:27">[<expr pos:start="73:26" pos:end="73:26"><literal type="number" pos:start="73:26" pos:end="73:26">1</literal></expr>]</index></name> <operator pos:start="73:29" pos:end="73:30">!=</operator> <name pos:start="73:32" pos:end="73:44"><name pos:start="73:32" pos:end="73:32">s</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:44">uvlinesize</name></name></expr>)</condition><block type="pseudo" pos:start="73:47" pos:end="73:55"><block_content pos:start="73:47" pos:end="73:55"> <expr_stmt pos:start="73:47" pos:end="73:55"><expr pos:start="73:47" pos:end="73:54"><name pos:start="73:47" pos:end="73:52">direct</name><operator pos:start="73:53" pos:end="73:53">=</operator><literal type="number" pos:start="73:54" pos:end="73:54">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="75:55"><if pos:start="75:5" pos:end="75:55">if<condition pos:start="75:7" pos:end="75:45">(<expr pos:start="75:8" pos:end="75:44"><name pos:start="75:8" pos:end="75:27"><name pos:start="75:8" pos:end="75:14">pic_arg</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:24">linesize</name><index pos:start="75:25" pos:end="75:27">[<expr pos:start="75:26" pos:end="75:26"><literal type="number" pos:start="75:26" pos:end="75:26">2</literal></expr>]</index></name> <operator pos:start="75:29" pos:end="75:30">!=</operator> <name pos:start="75:32" pos:end="75:44"><name pos:start="75:32" pos:end="75:32">s</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:44">uvlinesize</name></name></expr>)</condition><block type="pseudo" pos:start="75:47" pos:end="75:55"><block_content pos:start="75:47" pos:end="75:55"> <expr_stmt pos:start="75:47" pos:end="75:55"><expr pos:start="75:47" pos:end="75:54"><name pos:start="75:47" pos:end="75:52">direct</name><operator pos:start="75:53" pos:end="75:53">=</operator><literal type="number" pos:start="75:54" pos:end="75:54">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



<comment type="line" pos:start="79:1" pos:end="79:115">//    av_log(AV_LOG_DEBUG, "%d %d %d %d\n",pic_arg-&gt;linesize[0], pic_arg-&gt;linesize[1], s-&gt;linesize, s-&gt;uvlinesize);</comment>



    <if_stmt pos:start="83:5" pos:end="185:5"><if pos:start="83:5" pos:end="105:5">if<condition pos:start="83:7" pos:end="83:14">(<expr pos:start="83:8" pos:end="83:13"><name pos:start="83:8" pos:end="83:13">direct</name></expr>)</condition><block pos:start="83:15" pos:end="105:5">{<block_content pos:start="85:9" pos:end="103:46">

        <expr_stmt pos:start="85:9" pos:end="85:40"><expr pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:9">i</name><operator pos:start="85:10" pos:end="85:10">=</operator> <call pos:start="85:12" pos:end="85:39"><name pos:start="85:12" pos:end="85:33">ff_find_unused_picture</name><argument_list pos:start="85:34" pos:end="85:39">(<argument pos:start="85:35" pos:end="85:35"><expr pos:start="85:35" pos:end="85:35"><name pos:start="85:35" pos:end="85:35">s</name></expr></argument>, <argument pos:start="85:38" pos:end="85:38"><expr pos:start="85:38" pos:end="85:38"><literal type="number" pos:start="85:38" pos:end="85:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:11">pic</name><operator pos:start="89:12" pos:end="89:12">=</operator> <operator pos:start="89:14" pos:end="89:14">(</operator><name pos:start="89:15" pos:end="89:21">AVFrame</name><operator pos:start="89:22" pos:end="89:22">*</operator><operator pos:start="89:23" pos:end="89:23">)</operator><operator pos:start="89:24" pos:end="89:24">&amp;</operator><name pos:start="89:25" pos:end="89:37"><name pos:start="89:25" pos:end="89:25">s</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:34">picture</name><index pos:start="89:35" pos:end="89:37">[<expr pos:start="89:36" pos:end="89:36"><name pos:start="89:36" pos:end="89:36">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:26"><expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:11">pic</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:22">reference</name></name><operator pos:start="91:23" pos:end="91:23">=</operator> <literal type="number" pos:start="91:25" pos:end="91:25">3</literal></expr>;</expr_stmt>



        <for pos:start="95:9" pos:end="101:9">for<control pos:start="95:12" pos:end="95:26">(<init pos:start="95:13" pos:end="95:16"><expr pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:13">i</name><operator pos:start="95:14" pos:end="95:14">=</operator><literal type="number" pos:start="95:15" pos:end="95:15">0</literal></expr>;</init> <condition pos:start="95:18" pos:end="95:21"><expr pos:start="95:18" pos:end="95:20"><name pos:start="95:18" pos:end="95:18">i</name><operator pos:start="95:19" pos:end="95:19">&lt;</operator><literal type="number" pos:start="95:20" pos:end="95:20">4</literal></expr>;</condition> <incr pos:start="95:23" pos:end="95:25"><expr pos:start="95:23" pos:end="95:25"><name pos:start="95:23" pos:end="95:23">i</name><operator pos:start="95:24" pos:end="95:25">++</operator></expr></incr>)</control><block pos:start="95:27" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:51">

            <expr_stmt pos:start="97:13" pos:end="97:43"><expr pos:start="97:13" pos:end="97:42"><name pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:15">pic</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:21">data</name><index pos:start="97:22" pos:end="97:24">[<expr pos:start="97:23" pos:end="97:23"><name pos:start="97:23" pos:end="97:23">i</name></expr>]</index></name><operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:42"><name pos:start="97:27" pos:end="97:33">pic_arg</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:39">data</name><index pos:start="97:40" pos:end="97:42">[<expr pos:start="97:41" pos:end="97:41"><name pos:start="97:41" pos:end="97:41">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:51"><expr pos:start="99:13" pos:end="99:50"><name pos:start="99:13" pos:end="99:28"><name pos:start="99:13" pos:end="99:15">pic</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:25">linesize</name><index pos:start="99:26" pos:end="99:28">[<expr pos:start="99:27" pos:end="99:27"><name pos:start="99:27" pos:end="99:27">i</name></expr>]</index></name><operator pos:start="99:29" pos:end="99:29">=</operator> <name pos:start="99:31" pos:end="99:50"><name pos:start="99:31" pos:end="99:37">pic_arg</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:47">linesize</name><index pos:start="99:48" pos:end="99:50">[<expr pos:start="99:49" pos:end="99:49"><name pos:start="99:49" pos:end="99:49">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="103:9" pos:end="103:46"><expr pos:start="103:9" pos:end="103:45"><call pos:start="103:9" pos:end="103:45"><name pos:start="103:9" pos:end="103:24">ff_alloc_picture</name><argument_list pos:start="103:25" pos:end="103:45">(<argument pos:start="103:26" pos:end="103:26"><expr pos:start="103:26" pos:end="103:26"><name pos:start="103:26" pos:end="103:26">s</name></expr></argument>, <argument pos:start="103:29" pos:end="103:41"><expr pos:start="103:29" pos:end="103:41"><operator pos:start="103:29" pos:end="103:29">(</operator><name pos:start="103:30" pos:end="103:36">Picture</name><operator pos:start="103:37" pos:end="103:37">*</operator><operator pos:start="103:38" pos:end="103:38">)</operator><name pos:start="103:39" pos:end="103:41">pic</name></expr></argument>, <argument pos:start="103:44" pos:end="103:44"><expr pos:start="103:44" pos:end="103:44"><literal type="number" pos:start="103:44" pos:end="103:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="105:6" pos:end="185:5">else<block pos:start="105:10" pos:end="185:5">{<block_content pos:start="107:9" pos:end="183:9">

        <expr_stmt pos:start="107:9" pos:end="107:40"><expr pos:start="107:9" pos:end="107:39"><name pos:start="107:9" pos:end="107:9">i</name><operator pos:start="107:10" pos:end="107:10">=</operator> <call pos:start="107:12" pos:end="107:39"><name pos:start="107:12" pos:end="107:33">ff_find_unused_picture</name><argument_list pos:start="107:34" pos:end="107:39">(<argument pos:start="107:35" pos:end="107:35"><expr pos:start="107:35" pos:end="107:35"><name pos:start="107:35" pos:end="107:35">s</name></expr></argument>, <argument pos:start="107:38" pos:end="107:38"><expr pos:start="107:38" pos:end="107:38"><literal type="number" pos:start="107:38" pos:end="107:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:38"><expr pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:11">pic</name><operator pos:start="111:12" pos:end="111:12">=</operator> <operator pos:start="111:14" pos:end="111:14">(</operator><name pos:start="111:15" pos:end="111:21">AVFrame</name><operator pos:start="111:22" pos:end="111:22">*</operator><operator pos:start="111:23" pos:end="111:23">)</operator><operator pos:start="111:24" pos:end="111:24">&amp;</operator><name pos:start="111:25" pos:end="111:37"><name pos:start="111:25" pos:end="111:25">s</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:34">picture</name><index pos:start="111:35" pos:end="111:37">[<expr pos:start="111:36" pos:end="111:36"><name pos:start="111:36" pos:end="111:36">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:26"><expr pos:start="113:9" pos:end="113:25"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:11">pic</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:22">reference</name></name><operator pos:start="113:23" pos:end="113:23">=</operator> <literal type="number" pos:start="113:25" pos:end="113:25">3</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:46"><expr pos:start="117:9" pos:end="117:45"><call pos:start="117:9" pos:end="117:45"><name pos:start="117:9" pos:end="117:24">ff_alloc_picture</name><argument_list pos:start="117:25" pos:end="117:45">(<argument pos:start="117:26" pos:end="117:26"><expr pos:start="117:26" pos:end="117:26"><name pos:start="117:26" pos:end="117:26">s</name></expr></argument>, <argument pos:start="117:29" pos:end="117:41"><expr pos:start="117:29" pos:end="117:41"><operator pos:start="117:29" pos:end="117:29">(</operator><name pos:start="117:30" pos:end="117:36">Picture</name><operator pos:start="117:37" pos:end="117:37">*</operator><operator pos:start="117:38" pos:end="117:38">)</operator><name pos:start="117:39" pos:end="117:41">pic</name></expr></argument>, <argument pos:start="117:44" pos:end="117:44"><expr pos:start="117:44" pos:end="117:44"><literal type="number" pos:start="117:44" pos:end="117:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="183:9"><if pos:start="121:9" pos:end="129:9">if<condition pos:start="121:11" pos:end="125:64">(   <expr pos:start="121:15" pos:end="125:63"><name pos:start="121:15" pos:end="121:26"><name pos:start="121:15" pos:end="121:17">pic</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:23">data</name><index pos:start="121:24" pos:end="121:26">[<expr pos:start="121:25" pos:end="121:25"><literal type="number" pos:start="121:25" pos:end="121:25">0</literal></expr>]</index></name> <operator pos:start="121:28" pos:end="121:28">+</operator> <name pos:start="121:30" pos:end="121:43">INPLACE_OFFSET</name> <operator pos:start="121:45" pos:end="121:46">==</operator> <name pos:start="121:48" pos:end="121:63"><name pos:start="121:48" pos:end="121:54">pic_arg</name><operator pos:start="121:55" pos:end="121:56">-&gt;</operator><name pos:start="121:57" pos:end="121:60">data</name><index pos:start="121:61" pos:end="121:63">[<expr pos:start="121:62" pos:end="121:62"><literal type="number" pos:start="121:62" pos:end="121:62">0</literal></expr>]</index></name>

           <operator pos:start="123:12" pos:end="123:13">&amp;&amp;</operator> <name pos:start="123:15" pos:end="123:26"><name pos:start="123:15" pos:end="123:17">pic</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:23">data</name><index pos:start="123:24" pos:end="123:26">[<expr pos:start="123:25" pos:end="123:25"><literal type="number" pos:start="123:25" pos:end="123:25">1</literal></expr>]</index></name> <operator pos:start="123:28" pos:end="123:28">+</operator> <name pos:start="123:30" pos:end="123:43">INPLACE_OFFSET</name> <operator pos:start="123:45" pos:end="123:46">==</operator> <name pos:start="123:48" pos:end="123:63"><name pos:start="123:48" pos:end="123:54">pic_arg</name><operator pos:start="123:55" pos:end="123:56">-&gt;</operator><name pos:start="123:57" pos:end="123:60">data</name><index pos:start="123:61" pos:end="123:63">[<expr pos:start="123:62" pos:end="123:62"><literal type="number" pos:start="123:62" pos:end="123:62">1</literal></expr>]</index></name>

           <operator pos:start="125:12" pos:end="125:13">&amp;&amp;</operator> <name pos:start="125:15" pos:end="125:26"><name pos:start="125:15" pos:end="125:17">pic</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:23">data</name><index pos:start="125:24" pos:end="125:26">[<expr pos:start="125:25" pos:end="125:25"><literal type="number" pos:start="125:25" pos:end="125:25">2</literal></expr>]</index></name> <operator pos:start="125:28" pos:end="125:28">+</operator> <name pos:start="125:30" pos:end="125:43">INPLACE_OFFSET</name> <operator pos:start="125:45" pos:end="125:46">==</operator> <name pos:start="125:48" pos:end="125:63"><name pos:start="125:48" pos:end="125:54">pic_arg</name><operator pos:start="125:55" pos:end="125:56">-&gt;</operator><name pos:start="125:57" pos:end="125:60">data</name><index pos:start="125:61" pos:end="125:63">[<expr pos:start="125:62" pos:end="125:62"><literal type="number" pos:start="125:62" pos:end="125:62">2</literal></expr>]</index></name></expr>)</condition><block pos:start="125:65" pos:end="129:9">{<block_content>

       <comment type="line" pos:start="127:8" pos:end="127:15">// empty</comment>

        </block_content>}</block></if><else pos:start="129:10" pos:end="183:9">else<block pos:start="129:14" pos:end="183:9">{<block_content pos:start="131:13" pos:end="181:13">

            <decl_stmt pos:start="131:13" pos:end="131:47"><decl pos:start="131:13" pos:end="131:30"><type pos:start="131:13" pos:end="131:15"><name pos:start="131:13" pos:end="131:15">int</name></type> <name pos:start="131:17" pos:end="131:30">h_chroma_shift</name></decl>, <decl pos:start="131:33" pos:end="131:46"><type ref="prev" pos:start="131:13" pos:end="131:15"/><name pos:start="131:33" pos:end="131:46">v_chroma_shift</name></decl>;</decl_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:95"><expr pos:start="133:13" pos:end="133:94"><call pos:start="133:13" pos:end="133:94"><name pos:start="133:13" pos:end="133:41">avcodec_get_chroma_sub_sample</name><argument_list pos:start="133:42" pos:end="133:94">(<argument pos:start="133:43" pos:end="133:59"><expr pos:start="133:43" pos:end="133:59"><name pos:start="133:43" pos:end="133:59"><name pos:start="133:43" pos:end="133:43">s</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:50">avctx</name><operator pos:start="133:51" pos:end="133:52">-&gt;</operator><name pos:start="133:53" pos:end="133:59">pix_fmt</name></name></expr></argument>, <argument pos:start="133:62" pos:end="133:76"><expr pos:start="133:62" pos:end="133:76"><operator pos:start="133:62" pos:end="133:62">&amp;</operator><name pos:start="133:63" pos:end="133:76">h_chroma_shift</name></expr></argument>, <argument pos:start="133:79" pos:end="133:93"><expr pos:start="133:79" pos:end="133:93"><operator pos:start="133:79" pos:end="133:79">&amp;</operator><name pos:start="133:80" pos:end="133:93">v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="137:13" pos:end="181:13">for<control pos:start="137:16" pos:end="137:30">(<init pos:start="137:17" pos:end="137:20"><expr pos:start="137:17" pos:end="137:19"><name pos:start="137:17" pos:end="137:17">i</name><operator pos:start="137:18" pos:end="137:18">=</operator><literal type="number" pos:start="137:19" pos:end="137:19">0</literal></expr>;</init> <condition pos:start="137:22" pos:end="137:25"><expr pos:start="137:22" pos:end="137:24"><name pos:start="137:22" pos:end="137:22">i</name><operator pos:start="137:23" pos:end="137:23">&lt;</operator><literal type="number" pos:start="137:24" pos:end="137:24">3</literal></expr>;</condition> <incr pos:start="137:27" pos:end="137:29"><expr pos:start="137:27" pos:end="137:29"><name pos:start="137:27" pos:end="137:27">i</name><operator pos:start="137:28" pos:end="137:29">++</operator></expr></incr>)</control><block pos:start="137:31" pos:end="181:13">{<block_content pos:start="139:17" pos:end="179:17">

                <decl_stmt pos:start="139:17" pos:end="139:53"><decl pos:start="139:17" pos:end="139:52"><type pos:start="139:17" pos:end="139:19"><name pos:start="139:17" pos:end="139:19">int</name></type> <name pos:start="139:21" pos:end="139:30">src_stride</name><init pos:start="139:31" pos:end="139:52">= <expr pos:start="139:33" pos:end="139:52"><name pos:start="139:33" pos:end="139:52"><name pos:start="139:33" pos:end="139:39">pic_arg</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:49">linesize</name><index pos:start="139:50" pos:end="139:52">[<expr pos:start="139:51" pos:end="139:51"><name pos:start="139:51" pos:end="139:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="141:17" pos:end="141:64"><decl pos:start="141:17" pos:end="141:63"><type pos:start="141:17" pos:end="141:19"><name pos:start="141:17" pos:end="141:19">int</name></type> <name pos:start="141:21" pos:end="141:30">dst_stride</name><init pos:start="141:31" pos:end="141:63">= <expr pos:start="141:33" pos:end="141:63"><ternary pos:start="141:33" pos:end="141:63"><condition pos:start="141:33" pos:end="141:35"><expr pos:start="141:33" pos:end="141:33"><name pos:start="141:33" pos:end="141:33">i</name></expr> ?</condition><then pos:start="141:37" pos:end="141:49"> <expr pos:start="141:37" pos:end="141:49"><name pos:start="141:37" pos:end="141:49"><name pos:start="141:37" pos:end="141:37">s</name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:49">uvlinesize</name></name></expr> </then><else pos:start="141:51" pos:end="141:63">: <expr pos:start="141:53" pos:end="141:63"><name pos:start="141:53" pos:end="141:63"><name pos:start="141:53" pos:end="141:53">s</name><operator pos:start="141:54" pos:end="141:55">-&gt;</operator><name pos:start="141:56" pos:end="141:63">linesize</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="143:17" pos:end="143:52"><decl pos:start="143:17" pos:end="143:51"><type pos:start="143:17" pos:end="143:19"><name pos:start="143:17" pos:end="143:19">int</name></type> <name pos:start="143:21" pos:end="143:27">h_shift</name><init pos:start="143:28" pos:end="143:51">= <expr pos:start="143:30" pos:end="143:51"><ternary pos:start="143:30" pos:end="143:51"><condition pos:start="143:30" pos:end="143:32"><expr pos:start="143:30" pos:end="143:30"><name pos:start="143:30" pos:end="143:30">i</name></expr> ?</condition><then pos:start="143:34" pos:end="143:47"> <expr pos:start="143:34" pos:end="143:47"><name pos:start="143:34" pos:end="143:47">h_chroma_shift</name></expr> </then><else pos:start="143:49" pos:end="143:51">: <expr pos:start="143:51" pos:end="143:51"><literal type="number" pos:start="143:51" pos:end="143:51">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="145:17" pos:end="145:52"><decl pos:start="145:17" pos:end="145:51"><type pos:start="145:17" pos:end="145:19"><name pos:start="145:17" pos:end="145:19">int</name></type> <name pos:start="145:21" pos:end="145:27">v_shift</name><init pos:start="145:28" pos:end="145:51">= <expr pos:start="145:30" pos:end="145:51"><ternary pos:start="145:30" pos:end="145:51"><condition pos:start="145:30" pos:end="145:32"><expr pos:start="145:30" pos:end="145:30"><name pos:start="145:30" pos:end="145:30">i</name></expr> ?</condition><then pos:start="145:34" pos:end="145:47"> <expr pos:start="145:34" pos:end="145:47"><name pos:start="145:34" pos:end="145:47">v_chroma_shift</name></expr> </then><else pos:start="145:49" pos:end="145:51">: <expr pos:start="145:51" pos:end="145:51"><literal type="number" pos:start="145:51" pos:end="145:51">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="147:17" pos:end="147:42"><decl pos:start="147:17" pos:end="147:41"><type pos:start="147:17" pos:end="147:19"><name pos:start="147:17" pos:end="147:19">int</name></type> <name pos:start="147:21" pos:end="147:21">w</name><init pos:start="147:22" pos:end="147:41">= <expr pos:start="147:24" pos:end="147:41"><name pos:start="147:24" pos:end="147:31"><name pos:start="147:24" pos:end="147:24">s</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:31">width</name></name> <operator pos:start="147:33" pos:end="147:34">&gt;&gt;</operator><name pos:start="147:35" pos:end="147:41">h_shift</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="149:17" pos:end="149:42"><decl pos:start="149:17" pos:end="149:41"><type pos:start="149:17" pos:end="149:19"><name pos:start="149:17" pos:end="149:19">int</name></type> <name pos:start="149:21" pos:end="149:21">h</name><init pos:start="149:22" pos:end="149:41">= <expr pos:start="149:24" pos:end="149:41"><name pos:start="149:24" pos:end="149:32"><name pos:start="149:24" pos:end="149:24">s</name><operator pos:start="149:25" pos:end="149:26">-&gt;</operator><name pos:start="149:27" pos:end="149:32">height</name></name><operator pos:start="149:33" pos:end="149:34">&gt;&gt;</operator><name pos:start="149:35" pos:end="149:41">v_shift</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="151:17" pos:end="151:47"><decl pos:start="151:17" pos:end="151:46"><type pos:start="151:17" pos:end="151:25"><name pos:start="151:17" pos:end="151:23">uint8_t</name> <modifier pos:start="151:25" pos:end="151:25">*</modifier></type><name pos:start="151:26" pos:end="151:28">src</name><init pos:start="151:29" pos:end="151:46">= <expr pos:start="151:31" pos:end="151:46"><name pos:start="151:31" pos:end="151:46"><name pos:start="151:31" pos:end="151:37">pic_arg</name><operator pos:start="151:38" pos:end="151:39">-&gt;</operator><name pos:start="151:40" pos:end="151:43">data</name><index pos:start="151:44" pos:end="151:46">[<expr pos:start="151:45" pos:end="151:45"><name pos:start="151:45" pos:end="151:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="153:17" pos:end="153:43"><decl pos:start="153:17" pos:end="153:42"><type pos:start="153:17" pos:end="153:25"><name pos:start="153:17" pos:end="153:23">uint8_t</name> <modifier pos:start="153:25" pos:end="153:25">*</modifier></type><name pos:start="153:26" pos:end="153:28">dst</name><init pos:start="153:29" pos:end="153:42">= <expr pos:start="153:31" pos:end="153:42"><name pos:start="153:31" pos:end="153:42"><name pos:start="153:31" pos:end="153:33">pic</name><operator pos:start="153:34" pos:end="153:35">-&gt;</operator><name pos:start="153:36" pos:end="153:39">data</name><index pos:start="153:40" pos:end="153:42">[<expr pos:start="153:41" pos:end="153:41"><name pos:start="153:41" pos:end="153:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="157:17" pos:end="159:41"><if pos:start="157:17" pos:end="159:41">if<condition pos:start="157:19" pos:end="157:45">(<expr pos:start="157:20" pos:end="157:44"><operator pos:start="157:20" pos:end="157:20">!</operator><name pos:start="157:21" pos:end="157:44"><name pos:start="157:21" pos:end="157:21">s</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:28">avctx</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:44">rc_buffer_size</name></name></expr>)</condition><block type="pseudo" pos:start="159:21" pos:end="159:41"><block_content pos:start="159:21" pos:end="159:41">

                    <expr_stmt pos:start="159:21" pos:end="159:41"><expr pos:start="159:21" pos:end="159:40"><name pos:start="159:21" pos:end="159:23">dst</name> <operator pos:start="159:25" pos:end="159:26">+=</operator><name pos:start="159:27" pos:end="159:40">INPLACE_OFFSET</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="163:17" pos:end="179:17"><if pos:start="163:17" pos:end="165:51">if<condition pos:start="163:19" pos:end="163:42">(<expr pos:start="163:20" pos:end="163:41"><name pos:start="163:20" pos:end="163:29">src_stride</name><operator pos:start="163:30" pos:end="163:31">==</operator><name pos:start="163:32" pos:end="163:41">dst_stride</name></expr>)</condition><block type="pseudo" pos:start="165:21" pos:end="165:51"><block_content pos:start="165:21" pos:end="165:51">

                    <expr_stmt pos:start="165:21" pos:end="165:51"><expr pos:start="165:21" pos:end="165:50"><call pos:start="165:21" pos:end="165:50"><name pos:start="165:21" pos:end="165:26">memcpy</name><argument_list pos:start="165:27" pos:end="165:50">(<argument pos:start="165:28" pos:end="165:30"><expr pos:start="165:28" pos:end="165:30"><name pos:start="165:28" pos:end="165:30">dst</name></expr></argument>, <argument pos:start="165:33" pos:end="165:35"><expr pos:start="165:33" pos:end="165:35"><name pos:start="165:33" pos:end="165:35">src</name></expr></argument>, <argument pos:start="165:38" pos:end="165:49"><expr pos:start="165:38" pos:end="165:49"><name pos:start="165:38" pos:end="165:47">src_stride</name><operator pos:start="165:48" pos:end="165:48">*</operator><name pos:start="165:49" pos:end="165:49">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="167:17" pos:end="179:17">else<block pos:start="167:21" pos:end="179:17">{<block_content pos:start="169:21" pos:end="177:21">

                    <while pos:start="169:21" pos:end="177:21">while<condition pos:start="169:26" pos:end="169:30">(<expr pos:start="169:27" pos:end="169:29"><name pos:start="169:27" pos:end="169:27">h</name><operator pos:start="169:28" pos:end="169:29">--</operator></expr>)</condition><block pos:start="169:31" pos:end="177:21">{<block_content pos:start="171:25" pos:end="175:42">

                        <expr_stmt pos:start="171:25" pos:end="171:44"><expr pos:start="171:25" pos:end="171:43"><call pos:start="171:25" pos:end="171:43"><name pos:start="171:25" pos:end="171:30">memcpy</name><argument_list pos:start="171:31" pos:end="171:43">(<argument pos:start="171:32" pos:end="171:34"><expr pos:start="171:32" pos:end="171:34"><name pos:start="171:32" pos:end="171:34">dst</name></expr></argument>, <argument pos:start="171:37" pos:end="171:39"><expr pos:start="171:37" pos:end="171:39"><name pos:start="171:37" pos:end="171:39">src</name></expr></argument>, <argument pos:start="171:42" pos:end="171:42"><expr pos:start="171:42" pos:end="171:42"><name pos:start="171:42" pos:end="171:42">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="173:25" pos:end="173:42"><expr pos:start="173:25" pos:end="173:41"><name pos:start="173:25" pos:end="173:27">dst</name> <operator pos:start="173:29" pos:end="173:30">+=</operator> <name pos:start="173:32" pos:end="173:41">dst_stride</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="175:25" pos:end="175:42"><expr pos:start="175:25" pos:end="175:41"><name pos:start="175:25" pos:end="175:27">src</name> <operator pos:start="175:29" pos:end="175:30">+=</operator> <name pos:start="175:32" pos:end="175:41">src_stride</name></expr>;</expr_stmt>

                    </block_content>}</block></while>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:45"><expr pos:start="187:5" pos:end="187:44"><call pos:start="187:5" pos:end="187:44"><name pos:start="187:5" pos:end="187:27">copy_picture_attributes</name><argument_list pos:start="187:28" pos:end="187:44">(<argument pos:start="187:29" pos:end="187:29"><expr pos:start="187:29" pos:end="187:29"><name pos:start="187:29" pos:end="187:29">s</name></expr></argument>, <argument pos:start="187:32" pos:end="187:34"><expr pos:start="187:32" pos:end="187:34"><name pos:start="187:32" pos:end="187:34">pic</name></expr></argument>, <argument pos:start="187:37" pos:end="187:43"><expr pos:start="187:37" pos:end="187:43"><name pos:start="187:37" pos:end="187:43">pic_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:18"><expr pos:start="189:5" pos:end="189:17"><name pos:start="189:5" pos:end="189:12"><name pos:start="189:5" pos:end="189:7">pic</name><operator pos:start="189:8" pos:end="189:9">-&gt;</operator><name pos:start="189:10" pos:end="189:12">pts</name></name><operator pos:start="189:13" pos:end="189:13">=</operator> <name pos:start="189:15" pos:end="189:17">pts</name></expr>;</expr_stmt> <comment type="line" pos:start="189:20" pos:end="189:65">//we set this here to avoid modifiying pic_arg</comment>

  </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="195:5" pos:end="195:30">/* shift buffer entries */</comment>

    <for pos:start="197:5" pos:end="199:51">for<control pos:start="197:8" pos:end="197:62">(<init pos:start="197:9" pos:end="197:12"><expr pos:start="197:9" pos:end="197:11"><name pos:start="197:9" pos:end="197:9">i</name><operator pos:start="197:10" pos:end="197:10">=</operator><literal type="number" pos:start="197:11" pos:end="197:11">1</literal></expr>;</init> <condition pos:start="197:14" pos:end="197:57"><expr pos:start="197:14" pos:end="197:32"><name pos:start="197:14" pos:end="197:14">i</name><operator pos:start="197:15" pos:end="197:15">&lt;</operator><name pos:start="197:16" pos:end="197:32">MAX_PICTURE_COUNT</name></expr> <comment type="block" pos:start="197:34" pos:end="197:56">/*s-&gt;encoding_delay+1*/</comment>;</condition> <incr pos:start="197:59" pos:end="197:61"><expr pos:start="197:59" pos:end="197:61"><name pos:start="197:59" pos:end="197:59">i</name><operator pos:start="197:60" pos:end="197:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="199:9" pos:end="199:51"><block_content pos:start="199:9" pos:end="199:51">

        <expr_stmt pos:start="199:9" pos:end="199:51"><expr pos:start="199:9" pos:end="199:50"><name pos:start="199:9" pos:end="199:29"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:24">input_picture</name><index pos:start="199:25" pos:end="199:29">[<expr pos:start="199:26" pos:end="199:28"><name pos:start="199:26" pos:end="199:26">i</name><operator pos:start="199:27" pos:end="199:27">-</operator><literal type="number" pos:start="199:28" pos:end="199:28">1</literal></expr>]</index></name><operator pos:start="199:30" pos:end="199:30">=</operator> <name pos:start="199:32" pos:end="199:50"><name pos:start="199:32" pos:end="199:32">s</name><operator pos:start="199:33" pos:end="199:34">-&gt;</operator><name pos:start="199:35" pos:end="199:47">input_picture</name><index pos:start="199:48" pos:end="199:50">[<expr pos:start="199:49" pos:end="199:49"><name pos:start="199:49" pos:end="199:49">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="203:5" pos:end="203:52"><expr pos:start="203:5" pos:end="203:51"><name pos:start="203:5" pos:end="203:36"><name pos:start="203:5" pos:end="203:5">s</name><operator pos:start="203:6" pos:end="203:7">-&gt;</operator><name pos:start="203:8" pos:end="203:20">input_picture</name><index pos:start="203:21" pos:end="203:36">[<expr pos:start="203:22" pos:end="203:35"><name pos:start="203:22" pos:end="203:35">encoding_delay</name></expr>]</index></name><operator pos:start="203:37" pos:end="203:37">=</operator> <operator pos:start="203:39" pos:end="203:39">(</operator><name pos:start="203:40" pos:end="203:46">Picture</name><operator pos:start="203:47" pos:end="203:47">*</operator><operator pos:start="203:48" pos:end="203:48">)</operator><name pos:start="203:49" pos:end="203:51">pic</name></expr>;</expr_stmt>



    <return pos:start="207:5" pos:end="207:13">return <expr pos:start="207:12" pos:end="207:12"><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
