<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8372.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_value</name><parameter_list pos:start="1:24" pos:end="1:100">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:35">SCPRContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:48">unsigned</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">cnt</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:63">unsigned</name></type> <name pos:start="1:65" pos:end="1:68">maxc</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:83"><decl pos:start="1:71" pos:end="1:83"><type pos:start="1:71" pos:end="1:83"><name pos:start="1:71" pos:end="1:78">unsigned</name></type> <name pos:start="1:80" pos:end="1:83">step</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:99"><decl pos:start="1:86" pos:end="1:99"><type pos:start="1:86" pos:end="1:99"><name pos:start="1:86" pos:end="1:93">unsigned</name> <modifier pos:start="1:95" pos:end="1:95">*</modifier></type><name pos:start="1:96" pos:end="1:99">rval</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">GetByteContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">gb</name> <init pos:start="5:24" pos:end="5:31">= <expr pos:start="5:26" pos:end="5:31"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:31"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">RangeCoder</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">rc</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><operator pos:start="7:22" pos:end="7:22">&amp;</operator><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">rc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:18">totfr</name> <init pos:start="9:20" pos:end="9:30">= <expr pos:start="9:22" pos:end="9:30"><name pos:start="9:22" pos:end="9:30"><name pos:start="9:22" pos:end="9:24">cnt</name><index pos:start="9:25" pos:end="9:30">[<expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">maxc</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:18">value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:14">c</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>, <decl pos:start="13:21" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:21" pos:end="13:25">cumfr</name> <init pos:start="13:27" pos:end="13:29">= <expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></init></decl>, <decl pos:start="13:32" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:32" pos:end="13:36">cnt_c</name> <init pos:start="13:38" pos:end="13:40">= <expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:19"><if pos:start="19:5" pos:end="21:19">if <condition pos:start="19:8" pos:end="19:51">(<expr pos:start="19:9" pos:end="19:50"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:12">ret</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:45"><name pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:26">get_freq</name></name><argument_list pos:start="19:27" pos:end="19:45">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">rc</name></expr></argument>, <argument pos:start="19:32" pos:end="19:36"><expr pos:start="19:32" pos:end="19:36"><name pos:start="19:32" pos:end="19:36">totfr</name></expr></argument>, <argument pos:start="19:39" pos:end="19:44"><expr pos:start="19:39" pos:end="19:44"><operator pos:start="19:39" pos:end="19:39">&amp;</operator><name pos:start="19:40" pos:end="19:44">value</name></expr></argument>)</argument_list></call><operator pos:start="19:46" pos:end="19:46">)</operator> <operator pos:start="19:48" pos:end="19:48">&lt;</operator> <literal type="number" pos:start="19:50" pos:end="19:50">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="25:5" pos:end="39:5">while <condition pos:start="25:11" pos:end="25:20">(<expr pos:start="25:12" pos:end="25:19"><name pos:start="25:12" pos:end="25:12">c</name> <operator pos:start="25:14" pos:end="25:14">&lt;</operator> <name pos:start="25:16" pos:end="25:19">maxc</name></expr>)</condition> <block pos:start="25:22" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:12">

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:13">cnt_c</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:19">cnt</name><index pos:start="27:20" pos:end="27:22">[<expr pos:start="27:21" pos:end="27:21"><name pos:start="27:21" pos:end="27:21">c</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:18"><if pos:start="29:9" pos:end="31:27">if <condition pos:start="29:12" pos:end="29:35">(<expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:17">value</name> <operator pos:start="29:19" pos:end="29:20">&gt;=</operator> <name pos:start="29:22" pos:end="29:26">cumfr</name> <operator pos:start="29:28" pos:end="29:28">+</operator> <name pos:start="29:30" pos:end="29:34">cnt_c</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:27"><block_content pos:start="31:13" pos:end="31:27">

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:17">cumfr</name> <operator pos:start="31:19" pos:end="31:20">+=</operator> <name pos:start="31:22" pos:end="31:26">cnt_c</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="33:9" pos:end="35:18">else<block type="pseudo" pos:start="35:13" pos:end="35:18"><block_content pos:start="35:13" pos:end="35:18">

            <break pos:start="35:13" pos:end="35:18">break;</break></block_content></block></else></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:12"><expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:9">c</name><operator pos:start="37:10" pos:end="37:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><call pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:13">decode</name></name><argument_list pos:start="41:14" pos:end="41:42">(<argument pos:start="41:15" pos:end="41:16"><expr pos:start="41:15" pos:end="41:16"><name pos:start="41:15" pos:end="41:16">gb</name></expr></argument>, <argument pos:start="41:19" pos:end="41:20"><expr pos:start="41:19" pos:end="41:20"><name pos:start="41:19" pos:end="41:20">rc</name></expr></argument>, <argument pos:start="41:23" pos:end="41:27"><expr pos:start="41:23" pos:end="41:27"><name pos:start="41:23" pos:end="41:27">cumfr</name></expr></argument>, <argument pos:start="41:30" pos:end="41:34"><expr pos:start="41:30" pos:end="41:34"><name pos:start="41:30" pos:end="41:34">cnt_c</name></expr></argument>, <argument pos:start="41:37" pos:end="41:41"><expr pos:start="41:37" pos:end="41:41"><name pos:start="41:37" pos:end="41:41">totfr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:7">cnt</name><index pos:start="45:8" pos:end="45:10">[<expr pos:start="45:9" pos:end="45:9"><name pos:start="45:9" pos:end="45:9">c</name></expr>]</index></name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:18">cnt_c</name> <operator pos:start="45:20" pos:end="45:20">+</operator> <name pos:start="45:22" pos:end="45:25">step</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:18"><expr pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:9">totfr</name> <operator pos:start="47:11" pos:end="47:12">+=</operator> <name pos:start="47:14" pos:end="47:17">step</name></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="63:5"><if pos:start="49:5" pos:end="63:5">if <condition pos:start="49:8" pos:end="49:20">(<expr pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:13">totfr</name> <operator pos:start="49:15" pos:end="49:15">&gt;</operator> <name pos:start="49:17" pos:end="49:19">BOT</name></expr>)</condition> <block pos:start="49:22" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:9">

        <expr_stmt pos:start="51:9" pos:end="51:18"><expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:13">totfr</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">0</literal></expr>;</expr_stmt>

        <for pos:start="53:9" pos:end="61:9">for <control pos:start="53:13" pos:end="53:34">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:29"><expr pos:start="53:21" pos:end="53:28"><name pos:start="53:21" pos:end="53:21">i</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <name pos:start="53:25" pos:end="53:28">maxc</name></expr>;</condition> <incr pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:31">i</name><operator pos:start="53:32" pos:end="53:33">++</operator></expr></incr>)</control> <block pos:start="53:36" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:24">

            <decl_stmt pos:start="55:13" pos:end="55:44"><decl pos:start="55:13" pos:end="55:43"><type pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:20">unsigned</name></type> <name pos:start="55:22" pos:end="55:23">nc</name> <init pos:start="55:25" pos:end="55:43">= <expr pos:start="55:27" pos:end="55:43"><operator pos:start="55:27" pos:end="55:27">(</operator><name pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:30">cnt</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><name pos:start="55:32" pos:end="55:32">i</name></expr>]</index></name> <operator pos:start="55:35" pos:end="55:36">&gt;&gt;</operator> <literal type="number" pos:start="55:38" pos:end="55:38">1</literal><operator pos:start="55:39" pos:end="55:39">)</operator> <operator pos:start="55:41" pos:end="55:41">+</operator> <literal type="number" pos:start="55:43" pos:end="55:43">1</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:24"><expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:15">cnt</name><index pos:start="57:16" pos:end="57:18">[<expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">i</name></expr>]</index></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:23">nc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:24"><expr pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:17">totfr</name> <operator pos:start="59:19" pos:end="59:20">+=</operator> <name pos:start="59:22" pos:end="59:23">nc</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:22"><expr pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:13"><name pos:start="67:5" pos:end="67:7">cnt</name><index pos:start="67:8" pos:end="67:13">[<expr pos:start="67:9" pos:end="67:12"><name pos:start="67:9" pos:end="67:12">maxc</name></expr>]</index></name> <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:21">totfr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:14"><expr pos:start="69:5" pos:end="69:13"><operator pos:start="69:5" pos:end="69:5">*</operator><name pos:start="69:6" pos:end="69:9">rval</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <name pos:start="69:13" pos:end="69:13">c</name></expr>;</expr_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
