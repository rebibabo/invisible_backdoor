<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10421.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:45"><name pos:start="1:1" pos:end="1:20">matroska_read_header</name> <argument_list pos:start="1:22" pos:end="3:45">(<argument pos:start="1:23" pos:end="1:43">AVFormatContext    *s</argument>,

                      <argument pos:start="3:23" pos:end="3:44">AVFormatParameters *ap</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="709:1">{<block_content pos:start="7:5" pos:end="707:15">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">MatroskaDemuxContext</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:34">matroska</name> <init pos:start="7:36" pos:end="7:49">= <expr pos:start="7:38" pos:end="7:49"><name pos:start="7:38" pos:end="7:49"><name pos:start="7:38" pos:end="7:38">s</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:17">doctype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">version</name></decl>, <decl pos:start="11:18" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:27">last_level</name></decl>, <decl pos:start="11:30" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:32">res</name> <init pos:start="11:34" pos:end="11:36">= <expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:15">id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12">matroska</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:17">ctx</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:21">s</name></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:37">/* First read the EBML header. */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:11">doctype</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:18">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:67">(<expr pos:start="25:9" pos:end="25:66"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">res</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:61"><name pos:start="25:16" pos:end="25:31">ebml_read_header</name><argument_list pos:start="25:32" pos:end="25:61">(<argument pos:start="25:33" pos:end="25:40"><expr pos:start="25:33" pos:end="25:40"><name pos:start="25:33" pos:end="25:40">matroska</name></expr></argument>, <argument pos:start="25:43" pos:end="25:50"><expr pos:start="25:43" pos:end="25:50"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:50">doctype</name></expr></argument>, <argument pos:start="25:53" pos:end="25:60"><expr pos:start="25:53" pos:end="25:60"><operator pos:start="25:53" pos:end="25:53">&amp;</operator><name pos:start="25:54" pos:end="25:60">version</name></expr></argument>)</argument_list></call><operator pos:start="25:62" pos:end="25:62">)</operator> <operator pos:start="25:64" pos:end="25:64">&lt;</operator> <literal type="number" pos:start="25:66" pos:end="25:66">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">res</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="43:5"><if pos:start="29:5" pos:end="43:5">if <condition pos:start="29:8" pos:end="29:57">(<expr pos:start="29:9" pos:end="29:56"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:16">doctype</name> <operator pos:start="29:18" pos:end="29:19">==</operator> <name pos:start="29:21" pos:end="29:24">NULL</name><operator pos:start="29:25" pos:end="29:25">)</operator> <operator pos:start="29:27" pos:end="29:28">||</operator> <call pos:start="29:30" pos:end="29:56"><name pos:start="29:30" pos:end="29:35">strcmp</name><argument_list pos:start="29:36" pos:end="29:56">(<argument pos:start="29:37" pos:end="29:43"><expr pos:start="29:37" pos:end="29:43"><name pos:start="29:37" pos:end="29:43">doctype</name></expr></argument>, <argument pos:start="29:46" pos:end="29:55"><expr pos:start="29:46" pos:end="29:55"><literal type="string" pos:start="29:46" pos:end="29:55">"matroska"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:59" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:29">

        <expr_stmt pos:start="31:9" pos:end="35:45"><expr pos:start="31:9" pos:end="35:44"><call pos:start="31:9" pos:end="35:44"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="35:44">(<argument pos:start="31:16" pos:end="31:28"><expr pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:23">matroska</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:28">ctx</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:42">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="33:16" pos:end="33:59"><expr pos:start="33:16" pos:end="33:59"><literal type="string" pos:start="33:16" pos:end="33:59">"Wrong EBML doctype ('%s' != 'matroska').\n"</literal></expr></argument>,

               <argument pos:start="35:16" pos:end="35:43"><expr pos:start="35:16" pos:end="35:43"><ternary pos:start="35:16" pos:end="35:43"><condition pos:start="35:16" pos:end="35:24"><expr pos:start="35:16" pos:end="35:22"><name pos:start="35:16" pos:end="35:22">doctype</name></expr> ?</condition><then pos:start="35:26" pos:end="35:32"> <expr pos:start="35:26" pos:end="35:32"><name pos:start="35:26" pos:end="35:32">doctype</name></expr> </then><else pos:start="35:34" pos:end="35:43">: <expr pos:start="35:36" pos:end="35:43"><literal type="string" pos:start="35:36" pos:end="35:43">"(none)"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:29"><if pos:start="37:9" pos:end="39:29">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:19">doctype</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:29"><block_content pos:start="39:13" pos:end="39:29">

            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><call pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:19">av_free</name><argument_list pos:start="39:20" pos:end="39:28">(<argument pos:start="39:21" pos:end="39:27"><expr pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:27">doctype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="41:9" pos:end="41:29">return <expr pos:start="41:16" pos:end="41:28"><name pos:start="41:16" pos:end="41:28">AVERROR_NOFMT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><call pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:11">av_free</name><argument_list pos:start="45:12" pos:end="45:20">(<argument pos:start="45:13" pos:end="45:19"><expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:19">doctype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:20">(<expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:15">version</name> <operator pos:start="47:17" pos:end="47:17">&gt;</operator> <literal type="number" pos:start="47:19" pos:end="47:19">2</literal></expr>)</condition> <block pos:start="47:22" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:29">

        <expr_stmt pos:start="49:9" pos:end="53:24"><expr pos:start="49:9" pos:end="53:23"><call pos:start="49:9" pos:end="53:23"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="53:23">(<argument pos:start="49:16" pos:end="49:28"><expr pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:23">matroska</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:28">ctx</name></name></expr></argument>, <argument pos:start="49:31" pos:end="49:42"><expr pos:start="49:31" pos:end="49:42"><name pos:start="49:31" pos:end="49:42">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="51:16" pos:end="51:73"><expr pos:start="51:16" pos:end="51:73"><literal type="string" pos:start="51:16" pos:end="51:73">"Matroska demuxer version 2 too old for file version %d\n"</literal></expr></argument>,

               <argument pos:start="53:16" pos:end="53:22"><expr pos:start="53:16" pos:end="53:22"><name pos:start="53:16" pos:end="53:22">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:29">return <expr pos:start="55:16" pos:end="55:28"><name pos:start="55:16" pos:end="55:28">AVERROR_NOFMT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:38">/* The next thing is a segment. */</comment>

    <while pos:start="63:5" pos:end="87:5">while <condition pos:start="63:11" pos:end="63:13">(<expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">1</literal></expr>)</condition> <block pos:start="63:15" pos:end="87:5">{<block_content pos:start="65:9" pos:end="85:23">

        <if_stmt pos:start="65:9" pos:end="67:32"><if pos:start="65:9" pos:end="67:32">if <condition pos:start="65:12" pos:end="65:56">(<expr pos:start="65:13" pos:end="65:55"><operator pos:start="65:13" pos:end="65:13">!</operator><operator pos:start="65:14" pos:end="65:14">(</operator><name pos:start="65:15" pos:end="65:16">id</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:54"><name pos:start="65:20" pos:end="65:31">ebml_peek_id</name><argument_list pos:start="65:32" pos:end="65:54">(<argument pos:start="65:33" pos:end="65:40"><expr pos:start="65:33" pos:end="65:40"><name pos:start="65:33" pos:end="65:40">matroska</name></expr></argument>, <argument pos:start="65:43" pos:end="65:53"><expr pos:start="65:43" pos:end="65:53"><operator pos:start="65:43" pos:end="65:43">&amp;</operator><name pos:start="65:44" pos:end="65:53">last_level</name></expr></argument>)</argument_list></call><operator pos:start="65:55" pos:end="65:55">)</operator></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:32"><block_content pos:start="67:13" pos:end="67:32">

            <return pos:start="67:13" pos:end="67:32">return <expr pos:start="67:20" pos:end="67:31"><call pos:start="67:20" pos:end="67:31"><name pos:start="67:20" pos:end="67:26">AVERROR</name><argument_list pos:start="67:27" pos:end="67:31">(<argument pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><name pos:start="67:28" pos:end="67:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="71:18"><if pos:start="69:9" pos:end="71:18">if <condition pos:start="69:12" pos:end="69:38">(<expr pos:start="69:13" pos:end="69:37"><name pos:start="69:13" pos:end="69:14">id</name> <operator pos:start="69:16" pos:end="69:17">==</operator> <name pos:start="69:19" pos:end="69:37">MATROSKA_ID_SEGMENT</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:18"><block_content pos:start="71:13" pos:end="71:18">

            <break pos:start="71:13" pos:end="71:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:17">/* oi! */</comment>

        <expr_stmt pos:start="77:9" pos:end="81:40"><expr pos:start="77:9" pos:end="81:39"><call pos:start="77:9" pos:end="81:39"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="81:39">(<argument pos:start="77:16" pos:end="77:28"><expr pos:start="77:16" pos:end="77:28"><name pos:start="77:16" pos:end="77:28"><name pos:start="77:16" pos:end="77:23">matroska</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:28">ctx</name></name></expr></argument>, <argument pos:start="77:31" pos:end="77:41"><expr pos:start="77:31" pos:end="77:41"><name pos:start="77:31" pos:end="77:41">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="79:16" pos:end="79:67"><expr pos:start="79:16" pos:end="79:67"><literal type="string" pos:start="79:16" pos:end="79:67">"Expected a Segment ID (0x%x), but received 0x%x!\n"</literal></expr></argument>,

               <argument pos:start="81:16" pos:end="81:34"><expr pos:start="81:16" pos:end="81:34"><name pos:start="81:16" pos:end="81:34">MATROSKA_ID_SEGMENT</name></expr></argument>, <argument pos:start="81:37" pos:end="81:38"><expr pos:start="81:37" pos:end="81:38"><name pos:start="81:37" pos:end="81:38">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:23"><if pos:start="83:9" pos:end="85:23">if <condition pos:start="83:12" pos:end="83:49">(<expr pos:start="83:13" pos:end="83:48"><operator pos:start="83:13" pos:end="83:13">(</operator><name pos:start="83:14" pos:end="83:16">res</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:43"><name pos:start="83:20" pos:end="83:33">ebml_read_skip</name><argument_list pos:start="83:34" pos:end="83:43">(<argument pos:start="83:35" pos:end="83:42"><expr pos:start="83:35" pos:end="83:42"><name pos:start="83:35" pos:end="83:42">matroska</name></expr></argument>)</argument_list></call><operator pos:start="83:44" pos:end="83:44">)</operator> <operator pos:start="83:46" pos:end="83:46">&lt;</operator> <literal type="number" pos:start="83:48" pos:end="83:48">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:23"><block_content pos:start="85:13" pos:end="85:23">

            <return pos:start="85:13" pos:end="85:23">return <expr pos:start="85:20" pos:end="85:22"><name pos:start="85:20" pos:end="85:22">res</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="91:5" pos:end="95:38">/* We now have a Matroska segment.

     * Seeks are from the beginning of the segment,

     * after the segment ID/length. */</comment>

    <if_stmt pos:start="97:5" pos:end="99:19"><if pos:start="97:5" pos:end="99:19">if <condition pos:start="97:8" pos:end="97:52">(<expr pos:start="97:9" pos:end="97:51"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:12">res</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <call pos:start="97:16" pos:end="97:46"><name pos:start="97:16" pos:end="97:31">ebml_read_master</name><argument_list pos:start="97:32" pos:end="97:46">(<argument pos:start="97:33" pos:end="97:40"><expr pos:start="97:33" pos:end="97:40"><name pos:start="97:33" pos:end="97:40">matroska</name></expr></argument>, <argument pos:start="97:43" pos:end="97:45"><expr pos:start="97:43" pos:end="97:45"><operator pos:start="97:43" pos:end="97:43">&amp;</operator><name pos:start="97:44" pos:end="97:45">id</name></expr></argument>)</argument_list></call><operator pos:start="97:47" pos:end="97:47">)</operator> <operator pos:start="97:49" pos:end="97:49">&lt;</operator> <literal type="number" pos:start="97:51" pos:end="97:51">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:19"><block_content pos:start="99:9" pos:end="99:19">

        <return pos:start="99:9" pos:end="99:19">return <expr pos:start="99:16" pos:end="99:18"><name pos:start="99:16" pos:end="99:18">res</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:47"><expr pos:start="101:5" pos:end="101:46"><name pos:start="101:5" pos:end="101:27"><name pos:start="101:5" pos:end="101:12">matroska</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:27">segment_start</name></name> <operator pos:start="101:29" pos:end="101:29">=</operator> <call pos:start="101:31" pos:end="101:46"><name pos:start="101:31" pos:end="101:39">url_ftell</name><argument_list pos:start="101:40" pos:end="101:46">(<argument pos:start="101:41" pos:end="101:45"><expr pos:start="101:41" pos:end="101:45"><name pos:start="101:41" pos:end="101:45"><name pos:start="101:41" pos:end="101:41">s</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:12">matroska</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:24">time_scale</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <literal type="number" pos:start="105:28" pos:end="105:34">1000000</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="107:5" pos:end="107:79">/* we've found our segment, start reading the different contents in here */</comment>

    <while pos:start="109:5" pos:end="277:5">while <condition pos:start="109:11" pos:end="109:20">(<expr pos:start="109:12" pos:end="109:19"><name pos:start="109:12" pos:end="109:14">res</name> <operator pos:start="109:16" pos:end="109:17">==</operator> <literal type="number" pos:start="109:19" pos:end="109:19">0</literal></expr>)</condition> <block pos:start="109:22" pos:end="277:5">{<block_content pos:start="111:9" pos:end="275:9">

        <if_stmt pos:start="111:9" pos:end="123:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:64">(<expr pos:start="111:13" pos:end="111:63"><operator pos:start="111:13" pos:end="111:13">!</operator><operator pos:start="111:14" pos:end="111:14">(</operator><name pos:start="111:15" pos:end="111:16">id</name> <operator pos:start="111:18" pos:end="111:18">=</operator> <call pos:start="111:20" pos:end="111:62"><name pos:start="111:20" pos:end="111:31">ebml_peek_id</name><argument_list pos:start="111:32" pos:end="111:62">(<argument pos:start="111:33" pos:end="111:40"><expr pos:start="111:33" pos:end="111:40"><name pos:start="111:33" pos:end="111:40">matroska</name></expr></argument>, <argument pos:start="111:43" pos:end="111:61"><expr pos:start="111:43" pos:end="111:61"><operator pos:start="111:43" pos:end="111:43">&amp;</operator><name pos:start="111:44" pos:end="111:61"><name pos:start="111:44" pos:end="111:51">matroska</name><operator pos:start="111:52" pos:end="111:53">-&gt;</operator><name pos:start="111:54" pos:end="111:61">level_up</name></name></expr></argument>)</argument_list></call><operator pos:start="111:63" pos:end="111:63">)</operator></expr>)</condition> <block pos:start="111:66" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:18">

            <expr_stmt pos:start="113:13" pos:end="113:31"><expr pos:start="113:13" pos:end="113:30"><name pos:start="113:13" pos:end="113:15">res</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="113:30"><name pos:start="113:19" pos:end="113:25">AVERROR</name><argument_list pos:start="113:26" pos:end="113:30">(<argument pos:start="113:27" pos:end="113:29"><expr pos:start="113:27" pos:end="113:29"><name pos:start="113:27" pos:end="113:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="117:11" pos:end="123:9">else if <condition pos:start="117:19" pos:end="117:38">(<expr pos:start="117:20" pos:end="117:37"><name pos:start="117:20" pos:end="117:37"><name pos:start="117:20" pos:end="117:27">matroska</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:37">level_up</name></name></expr>)</condition> <block pos:start="117:40" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:18">

            <expr_stmt pos:start="119:13" pos:end="119:33"><expr pos:start="119:13" pos:end="119:32"><name pos:start="119:13" pos:end="119:30"><name pos:start="119:13" pos:end="119:20">matroska</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:30">level_up</name></name><operator pos:start="119:31" pos:end="119:32">--</operator></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="127:9" pos:end="265:9">switch <condition pos:start="127:16" pos:end="127:19">(<expr pos:start="127:17" pos:end="127:18"><name pos:start="127:17" pos:end="127:18">id</name></expr>)</condition> <block pos:start="127:21" pos:end="265:9">{<block_content pos:start="131:13" pos:end="263:22">

            <comment type="block" pos:start="129:13" pos:end="129:29">/* stream info */</comment>

            <case pos:start="131:13" pos:end="131:34">case <expr pos:start="131:18" pos:end="131:33"><name pos:start="131:18" pos:end="131:33">MATROSKA_ID_INFO</name></expr>:</case> <block pos:start="131:36" pos:end="141:13">{<block_content pos:start="133:17" pos:end="139:22">

                <if_stmt pos:start="133:17" pos:end="135:26"><if pos:start="133:17" pos:end="135:26">if <condition pos:start="133:20" pos:end="133:64">(<expr pos:start="133:21" pos:end="133:63"><operator pos:start="133:21" pos:end="133:21">(</operator><name pos:start="133:22" pos:end="133:24">res</name> <operator pos:start="133:26" pos:end="133:26">=</operator> <call pos:start="133:28" pos:end="133:58"><name pos:start="133:28" pos:end="133:43">ebml_read_master</name><argument_list pos:start="133:44" pos:end="133:58">(<argument pos:start="133:45" pos:end="133:52"><expr pos:start="133:45" pos:end="133:52"><name pos:start="133:45" pos:end="133:52">matroska</name></expr></argument>, <argument pos:start="133:55" pos:end="133:57"><expr pos:start="133:55" pos:end="133:57"><operator pos:start="133:55" pos:end="133:55">&amp;</operator><name pos:start="133:56" pos:end="133:57">id</name></expr></argument>)</argument_list></call><operator pos:start="133:59" pos:end="133:59">)</operator> <operator pos:start="133:61" pos:end="133:61">&lt;</operator> <literal type="number" pos:start="133:63" pos:end="133:63">0</literal></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:26"><block_content pos:start="135:21" pos:end="135:26">

                    <break pos:start="135:21" pos:end="135:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:52"><expr pos:start="137:17" pos:end="137:51"><name pos:start="137:17" pos:end="137:19">res</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:51"><name pos:start="137:23" pos:end="137:41">matroska_parse_info</name><argument_list pos:start="137:42" pos:end="137:51">(<argument pos:start="137:43" pos:end="137:50"><expr pos:start="137:43" pos:end="137:50"><name pos:start="137:43" pos:end="137:50">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="139:17" pos:end="139:22">break;</break>

            </block_content>}</block>



            <comment type="block" pos:start="145:13" pos:end="145:36">/* track info headers */</comment>

            <case pos:start="147:13" pos:end="147:36">case <expr pos:start="147:18" pos:end="147:35"><name pos:start="147:18" pos:end="147:35">MATROSKA_ID_TRACKS</name></expr>:</case> <block pos:start="147:38" pos:end="157:13">{<block_content pos:start="149:17" pos:end="155:22">

                <if_stmt pos:start="149:17" pos:end="151:26"><if pos:start="149:17" pos:end="151:26">if <condition pos:start="149:20" pos:end="149:64">(<expr pos:start="149:21" pos:end="149:63"><operator pos:start="149:21" pos:end="149:21">(</operator><name pos:start="149:22" pos:end="149:24">res</name> <operator pos:start="149:26" pos:end="149:26">=</operator> <call pos:start="149:28" pos:end="149:58"><name pos:start="149:28" pos:end="149:43">ebml_read_master</name><argument_list pos:start="149:44" pos:end="149:58">(<argument pos:start="149:45" pos:end="149:52"><expr pos:start="149:45" pos:end="149:52"><name pos:start="149:45" pos:end="149:52">matroska</name></expr></argument>, <argument pos:start="149:55" pos:end="149:57"><expr pos:start="149:55" pos:end="149:57"><operator pos:start="149:55" pos:end="149:55">&amp;</operator><name pos:start="149:56" pos:end="149:57">id</name></expr></argument>)</argument_list></call><operator pos:start="149:59" pos:end="149:59">)</operator> <operator pos:start="149:61" pos:end="149:61">&lt;</operator> <literal type="number" pos:start="149:63" pos:end="149:63">0</literal></expr>)</condition><block type="pseudo" pos:start="151:21" pos:end="151:26"><block_content pos:start="151:21" pos:end="151:26">

                    <break pos:start="151:21" pos:end="151:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:54"><expr pos:start="153:17" pos:end="153:53"><name pos:start="153:17" pos:end="153:19">res</name> <operator pos:start="153:21" pos:end="153:21">=</operator> <call pos:start="153:23" pos:end="153:53"><name pos:start="153:23" pos:end="153:43">matroska_parse_tracks</name><argument_list pos:start="153:44" pos:end="153:53">(<argument pos:start="153:45" pos:end="153:52"><expr pos:start="153:45" pos:end="153:52"><name pos:start="153:45" pos:end="153:52">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            </block_content>}</block>



            <comment type="block" pos:start="161:13" pos:end="161:30">/* stream index */</comment>

            <case pos:start="163:13" pos:end="163:34">case <expr pos:start="163:18" pos:end="163:33"><name pos:start="163:18" pos:end="163:33">MATROSKA_ID_CUES</name></expr>:</case> <block pos:start="163:36" pos:end="179:13">{<block_content pos:start="165:17" pos:end="177:22">

                <if_stmt pos:start="165:17" pos:end="175:51"><if pos:start="165:17" pos:end="173:17">if <condition pos:start="165:20" pos:end="165:44">(<expr pos:start="165:21" pos:end="165:43"><operator pos:start="165:21" pos:end="165:21">!</operator><name pos:start="165:22" pos:end="165:43"><name pos:start="165:22" pos:end="165:29">matroska</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:43">index_parsed</name></name></expr>)</condition> <block pos:start="165:46" pos:end="173:17">{<block_content pos:start="167:21" pos:end="171:57">

                    <if_stmt pos:start="167:21" pos:end="169:30"><if pos:start="167:21" pos:end="169:30">if <condition pos:start="167:24" pos:end="167:68">(<expr pos:start="167:25" pos:end="167:67"><operator pos:start="167:25" pos:end="167:25">(</operator><name pos:start="167:26" pos:end="167:28">res</name> <operator pos:start="167:30" pos:end="167:30">=</operator> <call pos:start="167:32" pos:end="167:62"><name pos:start="167:32" pos:end="167:47">ebml_read_master</name><argument_list pos:start="167:48" pos:end="167:62">(<argument pos:start="167:49" pos:end="167:56"><expr pos:start="167:49" pos:end="167:56"><name pos:start="167:49" pos:end="167:56">matroska</name></expr></argument>, <argument pos:start="167:59" pos:end="167:61"><expr pos:start="167:59" pos:end="167:61"><operator pos:start="167:59" pos:end="167:59">&amp;</operator><name pos:start="167:60" pos:end="167:61">id</name></expr></argument>)</argument_list></call><operator pos:start="167:63" pos:end="167:63">)</operator> <operator pos:start="167:65" pos:end="167:65">&lt;</operator> <literal type="number" pos:start="167:67" pos:end="167:67">0</literal></expr>)</condition><block type="pseudo" pos:start="169:25" pos:end="169:30"><block_content pos:start="169:25" pos:end="169:30">

                        <break pos:start="169:25" pos:end="169:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:57"><expr pos:start="171:21" pos:end="171:56"><name pos:start="171:21" pos:end="171:23">res</name> <operator pos:start="171:25" pos:end="171:25">=</operator> <call pos:start="171:27" pos:end="171:56"><name pos:start="171:27" pos:end="171:46">matroska_parse_index</name><argument_list pos:start="171:47" pos:end="171:56">(<argument pos:start="171:48" pos:end="171:55"><expr pos:start="171:48" pos:end="171:55"><name pos:start="171:48" pos:end="171:55">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="173:19" pos:end="175:51">else<block type="pseudo" pos:start="175:21" pos:end="175:51"><block_content pos:start="175:21" pos:end="175:51">

                    <expr_stmt pos:start="175:21" pos:end="175:51"><expr pos:start="175:21" pos:end="175:50"><name pos:start="175:21" pos:end="175:23">res</name> <operator pos:start="175:25" pos:end="175:25">=</operator> <call pos:start="175:27" pos:end="175:50"><name pos:start="175:27" pos:end="175:40">ebml_read_skip</name><argument_list pos:start="175:41" pos:end="175:50">(<argument pos:start="175:42" pos:end="175:49"><expr pos:start="175:42" pos:end="175:49"><name pos:start="175:42" pos:end="175:49">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="177:17" pos:end="177:22">break;</break>

            </block_content>}</block>



            <comment type="block" pos:start="183:13" pos:end="183:26">/* metadata */</comment>

            <case pos:start="185:13" pos:end="185:34">case <expr pos:start="185:18" pos:end="185:33"><name pos:start="185:18" pos:end="185:33">MATROSKA_ID_TAGS</name></expr>:</case> <block pos:start="185:36" pos:end="201:13">{<block_content pos:start="187:17" pos:end="199:22">

                <if_stmt pos:start="187:17" pos:end="197:51"><if pos:start="187:17" pos:end="195:17">if <condition pos:start="187:20" pos:end="187:47">(<expr pos:start="187:21" pos:end="187:46"><operator pos:start="187:21" pos:end="187:21">!</operator><name pos:start="187:22" pos:end="187:46"><name pos:start="187:22" pos:end="187:29">matroska</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:46">metadata_parsed</name></name></expr>)</condition> <block pos:start="187:49" pos:end="195:17">{<block_content pos:start="189:21" pos:end="193:60">

                    <if_stmt pos:start="189:21" pos:end="191:30"><if pos:start="189:21" pos:end="191:30">if <condition pos:start="189:24" pos:end="189:68">(<expr pos:start="189:25" pos:end="189:67"><operator pos:start="189:25" pos:end="189:25">(</operator><name pos:start="189:26" pos:end="189:28">res</name> <operator pos:start="189:30" pos:end="189:30">=</operator> <call pos:start="189:32" pos:end="189:62"><name pos:start="189:32" pos:end="189:47">ebml_read_master</name><argument_list pos:start="189:48" pos:end="189:62">(<argument pos:start="189:49" pos:end="189:56"><expr pos:start="189:49" pos:end="189:56"><name pos:start="189:49" pos:end="189:56">matroska</name></expr></argument>, <argument pos:start="189:59" pos:end="189:61"><expr pos:start="189:59" pos:end="189:61"><operator pos:start="189:59" pos:end="189:59">&amp;</operator><name pos:start="189:60" pos:end="189:61">id</name></expr></argument>)</argument_list></call><operator pos:start="189:63" pos:end="189:63">)</operator> <operator pos:start="189:65" pos:end="189:65">&lt;</operator> <literal type="number" pos:start="189:67" pos:end="189:67">0</literal></expr>)</condition><block type="pseudo" pos:start="191:25" pos:end="191:30"><block_content pos:start="191:25" pos:end="191:30">

                        <break pos:start="191:25" pos:end="191:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:60"><expr pos:start="193:21" pos:end="193:59"><name pos:start="193:21" pos:end="193:23">res</name> <operator pos:start="193:25" pos:end="193:25">=</operator> <call pos:start="193:27" pos:end="193:59"><name pos:start="193:27" pos:end="193:49">matroska_parse_metadata</name><argument_list pos:start="193:50" pos:end="193:59">(<argument pos:start="193:51" pos:end="193:58"><expr pos:start="193:51" pos:end="193:58"><name pos:start="193:51" pos:end="193:58">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="195:19" pos:end="197:51">else<block type="pseudo" pos:start="197:21" pos:end="197:51"><block_content pos:start="197:21" pos:end="197:51">

                    <expr_stmt pos:start="197:21" pos:end="197:51"><expr pos:start="197:21" pos:end="197:50"><name pos:start="197:21" pos:end="197:23">res</name> <operator pos:start="197:25" pos:end="197:25">=</operator> <call pos:start="197:27" pos:end="197:50"><name pos:start="197:27" pos:end="197:40">ebml_read_skip</name><argument_list pos:start="197:41" pos:end="197:50">(<argument pos:start="197:42" pos:end="197:49"><expr pos:start="197:42" pos:end="197:49"><name pos:start="197:42" pos:end="197:49">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="199:17" pos:end="199:22">break;</break>

            </block_content>}</block>



            <comment type="block" pos:start="205:13" pos:end="205:73">/* file index (if seekable, seek to Cues/Tags to parse it) */</comment>

            <case pos:start="207:13" pos:end="207:38">case <expr pos:start="207:18" pos:end="207:37"><name pos:start="207:18" pos:end="207:37">MATROSKA_ID_SEEKHEAD</name></expr>:</case> <block pos:start="207:40" pos:end="217:13">{<block_content pos:start="209:17" pos:end="215:22">

                <if_stmt pos:start="209:17" pos:end="211:26"><if pos:start="209:17" pos:end="211:26">if <condition pos:start="209:20" pos:end="209:64">(<expr pos:start="209:21" pos:end="209:63"><operator pos:start="209:21" pos:end="209:21">(</operator><name pos:start="209:22" pos:end="209:24">res</name> <operator pos:start="209:26" pos:end="209:26">=</operator> <call pos:start="209:28" pos:end="209:58"><name pos:start="209:28" pos:end="209:43">ebml_read_master</name><argument_list pos:start="209:44" pos:end="209:58">(<argument pos:start="209:45" pos:end="209:52"><expr pos:start="209:45" pos:end="209:52"><name pos:start="209:45" pos:end="209:52">matroska</name></expr></argument>, <argument pos:start="209:55" pos:end="209:57"><expr pos:start="209:55" pos:end="209:57"><operator pos:start="209:55" pos:end="209:55">&amp;</operator><name pos:start="209:56" pos:end="209:57">id</name></expr></argument>)</argument_list></call><operator pos:start="209:59" pos:end="209:59">)</operator> <operator pos:start="209:61" pos:end="209:61">&lt;</operator> <literal type="number" pos:start="209:63" pos:end="209:63">0</literal></expr>)</condition><block type="pseudo" pos:start="211:21" pos:end="211:26"><block_content pos:start="211:21" pos:end="211:26">

                    <break pos:start="211:21" pos:end="211:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:56"><expr pos:start="213:17" pos:end="213:55"><name pos:start="213:17" pos:end="213:19">res</name> <operator pos:start="213:21" pos:end="213:21">=</operator> <call pos:start="213:23" pos:end="213:55"><name pos:start="213:23" pos:end="213:45">matroska_parse_seekhead</name><argument_list pos:start="213:46" pos:end="213:55">(<argument pos:start="213:47" pos:end="213:54"><expr pos:start="213:47" pos:end="213:54"><name pos:start="213:47" pos:end="213:54">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="215:17" pos:end="215:22">break;</break>

            </block_content>}</block>



            <case pos:start="221:13" pos:end="221:41">case <expr pos:start="221:18" pos:end="221:40"><name pos:start="221:18" pos:end="221:40">MATROSKA_ID_ATTACHMENTS</name></expr>:</case> <block pos:start="221:43" pos:end="231:13">{<block_content pos:start="223:17" pos:end="229:22">

                <if_stmt pos:start="223:17" pos:end="225:26"><if pos:start="223:17" pos:end="225:26">if <condition pos:start="223:20" pos:end="223:64">(<expr pos:start="223:21" pos:end="223:63"><operator pos:start="223:21" pos:end="223:21">(</operator><name pos:start="223:22" pos:end="223:24">res</name> <operator pos:start="223:26" pos:end="223:26">=</operator> <call pos:start="223:28" pos:end="223:58"><name pos:start="223:28" pos:end="223:43">ebml_read_master</name><argument_list pos:start="223:44" pos:end="223:58">(<argument pos:start="223:45" pos:end="223:52"><expr pos:start="223:45" pos:end="223:52"><name pos:start="223:45" pos:end="223:52">matroska</name></expr></argument>, <argument pos:start="223:55" pos:end="223:57"><expr pos:start="223:55" pos:end="223:57"><operator pos:start="223:55" pos:end="223:55">&amp;</operator><name pos:start="223:56" pos:end="223:57">id</name></expr></argument>)</argument_list></call><operator pos:start="223:59" pos:end="223:59">)</operator> <operator pos:start="223:61" pos:end="223:61">&lt;</operator> <literal type="number" pos:start="223:63" pos:end="223:63">0</literal></expr>)</condition><block type="pseudo" pos:start="225:21" pos:end="225:26"><block_content pos:start="225:21" pos:end="225:26">

                    <break pos:start="225:21" pos:end="225:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:52"><expr pos:start="227:17" pos:end="227:51"><name pos:start="227:17" pos:end="227:19">res</name> <operator pos:start="227:21" pos:end="227:21">=</operator> <call pos:start="227:23" pos:end="227:51"><name pos:start="227:23" pos:end="227:48">matroska_parse_attachments</name><argument_list pos:start="227:49" pos:end="227:51">(<argument pos:start="227:50" pos:end="227:50"><expr pos:start="227:50" pos:end="227:50"><name pos:start="227:50" pos:end="227:50">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="229:17" pos:end="229:22">break;</break>

            </block_content>}</block>



            <case pos:start="235:13" pos:end="235:37">case <expr pos:start="235:18" pos:end="235:36"><name pos:start="235:18" pos:end="235:36">MATROSKA_ID_CLUSTER</name></expr>:</case> <block pos:start="235:39" pos:end="245:13">{<block_content pos:start="241:17" pos:end="243:22">

                <comment type="block" pos:start="237:17" pos:end="239:51">/* Do not read the master - this will be done in the next

                 * call to matroska_read_packet. */</comment>

                <expr_stmt pos:start="241:17" pos:end="241:24"><expr pos:start="241:17" pos:end="241:23"><name pos:start="241:17" pos:end="241:19">res</name> <operator pos:start="241:21" pos:end="241:21">=</operator> <literal type="number" pos:start="241:23" pos:end="241:23">1</literal></expr>;</expr_stmt>

                <break pos:start="243:17" pos:end="243:22">break;</break>

            </block_content>}</block>



            <default pos:start="249:13" pos:end="249:20">default:</default>

                <expr_stmt pos:start="251:17" pos:end="253:69"><expr pos:start="251:17" pos:end="253:68"><call pos:start="251:17" pos:end="253:68"><name pos:start="251:17" pos:end="251:22">av_log</name><argument_list pos:start="251:23" pos:end="253:68">(<argument pos:start="251:24" pos:end="251:36"><expr pos:start="251:24" pos:end="251:36"><name pos:start="251:24" pos:end="251:36"><name pos:start="251:24" pos:end="251:31">matroska</name><operator pos:start="251:32" pos:end="251:33">-&gt;</operator><name pos:start="251:34" pos:end="251:36">ctx</name></name></expr></argument>, <argument pos:start="251:39" pos:end="251:49"><expr pos:start="251:39" pos:end="251:49"><name pos:start="251:39" pos:end="251:49">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="253:24" pos:end="253:63"><expr pos:start="253:24" pos:end="253:63"><literal type="string" pos:start="253:24" pos:end="253:63">"Unknown matroska file header ID 0x%x\n"</literal></expr></argument>, <argument pos:start="253:66" pos:end="253:67"><expr pos:start="253:66" pos:end="253:67"><name pos:start="253:66" pos:end="253:67">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="255:13" pos:end="255:30">/* fall-through */</comment>



            <case pos:start="259:13" pos:end="259:30">case <expr pos:start="259:18" pos:end="259:29"><name pos:start="259:18" pos:end="259:29">EBML_ID_VOID</name></expr>:</case>

                <expr_stmt pos:start="261:17" pos:end="261:47"><expr pos:start="261:17" pos:end="261:46"><name pos:start="261:17" pos:end="261:19">res</name> <operator pos:start="261:21" pos:end="261:21">=</operator> <call pos:start="261:23" pos:end="261:46"><name pos:start="261:23" pos:end="261:36">ebml_read_skip</name><argument_list pos:start="261:37" pos:end="261:46">(<argument pos:start="261:38" pos:end="261:45"><expr pos:start="261:38" pos:end="261:45"><name pos:start="261:38" pos:end="261:45">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="263:17" pos:end="263:22">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="269:9" pos:end="275:9"><if pos:start="269:9" pos:end="275:9">if <condition pos:start="269:12" pos:end="269:31">(<expr pos:start="269:13" pos:end="269:30"><name pos:start="269:13" pos:end="269:30"><name pos:start="269:13" pos:end="269:20">matroska</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:30">level_up</name></name></expr>)</condition> <block pos:start="269:33" pos:end="275:9">{<block_content pos:start="271:13" pos:end="273:18">

            <expr_stmt pos:start="271:13" pos:end="271:33"><expr pos:start="271:13" pos:end="271:32"><name pos:start="271:13" pos:end="271:30"><name pos:start="271:13" pos:end="271:20">matroska</name><operator pos:start="271:21" pos:end="271:22">-&gt;</operator><name pos:start="271:23" pos:end="271:30">level_up</name></name><operator pos:start="271:31" pos:end="271:32">--</operator></expr>;</expr_stmt>

            <break pos:start="273:13" pos:end="273:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="281:5" pos:end="281:34">/* Have we found a cluster? */</comment>

    <if_stmt pos:start="283:5" pos:end="677:5"><if pos:start="283:5" pos:end="677:5">if <condition pos:start="283:8" pos:end="283:60">(<expr pos:start="283:9" pos:end="283:59"><call pos:start="283:9" pos:end="283:36"><name pos:start="283:9" pos:end="283:20">ebml_peek_id</name><argument_list pos:start="283:21" pos:end="283:36">(<argument pos:start="283:22" pos:end="283:29"><expr pos:start="283:22" pos:end="283:29"><name pos:start="283:22" pos:end="283:29">matroska</name></expr></argument>, <argument pos:start="283:32" pos:end="283:35"><expr pos:start="283:32" pos:end="283:35"><name pos:start="283:32" pos:end="283:35">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="283:38" pos:end="283:39">==</operator> <name pos:start="283:41" pos:end="283:59">MATROSKA_ID_CLUSTER</name></expr>)</condition> <block pos:start="283:62" pos:end="677:5">{<block_content pos:start="285:9" pos:end="675:16">

        <decl_stmt pos:start="285:9" pos:end="285:17"><decl pos:start="285:9" pos:end="285:13"><type pos:start="285:9" pos:end="285:11"><name pos:start="285:9" pos:end="285:11">int</name></type> <name pos:start="285:13" pos:end="285:13">i</name></decl>, <decl pos:start="285:16" pos:end="285:16"><type ref="prev" pos:start="285:9" pos:end="285:11"/><name pos:start="285:16" pos:end="285:16">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="287:9" pos:end="287:29"><decl pos:start="287:9" pos:end="287:28"><type pos:start="287:9" pos:end="287:23"><name pos:start="287:9" pos:end="287:21">MatroskaTrack</name> <modifier pos:start="287:23" pos:end="287:23">*</modifier></type><name pos:start="287:24" pos:end="287:28">track</name></decl>;</decl_stmt>

        <decl_stmt pos:start="289:9" pos:end="289:21"><decl pos:start="289:9" pos:end="289:20"><type pos:start="289:9" pos:end="289:18"><name pos:start="289:9" pos:end="289:16">AVStream</name> <modifier pos:start="289:18" pos:end="289:18">*</modifier></type><name pos:start="289:19" pos:end="289:20">st</name></decl>;</decl_stmt>



        <for pos:start="293:9" pos:end="673:9">for <control pos:start="293:13" pos:end="293:50">(<init pos:start="293:14" pos:end="293:19"><expr pos:start="293:14" pos:end="293:18"><name pos:start="293:14" pos:end="293:14">i</name> <operator pos:start="293:16" pos:end="293:16">=</operator> <literal type="number" pos:start="293:18" pos:end="293:18">0</literal></expr>;</init> <condition pos:start="293:21" pos:end="293:45"><expr pos:start="293:21" pos:end="293:44"><name pos:start="293:21" pos:end="293:21">i</name> <operator pos:start="293:23" pos:end="293:23">&lt;</operator> <name pos:start="293:25" pos:end="293:44"><name pos:start="293:25" pos:end="293:32">matroska</name><operator pos:start="293:33" pos:end="293:34">-&gt;</operator><name pos:start="293:35" pos:end="293:44">num_tracks</name></name></expr>;</condition> <incr pos:start="293:47" pos:end="293:49"><expr pos:start="293:47" pos:end="293:49"><name pos:start="293:47" pos:end="293:47">i</name><operator pos:start="293:48" pos:end="293:49">++</operator></expr></incr>)</control> <block pos:start="293:52" pos:end="673:9">{<block_content pos:start="295:13" pos:end="667:13">

            <decl_stmt pos:start="295:13" pos:end="295:50"><decl pos:start="295:13" pos:end="295:49"><type pos:start="295:13" pos:end="295:24"><name pos:start="295:13" pos:end="295:24"><name pos:start="295:13" pos:end="295:16">enum</name> <name pos:start="295:18" pos:end="295:24">CodecID</name></name></type> <name pos:start="295:26" pos:end="295:33">codec_id</name> <init pos:start="295:35" pos:end="295:49">= <expr pos:start="295:37" pos:end="295:49"><name pos:start="295:37" pos:end="295:49">CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="297:13" pos:end="297:38"><decl pos:start="297:13" pos:end="297:37"><type pos:start="297:13" pos:end="297:21"><name pos:start="297:13" pos:end="297:19">uint8_t</name> <modifier pos:start="297:21" pos:end="297:21">*</modifier></type><name pos:start="297:22" pos:end="297:30">extradata</name> <init pos:start="297:32" pos:end="297:37">= <expr pos:start="297:34" pos:end="297:37"><name pos:start="297:34" pos:end="297:37">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="299:13" pos:end="299:35"><decl pos:start="299:13" pos:end="299:34"><type pos:start="299:13" pos:end="299:15"><name pos:start="299:13" pos:end="299:15">int</name></type> <name pos:start="299:17" pos:end="299:30">extradata_size</name> <init pos:start="299:32" pos:end="299:34">= <expr pos:start="299:34" pos:end="299:34"><literal type="number" pos:start="299:34" pos:end="299:34">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="301:13" pos:end="301:37"><decl pos:start="301:13" pos:end="301:36"><type pos:start="301:13" pos:end="301:15"><name pos:start="301:13" pos:end="301:15">int</name></type> <name pos:start="301:17" pos:end="301:32">extradata_offset</name> <init pos:start="301:34" pos:end="301:36">= <expr pos:start="301:36" pos:end="301:36"><literal type="number" pos:start="301:36" pos:end="301:36">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:40"><expr pos:start="303:13" pos:end="303:39"><name pos:start="303:13" pos:end="303:17">track</name> <operator pos:start="303:19" pos:end="303:19">=</operator> <name pos:start="303:21" pos:end="303:39"><name pos:start="303:21" pos:end="303:28">matroska</name><operator pos:start="303:29" pos:end="303:30">-&gt;</operator><name pos:start="303:31" pos:end="303:36">tracks</name><index pos:start="303:37" pos:end="303:39">[<expr pos:start="303:38" pos:end="303:38"><name pos:start="303:38" pos:end="303:38">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:37"><expr pos:start="305:13" pos:end="305:36"><name pos:start="305:13" pos:end="305:31"><name pos:start="305:13" pos:end="305:17">track</name><operator pos:start="305:18" pos:end="305:19">-&gt;</operator><name pos:start="305:20" pos:end="305:31">stream_index</name></name> <operator pos:start="305:33" pos:end="305:33">=</operator> <operator pos:start="305:35" pos:end="305:35">-</operator><literal type="number" pos:start="305:36" pos:end="305:36">1</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="309:13" pos:end="309:43">/* Apply some sanity checks. */</comment>

            <if_stmt pos:start="311:13" pos:end="313:25"><if pos:start="311:13" pos:end="313:25">if <condition pos:start="311:16" pos:end="311:40">(<expr pos:start="311:17" pos:end="311:39"><name pos:start="311:17" pos:end="311:31"><name pos:start="311:17" pos:end="311:21">track</name><operator pos:start="311:22" pos:end="311:23">-&gt;</operator><name pos:start="311:24" pos:end="311:31">codec_id</name></name> <operator pos:start="311:33" pos:end="311:34">==</operator> <name pos:start="311:36" pos:end="311:39">NULL</name></expr>)</condition><block type="pseudo" pos:start="313:17" pos:end="313:25"><block_content pos:start="313:17" pos:end="313:25">

                <continue pos:start="313:17" pos:end="313:25">continue;</continue></block_content></block></if></if_stmt>



            <for pos:start="317:13" pos:end="329:13">for<control pos:start="317:16" pos:end="317:67">(<init pos:start="317:17" pos:end="317:20"><expr pos:start="317:17" pos:end="317:19"><name pos:start="317:17" pos:end="317:17">j</name><operator pos:start="317:18" pos:end="317:18">=</operator><literal type="number" pos:start="317:19" pos:end="317:19">0</literal></expr>;</init> <condition pos:start="317:22" pos:end="317:62"><expr pos:start="317:22" pos:end="317:61"><name pos:start="317:22" pos:end="317:41"><name pos:start="317:22" pos:end="317:38">ff_mkv_codec_tags</name><index pos:start="317:39" pos:end="317:41">[<expr pos:start="317:40" pos:end="317:40"><name pos:start="317:40" pos:end="317:40">j</name></expr>]</index></name><operator pos:start="317:42" pos:end="317:42">.</operator><name pos:start="317:43" pos:end="317:44">id</name> <operator pos:start="317:46" pos:end="317:47">!=</operator> <name pos:start="317:49" pos:end="317:61">CODEC_ID_NONE</name></expr>;</condition> <incr pos:start="317:64" pos:end="317:66"><expr pos:start="317:64" pos:end="317:66"><name pos:start="317:64" pos:end="317:64">j</name><operator pos:start="317:65" pos:end="317:66">++</operator></expr></incr>)</control><block pos:start="317:68" pos:end="329:13">{<block_content pos:start="319:17" pos:end="327:17">

                <if_stmt pos:start="319:17" pos:end="327:17"><if pos:start="319:17" pos:end="327:17">if<condition pos:start="319:19" pos:end="321:62">(<expr pos:start="319:20" pos:end="321:61"><operator pos:start="319:20" pos:end="319:20">!</operator><call pos:start="319:21" pos:end="321:61"><name pos:start="319:21" pos:end="319:27">strncmp</name><argument_list pos:start="319:28" pos:end="321:61">(<argument pos:start="319:29" pos:end="319:52"><expr pos:start="319:29" pos:end="319:52"><name pos:start="319:29" pos:end="319:48"><name pos:start="319:29" pos:end="319:45">ff_mkv_codec_tags</name><index pos:start="319:46" pos:end="319:48">[<expr pos:start="319:47" pos:end="319:47"><name pos:start="319:47" pos:end="319:47">j</name></expr>]</index></name><operator pos:start="319:49" pos:end="319:49">.</operator><name pos:start="319:50" pos:end="319:52">str</name></expr></argument>, <argument pos:start="319:55" pos:end="319:69"><expr pos:start="319:55" pos:end="319:69"><name pos:start="319:55" pos:end="319:69"><name pos:start="319:55" pos:end="319:59">track</name><operator pos:start="319:60" pos:end="319:61">-&gt;</operator><name pos:start="319:62" pos:end="319:69">codec_id</name></name></expr></argument>,

                            <argument pos:start="321:29" pos:end="321:60"><expr pos:start="321:29" pos:end="321:60"><call pos:start="321:29" pos:end="321:60"><name pos:start="321:29" pos:end="321:34">strlen</name><argument_list pos:start="321:35" pos:end="321:60">(<argument pos:start="321:36" pos:end="321:59"><expr pos:start="321:36" pos:end="321:59"><name pos:start="321:36" pos:end="321:55"><name pos:start="321:36" pos:end="321:52">ff_mkv_codec_tags</name><index pos:start="321:53" pos:end="321:55">[<expr pos:start="321:54" pos:end="321:54"><name pos:start="321:54" pos:end="321:54">j</name></expr>]</index></name><operator pos:start="321:56" pos:end="321:56">.</operator><name pos:start="321:57" pos:end="321:59">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="321:63" pos:end="327:17">{<block_content pos:start="323:21" pos:end="325:26">

                    <expr_stmt pos:start="323:21" pos:end="323:54"><expr pos:start="323:21" pos:end="323:53"><name pos:start="323:21" pos:end="323:28">codec_id</name><operator pos:start="323:29" pos:end="323:29">=</operator> <name pos:start="323:31" pos:end="323:50"><name pos:start="323:31" pos:end="323:47">ff_mkv_codec_tags</name><index pos:start="323:48" pos:end="323:50">[<expr pos:start="323:49" pos:end="323:49"><name pos:start="323:49" pos:end="323:49">j</name></expr>]</index></name><operator pos:start="323:51" pos:end="323:51">.</operator><name pos:start="323:52" pos:end="323:53">id</name></expr>;</expr_stmt>

                    <break pos:start="325:21" pos:end="325:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <comment type="block" pos:start="333:13" pos:end="333:50">/* Set the FourCC from the CodecID. */</comment>

            <comment type="block" pos:start="335:13" pos:end="337:55">/* This is the MS compatibility mode which stores a

             * BITMAPINFOHEADER in the CodecPrivate. */</comment>

            <if_stmt pos:start="339:13" pos:end="535:13"><if pos:start="339:13" pos:end="359:13">if <condition pos:start="339:16" pos:end="345:44">(<expr pos:start="339:17" pos:end="345:43"><operator pos:start="339:17" pos:end="339:17">!</operator><call pos:start="339:18" pos:end="341:59"><name pos:start="339:18" pos:end="339:23">strcmp</name><argument_list pos:start="339:24" pos:end="341:59">(<argument pos:start="339:25" pos:end="339:39"><expr pos:start="339:25" pos:end="339:39"><name pos:start="339:25" pos:end="339:39"><name pos:start="339:25" pos:end="339:29">track</name><operator pos:start="339:30" pos:end="339:31">-&gt;</operator><name pos:start="339:32" pos:end="339:39">codec_id</name></name></expr></argument>,

                        <argument pos:start="341:25" pos:end="341:58"><expr pos:start="341:25" pos:end="341:58"><name pos:start="341:25" pos:end="341:58">MATROSKA_CODEC_ID_VIDEO_VFW_FOURCC</name></expr></argument>)</argument_list></call> <operator pos:start="341:61" pos:end="341:62">&amp;&amp;</operator>

                <operator pos:start="343:17" pos:end="343:17">(</operator><name pos:start="343:18" pos:end="343:39"><name pos:start="343:18" pos:end="343:22">track</name><operator pos:start="343:23" pos:end="343:24">-&gt;</operator><name pos:start="343:25" pos:end="343:39">codec_priv_size</name></name> <operator pos:start="343:41" pos:end="343:42">&gt;=</operator> <literal type="number" pos:start="343:44" pos:end="343:45">40</literal><operator pos:start="343:46" pos:end="343:46">)</operator> <operator pos:start="343:48" pos:end="343:49">&amp;&amp;</operator>

                <operator pos:start="345:17" pos:end="345:17">(</operator><name pos:start="345:18" pos:end="345:34"><name pos:start="345:18" pos:end="345:22">track</name><operator pos:start="345:23" pos:end="345:24">-&gt;</operator><name pos:start="345:25" pos:end="345:34">codec_priv</name></name> <operator pos:start="345:36" pos:end="345:37">!=</operator> <name pos:start="345:39" pos:end="345:42">NULL</name><operator pos:start="345:43" pos:end="345:43">)</operator></expr>)</condition> <block pos:start="345:46" pos:end="359:13">{<block_content pos:start="347:17" pos:end="355:72">

                <decl_stmt pos:start="347:17" pos:end="347:74"><decl pos:start="347:17" pos:end="347:73"><type pos:start="347:17" pos:end="347:36"><name pos:start="347:17" pos:end="347:34">MatroskaVideoTrack</name> <modifier pos:start="347:36" pos:end="347:36">*</modifier></type><name pos:start="347:37" pos:end="347:42">vtrack</name> <init pos:start="347:44" pos:end="347:73">= <expr pos:start="347:46" pos:end="347:73"><operator pos:start="347:46" pos:end="347:46">(</operator><name pos:start="347:47" pos:end="347:64">MatroskaVideoTrack</name> <operator pos:start="347:66" pos:end="347:66">*</operator><operator pos:start="347:67" pos:end="347:67">)</operator> <name pos:start="347:69" pos:end="347:73">track</name></expr></init></decl>;</decl_stmt>



                <comment type="block" pos:start="351:17" pos:end="351:60">/* Offset of biCompression. Stored in LE. */</comment>

                <expr_stmt pos:start="353:17" pos:end="353:65"><expr pos:start="353:17" pos:end="353:64"><name pos:start="353:17" pos:end="353:30"><name pos:start="353:17" pos:end="353:22">vtrack</name><operator pos:start="353:23" pos:end="353:24">-&gt;</operator><name pos:start="353:25" pos:end="353:30">fourcc</name></name> <operator pos:start="353:32" pos:end="353:32">=</operator> <call pos:start="353:34" pos:end="353:64"><name pos:start="353:34" pos:end="353:40">AV_RL32</name><argument_list pos:start="353:41" pos:end="353:64">(<argument pos:start="353:42" pos:end="353:63"><expr pos:start="353:42" pos:end="353:63"><name pos:start="353:42" pos:end="353:58"><name pos:start="353:42" pos:end="353:46">track</name><operator pos:start="353:47" pos:end="353:48">-&gt;</operator><name pos:start="353:49" pos:end="353:58">codec_priv</name></name> <operator pos:start="353:60" pos:end="353:60">+</operator> <literal type="number" pos:start="353:62" pos:end="353:63">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:72"><expr pos:start="355:17" pos:end="355:71"><name pos:start="355:17" pos:end="355:24">codec_id</name> <operator pos:start="355:26" pos:end="355:26">=</operator> <call pos:start="355:28" pos:end="355:71"><name pos:start="355:28" pos:end="355:39">codec_get_id</name><argument_list pos:start="355:40" pos:end="355:71">(<argument pos:start="355:41" pos:end="355:54"><expr pos:start="355:41" pos:end="355:54"><name pos:start="355:41" pos:end="355:54">codec_bmp_tags</name></expr></argument>, <argument pos:start="355:57" pos:end="355:70"><expr pos:start="355:57" pos:end="355:70"><name pos:start="355:57" pos:end="355:70"><name pos:start="355:57" pos:end="355:62">vtrack</name><operator pos:start="355:63" pos:end="355:64">-&gt;</operator><name pos:start="355:65" pos:end="355:70">fourcc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            </block_content>}</block></if>



            <comment type="block" pos:start="363:13" pos:end="365:51">/* This is the MS compatibility mode which stores a

             * WAVEFORMATEX in the CodecPrivate. */</comment>

            <if type="elseif" pos:start="367:13" pos:end="387:13">else if <condition pos:start="367:21" pos:end="373:44">(<expr pos:start="367:22" pos:end="373:43"><operator pos:start="367:22" pos:end="367:22">!</operator><call pos:start="367:23" pos:end="369:57"><name pos:start="367:23" pos:end="367:28">strcmp</name><argument_list pos:start="367:29" pos:end="369:57">(<argument pos:start="367:30" pos:end="367:44"><expr pos:start="367:30" pos:end="367:44"><name pos:start="367:30" pos:end="367:44"><name pos:start="367:30" pos:end="367:34">track</name><operator pos:start="367:35" pos:end="367:36">-&gt;</operator><name pos:start="367:37" pos:end="367:44">codec_id</name></name></expr></argument>,

                             <argument pos:start="369:30" pos:end="369:56"><expr pos:start="369:30" pos:end="369:56"><name pos:start="369:30" pos:end="369:56">MATROSKA_CODEC_ID_AUDIO_ACM</name></expr></argument>)</argument_list></call> <operator pos:start="369:59" pos:end="369:60">&amp;&amp;</operator>

                <operator pos:start="371:17" pos:end="371:17">(</operator><name pos:start="371:18" pos:end="371:39"><name pos:start="371:18" pos:end="371:22">track</name><operator pos:start="371:23" pos:end="371:24">-&gt;</operator><name pos:start="371:25" pos:end="371:39">codec_priv_size</name></name> <operator pos:start="371:41" pos:end="371:42">&gt;=</operator> <literal type="number" pos:start="371:44" pos:end="371:45">18</literal><operator pos:start="371:46" pos:end="371:46">)</operator> <operator pos:start="371:48" pos:end="371:49">&amp;&amp;</operator>

                <operator pos:start="373:17" pos:end="373:17">(</operator><name pos:start="373:18" pos:end="373:34"><name pos:start="373:18" pos:end="373:22">track</name><operator pos:start="373:23" pos:end="373:24">-&gt;</operator><name pos:start="373:25" pos:end="373:34">codec_priv</name></name> <operator pos:start="373:36" pos:end="373:37">!=</operator> <name pos:start="373:39" pos:end="373:42">NULL</name><operator pos:start="373:43" pos:end="373:43">)</operator></expr>)</condition> <block pos:start="373:46" pos:end="387:13">{<block_content pos:start="375:17" pos:end="383:61">

                <decl_stmt pos:start="375:17" pos:end="375:29"><decl pos:start="375:17" pos:end="375:28"><type pos:start="375:17" pos:end="375:24"><name pos:start="375:17" pos:end="375:24">uint16_t</name></type> <name pos:start="375:26" pos:end="375:28">tag</name></decl>;</decl_stmt>



                <comment type="block" pos:start="379:17" pos:end="379:57">/* Offset of wFormatTag. Stored in LE. */</comment>

                <expr_stmt pos:start="381:17" pos:end="381:49"><expr pos:start="381:17" pos:end="381:48"><name pos:start="381:17" pos:end="381:19">tag</name> <operator pos:start="381:21" pos:end="381:21">=</operator> <call pos:start="381:23" pos:end="381:48"><name pos:start="381:23" pos:end="381:29">AV_RL16</name><argument_list pos:start="381:30" pos:end="381:48">(<argument pos:start="381:31" pos:end="381:47"><expr pos:start="381:31" pos:end="381:47"><name pos:start="381:31" pos:end="381:47"><name pos:start="381:31" pos:end="381:35">track</name><operator pos:start="381:36" pos:end="381:37">-&gt;</operator><name pos:start="381:38" pos:end="381:47">codec_priv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="383:17" pos:end="383:61"><expr pos:start="383:17" pos:end="383:60"><name pos:start="383:17" pos:end="383:24">codec_id</name> <operator pos:start="383:26" pos:end="383:26">=</operator> <call pos:start="383:28" pos:end="383:60"><name pos:start="383:28" pos:end="383:39">codec_get_id</name><argument_list pos:start="383:40" pos:end="383:60">(<argument pos:start="383:41" pos:end="383:54"><expr pos:start="383:41" pos:end="383:54"><name pos:start="383:41" pos:end="383:54">codec_wav_tags</name></expr></argument>, <argument pos:start="383:57" pos:end="383:59"><expr pos:start="383:57" pos:end="383:59"><name pos:start="383:57" pos:end="383:59">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            </block_content>}</block></if>



            <if type="elseif" pos:start="391:13" pos:end="427:13">else if <condition pos:start="391:21" pos:end="391:73">(<expr pos:start="391:22" pos:end="391:72"><name pos:start="391:22" pos:end="391:29">codec_id</name> <operator pos:start="391:31" pos:end="391:32">==</operator> <name pos:start="391:34" pos:end="391:45">CODEC_ID_AAC</name> <operator pos:start="391:47" pos:end="391:48">&amp;&amp;</operator> <operator pos:start="391:50" pos:end="391:50">!</operator><name pos:start="391:51" pos:end="391:72"><name pos:start="391:51" pos:end="391:55">track</name><operator pos:start="391:56" pos:end="391:57">-&gt;</operator><name pos:start="391:58" pos:end="391:72">codec_priv_size</name></name></expr>)</condition> <block pos:start="391:75" pos:end="427:13">{<block_content pos:start="393:17" pos:end="425:17">

                <decl_stmt pos:start="393:17" pos:end="393:78"><decl pos:start="393:17" pos:end="393:77"><type pos:start="393:17" pos:end="393:36"><name pos:start="393:17" pos:end="393:34">MatroskaAudioTrack</name> <modifier pos:start="393:36" pos:end="393:36">*</modifier></type><name pos:start="393:37" pos:end="393:46">audiotrack</name> <init pos:start="393:48" pos:end="393:77">= <expr pos:start="393:50" pos:end="393:77"><operator pos:start="393:50" pos:end="393:50">(</operator><name pos:start="393:51" pos:end="393:68">MatroskaAudioTrack</name> <operator pos:start="393:70" pos:end="393:70">*</operator><operator pos:start="393:71" pos:end="393:71">)</operator> <name pos:start="393:73" pos:end="393:77">track</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="395:17" pos:end="395:68"><decl pos:start="395:17" pos:end="395:67"><type pos:start="395:17" pos:end="395:19"><name pos:start="395:17" pos:end="395:19">int</name></type> <name pos:start="395:21" pos:end="395:27">profile</name> <init pos:start="395:29" pos:end="395:67">= <expr pos:start="395:31" pos:end="395:67"><call pos:start="395:31" pos:end="395:67"><name pos:start="395:31" pos:end="395:50">matroska_aac_profile</name><argument_list pos:start="395:51" pos:end="395:67">(<argument pos:start="395:52" pos:end="395:66"><expr pos:start="395:52" pos:end="395:66"><name pos:start="395:52" pos:end="395:66"><name pos:start="395:52" pos:end="395:56">track</name><operator pos:start="395:57" pos:end="395:58">-&gt;</operator><name pos:start="395:59" pos:end="395:66">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="397:17" pos:end="397:76"><decl pos:start="397:17" pos:end="397:75"><type pos:start="397:17" pos:end="397:19"><name pos:start="397:17" pos:end="397:19">int</name></type> <name pos:start="397:21" pos:end="397:23">sri</name> <init pos:start="397:25" pos:end="397:75">= <expr pos:start="397:27" pos:end="397:75"><call pos:start="397:27" pos:end="397:75"><name pos:start="397:27" pos:end="397:42">matroska_aac_sri</name><argument_list pos:start="397:43" pos:end="397:75">(<argument pos:start="397:44" pos:end="397:74"><expr pos:start="397:44" pos:end="397:74"><name pos:start="397:44" pos:end="397:74"><name pos:start="397:44" pos:end="397:53">audiotrack</name><operator pos:start="397:54" pos:end="397:55">-&gt;</operator><name pos:start="397:56" pos:end="397:74">internal_samplerate</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:41"><expr pos:start="399:17" pos:end="399:40"><name pos:start="399:17" pos:end="399:25">extradata</name> <operator pos:start="399:27" pos:end="399:27">=</operator> <call pos:start="399:29" pos:end="399:40"><name pos:start="399:29" pos:end="399:37">av_malloc</name><argument_list pos:start="399:38" pos:end="399:40">(<argument pos:start="399:39" pos:end="399:39"><expr pos:start="399:39" pos:end="399:39"><literal type="number" pos:start="399:39" pos:end="399:39">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="401:17" pos:end="403:43"><if pos:start="401:17" pos:end="403:43">if <condition pos:start="401:20" pos:end="401:38">(<expr pos:start="401:21" pos:end="401:37"><name pos:start="401:21" pos:end="401:29">extradata</name> <operator pos:start="401:31" pos:end="401:32">==</operator> <name pos:start="401:34" pos:end="401:37">NULL</name></expr>)</condition><block type="pseudo" pos:start="403:21" pos:end="403:43"><block_content pos:start="403:21" pos:end="403:43">

                    <return pos:start="403:21" pos:end="403:43">return <expr pos:start="403:28" pos:end="403:42"><call pos:start="403:28" pos:end="403:42"><name pos:start="403:28" pos:end="403:34">AVERROR</name><argument_list pos:start="403:35" pos:end="403:42">(<argument pos:start="403:36" pos:end="403:41"><expr pos:start="403:36" pos:end="403:41"><name pos:start="403:36" pos:end="403:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="405:17" pos:end="405:66"><expr pos:start="405:17" pos:end="405:65"><name pos:start="405:17" pos:end="405:28"><name pos:start="405:17" pos:end="405:25">extradata</name><index pos:start="405:26" pos:end="405:28">[<expr pos:start="405:27" pos:end="405:27"><literal type="number" pos:start="405:27" pos:end="405:27">0</literal></expr>]</index></name> <operator pos:start="405:30" pos:end="405:30">=</operator> <operator pos:start="405:32" pos:end="405:32">(</operator><name pos:start="405:33" pos:end="405:39">profile</name> <operator pos:start="405:41" pos:end="405:42">&lt;&lt;</operator> <literal type="number" pos:start="405:44" pos:end="405:44">3</literal><operator pos:start="405:45" pos:end="405:45">)</operator> <operator pos:start="405:47" pos:end="405:47">|</operator> <operator pos:start="405:49" pos:end="405:49">(</operator><operator pos:start="405:50" pos:end="405:50">(</operator><name pos:start="405:51" pos:end="405:53">sri</name><operator pos:start="405:54" pos:end="405:54">&amp;</operator><literal type="number" pos:start="405:55" pos:end="405:58">0x0E</literal><operator pos:start="405:59" pos:end="405:59">)</operator> <operator pos:start="405:61" pos:end="405:62">&gt;&gt;</operator> <literal type="number" pos:start="405:64" pos:end="405:64">1</literal><operator pos:start="405:65" pos:end="405:65">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="407:17" pos:end="407:77"><expr pos:start="407:17" pos:end="407:76"><name pos:start="407:17" pos:end="407:28"><name pos:start="407:17" pos:end="407:25">extradata</name><index pos:start="407:26" pos:end="407:28">[<expr pos:start="407:27" pos:end="407:27"><literal type="number" pos:start="407:27" pos:end="407:27">1</literal></expr>]</index></name> <operator pos:start="407:30" pos:end="407:30">=</operator> <operator pos:start="407:32" pos:end="407:32">(</operator><operator pos:start="407:33" pos:end="407:33">(</operator><name pos:start="407:34" pos:end="407:36">sri</name><operator pos:start="407:37" pos:end="407:37">&amp;</operator><literal type="number" pos:start="407:38" pos:end="407:41">0x01</literal><operator pos:start="407:42" pos:end="407:42">)</operator> <operator pos:start="407:44" pos:end="407:45">&lt;&lt;</operator> <literal type="number" pos:start="407:47" pos:end="407:47">7</literal><operator pos:start="407:48" pos:end="407:48">)</operator> <operator pos:start="407:50" pos:end="407:50">|</operator> <operator pos:start="407:52" pos:end="407:52">(</operator><name pos:start="407:53" pos:end="407:72"><name pos:start="407:53" pos:end="407:62">audiotrack</name><operator pos:start="407:63" pos:end="407:64">-&gt;</operator><name pos:start="407:65" pos:end="407:72">channels</name></name><operator pos:start="407:73" pos:end="407:74">&lt;&lt;</operator><literal type="number" pos:start="407:75" pos:end="407:75">3</literal><operator pos:start="407:76" pos:end="407:76">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="409:17" pos:end="425:17"><if pos:start="409:17" pos:end="421:17">if <condition pos:start="409:20" pos:end="409:51">(<expr pos:start="409:21" pos:end="409:50"><call pos:start="409:21" pos:end="409:50"><name pos:start="409:21" pos:end="409:26">strstr</name><argument_list pos:start="409:27" pos:end="409:50">(<argument pos:start="409:28" pos:end="409:42"><expr pos:start="409:28" pos:end="409:42"><name pos:start="409:28" pos:end="409:42"><name pos:start="409:28" pos:end="409:32">track</name><operator pos:start="409:33" pos:end="409:34">-&gt;</operator><name pos:start="409:35" pos:end="409:42">codec_id</name></name></expr></argument>, <argument pos:start="409:45" pos:end="409:49"><expr pos:start="409:45" pos:end="409:49"><literal type="string" pos:start="409:45" pos:end="409:49">"SBR"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="409:53" pos:end="421:17">{<block_content pos:start="411:21" pos:end="419:39">

                    <expr_stmt pos:start="411:21" pos:end="411:67"><expr pos:start="411:21" pos:end="411:66"><name pos:start="411:21" pos:end="411:23">sri</name> <operator pos:start="411:25" pos:end="411:25">=</operator> <call pos:start="411:27" pos:end="411:66"><name pos:start="411:27" pos:end="411:42">matroska_aac_sri</name><argument_list pos:start="411:43" pos:end="411:66">(<argument pos:start="411:44" pos:end="411:65"><expr pos:start="411:44" pos:end="411:65"><name pos:start="411:44" pos:end="411:65"><name pos:start="411:44" pos:end="411:53">audiotrack</name><operator pos:start="411:54" pos:end="411:55">-&gt;</operator><name pos:start="411:56" pos:end="411:65">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="413:21" pos:end="413:40"><expr pos:start="413:21" pos:end="413:39"><name pos:start="413:21" pos:end="413:32"><name pos:start="413:21" pos:end="413:29">extradata</name><index pos:start="413:30" pos:end="413:32">[<expr pos:start="413:31" pos:end="413:31"><literal type="number" pos:start="413:31" pos:end="413:31">2</literal></expr>]</index></name> <operator pos:start="413:34" pos:end="413:34">=</operator> <literal type="number" pos:start="413:36" pos:end="413:39">0x56</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="415:21" pos:end="415:40"><expr pos:start="415:21" pos:end="415:39"><name pos:start="415:21" pos:end="415:32"><name pos:start="415:21" pos:end="415:29">extradata</name><index pos:start="415:30" pos:end="415:32">[<expr pos:start="415:31" pos:end="415:31"><literal type="number" pos:start="415:31" pos:end="415:31">3</literal></expr>]</index></name> <operator pos:start="415:34" pos:end="415:34">=</operator> <literal type="number" pos:start="415:36" pos:end="415:39">0xE5</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="417:21" pos:end="417:51"><expr pos:start="417:21" pos:end="417:50"><name pos:start="417:21" pos:end="417:32"><name pos:start="417:21" pos:end="417:29">extradata</name><index pos:start="417:30" pos:end="417:32">[<expr pos:start="417:31" pos:end="417:31"><literal type="number" pos:start="417:31" pos:end="417:31">4</literal></expr>]</index></name> <operator pos:start="417:34" pos:end="417:34">=</operator> <literal type="number" pos:start="417:36" pos:end="417:39">0x80</literal> <operator pos:start="417:41" pos:end="417:41">|</operator> <operator pos:start="417:43" pos:end="417:43">(</operator><name pos:start="417:44" pos:end="417:46">sri</name><operator pos:start="417:47" pos:end="417:48">&lt;&lt;</operator><literal type="number" pos:start="417:49" pos:end="417:49">3</literal><operator pos:start="417:50" pos:end="417:50">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="419:21" pos:end="419:39"><expr pos:start="419:21" pos:end="419:38"><name pos:start="419:21" pos:end="419:34">extradata_size</name> <operator pos:start="419:36" pos:end="419:36">=</operator> <literal type="number" pos:start="419:38" pos:end="419:38">5</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="421:19" pos:end="425:17">else <block pos:start="421:24" pos:end="425:17">{<block_content pos:start="423:21" pos:end="423:39">

                    <expr_stmt pos:start="423:21" pos:end="423:39"><expr pos:start="423:21" pos:end="423:38"><name pos:start="423:21" pos:end="423:34">extradata_size</name> <operator pos:start="423:36" pos:end="423:36">=</operator> <literal type="number" pos:start="423:38" pos:end="423:38">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if>



            <if type="elseif" pos:start="431:13" pos:end="461:13">else if <condition pos:start="431:21" pos:end="431:46">(<expr pos:start="431:22" pos:end="431:45"><name pos:start="431:22" pos:end="431:29">codec_id</name> <operator pos:start="431:31" pos:end="431:32">==</operator> <name pos:start="431:34" pos:end="431:45">CODEC_ID_TTA</name></expr>)</condition> <block pos:start="431:48" pos:end="461:13">{<block_content pos:start="433:17" pos:end="459:79">

                <decl_stmt pos:start="433:17" pos:end="433:78"><decl pos:start="433:17" pos:end="433:77"><type pos:start="433:17" pos:end="433:36"><name pos:start="433:17" pos:end="433:34">MatroskaAudioTrack</name> <modifier pos:start="433:36" pos:end="433:36">*</modifier></type><name pos:start="433:37" pos:end="433:46">audiotrack</name> <init pos:start="433:48" pos:end="433:77">= <expr pos:start="433:50" pos:end="433:77"><operator pos:start="433:50" pos:end="433:50">(</operator><name pos:start="433:51" pos:end="433:68">MatroskaAudioTrack</name> <operator pos:start="433:70" pos:end="433:70">*</operator><operator pos:start="433:71" pos:end="433:71">)</operator> <name pos:start="433:73" pos:end="433:77">track</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="435:17" pos:end="435:32"><decl pos:start="435:17" pos:end="435:31"><type pos:start="435:17" pos:end="435:29"><name pos:start="435:17" pos:end="435:29">ByteIOContext</name></type> <name pos:start="435:31" pos:end="435:31">b</name></decl>;</decl_stmt>

                <expr_stmt pos:start="437:17" pos:end="437:36"><expr pos:start="437:17" pos:end="437:35"><name pos:start="437:17" pos:end="437:30">extradata_size</name> <operator pos:start="437:32" pos:end="437:32">=</operator> <literal type="number" pos:start="437:34" pos:end="437:35">30</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="439:17" pos:end="439:55"><expr pos:start="439:17" pos:end="439:54"><name pos:start="439:17" pos:end="439:25">extradata</name> <operator pos:start="439:27" pos:end="439:27">=</operator> <call pos:start="439:29" pos:end="439:54"><name pos:start="439:29" pos:end="439:38">av_mallocz</name><argument_list pos:start="439:39" pos:end="439:54">(<argument pos:start="439:40" pos:end="439:53"><expr pos:start="439:40" pos:end="439:53"><name pos:start="439:40" pos:end="439:53">extradata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="441:17" pos:end="443:43"><if pos:start="441:17" pos:end="443:43">if <condition pos:start="441:20" pos:end="441:38">(<expr pos:start="441:21" pos:end="441:37"><name pos:start="441:21" pos:end="441:29">extradata</name> <operator pos:start="441:31" pos:end="441:32">==</operator> <name pos:start="441:34" pos:end="441:37">NULL</name></expr>)</condition><block type="pseudo" pos:start="443:21" pos:end="443:43"><block_content pos:start="443:21" pos:end="443:43">

                    <return pos:start="443:21" pos:end="443:43">return <expr pos:start="443:28" pos:end="443:42"><call pos:start="443:28" pos:end="443:42"><name pos:start="443:28" pos:end="443:34">AVERROR</name><argument_list pos:start="443:35" pos:end="443:42">(<argument pos:start="443:36" pos:end="443:41"><expr pos:start="443:36" pos:end="443:41"><name pos:start="443:36" pos:end="443:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="445:17" pos:end="447:54"><expr pos:start="445:17" pos:end="447:53"><call pos:start="445:17" pos:end="447:53"><name pos:start="445:17" pos:end="445:29">init_put_byte</name><argument_list pos:start="445:30" pos:end="447:53">(<argument pos:start="445:31" pos:end="445:32"><expr pos:start="445:31" pos:end="445:32"><operator pos:start="445:31" pos:end="445:31">&amp;</operator><name pos:start="445:32" pos:end="445:32">b</name></expr></argument>, <argument pos:start="445:35" pos:end="445:43"><expr pos:start="445:35" pos:end="445:43"><name pos:start="445:35" pos:end="445:43">extradata</name></expr></argument>, <argument pos:start="445:46" pos:end="445:59"><expr pos:start="445:46" pos:end="445:59"><name pos:start="445:46" pos:end="445:59">extradata_size</name></expr></argument>, <argument pos:start="445:62" pos:end="445:62"><expr pos:start="445:62" pos:end="445:62"><literal type="number" pos:start="445:62" pos:end="445:62">1</literal></expr></argument>,

                              <argument pos:start="447:31" pos:end="447:34"><expr pos:start="447:31" pos:end="447:34"><name pos:start="447:31" pos:end="447:34">NULL</name></expr></argument>, <argument pos:start="447:37" pos:end="447:40"><expr pos:start="447:37" pos:end="447:40"><name pos:start="447:37" pos:end="447:40">NULL</name></expr></argument>, <argument pos:start="447:43" pos:end="447:46"><expr pos:start="447:43" pos:end="447:46"><name pos:start="447:43" pos:end="447:46">NULL</name></expr></argument>, <argument pos:start="447:49" pos:end="447:52"><expr pos:start="447:49" pos:end="447:52"><name pos:start="447:49" pos:end="447:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="449:17" pos:end="449:42"><expr pos:start="449:17" pos:end="449:41"><call pos:start="449:17" pos:end="449:41"><name pos:start="449:17" pos:end="449:26">put_buffer</name><argument_list pos:start="449:27" pos:end="449:41">(<argument pos:start="449:28" pos:end="449:29"><expr pos:start="449:28" pos:end="449:29"><operator pos:start="449:28" pos:end="449:28">&amp;</operator><name pos:start="449:29" pos:end="449:29">b</name></expr></argument>, <argument pos:start="449:32" pos:end="449:37"><expr pos:start="449:32" pos:end="449:37"><literal type="string" pos:start="449:32" pos:end="449:37">"TTA1"</literal></expr></argument>, <argument pos:start="449:40" pos:end="449:40"><expr pos:start="449:40" pos:end="449:40"><literal type="number" pos:start="449:40" pos:end="449:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="451:17" pos:end="451:32"><expr pos:start="451:17" pos:end="451:31"><call pos:start="451:17" pos:end="451:31"><name pos:start="451:17" pos:end="451:24">put_le16</name><argument_list pos:start="451:25" pos:end="451:31">(<argument pos:start="451:26" pos:end="451:27"><expr pos:start="451:26" pos:end="451:27"><operator pos:start="451:26" pos:end="451:26">&amp;</operator><name pos:start="451:27" pos:end="451:27">b</name></expr></argument>, <argument pos:start="451:30" pos:end="451:30"><expr pos:start="451:30" pos:end="451:30"><literal type="number" pos:start="451:30" pos:end="451:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="453:17" pos:end="453:51"><expr pos:start="453:17" pos:end="453:50"><call pos:start="453:17" pos:end="453:50"><name pos:start="453:17" pos:end="453:24">put_le16</name><argument_list pos:start="453:25" pos:end="453:50">(<argument pos:start="453:26" pos:end="453:27"><expr pos:start="453:26" pos:end="453:27"><operator pos:start="453:26" pos:end="453:26">&amp;</operator><name pos:start="453:27" pos:end="453:27">b</name></expr></argument>, <argument pos:start="453:30" pos:end="453:49"><expr pos:start="453:30" pos:end="453:49"><name pos:start="453:30" pos:end="453:49"><name pos:start="453:30" pos:end="453:39">audiotrack</name><operator pos:start="453:40" pos:end="453:41">-&gt;</operator><name pos:start="453:42" pos:end="453:49">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="455:17" pos:end="455:51"><expr pos:start="455:17" pos:end="455:50"><call pos:start="455:17" pos:end="455:50"><name pos:start="455:17" pos:end="455:24">put_le16</name><argument_list pos:start="455:25" pos:end="455:50">(<argument pos:start="455:26" pos:end="455:27"><expr pos:start="455:26" pos:end="455:27"><operator pos:start="455:26" pos:end="455:26">&amp;</operator><name pos:start="455:27" pos:end="455:27">b</name></expr></argument>, <argument pos:start="455:30" pos:end="455:49"><expr pos:start="455:30" pos:end="455:49"><name pos:start="455:30" pos:end="455:49"><name pos:start="455:30" pos:end="455:39">audiotrack</name><operator pos:start="455:40" pos:end="455:41">-&gt;</operator><name pos:start="455:42" pos:end="455:49">bitdepth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="457:17" pos:end="457:53"><expr pos:start="457:17" pos:end="457:52"><call pos:start="457:17" pos:end="457:52"><name pos:start="457:17" pos:end="457:24">put_le32</name><argument_list pos:start="457:25" pos:end="457:52">(<argument pos:start="457:26" pos:end="457:27"><expr pos:start="457:26" pos:end="457:27"><operator pos:start="457:26" pos:end="457:26">&amp;</operator><name pos:start="457:27" pos:end="457:27">b</name></expr></argument>, <argument pos:start="457:30" pos:end="457:51"><expr pos:start="457:30" pos:end="457:51"><name pos:start="457:30" pos:end="457:51"><name pos:start="457:30" pos:end="457:39">audiotrack</name><operator pos:start="457:40" pos:end="457:41">-&gt;</operator><name pos:start="457:42" pos:end="457:51">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="459:17" pos:end="459:79"><expr pos:start="459:17" pos:end="459:78"><call pos:start="459:17" pos:end="459:78"><name pos:start="459:17" pos:end="459:24">put_le32</name><argument_list pos:start="459:25" pos:end="459:78">(<argument pos:start="459:26" pos:end="459:27"><expr pos:start="459:26" pos:end="459:27"><operator pos:start="459:26" pos:end="459:26">&amp;</operator><name pos:start="459:27" pos:end="459:27">b</name></expr></argument>, <argument pos:start="459:30" pos:end="459:77"><expr pos:start="459:30" pos:end="459:77"><name pos:start="459:30" pos:end="459:52"><name pos:start="459:30" pos:end="459:37">matroska</name><operator pos:start="459:38" pos:end="459:39">-&gt;</operator><name pos:start="459:40" pos:end="459:42">ctx</name><operator pos:start="459:43" pos:end="459:44">-&gt;</operator><name pos:start="459:45" pos:end="459:52">duration</name></name> <operator pos:start="459:54" pos:end="459:54">*</operator> <name pos:start="459:56" pos:end="459:77"><name pos:start="459:56" pos:end="459:65">audiotrack</name><operator pos:start="459:66" pos:end="459:67">-&gt;</operator><name pos:start="459:68" pos:end="459:77">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>



            <if type="elseif" pos:start="465:13" pos:end="473:13">else if <condition pos:start="465:21" pos:end="467:76">(<expr pos:start="465:22" pos:end="467:75"><name pos:start="465:22" pos:end="465:29">codec_id</name> <operator pos:start="465:31" pos:end="465:32">==</operator> <name pos:start="465:34" pos:end="465:46">CODEC_ID_RV10</name> <operator pos:start="465:48" pos:end="465:49">||</operator> <name pos:start="465:51" pos:end="465:58">codec_id</name> <operator pos:start="465:60" pos:end="465:61">==</operator> <name pos:start="465:63" pos:end="465:75">CODEC_ID_RV20</name> <operator pos:start="465:77" pos:end="465:78">||</operator>

                     <name pos:start="467:22" pos:end="467:29">codec_id</name> <operator pos:start="467:31" pos:end="467:32">==</operator> <name pos:start="467:34" pos:end="467:46">CODEC_ID_RV30</name> <operator pos:start="467:48" pos:end="467:49">||</operator> <name pos:start="467:51" pos:end="467:58">codec_id</name> <operator pos:start="467:60" pos:end="467:61">==</operator> <name pos:start="467:63" pos:end="467:75">CODEC_ID_RV40</name></expr>)</condition> <block pos:start="467:78" pos:end="473:13">{<block_content pos:start="469:17" pos:end="471:59">

                <expr_stmt pos:start="469:17" pos:end="469:38"><expr pos:start="469:17" pos:end="469:37"><name pos:start="469:17" pos:end="469:32">extradata_offset</name> <operator pos:start="469:34" pos:end="469:34">=</operator> <literal type="number" pos:start="469:36" pos:end="469:37">26</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:59"><expr pos:start="471:17" pos:end="471:58"><name pos:start="471:17" pos:end="471:38"><name pos:start="471:17" pos:end="471:21">track</name><operator pos:start="471:22" pos:end="471:23">-&gt;</operator><name pos:start="471:24" pos:end="471:38">codec_priv_size</name></name> <operator pos:start="471:40" pos:end="471:41">-=</operator> <name pos:start="471:43" pos:end="471:58">extradata_offset</name></expr>;</expr_stmt>

            </block_content>}</block></if>



            <if type="elseif" pos:start="477:13" pos:end="485:13">else if <condition pos:start="477:21" pos:end="477:49">(<expr pos:start="477:22" pos:end="477:48"><name pos:start="477:22" pos:end="477:29">codec_id</name> <operator pos:start="477:31" pos:end="477:32">==</operator> <name pos:start="477:34" pos:end="477:48">CODEC_ID_RA_144</name></expr>)</condition> <block pos:start="477:51" pos:end="485:13">{<block_content pos:start="479:17" pos:end="483:41">

                <decl_stmt pos:start="479:17" pos:end="479:77"><decl pos:start="479:17" pos:end="479:76"><type pos:start="479:17" pos:end="479:36"><name pos:start="479:17" pos:end="479:34">MatroskaAudioTrack</name> <modifier pos:start="479:36" pos:end="479:36">*</modifier></type><name pos:start="479:37" pos:end="479:46">audiotrack</name> <init pos:start="479:48" pos:end="479:76">= <expr pos:start="479:50" pos:end="479:76"><operator pos:start="479:50" pos:end="479:50">(</operator><name pos:start="479:51" pos:end="479:68">MatroskaAudioTrack</name> <operator pos:start="479:70" pos:end="479:70">*</operator><operator pos:start="479:71" pos:end="479:71">)</operator><name pos:start="479:72" pos:end="479:76">track</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="481:17" pos:end="481:46"><expr pos:start="481:17" pos:end="481:45"><name pos:start="481:17" pos:end="481:38"><name pos:start="481:17" pos:end="481:26">audiotrack</name><operator pos:start="481:27" pos:end="481:28">-&gt;</operator><name pos:start="481:29" pos:end="481:38">samplerate</name></name> <operator pos:start="481:40" pos:end="481:40">=</operator> <literal type="number" pos:start="481:42" pos:end="481:45">8000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="483:17" pos:end="483:41"><expr pos:start="483:17" pos:end="483:40"><name pos:start="483:17" pos:end="483:36"><name pos:start="483:17" pos:end="483:26">audiotrack</name><operator pos:start="483:27" pos:end="483:28">-&gt;</operator><name pos:start="483:29" pos:end="483:36">channels</name></name> <operator pos:start="483:38" pos:end="483:38">=</operator> <literal type="number" pos:start="483:40" pos:end="483:40">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if>



            <if type="elseif" pos:start="489:13" pos:end="535:13">else if <condition pos:start="489:21" pos:end="493:49">(<expr pos:start="489:22" pos:end="493:48"><name pos:start="489:22" pos:end="489:29">codec_id</name> <operator pos:start="489:31" pos:end="489:32">==</operator> <name pos:start="489:34" pos:end="489:48">CODEC_ID_RA_288</name> <operator pos:start="489:50" pos:end="489:51">||</operator>

                     <name pos:start="491:22" pos:end="491:29">codec_id</name> <operator pos:start="491:31" pos:end="491:32">==</operator> <name pos:start="491:34" pos:end="491:46">CODEC_ID_COOK</name> <operator pos:start="491:48" pos:end="491:49">||</operator>

                     <name pos:start="493:22" pos:end="493:29">codec_id</name> <operator pos:start="493:31" pos:end="493:32">==</operator> <name pos:start="493:34" pos:end="493:48">CODEC_ID_ATRAC3</name></expr>)</condition> <block pos:start="493:51" pos:end="535:13">{<block_content pos:start="495:17" pos:end="533:17">

                <decl_stmt pos:start="495:17" pos:end="495:77"><decl pos:start="495:17" pos:end="495:76"><type pos:start="495:17" pos:end="495:36"><name pos:start="495:17" pos:end="495:34">MatroskaAudioTrack</name> <modifier pos:start="495:36" pos:end="495:36">*</modifier></type><name pos:start="495:37" pos:end="495:46">audiotrack</name> <init pos:start="495:48" pos:end="495:76">= <expr pos:start="495:50" pos:end="495:76"><operator pos:start="495:50" pos:end="495:50">(</operator><name pos:start="495:51" pos:end="495:68">MatroskaAudioTrack</name> <operator pos:start="495:70" pos:end="495:70">*</operator><operator pos:start="495:71" pos:end="495:71">)</operator><name pos:start="495:72" pos:end="495:76">track</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="497:17" pos:end="497:32"><decl pos:start="497:17" pos:end="497:31"><type pos:start="497:17" pos:end="497:29"><name pos:start="497:17" pos:end="497:29">ByteIOContext</name></type> <name pos:start="497:31" pos:end="497:31">b</name></decl>;</decl_stmt>



                <expr_stmt pos:start="501:17" pos:end="503:54"><expr pos:start="501:17" pos:end="503:53"><call pos:start="501:17" pos:end="503:53"><name pos:start="501:17" pos:end="501:29">init_put_byte</name><argument_list pos:start="501:30" pos:end="503:53">(<argument pos:start="501:31" pos:end="501:32"><expr pos:start="501:31" pos:end="501:32"><operator pos:start="501:31" pos:end="501:31">&amp;</operator><name pos:start="501:32" pos:end="501:32">b</name></expr></argument>, <argument pos:start="501:35" pos:end="501:51"><expr pos:start="501:35" pos:end="501:51"><name pos:start="501:35" pos:end="501:51"><name pos:start="501:35" pos:end="501:39">track</name><operator pos:start="501:40" pos:end="501:41">-&gt;</operator><name pos:start="501:42" pos:end="501:51">codec_priv</name></name></expr></argument>, <argument pos:start="501:54" pos:end="501:75"><expr pos:start="501:54" pos:end="501:75"><name pos:start="501:54" pos:end="501:75"><name pos:start="501:54" pos:end="501:58">track</name><operator pos:start="501:59" pos:end="501:60">-&gt;</operator><name pos:start="501:61" pos:end="501:75">codec_priv_size</name></name></expr></argument>, <argument pos:start="501:78" pos:end="501:78"><expr pos:start="501:78" pos:end="501:78"><literal type="number" pos:start="501:78" pos:end="501:78">0</literal></expr></argument>,

                              <argument pos:start="503:31" pos:end="503:34"><expr pos:start="503:31" pos:end="503:34"><name pos:start="503:31" pos:end="503:34">NULL</name></expr></argument>, <argument pos:start="503:37" pos:end="503:40"><expr pos:start="503:37" pos:end="503:40"><name pos:start="503:37" pos:end="503:40">NULL</name></expr></argument>, <argument pos:start="503:43" pos:end="503:46"><expr pos:start="503:43" pos:end="503:46"><name pos:start="503:43" pos:end="503:46">NULL</name></expr></argument>, <argument pos:start="503:49" pos:end="503:52"><expr pos:start="503:49" pos:end="503:52"><name pos:start="503:49" pos:end="503:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="505:17" pos:end="505:34"><expr pos:start="505:17" pos:end="505:33"><call pos:start="505:17" pos:end="505:33"><name pos:start="505:17" pos:end="505:25">url_fskip</name><argument_list pos:start="505:26" pos:end="505:33">(<argument pos:start="505:27" pos:end="505:28"><expr pos:start="505:27" pos:end="505:28"><operator pos:start="505:27" pos:end="505:27">&amp;</operator><name pos:start="505:28" pos:end="505:28">b</name></expr></argument>, <argument pos:start="505:31" pos:end="505:32"><expr pos:start="505:31" pos:end="505:32"><literal type="number" pos:start="505:31" pos:end="505:32">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="507:17" pos:end="507:59"><expr pos:start="507:17" pos:end="507:58"><name pos:start="507:17" pos:end="507:43"><name pos:start="507:17" pos:end="507:26">audiotrack</name><operator pos:start="507:27" pos:end="507:28">-&gt;</operator><name pos:start="507:29" pos:end="507:43">coded_framesize</name></name> <operator pos:start="507:45" pos:end="507:45">=</operator> <call pos:start="507:47" pos:end="507:58"><name pos:start="507:47" pos:end="507:54">get_be32</name><argument_list pos:start="507:55" pos:end="507:58">(<argument pos:start="507:56" pos:end="507:57"><expr pos:start="507:56" pos:end="507:57"><operator pos:start="507:56" pos:end="507:56">&amp;</operator><name pos:start="507:57" pos:end="507:57">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="509:17" pos:end="509:34"><expr pos:start="509:17" pos:end="509:33"><call pos:start="509:17" pos:end="509:33"><name pos:start="509:17" pos:end="509:25">url_fskip</name><argument_list pos:start="509:26" pos:end="509:33">(<argument pos:start="509:27" pos:end="509:28"><expr pos:start="509:27" pos:end="509:28"><operator pos:start="509:27" pos:end="509:27">&amp;</operator><name pos:start="509:28" pos:end="509:28">b</name></expr></argument>, <argument pos:start="509:31" pos:end="509:32"><expr pos:start="509:31" pos:end="509:32"><literal type="number" pos:start="509:31" pos:end="509:32">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="511:17" pos:end="511:59"><expr pos:start="511:17" pos:end="511:58"><name pos:start="511:17" pos:end="511:40"><name pos:start="511:17" pos:end="511:26">audiotrack</name><operator pos:start="511:27" pos:end="511:28">-&gt;</operator><name pos:start="511:29" pos:end="511:40">sub_packet_h</name></name>    <operator pos:start="511:45" pos:end="511:45">=</operator> <call pos:start="511:47" pos:end="511:58"><name pos:start="511:47" pos:end="511:54">get_be16</name><argument_list pos:start="511:55" pos:end="511:58">(<argument pos:start="511:56" pos:end="511:57"><expr pos:start="511:56" pos:end="511:57"><operator pos:start="511:56" pos:end="511:56">&amp;</operator><name pos:start="511:57" pos:end="511:57">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="513:17" pos:end="513:59"><expr pos:start="513:17" pos:end="513:58"><name pos:start="513:17" pos:end="513:38"><name pos:start="513:17" pos:end="513:26">audiotrack</name><operator pos:start="513:27" pos:end="513:28">-&gt;</operator><name pos:start="513:29" pos:end="513:38">frame_size</name></name>      <operator pos:start="513:45" pos:end="513:45">=</operator> <call pos:start="513:47" pos:end="513:58"><name pos:start="513:47" pos:end="513:54">get_be16</name><argument_list pos:start="513:55" pos:end="513:58">(<argument pos:start="513:56" pos:end="513:57"><expr pos:start="513:56" pos:end="513:57"><operator pos:start="513:56" pos:end="513:56">&amp;</operator><name pos:start="513:57" pos:end="513:57">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="515:17" pos:end="515:59"><expr pos:start="515:17" pos:end="515:58"><name pos:start="515:17" pos:end="515:43"><name pos:start="515:17" pos:end="515:26">audiotrack</name><operator pos:start="515:27" pos:end="515:28">-&gt;</operator><name pos:start="515:29" pos:end="515:43">sub_packet_size</name></name> <operator pos:start="515:45" pos:end="515:45">=</operator> <call pos:start="515:47" pos:end="515:58"><name pos:start="515:47" pos:end="515:54">get_be16</name><argument_list pos:start="515:55" pos:end="515:58">(<argument pos:start="515:56" pos:end="515:57"><expr pos:start="515:56" pos:end="515:57"><operator pos:start="515:56" pos:end="515:56">&amp;</operator><name pos:start="515:57" pos:end="515:57">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="517:17" pos:end="517:95"><expr pos:start="517:17" pos:end="517:94"><name pos:start="517:17" pos:end="517:31"><name pos:start="517:17" pos:end="517:26">audiotrack</name><operator pos:start="517:27" pos:end="517:28">-&gt;</operator><name pos:start="517:29" pos:end="517:31">buf</name></name> <operator pos:start="517:33" pos:end="517:33">=</operator> <call pos:start="517:35" pos:end="517:94"><name pos:start="517:35" pos:end="517:43">av_malloc</name><argument_list pos:start="517:44" pos:end="517:94">(<argument pos:start="517:45" pos:end="517:93"><expr pos:start="517:45" pos:end="517:93"><name pos:start="517:45" pos:end="517:66"><name pos:start="517:45" pos:end="517:54">audiotrack</name><operator pos:start="517:55" pos:end="517:56">-&gt;</operator><name pos:start="517:57" pos:end="517:66">frame_size</name></name> <operator pos:start="517:68" pos:end="517:68">*</operator> <name pos:start="517:70" pos:end="517:93"><name pos:start="517:70" pos:end="517:79">audiotrack</name><operator pos:start="517:80" pos:end="517:81">-&gt;</operator><name pos:start="517:82" pos:end="517:93">sub_packet_h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="519:17" pos:end="533:17"><if pos:start="519:17" pos:end="525:17">if <condition pos:start="519:20" pos:end="519:48">(<expr pos:start="519:21" pos:end="519:47"><name pos:start="519:21" pos:end="519:28">codec_id</name> <operator pos:start="519:30" pos:end="519:31">==</operator> <name pos:start="519:33" pos:end="519:47">CODEC_ID_RA_288</name></expr>)</condition> <block pos:start="519:50" pos:end="525:17">{<block_content pos:start="521:21" pos:end="523:47">

                    <expr_stmt pos:start="521:21" pos:end="521:74"><expr pos:start="521:21" pos:end="521:73"><name pos:start="521:21" pos:end="521:43"><name pos:start="521:21" pos:end="521:30">audiotrack</name><operator pos:start="521:31" pos:end="521:32">-&gt;</operator><name pos:start="521:33" pos:end="521:43">block_align</name></name> <operator pos:start="521:45" pos:end="521:45">=</operator> <name pos:start="521:47" pos:end="521:73"><name pos:start="521:47" pos:end="521:56">audiotrack</name><operator pos:start="521:57" pos:end="521:58">-&gt;</operator><name pos:start="521:59" pos:end="521:73">coded_framesize</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="523:21" pos:end="523:47"><expr pos:start="523:21" pos:end="523:46"><name pos:start="523:21" pos:end="523:42"><name pos:start="523:21" pos:end="523:25">track</name><operator pos:start="523:26" pos:end="523:27">-&gt;</operator><name pos:start="523:28" pos:end="523:42">codec_priv_size</name></name> <operator pos:start="523:44" pos:end="523:44">=</operator> <literal type="number" pos:start="523:46" pos:end="523:46">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="525:19" pos:end="533:17">else <block pos:start="525:24" pos:end="533:17">{<block_content pos:start="527:21" pos:end="531:63">

                    <expr_stmt pos:start="527:21" pos:end="527:74"><expr pos:start="527:21" pos:end="527:73"><name pos:start="527:21" pos:end="527:43"><name pos:start="527:21" pos:end="527:30">audiotrack</name><operator pos:start="527:31" pos:end="527:32">-&gt;</operator><name pos:start="527:33" pos:end="527:43">block_align</name></name> <operator pos:start="527:45" pos:end="527:45">=</operator> <name pos:start="527:47" pos:end="527:73"><name pos:start="527:47" pos:end="527:56">audiotrack</name><operator pos:start="527:57" pos:end="527:58">-&gt;</operator><name pos:start="527:59" pos:end="527:73">sub_packet_size</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="529:21" pos:end="529:42"><expr pos:start="529:21" pos:end="529:41"><name pos:start="529:21" pos:end="529:36">extradata_offset</name> <operator pos:start="529:38" pos:end="529:38">=</operator> <literal type="number" pos:start="529:40" pos:end="529:41">78</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="531:21" pos:end="531:63"><expr pos:start="531:21" pos:end="531:62"><name pos:start="531:21" pos:end="531:42"><name pos:start="531:21" pos:end="531:25">track</name><operator pos:start="531:26" pos:end="531:27">-&gt;</operator><name pos:start="531:28" pos:end="531:42">codec_priv_size</name></name> <operator pos:start="531:44" pos:end="531:45">-=</operator> <name pos:start="531:47" pos:end="531:62">extradata_offset</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="539:13" pos:end="547:13"><if pos:start="539:13" pos:end="547:13">if <condition pos:start="539:16" pos:end="539:42">(<expr pos:start="539:17" pos:end="539:41"><name pos:start="539:17" pos:end="539:24">codec_id</name> <operator pos:start="539:26" pos:end="539:27">==</operator> <name pos:start="539:29" pos:end="539:41">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="539:44" pos:end="547:13">{<block_content pos:start="541:17" pos:end="545:40">

                <expr_stmt pos:start="541:17" pos:end="545:40"><expr pos:start="541:17" pos:end="545:39"><call pos:start="541:17" pos:end="545:39"><name pos:start="541:17" pos:end="541:22">av_log</name><argument_list pos:start="541:23" pos:end="545:39">(<argument pos:start="541:24" pos:end="541:36"><expr pos:start="541:24" pos:end="541:36"><name pos:start="541:24" pos:end="541:36"><name pos:start="541:24" pos:end="541:31">matroska</name><operator pos:start="541:32" pos:end="541:33">-&gt;</operator><name pos:start="541:34" pos:end="541:36">ctx</name></name></expr></argument>, <argument pos:start="541:39" pos:end="541:49"><expr pos:start="541:39" pos:end="541:49"><name pos:start="541:39" pos:end="541:49">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="543:24" pos:end="543:58"><expr pos:start="543:24" pos:end="543:58"><literal type="string" pos:start="543:24" pos:end="543:58">"Unknown/unsupported CodecID %s.\n"</literal></expr></argument>,

                       <argument pos:start="545:24" pos:end="545:38"><expr pos:start="545:24" pos:end="545:38"><name pos:start="545:24" pos:end="545:38"><name pos:start="545:24" pos:end="545:28">track</name><operator pos:start="545:29" pos:end="545:30">-&gt;</operator><name pos:start="545:31" pos:end="545:38">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="551:13" pos:end="551:56"><expr pos:start="551:13" pos:end="551:55"><name pos:start="551:13" pos:end="551:31"><name pos:start="551:13" pos:end="551:17">track</name><operator pos:start="551:18" pos:end="551:19">-&gt;</operator><name pos:start="551:20" pos:end="551:31">stream_index</name></name> <operator pos:start="551:33" pos:end="551:33">=</operator> <name pos:start="551:35" pos:end="551:55"><name pos:start="551:35" pos:end="551:42">matroska</name><operator pos:start="551:43" pos:end="551:44">-&gt;</operator><name pos:start="551:45" pos:end="551:55">num_streams</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="555:13" pos:end="555:36"><expr pos:start="555:13" pos:end="555:35"><name pos:start="555:13" pos:end="555:33"><name pos:start="555:13" pos:end="555:20">matroska</name><operator pos:start="555:21" pos:end="555:22">-&gt;</operator><name pos:start="555:23" pos:end="555:33">num_streams</name></name><operator pos:start="555:34" pos:end="555:35">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="557:13" pos:end="557:55"><expr pos:start="557:13" pos:end="557:54"><name pos:start="557:13" pos:end="557:14">st</name> <operator pos:start="557:16" pos:end="557:16">=</operator> <call pos:start="557:18" pos:end="557:54"><name pos:start="557:18" pos:end="557:30">av_new_stream</name><argument_list pos:start="557:31" pos:end="557:54">(<argument pos:start="557:32" pos:end="557:32"><expr pos:start="557:32" pos:end="557:32"><name pos:start="557:32" pos:end="557:32">s</name></expr></argument>, <argument pos:start="557:35" pos:end="557:53"><expr pos:start="557:35" pos:end="557:53"><name pos:start="557:35" pos:end="557:53"><name pos:start="557:35" pos:end="557:39">track</name><operator pos:start="557:40" pos:end="557:41">-&gt;</operator><name pos:start="557:42" pos:end="557:53">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="559:13" pos:end="561:39"><if pos:start="559:13" pos:end="561:39">if <condition pos:start="559:16" pos:end="559:27">(<expr pos:start="559:17" pos:end="559:26"><name pos:start="559:17" pos:end="559:18">st</name> <operator pos:start="559:20" pos:end="559:21">==</operator> <name pos:start="559:23" pos:end="559:26">NULL</name></expr>)</condition><block type="pseudo" pos:start="561:17" pos:end="561:39"><block_content pos:start="561:17" pos:end="561:39">

                <return pos:start="561:17" pos:end="561:39">return <expr pos:start="561:24" pos:end="561:38"><call pos:start="561:24" pos:end="561:38"><name pos:start="561:24" pos:end="561:30">AVERROR</name><argument_list pos:start="561:31" pos:end="561:38">(<argument pos:start="561:32" pos:end="561:37"><expr pos:start="561:32" pos:end="561:37"><name pos:start="561:32" pos:end="561:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:74"><expr pos:start="563:13" pos:end="563:73"><call pos:start="563:13" pos:end="563:73"><name pos:start="563:13" pos:end="563:27">av_set_pts_info</name><argument_list pos:start="563:28" pos:end="563:73">(<argument pos:start="563:29" pos:end="563:30"><expr pos:start="563:29" pos:end="563:30"><name pos:start="563:29" pos:end="563:30">st</name></expr></argument>, <argument pos:start="563:33" pos:end="563:34"><expr pos:start="563:33" pos:end="563:34"><literal type="number" pos:start="563:33" pos:end="563:34">64</literal></expr></argument>, <argument pos:start="563:37" pos:end="563:56"><expr pos:start="563:37" pos:end="563:56"><name pos:start="563:37" pos:end="563:56"><name pos:start="563:37" pos:end="563:44">matroska</name><operator pos:start="563:45" pos:end="563:46">-&gt;</operator><name pos:start="563:47" pos:end="563:56">time_scale</name></name></expr></argument>, <argument pos:start="563:59" pos:end="563:72"><expr pos:start="563:59" pos:end="563:72"><literal type="number" pos:start="563:59" pos:end="563:62">1000</literal><operator pos:start="563:63" pos:end="563:63">*</operator><literal type="number" pos:start="563:64" pos:end="563:67">1000</literal><operator pos:start="563:68" pos:end="563:68">*</operator><literal type="number" pos:start="563:69" pos:end="563:72">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="563:76" pos:end="563:97">/* 64 bit pts in ns */</comment>



            <expr_stmt pos:start="567:13" pos:end="567:43"><expr pos:start="567:13" pos:end="567:42"><name pos:start="567:13" pos:end="567:31"><name pos:start="567:13" pos:end="567:14">st</name><operator pos:start="567:15" pos:end="567:16">-&gt;</operator><name pos:start="567:17" pos:end="567:21">codec</name><operator pos:start="567:22" pos:end="567:23">-&gt;</operator><name pos:start="567:24" pos:end="567:31">codec_id</name></name> <operator pos:start="567:33" pos:end="567:33">=</operator> <name pos:start="567:35" pos:end="567:42">codec_id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:31"><expr pos:start="569:13" pos:end="569:30"><name pos:start="569:13" pos:end="569:26"><name pos:start="569:13" pos:end="569:14">st</name><operator pos:start="569:15" pos:end="569:16">-&gt;</operator><name pos:start="569:17" pos:end="569:26">start_time</name></name> <operator pos:start="569:28" pos:end="569:28">=</operator> <literal type="number" pos:start="569:30" pos:end="569:30">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="571:13" pos:end="573:54"><if pos:start="571:13" pos:end="573:54">if <condition pos:start="571:16" pos:end="571:47">(<expr pos:start="571:17" pos:end="571:46"><call pos:start="571:17" pos:end="571:46"><name pos:start="571:17" pos:end="571:22">strcmp</name><argument_list pos:start="571:23" pos:end="571:46">(<argument pos:start="571:24" pos:end="571:38"><expr pos:start="571:24" pos:end="571:38"><name pos:start="571:24" pos:end="571:38"><name pos:start="571:24" pos:end="571:28">track</name><operator pos:start="571:29" pos:end="571:30">-&gt;</operator><name pos:start="571:31" pos:end="571:38">language</name></name></expr></argument>, <argument pos:start="571:41" pos:end="571:45"><expr pos:start="571:41" pos:end="571:45"><literal type="string" pos:start="571:41" pos:end="571:45">"und"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="573:17" pos:end="573:54"><block_content pos:start="573:17" pos:end="573:54">

                <expr_stmt pos:start="573:17" pos:end="573:54"><expr pos:start="573:17" pos:end="573:53"><call pos:start="573:17" pos:end="573:53"><name pos:start="573:17" pos:end="573:22">strcpy</name><argument_list pos:start="573:23" pos:end="573:53">(<argument pos:start="573:24" pos:end="573:35"><expr pos:start="573:24" pos:end="573:35"><name pos:start="573:24" pos:end="573:35"><name pos:start="573:24" pos:end="573:25">st</name><operator pos:start="573:26" pos:end="573:27">-&gt;</operator><name pos:start="573:28" pos:end="573:35">language</name></name></expr></argument>, <argument pos:start="573:38" pos:end="573:52"><expr pos:start="573:38" pos:end="573:52"><name pos:start="573:38" pos:end="573:52"><name pos:start="573:38" pos:end="573:42">track</name><operator pos:start="573:43" pos:end="573:44">-&gt;</operator><name pos:start="573:45" pos:end="573:52">language</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="577:13" pos:end="579:58"><if pos:start="577:13" pos:end="579:58">if <condition pos:start="577:16" pos:end="577:54">(<expr pos:start="577:17" pos:end="577:53"><name pos:start="577:17" pos:end="577:28"><name pos:start="577:17" pos:end="577:21">track</name><operator pos:start="577:22" pos:end="577:23">-&gt;</operator><name pos:start="577:24" pos:end="577:28">flags</name></name> <operator pos:start="577:30" pos:end="577:30">&amp;</operator> <name pos:start="577:32" pos:end="577:53">MATROSKA_TRACK_DEFAULT</name></expr>)</condition><block type="pseudo" pos:start="579:17" pos:end="579:58"><block_content pos:start="579:17" pos:end="579:58">

                <expr_stmt pos:start="579:17" pos:end="579:58"><expr pos:start="579:17" pos:end="579:57"><name pos:start="579:17" pos:end="579:31"><name pos:start="579:17" pos:end="579:18">st</name><operator pos:start="579:19" pos:end="579:20">-&gt;</operator><name pos:start="579:21" pos:end="579:31">disposition</name></name> <operator pos:start="579:33" pos:end="579:34">|=</operator> <name pos:start="579:36" pos:end="579:57">AV_DISPOSITION_DEFAULT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="583:13" pos:end="587:70"><if pos:start="583:13" pos:end="587:70">if <condition pos:start="583:16" pos:end="583:40">(<expr pos:start="583:17" pos:end="583:39"><name pos:start="583:17" pos:end="583:39"><name pos:start="583:17" pos:end="583:21">track</name><operator pos:start="583:22" pos:end="583:23">-&gt;</operator><name pos:start="583:24" pos:end="583:39">default_duration</name></name></expr>)</condition><block type="pseudo" pos:start="585:17" pos:end="587:70"><block_content pos:start="585:17" pos:end="587:70">

                <expr_stmt pos:start="585:17" pos:end="587:70"><expr pos:start="585:17" pos:end="587:69"><call pos:start="585:17" pos:end="587:69"><name pos:start="585:17" pos:end="585:25">av_reduce</name><argument_list pos:start="585:26" pos:end="587:69">(<argument pos:start="585:27" pos:end="585:51"><expr pos:start="585:27" pos:end="585:51"><operator pos:start="585:27" pos:end="585:27">&amp;</operator><name pos:start="585:28" pos:end="585:51"><name pos:start="585:28" pos:end="585:29">st</name><operator pos:start="585:30" pos:end="585:31">-&gt;</operator><name pos:start="585:32" pos:end="585:36">codec</name><operator pos:start="585:37" pos:end="585:38">-&gt;</operator><name pos:start="585:39" pos:end="585:47">time_base</name><operator pos:start="585:48" pos:end="585:48">.</operator><name pos:start="585:49" pos:end="585:51">num</name></name></expr></argument>, <argument pos:start="585:54" pos:end="585:78"><expr pos:start="585:54" pos:end="585:78"><operator pos:start="585:54" pos:end="585:54">&amp;</operator><name pos:start="585:55" pos:end="585:78"><name pos:start="585:55" pos:end="585:56">st</name><operator pos:start="585:57" pos:end="585:58">-&gt;</operator><name pos:start="585:59" pos:end="585:63">codec</name><operator pos:start="585:64" pos:end="585:65">-&gt;</operator><name pos:start="585:66" pos:end="585:74">time_base</name><operator pos:start="585:75" pos:end="585:75">.</operator><name pos:start="585:76" pos:end="585:78">den</name></name></expr></argument>,

                          <argument pos:start="587:27" pos:end="587:49"><expr pos:start="587:27" pos:end="587:49"><name pos:start="587:27" pos:end="587:49"><name pos:start="587:27" pos:end="587:31">track</name><operator pos:start="587:32" pos:end="587:33">-&gt;</operator><name pos:start="587:34" pos:end="587:49">default_duration</name></name></expr></argument>, <argument pos:start="587:52" pos:end="587:61"><expr pos:start="587:52" pos:end="587:61"><literal type="number" pos:start="587:52" pos:end="587:61">1000000000</literal></expr></argument>, <argument pos:start="587:64" pos:end="587:68"><expr pos:start="587:64" pos:end="587:68"><literal type="number" pos:start="587:64" pos:end="587:68">30000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="591:13" pos:end="611:13"><if pos:start="591:13" pos:end="597:13">if<condition pos:start="591:15" pos:end="591:25">(<expr pos:start="591:16" pos:end="591:24"><name pos:start="591:16" pos:end="591:24">extradata</name></expr>)</condition><block pos:start="591:26" pos:end="597:13">{<block_content pos:start="593:17" pos:end="595:59">

                <expr_stmt pos:start="593:17" pos:end="593:49"><expr pos:start="593:17" pos:end="593:48"><name pos:start="593:17" pos:end="593:36"><name pos:start="593:17" pos:end="593:18">st</name><operator pos:start="593:19" pos:end="593:20">-&gt;</operator><name pos:start="593:21" pos:end="593:25">codec</name><operator pos:start="593:26" pos:end="593:27">-&gt;</operator><name pos:start="593:28" pos:end="593:36">extradata</name></name> <operator pos:start="593:38" pos:end="593:38">=</operator> <name pos:start="593:40" pos:end="593:48">extradata</name></expr>;</expr_stmt>

                <expr_stmt pos:start="595:17" pos:end="595:59"><expr pos:start="595:17" pos:end="595:58"><name pos:start="595:17" pos:end="595:41"><name pos:start="595:17" pos:end="595:18">st</name><operator pos:start="595:19" pos:end="595:20">-&gt;</operator><name pos:start="595:21" pos:end="595:25">codec</name><operator pos:start="595:26" pos:end="595:27">-&gt;</operator><name pos:start="595:28" pos:end="595:41">extradata_size</name></name> <operator pos:start="595:43" pos:end="595:43">=</operator> <name pos:start="595:45" pos:end="595:58">extradata_size</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="597:15" pos:end="611:13">else if<condition pos:start="597:22" pos:end="597:70">(<expr pos:start="597:23" pos:end="597:69"><name pos:start="597:23" pos:end="597:39"><name pos:start="597:23" pos:end="597:27">track</name><operator pos:start="597:28" pos:end="597:29">-&gt;</operator><name pos:start="597:30" pos:end="597:39">codec_priv</name></name> <operator pos:start="597:41" pos:end="597:42">&amp;&amp;</operator> <name pos:start="597:44" pos:end="597:65"><name pos:start="597:44" pos:end="597:48">track</name><operator pos:start="597:49" pos:end="597:50">-&gt;</operator><name pos:start="597:51" pos:end="597:65">codec_priv_size</name></name> <operator pos:start="597:67" pos:end="597:67">&gt;</operator> <literal type="number" pos:start="597:69" pos:end="597:69">0</literal></expr>)</condition><block pos:start="597:71" pos:end="611:13">{<block_content pos:start="599:17" pos:end="609:47">

                <expr_stmt pos:start="599:17" pos:end="599:73"><expr pos:start="599:17" pos:end="599:72"><name pos:start="599:17" pos:end="599:36"><name pos:start="599:17" pos:end="599:18">st</name><operator pos:start="599:19" pos:end="599:20">-&gt;</operator><name pos:start="599:21" pos:end="599:25">codec</name><operator pos:start="599:26" pos:end="599:27">-&gt;</operator><name pos:start="599:28" pos:end="599:36">extradata</name></name> <operator pos:start="599:38" pos:end="599:38">=</operator> <call pos:start="599:40" pos:end="599:72"><name pos:start="599:40" pos:end="599:48">av_malloc</name><argument_list pos:start="599:49" pos:end="599:72">(<argument pos:start="599:50" pos:end="599:71"><expr pos:start="599:50" pos:end="599:71"><name pos:start="599:50" pos:end="599:71"><name pos:start="599:50" pos:end="599:54">track</name><operator pos:start="599:55" pos:end="599:56">-&gt;</operator><name pos:start="599:57" pos:end="599:71">codec_priv_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="601:17" pos:end="603:43"><if pos:start="601:17" pos:end="603:43">if<condition pos:start="601:19" pos:end="601:48">(<expr pos:start="601:20" pos:end="601:47"><name pos:start="601:20" pos:end="601:39"><name pos:start="601:20" pos:end="601:21">st</name><operator pos:start="601:22" pos:end="601:23">-&gt;</operator><name pos:start="601:24" pos:end="601:28">codec</name><operator pos:start="601:29" pos:end="601:30">-&gt;</operator><name pos:start="601:31" pos:end="601:39">extradata</name></name> <operator pos:start="601:41" pos:end="601:42">==</operator> <name pos:start="601:44" pos:end="601:47">NULL</name></expr>)</condition><block type="pseudo" pos:start="603:21" pos:end="603:43"><block_content pos:start="603:21" pos:end="603:43">

                    <return pos:start="603:21" pos:end="603:43">return <expr pos:start="603:28" pos:end="603:42"><call pos:start="603:28" pos:end="603:42"><name pos:start="603:28" pos:end="603:34">AVERROR</name><argument_list pos:start="603:35" pos:end="603:42">(<argument pos:start="603:36" pos:end="603:41"><expr pos:start="603:36" pos:end="603:41"><name pos:start="603:36" pos:end="603:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="605:17" pos:end="605:67"><expr pos:start="605:17" pos:end="605:66"><name pos:start="605:17" pos:end="605:41"><name pos:start="605:17" pos:end="605:18">st</name><operator pos:start="605:19" pos:end="605:20">-&gt;</operator><name pos:start="605:21" pos:end="605:25">codec</name><operator pos:start="605:26" pos:end="605:27">-&gt;</operator><name pos:start="605:28" pos:end="605:41">extradata_size</name></name> <operator pos:start="605:43" pos:end="605:43">=</operator> <name pos:start="605:45" pos:end="605:66"><name pos:start="605:45" pos:end="605:49">track</name><operator pos:start="605:50" pos:end="605:51">-&gt;</operator><name pos:start="605:52" pos:end="605:66">codec_priv_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="607:17" pos:end="609:47"><expr pos:start="607:17" pos:end="609:46"><call pos:start="607:17" pos:end="609:46"><name pos:start="607:17" pos:end="607:22">memcpy</name><argument_list pos:start="607:23" pos:end="609:46">(<argument pos:start="607:24" pos:end="607:43"><expr pos:start="607:24" pos:end="607:43"><name pos:start="607:24" pos:end="607:43"><name pos:start="607:24" pos:end="607:25">st</name><operator pos:start="607:26" pos:end="607:27">-&gt;</operator><name pos:start="607:28" pos:end="607:32">codec</name><operator pos:start="607:33" pos:end="607:34">-&gt;</operator><name pos:start="607:35" pos:end="607:43">extradata</name></name></expr></argument>,<argument pos:start="607:45" pos:end="607:78"><expr pos:start="607:45" pos:end="607:78"><name pos:start="607:45" pos:end="607:61"><name pos:start="607:45" pos:end="607:49">track</name><operator pos:start="607:50" pos:end="607:51">-&gt;</operator><name pos:start="607:52" pos:end="607:61">codec_priv</name></name><operator pos:start="607:62" pos:end="607:62">+</operator><name pos:start="607:63" pos:end="607:78">extradata_offset</name></expr></argument>,

                       <argument pos:start="609:24" pos:end="609:45"><expr pos:start="609:24" pos:end="609:45"><name pos:start="609:24" pos:end="609:45"><name pos:start="609:24" pos:end="609:28">track</name><operator pos:start="609:29" pos:end="609:30">-&gt;</operator><name pos:start="609:31" pos:end="609:45">codec_priv_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="615:13" pos:end="667:13"><if pos:start="615:13" pos:end="649:13">if <condition pos:start="615:16" pos:end="615:57">(<expr pos:start="615:17" pos:end="615:56"><name pos:start="615:17" pos:end="615:27"><name pos:start="615:17" pos:end="615:21">track</name><operator pos:start="615:22" pos:end="615:23">-&gt;</operator><name pos:start="615:24" pos:end="615:27">type</name></name> <operator pos:start="615:29" pos:end="615:30">==</operator> <name pos:start="615:32" pos:end="615:56">MATROSKA_TRACK_TYPE_VIDEO</name></expr>)</condition> <block pos:start="615:59" pos:end="649:13">{<block_content pos:start="617:17" pos:end="647:58">

                <decl_stmt pos:start="617:17" pos:end="617:77"><decl pos:start="617:17" pos:end="617:76"><type pos:start="617:17" pos:end="617:36"><name pos:start="617:17" pos:end="617:34">MatroskaVideoTrack</name> <modifier pos:start="617:36" pos:end="617:36">*</modifier></type><name pos:start="617:37" pos:end="617:46">videotrack</name> <init pos:start="617:48" pos:end="617:76">= <expr pos:start="617:50" pos:end="617:76"><operator pos:start="617:50" pos:end="617:50">(</operator><name pos:start="617:51" pos:end="617:68">MatroskaVideoTrack</name> <operator pos:start="617:70" pos:end="617:70">*</operator><operator pos:start="617:71" pos:end="617:71">)</operator><name pos:start="617:72" pos:end="617:76">track</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="621:17" pos:end="621:57"><expr pos:start="621:17" pos:end="621:56"><name pos:start="621:17" pos:end="621:37"><name pos:start="621:17" pos:end="621:18">st</name><operator pos:start="621:19" pos:end="621:20">-&gt;</operator><name pos:start="621:21" pos:end="621:25">codec</name><operator pos:start="621:26" pos:end="621:27">-&gt;</operator><name pos:start="621:28" pos:end="621:37">codec_type</name></name> <operator pos:start="621:39" pos:end="621:39">=</operator> <name pos:start="621:41" pos:end="621:56">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="623:17" pos:end="623:58"><expr pos:start="623:17" pos:end="623:57"><name pos:start="623:17" pos:end="623:36"><name pos:start="623:17" pos:end="623:18">st</name><operator pos:start="623:19" pos:end="623:20">-&gt;</operator><name pos:start="623:21" pos:end="623:25">codec</name><operator pos:start="623:26" pos:end="623:27">-&gt;</operator><name pos:start="623:28" pos:end="623:36">codec_tag</name></name> <operator pos:start="623:38" pos:end="623:38">=</operator> <name pos:start="623:40" pos:end="623:57"><name pos:start="623:40" pos:end="623:49">videotrack</name><operator pos:start="623:50" pos:end="623:51">-&gt;</operator><name pos:start="623:52" pos:end="623:57">fourcc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="625:17" pos:end="625:59"><expr pos:start="625:17" pos:end="625:58"><name pos:start="625:17" pos:end="625:32"><name pos:start="625:17" pos:end="625:18">st</name><operator pos:start="625:19" pos:end="625:20">-&gt;</operator><name pos:start="625:21" pos:end="625:25">codec</name><operator pos:start="625:26" pos:end="625:27">-&gt;</operator><name pos:start="625:28" pos:end="625:32">width</name></name> <operator pos:start="625:34" pos:end="625:34">=</operator> <name pos:start="625:36" pos:end="625:58"><name pos:start="625:36" pos:end="625:45">videotrack</name><operator pos:start="625:46" pos:end="625:47">-&gt;</operator><name pos:start="625:48" pos:end="625:58">pixel_width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="627:17" pos:end="627:61"><expr pos:start="627:17" pos:end="627:60"><name pos:start="627:17" pos:end="627:33"><name pos:start="627:17" pos:end="627:18">st</name><operator pos:start="627:19" pos:end="627:20">-&gt;</operator><name pos:start="627:21" pos:end="627:25">codec</name><operator pos:start="627:26" pos:end="627:27">-&gt;</operator><name pos:start="627:28" pos:end="627:33">height</name></name> <operator pos:start="627:35" pos:end="627:35">=</operator> <name pos:start="627:37" pos:end="627:60"><name pos:start="627:37" pos:end="627:46">videotrack</name><operator pos:start="627:47" pos:end="627:48">-&gt;</operator><name pos:start="627:49" pos:end="627:60">pixel_height</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="629:17" pos:end="631:71"><if pos:start="629:17" pos:end="631:71">if <condition pos:start="629:20" pos:end="629:51">(<expr pos:start="629:21" pos:end="629:50"><name pos:start="629:21" pos:end="629:45"><name pos:start="629:21" pos:end="629:30">videotrack</name><operator pos:start="629:31" pos:end="629:32">-&gt;</operator><name pos:start="629:33" pos:end="629:45">display_width</name></name> <operator pos:start="629:47" pos:end="629:48">==</operator> <literal type="number" pos:start="629:50" pos:end="629:50">0</literal></expr>)</condition><block type="pseudo" pos:start="631:21" pos:end="631:71"><block_content pos:start="631:21" pos:end="631:71">

                    <expr_stmt pos:start="631:21" pos:end="631:71"><expr pos:start="631:21" pos:end="631:70"><name pos:start="631:21" pos:end="631:45"><name pos:start="631:21" pos:end="631:30">videotrack</name><operator pos:start="631:31" pos:end="631:32">-&gt;</operator><name pos:start="631:33" pos:end="631:45">display_width</name></name><operator pos:start="631:46" pos:end="631:46">=</operator> <name pos:start="631:48" pos:end="631:70"><name pos:start="631:48" pos:end="631:57">videotrack</name><operator pos:start="631:58" pos:end="631:59">-&gt;</operator><name pos:start="631:60" pos:end="631:70">pixel_width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="633:17" pos:end="635:73"><if pos:start="633:17" pos:end="635:73">if <condition pos:start="633:20" pos:end="633:52">(<expr pos:start="633:21" pos:end="633:51"><name pos:start="633:21" pos:end="633:46"><name pos:start="633:21" pos:end="633:30">videotrack</name><operator pos:start="633:31" pos:end="633:32">-&gt;</operator><name pos:start="633:33" pos:end="633:46">display_height</name></name> <operator pos:start="633:48" pos:end="633:49">==</operator> <literal type="number" pos:start="633:51" pos:end="633:51">0</literal></expr>)</condition><block type="pseudo" pos:start="635:21" pos:end="635:73"><block_content pos:start="635:21" pos:end="635:73">

                    <expr_stmt pos:start="635:21" pos:end="635:73"><expr pos:start="635:21" pos:end="635:72"><name pos:start="635:21" pos:end="635:46"><name pos:start="635:21" pos:end="635:30">videotrack</name><operator pos:start="635:31" pos:end="635:32">-&gt;</operator><name pos:start="635:33" pos:end="635:46">display_height</name></name><operator pos:start="635:47" pos:end="635:47">=</operator> <name pos:start="635:49" pos:end="635:72"><name pos:start="635:49" pos:end="635:58">videotrack</name><operator pos:start="635:59" pos:end="635:60">-&gt;</operator><name pos:start="635:61" pos:end="635:72">pixel_height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="637:17" pos:end="645:31"><expr pos:start="637:17" pos:end="645:30"><call pos:start="637:17" pos:end="645:30"><name pos:start="637:17" pos:end="637:25">av_reduce</name><argument_list pos:start="637:26" pos:end="645:30">(<argument pos:start="637:27" pos:end="637:61"><expr pos:start="637:27" pos:end="637:61"><operator pos:start="637:27" pos:end="637:27">&amp;</operator><name pos:start="637:28" pos:end="637:61"><name pos:start="637:28" pos:end="637:29">st</name><operator pos:start="637:30" pos:end="637:31">-&gt;</operator><name pos:start="637:32" pos:end="637:36">codec</name><operator pos:start="637:37" pos:end="637:38">-&gt;</operator><name pos:start="637:39" pos:end="637:57">sample_aspect_ratio</name><operator pos:start="637:58" pos:end="637:58">.</operator><name pos:start="637:59" pos:end="637:61">num</name></name></expr></argument>,

                          <argument pos:start="639:27" pos:end="639:61"><expr pos:start="639:27" pos:end="639:61"><operator pos:start="639:27" pos:end="639:27">&amp;</operator><name pos:start="639:28" pos:end="639:61"><name pos:start="639:28" pos:end="639:29">st</name><operator pos:start="639:30" pos:end="639:31">-&gt;</operator><name pos:start="639:32" pos:end="639:36">codec</name><operator pos:start="639:37" pos:end="639:38">-&gt;</operator><name pos:start="639:39" pos:end="639:57">sample_aspect_ratio</name><operator pos:start="639:58" pos:end="639:58">.</operator><name pos:start="639:59" pos:end="639:61">den</name></name></expr></argument>,

                          <argument pos:start="641:27" pos:end="641:71"><expr pos:start="641:27" pos:end="641:71"><name pos:start="641:27" pos:end="641:43"><name pos:start="641:27" pos:end="641:28">st</name><operator pos:start="641:29" pos:end="641:30">-&gt;</operator><name pos:start="641:31" pos:end="641:35">codec</name><operator pos:start="641:36" pos:end="641:37">-&gt;</operator><name pos:start="641:38" pos:end="641:43">height</name></name> <operator pos:start="641:45" pos:end="641:45">*</operator> <name pos:start="641:47" pos:end="641:71"><name pos:start="641:47" pos:end="641:56">videotrack</name><operator pos:start="641:57" pos:end="641:58">-&gt;</operator><name pos:start="641:59" pos:end="641:71">display_width</name></name></expr></argument>,

                          <argument pos:start="643:27" pos:end="643:72"><expr pos:start="643:27" pos:end="643:72"><name pos:start="643:27" pos:end="643:43"><name pos:start="643:27" pos:end="643:28">st</name><operator pos:start="643:29" pos:end="643:30">-&gt;</operator><name pos:start="643:31" pos:end="643:35">codec</name><operator pos:start="643:36" pos:end="643:37">-&gt;</operator> <name pos:start="643:39" pos:end="643:43">width</name></name> <operator pos:start="643:45" pos:end="643:45">*</operator> <name pos:start="643:47" pos:end="643:72"><name pos:start="643:47" pos:end="643:56">videotrack</name><operator pos:start="643:57" pos:end="643:58">-&gt;</operator><name pos:start="643:59" pos:end="643:72">display_height</name></name></expr></argument>,

                          <argument pos:start="645:27" pos:end="645:29"><expr pos:start="645:27" pos:end="645:29"><literal type="number" pos:start="645:27" pos:end="645:29">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="647:17" pos:end="647:58"><expr pos:start="647:17" pos:end="647:57"><name pos:start="647:17" pos:end="647:32"><name pos:start="647:17" pos:end="647:18">st</name><operator pos:start="647:19" pos:end="647:20">-&gt;</operator><name pos:start="647:21" pos:end="647:32">need_parsing</name></name> <operator pos:start="647:34" pos:end="647:34">=</operator> <name pos:start="647:36" pos:end="647:57">AVSTREAM_PARSE_HEADERS</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="649:15" pos:end="663:13">else if <condition pos:start="649:23" pos:end="649:64">(<expr pos:start="649:24" pos:end="649:63"><name pos:start="649:24" pos:end="649:34"><name pos:start="649:24" pos:end="649:28">track</name><operator pos:start="649:29" pos:end="649:30">-&gt;</operator><name pos:start="649:31" pos:end="649:34">type</name></name> <operator pos:start="649:36" pos:end="649:37">==</operator> <name pos:start="649:39" pos:end="649:63">MATROSKA_TRACK_TYPE_AUDIO</name></expr>)</condition> <block pos:start="649:66" pos:end="663:13">{<block_content pos:start="651:17" pos:end="661:65">

                <decl_stmt pos:start="651:17" pos:end="651:77"><decl pos:start="651:17" pos:end="651:76"><type pos:start="651:17" pos:end="651:36"><name pos:start="651:17" pos:end="651:34">MatroskaAudioTrack</name> <modifier pos:start="651:36" pos:end="651:36">*</modifier></type><name pos:start="651:37" pos:end="651:46">audiotrack</name> <init pos:start="651:48" pos:end="651:76">= <expr pos:start="651:50" pos:end="651:76"><operator pos:start="651:50" pos:end="651:50">(</operator><name pos:start="651:51" pos:end="651:68">MatroskaAudioTrack</name> <operator pos:start="651:70" pos:end="651:70">*</operator><operator pos:start="651:71" pos:end="651:71">)</operator><name pos:start="651:72" pos:end="651:76">track</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="655:17" pos:end="655:57"><expr pos:start="655:17" pos:end="655:56"><name pos:start="655:17" pos:end="655:37"><name pos:start="655:17" pos:end="655:18">st</name><operator pos:start="655:19" pos:end="655:20">-&gt;</operator><name pos:start="655:21" pos:end="655:25">codec</name><operator pos:start="655:26" pos:end="655:27">-&gt;</operator><name pos:start="655:28" pos:end="655:37">codec_type</name></name> <operator pos:start="655:39" pos:end="655:39">=</operator> <name pos:start="655:41" pos:end="655:56">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="657:17" pos:end="657:64"><expr pos:start="657:17" pos:end="657:63"><name pos:start="657:17" pos:end="657:38"><name pos:start="657:17" pos:end="657:18">st</name><operator pos:start="657:19" pos:end="657:20">-&gt;</operator><name pos:start="657:21" pos:end="657:25">codec</name><operator pos:start="657:26" pos:end="657:27">-&gt;</operator><name pos:start="657:28" pos:end="657:38">sample_rate</name></name> <operator pos:start="657:40" pos:end="657:40">=</operator> <name pos:start="657:42" pos:end="657:63"><name pos:start="657:42" pos:end="657:51">audiotrack</name><operator pos:start="657:52" pos:end="657:53">-&gt;</operator><name pos:start="657:54" pos:end="657:63">samplerate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="659:17" pos:end="659:59"><expr pos:start="659:17" pos:end="659:58"><name pos:start="659:17" pos:end="659:35"><name pos:start="659:17" pos:end="659:18">st</name><operator pos:start="659:19" pos:end="659:20">-&gt;</operator><name pos:start="659:21" pos:end="659:25">codec</name><operator pos:start="659:26" pos:end="659:27">-&gt;</operator><name pos:start="659:28" pos:end="659:35">channels</name></name> <operator pos:start="659:37" pos:end="659:37">=</operator> <name pos:start="659:39" pos:end="659:58"><name pos:start="659:39" pos:end="659:48">audiotrack</name><operator pos:start="659:49" pos:end="659:50">-&gt;</operator><name pos:start="659:51" pos:end="659:58">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="661:17" pos:end="661:65"><expr pos:start="661:17" pos:end="661:64"><name pos:start="661:17" pos:end="661:38"><name pos:start="661:17" pos:end="661:18">st</name><operator pos:start="661:19" pos:end="661:20">-&gt;</operator><name pos:start="661:21" pos:end="661:25">codec</name><operator pos:start="661:26" pos:end="661:27">-&gt;</operator><name pos:start="661:28" pos:end="661:38">block_align</name></name> <operator pos:start="661:40" pos:end="661:40">=</operator> <name pos:start="661:42" pos:end="661:64"><name pos:start="661:42" pos:end="661:51">audiotrack</name><operator pos:start="661:52" pos:end="661:53">-&gt;</operator><name pos:start="661:54" pos:end="661:64">block_align</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="663:15" pos:end="667:13">else if <condition pos:start="663:23" pos:end="663:67">(<expr pos:start="663:24" pos:end="663:66"><name pos:start="663:24" pos:end="663:34"><name pos:start="663:24" pos:end="663:28">track</name><operator pos:start="663:29" pos:end="663:30">-&gt;</operator><name pos:start="663:31" pos:end="663:34">type</name></name> <operator pos:start="663:36" pos:end="663:37">==</operator> <name pos:start="663:39" pos:end="663:66">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="663:69" pos:end="667:13">{<block_content pos:start="665:17" pos:end="665:60">

                <expr_stmt pos:start="665:17" pos:end="665:60"><expr pos:start="665:17" pos:end="665:59"><name pos:start="665:17" pos:end="665:37"><name pos:start="665:17" pos:end="665:18">st</name><operator pos:start="665:19" pos:end="665:20">-&gt;</operator><name pos:start="665:21" pos:end="665:25">codec</name><operator pos:start="665:26" pos:end="665:27">-&gt;</operator><name pos:start="665:28" pos:end="665:37">codec_type</name></name> <operator pos:start="665:39" pos:end="665:39">=</operator> <name pos:start="665:41" pos:end="665:59">CODEC_TYPE_SUBTITLE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="671:13" pos:end="671:67">/* What do we do with private data? E.g. for Vorbis. */</comment>

        </block_content>}</block></for>

        <expr_stmt pos:start="675:9" pos:end="675:16"><expr pos:start="675:9" pos:end="675:15"><name pos:start="675:9" pos:end="675:11">res</name> <operator pos:start="675:13" pos:end="675:13">=</operator> <literal type="number" pos:start="675:15" pos:end="675:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="681:5" pos:end="703:5"><if pos:start="681:5" pos:end="703:5">if <condition pos:start="681:8" pos:end="681:31">(<expr pos:start="681:9" pos:end="681:30"><name pos:start="681:9" pos:end="681:30"><name pos:start="681:9" pos:end="681:16">matroska</name><operator pos:start="681:17" pos:end="681:18">-&gt;</operator><name pos:start="681:19" pos:end="681:30">index_parsed</name></name></expr>)</condition> <block pos:start="681:33" pos:end="703:5">{<block_content pos:start="683:9" pos:end="701:9">

        <decl_stmt pos:start="683:9" pos:end="683:29"><decl pos:start="683:9" pos:end="683:13"><type pos:start="683:9" pos:end="683:11"><name pos:start="683:9" pos:end="683:11">int</name></type> <name pos:start="683:13" pos:end="683:13">i</name></decl>, <decl pos:start="683:16" pos:end="683:20"><type ref="prev" pos:start="683:9" pos:end="683:11"/><name pos:start="683:16" pos:end="683:20">track</name></decl>, <decl pos:start="683:23" pos:end="683:28"><type ref="prev" pos:start="683:9" pos:end="683:11"/><name pos:start="683:23" pos:end="683:28">stream</name></decl>;</decl_stmt>

        <for pos:start="685:9" pos:end="701:9">for <control pos:start="685:13" pos:end="685:47">(<init pos:start="685:14" pos:end="685:17"><expr pos:start="685:14" pos:end="685:16"><name pos:start="685:14" pos:end="685:14">i</name><operator pos:start="685:15" pos:end="685:15">=</operator><literal type="number" pos:start="685:16" pos:end="685:16">0</literal></expr>;</init> <condition pos:start="685:19" pos:end="685:42"><expr pos:start="685:19" pos:end="685:41"><name pos:start="685:19" pos:end="685:19">i</name><operator pos:start="685:20" pos:end="685:20">&lt;</operator><name pos:start="685:21" pos:end="685:41"><name pos:start="685:21" pos:end="685:28">matroska</name><operator pos:start="685:29" pos:end="685:30">-&gt;</operator><name pos:start="685:31" pos:end="685:41">num_indexes</name></name></expr>;</condition> <incr pos:start="685:44" pos:end="685:46"><expr pos:start="685:44" pos:end="685:46"><name pos:start="685:44" pos:end="685:44">i</name><operator pos:start="685:45" pos:end="685:46">++</operator></expr></incr>)</control> <block pos:start="685:49" pos:end="701:9">{<block_content pos:start="687:13" pos:end="699:59">

            <decl_stmt pos:start="687:13" pos:end="687:58"><decl pos:start="687:13" pos:end="687:57"><type pos:start="687:13" pos:end="687:32"><name pos:start="687:13" pos:end="687:30">MatroskaDemuxIndex</name> <modifier pos:start="687:32" pos:end="687:32">*</modifier></type><name pos:start="687:33" pos:end="687:35">idx</name> <init pos:start="687:37" pos:end="687:57">= <expr pos:start="687:39" pos:end="687:57"><operator pos:start="687:39" pos:end="687:39">&amp;</operator><name pos:start="687:40" pos:end="687:57"><name pos:start="687:40" pos:end="687:47">matroska</name><operator pos:start="687:48" pos:end="687:49">-&gt;</operator><name pos:start="687:50" pos:end="687:54">index</name><index pos:start="687:55" pos:end="687:57">[<expr pos:start="687:56" pos:end="687:56"><name pos:start="687:56" pos:end="687:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="689:13" pos:end="689:69"><expr pos:start="689:13" pos:end="689:68"><name pos:start="689:13" pos:end="689:17">track</name> <operator pos:start="689:19" pos:end="689:19">=</operator> <call pos:start="689:21" pos:end="689:68"><name pos:start="689:21" pos:end="689:46">matroska_find_track_by_num</name><argument_list pos:start="689:47" pos:end="689:68">(<argument pos:start="689:48" pos:end="689:55"><expr pos:start="689:48" pos:end="689:55"><name pos:start="689:48" pos:end="689:55">matroska</name></expr></argument>, <argument pos:start="689:58" pos:end="689:67"><expr pos:start="689:58" pos:end="689:67"><name pos:start="689:58" pos:end="689:67"><name pos:start="689:58" pos:end="689:60">idx</name><operator pos:start="689:61" pos:end="689:62">-&gt;</operator><name pos:start="689:63" pos:end="689:67">track</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:59"><expr pos:start="691:13" pos:end="691:58"><name pos:start="691:13" pos:end="691:18">stream</name> <operator pos:start="691:20" pos:end="691:20">=</operator> <name pos:start="691:22" pos:end="691:44"><name pos:start="691:22" pos:end="691:29">matroska</name><operator pos:start="691:30" pos:end="691:31">-&gt;</operator><name pos:start="691:32" pos:end="691:37">tracks</name><index pos:start="691:38" pos:end="691:44">[<expr pos:start="691:39" pos:end="691:43"><name pos:start="691:39" pos:end="691:43">track</name></expr>]</index></name><operator pos:start="691:45" pos:end="691:46">-&gt;</operator><name pos:start="691:47" pos:end="691:58">stream_index</name></expr>;</expr_stmt>

            <if_stmt pos:start="693:13" pos:end="699:59"><if pos:start="693:13" pos:end="699:59">if <condition pos:start="693:16" pos:end="693:28">(<expr pos:start="693:17" pos:end="693:27"><name pos:start="693:17" pos:end="693:22">stream</name> <operator pos:start="693:24" pos:end="693:25">&gt;=</operator> <literal type="number" pos:start="693:27" pos:end="693:27">0</literal></expr>)</condition><block type="pseudo" pos:start="695:17" pos:end="699:59"><block_content pos:start="695:17" pos:end="699:59">

                <expr_stmt pos:start="695:17" pos:end="699:59"><expr pos:start="695:17" pos:end="699:58"><call pos:start="695:17" pos:end="699:58"><name pos:start="695:17" pos:end="695:34">av_add_index_entry</name><argument_list pos:start="695:35" pos:end="699:58">(<argument pos:start="695:36" pos:end="695:65"><expr pos:start="695:36" pos:end="695:65"><name pos:start="695:36" pos:end="695:65"><name pos:start="695:36" pos:end="695:43">matroska</name><operator pos:start="695:44" pos:end="695:45">-&gt;</operator><name pos:start="695:46" pos:end="695:48">ctx</name><operator pos:start="695:49" pos:end="695:50">-&gt;</operator><name pos:start="695:51" pos:end="695:57">streams</name><index pos:start="695:58" pos:end="695:65">[<expr pos:start="695:59" pos:end="695:64"><name pos:start="695:59" pos:end="695:64">stream</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="697:36" pos:end="697:43"><expr pos:start="697:36" pos:end="697:43"><name pos:start="697:36" pos:end="697:43"><name pos:start="697:36" pos:end="697:38">idx</name><operator pos:start="697:39" pos:end="697:40">-&gt;</operator><name pos:start="697:41" pos:end="697:43">pos</name></name></expr></argument>, <argument pos:start="697:46" pos:end="697:75"><expr pos:start="697:46" pos:end="697:75"><name pos:start="697:46" pos:end="697:54"><name pos:start="697:46" pos:end="697:48">idx</name><operator pos:start="697:49" pos:end="697:50">-&gt;</operator><name pos:start="697:51" pos:end="697:54">time</name></name><operator pos:start="697:55" pos:end="697:55">/</operator><name pos:start="697:56" pos:end="697:75"><name pos:start="697:56" pos:end="697:63">matroska</name><operator pos:start="697:64" pos:end="697:65">-&gt;</operator><name pos:start="697:66" pos:end="697:75">time_scale</name></name></expr></argument>,

                                   <argument pos:start="699:36" pos:end="699:36"><expr pos:start="699:36" pos:end="699:36"><literal type="number" pos:start="699:36" pos:end="699:36">0</literal></expr></argument>, <argument pos:start="699:39" pos:end="699:39"><expr pos:start="699:39" pos:end="699:39"><literal type="number" pos:start="699:39" pos:end="699:39">0</literal></expr></argument>, <argument pos:start="699:42" pos:end="699:57"><expr pos:start="699:42" pos:end="699:57"><name pos:start="699:42" pos:end="699:57">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="707:5" pos:end="707:15">return <expr pos:start="707:12" pos:end="707:14"><name pos:start="707:12" pos:end="707:14">res</name></expr>;</return>

</block_content>}</block>
</unit>
