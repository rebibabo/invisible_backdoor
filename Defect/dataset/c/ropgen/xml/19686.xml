<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19686.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">local_mknod</name><parameter_list pos:start="1:23" pos:end="1:74">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:32">FsContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">fs_ctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">path</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:66">FsCred</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">credp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name> <init pos:start="5:13" pos:end="5:16">= <expr pos:start="5:15" pos:end="5:16"><operator pos:start="5:15" pos:end="5:15">-</operator><literal type="number" pos:start="5:16" pos:end="5:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">serrno</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:38">/* Determine the security model */</comment>

    <if_stmt pos:start="13:5" pos:end="53:5"><if pos:start="13:5" pos:end="33:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:14">fs_ctx</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:21">fs_sm</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <name pos:start="13:26" pos:end="13:34">SM_MAPPED</name></expr>)</condition> <block pos:start="13:37" pos:end="33:5">{<block_content pos:start="15:9" pos:end="31:9">

        <expr_stmt pos:start="15:9" pos:end="15:72"><expr pos:start="15:9" pos:end="15:71"><name pos:start="15:9" pos:end="15:11">err</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:71"><name pos:start="15:15" pos:end="15:19">mknod</name><argument_list pos:start="15:20" pos:end="15:71">(<argument pos:start="15:21" pos:end="15:39"><expr pos:start="15:21" pos:end="15:39"><call pos:start="15:21" pos:end="15:39"><name pos:start="15:21" pos:end="15:25">rpath</name><argument_list pos:start="15:26" pos:end="15:39">(<argument pos:start="15:27" pos:end="15:32"><expr pos:start="15:27" pos:end="15:32"><name pos:start="15:27" pos:end="15:32">fs_ctx</name></expr></argument>, <argument pos:start="15:35" pos:end="15:38"><expr pos:start="15:35" pos:end="15:38"><name pos:start="15:35" pos:end="15:38">path</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:42" pos:end="15:67"><expr pos:start="15:42" pos:end="15:67"><name pos:start="15:42" pos:end="15:59">SM_LOCAL_MODE_BITS</name><operator pos:start="15:60" pos:end="15:60">|</operator><name pos:start="15:61" pos:end="15:67">S_IFREG</name></expr></argument>, <argument pos:start="15:70" pos:end="15:70"><expr pos:start="15:70" pos:end="15:70"><literal type="number" pos:start="15:70" pos:end="15:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:22">(<expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:15">err</name> <operator pos:start="17:17" pos:end="17:18">==</operator> <operator pos:start="17:20" pos:end="17:20">-</operator><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>)</condition> <block pos:start="17:24" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:23">

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:52"><expr pos:start="23:9" pos:end="23:51"><call pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:23">local_set_xattr</name><argument_list pos:start="23:24" pos:end="23:51">(<argument pos:start="23:25" pos:end="23:43"><expr pos:start="23:25" pos:end="23:43"><call pos:start="23:25" pos:end="23:43"><name pos:start="23:25" pos:end="23:29">rpath</name><argument_list pos:start="23:30" pos:end="23:43">(<argument pos:start="23:31" pos:end="23:36"><expr pos:start="23:31" pos:end="23:36"><name pos:start="23:31" pos:end="23:36">fs_ctx</name></expr></argument>, <argument pos:start="23:39" pos:end="23:42"><expr pos:start="23:39" pos:end="23:42"><name pos:start="23:39" pos:end="23:42">path</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:46" pos:end="23:50"><expr pos:start="23:46" pos:end="23:50"><name pos:start="23:46" pos:end="23:50">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:22">(<expr pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:15">err</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <operator pos:start="25:20" pos:end="25:20">-</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>)</condition> <block pos:start="25:24" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:25">

            <expr_stmt pos:start="27:13" pos:end="27:27"><expr pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:18">serrno</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="29:13" pos:end="29:25">goto <name pos:start="29:18" pos:end="29:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="53:5">else if <condition pos:start="33:15" pos:end="33:47">(<expr pos:start="33:16" pos:end="33:46"><name pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:21">fs_ctx</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:28">fs_sm</name></name> <operator pos:start="33:30" pos:end="33:31">==</operator> <name pos:start="33:33" pos:end="33:46">SM_PASSTHROUGH</name></expr>)</condition> <block pos:start="33:49" pos:end="53:5">{<block_content pos:start="35:9" pos:end="51:9">

        <expr_stmt pos:start="35:9" pos:end="35:73"><expr pos:start="35:9" pos:end="35:72"><name pos:start="35:9" pos:end="35:11">err</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:72"><name pos:start="35:15" pos:end="35:19">mknod</name><argument_list pos:start="35:20" pos:end="35:72">(<argument pos:start="35:21" pos:end="35:39"><expr pos:start="35:21" pos:end="35:39"><call pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:25">rpath</name><argument_list pos:start="35:26" pos:end="35:39">(<argument pos:start="35:27" pos:end="35:32"><expr pos:start="35:27" pos:end="35:32"><name pos:start="35:27" pos:end="35:32">fs_ctx</name></expr></argument>, <argument pos:start="35:35" pos:end="35:38"><expr pos:start="35:35" pos:end="35:38"><name pos:start="35:35" pos:end="35:38">path</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:42" pos:end="35:55"><expr pos:start="35:42" pos:end="35:55"><name pos:start="35:42" pos:end="35:55"><name pos:start="35:42" pos:end="35:46">credp</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:55">fc_mode</name></name></expr></argument>, <argument pos:start="35:58" pos:end="35:71"><expr pos:start="35:58" pos:end="35:71"><name pos:start="35:58" pos:end="35:71"><name pos:start="35:58" pos:end="35:62">credp</name><operator pos:start="35:63" pos:end="35:64">-&gt;</operator><name pos:start="35:65" pos:end="35:71">fc_rdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:22">(<expr pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:15">err</name> <operator pos:start="37:17" pos:end="37:18">==</operator> <operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>)</condition> <block pos:start="37:24" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:23">

            <return pos:start="39:13" pos:end="39:23">return <expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:65"><expr pos:start="43:9" pos:end="43:64"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:64"><name pos:start="43:15" pos:end="43:43">local_post_create_passthrough</name><argument_list pos:start="43:44" pos:end="43:64">(<argument pos:start="43:45" pos:end="43:50"><expr pos:start="43:45" pos:end="43:50"><name pos:start="43:45" pos:end="43:50">fs_ctx</name></expr></argument>, <argument pos:start="43:53" pos:end="43:56"><expr pos:start="43:53" pos:end="43:56"><name pos:start="43:53" pos:end="43:56">path</name></expr></argument>, <argument pos:start="43:59" pos:end="43:63"><expr pos:start="43:59" pos:end="43:63"><name pos:start="43:59" pos:end="43:63">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:22">(<expr pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:15">err</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <operator pos:start="45:20" pos:end="45:20">-</operator><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr>)</condition> <block pos:start="45:24" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:25">

            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:18">serrno</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:25">goto <name pos:start="49:18" pos:end="49:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">err</name></expr>;</return>



<label pos:start="59:1" pos:end="59:8"><name pos:start="59:1" pos:end="59:7">err_end</name>:</label>

    <expr_stmt pos:start="61:5" pos:end="61:32"><expr pos:start="61:5" pos:end="61:31"><call pos:start="61:5" pos:end="61:31"><name pos:start="61:5" pos:end="61:10">remove</name><argument_list pos:start="61:11" pos:end="61:31">(<argument pos:start="61:12" pos:end="61:30"><expr pos:start="61:12" pos:end="61:30"><call pos:start="61:12" pos:end="61:30"><name pos:start="61:12" pos:end="61:16">rpath</name><argument_list pos:start="61:17" pos:end="61:30">(<argument pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:23"><name pos:start="61:18" pos:end="61:23">fs_ctx</name></expr></argument>, <argument pos:start="61:26" pos:end="61:29"><expr pos:start="61:26" pos:end="61:29"><name pos:start="61:26" pos:end="61:29">path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:19"><expr pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:9">errno</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <name pos:start="63:13" pos:end="63:18">serrno</name></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:15">return <expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
