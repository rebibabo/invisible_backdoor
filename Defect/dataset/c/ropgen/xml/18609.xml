<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18609.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">pci_register_bar</name><parameter_list pos:start="1:22" pos:end="5:57">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:31">PCIDevice</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">pci_dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:56">region_num</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:36">pcibus_t</name></type> <name pos:start="3:38" pos:end="3:41">size</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:51"><decl pos:start="3:44" pos:end="3:51"><type pos:start="3:44" pos:end="3:51"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:51">type</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:56"><decl pos:start="5:29" pos:end="5:56"><type pos:start="5:29" pos:end="5:56"><name pos:start="5:29" pos:end="5:46">PCIMapIORegionFunc</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:56">map_func</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="79:1">{<block_content pos:start="9:5" pos:end="77:5">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">PCIIORegion</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:18">wmask</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:15"><if pos:start="17:5" pos:end="19:15">if <condition pos:start="17:8" pos:end="17:52">(<expr pos:start="17:9" pos:end="17:51"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:17">unsigned</name> <name pos:start="17:19" pos:end="17:21">int</name><operator pos:start="17:22" pos:end="17:22">)</operator><name pos:start="17:23" pos:end="17:32">region_num</name> <operator pos:start="17:34" pos:end="17:35">&gt;=</operator> <name pos:start="17:37" pos:end="17:51">PCI_NUM_REGIONS</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:15"><block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:12">size</name> <operator pos:start="23:14" pos:end="23:14">&amp;</operator> <operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:20">size</name><operator pos:start="23:21" pos:end="23:21">-</operator><literal type="number" pos:start="23:22" pos:end="23:22">1</literal><operator pos:start="23:23" pos:end="23:23">)</operator></expr>)</condition> <block pos:start="23:26" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:16">

        <expr_stmt pos:start="25:9" pos:end="27:69"><expr pos:start="25:9" pos:end="27:68"><call pos:start="25:9" pos:end="27:68"><name pos:start="25:9" pos:end="25:15">fprintf</name><argument_list pos:start="25:16" pos:end="27:68">(<argument pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:22">stderr</name></expr></argument>, <argument pos:start="25:25" pos:end="27:55"><expr pos:start="25:25" pos:end="27:55"><literal type="string" pos:start="25:25" pos:end="25:62">"ERROR: PCI region size must be pow2 "</literal>

                    <literal type="string" pos:start="27:21" pos:end="27:41">"type=0x%x, size=0x%"</literal><name pos:start="27:42" pos:end="27:51">FMT_PCIBUS</name><literal type="string" pos:start="27:52" pos:end="27:55">"\n"</literal></expr></argument>, <argument pos:start="27:58" pos:end="27:61"><expr pos:start="27:58" pos:end="27:61"><name pos:start="27:58" pos:end="27:61">type</name></expr></argument>, <argument pos:start="27:64" pos:end="27:67"><expr pos:start="27:64" pos:end="27:67"><name pos:start="27:64" pos:end="27:67">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:16"><expr pos:start="29:9" pos:end="29:15"><call pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:12">exit</name><argument_list pos:start="29:13" pos:end="29:15">(<argument pos:start="29:14" pos:end="29:14"><expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:5">r</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <operator pos:start="35:9" pos:end="35:9">&amp;</operator><name pos:start="35:10" pos:end="35:40"><name pos:start="35:10" pos:end="35:16">pci_dev</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:28">io_regions</name><index pos:start="35:29" pos:end="35:40">[<expr pos:start="35:30" pos:end="35:39"><name pos:start="35:30" pos:end="35:39">region_num</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:5">r</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:11">addr</name></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:30">PCI_BAR_UNMAPPED</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:5">r</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:11">size</name></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:18">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:28"><expr pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:5">r</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:20">filtered_size</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:27">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:5">r</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:11">type</name></name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:18">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:5">r</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:15">map_func</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:26">map_func</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:9">wmask</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <operator pos:start="49:13" pos:end="49:13">~</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:18">size</name> <operator pos:start="49:20" pos:end="49:20">-</operator> <literal type="number" pos:start="49:22" pos:end="49:22">1</literal><operator pos:start="49:23" pos:end="49:23">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:8">addr</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="51:39"><name pos:start="51:12" pos:end="51:18">pci_bar</name><argument_list pos:start="51:19" pos:end="51:39">(<argument pos:start="51:20" pos:end="51:26"><expr pos:start="51:20" pos:end="51:26"><name pos:start="51:20" pos:end="51:26">pci_dev</name></expr></argument>, <argument pos:start="51:29" pos:end="51:38"><expr pos:start="51:29" pos:end="51:38"><name pos:start="51:29" pos:end="51:38">region_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:35">(<expr pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:18">region_num</name> <operator pos:start="53:20" pos:end="53:21">==</operator> <name pos:start="53:23" pos:end="53:34">PCI_ROM_SLOT</name></expr>)</condition> <block pos:start="53:37" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:40">

        <comment type="block" pos:start="55:9" pos:end="55:41">/* ROM enable bit is writeable */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:40"><expr pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:13">wmask</name> <operator pos:start="57:15" pos:end="57:16">|=</operator> <name pos:start="57:18" pos:end="57:39">PCI_ROM_ADDRESS_ENABLE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:47"><expr pos:start="61:5" pos:end="61:46"><call pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:16">pci_set_long</name><argument_list pos:start="61:17" pos:end="61:46">(<argument pos:start="61:18" pos:end="61:39"><expr pos:start="61:18" pos:end="61:39"><name pos:start="61:18" pos:end="61:32"><name pos:start="61:18" pos:end="61:24">pci_dev</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:32">config</name></name> <operator pos:start="61:34" pos:end="61:34">+</operator> <name pos:start="61:36" pos:end="61:39">addr</name></expr></argument>, <argument pos:start="61:42" pos:end="61:45"><expr pos:start="61:42" pos:end="61:45"><name pos:start="61:42" pos:end="61:45">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="77:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="65:47">(<expr pos:start="63:9" pos:end="65:46"><operator pos:start="63:9" pos:end="63:9">!</operator><operator pos:start="63:10" pos:end="63:10">(</operator><name pos:start="63:11" pos:end="63:17"><name pos:start="63:11" pos:end="63:11">r</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:17">type</name></name> <operator pos:start="63:19" pos:end="63:19">&amp;</operator> <name pos:start="63:21" pos:end="63:45">PCI_BASE_ADDRESS_SPACE_IO</name><operator pos:start="63:46" pos:end="63:46">)</operator> <operator pos:start="63:48" pos:end="63:49">&amp;&amp;</operator>

        <name pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:9">r</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:15">type</name></name> <operator pos:start="65:17" pos:end="65:17">&amp;</operator> <name pos:start="65:19" pos:end="65:46">PCI_BASE_ADDRESS_MEM_TYPE_64</name></expr>)</condition> <block pos:start="65:49" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:51">

        <expr_stmt pos:start="67:9" pos:end="67:51"><expr pos:start="67:9" pos:end="67:50"><call pos:start="67:9" pos:end="67:50"><name pos:start="67:9" pos:end="67:20">pci_set_quad</name><argument_list pos:start="67:21" pos:end="67:50">(<argument pos:start="67:22" pos:end="67:42"><expr pos:start="67:22" pos:end="67:42"><name pos:start="67:22" pos:end="67:35"><name pos:start="67:22" pos:end="67:28">pci_dev</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:35">wmask</name></name> <operator pos:start="67:37" pos:end="67:37">+</operator> <name pos:start="67:39" pos:end="67:42">addr</name></expr></argument>, <argument pos:start="67:45" pos:end="67:49"><expr pos:start="67:45" pos:end="67:49"><name pos:start="67:45" pos:end="67:49">wmask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:51"><expr pos:start="69:9" pos:end="69:50"><call pos:start="69:9" pos:end="69:50"><name pos:start="69:9" pos:end="69:20">pci_set_quad</name><argument_list pos:start="69:21" pos:end="69:50">(<argument pos:start="69:22" pos:end="69:42"><expr pos:start="69:22" pos:end="69:42"><name pos:start="69:22" pos:end="69:35"><name pos:start="69:22" pos:end="69:28">pci_dev</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:35">cmask</name></name> <operator pos:start="69:37" pos:end="69:37">+</operator> <name pos:start="69:39" pos:end="69:42">addr</name></expr></argument>, <argument pos:start="69:45" pos:end="69:49"><expr pos:start="69:45" pos:end="69:49"><operator pos:start="69:45" pos:end="69:45">~</operator><literal type="number" pos:start="69:46" pos:end="69:49">0ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="77:5">else <block pos:start="71:12" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:56">

        <expr_stmt pos:start="73:9" pos:end="73:64"><expr pos:start="73:9" pos:end="73:63"><call pos:start="73:9" pos:end="73:63"><name pos:start="73:9" pos:end="73:20">pci_set_long</name><argument_list pos:start="73:21" pos:end="73:63">(<argument pos:start="73:22" pos:end="73:42"><expr pos:start="73:22" pos:end="73:42"><name pos:start="73:22" pos:end="73:35"><name pos:start="73:22" pos:end="73:28">pci_dev</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:35">wmask</name></name> <operator pos:start="73:37" pos:end="73:37">+</operator> <name pos:start="73:39" pos:end="73:42">addr</name></expr></argument>, <argument pos:start="73:45" pos:end="73:62"><expr pos:start="73:45" pos:end="73:62"><name pos:start="73:45" pos:end="73:49">wmask</name> <operator pos:start="73:51" pos:end="73:51">&amp;</operator> <literal type="number" pos:start="73:53" pos:end="73:62">0xffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:56"><expr pos:start="75:9" pos:end="75:55"><call pos:start="75:9" pos:end="75:55"><name pos:start="75:9" pos:end="75:20">pci_set_long</name><argument_list pos:start="75:21" pos:end="75:55">(<argument pos:start="75:22" pos:end="75:42"><expr pos:start="75:22" pos:end="75:42"><name pos:start="75:22" pos:end="75:35"><name pos:start="75:22" pos:end="75:28">pci_dev</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:35">cmask</name></name> <operator pos:start="75:37" pos:end="75:37">+</operator> <name pos:start="75:39" pos:end="75:42">addr</name></expr></argument>, <argument pos:start="75:45" pos:end="75:54"><expr pos:start="75:45" pos:end="75:54"><literal type="number" pos:start="75:45" pos:end="75:54">0xffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
