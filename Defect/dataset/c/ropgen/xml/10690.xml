<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10690.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">extract_mpeg4_header</name><parameter_list pos:start="1:33" pos:end="1:57">(<parameter pos:start="1:34" pos:end="1:56"><decl pos:start="1:34" pos:end="1:56"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">infile</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:5">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">mpeg4_count</name></decl>, <decl pos:start="5:22" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:22">i</name></decl>, <decl pos:start="5:25" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:28">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVPacket</name></type> <name pos:start="7:14" pos:end="7:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">p</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:15">mpeg4_count</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="29:5">for<control pos:start="17:8" pos:end="17:37">(<init pos:start="17:9" pos:end="17:12"><expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:9">i</name><operator pos:start="17:10" pos:end="17:10">=</operator><literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr>;</init><condition pos:start="17:13" pos:end="17:33"><expr pos:start="17:13" pos:end="17:32"><name pos:start="17:13" pos:end="17:13">i</name><operator pos:start="17:14" pos:end="17:14">&lt;</operator><name pos:start="17:15" pos:end="17:32"><name pos:start="17:15" pos:end="17:20">infile</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:32">nb_streams</name></name></expr>;</condition><incr pos:start="17:34" pos:end="17:36"><expr pos:start="17:34" pos:end="17:36"><name pos:start="17:34" pos:end="17:34">i</name><operator pos:start="17:35" pos:end="17:36">++</operator></expr></incr>)</control> <block pos:start="17:39" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:9">

        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:10">st</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:31"><name pos:start="19:14" pos:end="19:19">infile</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:28">streams</name><index pos:start="19:29" pos:end="19:31">[<expr pos:start="19:30" pos:end="19:30"><name pos:start="19:30" pos:end="19:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="23:42">(<expr pos:start="21:13" pos:end="23:41"><name pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:14">st</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">codec</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:30">codec_id</name></name> <operator pos:start="21:32" pos:end="21:33">==</operator> <name pos:start="21:35" pos:end="21:48">CODEC_ID_MPEG4</name> <operator pos:start="21:50" pos:end="21:51">&amp;&amp;</operator>

            <name pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:14">st</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:21">codec</name><operator pos:start="23:22" pos:end="23:22">.</operator><name pos:start="23:23" pos:end="23:36">extradata_size</name></name> <operator pos:start="23:38" pos:end="23:39">==</operator> <literal type="number" pos:start="23:41" pos:end="23:41">0</literal></expr>)</condition> <block pos:start="23:44" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:26">

            <expr_stmt pos:start="25:13" pos:end="25:26"><expr pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:23">mpeg4_count</name><operator pos:start="25:24" pos:end="25:25">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="31:5" pos:end="33:15"><if pos:start="31:5" pos:end="33:15">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:20">mpeg4_count</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:15"><block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:64"><expr pos:start="37:5" pos:end="37:63"><call pos:start="37:5" pos:end="37:63"><name pos:start="37:5" pos:end="37:10">printf</name><argument_list pos:start="37:11" pos:end="37:63">(<argument pos:start="37:12" pos:end="37:62"><expr pos:start="37:12" pos:end="37:62"><literal type="string" pos:start="37:12" pos:end="37:62">"MPEG4 without extra data: trying to find header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="39:5" pos:end="91:5">while <condition pos:start="39:11" pos:end="39:27">(<expr pos:start="39:12" pos:end="39:26"><name pos:start="39:12" pos:end="39:22">mpeg4_count</name> <operator pos:start="39:24" pos:end="39:24">&gt;</operator> <literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr>)</condition> <block pos:start="39:29" pos:end="91:5">{<block_content pos:start="41:9" pos:end="89:29">

        <if_stmt pos:start="41:9" pos:end="43:18"><if pos:start="41:9" pos:end="43:18">if <condition pos:start="41:12" pos:end="41:45">(<expr pos:start="41:13" pos:end="41:44"><call pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:26">av_read_packet</name><argument_list pos:start="41:27" pos:end="41:40">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">infile</name></expr></argument>, <argument pos:start="41:36" pos:end="41:39"><expr pos:start="41:36" pos:end="41:39"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:39">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="41:42" pos:end="41:42">&lt;</operator> <literal type="number" pos:start="41:44" pos:end="41:44">0</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:18"><block_content pos:start="43:13" pos:end="43:18">

            <break pos:start="43:13" pos:end="43:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:47"><expr pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:10">st</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:46"><name pos:start="45:14" pos:end="45:19">infile</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:28">streams</name><index pos:start="45:29" pos:end="45:46">[<expr pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:32">pkt</name><operator pos:start="45:33" pos:end="45:33">.</operator><name pos:start="45:34" pos:end="45:45">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="87:9"><if pos:start="47:9" pos:end="87:9">if <condition pos:start="47:12" pos:end="49:42">(<expr pos:start="47:13" pos:end="49:41"><name pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:14">st</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">codec</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:30">codec_id</name></name> <operator pos:start="47:32" pos:end="47:33">==</operator> <name pos:start="47:35" pos:end="47:48">CODEC_ID_MPEG4</name> <operator pos:start="47:50" pos:end="47:51">&amp;&amp;</operator>

            <name pos:start="49:13" pos:end="49:36"><name pos:start="49:13" pos:end="49:14">st</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">codec</name><operator pos:start="49:22" pos:end="49:22">.</operator><name pos:start="49:23" pos:end="49:36">extradata_size</name></name> <operator pos:start="49:38" pos:end="49:39">==</operator> <literal type="number" pos:start="49:41" pos:end="49:41">0</literal></expr>)</condition> <block pos:start="49:44" pos:end="87:9">{<block_content pos:start="51:13" pos:end="85:26">

            <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><call pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:20">av_freep</name><argument_list pos:start="51:21" pos:end="51:42">(<argument pos:start="51:22" pos:end="51:41"><expr pos:start="51:22" pos:end="51:41"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:41"><name pos:start="51:23" pos:end="51:24">st</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:31">codec</name><operator pos:start="51:32" pos:end="51:32">.</operator><name pos:start="51:33" pos:end="51:41">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="53:13" pos:end="53:48">/* fill extradata with the header */</comment>

            <comment type="block" pos:start="55:13" pos:end="55:55">/* XXX: we make hard suppositions here ! */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:13">p</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:19">pkt</name><operator pos:start="57:20" pos:end="57:20">.</operator><name pos:start="57:21" pos:end="57:24">data</name></name></expr>;</expr_stmt>

            <while pos:start="59:13" pos:end="83:13">while <condition pos:start="59:19" pos:end="59:47">(<expr pos:start="59:20" pos:end="59:46"><name pos:start="59:20" pos:end="59:20">p</name> <operator pos:start="59:22" pos:end="59:22">&lt;</operator> <name pos:start="59:24" pos:end="59:31"><name pos:start="59:24" pos:end="59:26">pkt</name><operator pos:start="59:27" pos:end="59:27">.</operator><name pos:start="59:28" pos:end="59:31">data</name></name> <operator pos:start="59:33" pos:end="59:33">+</operator> <name pos:start="59:35" pos:end="59:42"><name pos:start="59:35" pos:end="59:37">pkt</name><operator pos:start="59:38" pos:end="59:38">.</operator><name pos:start="59:39" pos:end="59:42">size</name></name> <operator pos:start="59:44" pos:end="59:44">-</operator> <literal type="number" pos:start="59:46" pos:end="59:46">4</literal></expr>)</condition> <block pos:start="59:49" pos:end="83:13">{<block_content pos:start="63:17" pos:end="81:20">

                <comment type="block" pos:start="61:17" pos:end="61:51">/* stop when vop header is found */</comment>

                <if_stmt pos:start="63:17" pos:end="79:17"><if pos:start="63:17" pos:end="79:17">if <condition pos:start="63:20" pos:end="65:49">(<expr pos:start="63:21" pos:end="65:48"><name pos:start="63:21" pos:end="63:24"><name pos:start="63:21" pos:end="63:21">p</name><index pos:start="63:22" pos:end="63:24">[<expr pos:start="63:23" pos:end="63:23"><literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>]</index></name> <operator pos:start="63:26" pos:end="63:27">==</operator> <literal type="number" pos:start="63:29" pos:end="63:32">0x00</literal> <operator pos:start="63:34" pos:end="63:35">&amp;&amp;</operator> <name pos:start="63:37" pos:end="63:40"><name pos:start="63:37" pos:end="63:37">p</name><index pos:start="63:38" pos:end="63:40">[<expr pos:start="63:39" pos:end="63:39"><literal type="number" pos:start="63:39" pos:end="63:39">1</literal></expr>]</index></name> <operator pos:start="63:42" pos:end="63:43">==</operator> <literal type="number" pos:start="63:45" pos:end="63:48">0x00</literal> <operator pos:start="63:50" pos:end="63:51">&amp;&amp;</operator> 

                    <name pos:start="65:21" pos:end="65:24"><name pos:start="65:21" pos:end="65:21">p</name><index pos:start="65:22" pos:end="65:24">[<expr pos:start="65:23" pos:end="65:23"><literal type="number" pos:start="65:23" pos:end="65:23">2</literal></expr>]</index></name> <operator pos:start="65:26" pos:end="65:27">==</operator> <literal type="number" pos:start="65:29" pos:end="65:32">0x01</literal> <operator pos:start="65:34" pos:end="65:35">&amp;&amp;</operator> <name pos:start="65:37" pos:end="65:40"><name pos:start="65:37" pos:end="65:37">p</name><index pos:start="65:38" pos:end="65:40">[<expr pos:start="65:39" pos:end="65:39"><literal type="number" pos:start="65:39" pos:end="65:39">3</literal></expr>]</index></name> <operator pos:start="65:42" pos:end="65:43">==</operator> <literal type="number" pos:start="65:45" pos:end="65:48">0xb6</literal></expr>)</condition> <block pos:start="65:51" pos:end="79:17">{<block_content pos:start="67:21" pos:end="77:26">

                    <expr_stmt pos:start="67:21" pos:end="67:40"><expr pos:start="67:21" pos:end="67:39"><name pos:start="67:21" pos:end="67:24">size</name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:28">p</name> <operator pos:start="67:30" pos:end="67:30">-</operator> <name pos:start="67:32" pos:end="67:39"><name pos:start="67:32" pos:end="67:34">pkt</name><operator pos:start="67:35" pos:end="67:35">.</operator><name pos:start="67:36" pos:end="67:39">data</name></name></expr>;</expr_stmt>

                    <comment type="line" pos:start="69:21" pos:end="69:70">//                    av_hex_dump(pkt.data, size);</comment>

                    <expr_stmt pos:start="71:21" pos:end="71:58"><expr pos:start="71:21" pos:end="71:57"><name pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:22">st</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:29">codec</name><operator pos:start="71:30" pos:end="71:30">.</operator><name pos:start="71:31" pos:end="71:39">extradata</name></name> <operator pos:start="71:41" pos:end="71:41">=</operator> <call pos:start="71:43" pos:end="71:57"><name pos:start="71:43" pos:end="71:51">av_malloc</name><argument_list pos:start="71:52" pos:end="71:57">(<argument pos:start="71:53" pos:end="71:56"><expr pos:start="71:53" pos:end="71:56"><name pos:start="71:53" pos:end="71:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:52"><expr pos:start="73:21" pos:end="73:51"><name pos:start="73:21" pos:end="73:44"><name pos:start="73:21" pos:end="73:22">st</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:29">codec</name><operator pos:start="73:30" pos:end="73:30">.</operator><name pos:start="73:31" pos:end="73:44">extradata_size</name></name> <operator pos:start="73:46" pos:end="73:46">=</operator> <name pos:start="73:48" pos:end="73:51">size</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:64"><expr pos:start="75:21" pos:end="75:63"><call pos:start="75:21" pos:end="75:63"><name pos:start="75:21" pos:end="75:26">memcpy</name><argument_list pos:start="75:27" pos:end="75:63">(<argument pos:start="75:28" pos:end="75:46"><expr pos:start="75:28" pos:end="75:46"><name pos:start="75:28" pos:end="75:46"><name pos:start="75:28" pos:end="75:29">st</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:36">codec</name><operator pos:start="75:37" pos:end="75:37">.</operator><name pos:start="75:38" pos:end="75:46">extradata</name></name></expr></argument>, <argument pos:start="75:49" pos:end="75:56"><expr pos:start="75:49" pos:end="75:56"><name pos:start="75:49" pos:end="75:56"><name pos:start="75:49" pos:end="75:51">pkt</name><operator pos:start="75:52" pos:end="75:52">.</operator><name pos:start="75:53" pos:end="75:56">data</name></name></expr></argument>, <argument pos:start="75:59" pos:end="75:62"><expr pos:start="75:59" pos:end="75:62"><name pos:start="75:59" pos:end="75:62">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="77:21" pos:end="77:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:20"><expr pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:17">p</name><operator pos:start="81:18" pos:end="81:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="85:13" pos:end="85:26"><expr pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:23">mpeg4_count</name><operator pos:start="85:24" pos:end="85:25">--</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><call pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:22">av_free_packet</name><argument_list pos:start="89:23" pos:end="89:28">(<argument pos:start="89:24" pos:end="89:27"><expr pos:start="89:24" pos:end="89:27"><operator pos:start="89:24" pos:end="89:24">&amp;</operator><name pos:start="89:25" pos:end="89:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
