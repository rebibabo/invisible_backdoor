<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14978.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">qemu_input_event_send</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38">QemuConsole</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">src</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:55">InputEvent</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">evt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:16">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:25">QemuInputHandlerState</name> <modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:28">s</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:71">(<expr pos:start="9:9" pos:end="9:70"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:30"><name pos:start="9:10" pos:end="9:28">runstate_is_running</name><argument_list pos:start="9:29" pos:end="9:30">()</argument_list></call> <operator pos:start="9:32" pos:end="9:33">&amp;&amp;</operator> <operator pos:start="9:35" pos:end="9:35">!</operator><call pos:start="9:36" pos:end="9:70"><name pos:start="9:36" pos:end="9:49">runstate_check</name><argument_list pos:start="9:50" pos:end="9:70">(<argument pos:start="9:51" pos:end="9:69"><expr pos:start="9:51" pos:end="9:69"><name pos:start="9:51" pos:end="9:69">RUN_STATE_SUSPENDED</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:73" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:26">qemu_input_event_trace</name><argument_list pos:start="17:27" pos:end="17:36">(<argument pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:30">src</name></expr></argument>, <argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:35">evt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:24">/* pre processing */</comment>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><name pos:start="23:9" pos:end="23:22">graphic_rotate</name> <operator pos:start="23:24" pos:end="23:25">&amp;&amp;</operator> <operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:36"><name pos:start="23:28" pos:end="23:30">evt</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:36">type</name></name> <operator pos:start="23:38" pos:end="23:39">==</operator> <name pos:start="23:41" pos:end="23:60">INPUT_EVENT_KIND_ABS</name><operator pos:start="23:61" pos:end="23:61">)</operator></expr>)</condition> <block pos:start="23:64" pos:end="27:5">{<block_content pos:start="25:13" pos:end="25:49">

            <expr_stmt pos:start="25:13" pos:end="25:49"><expr pos:start="25:13" pos:end="25:48"><call pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:43">qemu_input_transform_abs_rotate</name><argument_list pos:start="25:44" pos:end="25:48">(<argument pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><name pos:start="25:45" pos:end="25:47">evt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:20">/* send event */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:53"><expr pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:5">s</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:52"><name pos:start="33:9" pos:end="33:31">qemu_input_find_handler</name><argument_list pos:start="33:32" pos:end="33:52">(<argument pos:start="33:33" pos:end="33:46"><expr pos:start="33:33" pos:end="33:46"><literal type="number" pos:start="33:33" pos:end="33:33">1</literal> <operator pos:start="33:35" pos:end="33:36">&lt;&lt;</operator> <name pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:40">evt</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:46">type</name></name></expr></argument>, <argument pos:start="33:49" pos:end="33:51"><expr pos:start="33:49" pos:end="33:51"><name pos:start="33:49" pos:end="33:51">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:11">(<expr pos:start="35:9" pos:end="35:10"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:10">s</name></expr>)</condition> <block pos:start="35:13" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><call pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:14">handler</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">event</name></name><argument_list pos:start="41:22" pos:end="41:39">(<argument pos:start="41:23" pos:end="41:28"><expr pos:start="41:23" pos:end="41:28"><name pos:start="41:23" pos:end="41:28"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:28">dev</name></name></expr></argument>, <argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">src</name></expr></argument>, <argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">evt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:16"><expr pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:13">events</name></name><operator pos:start="43:14" pos:end="43:15">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
