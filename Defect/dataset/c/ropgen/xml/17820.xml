<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17820.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">ff_tls_init</name><parameter_list pos:start="1:17" pos:end="1:22">(<parameter pos:start="1:18" pos:end="1:21"><decl pos:start="1:18" pos:end="1:21"><type pos:start="1:18" pos:end="1:21"><name pos:start="1:18" pos:end="1:21">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:29">

    <expr_stmt pos:start="5:5" pos:end="8:0"><expr pos:start="5:5" pos:end="5:26"><call pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">avpriv_lock_avformat</name><argument_list pos:start="5:25" pos:end="5:26">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="7:1" pos:end="7:18">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">CONFIG_OPENSSL</name></expr></cpp:if>

    <if_stmt pos:start="9:5" pos:end="39:5"><if pos:start="9:5" pos:end="39:5">if <condition pos:start="9:8" pos:end="9:22">(<expr pos:start="9:9" pos:end="9:21"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:21">openssl_init</name></expr>)</condition> <block pos:start="9:24" pos:end="39:5">{<block_content pos:start="11:9" pos:end="38:0">

        <expr_stmt pos:start="11:9" pos:end="11:27"><expr pos:start="11:9" pos:end="11:26"><call pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:24">SSL_library_init</name><argument_list pos:start="11:25" pos:end="11:26">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="16:0"><expr pos:start="13:9" pos:end="13:32"><call pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:30">SSL_load_error_strings</name><argument_list pos:start="13:31" pos:end="13:32">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="15:1" pos:end="15:16">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">HAVE_THREADS</name></expr></cpp:if>

        <if_stmt pos:start="17:9" pos:end="38:0"><if pos:start="17:9" pos:end="38:0">if <condition pos:start="17:12" pos:end="17:43">(<expr pos:start="17:13" pos:end="17:42"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:42"><name pos:start="17:14" pos:end="17:40">CRYPTO_get_locking_callback</name><argument_list pos:start="17:41" pos:end="17:42">()</argument_list></call></expr>)</condition> <block pos:start="17:45" pos:end="38:0">{<block_content pos:start="19:13" pos:end="34:0">

            <decl_stmt pos:start="19:13" pos:end="19:18"><decl pos:start="19:13" pos:end="19:17"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:17">i</name></decl>;</decl_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:91"><expr pos:start="21:13" pos:end="21:90"><name pos:start="21:13" pos:end="21:27">openssl_mutexes</name> <operator pos:start="21:29" pos:end="21:29">=</operator> <call pos:start="21:31" pos:end="21:90"><name pos:start="21:31" pos:end="21:45">av_malloc_array</name><argument_list pos:start="21:46" pos:end="21:90">(<argument pos:start="21:47" pos:end="21:69"><expr pos:start="21:47" pos:end="21:69"><sizeof pos:start="21:47" pos:end="21:69">sizeof<argument_list pos:start="21:53" pos:end="21:69">(<argument pos:start="21:54" pos:end="21:68"><expr pos:start="21:54" pos:end="21:68"><name pos:start="21:54" pos:end="21:68">pthread_mutex_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="21:72" pos:end="21:89"><expr pos:start="21:72" pos:end="21:89"><call pos:start="21:72" pos:end="21:89"><name pos:start="21:72" pos:end="21:87">CRYPTO_num_locks</name><argument_list pos:start="21:88" pos:end="21:89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="23:13" pos:end="25:62">for <control pos:start="23:17" pos:end="23:52">(<init pos:start="23:18" pos:end="23:23"><expr pos:start="23:18" pos:end="23:22"><name pos:start="23:18" pos:end="23:18">i</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>;</init> <condition pos:start="23:25" pos:end="23:47"><expr pos:start="23:25" pos:end="23:46"><name pos:start="23:25" pos:end="23:25">i</name> <operator pos:start="23:27" pos:end="23:27">&lt;</operator> <call pos:start="23:29" pos:end="23:46"><name pos:start="23:29" pos:end="23:44">CRYPTO_num_locks</name><argument_list pos:start="23:45" pos:end="23:46">()</argument_list></call></expr>;</condition> <incr pos:start="23:49" pos:end="23:51"><expr pos:start="23:49" pos:end="23:51"><name pos:start="23:49" pos:end="23:49">i</name><operator pos:start="23:50" pos:end="23:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:17" pos:end="25:62"><block_content pos:start="25:17" pos:end="25:62">

                <expr_stmt pos:start="25:17" pos:end="25:62"><expr pos:start="25:17" pos:end="25:61"><call pos:start="25:17" pos:end="25:61"><name pos:start="25:17" pos:end="25:34">pthread_mutex_init</name><argument_list pos:start="25:35" pos:end="25:61">(<argument pos:start="25:36" pos:end="25:54"><expr pos:start="25:36" pos:end="25:54"><operator pos:start="25:36" pos:end="25:36">&amp;</operator><name pos:start="25:37" pos:end="25:54"><name pos:start="25:37" pos:end="25:51">openssl_mutexes</name><index pos:start="25:52" pos:end="25:54">[<expr pos:start="25:53" pos:end="25:53"><name pos:start="25:53" pos:end="25:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="25:57" pos:end="25:60"><expr pos:start="25:57" pos:end="25:60"><name pos:start="25:57" pos:end="25:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="27:13" pos:end="30:0"><expr pos:start="27:13" pos:end="27:53"><call pos:start="27:13" pos:end="27:53"><name pos:start="27:13" pos:end="27:39">CRYPTO_set_locking_callback</name><argument_list pos:start="27:40" pos:end="27:53">(<argument pos:start="27:41" pos:end="27:52"><expr pos:start="27:41" pos:end="27:52"><name pos:start="27:41" pos:end="27:52">openssl_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="29:1" pos:end="29:58">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:58"><operator pos:start="29:5" pos:end="29:5">!</operator><call pos:start="29:6" pos:end="29:19"><name pos:start="29:6" pos:end="29:12">defined</name><argument_list pos:start="29:13" pos:end="29:19">(<argument pos:start="29:14" pos:end="29:18"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:18">WIN32</name></expr></argument>)</argument_list></call> <operator pos:start="29:21" pos:end="29:22">&amp;&amp;</operator> <name pos:start="29:24" pos:end="29:45">OPENSSL_VERSION_NUMBER</name> <operator pos:start="29:47" pos:end="29:47">&lt;</operator> <literal type="number" pos:start="29:49" pos:end="29:58">0x10000000</literal></expr></cpp:if>

            <expr_stmt pos:start="31:13" pos:end="34:0"><expr pos:start="31:13" pos:end="31:53"><call pos:start="31:13" pos:end="31:53"><name pos:start="31:13" pos:end="31:34">CRYPTO_set_id_callback</name><argument_list pos:start="31:35" pos:end="31:53">(<argument pos:start="31:36" pos:end="31:52"><expr pos:start="31:36" pos:end="31:52"><name pos:start="31:36" pos:end="31:52">openssl_thread_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="48:0"><expr pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:16">openssl_init</name><operator pos:start="41:17" pos:end="41:18">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="45:1" pos:end="45:17">#<cpp:directive pos:start="45:2" pos:end="45:3">if</cpp:directive> <expr pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:17">CONFIG_GNUTLS</name></expr></cpp:if>

<cpp:if pos:start="47:1" pos:end="47:52">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:16">HAVE_THREADS</name> <operator pos:start="47:18" pos:end="47:19">&amp;&amp;</operator> <name pos:start="47:21" pos:end="47:41">GNUTLS_VERSION_NUMBER</name> <operator pos:start="47:43" pos:end="47:43">&lt;</operator> <literal type="number" pos:start="47:45" pos:end="47:52">0x020b00</literal></expr></cpp:if>

    <if_stmt pos:start="49:5" pos:end="54:0"><if pos:start="49:5" pos:end="54:0">if <condition pos:start="49:8" pos:end="49:56">(<expr pos:start="49:9" pos:end="49:55"><call pos:start="49:9" pos:end="49:50"><name pos:start="49:9" pos:end="49:20">gcry_control</name><argument_list pos:start="49:21" pos:end="49:50">(<argument pos:start="49:22" pos:end="49:49"><expr pos:start="49:22" pos:end="49:49"><name pos:start="49:22" pos:end="49:49">GCRYCTL_ANY_INITIALIZATION_P</name></expr></argument>)</argument_list></call> <operator pos:start="49:52" pos:end="49:53">==</operator> <literal type="number" pos:start="49:55" pos:end="49:55">0</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="54:0"><block_content pos:start="51:9" pos:end="54:0">

        <expr_stmt pos:start="51:9" pos:end="54:0"><expr pos:start="51:9" pos:end="51:67"><call pos:start="51:9" pos:end="51:67"><name pos:start="51:9" pos:end="51:20">gcry_control</name><argument_list pos:start="51:21" pos:end="51:67">(<argument pos:start="51:22" pos:end="51:43"><expr pos:start="51:22" pos:end="51:43"><name pos:start="51:22" pos:end="51:43">GCRYCTL_SET_THREAD_CBS</name></expr></argument>, <argument pos:start="51:46" pos:end="51:66"><expr pos:start="51:46" pos:end="51:66"><operator pos:start="51:46" pos:end="51:46">&amp;</operator><name pos:start="51:47" pos:end="51:66">gcry_threads_pthread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="55:5" pos:end="58:0"><expr pos:start="55:5" pos:end="55:24"><call pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:22">gnutls_global_init</name><argument_list pos:start="55:23" pos:end="55:24">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><call pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:26">avpriv_unlock_avformat</name><argument_list pos:start="59:27" pos:end="59:28">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
