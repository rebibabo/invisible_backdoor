<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11860.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">ff_hevc_decode_nal_vps</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">HEVCContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:31">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>,<decl pos:start="5:11" pos:end="5:11"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:11" pos:end="5:11">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:38">= <expr pos:start="7:25" pos:end="7:38"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">HEVClc</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">vps_id</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">HEVCVPS</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">vps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:58"><decl pos:start="13:5" pos:end="13:57"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AVBufferRef</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:24">vps_buf</name> <init pos:start="13:26" pos:end="13:57">= <expr pos:start="13:28" pos:end="13:57"><call pos:start="13:28" pos:end="13:57"><name pos:start="13:28" pos:end="13:43">av_buffer_allocz</name><argument_list pos:start="13:44" pos:end="13:57">(<argument pos:start="13:45" pos:end="13:56"><expr pos:start="13:45" pos:end="13:56"><sizeof pos:start="13:45" pos:end="13:56">sizeof<argument_list pos:start="13:51" pos:end="13:56">(<argument pos:start="13:52" pos:end="13:55"><expr pos:start="13:52" pos:end="13:55"><operator pos:start="13:52" pos:end="13:52">*</operator><name pos:start="13:53" pos:end="13:55">vps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:16">vps_buf</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:7">vps</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <operator pos:start="21:11" pos:end="21:11">(</operator><name pos:start="21:12" pos:end="21:18">HEVCVPS</name><operator pos:start="21:19" pos:end="21:19">*</operator><operator pos:start="21:20" pos:end="21:20">)</operator><name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:27">vps_buf</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:33">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><call pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:10">av_log</name><argument_list pos:start="25:11" pos:end="25:52">(<argument pos:start="25:12" pos:end="25:19"><expr pos:start="25:12" pos:end="25:19"><name pos:start="25:12" pos:end="25:19"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:19">avctx</name></name></expr></argument>, <argument pos:start="25:22" pos:end="25:33"><expr pos:start="25:22" pos:end="25:33"><name pos:start="25:22" pos:end="25:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:36" pos:end="25:51"><expr pos:start="25:36" pos:end="25:51"><literal type="string" pos:start="25:36" pos:end="25:51">"Decoding VPS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:10">vps_id</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:21">get_bits</name><argument_list pos:start="29:22" pos:end="29:28">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">gb</name></expr></argument>, <argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><literal type="number" pos:start="29:27" pos:end="29:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:14">vps_id</name> <operator pos:start="31:16" pos:end="31:17">&gt;=</operator> <name pos:start="31:19" pos:end="31:31">MAX_VPS_COUNT</name></expr>)</condition> <block pos:start="31:34" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:17">

        <expr_stmt pos:start="33:9" pos:end="33:76"><expr pos:start="33:9" pos:end="33:75"><call pos:start="33:9" pos:end="33:75"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:75">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:40" pos:end="33:66"><expr pos:start="33:40" pos:end="33:66"><literal type="string" pos:start="33:40" pos:end="33:66">"VPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="33:69" pos:end="33:74"><expr pos:start="33:69" pos:end="33:74"><name pos:start="33:69" pos:end="33:74">vps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:29">(<expr pos:start="41:9" pos:end="41:28"><call pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:16">get_bits</name><argument_list pos:start="41:17" pos:end="41:23">(<argument pos:start="41:18" pos:end="41:19"><expr pos:start="41:18" pos:end="41:19"><name pos:start="41:18" pos:end="41:19">gb</name></expr></argument>, <argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">2</literal></expr></argument>)</argument_list></call> <operator pos:start="41:25" pos:end="41:26">!=</operator> <literal type="number" pos:start="41:28" pos:end="41:28">3</literal></expr>)</condition> <block pos:start="41:31" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:17"> <comment type="line" pos:start="41:33" pos:end="41:59">// vps_reserved_three_2bits</comment>

        <expr_stmt pos:start="43:9" pos:end="43:82"><expr pos:start="43:9" pos:end="43:81"><call pos:start="43:9" pos:end="43:81"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:81">(<argument pos:start="43:16" pos:end="43:23"><expr pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:23">avctx</name></name></expr></argument>, <argument pos:start="43:26" pos:end="43:37"><expr pos:start="43:26" pos:end="43:37"><name pos:start="43:26" pos:end="43:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:40" pos:end="43:80"><expr pos:start="43:40" pos:end="43:80"><literal type="string" pos:start="43:40" pos:end="43:80">"vps_reserved_three_2bits is not three\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:17">goto <name pos:start="45:14" pos:end="45:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:60"><expr pos:start="51:5" pos:end="51:59"><name pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:7">vps</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:23">vps_max_layers</name></name>               <operator pos:start="51:39" pos:end="51:39">=</operator> <call pos:start="51:41" pos:end="51:55"><name pos:start="51:41" pos:end="51:48">get_bits</name><argument_list pos:start="51:49" pos:end="51:55">(<argument pos:start="51:50" pos:end="51:51"><expr pos:start="51:50" pos:end="51:51"><name pos:start="51:50" pos:end="51:51">gb</name></expr></argument>, <argument pos:start="51:54" pos:end="51:54"><expr pos:start="51:54" pos:end="51:54"><literal type="number" pos:start="51:54" pos:end="51:54">6</literal></expr></argument>)</argument_list></call> <operator pos:start="51:57" pos:end="51:57">+</operator> <literal type="number" pos:start="51:59" pos:end="51:59">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:60"><expr pos:start="53:5" pos:end="53:59"><name pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:7">vps</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:27">vps_max_sub_layers</name></name>           <operator pos:start="53:39" pos:end="53:39">=</operator> <call pos:start="53:41" pos:end="53:55"><name pos:start="53:41" pos:end="53:48">get_bits</name><argument_list pos:start="53:49" pos:end="53:55">(<argument pos:start="53:50" pos:end="53:51"><expr pos:start="53:50" pos:end="53:51"><name pos:start="53:50" pos:end="53:51">gb</name></expr></argument>, <argument pos:start="53:54" pos:end="53:54"><expr pos:start="53:54" pos:end="53:54"><literal type="number" pos:start="53:54" pos:end="53:54">3</literal></expr></argument>)</argument_list></call> <operator pos:start="53:57" pos:end="53:57">+</operator> <literal type="number" pos:start="53:59" pos:end="53:59">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:54"><expr pos:start="55:5" pos:end="55:53"><name pos:start="55:5" pos:end="55:37"><name pos:start="55:5" pos:end="55:7">vps</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:37">vps_temporal_id_nesting_flag</name></name> <operator pos:start="55:39" pos:end="55:39">=</operator> <call pos:start="55:41" pos:end="55:53"><name pos:start="55:41" pos:end="55:49">get_bits1</name><argument_list pos:start="55:50" pos:end="55:53">(<argument pos:start="55:51" pos:end="55:52"><expr pos:start="55:51" pos:end="55:52"><name pos:start="55:51" pos:end="55:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:35">(<expr pos:start="59:9" pos:end="59:34"><call pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:16">get_bits</name><argument_list pos:start="59:17" pos:end="59:24">(<argument pos:start="59:18" pos:end="59:19"><expr pos:start="59:18" pos:end="59:19"><name pos:start="59:18" pos:end="59:19">gb</name></expr></argument>, <argument pos:start="59:22" pos:end="59:23"><expr pos:start="59:22" pos:end="59:23"><literal type="number" pos:start="59:22" pos:end="59:23">16</literal></expr></argument>)</argument_list></call> <operator pos:start="59:26" pos:end="59:27">!=</operator> <literal type="number" pos:start="59:29" pos:end="59:34">0xffff</literal></expr>)</condition> <block pos:start="59:37" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:17"> <comment type="line" pos:start="59:39" pos:end="59:65">// vps_reserved_ffff_16bits</comment>

        <expr_stmt pos:start="61:9" pos:end="61:83"><expr pos:start="61:9" pos:end="61:82"><call pos:start="61:9" pos:end="61:82"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:82">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">avctx</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:37"><expr pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:40" pos:end="61:81"><expr pos:start="61:40" pos:end="61:81"><literal type="string" pos:start="61:40" pos:end="61:81">"vps_reserved_ffff_16bits is not 0xffff\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:49">(<expr pos:start="69:9" pos:end="69:48"><name pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:11">vps</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:31">vps_max_sub_layers</name></name> <operator pos:start="69:33" pos:end="69:33">&gt;</operator> <name pos:start="69:35" pos:end="69:48">MAX_SUB_LAYERS</name></expr>)</condition> <block pos:start="69:51" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:17">

        <expr_stmt pos:start="71:9" pos:end="73:40"><expr pos:start="71:9" pos:end="73:39"><call pos:start="71:9" pos:end="73:39"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="73:39">(<argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">avctx</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:40" pos:end="71:78"><expr pos:start="71:40" pos:end="71:78"><literal type="string" pos:start="71:40" pos:end="71:78">"vps_max_sub_layers out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="73:16" pos:end="73:38"><expr pos:start="73:16" pos:end="73:38"><name pos:start="73:16" pos:end="73:38"><name pos:start="73:16" pos:end="73:18">vps</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:38">vps_max_sub_layers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:17">goto <name pos:start="75:14" pos:end="75:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="83:17"><if pos:start="81:5" pos:end="83:17">if <condition pos:start="81:8" pos:end="81:61">(<expr pos:start="81:9" pos:end="81:60"><call pos:start="81:9" pos:end="81:56"><name pos:start="81:9" pos:end="81:17">parse_ptl</name><argument_list pos:start="81:18" pos:end="81:56">(<argument pos:start="81:19" pos:end="81:19"><expr pos:start="81:19" pos:end="81:19"><name pos:start="81:19" pos:end="81:19">s</name></expr></argument>, <argument pos:start="81:22" pos:end="81:30"><expr pos:start="81:22" pos:end="81:30"><operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:30"><name pos:start="81:23" pos:end="81:25">vps</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:30">ptl</name></name></expr></argument>, <argument pos:start="81:33" pos:end="81:55"><expr pos:start="81:33" pos:end="81:55"><name pos:start="81:33" pos:end="81:55"><name pos:start="81:33" pos:end="81:35">vps</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:55">vps_max_sub_layers</name></name></expr></argument>)</argument_list></call> <operator pos:start="81:58" pos:end="81:58">&lt;</operator> <literal type="number" pos:start="81:60" pos:end="81:60">0</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:17"><block_content pos:start="83:9" pos:end="83:17">

        <goto pos:start="83:9" pos:end="83:17">goto <name pos:start="83:14" pos:end="83:16">err</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:66"><expr pos:start="87:5" pos:end="87:65"><name pos:start="87:5" pos:end="87:49"><name pos:start="87:5" pos:end="87:7">vps</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:49">vps_sub_layer_ordering_info_present_flag</name></name> <operator pos:start="87:51" pos:end="87:51">=</operator> <call pos:start="87:53" pos:end="87:65"><name pos:start="87:53" pos:end="87:61">get_bits1</name><argument_list pos:start="87:62" pos:end="87:65">(<argument pos:start="87:63" pos:end="87:64"><expr pos:start="87:63" pos:end="87:64"><name pos:start="87:63" pos:end="87:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:88"><expr pos:start="91:5" pos:end="91:87"><name pos:start="91:5" pos:end="91:5">i</name> <operator pos:start="91:7" pos:end="91:7">=</operator> <ternary pos:start="91:9" pos:end="91:87"><condition pos:start="91:9" pos:end="91:55"><expr pos:start="91:9" pos:end="91:53"><name pos:start="91:9" pos:end="91:53"><name pos:start="91:9" pos:end="91:11">vps</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:53">vps_sub_layer_ordering_info_present_flag</name></name></expr> ?</condition><then pos:start="91:57" pos:end="91:57"> <expr pos:start="91:57" pos:end="91:57"><literal type="number" pos:start="91:57" pos:end="91:57">0</literal></expr> </then><else pos:start="91:59" pos:end="91:87">: <expr pos:start="91:61" pos:end="91:87"><name pos:start="91:61" pos:end="91:83"><name pos:start="91:61" pos:end="91:63">vps</name><operator pos:start="91:64" pos:end="91:65">-&gt;</operator><name pos:start="91:66" pos:end="91:83">vps_max_sub_layers</name></name> <operator pos:start="91:85" pos:end="91:85">-</operator> <literal type="number" pos:start="91:87" pos:end="91:87">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="93:5" pos:end="125:5">for <control pos:start="93:9" pos:end="93:44">(<init pos:start="93:10" pos:end="93:10">;</init> <condition pos:start="93:12" pos:end="93:39"><expr pos:start="93:12" pos:end="93:38"><name pos:start="93:12" pos:end="93:12">i</name> <operator pos:start="93:14" pos:end="93:14">&lt;</operator> <name pos:start="93:16" pos:end="93:38"><name pos:start="93:16" pos:end="93:18">vps</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:38">vps_max_sub_layers</name></name></expr>;</condition> <incr pos:start="93:41" pos:end="93:43"><expr pos:start="93:41" pos:end="93:43"><name pos:start="93:41" pos:end="93:41">i</name><operator pos:start="93:42" pos:end="93:43">++</operator></expr></incr>)</control> <block pos:start="93:46" pos:end="125:5">{<block_content pos:start="95:9" pos:end="123:9">

        <expr_stmt pos:start="95:9" pos:end="95:71"><expr pos:start="95:9" pos:end="95:70"><name pos:start="95:9" pos:end="95:41"><name pos:start="95:9" pos:end="95:11">vps</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:38">vps_max_dec_pic_buffering</name><index pos:start="95:39" pos:end="95:41">[<expr pos:start="95:40" pos:end="95:40"><name pos:start="95:40" pos:end="95:40">i</name></expr>]</index></name> <operator pos:start="95:43" pos:end="95:43">=</operator> <call pos:start="95:45" pos:end="95:66"><name pos:start="95:45" pos:end="95:62">get_ue_golomb_long</name><argument_list pos:start="95:63" pos:end="95:66">(<argument pos:start="95:64" pos:end="95:65"><expr pos:start="95:64" pos:end="95:65"><name pos:start="95:64" pos:end="95:65">gb</name></expr></argument>)</argument_list></call> <operator pos:start="95:68" pos:end="95:68">+</operator> <literal type="number" pos:start="95:70" pos:end="95:70">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:67"><expr pos:start="97:9" pos:end="97:66"><name pos:start="97:9" pos:end="97:36"><name pos:start="97:9" pos:end="97:11">vps</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:33">vps_num_reorder_pics</name><index pos:start="97:34" pos:end="97:36">[<expr pos:start="97:35" pos:end="97:35"><name pos:start="97:35" pos:end="97:35">i</name></expr>]</index></name>      <operator pos:start="97:43" pos:end="97:43">=</operator> <call pos:start="97:45" pos:end="97:66"><name pos:start="97:45" pos:end="97:62">get_ue_golomb_long</name><argument_list pos:start="97:63" pos:end="97:66">(<argument pos:start="97:64" pos:end="97:65"><expr pos:start="97:64" pos:end="97:65"><name pos:start="97:64" pos:end="97:65">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:71"><expr pos:start="99:9" pos:end="99:70"><name pos:start="99:9" pos:end="99:40"><name pos:start="99:9" pos:end="99:11">vps</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:37">vps_max_latency_increase</name><index pos:start="99:38" pos:end="99:40">[<expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">i</name></expr>]</index></name>  <operator pos:start="99:43" pos:end="99:43">=</operator> <call pos:start="99:45" pos:end="99:66"><name pos:start="99:45" pos:end="99:62">get_ue_golomb_long</name><argument_list pos:start="99:63" pos:end="99:66">(<argument pos:start="99:64" pos:end="99:65"><expr pos:start="99:64" pos:end="99:65"><name pos:start="99:64" pos:end="99:65">gb</name></expr></argument>)</argument_list></call> <operator pos:start="99:68" pos:end="99:68">-</operator> <literal type="number" pos:start="99:70" pos:end="99:70">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="111:9"><if pos:start="103:9" pos:end="111:9">if <condition pos:start="103:12" pos:end="103:99">(<expr pos:start="103:13" pos:end="103:98"><name pos:start="103:13" pos:end="103:45"><name pos:start="103:13" pos:end="103:15">vps</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:42">vps_max_dec_pic_buffering</name><index pos:start="103:43" pos:end="103:45">[<expr pos:start="103:44" pos:end="103:44"><name pos:start="103:44" pos:end="103:44">i</name></expr>]</index></name> <operator pos:start="103:47" pos:end="103:47">&gt;</operator> <name pos:start="103:49" pos:end="103:60">MAX_DPB_SIZE</name> <operator pos:start="103:62" pos:end="103:63">||</operator> <operator pos:start="103:65" pos:end="103:65">!</operator><name pos:start="103:66" pos:end="103:98"><name pos:start="103:66" pos:end="103:68">vps</name><operator pos:start="103:69" pos:end="103:70">-&gt;</operator><name pos:start="103:71" pos:end="103:95">vps_max_dec_pic_buffering</name><index pos:start="103:96" pos:end="103:98">[<expr pos:start="103:97" pos:end="103:97"><name pos:start="103:97" pos:end="103:97">i</name></expr>]</index></name></expr>)</condition> <block pos:start="103:101" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:21">

            <expr_stmt pos:start="105:13" pos:end="107:58"><expr pos:start="105:13" pos:end="107:57"><call pos:start="105:13" pos:end="107:57"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="107:57">(<argument pos:start="105:20" pos:end="105:27"><expr pos:start="105:20" pos:end="105:27"><name pos:start="105:20" pos:end="105:27"><name pos:start="105:20" pos:end="105:20">s</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:27">avctx</name></name></expr></argument>, <argument pos:start="105:30" pos:end="105:41"><expr pos:start="105:30" pos:end="105:41"><name pos:start="105:30" pos:end="105:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:44" pos:end="105:96"><expr pos:start="105:44" pos:end="105:96"><literal type="string" pos:start="105:44" pos:end="105:96">"vps_max_dec_pic_buffering_minus1 out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="107:20" pos:end="107:56"><expr pos:start="107:20" pos:end="107:56"><name pos:start="107:20" pos:end="107:52"><name pos:start="107:20" pos:end="107:22">vps</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:49">vps_max_dec_pic_buffering</name><index pos:start="107:50" pos:end="107:52">[<expr pos:start="107:51" pos:end="107:51"><name pos:start="107:51" pos:end="107:51">i</name></expr>]</index></name> <operator pos:start="107:54" pos:end="107:54">-</operator> <literal type="number" pos:start="107:56" pos:end="107:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="109:13" pos:end="109:21">goto <name pos:start="109:18" pos:end="109:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="113:9" pos:end="123:9"><if pos:start="113:9" pos:end="123:9">if <condition pos:start="113:12" pos:end="113:81">(<expr pos:start="113:13" pos:end="113:80"><name pos:start="113:13" pos:end="113:40"><name pos:start="113:13" pos:end="113:15">vps</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:37">vps_num_reorder_pics</name><index pos:start="113:38" pos:end="113:40">[<expr pos:start="113:39" pos:end="113:39"><name pos:start="113:39" pos:end="113:39">i</name></expr>]</index></name> <operator pos:start="113:42" pos:end="113:42">&gt;</operator> <name pos:start="113:44" pos:end="113:76"><name pos:start="113:44" pos:end="113:46">vps</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:73">vps_max_dec_pic_buffering</name><index pos:start="113:74" pos:end="113:76">[<expr pos:start="113:75" pos:end="113:75"><name pos:start="113:75" pos:end="113:75">i</name></expr>]</index></name> <operator pos:start="113:78" pos:end="113:78">-</operator> <literal type="number" pos:start="113:80" pos:end="113:80">1</literal></expr>)</condition> <block pos:start="113:83" pos:end="123:9">{<block_content pos:start="115:13" pos:end="121:25">

            <expr_stmt pos:start="115:13" pos:end="117:49"><expr pos:start="115:13" pos:end="117:48"><call pos:start="115:13" pos:end="117:48"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="117:48">(<argument pos:start="115:20" pos:end="115:27"><expr pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:20">s</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:27">avctx</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:43"><expr pos:start="115:30" pos:end="115:43"><name pos:start="115:30" pos:end="115:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="115:46" pos:end="115:90"><expr pos:start="115:46" pos:end="115:90"><literal type="string" pos:start="115:46" pos:end="115:90">"vps_max_num_reorder_pics out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="117:20" pos:end="117:47"><expr pos:start="117:20" pos:end="117:47"><name pos:start="117:20" pos:end="117:47"><name pos:start="117:20" pos:end="117:22">vps</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:44">vps_num_reorder_pics</name><index pos:start="117:45" pos:end="117:47">[<expr pos:start="117:46" pos:end="117:46"><name pos:start="117:46" pos:end="117:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="121:25"><if pos:start="119:13" pos:end="121:25">if <condition pos:start="119:16" pos:end="119:58">(<expr pos:start="119:17" pos:end="119:57"><name pos:start="119:17" pos:end="119:41"><name pos:start="119:17" pos:end="119:17">s</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:24">avctx</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:41">err_recognition</name></name> <operator pos:start="119:43" pos:end="119:43">&amp;</operator> <name pos:start="119:45" pos:end="119:57">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:25"><block_content pos:start="121:17" pos:end="121:25">

                <goto pos:start="121:17" pos:end="121:25">goto <name pos:start="121:22" pos:end="121:24">err</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="129:5" pos:end="129:46"><expr pos:start="129:5" pos:end="129:45"><name pos:start="129:5" pos:end="129:25"><name pos:start="129:5" pos:end="129:7">vps</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:25">vps_max_layer_id</name></name>   <operator pos:start="129:29" pos:end="129:29">=</operator> <call pos:start="129:31" pos:end="129:45"><name pos:start="129:31" pos:end="129:38">get_bits</name><argument_list pos:start="129:39" pos:end="129:45">(<argument pos:start="129:40" pos:end="129:41"><expr pos:start="129:40" pos:end="129:41"><name pos:start="129:40" pos:end="129:41">gb</name></expr></argument>, <argument pos:start="129:44" pos:end="129:44"><expr pos:start="129:44" pos:end="129:44"><literal type="number" pos:start="129:44" pos:end="129:44">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:57"><expr pos:start="131:5" pos:end="131:56"><name pos:start="131:5" pos:end="131:27"><name pos:start="131:5" pos:end="131:7">vps</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:27">vps_num_layer_sets</name></name> <operator pos:start="131:29" pos:end="131:29">=</operator> <call pos:start="131:31" pos:end="131:52"><name pos:start="131:31" pos:end="131:48">get_ue_golomb_long</name><argument_list pos:start="131:49" pos:end="131:52">(<argument pos:start="131:50" pos:end="131:51"><expr pos:start="131:50" pos:end="131:51"><name pos:start="131:50" pos:end="131:51">gb</name></expr></argument>)</argument_list></call> <operator pos:start="131:54" pos:end="131:54">+</operator> <literal type="number" pos:start="131:56" pos:end="131:56">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="141:5"><if pos:start="133:5" pos:end="141:5">if <condition pos:start="133:8" pos:end="135:92">(<expr pos:start="133:9" pos:end="135:91"><name pos:start="133:9" pos:end="133:31"><name pos:start="133:9" pos:end="133:11">vps</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:31">vps_num_layer_sets</name></name> <operator pos:start="133:33" pos:end="133:33">&lt;</operator> <literal type="number" pos:start="133:35" pos:end="133:35">1</literal> <operator pos:start="133:37" pos:end="133:38">||</operator> <name pos:start="133:40" pos:end="133:62"><name pos:start="133:40" pos:end="133:42">vps</name><operator pos:start="133:43" pos:end="133:44">-&gt;</operator><name pos:start="133:45" pos:end="133:62">vps_num_layer_sets</name></name> <operator pos:start="133:64" pos:end="133:64">&gt;</operator> <literal type="number" pos:start="133:66" pos:end="133:69">1024</literal> <operator pos:start="133:71" pos:end="133:72">||</operator>

        <operator pos:start="135:9" pos:end="135:9">(</operator><name pos:start="135:10" pos:end="135:32"><name pos:start="135:10" pos:end="135:12">vps</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:32">vps_num_layer_sets</name></name> <operator pos:start="135:34" pos:end="135:34">-</operator> <literal type="number" pos:start="135:36" pos:end="135:38">1LL</literal><operator pos:start="135:39" pos:end="135:39">)</operator> <operator pos:start="135:41" pos:end="135:41">*</operator> <operator pos:start="135:43" pos:end="135:43">(</operator><name pos:start="135:44" pos:end="135:64"><name pos:start="135:44" pos:end="135:46">vps</name><operator pos:start="135:47" pos:end="135:48">-&gt;</operator><name pos:start="135:49" pos:end="135:64">vps_max_layer_id</name></name> <operator pos:start="135:66" pos:end="135:66">+</operator> <literal type="number" pos:start="135:68" pos:end="135:70">1LL</literal><operator pos:start="135:71" pos:end="135:71">)</operator> <operator pos:start="135:73" pos:end="135:73">&gt;</operator> <call pos:start="135:75" pos:end="135:91"><name pos:start="135:75" pos:end="135:87">get_bits_left</name><argument_list pos:start="135:88" pos:end="135:91">(<argument pos:start="135:89" pos:end="135:90"><expr pos:start="135:89" pos:end="135:90"><name pos:start="135:89" pos:end="135:90">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:94" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:17">

        <expr_stmt pos:start="137:9" pos:end="137:77"><expr pos:start="137:9" pos:end="137:76"><call pos:start="137:9" pos:end="137:76"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="137:76">(<argument pos:start="137:16" pos:end="137:23"><expr pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:16">s</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:23">avctx</name></name></expr></argument>, <argument pos:start="137:26" pos:end="137:37"><expr pos:start="137:26" pos:end="137:37"><name pos:start="137:26" pos:end="137:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:40" pos:end="137:75"><expr pos:start="137:40" pos:end="137:75"><literal type="string" pos:start="137:40" pos:end="137:75">"too many layer_id_included_flags\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="139:9" pos:end="139:17">goto <name pos:start="139:14" pos:end="139:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="145:5" pos:end="149:29">for <control pos:start="145:9" pos:end="145:49">(<init pos:start="145:10" pos:end="145:15"><expr pos:start="145:10" pos:end="145:14"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">1</literal></expr>;</init> <condition pos:start="145:17" pos:end="145:44"><expr pos:start="145:17" pos:end="145:43"><name pos:start="145:17" pos:end="145:17">i</name> <operator pos:start="145:19" pos:end="145:19">&lt;</operator> <name pos:start="145:21" pos:end="145:43"><name pos:start="145:21" pos:end="145:23">vps</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:43">vps_num_layer_sets</name></name></expr>;</condition> <incr pos:start="145:46" pos:end="145:48"><expr pos:start="145:46" pos:end="145:48"><name pos:start="145:46" pos:end="145:46">i</name><operator pos:start="145:47" pos:end="145:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:9" pos:end="149:29"><block_content pos:start="147:9" pos:end="149:29">

        <for pos:start="147:9" pos:end="149:29">for <control pos:start="147:13" pos:end="147:52">(<init pos:start="147:14" pos:end="147:19"><expr pos:start="147:14" pos:end="147:18"><name pos:start="147:14" pos:end="147:14">j</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <literal type="number" pos:start="147:18" pos:end="147:18">0</literal></expr>;</init> <condition pos:start="147:21" pos:end="147:47"><expr pos:start="147:21" pos:end="147:46"><name pos:start="147:21" pos:end="147:21">j</name> <operator pos:start="147:23" pos:end="147:24">&lt;=</operator> <name pos:start="147:26" pos:end="147:46"><name pos:start="147:26" pos:end="147:28">vps</name><operator pos:start="147:29" pos:end="147:30">-&gt;</operator><name pos:start="147:31" pos:end="147:46">vps_max_layer_id</name></name></expr>;</condition> <incr pos:start="147:49" pos:end="147:51"><expr pos:start="147:49" pos:end="147:51"><name pos:start="147:49" pos:end="147:49">j</name><operator pos:start="147:50" pos:end="147:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="149:13" pos:end="149:29"><block_content pos:start="149:13" pos:end="149:29">

            <expr_stmt pos:start="149:13" pos:end="149:29"><expr pos:start="149:13" pos:end="149:28"><call pos:start="149:13" pos:end="149:28"><name pos:start="149:13" pos:end="149:21">skip_bits</name><argument_list pos:start="149:22" pos:end="149:28">(<argument pos:start="149:23" pos:end="149:24"><expr pos:start="149:23" pos:end="149:24"><name pos:start="149:23" pos:end="149:24">gb</name></expr></argument>, <argument pos:start="149:27" pos:end="149:27"><expr pos:start="149:27" pos:end="149:27"><literal type="number" pos:start="149:27" pos:end="149:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>  <comment type="line" pos:start="149:32" pos:end="149:62">// layer_id_included_flag[i][j]</comment>



    <expr_stmt pos:start="153:5" pos:end="153:54"><expr pos:start="153:5" pos:end="153:53"><name pos:start="153:5" pos:end="153:37"><name pos:start="153:5" pos:end="153:7">vps</name><operator pos:start="153:8" pos:end="153:9">-&gt;</operator><name pos:start="153:10" pos:end="153:37">vps_timing_info_present_flag</name></name> <operator pos:start="153:39" pos:end="153:39">=</operator> <call pos:start="153:41" pos:end="153:53"><name pos:start="153:41" pos:end="153:49">get_bits1</name><argument_list pos:start="153:50" pos:end="153:53">(<argument pos:start="153:51" pos:end="153:52"><expr pos:start="153:51" pos:end="153:52"><name pos:start="153:51" pos:end="153:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="195:5"><if pos:start="155:5" pos:end="195:5">if <condition pos:start="155:8" pos:end="155:42">(<expr pos:start="155:9" pos:end="155:41"><name pos:start="155:9" pos:end="155:41"><name pos:start="155:9" pos:end="155:11">vps</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:41">vps_timing_info_present_flag</name></name></expr>)</condition> <block pos:start="155:44" pos:end="195:5">{<block_content pos:start="157:9" pos:end="193:9">

        <expr_stmt pos:start="157:9" pos:end="157:73"><expr pos:start="157:9" pos:end="157:72"><name pos:start="157:9" pos:end="157:34"><name pos:start="157:9" pos:end="157:11">vps</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:34">vps_num_units_in_tick</name></name>               <operator pos:start="157:50" pos:end="157:50">=</operator> <call pos:start="157:52" pos:end="157:72"><name pos:start="157:52" pos:end="157:64">get_bits_long</name><argument_list pos:start="157:65" pos:end="157:72">(<argument pos:start="157:66" pos:end="157:67"><expr pos:start="157:66" pos:end="157:67"><name pos:start="157:66" pos:end="157:67">gb</name></expr></argument>, <argument pos:start="157:70" pos:end="157:71"><expr pos:start="157:70" pos:end="157:71"><literal type="number" pos:start="157:70" pos:end="157:71">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:73"><expr pos:start="159:9" pos:end="159:72"><name pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:11">vps</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:27">vps_time_scale</name></name>                      <operator pos:start="159:50" pos:end="159:50">=</operator> <call pos:start="159:52" pos:end="159:72"><name pos:start="159:52" pos:end="159:64">get_bits_long</name><argument_list pos:start="159:65" pos:end="159:72">(<argument pos:start="159:66" pos:end="159:67"><expr pos:start="159:66" pos:end="159:67"><name pos:start="159:66" pos:end="159:67">gb</name></expr></argument>, <argument pos:start="159:70" pos:end="159:71"><expr pos:start="159:70" pos:end="159:71"><literal type="number" pos:start="159:70" pos:end="159:71">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:65"><expr pos:start="161:9" pos:end="161:64"><name pos:start="161:9" pos:end="161:48"><name pos:start="161:9" pos:end="161:11">vps</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:48">vps_poc_proportional_to_timing_flag</name></name> <operator pos:start="161:50" pos:end="161:50">=</operator> <call pos:start="161:52" pos:end="161:64"><name pos:start="161:52" pos:end="161:60">get_bits1</name><argument_list pos:start="161:61" pos:end="161:64">(<argument pos:start="161:62" pos:end="161:63"><expr pos:start="161:62" pos:end="161:63"><name pos:start="161:62" pos:end="161:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="163:9" pos:end="165:73"><if pos:start="163:9" pos:end="165:73">if <condition pos:start="163:12" pos:end="163:53">(<expr pos:start="163:13" pos:end="163:52"><name pos:start="163:13" pos:end="163:52"><name pos:start="163:13" pos:end="163:15">vps</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:52">vps_poc_proportional_to_timing_flag</name></name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:73"><block_content pos:start="165:13" pos:end="165:73">

            <expr_stmt pos:start="165:13" pos:end="165:73"><expr pos:start="165:13" pos:end="165:72"><name pos:start="165:13" pos:end="165:43"><name pos:start="165:13" pos:end="165:15">vps</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:43">vps_num_ticks_poc_diff_one</name></name> <operator pos:start="165:45" pos:end="165:45">=</operator> <call pos:start="165:47" pos:end="165:68"><name pos:start="165:47" pos:end="165:64">get_ue_golomb_long</name><argument_list pos:start="165:65" pos:end="165:68">(<argument pos:start="165:66" pos:end="165:67"><expr pos:start="165:66" pos:end="165:67"><name pos:start="165:66" pos:end="165:67">gb</name></expr></argument>)</argument_list></call> <operator pos:start="165:70" pos:end="165:70">+</operator> <literal type="number" pos:start="165:72" pos:end="165:72">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:61"><expr pos:start="167:9" pos:end="167:60"><name pos:start="167:9" pos:end="167:35"><name pos:start="167:9" pos:end="167:11">vps</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:35">vps_num_hrd_parameters</name></name> <operator pos:start="167:37" pos:end="167:37">=</operator> <call pos:start="167:39" pos:end="167:60"><name pos:start="167:39" pos:end="167:56">get_ue_golomb_long</name><argument_list pos:start="167:57" pos:end="167:60">(<argument pos:start="167:58" pos:end="167:59"><expr pos:start="167:58" pos:end="167:59"><name pos:start="167:58" pos:end="167:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="177:9"><if pos:start="169:9" pos:end="177:9">if <condition pos:start="169:12" pos:end="169:76">(<expr pos:start="169:13" pos:end="169:75"><name pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:15">vps</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:39">vps_num_hrd_parameters</name></name> <operator pos:start="169:41" pos:end="169:41">&gt;</operator> <operator pos:start="169:43" pos:end="169:43">(</operator><name pos:start="169:44" pos:end="169:51">unsigned</name><operator pos:start="169:52" pos:end="169:52">)</operator><name pos:start="169:53" pos:end="169:75"><name pos:start="169:53" pos:end="169:55">vps</name><operator pos:start="169:56" pos:end="169:57">-&gt;</operator><name pos:start="169:58" pos:end="169:75">vps_num_layer_sets</name></name></expr>)</condition> <block pos:start="169:78" pos:end="177:9">{<block_content pos:start="171:13" pos:end="175:21">

            <expr_stmt pos:start="171:13" pos:end="173:90"><expr pos:start="171:13" pos:end="173:89"><call pos:start="171:13" pos:end="173:89"><name pos:start="171:13" pos:end="171:18">av_log</name><argument_list pos:start="171:19" pos:end="173:89">(<argument pos:start="171:20" pos:end="171:27"><expr pos:start="171:20" pos:end="171:27"><name pos:start="171:20" pos:end="171:27"><name pos:start="171:20" pos:end="171:20">s</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:27">avctx</name></name></expr></argument>, <argument pos:start="171:30" pos:end="171:41"><expr pos:start="171:30" pos:end="171:41"><name pos:start="171:30" pos:end="171:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="173:20" pos:end="173:59"><expr pos:start="173:20" pos:end="173:59"><literal type="string" pos:start="173:20" pos:end="173:59">"vps_num_hrd_parameters %d is invalid\n"</literal></expr></argument>, <argument pos:start="173:62" pos:end="173:88"><expr pos:start="173:62" pos:end="173:88"><name pos:start="173:62" pos:end="173:88"><name pos:start="173:62" pos:end="173:64">vps</name><operator pos:start="173:65" pos:end="173:66">-&gt;</operator><name pos:start="173:67" pos:end="173:88">vps_num_hrd_parameters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="175:13" pos:end="175:21">goto <name pos:start="175:18" pos:end="175:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <for pos:start="179:9" pos:end="193:9">for <control pos:start="179:13" pos:end="179:57">(<init pos:start="179:14" pos:end="179:19"><expr pos:start="179:14" pos:end="179:18"><name pos:start="179:14" pos:end="179:14">i</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <literal type="number" pos:start="179:18" pos:end="179:18">0</literal></expr>;</init> <condition pos:start="179:21" pos:end="179:52"><expr pos:start="179:21" pos:end="179:51"><name pos:start="179:21" pos:end="179:21">i</name> <operator pos:start="179:23" pos:end="179:23">&lt;</operator> <name pos:start="179:25" pos:end="179:51"><name pos:start="179:25" pos:end="179:27">vps</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:51">vps_num_hrd_parameters</name></name></expr>;</condition> <incr pos:start="179:54" pos:end="179:56"><expr pos:start="179:54" pos:end="179:56"><name pos:start="179:54" pos:end="179:54">i</name><operator pos:start="179:55" pos:end="179:56">++</operator></expr></incr>)</control> <block pos:start="179:59" pos:end="193:9">{<block_content pos:start="181:13" pos:end="191:71">

            <decl_stmt pos:start="181:13" pos:end="181:39"><decl pos:start="181:13" pos:end="181:38"><type pos:start="181:13" pos:end="181:15"><name pos:start="181:13" pos:end="181:15">int</name></type> <name pos:start="181:17" pos:end="181:34">common_inf_present</name> <init pos:start="181:36" pos:end="181:38">= <expr pos:start="181:38" pos:end="181:38"><literal type="number" pos:start="181:38" pos:end="181:38">1</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="185:13" pos:end="185:35"><expr pos:start="185:13" pos:end="185:34"><call pos:start="185:13" pos:end="185:34"><name pos:start="185:13" pos:end="185:30">get_ue_golomb_long</name><argument_list pos:start="185:31" pos:end="185:34">(<argument pos:start="185:32" pos:end="185:33"><expr pos:start="185:32" pos:end="185:33"><name pos:start="185:32" pos:end="185:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="185:37" pos:end="185:56">// hrd_layer_set_idx</comment>

            <if_stmt pos:start="187:13" pos:end="189:51"><if pos:start="187:13" pos:end="189:51">if <condition pos:start="187:16" pos:end="187:18">(<expr pos:start="187:17" pos:end="187:17"><name pos:start="187:17" pos:end="187:17">i</name></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:51"><block_content pos:start="189:17" pos:end="189:51">

                <expr_stmt pos:start="189:17" pos:end="189:51"><expr pos:start="189:17" pos:end="189:50"><name pos:start="189:17" pos:end="189:34">common_inf_present</name> <operator pos:start="189:36" pos:end="189:36">=</operator> <call pos:start="189:38" pos:end="189:50"><name pos:start="189:38" pos:end="189:46">get_bits1</name><argument_list pos:start="189:47" pos:end="189:50">(<argument pos:start="189:48" pos:end="189:49"><expr pos:start="189:48" pos:end="189:49"><name pos:start="189:48" pos:end="189:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:71"><expr pos:start="191:13" pos:end="191:70"><call pos:start="191:13" pos:end="191:70"><name pos:start="191:13" pos:end="191:22">decode_hrd</name><argument_list pos:start="191:23" pos:end="191:70">(<argument pos:start="191:24" pos:end="191:24"><expr pos:start="191:24" pos:end="191:24"><name pos:start="191:24" pos:end="191:24">s</name></expr></argument>, <argument pos:start="191:27" pos:end="191:44"><expr pos:start="191:27" pos:end="191:44"><name pos:start="191:27" pos:end="191:44">common_inf_present</name></expr></argument>, <argument pos:start="191:47" pos:end="191:69"><expr pos:start="191:47" pos:end="191:69"><name pos:start="191:47" pos:end="191:69"><name pos:start="191:47" pos:end="191:49">vps</name><operator pos:start="191:50" pos:end="191:51">-&gt;</operator><name pos:start="191:52" pos:end="191:69">vps_max_sub_layers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:18"><expr pos:start="197:5" pos:end="197:17"><call pos:start="197:5" pos:end="197:17"><name pos:start="197:5" pos:end="197:13">get_bits1</name><argument_list pos:start="197:14" pos:end="197:17">(<argument pos:start="197:15" pos:end="197:16"><expr pos:start="197:15" pos:end="197:16"><name pos:start="197:15" pos:end="197:16">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="197:20" pos:end="197:43">/* vps_extension_flag */</comment>



    <if_stmt pos:start="201:5" pos:end="209:5"><if pos:start="201:5" pos:end="209:5">if <condition pos:start="201:8" pos:end="201:30">(<expr pos:start="201:9" pos:end="201:29"><call pos:start="201:9" pos:end="201:25"><name pos:start="201:9" pos:end="201:21">get_bits_left</name><argument_list pos:start="201:22" pos:end="201:25">(<argument pos:start="201:23" pos:end="201:24"><expr pos:start="201:23" pos:end="201:24"><name pos:start="201:23" pos:end="201:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="201:27" pos:end="201:27">&lt;</operator> <literal type="number" pos:start="201:29" pos:end="201:29">0</literal></expr>)</condition> <block pos:start="201:32" pos:end="209:5">{<block_content pos:start="203:9" pos:end="207:17">

        <expr_stmt pos:start="203:9" pos:end="205:64"><expr pos:start="203:9" pos:end="205:63"><call pos:start="203:9" pos:end="205:63"><name pos:start="203:9" pos:end="203:14">av_log</name><argument_list pos:start="203:15" pos:end="205:63">(<argument pos:start="203:16" pos:end="203:23"><expr pos:start="203:16" pos:end="203:23"><name pos:start="203:16" pos:end="203:23"><name pos:start="203:16" pos:end="203:16">s</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:23">avctx</name></name></expr></argument>, <argument pos:start="203:26" pos:end="203:37"><expr pos:start="203:26" pos:end="203:37"><name pos:start="203:26" pos:end="203:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="205:16" pos:end="205:42"><expr pos:start="205:16" pos:end="205:42"><literal type="string" pos:start="205:16" pos:end="205:42">"Overread VPS by %d bits\n"</literal></expr></argument>, <argument pos:start="205:45" pos:end="205:62"><expr pos:start="205:45" pos:end="205:62"><operator pos:start="205:45" pos:end="205:45">-</operator><call pos:start="205:46" pos:end="205:62"><name pos:start="205:46" pos:end="205:58">get_bits_left</name><argument_list pos:start="205:59" pos:end="205:62">(<argument pos:start="205:60" pos:end="205:61"><expr pos:start="205:60" pos:end="205:61"><name pos:start="205:60" pos:end="205:61">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="207:9" pos:end="207:17">goto <name pos:start="207:14" pos:end="207:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="213:5" pos:end="225:5"><if pos:start="213:5" pos:end="219:5">if <condition pos:start="213:8" pos:end="215:73">(<expr pos:start="213:9" pos:end="215:72"><name pos:start="213:9" pos:end="213:27"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:19">vps_list</name><index pos:start="213:20" pos:end="213:27">[<expr pos:start="213:21" pos:end="213:26"><name pos:start="213:21" pos:end="213:26">vps_id</name></expr>]</index></name> <operator pos:start="213:29" pos:end="213:30">&amp;&amp;</operator>

        <operator pos:start="215:9" pos:end="215:9">!</operator><call pos:start="215:10" pos:end="215:72"><name pos:start="215:10" pos:end="215:15">memcmp</name><argument_list pos:start="215:16" pos:end="215:72">(<argument pos:start="215:17" pos:end="215:41"><expr pos:start="215:17" pos:end="215:41"><name pos:start="215:17" pos:end="215:35"><name pos:start="215:17" pos:end="215:17">s</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:27">vps_list</name><index pos:start="215:28" pos:end="215:35">[<expr pos:start="215:29" pos:end="215:34"><name pos:start="215:29" pos:end="215:34">vps_id</name></expr>]</index></name><operator pos:start="215:36" pos:end="215:37">-&gt;</operator><name pos:start="215:38" pos:end="215:41">data</name></expr></argument>, <argument pos:start="215:44" pos:end="215:56"><expr pos:start="215:44" pos:end="215:56"><name pos:start="215:44" pos:end="215:56"><name pos:start="215:44" pos:end="215:50">vps_buf</name><operator pos:start="215:51" pos:end="215:52">-&gt;</operator><name pos:start="215:53" pos:end="215:56">data</name></name></expr></argument>, <argument pos:start="215:59" pos:end="215:71"><expr pos:start="215:59" pos:end="215:71"><name pos:start="215:59" pos:end="215:71"><name pos:start="215:59" pos:end="215:65">vps_buf</name><operator pos:start="215:66" pos:end="215:67">-&gt;</operator><name pos:start="215:68" pos:end="215:71">size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="215:75" pos:end="219:5">{<block_content pos:start="217:9" pos:end="217:34">

        <expr_stmt pos:start="217:9" pos:end="217:34"><expr pos:start="217:9" pos:end="217:33"><call pos:start="217:9" pos:end="217:33"><name pos:start="217:9" pos:end="217:23">av_buffer_unref</name><argument_list pos:start="217:24" pos:end="217:33">(<argument pos:start="217:25" pos:end="217:32"><expr pos:start="217:25" pos:end="217:32"><operator pos:start="217:25" pos:end="217:25">&amp;</operator><name pos:start="217:26" pos:end="217:32">vps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="219:7" pos:end="225:5">else <block pos:start="219:12" pos:end="225:5">{<block_content pos:start="221:9" pos:end="223:38">

        <expr_stmt pos:start="221:9" pos:end="221:30"><expr pos:start="221:9" pos:end="221:29"><call pos:start="221:9" pos:end="221:29"><name pos:start="221:9" pos:end="221:18">remove_vps</name><argument_list pos:start="221:19" pos:end="221:29">(<argument pos:start="221:20" pos:end="221:20"><expr pos:start="221:20" pos:end="221:20"><name pos:start="221:20" pos:end="221:20">s</name></expr></argument>, <argument pos:start="221:23" pos:end="221:28"><expr pos:start="221:23" pos:end="221:28"><name pos:start="221:23" pos:end="221:28">vps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:38"><expr pos:start="223:9" pos:end="223:37"><name pos:start="223:9" pos:end="223:27"><name pos:start="223:9" pos:end="223:9">s</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:19">vps_list</name><index pos:start="223:20" pos:end="223:27">[<expr pos:start="223:21" pos:end="223:26"><name pos:start="223:21" pos:end="223:26">vps_id</name></expr>]</index></name> <operator pos:start="223:29" pos:end="223:29">=</operator> <name pos:start="223:31" pos:end="223:37">vps_buf</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="229:5" pos:end="229:13">return <expr pos:start="229:12" pos:end="229:12"><literal type="number" pos:start="229:12" pos:end="229:12">0</literal></expr>;</return>



<label pos:start="233:1" pos:end="233:4"><name pos:start="233:1" pos:end="233:3">err</name>:</label>

    <expr_stmt pos:start="235:5" pos:end="235:30"><expr pos:start="235:5" pos:end="235:29"><call pos:start="235:5" pos:end="235:29"><name pos:start="235:5" pos:end="235:19">av_buffer_unref</name><argument_list pos:start="235:20" pos:end="235:29">(<argument pos:start="235:21" pos:end="235:28"><expr pos:start="235:21" pos:end="235:28"><operator pos:start="235:21" pos:end="235:21">&amp;</operator><name pos:start="235:22" pos:end="235:28">vps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="237:5" pos:end="237:31">return <expr pos:start="237:12" pos:end="237:30"><name pos:start="237:12" pos:end="237:30">AVERROR_INVALIDDATA</name></expr>;</return>

</block_content>}</block></function>
</unit>
