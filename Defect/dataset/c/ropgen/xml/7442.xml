<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7442.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:34">nbd_receive_request</name><parameter_list pos:start="1:35" pos:end="1:72">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:45">QIOChannel</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ioc</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:71"><decl pos:start="1:53" pos:end="1:71"><type pos:start="1:53" pos:end="1:71"><name pos:start="1:53" pos:end="1:62">NBDRequest</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:71">request</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:33"><name pos:start="5:13" pos:end="5:15">buf</name><index pos:start="5:16" pos:end="5:33">[<expr pos:start="5:17" pos:end="5:32"><name pos:start="5:17" pos:end="5:32">NBD_REQUEST_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">magic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:15">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:48"><name pos:start="13:11" pos:end="13:19">read_sync</name><argument_list pos:start="13:20" pos:end="13:48">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">ioc</name></expr></argument>, <argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">buf</name></expr></argument>, <argument pos:start="13:31" pos:end="13:41"><expr pos:start="13:31" pos:end="13:41"><sizeof pos:start="13:31" pos:end="13:41">sizeof<argument_list pos:start="13:37" pos:end="13:41">(<argument pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><name pos:start="13:38" pos:end="13:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="13:44" pos:end="13:47"><expr pos:start="13:44" pos:end="13:47"><name pos:start="13:44" pos:end="13:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="37:7">/* Request

       [ 0 ..  3]   magic   (NBD_REQUEST_MAGIC)

       [ 4 ..  5]   flags   (NBD_CMD_FLAG_FUA, ...)

       [ 6 ..  7]   type    (NBD_CMD_READ, ...)

       [ 8 .. 15]   handle

       [16 .. 23]   from

       [24 .. 27]   len

     */</comment>



    <expr_stmt pos:start="41:5" pos:end="41:26"><expr pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:9">magic</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:20">ldl_be_p</name><argument_list pos:start="41:21" pos:end="41:25">(<argument pos:start="41:22" pos:end="41:24"><expr pos:start="41:22" pos:end="41:24"><name pos:start="41:22" pos:end="41:24">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:11">request</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:18">flags</name></name>  <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:40"><name pos:start="43:23" pos:end="43:31">lduw_be_p</name><argument_list pos:start="43:32" pos:end="43:40">(<argument pos:start="43:33" pos:end="43:39"><expr pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:35">buf</name> <operator pos:start="43:37" pos:end="43:37">+</operator> <literal type="number" pos:start="43:39" pos:end="43:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:11">request</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">type</name></name>   <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:40"><name pos:start="45:23" pos:end="45:31">lduw_be_p</name><argument_list pos:start="45:32" pos:end="45:40">(<argument pos:start="45:33" pos:end="45:39"><expr pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:35">buf</name> <operator pos:start="45:37" pos:end="45:37">+</operator> <literal type="number" pos:start="45:39" pos:end="45:39">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:11">request</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:19">handle</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <call pos:start="47:23" pos:end="47:39"><name pos:start="47:23" pos:end="47:30">ldq_be_p</name><argument_list pos:start="47:31" pos:end="47:39">(<argument pos:start="47:32" pos:end="47:38"><expr pos:start="47:32" pos:end="47:38"><name pos:start="47:32" pos:end="47:34">buf</name> <operator pos:start="47:36" pos:end="47:36">+</operator> <literal type="number" pos:start="47:38" pos:end="47:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:11">request</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:17">from</name></name>   <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="49:40"><name pos:start="49:23" pos:end="49:30">ldq_be_p</name><argument_list pos:start="49:31" pos:end="49:40">(<argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:34">buf</name> <operator pos:start="49:36" pos:end="49:36">+</operator> <literal type="number" pos:start="49:38" pos:end="49:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:41"><expr pos:start="51:5" pos:end="51:40"><name pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:11">request</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:16">len</name></name>    <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:40"><name pos:start="51:23" pos:end="51:30">ldl_be_p</name><argument_list pos:start="51:31" pos:end="51:40">(<argument pos:start="51:32" pos:end="51:39"><expr pos:start="51:32" pos:end="51:39"><name pos:start="51:32" pos:end="51:34">buf</name> <operator pos:start="51:36" pos:end="51:36">+</operator> <literal type="number" pos:start="51:38" pos:end="51:39">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="59:77"><expr pos:start="55:5" pos:end="59:76"><call pos:start="55:5" pos:end="59:76"><name pos:start="55:5" pos:end="55:9">TRACE</name><argument_list pos:start="55:10" pos:end="59:76">(<argument pos:start="55:11" pos:end="57:74"><expr pos:start="55:11" pos:end="57:74"><literal type="string" pos:start="55:11" pos:end="55:38">"Got request: { magic = 0x%"</literal> <name pos:start="55:40" pos:end="55:45">PRIx32</name> <literal type="string" pos:start="55:47" pos:end="55:60">", .flags = %"</literal> <name pos:start="55:62" pos:end="55:67">PRIx16</name>

          <literal type="string" pos:start="57:11" pos:end="57:23">", .type = %"</literal> <name pos:start="57:25" pos:end="57:30">PRIx16</name> <literal type="string" pos:start="57:32" pos:end="57:43">", from = %"</literal> <name pos:start="57:45" pos:end="57:50">PRIu64</name> <literal type="string" pos:start="57:52" pos:end="57:62">", len = %"</literal> <name pos:start="57:64" pos:end="57:69">PRIu32</name> <literal type="string" pos:start="57:71" pos:end="57:74">" }"</literal></expr></argument>,

          <argument pos:start="59:11" pos:end="59:15"><expr pos:start="59:11" pos:end="59:15"><name pos:start="59:11" pos:end="59:15">magic</name></expr></argument>, <argument pos:start="59:18" pos:end="59:31"><expr pos:start="59:18" pos:end="59:31"><name pos:start="59:18" pos:end="59:31"><name pos:start="59:18" pos:end="59:24">request</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:31">flags</name></name></expr></argument>, <argument pos:start="59:34" pos:end="59:46"><expr pos:start="59:34" pos:end="59:46"><name pos:start="59:34" pos:end="59:46"><name pos:start="59:34" pos:end="59:40">request</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:46">type</name></name></expr></argument>, <argument pos:start="59:49" pos:end="59:61"><expr pos:start="59:49" pos:end="59:61"><name pos:start="59:49" pos:end="59:61"><name pos:start="59:49" pos:end="59:55">request</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:61">from</name></name></expr></argument>, <argument pos:start="59:64" pos:end="59:75"><expr pos:start="59:64" pos:end="59:75"><name pos:start="59:64" pos:end="59:75"><name pos:start="59:64" pos:end="59:70">request</name><operator pos:start="59:71" pos:end="59:72">-&gt;</operator><name pos:start="59:73" pos:end="59:75">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:35">(<expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:13">magic</name> <operator pos:start="63:15" pos:end="63:16">!=</operator> <name pos:start="63:18" pos:end="63:34">NBD_REQUEST_MAGIC</name></expr>)</condition> <block pos:start="63:37" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:23">

        <expr_stmt pos:start="65:9" pos:end="65:56"><expr pos:start="65:9" pos:end="65:55"><call pos:start="65:9" pos:end="65:55"><name pos:start="65:9" pos:end="65:11">LOG</name><argument_list pos:start="65:12" pos:end="65:55">(<argument pos:start="65:13" pos:end="65:47"><expr pos:start="65:13" pos:end="65:47"><literal type="string" pos:start="65:13" pos:end="65:36">"invalid magic (got 0x%"</literal> <name pos:start="65:38" pos:end="65:43">PRIx32</name> <literal type="string" pos:start="65:45" pos:end="65:47">")"</literal></expr></argument>, <argument pos:start="65:50" pos:end="65:54"><expr pos:start="65:50" pos:end="65:54"><name pos:start="65:50" pos:end="65:54">magic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:23">return <expr pos:start="67:16" pos:end="67:22"><operator pos:start="67:16" pos:end="67:16">-</operator><name pos:start="67:17" pos:end="67:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
